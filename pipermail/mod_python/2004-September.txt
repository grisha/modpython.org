From nferrier at tapsellferrier.co.uk  Wed Sep  1 00:50:21 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Tue Aug 31 19:50:22 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41350AFB.4050201@earthlink.net>
References: <41350AFB.4050201@earthlink.net>
Message-ID: <87isayyih1.fsf@tapsellferrier.co.uk>

Chris Curvey <ccurvey@earthlink.net> writes:

> There are a lot of different application frameworks that are popping up 
> that use mod_python.  That's a good thing!  Would anyone be interested 
> in having a "bake-off" to show the capabilities of each framework?  I'm 
> thinking that if we could come up with an easy but non-trivial 
> application, various people could implement it using their favorite 
> framework.  The results would not only be a nice comparison of different 
> frameworks, but would provide some nice examples for newbies.

Yes. I'd like to implement without a framework. To show how silly
frameworks are   /8->

I'd suggest something with a database back end.



Nic
From davidf at sjsoft.com  Wed Sep  1 09:06:51 2004
From: davidf at sjsoft.com (David Fraser)
Date: Wed Sep  1 02:06:56 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <20040901033829.GA8614@tummy.com>
References: <41350AFB.4050201@earthlink.net> <20040901033829.GA8614@tummy.com>
Message-ID: <413566FB.3010709@sjsoft.com>

Sean Reifschneider wrote:

>On Tue, Aug 31, 2004 at 07:34:19PM -0400, Chris Curvey wrote:
>  
>
>>in having a "bake-off" to show the capabilities of each framework?  I'm 
>>thinking that if we could come up with an easy but non-trivial 
>>    
>>
>
>They've already got plans for such a thing in one of the SIGs, I don't
>recall what SIG it was, but I wouldn't expect it'd be too hard to find.
>They were proposing a webmail app.
>
>Sean
>  
>
It might be the Web-SIG, and the blog might be this:
http://pyre.third-bit.com/pyweb/index.html

David
From nferrier at tapsellferrier.co.uk  Wed Sep  1 09:35:57 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Wed Sep  1 04:35:58 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <656b799f0408312047165979f9@mail.gmail.com>
References: <41350AFB.4050201@earthlink.net>
	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
Message-ID: <87acwaxua5.fsf@tapsellferrier.co.uk>

steven a <iradik@gmail.com> writes:

> many frameworks are meant to separate programming logic and syntax
> from non-programmer web designers.  what good would a bake-off do in
> these cases?

A bake-off would showcase logical separation of all the different
patterns.

It wouldn't do anything more than that... but it would be a useful
presentation of all the ways you can build webapps on mod_python. That
can only be a good thing.

I hate 'frameworks' but lots of other people don't. I want to show
case my way of doing things so other people who hate frameworks can
see other ways of doing it.

People who hate my way of doing things might like one of the
frameworks.

In short, the more examples the better.



Nic
From davidf at sjsoft.com  Wed Sep  1 11:53:04 2004
From: davidf at sjsoft.com (David Fraser)
Date: Wed Sep  1 04:53:10 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <656b799f0408312047165979f9@mail.gmail.com>
References: <41350AFB.4050201@earthlink.net>	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
Message-ID: <41358DF0.6090906@sjsoft.com>

steven a wrote:

>many frameworks are meant to separate programming logic and syntax
>from non-programmer web designers.  what good would a bake-off do in
>these cases?
>  
>
Some but not all. The key issue here is lots of the frameworks have 
different purposes.
Some don't help web designers at all.
So maybe a good idea would be to have say 3 different target 
applications suited to different kinds of frameworks

>though i agree most frameworks suck; but not really, programming is
>just so emotional these days.
>
>steven alyari
>
>On 01 Sep 2004 00:51:22 +0100, Nic Ferrier
><nferrier@tapsellferrier.co.uk> wrote:
>  
>
>>Chris Curvey <ccurvey@earthlink.net> writes:
>>
>>    
>>
>>>There are a lot of different application frameworks that are popping up
>>>that use mod_python.  That's a good thing!  Would anyone be interested
>>>in having a "bake-off" to show the capabilities of each framework?  I'm
>>>thinking that if we could come up with an easy but non-trivial
>>>application, various people could implement it using their favorite
>>>framework.  The results would not only be a nice comparison of different
>>>frameworks, but would provide some nice examples for newbies.
>>>      
>>>
>>Yes. I'd like to implement without a framework. To show how silly
>>frameworks are   /8->
>>
>>I'd suggest something with a database back end.
>>
>>
>>Nic
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>    
>>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>

From nferrier at tapsellferrier.co.uk  Wed Sep  1 10:51:49 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Wed Sep  1 05:51:50 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41358DF0.6090906@sjsoft.com>
References: <41350AFB.4050201@earthlink.net>
	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
	<41358DF0.6090906@sjsoft.com>
Message-ID: <871xhmxqno.fsf@tapsellferrier.co.uk>

David Fraser <davidf@sjsoft.com> writes:

> steven a wrote:
> 
> >many frameworks are meant to separate programming logic and syntax
> >from non-programmer web designers.  what good would a bake-off do in
> >these cases?
> >  
> >
> Some but not all. The key issue here is lots of the frameworks have 
> different purposes.
> Some don't help web designers at all.
> So maybe a good idea would be to have say 3 different target 
> applications suited to different kinds of frameworks

I agree. I think that a significant portion of the applications should
be some sort of database access though.

The majority of Java webapps (and I think we ought to be thinking
about competing with Java webapps) are database driven things (maybe
via EJBs) either e-commerce or subscription revenue models.

If we could show several nice alternatives to Struts and JSF then I
think we'd be doing a valuable service.


Note : I don't think the other webapp mentioned is suitable if it's a
webmail tool. Webmail tools aren't common development targets.



Nic
From list at joreybump.com  Wed Sep  1 10:15:14 2004
From: list at joreybump.com (Jorey Bump)
Date: Wed Sep  1 09:15:21 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <871xhmxqno.fsf@tapsellferrier.co.uk>
References: <41350AFB.4050201@earthlink.net>	<87isayyih1.fsf@tapsellferrier.co.uk>	<656b799f0408312047165979f9@mail.gmail.com>	<41358DF0.6090906@sjsoft.com>
	<871xhmxqno.fsf@tapsellferrier.co.uk>
Message-ID: <4135CB62.5070800@joreybump.com>

Nic Ferrier wrote:

> The majority of Java webapps (and I think we ought to be thinking
> about competing with Java webapps) are database driven things (maybe
> via EJBs) either e-commerce or subscription revenue models.
> 
> If we could show several nice alternatives to Struts and JSF then I
> think we'd be doing a valuable service.

I think the ICFP Programming Contest does a good job of promoting 
functional languages without degrading into a religious war. It's 
certainly worth looking at for help in developing guidelines:

  http://www.google.com/search?q=ICFP+Programming+Contest

The contest is more concerned with speed and power, but it has an 
interesting "lightning round" where submissions received within 24 hours 
compete only with each other, to judge a language's suitability for 
rapid prototyping.

It's the ability to develop webapps quickly and easily maintain them 
that attracts me to mod_python (I don't use frameworks, either).


From vmanera at manord.com  Wed Sep  1 17:42:38 2004
From: vmanera at manord.com (Manera, Villiam)
Date: Wed Sep  1 10:48:20 2004
Subject: [mod_python] servlet form against publisher
Message-ID: <52DC70C1C1575C418CB033523A29CF1401A769E6@exchange2000.manord.com>

I'm moving from publisher to servlet, because servlet are wonderful,<?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" />

but I'm get used at the publischer way to retrieve fields from a from.

 

Difference in retrieve fields from Form between publisher and servlet:

 

In publischer : req.form = util.FieldStorage(req, keep_blank_values=1)

In servlet : self.form = util.FieldStorage(self.req)       # the default for keep_blank_values is 0

 

So in servlet the fields not filled are not inserted in  self.form.list

 

Why this choice??

 

For example:

form with 2 fields: F1 and F2 

if I put 1 in F1 end 2 in F2 

and I would save automatically in self.session F1 and F2

after the submit F1= 1 and F2= 2

 

If I repeat the submit with F1=1 and F2=None, 

after the new submit still F1=1 and F2=2

 

because F2 isn't in the list and the last saved F2 in self.session is retrieved.

 

Is possible to put a class variable in servlet  for customize this choice? 

Villiam Manera 
Dirett.  Sistema Informativo 

Manifatture del Nord srl 
via Mazzacurati 6

42100 Reggio Emilia RE 
ITALY 

Tel. +39 0522 358200 
Fax +39 0522 268700 
email : vmanera@manord.com 
www.pennyblack.com 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040901/f6428cf8/attachment-0001.html
From neel at mediapulse.com  Wed Sep  1 12:24:09 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Wed Sep  1 11:23:53 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <20040901033829.GA8614@tummy.com>
References: <41350AFB.4050201@earthlink.net> <20040901033829.GA8614@tummy.com>
Message-ID: <1094052249.15465.43.camel@mike.mediapulse.com>

On Tue, 2004-08-31 at 23:38, Sean Reifschneider wrote:
> On Tue, Aug 31, 2004 at 07:34:19PM -0400, Chris Curvey wrote:
> >in having a "bake-off" to show the capabilities of each framework?  I'm 
> >thinking that if we could come up with an easy but non-trivial 
> 
> They've already got plans for such a thing in one of the SIGs, I don't
> recall what SIG it was, but I wouldn't expect it'd be too hard to find.
> They were proposing a webmail app.
> 
> Sean

The Web-SIG has a Wiki up that might be what you are looking for.

http://www.python.org/cgi-bin/moinmoin/WebProgramming

Mike

From jpbarrette at savoirfairelinux.net  Wed Sep  1 17:07:09 2004
From: jpbarrette at savoirfairelinux.net (Jean-Philippe Barrette-LaPierre)
Date: Wed Sep  1 16:08:38 2004
Subject: [mod_python] Objects instead of function for forms
Message-ID: <200409011607.09131.jpbarrette@savoirfairelinux.net>

I checked on the publisher module to see if there's a way to set objects to 
handle requests instead of functions and I didn't really understood how it's 
supposed to work.

I wanted to have something like this:


----------- form.py -----------
class Action:
   def __init__(self):
      """Special handling get there"""

   def __str__(self):
      return "This is an action"


class MyAction(Action):
   def __init__(self):
      Action.__init__(self)

   def __str__(self):
       return "This is my action"
----------- form.py -----------


There's the HTML form:

--------------
<form action="form/MyAction" method="POST">
????????<input type="text" name="customer[test]"/>
????????<input type="submit"/>
</form>
-------------


The only thing It outputs is the name of module and class:

form.MyAction
	

Does mod_python do that in purpose, or can I submit some code that will handle 
this in the publisher?

---
Jean-Philippe Barrette-LaPierre
Maintener of cURLpp

From jpbarrette at savoirfairelinux.net  Wed Sep  1 17:09:29 2004
From: jpbarrette at savoirfairelinux.net (Jean-Philippe Barrette-LaPierre)
Date: Wed Sep  1 16:11:07 2004
Subject: [mod_python] HTML form arrays
Message-ID: <200409011609.29682.jpbarrette@savoirfairelinux.net>

I already sent the question but nobody answered, so I'm sending this question 
again. 

if I have a form like this:


<form action="form/test" method="POST">
	<input type="text" name="customer[test]"/>
	<input type="submit"/>
</form>

and if I have a form.py file like this:

---------------------------------
def test(customer, **kargs):
	print customer
----------------------------------

if I submit the form I obtain this:


----------------------------------------------------------------------
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in 
HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 136, 
in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361, in 
apply_fs_data
    return object(**args)

TypeError: test() takes exactly 1 non-keyword argument (0 given)
----------------------------------------------------------------------


If I remove the customer argument, I can see that kargs is this:

{'customer[test]': 'myValue', 'req': <mp_request object at 0x4075fa18>}

We can see that form arrays are not treated as they should. I wrote a function 
that will transform those arguments:

{'customer[test]' : 'myValue1',
  'customer[test2][1] : 'myValue2',
  'customer[test3][1][3] : 'myValue3',
  'test' : 'myValue4'}

into:

{'customer' : {'test' : 'myValue1', 
                       'test2' : {'1' : 'myValue2'}, 
                       'test3' : {'1' : {'3' : 'myValue3'} } },
  'test' : 'myValue4'}

Then those values will be almost ready to be passed to the apply_fs_data 
function and the form function will receive correctly its arguments.

What do you think of this?

--
Jean-Philippe Barrette-LaPierre
Maintener of cURLpp




-- 
Jean-Philippe Barrette-LaPierre
Maintener of curlpp
From ross at karchner.com  Wed Sep  1 17:30:33 2004
From: ross at karchner.com (Ross M Karchner)
Date: Wed Sep  1 16:30:37 2004
Subject: [mod_python] Objects instead of function for forms
In-Reply-To: <200409011607.09131.jpbarrette@savoirfairelinux.net>
References: <200409011607.09131.jpbarrette@savoirfairelinux.net>
Message-ID: <41363169.3020506@karchner.com>

I'm pretty sure you want to reference an object, and not a class?

Jean-Philippe Barrette-LaPierre wrote:

>I checked on the publisher module to see if there's a way to set objects to 
>handle requests instead of functions and I didn't really understood how it's 
>supposed to work.
>
>I wanted to have something like this:
>
>
>----------- form.py -----------
>class Action:
>   def __init__(self):
>      """Special handling get there"""
>
>   def __str__(self):
>      return "This is an action"
>
>
>class MyAction(Action):
>   def __init__(self):
>      Action.__init__(self)
>
>   def __str__(self):
>       return "This is my action"
>----------- form.py -----------
>
>
>There's the HTML form:
>
>--------------
><form action="form/MyAction" method="POST">
>        <input type="text" name="customer[test]"/>
>        <input type="submit"/>
></form>
>-------------
>
>
>The only thing It outputs is the name of module and class:
>
>form.MyAction
>	
>
>Does mod_python do that in purpose, or can I submit some code that will handle 
>this in the publisher?
>
>---
>Jean-Philippe Barrette-LaPierre
>Maintener of cURLpp
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>

From iradik at gmail.com  Wed Sep  1 18:26:09 2004
From: iradik at gmail.com (steven a)
Date: Wed Sep  1 19:26:15 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <656b799f040901154931f66805@mail.gmail.com>
References: <41350AFB.4050201@earthlink.net>	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
	<41358DF0.6090906@sjsoft.com>
	<656b799f040901154931f66805@mail.gmail.com>
Message-ID: <656b799f0409011626693674a1@mail.gmail.com>

unless some web designers who don't know programming got involved; i
don't see how we would see any benefit. ?one the other hand if they
need get involved in the bake-off then that could be interesting.

otherwise it is just programmers guessing how web designers will use
the framework.

are there any web desigers on the mod_python mailing list?

heh

if so, we should start an open source web design group, and this
should be the initiation round.

From jpbarrette at savoirfairelinux.net  Wed Sep  1 21:15:12 2004
From: jpbarrette at savoirfairelinux.net (jpbarrette@savoirfairelinux.net)
Date: Wed Sep  1 21:13:26 2004
Subject: [mod_python] Objects instead of function for forms
In-Reply-To: <41363169.3020506@karchner.com>
References: <200409011607.09131.jpbarrette@savoirfairelinux.net>
	<41363169.3020506@karchner.com>
Message-ID: <20040902011338.M58628@mail.savoirfairelinux.net>

I mean that the publisher should instantiate a object of class MyAction  
with all arguments in his constructor and it will get his printable string 
by calling the str() function on the instance. 
 
-- 
Open WebMail Project (http://openwebmail.org) 
 
 
---------- Original Message ----------- 
From: Ross M Karchner <ross@karchner.com> 
To: mod_python user mailing list <mod_python@modpython.org> 
Sent: Wed, 01 Sep 2004 16:30:33 -0400 
Subject: Re: [mod_python] Objects instead of function for forms 
 
> I'm pretty sure you want to reference an object, and not a class? 
>  
> Jean-Philippe Barrette-LaPierre wrote: 
>  
> >I checked on the publisher module to see if there's a way to set objects 
to  
> >handle requests instead of functions and I didn't really understood how 
it's  
> >supposed to work. 
> > 
> >I wanted to have something like this: 
> > 
> > 
> >----------- form.py ----------- 
> >class Action: 
> >   def __init__(self): 
> >      """Special handling get there""" 
> > 
> >   def __str__(self): 
> >      return "This is an action" 
> > 
> > 
> >class MyAction(Action): 
> >   def __init__(self): 
> >      Action.__init__(self) 
> > 
> >   def __str__(self): 
> >       return "This is my action" 
> >----------- form.py ----------- 
> > 
> > 
> >There's the HTML form: 
> > 
> >-------------- 
> ><form action="form/MyAction" method="POST"> 
> >        <input type="text" name="customer[test]"/> 
> >        <input type="submit"/> 
> ></form> 
> >------------- 
> > 
> > 
> >The only thing It outputs is the name of module and class: 
> > 
> >form.MyAction 
> >	 
> > 
> >Does mod_python do that in purpose, or can I submit some code that will 
handle  
> >this in the publisher? 
> > 
> >--- 
> >Jean-Philippe Barrette-LaPierre 
> >Maintener of cURLpp 
> > 
> >_______________________________________________ 
> >Mod_python mailing list 
> >Mod_python@modpython.org 
> >http://mailman.modpython.org/mailman/listinfo/mod_python 
> >   
> > 
>  
> _______________________________________________ 
> Mod_python mailing list 
> Mod_python@modpython.org 
> http://mailman.modpython.org/mailman/listinfo/mod_python 
------- End of Original Message ------- 
 
From rob at contrastsweb.com  Wed Sep  1 22:37:56 2004
From: rob at contrastsweb.com (Rob Ballou)
Date: Wed Sep  1 22:38:01 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <656b799f0409011626693674a1@mail.gmail.com>
References: <41350AFB.4050201@earthlink.net>	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
	<41358DF0.6090906@sjsoft.com>
	<656b799f040901154931f66805@mail.gmail.com>
	<656b799f0409011626693674a1@mail.gmail.com>
Message-ID: <1919C3E7-FC89-11D8-A637-000A959D9E94@contrastsweb.com>

I would be interested in seeing the development of a web application 
per this discussion.

I'm a "technology developer" (programmer) for a web development firm 
and am investigating mod_python as a development solution. I have not 
yet used it for a web application. Coming from web application projects 
that are written in other languages that are definitely not as capable 
as Python (and that are growing in complexity), I would be interested 
to see how people use the features of mod_python, Python itself, and 
any frameworks.

It would be interesting to see how other common web app tasks are 
accomplished (file uploads, adding user content to a database, 
retrieving data from the database, etc.)

Just my two cents...

Rob

On Sep 1, 2004, at 6:26 PM, steven a wrote:

> unless some web designers who don't know programming got involved; i
> don't see how we would see any benefit. ?one the other hand if they
> need get involved in the bake-off then that could be interesting.
>
> otherwise it is just programmers guessing how web designers will use
> the framework.
>
> are there any web desigers on the mod_python mailing list?
>
> heh
>
> if so, we should start an open source web design group, and this
> should be the initiation round.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From davidf at sjsoft.com  Thu Sep  2 08:03:37 2004
From: davidf at sjsoft.com (David Fraser)
Date: Thu Sep  2 01:03:44 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <656b799f040901154931f66805@mail.gmail.com>
References: <41350AFB.4050201@earthlink.net>	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
	<41358DF0.6090906@sjsoft.com>
	<656b799f040901154931f66805@mail.gmail.com>
Message-ID: <4136A9A9.2040109@sjsoft.com>

steven a wrote:

>unless some web designers who don't know programming got involved; i
>don't see how we would see any benefit.  one the other hand if they
>need get involved in the bake-off then that could be interesting.
>
>otherwise it is just programmers guessing how web designers will use
>the framework.
>
>i mean why should a programmer by himself  or herself use a framework?
>
>steven
>  
>
Hi Steven

I'm a programmer and I use a framework called jToolkit 
(jtoolkit.sourceforge.net) the whole time.
It doesn't have any facilities for web designers, it has facilities to 
aid creation of data-based web applications.
Different frameworks have different purposes

Regards
David

>On Wed, 01 Sep 2004 10:53:04 +0200, David Fraser <davidf@sjsoft.com> wrote:
>  
>
>>steven a wrote:
>>
>>    
>>
>>>many frameworks are meant to separate programming logic and syntax
>>>      
>>>
>>>from non-programmer web designers.  what good would a bake-off do in
>>    
>>
>>>these cases?
>>>
>>>
>>>      
>>>
>>Some but not all. The key issue here is lots of the frameworks have
>>different purposes.
>>Some don't help web designers at all.
>>So maybe a good idea would be to have say 3 different target
>>applications suited to different kinds of frameworks
>>
>>
>>
>>    
>>
>>>though i agree most frameworks suck; but not really, programming is
>>>just so emotional these days.
>>>
>>>steven alyari
>>>
>>>On 01 Sep 2004 00:51:22 +0100, Nic Ferrier
>>><nferrier@tapsellferrier.co.uk> wrote:
>>>
>>>
>>>      
>>>
>>>>Chris Curvey <ccurvey@earthlink.net> writes:
>>>>
>>>>
>>>>
>>>>        
>>>>
>>>>>There are a lot of different application frameworks that are popping up
>>>>>that use mod_python.  That's a good thing!  Would anyone be interested
>>>>>in having a "bake-off" to show the capabilities of each framework?  I'm
>>>>>thinking that if we could come up with an easy but non-trivial
>>>>>application, various people could implement it using their favorite
>>>>>framework.  The results would not only be a nice comparison of different
>>>>>frameworks, but would provide some nice examples for newbies.
>>>>>
>>>>>
>>>>>          
>>>>>
>>>>Yes. I'd like to implement without a framework. To show how silly
>>>>frameworks are   /8->
>>>>
>>>>I'd suggest something with a database back end.
>>>>
>>>>
>>>>Nic
>>>>
>>>>
>>>>_______________________________________________
>>>>Mod_python mailing list
>>>>Mod_python@modpython.org
>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>>        
>>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>>      
>>>
>>    
>>
>
>  
>

From iradik at gmail.com  Thu Sep  2 00:38:49 2004
From: iradik at gmail.com (steven a)
Date: Thu Sep  2 01:38:55 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4136A9A9.2040109@sjsoft.com>
References: <41350AFB.4050201@earthlink.net>	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
	<41358DF0.6090906@sjsoft.com>
	<656b799f040901154931f66805@mail.gmail.com>
	<4136A9A9.2040109@sjsoft.com>
Message-ID: <656b799f04090122381b9d9e1e@mail.gmail.com>

hmm, this post is an extension of my other post, which stated that
many of the python frameworks are designed with web designers in mind.
 that is to say to seperate programming logic from web designers. 
that is the stated goal of many python web frameworks.  so how will
that fit in to this proposed bakeoff without the involvement of web
designers?

i didnt mean to make any sweeping generalizations.  i hope i've
clarified the context i was speaking in.


On Thu, 02 Sep 2004 07:03:37 +0200, David Fraser <davidf@sjsoft.com> wrote:
> steven a wrote:
> 
> >unless some web designers who don't know programming got involved; i
> >don't see how we would see any benefit.  one the other hand if they
> >need get involved in the bake-off then that could be interesting.
> >
> >otherwise it is just programmers guessing how web designers will use
> >the framework.
> >
> >i mean why should a programmer by himself  or herself use a framework?
> >
> >steven
> >
> >
> Hi Steven
> 
> I'm a programmer and I use a framework called jToolkit
> (jtoolkit.sourceforge.net) the whole time.
> It doesn't have any facilities for web designers, it has facilities to
> aid creation of data-based web applications.
> Different frameworks have different purposes
> 
> Regards
> David
> 
> 
> 
> >On Wed, 01 Sep 2004 10:53:04 +0200, David Fraser <davidf@sjsoft.com> wrote:
> >
> >
> >>steven a wrote:
> >>
> >>
> >>
> >>>many frameworks are meant to separate programming logic and syntax
> >>>
> >>>
> >>>from non-programmer web designers.  what good would a bake-off do in
> >>
> >>
> >>>these cases?
> >>>
> >>>
> >>>
> >>>
> >>Some but not all. The key issue here is lots of the frameworks have
> >>different purposes.
> >>Some don't help web designers at all.
> >>So maybe a good idea would be to have say 3 different target
> >>applications suited to different kinds of frameworks
> >>
> >>
> >>
> >>
> >>
> >>>though i agree most frameworks suck; but not really, programming is
> >>>just so emotional these days.
> >>>
> >>>steven alyari
> >>>
> >>>On 01 Sep 2004 00:51:22 +0100, Nic Ferrier
> >>><nferrier@tapsellferrier.co.uk> wrote:
> >>>
> >>>
> >>>
> >>>
> >>>>Chris Curvey <ccurvey@earthlink.net> writes:
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>>There are a lot of different application frameworks that are popping up
> >>>>>that use mod_python.  That's a good thing!  Would anyone be interested
> >>>>>in having a "bake-off" to show the capabilities of each framework?  I'm
> >>>>>thinking that if we could come up with an easy but non-trivial
> >>>>>application, various people could implement it using their favorite
> >>>>>framework.  The results would not only be a nice comparison of different
> >>>>>frameworks, but would provide some nice examples for newbies.
> >>>>>
> >>>>>
> >>>>>
> >>>>>
> >>>>Yes. I'd like to implement without a framework. To show how silly
> >>>>frameworks are   /8->
> >>>>
> >>>>I'd suggest something with a database back end.
> >>>>
> >>>>
> >>>>Nic
> >>>>
> >>>>
> >>>>_______________________________________________
> >>>>Mod_python mailing list
> >>>>Mod_python@modpython.org
> >>>>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>
> >>>_______________________________________________
> >>>Mod_python mailing list
> >>>Mod_python@modpython.org
> >>>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>
> >>>
> >>>
> >>>
> >>>
> >>
> >>
> >
> >
> >
> 
>
From jafo at tummy.com  Thu Sep  2 02:36:38 2004
From: jafo at tummy.com (Sean Reifschneider)
Date: Thu Sep  2 03:36:52 2004
Subject: Many more details on import weirdness (was: Re: [mod_python] Severe
	problems with importing still happening.)
In-Reply-To: <20040830104725.T72729@onyx.ispol.com>
References: <20040826170553.GD10606@tummy.com>
	<20040830104725.T72729@onyx.ispol.com>
Message-ID: <20040902073638.GA23404@tummy.com>

On Mon, Aug 30, 2004 at 10:52:32AM -0400, Gregory (Grisha) Trubetskoy wrote:
>I've skimmed over the two messages you referenced, and it wasn't very 
>apparent what the problem is mainly due to the complexity of the 
>attributes. I think if you want this resolved, you need to work on a clean 

Ok, I've finally been able to reproduce the problem in a simple example.
Here's what I did:

   Add the following to my httpd.conf:

      Listen *:8084

      #  for debugging
      MaxKeepAliveRequests 1
      MaxRequestsPerChild  1

      <VirtualHost *:8084>
         ServerName dev.example.com
         ServerAdmin webmaster@example.com
         DocumentRoot /home/httpd/modpythonpublishertest/py/

         PythonAutoReload On
         PythonDebug On

         <Directory /home/httpd/modpythonpublishertest/py/>
            AddHandler mod_python .py
            PythonHandler foo::handler
         </Directory>
      </VirtualHost>

   /home/httpd/modpythonpublishertest/py/foo.py:

      def handler(req):
         #from mod_python import util
         import mod_python
         from package import module
         module.function(req)
         req.write('Completed')
         return(mod_python.apache.OK)

   /home/httpd/modpythonpublishertest/py/package/__init__.py:

      import module

   /home/httpd/modpythonpublishertest/py/package/module.py:

      import mod_python

      def function(request):
         mod_python.util.FieldStorage(request)

Now, restart Apache and access http://127.0.0.1:8084/foo.py  The
following is displayed:

   Mod_python error: "PythonHandler foo::handler"

   Traceback (most recent call last):

     File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
   299, in HandlerDispatch
       result = object(req)

     File "/home/httpd/modpythonpublishertest/py/foo.py", line 5, in
   handler
       module.function(req)

     File "/home/httpd/modpythonpublishertest/py/package/module.py", line
   4, in function
       mod_python.util.FieldStorage(request)

   AttributeError: 'module' object has no attribute 'util'

If you uncomment the line "#from mod_python import util" from foo.py and
reload the URL, it will display:

   Completed

Unfortunately, the patch which "Byron Ellacott <bje@apnic.net>" posted
about a couple of days ago I can confirm does *NOT* resolve this issue.
Though it definitely sounds like a similar issue.

It seems to me that the information I posted back in May of 2004 in:

   http://www.modpython.org/pipermail/mod_python/2004-May/015678.html

has some fairly important information, it's just that it means nothing
to me.  In particular:

   <module 'jotweb.jotwebutils' from
      '/usr/lib/python2.2/site-packages/jotweb/jotwebutils.py'>
   <module
      '/var/www/jotweb/www.tummy.jotweb.jotwebutils' from
      '/usr/lib/python2.2/site-packages/jotweb/jotwebutils.py'>

In other words, it seems to have a weird path in one of the modules.
Note that in this case, "/var/www/jotweb/www.tummy.com/html" was
probably my DocumentRoot.

Note that in my testing tonight, I tried augmenting
apache.py.import_module(), and it seems to only get called for "foo",
not for mod_pyhon, of course.  I added some logging of the above, and
they're both coming up as "module 'mod_python'".  However, if I take a
dir() of it, I see that if I leave the line commented I get:

   ['__all__', '__builtins__', '__doc__', '__file__', '__name__',
   '__path__', 'apache']

and if I uncomment it I get:

   ['__all__', '__builtins__', '__doc__', '__file__', '__name__',
   '__path__', 'apache', 'util']

I believe this is fairly close to what I've seen elsewhere.  This case I
can't really reproduce outside of mod_python, but others I could.  In
other words, it was my own code that was having this problem in the
past, but if I ran the same code outside of mod_python, it would run
fine.

That's about all I know.  It seems like some sort of interaction, where
something mod_python is doing is causing something weird to happen with
standard Python imports.

Sean
-- 
 Thieves broke into Scotland Yard yesterday and stole all the toilets.
 Detectives say they have nothing to go on.
Sean Reifschneider, Member of Technical Staff <jafo@tummy.com>
tummy.com, ltd. - Linux Consulting since 1995.  Qmail, Python, SysAdmin
From sascha at saschas-netz.de  Thu Sep  2 11:17:43 2004
From: sascha at saschas-netz.de (Sascha)
Date: Thu Sep  2 04:20:46 2004
Subject: [mod_python] Re: Problems loading .psp's
In-Reply-To: <20040824152745.GA13374@legolas.on.net.mk>
References: <cg2vqc$sks$1@sea.gmane.org>
	<20040824152745.GA13374@legolas.on.net.mk>
Message-ID: <ch6l4l$l71$1@sea.gmane.org>

THX Damjan,

it was the configuration in my Mandrake-Apache2-mod_python.
To work with pulisher and psp I inserted the publisher in the normal
<directory>-Tag and yust uncommented the <location>-Tag that comes with 
the urpmi of mod_python.

After piping the files to the handler everything is solved :-))

Thx again, Sascha

Damjan wrote:
>>So after 1 day of desaster and RTFM I now can use .psp and publisher on 
>>my public_html (yust not in one and the same folder :-))
> 
> 
> You can run them in the same folder.
> http://modpython.org/FAQ/faqw.py?req=show&file=faq01.002.htp
>  
> 
>>My problem is, that when I load my hello.psp file, my HELLO WORLD 
>>apears, but my konqueror keeps laoding and stops at 58%, then I get a 
>>timeout-message.
> 
> 
> What happens with firefox? Install LiveHTTP headers for firefox and see
> what happens.
> 

From ccurvey at earthlink.net  Thu Sep  2 09:46:33 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Thu Sep  2 08:32:34 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41350AFB.4050201@earthlink.net>
References: <41350AFB.4050201@earthlink.net>
Message-ID: <41371629.6040109@earthlink.net>

Thanks for all the feedback...

* Perhaps "framework" isn't the right word.  I'm not so much interested 
in Zope or Webware as I am in mod_python.publisher vs mod_python.servlet 
vs. PSE vs. Vampire.

* I think the inclusion of one or more web-designers would be a good 
thing, but I think we could get away without it.  (I think most of us 
are smart enough to realize when we're writing stuff that the designers 
won't use).

What I'd be hoping that the bake-off would provide would be at set of 
examples that give us the "feel" of using a particular [insert better 
word for "framework" here].

Any suggestions for an application?  I was going to use a "blackjack" 
card game, since that usually involves authorization, session 
management, and  persistence.  I'm open to other suggestions.


Chris Curvey wrote:

> Hi all,
>
> There are a lot of different application frameworks that are popping 
> up that use mod_python.  That's a good thing!  Would anyone be 
> interested in having a "bake-off" to show the capabilities of each 
> framework?  I'm thinking that if we could come up with an easy but 
> non-trivial application, various people could implement it using their 
> favorite framework.  The results would not only be a nice comparison 
> of different frameworks, but would provide some nice examples for 
> newbies.
>
> Thoughts?
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From neel at mediapulse.com  Thu Sep  2 10:00:12 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Sep  2 08:59:48 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <656b799f0409011626693674a1@mail.gmail.com>
References: <41350AFB.4050201@earthlink.net>
	<87isayyih1.fsf@tapsellferrier.co.uk>
	<656b799f0408312047165979f9@mail.gmail.com>
	<41358DF0.6090906@sjsoft.com>
	<656b799f040901154931f66805@mail.gmail.com>
	<656b799f0409011626693674a1@mail.gmail.com>
Message-ID: <1094130011.4727.13.camel@mike.mediapulse.com>

On Wed, 2004-09-01 at 19:26, steven a wrote:

> unless some web designers who don't know programming got involved; i
> don't see how we would see any benefit.  one the other hand if they
> need get involved in the bake-off then that could be interesting.
> 
> otherwise it is just programmers guessing how web designers will use
> the framework.
> 
> are there any web desigers on the mod_python mailing list?
> 


They are not on the list here, but we work with designers on every
site/app.  Our normal flow will have one guy design, one guy prototype
and one guy program.  We use Albatross as our framework, and in fact it
has been so successful that it has become a critical peice of our
development that we have choosen to maintain our own version of the
system, calling it SnakeSkin.  (as an aside we'll be making our version
open source here shortly, so I suppose there will be yet another
framework out there for everyone to complain about ;).

What has worked for us in Albatross/SnakeSkin is that everyone can work
on the site/app and not have to get someone else's help.  Designer's
have no trouble hitting the site in Dreamweaver and changing things
around, and we (the programmers) can get in with vi on our code and not
break the design.  It's also allowed us to develop some standardized
componets that we can take to any site/app and use as needed.  Also, an
unexpected perk, the designers have gained a better understanding of
programming and now apply more logic to the way the approach the
execution of the design in templates and macros (includes).  Also,
because python isn't all that scary of a language, some of them have
even gained a few python skills in the process.

Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040902/93e5f84c/attachment.html
From nferrier at tapsellferrier.co.uk  Thu Sep  2 14:51:26 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Thu Sep  2 09:51:27 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41371629.6040109@earthlink.net>
References: <41350AFB.4050201@earthlink.net> <41371629.6040109@earthlink.net>
Message-ID: <87isawvkwt.fsf@tapsellferrier.co.uk>

Chris Curvey <ccurvey@earthlink.net> writes:

> Any suggestions for an application?  I was going to use a "blackjack" 
> card game, since that usually involves authorization, session 
> management, and  persistence.  I'm open to other suggestions.

I think something with a business focus and a database back end would
be ideal. It really annoys me when I'm trying to learn something and
the application is something I can't really engage with (like a card
game or the pet store).

How about one of the following:

- a timesheet management system: create a time sheet, amend a
  timesheet, list timesheets, report total time.

- a project resource management system: create projects, create
  time and cost resources, map resources to projects, report on the
  results


Alternately, even though I hate it, how about pet store?


Nic
From nick at dd.revealed.net  Thu Sep  2 10:01:24 2004
From: nick at dd.revealed.net (Nick)
Date: Thu Sep  2 10:02:03 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <87isawvkwt.fsf@tapsellferrier.co.uk>
References: <41350AFB.4050201@earthlink.net> <41371629.6040109@earthlink.net>
	<87isawvkwt.fsf@tapsellferrier.co.uk>
Message-ID: <413727B4.2050508@dd.revealed.net>

Nic Ferrier wrote:

> I think something with a business focus and a database back end would
> be ideal. It really annoys me when I'm trying to learn something and
> the application is something I can't really engage with (like a card
> game or the pet store).

I agree; whatever it is should fit into the LAMP development model for a 
good comparison not only with other Python frameworks, but with other web 
application development environments such as JSP, PHP, ASP, etc.

> - a timesheet management system: create a time sheet, amend a
>   timesheet, list timesheets, report total time.

That seems reasonable because it's very finite, encompasses all the aspects 
of DB operations, and it's short enough to be completed in spare time rather 
than as some kind of full-blown, out of control system.

> - a project resource management system: create projects, create
>   time and cost resources, map resources to projects, report on the
>   results

A little long, requiring some specialized project management knowledge that 
could make or break the usefulness of the darned thing.  If you keep it 
simple, then everybody will be able to follow the applicaion flow and logic. 
  This seems too complex for that.

> Alternately, even though I hate it, how about pet store?

Ugh. God, no.

Nick
From grahamd at dscpl.com.au  Thu Sep  2 09:42:02 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  2 10:42:05 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <413727B4.2050508@dd.revealed.net>
Message-ID: <1094136116.47908@dscpl.com.au>

On Sep 02 09:01, Nick <nick@dd.revealed.net> wrote:
>
> Subject: Re: [mod_python] mod_python bake-off?
>
> Nic Ferrier wrote:
> 
> > I think something with a business focus and a database back end would
> > be ideal. It really annoys me when I'm trying to learn something and
> > the application is something I can't really engage with (like a card
> > game or the pet store).
> 
> I agree; whatever it is should fit into the LAMP development model for a 
> good comparison not only with other Python frameworks, but with other web 
> application development environments such as JSP, PHP, ASP, etc.
> 
> > - a timesheet management system: create a time sheet, amend a
> >   timesheet, list timesheets, report total time.
> 
> That seems reasonable because it's very finite, encompasses all the aspects 
> of DB operations, and it's short enough to be completed in spare time rather 
> than as some kind of full-blown, out of control system.

I'd also agree that that is probably a good candidate. I would not though place a
requirement for something like MySQL to be used, I would leave it up to the
individual to determine. That way someone could use a full relational database
backend, an object database such as ZODB, pickling into files or other file
formats stored as normal files within the file system.

What I believe is more important, whatever the candidate project may be, is that
a single initial set of mock up web pages be developed by someone who is good at
web design and that everyone use these as a starting point. In other words, the
final design of each implementation should look more or less the same to the user.
The only thing that should really change is the underlying implementation which
supports it. If the user facing interface is always the same, it would make it easier
for someone evaluating the different implementations to see how each differs.
If everyone were free to come up with totally different page designs and features,
would be much harder to compare.

Thus, start with raw HTML mock up pages which could be viewed statically with
some dummy data. PSP people could take that and convert them into PSP. The
mpservlet people could convert them to their way of doing things, similarly for
Albatross etc etc.

Someone evalulating it can then look at how a particular static HTML page gets
translated into a dynamic page in a particular implementation.

BTW, there may need to be two reference HTML designs. One for old style HTML
table driven approaches and one for CSS driven designs where HTML tables aren't
used for layout. This may be appropriate as different implementation methods
may be biased towards one or the other.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From nferrier at tapsellferrier.co.uk  Thu Sep  2 15:44:29 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Thu Sep  2 10:44:31 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <413727B4.2050508@dd.revealed.net>
References: <41350AFB.4050201@earthlink.net> <41371629.6040109@earthlink.net>
	<87isawvkwt.fsf@tapsellferrier.co.uk>
	<413727B4.2050508@dd.revealed.net>
Message-ID: <87656wviwh.fsf@tapsellferrier.co.uk>

Nick <nick@dd.revealed.net> writes:

> Nic Ferrier wrote:
> 
> > I think something with a business focus and a database back end would
> > be ideal. It really annoys me when I'm trying to learn something and
> > the application is something I can't really engage with (like a card
> > game or the pet store).
> 
> I agree; whatever it is should fit into the LAMP development model for a 
> good comparison not only with other Python frameworks, but with other web 
> application development environments such as JSP, PHP, ASP, etc.

Be carefull... you'll reveal the international conspiracy of people
called Nic[k]


Nic
From nick at dd.revealed.net  Thu Sep  2 10:59:17 2004
From: nick at dd.revealed.net (Nick)
Date: Thu Sep  2 10:59:27 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094136116.47908@dscpl.com.au>
References: <1094136116.47908@dscpl.com.au>
Message-ID: <41373545.6070705@dd.revealed.net>

Graham Dumpleton wrote:

> Thus, start with raw HTML mock up pages which could be viewed statically with
> some dummy data. PSP people could take that and convert them into PSP. The
> mpservlet people could convert them to their way of doing things, similarly for
> Albatross etc etc.

Now you're making it too easy! :-D  But seriously, that's a good idea.  I 
only wish I had that luxury in the real world.

As long as the HTML is clean and readable, I don't think it really matters 
whether you use an approach with table layout or using CSS.  Although most 
competent web designers these days use CSS.

Nick
From nav at bandersnatch.org  Thu Sep  2 12:25:36 2004
From: nav at bandersnatch.org (Nick Vargish)
Date: Thu Sep  2 11:25:34 2004
Subject: [mod_python] Cookie problem with Safari and IE, but not Mozilla
Message-ID: <1094138736.41373b7037a20@bandersnatch.org>

Hello,

I've been struggling with this for a couple of days, and I've tried
to google up a solution, but no luck. Hopefully someone on this list
can help me figure out what's going on.

I'm using cookies to manage user log-ins to a Subversion admin
system. It works fine under Mozilla (and Firefox, and Camino), but
fails with Internet Explorer and Safari. Unfortunately, a lot of
the users where I work use IE exclusively, so it's important for
me to find a fix for this problem.

I added some code to add the values of the cookies being returned
to the page generation logic, and the results are ... interesting,
to say the least. With Firefox, I see what expect and things work
well:

cookie "siteserver" = "ID=a0a61f06aac22a9ea146d4ba666ded94"
cookie "user" = "nvargish"

Under Safari, I get:

cookie "tutorialExamplesURL" =
""http://earth.datacenter.gpo.gov:8080/Tutorial/examples""
cookie "tutorialexamplesurl" =
""http://earth.datacenter.gpo.gov:8080/Tutorial/examples""

(There is no "tutorialexamplesurl" anywhere in my code. Also, no
siteserver ID in the response.)

Under IE, I see a "siteserver" cookie, but no "user" cookie
shows up.

Here's the cookie setting function I'm using:

def setusercookies(req):
    uc = Cookie.Cookie('user', req.user)
    uc.expires = time.time() + 600
    Cookie.add_cookie(req, uc)
    uc = Cookie.Cookie('wasin', 'yes')
    uc.expires = 0
    Cookie.add_cookie(req, uc)

This is the function that handles a login form:

def dologin(req):
    """logic for handling a login form submission."""
    if rmuser.validpassword(req.cgidata['uname'], req.cgidata['upass']):
        req.cmd = ''
        req.user = req.cgidata['uname']
        req.systemlvl = rmuser.userlevel(req.user, 'SYSTEM')
        setusercookies(req)
        rmutil.log('login okay for %s' % (req.user))
        return ''

And this is the logic I'm using to check for the cookie:

    req.cookies = Cookie.get_cookies(req)
    if req.cookies.has_key('user'):
        req.user = req.cookies['user'].value
        setusercookies(req)

I am using mod_python 3.1.3 with Apache 2.0.48. If anyone has any
insights into what's going on here, I would be most grateful.

Thanks,

Nick


-- 
Nick Vargish  ||  nav@bandersnatch.org  ||  http://nav.bandersnatch.org/
From peden at americanphysicians.net  Thu Sep  2 09:47:06 2004
From: peden at americanphysicians.net (Paul D. Eden)
Date: Thu Sep  2 11:47:09 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094136116.47908@dscpl.com.au>
References: <1094136116.47908@dscpl.com.au>
Message-ID: <1094140026.8161.37.camel@paullaptop.americanphysicians.net>

> What I believe is more important, whatever the candidate project may be, is that
> a single initial set of mock up web pages be developed by someone who is good at
> web design and that everyone use these as a starting point. In other words, the
> final design of each implementation should look more or less the same to the user.
> The only thing that should really change is the underlying implementation which
> supports it. If the user facing interface is always the same, it would make it easier
> for someone evaluating the different implementations to see how each differs.
> If everyone were free to come up with totally different page designs and features,
> would be much harder to compare.
> 
> Thus, start with raw HTML mock up pages which could be viewed statically with
> some dummy data. PSP people could take that and convert them into PSP. The
> mpservlet people could convert them to their way of doing things, similarly for
> Albatross etc etc.
> 
> Someone evalulating it can then look at how a particular static HTML page gets
> translated into a dynamic page in a particular implementation.
> 
> BTW, there may need to be two reference HTML designs. One for old style HTML
> table driven approaches and one for CSS driven designs where HTML tables aren't
> used for layout. This may be appropriate as different implementation methods
> may be biased towards one or the other.
The mock up pages is a great idea.  I had the luxury of having full-time designers
to work with at a company before.  We new what it was to look like and then
we make it work, it is it applicable to real-world business apps.

It will also make comparison between submissions easier.

Paul Eden
peden at americanphysicians dot net

From nferrier at tapsellferrier.co.uk  Thu Sep  2 16:47:39 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Thu Sep  2 11:47:40 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41373545.6070705@dd.revealed.net>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
Message-ID: <87wtzcu1gc.fsf@tapsellferrier.co.uk>

Nick <nick@dd.revealed.net> writes:

> Graham Dumpleton wrote:
> 
> > Thus, start with raw HTML mock up pages which could be viewed statically with
> > some dummy data. PSP people could take that and convert them into PSP. The
> > mpservlet people could convert them to their way of doing things, similarly for
> > Albatross etc etc.
> 
> Now you're making it too easy! :-D  But seriously, that's a good idea.  I 
> only wish I had that luxury in the real world.
> 
> As long as the HTML is clean and readable, I don't think it really matters 
> whether you use an approach with table layout or using CSS.  Although most 
> competent web designers these days use CSS.

Yeah... I think this is a good idea too... 

But I don't think there should be two different ones. We should have
one HTML app which has been developed in a common way. Right now I
think that means some CSS and some HTML 4.

The reason I think this is that any "bake off" should be about the
python, not the HTML. You don't want the HTML to be clever or
interesting in anyway because it's not the subject of the bake off.


Nic
From peden at americanphysicians.net  Thu Sep  2 09:50:07 2004
From: peden at americanphysicians.net (Paul D. Eden)
Date: Thu Sep  2 11:50:09 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094140026.8161.37.camel@paullaptop.americanphysicians.net>
References: <1094136116.47908@dscpl.com.au>
	<1094140026.8161.37.camel@paullaptop.americanphysicians.net>
Message-ID: <1094140207.8161.39.camel@paullaptop.americanphysicians.net>

On Thu, 2004-09-02 at 08:47, Paul D. Eden wrote:
> > What I believe is more important, whatever the candidate project may be, is that
> > a single initial set of mock up web pages be developed by someone who is good at
> > web design and that everyone use these as a starting point. In other words, the
> > final design of each implementation should look more or less the same to the user.
> > The only thing that should really change is the underlying implementation which
> > supports it. If the user facing interface is always the same, it would make it easier
> > for someone evaluating the different implementations to see how each differs.
> > If everyone were free to come up with totally different page designs and features,
> > would be much harder to compare.
> > 
> > Thus, start with raw HTML mock up pages which could be viewed statically with
> > some dummy data. PSP people could take that and convert them into PSP. The
> > mpservlet people could convert them to their way of doing things, similarly for
> > Albatross etc etc.
> > 
> > Someone evalulating it can then look at how a particular static HTML page gets
> > translated into a dynamic page in a particular implementation.
> > 
> > BTW, there may need to be two reference HTML designs. One for old style HTML
> > table driven approaches and one for CSS driven designs where HTML tables aren't
> > used for layout. This may be appropriate as different implementation methods
> > may be biased towards one or the other.
> The mock up pages is a great idea.  I had the luxury of having full-time designers
> to work with at a company before.  We new what it was to look like and then
> we make it work, it is it applicable to real-world business apps.
> 
> It will also make comparison between submissions easier.
> 
> Paul Eden
> peden at americanphysicians dot net
> 

Sorry for all the typos.  I guess I should proof read more ;-)

Paul Eden
peden at americanphysicians not net



From list at joreybump.com  Thu Sep  2 13:08:23 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep  2 12:08:31 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094136116.47908@dscpl.com.au>
References: <1094136116.47908@dscpl.com.au>
Message-ID: <41374577.3040008@joreybump.com>

Graham Dumpleton wrote:

> What I believe is more important, whatever the candidate project may be, is that
> a single initial set of mock up web pages be developed by someone who is good at
> web design and that everyone use these as a starting point. In other words, the
> final design of each implementation should look more or less the same to the user.
> The only thing that should really change is the underlying implementation which
> supports it. If the user facing interface is always the same, it would make it easier
> for someone evaluating the different implementations to see how each differs.
> If everyone were free to come up with totally different page designs and features,
> would be much harder to compare.
> 
> Thus, start with raw HTML mock up pages which could be viewed statically with
> some dummy data. PSP people could take that and convert them into PSP. The
> mpservlet people could convert them to their way of doing things, similarly for
> Albatross etc etc.
> 
> Someone evalulating it can then look at how a particular static HTML page gets
> translated into a dynamic page in a particular implementation.
> 
> BTW, there may need to be two reference HTML designs. One for old style HTML
> table driven approaches and one for CSS driven designs where HTML tables aren't
> used for layout. This may be appropriate as different implementation methods
> may be biased towards one or the other.

Speaking as both a web developer and a programmer, I wouldn't find this 
restriction particularly interesting in a bakeoff. I'm rarely happy with 
the designs I'm handed, but I'm always interested in learning new 
techniques. An unrestricted approach provides an opportunity to learn 
from others, even if they don't emerge as the overall "winner".

There's no question that a poorly programmed webapp that looks fantastic 
on the surface might steal thunder from another with a superior code 
base, so it's obvious that the entries would need to be judged by 
multiple criteria. A battery of tests needs to be devised to test 
performance and scalability.

From list at joreybump.com  Thu Sep  2 13:15:21 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep  2 12:15:25 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <87wtzcu1gc.fsf@tapsellferrier.co.uk>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
Message-ID: <41374719.2010901@joreybump.com>

Nic Ferrier wrote:

> The reason I think this is that any "bake off" should be about the
> python, not the HTML. You don't want the HTML to be clever or
> interesting in anyway because it's not the subject of the bake off.

How can a webapp bakeoff not be about the HTML? This is beginning to 
sound a little "ivory tower" to me.

In fact, part of the challenge should be that the application works in 
any recent browser on any recent platform, including a text and 
read-aloud browsers. Who cares how "good" the backend is if it can't 
produce something that will survive in the real world?

In a real bakeoff, contestants get judged on the quality of their cake, 
not the oven they used to bake it. :)
From peden at americanphysicians.net  Thu Sep  2 10:24:29 2004
From: peden at americanphysicians.net (Paul D. Eden)
Date: Thu Sep  2 12:24:31 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41374719.2010901@joreybump.com>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
Message-ID: <1094142268.8161.71.camel@paullaptop.americanphysicians.net>

On Thu, 2004-09-02 at 09:15, Jorey Bump wrote:
> Nic Ferrier wrote:
> 
> > The reason I think this is that any "bake off" should be about the
> > python, not the HTML. You don't want the HTML to be clever or
> > interesting in anyway because it's not the subject of the bake off.
> 
> How can a webapp bakeoff not be about the HTML? This is beginning to 
> sound a little "ivory tower" to me.
> 
> In fact, part of the challenge should be that the application works in 
> any recent browser on any recent platform, including a text and 
> read-aloud browsers. Who cares how "good" the backend is if it can't 
> produce something that will survive in the real world?
> 
> In a real bakeoff, contestants get judged on the quality of their cake, 
> not the oven they used to bake it. :)

Would one framework dictate the creation of different HTML than
another?  If not then a set of identical HTML templates to work from
would be a very good test of the frameworks.  I have not worked with
most of them excepting PSP and webware so we need some more experienced
voices on this.  



From azaroth at liverpool.ac.uk  Thu Sep  2 18:18:54 2004
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Thu Sep  2 12:25:51 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41374719.2010901@joreybump.com>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
Message-ID: <Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>


On Thu, 2 Sep 2004, Jorey Bump wrote:
> Nic Ferrier wrote:

>> The reason I think this is that any "bake off" should be about the
>> python, not the HTML. You don't want the HTML to be clever or
> How can a webapp bakeoff not be about the HTML? This is beginning to sound a 
> little "ivory tower" to me.

What's the point of an HTML authoring competition that happens to use 
Python to generate the pages?

If it's about interesting things that can be done with mod_python, then 
I'll enter Cheshire3.  If it's just a case of who can write some HTML and 
have python script serve it, I fail to see the point.

Rob

       ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
     ,'-/::::.        http://www.o-r-g.org/~azaroth/
   ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    University of Liverpool
____/:::::::::::::.  L5R Shop: http://www.cardsnotwords.com/
I L L U M I N A T I
From neel at mediapulse.com  Thu Sep  2 13:51:58 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Sep  2 12:51:33 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41373545.6070705@dd.revealed.net>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
Message-ID: <1094143918.4727.146.camel@mike.mediapulse.com>

On Thu, 2004-09-02 at 10:59, Nick wrote:
> Graham Dumpleton wrote:
> 
> > Thus, start with raw HTML mock up pages which could be viewed statically with
> > some dummy data. PSP people could take that and convert them into PSP. The
> > mpservlet people could convert them to their way of doing things, similarly for
> > Albatross etc etc.
> 
> Now you're making it too easy! :-D  But seriously, that's a good idea.  I 
> only wish I had that luxury in the real world.

This method of prototyping is my real world ;)  And I agree this would
be needed to do a proper "bake off".

> As long as the HTML is clean and readable, I don't think it really matters 
> whether you use an approach with table layout or using CSS.  Although most 
> competent web designers these days use CSS.
> 

I'll say here it should use css and even some x/dhtml.  These are often
parts of new sites and when I look at frameworks it's important to me to
see how well they can intergrate with x/dhtml and css.  Having a plain
html 4.0 design wouldn't really be important either; as time goes on 4.0
will matter less and less so the bake off should be forawrd looking,
imho.

Mike

From vinjvinj at yahoo.com  Thu Sep  2 11:25:07 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Thu Sep  2 13:25:10 2004
Subject: [mod_python] error with session handling in mod_python.servlet
Message-ID: <20040902172507.36884.qmail@web41313.mail.yahoo.com>

I'm get the following errow ehn I use :

use_session in the servlet.

I'm get the same error in the tutorial as well. Any
clues on what might be going wrong?

Thanks.


Mod_python error: "PythonHandler mod_python.servlet"

Traceback (most recent call last):

  File
"C:\Python23\Lib\site-packages\mod_python\apache.py",
line 299, in HandlerDispatch
    result = object(req)

  File
"C:\Python23\lib\site-packages\mod_python\servlet.py",
line 1453, in handler
    servlet.prep()

  File
"C:\Python23\lib\site-packages\mod_python\servlet.py",
line 593, in prep
    timeout=self.session_timeout)

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 388, in Session
    timeout=timeout, lock=lock)

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 360, in __init__
    timeout=timeout, lock=lock)

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 132, in __init__
    Cookie.add_cookie(self._req, self.make_cookie())

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 165, in make_cookie
    self.write(c)

AttributeError: 'MemorySession' object has no
attribute 'write'
From ross at karchner.com  Thu Sep  2 14:44:49 2004
From: ross at karchner.com (Ross M Karchner)
Date: Thu Sep  2 13:44:53 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094143918.4727.146.camel@mike.mediapulse.com>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<1094143918.4727.146.camel@mike.mediapulse.com>
Message-ID: <41375C11.7090003@karchner.com>

Maybe the *exact*  HTML generated by each part of the app should be 
specified ahead of time?

Michael C. Neel wrote:

>On Thu, 2004-09-02 at 10:59, Nick wrote:
>  
>
>>Graham Dumpleton wrote:
>>
>>    
>>
>>>Thus, start with raw HTML mock up pages which could be viewed statically with
>>>some dummy data. PSP people could take that and convert them into PSP. The
>>>mpservlet people could convert them to their way of doing things, similarly for
>>>Albatross etc etc.
>>>      
>>>
>>Now you're making it too easy! :-D  But seriously, that's a good idea.  I 
>>only wish I had that luxury in the real world.
>>    
>>
>
>This method of prototyping is my real world ;)  And I agree this would
>be needed to do a proper "bake off".
>
>  
>
>>As long as the HTML is clean and readable, I don't think it really matters 
>>whether you use an approach with table layout or using CSS.  Although most 
>>competent web designers these days use CSS.
>>
>>    
>>
>
>I'll say here it should use css and even some x/dhtml.  These are often
>parts of new sites and when I look at frameworks it's important to me to
>see how well they can intergrate with x/dhtml and css.  Having a plain
>html 4.0 design wouldn't really be important either; as time goes on 4.0
>will matter less and less so the bake off should be forawrd looking,
>imho.
>
>Mike
>
>_______________________________________________
>  
>
From vinjvinj at yahoo.com  Thu Sep  2 12:36:37 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Thu Sep  2 14:36:40 2004
Subject: [mod_python] error with session handling in mod_python.servlet
Message-ID: <20040902183637.9198.qmail@web41310.mail.yahoo.com>

That's strange. I reinstalled the mod_python and the
write functions disappeared from mod_python function.

I then got new errors which claim that the cookie does
not have the path attribute. I had to replace:

                docroot = self._req.document_root()
                # the path where *Handler directive
was specified
                dirpath = self._req.hlist.directory
                c.path = dirpath[len(docroot):]

                # XXX Not sure why, but on Win32
hlist.directory
                # may contain a trailing \ - need to
investigate,
                # this value is given to us directly
by httpd
                if os.name == 'nt' and c.path[-1] ==
'\\':
                    c.path = c.path[:-1]

                # Sometimes there is no path, e.g.
when Location
                # is used. When Alias or UserDir are
used, then
                # the path wouldn't match the URI. In
those cases
                # just default to '/'
                if not c.path or not
self._req.uri.startswith(c.path):
                    c.path = '/'


with:

            try:
                docroot = self._req.document_root()
                # the path where *Handler directive
was specified
                dirpath = self._req.hlist.directory
                c.path = dirpath[len(docroot):]

                # XXX Not sure why, but on Win32
hlist.directory
                # may contain a trailing \ - need to
investigate,
                # this value is given to us directly
by httpd
                if os.name == 'nt' and c.path[-1] ==
'\\':
                    c.path = c.path[:-1]

                # Sometimes there is no path, e.g.
when Location
                # is used. When Alias or UserDir are
used, then
                # the path wouldn't match the URI. In
those cases
                # just default to '/'
                if not c.path or not
self._req.uri.startswith(c.path):
                    c.path = '/'
            except:
                c.path = '/'

Will this mess anything else? I am using alias in the
mod_python configuration. 

thanks.

----------------------------------------------------
I'm get the following errow ehn I use :

use_session in the servlet.

I'm get the same error in the tutorial as well. Any
clues on what might be going wrong?

Thanks.


Mod_python error: "PythonHandler mod_python.servlet"

Traceback (most recent call last):

  File
"C:\Python23\Lib\site-packages\mod_python\apache.py",
line 299, in HandlerDispatch
    result = object(req)

  File
"C:\Python23\lib\site-packages\mod_python\servlet.py",
line 1453, in handler
    servlet.prep()

  File
"C:\Python23\lib\site-packages\mod_python\servlet.py",
line 593, in prep
    timeout=self.session_timeout)

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 388, in Session
    timeout=timeout, lock=lock)

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 360, in __init__
    timeout=timeout, lock=lock)

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 132, in __init__
    Cookie.add_cookie(self._req, self.make_cookie())

  File
"C:\Python23\lib\site-packages\mod_python\Session.py",
line 165, in make_cookie
    self.write(c)

AttributeError: 'MemorySession' object has no
attribute 'write'
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From vinjvinj at yahoo.com  Thu Sep  2 13:21:08 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Thu Sep  2 15:21:11 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
Message-ID: <20040902192108.87790.qmail@web41314.mail.yahoo.com>

First of all thank you for providing mpservlet. I
,like many people, have used zope, quxiote, and
webware and have finally found mpservlet which is
exactly what I need. I'm trying to use _call_ but have
some questions suggestions. My site has a yahoo like
interface which has a lot of links which perform
actions. These actions(links) go thorugh http get. 

I changed the repsond so that the servlet looks for
the _call_ form variable function gets called even if
it comes from a get request. 

The second thing I would like to have is _call_
function just be called for generating the content. So
in effect if I subclass HTMLPage and use the _call_
functionality my header and nav and footer functions
don't get called. This seems strange to since almost
every action would have to generate some content.


Thanks!
From vinjvinj at yahoo.com  Thu Sep  2 14:19:16 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Thu Sep  2 16:19:18 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
Message-ID: <20040902201916.18861.qmail@web41312.mail.yahoo.com>

I figured out a way to do this, but I'm not sure it is
too elegant:

Have your output go to a string in your _call_
do_some_function()

so replace self.write with self.result.append

and in your write_content function have the following:

self.writeln("".join(self.result))

Also does anyone know how to redirect the current
request to another servlet so that the current req
object is kept intact. The problem in some more
details is as follows. I have an application which
checks to see if a user is logged in through the
session. However, if the user is not logged in I want
to redirect to the login servlet with the error
message sent as part of the req object. 

I can do that by /Login?err_msg="You have to be logged
in" however then anyone can send messages to my login
screen which get displayed on the return. I'd rather
have someway (secure) of passing the err_msg
internally. 


--- Vinj Vinj <vinjvinj@yahoo.com> wrote:

> First of all thank you for providing mpservlet. I
> ,like many people, have used zope, quxiote, and
> webware and have finally found mpservlet which is
> exactly what I need. I'm trying to use _call_ but
> have
> some questions suggestions. My site has a yahoo like
> interface which has a lot of links which perform
> actions. These actions(links) go thorugh http get. 
> 
> I changed the repsond so that the servlet looks for
> the _call_ form variable function gets called even
> if
> it comes from a get request. 
> 
> The second thing I would like to have is _call_
> function just be called for generating the content.
> So
> in effect if I subclass HTMLPage and use the _call_
> functionality my header and nav and footer functions
> don't get called. This seems strange to since almost
> every action would have to generate some content.
> 
> 
> Thanks!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
>
http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From list at joreybump.com  Thu Sep  2 17:28:44 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep  2 16:28:48 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
References: <1094136116.47908@dscpl.com.au>
	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
Message-ID: <4137827C.5000908@joreybump.com>

Robert Sanderson wrote:

> What's the point of an HTML authoring competition that happens to use 
> Python to generate the pages?

It seems appropriate to judge a webapp framework partly on the quality 
of the HTML it produces and the tools it provides to accomplish this.

> If it's about interesting things that can be done with mod_python, then 
> I'll enter Cheshire3.  If it's just a case of who can write some HTML 
> and have python script serve it, I fail to see the point.

Performing a task and designing an interface are two sides of the same 
coin when creating webapps. A predefined interface could very well turn 
it into an HTML/JavaScript competition as programmers grapple with 
limitations they wouldn't normally impose on themselves. Let form follow 
function, so that developers get a chance to show innovate ways to solve 
the problem.

For example, I often spread conditional logic over several pages. I use 
Python to do server side error checking because it's much nicer than 
JavaScript and keeps my apps self-contained. I use temporary session 
identifiers that don't require setting cookies. My tiny brain finds this 
extremely easy to do with Python, moreso than with other languages. 
There's no question that programming my webapps in Python has affected 
the way they look, so I'd hate to see a predefined interface prevent me 
from using the skills I've acquired.

Maybe it's a good idea to establish some style restrictions, but if a 
little eye candy encourages people to look under the hood, even better. 
It should still be slashdotted, SQL injected, cross-site scripted, W3C 
validated, idiot-tested, and hit with anything else you think a champion 
webapp should be able to withstand. Otherwise, it might just as well be 
a paint-by-numbers contest (where the losers would be the most 
interesting, I'm sure).






From nferrier at tapsellferrier.co.uk  Thu Sep  2 22:06:44 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Thu Sep  2 17:06:45 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
Message-ID: <87sma0tmvf.fsf@tapsellferrier.co.uk>

Robert Sanderson <azaroth@liverpool.ac.uk> writes:

> What's the point of an HTML authoring competition that happens to use 
> Python to generate the pages?

It's not a competition. It's an exhibition.



> If it's about interesting things that can be done with mod_python, then 
> I'll enter Cheshire3.  If it's just a case of who can write some HTML and 
> have python script serve it, I fail to see the point.

Tell us about Cheshire3.


Nic
From nick at dd.revealed.net  Thu Sep  2 17:28:11 2004
From: nick at dd.revealed.net (Nick)
Date: Thu Sep  2 17:28:14 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4137827C.5000908@joreybump.com>
References: <1094136116.47908@dscpl.com.au>
	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<4137827C.5000908@joreybump.com>
Message-ID: <1094160491.8295.10.camel@nick>

On Thu, 2004-09-02 at 15:28, Jorey Bump wrote:
> Robert Sanderson wrote:
> 
> > What's the point of an HTML authoring competition that happens to use 
> > Python to generate the pages?
> 
> It seems appropriate to judge a webapp framework partly on the quality 
> of the HTML it produces and the tools it provides to accomplish this.

Maybe, but why should the app developer have to come up with the
presentation?  The toolkit may be excellent, but the graphic design/UI
skills of the developer sub par.

I think that all we're suggesting here is that mockups be provided, and
that the finished product reflect the mock up.  If you want the
framework to generate all the HTML to showcase some feature, more power
to you.  Not all frameworks are designed for that purpose, and a LOT of
developers prefer the MVC model.  Otherwise there wouldn't be JSP in an
otherwise fine Servlet/J2EE world.

Nick

From neel at mediapulse.com  Thu Sep  2 19:09:27 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Sep  2 18:09:00 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <87sma0tmvf.fsf@tapsellferrier.co.uk>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<87sma0tmvf.fsf@tapsellferrier.co.uk>
Message-ID: <1094162967.3212.16.camel@mike.mediapulse.com>

On Thu, 2004-09-02 at 16:52, Nic Ferrier wrote:
> Robert Sanderson <azaroth@liverpool.ac.uk> writes:
> 
> > What's the point of an HTML authoring competition that happens to use 
> > Python to generate the pages?
> 
> It's not a competition. It's an exhibition.

I think it's a good idea, no matter what you call it ;)

So what do we want?  So far it is an app that runs under mod_python, and
should require a data store.  If we are going to measure preformance,
then the data store needs to be defined; otherwise the guy who uses dbm
files is at a loss to the guy who uses MySQL.  I think preformance is
important, and also SQL interaction (after all, how many apps are you
working on for customers using dbm files as the main data store?).

Now, at the risk of getting the thread off topic and into a flame war,
I'm going to say that we should state it uses MySQL and also provide the
database as well.  The app shouldn't need any advanced database
features, this wouldn't be showing off the framework anyway.  Also, if
this gets some steam, someone might be able to convince sourceforge to
host the results of the bake off, and they use MySQL.

So the real question I have is who is going to (or knows someone who
will) create the prototype design of this application?

Mike

From list at joreybump.com  Thu Sep  2 19:57:39 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep  2 18:57:44 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094160491.8295.10.camel@nick>
References: <1094136116.47908@dscpl.com.au>	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<4137827C.5000908@joreybump.com>
	<1094160491.8295.10.camel@nick>
Message-ID: <4137A563.8080805@joreybump.com>

Nick wrote:

> On Thu, 2004-09-02 at 15:28, Jorey Bump wrote:
> 
>> It seems appropriate to judge a webapp framework partly on the
>> quality of the HTML it produces and the tools it provides to
>> accomplish this.
> 
> 
> Maybe, but why should the app developer have to come up with the 
> presentation?

In this context, to show how well presentation is separated from logic.

Perhaps it's best to impose a policy instead of providing a template. A
real world example is declaring which version of HTML to use, require
that it validates and that it displays correctly in a text browser. Then
demand that it flows seamlessly within a site and provide a fake index
page to use as a guide (and provide logo images and other resources, if
desired). After that, give the developer the autonomy to create the
interface. I work under these conditions all of the time.

> The toolkit may be excellent, but the graphic design/UI skills of the
> developer sub par.

No doubt. By the same token, a snazzy presentation can't hide a broken
application. Especially from us. :)

> I think that all we're suggesting here is that mockups be provided,
> and that the finished product reflect the mock up.

I agree with that part, as long as it concerns general look and feel,
which is a commonplace restriction for developers. I just don't think
the form interface should be predefined in any way. Although it's not
unusual for marketing to send over a nice graphical frontend with all of
the text and form elements in place, I think that's a terrible way to
design a webapp.

> If you want the framework to generate all the HTML to showcase some
> feature, more power to you.  

I write my own routines to output HTML directly in Python, so I *would* 
be interested if any of the frameworks in the bakeoff offer anything 
better. I'm more interested in reusable code than anything else, because 
it's the one thing that truly speeds up application development (isn't 
that what defines a framework, after all?). Code that generates HTML is 
a perfect demonstration of this concept.

> Not all frameworks are designed for that
> purpose, and a LOT of developers prefer the MVC model.  Otherwise
> there wouldn't be JSP in an otherwise fine Servlet/J2EE world.

It's ironic that anyone would think that embedding code in an HTML page 
supports the separation of presentation from logic. It seems like more 
of an institutional concern (which is also important). I consider it a 
weakness of PHP, PSP, ASP, or JSP that the application code can become 
so easily obscured, and I'm not alone. I only mention this to support 
your statement that all frameworks are not the same, so why impose any 
one model on the bakeoff?


From list at joreybump.com  Thu Sep  2 20:57:30 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep  2 19:57:34 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094162967.3212.16.camel@mike.mediapulse.com>
References: <1094136116.47908@dscpl.com.au>
	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
Message-ID: <4137B36A.4000304@joreybump.com>

Michael C. Neel wrote:

> So what do we want?  So far it is an app that runs under mod_python, and
> should require a data store.  If we are going to measure preformance,
> then the data store needs to be defined; otherwise the guy who uses dbm
> files is at a loss to the guy who uses MySQL.  I think preformance is
> important, and also SQL interaction (after all, how many apps are you
> working on for customers using dbm files as the main data store?).
> 
> Now, at the risk of getting the thread off topic and into a flame war,
> I'm going to say that we should state it uses MySQL and also provide the
> database as well.  The app shouldn't need any advanced database
> features, this wouldn't be showing off the framework anyway.  Also, if
> this gets some steam, someone might be able to convince sourceforge to
> host the results of the bake off, and they use MySQL.

But some frameworks provide or use an alternative data store (Karrigell, 
for one). I know I'd be interested in how well these frameworks trade 
off performance for ease of use.

From ccurvey at earthlink.net  Thu Sep  2 21:13:50 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Thu Sep  2 19:59:39 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4137A563.8080805@joreybump.com>
References: <1094136116.47908@dscpl.com.au>	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<4137827C.5000908@joreybump.com>	<1094160491.8295.10.camel@nick>
	<4137A563.8080805@joreybump.com>
Message-ID: <4137B73E.2010207@earthlink.net>

Jorey Bump wrote:

> Nick wrote:
>
>> On Thu, 2004-09-02 at 15:28, Jorey Bump wrote:
>>
>>> It seems appropriate to judge a webapp framework partly on the
>>> quality of the HTML it produces and the tools it provides to
>>> accomplish this.
>>
>>
>>
>> Maybe, but why should the app developer have to come up with the 
>> presentation?
>
>
> In this context, to show how well presentation is separated from logic.
>
> Perhaps it's best to impose a policy instead of providing a template. A
> real world example is declaring which version of HTML to use, require
> that it validates and that it displays correctly in a text browser. Then
> demand that it flows seamlessly within a site and provide a fake index
> page to use as a guide (and provide logo images and other resources, if
> desired). After that, give the developer the autonomy to create the
> interface. I work under these conditions all of the time.

How about this?  We provide a reference UI for everyone to use, and 
encourage everyone to stay as close to it as possible.  (The closer the 
UI is across the implementations, the easier it will be to see 
differences in the implementation.)  If an approach lends itself to a 
super-duper UI, or it makes the reference UI hard to implement, then do 
what you gotta do. 

I'd also recommend the same approach for persistence/database usage, 
because in both cases, I think an implementation that lets you swap a UI 
or a database for another would be a valuable thing.  After all, if we 
come up with a few implementations, a second stage might be to convert 
them to use the same database/persistence mechanism so that we could do 
performance comparisons.

This has turned into quite a lively discussion with some very good 
ideas! Shall we start in on a candidate list of use cases for our 
exhibition?


From nferrier at tapsellferrier.co.uk  Fri Sep  3 01:10:18 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Thu Sep  2 20:10:20 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094162967.3212.16.camel@mike.mediapulse.com>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
Message-ID: <87y8jsrz7i.fsf@tapsellferrier.co.uk>

"Michael C. Neel" <neel@mediapulse.com> writes:

> Now, at the risk of getting the thread off topic and into a flame war,
> I'm going to say that we should state it uses MySQL and also provide the
> database as well.  The app shouldn't need any advanced database
> features, this wouldn't be showing off the framework anyway.  Also, if
> this gets some steam, someone might be able to convince sourceforge to
> host the results of the bake off, and they use MySQL.

I don't think that's a good idea. Let people do what they want with
the backend... That's what RAD is about.

If a framework has something particular to show about a particular
backend then let it use that backend. Otherwise, let it be purely a
matter for personal preference.


I don't think that we can use this exercise to compare performance or
anything like that... so there's no point being prescriptive about the
back end.



There is a point about being prescriptive about the front end. It's so
the applications look (broadly) the same.



> So the real question I have is who is going to (or knows someone who
> will) create the prototype design of this application?

By the end of next week I can probably have a timesheet tool up and
running with some HTML that we could use as story boards.


Nic
From nferrier at tapsellferrier.co.uk  Fri Sep  3 01:38:54 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Thu Sep  2 20:38:56 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4137B36A.4000304@joreybump.com>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
	<4137B36A.4000304@joreybump.com>
Message-ID: <87sma0rxrx.fsf@tapsellferrier.co.uk>

Jorey Bump <list@joreybump.com> writes:

> Michael C. Neel wrote:
> 
> > So what do we want?  So far it is an app that runs under mod_python, and
> > should require a data store.  If we are going to measure preformance,
> > then the data store needs to be defined; otherwise the guy who uses dbm
> > files is at a loss to the guy who uses MySQL.  I think preformance is
> > important, and also SQL interaction (after all, how many apps are you
> > working on for customers using dbm files as the main data store?).
> > 
> > Now, at the risk of getting the thread off topic and into a flame war,
> > I'm going to say that we should state it uses MySQL and also provide the
> > database as well.  The app shouldn't need any advanced database
> > features, this wouldn't be showing off the framework anyway.  Also, if
> > this gets some steam, someone might be able to convince sourceforge to
> > host the results of the bake off, and they use MySQL.
> 
> But some frameworks provide or use an alternative data store (Karrigell, 
> for one). I know I'd be interested in how well these frameworks trade 
> off performance for ease of use.

Absolutely. This sort of thing could well be a a feature of the
framework.

It should be left for implementors to decide upon.


Nic
From Rune.Strand at student.uib.no  Fri Sep  3 06:14:54 2004
From: Rune.Strand at student.uib.no (Rune Strand)
Date: Thu Sep  2 23:13:43 2004
Subject: [mod_python] Strange Namespace issue
Message-ID: <6.0.0.22.2.20040903051227.02004cc0@rasmus.uib.no>

Hi,
I was making a small math quiz thing, when I came across some strange
behaviour in either me or Mod_Python.

1. If FORM in file test.html POST to ACTION 'test.py/someFunc', nothing
happens. If I rename test.py to t.py, it does. Is that by design?

2. I was experimenting with passing values from page to page, when I
discovered that I could do this without cookies, hidden values or URL
extensions like '?A=x&B=y' I could just call the function directly in the
POST statement. So I grokked a little with a script that basically - takes
input from user, - posts it to a function that stores the input in a
global variable (list) - calls a function that generates html for a new
page, now with a a form that'll post to another function. (See below if
you're interested in the files.)

And the global variable happily appends all the userinput from page to
page.

Then, shortly after completing the test, I can access the starting page
from another host in my network. What happens is that the list continues
to expand, it still holds the values posted from the first host. They
share memory!

Now, I suppose this makes sense with regards to modules, for
instance, but should a variable in a script be super global?

When accessing the files from a second or third host, the Apache error
log, appends: "[notice] mod_python: (Re)importing module 't' with path set
to '[path_to_files]'".


Is it something strange here, or should I be more careful with my
namespace ;-)

--rune

--------- The files to repro:
<http://www.uib.no/People/stud2080/mp_namespace.zip> [2Kb]
SPECS = [Win 2003 Server, Apache 2.0.49, Python 2.3.3, Mod_Python 3.1.3]

From grahamd at dscpl.com.au  Fri Sep  3 14:22:09 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Sep  2 23:22:18 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4137B36A.4000304@joreybump.com>
References: <1094136116.47908@dscpl.com.au>
	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
	<4137B36A.4000304@joreybump.com>
Message-ID: <7055FBF8-FD58-11D8-8836-000393DCF16E@dscpl.com.au>


On 03/09/2004, at 9:57 AM, Jorey Bump wrote:

> Michael C. Neel wrote:
>
>> So what do we want?  So far it is an app that runs under mod_python, 
>> and
>> should require a data store.  If we are going to measure preformance,
>> then the data store needs to be defined; otherwise the guy who uses 
>> dbm
>> files is at a loss to the guy who uses MySQL.  I think preformance is
>> important, and also SQL interaction (after all, how many apps are you
>> working on for customers using dbm files as the main data store?).
>> Now, at the risk of getting the thread off topic and into a flame war,
>> I'm going to say that we should state it uses MySQL and also provide 
>> the
>> database as well.  The app shouldn't need any advanced database
>> features, this wouldn't be showing off the framework anyway.  Also, if
>> this gets some steam, someone might be able to convince sourceforge to
>> host the results of the bake off, and they use MySQL.
>
> But some frameworks provide or use an alternative data store 
> (Karrigell, for one).
>  I know I'd be interested in how well these frameworks trade off 
> performance for
> ease of use.

If you try to host all examples on one site, you end up limiting the 
choices
as to what developers can use in their implementation and make it 
difficult
for them to update things. There may also be issues of one 
implementation
interfering with another if there isn't somehow some proper separation 
between
the applications.

I feel, each developer wanting to provide an example, would need to be 
responsible
for organising their own hosting. There should however be one site 
through which
all the different implementations are linked. By each developer 
providing their
own hosting, they then have the freedom of choice as to what tools they 
use.

Regarding the HTML mock ups, look at CSS Zen Garden 
[http://www.csszengarden.com].
This is a site which is intended to show case how CSS can be used to 
make a site
look quite differently purely based on changes in the CSS. Ie., the 
HTML is the
same in each case. If CSS is going to be preferred over tables (which I 
whole
heartedly agree with), then perhaps the HTML should be id tagged with 
CSS in mind.
A very basic CSS could be supplied for layout and although someone is 
highly
encouraged to provide something which presents the same HTML, they 
could customise
the CSS all they like to give the site their own look and feel. If the 
HTML
guidelines were followed, then developers may even be able to swap CSS 
files.

I might also suggest that where you have the "CSS Zen Garden", we 
should call
the comparison of mod_python tools the "ModPython Snake Pit". I think 
this could
well be appropriate as their is very likely to be very little harmony 
and an
awful lot of competition and disagreements in the way of doing things. 
:-)

Now as to an example, maybe the provider of an example should first be 
required
to provide an implementation that follows a prebuilt HTML mockup. Once 
they have
provided this first implementation which can be used as a good 
comparison against
other implementation methods, then they would be free to provide a 
second
independent implementation which uses whatever HTML they like and which 
can
add or remove features. This then gives someone a means of showcasing 
stuff in
a way that may not be possible in the more constrained mockup 
implementation.

Also, although a functional application would be the target, one might 
even say
that a few basic demonstration pages, independent of any actual 
application
also be provided. Ie., demonstration of basic dynamic pages, forms, 
login and
session management etc. The basic examples therefore provide a means of 
comparing
the different techniques without having to wade through a lot of 
application
code. The application example then provides the means of showing how 
that all
comes together within the context of an application. The basic examples 
would
also need to be specified in advance as HTML mockups and descriptions 
of what
needs to be shown. Anyway, while a specific candidate example is 
determined,
this might be a good first step.

Thus in summary:

1. Call the comparision the "ModPython Snake Pit".

2. People host their own examples with them all being linked from one 
site.

3. People provide reference implementation for basic demonstration 
examples
of simple tasks.

4. People provide reference implementation for example application where
same HTML mockup is used, but where CSS modifications are allowed.

5. People free to implement candidate example however they want, ie., 
HTML
can be changed, page linkages can be changed, Javascript used etc etc.

If this seems reasonable, while we think about an example for 3, how 
about
a list of basic examples for 2. To get things going, how about:

1. Basic example of single page with dynamic data that changes on each 
read.
Should show single values, repeating groups of data, optional data that 
is or
is not shown based on time of day.

2. Basic example of an input form.

3. Basic example of a cookie.

4. Basic example of a login form with associated session management 
including
session logout/timeout. There should be data preserved for the session 
between
reads with the data stored in the application and not in the browser.

Any other basic things that people are always asking to do where a 
demonstration
of how it is achieved for all the different tools would be useful?

--
Graham Dumpleton (grahamd@dscpl.com.au)

From davidf at sjsoft.com  Fri Sep  3 07:36:26 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Sep  3 00:36:32 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094162967.3212.16.camel@mike.mediapulse.com>
References: <1094136116.47908@dscpl.com.au>
	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
Message-ID: <4137F4CA.3060208@sjsoft.com>

Michael C. Neel wrote:

>On Thu, 2004-09-02 at 16:52, Nic Ferrier wrote:
>  
>
>>Robert Sanderson <azaroth@liverpool.ac.uk> writes:
>>
>>    
>>
>>>What's the point of an HTML authoring competition that happens to use 
>>>Python to generate the pages?
>>>      
>>>
>>It's not a competition. It's an exhibition.
>>    
>>
>
>I think it's a good idea, no matter what you call it ;)
>
>So what do we want?  So far it is an app that runs under mod_python, and
>should require a data store.  If we are going to measure preformance,
>then the data store needs to be defined; otherwise the guy who uses dbm
>files is at a loss to the guy who uses MySQL.  I think preformance is
>important, and also SQL interaction (after all, how many apps are you
>working on for customers using dbm files as the main data store?).
>
>Now, at the risk of getting the thread off topic and into a flame war,
>I'm going to say that we should state it uses MySQL and also provide the
>database as well.  The app shouldn't need any advanced database
>features, this wouldn't be showing off the framework anyway.  Also, if
>this gets some steam, someone might be able to convince sourceforge to
>host the results of the bake off, and they use MySQL.
>  
>
One of the main advantages of jToolkit (our framework) is that is 
designed for building applications that are portable between different 
databases. I don't see why you need to specify MySQL as the database. 
You could specify that it needs to be a relational database.

David
From nferrier at tapsellferrier.co.uk  Fri Sep  3 10:38:52 2004
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Fri Sep  3 05:38:53 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <7055FBF8-FD58-11D8-8836-000393DCF16E@dscpl.com.au>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
	<4137B36A.4000304@joreybump.com>
	<7055FBF8-FD58-11D8-8836-000393DCF16E@dscpl.com.au>
Message-ID: <87hdqfsn8j.fsf@tapsellferrier.co.uk>


> If you try to host all examples on one site, you end up limiting the
> choices as to what developers can use in their implementation and
> make it difficult for them to update things. There may also be
> issues of one implementation interfering with another if there isn't
> somehow some proper separation between the applications.

No. This should be very easy to set up:

- chrooted mod-python/apache servers on pre-allocated ports

- front end apache server proxying to the individual servers


 
> I feel, each developer wanting to provide an example, would need to
> be responsible for organising their own hosting. There should
> however be one site through which all the different implementations
> are linked. By each developer providing their own hosting, they then
> have the freedom of choice as to what tools they use.

But developers wanting to provide an example will be laden with having
to provide their own hosting.

I will be happy to provide hosting... though I only have an ADSL
setup. I will try to find a someone with a better uplink and we can
move to there.

Anyway, these are details.


I'll try to come up with a timesheet app by the end of next week.


Nic
From neel at mediapulse.com  Fri Sep  3 10:15:48 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Sep  3 09:15:16 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4137F4CA.3060208@sjsoft.com>
References: <1094136116.47908@dscpl.com.au>
	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
	<4137F4CA.3060208@sjsoft.com>
Message-ID: <1094217348.13535.12.camel@mike.mediapulse.com>

On Fri, 2004-09-03 at 00:36, David Fraser wrote:
> One of the main advantages of jToolkit (our framework) is that is 
> designed for building applications that are portable between different 
> databases. I don't see why you need to specify MySQL as the database. 
> You could specify that it needs to be a relational database.

The reasoning for this was the mention in this thread of bench marking
the results, in which I've learned will have mre to do with your choosen
database and how you use it than anything a framework does.  The second
is it would be easier to host all results under one roof if they all
used the same database, and I know sourceforge runs MySQL.

Considering that all entries will be run under mod_python, and that
mod_python can setup custom interpters and namespaces/module directories
per vhost, I don't see any reason they can't live on one host.  Does
someone's framework *not* run under mod_python 3 / Apache 2.0 / python
2.3?

If no one is going to try and benchmark the results, then this isn't as
important.  I do however feel that if we are showcasing the business use
of the frameworks, then a relational (open source) database should be
required.  You may not need that for your blog, but if you are looking
at a framework to be used in a corporate setting this will be very
important.

Mike

From azaroth at liverpool.ac.uk  Fri Sep  3 15:21:17 2004
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Fri Sep  3 09:28:17 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094217348.13535.12.camel@mike.mediapulse.com>
References: <1094136116.47908@dscpl.com.au> <41373545.6070705@dd.revealed.net>
	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
	<4137F4CA.3060208@sjsoft.com>
	<1094217348.13535.12.camel@mike.mediapulse.com>
Message-ID: <Pine.LNX.4.60.0409031419550.27365@gondolin.hist.liv.ac.uk>


>> One of the main advantages of jToolkit (our framework) is that is
>> designed for building applications that are portable between different
>> databases. I don't see why you need to specify MySQL as the database.
>> You could specify that it needs to be a relational database.

Counts me out. I don't use a relational database at all. Cheshire3 uses an 
XML datastore on top of BerkeleyDb.

Rob

       ,'/:.          Dr Robert Sanderson (azaroth@liverpool.ac.uk)
     ,'-/::::.        http://www.o-r-g.org/~azaroth/
   ,'--/::(@)::.      Special Collections and Archives, extension 3142
,'---/::::::::::.    University of Liverpool
____/:::::::::::::.  L5R Shop: http://www.cardsnotwords.com/
I L L U M I N A T I
From nick at dd.revealed.net  Fri Sep  3 09:40:14 2004
From: nick at dd.revealed.net (Nick)
Date: Fri Sep  3 09:40:32 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4137A563.8080805@joreybump.com>
References: <1094136116.47908@dscpl.com.au>	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<4137827C.5000908@joreybump.com>	<1094160491.8295.10.camel@nick>
	<4137A563.8080805@joreybump.com>
Message-ID: <4138743E.6000906@dd.revealed.net>

Jorey Bump wrote:
>> Not all frameworks are designed for that
>> purpose, and a LOT of developers prefer the MVC model.  Otherwise
>> there wouldn't be JSP in an otherwise fine Servlet/J2EE world.
> 
> It's ironic that anyone would think that embedding code in an HTML page 
> supports the separation of presentation from logic. It seems like more 
> of an institutional concern (which is also important). I consider it a 
> weakness of PHP, PSP, ASP, or JSP that the application code can become 
> so easily obscured, and I'm not alone.

If you consider that JSP, ColdFusion, and PSE (an others) support the use of 
custom tags, I think you *can* achieve a good amount of separation of code 
from presentation.  Sure, your GUI dude(tte) has to learn some special tags, 
but they're not seeing, using or manipulating code.

Nick
From dpopowich at comcast.net  Fri Sep  3 11:56:38 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 10:57:38 2004
Subject: [mod_python] mpservlets
Message-ID: <16696.34342.468688.267809@fenway.local.>


There have been a number of posts over the past few weeks asking
questions about mpservlets.  I've been away on vacation, so I'm just
getting caught up today.  Instead of answering all in one monolithic
email, I'll respond to each in their thread.  If in my next few posts
I don't answer a question you've asked, my apologies; please post
your question again.

Meanwhile, I finally have a public site where I can put up the
servlets tutorial live.  If you've been wanting to try it out, but
haven't had the time to install it, now you can give it a whirl.  And,
sort of related to the bake-off thread, the tutorial allows you to
view the source of the servlets being demonstrated, so you'll get a
sense of its mechanics.

    http://lnx1.blue-fox.com/~dpopowich/mpstutorial/

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/


From dpopowich at comcast.net  Fri Sep  3 16:02:54 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 11:02:55 2004
Subject: [mod_python] mpservlet and formkit
In-Reply-To: <20040818235357.19752.qmail@web41308.mail.yahoo.com>
References: <20040818235357.19752.qmail@web41308.mail.yahoo.com>
Message-ID: <m2656vbdlz.fsf@fenway.local.>


Vinj Vinj writes:
> I was thinking of using mpservlet/modpython/simpletal
> and formkit for form generation. 
> 
> Has anyone used this combination. How difficult would
> it be to get mpservlet to work with formkit. Or in
> other words how different is the mpservlet api then
> the webware servlet api. 

I have not used mpservlets with any form/templating tool.  Servlets
are pure python, so you should be able to import any module you like
and use it as you would any other python module.

The only caveat, re forms, is that mpservlets have tools to aid the
developer in processing form and query data.  Of course, servlets
doesn't FORCE you to do it its way, so should you decide to use some
other form generation/processing tool, just don't use query_vars or
form_vars.

Hope this helps.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/


From dpopowich at comcast.net  Fri Sep  3 16:08:05 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 11:08:07 2004
Subject: [mod_python] Servlets, cookies and redirect
In-Reply-To: <NOEPJMBJNKKPJLAEACANIEIICKAA.pynode@centrum.cz>
References: <NOEPJMBJNKKPJLAEACANIEIICKAA.pynode@centrum.cz>
Message-ID: <m24qmfbdd0.fsf@fenway.local.>


MJR writes:
> with mod_python servlets, I am trying to set cookie and redirect with
> following code:
> 
> ===========================================================
> class set(HTMLPage):
>     def prep(self):
>         HTMLPage.prep(self)
>         minute=time()+60
>         self.add_cookie('test', 'test_value', expires=minute)
>         self.external_redirect(view)
> ===========================================================
> 
> With external_redirect cookie is not set, without redirect it works fine
> (cookie set). I've obviously missed something... what is a proper way to do
> this?

As was discussed in this thread, the Servlet.add_cookie() method is a
wrapper around mod_python.Cookie.add_cookie().  This is by design
(just like building on top of mod_python.Session) as I have no
interest in redesigning the wheel.  If the Cookie module ever exposes
options to set "normal" vs. "error" headers, I'll propagate them to
Servlet, but otherwise I don't want to touch this.

Of course, you're always free to subclass and add the functionality.
There in lies the joy of OO programming.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From dpopowich at comcast.net  Fri Sep  3 16:19:18 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 11:19:19 2004
Subject: [mod_python] servlet form against publisher
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1401A769E6@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1401A769E6@exchange2000.manord.com>
Message-ID: <m23c1zbcud.fsf@fenway.local.>


Manera, Villiam writes:

> I'm moving from publisher to servlet, because servlet are
> wonderful.

Thanks, I've been getting lots of good feedback.

> but I'm get used at the publischer way to retrieve fields from a from.
> 
> Difference in retrieve fields from Form between publisher and servlet:
> 
> In publischer : req.form = util.FieldStorage(req, keep_blank_values=1)
> 
> In servlet : self.form = util.FieldStorage(self.req)       # the default for keep_blank_values is 0
> 
> 
> So in servlet the fields not filled are not inserted in  self.form.list
> 
> Why this choice??

Two reasons:

1) Assuming you're going to retrieve the field like this:

     field = self.form.getfirst('fieldname', somedefault)

   then returning blank values is meaningless: regardless of whether
   or not the field was blank you'll get your default.

2) With the mechanics of query_vars and form_vars in mpservlets, re
   automatic retrieval of fields and setting them as instance
   variables and setting defaults for missing fields, there is no
   need to keep blank values.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
   

From dpopowich at comcast.net  Fri Sep  3 16:30:41 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 11:30:43 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
References: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
Message-ID: <m21xhjbcbh.fsf@fenway.local.>

Vinj Vinj writes:

> ...I'm trying to use _call_ but have some questions suggestions. My
> site has a yahoo like interface which has a lot of links which
> perform actions. These actions(links) go thorugh http get.
> 
> I changed the repsond so that the servlet looks for the _call_ form
> variable function gets called even if it comes from a get request.
>

I restricted the use of the _call_ mechanism to POSTs for security
reasons.  Granted, POSTs are no more secure than GETs, but at least
with POSTs you don't see the data in the URL, staring you in the
face.  And the thought calls to methods visible in the browser url
window didn't thrill me.  I've considered adding an attribute to
Servlet, say, allow_call_with_get, defaulting to false; then a
developer can set it to true if they really want to allow this
feature.  One benefit with this attribute: you can turn it on and off
per servlet instead of globally across all servlets.

Another thing you can do, to obfuscate the url string so it's not so
obvious a method is being called: change the value of METHODCALL at
the top of servlet.py.  This is probably another candidate for
turning into an attribute of Servlet.

> The second thing I would like to have is _call_
> function just be called for generating the content. So
> in effect if I subclass HTMLPage and use the _call_
> functionality my header and nav and footer functions
> don't get called. This seems strange to since almost
> every action would have to generate some content.

This functionality exists!  Check out lesson #17 of the tutorial:

    http://lnx1.blue-fox.com/~dpopowich/mpstutorial/okmethods

If a method returns True then write_html() will not be called.  So
you can have a method generate all the content and then return True.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
    

From dpopowich at comcast.net  Fri Sep  3 17:04:39 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 12:04:40 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <20040902201916.18861.qmail@web41312.mail.yahoo.com>
References: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
	<20040902201916.18861.qmail@web41312.mail.yahoo.com>
Message-ID: <m2zn479w6a.fsf@fenway.local.>


Vinj Vinj writes:
> I figured out a way to do this, but I'm not sure it is
> too elegant:
> 
> Have your output go to a string in your _call_
> do_some_function()
> 
> so replace self.write with self.result.append
> 
> and in your write_content function have the following:
> 
> self.writeln("".join(self.result))

No, I think you want to do what I said in my previous response: have
your method return True so write_html() is not called.

> Also does anyone know how to redirect the current
> request to another servlet so that the current req
> object is kept intact. The problem in some more
> details is as follows. I have an application which
> checks to see if a user is logged in through the
> session. However, if the user is not logged in I want
> to redirect to the login servlet with the error
> message sent as part of the req object. 
> 
> I can do that by /Login?err_msg="You have to be logged
> in" however then anyone can send messages to my login
> screen which get displayed on the return. I'd rather
> have someway (secure) of passing the err_msg
> internally. 

This is what I've done:

Let's assume you have a servlet for your site that all servlets
inherit from:

  class MySitePage(HTMLPage):
     ...

and let's also assume that certain pages (not all) need
authentication, then I would create another servlet:

  class MySiteAuthPage(MySitePage):
    ...

Notice how it subclasses MySitePage.  In MySiteAuthPage.prep() I
check the session for proper authentication and set a boolean, say,
authenticated.  Then I override write_html() in MySiteAuthPage:

    def write_html(self):
        if not self.authenticated:
            save, self.write_content = self.write_content, self.genloginform
            MySitePage.write_html(self)
            self.write_content = save
        else:
            MySitePage.write_html(self)

where genloginform() makes calls to self.writeln() writing the login
form to the browser.  What this does is, if not authenticated,
momentarily replaces the write_content method of the servlet with the
login form, otherwise, if authenticated, just writes out the page.

Then all my pages for my app either subclass MySitePage or
MySiteAuthPage depending on whether or not the page needs
authentication.  No calls to internal_redirect are necessary!

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/


From dpopowich at comcast.net  Fri Sep  3 17:14:25 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 12:14:27 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <41350AFB.4050201@earthlink.net>
References: <41350AFB.4050201@earthlink.net>
Message-ID: <m2y8jr9vq0.fsf@fenway.local.>


> There are a lot of different application frameworks that are popping up 
> that use mod_python.  That's a good thing!  Would anyone be interested 
> in having a "bake-off" to show the capabilities of each framework?  I'm 
> thinking that if we could come up with an easy but non-trivial 
> application, various people could implement it using their favorite 
> framework.  The results would not only be a nice comparison of different 
> frameworks, but would provide some nice examples for newbies.

I have no objection to a bake-off and would be happy to write the
mpservlet version.

I agree with those that have said (or said something similar to):

Each developer should be provided with:

  1. Business logic as python classes
  2. Mock-up HTML
  3. css files ??
  4. javascript files ??

As for tables vs css layout...shouldn't really matter, but please,
let's not degenerate into a religious war over this.  That's way-off
topic!

As for datastore backends: this is tricky.  Some frameworks make
assumptions, some don't.  Personally, I'd like to see the datastore
buried under the hood of the business logic; this way we're all on
the same page, as it were.  Can't the provided business logic do some
pure python thing: pickle, Berkeley DB?

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From vinjvinj at yahoo.com  Fri Sep  3 10:34:54 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Fri Sep  3 12:34:56 2004
Subject: [mod_python] (no subject)
Message-ID: <20040903163454.62737.qmail@web41304.mail.yahoo.com>


-----Original Message-----
From: Vineet Jain [mailto:vinj@alumni.rice.edu]
Sent: Friday, September 03, 2004 11:31 AM
To: mod_python user mailing list
Subject: RE: [mod_python] mpservlets


Thanks for the post. I'm using mpservlet extensively
and will probably have a lot of questions over the
next several weeks. So please have patience with me. 

I'm surprised that it took me so long to find
mpservlet. I've looked at all the web publishing
technologies for python several times over and am
surprised that I jsut stumbled across mpservelt and
loved it. I would recomend you do the following:

1. Put a link on webware site. Most people who use
servlets look there as well. 
2. (Done) put a demo site up. The demo were excellent
and really helped me get up the learning curve fast. 
3. Like with most things python, I love the fact that
if you don't understand something or want to change
the functionality you can look at the code. 





-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org]On Behalf Of
Daniel Popowich
Sent: Friday, September 03, 2004 9:57 AM
To: mod_python@modpython.org
Subject: [mod_python] mpservlets



There have been a number of posts over the past few
weeks asking
questions about mpservlets.  I've been away on
vacation, so I'm just
getting caught up today.  Instead of answering all in
one monolithic
email, I'll respond to each in their thread.  If in my
next few posts
I don't answer a question you've asked, my apologies;
please post
your question again.

Meanwhile, I finally have a public site where I can
put up the
servlets tutorial live.  If you've been wanting to try
it out, but
haven't had the time to install it, now you can give
it a whirl.  And,
sort of related to the bake-off thread, the tutorial
allows you to
view the source of the servlets being demonstrated, so
you'll get a
sense of its mechanics.

    http://lnx1.blue-fox.com/~dpopowich/mpstutorial/

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From vinjvinj at yahoo.com  Fri Sep  3 10:45:17 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Fri Sep  3 12:45:20 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
Message-ID: <20040903164517.66012.qmail@web41304.mail.yahoo.com>

Vinj Vinj writes:

>window didn't thrill me.  I've considered adding an
>attribute to

This would be helpful. 

>obvious a method is being called: change the value of
METHODCALL at
.the top of servlet.py.  This is probably another 

Will this change what is checked for '_call_'.
Eventually, I'll obfuscate the string, but that's not
w arequirement right now. 


>This functionality exists!  Check out lesson #17 of
>the tutorial:

the problem with the above approach is that write_html
is what calls the write_header, write_footer
write_body_parts, etc and if you don't call that you
will have to do all of those manually which does not
seem to be right. 

From dpopowich at comcast.net  Fri Sep  3 15:04:53 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 14:05:51 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <20040903164517.66012.qmail@web41304.mail.yahoo.com>
References: <20040903164517.66012.qmail@web41304.mail.yahoo.com>
Message-ID: <16696.45637.423986.157065@fenway.local.>


Vinj Vinj writes:
> >obvious a method is being called: change the value of
> METHODCALL at
> .the top of servlet.py.  This is probably another 
> 
> Will this change what is checked for '_call_'.
> Eventually, I'll obfuscate the string, but that's not
> w arequirement right now. 

Yes, if you change METHODCALL (or if it's an attribute of Servlet and
you modify it in a subclass) then your HTML will need to be modified
to reflect the change.

> >This functionality exists!  Check out lesson #17 of
> >the tutorial:
> 
> the problem with the above approach is that write_html
> is what calls the write_header, write_footer
> write_body_parts, etc and if you don't call that you
> will have to do all of those manually which does not
> seem to be right. 

So, if a method gets called via a GET or POST what is it you want to
change?  write_body_parts()?  write_content()?  My hunch is you can
still do the "return True" trick without much headache.

Or, assuming all you want to change is write_content, you can do
something like this:

1. Create a method, default_write_content, and in prep:

       def prep(self):
          HTMLPage.prep(self)
	  self.write_content = self.default_write_content
	  ...

2. For each "_call_" method named NAME, create a NAME_write_content
   method, eg, if ok_methods_to_call == [foo, bar, baz], then:

       def foo(self):
           self.write_content = self.foo_write_content
	   ...

       def bar(self):
           self.write_content = self.bar_write_content
       	   ...

       def baz(self):
           self.write_content = self.baz_write_content
	   ...

   and each of these methods (foo, bar, baz) should return False or
   drop off the end (returning None); then the write_content method
   appropriate for the particular action will be called when
   write_html is called by respond.  If no "_call_" method is called
   then default_write_content will be used.

Hope this helps,

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From dpopowich at comcast.net  Fri Sep  3 15:28:44 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 14:29:42 2004
Subject: [mod_python] (no subject)
In-Reply-To: <20040903163454.62737.qmail@web41304.mail.yahoo.com>
References: <20040903163454.62737.qmail@web41304.mail.yahoo.com>
Message-ID: <16696.47068.43026.339465@fenway.local.>


Vinj Vinj writes:
> Thanks for the post. I'm using mpservlet extensively
> and will probably have a lot of questions over the
> next several weeks. So please have patience with me. 

No problem.  I'll answer your questions as promptly as I can.

> I'm surprised that it took me so long to find
> mpservlet. I've looked at all the web publishing
> technologies for python several times over and am
> surprised that I jsut stumbled across mpservelt and
> loved it. I would recomend you do the following:

I only published it May 25 of this year.  And then only to
this list and PyPI.

> 1. Put a link on webware site. Most people who use
> servlets look there as well. 

I thought of posting an announcement on the webware discussion list,
but I thought that'd be a bit tacky.  But if you wanted to??  :-)

Otherwise, word of mouth seems to be slowly working.

> 2. (Done) put a demo site up. The demo were excellent
> and really helped me get up the learning curve fast. 

The software was actually finished in February.  It took me a while to
find the time to write the documentation and tutorial which I thought
crucial before publishing.  Without them (and particularly the
tutorial), I feared it would be lost in the forest of python webtools.

> 3. Like with most things python, I love the fact that
> if you don't understand something or want to change
> the functionality you can look at the code. 

And if you do want to make changes I encourage subclassing; this will
make merging your code with updates MUCH easier.  The joy of OOP.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From vinjvinj at yahoo.com  Fri Sep  3 12:42:54 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Fri Sep  3 14:43:14 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
Message-ID: <20040903184254.45322.qmail@web41310.mail.yahoo.com>

>Or, assuming all you want to change is
>write_content, you can do
>something like this:

It seems the most common use case would be that a
_call_ action will want to overwrite write_content so
we probably should make that the easiest while
allowing the other alternatives as well. 


From vinjvinj at yahoo.com  Fri Sep  3 12:54:10 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Fri Sep  3 14:54:13 2004
Subject: [mod_python] How to handle exceptions and initialization in
	mpservlet
Message-ID: <20040903185410.408.qmail@web41304.mail.yahoo.com>

It woudl be helpful to add to the tutorial how to
handle exceptions in mpservlet. I have spent a
signifcant amount of time trying to track down
exceptions. 

1. If there is an exception in a function called
thorugh _call_ the servlet just returns a blank page. 

I added a try/except block in respond using the
following two receips from ASPN (I've attached the
code). This not only gives you the exceptions but also
gives the values of the local variables.

2. Add a file upload example to the tutorial

3. How do you initialize server level code. I plan on
having several python processes (each linked to one
apache fork) listening on each port and then use a
sticky load balancer to ake sure the user goes back to
the same process that was handling his request. Also
in my db I keep track of all the mod_python servers.
Each of these need to read from its own configuration
file. I was planning on putting a PYTHON_OPTION in the
httpd configuration. But how do i get access to it at
init time. I know you can get to it by req.get_option
but that happens only a request time. Is there any way
to get access to this at mod_python initialization
time. 
import sys, traceback

-----------------------------------------------------

def print_exc_web(servlet):
    """
    Print the usual traceback information, followed by
a listing of all the
    local variables in each frame.
    """
    tb = sys.exc_info()[2]
    while 1:
        if not tb.tb_next:
            break
        tb = tb.tb_next
    stack = []
    f = tb.tb_frame
    while f:
        stack.append(f)
        f = f.f_back
    stack.reverse()
    servlet.writeln(ErrorMsg())
    servlet.writeln("Locals by frame, innermost last")
    for frame in stack:
        servlet.writeln('')
        servlet.writeln("Frame %s in %s at line %s" %
(frame.f_code.co_name,
                                            
frame.f_code.co_filename,
                                            
frame.f_lineno))
        for key, value in frame.f_locals.items():
            servlet.writeln("\t%20s = " % key,)
            #We have to be careful not to cause a new
error in our error
            #printer! Calling str() on an unknown
object could cause an
            #error we don't want.
            try:
                servlet.writeln(value)
            except:
                servlet.writeln("<ERROR WHILE PRINTING
VALUE>")

def ErrorMsg(escape=0):
    """
    returns: string

    simualtes the traceback output and if argemument
    <escape> set to 1 (true) the string will be
    converted to fit into html documents without
problems.
    """
    import traceback, sys, string

    type=None
    value=None
    tb=None
    limit=None
    type, value, tb = sys.exc_info()
    body = "Traceback (innermost last):\n"
    list = traceback.format_tb(tb, limit) +           
traceback.format_exception_only(type, value)
    body = body + "%-20s %s" % (
        string.join(list[:-1], ""),
        list[-1],
        )
    if escape:
        import cgi
        body = cgi.escape(body)
    return body



From nav at bandersnatch.org  Fri Sep  3 15:55:45 2004
From: nav at bandersnatch.org (Nick Vargish)
Date: Fri Sep  3 14:55:40 2004
Subject: [mod_python] Cookie problem with Safari and IE, but not Mozilla
In-Reply-To: <1094138736.41373b7037a20@bandersnatch.org>
References: <1094138736.41373b7037a20@bandersnatch.org>
Message-ID: <1094237745.4138be3148c69@bandersnatch.org>

I fixed the problem by not setting an expiration on the cookies. I tried
that when I noticed the server's clock had drifted quite a bit since it
was set up more than a year ago.

I thought it was interesting that it still worked with Mozilla-based 
browsers, and bombed with the others.

Nick

-- 
Nick Vargish  ||  nav@bandersnatch.org  ||  http://nav.bandersnatch.org/
From davidf at sjsoft.com  Fri Sep  3 22:24:12 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Sep  3 15:24:17 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094217348.13535.12.camel@mike.mediapulse.com>
References: <1094136116.47908@dscpl.com.au>	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<87sma0tmvf.fsf@tapsellferrier.co.uk>	<1094162967.3212.16.camel@mike.mediapulse.com>	<4137F4CA.3060208@sjsoft.com>
	<1094217348.13535.12.camel@mike.mediapulse.com>
Message-ID: <4138C4DC.30009@sjsoft.com>

Michael C. Neel wrote:

>On Fri, 2004-09-03 at 00:36, David Fraser wrote:
>  
>
>>One of the main advantages of jToolkit (our framework) is that is 
>>designed for building applications that are portable between different 
>>databases. I don't see why you need to specify MySQL as the database. 
>>You could specify that it needs to be a relational database.
>>    
>>
>The reasoning for this was the mention in this thread of bench marking
>the results, in which I've learned will have mre to do with your choosen
>database and how you use it than anything a framework does.  The second
>is it would be easier to host all results under one roof if they all
>used the same database, and I know sourceforge runs MySQL.
>  
>
OK so the requirement would be "a bench marking aspect of the bake-off 
will be conducted on systems that use a relational database and run on 
MySQL".

>Considering that all entries will be run under mod_python, and that
>mod_python can setup custom interpters and namespaces/module directories
>per vhost, I don't see any reason they can't live on one host.  Does
>someone's framework *not* run under mod_python 3 / Apache 2.0 / python
>2.3?
>
>If no one is going to try and benchmark the results, then this isn't as
>important.  I do however feel that if we are showcasing the business use
>of the frameworks, then a relational (open source) database should be
>required.  You may not need that for your blog, but if you are looking
>at a framework to be used in a corporate setting this will be very
>important.
>  
>
Yes makes sense. But being able to switch between different databases is 
also a big plus.

I think we're trying to do several things here, all of which are 
important. It might help to itemize them, and decide on the best 
approach to each one. I think this will be more powerful than just a 
simple "who's the best?" result - although we could do that for fun too...

Part of this is that I think it would be very beneficial to 
framework-choosers to see real-life examples of code done for a 
particular framework. The results of this bake-off could be compiled 
on-line so that later on we will have a much more detailed reference of 
the different frameworks and their strengths, weaknesses and stylistic 
differences. Also, new frameworks or frameworks that weren't included 
could be added to the system. This suggests a wiki-style approach. I 
think it also requires that all the example code be under an open source 
license, preferably the Python license (which hasn't been explicitly 
stated).

I wonder if it would be good to propose 3 or more different challenges 
for the bakeoff. Frameworks could only enter some if they don't want to 
go for the grand prize.
Something like:
1) Hello World - very helpful to see the basics of how an application is 
constructed, give a feel for the system
2) Simple Application that may not require heavy database work
3) Complex Application requiring a database backend

An initial list of things we are trying to compare:

Features
  This would be partly assessed through the application
  - database support
  - session support
  - localization
  - other features (even those that are not used in the bakeout)
Flexibility
  Some frameworks may be more suited to particular tasks.
Style of interface
  What kind of HTML does the framework produce
  Is it possible to make it look really slick...
Style of code
  Each framework lends itself to a different style, and this makes a 
difference when choosing frameworks.
  This makes the source code examples a crucial part of the bake-off.
  This would include:
    Templicity
      what is the framework's approach to generating HTML code?
      templates / objects that generate it / strings in code?
      How suitable are the templates for web developers?
Speed and scalability
  This would be the benchmark...
Stability
  How prone is the system to errors?
Simplicity
  How easy is it to get going with the system?

I guess there could be other things ... the argument against this might 
be that its trying to do too much. But I actually think all the 
available material for the above *has* to be generated for the bakeoff, 
its a case of working out how to present it properly afterwards...

And may be not just afterwards, but during ... would be quite fun to see 
the results developing as it goes along.

David
From davidf at sjsoft.com  Fri Sep  3 22:33:42 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Sep  3 15:33:58 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <m2y8jr9vq0.fsf@fenway.local.>
References: <41350AFB.4050201@earthlink.net> <m2y8jr9vq0.fsf@fenway.local.>
Message-ID: <4138C716.6030909@sjsoft.com>

Daniel Popowich wrote:

>>There are a lot of different application frameworks that are popping up 
>>that use mod_python.  That's a good thing!  Would anyone be interested 
>>in having a "bake-off" to show the capabilities of each framework?  I'm 
>>thinking that if we could come up with an easy but non-trivial 
>>application, various people could implement it using their favorite 
>>framework.  The results would not only be a nice comparison of different 
>>frameworks, but would provide some nice examples for newbies.
>>    
>>
>
>I have no objection to a bake-off and would be happy to write the
>mpservlet version.
>
>I agree with those that have said (or said something similar to):
>
>Each developer should be provided with:
>
>  1. Business logic as python classes
>  
>
The trouble with providing the business logic is that it may be more / 
less suited to a framework's approach.
It is nice to see how each framework responds to the same business logic 
though.
But it is important to craft it in such a way that it is flexible.
For example, it shouldn't make too many assumptions about global objects 
being left around between calls as this can vary between frameworks. 
Also, I don't think the business logic should handle the database as 
some of the frameworks handle that...

David
From davidf at sjsoft.com  Fri Sep  3 22:35:27 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Sep  3 15:35:33 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <m21xhjbcbh.fsf@fenway.local.>
References: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
	<m21xhjbcbh.fsf@fenway.local.>
Message-ID: <4138C77F.4020803@sjsoft.com>

Daniel Popowich wrote:

>Vinj Vinj writes:
>
>  
>
>>...I'm trying to use _call_ but have some questions suggestions. My
>>site has a yahoo like interface which has a lot of links which
>>perform actions. These actions(links) go thorugh http get.
>>
>>I changed the repsond so that the servlet looks for the _call_ form
>>variable function gets called even if it comes from a get request.
>>
>>    
>>
>
>I restricted the use of the _call_ mechanism to POSTs for security
>reasons.  Granted, POSTs are no more secure than GETs, but at least
>with POSTs you don't see the data in the URL, staring you in the
>face.  And the thought calls to methods visible in the browser url
>window didn't thrill me.  I've considered adding an attribute to
>Servlet, say, allow_call_with_get, defaulting to false; then a
>developer can set it to true if they really want to allow this
>feature.  One benefit with this attribute: you can turn it on and off
>per servlet instead of globally across all servlets.
>
>Another thing you can do, to obfuscate the url string so it's not so
>obvious a method is being called: change the value of METHODCALL at
>the top of servlet.py.  This is probably another candidate for
>turning into an attribute of Servlet.
>  
>
This is security by obscurity. I would think making sure the values 
passed into a function are safe is more important. The danger of 
security by obscurity is it misleads you into not doing this kind of 
checking...
I *love* being able to pass GET variables into functions in other 
peoples programs ... it means web programs are easier to interact with.
Just this week I wrote a script to search for flights on top of an 
airline's website ... it saved me a lot of time

David

From nick at dd.revealed.net  Fri Sep  3 15:47:30 2004
From: nick at dd.revealed.net (Nick)
Date: Fri Sep  3 15:47:40 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <4138C4DC.30009@sjsoft.com>
References: <1094136116.47908@dscpl.com.au>	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>	<41374719.2010901@joreybump.com>	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>	<87sma0tmvf.fsf@tapsellferrier.co.uk>	<1094162967.3212.16.camel@mike.mediapulse.com>	<4137F4CA.3060208@sjsoft.com>	<1094217348.13535.12.camel@mike.mediapulse.com>
	<4138C4DC.30009@sjsoft.com>
Message-ID: <4138CA52.6090504@dd.revealed.net>

David Fraser wrote:

> I think we're trying to do several things here, all of which are 
> important. It might help to itemize them, and decide on the best 
> approach to each one. I think this will be more powerful than just a 
> simple "who's the best?" result - although we could do that for fun too...

(big ol' list of stuff deleted)

This is getting to be really complex, if you want to demonstrate all that. 
I rather prefer the KISS approach that makes it easy to identify how a 
framework addresses a (fairly) common task.  To me, even benchmarking seems 
out of scope, unless you're talking about pure bit pushing power of tasks 
performed entirely within the framework itself.

Because this is Python, and if you really can use Python in a framework, 
that means you could just as well use an extension module that does 
connection pooling and so forth for your database connection.  So how fast 
it performs database operations seems moot.  So, therefore, the more 
interesting item is how the framework lets you integrate/use standard Python 
modules, not which particular one you're using.  If we're going to say 
MySQL, I think it's a matter of showing how MySQL is accessed using the 
framework, not how will it performs.  Because sooner or later it's going to 
be the standard DB API module, yes?

So I think the important thing to focus on is how the framework integrates 
with Python #1 to allow you to write applications.  Then comes your 
"standard" web application tools you need to write stateful applications, 
such as sessions, or you could even call it "server interaction."

In summary, I'd like to see a short list of criteria rather than a long one. 
  And the end result should be a collection of applications written in the 
different frameworks for people to evaluate for themselves rather than some 
list of things to make up a report card where they're all rated on an 
arbitrary scale against an arbitrary list of features.

Nick
From jim-mod-python at jimdabell.com  Fri Sep  3 22:09:52 2004
From: jim-mod-python at jimdabell.com (Jim Dabell)
Date: Fri Sep  3 15:52:07 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <4138C77F.4020803@sjsoft.com>
References: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
	<m21xhjbcbh.fsf@fenway.local.> <4138C77F.4020803@sjsoft.com>
Message-ID: <200409032109.53142.jim-mod-python@jimdabell.com>

On Friday 03 September 2004 20:35, David Fraser wrote:
> This is security by obscurity. I would think making sure the values
> passed into a function are safe is more important. The danger of
> security by obscurity is it misleads you into not doing this kind of
> checking...
> I *love* being able to pass GET variables into functions in other
> peoples programs ... it means web programs are easier to interact with.
> Just this week I wrote a script to search for flights on top of an
> airline's website ... it saved me a lot of time

Actually, there is a security aspect to removing the ability to use query 
string parameters in place of POST variables.  An attacker who can induce 
somebody to visit a page they created can cause the user to automatically 
call these functions by simply using something like:

<img src="http://www.example.com/script?deletesomething=true">

As it will be the user who is executing this function, the only clue you have 
to "making sure the values passed into a function are safe" is that it was 
submitted via query string parameters and not POST variables.

If you don't use the query string parameters when you are expecting POST 
variables, then your users are not susceptible to this form of attack.

-- 
Jim Dabell

From mike_mp at zzzcomputing.com  Fri Sep  3 17:26:39 2004
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Fri Sep  3 16:26:42 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <200409032109.53142.jim-mod-python@jimdabell.com>
References: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
	<m21xhjbcbh.fsf@fenway.local.> <4138C77F.4020803@sjsoft.com>
	<200409032109.53142.jim-mod-python@jimdabell.com>
Message-ID: <53902.69.112.1.169.1094243199.squirrel@69.112.1.169>

> On Friday 03 September 2004 20:35, David Fraser wrote:
>
>
> If you don't use the query string parameters when you are expecting POST
> variables, then your users are not susceptible to this form of attack.


sadly, not true:

<IFRAME width="0" height="0" src="myattack.html"></IFRAME>

myattack.html:

<body onload = "myform.submit()">
<form name="myform" method="POST" action="http://www.example.com/script">
<input type="hidden" name="deletesomething" value="true">
</form>
</body>
From dpopowich at comcast.net  Fri Sep  3 18:38:30 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Fri Sep  3 17:39:50 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <4138C77F.4020803@sjsoft.com>
References: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
	<m21xhjbcbh.fsf@fenway.local.> <4138C77F.4020803@sjsoft.com>
Message-ID: <16696.58454.688091.11384@fenway.local.>


> This is security by obscurity. I would think making sure the values 
> passed into a function are safe is more important. The danger of 
> security by obscurity is it misleads you into not doing this kind of 
> checking...

I fear I was not clear.  I should never have used the word "secure."

It should be understood that there is no difference, security-wise,
between POST and GET.  One is no more secure than the other.  Every
request, regardless of POST or GET should be validated before
processing. 

My decision that mpservlets should not process "_call_" methods for
the GET method was simply to obscure python code.  I did not want
users of a browser to something like this in their url:

   http://somehost.org/some/action?_call_get_user_info%28bob%29=Submit

IMHO, this is just begging for attention.

Anyway, I can see that some developers will want something like that
and so I will add allowing it by setting an attribute to True.

I'm keeping a list of feature requests and will be getting another
release out this fall.


Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From vinjvinj at yahoo.com  Fri Sep  3 16:19:39 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Fri Sep  3 18:19:41 2004
Subject: [mod_python] Potential bug with util.py or mpservlet and upload
Message-ID: <20040903221939.28394.qmail@web41313.mail.yahoo.com>

I get the following error when I try to upload a form
which has two files. I get this exception when I have
a file upload and the file upload variables are
specified in the query_vars or fields.

I'm currently getting the file
self.form['file'].file.read()

I'm getting this with the new util.py version from cvs
which fixes the other bug where I was getting a string
object back for file uploads. 

This took me a good part of 2 hours to figure out :-<

This seems like an important enough patch (the updated
util.py) that should warrant a new mod_python release.



  self.__load_vars()

  File
"C:\Python23\lib\site-packages\mod_python\servlet.py",
line 366, in __load_vars
    val = self.form.getfirst(name, default).strip()

  File
"C:\Python23\lib\site-packages\mod_python\util.py",
line 64, in __getattr__
    raise AttributeError, name

AttributeError: strip

From grahamd at dscpl.com.au  Sun Sep  5 01:15:49 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Sep  4 10:15:58 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <1094217348.13535.12.camel@mike.mediapulse.com>
References: <1094136116.47908@dscpl.com.au>
	<41373545.6070705@dd.revealed.net>	<87wtzcu1gc.fsf@tapsellferrier.co.uk>
	<41374719.2010901@joreybump.com>
	<Pine.LNX.4.60.0409021715290.22883@gondolin.hist.liv.ac.uk>
	<87sma0tmvf.fsf@tapsellferrier.co.uk>
	<1094162967.3212.16.camel@mike.mediapulse.com>
	<4137F4CA.3060208@sjsoft.com>
	<1094217348.13535.12.camel@mike.mediapulse.com>
Message-ID: <EBB618B8-FE7C-11D8-887D-000393DCF16E@dscpl.com.au>


On 03/09/2004, at 11:15 PM, Michael C. Neel wrote:

> Considering that all entries will be run under mod_python, and that
> mod_python can setup custom interpters and namespaces/module 
> directories
> per vhost, I don't see any reason they can't live on one host.  Does
> someone's framework *not* run under mod_python 3 / Apache 2.0 / python
> 2.3?

My bigger problem would be that I use mod_python as a front end only. 
That
is, the application is not embedded within mod_python but would run in a
separate set of processes which mod_python content handlers communicate 
to
across a messaging system. The first problem is whether within the 
context
of setting stuff up under SourceForge, whether one even has the ability 
to
run separate processes. The second problem is that the messaging system
support is built on top of C++ code. Thus, there would be a need to be 
able
to build the C++ code and Python wrapper module and be able to install 
it
within the SourceForge environment. If I know the correct host type, it 
can
be compiled on the SourceForge compile farm, so would be more concerned
about the first issue.

I do have my own hosting site, but the mod_python on there is a bit 
broken
because when they linked apache, they didn't link against reentrant 
libc.a
with thread library functions. Thus not possible to build mod_python 
with
thread support and thus cannot use messaging system which requires 
threading.
Only other option is for me to start hosting off my home machine.

--
Graham Dumpleton (grahamd@dscpl.com.au)

From dpopowich at comcast.net  Sun Sep  5 16:38:15 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Sun Sep  5 15:39:09 2004
Subject: [mod_python] How to handle exceptions and initialization in
	mpservlet
In-Reply-To: <20040903185410.408.qmail@web41304.mail.yahoo.com>
References: <20040903185410.408.qmail@web41304.mail.yahoo.com>
Message-ID: <16699.27431.43943.664863@h00a0cc25a952.ne.client2.attbi.com>


Vinj Vinj writes:
> It woudl be helpful to add to the tutorial how to
> handle exceptions in mpservlet. I have spent a
> signifcant amount of time trying to track down
> exceptions. 

It's probably fair to say that the tutorial assumes you are already a
user of mod_python and have a basic understanding of how it works.  I
should probably do a sweep through the tutorial with an eye of someone
who has never used mod_python before.

I use "PythonDebug on" in my apache configs.  All python exceptions go
to the browser and I can quickly debug the problem.  If it's a known
possible exception that a production system can come across, I wrap
them in try/except and "do the right thing" for my app.  In other
words, it's just python code, no special handling is needed in
mpservlets that you wouldn't do in other python programs or mod_python
request handlers.  Of course, you should familiarize yourself with
raising apache.SERVER_RETURN with an appropriate argument, but that's
just mod_python out-of-the-box.

> 1. If there is an exception in a function called
> thorugh _call_ the servlet just returns a blank page. 

I cannot reproduce this problem.  When I raise an exception in a
"_call_" method, the exception propagates back to the browser,
assuming PythonDebug is on.  I have attached a Servlet to the bottom
of this email that "works for me."

> 2. Add a file upload example to the tutorial

Agreed.  I'll add one for the next release.

> 3. How do you initialize server level code...

This is right up there with "how do I maintain global data?" as a FAQ.
What you're after is an Application abstraction which mod_python
doesn't really provide.  The closest thing is the PythonImport
directive in conjuction with interpreter naming.  See section 3.12 of
the mod_python FAQ and section 4.1 of the mod_python manual.

It is on my to-do list to provide an Application abstraction layer in
future versions of mpservlets.  This is non-trivial because of the
differences in apache MPMs, so I'm not sure how soon it will be out.
Grisha's implementation of Session is an example of what it takes to
make your classes "mpm-free", as it were.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/


======================================================================
testcall.mps (NOTE: I use HyperText)
======================================================================
# -*- python -*-

from mod_python.servlet import HTMLPage
from HyperText.HTML import *

class testcall(HTMLPage):

    def prep(self):
        HTMLPage.prep(self)
        self.called = 'none'

    def write_content(self):
        form = FORM(method='POST')
        form.append(INPUT(type='submit', name='_call_noE()',
                          value='No Exception'), " ",
                    INPUT(type='submit', name='_call_E()',
                          value='Exception'))

        self.writeln('Called: ', self.called, HR(),
                     form, HR())


    def noE(self):

        self.called = 'noE'

    def E(self):

        self.called = 'E'

        raise 'EXCEPTION'

    ok_methods_to_call = [noE, E]
    
        
======================================================================
output in my browser when I click on "Exception" button
======================================================================

Mod_python error: "PythonHandler mod_python.servlet"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/local/lib/python2.3/site-packages/mod_python/servlet.py", line 1455, in handler
    if not servlet.respond():

  File "/usr/local/lib/python2.3/site-packages/mod_python/servlet.py", line 913, in respond
    return Servlet.respond(self) or self.write_html()

  File "/usr/local/lib/python2.3/site-packages/mod_python/servlet.py", line 636, in respond
    return method(self, *args)

  File "/home/popowich/public_html/py/testcall.mps", line 31, in E
    raise 'EXCEPTION'

EXCEPTION

From bje at apnic.net  Mon Sep  6 10:01:57 2004
From: bje at apnic.net (Byron Ellacott)
Date: Sun Sep  5 19:00:43 2004
Subject: [mod_python] mod_python bake-off?
In-Reply-To: <871xhmxqno.fsf@tapsellferrier.co.uk>
References: <41350AFB.4050201@earthlink.net>	<87isayyih1.fsf@tapsellferrier.co.uk>	<656b799f0408312047165979f9@mail.gmail.com>	<41358DF0.6090906@sjsoft.com>
	<871xhmxqno.fsf@tapsellferrier.co.uk>
Message-ID: <413B9AE5.4050008@apnic.net>

Nic Ferrier wrote:
> I agree. I think that a significant portion of the applications should
> be some sort of database access though.

That'd be great if you were interested only in application frameworks 
that provide a database access layer.

I consider a web app framework to be that which provides the UI layer of 
an application.  You should be able to stick any (or no) database 
framework you like behind it.

 From that perspective, it'd be more appropriate to provide a library 
that does the data manipulation and ask for frontends to it.

-- 
bje
From dpopowich at comcast.net  Sun Sep  5 21:59:37 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Sun Sep  5 21:00:28 2004
Subject: [mod_python] Potential bug with util.py or mpservlet and upload
In-Reply-To: <20040903221939.28394.qmail@web41313.mail.yahoo.com>
References: <20040903221939.28394.qmail@web41313.mail.yahoo.com>
Message-ID: <16699.46713.646085.732021@h00a0cc25a952.ne.client2.attbi.com>


Vinj Vinj writes:
> I get the following error when I try to upload a form
> which has two files. I get this exception when I have
> a file upload and the file upload variables are
> specified in the query_vars or fields.

You CANNOT use query_vars for file uploads.  As the documentation
states, you can only use query_vars to create instance variables of
type string, list or dict.

Of course, query_vars SHOULD support file types for uploads and it's
on my to-do list for a future release.  In the meantime you can mimic
it by using:

    self.UPLOAD = self.form.getfirst(UPLOAD)

where UPLOAD is the string value you gave the NAME attribute of the
INPUT tag.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From brian.bird at securetrading.com  Mon Sep  6 12:11:24 2004
From: brian.bird at securetrading.com (Brian Bird)
Date: Mon Sep  6 06:11:32 2004
Subject: [mod_python] Bug in BaseSession.py
Message-ID: <01e801c493f9$dd9b78b0$190b030a@Menai.local>

I posted a similar question about this a while ago but got no reply, so I've
done some more investigation:

In Session.py, the BaseSession class takes an optional secret parameter.
However, when the cookie is created it's type is not checked to ensure it is
of type "SignedCookie" instead of just "Cookie". The documentation
(http://www.modpython.org/live/current/doc-html/pyapi-cookie-classes.html)
says you must do this otherwise the secret parameter is essentially
irrelevant.

(I can't write my own subclass to fix this because the cookies variable is
local and unavailable to subclasses)

I'd suggest having an extra couple of lines at line 117 of Session.py saying
something like:

if secret and (type(cookies[COOKIE_NAME]) is not Cookie.SignedCookie):
	raise Exception("Tampered Cookie")

Or perhaps instead of raising an exception we should just not set self._sid
which will mean the existing cookie will be ignored:

if cookies.has_key(COOKIE_NAME):
	if secret and (type(cookies[COOKIE_NAME]) is not
Cookie.SignedCookie):
		pass
	else:
		self._sid = cookies[COOKIE_NAME].value


Any comments? I need this fixing for the project I'm writing - if there are
no better suggestions, how do I get this patched? I think the second
solution is better (but only because it's more convenient for my particular
project ;-) so perhaps someone can think of a more generic solution?

Thanks,
Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040906/9f5126e2/attachment.html
From ccurvey at earthlink.net  Mon Sep  6 17:08:03 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Mon Sep  6 15:52:45 2004
Subject: [mod_python] bake-off use cases
Message-ID: <413CC3A3.6050402@earthlink.net>

Hi all,

Thought I would post a list of candidate use-cases for the timesheet 
application.  While these don't cover *everything* that I'd want in a 
timesheet application, I think they are enough to showcase strategies 
for handling sessions, persistence, permissions, and forms.   Actors for 
each use case are listed in parentheses.

Login (Any user)
Maintain Projects (Administrator)
Maintain Users (Administrator)
Enter/Amend Timecard (Authenticated user)
Create Project Time Report (Authenticated user)
Create User Time Report (Authenticated user)

I have posted these at http://www.chriscurvey.com/mpbo, and turned on 
discussions so that folks can make comments.  Of course, this server is 
sitting in my home behind an ADSL line, so if someone has a more 
reliable/speedy location to put it, we can certainly move it there.

On the UI side, I am trying to entice a UI-savvy buddy of mine to create 
pages for us in exchange for a tray of brownies and some publicity for 
his services.

-Chris





From vmanera at manord.com  Tue Sep  7 10:52:49 2004
From: vmanera at manord.com (Manera, Villiam)
Date: Tue Sep  7 03:54:19 2004
Subject: [mod_python] R: servlet form against publisher
Message-ID: <52DC70C1C1575C418CB033523A29CF14104999@exchange2000.manord.com>


Date: 03 Sep 2004 11:18:18 -0400
From: Daniel Popowich <dpopowich@comcast.net>
Subject: Re: [mod_python] servlet form against publisher
To: mod_python user mailing list <mod_python@modpython.org>
Message-ID: <m23c1zbcud.fsf@fenway.local.>


Manera, Villiam writes:

>> ........
>> Difference in retrieve fields from Form between publisher and servlet:
>> 
>> In publischer : req.form = util.FieldStorage(req, keep_blank_values=1)
>> 
>> In servlet : self.form = util.FieldStorage(self.req)        
>> 
>> So in servlet the fields not filled are not inserted in  self.form.list
>> 
>> Why this choice??

>Two reasons:

>1) Assuming you're going to retrieve the field like this:
>
>     field = self.form.getfirst('fieldname', somedefault)
>
>   then returning blank values is meaningless: regardless of whether
>   or not the field was blank you'll get your default.

>2) With the mechanics of query_vars and form_vars in mpservlets, re
>   automatic retrieval of fields and setting them as instance
>   variables and setting defaults for missing fields, there is no
>   need to keep blank values.

>Daniel Popowich

===================================== remark ==================================

Ok, I suppose this reason, and I agree.
But for me will be useful to have a variable in order to choose keep_blank_values=1 when I need it.

And I need it for most of the routine already written that I'm modifying in order to work fine if they are called from publisher or from servlet.
This is un example of help_cliente.mps:

------------------------------
from _docBase_mps import *

class help_cliente(docBase_mps_FinestreHelp):
	def write_content(self):
		doc = finestre_help.help_cliente(self)
		self.writeln(str(doc) %self.session)
------------------------------
this is a wrap around finestre_help.help_cliente that work under publisher

and below a class with the prep redefined because there no choice for keep_blank_values=1.
With keep_blank_values = 1 will be possible do in high level:
		pard = self.session
		for F in self.form.list:
				if pard.has_key(F.name): 
					if type(pard[F.name]) == ListType: pard[F.name].append(F.value)
					else : pard[F.name] = [pard[F.name],F.value]
				else: pard[F.name] = F.value 
and all the fields of the form are inserted in self.session, that is the scenario that old 
publisher program expect	
#=========================== docBase_mps_FinestreHelp ==============================
class docBase_mps_FinestreHelp(docBase_mps):
	title = ''
	.....
	
	def prep(self):
		docBase_mps.prep(self)
		self.session['suffisso_funzione_js'] = self.form.getfirst('suffisso_funzione_js')
		self.session['nome_colonna_input'] = self.form.getlist('nome_colonna_input')
		self.session['nome_returnback'] = self.form.getlist('nome_returnback')
		for el in self.form.getlist('nome_returnback'):
			self.session[el] = self.form.getfirst(el,'')


Villiam Manera

From niklasmls at saers.com  Tue Sep  7 11:59:31 2004
From: niklasmls at saers.com (Niklas Saers)
Date: Tue Sep  7 04:59:28 2004
Subject: [mod_python] mod_python stops Apache
Message-ID: <20040907105435.V77255@doriath.saers.com>

Hi,
I'm running FreeBSD 5.3-BETA and Apache2 and mod_python 3.1.3, all
installed from ports. All I've added to httpd.conf is:

LoadModule python_module libexec/apache2/mod_python.so
AddHandler python-program .py
PythonDebug On

When Apache starts, it sais:
[Tue Sep 07 08:50:16 2004] [notice] mod_python: Creating 32 session
mutexes based on 150 max processes and 0 max threads.

and then it quits with error-code 0 and no core dumps. What's happening?
How can I keep Python living? If I keep only the LoadModule statement, it
still quits. Without the statement, Apache runs smooth as usual.

Cheers

  Nik
From stefan.oberbichler at umit.at  Tue Sep  7 12:58:25 2004
From: stefan.oberbichler at umit.at (Stefan Oberbichler)
Date: Tue Sep  7 05:58:45 2004
Subject: [mod_python] updating changes
Message-ID: <413D8641.9000201@umit.at>

hi,

i am trying to write some modules with mod_python and then import them
into my index.py. but sometimes the code i wrote in one of the modules
seems not to be updated. so i have to restart apache2. then the code
is "fresh" (my changes get in action).
is this normal behavior or miss i something.

thanks
stefan

p.s. sorry fo my poor english


>  
>

From niklas at chimney.se  Tue Sep  7 16:00:00 2004
From: niklas at chimney.se (Niklas Aldergren)
Date: Tue Sep  7 09:00:05 2004
Subject: [mod_python] mod_python stops Apache
In-Reply-To: <20040907105435.V77255@doriath.saers.com>
References: <20040907105435.V77255@doriath.saers.com>
Message-ID: <D3B87F1F-00CD-11D9-844B-000D93AE0D54@chimney.se>

On 7 sep 2004, at 10.59, Niklas Saers wrote:

> I'm running FreeBSD 5.3-BETA and Apache2 and mod_python 3.1.3, all
> installed from ports. All I've added to httpd.conf is:
>
> LoadModule python_module libexec/apache2/mod_python.so
> AddHandler python-program .py
> PythonDebug On
>
> When Apache starts, it sais:
> [Tue Sep 07 08:50:16 2004] [notice] mod_python: Creating 32 session
> mutexes based on 150 max processes and 0 max threads.
>
> and then it quits with error-code 0 and no core dumps. What's 
> happening?
> How can I keep Python living? If I keep only the LoadModule statement, 
> it
> still quits. Without the statement, Apache runs smooth as usual.

Hello,

I'm running a very similar setup and everything is working fine;

FreeBSD 5.2.1-stable, apache-2.0.50_2 (worker), mod_python 3.1.3 & 
python-2.3.4_1.

All these are built with the default options, except Apache that was 
built with
WITH_THREADS=1 and WITHOUT_IPV6=1. I rebuilt Apache without these 
options and
I could not reproduce your problem

Things to try could be to set the LogLevel of Apache to 'debug', and 
also
run ktrace /usr/local/sbin/httpd -X and examine the results with kdump.

/Niklas

From dpopowich at comcast.net  Tue Sep  7 10:26:22 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Tue Sep  7 09:27:53 2004
Subject: [mod_python] R: servlet form against publisher
In-Reply-To: <52DC70C1C1575C418CB033523A29CF14104999@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF14104999@exchange2000.manord.com>
Message-ID: <16701.46846.909388.202288@fenway.local.>

Manera, Villiam writes:
> 
> Date: 03 Sep 2004 11:18:18 -0400
> From: Daniel Popowich <dpopowich@comcast.net>
> Subject: Re: [mod_python] servlet form against publisher
> To: mod_python user mailing list <mod_python@modpython.org>
> Message-ID: <m23c1zbcud.fsf@fenway.local.>
> 
> 
> Manera, Villiam writes:
> 
> >> ........
> >> Difference in retrieve fields from Form between publisher and servlet:
> >> 
> >> In publischer : req.form = util.FieldStorage(req, keep_blank_values=1)
> >> 
> >> In servlet : self.form = util.FieldStorage(self.req)        
> >> 
> >> So in servlet the fields not filled are not inserted in  self.form.list
> >> 
> >> Why this choice??
> 
> >Two reasons:
> 
> >1) Assuming you're going to retrieve the field like this:
> >
> >     field = self.form.getfirst('fieldname', somedefault)
> >
> >   then returning blank values is meaningless: regardless of whether
> >   or not the field was blank you'll get your default.
> 
> >2) With the mechanics of query_vars and form_vars in mpservlets, re
> >   automatic retrieval of fields and setting them as instance
> >   variables and setting defaults for missing fields, there is no
> >   need to keep blank values.
> 
> >Daniel Popowich
> 
> ===================================== remark ==================================
> 
> Ok, I suppose this reason, and I agree.
> But for me will be useful to have a variable in order to choose keep_blank_values=1 when I need it.
> 
> And I need it for most of the routine already written that I'm modifying in order to work fine if they are called from publisher or from servlet.

I still don't quite understand why you would need it.  Let's say a
request comes in like this:

   http://myserver/myservlet?foo=

In the current system, if I set query_vars like this:

   query_vars = ['foo']

then you get exactly what you need: empty values are stripped by
FieldStorage, but Servlet, not seeing the key, will set the instance
variable foo to its default, an empty string.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From jacob at jacobian.org  Tue Sep  7 14:27:24 2004
From: jacob at jacobian.org (Jacob Kaplan-Moss)
Date: Tue Sep  7 14:27:22 2004
Subject: [mod_python] Problems with mod_python on OSX
Message-ID: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org>

Hey all --

I'm trying to get mod_python working on my PowerBook, and I'm running 
into a problem that's leaving me stumped.  I installed Apache2 from 
source, and built mod_python by doing:

	- ./configure --prefix=/usr/local/apache2 
--with-apxs=/usr/local/apache2/bin/apxs
	- Edit src/Makefile; add "OPT=-DEAPI" (line 28)
	- make && make install

I'm using the stock Python (2.3), and this seems to work; 
/usr/local/apache2/bin/apachectl start works, and I see:

	[Tue Sep 07 13:15:21 2004] [notice] Apache/2.0.50 (Unix) 
mod_python/3.1.3
	Python/2.3 configured -- resuming normal operations

in my Apache error log.

However, any time I try to use mod_python, I get an internal service 
error, and the error log contains only this cryptic line:

	[Tue Sep 07 13:15:37 2004] [warn] Cannot get media type from 
'cgi-script'

Right now, I'm doing the bare basics; here's the relevant section of my 
httpd.conf:

     <Directory "/Users/jacob/Sites/PyTest">
         AddHandler mod_python .py
         PythonHandler test
         PythonDebug On
     </Directory>

and test.py contains:

	from mod_python import apache

	def handler(req):
		req.content_type = "text/plain"
		req.wite("It worked")
		return apache.OK

Does anyone have any idea what's going on?

Thanks a bunch,

Jacob

From jim-mod-python at jimdabell.com  Tue Sep  7 21:35:48 2004
From: jim-mod-python at jimdabell.com (Jim Dabell)
Date: Tue Sep  7 15:16:57 2004
Subject: [mod_python] Questions on _call_ with mp servlets and python
In-Reply-To: <53902.69.112.1.169.1094243199.squirrel@69.112.1.169>
References: <20040902192108.87790.qmail@web41314.mail.yahoo.com>
	<200409032109.53142.jim-mod-python@jimdabell.com>
	<53902.69.112.1.169.1094243199.squirrel@69.112.1.169>
Message-ID: <200409072035.48633.jim-mod-python@jimdabell.com>

On Friday 03 September 2004 21:26, mike bayer wrote:
> > On Friday 03 September 2004 20:35, David Fraser wrote:
> >
> > If you don't use the query string parameters when you are expecting POST
> > variables, then your users are not susceptible to this form of attack.
>
> sadly, not true:

Well yes, of course Javascript can do it, but only if you don't follow CERT's 
advice by disabling client-side scripting for untrusted websites.  I was 
making an unstated assumption there - it's still a security measure, but upon 
re-reading my post, I agree it's not as important as I made it sound.


-- 
Jim Dabell

From jim-mod-python at jimdabell.com  Tue Sep  7 21:56:50 2004
From: jim-mod-python at jimdabell.com (Jim Dabell)
Date: Tue Sep  7 15:38:04 2004
Subject: [mod_python] Sessions auto-creation
Message-ID: <200409072056.50460.jim-mod-python@jimdabell.com>


I've been looking for a way of instantiating a Session object without 
generating a cookie.  At the moment, cookies are sent even in a read-only 
context, and I can't find a way of disabling them.  I've checked the manual 
and the mailing list archives, but not turned up anything useful.

Is there a mod_python bug tracker anywhere?

-- 
Jim Dabell

From Administrator at leebrown.org  Tue Sep  7 17:36:49 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Tue Sep  7 16:37:25 2004
Subject: [mod_python] Problems with mod_python on OSX
References: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org>
Message-ID: <018d01c4951a$668495f0$0200a8c0@UberBox>

Greetings!

If  "/Users/jacob/Sites/PyTest" is not an absolute physical path, Python
will have all sorts of troubles.  For some reason, virtual paths and path
aliases will not work.

For example, you would think that

   Alias /fred/ "C:/webstuff/websites/mysite/fred/"
   ...

and then

   <Directory "/fred/">
          AddHandler mod_python .py
          PythonHandler test
         ...

would work, but it doesn't.  But

   <Directory "C:/webstuff/websites/mysite/fred/">
          AddHandler mod_python .py
          PythonHandler test
         ...

works just fine.  I suspect that this is because the handler intercepts the
request before Apache has had a chance to resolve aliases or virtual paths.
(I think so, anyway.  I'm somewhat of a newbie myself.)


Best Regards,
Lee E. Brown
----- Original Message ----- 
From: "Jacob Kaplan-Moss" <jacob@jacobian.org>
To: <mod_python@modpython.org>
Sent: Tuesday, September 07, 2004 2:27 PM
Subject: [mod_python] Problems with mod_python on OSX


> Hey all --
> 
> I'm trying to get mod_python working on my PowerBook, and I'm running 
> into a problem that's leaving me stumped.  I installed Apache2 from 
> source, and built mod_python by doing:
> 
> - ./configure --prefix=/usr/local/apache2 
> --with-apxs=/usr/local/apache2/bin/apxs
> - Edit src/Makefile; add "OPT=-DEAPI" (line 28)
> - make && make install
> 
> I'm using the stock Python (2.3), and this seems to work; 
> /usr/local/apache2/bin/apachectl start works, and I see:
> 
> [Tue Sep 07 13:15:21 2004] [notice] Apache/2.0.50 (Unix) 
> mod_python/3.1.3
> Python/2.3 configured -- resuming normal operations
> 
> in my Apache error log.
> 
> However, any time I try to use mod_python, I get an internal service 
> error, and the error log contains only this cryptic line:
> 
> [Tue Sep 07 13:15:37 2004] [warn] Cannot get media type from 
> 'cgi-script'
> 
> Right now, I'm doing the bare basics; here's the relevant section of my 
> httpd.conf:
> 
>      <Directory "/Users/jacob/Sites/PyTest">
>          AddHandler mod_python .py
>          PythonHandler test
>          PythonDebug On
>      </Directory>
> 
> and test.py contains:
> 
> from mod_python import apache
> 
> def handler(req):
> req.content_type = "text/plain"
> req.wite("It worked")
> return apache.OK
> 
> Does anyone have any idea what's going on?
> 
> Thanks a bunch,
> 
> Jacob
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jacob at jacobian.org  Tue Sep  7 16:44:32 2004
From: jacob at jacobian.org (Jacob Kaplan-Moss)
Date: Tue Sep  7 16:44:38 2004
Subject: [mod_python] Problems with mod_python on OSX
In-Reply-To: <018d01c4951a$668495f0$0200a8c0@UberBox>
References: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org>
	<018d01c4951a$668495f0$0200a8c0@UberBox>
Message-ID: <B8B9B788-010E-11D9-A407-000D933647EE@jacobian.org>

On Sep 7, 2004, at 3:36 PM, Lee E. Brown wrote:
> If  "/Users/jacob/Sites/PyTest" is not an absolute physical path, 
> Python
> will have all sorts of troubles.  For some reason, virtual paths and 
> path
> aliases will not work.
[snip example]

That's interesting -- I didn't know that.

However, the directory in question certainly does exist; if I remove 
the Python* directives, I can serve files from that directory just 
fine.

Thanks,

Jaocb

From Administrator at leebrown.org  Tue Sep  7 17:54:51 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Tue Sep  7 16:55:15 2004
Subject: [mod_python] Problems with mod_python on OSX
References: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org><018d01c4951a$668495f0$0200a8c0@UberBox>
	<B8B9B788-010E-11D9-A407-000D933647EE@jacobian.org>
Message-ID: <01c101c4951c$eb32bb90$0200a8c0@UberBox>

Greetings!

It's not just a matter of existing - it has to be given in the config file
in the form of an Absolute Physical Path Statement.  As in starting with a
drive identifier and having a complete path train from the root of that
drive all the way to the destination directory.

Best Regards,
Lee E. Brown

----- Original Message ----- 
From: "Jacob Kaplan-Moss" <jacob@jacobian.org>
To: "mod_python user mailing list" <mod_python@modpython.org>
Sent: Tuesday, September 07, 2004 4:44 PM
Subject: Re: [mod_python] Problems with mod_python on OSX


> On Sep 7, 2004, at 3:36 PM, Lee E. Brown wrote:
> > If  "/Users/jacob/Sites/PyTest" is not an absolute physical path,
> > Python
> > will have all sorts of troubles.  For some reason, virtual paths and
> > path
> > aliases will not work.
> [snip example]
>
> That's interesting -- I didn't know that.
>
> However, the directory in question certainly does exist; if I remove
> the Python* directives, I can serve files from that directory just
> fine.
>
> Thanks,
>
> Jaocb
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jacob at jacobian.org  Tue Sep  7 17:00:09 2004
From: jacob at jacobian.org (Jacob Kaplan-Moss)
Date: Tue Sep  7 17:00:18 2004
Subject: [mod_python] Problems with mod_python on OSX
In-Reply-To: <01c101c4951c$eb32bb90$0200a8c0@UberBox>
References: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org><018d01c4951a$668495f0$0200a8c0@UberBox>
	<B8B9B788-010E-11D9-A407-000D933647EE@jacobian.org>
	<01c101c4951c$eb32bb90$0200a8c0@UberBox>
Message-ID: <E7681776-0110-11D9-A407-000D933647EE@jacobian.org>

On Sep 7, 2004, at 3:54 PM, Lee E. Brown wrote:
> It's not just a matter of existing - it has to be given in the config 
> file
> in the form of an Absolute Physical Path Statement.  As in starting 
> with a
> drive identifier and having a complete path train from the root of that
> drive all the way to the destination directory.

Actually, I'm on OSX here, so no drive identifiers, but I get your 
drift.  Unfortunately (for me), a nonexistent path is not my problem

Thanks again,

Jacob

From list at joreybump.com  Tue Sep  7 18:16:32 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Sep  7 17:16:43 2004
Subject: [mod_python] Problems with mod_python on OSX
In-Reply-To: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org>
References: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org>
Message-ID: <413E2530.7030503@joreybump.com>

Jacob Kaplan-Moss wrote:

> and test.py contains:
> 
>     from mod_python import apache
> 
>     def handler(req):
>         req.content_type = "text/plain"
>         req.wite("It worked")
                ^ typo?
>         return apache.OK
> 
> Does anyone have any idea what's going on?

From Administrator at leebrown.org  Tue Sep  7 18:35:14 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Tue Sep  7 17:35:34 2004
Subject: [mod_python] Problems with mod_python on OSX
References: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org><018d01c4951a$668495f0$0200a8c0@UberBox>
	<B8B9B788-010E-11D9-A407-000D933647EE@jacobian.org>
	<01c101c4951c$eb32bb90$0200a8c0@UberBox>
	<E7681776-0110-11D9-A407-000D933647EE@jacobian.org>
Message-ID: <01cd01c49522$8fb77c50$0200a8c0@UberBox>

Greetings!

No drive identifiers?  How does OSX handle having more than one hard drive?
I'm sure each drive has to have a unique volume name, which is the same
thing.

Also I've found that I had to explicitly set the AllowOverride directive,
even though I'm not using .htaccess files, to get Mod Python to work.  See
Paragraph 2 under Section 2.4 of the Mod Python manual.

Not to belabor the issue of an absolute physical path, but please look at
this configuration:

DocumentRoot "c:/webdev/sites/home"
...
 <Directory "c:/webdev/sites/home">
    Options All
    AllowOverride All
    AddHandler mod_python .py
    PythonHandler mod_python.publisher
    PythonDebug On
    .....

Under this configuration, Mod Python runs just fine.  But note that I can
change the Directory statement to either

<Directory "/webdev/sites/home">

 or

<Directory "/">

and I can serve pages out of either of those two all day long but Mod Python
WILL NOT RUN and will report the error which you describe.

In all three cases, the path exists and in all three cases you wind up in
the same place staring at the same files.  But only in the first case, the
one with the absolute physical path statement, will Mod Python work
correctly.

Best Regards,
Lee E. Brown

----- Original Message ----- 
From: "Jacob Kaplan-Moss" <jacob@jacobian.org>
To: "Lee E. Brown" <Administrator@leebrown.org>; "mod_python user mailing
list" <mod_python@modpython.org>
Sent: Tuesday, September 07, 2004 5:00 PM
Subject: Re: [mod_python] Problems with mod_python on OSX


> On Sep 7, 2004, at 3:54 PM, Lee E. Brown wrote:
> > It's not just a matter of existing - it has to be given in the config
> > file
> > in the form of an Absolute Physical Path Statement.  As in starting
> > with a
> > drive identifier and having a complete path train from the root of that
> > drive all the way to the destination directory.
>
> Actually, I'm on OSX here, so no drive identifiers, but I get your
> drift.  Unfortunately (for me), a nonexistent path is not my problem
>
> Thanks again,
>
> Jacob
>

From jacob at jacobian.org  Tue Sep  7 18:31:51 2004
From: jacob at jacobian.org (Jacob Kaplan-Moss)
Date: Tue Sep  7 18:31:55 2004
Subject: [mod_python] Problems with mod_python on OSX
In-Reply-To: <01cd01c49522$8fb77c50$0200a8c0@UberBox>
References: <90836345-00FB-11D9-A407-000D933647EE@jacobian.org><018d01c4951a$668495f0$0200a8c0@UberBox>
	<B8B9B788-010E-11D9-A407-000D933647EE@jacobian.org>
	<01c101c4951c$eb32bb90$0200a8c0@UberBox>
	<E7681776-0110-11D9-A407-000D933647EE@jacobian.org>
	<01cd01c49522$8fb77c50$0200a8c0@UberBox>
Message-ID: <B6BCEBC2-011D-11D9-A407-000D933647EE@jacobian.org>

Lee --

Thanks for the tip on AllowOverride All; unfortunately, it failed to 
fix anything :(

On Sep 7, 2004, at 4:35 PM, Lee E. Brown wrote:
> No drive identifiers?  How does OSX handle having more than one hard 
> drive?
> I'm sure each drive has to have a unique volume name, which is the same
> thing.

Actually, drive identifiers are a Windows-only "feature" -- on OSX, as 
with most *nix-based operating systems (and probably others I'm unaware 
of), the basic concept is that of "mount points" -- a physical device 
may be mounted at any point in the directory tree.  For example, on my 
server (running Debian Linux), the root device ("/") is one physical 
drive, while all the home directories ("/home") are on a separate drive 
(which is actually a RAID).  Since I have only one drive (and only one 
partition) on my Powerbook, the drive is mounted in the default 
location, which is "/".

> Not to belabor the issue of an absolute physical path [snip]

So, yeah -- I can guarantee that the path indeed exists, and is indeed 
an "absolute physical path".

Thanks for your good intentions, but Apache on Windows has a very 
different set of quirks from the way that Apache runs on a standard 
*nix-like system, so I'm afraid I'm still where I started.

Jacob


From waterthrill at yahoo.no  Wed Sep  8 10:34:33 2004
From: waterthrill at yahoo.no (Ole Jacob Hagen)
Date: Wed Sep  8 03:28:20 2004
Subject: [mod_python] Problems with req.content_type and req.sendfile in IE,
 but Opera/Mozilla works.  
Message-ID: <413EB609.2000209@yahoo.no>

Hi.

I need a workaround for the Internet Explorer browser as this code 
doesn't works:
%% snip of my psp-code %%
    fpdf = PDF_PATH + "/" + "pdf.pdf"
    req.content_type = 'application/pdf'
    req.sendfile(fpdf)

%% end of snip %%

Yes, it works in Opera, konqueror, and Firefox, but not in Internet 
Explorer.
There has to be a workaround for this? There are some companies that 
never will follow a standard....

Cheers,

Ole J.

From vmanera at manord.com  Wed Sep  8 12:00:11 2004
From: vmanera at manord.com (Manera, Villiam)
Date: Wed Sep  8 05:01:40 2004
Subject: [mod_python] servlet form against publishe rR: Mod_python Digest,
	Vol 18, Issue 13 
Message-ID: <52DC70C1C1575C418CB033523A29CF1410499A@exchange2000.manord.com>

>Daniel Popowich wrote:

>I still don't quite understand why you would need it.  Let's say a
>request comes in like this:

>   http://myserver/myservlet?foo=

>In the current system, if I set query_vars like this:

>   query_vars = ['foo']

>then you get exactly what you need: empty values are stripped by
>FieldStorage, but Servlet, not seeing the key, will set the instance
>variable foo to its default, an empty string.

>Daniel Popowich

Yes, this is right and powerful for new programs, I will develop.

I'm thinking a way to move the 1000 programs that have been  written already from  publisher to servlet, probably I'm the only in the world with this need.

I've written something like servlet.__load_vars but instead to setattr(self, name, val) I put them in session[name] = val and the programs will search there.

In order to set query_vars I should enter inside the 1000  programs to discover the variables to set.

If I had the option to set for these kind of programs req.form = util.FieldStorage(req, keep_blank_values=1) in self.form.list I would find all this variables without looking inside the programs.

So I now understand that it is a special need concerning the past instead of the future, and  I may solve it in a other way,  so don't care anymore about it

Villiam

From jim-mod-python at jimdabell.com  Wed Sep  8 12:28:25 2004
From: jim-mod-python at jimdabell.com (Jim Dabell)
Date: Wed Sep  8 06:09:35 2004
Subject: [mod_python] Problems with req.content_type and req.sendfile in
	IE, but Opera/Mozilla works.
In-Reply-To: <413EB609.2000209@yahoo.no>
References: <413EB609.2000209@yahoo.no>
Message-ID: <200409081128.25847.jim-mod-python@jimdabell.com>

On Wednesday 08 September 2004 08:34, Ole Jacob Hagen wrote:
> Hi.
>
> I need a workaround for the Internet Explorer browser as this code
> doesn't works:

"Doesn't work" is very vague.  What do you expect to happen?  What actually 
happens?  What other headers are you sending?

<URL:http://www.catb.org/~esr/faqs/smart-questions.html>


-- 
Jim Dabell

From waterthrill at yahoo.no  Wed Sep  8 14:01:06 2004
From: waterthrill at yahoo.no (Ole Jacob Hagen)
Date: Wed Sep  8 06:54:54 2004
Subject: [mod_python] Problems with req.content_type and req.sendfile
	in IE, but Opera/Mozilla works.
In-Reply-To: <413EB609.2000209@yahoo.no>
References: <413EB609.2000209@yahoo.no>
Message-ID: <413EE672.1070402@yahoo.no>

A closer explanation.

Both IE-5.5 and IE-6.x lists out the file content in a new window, where 
the adobe reader plugins should be activated.

The 5 first lines of PDF-file is:
"%PDF-1.4 3 0 obj << /Length 504 /Filter /FlateDecode"

Could pdf version 1.4 cause the problem?


Cheers,

Ole

Ole Jacob Hagen wrote:

> Hi.
>
> I need a workaround for the Internet Explorer browser as this code 
> doesn't works:
> %% snip of my psp-code %%
>    fpdf = PDF_PATH + "/" + "pdf.pdf"
>    req.content_type = 'application/pdf'
>    req.sendfile(fpdf)
>
> %% end of snip %%
>
> Yes, it works in Opera, konqueror, and Firefox, but not in Internet 
> Explorer.
> There has to be a workaround for this? There are some companies that 
> never will follow a standard....
>
> Cheers,
>
> Ole J.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From cc-modpy at ccnet.xs4all.nl  Wed Sep  8 16:17:21 2004
From: cc-modpy at ccnet.xs4all.nl (Cliff Cunnington)
Date: Wed Sep  8 09:17:25 2004
Subject: [mod_python] Problems with req.content_type and req.sendfile in
	IE, but Opera/Mozilla works.
In-Reply-To: <413EB609.2000209@yahoo.no>
References: <413EB609.2000209@yahoo.no>
Message-ID: <20040908131721.GA2361@ccnet.xs4all.nl>

Ole,

* Ole Jacob Hagen <waterthrill@yahoo.no> [2004-09-08 09:34:33 +0200]:

> I need a workaround for the Internet Explorer browser as this code 
> doesn't works:

I guess you're having the problem described here:
    
    http://www.lowagie.com/iText/faq.html#msie

If so, the following might fix it / (untested with MSIE):

> %% snip of my psp-code %%
from os.path import getsize
>    fpdf = PDF_PATH + "/" + "pdf.pdf"
     # MSIE wants to know the content-length of some files (PDF)
     req.set_content_length(getsize(fpdf))
>    req.content_type = 'application/pdf'
     req.send_http_header()
>    req.sendfile(fpdf)
> 
> %% end of snip %%


HTH,


Cliff

 
From dpopowich at comcast.net  Wed Sep  8 10:26:40 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Wed Sep  8 09:28:06 2004
Subject: [mod_python] servlet form against publishe rR: Mod_python Digest, 
	Vol 18, Issue 13 
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1410499A@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1410499A@exchange2000.manord.com>
Message-ID: <16703.2192.413231.490338@fenway.local.>


Manera, Villiam writes:
> >Daniel Popowich wrote:
> 
> >I still don't quite understand why you would need it.  Let's say a
> >request comes in like this:
> 
> >   http://myserver/myservlet?foo=
> 
> >In the current system, if I set query_vars like this:
> 
> >   query_vars = ['foo']
> 
> >then you get exactly what you need: empty values are stripped by
> >FieldStorage, but Servlet, not seeing the key, will set the instance
> >variable foo to its default, an empty string.
> 
> >Daniel Popowich
> 
> Yes, this is right and powerful for new programs, I will develop.
> 
> I'm thinking a way to move the 1000 programs that have been  written already from  publisher to servlet, probably I'm the only in the world with this need.
> 
> I've written something like servlet.__load_vars but instead to setattr(self, name, val) I put them in session[name] = val and the programs will search there.
> 
> In order to set query_vars I should enter inside the 1000  programs to discover the variables to set.
> 
> If I had the option to set for these kind of programs req.form = util.FieldStorage(req, keep_blank_values=1) in self.form.list I would find all this variables without looking inside the programs.
> 
> So I now understand that it is a special need concerning the past instead of the future, and  I may solve it in a other way,  so don't care anymore about it
> 
> Villiam

I see your problem.  While I don't think I want to add this to the
mainstream distribution, it's actually quite simple (so, perhaps I
should just shut up and do it!).  You can apply the patch attached
below.  It adds a keep_blank_values attribute with a default of 0 to
Servlet, so unless you change something in a subclass, servlets will
behave exactly as they do now.  To get the behaviour you want, set
keep_blank_values to 1 in a subclass, eg:

   MyServlet(HTMLPage):
      keep_blank_values = 1
      ...
      

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/


servlet.patch for version 1.1.5:

-------------- next part --------------
*** servlet.py~	Fri Aug  6 11:33:28 2004
--- servlet.py	Wed Sep  8 09:14:05 2004
***************
*** 199,204 ****
--- 199,205 ----
      content_type = None
      auth_realm = 'Unspecified'
      reusable = True
+     keep_blank_values = 0
      use_session = False
      session = None
      session_timeout = 60 * 30 # 30 minutes
***************
*** 585,591 ****
      
          self.__out = []
  
!         self.form = util.FieldStorage(self.req)
          self.__load_vars()
  
          if self.use_session:
--- 586,592 ----
      
          self.__out = []
  
!         self.form = util.FieldStorage(self.req, self.keep_blank_values)
          self.__load_vars()
  
          if self.use_session:
From adam at dynamicinteraction.co.uk  Wed Sep  8 20:41:06 2004
From: adam at dynamicinteraction.co.uk (Mr. Adam ALLEN)
Date: Wed Sep  8 14:39:05 2004
Subject: [mod_python] updating changes
In-Reply-To: <413D8641.9000201@umit.at>
References: <413D8641.9000201@umit.at>
Message-ID: <1094668866.3613.22.camel@elsol.zwan.mellon-collie.net>

On Tue, 2004-09-07 at 10:58, Stefan Oberbichler wrote:

> i am trying to write some modules with mod_python and then import them
> into my index.py. but sometimes the code i wrote in one of the modules
> seems not to be updated. so i have to restart apache2. then the code
> is "fresh" (my changes get in action).
> is this normal behavior or miss i something.
> 

I've not found the same problem, and this drove me to insanity when I
was first getting to grips with mod_python.

http://www.modpython.org/pipermail/mod_python/2004-August/016202.html

BTW, I don't restart apache2, just send a -HUP signal to the apache
process instead.


-- 
Regards,
Adam Allen.

adam@dynamicinteraction.co.uk
pgp http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x553349DB

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://modpython.org/pipermail/mod_python/attachments/20040908/f5627de3/attachment.bin
From mark at gsoa.net  Wed Sep  8 18:14:54 2004
From: mark at gsoa.net (Mark McClain)
Date: Wed Sep  8 17:15:03 2004
Subject: [mod_python] updating changes
In-Reply-To: <1094668866.3613.22.camel@elsol.zwan.mellon-collie.net>
References: <413D8641.9000201@umit.at>
	<1094668866.3613.22.camel@elsol.zwan.mellon-collie.net>
Message-ID: <20FC9DC3-01DC-11D9-A93C-000A95B33D28@gsoa.net>

Sending HUP signals can get old too.  If you are working on a 
development box just tweak your apache httpd.conf file.  I changed my 
httpd.conf file to cause apache to create a new server for every 
request.  It works well during development because interpreter's 
lifetime is that of the request, and any changes will be available on 
the next request without having to send a signal or explicitly restart 
the server.

Here is the section of my httpd.conf on my development machine:

<IfModule prefork.c>
StartServers         1
MinSpareServers      1
MaxSpareServers     2
MaxClients         150
MaxRequestsPerChild  1
</IfModule>

mark

On Sep 8, 2004, at 2:41 PM, Mr. Adam ALLEN wrote:

> On Tue, 2004-09-07 at 10:58, Stefan Oberbichler wrote:
>
>> i am trying to write some modules with mod_python and then import them
>> into my index.py. but sometimes the code i wrote in one of the modules
>> seems not to be updated. so i have to restart apache2. then the code
>> is "fresh" (my changes get in action).
>> is this normal behavior or miss i something.
>>
>
> I've not found the same problem, and this drove me to insanity when I
> was first getting to grips with mod_python.
>
> http://www.modpython.org/pipermail/mod_python/2004-August/016202.html
>
> BTW, I don't restart apache2, just send a -HUP signal to the apache
> process instead.
>
>
> -- 
> Regards,
> Adam Allen.
>
> adam@dynamicinteraction.co.uk
> pgp http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x553349DB
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From adam at dynamicinteraction.co.uk  Thu Sep  9 00:57:52 2004
From: adam at dynamicinteraction.co.uk (Mr. Adam ALLEN)
Date: Wed Sep  8 18:55:47 2004
Subject: [mod_python] updating changes
In-Reply-To: <20FC9DC3-01DC-11D9-A93C-000A95B33D28@gsoa.net>
References: <413D8641.9000201@umit.at>
	<1094668866.3613.22.camel@elsol.zwan.mellon-collie.net>
	<20FC9DC3-01DC-11D9-A93C-000A95B33D28@gsoa.net>
Message-ID: <1094684271.19118.4.camel@elsol.zwan.mellon-collie.net>

On Wed, 2004-09-08 at 22:14, Mark McClain wrote:
> Sending HUP signals can get old too.  If you are working on a 
> development box just tweak your apache httpd.conf file.  I changed my 
> httpd.conf file to cause apache to create a new server for every 
> request.  It works well during development because interpreter's 
> lifetime is that of the request, and any changes will be available on 
> the next request without having to send a signal or explicitly restart 
> the server.

That's exactly what I was looking for..

Cheers,

-- 
Regards,
Adam Allen.

adam@dynamicinteraction.co.uk
pgp http://pgp.mit.edu:11371/pks/lookup?op=get&search=0x553349DB

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://modpython.org/pipermail/mod_python/attachments/20040908/67971093/attachment.bin
From mike_mp at zzzcomputing.com  Wed Sep  8 21:31:27 2004
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Wed Sep  8 20:31:30 2004
Subject: [mod_python] Session "deadlock" feature / bug ?
Message-ID: <61521.69.112.1.169.1094689887.squirrel@69.112.1.169>

hi -

this is a slightly tricky one to demonstrate.  Running apache 2.0 with the
worker MPM on linux, it appears that a page that requests a Session, and
then takes a really long time to finish, blocks certain other
session-enabled pages from completing, regardless of which session ID they
have.  though not every page, just maybe ones in the same child process ? 
not totally sure.

I am assuming this behavior is due to the global locking mechanism used
within Session (to which I cant readily find documentation).   I have a
feeling this is "expected" behavior as opposed to a bug....though it sort
of sucks if thats the case.  I suppose I am looking for a description of
why the below example does what it does.

first, run apache with the worker MPM with a pretty small process/thread
size, say 5 ThreadsPerChild and 2 StartServers.

then, mptest.py, configured just like mptest.py in the mod python
documentation:

from mod_python import apache, util, Session
from time import sleep

def handler(req):
        req.content_type = 'text/html'

        session = Session.Session(req)

        fields = util.FieldStorage(req)
        if fields.has_key('pause'):
                req.write("hi, this is a very slow page\n")
                sleep(5)
                req.write("really, a very slow page\n")
                sleep(5)
                req.write("ok\n")

        else:

                req.write("""
hello world ! reloading in 100ms

<script>setTimeout('window.location.href="mptest.py"', 100)</script>

""")
        return apache.OK


Then, set your browser to call the fast version over and over again:

http://myserver.com/mptest.py

then to watch it hang due to a totally unrelated access by someone else,
go to a shell window somewhere and type:

wget --output-document=- http://myserver.com/mptest.py?pause=1

to get the slow version.  at least on my server, the fast-reloading page
will hit a certain process/thread that will just hang, and there it will
stay until your slow command-line one completes.

i am gathering this is either totally new news, or utterly obvious to
everyone but me.  comments ?


From vmanera at manord.com  Thu Sep  9 09:57:02 2004
From: vmanera at manord.com (Manera, Villiam)
Date: Thu Sep  9 02:58:28 2004
Subject: [mod_python] Re: servlet form against publishe rR
Message-ID: <52DC70C1C1575C418CB033523A29CF1410499B@exchange2000.manord.com>

>Daniel Popowich wrote:

>I see your problem.  While I don't think I want to add this to the
>mainstream distribution, it's actually quite simple (so, perhaps I
>should just shut up and do it!).  ...

Thank you very much, this save me a lot of work :-)

Villiam Manera

From haim at babysnakes.org  Thu Sep  9 17:29:42 2004
From: haim at babysnakes.org (Haim Ashkenazi)
Date: Thu Sep  9 09:40:51 2004
Subject: [mod_python] running script with the permissions of the
	authenticated system user
Message-ID: <pan.2004.09.09.13.29.41.977122@babysnakes.org>

Hi

A client of mine wants me to write a simple web interface for qmail's
autorespond. this means that a user must authenticate with his system
user/password, and then make some changes to the files on the user home
directory. since this is done through NIS, it can't be done as root, and
must be done as the user.
I have 2 problems to solve:
1. authentication: the user must authenticate as a NIS user. this can
be done by apache, but the module to do that is still alpha. I prefer to
make it inside the script.
2. the script must run as the user authenticated. I can make it run as
root and run system commands with 'su' but I was wondering is there a
module in python to handle it.

any ideas?

thanx
-- 
Haim


From fuzzy at camisade.net  Thu Sep  9 11:50:52 2004
From: fuzzy at camisade.net (Mike Partin)
Date: Thu Sep  9 11:50:22 2004
Subject: [mod_python] attribute snacks
Message-ID: <1094745052.24896.21.camel@gilligan>

Is there something I've missed or a more serious issue at heart here.
I've imported a module, made an instance of the class therein, however
I'm getting stack traces claiming an attribute is not present, despite
the code working perfectly on the command line and the attribute indeed
actually being there. When I decided to do a little debugging and put a
dir(obj) in there, I was surprised to find that the object had only
methods, and *no* attributes listed whatsoever. I take this isn't normal
behaviour, I may be wrong, but it's kind of shaking my deadlines a bit
here. Any help would be appreciated.

Mike "Fuzzy" Partin

From nicolas at lehuen.com  Thu Sep  9 19:49:47 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Sep  9 12:49:52 2004
Subject: [mod_python] Circular references starting from the request object
	are not collected
Message-ID: <200409091649.i89GnmSW008402@modpython.org>

Hi,

I'm running Apache 2.0.50, mod_python 3.1.3 with Python 2.3.4 on Windows XP
Pro and Windows 2000 server.

I finally found a source for the memory leaks I have been observing for a
while now : if you store an object in the request object that reference
directly or indirectly the request object itself, it builds a circular
reference. This circular reference does not seem to be garbage collected.

The test handler : 

from mod_python import apache

def handler(req):
    # req.foobar=req
    req.content_type='text/html'
    req.write('OK')
    return apache.OK

I used Apache Benchmark :

ab -c 5 -n 100000 http://localhost/test.py

With the comment line, everything is OK, I do not see any memory leak.

If I uncomment the 'req.reqs=[req]' line, the memory leak shows up. My
Apache process normally uses around 20 MB without the comment, and in 30
seconds of running the above handler (comment removed) with the above Apache
Benchmark command, it reaches 125 MB !

Normally, circular reference are collected by the garbage collector of
Python, but unfortunately when defining object from C, you have to do a few
tricks to support this :

http://www.python.org/doc/2.3.4/api/supporting-cycle-detection.html

It seems that this is not done in mod_python, by having a look at
requestobject.c.

I find this quite a big problem, and I don't find any workaround except
"Don't reference the request object from anywhere that might be referenced
by the request object", which is a pretty big limitation, quite annoying in
the application I'm building.

Best regards,

Nicolas Lehuen

From list at joreybump.com  Thu Sep  9 14:33:31 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Sep  9 13:33:35 2004
Subject: [mod_python] Circular references starting from the request object
	are not collected
In-Reply-To: <200409091649.i89GnmSW008402@modpython.org>
References: <200409091649.i89GnmSW008402@modpython.org>
Message-ID: <414093EB.6080005@joreybump.com>

Nicolas Lehuen wrote:

> def handler(req):
>     # req.foobar=req

I'm not sure what you're doing, but won't that create a "hall of 
mirrors" effect?

  req.foobar.foobar.foobar.foobar.foobar...

Wouldn't it be better to reset the attribute before storing req?

  req.foobar = []
  req.foobar = req

> If I uncomment the 'req.reqs=[req]' line, the memory leak shows up. My
> Apache process normally uses around 20 MB without the comment, and in 30
> seconds of running the above handler (comment removed) with the above Apache
> Benchmark command, it reaches 125 MB !

From grisha at modpython.org  Thu Sep  9 14:34:10 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Sep  9 13:34:14 2004
Subject: [mod_python] Circular references starting from the request object
	are not collected
In-Reply-To: <200409091649.i89GnmSW008402@modpython.org>
References: <200409091649.i89GnmSW008402@modpython.org>
Message-ID: <20040909132722.M68295@onyx.ispol.com>


Thanks for the cycle detection URL tip, I'll take a look at it.

A simple workaround would be to register a cleanup, something like:


def foobar_cleanup(req):
     req.foobar = None


Then in your handler, add a line:

     req.register_cleanup(foobar_cleanup, req)


Grisha

On Thu, 9 Sep 2004, Nicolas Lehuen wrote:

> Hi,
>
> I'm running Apache 2.0.50, mod_python 3.1.3 with Python 2.3.4 on Windows XP
> Pro and Windows 2000 server.
>
> I finally found a source for the memory leaks I have been observing for a
> while now : if you store an object in the request object that reference
> directly or indirectly the request object itself, it builds a circular
> reference. This circular reference does not seem to be garbage collected.
>
> The test handler :
>
> from mod_python import apache
>
> def handler(req):
>    # req.foobar=req
>    req.content_type='text/html'
>    req.write('OK')
>    return apache.OK
>
> I used Apache Benchmark :
>
> ab -c 5 -n 100000 http://localhost/test.py
>
> With the comment line, everything is OK, I do not see any memory leak.
>
> If I uncomment the 'req.reqs=[req]' line, the memory leak shows up. My
> Apache process normally uses around 20 MB without the comment, and in 30
> seconds of running the above handler (comment removed) with the above Apache
> Benchmark command, it reaches 125 MB !
>
> Normally, circular reference are collected by the garbage collector of
> Python, but unfortunately when defining object from C, you have to do a few
> tricks to support this :
>
> http://www.python.org/doc/2.3.4/api/supporting-cycle-detection.html
>
> It seems that this is not done in mod_python, by having a look at
> requestobject.c.
>
> I find this quite a big problem, and I don't find any workaround except
> "Don't reference the request object from anywhere that might be referenced
> by the request object", which is a pretty big limitation, quite annoying in
> the application I'm building.
>
> Best regards,
>
> Nicolas Lehuen
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jseutter at gmail.com  Thu Sep  9 12:42:57 2004
From: jseutter at gmail.com (Jerry Seutter)
Date: Thu Sep  9 13:43:02 2004
Subject: [mod_python] inithandler never called?
Message-ID: <2c8d48d704090910423a0d595b@mail.gmail.com>

Hi,

I'm trying to use mod_python's PythonInitHandler hook and it never
seems to be called.  I'm pretty sure I'm doing something stupid, but I
can't figure out what it is.

Here is the relevant section from my httpd.conf:

=======================================
Alias "/mod_python" "/var/www/mod_python"

<Directory "/var/www/mod_python">
    AddHandler python-program .py
    PythonInitHandler mod_python_test
    PythonAccessHandler mod_python_test
    PythonAuthenHandler mod_python_test
    PythonFixupHandler mod_python_test
    PythonHandler mod_python_test
    PythonPath "sys.path+['/var/www/mod_python','/usr/lib/python2.2/site-packages/mod_python']"
</Directory>
=======================================

Here is the mod_python_test.py:

=======================================
import apache
import sys

myvar = "not initted"

def inithandler(req):
    global myvar
    sys.stderr.write('inithandler called\n')
    sys.stderr.flush()
    myvar = "I have been initted!!!"
    return apache.OK
    
def accesshandler(req):
    return apache.OK

def authenhandler(req):
    return apache.OK

def handler(req):
    req.content_type = "text/html"
    req.write('<html><body>')
    req.write('%s<br>' %(myvar))
    req.write('</body></html>')

    return apache.OK
=======================================

and here is what I get when I hit
http://localhost/mod_python/mod_python_test.py:

=======================================
<html><body>not initted<br></body></html>
=======================================

I'm using:
mod_python-3.0.3-2.ent
python-2.2.3-26
httpd-2.0.46-25.ent
(on redhat as 3)

If anyone knows what I'm doing wrong and feels like telling me, thanks!

Jerry Seutter
From mike_mp at zzzcomputing.com  Thu Sep  9 14:54:41 2004
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Thu Sep  9 13:54:44 2004
Subject: [mod_python] Circular references starting from the request 
	object are not collected
In-Reply-To: <200409091649.i89GnmSW008402@modpython.org>
References: <200409091649.i89GnmSW008402@modpython.org>
Message-ID: <6094.66.192.34.8.1094752481.squirrel@66.192.34.8>


workaround: use a weakref for one side of the circular reference.

import weakref
req.foobar = weakref.ref(myfoobar)


> Hi,
>
> I'm running Apache 2.0.50, mod_python 3.1.3 with Python 2.3.4 on Windows
> XP
> Pro and Windows 2000 server.
>
> I finally found a source for the memory leaks I have been observing for a
> while now : if you store an object in the request object that reference
> directly or indirectly the request object itself, it builds a circular
> reference. This circular reference does not seem to be garbage collected.
>
> The test handler :
>
> from mod_python import apache
>
> def handler(req):
>     # req.foobar=req
>     req.content_type='text/html'
>     req.write('OK')
>     return apache.OK
>
> I used Apache Benchmark :
>
> ab -c 5 -n 100000 http://localhost/test.py
>
> With the comment line, everything is OK, I do not see any memory leak.
>
> If I uncomment the 'req.reqs=[req]' line, the memory leak shows up. My
> Apache process normally uses around 20 MB without the comment, and in 30
> seconds of running the above handler (comment removed) with the above
> Apache
> Benchmark command, it reaches 125 MB !
>
> Normally, circular reference are collected by the garbage collector of
> Python, but unfortunately when defining object from C, you have to do a
> few
> tricks to support this :
>
> http://www.python.org/doc/2.3.4/api/supporting-cycle-detection.html
>
> It seems that this is not done in mod_python, by having a look at
> requestobject.c.
>
> I find this quite a big problem, and I don't find any workaround except
> "Don't reference the request object from anywhere that might be referenced
> by the request object", which is a pretty big limitation, quite annoying
> in
> the application I'm building.
>
> Best regards,
>
> Nicolas Lehuen
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From fuzzy at camisade.net  Thu Sep  9 14:01:49 2004
From: fuzzy at camisade.net (Mike Partin)
Date: Thu Sep  9 14:01:37 2004
Subject: [mod_python] attribute snacks
In-Reply-To: <1094745052.24896.21.camel@gilligan>
References: <1094745052.24896.21.camel@gilligan>
Message-ID: <1094752908.24886.34.camel@gilligan>

Allow me to expand a bit on this as my first message was a
bit....obtuse.

On gentoo, in current up to date (as of this writing) state.
Running Apache 2.0.50, mod_python 3.1.3, and python 2.3.3, I have the
following issue.

On the commandline I get this by doing a dir() on a class instance
from a custom module.
['__doc__', '__init__', '__module__', 'conn', 'curs', 'dbname', 'host',
'insert', 'select', 'user']

doing this from mod_python however gets me these results.
['__doc__', '__init__', '__module__', 'insert', 'select']

the insert, and select entries, are methods, the conn,curs,dbname,host,
and user entries are attributes, which mod_python seems to eat and then
complain about the lack of. Any help would be greatly appreciated in
this area as I've been scouring docs and mailing list archives trying
to find any other instances of this problem and have thus far come up
with nothing.

- Mike "Fuzzy" Partin


On Thu, 2004-09-09 at 10:50, Mike Partin wrote:
> Is there something I've missed or a more serious issue at heart here.
> I've imported a module, made an instance of the class therein, however
> I'm getting stack traces claiming an attribute is not present, despite
> the code working perfectly on the command line and the attribute indeed
> actually being there. When I decided to do a little debugging and put a
> dir(obj) in there, I was surprised to find that the object had only
> methods, and *no* attributes listed whatsoever. I take this isn't normal
> behaviour, I may be wrong, but it's kind of shaking my deadlines a bit
> here. Any help would be appreciated.
> 
> Mike "Fuzzy" Partin
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From rosskarchner at gmail.com  Thu Sep  9 15:03:28 2004
From: rosskarchner at gmail.com (Ross M Karchner)
Date: Thu Sep  9 14:03:47 2004
Subject: [mod_python] inithandler never called?
In-Reply-To: <2c8d48d704090910423a0d595b@mail.gmail.com>
References: <2c8d48d704090910423a0d595b@mail.gmail.com>
Message-ID: <9cd844804090911036837fae2@mail.gmail.com>

the 3.1 documentation says that InitHandler can't be used in a <Directory>

"""Note: When this phase of the request is processed, the URI has not
yet been translated into a path name, therefore this directive could
never be executed by Apache if it could specified within <Directory>,
<Location>, <File>
directives or in an '.htaccess' file. The only place this directive is
allowed is the main configuration file, and the
code for it will execute in the main interpreter. And because this
phase happens before any identification of the type
of content being requested is done (i.e. is this a python program or a
gif?), the python routine specified with this
handler will be called for ALL requests on this server"""


On Thu, 9 Sep 2004 11:42:57 -0600, Jerry Seutter <jseutter@gmail.com> wrote:
> Hi,
> 
> I'm trying to use mod_python's PythonInitHandler hook and it never
> seems to be called.  I'm pretty sure I'm doing something stupid, but I
> can't figure out what it is.
> 
> Here is the relevant section from my httpd.conf:
> 
> =======================================
> Alias "/mod_python" "/var/www/mod_python"
> 
> <Directory "/var/www/mod_python">
>     AddHandler python-program .py
>     PythonInitHandler mod_python_test
>     PythonAccessHandler mod_python_test
>     PythonAuthenHandler mod_python_test
>     PythonFixupHandler mod_python_test
>     PythonHandler mod_python_test
>     PythonPath "sys.path+['/var/www/mod_python','/usr/lib/python2.2/site-packages/mod_python']"
> </Directory>
> =======================================
> 
> Here is the mod_python_test.py:
> 
> =======================================
> import apache
> import sys
> 
> myvar = "not initted"
> 
> def inithandler(req):
>     global myvar
>     sys.stderr.write('inithandler called\n')
>     sys.stderr.flush()
>     myvar = "I have been initted!!!"
>     return apache.OK
> 
> def accesshandler(req):
>     return apache.OK
> 
> def authenhandler(req):
>     return apache.OK
> 
> def handler(req):
>     req.content_type = "text/html"
>     req.write('<html><body>')
>     req.write('%s<br>' %(myvar))
>     req.write('</body></html>')
> 
>     return apache.OK
> =======================================
> 
> and here is what I get when I hit
> http://localhost/mod_python/mod_python_test.py:
> 
> =======================================
> <html><body>not initted<br></body></html>
> =======================================
> 
> I'm using:
> mod_python-3.0.3-2.ent
> python-2.2.3-26
> httpd-2.0.46-25.ent
> (on redhat as 3)
> 
> If anyone knows what I'm doing wrong and feels like telling me, thanks!
> 
> Jerry Seutter
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>
From jseutter at gmail.com  Thu Sep  9 13:56:16 2004
From: jseutter at gmail.com (Jerry Seutter)
Date: Thu Sep  9 14:56:23 2004
Subject: [mod_python] inithandler never called?
In-Reply-To: <9cd844804090911036837fae2@mail.gmail.com>
References: <2c8d48d704090910423a0d595b@mail.gmail.com>
	<9cd844804090911036837fae2@mail.gmail.com>
Message-ID: <2c8d48d704090911566f85bf60@mail.gmail.com>

Ahh, thanks for the heads-up.  This won't work for the problem I'm trying
to solve.

Can a link to this information be put in section 5.1.5 of the documentation?  I 
went back and looked through the documentation some more and I can't find
where this note came from.  Searching on the modpython.org didn't turn up
this text either.

Thanks,

Jerry Seutter


On Thu, 9 Sep 2004 14:03:28 -0400, Ross M Karchner
<rosskarchner@gmail.com> wrote:
> the 3.1 documentation says that InitHandler can't be used in a <Directory>
> 
> """Note: When this phase of the request is processed, the URI has not
> yet been translated into a path name, therefore this directive could
> never be executed by Apache if it could specified within <Directory>,
> <Location>, <File>
> directives or in an '.htaccess' file. The only place this directive is
> allowed is the main configuration file, and the
> code for it will execute in the main interpreter. And because this
> phase happens before any identification of the type
> of content being requested is done (i.e. is this a python program or a
> gif?), the python routine specified with this
> handler will be called for ALL requests on this server"""
> 
> 
> 
> 
> On Thu, 9 Sep 2004 11:42:57 -0600, Jerry Seutter <jseutter@gmail.com> wrote:
> > Hi,
> >
> > I'm trying to use mod_python's PythonInitHandler hook and it never
> > seems to be called.  I'm pretty sure I'm doing something stupid, but I
> > can't figure out what it is.
> >
> > Here is the relevant section from my httpd.conf:
> >
> > =======================================
> > Alias "/mod_python" "/var/www/mod_python"
> >
> > <Directory "/var/www/mod_python">
> >     AddHandler python-program .py
> >     PythonInitHandler mod_python_test
> >     PythonAccessHandler mod_python_test
> >     PythonAuthenHandler mod_python_test
> >     PythonFixupHandler mod_python_test
> >     PythonHandler mod_python_test
> >     PythonPath "sys.path+['/var/www/mod_python','/usr/lib/python2.2/site-packages/mod_python']"
> > </Directory>
> > =======================================
> >
> > Here is the mod_python_test.py:
> >
> > =======================================
> > import apache
> > import sys
> >
> > myvar = "not initted"
> >
> > def inithandler(req):
> >     global myvar
> >     sys.stderr.write('inithandler called\n')
> >     sys.stderr.flush()
> >     myvar = "I have been initted!!!"
> >     return apache.OK
> >
> > def accesshandler(req):
> >     return apache.OK
> >
> > def authenhandler(req):
> >     return apache.OK
> >
> > def handler(req):
> >     req.content_type = "text/html"
> >     req.write('<html><body>')
> >     req.write('%s<br>' %(myvar))
> >     req.write('</body></html>')
> >
> >     return apache.OK
> > =======================================
> >
> > and here is what I get when I hit
> > http://localhost/mod_python/mod_python_test.py:
> >
> > =======================================
> > <html><body>not initted<br></body></html>
> > =======================================
> >
> > I'm using:
> > mod_python-3.0.3-2.ent
> > python-2.2.3-26
> > httpd-2.0.46-25.ent
> > (on redhat as 3)
> >
> > If anyone knows what I'm doing wrong and feels like telling me, thanks!
> >
> > Jerry Seutter
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
From nicolas at lehuen.com  Thu Sep  9 22:01:23 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Sep  9 15:01:31 2004
Subject: [mod_python] Circular references starting from the request
	objectare not collected
In-Reply-To: <414093EB.6080005@joreybump.com>
Message-ID: <20040909190126.EEC8217ABC2@postfix4-1.free.fr>

Jorey Bump wrote:

> Nicolas Lehuen wrote:
> 
> > def handler(req):
> >     # req.foobar=req
> 
> I'm not sure what you're doing, but won't that create a "hall 
> of mirrors" effect?
> 
>   req.foobar.foobar.foobar.foobar.foobar...
> 
> Wouldn't it be better to reset the attribute before storing req?
> 
>   req.foobar = []
>   req.foobar = req


No, you won't have a hall of mirror, just a reference loop. It's OK for the
Python interpreter, but it can only be cleaned up from memory if the garbage
collector is properly notified. It is for Python code but for native code,
you have to do the aforementionned tricks.

This was a dumb sample, just to show the problem with circular references. I
wrote a small mod_python.publisher clone, which does not have the annoying
bug with collision of module name, plus handle concurrent reloading of
published pages gracefully and so on. When it is stable enough, I think I'll
put it somewhere on the web. Anyway... In the handler, I decorate the
request object with many attributes, to make it a little bit more
object-oriented, like that :

def handler(req):
	req.external_redirect = lambda location, permanent=0, text=None:
util.redirect(req,location,permanent,text)

This way I can write :

return req.external_redirect('http://www.example.org/')

Which I find cleaner than
util.external_redirect(req,'http://www.example.org/') and symmetrical to
req.internal_redirect.

The problem is that defining this external_redirect creates an implicit
circular reference (due to nested scopes : req.external -> lambda -> req)...
Thus creating a memory leak.

There is a workaround, in fact, it is to make sure that all you reference
from the request object is deleted, by manually writing :

	del req.external_redirect

at the end of the handler. I'm going to try that right now (or just drop
this silly req.external_redirect idea...). But the trouble is that this bug
can bite you just about anytime, and you have to really think things through
to make sure that you don't create any circular reference. This is OK in the
framework, but the application writers won't like it.

Regards,

Nicolas


From nicolas at lehuen.com  Thu Sep  9 22:03:02 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Sep  9 15:03:08 2004
Subject: [mod_python] Circular references starting from the request object
	are not collected
In-Reply-To: <6094.66.192.34.8.1094752481.squirrel@66.192.34.8>
Message-ID: <20040909190306.1CA7218582C@postfix4-1.free.fr>


Mike Bayer wrote :
> 
> workaround: use a weakref for one side of the circular reference.
> 
> import weakref
> req.foobar = weakref.ref(myfoobar)

Indeed, I thought about using a weakref, alas the request object cannot be
weak referenced (there again, native code must implement a few trick to
support weak references).

Regards,

Nicolas

From rosskarchner at gmail.com  Thu Sep  9 16:05:10 2004
From: rosskarchner at gmail.com (Ross M Karchner)
Date: Thu Sep  9 15:05:15 2004
Subject: [mod_python] inithandler never called?
In-Reply-To: <2c8d48d704090911566f85bf60@mail.gmail.com>
References: <2c8d48d704090910423a0d595b@mail.gmail.com>
	<9cd844804090911036837fae2@mail.gmail.com>
	<2c8d48d704090911566f85bf60@mail.gmail.com>
Message-ID: <9cd844804090912051823512a@mail.gmail.com>

Actually, I'm just an idiot, that text is from the
PythonPostReadRequestHandler description in the PDF...

When used in a <directory>,  PythonInitHandler  is an alias to
PythonHeaderParserHandler. I 've not used either, so I'm not sure how
it should behave with your given configuration.


On Thu, 9 Sep 2004 12:56:16 -0600, Jerry Seutter <jseutter@gmail.com> wrote:
> Ahh, thanks for the heads-up.  This won't work for the problem I'm trying
> to solve.
> 
> Can a link to this information be put in section 5.1.5 of the documentation?  I
> went back and looked through the documentation some more and I can't find
> where this note came from.  Searching on the modpython.org didn't turn up
> this text either.
> 
> Thanks,
> 
> Jerry Seutter
> 
> On Thu, 9 Sep 2004 14:03:28 -0400, Ross M Karchner
> 
> 
> <rosskarchner@gmail.com> wrote:
> > the 3.1 documentation says that InitHandler can't be used in a <Directory>
> >
> > """Note: When this phase of the request is processed, the URI has not
> > yet been translated into a path name, therefore this directive could
> > never be executed by Apache if it could specified within <Directory>,
> > <Location>, <File>
> > directives or in an '.htaccess' file. The only place this directive is
> > allowed is the main configuration file, and the
> > code for it will execute in the main interpreter. And because this
> > phase happens before any identification of the type
> > of content being requested is done (i.e. is this a python program or a
> > gif?), the python routine specified with this
> > handler will be called for ALL requests on this server"""
> >
> >
> >
> >
> > On Thu, 9 Sep 2004 11:42:57 -0600, Jerry Seutter <jseutter@gmail.com> wrote:
> > > Hi,
> > >
> > > I'm trying to use mod_python's PythonInitHandler hook and it never
> > > seems to be called.  I'm pretty sure I'm doing something stupid, but I
> > > can't figure out what it is.
> > >
> > > Here is the relevant section from my httpd.conf:
> > >
> > > =======================================
> > > Alias "/mod_python" "/var/www/mod_python"
> > >
> > > <Directory "/var/www/mod_python">
> > >     AddHandler python-program .py
> > >     PythonInitHandler mod_python_test
> > >     PythonAccessHandler mod_python_test
> > >     PythonAuthenHandler mod_python_test
> > >     PythonFixupHandler mod_python_test
> > >     PythonHandler mod_python_test
> > >     PythonPath "sys.path+['/var/www/mod_python','/usr/lib/python2.2/site-packages/mod_python']"
> > > </Directory>
> > > =======================================
> > >
> > > Here is the mod_python_test.py:
> > >
> > > =======================================
> > > import apache
> > > import sys
> > >
> > > myvar = "not initted"
> > >
> > > def inithandler(req):
> > >     global myvar
> > >     sys.stderr.write('inithandler called\n')
> > >     sys.stderr.flush()
> > >     myvar = "I have been initted!!!"
> > >     return apache.OK
> > >
> > > def accesshandler(req):
> > >     return apache.OK
> > >
> > > def authenhandler(req):
> > >     return apache.OK
> > >
> > > def handler(req):
> > >     req.content_type = "text/html"
> > >     req.write('<html><body>')
> > >     req.write('%s<br>' %(myvar))
> > >     req.write('</body></html>')
> > >
> > >     return apache.OK
> > > =======================================
> > >
> > > and here is what I get when I hit
> > > http://localhost/mod_python/mod_python_test.py:
> > >
> > > =======================================
> > > <html><body>not initted<br></body></html>
> > > =======================================
> > >
> > > I'm using:
> > > mod_python-3.0.3-2.ent
> > > python-2.2.3-26
> > > httpd-2.0.46-25.ent
> > > (on redhat as 3)
> > >
> > > If anyone knows what I'm doing wrong and feels like telling me, thanks!
> > >
> > > Jerry Seutter
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> >
> 
>
From jseutter at gmail.com  Thu Sep  9 14:09:26 2004
From: jseutter at gmail.com (Jerry Seutter)
Date: Thu Sep  9 15:09:34 2004
Subject: [mod_python] inithandler never called?
In-Reply-To: <9cd844804090911036837fae2@mail.gmail.com>
References: <2c8d48d704090910423a0d595b@mail.gmail.com>
	<9cd844804090911036837fae2@mail.gmail.com>
Message-ID: <2c8d48d70409091209c85fa5c@mail.gmail.com>

Actually, are you sure this information is correct?  I found the text
as part of the
PythonPostReadRequestHandler documentation, not PythonInitHandler.  In
fact, the PythonInitHandler says that it is valid in directory
contexts.

At any rate, since PythonInitHandler is an alias to
PythonHeaderParserHandler when in a directory context, I can use that
instead.  It seems to be working...

Jerry

On Thu, 9 Sep 2004 14:03:28 -0400, Ross M Karchner
<rosskarchner@gmail.com> wrote:
> the 3.1 documentation says that InitHandler can't be used in a <Directory>
> 
> """Note: When this phase of the request is processed, the URI has not
> yet been translated into a path name, therefore this directive could
> never be executed by Apache if it could specified within <Directory>,
> <Location>, <File>
> directives or in an '.htaccess' file. The only place this directive is
> allowed is the main configuration file, and the
> code for it will execute in the main interpreter. And because this
> phase happens before any identification of the type
> of content being requested is done (i.e. is this a python program or a
> gif?), the python routine specified with this
> handler will be called for ALL requests on this server"""
> 
> 
> 
> 
> On Thu, 9 Sep 2004 11:42:57 -0600, Jerry Seutter <jseutter@gmail.com> wrote:
> > Hi,
> >
> > I'm trying to use mod_python's PythonInitHandler hook and it never
> > seems to be called.  I'm pretty sure I'm doing something stupid, but I
> > can't figure out what it is.
> >
> > Here is the relevant section from my httpd.conf:
> >
> > =======================================
> > Alias "/mod_python" "/var/www/mod_python"
> >
> > <Directory "/var/www/mod_python">
> >     AddHandler python-program .py
> >     PythonInitHandler mod_python_test
> >     PythonAccessHandler mod_python_test
> >     PythonAuthenHandler mod_python_test
> >     PythonFixupHandler mod_python_test
> >     PythonHandler mod_python_test
> >     PythonPath "sys.path+['/var/www/mod_python','/usr/lib/python2.2/site-packages/mod_python']"
> > </Directory>
> > =======================================
> >
> > Here is the mod_python_test.py:
> >
> > =======================================
> > import apache
> > import sys
> >
> > myvar = "not initted"
> >
> > def inithandler(req):
> >     global myvar
> >     sys.stderr.write('inithandler called\n')
> >     sys.stderr.flush()
> >     myvar = "I have been initted!!!"
> >     return apache.OK
> >
> > def accesshandler(req):
> >     return apache.OK
> >
> > def authenhandler(req):
> >     return apache.OK
> >
> > def handler(req):
> >     req.content_type = "text/html"
> >     req.write('<html><body>')
> >     req.write('%s<br>' %(myvar))
> >     req.write('</body></html>')
> >
> >     return apache.OK
> > =======================================
> >
> > and here is what I get when I hit
> > http://localhost/mod_python/mod_python_test.py:
> >
> > =======================================
> > <html><body>not initted<br></body></html>
> > =======================================
> >
> > I'm using:
> > mod_python-3.0.3-2.ent
> > python-2.2.3-26
> > httpd-2.0.46-25.ent
> > (on redhat as 3)
> >
> > If anyone knows what I'm doing wrong and feels like telling me, thanks!
> >
> > Jerry Seutter
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
From mike_mp at zzzcomputing.com  Thu Sep  9 16:40:37 2004
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Thu Sep  9 15:40:42 2004
Subject: [mod_python] Circular references starting from the request 
	object are not collected
In-Reply-To: <20040909190306.1CA7218582C@postfix4-1.free.fr>
References: <6094.66.192.34.8.1094752481.squirrel@66.192.34.8>
	<20040909190306.1CA7218582C@postfix4-1.free.fr>
Message-ID: <21007.66.192.34.8.1094758837.squirrel@66.192.34.8>


thats not a weakref of the request object, thats the request object
pointing to a weakref of *your* object, which effectively breaks the
circular reference.

request <-- (strong ref) --
        --- (weak ref) --> yourobject


>
> Mike Bayer wrote :
>>
>> workaround: use a weakref for one side of the circular reference.
>>
>> import weakref
>> req.foobar = weakref.ref(myfoobar)
>
> Indeed, I thought about using a weakref, alas the request object cannot be
> weak referenced (there again, native code must implement a few trick to
> support weak references).
>
> Regards,
>
> Nicolas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From gabriel.cooper at mediapulse.com  Thu Sep  9 17:41:15 2004
From: gabriel.cooper at mediapulse.com (Gabriel Cooper)
Date: Thu Sep  9 16:39:31 2004
Subject: [mod_python] [ANNOUNCE] SnakeSkin: Python Application Toolkit
In-Reply-To: <4140BCE4.8000101@mediapulse.com>
References: <1094756605.12825.25.camel@mike.mediapulse.com>
	<4140BB34.4000200@mediapulse.com> <4140BCE4.8000101@mediapulse.com>
Message-ID: <4140BFEB.8060702@mediapulse.com>


We are proud to announce the release of SnakeSkin, a python application 
toolkit released under an Open Source BSD-Style license, newly available 
at http://snakeskin-tools.sourceforge.net/

In SnakeSkin, developers can customize the framework to the application, 
unlike in traditional frameworks, such as PHP. For example, adding 
custom tags to the templating system is quick and easy. The goal of the 
project is to have a framework that scales down as well as up--a 
"Zope-lite" framework. SnakeSkin can scale down to be useful in a simple 
form-to-email or just to apply a clean-cut design skin. The toolkit can 
just as easily scale up to handle complex content managment systems, B2B 
extranets, and full-fledged e-commerce engines.  We do it all the time.

SnakeSkin, based upon the existing Albatross project maintained by 
Object Craft, runs under several webservers, including CGI based, 
Apache, FastCGI, and its own included webserver (used mainly for 
development).

SnakeSkin has several built in capabilities:

* Dynamic Macro Features (think server-side includes on steroids)
* SQL support in both the application and the template
* Support for Apach 2.0 Filters

... and includes Albatross features ...

* Clean separation of logic and design
* A simple-yet-robust templating system that is Web Designer-friendly 
(Plays nice with Dreamweaver)
* Secure Session Management in hidden fields, server-side data-stores, 
or through a session server

We are ready to consider the current version, 0.9, as a canadiate for 
1.0 release. Anyone that has feedback on the current design and/or finds 
bugs, please send information in though the mailling list ( 
http://lists.sourceforge.net/lists/listinfo/snakeskin-tools-discuss ) or 
file a bug report on sourceforge.net.

Thank You,

The SnakeSkin team.


From Administrator at leebrown.org  Thu Sep  9 20:53:52 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Thu Sep  9 19:54:02 2004
Subject: [mod_python] Mod Python and SSI
References: <200409091649.i89GnmSW008402@modpython.org>
	<6094.66.192.34.8.1094752481.squirrel@66.192.34.8>
Message-ID: <030801c496c8$428a6c10$0200a8c0@UberBox>

Greetings!

I have several existing web sites that are extensively SSI driven.  Only
recently have I decided to try learning and using Python.  (And I'm very
impressed, by the way.)

So far, I've implemented a POST form using the publisher handler (works as
expected) and a generic handler (for a simple hit counter) that is called
from an SSI include directive.  That seems to work fine, too.

But it would take me a long time to re-code my existing sites to use either
the publisher handler or the PSP handler exclusively, so I'm wondering if
anyone has experienced any problems using SSI and Mod Python handlers
together.  I presume that I'm probably safe as long as my scripts don't try
to do anything that can't (or shouldn't) be done in the content delivery
phase.

Any caveats, cautions, or suggestions would be welcome.

Best Regards,
Lee E. Brown

From bje at apnic.net  Fri Sep 10 11:07:06 2004
From: bje at apnic.net (Byron Ellacott)
Date: Thu Sep  9 20:05:47 2004
Subject: [mod_python] running script with the permissions of
	the	authenticated system user
In-Reply-To: <pan.2004.09.09.13.29.41.977122@babysnakes.org>
References: <pan.2004.09.09.13.29.41.977122@babysnakes.org>
Message-ID: <4140F02A.1000304@apnic.net>

Haim Ashkenazi wrote:
> 2. the script must run as the user authenticated. I can make it run as
> root and run system commands with 'su' but I was wondering is there a
> module in python to handle it.

On UNIX systems, sys.os.set[e]uid() will allow you to set the 
(effective) user ID for the process.  If your script is running as root 
initially, you should probably use sys.os.setuid() as soon as you know 
the user you need to be.  If your script might be handling several 
requests, you'll probably need to use seteuid() instead, and revert to 
root when you're done.

-- 
bje
From haim at babysnakes.org  Fri Sep 10 04:21:23 2004
From: haim at babysnakes.org (Haim Ashkenazi)
Date: Thu Sep  9 20:21:30 2004
Subject: [mod_python] Re: running script with the permissions
	of	the	authenticated system user
References: <pan.2004.09.09.13.29.41.977122@babysnakes.org>
	<4140F02A.1000304@apnic.net>
Message-ID: <pan.2004.09.10.00.21.22.430847@babysnakes.org>

On Fri, 10 Sep 2004 10:07:06 +1000, Byron Ellacott wrote:

> Haim Ashkenazi wrote:
>> 2. the script must run as the user authenticated. I can make it run as
>> root and run system commands with 'su' but I was wondering is there a
>> module in python to handle it.
> 
> On UNIX systems, sys.os.set[e]uid() will allow you to set the 
> (effective) user ID for the process.  If your script is running as root 
> initially, you should probably use sys.os.setuid() as soon as you know 
> the user you need to be.  If your script might be handling several 
> requests, you'll probably need to use seteuid() instead, and revert to 
> root when you're done.
great, that's what I was looking for. to revert to root do I use seteuid()
again?

tnanx
-- 
Haim


From haim at babysnakes.org  Fri Sep 10 05:11:26 2004
From: haim at babysnakes.org (Haim Ashkenazi)
Date: Thu Sep  9 21:11:32 2004
Subject: [mod_python] Re: running script with the
	permissions	of	the	authenticated system user
References: <pan.2004.09.09.13.29.41.977122@babysnakes.org>
	<4140F02A.1000304@apnic.net>
	<pan.2004.09.10.00.21.22.430847@babysnakes.org>
Message-ID: <pan.2004.09.10.01.11.26.323416@babysnakes.org>

On Fri, 10 Sep 2004 03:21:23 +0300, Haim Ashkenazi wrote:

> On Fri, 10 Sep 2004 10:07:06 +1000, Byron Ellacott wrote:
> 
>> Haim Ashkenazi wrote:
>>> 2. the script must run as the user authenticated. I can make it run as
>>> root and run system commands with 'su' but I was wondering is there a
>>> module in python to handle it.
>> 
>> On UNIX systems, sys.os.set[e]uid() will allow you to set the 
>> (effective) user ID for the process.  If your script is running as root 
>> initially, you should probably use sys.os.setuid() as soon as you know 
>> the user you need to be.  If your script might be handling several 
>> requests, you'll probably need to use seteuid() instead, and revert to 
>> root when you're done.
> great, that's what I was looking for. to revert to root do I use seteuid()
> again?
ok, that was just me being lazy :(
I can seteuid() back and forth so I guess that's the answer...
also, found a nice solution to the authentication problem in the
activestate cookbook - I can authenticate through pop3...

Bye
-- 
Haim


From nick at dd.revealed.net  Thu Sep  9 21:29:13 2004
From: nick at dd.revealed.net (Nick)
Date: Thu Sep  9 21:29:15 2004
Subject: [mod_python] Re: running script with the
	permissions	of	the	authenticated system user
In-Reply-To: <pan.2004.09.10.01.11.26.323416@babysnakes.org>
References: <pan.2004.09.09.13.29.41.977122@babysnakes.org>
	<4140F02A.1000304@apnic.net>
	<pan.2004.09.10.00.21.22.430847@babysnakes.org>
	<pan.2004.09.10.01.11.26.323416@babysnakes.org>
Message-ID: <1094779753.29731.0.camel@nick>

On Thu, 2004-09-09 at 20:11, Haim Ashkenazi wrote:
> I can seteuid() back and forth so I guess that's the answer...
> also, found a nice solution to the authentication problem in the
> activestate cookbook - I can authenticate through pop3...

You can also use pam (there is a python module for it), even set up your
own service entry.  Then you can use any authentication back end you
want.

Nick

From jaydonnell at gmail.com  Thu Sep  9 21:49:50 2004
From: jaydonnell at gmail.com (Jay donnell)
Date: Thu Sep  9 23:49:53 2004
Subject: [mod_python] psp template problem
Message-ID: <9c0950c90409092049fad6bb@mail.gmail.com>

It works perfectly on my freebsd system, but not on suse. template.run
doesn't output anything. The template.html file is an exact copy from
the documentation
---------------------------------------------------------------
from mod_python import apache, psp

def handler(req):
    req.content_type = "text/html"
    req.write("hi<br>")
    req.write(req.filename)
    template = psp.PSP(req, filename='template.html')
    template.run({'what':'world'})
    req.write('<br>after')
    return apache.OK
-------------------------------------------------------------------
Here is the output from a view source in the browser

hi<br>/home/bloc/public_html/controller/index.py<br>after
-------------------------------------------------------------------
From nicolas at lehuen.com  Fri Sep 10 09:17:18 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Fri Sep 10 02:17:25 2004
Subject: [mod_python] Circular references starting from the request object
	are not collected
In-Reply-To: <21007.66.192.34.8.1094758837.squirrel@66.192.34.8>
Message-ID: <20040910061722.54D09186122@postfix4-1.free.fr>

Mike Bayer wrote :
> thats not a weakref of the request object, thats the request 
> object pointing to a weakref of *your* object, which 
> effectively breaks the circular reference.
> 
> request <-- (strong ref) --
>         --- (weak ref) --> yourobject

I also thought about this, but until now I had dismissed this since I think
it would be too effective in breaking the reference cycle. My handler would
set the weak reference in the request object and give it to the application
object, but the weak ref being for a while the only reference to my object,
it could be cleared before I actually use it...

I'll give it a try, though.

Meanwhile, manually deleting the reference in a finally block at the end of
the handler does the trick... But there is a leak remaining, which means I
have to search thoroughly through the code to find where this circular
reference is built, and delete a link from the reference chain when the
request processing is over. No exactly what I'd expect from a high level
language.

I also had a look at how to support circular references in native coded
objects (
http://www.python.org/doc/2.3.4/api/supporting-cycle-detection.html ). It
seems that it can be done without changing too much in requestobject.c,
namely by modifying MpRequest_FromRequest, request_dealloc and
MpRequest_Type and adding a tp_traverse and a tp_clear handler. The only
thing I don't see is how to get the extraneous attributes of the request
object (since I must traverse them in the traverse_tp handler). I just
managed to build mod_python from source, so I may try to work on this this
week-end.

Regards,

Nicolas

> 
> 
> >
> > Mike Bayer wrote :
> >>
> >> workaround: use a weakref for one side of the circular reference.
> >>
> >> import weakref
> >> req.foobar = weakref.ref(myfoobar)
> >
> > Indeed, I thought about using a weakref, alas the request object 
> > cannot be weak referenced (there again, native code must 
> implement a 
> > few trick to support weak references).
> >
> > Regards,
> >
> > Nicolas
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Fri Sep 10 02:33:34 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep 10 03:33:37 2004
Subject: [mod_python] Directory containing PythonHandler directive.
Message-ID: <1094801614.5537@dscpl.com.au>

One can define PythonHandler within httpd.conf or .htaccess. In both cases, it is
connected to a particular directory within the filesystem and all requests falling
under that directory will go to that handler.

Is there any way that one can find out within a content handler at what directory
level the PythonHandler directive appeared for the request being processed?

Ie., if PythonHandler is defined in:

  /a/b/.htaccess

and the request is for:

  /a/b/c/d/e.html

I want to be able to determine in content handler being used to service the request
that PythonHandler was defined at root directory level of:

  /a/b

Note that within the content handler system I am using, path_info doesn't give you
this information, as there actually is a file present at the path being requested and
so it is not separated out from the filename.

I am wanting to know this, as I want to be able to implement a configuration file
system, where a search is made for an appropriate config file by searching back up
the directory structure, but stopping at the point where the PythonHandler
directive was defined.

I haven't looked at the actual code yet to see if there is a way and I may have missed
something obvious in my simple tests. I am using mod_python version 2.7.10 so
would rather not a mod_python 3.X specific solution.

Thanks in advance.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From brian.bird at securetrading.com  Fri Sep 10 10:09:18 2004
From: brian.bird at securetrading.com (Brian Bird)
Date: Fri Sep 10 04:09:21 2004
Subject: [mod_python] attribute snacks
In-Reply-To: <1094752908.24886.34.camel@gilligan>
Message-ID: <014f01c4970d$78abcab0$190b030a@Menai.local>

'Fraid I've no idea what's causing your problem, but FYI when I try a
similar thing with my own objects I get the same list of methods and
attributes both from the command line and from within modpython. I'm also
using Apache 2.0.50, modpython3.1.3 and python2.3.3 (On Suse 9.1 linux)

Only thing I can think of is to try removing any .pyc files and restart
apache.

Brian

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Mike Partin
Sent: 09 September 2004 19:02
To: mod_python user mailing list
Subject: Re: [mod_python] attribute snacks


Allow me to expand a bit on this as my first message was a bit....obtuse.

On gentoo, in current up to date (as of this writing) state. Running Apache
2.0.50, mod_python 3.1.3, and python 2.3.3, I have the following issue.

On the commandline I get this by doing a dir() on a class instance from a
custom module. ['__doc__', '__init__', '__module__', 'conn', 'curs',
'dbname', 'host', 'insert', 'select', 'user']

doing this from mod_python however gets me these results. ['__doc__',
'__init__', '__module__', 'insert', 'select']

the insert, and select entries, are methods, the conn,curs,dbname,host, and
user entries are attributes, which mod_python seems to eat and then complain
about the lack of. Any help would be greatly appreciated in this area as
I've been scouring docs and mailing list archives trying to find any other
instances of this problem and have thus far come up with nothing.

- Mike "Fuzzy" Partin


On Thu, 2004-09-09 at 10:50, Mike Partin wrote:
> Is there something I've missed or a more serious issue at heart here. 
> I've imported a module, made an instance of the class therein, however 
> I'm getting stack traces claiming an attribute is not present, despite 
> the code working perfectly on the command line and the attribute 
> indeed actually being there. When I decided to do a little debugging 
> and put a
> dir(obj) in there, I was surprised to find that the object had only
> methods, and *no* attributes listed whatsoever. I take this isn't normal
> behaviour, I may be wrong, but it's kind of shaking my deadlines a bit
> here. Any help would be appreciated.
> 
> Mike "Fuzzy" Partin
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org 
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From haim at babysnakes.org  Fri Sep 10 12:17:17 2004
From: haim at babysnakes.org (Haim Ashkenazi)
Date: Fri Sep 10 04:17:23 2004
Subject: [mod_python] Re: Re: running script with
	the	permissions	of	the	authenticated system user
References: <pan.2004.09.09.13.29.41.977122@babysnakes.org>
	<4140F02A.1000304@apnic.net>
	<pan.2004.09.10.00.21.22.430847@babysnakes.org>
	<pan.2004.09.10.01.11.26.323416@babysnakes.org>
	<1094779753.29731.0.camel@nick>
Message-ID: <pan.2004.09.10.08.17.17.798890@babysnakes.org>

On Thu, 09 Sep 2004 20:29:13 -0500, Nick wrote:

> On Thu, 2004-09-09 at 20:11, Haim Ashkenazi wrote:
>> I can seteuid() back and forth so I guess that's the answer...
>> also, found a nice solution to the authentication problem in the
>> activestate cookbook - I can authenticate through pop3...
> 
> You can also use pam (there is a python module for it), even set up your
> own service entry.  Then you can use any authentication back end you
> want.
thanx, I'll try it.

> 
> Nick

Bye
-- 
Haim


From grisha at modpython.org  Fri Sep 10 11:32:19 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Sep 10 10:32:23 2004
Subject: [mod_python] Circular references starting from the request object
	are not collected
In-Reply-To: <20040910061722.54D09186122@postfix4-1.free.fr>
References: <20040910061722.54D09186122@postfix4-1.free.fr>
Message-ID: <20040910102210.R77559@onyx.ispol.com>



On Fri, 10 Sep 2004, Nicolas Lehuen wrote:

> Meanwhile, manually deleting the reference in a finally block at the end of
> the handler does the trick...

Keep in mind that doing it at the end of the handler won't always work, as 
handler's execution can be aborted in the middle if, for exampe, the 
client decides to suddenly disconnect. This is exactly why Apache has 
cleanups - cleanups run even if the handler errored out and is aborted.

> But there is a leak remaining, which means I have to search thoroughly 
> through the code to find where this circular reference is built, and 
> delete a link from the reference chain when the request processing is 
> over. No exactly what I'd expect from a high level language.

Well it's not really an artifact of the language. Mod_python keeps the 
interpreter persistent throughout requests, and therefore you need to 
think in terms of a long-running service, including whatching out for 
memory leaks. Fortunately, Apache does a lion's share of work in this 
respect and provides tools like cleanups. I don't have much experience 
with pure-Python servers, but I imagine the memory situation is much worse 
when it comes to servers such as Zope, webware or twisted - anyone have 
any experience with this?

> I also had a look at how to support circular references in native coded
> objects (
> http://www.python.org/doc/2.3.4/api/supporting-cycle-detection.html ). It
> seems that it can be done without changing too much in requestobject.c,
> namely by modifying MpRequest_FromRequest, request_dealloc and
> MpRequest_Type and adding a tp_traverse and a tp_clear handler. The only
> thing I don't see is how to get the extraneous attributes of the request
> object (since I must traverse them in the traverse_tp handler). I just
> managed to build mod_python from source, so I may try to work on this this
> week-end.

If you can get it to a point where you have a patch, that would be 
fantastic. Also, internal stuff like this is better discussed on the 
python-dev@httpd.apache.org list - it's very low volume with much higher 
low-level expertiese on it.

Thanks,

Grisha

>
> Regards,
>
> Nicolas
>
>>
>>
>>>
>>> Mike Bayer wrote :
>>>>
>>>> workaround: use a weakref for one side of the circular reference.
>>>>
>>>> import weakref
>>>> req.foobar = weakref.ref(myfoobar)
>>>
>>> Indeed, I thought about using a weakref, alas the request object
>>> cannot be weak referenced (there again, native code must
>> implement a
>>> few trick to support weak references).
>>>
>>> Regards,
>>>
>>> Nicolas
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Fri Sep 10 11:36:18 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Sep 10 10:36:22 2004
Subject: [mod_python] Directory containing PythonHandler directive.
In-Reply-To: <1094801614.5537@dscpl.com.au>
References: <1094801614.5537@dscpl.com.au>
Message-ID: <20040910103503.R77559@onyx.ispol.com>



On Fri, 10 Sep 2004, Graham Dumpleton wrote:

> Is there any way that one can find out within a content handler at what directory
> level the PythonHandler directive appeared for the request being processed?
>
> Ie., if PythonHandler is defined in:
>
>  /a/b/.htaccess
>
> and the request is for:
>
>  /a/b/c/d/e.html
>

It should be sys.path[0], unless you use PythonPath.

Grisha
From fuzzy at camisade.net  Fri Sep 10 11:21:14 2004
From: fuzzy at camisade.net (Mike Partin)
Date: Fri Sep 10 11:20:31 2004
Subject: [mod_python] attribute snacks
In-Reply-To: <014f01c4970d$78abcab0$190b030a@Menai.local>
References: <014f01c4970d$78abcab0$190b030a@Menai.local>
Message-ID: <1094829674.24886.39.camel@gilligan>

Fortunately the problem was resolved yesterday. Sadly I have no idea
why. I recompiled apache+mod_python to take advantage of threading. And
while I see this as a possible fault on apache for not being able to
spawn threads for python, it's *HIGHLY* unlikely. I wasn't using any
threaded code so this is just wierd. But in any case it's working now.
Thanks to all of you for the feedback.

Mike "Fuzzy" Partin

On Fri, 2004-09-10 at 03:09, Brian Bird wrote:
> 'Fraid I've no idea what's causing your problem, but FYI when I try a
> similar thing with my own objects I get the same list of methods and
> attributes both from the command line and from within modpython. I'm also
> using Apache 2.0.50, modpython3.1.3 and python2.3.3 (On Suse 9.1 linux)
> 
> Only thing I can think of is to try removing any .pyc files and restart
> apache.
> 
> Brian
> 
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Mike Partin
> Sent: 09 September 2004 19:02
> To: mod_python user mailing list
> Subject: Re: [mod_python] attribute snacks
> 
> 
> Allow me to expand a bit on this as my first message was a bit....obtuse.
> 
> On gentoo, in current up to date (as of this writing) state. Running Apache
> 2.0.50, mod_python 3.1.3, and python 2.3.3, I have the following issue.
> 
> On the commandline I get this by doing a dir() on a class instance from a
> custom module. ['__doc__', '__init__', '__module__', 'conn', 'curs',
> 'dbname', 'host', 'insert', 'select', 'user']
> 
> doing this from mod_python however gets me these results. ['__doc__',
> '__init__', '__module__', 'insert', 'select']
> 
> the insert, and select entries, are methods, the conn,curs,dbname,host, and
> user entries are attributes, which mod_python seems to eat and then complain
> about the lack of. Any help would be greatly appreciated in this area as
> I've been scouring docs and mailing list archives trying to find any other
> instances of this problem and have thus far come up with nothing.
> 
> - Mike "Fuzzy" Partin
> 
> 
> On Thu, 2004-09-09 at 10:50, Mike Partin wrote:
> > Is there something I've missed or a more serious issue at heart here. 
> > I've imported a module, made an instance of the class therein, however 
> > I'm getting stack traces claiming an attribute is not present, despite 
> > the code working perfectly on the command line and the attribute 
> > indeed actually being there. When I decided to do a little debugging 
> > and put a
> > dir(obj) in there, I was surprised to find that the object had only
> > methods, and *no* attributes listed whatsoever. I take this isn't normal
> > behaviour, I may be wrong, but it's kind of shaking my deadlines a bit
> > here. Any help would be appreciated.
> > 
> > Mike "Fuzzy" Partin
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org 
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From dg at sponsera.com  Fri Sep 10 12:57:11 2004
From: dg at sponsera.com (David Geller)
Date: Fri Sep 10 11:57:17 2004
Subject: [mod_python] attribute snacks
In-Reply-To: <1094829674.24886.39.camel@gilligan>
References: <014f01c4970d$78abcab0$190b030a@Menai.local>
	<1094829674.24886.39.camel@gilligan>
Message-ID: <4141CED7.2030108@sponsera.com>

Whenever I hear "it works on the command line but not in mod_python" I 
recall the problem I had, which was similar, but with different 
symptoms. Problem resulted from *library incompatibility* issues. I 
don't know if this is what is causing this problem or not, but make sure 
that there is only *one* version for each library you are using compiled 
into apache - especially if these libraries are for db's like mysql. See 
the mod_python faq, as I believe this is addressed there.

Hope this helps.

--David

Mike Partin wrote:
> Fortunately the problem was resolved yesterday. Sadly I have no idea
> why. I recompiled apache+mod_python to take advantage of threading. And
> while I see this as a possible fault on apache for not being able to
> spawn threads for python, it's *HIGHLY* unlikely. I wasn't using any
> threaded code so this is just wierd. But in any case it's working now.
> Thanks to all of you for the feedback.
> 
> Mike "Fuzzy" Partin
> 
> On Fri, 2004-09-10 at 03:09, Brian Bird wrote:
> 
>>'Fraid I've no idea what's causing your problem, but FYI when I try a
>>similar thing with my own objects I get the same list of methods and
>>attributes both from the command line and from within modpython. I'm also
>>using Apache 2.0.50, modpython3.1.3 and python2.3.3 (On Suse 9.1 linux)
>>
>>Only thing I can think of is to try removing any .pyc files and restart
>>apache.
>>
>>Brian
>>
>>-----Original Message-----
>>From: mod_python-bounces@modpython.org
>>[mailto:mod_python-bounces@modpython.org] On Behalf Of Mike Partin
>>Sent: 09 September 2004 19:02
>>To: mod_python user mailing list
>>Subject: Re: [mod_python] attribute snacks
>>
>>
>>Allow me to expand a bit on this as my first message was a bit....obtuse.
>>
>>On gentoo, in current up to date (as of this writing) state. Running Apache
>>2.0.50, mod_python 3.1.3, and python 2.3.3, I have the following issue.
>>
>>On the commandline I get this by doing a dir() on a class instance from a
>>custom module. ['__doc__', '__init__', '__module__', 'conn', 'curs',
>>'dbname', 'host', 'insert', 'select', 'user']
>>
>>doing this from mod_python however gets me these results. ['__doc__',
>>'__init__', '__module__', 'insert', 'select']
>>
>>the insert, and select entries, are methods, the conn,curs,dbname,host, and
>>user entries are attributes, which mod_python seems to eat and then complain
>>about the lack of. Any help would be greatly appreciated in this area as
>>I've been scouring docs and mailing list archives trying to find any other
>>instances of this problem and have thus far come up with nothing.
>>
>>- Mike "Fuzzy" Partin
>>
>>
>>On Thu, 2004-09-09 at 10:50, Mike Partin wrote:
>>
>>>Is there something I've missed or a more serious issue at heart here. 
>>>I've imported a module, made an instance of the class therein, however 
>>>I'm getting stack traces claiming an attribute is not present, despite 
>>>the code working perfectly on the command line and the attribute 
>>>indeed actually being there. When I decided to do a little debugging 
>>>and put a
>>>dir(obj) in there, I was surprised to find that the object had only
>>>methods, and *no* attributes listed whatsoever. I take this isn't normal
>>>behaviour, I may be wrong, but it's kind of shaking my deadlines a bit
>>>here. Any help would be appreciated.
>>>
>>>Mike "Fuzzy" Partin
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org 
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From nicolas at lehuen.com  Fri Sep 10 19:43:42 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Fri Sep 10 12:43:46 2004
Subject: [mod_python] Circular references starting from the request
	objectare not collected
In-Reply-To: <20040910102210.R77559@onyx.ispol.com>
Message-ID: <200409101643.i8AGhhSW019935@modpython.org>

Grisha wrote :
> On Fri, 10 Sep 2004, Nicolas Lehuen wrote:
> 
> > Meanwhile, manually deleting the reference in a finally 
> block at the 
> > end of the handler does the trick...
> 
> Keep in mind that doing it at the end of the handler won't 
> always work, as handler's execution can be aborted in the 
> middle if, for exampe, the client decides to suddenly 
> disconnect. This is exactly why Apache has cleanups - 
> cleanups run even if the handler errored out and is aborted.

I wrote my cleanup code like this :

def handler(req):
	# do something dirty
	# do another dirty thing
	try:
		# do usefull work
	finally:
		# cleanup the mess

Can the finally block be interrupted by Apache ? Do I really need to
implement cleanups instead ?

Concerning the circular reference fix, I'm switching to the python-dev
mailing list.

Regards,

Nicolas Lehuen

From fuzzy at camisade.net  Fri Sep 10 12:49:54 2004
From: fuzzy at camisade.net (Mike Partin)
Date: Fri Sep 10 12:49:10 2004
Subject: [mod_python] attribute snacks
In-Reply-To: <4141CED7.2030108@sponsera.com>
References: <014f01c4970d$78abcab0$190b030a@Menai.local>
	<1094829674.24886.39.camel@gilligan>  <4141CED7.2030108@sponsera.com>
Message-ID: <1094834993.32763.43.camel@gilligan>

This was in the top 5 things I checked, and there was only one of each
of the linked libs as far as I was able to discern.

--Fuzzy

On Fri, 2004-09-10 at 10:57, David Geller wrote:
> Whenever I hear "it works on the command line but not in mod_python" I 
> recall the problem I had, which was similar, but with different 
> symptoms. Problem resulted from *library incompatibility* issues. I 
> don't know if this is what is causing this problem or not, but make sure 
> that there is only *one* version for each library you are using compiled 
> into apache - especially if these libraries are for db's like mysql. See 
> the mod_python faq, as I believe this is addressed there.
> 
> Hope this helps.
> 
> --David
> 
> Mike Partin wrote:
> > Fortunately the problem was resolved yesterday. Sadly I have no idea
> > why. I recompiled apache+mod_python to take advantage of threading. And
> > while I see this as a possible fault on apache for not being able to
> > spawn threads for python, it's *HIGHLY* unlikely. I wasn't using any
> > threaded code so this is just wierd. But in any case it's working now.
> > Thanks to all of you for the feedback.
> > 
> > Mike "Fuzzy" Partin
> > 
> > On Fri, 2004-09-10 at 03:09, Brian Bird wrote:
> > 
> >>'Fraid I've no idea what's causing your problem, but FYI when I try a
> >>similar thing with my own objects I get the same list of methods and
> >>attributes both from the command line and from within modpython. I'm also
> >>using Apache 2.0.50, modpython3.1.3 and python2.3.3 (On Suse 9.1 linux)
> >>
> >>Only thing I can think of is to try removing any .pyc files and restart
> >>apache.
> >>
> >>Brian
> >>
> >>-----Original Message-----
> >>From: mod_python-bounces@modpython.org
> >>[mailto:mod_python-bounces@modpython.org] On Behalf Of Mike Partin
> >>Sent: 09 September 2004 19:02
> >>To: mod_python user mailing list
> >>Subject: Re: [mod_python] attribute snacks
> >>
> >>
> >>Allow me to expand a bit on this as my first message was a bit....obtuse.
> >>
> >>On gentoo, in current up to date (as of this writing) state. Running Apache
> >>2.0.50, mod_python 3.1.3, and python 2.3.3, I have the following issue.
> >>
> >>On the commandline I get this by doing a dir() on a class instance from a
> >>custom module. ['__doc__', '__init__', '__module__', 'conn', 'curs',
> >>'dbname', 'host', 'insert', 'select', 'user']
> >>
> >>doing this from mod_python however gets me these results. ['__doc__',
> >>'__init__', '__module__', 'insert', 'select']
> >>
> >>the insert, and select entries, are methods, the conn,curs,dbname,host, and
> >>user entries are attributes, which mod_python seems to eat and then complain
> >>about the lack of. Any help would be greatly appreciated in this area as
> >>I've been scouring docs and mailing list archives trying to find any other
> >>instances of this problem and have thus far come up with nothing.
> >>
> >>- Mike "Fuzzy" Partin
> >>
> >>
> >>On Thu, 2004-09-09 at 10:50, Mike Partin wrote:
> >>
> >>>Is there something I've missed or a more serious issue at heart here. 
> >>>I've imported a module, made an instance of the class therein, however 
> >>>I'm getting stack traces claiming an attribute is not present, despite 
> >>>the code working perfectly on the command line and the attribute 
> >>>indeed actually being there. When I decided to do a little debugging 
> >>>and put a
> >>>dir(obj) in there, I was surprised to find that the object had only
> >>>methods, and *no* attributes listed whatsoever. I take this isn't normal
> >>>behaviour, I may be wrong, but it's kind of shaking my deadlines a bit
> >>>here. Any help would be appreciated.
> >>>
> >>>Mike "Fuzzy" Partin
> >>>
> >>>_______________________________________________
> >>>Mod_python mailing list
> >>>Mod_python@modpython.org 
> >>>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> > 
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From nick at dd.revealed.net  Fri Sep 10 12:50:03 2004
From: nick at dd.revealed.net (Nick)
Date: Fri Sep 10 12:50:21 2004
Subject: [mod_python] Circular references starting from the
	request	objectare not collected
In-Reply-To: <200409101643.i8AGhhSW019935@modpython.org>
References: <200409101643.i8AGhhSW019935@modpython.org>
Message-ID: <4141DB3B.1060103@dd.revealed.net>

Nicolas Lehuen wrote:

> I wrote my cleanup code like this :
> 
> def handler(req):
> 	# do something dirty
> 	# do another dirty thing
> 	try:
> 		# do usefull work
> 	finally:
> 		# cleanup the mess

I've never had a problem doing this, but I switched to a cleanup handler 
just in case.  Grisha is right, that apache (especially 1.3) can do 
unexpected things that mod_python can't predict or handle.

Nick
From toby at rcsreg.com  Fri Sep 10 04:53:47 2004
From: toby at rcsreg.com (Tobiah)
Date: Fri Sep 10 13:46:52 2004
Subject: [mod_python] Modules and scoping
Message-ID: <414187BB.4060604@rcsreg.com>

With PHP, I used to simply 'include()' sections of code to
get the code into different files.  Basically, all of the files
shared the same namespace, and I used a few global vars to tie
everything together.

No I'm tring to understand how to use the separate namespaces
of imported modules.  My web app has certain things, like a
user's progress through the app, stuff in his cart, his ID
number, the database link etc... that almost every module
needs to have access to.  What I have done is to make a wrapper
object, stuffed the req object into it, and pass that around to
just about every class constructor or as an argument to a function
call.  Does this seem reasonable, or am I missing the point.

Another issue is the import path.  I am building the app
in my regular web space using the Publisher handler.  The
publisher seems to wake up with some other working directory,
and so does not see modules in the same directory as index.py.
I am choosing not to use parts of the URL to index into module
files... all requests will be to index.py, and I will conditionally
import the appropriate content generating modules based on
context.

So, I modified sys.path, after examining the req object to find the
script location.  But it seems that I have to do this for every
module that imports other modules.  Does that seem reasonable?
I hope that I am way off of the mark with my method, and that
someone can enlighten me.

Thanks,

Tobiah
From armena at rpi.edu  Fri Sep 10 14:49:55 2004
From: armena at rpi.edu (Andrew Armenia)
Date: Fri Sep 10 13:50:09 2004
Subject: [mod_python] errordocument suppression?
Message-ID: <4141E943.7010505@rpi.edu>

Is there any way to return an error result from a mod_python handler, 
but suppress the normal apache error handling? I would like to return a 
response of 401 but not the normal 'Authorization Required' errordocument.

Thanks,
Andrew

From nicolas at lehuen.com  Fri Sep 10 21:39:44 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Fri Sep 10 14:39:52 2004
Subject: [mod_python] Circular references starting from
	therequest	objectare not collected
In-Reply-To: <4141DB3B.1060103@dd.revealed.net>
Message-ID: <20040910203534.AA5D0C421@postfix3-2.free.fr>

OK, thanks for the advice. 

> -----Message d'origine-----
> De : mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] De la part de Nick
> Envoy? : vendredi 10 septembre 2004 18:50
> ? : mod_python user mailing list
> Objet : Re: [mod_python] Circular references starting from 
> therequest objectare not collected
> 
> Nicolas Lehuen wrote:
> 
> > I wrote my cleanup code like this :
> > 
> > def handler(req):
> > 	# do something dirty
> > 	# do another dirty thing
> > 	try:
> > 		# do usefull work
> > 	finally:
> > 		# cleanup the mess
> 
> I've never had a problem doing this, but I switched to a 
> cleanup handler just in case.  Grisha is right, that apache 
> (especially 1.3) can do unexpected things that mod_python 
> can't predict or handle.
> 
> Nick
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


From nick at dd.revealed.net  Fri Sep 10 15:11:22 2004
From: nick at dd.revealed.net (Nick)
Date: Fri Sep 10 15:11:33 2004
Subject: [mod_python] PSE 2.1 Released
Message-ID: <4141FC5A.30507@dd.revealed.net>

Hi all,

I've release PSE version 2.1 today, available at http://nick.borko.org/pse 
with lots of bug fixes and some new features.  PSE is an application 
framework and templating engine for mod_python.

The changelog can be viewed at http://nick.borko.org/pse/Changelog.txt.

Nick
From michael at mrconsole.com  Fri Sep 10 22:25:13 2004
From: michael at mrconsole.com (Wright, Michael)
Date: Fri Sep 10 17:30:15 2004
Subject: [mod_python] mod_python 3.1.3, PSP, apache 2.0.50, FreeBSD 5.2.1,
	LD_PRELOADs but still "Fatal python error"
Message-ID: <1094844313.51950.27.camel@localhost>

On all .psp page loads, they appear to load fine, but in the apache
error log I get:

   Fatal Python error: PyThreadState_Delete: tstate is still current
   [notice] child pid 53450 exit signal Abort trap (6)


But in the apache access log, no entry is written.

/usr/local/sbin/envvars contains:
	LD_PRELOAD=/usr/lib/libc_r.so
	export LD_PRELOAD

Apache2 has NOT been compiled with the configure option
"--enable-threads".


Previous list threads of similar topic seem to stop at this point
without mention of resolution.  Any ideas?

Cheers,
Michael

From jseutter at gmail.com  Fri Sep 10 17:02:33 2004
From: jseutter at gmail.com (Jerry Seutter)
Date: Fri Sep 10 18:02:41 2004
Subject: [mod_python] errordocument suppression?
In-Reply-To: <4141E943.7010505@rpi.edu>
References: <4141E943.7010505@rpi.edu>
Message-ID: <2c8d48d704091015025a554bad@mail.gmail.com>

Hi,

Check this thread, it may have what you need:

http://www.modpython.org/pipermail/mod_python/2004-August/016221.html

Jerry

On Fri, 10 Sep 2004 13:49:55 -0400, Andrew Armenia <armena@rpi.edu> wrote:
> Is there any way to return an error result from a mod_python handler,
> but suppress the normal apache error handling? I would like to return a
> response of 401 but not the normal 'Authorization Required' errordocument.
> 
> Thanks,
> Andrew
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Sat Sep 11 15:15:38 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Sep 11 00:15:45 2004
Subject: [mod_python] Directory containing PythonHandler directive.
In-Reply-To: <20040910103503.R77559@onyx.ispol.com>
References: <1094801614.5537@dscpl.com.au>
	<20040910103503.R77559@onyx.ispol.com>
Message-ID: <3C849920-03A9-11D9-96B2-000393DCF16E@dscpl.com.au>


On 11/09/2004, at 12:36 AM, Gregory (Grisha) Trubetskoy wrote:

>
>
> On Fri, 10 Sep 2004, Graham Dumpleton wrote:
>
>> Is there any way that one can find out within a content handler at 
>> what directory
>> level the PythonHandler directive appeared for the request being 
>> processed?
>>
>> Ie., if PythonHandler is defined in:
>>
>>  /a/b/.htaccess
>>
>> and the request is for:
>>
>>  /a/b/c/d/e.html
>>
>
> It should be sys.path[0], unless you use PythonPath.

Between when I sent the email and saw this, I figured that sys.path may 
be my only
option. I'll need to do some experiments, but I wasn't sure though what 
happens
if for example /a/b/.htaccess defined PythonHandler but 
/a/b/c/.htaccess defines
some other mod_python handler besides the content handler. In this case 
sys.path
will possibly hold /a/b and /a/b/c. If sys.path is always reordered so 
that the
first entry is always the path for the handler being executed, all well 
and good,
if not, will be a bit more tricky.

Thanks though for confirming what I expected and I'll just have to play 
with it
a bit and look at what the code actually does.



--
Graham Dumpleton (grahamd@dscpl.com.au)

From Administrator at leebrown.org  Sat Sep 11 08:42:45 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Sat Sep 11 07:43:00 2004
Subject: [mod_python] errordocument suppression?
Message-ID: <039a01c497f4$74b59c50$0200a8c0@UberBox>

Greetings!

Are you wanting to do this only for certain URLs or only when a certain condition is met regardless of where it occurs?

Best Regards,
Lee E. Brown

On Fri, 10 Sep 2004 13:49:55 -0400, Andrew Armenia <armena@rpi.edu> wrote:
> Is there any way to return an error result from a mod_python handler,
> but suppress the normal apache error handling? I would like to return a
> response of 401 but not the normal 'Authorization Required' errordocument.
> 
> Thanks,
> Andrew
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040911/66713526/attachment-0001.html
From tme-h81 at myamail.com  Sat Sep 11 23:53:16 2004
From: tme-h81 at myamail.com (FC)
Date: Sat Sep 11 16:53:23 2004
Subject: [mod_python] Servlet and images.
Message-ID: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>


Hello,

I'm playing with mod_python and the servlet module from Daniel Popowich 
and I wanted to know how can I have python code and images in the same 
directory.

My htaccess file look like this:

SetHandler mod_python
PythonHandler mod_python.servlet
PythonDebug on

Apache try to run every file through the servelet module. I have also 
try to change SetHandler in my htaccess file to AddHander mod_python 
.mps and AddHandler mod_python .py but that doesn't work.

Fred


From nicolas at lehuen.com  Sun Sep 12 08:44:50 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Sun Sep 12 01:45:04 2004
Subject: [mod_python] Servlet and images.
In-Reply-To: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>
Message-ID: <20040912074043.CA42AC0F3@postfix3-2.free.fr>

Hi,

You can specify which extensions are matched in the AddHandler, and restrict
PythonHandler to specific extensions using the | .foo syntax. Here is my
configuration :

AddHandler mod_python .py .psp .pyh
PythonHandler mod_python.publisher | .py
PythonHandler mod_python.psp | .psp
PythonHandler mod_python.servlet | .mps
PythonHandler tcc.online.publisher | .pyh
PythonDebug On

Regards,

Nicolas

> -----Message d'origine-----
> De : mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] De la part de FC
> Envoy? : samedi 11 septembre 2004 22:53
> ? : mod_python user mailing list
> Objet : [mod_python] Servlet and images.
> 
> 
> Hello,
> 
> I'm playing with mod_python and the servlet module from 
> Daniel Popowich and I wanted to know how can I have python 
> code and images in the same directory.
> 
> My htaccess file look like this:
> 
> SetHandler mod_python
> PythonHandler mod_python.servlet
> PythonDebug on
> 
> Apache try to run every file through the servelet module. I 
> have also try to change SetHandler in my htaccess file to 
> AddHander mod_python .mps and AddHandler mod_python .py but 
> that doesn't work.
> 
> Fred
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


From grahamd at dscpl.com.au  Sun Sep 12 19:14:40 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Sep 12 04:14:46 2004
Subject: [mod_python] Servlet and images.
In-Reply-To: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>
References: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>
Message-ID: <CB47627C-0493-11D9-B8B2-000393DCF16E@dscpl.com.au>


On 12/09/2004, at 6:53 AM, FC wrote:

>
> Hello,
>
> I'm playing with mod_python and the servlet module from Daniel 
> Popowich and I wanted to know how can I have python code and images in 
> the same directory.
>
> My htaccess file look like this:
>
> SetHandler mod_python
> PythonHandler mod_python.servlet
> PythonDebug on
>
> Apache try to run every file through the servelet module. I have also 
> try to change SetHandler in my htaccess file to AddHander mod_python 
> .mps and AddHandler mod_python .py but that doesn't work.

I haven't used mpservlets and can't try it as I don't have Apache 2.0, 
so take the
following however you want. :-)

In the code for mpservlets it has:

     # get the filname which is either an apache-configured
     # UberServlet (one servlet to handle all requests) or possibly a
     # modpython servlet.
     filename = req.get_options().get('UberServlet') or 
_sm.verify_filename(req)

     # if the file doesn't exist return 404
     if not os.path.isfile(filename):
         return apache.HTTP_NOT_FOUND

     # if it's not a mps file, decline the request
     base, ext = os.path.splitext(filename)
     if ext != MPS:
         return apache.DECLINED

The end result of this is that if mpservlets doesn't think it can do 
anything
with the request, it will return apache.DECLINED. When this happens, 
one should
expect Apache then to take over, and provided the image file exists 
which the
code above already actually checked for, Apache should serve it up 
normally.

In my experience, this is what happens with mod_python 2.7.10 and 
Apache 1.3,
although having MultiViews on as an option in Apache can sometimes 
screw it
up a bit. Thus I run with:

   Options -MultiViews

The only thing therefore which I can see which would stuff it up is the 
first
part of the code above. Ie., the fiddling to get the actual filename. 
If an
UberServlet was defined, it wouldn't work as I described, nor would it 
if the
name of the image file began with an underscore or dot as 
verify_filename()
marks them as forbidden. The filename being requested must also have an
extension. If it doesn't the verify_filename() code will add the 
mpservlets
extension on the end and look for that instead.

Don't know if this will help or not, but that is how the code looks 
like it
works to me.

--
Graham Dumpleton (grahamd@dscpl.com.au)

From tme-h81 at myamail.com  Sun Sep 12 11:19:21 2004
From: tme-h81 at myamail.com (FC)
Date: Sun Sep 12 04:19:25 2004
Subject: [mod_python] Servlet and images.
In-Reply-To: <20040912074043.CA42AC0F3@postfix3-2.free.fr>
References: <20040912074043.CA42AC0F3@postfix3-2.free.fr>
Message-ID: <7317E9BE-0494-11D9-8CFC-000A9575BCC8@myamail.com>


Hello Nicolas,

I have try that to. That doesn't works either. With this following 
configuration nothing is executed my borwser displays the source of the 
files.

Fred

On Sep 12, 2004, at 7:44 AM, Nicolas Lehuen wrote:
>
> Hi,
>
> You can specify which extensions are matched in the AddHandler, and 
> restrict
> PythonHandler to specific extensions using the | .foo syntax. Here is 
> my
> configuration :
>
> AddHandler mod_python .py .psp .pyh
> PythonHandler mod_python.publisher | .py
> PythonHandler mod_python.psp | .psp
> PythonHandler mod_python.servlet | .mps
> PythonHandler tcc.online.publisher | .pyh
> PythonDebug On
>
> Regards,
>
> Nicolas
>
>> -----Message d'origine-----
>> De : mod_python-bounces@modpython.org
>> [mailto:mod_python-bounces@modpython.org] De la part de FC
>> Envoy? : samedi 11 septembre 2004 22:53
>> ? : mod_python user mailing list
>> Objet : [mod_python] Servlet and images.
>>
>>
>> Hello,
>>
>> I'm playing with mod_python and the servlet module from
>> Daniel Popowich and I wanted to know how can I have python
>> code and images in the same directory.
>>
>> My htaccess file look like this:
>>
>> SetHandler mod_python
>> PythonHandler mod_python.servlet
>> PythonDebug on
>>
>> Apache try to run every file through the servelet module. I
>> have also try to change SetHandler in my htaccess file to
>> AddHander mod_python .mps and AddHandler mod_python .py but
>> that doesn't work.
>>
>> Fred
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Sun Sep 12 21:46:33 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Sun Sep 12 20:46:37 2004
Subject: [mod_python] Servlet and images.
In-Reply-To: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>
References: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>
Message-ID: <20040912204237.J87921@onyx.ispol.com>


Create a subdirectory (e.g. images), then put an .htaccess with 
"SetHandler None" in it. Put your images in this directory. They won't be 
in the same directory technically speaking, but it will probably achieve 
what you want.

Otheriwise, if you really insist on the same directory, you either must 
use AddHandler instead of SetHandler, or write your handler such that it 
knows how to treat images (e.g. sends them using req.sendfile()).

Grisha

On Sat, 11 Sep 2004, FC wrote:

>
> Hello,
>
> I'm playing with mod_python and the servlet module from Daniel Popowich and I 
> wanted to know how can I have python code and images in the same directory.
>
> My htaccess file look like this:
>
> SetHandler mod_python
> PythonHandler mod_python.servlet
> PythonDebug on
>
> Apache try to run every file through the servelet module. I have also try to 
> change SetHandler in my htaccess file to AddHander mod_python .mps and 
> AddHandler mod_python .py but that doesn't work.
>
> Fred
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dpopowich at comcast.net  Sun Sep 12 22:19:32 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Sun Sep 12 21:20:23 2004
Subject: [mod_python] Servlet and images.
In-Reply-To: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>
References: <9AC36478-0434-11D9-A78B-000A9575BCC8@myamail.com>
Message-ID: <16708.62884.310893.124787@h00a0cc25a952.ne.client2.attbi.com>

FC writes:
> I'm playing with mod_python and the servlet module from Daniel Popowich 
> and I wanted to know how can I have python code and images in the same 
> directory.
> 
> My htaccess file look like this:
> 
> SetHandler mod_python
> PythonHandler mod_python.servlet
> PythonDebug on
> 
> Apache try to run every file through the servelet module.

Yes, the handler will "process" every file, but if it's *not* a MPS
file the handler will return apache.DECLINED, telling apache that the
servlet handler is refusing this file and apache should do its normal
thing with this file.  The end result is that you can co-locate
MPS files with images, html, js, css, etc.; as long as it doesn't end
in ".mps" apache should do the correct thing.

You can also put "other" files in subdirectories and use "SetHandler
None" to get apache to not even call the python handler.  I assume
there's a performance boost doing it this way.

> I have also try to change SetHandler in my htaccess file to
> AddHander mod_python .mps and AddHandler mod_python .py but that
> doesn't work.

You can't use AddHandler with mpservlets.  The handler enforces
"clean" urls, in other words, if you have a file, /some/dir/foo.mps,
then the handler only allows referencing it with /some/dir/foo.



Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From sanders at apache.org  Mon Sep 13 08:42:06 2004
From: sanders at apache.org (Scott Sanders)
Date: Mon Sep 13 10:42:02 2004
Subject: [mod_python] inithandler never called?
In-Reply-To: <2c8d48d70409091209c85fa5c@mail.gmail.com>
References: <2c8d48d704090910423a0d595b@mail.gmail.com>
	<9cd844804090911036837fae2@mail.gmail.com>
	<2c8d48d70409091209c85fa5c@mail.gmail.com>
Message-ID: <15868A08-0593-11D9-B920-000A95D2D288@apache.org>

I found that PythonInitHandler does NOT seem to be an alias to  
PythonHeaderParserHandler, since one works for me and the other doesn't  
:)

PythonInitHandler has never worked in any of my setups.

Scott

On Sep 9, 2004, at 12:09 PM, Jerry Seutter wrote:

> Actually, are you sure this information is correct?  I found the text
> as part of the
> PythonPostReadRequestHandler documentation, not PythonInitHandler.  In
> fact, the PythonInitHandler says that it is valid in directory
> contexts.
>
> At any rate, since PythonInitHandler is an alias to
> PythonHeaderParserHandler when in a directory context, I can use that
> instead.  It seems to be working...
>
> Jerry
>
> On Thu, 9 Sep 2004 14:03:28 -0400, Ross M Karchner
> <rosskarchner@gmail.com> wrote:
>> the 3.1 documentation says that InitHandler can't be used in a  
>> <Directory>
>>
>> """Note: When this phase of the request is processed, the URI has not
>> yet been translated into a path name, therefore this directive could
>> never be executed by Apache if it could specified within <Directory>,
>> <Location>, <File>
>> directives or in an '.htaccess' file. The only place this directive is
>> allowed is the main configuration file, and the
>> code for it will execute in the main interpreter. And because this
>> phase happens before any identification of the type
>> of content being requested is done (i.e. is this a python program or a
>> gif?), the python routine specified with this
>> handler will be called for ALL requests on this server"""
>>
>>
>>
>>
>> On Thu, 9 Sep 2004 11:42:57 -0600, Jerry Seutter <jseutter@gmail.com>  
>> wrote:
>>> Hi,
>>>
>>> I'm trying to use mod_python's PythonInitHandler hook and it never
>>> seems to be called.  I'm pretty sure I'm doing something stupid, but  
>>> I
>>> can't figure out what it is.
>>>
>>> Here is the relevant section from my httpd.conf:
>>>
>>> =======================================
>>> Alias "/mod_python" "/var/www/mod_python"
>>>
>>> <Directory "/var/www/mod_python">
>>>     AddHandler python-program .py
>>>     PythonInitHandler mod_python_test
>>>     PythonAccessHandler mod_python_test
>>>     PythonAuthenHandler mod_python_test
>>>     PythonFixupHandler mod_python_test
>>>     PythonHandler mod_python_test
>>>     PythonPath  
>>> "sys.path+['/var/www/mod_python','/usr/lib/python2.2/site-packages/ 
>>> mod_python']"
>>> </Directory>
>>> =======================================
>>>
>>> Here is the mod_python_test.py:
>>>
>>> =======================================
>>> import apache
>>> import sys
>>>
>>> myvar = "not initted"
>>>
>>> def inithandler(req):
>>>     global myvar
>>>     sys.stderr.write('inithandler called\n')
>>>     sys.stderr.flush()
>>>     myvar = "I have been initted!!!"
>>>     return apache.OK
>>>
>>> def accesshandler(req):
>>>     return apache.OK
>>>
>>> def authenhandler(req):
>>>     return apache.OK
>>>
>>> def handler(req):
>>>     req.content_type = "text/html"
>>>     req.write('<html><body>')
>>>     req.write('%s<br>' %(myvar))
>>>     req.write('</body></html>')
>>>
>>>     return apache.OK
>>> =======================================
>>>
>>> and here is what I get when I hit
>>> http://localhost/mod_python/mod_python_test.py:
>>>
>>> =======================================
>>> <html><body>not initted<br></body></html>
>>> =======================================
>>>
>>> I'm using:
>>> mod_python-3.0.3-2.ent
>>> python-2.2.3-26
>>> httpd-2.0.46-25.ent
>>> (on redhat as 3)
>>>
>>> If anyone knows what I'm doing wrong and feels like telling me,  
>>> thanks!
>>>
>>> Jerry Seutter
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From gdamjan at mail.net.mk  Mon Sep 13 22:17:36 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Mon Sep 13 15:17:40 2004
Subject: [mod_python] Feature request
Message-ID: <20040913191736.GB32048@legolas.on.net.mk>

Curently I use mod_python with config like this:

 AddHandler mod_python .py .png .jpeg
 PythonHandler image | .png .jpeg
 PythonHandler mod_python.publisher | .py

now, how about remove the AddHnadler directive, and make PythonHandler
automatically add it (in situations when an extension IS specified)?


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From vinjvinj at yahoo.com  Tue Sep 14 09:13:20 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Tue Sep 14 11:13:34 2004
Subject: [mod_python] Consulting Project: Anyone interested in porting a
	python bulletin board application to mp_servlet
Message-ID: <20040914151320.2436.qmail@web41312.mail.yahoo.com>

I found this link while searching for a bulletin board
application:

http://tboard.sourceforge.net/

I looked through the code and it looks failry complete
and seems to be a clone of phpBB

I'm willing to pay someone some money for this effort.
I'll have some specific features that I'll be looking
for. The code can be released as open source and it
will be a good reference applicaiton on
modpython/mpservlets

From rev_concept at virgilio.it  Tue Sep 14 22:25:18 2004
From: rev_concept at virgilio.it (Rev^)
Date: Tue Sep 14 15:22:22 2004
Subject: [mod_python] OpenBSD's Apache and mod_python
Message-ID: <001001c49a90$9248f700$0b00a8c0@dOOb>

Hi to the whole list, I write you to ask a help...

I use OpenBSD 3.5 with apache that run in chroot jail.
I have mod_ssl compiled statically too; now, I need the support for
python...

My softwares are:
- Apache 1.3.29
- mod_ssl/2.8.16 and OpenSSL/0.9.7c

I have installed python 2.3.3 and the I have unloaded mod_python-2.7.10.tgz

During the phase of compilation I have made these choices:

1) Because mod_python.so uses plain Apache 1.3 API, this module might crash
under EAPI, I have had to do:

    modify fileses: ../src/Makefile and Makefile.in
    OPT=-DEAPI

2) Configure

    CFLAGS='-DEAPI'
./configure --with-apache=/usr/src/usr.sbin/httpd/ --with-apxs=/usr/sbin/apx
s

3) Make. But since I have received an error type:

    /usr/src/usr.sbin/httpd/src/include/ap_config.h:79 ap_config_auto.h: No
such file or directory

        I have chosen to do

    #cp /usr/src/usr.sbin/httpd/src/include/ap_config.h
/usr/src/usr.sbin/httpd/src/include/ap_config_auto.h

        then

    make dso
    sudo make install

4) I have finally edited /var/www/conf/httpd.conf with followings line:

     LoadModule python_module /usr/lib/apache/modules/mod_python.so

        and if your configuration uses ClearModuleList, then also

     AddModule mod_python.c


Ok, the problem is that Apache doesn't turn and I doesn't receive any error
in error_log.
I receive the message that httpd has started, but "ps ax" assures that it is
not :((

I have also copied the necessary libraries in the chroot jail, following the
suggestions found on:
http://gary.burd.info/space/PythonCGIHttpdJail.html
but if uncommented the line that load mod_python, Apache don't work too.

Boh, google is not helping me...I hope in you :)


thanks in advance,

Obbit



From onefix at waste.org  Tue Sep 14 17:42:59 2004
From: onefix at waste.org (ogden nefix)
Date: Tue Sep 14 17:42:41 2004
Subject: [mod_python] Compiling mod_python with Apache 1.3.31
Message-ID: <414765E3.1010007@waste.org>

Hi,

I am trying to compile mod_python. Here are the details:

Apache 1.3.3.1
mod_python 2.7.10
Python 2.3.4

Now I am aware that Python 2.3.4 will not work properly with mod_python 
2.7.x though I heard it shouldn't be a problem.

1. I compiled and installed Python in /usr/local/Python-2.3.4:
	./configure --without-threads --prefix=/usr/local/pythong-2.3.4
	make (everything went fine)

2. I then proceeded to build mod_python:

     ./configure --with-apxs=/usr/local/apache/bin/apxs \
         --with-python=/usr/local/src/Python-2.3.4

	I had this problem:
	
	checking what libraries Python was linked with... grep: 
/usr/local/src/Python-2.3.4/Modules/Makefile: No such file or directory

	make (this went fine)

	make install - which had the problems:

Listing /usr/local/python-2.3.4/lib/python2.3/site-packages/mod_python ...
Compiling 
/usr/local/python-2.3.4/lib/python2.3/site-packages/mod_python/__init__.py 
...
Sorry invalid mode: U

....

Anyone know why this is occuring, or should I stop being ignorant and 
try Python 2.1 or something?

Thank you

Ogden
From ccurvey at earthlink.net  Tue Sep 14 22:00:28 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Tue Sep 14 20:42:37 2004
Subject: [mod_python] attention bakers:  UI mockups posted
Message-ID: <4147942C.4060508@earthlink.net>

My UI guy got swamped and couldn't help us out, so I just grabbed a 
basic design from oswd.com and did it myself.  You can find the mockups 
at http://www.chriscurvey.com/mpbo/examples.zip.  I'm not a UI designer, 
so I've tried to keep this very basic.

When you've got a solution working, let us know where we can 
see/download it!

-Chris

P.S.  I didn't see any responses posted to the use cases, so I'm 
assuming that they were all perfect and that there were no technical 
problems with people following up :)

From grahamd at dscpl.com.au  Tue Sep 14 20:52:02 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Sep 14 21:52:16 2004
Subject: [mod_python] attention bakers:  UI mockups posted
In-Reply-To: <4147942C.4060508@earthlink.net>
Message-ID: <1095213118.20639@dscpl.com.au>

On Sep 14 21:00, Chris Curvey <ccurvey@earthlink.net> wrote:
>
> Subject: [mod_python] attention bakers:  UI mockups posted
>
> My UI guy got swamped and couldn't help us out, so I just grabbed a 
> basic design from oswd.com and did it myself.  You can find the mockups 
> at http://www.chriscurvey.com/mpbo/examples.zip.  I'm not a UI designer, 
> so I've tried to keep this very basic.

Is there actually a "global.css" stylesheet, or is that just a placeholder.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From Administrator at leebrown.org  Tue Sep 14 23:32:10 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Tue Sep 14 22:32:35 2004
Subject: [mod_python] attention bakers:  UI mockups posted
References: <4147942C.4060508@earthlink.net>
Message-ID: <003c01c49acc$33981fb0$0200a8c0@UberBox>

Using html tables for page layout?  Tsk, tsk!, tsk!

Best Regards,
Lee E. Brown

----- Original Message ----- 
From: "Chris Curvey" <ccurvey@earthlink.net>
To: "mod_python user mailing list" <mod_python@modpython.org>
Sent: Tuesday, September 14, 2004 9:00 PM
Subject: [mod_python] attention bakers: UI mockups posted


> My UI guy got swamped and couldn't help us out, so I just grabbed a 
> basic design from oswd.com and did it myself.  You can find the mockups 
> at http://www.chriscurvey.com/mpbo/examples.zip.  I'm not a UI designer, 
> so I've tried to keep this very basic.
> 
> When you've got a solution working, let us know where we can 
> see/download it!
> 
> -Chris
> 
> P.S.  I didn't see any responses posted to the use cases, so I'm 
> assuming that they were all perfect and that there were no technical 
> problems with people following up :)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From r.pelizzi at virgilio.it  Wed Sep 15 13:05:39 2004
From: r.pelizzi at virgilio.it (R. Pelizzi)
Date: Wed Sep 15 06:09:27 2004
Subject: [mod_python] Consulting Project: Anyone interested in porting
	a	python bulletin board application to mp_servlet
In-Reply-To: <20040914151320.2436.qmail@web41312.mail.yahoo.com>
References: <20040914151320.2436.qmail@web41312.mail.yahoo.com>
Message-ID: <41483013.1040808@virgilio.it>

Vinj Vinj wrote:
> I found this link while searching for a bulletin board
> application:
> 
> http://tboard.sourceforge.net/
> 
> I looked through the code and it looks failry complete
> and seems to be a clone of phpBB
> 
> I'm willing to pay someone some money for this effort.
> I'll have some specific features that I'll be looking
> for. The code can be released as open source and it
> will be a good reference applicaiton on
> modpython/mpservlets
> 

I'm writing a Bulletin board with mod_python and mysql for an exam at 
the university. I'm still writing the underlying db-related code (so no 
mod_python code yet), so i could still choose mpservlets to write the 
html-related code. I was planning to use the standard publisher tough... 
i never looked into the servlets, are they that good?

From iradik at gmail.com  Wed Sep 15 04:32:09 2004
From: iradik at gmail.com (steven a)
Date: Wed Sep 15 06:32:13 2004
Subject: [mod_python] Consulting Project: Anyone interested in porting a
	python bulletin board application to mp_servlet
In-Reply-To: <20040914151320.2436.qmail@web41312.mail.yahoo.com>
References: <20040914151320.2436.qmail@web41312.mail.yahoo.com>
Message-ID: <656b799f04091503323751f790@mail.gmail.com>

i dont quite understand what you want...

#1 this program is in chinese, does it need to be translated?

#2 you want to convert it from python to mod_python?

thanks,stevenalyari



On Tue, 14 Sep 2004 08:13:20 -0700 (PDT), Vinj Vinj <vinjvinj@yahoo.com> wrote:
> I found this link while searching for a bulletin board
> application:
> 
> http://tboard.sourceforge.net/
> 
> I looked through the code and it looks failry complete
> and seems to be a clone of phpBB
> 
> I'm willing to pay someone some money for this effort.
> I'll have some specific features that I'll be looking
> for. The code can be released as open source and it
> will be a good reference applicaiton on
> modpython/mpservlets
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From ccurvey at earthlink.net  Wed Sep 15 08:17:58 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Wed Sep 15 06:59:53 2004
Subject: [mod_python] attention bakers:  UI mockups posted
In-Reply-To: <4147942C.4060508@earthlink.net>
References: <4147942C.4060508@earthlink.net>
Message-ID: <414824E6.7070701@earthlink.net>

Ah, the pleasures of having lots of testers.

1) I have added the global.css to the reference copy.  (BTW, the name of 
the original source from owsd is "Nature").
2) Sorry about the tag soup.  I'm not a web designer, so I just took the 
existing template and hacked it.  Byron Ellacott has created an XHTML 
version and will post it to the list to keep everyone moving, I'll post 
the reference copy after I get back from the day job.
3) Yes, I used tables for layout.  Someday I'll learn CSS :)

-Chris

Chris Curvey wrote:

> My UI guy got swamped and couldn't help us out, so I just grabbed a 
> basic design from oswd.com and did it myself.  You can find the 
> mockups at http://www.chriscurvey.com/mpbo/examples.zip.  I'm not a UI 
> designer, so I've tried to keep this very basic.
>
> When you've got a solution working, let us know where we can 
> see/download it!
>
> -Chris
>
> P.S.  I didn't see any responses posted to the use cases, so I'm 
> assuming that they were all perfect and that there were no technical 
> problems with people following up :)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From grahamd at dscpl.com.au  Wed Sep 15 22:22:44 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 15 07:22:57 2004
Subject: [mod_python] attention bakers:  UI mockups posted
In-Reply-To: <414824E6.7070701@earthlink.net>
References: <4147942C.4060508@earthlink.net> <414824E6.7070701@earthlink.net>
Message-ID: <90CC35A2-0709-11D9-AE28-000393DCF16E@dscpl.com.au>


On 15/09/2004, at 9:17 PM, Chris Curvey wrote:

> Ah, the pleasures of having lots of testers.
>
> 1) I have added the global.css to the reference copy.  (BTW, the name 
> of the original source from owsd is "Nature").
> 2) Sorry about the tag soup.  I'm not a web designer, so I just took 
> the existing template and hacked it.  Byron Ellacott has created an 
> XHTML version and will post it to the list to keep everyone moving, 
> I'll post the reference copy after I get back from the day job.
> 3) Yes, I used tables for layout.  Someday I'll learn CSS :)

Another minor nit. In projectReport.html, the location is "Manage 
Projects" when
it presumably should be something like "Project Report".

BTW, for userReportDetail.html and projectReportDetail.html, what is 
the intention
as to how it should be displayed when you have more than one months 
worth of data.
If one keeps putting dates out horizontally, going to look messy. 
Putting months
on top of each other is an option, but what do you then do about totals.

Not sure what the problem is with the tables. Most use of tables was 
reasonable.
The only one I would say was a bit strange was that around the 
Javascript code
for modification date.

With respect to the use of Javascript, I would suggest simply a place 
holder for
the concept of a last modified marker. How that is achieved should be 
left up to
the implementer. They could use Javascript, or they could use the 
ability of their
server side code to fill out the data there instead.

I am sure that someone will offer up some CSS to replace that table 
once we get into
this, so just give it an footer-text id tag for now and let it float 
where it wants.
I'd have a look at it myself, but not enough time right now to focus on 
all this
just yet.

--
Graham Dumpleton (grahamd@dscpl.com.au)

From ccurvey at earthlink.net  Wed Sep 15 09:44:33 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Wed Sep 15 08:26:29 2004
Subject: [mod_python] attention bakers:  UI mockups posted
In-Reply-To: <90CC35A2-0709-11D9-AE28-000393DCF16E@dscpl.com.au>
References: <4147942C.4060508@earthlink.net> <414824E6.7070701@earthlink.net>
	<90CC35A2-0709-11D9-AE28-000393DCF16E@dscpl.com.au>
Message-ID: <41483931.9010000@earthlink.net>

Graham Dumpleton wrote:

>
> On 15/09/2004, at 9:17 PM, Chris Curvey wrote:
>
>> Ah, the pleasures of having lots of testers.
>>
>> 1) I have added the global.css to the reference copy.  (BTW, the name 
>> of the original source from owsd is "Nature").
>> 2) Sorry about the tag soup.  I'm not a web designer, so I just took 
>> the existing template and hacked it.  Byron Ellacott has created an 
>> XHTML version and will post it to the list to keep everyone moving, 
>> I'll post the reference copy after I get back from the day job.
>> 3) Yes, I used tables for layout.  Someday I'll learn CSS :)
>
>
> Another minor nit. In projectReport.html, the location is "Manage 
> Projects" when
> it presumably should be something like "Project Report".

Nice catch.

>
> BTW, for userReportDetail.html and projectReportDetail.html, what is 
> the intention
> as to how it should be displayed when you have more than one months 
> worth of data.
> If one keeps putting dates out horizontally, going to look messy. 
> Putting months
> on top of each other is an option, but what do you then do about totals.

This was laziness, cleverly disguised as "keeping it simple".  We could 
add some really slick drill-down functionality, but I thought it better 
to get a simple example working rather than spend a lot of time working 
on a clever UI.

>
> Not sure what the problem is with the tables. Most use of tables was 
> reasonable.
> The only one I would say was a bit strange was that around the 
> Javascript code
> for modification date.
>
> With respect to the use of Javascript, I would suggest simply a place 
> holder for
> the concept of a last modified marker. How that is achieved should be 
> left up to
> the implementer. They could use Javascript, or they could use the 
> ability of their
> server side code to fill out the data there instead.

Absoultely.  My intention was to give people a standard to shoot for so 
that we could concentrate on the implementation, rather than the UI.  
(Frankly, that modification date came from the original template, and 
I'm not sure I like it.)

>
> I am sure that someone will offer up some CSS to replace that table 
> once we get into
> this, so just give it an footer-text id tag for now and let it float 
> where it wants.
> I'd have a look at it myself, but not enough time right now to focus 
> on all this
> just yet.
>
> -- 
> Graham Dumpleton (grahamd@dscpl.com.au)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From Administrator at leebrown.org  Wed Sep 15 13:11:31 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Wed Sep 15 12:12:13 2004
Subject: [mod_python] attention bakers:  UI mockups posted
References: <4147942C.4060508@earthlink.net> <414824E6.7070701@earthlink.net>
Message-ID: <007201c49b3e$a9efa8f0$0200a8c0@UberBox>

Greetings!

I owe y'all an apology; my comment about using tables for page layout was
purely in jest.  I just happen to be one of those "never mix presentation
with structure" purists.  Page layout isn't the focus of the bake off so
I'll keep my mouth shut from now on.

I won't be attempting to enter the bake off, being still the neophyte when
it comes to Python and Web Servelets.  But I'm very strong in XHTML and CSS;
if I can help out in any way please let me know.

Best Regards,
Lee E. Brown

----- Original Message ----- 
From: "Chris Curvey" <ccurvey@earthlink.net>
To: "mod_python user mailing list" <mod_python@modpython.org>
Sent: Wednesday, September 15, 2004 7:17 AM
Subject: Re: [mod_python] attention bakers: UI mockups posted


> Ah, the pleasures of having lots of testers.
>
> 1) I have added the global.css to the reference copy.  (BTW, the name of
> the original source from owsd is "Nature").
> 2) Sorry about the tag soup.  I'm not a web designer, so I just took the
> existing template and hacked it.  Byron Ellacott has created an XHTML
> version and will post it to the list to keep everyone moving, I'll post
> the reference copy after I get back from the day job.
> 3) Yes, I used tables for layout.  Someday I'll learn CSS :)

From craig.warren at encorp.com  Wed Sep 15 13:37:41 2004
From: craig.warren at encorp.com (Craig Warren)
Date: Wed Sep 15 14:36:55 2004
Subject: [mod_python] import errors
Message-ID: <1095273461.10498.35.camel@lapbob>

I am just starting to use mod_python and I am see a strange
behavior.  I have a handler (XMLRPC) that is import another file of mine
(node.py).  The imported file seems to get imported for every thread (ie
the code gets run multiple times, once for each tread (I think)). 
Anybody have any ideas why? I have checked and it is using the same
interpreter.  I would think that once it is imported, it wouldn't get
imported again and the code wouldn't run.

In my handler xmlrpc.py  I have the following

  node = apache.import_module('mod_python.node',1,1)

and I have also used  (with the same affect)

   from mod_python import node

In my node.py file I have the following to print to the log

def log(msg):
    if debug:  
        apache.log_error('DEBUG:%s' % msg)
import sys
log('Importing node.py...') 
log('module is in sys.modules Modules for sys.modules:%s' %
sys.modules['mod_python.node'])


Below is output from the error_log that I printed to.   You can see it
gets imported 8 times. In my httpd.conf file I have the following
configuration.
<IfModule prefork.c>
StartServers       8
MinSpareServers    5
MaxSpareServers   20
MaxClients       150
MaxRequestsPerChild  4000
</IfModule>


Log File:
[Wed Sep 15 12:16:16 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:16 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>
[Wed Sep 15 12:16:16 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:16 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>
[Wed Sep 15 12:16:18 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:18 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>
[Wed Sep 15 12:16:20 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:20 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>
[Wed Sep 15 12:16:22 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:22 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>
[Wed Sep 15 12:16:24 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:24 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>
[Wed Sep 15 12:16:26 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:26 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>
[Wed Sep 15 12:16:28 2004] [error] DEBUG:Importing node.py...
[Wed Sep 15 12:16:28 2004] [error] DEBUG:module is in sys.modules
Modules for sys.modules:<module 'mod_python.node' from
'/usr/lib/python2.3/site-packages/mod_python/node.py'>


Thanks for any help in advance.

Craig Warren

-- 
Craig Warren
Senior Programmer       
Encorp
craig.warren@encorp.co

From bje at apnic.net  Thu Sep 16 09:42:07 2004
From: bje at apnic.net (Byron Ellacott)
Date: Wed Sep 15 18:40:40 2004
Subject: [mod_python] attention bakers:  UI mockups posted]
Message-ID: <4148C53F.9010600@apnic.net>

Chris Curvey wrote:
> My UI guy got swamped and couldn't help us out, so I just grabbed a 
> basic design from oswd.com and did it myself.  You can find the mockups 
> at http://www.chriscurvey.com/mpbo/examples.zip.  I'm not a UI designer, 
> so I've tried to keep this very basic.

If you're not interested in writing your own database layer, I've
created a simple wrapper around PySQLite that you can use:

http://users.bigpond.net.au/dhask/dblite.zip

The dblite.py module defines three classes, Project, User and Timecard.
  All classes have the methods fetch, delete, update and search defined,
with docstrings.  The back end is a pysqlite database, with location
defined by a constant at the top of the file, currently
'/tmp/bakeoff.db'.  The included schema.txt file will create the bakeoff
database and insert some sample data for users and projects.

The tables I've chosen correspond to the three classes, with Project
having a name, an optional manager and a mandatory end date, primary key
name.  User is name, optional manager, password, isadmin flag, primary
key name.  Timecard is user, date, project, hours, primary key (user,
date, project).

Quick sample usage:

user = dblite.User()
user.fetch(name = 'Dilbert')
timecard = dblite.Timecard()
for tc in timecard.search('user = %s', [user.name], 'date'):
     print tc.date, tc.project, tc.hours

Also available is an XHTML-compliant version of the templates:

http://users.bigpond.net.au/dhask/example.zip

Note that the code I'm using for the DB layer isn't real crash hot.
It'll do the job, but I suggest you think twice before using it in real
projects. :)

-- 
bje
From vinjvinj at yahoo.com  Thu Sep 16 09:42:12 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Thu Sep 16 11:47:48 2004
Subject: [mod_python] Consulting Project: Anyone interested in porting a
	python bulletin board application to mp_servlet
Message-ID: <20040916154212.6724.qmail@web41315.mail.yahoo.com>

I've used pretty much everything. webware, quixote,
cherrypy, zope. 

I've settled on mpservlet because its one step above
mod_python and is the least invasive way to program.
it does not force a template solution on you. If
something does not work you can look at the code and
easily change it. 

Using a servlet architecture means people familar with
java and webware can easily work with your code. 

I've writen a decent size application in mpservlet and
have been plesently suurprised. 



-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org]On Behalf Of
R. Pelizzi
Sent: Wednesday, September 15, 2004 7:06 AM
To: vineet@eswap.com; mod_python user mailing list
Subject: Re: [mod_python] Consulting Project: Anyone
interested in
portinga python bulletin board application to
mp_servlet


Vinj Vinj wrote:
> I found this link while searching for a bulletin
board
> application:
> 
> http://tboard.sourceforge.net/
> 
> I looked through the code and it looks failry
complete
> and seems to be a clone of phpBB
> 
> I'm willing to pay someone some money for this
effort.
> I'll have some specific features that I'll be
looking
> for. The code can be released as open source and it
> will be a good reference applicaiton on
> modpython/mpservlets
> 

I'm writing a Bulletin board with mod_python and mysql
for an exam at 
the university. I'm still writing the underlying
db-related code (so no 
mod_python code yet), so i could still choose
mpservlets to write the 
html-related code. I was planning to use the standard
publisher tough... 
i never looked into the servlets, are they that good?

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From craig.warren at encorp.com  Thu Sep 16 15:08:29 2004
From: craig.warren at encorp.com (Craig Warren)
Date: Thu Sep 16 16:07:40 2004
Subject: [mod_python] how do import work?
Message-ID: <1095365309.9167.80.camel@lapbob>


I have read the documentation, but I have not found any place that says
how imports work.  I have written a previous email about this, but if I
have a handler that imports another file, does that imported file get
imported for every thread?  I can print out the interpreter name and it
is using the same interpreter, but every thread seems to have it's own
context.  Is this the way it is supposed to work?

Thanks,

Craig Warren


-- 
Craig Warren
Senior Programmer	
Encorp
craig.warren@encorp.com
From JSmuts at clover.co.za  Fri Sep 17 00:23:42 2004
From: JSmuts at clover.co.za (Jaco Smuts)
Date: Thu Sep 16 17:23:28 2004
Subject: [mod_python] .htaccess files in sample psp site
Message-ID: <OFA8A43E1A.25531BE4-ON42256F11.004F8B25-42256F11.00758804@clover.co.za>

Hello there

First of all allow me to  thank everyone for a great tool.

I've only started down the route of learning mod_python. I really like the 
idea's as set out in the onlamp article 
(http://www.onlamp.com/pub/a/python/2004/02/26/python_server_pages.html) 
and implemented in the downloadable sample psp site.

I suspect there is an error in the downloadable tar.gz file though.

I tried to get it working, but my image did not display initially. That 
set me off fiddling with my httpd.conf file and eventually completely 
breaking it.

I've since picked up that the directives as included in the index.py 
source file is right; however the .htaccess file in the images folder 
contained:

Sethandler None

changing this to 

SetHandler default-handler 

fixed the problem.

It cost me more than a day trying to figure out what I  was doing wrong 
though. Please let me know if this is the correct solution. If so maybe we 
(actually someone as I don't know how  to do this) could fix the .htaccess 
file in the sample download. Also a comment in the index.py  where the 
other apache directives are mentioned specifically referring to  the 
.htaccess files would be a great help.

kind regards
jaco



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040916/08a23003/attachment.html
From modpython at holovaty.com  Thu Sep 16 18:31:21 2004
From: modpython at holovaty.com (Adrian Holovaty)
Date: Thu Sep 16 18:33:09 2004
Subject: [mod_python] Detecting http vs. https
Message-ID: <200409161731.21574.modpython@holovaty.com>

Hey everybody,

What's the easiest and most reliable way for me to detect if a request has 
come in via https vs. http?

It'd be best if I didn't have to parse any of the request attributes manually.

Thanks,
Adrian
From ccurvey at earthlink.net  Thu Sep 16 20:15:19 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Thu Sep 16 18:56:54 2004
Subject: [mod_python] how do import work?
In-Reply-To: <1095365309.9167.80.camel@lapbob>
References: <1095365309.9167.80.camel@lapbob>
Message-ID: <414A1E87.8000307@earthlink.net>

I think so, given the information in 
http://modpython.org/FAQ/faqw.py?req=show&file=faq03.001.htp

I'm (almost) positive that if you're using the prefork MPM (which uses a 
separate, single-threaded process for each request), each OS process 
will have it's own context (see http://httpd.apache.org/docs-2.0/mpm.html).

I have also learned that objects in a context stay alive between 
requests, so something like this (using mpservlets)

class myhandler(HTMLPage):
    def  __init__(self):
        self.messages = []

    def add_message(self):
         self.messages.append("a new message")

will cause self.messages to grow and grow and grow as multiple requests 
hit add_message.  And of course, you can't ever count on the same OS 
process serving the same client over and over.  (This makes sense to me, 
because one of the features of mod_python is that classes get pulled 
into memory once and then don't need to be re-used. )

Of course, there's a possibility that I'm totally off base here, so any 
corrections would be appreciated.

Craig Warren wrote:

>I have read the documentation, but I have not found any place that says
>how imports work.  I have written a previous email about this, but if I
>have a handler that imports another file, does that imported file get
>imported for every thread?  I can print out the interpreter name and it
>is using the same interpreter, but every thread seems to have it's own
>context.  Is this the way it is supposed to work?
>
>Thanks,
>
>Craig Warren
>
>
>  
>


From nick at dd.revealed.net  Thu Sep 16 18:59:07 2004
From: nick at dd.revealed.net (Nick)
Date: Thu Sep 16 18:59:21 2004
Subject: [mod_python] Detecting http vs. https
In-Reply-To: <200409161731.21574.modpython@holovaty.com>
References: <200409161731.21574.modpython@holovaty.com>
Message-ID: <414A1ABB.5010402@dd.revealed.net>

The HTTPS variable will be set in the environment.

Nick

Adrian Holovaty wrote:
> Hey everybody,
> 
> What's the easiest and most reliable way for me to detect if a request has 
> come in via https vs. http?
> 
> It'd be best if I didn't have to parse any of the request attributes manually.
> 
> Thanks,
> Adrian
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From niklas at chimney.se  Fri Sep 17 02:15:31 2004
From: niklas at chimney.se (Niklas Aldergren)
Date: Thu Sep 16 19:15:37 2004
Subject: [mod_python] Detecting http vs. https
In-Reply-To: <414A1ABB.5010402@dd.revealed.net>
References: <200409161731.21574.modpython@holovaty.com>
	<414A1ABB.5010402@dd.revealed.net>
Message-ID: <4E58DE18-0836-11D9-A0FF-000D93AE0D54@chimney.se>

On 17 sep 2004, at 00.59, Nick wrote:

> The HTTPS variable will be set in the environment.
>
> Nick
>
> Adrian Holovaty wrote:
>> Hey everybody,
>> What's the easiest and most reliable way for me to detect if a 
>> request has come in via https vs. http?
>> It'd be best if I didn't have to parse any of the request attributes 
>> manually.
>> Thanks,
>> Adrian

In Apache 2, mod_ssl can be made to set all sorts of fancy environment 
variables,
like HTTPS, etc. But, seeing as the interpreter is embedded in the 
actual
server process I'm guessing this can't actually be set since a new 
process is
never created. Try looking at os.environ -- what I find there is the 
environment
for the server process.

A strikingly unreliable way to detect http/https would be to look at 
what
local port the request came in on, either at req.server.port or 
req.connection.local_addr.

Otherwise, it's bound to be in the Apache internals somewhere.

/Niklas

From niklas at chimney.se  Fri Sep 17 02:27:48 2004
From: niklas at chimney.se (Niklas Aldergren)
Date: Thu Sep 16 19:27:53 2004
Subject: [mod_python] Detecting http vs. https
In-Reply-To: <4E58DE18-0836-11D9-A0FF-000D93AE0D54@chimney.se>
References: <200409161731.21574.modpython@holovaty.com>
	<414A1ABB.5010402@dd.revealed.net>
	<4E58DE18-0836-11D9-A0FF-000D93AE0D54@chimney.se>
Message-ID: <057B6936-0838-11D9-A0FF-000D93AE0D54@chimney.se>

On 17 sep 2004, at 01.15, Niklas Aldergren wrote:

> On 17 sep 2004, at 00.59, Nick wrote:
>
>> The HTTPS variable will be set in the environment.
>>
>> Nick
>>
>> Adrian Holovaty wrote:
>>> Hey everybody,
>>> What's the easiest and most reliable way for me to detect if a 
>>> request has come in via https vs. http?
>>> It'd be best if I didn't have to parse any of the request attributes 
>>> manually.
>>> Thanks,
>>> Adrian
>
> In Apache 2, mod_ssl can be made to set all sorts of fancy environment 
> variables,
> like HTTPS, etc. But, seeing as the interpreter is embedded in the 
> actual
> server process I'm guessing this can't actually be set since a new 
> process is
> never created. Try looking at os.environ -- what I find there is the 
> environment
> for the server process.

Or, maybe I should just be looking at the proper place for the 
environment, req.subprocess_env.

if req.subprocess_env['HTTPS'] == 'on':
	...

I'll be shutting up now :)

/Niklas

From modpython at holovaty.com  Thu Sep 16 21:31:28 2004
From: modpython at holovaty.com (Adrian Holovaty)
Date: Thu Sep 16 21:33:19 2004
Subject: [mod_python] Detecting http vs. https
In-Reply-To: <057B6936-0838-11D9-A0FF-000D93AE0D54@chimney.se>
References: <200409161731.21574.modpython@holovaty.com>
	<4E58DE18-0836-11D9-A0FF-000D93AE0D54@chimney.se>
	<057B6936-0838-11D9-A0FF-000D93AE0D54@chimney.se>
Message-ID: <200409162031.28356.modpython@holovaty.com>

Niklas Aldergren wrote:
> Or, maybe I should just be looking at the proper place for the
> environment, req.subprocess_env.
>
> if req.subprocess_env['HTTPS'] == 'on':

Thanks for your help. This is what I ended up using:

is_https = req.subprocess_env.has_key('HTTPS') \
    and req.subprocess_env['HTTPS'] == 'on'

Adrian
From bray at sent.com  Thu Sep 16 23:46:42 2004
From: bray at sent.com (Brian Ray)
Date: Thu Sep 16 23:46:45 2004
Subject: [mod_python] Install issues: Server Internal Error 500
Message-ID: <307C88F0-085C-11D9-8ECE-000393881D64@sent.com>

Hello, I am having a hard time with mod_python 3.1.3 on Apache 2 Python 
2.3 on Mac OSX 10.3.5.  I am new to mod_python but not to Apache.

When following the instruction in the manual from modpython.org I get 
an Internal Sever Error 500 with no helpful error logs. All complies 
without warning or error. Here is my error log:

	[Thu Sep 16 22:34:59 2004] [notice] Graceful restart requested, doing 
restart
	[Thu Sep 16 22:34:59 2004] [notice] mod_python: Creating 32 session 
mutexes based on 150 max processes and 0 max threads.
	[Thu Sep 16 22:34:59 2004] [notice] Digest: generating secret for 
digest authentication ...
	[Thu Sep 16 22:34:59 2004] [notice] Digest: done
	[Thu Sep 16 22:35:00 2004] [notice] Apache/2.0.50 (Unix) DAV/2 
mod_python/3.1.3 	Python/2.3b2 configured -- resuming normal operations

My http.conf.

	LoadModule python_module modules/mod_python.so

	<Directory /opt/local/apache2/htdocs>
		AddHandler mod_python .py
		PythonHandler mptest
		PythonDebug On
  	</Directory>

I am able to import mod_python without error from the command line. I 
have checked the permissions in the site-packages as well as the so 
module.  I wish I could provide some more helpful info, but I am at a 
loss. Any Ideas?

From Administrator at leebrown.org  Fri Sep 17 00:58:44 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Thu Sep 16 23:59:14 2004
Subject: [mod_python] Install issues: Server Internal Error 500
References: <307C88F0-085C-11D9-8ECE-000393881D64@sent.com>
Message-ID: <009801c49c6a$a0334ec0$0200a8c0@UberBox>

Greetings!

If you are using htaccess files, you must add an AllowOveride directive.

Best Regards,
Lee E. Brown

----- Original Message ----- 
From: "Brian Ray" <bray@sent.com>
To: <mod_python@modpython.org>
Sent: Thursday, September 16, 2004 11:46 PM
Subject: [mod_python] Install issues: Server Internal Error 500


> Hello, I am having a hard time with mod_python 3.1.3 on Apache 2 Python 
> 2.3 on Mac OSX 10.3.5.  I am new to mod_python but not to Apache.
> 
> When following the instruction in the manual from modpython.org I get 
> an Internal Sever Error 500 with no helpful error logs. All complies 
> without warning or error. Here is my error log:
> 
> [Thu Sep 16 22:34:59 2004] [notice] Graceful restart requested, doing 
> restart
> [Thu Sep 16 22:34:59 2004] [notice] mod_python: Creating 32 session 
> mutexes based on 150 max processes and 0 max threads.
> [Thu Sep 16 22:34:59 2004] [notice] Digest: generating secret for 
> digest authentication ...
> [Thu Sep 16 22:34:59 2004] [notice] Digest: done
> [Thu Sep 16 22:35:00 2004] [notice] Apache/2.0.50 (Unix) DAV/2 
> mod_python/3.1.3 Python/2.3b2 configured -- resuming normal operations
> 
> My http.conf.
> 
> LoadModule python_module modules/mod_python.so
> 
> <Directory /opt/local/apache2/htdocs>
> AddHandler mod_python .py
> PythonHandler mptest
> PythonDebug On
>   </Directory>
> 
> I am able to import mod_python without error from the command line. I 
> have checked the permissions in the site-packages as well as the so 
> module.  I wish I could provide some more helpful info, but I am at a 
> loss. Any Ideas?
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From bray at sent.com  Fri Sep 17 08:54:44 2004
From: bray at sent.com (Brian Ray)
Date: Fri Sep 17 08:54:47 2004
Subject: [mod_python] Install issues: Server Internal Error 500
In-Reply-To: <009801c49c6a$a0334ec0$0200a8c0@UberBox>
References: <307C88F0-085C-11D9-8ECE-000393881D64@sent.com>
	<009801c49c6a$a0334ec0$0200a8c0@UberBox>
Message-ID: <BF6F5F24-08A8-11D9-8884-000393881D64@sent.com>


On Sep 16, 2004, at 10:58 PM, Lee E. Brown wrote:

> Greetings!
>
> If you are using htaccess files, you must add an AllowOveride 
> directive.
>

I am not using an .htaccess file. I am simply modifying the httpd.conf. 
AFAIK the AllowOveride directive only matters if I am using a .htaccess 
file, correct?

> ----- Original Message -----
> From: "Brian Ray" <bray@sent.com>
>>
>> <Directory /opt/local/apache2/htdocs>
>> AddHandler mod_python .py
>> PythonHandler mptest
>> PythonDebug On
>>   </Directory>
>>

From vinjvinj at yahoo.com  Fri Sep 17 09:08:30 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Fri Sep 17 11:08:48 2004
Subject: [mod_python] How to have a form submit to two different servlets
	with _call_
Message-ID: <20040917150831.5720.qmail@web41310.mail.yahoo.com>

I'm using the _call functionality significantly.
Depending on the button the user preses, I need to
submit the form to two different servlets.

I'm ujsing the onclick functionality of the submit tag
on the form:

<input type=submit 
name="_call_do_some_function()" 
onClick="document.mainform.action='Servlet1';document.mainform.submit();>

But the problem with that is the the right _call_
function is not being passed to the servlet.

so then I tried:

<input type=submit 
name="_call_do_some_function()" 
onClick="document.mainform.action='Servlet1?=_call_do_some_function()';document.mainform.submit();>

From vinjvinj at yahoo.com  Fri Sep 17 09:32:36 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Fri Sep 17 11:32:44 2004
Subject: [mod_python] How to have a form submit to two different servletswith
	_call_
Message-ID: <20040917153236.30473.qmail@web41309.mail.yahoo.com>

I figured this out. If you change the form type to get
then you can add the _call function to the action of
the form. 

From craig.warren at encorp.com  Fri Sep 17 10:40:43 2004
From: craig.warren at encorp.com (Craig Warren)
Date: Fri Sep 17 11:39:55 2004
Subject: [mod_python] how do import work?
In-Reply-To: <414A1E87.8000307@earthlink.net>
References: <1095365309.9167.80.camel@lapbob> <414A1E87.8000307@earthlink.net>
Message-ID: <1095435643.3839.14.camel@lapbob>

Thanks for the info, this is what I have been experiencing. Each
"thread" has its own context, so if you set a variable in the module, it
will stay alive between requests, but might be different between threads
that serve the requests.  This is fine, I am just trying to understand
how all this works.  

So far I really like how this all works and it seems to work pretty
well.  The only thing I think could use a little rework is when a psp
page includes a file, if you modify the included file the main file
doesn't update with the changes.  You have to modify the main file to
see the changes.  It would be nice if you changed the included file and
the changes be seen in the file that included it.  Not that big of deal,
you just have to write a little script that touches all the file so then
it reloads the main file.

Thanks again,
Craig
   


 On Thu, 2004-09-16 at 17:15, Chris Curvey wrote:
> I think so, given the information in 
> http://modpython.org/FAQ/faqw.py?req=show&file=faq03.001.htp
> 
> I'm (almost) positive that if you're using the prefork MPM (which uses a 
> separate, single-threaded process for each request), each OS process 
> will have it's own context (see http://httpd.apache.org/docs-2.0/mpm.html).
> 
> I have also learned that objects in a context stay alive between 
> requests, so something like this (using mpservlets)
> 
> class myhandler(HTMLPage):
>     def  __init__(self):
>         self.messages = []
> 
>     def add_message(self):
>          self.messages.append("a new message")
> 
> will cause self.messages to grow and grow and grow as multiple requests 
> hit add_message.  And of course, you can't ever count on the same OS 
> process serving the same client over and over.  (This makes sense to me, 
> because one of the features of mod_python is that classes get pulled 
> into memory once and then don't need to be re-used. )
> 
> Of course, there's a possibility that I'm totally off base here, so any 
> corrections would be appreciated.
> 
> Craig Warren wrote:
> 
> >I have read the documentation, but I have not found any place that says
> >how imports work.  I have written a previous email about this, but if I
> >have a handler that imports another file, does that imported file get
> >imported for every thread?  I can print out the interpreter name and it
> >is using the same interpreter, but every thread seems to have it's own
> >context.  Is this the way it is supposed to work?
> >
> >Thanks,
> >
> >Craig Warren
> >
> >
> >  
> >
-- 
Craig Warren
Senior Programmer	
Encorp
craig.warren@encorp.com
From vmanera at manord.com  Fri Sep 17 20:07:46 2004
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Sep 17 13:09:11 2004
Subject: [mod_python] R: Mod_python Digest, Vol 18,
	Issue 27 : How to have a form submit to two different servlet
Message-ID: <52DC70C1C1575C418CB033523A29CF1401A76A4E@exchange2000.manord.com>

I use this trick for solve the problem below:
<input type=submit name="_call_do_some_function()" >

def do_some_function(self):
	......
	self.external_redirect(uri)
	return True 

Villiam Manera


#---------------------------------------------------------
Message: 12
Date: Fri, 17 Sep 2004 08:08:30 -0700 (PDT)
From: Vinj Vinj <vinjvinj@yahoo.com>
Subject: [mod_python] How to have a form submit to two different
	servlets	with _call_
To: mod_python@modpython.org
Message-ID: <20040917150831.5720.qmail@web41310.mail.yahoo.com>
Content-Type: text/plain; charset=us-ascii

I'm using the _call functionality significantly.
Depending on the button the user preses, I need to
submit the form to two different servlets.

I'm ujsing the onclick functionality of the submit tag
on the form:

<input type=submit 
name="_call_do_some_function()" 
onClick="document.mainform.action='Servlet1';document.mainform.submit();>

But the problem with that is the the right _call_
function is not being passed to the servlet.

so then I tried:

<input type=submit 
name="_call_do_some_function()" 
onClick="document.mainform.action='Servlet1?=_call_do_some_function()';document.mainform.submit();>

From bray at sent.com  Fri Sep 17 17:06:12 2004
From: bray at sent.com (Brian Ray)
Date: Fri Sep 17 17:06:24 2004
Subject: [mod_python] mpservlets:No module named index
Message-ID: <67CF8A54-08ED-11D9-8809-000A95BF3560@sent.com>

hi again,

I am getting closer to getting my first time mod_python install  
working. The following code works:

...

# mptest.py
def say(req, what="NOTHING"):
     return "I am saying %s" % what
...

So, now I am trying to install mpservlets-1.1.5. I do get a couple  
compile warnings, 'package init file '__init__.py' not found (or not a  
regular file)'. However, everything after install_lib compiles fine.

When I copy the mpservlet tutorial into my webroot and set my  
httpd.conf to this:

...
LoadModule python_module modules/mod_python.so

<Directory  /var/www/tutorial>
    SetHandler python-program
    PythonHandler mod_python.publisher
    PythonDebug on
</Directory>

...

and try to access the page http://localhost/tutorial/ I continually get:

...
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch
     result = object(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/publisher.py", line 98, in handler
     path=[path])

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 454, in  
import_module
     f, p, d = imp.find_module(parts[i], path)

ImportError: No module named index
...

I also tried http://localhost/tutorial/index.mps. Any help, please?

The first script still runs when placed in this directory.

BTW, I did see an earlier post with the same error message, however the  
thread was resolved and the person was posting said they could take it  
from there:   
http://groups.google.com/groups?hl=en&lr=&ie=UTF 
-8&threadm=mailman.342.1083930063.25742.python- 
list%40python.org&rnum=1&prev=groups%3Fq%3Dmod_python%2520ImportError%25 
3A%2520No%2520module%2520named%2520index%2520%2520%26hl%3Den%26lr%3D%26i 
e%3DUTF-8%26sa%3DN%26tab%3Dwg

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 2091 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040917/644517f6/attachment.bin
From dpopowich at blue-fox.com  Fri Sep 17 18:27:35 2004
From: dpopowich at blue-fox.com (Daniel J. Popowich)
Date: Fri Sep 17 17:29:13 2004
Subject: [mod_python] mpservlets:No module named index
In-Reply-To: <67CF8A54-08ED-11D9-8809-000A95BF3560@sent.com>
References: <67CF8A54-08ED-11D9-8809-000A95BF3560@sent.com>
Message-ID: <16715.22215.986097.59143@fenway.local.>

Brian Ray writes:
> So, now I am trying to install mpservlets-1.1.5. I do get a couple  
> compile warnings, 'package init file '__init__.py' not found (or not a  
> regular file)'. However, everything after install_lib compiles fine.
> 
> ...
>
> LoadModule python_module modules/mod_python.so
> 
> <Directory  /var/www/tutorial>
>     SetHandler python-program
>     PythonHandler mod_python.publisher
>     PythonDebug on
> </Directory>
> 
> ...

If you want to use the servlet handler, don't specify the publisher
handler.  :-)

Try:

    PythonHandler mod_python.servlet

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/
    

From jrraines at comcast.net  Sun Sep 19 21:12:31 2004
From: jrraines at comcast.net (John Raines)
Date: Sun Sep 19 21:12:50 2004
Subject: [mod_python] No module named _apache from inside apache
Message-ID: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>

I continue to get this error message. I've tried to adjust the path and  
to be sure permissions allow "nobody" to execute the files in question:

[Sun Sep 19 19:30:21 2004] [warn] child process 481 still did not exit,  
sending a SIGTERM
[Sun Sep 19 19:30:21 2004] [warn] child process 482 still did not exit,  
sending a SIGTERM
[Sun Sep 19 19:30:21 2004] [notice] caught SIGTERM, shutting down
[Sun Sep 19 19:30:28 2004] [notice] mod_python: Creating 32 session  
mutexes based on 6 max processes and 25 max threads.
[Sun Sep 19 19:30:28 2004] [notice] Apache/2.0.50 (Unix)  
mod_python/3.1.3 Python/2.3.3 configured -- resuming normal operations
Traceback (most recent call last):
   File "HRAStart.py", line 7, in ?
     from mod_python import apache
   File "/sw/lib/python2.3/site-packages/mod_python/apache.py", line 28,  
in ?
     import _apache
ImportError: No module named _apache
[Sun Sep 19 19:30:55 2004] [error] [client 127.0.0.1] Premature end of  
script headers: HRAStart.py, referer: http://127.0.0.1/
[Sun Sep 19 19:36:31 2004] [warn] child process 532 still did not exit,  
sending a SIGTERM
[Sun Sep 19 19:36:31 2004] [warn] child process 533 still did not exit,  
sending a SIGTERM
[Sun Sep 19 19:36:31 2004] [notice] caught SIGTERM, shutting down
[Sun Sep 19 19:36:36 2004] [notice] mod_python: Creating 32 session  
mutexes based on 6 max processes and 25 max threads.
[Sun Sep 19 19:36:36 2004] [notice] Apache/2.0.50 (Unix)  
mod_python/3.1.3 Python/2.3.3 configured -- resuming normal operations
Traceback (most recent call last):
   File "HRAStart.py", line 7, in ?
     from mod_python import apache
   File "/sw/lib/python2.3/site-packages/mod_python/apache.py", line 28,  
in ?
     import _apache
ImportError: No module named _apache
[Sun Sep 19 19:36:56 2004] [error] [client 127.0.0.1] Premature end of  
script headers: HRAStart.py, referer: http://127.0.0.1/


John-Raines-Computer:/usr/local/apache2 jrraines$ ls -l  
/sw/lib/python2.3/site-packages/mod_python
total 752
-rwxr-xr-x  1 root  admin  11698 16 Feb  2004 Cookie.py
-rwxr-xr-x  1 root  admin  13464  7 Sep 18:50 Cookie.pyc
-rwxr-xr-x  1 root  admin  10069  7 Sep 18:50 Cookie.pyo
-rwxr-xr-x  1 root  admin  11305 16 Feb  2004 Session.py
-rwxr-xr-x  1 root  admin  16155  7 Sep 18:50 Session.pyc
-rwxr-xr-x  1 root  admin  16044  7 Sep 18:50 Session.pyo
-rwxr-xr-x  1 root  admin    799 16 Feb  2004 __init__.py
-rwxr-xr-x  1 root  admin    236  7 Sep 18:50 __init__.pyc
-rwxr-xr-x  1 root  admin    236  7 Sep 18:50 __init__.pyo
-rwxr-xr-x  1 root  admin  58752  2 Sep 21:47 _psp.so
-rwxr-xr-x  1 root  admin  29856 16 Feb  2004 apache.py
-rwxr-xr-x  1 root  admin  28932  7 Sep 18:50 apache.pyc
-rwxr-xr-x  1 root  admin  27131  7 Sep 18:50 apache.pyo
-rwxr-xr-x  1 root  admin   3351 16 Feb  2004 cgihandler.py
-rwxr-xr-x  1 root  admin   2511  7 Sep 18:50 cgihandler.pyc
-rwxr-xr-x  1 root  admin   2511  7 Sep 18:50 cgihandler.pyo
-rwxr-xr-x  1 root  admin  11047 16 Feb  2004 psp.py
-rwxr-xr-x  1 root  admin  14847  7 Sep 18:50 psp.pyc
-rwxr-xr-x  1 root  admin  14727  7 Sep 18:50 psp.pyo
-rwxr-xr-x  1 root  admin   9283 16 Feb  2004 publisher.py
-rwxr-xr-x  1 root  admin   6550  7 Sep 18:50 publisher.pyc
-rwxr-xr-x  1 root  admin   6043  7 Sep 18:50 publisher.pyo
-rwxr-xr-x  1 root  admin  12397 16 Feb  2004 util.py
-rwxr-xr-x  1 root  admin  12729  7 Sep 18:50 util.pyc
-rwxr-xr-x  1 root  admin  12002  7 Sep 18:50 util.pyo


cgi-bin/HRAStart.py:
#! /sw/bin/python
#
# The line with the path to Apache was deleted
import sys
sys.path.append( '/sw/lib/python2.3/site-packages/mod_python' )
#import myinput
from mod_python import apache

PYTHONOPTIMIZE = '1'

def HRAmain (req,age,sex):
  req.write("Hello")
  return (apache.OK)

conf/httpd.conf:
LoadModule python_module modules/mod_python.so
<Directory />
     Options FollowSymLinks
     AllowOverride None
</Directory>
<Directory "/usr/local/apache2/htdocs/HTML">
   AddHandler mod_python .py
   PythonHandler HRAStart
   PythonDebug On
   PythonAutoReload On
   PythonPath "sys.path  
+['/sw/lib/python2.3/site-packages/mod_python','/usr/local/mod_python 
-3.1.3/lib/python']"
#
     Options Indexes FollowSymLinks
     AllowOverride FileInfo
     Order allow,deny
     Allow from all

</Directory>
<Directory /usr/local/apache2/cgi-bin>
     Options ExecCGI
</Directory>
#JRR
<Directory /sw/lib/python2.3/site-packages>
     Options ExecCGI
</Directory>
#JRR


John-Raines-Computer:/usr/local/apache2 jrraines$ pydoc sys.path
Help on list in sys:

sys.path = ['.', '/sw/lib/python23.zip', '/sw/lib/python2.3',  
'/sw/lib/python2.3/plat-darwin', '/sw/lib/python2.3/plat-mac',  
'/sw/lib/python2.3/pla
t-mac/lib-scriptpackages', '/sw/lib/python2.3/lib-tk',  
'/sw/lib/python2.3/lib-dynload', '/sw/lib/python2.3/site-packages']
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 4907 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040919/00b4f4e8/attachment.bin
From itodd at itodd.org  Sun Sep 19 22:50:08 2004
From: itodd at itodd.org (Todd Boland)
Date: Sun Sep 19 21:50:17 2004
Subject: [mod_python] importing woes
Message-ID: <668ED142-0AA7-11D9-8732-000A95CCEA34@itodd.org>

Please allow myself to introduce ... myself. I'm Todd and I'm in love 
with python. I'm a newbie so please excuse me if the answer to my woes 
is obvious.

I'm setting up an environment for my first mod_python project. It's a 
radio-pharmacy manager (not redhat package manager) which lives at /rpm 
on my file system. The following code raises the exception: 
"ImportError: No module named RPM."

in httpd.conf, i have:
PythonPath "sys.path+['/rpm/lib']"

the code:
from mod_python import apache, psp
from RPM import database

def index(req, result='success'):
         template = psp.PSP(req, filename='test.html')
         template.run({'result':result})

Why can I do the following on the command line without an exception 
being raised?

itodd@powerbook ~] python
Python 2.3.4 (#1, Sep 17 2004, 11:09:35)
[GCC 3.1 20021003 (prerelease)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
 >>> import sys
 >>> sys.path.append('/rpm/lib')
 >>> from RPM import database
 >>> database
<module 'RPM.database' from '/rpm/lib/RPM/database.pyc'>
 >>>

From itodd at itodd.org  Mon Sep 20 14:40:09 2004
From: itodd at itodd.org (Todd Boland)
Date: Mon Sep 20 13:40:16 2004
Subject: [mod_python] importing woes
In-Reply-To: <668ED142-0AA7-11D9-8732-000A95CCEA34@itodd.org>
References: <668ED142-0AA7-11D9-8732-000A95CCEA34@itodd.org>
Message-ID: <1E368868-0B2C-11D9-8732-000A95CCEA34@itodd.org>

The reason for my woes was obvious.

httpd didn't have correct permissions to read /rpm/lib/RPM while user 
itodd did. This explains why i could import from the command line and 
not in mod_python.

Todd

On Sep 19, 2004, at 9:50 PM, Todd Boland wrote:

> Please allow myself to introduce ... myself. I'm Todd and I'm in love 
> with python. I'm a newbie so please excuse me if the answer to my woes 
> is obvious.
>
> I'm setting up an environment for my first mod_python project. It's a 
> radio-pharmacy manager (not redhat package manager) which lives at 
> /rpm on my file system. The following code raises the exception: 
> "ImportError: No module named RPM."
>
> in httpd.conf, i have:
> PythonPath "sys.path+['/rpm/lib']"
>
> the code:
> from mod_python import apache, psp
> from RPM import database
>
> def index(req, result='success'):
>         template = psp.PSP(req, filename='test.html')
>         template.run({'result':result})
>
> Why can I do the following on the command line without an exception 
> being raised?
>
> itodd@powerbook ~] python
> Python 2.3.4 (#1, Sep 17 2004, 11:09:35)
> [GCC 3.1 20021003 (prerelease)] on darwin
> Type "help", "copyright", "credits" or "license" for more information.
> >>> import sys
> >>> sys.path.append('/rpm/lib')
> >>> from RPM import database
> >>> database
> <module 'RPM.database' from '/rpm/lib/RPM/database.pyc'>
> >>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From python at theorb.net  Mon Sep 20 12:45:03 2004
From: python at theorb.net (mod_python user)
Date: Mon Sep 20 14:45:01 2004
Subject: [mod_python] No module named _apache from inside apache
In-Reply-To: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>
References: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>
Message-ID: <414F252F.3060201@theorb.net>

John Raines wrote:
> Subject:
> [mod_python] No module named _apache from inside apache
> 
> I continue to get this error message...
<snip />
> ImportError: No module named _apache

Hi John,

I have a solution, but I can't tell you exactly why it works, only that
it does.  There is probably a different and better way to do it.

I'm pretty new to python and by extension, mod_python, but I encountered
your situation once before. I was trying to use "_apache.parse_qs" and
"_apache.parse_qsl".

The _apache module appears to be built-in to mod_python; furthermore, it
seems to be directly available *only* to other modules in the mod_python
directory.  So, in the mod_python directory I created a file,
"mp_helper.py", whose contents consist of only one line: "import
_apache".  Then, within my own application I include this line: "from
mod_python import mp_helper".

After that I was able to access parse_qs and parse_qsl as
mp_helper.parse_qs and mp_helper.parse_qsl.

Hope that is useful to you,
Mike Wright

From jrraines at comcast.net  Mon Sep 20 20:15:25 2004
From: jrraines at comcast.net (John Raines)
Date: Mon Sep 20 20:15:35 2004
Subject: [mod_python] No module named _apache from inside apache
In-Reply-To: <414F252F.3060201@theorb.net>
References: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>
	<414F252F.3060201@theorb.net>
Message-ID: <55D0BBA8-0B63-11D9-896F-0003938C739C@comcast.net>

thanks I'll give it a try!
On Sep 20, 2004, at 1:45 PM, mod_python user wrote:

> John Raines wrote:
>> Subject:
>> [mod_python] No module named _apache from inside apache
>> I continue to get this error message...
> <snip />
>> ImportError: No module named _apache
>
> Hi John,
>
> I have a solution, but I can't tell you exactly why it works, only that
> it does.  There is probably a different and better way to do it.
>
> I'm pretty new to python and by extension, mod_python, but I 
> encountered
> your situation once before. I was trying to use "_apache.parse_qs" and
> "_apache.parse_qsl".
>
> The _apache module appears to be built-in to mod_python; furthermore, 
> it
> seems to be directly available *only* to other modules in the 
> mod_python
> directory.  So, in the mod_python directory I created a file,
> "mp_helper.py", whose contents consist of only one line: "import
> _apache".  Then, within my own application I include this line: "from
> mod_python import mp_helper".
>
> After that I was able to access parse_qs and parse_qsl as
> mp_helper.parse_qs and mp_helper.parse_qsl.
>
> Hope that is useful to you,
> Mike Wright
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From raine001 at tc.umn.edu  Mon Sep 20 20:43:56 2004
From: raine001 at tc.umn.edu (John Raines)
Date: Mon Sep 20 20:44:06 2004
Subject: [mod_python] No module named _apache from inside apache
In-Reply-To: <414F252F.3060201@theorb.net>
References: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>
	<414F252F.3060201@theorb.net>
Message-ID: <5194781D-0B67-11D9-896F-0003938C739C@tc.umn.edu>

Thanks. Didn't  work for me though:
[Mon Sep 20 19:39:51 2004] [notice] mod_python: Creating 32 session 
mutexes based on 6 max processes and 25 max threads.
[Mon Sep 20 19:39:51 2004] [notice] Apache/2.0.50 (Unix) 
mod_python/3.1.3 Python/2.3.3 configured -- resuming normal operations
Traceback (most recent call last):
   File "HRAStart.py", line 5, in ?
     from mod_python import mp_helper
   File "/sw/lib/python2.3/site-packages/mod_python/mp_helper.py", line 
1, in ?
     import _apache
ImportError: No module named _apache
[Mon Sep 20 19:40:44 2004] [error] [client 127.0.0.1] Premature end of 
script headers: HRAStart.py, referer: http://127.0.0.1/
On Sep 20, 2004, at 1:45 PM, mod_python user wrote:

> John Raines wrote:
>> Subject:
>> [mod_python] No module named _apache from inside apache
>> I continue to get this error message...
> <snip />
>> ImportError: No module named _apache
>
> Hi John,
>
> I have a solution, but I can't tell you exactly why it works, only that
> it does.  There is probably a different and better way to do it.
>
> I'm pretty new to python and by extension, mod_python, but I 
> encountered
> your situation once before. I was trying to use "_apache.parse_qs" and
> "_apache.parse_qsl".
>
> The _apache module appears to be built-in to mod_python; furthermore, 
> it
> seems to be directly available *only* to other modules in the 
> mod_python
> directory.  So, in the mod_python directory I created a file,
> "mp_helper.py", whose contents consist of only one line: "import
> _apache".  Then, within my own application I include this line: "from
> mod_python import mp_helper".
>
> After that I was able to access parse_qs and parse_qsl as
> mp_helper.parse_qs and mp_helper.parse_qsl.
>
> Hope that is useful to you,
> Mike Wright
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1974 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040920/61d0d685/attachment.bin
From grisha at modpython.org  Mon Sep 20 22:51:04 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Sep 20 21:51:09 2004
Subject: [mod_python] No module named _apache from inside apache
In-Reply-To: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>
References: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>
Message-ID: <20040920214619.K69187@onyx.ispol.com>


John - I don't understand your config at all, but your problem seems to be 
that HRAStart is executed as a CGI program (rather than by mod_python). 
You should probably re-read the docs, especially the tutorial part :-)

Grisha


On Sun, 19 Sep 2004, John Raines wrote:

> ImportError: No module named _apache


[SNIP]

> conf/httpd.conf:
> LoadModule python_module modules/mod_python.so
> <Directory />
>    Options FollowSymLinks
>    AllowOverride None
> </Directory>
> <Directory "/usr/local/apache2/htdocs/HTML">
>  AddHandler mod_python .py
>  PythonHandler HRAStart
>  PythonDebug On
>  PythonAutoReload On
>  PythonPath "sys.path 
> +['/sw/lib/python2.3/site-packages/mod_python','/usr/local/mod_python 
> -3.1.3/lib/python']"
> #
>    Options Indexes FollowSymLinks
>    AllowOverride FileInfo
>    Order allow,deny
>    Allow from all
>
> </Directory>
> <Directory /usr/local/apache2/cgi-bin>
>    Options ExecCGI
> </Directory>
> #JRR
> <Directory /sw/lib/python2.3/site-packages>
>    Options ExecCGI
> </Directory>
> #JRR
>
>
> John-Raines-Computer:/usr/local/apache2 jrraines$ pydoc sys.path
> Help on list in sys:
>
> sys.path = ['.', '/sw/lib/python23.zip', '/sw/lib/python2.3', 
> '/sw/lib/python2.3/plat-darwin', '/sw/lib/python2.3/plat-mac', 
> '/sw/lib/python2.3/pla
> t-mac/lib-scriptpackages', '/sw/lib/python2.3/lib-tk', 
> '/sw/lib/python2.3/lib-dynload', '/sw/lib/python2.3/site-packages']
>
From jrraines at comcast.net  Mon Sep 20 21:56:37 2004
From: jrraines at comcast.net (John Raines)
Date: Mon Sep 20 21:56:43 2004
Subject: [mod_python] No module named _apache from inside apache
In-Reply-To: <20040920214619.K69187@onyx.ispol.com>
References: <25BC2474-0AA2-11D9-B01D-0003938C739C@comcast.net>
	<20040920214619.K69187@onyx.ispol.com>
Message-ID: <7941AF38-0B71-11D9-896F-0003938C739C@comcast.net>

Huh. Obviously I've misunderstood something completely! thanks.
On Sep 20, 2004, at 8:51 PM, Gregory (Grisha) Trubetskoy wrote:

>
> John - I don't understand your config at all, but your problem seems 
> to be that HRAStart is executed as a CGI program (rather than by 
> mod_python). You should probably re-read the docs, especially the 
> tutorial part :-)
>
> Grisha
>
>
> On Sun, 19 Sep 2004, John Raines wrote:
>
>> ImportError: No module named _apache
>
>
> [SNIP]
>
>> conf/httpd.conf:
>> LoadModule python_module modules/mod_python.so
>> <Directory />
>>    Options FollowSymLinks
>>    AllowOverride None
>> </Directory>
>> <Directory "/usr/local/apache2/htdocs/HTML">
>>  AddHandler mod_python .py
>>  PythonHandler HRAStart
>>  PythonDebug On
>>  PythonAutoReload On
>>  PythonPath "sys.path 
>> +['/sw/lib/python2.3/site-packages/mod_python','/usr/local/mod_python 
>> -3.1.3/lib/python']"
>> #
>>    Options Indexes FollowSymLinks
>>    AllowOverride FileInfo
>>    Order allow,deny
>>    Allow from all
>>
>> </Directory>
>> <Directory /usr/local/apache2/cgi-bin>
>>    Options ExecCGI
>> </Directory>
>> #JRR
>> <Directory /sw/lib/python2.3/site-packages>
>>    Options ExecCGI
>> </Directory>
>> #JRR
>>
>>
>> John-Raines-Computer:/usr/local/apache2 jrraines$ pydoc sys.path
>> Help on list in sys:
>>
>> sys.path = ['.', '/sw/lib/python23.zip', '/sw/lib/python2.3', 
>> '/sw/lib/python2.3/plat-darwin', '/sw/lib/python2.3/plat-mac', 
>> '/sw/lib/python2.3/pla
>> t-mac/lib-scriptpackages', '/sw/lib/python2.3/lib-tk', 
>> '/sw/lib/python2.3/lib-dynload', '/sw/lib/python2.3/site-packages']
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From gdamjan at mail.net.mk  Tue Sep 21 17:53:26 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Tue Sep 21 10:53:32 2004
Subject: [mod_python] Image handling handler
Message-ID: <20040921145326.GA10208@legolas.on.net.mk>

I've hacked this last evening (stayed a bit longer that should've).
Its an handler that allows modifications of images on the fly, but also
cache's the results... its a bit hackish but anyway I'll sahre it here
as a demo of mod_python.

I enable it with this .htaccess file
	AcceptPathInfo On
	AddHandler mod_python .png .py .jpg .jpeg
	PythonHandler image | .png .jpg .jpeg
	PythonHandler mptest | .py
	PythonDebug On
	PythonOption Cache on
	PythonOption CacheDir /tmp/cache

Ok what exactly the modules does?
Say you have e picture at the /images/me.jpg URL

Retrieving /images/me.jpg will let Apache handle the request
(apache.DECLINED), that way proper caching is allowed etc.

But getting /images/me.jpg/size?width=100;height=200 will resize the
image with PIL, store the resized image as
/tmp/cache/images/me.jpg/size?width=100;height=200 (but only if 
"Cache on") and send back the resized image to the user.

Other methods are also possible, there's also /thumb?... similar to /size?
but retains the aspect-ratio of the original. /datemodified returns
text/plain content with the data of the last modification of the image
file.
Other methods could extract other meta info from images, implement other
transformations, filters etc...


TODO:
- more error checking is needed

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
-------------- next part --------------
# image.py, mod_python handler
# adds methods to image files (.png, jpeg, .gif and other supported by PIL)
# minimal penalty when no method is used
# on error: raise apache.SERVER_RETURN, apache.HTTP_NOT_IMPLEMENTED
#
# !!! = may throw exception
#
from mod_python import apache
from mod_python import util
from os import path
import os

def handler(req):
    if not path.exists(req.filename):
        return apache.HTTP_NOT_FOUND
    obj = ImageHandler(req)   # !!!
    methodname = 'handle_'+req.path_info[1:]
    method = getattr(obj, methodname, obj.default)
    args = util.parse_qs(req.args or '')
    return method(**args)     # !!!

class ImageHandler(object):
    def __init__(self, req):
        self.req = req
        self.filename = req.filename
        config = req.get_options()
        self.cache_dir = config.get('CacheDir', None)
        self.usecache = config.get('Cache', 'off').lower() in ('on', 'yes')

    def handle_thumb(self, **args):
        # find in cache or make the thumbnail
        # cache it if needed
        from PIL import Image
        key = self.req.unparsed_uri
        filename = self.getcached(key)
        if filename:
            self.req.sendfile(filename)
            return apache.OK
        img = Image.open(self.filename)
        width, height = img.size
        width =  int(args.get('width', args.get('w', (width,) )) [0])
        height = int(args.get('height', args.get('h', (height,) )) [0])
        img.thumbnail((width, height), resample=Image.ANTIALIAS)
        img.save(self.req, format=img.format)
        self.putincache(key, img)
        return apache.OK

    def handle_size(self, **args):
        from PIL import Image
        key = self.req.unparsed_uri
        filename = self.getcached(key)
        if filename:
            self.req.sendfile(filename)
            return apache.OK
        img = Image.open(self.filename)
        width, height = img.size
        width =  int(args.get('width', args.get('w', (width,) )) [0])
        height = int(args.get('height', args.get('h', (height,) )) [0])
        i2 = img.resize((width, height), resample=Image.ANTIALIAS)
        i2.format = img.format
        i2.save(self.req, format=i2.format)
        self.putincache(key, i2)
        return apache.OK

    def handle_view(self, **args):
        self.req.sendfile(self.filename)
        return apache.OK

    def handle_datemodified(self, **args):
        import time
        import locale
        locale.setlocale(locale.LC_ALL, 'mk_MK.UTF-8')
        self.req.content_type = 'text/plain'
        ss=os.stat(self.filename)
        tt=time.localtime(ss.st_mtime)
        s=time.strftime('%c', tt)
        self.req.write(s)
        return apache.OK

    def default(self, **args):
        return apache.DECLINED

    def getcached(self, key):
        cached = self.key2filename(key)
        try:
            css = os.stat(cached)
            fss = os.stat(self.filename)
        except OSError:
            return None
        if css.st_mtime < fss.st_mtime:
            return None
        return cached

    def putincache(self, key, img):
        if not self.usecache:
            return
        filename = self.key2filename(key)
        dirname = path.dirname(filename)
        if not path.exists(dirname):
            os.makedirs(dirname)
        try:
            fp = file(filename,'w')
            img.save(fp, img.format)
            fp.close()
        except:
            pass

    def key2filename(self, key):
        filename = path.join(self.cache_dir, key[1:])
        return filename
From nick at dd.revealed.net  Tue Sep 21 11:00:08 2004
From: nick at dd.revealed.net (Nick)
Date: Tue Sep 21 11:37:42 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <20040921145326.GA10208@legolas.on.net.mk>
References: <20040921145326.GA10208@legolas.on.net.mk>
Message-ID: <415041F8.7070007@dd.revealed.net>

Very nice demonstration of mod_python with a simple yet useful handler.

Nick

Damjan wrote:
> I've hacked this last evening (stayed a bit longer that should've).
> Its an handler that allows modifications of images on the fly, but also
> cache's the results... its a bit hackish but anyway I'll sahre it here
> as a demo of mod_python.
From terry.macdonald at dsl.pipex.com  Wed Sep 22 00:22:08 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Tue Sep 21 18:22:12 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <20040921145326.GA10208@legolas.on.net.mk>
References: <20040921145326.GA10208@legolas.on.net.mk>
Message-ID: <1095805327.8285.12.camel@bigmac.taumu.com>

I'm probably missing something obvious here, but in the 'handle_thumb'
and 'handle_size' class methods if the image is not cached (or is older)
where is the method sending the image file back to the client? 
It appears only to resize and cache the image not return it.

On Tue, 2004-09-21 at 15:53, Damjan wrote:
> I've hacked this last evening (stayed a bit longer that should've).
> Its an handler that allows modifications of images on the fly, but also
> cache's the results... its a bit hackish but anyway I'll sahre it here
> as a demo of mod_python.
> 
> I enable it with this .htaccess file
> 	AcceptPathInfo On
> 	AddHandler mod_python .png .py .jpg .jpeg
> 	PythonHandler image | .png .jpg .jpeg
> 	PythonHandler mptest | .py
> 	PythonDebug On
> 	PythonOption Cache on
> 	PythonOption CacheDir /tmp/cache
> 
> Ok what exactly the modules does?
> Say you have e picture at the /images/me.jpg URL
> 
> Retrieving /images/me.jpg will let Apache handle the request
> (apache.DECLINED), that way proper caching is allowed etc.
> 
> But getting /images/me.jpg/size?width=100;height=200 will resize the
> image with PIL, store the resized image as
> /tmp/cache/images/me.jpg/size?width=100;height=200 (but only if 
> "Cache on") and send back the resized image to the user.
> 
> Other methods are also possible, there's also /thumb?... similar to /size?
> but retains the aspect-ratio of the original. /datemodified returns
> text/plain content with the data of the last modification of the image
> file.
> Other methods could extract other meta info from images, implement other
> transformations, filters etc...
> 
> 
> TODO:
> - more error checking is needed

From modpython at holovaty.com  Tue Sep 21 18:24:03 2004
From: modpython at holovaty.com (Adrian Holovaty)
Date: Tue Sep 21 18:25:56 2004
Subject: [mod_python] sys.path shared?
Message-ID: <200409211724.03421.modpython@holovaty.com>

I have mod_python code that appends a directory to sys.path and deletes that 
directory from sys.path at the end of the handler. Is it possible that, 
between that push and pop, another Apache instance running the same code 
might get the non-popped sys.path, making its sys.path out of sync with the 
other Apaches?

Adrian
From terry.macdonald at dsl.pipex.com  Wed Sep 22 00:44:13 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Tue Sep 21 18:44:17 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <200409211724.03421.modpython@holovaty.com>
References: <200409211724.03421.modpython@holovaty.com>
Message-ID: <1095806652.8285.16.camel@bigmac.taumu.com>

Each apache instance/process has its own interpreter therefore its own
sys.path.  So I would say it is not possible.

On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
> I have mod_python code that appends a directory to sys.path and deletes that 
> directory from sys.path at the end of the handler. Is it possible that, 
> between that push and pop, another Apache instance running the same code 
> might get the non-popped sys.path, making its sys.path out of sync with the 
> other Apaches?
> 
> Adrian
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Terry
Registered Linux User # 311806
www.taumu.com


From rpinder at usc.edu  Tue Sep 21 17:07:18 2004
From: rpinder at usc.edu (Rich Pinder)
Date: Tue Sep 21 19:07:13 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping it
	executable)
Message-ID: <4150B426.8020503@usc.edu>

I'm using Apache 1.3 with Python (Kinterbas) to access a Firebird database.

The .py script resides in a directory under the document root.  If you 
enter the full url to the script file, the browser returns a textual 
representation of the script  (complete with all my connection string 
info & password into the database !)

On the Apache list I was given a suggested solution  (below)... and it 
indeed blocks the text from being displayed... but it also makes the 
script un'executable !

What am I missing here ?? 

I put the script files under the document root per examples I got (with 
either mod python, or kintebas..dont recall).  I assume this is 
logical/correct ??

thanks for your help

rich

>
> <Files ~ "*.py">
>     Order allow,deny
>     Deny from all
>     Satisfy All
> </Files>


From bje at apnic.net  Wed Sep 22 10:40:20 2004
From: bje at apnic.net (Byron Ellacott)
Date: Tue Sep 21 19:38:48 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping
	it	executable)
In-Reply-To: <4150B426.8020503@usc.edu>
References: <4150B426.8020503@usc.edu>
Message-ID: <4150BBE4.20902@apnic.net>

Rich Pinder wrote:
> I'm using Apache 1.3 with Python (Kinterbas) to access a Firebird database.
> The .py script resides in a directory under the document root.  If you 
> enter the full url to the script file, the browser returns a textual 
> representation of the script  (complete with all my connection string 
> info & password into the database !)
> What am I missing here ??

Either you're using the Python publisher handler, in which case I'm 
surprised that you ever see the text of the script, or you're directly 
using a PythonHandler statement, in which case you can install your 
Python modules anywhere on the Python path.

In an Apache config file for a host, I have:

         <Location /budget>
             SetHandler mod_python
             Options -MultiViews
             PythonDebug On
             PythonAutoReload On
             PythonInterpreter budget
             PythonHandler bje.budgetweb
             PythonOption SessionDbm /usr/share/budget/session.dbm
         </Location>

The "/var/www/budget" directory does not exist at all; there's nothing 
that a user can fetch via URL that is not generated by the bje.budgetweb 
module, which lives in /usr/local/python/someplace, IIRC.  In 
sys.path[], anyway.

(That module then calls other modules based on patterns matched against 
path_info, according to a configuration block.  But that's just my 
preference for how to arrange things.)

-- 
bje
From itodd at itodd.org  Tue Sep 21 21:12:06 2004
From: itodd at itodd.org (Todd Boland)
Date: Tue Sep 21 20:12:12 2004
Subject: [mod_python] Sessions + Publisher
Message-ID: <09740FBC-0C2C-11D9-A8A8-000A95CCEA34@itodd.org>

Hello again!

In my experiences as a web developer (I'm coming from a Perl/Mason 
environment), I've found that the convenience of "transparently" 
generating sessions outweighs the performance hit.

I'm trying to implement sessions "transparently" using 2 handlers for 
every request. The first handler makes sure a session is set, if it was 
just created, it will forward the browser to a login page (like the 
documentation suggests). More code that checks session ids against 
values in the database to authenticate users will eventually be added.

By the time a request gets to the second handler (the Publisher 
handler), sessions have preemptively been taken care of (it's totally 
"transparent").

The problem I'm having is: I end up in an infinite redirect loop:

The session handler:

from mod_python import apache, util
from mod_python.Session import Session
from RPM.common import web_root

def handler(req):
         session = Session(req, secret='********')

         # if the session is new, they need to log in
         if session.is_new():

                 # Using util's redirect will set the cookie
                 util.redirect(req, web_root('index.py/login?url=%s' % 
req.uri))

	# TODO: Make sure sid is logged in

	# Hand off to Publisher handler by returning 200 OK
         return apache.OK

session.is_new() always returns 1 even after the session cookie is set 
(after the redirect). Any ideas or nudges in the right direction would 
greatly be appreciated. Thanks!

-- 
Todd

From brian.bird at securetrading.com  Wed Sep 22 10:58:25 2004
From: brian.bird at securetrading.com (Brian Bird)
Date: Wed Sep 22 04:58:29 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <1095806652.8285.16.camel@bigmac.taumu.com>
Message-ID: <009701c4a082$523cde90$190b030a@Menai.local>

Might be best to try it: Write a cgi script which prints the sys.path at the
start and at the end. Put a long sleep in the middle then you can visit your
script twice with a browser (start the second visit while the first one is
still running) and see what the sys.path is of your second visit.

My gut feeling would be that it would be possible but I'm pretty new to
mod_python so I wouldn't rely on that! :-)

Brian

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
Sent: 21 September 2004 23:44
To: mod_python user mailing list
Subject: Re: [mod_python] sys.path shared?


Each apache instance/process has its own interpreter therefore its own
sys.path.  So I would say it is not possible.

On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
> I have mod_python code that appends a directory to sys.path and 
> deletes that
> directory from sys.path at the end of the handler. Is it possible that, 
> between that push and pop, another Apache instance running the same code 
> might get the non-popped sys.path, making its sys.path out of sync with
the 
> other Apaches?
> 
> Adrian
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org 
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Terry
Registered Linux User # 311806
www.taumu.com


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From terry.macdonald at dsl.pipex.com  Wed Sep 22 14:54:14 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Wed Sep 22 08:54:19 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <009701c4a082$523cde90$190b030a@Menai.local>
References: <009701c4a082$523cde90$190b030a@Menai.local>
Message-ID: <1095857654.8285.161.camel@bigmac.taumu.com>

Can anyone put me right on my understanding of the way mod_python works
in an apache forked process environment.  Each process has its own
embedded interpreter and therefore its own sys.path variable. 

How is it possible for an apache instance/process with its own embedded
interpreter to 'reach' across and use/inherit another
processes/interpreters sys.path?



On Wed, 2004-09-22 at 09:58, Brian Bird wrote:
> Might be best to try it: Write a cgi script which prints the sys.path at the
> start and at the end. Put a long sleep in the middle then you can visit your
> script twice with a browser (start the second visit while the first one is
> still running) and see what the sys.path is of your second visit.
> 
> My gut feeling would be that it would be possible but I'm pretty new to
> mod_python so I wouldn't rely on that! :-)
> 
> Brian
> 
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
> Sent: 21 September 2004 23:44
> To: mod_python user mailing list
> Subject: Re: [mod_python] sys.path shared?
> 
> 
> Each apache instance/process has its own interpreter therefore its own
> sys.path.  So I would say it is not possible.
> 
> On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
> > I have mod_python code that appends a directory to sys.path and 
> > deletes that
> > directory from sys.path at the end of the handler. Is it possible that, 
> > between that push and pop, another Apache instance running the same code 
> > might get the non-popped sys.path, making its sys.path out of sync with
> the 
> > other Apaches?
> > 
> > Adrian
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org 
> > http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Terry
Registered Linux User # 311806
www.taumu.com


From brian.bird at securetrading.com  Wed Sep 22 15:10:05 2004
From: brian.bird at securetrading.com (Brian Bird)
Date: Wed Sep 22 09:10:08 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <1095857654.8285.161.camel@bigmac.taumu.com>
Message-ID: <00ee01c4a0a5$7a59f3e0$190b030a@Menai.local>

Sorry, I should have given this a bit more thought. If you're using a forked
process environment then I would expect the sys.path variables to be
separate for each request. If you're using a threaded mpm (which is what I
use) then I assume sys.path would work like global variables which are
shared across requests.

Brian

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
Sent: 22 September 2004 13:54
To: mod_python user mailing list
Subject: RE: [mod_python] sys.path shared?


Can anyone put me right on my understanding of the way mod_python works in
an apache forked process environment.  Each process has its own embedded
interpreter and therefore its own sys.path variable. 

How is it possible for an apache instance/process with its own embedded
interpreter to 'reach' across and use/inherit another processes/interpreters
sys.path?



On Wed, 2004-09-22 at 09:58, Brian Bird wrote:
> Might be best to try it: Write a cgi script which prints the sys.path 
> at the start and at the end. Put a long sleep in the middle then you 
> can visit your script twice with a browser (start the second visit 
> while the first one is still running) and see what the sys.path is of 
> your second visit.
> 
> My gut feeling would be that it would be possible but I'm pretty new 
> to mod_python so I wouldn't rely on that! :-)
> 
> Brian
> 
> -----Original Message-----
> From: mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
> Sent: 21 September 2004 23:44
> To: mod_python user mailing list
> Subject: Re: [mod_python] sys.path shared?
> 
> 
> Each apache instance/process has its own interpreter therefore its own 
> sys.path.  So I would say it is not possible.
> 
> On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
> > I have mod_python code that appends a directory to sys.path and
> > deletes that
> > directory from sys.path at the end of the handler. Is it possible that, 
> > between that push and pop, another Apache instance running the same code

> > might get the non-popped sys.path, making its sys.path out of sync with
> the
> > other Apaches?
> > 
> > Adrian
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Terry
Registered Linux User # 311806
www.taumu.com


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From terry.macdonald at dsl.pipex.com  Wed Sep 22 15:38:16 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Wed Sep 22 09:38:19 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <00ee01c4a0a5$7a59f3e0$190b030a@Menai.local>
References: <00ee01c4a0a5$7a59f3e0$190b030a@Menai.local>
Message-ID: <1095860296.12184.2.camel@bigmac.taumu.com>

ah-ah! More evidence against threads in the threads versus processes
debate.  ;3)

On Wed, 2004-09-22 at 14:10, Brian Bird wrote:
> Sorry, I should have given this a bit more thought. If you're using a forked
> process environment then I would expect the sys.path variables to be
> separate for each request. If you're using a threaded mpm (which is what I
> use) then I assume sys.path would work like global variables which are
> shared across requests.
> 
> Brian
> 
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
> Sent: 22 September 2004 13:54
> To: mod_python user mailing list
> Subject: RE: [mod_python] sys.path shared?
> 
> 
> Can anyone put me right on my understanding of the way mod_python works in
> an apache forked process environment.  Each process has its own embedded
> interpreter and therefore its own sys.path variable. 
> 
> How is it possible for an apache instance/process with its own embedded
> interpreter to 'reach' across and use/inherit another processes/interpreters
> sys.path?
> 
> 
> 
> On Wed, 2004-09-22 at 09:58, Brian Bird wrote:
> > Might be best to try it: Write a cgi script which prints the sys.path 
> > at the start and at the end. Put a long sleep in the middle then you 
> > can visit your script twice with a browser (start the second visit 
> > while the first one is still running) and see what the sys.path is of 
> > your second visit.
> > 
> > My gut feeling would be that it would be possible but I'm pretty new 
> > to mod_python so I wouldn't rely on that! :-)
> > 
> > Brian
> > 
> > -----Original Message-----
> > From: mod_python-bounces@modpython.org 
> > [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
> > Sent: 21 September 2004 23:44
> > To: mod_python user mailing list
> > Subject: Re: [mod_python] sys.path shared?
> > 
> > 
> > Each apache instance/process has its own interpreter therefore its own 
> > sys.path.  So I would say it is not possible.
> > 
> > On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
> > > I have mod_python code that appends a directory to sys.path and
> > > deletes that
> > > directory from sys.path at the end of the handler. Is it possible that, 
> > > between that push and pop, another Apache instance running the same code
> 
> > > might get the non-popped sys.path, making its sys.path out of sync with
> > the
> > > other Apaches?
> > > 
> > > Adrian
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Terry
Registered Linux User # 311806
www.taumu.com


From terry.macdonald at dsl.pipex.com  Wed Sep 22 15:50:30 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Wed Sep 22 09:50:39 2004
Subject: [mod_python] Sessions + Publisher
In-Reply-To: <09740FBC-0C2C-11D9-A8A8-000A95CCEA34@itodd.org>
References: <09740FBC-0C2C-11D9-A8A8-000A95CCEA34@itodd.org>
Message-ID: <1095861030.12184.14.camel@bigmac.taumu.com>

If is_new() is always true it means that a session cookie is not in the
request.

util.redirect does not set up the cookie in the response, calling
Session(req, secret...) does that (if the request does not have a valid
one already set)

Not knowing what is going on in your login script its hard to tell what
the exact problem is but I would check that session cookies are being
exchnged between the browser and the server.

On Wed, 2004-09-22 at 01:12, Todd Boland wrote:
> Hello again!
> 
> In my experiences as a web developer (I'm coming from a Perl/Mason 
> environment), I've found that the convenience of "transparently" 
> generating sessions outweighs the performance hit.
> 
> I'm trying to implement sessions "transparently" using 2 handlers for 
> every request. The first handler makes sure a session is set, if it was 
> just created, it will forward the browser to a login page (like the 
> documentation suggests). More code that checks session ids against 
> values in the database to authenticate users will eventually be added.
> 
> By the time a request gets to the second handler (the Publisher 
> handler), sessions have preemptively been taken care of (it's totally 
> "transparent").
> 
> The problem I'm having is: I end up in an infinite redirect loop:
> 
> The session handler:
> 
> from mod_python import apache, util
> from mod_python.Session import Session
> from RPM.common import web_root
> 
> def handler(req):
>          session = Session(req, secret='********')
> 
>          # if the session is new, they need to log in
>          if session.is_new():
> 
>                  # Using util's redirect will set the cookie
>                  util.redirect(req, web_root('index.py/login?url=%s' % 
> req.uri))
> 
> 	# TODO: Make sure sid is logged in
> 
> 	# Hand off to Publisher handler by returning 200 OK
>          return apache.OK
> 
> session.is_new() always returns 1 even after the session cookie is set 
> (after the redirect). Any ideas or nudges in the right direction would 
> greatly be appreciated. Thanks!
-- 
Terry
Registered Linux User # 311806
www.taumu.com


From brian.bird at securetrading.com  Wed Sep 22 15:58:32 2004
From: brian.bird at securetrading.com (Brian Bird)
Date: Wed Sep 22 09:58:35 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <1095860296.12184.2.camel@bigmac.taumu.com>
Message-ID: <011501c4a0ac$3f2142e0$190b030a@Menai.local>

Not sure that's actually evidence against threads. In my case I do actually
want to share variables (I want only one database connection shared across
all requests and I also have a global variable counting the number of
requests which each reuqest updates)

I've got my sys.path set up in the apache config so it only has to be
initialised once. The (potential) problem with forking is the amount of
extra overhead required for each request. Mind you, apache seems to do a
pretty good job of reducing the overhead so it's not really a problem. But
to share something like a database connection using a forking model... I'm
not sure that's even possible is it?

Brian

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
Sent: 22 September 2004 14:38
To: mod_python user mailing list
Subject: RE: [mod_python] sys.path shared?


ah-ah! More evidence against threads in the threads versus processes debate.
;3)

On Wed, 2004-09-22 at 14:10, Brian Bird wrote:
> Sorry, I should have given this a bit more thought. If you're using a 
> forked process environment then I would expect the sys.path variables 
> to be separate for each request. If you're using a threaded mpm (which 
> is what I
> use) then I assume sys.path would work like global variables which are
> shared across requests.
> 
> Brian
> 
> -----Original Message-----
> From: mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
> Sent: 22 September 2004 13:54
> To: mod_python user mailing list
> Subject: RE: [mod_python] sys.path shared?
> 
> 
> Can anyone put me right on my understanding of the way mod_python 
> works in an apache forked process environment.  Each process has its 
> own embedded interpreter and therefore its own sys.path variable.
> 
> How is it possible for an apache instance/process with its own 
> embedded interpreter to 'reach' across and use/inherit another 
> processes/interpreters sys.path?
> 
> 
> 
> On Wed, 2004-09-22 at 09:58, Brian Bird wrote:
> > Might be best to try it: Write a cgi script which prints the 
> > sys.path
> > at the start and at the end. Put a long sleep in the middle then you 
> > can visit your script twice with a browser (start the second visit 
> > while the first one is still running) and see what the sys.path is of 
> > your second visit.
> > 
> > My gut feeling would be that it would be possible but I'm pretty new
> > to mod_python so I wouldn't rely on that! :-)
> > 
> > Brian
> > 
> > -----Original Message-----
> > From: mod_python-bounces@modpython.org
> > [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
> > Sent: 21 September 2004 23:44
> > To: mod_python user mailing list
> > Subject: Re: [mod_python] sys.path shared?
> > 
> > 
> > Each apache instance/process has its own interpreter therefore its 
> > own
> > sys.path.  So I would say it is not possible.
> > 
> > On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
> > > I have mod_python code that appends a directory to sys.path and 
> > > deletes that directory from sys.path at the end of the handler. Is 
> > > it possible that, between that push and pop, another Apache 
> > > instance running the same code
> 
> > > might get the non-popped sys.path, making its sys.path out of sync 
> > > with
> > the
> > > other Apaches?
> > > 
> > > Adrian
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org 
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Terry
Registered Linux User # 311806
www.taumu.com


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From itodd at itodd.org  Wed Sep 22 12:24:16 2004
From: itodd at itodd.org (Todd Boland)
Date: Wed Sep 22 11:24:22 2004
Subject: [mod_python] Sessions + Publisher
In-Reply-To: <1095861030.12184.14.camel@bigmac.taumu.com>
References: <09740FBC-0C2C-11D9-A8A8-000A95CCEA34@itodd.org>
	<1095861030.12184.14.camel@bigmac.taumu.com>
Message-ID: <77482D7E-0CAB-11D9-A8A8-000A95CCEA34@itodd.org>

On Sep 22, 2004, at 9:50 AM, Terry MacDonald wrote:

> If is_new() is always true it means that a session cookie is not in the
> request.
>
> util.redirect does not set up the cookie in the response, calling
> Session(req, secret...) does that (if the request does not have a valid
> one already set)

My understanding of Session is as follows: When I call Session(req, 
secret=''), I am assuming that the class first checks for existing 
cookies sent by the client, if it doesn't find one, it generates the 
sid and sends the set-cookie header to the client. It also sets a 
private member to 1 for Session.is_new() to return.

Is this accurate?

>
> Not knowing what is going on in your login script its hard to tell what
> the exact problem is but I would check that session cookies are being
> exchnged between the browser and the server.

The cookie is definitely being set. Firefox and Safari both report 
having pysid cookies. All my login script is at the moment is:

def login(req, url=None):
	req.write('login')

Safari bitches about too many redirects and firefox is sent into an 
infinite redirect loop.

Thanks for your help and time Terry.

Todd

>
> On Wed, 2004-09-22 at 01:12, Todd Boland wrote:
>> Hello again!
>>
>> In my experiences as a web developer (I'm coming from a Perl/Mason
>> environment), I've found that the convenience of "transparently"
>> generating sessions outweighs the performance hit.
>>
>> I'm trying to implement sessions "transparently" using 2 handlers for
>> every request. The first handler makes sure a session is set, if it 
>> was
>> just created, it will forward the browser to a login page (like the
>> documentation suggests). More code that checks session ids against
>> values in the database to authenticate users will eventually be added.
>>
>> By the time a request gets to the second handler (the Publisher
>> handler), sessions have preemptively been taken care of (it's totally
>> "transparent").
>>
>> The problem I'm having is: I end up in an infinite redirect loop:
>>
>> The session handler:
>>
>> from mod_python import apache, util
>> from mod_python.Session import Session
>> from RPM.common import web_root
>>
>> def handler(req):
>>          session = Session(req, secret='********')
>>
>>          # if the session is new, they need to log in
>>          if session.is_new():
>>
>>                  # Using util's redirect will set the cookie
>>                  util.redirect(req, web_root('index.py/login?url=%s' %
>> req.uri))
>>
>> 	# TODO: Make sure sid is logged in
>>
>> 	# Hand off to Publisher handler by returning 200 OK
>>          return apache.OK
>>
>> session.is_new() always returns 1 even after the session cookie is set
>> (after the redirect). Any ideas or nudges in the right direction would
>> greatly be appreciated. Thanks!
> -- 
> Terry
> Registered Linux User # 311806
> www.taumu.com
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Todd Boland
Software Engineer
Charged Software
(508) 887-2885
Facsimile: (978) 264-0058

-- 
Statement of Confidentiality:

The information contained in this electronic message and any 
attachments to this message are intended for the exclusive use of the 
addressee(s) and may contain confidential or privileged information.

If you are not the intended recipient, please notify Todd Boland, at 
(508) 887-2885 immediately, and destroy all copies of this message and 
any attachments.

From vinjvinj at yahoo.com  Wed Sep 22 10:16:27 2004
From: vinjvinj at yahoo.com (Vinj Vinj)
Date: Wed Sep 22 12:16:31 2004
Subject: [mod_python] Consulting Project: Anyone interested in porting
	apython bulletin board application to mp_servlet
Message-ID: <20040922161627.16642.qmail@web41313.mail.yahoo.com>

It needs to be converted from chinese to english

> #1 this program is in chinese, does it need to be
translated?
> 

> #2 you want to convert it from python to mod_python?
> 
The current applicatio is already written on top of
Python. I'm looking for someone to clean up the code
and move to mpservlet. Also, I'm not too keen on the
use of cheetah templates. 

There are also some custom features that I need around
sorting that would need to be added. 
From terry.macdonald at dsl.pipex.com  Wed Sep 22 18:22:09 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Wed Sep 22 12:22:14 2004
Subject: [mod_python] Sessions + Publisher
In-Reply-To: <77482D7E-0CAB-11D9-A8A8-000A95CCEA34@itodd.org>
References: <09740FBC-0C2C-11D9-A8A8-000A95CCEA34@itodd.org>
	<1095861030.12184.14.camel@bigmac.taumu.com>
	<77482D7E-0CAB-11D9-A8A8-000A95CCEA34@itodd.org>
Message-ID: <1095870129.12184.36.camel@bigmac.taumu.com>

How are you setting up 2 handlers for each request (apache
configuration)?

Are you using PythonAuthenHandler for your session handler and
PythonHandler for publisher?

At a guess...

The original request is handled by your session handler. When the
handler returns apache completes the remaining phases and returns a
response with the session cookie to the client browser.

I'm pretty sure the redirect generates a new request that is handled
like an external request, therefore it goes the same route as the
original request i.e. apache passes the (redirect) request to your
session handler. The redirect request has no session cookie (as it did
not come from the browser) therefore a new one is generated and another
redirect is invoked and there begins your loop. 

You cannot have two content handlers so depending on how you have
(apache) configured your handlers I would suspect that the publisher is
not being called either.



On Wed, 2004-09-22 at 16:24, Todd Boland wrote:
> On Sep 22, 2004, at 9:50 AM, Terry MacDonald wrote:
> 
> > If is_new() is always true it means that a session cookie is not in the
> > request.
> >
> > util.redirect does not set up the cookie in the response, calling
> > Session(req, secret...) does that (if the request does not have a valid
> > one already set)
> 
> My understanding of Session is as follows: When I call Session(req, 
> secret=''), I am assuming that the class first checks for existing 
> cookies sent by the client, if it doesn't find one, it generates the 
> sid and sends the set-cookie header to the client. It also sets a 
> private member to 1 for Session.is_new() to return.
> 
> Is this accurate?
> 
> >
> > Not knowing what is going on in your login script its hard to tell what
> > the exact problem is but I would check that session cookies are being
> > exchnged between the browser and the server.
> 
> The cookie is definitely being set. Firefox and Safari both report 
> having pysid cookies. All my login script is at the moment is:
> 
> def login(req, url=None):
> 	req.write('login')
> 
> Safari bitches about too many redirects and firefox is sent into an 
> infinite redirect loop.
> 
> Thanks for your help and time Terry.
> 
> Todd
> 
> >
> > On Wed, 2004-09-22 at 01:12, Todd Boland wrote:
> >> Hello again!
> >>
> >> In my experiences as a web developer (I'm coming from a Perl/Mason
> >> environment), I've found that the convenience of "transparently"
> >> generating sessions outweighs the performance hit.
> >>
> >> I'm trying to implement sessions "transparently" using 2 handlers for
> >> every request. The first handler makes sure a session is set, if it 
> >> was
> >> just created, it will forward the browser to a login page (like the
> >> documentation suggests). More code that checks session ids against
> >> values in the database to authenticate users will eventually be added.
> >>
> >> By the time a request gets to the second handler (the Publisher
> >> handler), sessions have preemptively been taken care of (it's totally
> >> "transparent").
> >>
> >> The problem I'm having is: I end up in an infinite redirect loop:
> >>
> >> The session handler:
> >>
> >> from mod_python import apache, util
> >> from mod_python.Session import Session
> >> from RPM.common import web_root
> >>
> >> def handler(req):
> >>          session = Session(req, secret='********')
> >>
> >>          # if the session is new, they need to log in
> >>          if session.is_new():
> >>
> >>                  # Using util's redirect will set the cookie
> >>                  util.redirect(req, web_root('index.py/login?url=%s' %
> >> req.uri))
> >>
> >> 	# TODO: Make sure sid is logged in
> >>
> >> 	# Hand off to Publisher handler by returning 200 OK
> >>          return apache.OK
> >>
> >> session.is_new() always returns 1 even after the session cookie is set
> >> (after the redirect). Any ideas or nudges in the right direction would
> >> greatly be appreciated. Thanks!
> > -- 
> > Terry
> > Registered Linux User # 311806
> > www.taumu.com
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> 
> -- 
> Todd Boland
> Software Engineer
> Charged Software
> (508) 887-2885
> Facsimile: (978) 264-0058

From grisha at modpython.org  Wed Sep 22 13:53:18 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Sep 22 12:53:22 2004
Subject: [mod_python] Sessions + Publisher
In-Reply-To: <09740FBC-0C2C-11D9-A8A8-000A95CCEA34@itodd.org>
References: <09740FBC-0C2C-11D9-A8A8-000A95CCEA34@itodd.org>
Message-ID: <20040922125152.W3003@onyx.ispol.com>


You're missing a session.save() before your redirect.

Grisha

On Tue, 21 Sep 2004, Todd Boland wrote:

> Hello again!
>
> In my experiences as a web developer (I'm coming from a Perl/Mason 
> environment), I've found that the convenience of "transparently" generating 
> sessions outweighs the performance hit.
>
> I'm trying to implement sessions "transparently" using 2 handlers for every 
> request. The first handler makes sure a session is set, if it was just 
> created, it will forward the browser to a login page (like the documentation 
> suggests). More code that checks session ids against values in the database 
> to authenticate users will eventually be added.
>
> By the time a request gets to the second handler (the Publisher handler), 
> sessions have preemptively been taken care of (it's totally "transparent").
>
> The problem I'm having is: I end up in an infinite redirect loop:
>
> The session handler:
>
> from mod_python import apache, util
> from mod_python.Session import Session
> from RPM.common import web_root
>
> def handler(req):
>        session = Session(req, secret='********')
>
>        # if the session is new, they need to log in
>        if session.is_new():
>
>                # Using util's redirect will set the cookie
>                util.redirect(req, web_root('index.py/login?url=%s' % 
> req.uri))
>
> 	# TODO: Make sure sid is logged in
>
> 	# Hand off to Publisher handler by returning 200 OK
>        return apache.OK
>
> session.is_new() always returns 1 even after the session cookie is set (after 
> the redirect). Any ideas or nudges in the right direction would greatly be 
> appreciated. Thanks!
>
> -- 
> Todd
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Wed Sep 22 13:57:04 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Sep 22 12:57:09 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <1095857654.8285.161.camel@bigmac.taumu.com>
References: <009701c4a082$523cde90$190b030a@Menai.local>
	<1095857654.8285.161.camel@bigmac.taumu.com>
Message-ID: <20040922125340.M3003@onyx.ispol.com>


On Wed, 22 Sep 2004, Terry MacDonald wrote:

> Can anyone put me right on my understanding of the way mod_python works
> in an apache forked process environment.  Each process has its own
> embedded interpreter and therefore its own sys.path variable.

Each process may have more than one sub-interpreter, and each 
subinterpreter has a separate sys.path.

> How is it possible for an apache instance/process with its own embedded
> interpreter to 'reach' across and use/inherit another
> processes/interpreters sys.path?

It's not possible.

Grisha

From jryan at qutang.net  Wed Sep 22 13:01:37 2004
From: jryan at qutang.net (Justin Ryan)
Date: Wed Sep 22 13:01:42 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <011501c4a0ac$3f2142e0$190b030a@Menai.local>
References: <011501c4a0ac$3f2142e0$190b030a@Menai.local>
Message-ID: <10A42CA9-0CB9-11D9-8F9C-000D93AD1DB8@qutang.net>

You certainly can't share a database connection across apache children 
using a forking model, and I haven't decided if I think you can using a 
threaded mpm either.  You probably don't want the interpreter shared at 
all, b/c of the good ol' GIL.  Also, if you use psycopg (afaik, the 
only threadsafety level 2 adapter), you're really opening a new 
connection each time you grab a cursor - it just handles the magic for 
you.  In fact, you've gotta be pretty careful using psycopg if you dont 
want it to hold a gangload of connections open for no reason.

If you are globally setting sys.path in apache conf, you know that each 
instance of mod_python is _beginning_ with the same sys.path (or maybe 
each req - i forget things alot).  If you have some code which modifies 
it, it won't propogate.  You could take a look at the code for 
application variables in PSE[1] and copy the general idea (think of app 
vars as session vars that span sessions the way session vars span 
requests).

We also hacked up a way of holding onto a db connection, but only 
per-apache process.  This isn't too bad, because you can handle several 
hundred requests before tearing down the child (and, in a shared env, 
the connection is only opened after the first mod_python req comes 
through).

Cheers,

-=JR

[1] http://nick.borko.org/pse - it's totally fly

On Sep 22, 2004, at 8:58 AM, Brian Bird wrote:

> Not sure that's actually evidence against threads. In my case I do 
> actually
> want to share variables (I want only one database connection shared 
> across
> all requests and I also have a global variable counting the number of
> requests which each reuqest updates)
>
> I've got my sys.path set up in the apache config so it only has to be
> initialised once. The (potential) problem with forking is the amount of
> extra overhead required for each request. Mind you, apache seems to do 
> a
> pretty good job of reducing the overhead so it's not really a problem. 
> But
> to share something like a database connection using a forking model... 
> I'm
> not sure that's even possible is it?
>
> Brian
>
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
> Sent: 22 September 2004 14:38
> To: mod_python user mailing list
> Subject: RE: [mod_python] sys.path shared?
>
>
> ah-ah! More evidence against threads in the threads versus processes 
> debate.
> ;3)
>
> On Wed, 2004-09-22 at 14:10, Brian Bird wrote:
>> Sorry, I should have given this a bit more thought. If you're using a
>> forked process environment then I would expect the sys.path variables
>> to be separate for each request. If you're using a threaded mpm (which
>> is what I
>> use) then I assume sys.path would work like global variables which are
>> shared across requests.
>>
>> Brian
>>
>> -----Original Message-----
>> From: mod_python-bounces@modpython.org
>> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
>> Sent: 22 September 2004 13:54
>> To: mod_python user mailing list
>> Subject: RE: [mod_python] sys.path shared?
>>
>>
>> Can anyone put me right on my understanding of the way mod_python
>> works in an apache forked process environment.  Each process has its
>> own embedded interpreter and therefore its own sys.path variable.
>>
>> How is it possible for an apache instance/process with its own
>> embedded interpreter to 'reach' across and use/inherit another
>> processes/interpreters sys.path?
>>
>>
>>
>> On Wed, 2004-09-22 at 09:58, Brian Bird wrote:
>>> Might be best to try it: Write a cgi script which prints the
>>> sys.path
>>> at the start and at the end. Put a long sleep in the middle then you
>>> can visit your script twice with a browser (start the second visit
>>> while the first one is still running) and see what the sys.path is of
>>> your second visit.
>>>
>>> My gut feeling would be that it would be possible but I'm pretty new
>>> to mod_python so I wouldn't rely on that! :-)
>>>
>>> Brian
>>>
>>> -----Original Message-----
>>> From: mod_python-bounces@modpython.org
>>> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry 
>>> MacDonald
>>> Sent: 21 September 2004 23:44
>>> To: mod_python user mailing list
>>> Subject: Re: [mod_python] sys.path shared?
>>>
>>>
>>> Each apache instance/process has its own interpreter therefore its
>>> own
>>> sys.path.  So I would say it is not possible.
>>>
>>> On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
>>>> I have mod_python code that appends a directory to sys.path and
>>>> deletes that directory from sys.path at the end of the handler. Is
>>>> it possible that, between that push and pop, another Apache
>>>> instance running the same code
>>
>>>> might get the non-popped sys.path, making its sys.path out of sync
>>>> with
>>> the
>>>> other Apaches?
>>>>
>>>> Adrian
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> -- 
> Terry
> Registered Linux User # 311806
> www.taumu.com
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From itodd at itodd.org  Wed Sep 22 14:17:38 2004
From: itodd at itodd.org (Todd Boland)
Date: Wed Sep 22 13:17:45 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <10A42CA9-0CB9-11D9-8F9C-000D93AD1DB8@qutang.net>
References: <011501c4a0ac$3f2142e0$190b030a@Menai.local>
	<10A42CA9-0CB9-11D9-8F9C-000D93AD1DB8@qutang.net>
Message-ID: <4D88AE90-0CBB-11D9-A8A8-000A95CCEA34@itodd.org>

I'm using SQL Relay to share database connections on my pre-forked 
apache. This way, when load increases, every process doesn't need their 
own db connection, they only need their own SQL Relay connection. It's 
a pretty neat project. David Muse did a good job. Python bindings are 
included :)

http://sqlrelay.sf.net

-- 
Todd

p.s. email me if any of you are on OS X and try SQL Relay 0.35, there 
are a few gotchas (termio lines in a rudiments header file needs to be 
commented out; CFLAGS needs "-framework Python"; and finally shared 
memory needs to be increased in /etc/rc).

On Sep 22, 2004, at 1:01 PM, Justin Ryan wrote:

> You certainly can't share a database connection across apache children 
> using a forking model, and I haven't decided if I think you can using 
> a threaded mpm either.  You probably don't want the interpreter shared 
> at all, b/c of the good ol' GIL.  Also, if you use psycopg (afaik, the 
> only threadsafety level 2 adapter), you're really opening a new 
> connection each time you grab a cursor - it just handles the magic for 
> you.  In fact, you've gotta be pretty careful using psycopg if you 
> dont want it to hold a gangload of connections open for no reason.
>
> If you are globally setting sys.path in apache conf, you know that 
> each instance of mod_python is _beginning_ with the same sys.path (or 
> maybe each req - i forget things alot).  If you have some code which 
> modifies it, it won't propogate.  You could take a look at the code 
> for application variables in PSE[1] and copy the general idea (think 
> of app vars as session vars that span sessions the way session vars 
> span requests).
>
> We also hacked up a way of holding onto a db connection, but only 
> per-apache process.  This isn't too bad, because you can handle 
> several hundred requests before tearing down the child (and, in a 
> shared env, the connection is only opened after the first mod_python 
> req comes through).
>
> Cheers,
>
> -=JR
>
> [1] http://nick.borko.org/pse - it's totally fly
>
> On Sep 22, 2004, at 8:58 AM, Brian Bird wrote:
>
>> Not sure that's actually evidence against threads. In my case I do 
>> actually
>> want to share variables (I want only one database connection shared 
>> across
>> all requests and I also have a global variable counting the number of
>> requests which each reuqest updates)
>>
>> I've got my sys.path set up in the apache config so it only has to be
>> initialised once. The (potential) problem with forking is the amount 
>> of
>> extra overhead required for each request. Mind you, apache seems to 
>> do a
>> pretty good job of reducing the overhead so it's not really a 
>> problem. But
>> to share something like a database connection using a forking 
>> model... I'm
>> not sure that's even possible is it?
>>
>> Brian
>>
>> -----Original Message-----
>> From: mod_python-bounces@modpython.org
>> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry MacDonald
>> Sent: 22 September 2004 14:38
>> To: mod_python user mailing list
>> Subject: RE: [mod_python] sys.path shared?
>>
>>
>> ah-ah! More evidence against threads in the threads versus processes 
>> debate.
>> ;3)
>>
>> On Wed, 2004-09-22 at 14:10, Brian Bird wrote:
>>> Sorry, I should have given this a bit more thought. If you're using a
>>> forked process environment then I would expect the sys.path variables
>>> to be separate for each request. If you're using a threaded mpm 
>>> (which
>>> is what I
>>> use) then I assume sys.path would work like global variables which 
>>> are
>>> shared across requests.
>>>
>>> Brian
>>>
>>> -----Original Message-----
>>> From: mod_python-bounces@modpython.org
>>> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry 
>>> MacDonald
>>> Sent: 22 September 2004 13:54
>>> To: mod_python user mailing list
>>> Subject: RE: [mod_python] sys.path shared?
>>>
>>>
>>> Can anyone put me right on my understanding of the way mod_python
>>> works in an apache forked process environment.  Each process has its
>>> own embedded interpreter and therefore its own sys.path variable.
>>>
>>> How is it possible for an apache instance/process with its own
>>> embedded interpreter to 'reach' across and use/inherit another
>>> processes/interpreters sys.path?
>>>
>>>
>>>
>>> On Wed, 2004-09-22 at 09:58, Brian Bird wrote:
>>>> Might be best to try it: Write a cgi script which prints the
>>>> sys.path
>>>> at the start and at the end. Put a long sleep in the middle then you
>>>> can visit your script twice with a browser (start the second visit
>>>> while the first one is still running) and see what the sys.path is 
>>>> of
>>>> your second visit.
>>>>
>>>> My gut feeling would be that it would be possible but I'm pretty new
>>>> to mod_python so I wouldn't rely on that! :-)
>>>>
>>>> Brian
>>>>
>>>> -----Original Message-----
>>>> From: mod_python-bounces@modpython.org
>>>> [mailto:mod_python-bounces@modpython.org] On Behalf Of Terry 
>>>> MacDonald
>>>> Sent: 21 September 2004 23:44
>>>> To: mod_python user mailing list
>>>> Subject: Re: [mod_python] sys.path shared?
>>>>
>>>>
>>>> Each apache instance/process has its own interpreter therefore its
>>>> own
>>>> sys.path.  So I would say it is not possible.
>>>>
>>>> On Tue, 2004-09-21 at 23:24, Adrian Holovaty wrote:
>>>>> I have mod_python code that appends a directory to sys.path and
>>>>> deletes that directory from sys.path at the end of the handler. Is
>>>>> it possible that, between that push and pop, another Apache
>>>>> instance running the same code
>>>
>>>>> might get the non-popped sys.path, making its sys.path out of sync
>>>>> with
>>>> the
>>>>> other Apaches?
>>>>>
>>>>> Adrian
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> -- 
>> Terry
>> Registered Linux User # 311806
>> www.taumu.com
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From kamil at nvstudio.pl  Wed Sep 22 21:10:01 2004
From: kamil at nvstudio.pl (Kamil Niechajewicz)
Date: Wed Sep 22 14:10:27 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <4D88AE90-0CBB-11D9-A8A8-000A95CCEA34@itodd.org>
References: <011501c4a0ac$3f2142e0$190b030a@Menai.local>
	<10A42CA9-0CB9-11D9-8F9C-000D93AD1DB8@qutang.net>
	<4D88AE90-0CBB-11D9-A8A8-000A95CCEA34@itodd.org>
Message-ID: <opseqp2zqwv05qvk@localhost>

On Wed, 22 Sep 2004 13:17:38 -0400, Todd Boland <itodd@itodd.org> wrote:

> I'm using SQL Relay to share database connections on my pre-forked  
> apache. This way, when load increases, every process doesn't need their  
> own db connection, they only need their own SQL Relay connection. It's a  
> pretty neat project. David Muse did a good job. Python bindings are  
> included :)

hello, i'm quite interested in using sqlrelay. i tried to do some tests
both using sqlrelay database access or plain postgresql connection.
and the results i've got were quite comparable, sometimes plain connection
even had better result..
have you made any benchmarks like that? how do you feel about sqlrelay
speed compared to normal db api?

best regards,
kamil
From itodd at itodd.org  Wed Sep 22 15:29:07 2004
From: itodd at itodd.org (Todd Boland)
Date: Wed Sep 22 14:29:13 2004
Subject: [mod_python] sys.path shared?
In-Reply-To: <opseqp2zqwv05qvk@localhost>
References: <011501c4a0ac$3f2142e0$190b030a@Menai.local>
	<10A42CA9-0CB9-11D9-8F9C-000D93AD1DB8@qutang.net>
	<4D88AE90-0CBB-11D9-A8A8-000A95CCEA34@itodd.org>
	<opseqp2zqwv05qvk@localhost>
Message-ID: <4A2A11EF-0CC5-11D9-A8A8-000A95CCEA34@itodd.org>

Kamil,

SQL Relay is not supposed to be faster than a traditional connection. 
SQL Relay's benefits will only show themselves when the load is high 
and db connections are scarce.

My db connection will be the first limited resource exhausted. SQL 
Relay relieves that bottleneck which will net me limited, but arguably 
more load handling capability.

You know when a site gets slashdotted and you see that mysql_connect(): 
too many users message? SQL Relay will help alleviate that.

My application may never reach that bottleneck, but it's easing to know 
I am prepared for it. It's my pro-active nature.

Take Care,

Todd


On Sep 22, 2004, at 2:10 PM, Kamil Niechajewicz wrote:

> On Wed, 22 Sep 2004 13:17:38 -0400, Todd Boland <itodd@itodd.org> 
> wrote:
>
>> I'm using SQL Relay to share database connections on my pre-forked 
>> apache. This way, when load increases, every process doesn't need 
>> their own db connection, they only need their own SQL Relay 
>> connection. It's a pretty neat project. David Muse did a good job. 
>> Python bindings are included :)
>
> hello, i'm quite interested in using sqlrelay. i tried to do some tests
> both using sqlrelay database access or plain postgresql connection.
> and the results i've got were quite comparable, sometimes plain 
> connection
> even had better result..
> have you made any benchmarks like that? how do you feel about sqlrelay
> speed compared to normal db api?
>
> best regards,
> kamil
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From rpinder at usc.edu  Wed Sep 22 12:42:09 2004
From: rpinder at usc.edu (Rich Pinder)
Date: Wed Sep 22 14:42:03 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping it
	executable)
In-Reply-To: <4150BBE4.20902@apnic.net>
References: <4150B426.8020503@usc.edu> <4150BBE4.20902@apnic.net>
Message-ID: <4151C781.7070000@usc.edu>

Thanks for your reply here Byron.
I am indeed using the first option you mention:

> <Directory /home/httpd/htdocs/ctspython>
>   AddHandler python-program .py
>   PythonHandler mod_python.publisher
>   PythonDebug On
> </Directory>

By your reply, you think by using this it should NOT show the text ? 

Version info:

> Python 2.2 (#1, Mar 26 2002, 15:46:04)
> [GCC 2.95.3 20010315 (SuSE)] on linux2

> drwxr-xr-x    4 1000     513           296 Nov 15  2002 kinterbasdb-3.0.2


thanks for any thoughts

rich

Byron Ellacott wrote:

> Rich Pinder wrote:
>
>> I'm using Apache 1.3 with Python (Kinterbas) to access a Firebird 
>> database.
>> The .py script resides in a directory under the document root.  If 
>> you enter the full url to the script file, the browser returns a 
>> textual representation of the script  (complete with all my 
>> connection string info & password into the database !)
>> What am I missing here ??
>
>
> Either you're using the Python publisher handler, in which case I'm 
> surprised that you ever see the text of the script, or you're directly 
> using a PythonHandler statement, in which case you can install your 
> Python modules anywhere on the Python path.
>
> In an Apache config file for a host, I have:
>
>         <Location /budget>
>             SetHandler mod_python
>             Options -MultiViews
>             PythonDebug On
>             PythonAutoReload On
>             PythonInterpreter budget
>             PythonHandler bje.budgetweb
>             PythonOption SessionDbm /usr/share/budget/session.dbm
>         </Location>
>
> The "/var/www/budget" directory does not exist at all; there's nothing 
> that a user can fetch via URL that is not generated by the 
> bje.budgetweb module, which lives in /usr/local/python/someplace, 
> IIRC.  In sys.path[], anyway.
>
> (That module then calls other modules based on patterns matched 
> against path_info, according to a configuration block.  But that's 
> just my preference for how to arrange things.)
>
From bray at sent.com  Wed Sep 22 16:13:23 2004
From: bray at sent.com (Brian Ray)
Date: Wed Sep 22 16:13:38 2004
Subject: [mod_python] mod_python + mod_ssl
Message-ID: <DB143345-0CD3-11D9-B9D2-000A95BF3560@sent.com>

I am running mod_ssl and mod_python on separate Virtual Hosts. I would 
like to run them in the same location. Will this work?

Does anyone have a snip from a sample httpd.conf so I can see how this 
is configured?

From bje at apnic.net  Thu Sep 23 10:44:34 2004
From: bje at apnic.net (Byron Ellacott)
Date: Wed Sep 22 19:43:00 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping
	it	executable)
In-Reply-To: <4151C781.7070000@usc.edu>
References: <4150B426.8020503@usc.edu> <4150BBE4.20902@apnic.net>
	<4151C781.7070000@usc.edu>
Message-ID: <41520E62.5060903@apnic.net>

Rich Pinder wrote:
>>   AddHandler python-program .py
>>   PythonHandler mod_python.publisher
> By your reply, you think by using this it should NOT show the text ?

Definitely not.  You're telling Apache there that .py should be handled 
as a python-program.

In $DOCUMENTROOT/foo/.htaccess, I have:

     AddHandler python-program .py
     PythonHander mod_python.publisher

In $DOCUMENTROOT/foo/foo.py, I have:

     import time
     def index(req):
         return time.asctime()

See http://mlm.bpa.nu:8080/foo/foo.py and note that the source is not 
returned, and that the return is definitely dynamically generated.

Is mod_python enabled in your web server?  Perhaps you haven't restarted 
Apache since adding those configuration directives?  Are you using 
Apache 1.3 or 2.0?  Can you get it to do anything dynamic at all?

-- 
bje
From bje at apnic.net  Thu Sep 23 10:47:59 2004
From: bje at apnic.net (Byron Ellacott)
Date: Wed Sep 22 19:46:24 2004
Subject: [mod_python] mod_python + mod_ssl
In-Reply-To: <DB143345-0CD3-11D9-B9D2-000A95BF3560@sent.com>
References: <DB143345-0CD3-11D9-B9D2-000A95BF3560@sent.com>
Message-ID: <41520F2F.5050805@apnic.net>

Brian Ray wrote:
> I am running mod_ssl and mod_python on separate Virtual Hosts. I would 
> like to run them in the same location. Will this work?

I don't think I understand what you're asking here.  What do you mean by 
"in the same location?"  If you mean the same physical filespace, you 
can probably do that by having each virtual host config include a shared 
config for the mod_python section.

If you're using named virtual hosts, note that there is a bug in mod_ssl 
for Apache 2.0 that can prevent POSTs from working, depending on how you 
configure your SSL options.  It can also affect numeric virtual hosts 
and single host setups where you alter client verify requirements on a 
per-directory or per-location basis.

-- 
bje
From rpinder at usc.edu  Wed Sep 22 18:28:35 2004
From: rpinder at usc.edu (Rich Pinder)
Date: Wed Sep 22 20:28:30 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping it
	executable)
In-Reply-To: <4151C781.7070000@usc.edu>
References: <4150B426.8020503@usc.edu> <4150BBE4.20902@apnic.net>
	<4151C781.7070000@usc.edu>
Message-ID: <415218B3.9000600@usc.edu>

Thanks Byron for replying.
Last first.  Apache 1.3.  Mod Python is configured and working just 
fine.  Database is being populated from forms. 
I stumbled on this 'oddity' totally by accident - and really think it 
should be fixed !!
I see indeed how it should work, from your URL

But I have no stuff configured in any .htaccess files - and sure I never 
saw THIS in the notes that came with samples I used. (see below for ver 
numbers / dates for the components).

Only stuff in my httpd.conf is:

> #they python module is in here
> Include /etc/httpd/suse_loadmodule.conf


> <Directory /home/httpd/htdocs/ctspython>
>   AddHandler python-program .py
>   PythonHandler mod_python.publisher
> #  PythonHandler mptest
>   PythonDebug On
> </Directory>


And, since its Suse, the contents of the suse_loadmodule.conf is:

> # Automatically generated by SuSEconfig on Thu Nov 14 16:21:58 PST 2002
> #
> # PLEASE DO NOT EDIT THIS FILE!
> #
>
> LoadModule python_module /usr/lib/apache/mod_python.so
> LoadModule ssl_module         /usr/lib/apache/libssl.so

r




> Byron Ellacott wrote:
>
>>>   AddHandler python-program .py
>>>   PythonHandler mod_python.publisher
>>
>> By your reply, you think by using this it should NOT show the text ?
>
>
> Definitely not.  You're telling Apache there that .py should be 
> handled as a python-program.
>
> In $DOCUMENTROOT/foo/.htaccess, I have:
>
>     AddHandler python-program .py
>     PythonHander mod_python.publisher
>
> In $DOCUMENTROOT/foo/foo.py, I have:
>
>     import time
>     def index(req):
>         return time.asctime()
>
> See http://mlm.bpa.nu:8080/foo/foo.py and note that the source is not 
> returned, and that the return is definitely dynamically generated.
>
> Is mod_python enabled in your web server?  Perhaps you haven't 
> restarted Apache since adding those configuration directives?  Are you 
> using Apache 1.3 or 2.0?  Can you get it to do anything dynamic at all?



Rich Pinder wrote:

> Thanks for your reply here Byron.
> I am indeed using the first option you mention:
>
>> <Directory /home/httpd/htdocs/ctspython>
>>   AddHandler python-program .py
>>   PythonHandler mod_python.publisher
>>   PythonDebug On
>> </Directory>
>
>
> By your reply, you think by using this it should NOT show the text ?
> Version info:
>
>> Python 2.2 (#1, Mar 26 2002, 15:46:04)
>> [GCC 2.95.3 20010315 (SuSE)] on linux2
>
>
>> drwxr-xr-x    4 1000     513           296 Nov 15  2002 
>> kinterbasdb-3.0.2
>
>
>
> thanks for any thoughts
>
> rich
>
> Byron Ellacott wrote:
>
>> Rich Pinder wrote:
>>
>>> I'm using Apache 1.3 with Python (Kinterbas) to access a Firebird 
>>> database.
>>> The .py script resides in a directory under the document root.  If 
>>> you enter the full url to the script file, the browser returns a 
>>> textual representation of the script  (complete with all my 
>>> connection string info & password into the database !)
>>> What am I missing here ??
>>
>>
>>
>> Either you're using the Python publisher handler, in which case I'm 
>> surprised that you ever see the text of the script, or you're 
>> directly using a PythonHandler statement, in which case you can 
>> install your Python modules anywhere on the Python path.
>>
>> In an Apache config file for a host, I have:
>>
>>         <Location /budget>
>>             SetHandler mod_python
>>             Options -MultiViews
>>             PythonDebug On
>>             PythonAutoReload On
>>             PythonInterpreter budget
>>             PythonHandler bje.budgetweb
>>             PythonOption SessionDbm /usr/share/budget/session.dbm
>>         </Location>
>>
>> The "/var/www/budget" directory does not exist at all; there's 
>> nothing that a user can fetch via URL that is not generated by the 
>> bje.budgetweb module, which lives in /usr/local/python/someplace, 
>> IIRC.  In sys.path[], anyway.
>>
>> (That module then calls other modules based on patterns matched 
>> against path_info, according to a configuration block.  But that's 
>> just my preference for how to arrange things.)
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From bje at apnic.net  Thu Sep 23 12:00:53 2004
From: bje at apnic.net (Byron Ellacott)
Date: Wed Sep 22 20:59:20 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping
	it	executable)
In-Reply-To: <415218B3.9000600@usc.edu>
References: <4150B426.8020503@usc.edu>
	<4150BBE4.20902@apnic.net>	<4151C781.7070000@usc.edu>
	<415218B3.9000600@usc.edu>
Message-ID: <41522045.9070807@apnic.net>

Rich Pinder wrote:
> Last first.  Apache 1.3.  Mod Python is configured and working just 
> fine.  Database is being populated from forms. I stumbled on this 
> 'oddity' totally by accident - and really think it should be fixed !!
> I see indeed how it should work, from your URL

I took a quick gander at the docs for mod_python 2.7, and didn't spot 
anything immediately apparent to suggest it might work differently. 
Unfortunately, I don't actually have any Apache 1.3 installations around 
to play with, so the best I can say is that you might have found a bug.

(Any particular reason to stay with Apache 1.3?  There are several good 
ones, to be sure.)

> But I have no stuff configured in any .htaccess files - and sure I never 
> saw THIS in the notes that came with samples I used. (see below for ver 
> numbers / dates for the components).

A .htaccess is basically equivalent to a <Location> or <Directory> 
configuration section.  I only used it because it's a lot easier for 
quick examples than altering the main config file and restarting.

-- 
bje
From gdamjan at mail.net.mk  Thu Sep 23 04:17:19 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Wed Sep 22 21:17:22 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <1095805327.8285.12.camel@bigmac.taumu.com>
References: <20040921145326.GA10208@legolas.on.net.mk>
	<1095805327.8285.12.camel@bigmac.taumu.com>
Message-ID: <20040923011719.GB27134@legolas.on.net.mk>

> I'm probably missing something obvious here, but in the 'handle_thumb'
> and 'handle_size' class methods if the image is not cached (or is older)
> where is the method sending the image file back to the client? 
> It appears only to resize and cache the image not return it.

img.save(self.req, format=img.format)

I'm "saving" the image to the req object. mod_python's request object is
fine at emulating a file object.


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From terry.macdonald at dsl.pipex.com  Thu Sep 23 12:24:09 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Thu Sep 23 06:24:14 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <20040923011719.GB27134@legolas.on.net.mk>
References: <20040921145326.GA10208@legolas.on.net.mk>
	<1095805327.8285.12.camel@bigmac.taumu.com>
	<20040923011719.GB27134@legolas.on.net.mk>
Message-ID: <1095935049.12505.7.camel@bigmac.taumu.com>

I'm probably having one of those dumb moments (It happens often!) but I
just don't get this.

How does the request object know its supposed to be a file object and
relay the image to the browser.  When/where does the req.write get
invoked to send the image?



On Thu, 2004-09-23 at 02:17, Damjan wrote:
> > I'm probably missing something obvious here, but in the 'handle_thumb'
> > and 'handle_size' class methods if the image is not cached (or is older)
> > where is the method sending the image file back to the client? 
> > It appears only to resize and cache the image not return it.
> 
> img.save(self.req, format=img.format)
> 
> I'm "saving" the image to the req object. mod_python's request object is
> fine at emulating a file object.

From bray at sent.com  Thu Sep 23 10:34:40 2004
From: bray at sent.com (Brian Ray)
Date: Thu Sep 23 10:34:52 2004
Subject: [mod_python] mod_python + mod_ssl
In-Reply-To: <41520F2F.5050805@apnic.net>
References: <DB143345-0CD3-11D9-B9D2-000A95BF3560@sent.com>
	<41520F2F.5050805@apnic.net>
Message-ID: <B42E1670-0D6D-11D9-B9D2-000A95BF3560@sent.com>



On Sep 22, 2004, at 6:47 PM, Byron Ellacott wrote:

> Brian Ray wrote:
>> I am running mod_ssl and mod_python on separate Virtual Hosts. I 
>> would like to run them in the same location. Will this work?
>
> I don't think I understand what you're asking here.  What do you mean 
> by "in the same location?"  If you mean the same physical filespace, 
> you can probably do that by having each virtual host config include a 
> shared config for the mod_python section.

I want make sure that mod_python and ssl will run together.

In a testing environment, I really do not need ssl so I have added to 
my httpd.conf:

<Directory  /var/www>
    SetHandler python-program
    PythonHandler index
    PythonDebug On
    PythonAutoReload On
</Directory>

Works fine. All page requests are handled by the index.py in the 
directory.

I am trying to put together some instructions for the person who is 
administering a server in the live environment--where what I am working 
on will eventually end up.  I am sure I am not the only who want's to 
use ssl and mod_python.

>
> If you're using named virtual hosts, note that there is a bug in 
> mod_ssl for Apache 2.0 that can prevent POSTs from working, depending 
> on how you configure your SSL options.  It can also affect numeric 
> virtual hosts and single host setups where you alter client verify 
> requirements on a per-directory or per-location basis.
>

Oh no. I hope we can find a work-around for this bug.

In the live environment, they are actually using Webmin (1.114) to 
administer the Virtual Severs. Mod_python is not in the list of Apache 
modules supported by Webmin :( So, here I may have to do some 
hand-holding if I want to use mod_python. And I do not know mod_python 
or webmin very well yet.

On the general Edit Config File (httpd.conf) this will need to be added 
(of course after the module has been compiled):

	LoadModule python_module modules/mod_python.so

There is a place to create a New Virtual Server. The entry will 
indicate Any address to Port 443 and all the SSL certs will be 
indicated as a normal ssl installation.  There is a place to add/edit 
apache directives on a per directory basis. Here, I plan on having this 
added:

   SetHandler python-program
   PythonHandler index
   PythonDebug On
   PythonAutoReload On

Will this work? Will the index.py be able to retrieve GET and POST form 
variables  (including files) the same way as if not using SSL in this 
configuration. I would try asking webmin about this issue, however I 
fear hearing that mod_python in not a supported module.

Thanks in advance.



From rpinder at usc.edu  Thu Sep 23 08:42:18 2004
From: rpinder at usc.edu (Rich Pinder)
Date: Thu Sep 23 10:42:11 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping it
	executable)
In-Reply-To: <415218B3.9000600@usc.edu>
References: <4150B426.8020503@usc.edu> <4150BBE4.20902@apnic.net>
	<4151C781.7070000@usc.edu> <415218B3.9000600@usc.edu>
Message-ID: <4152E0CA.4070900@usc.edu>

Again, thanks for trying to help here. 
I really dont want to upgrade this machine, but this problem is daunting.
I've limited what the user that is defined in the script can do on the 
firebird database, but still this is not very comforting.
I may indeed need to upgrade though

thanks
Rich



> Byron Ellacott wrote:
>
>> Rich Pinder wrote:
>>
>>> Last first.  Apache 1.3.  Mod Python is configured and working just 
>>> fine.  Database is being populated from forms. I stumbled on this 
>>> 'oddity' totally by accident - and really think it should be fixed !!
>>> I see indeed how it should work, from your URL
>>
>>
>> I took a quick gander at the docs for mod_python 2.7, and didn't spot 
>> anything immediately apparent to suggest it might work differently. 
>> Unfortunately, I don't actually have any Apache 1.3 installations 
>> around to play with, so the best I can say is that you might have 
>> found a bug.
>>
>> (Any particular reason to stay with Apache 1.3?  There are several 
>> good ones, to be sure.)
>>
>>> But I have no stuff configured in any .htaccess files - and sure I 
>>> never saw THIS in the notes that came with samples I used. (see 
>>> below for ver numbers / dates for the components).
>>
>>
>> A .htaccess is basically equivalent to a <Location> or <Directory> 
>> configuration section.  I only used it because it's a lot easier for 
>> quick examples than altering the main config file and restarting.
>>


Rich Pinder wrote:

> Thanks Byron for replying.
> Last first.  Apache 1.3.  Mod Python is configured and working just 
> fine.  Database is being populated from forms. I stumbled on this 
> 'oddity' totally by accident - and really think it should be fixed !!
> I see indeed how it should work, from your URL
>
> But I have no stuff configured in any .htaccess files - and sure I 
> never saw THIS in the notes that came with samples I used. (see below 
> for ver numbers / dates for the components).
>
> Only stuff in my httpd.conf is:
>
>> #they python module is in here
>> Include /etc/httpd/suse_loadmodule.conf
>
>
>
>> <Directory /home/httpd/htdocs/ctspython>
>>   AddHandler python-program .py
>>   PythonHandler mod_python.publisher
>> #  PythonHandler mptest
>>   PythonDebug On
>> </Directory>
>
>
>
> And, since its Suse, the contents of the suse_loadmodule.conf is:
>
>> # Automatically generated by SuSEconfig on Thu Nov 14 16:21:58 PST 2002
>> #
>> # PLEASE DO NOT EDIT THIS FILE!
>> #
>>
>> LoadModule python_module /usr/lib/apache/mod_python.so
>> LoadModule ssl_module         /usr/lib/apache/libssl.so
>
>
> r
>
>
>
>
>> Byron Ellacott wrote:
>>
>>>>   AddHandler python-program .py
>>>>   PythonHandler mod_python.publisher
>>>
>>>
>>> By your reply, you think by using this it should NOT show the text ?
>>
>>
>>
>> Definitely not.  You're telling Apache there that .py should be 
>> handled as a python-program.
>>
>> In $DOCUMENTROOT/foo/.htaccess, I have:
>>
>>     AddHandler python-program .py
>>     PythonHander mod_python.publisher
>>
>> In $DOCUMENTROOT/foo/foo.py, I have:
>>
>>     import time
>>     def index(req):
>>         return time.asctime()
>>
>> See http://mlm.bpa.nu:8080/foo/foo.py and note that the source is not 
>> returned, and that the return is definitely dynamically generated.
>>
>> Is mod_python enabled in your web server?  Perhaps you haven't 
>> restarted Apache since adding those configuration directives?  Are 
>> you using Apache 1.3 or 2.0?  Can you get it to do anything dynamic 
>> at all?
>
>
>
>
> Rich Pinder wrote:
>
>> Thanks for your reply here Byron.
>> I am indeed using the first option you mention:
>>
>>> <Directory /home/httpd/htdocs/ctspython>
>>>   AddHandler python-program .py
>>>   PythonHandler mod_python.publisher
>>>   PythonDebug On
>>> </Directory>
>>
>>
>>
>> By your reply, you think by using this it should NOT show the text ?
>> Version info:
>>
>>> Python 2.2 (#1, Mar 26 2002, 15:46:04)
>>> [GCC 2.95.3 20010315 (SuSE)] on linux2
>>
>>
>>
>>> drwxr-xr-x    4 1000     513           296 Nov 15  2002 
>>> kinterbasdb-3.0.2
>>
>>
>>
>>
>> thanks for any thoughts
>>
>> rich
>>
>> Byron Ellacott wrote:
>>
>>> Rich Pinder wrote:
>>>
>>>> I'm using Apache 1.3 with Python (Kinterbas) to access a Firebird 
>>>> database.
>>>> The .py script resides in a directory under the document root.  If 
>>>> you enter the full url to the script file, the browser returns a 
>>>> textual representation of the script  (complete with all my 
>>>> connection string info & password into the database !)
>>>> What am I missing here ??
>>>
>>>
>>>
>>>
>>> Either you're using the Python publisher handler, in which case I'm 
>>> surprised that you ever see the text of the script, or you're 
>>> directly using a PythonHandler statement, in which case you can 
>>> install your Python modules anywhere on the Python path.
>>>
>>> In an Apache config file for a host, I have:
>>>
>>>         <Location /budget>
>>>             SetHandler mod_python
>>>             Options -MultiViews
>>>             PythonDebug On
>>>             PythonAutoReload On
>>>             PythonInterpreter budget
>>>             PythonHandler bje.budgetweb
>>>             PythonOption SessionDbm /usr/share/budget/session.dbm
>>>         </Location>
>>>
>>> The "/var/www/budget" directory does not exist at all; there's 
>>> nothing that a user can fetch via URL that is not generated by the 
>>> bje.budgetweb module, which lives in /usr/local/python/someplace, 
>>> IIRC.  In sys.path[], anyway.
>>>
>>> (That module then calls other modules based on patterns matched 
>>> against path_info, according to a configuration block.  But that's 
>>> just my preference for how to arrange things.)
>>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From cpd at transauto.com.br  Thu Sep 23 13:07:05 2004
From: cpd at transauto.com.br (CPD Transauto)
Date: Thu Sep 23 11:07:10 2004
Subject: [mod_python] Hiding textual contents of .py script (but keeping
	it	executable)
In-Reply-To: <4152E0CA.4070900@usc.edu>
References: <4150B426.8020503@usc.edu>
	<4150BBE4.20902@apnic.net>	<4151C781.7070000@usc.edu>
	<415218B3.9000600@usc.edu> <4152E0CA.4070900@usc.edu>
Message-ID: <4152E699.60006@transauto.com.br>

Rich Pinder escreveu:

> Again, thanks for trying to help here. I really dont want to upgrade 
> this machine, but this problem is daunting.
> I've limited what the user that is defined in the script can do on the 
> firebird database, but still this is not very comforting.
> I may indeed need to upgrade though
>
> thanks
> Rich
>
>
>
>> Byron Ellacott wrote:
>>
>>> Rich Pinder wrote:
>>>
>>>> Last first.  Apache 1.3.  Mod Python is configured and working just 
>>>> fine.  Database is being populated from forms. I stumbled on this 
>>>> 'oddity' totally by accident - and really think it should be fixed !!
>>>> I see indeed how it should work, from your URL
>>>
>>>
>>>
>>> I took a quick gander at the docs for mod_python 2.7, and didn't 
>>> spot anything immediately apparent to suggest it might work 
>>> differently. Unfortunately, I don't actually have any Apache 1.3 
>>> installations around to play with, so the best I can say is that you 
>>> might have found a bug.
>>>
>>> (Any particular reason to stay with Apache 1.3?  There are several 
>>> good ones, to be sure.)
>>>
>>>> But I have no stuff configured in any .htaccess files - and sure I 
>>>> never saw THIS in the notes that came with samples I used. (see 
>>>> below for ver numbers / dates for the components).
>>>
>>>
>>>
>>> A .htaccess is basically equivalent to a <Location> or <Directory> 
>>> configuration section.  I only used it because it's a lot easier for 
>>> quick examples than altering the main config file and restarting.
>>>
>
>
> Rich Pinder wrote:
>
>> Thanks Byron for replying.
>> Last first.  Apache 1.3.  Mod Python is configured and working just 
>> fine.  Database is being populated from forms. I stumbled on this 
>> 'oddity' totally by accident - and really think it should be fixed !!
>> I see indeed how it should work, from your URL
>>
>> But I have no stuff configured in any .htaccess files - and sure I 
>> never saw THIS in the notes that came with samples I used. (see below 
>> for ver numbers / dates for the components).
>>
>> Only stuff in my httpd.conf is:
>>
>>> #they python module is in here
>>> Include /etc/httpd/suse_loadmodule.conf
>>
>>
>>
>>
>>> <Directory /home/httpd/htdocs/ctspython>
>>>   AddHandler python-program .py
>>>   PythonHandler mod_python.publisher
>>> #  PythonHandler mptest
>>>   PythonDebug On
>>> </Directory>
>>
>>
>>
>>
>> And, since its Suse, the contents of the suse_loadmodule.conf is:
>>
>>> # Automatically generated by SuSEconfig on Thu Nov 14 16:21:58 PST 2002
>>> #
>>> # PLEASE DO NOT EDIT THIS FILE!
>>> #
>>>
>>> LoadModule python_module /usr/lib/apache/mod_python.so
>>> LoadModule ssl_module         /usr/lib/apache/libssl.so
>>
>>
>>
>> r
>>
>>
>>
>>
>>> Byron Ellacott wrote:
>>>
>>>>>   AddHandler python-program .py
>>>>>   PythonHandler mod_python.publisher
>>>>
>>>>
>>>>
>>>> By your reply, you think by using this it should NOT show the text ?
>>>
>>>
>>>
>>>
>>> Definitely not.  You're telling Apache there that .py should be 
>>> handled as a python-program.
>>>
>>> In $DOCUMENTROOT/foo/.htaccess, I have:
>>>
>>>     AddHandler python-program .py
>>>     PythonHander mod_python.publisher
>>>
>>> In $DOCUMENTROOT/foo/foo.py, I have:
>>>
>>>     import time
>>>     def index(req):
>>>         return time.asctime()
>>>
>>> See http://mlm.bpa.nu:8080/foo/foo.py and note that the source is 
>>> not returned, and that the return is definitely dynamically generated.
>>>
>>> Is mod_python enabled in your web server?  Perhaps you haven't 
>>> restarted Apache since adding those configuration directives?  Are 
>>> you using Apache 1.3 or 2.0?  Can you get it to do anything dynamic 
>>> at all?
>>
>>
>>
>>
>>
>> Rich Pinder wrote:
>>
>>> Thanks for your reply here Byron.
>>> I am indeed using the first option you mention:
>>>
>>>> <Directory /home/httpd/htdocs/ctspython>
>>>>   AddHandler python-program .py
>>>>   PythonHandler mod_python.publisher
>>>>   PythonDebug On
>>>> </Directory>
>>>
>>>
>>>
>>>
>>> By your reply, you think by using this it should NOT show the text ?
>>> Version info:
>>>
>>>> Python 2.2 (#1, Mar 26 2002, 15:46:04)
>>>> [GCC 2.95.3 20010315 (SuSE)] on linux2
>>>
>>>
>>>
>>>
>>>> drwxr-xr-x    4 1000     513           296 Nov 15  2002 
>>>> kinterbasdb-3.0.2
>>>
>>>
>>>
>>>
>>>
>>> thanks for any thoughts
>>>
>>> rich
>>>
>>> Byron Ellacott wrote:
>>>
>>>> Rich Pinder wrote:
>>>>
>>>>> I'm using Apache 1.3 with Python (Kinterbas) to access a Firebird 
>>>>> database.
>>>>> The .py script resides in a directory under the document root.  If 
>>>>> you enter the full url to the script file, the browser returns a 
>>>>> textual representation of the script  (complete with all my 
>>>>> connection string info & password into the database !)
>>>>> What am I missing here ??
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> Either you're using the Python publisher handler, in which case I'm 
>>>> surprised that you ever see the text of the script, or you're 
>>>> directly using a PythonHandler statement, in which case you can 
>>>> install your Python modules anywhere on the Python path.
>>>>
>>>> In an Apache config file for a host, I have:
>>>>
>>>>         <Location /budget>
>>>>             SetHandler mod_python
>>>>             Options -MultiViews
>>>>             PythonDebug On
>>>>             PythonAutoReload On
>>>>             PythonInterpreter budget
>>>>             PythonHandler bje.budgetweb
>>>>             PythonOption SessionDbm /usr/share/budget/session.dbm
>>>>         </Location>
>>>>
>>>> The "/var/www/budget" directory does not exist at all; there's 
>>>> nothing that a user can fetch via URL that is not generated by the 
>>>> bje.budgetweb module, which lives in /usr/local/python/someplace, 
>>>> IIRC.  In sys.path[], anyway.
>>>>
>>>> (That module then calls other modules based on patterns matched 
>>>> against path_info, according to a configuration block.  But that's 
>>>> just my preference for how to arrange things.)
>>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Juan Pablo J. Pereira Jr.
Depto. Tecnologia da Informa??o
Transauto Transp. Espec. de Autom?veis S/A.
Fone:    (011) 4366-3443
Fax:     (011) 4366-3468
http://www.transauto.com.br

From gdamjan at mail.net.mk  Thu Sep 23 20:31:24 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Thu Sep 23 13:31:31 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <1095935049.12505.7.camel@bigmac.taumu.com>
References: <20040921145326.GA10208@legolas.on.net.mk>
	<1095805327.8285.12.camel@bigmac.taumu.com>
	<20040923011719.GB27134@legolas.on.net.mk>
	<1095935049.12505.7.camel@bigmac.taumu.com>
Message-ID: <20040923173124.GC28689@legolas.on.net.mk>

>>> I'm probably missing something obvious here, but in the 'handle_thumb'
>>> and 'handle_size' class methods if the image is not cached (or is older)
>>> where is the method sending the image file back to the client? 
>>> It appears only to resize and cache the image not return it.
>> 
>> img.save(self.req, format=img.format)
>> 
>> I'm "saving" the image to the req object. mod_python's request object is
>> fine at emulating a file object.
>
> I'm probably having one of those dumb moments (It happens often!) but I
> just don't get this.

:)
 
> How does the request object know its supposed to be a file object and
> relay the image to the browser.  

The request object is "file object" compatible, that means that any
python function that works with file objects can work with the request
object too. Like this:

def fill_file_with_zeros(something, howmany):
	buff = '\x0' * howmany
	something.write(buff)
	return

Now I can call that function like this:

fp = file('/tmp/zeroed')
fill_file_with_zeros(fp, 100)

or in mod_pytnon like this:

fill_file_with_zeros(req, 100)

The function doesn't care if "something" is really a file. Its enough if
"something" has the write method.
So in the second case, the function fill_file_with_zeros calls "req"s
write method... what happens is that the client receives a file filled with
NULLs (well, that's not very usefull ;) ).

> When/where does the req.write get invoked to send the image?

Inside img.save(...), img.save is just like the above fill_file_with_zeros,
it doesn't care if you give it a real file, or a file like object (like
req)... as long as it supports the write method.

Btw, I could've done it like this:

	buff = StringIO.StringIO()
	img.save(buff,...)
	req.write(buff.getvalue())

But that would only use twice the memory for no reason.

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From seant at superchannel.org  Thu Sep 23 22:27:27 2004
From: seant at superchannel.org (Sean Treadway)
Date: Thu Sep 23 15:27:36 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <20040923173124.GC28689@legolas.on.net.mk>
Message-ID: <20040923192732.0612126289E@pfepc.post.tele.dk>

I have written a similar handler, and found that some PIL image formats
needed as seekable file.  It was a long time ago, so PIL may have lifted
that requirement.

-Sean 

> -----Original Message-----
> From: mod_python-bounces@modpython.org [mailto:mod_python-
> bounces@modpython.org] On Behalf Of Damjan
> Sent: Thursday, September 23, 2004 7:31 PM
> To: mod_python user mailing list
> Subject: Re: [mod_python] Image handling handler
> 
> >>> I'm probably missing something obvious here, but in the 'handle_thumb'
> >>> and 'handle_size' class methods if the image is not cached (or is
> older)
> >>> where is the method sending the image file back to the client?
> >>> It appears only to resize and cache the image not return it.
> >>
> >> img.save(self.req, format=img.format)
> >>
> >> I'm "saving" the image to the req object. mod_python's request object
> is
> >> fine at emulating a file object.
> >
> > I'm probably having one of those dumb moments (It happens often!) but I
> > just don't get this.
> 
> :)
> 
> > How does the request object know its supposed to be a file object and
> > relay the image to the browser.
> 
> The request object is "file object" compatible, that means that any
> python function that works with file objects can work with the request
> object too. Like this:
> 
> def fill_file_with_zeros(something, howmany):
> 	buff = '\x0' * howmany
> 	something.write(buff)
> 	return
> 
> Now I can call that function like this:
> 
> fp = file('/tmp/zeroed')
> fill_file_with_zeros(fp, 100)
> 
> or in mod_pytnon like this:
> 
> fill_file_with_zeros(req, 100)
> 
> The function doesn't care if "something" is really a file. Its enough if
> "something" has the write method.
> So in the second case, the function fill_file_with_zeros calls "req"s
> write method... what happens is that the client receives a file filled
> with
> NULLs (well, that's not very usefull ;) ).
> 
> > When/where does the req.write get invoked to send the image?
> 
> Inside img.save(...), img.save is just like the above
> fill_file_with_zeros,
> it doesn't care if you give it a real file, or a file like object (like
> req)... as long as it supports the write method.
> 
> Btw, I could've done it like this:
> 
> 	buff = StringIO.StringIO()
> 	img.save(buff,...)
> 	req.write(buff.getvalue())
> 
> But that would only use twice the memory for no reason.
> 
> --
> damjan | ??????
> This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Fri Sep 24 00:37:14 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep 24 01:37:16 2004
Subject: [mod_python] Mac OS X / Apache 2.0 / mod_python 3.1.3 / Python 2.3.
In-Reply-To: <1091677032.58339@dscpl.com.au>
Message-ID: <1096004233.25417@dscpl.com.au>

A while back, I posted as to how I managed to get standard Apache 1.3 and
Python 2.3 as supplied with the Mac OS X (10.3.5) operating system, working
with the older mod_python 2.7.10. Specifically, a hack was required because
the Python framework library as supplied with the Mac was appearing to
already be initialised when mod_python was initialised, even though it hadn't.
The original email and the hack made is attached below.

Anyway, I have now installed Apache 2.0.51 and mod_python 3.1.3 and have
run up against the exact same problem. Remembering, this is with the
version of Python that comes with the operating system, ie., Python 2.3.
I even rebuilt my box from scratch recently so it is a relatively fresh install
of Mac OS X.

My question is whether anyone running Apache 2.0 and mod_python 3.1.3
on Mac OS X, has done so by using the version of Python that comes with
the operating system? The various posts I have seen talk about having
downloaded the more recent Python 2.3.4 and compiling it from scratch.
Ie., not using that supplied with the operating system.

If this is the case, and everyone has been building a new version of Python,
it suggests that the problem I am seeing is generic to Python 2.3 that comes
with the Mac and applies to any version of mod_python. Alternatively, it
comes about because of underlying problems with how the loadable object
for mod_python is being created on the Mac.

On Aug 04 21:37, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 / mod_python 2.7.10.
>
> On Aug 04 15:26, Justin Ryan <jryan@qutang.net> wrote:
> >
> > Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 / mod_python 2.7.10.
> >
> > Be careful when playing with the file/directory/link/whateva that is 
> > /System/Library/Frameworks/Python.Framework.  I ran into some wierdness 
> > trying to change this into a symlink and move it around (i.e. change it 
> > back and forth from pointing to Apple's python and my own).
> > 
> > Also, take care when using the 'python' command after installing your 
> > own framework build.  It's kind of a pain to get a framework build to 
> > stick python, pythonw, etc.. in /usr/bin - all of my stuff was in 
> > /usr/local/bin, even though I passed --prefix=/usr to the configure 
> > script.
> 
> I would agree and why I didn't want to go down the path of having to replace
> the standard version of Python on MacOSX with a newer version to get mod_python
> to work. Similarly, I didn't want to be replacing their version of Apache.
> 
> Anyway, listed below is the changes I had to make to get it to build and work
> on MacOSX (10.3.3) with the standard Python (2.3) and Apache (1.3) that come
> with the operating system.
> 
> First off, after running configure, change "src/Makefile" and replace:
> 
>   /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/config/libpython2.3.a
> 
> with:
> 
>   -framework Python
> 
> in LIBS variable.
> 
> Second, in the same makefile, change CFLAGS and add in:
> 
>   -DEAPI
> 
> as a compiler option.
> 
> This will allow mod_python to build, but the result will crash.
> 
> Final step is to modify src/mod_python.c. The diff is below. There are
> more comments after that diff as to why the original code is wrong anyway.
> 
> 
> *** mod_python.c.dist   Tue May 29 06:00:41 2001
> --- mod_python.c        Thu Aug  5 13:21:22 2004
> ***************
> *** 260,265 ****
> --- 260,268 ----
>   
>       char buff[255];
>   
> +     /* fudge for Mac OS X with Apache 1.3 where Py_IsInitialized() broke */
> +     static int initialized = 0;
> + 
>       /* pool given to us in ChildInit. We use it for 
>          server.register_cleanup() */
>       pool *child_init_pool = NULL;
> ***************
> *** 272,279 ****
>       ap_add_version_component(buff);
>   
>       /* initialize global Python interpreter if necessary */
> !     if (! Py_IsInitialized()) 
>       {
>   
>         /* initialze the interpreter */
>         Py_Initialize();
> --- 275,283 ----
>       ap_add_version_component(buff);
>   
>       /* initialize global Python interpreter if necessary */
> !     if (initialized == 0 || ! Py_IsInitialized())
>       {
> +         initialized = 1;
>   
>         /* initialze the interpreter */
>         Py_Initialize();
> 
> 
> The problem on MacOSX is that Py_IsInitialized() is returning true on the
> first time it is called even though Python hadn't up until that point actually
> been initialised. This means initialisation is skipped and the first time
> something tries to use Python methods later, it crashes.
> 
> To my mind the use of Py_IsInitialized() is partly bogus anyway. This is
> because if someone did come up with a different apache module which
> also tried to use Python and it got loaded first and called Py_Initialize(),
> it would mean when mod_python got loaded it would skip initialisation
> and wouldn't initialise as a result the "interpreters" dictionary nor would
> it necessarily initialise threading if the other module didn't do it.
> 
> Thus, even though people might reckon that this patch may only be
> relevant to the MacOSX problem I have, I would disagree, because I would
> say the code is wrong anyway.
> 
> As a demonstration, you might modify the code and add an extra call to
> Py_Initialize() just prior to the "if" statement where Py_IsInitialized() is
> called as if it was done somewhere else. Do this and mod_python should
> by observation break since "interpreters" will never get set as described above.
> 
> --
> Graham Dumpleton (grahamd@dscpl.com.au)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

--
Graham Dumpleton (grahamd@dscpl.com.au)
From grahamd at dscpl.com.au  Fri Sep 24 00:52:45 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep 24 01:52:47 2004
Subject: [mod_python] Modification of req.filename.
Message-ID: <1096005165.27108@dscpl.com.au>

In the mod_python 2.7.X documentation it explicitly says that the "filename"
member of a request object is "read only". In the current 3.X documentation
it has dropped the "read only" designation.

Even with 2.7.10 I was modifying the "filename" member and came to no harm.
Does anyone know of any good reasons for why it cannot be modified? Is it
always safe to do so regardless of which version of mod_python is being used?

--
Graham Dumpleton (grahamd@dscpl.com.au)
From raine001 at tc.umn.edu  Fri Sep 24 07:13:16 2004
From: raine001 at tc.umn.edu (John Raines)
Date: Fri Sep 24 07:13:26 2004
Subject: [mod_python] Mac OS X / Apache 2.0 / mod_python 3.1.3 / Python
	2.3.
In-Reply-To: <1096004233.25417@dscpl.com.au>
References: <1096004233.25417@dscpl.com.au>
Message-ID: <BBA486CA-0E1A-11D9-9AE4-0003938C739C@tc.umn.edu>

There's a Macpython IDE that would run a lot of python code and  
necessarily initialize some things, I think. Is that really the issue  
or are you dealing with python itself from the command line? I'm still  
trying to get things working myself and I did download a new version of  
python although I think I'm one version behind you on both Apache and  
python.
On Sep 24, 2004, at 12:37 AM, Graham Dumpleton wrote:

> A while back, I posted as to how I managed to get standard Apache 1.3  
> and
> Python 2.3 as supplied with the Mac OS X (10.3.5) operating system,  
> working
> with the older mod_python 2.7.10. Specifically, a hack was required  
> because
> the Python framework library as supplied with the Mac was appearing to
> already be initialised when mod_python was initialised, even though it  
> hadn't.
> The original email and the hack made is attached below.
>
> Anyway, I have now installed Apache 2.0.51 and mod_python 3.1.3 and  
> have
> run up against the exact same problem. Remembering, this is with the
> version of Python that comes with the operating system, ie., Python  
> 2.3.
> I even rebuilt my box from scratch recently so it is a relatively  
> fresh install
> of Mac OS X.
>
> My question is whether anyone running Apache 2.0 and mod_python 3.1.3
> on Mac OS X, has done so by using the version of Python that comes with
> the operating system? The various posts I have seen talk about having
> downloaded the more recent Python 2.3.4 and compiling it from scratch.
> Ie., not using that supplied with the operating system.
>
> If this is the case, and everyone has been building a new version of  
> Python,
> it suggests that the problem I am seeing is generic to Python 2.3 that  
> comes
> with the Mac and applies to any version of mod_python. Alternatively,  
> it
> comes about because of underlying problems with how the loadable object
> for mod_python is being created on the Mac.
>
> On Aug 04 21:37, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>
>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>> mod_python 2.7.10.
>>
>> On Aug 04 15:26, Justin Ryan <jryan@qutang.net> wrote:
>>>
>>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>>> mod_python 2.7.10.
>>>
>>> Be careful when playing with the file/directory/link/whateva that is
>>> /System/Library/Frameworks/Python.Framework.  I ran into some  
>>> wierdness
>>> trying to change this into a symlink and move it around (i.e. change  
>>> it
>>> back and forth from pointing to Apple's python and my own).
>>>
>>> Also, take care when using the 'python' command after installing your
>>> own framework build.  It's kind of a pain to get a framework build to
>>> stick python, pythonw, etc.. in /usr/bin - all of my stuff was in
>>> /usr/local/bin, even though I passed --prefix=/usr to the configure
>>> script.
>>
>> I would agree and why I didn't want to go down the path of having to  
>> replace
>> the standard version of Python on MacOSX with a newer version to get  
>> mod_python
>> to work. Similarly, I didn't want to be replacing their version of  
>> Apache.
>>
>> Anyway, listed below is the changes I had to make to get it to build  
>> and work
>> on MacOSX (10.3.3) with the standard Python (2.3) and Apache (1.3)  
>> that come
>> with the operating system.
>>
>> First off, after running configure, change "src/Makefile" and replace:
>>
>>    
>> /System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/config/libpython2.3.a
>>
>> with:
>>
>>   -framework Python
>>
>> in LIBS variable.
>>
>> Second, in the same makefile, change CFLAGS and add in:
>>
>>   -DEAPI
>>
>> as a compiler option.
>>
>> This will allow mod_python to build, but the result will crash.
>>
>> Final step is to modify src/mod_python.c. The diff is below. There are
>> more comments after that diff as to why the original code is wrong  
>> anyway.
>>
>>
>> *** mod_python.c.dist   Tue May 29 06:00:41 2001
>> --- mod_python.c        Thu Aug  5 13:21:22 2004
>> ***************
>> *** 260,265 ****
>> --- 260,268 ----
>>
>>       char buff[255];
>>
>> +     /* fudge for Mac OS X with Apache 1.3 where Py_IsInitialized()  
>> broke */
>> +     static int initialized = 0;
>> +
>>       /* pool given to us in ChildInit. We use it for
>>          server.register_cleanup() */
>>       pool *child_init_pool = NULL;
>> ***************
>> *** 272,279 ****
>>       ap_add_version_component(buff);
>>
>>       /* initialize global Python interpreter if necessary */
>> !     if (! Py_IsInitialized())
>>       {
>>
>>         /* initialze the interpreter */
>>         Py_Initialize();
>> --- 275,283 ----
>>       ap_add_version_component(buff);
>>
>>       /* initialize global Python interpreter if necessary */
>> !     if (initialized == 0 || ! Py_IsInitialized())
>>       {
>> +         initialized = 1;
>>
>>         /* initialze the interpreter */
>>         Py_Initialize();
>>
>>
>> The problem on MacOSX is that Py_IsInitialized() is returning true on  
>> the
>> first time it is called even though Python hadn't up until that point  
>> actually
>> been initialised. This means initialisation is skipped and the first  
>> time
>> something tries to use Python methods later, it crashes.
>>
>> To my mind the use of Py_IsInitialized() is partly bogus anyway. This  
>> is
>> because if someone did come up with a different apache module which
>> also tried to use Python and it got loaded first and called  
>> Py_Initialize(),
>> it would mean when mod_python got loaded it would skip initialisation
>> and wouldn't initialise as a result the "interpreters" dictionary nor  
>> would
>> it necessarily initialise threading if the other module didn't do it.
>>
>> Thus, even though people might reckon that this patch may only be
>> relevant to the MacOSX problem I have, I would disagree, because I  
>> would
>> say the code is wrong anyway.
>>
>> As a demonstration, you might modify the code and add an extra call to
>> Py_Initialize() just prior to the "if" statement where  
>> Py_IsInitialized() is
>> called as if it was done somewhere else. Do this and mod_python should
>> by observation break since "interpreters" will never get set as  
>> described above.
>>
>> --
>> Graham Dumpleton (grahamd@dscpl.com.au)
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
> --
> Graham Dumpleton (grahamd@dscpl.com.au)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Fri Sep 24 22:28:14 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Sep 24 07:28:20 2004
Subject: [mod_python] Mac OS X / Apache 2.0 / mod_python 3.1.3 / Python
	2.3.
In-Reply-To: <BBA486CA-0E1A-11D9-9AE4-0003938C739C@tc.umn.edu>
References: <1096004233.25417@dscpl.com.au>
	<BBA486CA-0E1A-11D9-9AE4-0003938C739C@tc.umn.edu>
Message-ID: <D2D3276C-0E1C-11D9-8C95-000393DCF16E@dscpl.com.au>

The problem I was having with both Apache 1.3/2.0 and corresponding  
mod_python
for those versions loaded, was that as soon as Apache was started, all  
the forked
processes would crash.

[Fri Sep 24 15:06:01 2004] [notice] SIGHUP received.  Attempting to  
restart
[Fri Sep 24 15:06:02 2004] [notice] Apache/2.0.51 (Unix) configured --  
resuming normal operations
[Fri Sep 24 15:06:10 2004] [notice] child pid 15196 exit signal Bus  
error (10)
[Fri Sep 24 15:06:10 2004] [notice] child pid 15194 exit signal Bus  
error (10)
[Fri Sep 24 15:06:10 2004] [notice] child pid 15192 exit signal Bus  
error (10)
[Fri Sep 24 15:06:10 2004] [notice] child pid 15190 exit signal Bus  
error (10)
[Fri Sep 24 15:06:10 2004] [notice] child pid 15188 exit signal Bus  
error (10)

Make the mod_python.c file fix I described and it all works fine.

Thus, has nothing to do with command line execution of Python.

On 24/09/2004, at 9:13 PM, John Raines wrote:

> There's a Macpython IDE that would run a lot of python code and  
> necessarily initialize some things, I think. Is that really the issue  
> or are you dealing with python itself from the command line? I'm still  
> trying to get things working myself and I did download a new version  
> of python although I think I'm one version behind you on both Apache  
> and python.
> On Sep 24, 2004, at 12:37 AM, Graham Dumpleton wrote:
>
>> A while back, I posted as to how I managed to get standard Apache 1.3  
>> and
>> Python 2.3 as supplied with the Mac OS X (10.3.5) operating system,  
>> working
>> with the older mod_python 2.7.10. Specifically, a hack was required  
>> because
>> the Python framework library as supplied with the Mac was appearing to
>> already be initialised when mod_python was initialised, even though  
>> it hadn't.
>> The original email and the hack made is attached below.
>>
>> Anyway, I have now installed Apache 2.0.51 and mod_python 3.1.3 and  
>> have
>> run up against the exact same problem. Remembering, this is with the
>> version of Python that comes with the operating system, ie., Python  
>> 2.3.
>> I even rebuilt my box from scratch recently so it is a relatively  
>> fresh install
>> of Mac OS X.
>>
>> My question is whether anyone running Apache 2.0 and mod_python 3.1.3
>> on Mac OS X, has done so by using the version of Python that comes  
>> with
>> the operating system? The various posts I have seen talk about having
>> downloaded the more recent Python 2.3.4 and compiling it from scratch.
>> Ie., not using that supplied with the operating system.
>>
>> If this is the case, and everyone has been building a new version of  
>> Python,
>> it suggests that the problem I am seeing is generic to Python 2.3  
>> that comes
>> with the Mac and applies to any version of mod_python. Alternatively,  
>> it
>> comes about because of underlying problems with how the loadable  
>> object
>> for mod_python is being created on the Mac.
>>
>> On Aug 04 21:37, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>>
>>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>>> mod_python 2.7.10.
>>>
>>> On Aug 04 15:26, Justin Ryan <jryan@qutang.net> wrote:
>>>>
>>>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>>>> mod_python 2.7.10.
>>>>
>>>> Be careful when playing with the file/directory/link/whateva that is
>>>> /System/Library/Frameworks/Python.Framework.  I ran into some  
>>>> wierdness
>>>> trying to change this into a symlink and move it around (i.e.  
>>>> change it
>>>> back and forth from pointing to Apple's python and my own).
>>>>
>>>> Also, take care when using the 'python' command after installing  
>>>> your
>>>> own framework build.  It's kind of a pain to get a framework build  
>>>> to
>>>> stick python, pythonw, etc.. in /usr/bin - all of my stuff was in
>>>> /usr/local/bin, even though I passed --prefix=/usr to the configure
>>>> script.
>>>
>>> I would agree and why I didn't want to go down the path of having to  
>>> replace
>>> the standard version of Python on MacOSX with a newer version to get  
>>> mod_python
>>> to work. Similarly, I didn't want to be replacing their version of  
>>> Apache.
>>>
>>> Anyway, listed below is the changes I had to make to get it to build  
>>> and work
>>> on MacOSX (10.3.3) with the standard Python (2.3) and Apache (1.3)  
>>> that come
>>> with the operating system.
>>>
>>> First off, after running configure, change "src/Makefile" and  
>>> replace:
>>>
>>>    
>>> /System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>>> python2.3/config/libpython2.3.a
>>>
>>> with:
>>>
>>>   -framework Python
>>>
>>> in LIBS variable.
>>>
>>> Second, in the same makefile, change CFLAGS and add in:
>>>
>>>   -DEAPI
>>>
>>> as a compiler option.
>>>
>>> This will allow mod_python to build, but the result will crash.
>>>
>>> Final step is to modify src/mod_python.c. The diff is below. There  
>>> are
>>> more comments after that diff as to why the original code is wrong  
>>> anyway.
>>>
>>>
>>> *** mod_python.c.dist   Tue May 29 06:00:41 2001
>>> --- mod_python.c        Thu Aug  5 13:21:22 2004
>>> ***************
>>> *** 260,265 ****
>>> --- 260,268 ----
>>>
>>>       char buff[255];
>>>
>>> +     /* fudge for Mac OS X with Apache 1.3 where Py_IsInitialized()  
>>> broke */
>>> +     static int initialized = 0;
>>> +
>>>       /* pool given to us in ChildInit. We use it for
>>>          server.register_cleanup() */
>>>       pool *child_init_pool = NULL;
>>> ***************
>>> *** 272,279 ****
>>>       ap_add_version_component(buff);
>>>
>>>       /* initialize global Python interpreter if necessary */
>>> !     if (! Py_IsInitialized())
>>>       {
>>>
>>>         /* initialze the interpreter */
>>>         Py_Initialize();
>>> --- 275,283 ----
>>>       ap_add_version_component(buff);
>>>
>>>       /* initialize global Python interpreter if necessary */
>>> !     if (initialized == 0 || ! Py_IsInitialized())
>>>       {
>>> +         initialized = 1;
>>>
>>>         /* initialze the interpreter */
>>>         Py_Initialize();
>>>
>>>
>>> The problem on MacOSX is that Py_IsInitialized() is returning true  
>>> on the
>>> first time it is called even though Python hadn't up until that  
>>> point actually
>>> been initialised. This means initialisation is skipped and the first  
>>> time
>>> something tries to use Python methods later, it crashes.
>>>
>>> To my mind the use of Py_IsInitialized() is partly bogus anyway.  
>>> This is
>>> because if someone did come up with a different apache module which
>>> also tried to use Python and it got loaded first and called  
>>> Py_Initialize(),
>>> it would mean when mod_python got loaded it would skip initialisation
>>> and wouldn't initialise as a result the "interpreters" dictionary  
>>> nor would
>>> it necessarily initialise threading if the other module didn't do it.
>>>
>>> Thus, even though people might reckon that this patch may only be
>>> relevant to the MacOSX problem I have, I would disagree, because I  
>>> would
>>> say the code is wrong anyway.
>>>
>>> As a demonstration, you might modify the code and add an extra call  
>>> to
>>> Py_Initialize() just prior to the "if" statement where  
>>> Py_IsInitialized() is
>>> called as if it was done somewhere else. Do this and mod_python  
>>> should
>>> by observation break since "interpreters" will never get set as  
>>> described above.
>>>
>>> --
>>> Graham Dumpleton (grahamd@dscpl.com.au)
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>
>> --
>> Graham Dumpleton (grahamd@dscpl.com.au)
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From terry.macdonald at dsl.pipex.com  Fri Sep 24 14:17:16 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Fri Sep 24 08:17:19 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <20040923173124.GC28689@legolas.on.net.mk>
References: <20040921145326.GA10208@legolas.on.net.mk>
	<1095805327.8285.12.camel@bigmac.taumu.com>
	<20040923011719.GB27134@legolas.on.net.mk>
	<1095935049.12505.7.camel@bigmac.taumu.com>
	<20040923173124.GC28689@legolas.on.net.mk>
Message-ID: <1096028236.21026.3.camel@bigmac.taumu.com>

Thanks for that.

My problem was that I was unaware that the img.save method internally
called a given objects write method.  Is this documented anywhere?

Is it only the write method that is required by an object to be a valid
file object for the img.save method? 

On Thu, 2004-09-23 at 18:31, Damjan wrote:
> >>> I'm probably missing something obvious here, but in the 'handle_thumb'
> >>> and 'handle_size' class methods if the image is not cached (or is older)
> >>> where is the method sending the image file back to the client? 
> >>> It appears only to resize and cache the image not return it.
> >> 
> >> img.save(self.req, format=img.format)
> >> 
> >> I'm "saving" the image to the req object. mod_python's request object is
> >> fine at emulating a file object.
> >
> > I'm probably having one of those dumb moments (It happens often!) but I
> > just don't get this.
> 
> :)
>  
> > How does the request object know its supposed to be a file object and
> > relay the image to the browser.  
> 
> The request object is "file object" compatible, that means that any
> python function that works with file objects can work with the request
> object too. Like this:
> 
> def fill_file_with_zeros(something, howmany):
> 	buff = '\x0' * howmany
> 	something.write(buff)
> 	return
> 
> Now I can call that function like this:
> 
> fp = file('/tmp/zeroed')
> fill_file_with_zeros(fp, 100)
> 
> or in mod_pytnon like this:
> 
> fill_file_with_zeros(req, 100)
> 
> The function doesn't care if "something" is really a file. Its enough if
> "something" has the write method.
> So in the second case, the function fill_file_with_zeros calls "req"s
> write method... what happens is that the client receives a file filled with
> NULLs (well, that's not very usefull ;) ).
> 
> > When/where does the req.write get invoked to send the image?
> 
> Inside img.save(...), img.save is just like the above fill_file_with_zeros,
> it doesn't care if you give it a real file, or a file like object (like
> req)... as long as it supports the write method.
> 
> Btw, I could've done it like this:
> 
> 	buff = StringIO.StringIO()
> 	img.save(buff,...)
> 	req.write(buff.getvalue())
> 
> But that would only use twice the memory for no reason.
-- 
Terry
Registered Linux User # 311806
www.taumu.com


From itodd at itodd.org  Fri Sep 24 11:09:09 2004
From: itodd at itodd.org (Todd Boland)
Date: Fri Sep 24 10:09:15 2004
Subject: [mod_python] Mac OS X / Apache 2.0 / mod_python 3.1.3 / Python
	2.3.
In-Reply-To: <1096004233.25417@dscpl.com.au>
References: <1096004233.25417@dscpl.com.au>
Message-ID: <4DD8F0AE-0E33-11D9-BA26-000A95CCEA34@itodd.org>

I did not attempt to use the Python which came with OS X. I built my  
own without any problems. just prefix with /usr/local and you are all  
set. the mac version will be left alone and you'll have a brand new  
python in /usr/local. If you need step by step instructions, let me  
know, I'd be glad to help.

Todd

On Sep 24, 2004, at 1:37 AM, Graham Dumpleton wrote:

> A while back, I posted as to how I managed to get standard Apache 1.3  
> and
> Python 2.3 as supplied with the Mac OS X (10.3.5) operating system,  
> working
> with the older mod_python 2.7.10. Specifically, a hack was required  
> because
> the Python framework library as supplied with the Mac was appearing to
> already be initialised when mod_python was initialised, even though it  
> hadn't.
> The original email and the hack made is attached below.
>
> Anyway, I have now installed Apache 2.0.51 and mod_python 3.1.3 and  
> have
> run up against the exact same problem. Remembering, this is with the
> version of Python that comes with the operating system, ie., Python  
> 2.3.
> I even rebuilt my box from scratch recently so it is a relatively  
> fresh install
> of Mac OS X.
>
> My question is whether anyone running Apache 2.0 and mod_python 3.1.3
> on Mac OS X, has done so by using the version of Python that comes with
> the operating system? The various posts I have seen talk about having
> downloaded the more recent Python 2.3.4 and compiling it from scratch.
> Ie., not using that supplied with the operating system.
>
> If this is the case, and everyone has been building a new version of  
> Python,
> it suggests that the problem I am seeing is generic to Python 2.3 that  
> comes
> with the Mac and applies to any version of mod_python. Alternatively,  
> it
> comes about because of underlying problems with how the loadable object
> for mod_python is being created on the Mac.
>
> On Aug 04 21:37, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>
>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>> mod_python 2.7.10.
>>
>> On Aug 04 15:26, Justin Ryan <jryan@qutang.net> wrote:
>>>
>>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>>> mod_python 2.7.10.
>>>
>>> Be careful when playing with the file/directory/link/whateva that is
>>> /System/Library/Frameworks/Python.Framework.  I ran into some  
>>> wierdness
>>> trying to change this into a symlink and move it around (i.e. change  
>>> it
>>> back and forth from pointing to Apple's python and my own).
>>>
>>> Also, take care when using the 'python' command after installing your
>>> own framework build.  It's kind of a pain to get a framework build to
>>> stick python, pythonw, etc.. in /usr/bin - all of my stuff was in
>>> /usr/local/bin, even though I passed --prefix=/usr to the configure
>>> script.
>>
>> I would agree and why I didn't want to go down the path of having to  
>> replace
>> the standard version of Python on MacOSX with a newer version to get  
>> mod_python
>> to work. Similarly, I didn't want to be replacing their version of  
>> Apache.
>>
>> Anyway, listed below is the changes I had to make to get it to build  
>> and work
>> on MacOSX (10.3.3) with the standard Python (2.3) and Apache (1.3)  
>> that come
>> with the operating system.
>>
>> First off, after running configure, change "src/Makefile" and replace:
>>
>>    
>> /System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>> python2.3/config/libpython2.3.a
>>
>> with:
>>
>>   -framework Python
>>
>> in LIBS variable.
>>
>> Second, in the same makefile, change CFLAGS and add in:
>>
>>   -DEAPI
>>
>> as a compiler option.
>>
>> This will allow mod_python to build, but the result will crash.
>>
>> Final step is to modify src/mod_python.c. The diff is below. There are
>> more comments after that diff as to why the original code is wrong  
>> anyway.
>>
>>
>> *** mod_python.c.dist   Tue May 29 06:00:41 2001
>> --- mod_python.c        Thu Aug  5 13:21:22 2004
>> ***************
>> *** 260,265 ****
>> --- 260,268 ----
>>
>>       char buff[255];
>>
>> +     /* fudge for Mac OS X with Apache 1.3 where Py_IsInitialized()  
>> broke */
>> +     static int initialized = 0;
>> +
>>       /* pool given to us in ChildInit. We use it for
>>          server.register_cleanup() */
>>       pool *child_init_pool = NULL;
>> ***************
>> *** 272,279 ****
>>       ap_add_version_component(buff);
>>
>>       /* initialize global Python interpreter if necessary */
>> !     if (! Py_IsInitialized())
>>       {
>>
>>         /* initialze the interpreter */
>>         Py_Initialize();
>> --- 275,283 ----
>>       ap_add_version_component(buff);
>>
>>       /* initialize global Python interpreter if necessary */
>> !     if (initialized == 0 || ! Py_IsInitialized())
>>       {
>> +         initialized = 1;
>>
>>         /* initialze the interpreter */
>>         Py_Initialize();
>>
>>
>> The problem on MacOSX is that Py_IsInitialized() is returning true on  
>> the
>> first time it is called even though Python hadn't up until that point  
>> actually
>> been initialised. This means initialisation is skipped and the first  
>> time
>> something tries to use Python methods later, it crashes.
>>
>> To my mind the use of Py_IsInitialized() is partly bogus anyway. This  
>> is
>> because if someone did come up with a different apache module which
>> also tried to use Python and it got loaded first and called  
>> Py_Initialize(),
>> it would mean when mod_python got loaded it would skip initialisation
>> and wouldn't initialise as a result the "interpreters" dictionary nor  
>> would
>> it necessarily initialise threading if the other module didn't do it.
>>
>> Thus, even though people might reckon that this patch may only be
>> relevant to the MacOSX problem I have, I would disagree, because I  
>> would
>> say the code is wrong anyway.
>>
>> As a demonstration, you might modify the code and add an extra call to
>> Py_Initialize() just prior to the "if" statement where  
>> Py_IsInitialized() is
>> called as if it was done somewhere else. Do this and mod_python should
>> by observation break since "interpreters" will never get set as  
>> described above.
>>
>> --
>> Graham Dumpleton (grahamd@dscpl.com.au)
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
> --
> Graham Dumpleton (grahamd@dscpl.com.au)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Todd Boland
Software Engineer
Charged Software
(508) 887-2885
Facsimile: (978) 264-0058

-- 
Statement of Confidentiality:

The information contained in this electronic message and any  
attachments to this message are intended for the exclusive use of the  
addressee(s) and may contain confidential or privileged information.

If you are not the intended recipient, please notify Todd Boland, at  
(508) 887-2885 immediately, and destroy all copies of this message and  
any attachments.

From Administrator at leebrown.org  Fri Sep 24 11:18:14 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Fri Sep 24 10:18:54 2004
Subject: [mod_python] "Offline" Testing of Python Handlers
Message-ID: <003c01c4a241$54673380$0200a8c0@UberBox>

Greetings!

I've been thinking that it would be useful to be able to run and debug Python Handler modules without actually having to run them with a live server.  To do this, I'd have to create an environment that can pass simulated request objects to the handlers and receive the responses.

There's certainly enough documentation around so that I could eventually figure it out, but I thought I'd ask if anyone else has already done this before I go re-inventing the wheel.

Best Regards,
Lee E. Brown
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040924/67b04211/attachment.html
From mark at gsoa.net  Fri Sep 24 15:12:18 2004
From: mark at gsoa.net (Mark McClain)
Date: Fri Sep 24 14:12:23 2004
Subject: [mod_python] Mac OS X / Apache 2.0 / mod_python 3.1.3 / Python
	2.3.
In-Reply-To: <D2D3276C-0E1C-11D9-8C95-000393DCF16E@dscpl.com.au>
References: <1096004233.25417@dscpl.com.au>
	<BBA486CA-0E1A-11D9-9AE4-0003938C739C@tc.umn.edu>
	<D2D3276C-0E1C-11D9-8C95-000393DCF16E@dscpl.com.au>
Message-ID: <4599A33E-0E55-11D9-8072-000A95B33D28@gsoa.net>

I have built mod_python on 10.3.[2,3,4,5] for multiple machines in our  
office without problems.  I use the version of python shipped with OS X  
and apache 2.0 which I compiled.

I did run into some weirdness with the gcc depending on the method for  
installing Xcode.  That issue was because apple changed the libraries  
that the Xcode installed versus the OS installation provided; however,  
that problem would present itself at compile time not runtime.

I have another clean machine that I'll try it out on this weekend.

mark

On Sep 24, 2004, at 7:28 AM, Graham Dumpleton wrote:

> The problem I was having with both Apache 1.3/2.0 and corresponding  
> mod_python
> for those versions loaded, was that as soon as Apache was started, all  
> the forked
> processes would crash.
>
> [Fri Sep 24 15:06:01 2004] [notice] SIGHUP received.  Attempting to  
> restart
> [Fri Sep 24 15:06:02 2004] [notice] Apache/2.0.51 (Unix) configured --  
> resuming normal operations
> [Fri Sep 24 15:06:10 2004] [notice] child pid 15196 exit signal Bus  
> error (10)
> [Fri Sep 24 15:06:10 2004] [notice] child pid 15194 exit signal Bus  
> error (10)
> [Fri Sep 24 15:06:10 2004] [notice] child pid 15192 exit signal Bus  
> error (10)
> [Fri Sep 24 15:06:10 2004] [notice] child pid 15190 exit signal Bus  
> error (10)
> [Fri Sep 24 15:06:10 2004] [notice] child pid 15188 exit signal Bus  
> error (10)
>
> Make the mod_python.c file fix I described and it all works fine.
>
> Thus, has nothing to do with command line execution of Python.
>
> On 24/09/2004, at 9:13 PM, John Raines wrote:
>
>> There's a Macpython IDE that would run a lot of python code and  
>> necessarily initialize some things, I think. Is that really the issue  
>> or are you dealing with python itself from the command line? I'm  
>> still trying to get things working myself and I did download a new  
>> version of python although I think I'm one version behind you on both  
>> Apache and python.
>> On Sep 24, 2004, at 12:37 AM, Graham Dumpleton wrote:
>>
>>> A while back, I posted as to how I managed to get standard Apache  
>>> 1.3 and
>>> Python 2.3 as supplied with the Mac OS X (10.3.5) operating system,  
>>> working
>>> with the older mod_python 2.7.10. Specifically, a hack was required  
>>> because
>>> the Python framework library as supplied with the Mac was appearing  
>>> to
>>> already be initialised when mod_python was initialised, even though  
>>> it hadn't.
>>> The original email and the hack made is attached below.
>>>
>>> Anyway, I have now installed Apache 2.0.51 and mod_python 3.1.3 and  
>>> have
>>> run up against the exact same problem. Remembering, this is with the
>>> version of Python that comes with the operating system, ie., Python  
>>> 2.3.
>>> I even rebuilt my box from scratch recently so it is a relatively  
>>> fresh install
>>> of Mac OS X.
>>>
>>> My question is whether anyone running Apache 2.0 and mod_python 3.1.3
>>> on Mac OS X, has done so by using the version of Python that comes  
>>> with
>>> the operating system? The various posts I have seen talk about having
>>> downloaded the more recent Python 2.3.4 and compiling it from  
>>> scratch.
>>> Ie., not using that supplied with the operating system.
>>>
>>> If this is the case, and everyone has been building a new version of  
>>> Python,
>>> it suggests that the problem I am seeing is generic to Python 2.3  
>>> that comes
>>> with the Mac and applies to any version of mod_python.  
>>> Alternatively, it
>>> comes about because of underlying problems with how the loadable  
>>> object
>>> for mod_python is being created on the Mac.
>>>
>>> On Aug 04 21:37, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>>>
>>>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>>>> mod_python 2.7.10.
>>>>
>>>> On Aug 04 15:26, Justin Ryan <jryan@qutang.net> wrote:
>>>>>
>>>>> Subject: Re: [mod_python] Status of Mac OS X / Apache 1.3 /  
>>>>> mod_python 2.7.10.
>>>>>
>>>>> Be careful when playing with the file/directory/link/whateva that  
>>>>> is
>>>>> /System/Library/Frameworks/Python.Framework.  I ran into some  
>>>>> wierdness
>>>>> trying to change this into a symlink and move it around (i.e.  
>>>>> change it
>>>>> back and forth from pointing to Apple's python and my own).
>>>>>
>>>>> Also, take care when using the 'python' command after installing  
>>>>> your
>>>>> own framework build.  It's kind of a pain to get a framework build  
>>>>> to
>>>>> stick python, pythonw, etc.. in /usr/bin - all of my stuff was in
>>>>> /usr/local/bin, even though I passed --prefix=/usr to the configure
>>>>> script.
>>>>
>>>> I would agree and why I didn't want to go down the path of having  
>>>> to replace
>>>> the standard version of Python on MacOSX with a newer version to  
>>>> get mod_python
>>>> to work. Similarly, I didn't want to be replacing their version of  
>>>> Apache.
>>>>
>>>> Anyway, listed below is the changes I had to make to get it to  
>>>> build and work
>>>> on MacOSX (10.3.3) with the standard Python (2.3) and Apache (1.3)  
>>>> that come
>>>> with the operating system.
>>>>
>>>> First off, after running configure, change "src/Makefile" and  
>>>> replace:
>>>>
>>>>    
>>>> /System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
>>>> python2.3/config/libpython2.3.a
>>>>
>>>> with:
>>>>
>>>>   -framework Python
>>>>
>>>> in LIBS variable.
>>>>
>>>> Second, in the same makefile, change CFLAGS and add in:
>>>>
>>>>   -DEAPI
>>>>
>>>> as a compiler option.
>>>>
>>>> This will allow mod_python to build, but the result will crash.
>>>>
>>>> Final step is to modify src/mod_python.c. The diff is below. There  
>>>> are
>>>> more comments after that diff as to why the original code is wrong  
>>>> anyway.
>>>>
>>>>
>>>> *** mod_python.c.dist   Tue May 29 06:00:41 2001
>>>> --- mod_python.c        Thu Aug  5 13:21:22 2004
>>>> ***************
>>>> *** 260,265 ****
>>>> --- 260,268 ----
>>>>
>>>>       char buff[255];
>>>>
>>>> +     /* fudge for Mac OS X with Apache 1.3 where  
>>>> Py_IsInitialized() broke */
>>>> +     static int initialized = 0;
>>>> +
>>>>       /* pool given to us in ChildInit. We use it for
>>>>          server.register_cleanup() */
>>>>       pool *child_init_pool = NULL;
>>>> ***************
>>>> *** 272,279 ****
>>>>       ap_add_version_component(buff);
>>>>
>>>>       /* initialize global Python interpreter if necessary */
>>>> !     if (! Py_IsInitialized())
>>>>       {
>>>>
>>>>         /* initialze the interpreter */
>>>>         Py_Initialize();
>>>> --- 275,283 ----
>>>>       ap_add_version_component(buff);
>>>>
>>>>       /* initialize global Python interpreter if necessary */
>>>> !     if (initialized == 0 || ! Py_IsInitialized())
>>>>       {
>>>> +         initialized = 1;
>>>>
>>>>         /* initialze the interpreter */
>>>>         Py_Initialize();
>>>>
>>>>
>>>> The problem on MacOSX is that Py_IsInitialized() is returning true  
>>>> on the
>>>> first time it is called even though Python hadn't up until that  
>>>> point actually
>>>> been initialised. This means initialisation is skipped and the  
>>>> first time
>>>> something tries to use Python methods later, it crashes.
>>>>
>>>> To my mind the use of Py_IsInitialized() is partly bogus anyway.  
>>>> This is
>>>> because if someone did come up with a different apache module which
>>>> also tried to use Python and it got loaded first and called  
>>>> Py_Initialize(),
>>>> it would mean when mod_python got loaded it would skip  
>>>> initialisation
>>>> and wouldn't initialise as a result the "interpreters" dictionary  
>>>> nor would
>>>> it necessarily initialise threading if the other module didn't do  
>>>> it.
>>>>
>>>> Thus, even though people might reckon that this patch may only be
>>>> relevant to the MacOSX problem I have, I would disagree, because I  
>>>> would
>>>> say the code is wrong anyway.
>>>>
>>>> As a demonstration, you might modify the code and add an extra call  
>>>> to
>>>> Py_Initialize() just prior to the "if" statement where  
>>>> Py_IsInitialized() is
>>>> called as if it was done somewhere else. Do this and mod_python  
>>>> should
>>>> by observation break since "interpreters" will never get set as  
>>>> described above.
>>>>
>>>> --
>>>> Graham Dumpleton (grahamd@dscpl.com.au)
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>
>>> --
>>> Graham Dumpleton (grahamd@dscpl.com.au)
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From gdamjan at mail.net.mk  Fri Sep 24 23:40:49 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Sep 24 16:40:53 2004
Subject: [mod_python] Image handling handler
In-Reply-To: <1096028236.21026.3.camel@bigmac.taumu.com>
References: <20040921145326.GA10208@legolas.on.net.mk>
	<1095805327.8285.12.camel@bigmac.taumu.com>
	<20040923011719.GB27134@legolas.on.net.mk>
	<1095935049.12505.7.camel@bigmac.taumu.com>
	<20040923173124.GC28689@legolas.on.net.mk>
	<1096028236.21026.3.camel@bigmac.taumu.com>
Message-ID: <20040924204049.GC30583@legolas.on.net.mk>

> My problem was that I was unaware that the img.save method internally
> called a given objects write method.  Is this documented anywhere?

Trial and error :)
 
> Is it only the write method that is required by an object to be a valid
> file object for the img.save method? 

I don't know, but see the previous comment by Sean Treadway.

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From jgentil at sebistar.net  Fri Sep 24 19:13:23 2004
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Fri Sep 24 19:13:29 2004
Subject: [mod_python] "Offline" Testing of Python Handlers
In-Reply-To: <003c01c4a241$54673380$0200a8c0@UberBox>
References: <003c01c4a241$54673380$0200a8c0@UberBox>
Message-ID: <4154AA13.3020701@sebistar.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Lee E. Brown wrote:

> I've been thinking that it would be useful to be able to run and debug
> Python Handler modules without actually having to run them with a live
> server.  To do this, I'd have to create an environment that can
> pass simulated request objects to the handlers and receive the
responses.
>
> There's certainly enough documentation around so that I could
eventually
> figure it out, but I thought I'd ask if anyone else has already done
> this before I go re-inventing the wheel.

I think about once a month someone comes up with this idea, and I
don't think I ever see anything done, though.  So if you accomplish
it, good luck!  :)

I think everyone just finds that setting up a local web server is far
easier, and guarantees a more stable system.


- --
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@jabber.org      web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iEYEARECAAYFAkFUqhMACgkQOrVFmaIbww4G/wCfbjkkAPYSGuNXgLGkcztULWPZ
bbkAoL7ubAauR0q+OvFhZS8vvZwpv9eP
=5W8d
-----END PGP SIGNATURE-----
From rpinder at usc.edu  Sat Sep 25 09:04:31 2004
From: rpinder at usc.edu (Rich Pinder)
Date: Sat Sep 25 11:04:33 2004
Subject: [mod_python] TypeError:  help  (not enough non-keyword args)
Message-ID: <415588FF.5030308@usc.edu>

I have a modpython script that is working fine for a couple years now.
I'm adding a second web form, so I defined a second method in the same 
.py script, added/modified the fields needed for this new insert, but 
get the error below.

(the original method that is working fine has 7 arguments btw - this '3 
given' is perplexing)

Can you suggest something simple I'm overlooking?

Thanks
Rich


ERROR:

TypeError: sendinfofup() takes exactly 14 non-keyword arguments (3 given)


CODE:

def sendinfofup(frm_id, frm_zip, frm_Email1, frm_Resident_1996, 
frm_Resident_1997, frm_Resident_1998, frm_Resident_1999, frm\
_Resident_2000, frm_Resident_2001, frm_Resident_2002, frm_Resident_2003, 
frm_Resident_2004, frm_ResidentOutOfCalif, frm_Text\
):

 TABLE_NAME = 'ctsfup2004'

 con = kinterbasdb.connect(
         dsn="/xxx.gdb",
         user="xxxxxx",
         password="xxxxxx"
                )

 cur = con.cursor()

 newContact2 = (
          (frm_id, frm_zip, frm_Email1, frm_Resident_1996, 
frm_Resident_1997, frm_Resident_1998, frm_Resident_1999, frm_Resi\
dent_2000, frm_Resident_2001, frm_Resident_2002, frm_Resident_2003, 
frm_Resident_2004, frm_ResidentOutOfCalif, frm_Text))


 cur.execute("insert into TABLE_NAME(id, zip5, email, resident_96, 
resident_97, resident_98, resident_99, resident_00, resid\
ent_01, resident_02, resident_03, resident_04, residentoutofcalif, sugg) 
values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",\
 newContact2)

 con.commit()
From rmfendt at web.de  Sat Sep 25 18:33:11 2004
From: rmfendt at web.de (Robert Fendt)
Date: Sat Sep 25 11:31:51 2004
Subject: [mod_python] PSP content-type problem
Message-ID: <20040925173311.7a12316f@vulcan>

Hi,

I am playing around with mod_python at the moment (partly because I
developed a bit of a dislike for PHP lately). Normally I use XHTML and use
the "Accept:" header information by the UA to determine if it can parse
the document as XML. In that case, it gets the document as
application/xhtml+xml, otherwise (e.g., the IE) as text/html. The code I
use for this in PHP is irrelevant, of course. In mod_python currently I
use this:

-----------------------------
CHARSET = "utf-8"

def index(req):
  xmlctype = 'application/xhtml+xml'
  htmlctype = 'text/html'
  supportsxml = string.count(req.headers_in.get('Accept', ""), xmlctype)

  if (supportsxml):
    ctype = xmlctype
  else:
    ctype = htmlctype
  req.content_type = ctype + '; charset=%s' % CHARSET
-----------------------------

This works quite well, but problems start when I try to include a psp page
template like this:

-----------------------------
  vars = {'usexml': supportsxml,
          'charset': CHARSET}
  page = psp.PSP(req, 'index.psp', vars=vars)
  return page
-----------------------------

Whatever I do, the page is _always_ delivered as "text/html". If I repeat
the content_type assignment inside the psp template, it works, but of
course I do not want to repeat the recognition code in every page
template. A look inside psp.py showed that indeed the content_type is
overwritten. Here:

-----------------------------
    def __str__(self):
        self.req.content_type = 'text/html'
        self.run()
        return ""
-----------------------------

and here:

-----------------------------
def handler(req):

    req.content_type = "text/html"
-----------------------------

I would suggest changing it to what the publisher handler does (if this
does not break anything, but at least it seems to work for me), e.g.:

-----------------------------
    def __str__(self):
        if not self.req._content_type_set:
            self.req.content_type = 'text/html'
        self.run()
        return ""
-----------------------------

One final remark: defining __str__(self) like above is (in my opinion) a
very ugly hack. On trying something like

page=str(psp.PSP(req, 'page.psp'))

I would expect "page" to contain the PSP rendering of 'page.psp' as a
string. What I would not expect, however, is the (attempted) string
conversion causing a direct write to the UA. In fact I tried this while
trying to get the psp class not to rewrite my content-type and was quite
surprised at the result.

Regards,
Robert
From kamil at nvstudio.pl  Sat Sep 25 23:42:31 2004
From: kamil at nvstudio.pl (Kamil Niechajewicz)
Date: Sat Sep 25 16:42:38 2004
Subject: [mod_python] PSP content-type problem
In-Reply-To: <20040925173311.7a12316f@vulcan>
References: <20040925173311.7a12316f@vulcan>
Message-ID: <opsewg45qmv05qvk@localhost>

On Sat, 25 Sep 2004 17:33:11 +0200, Robert Fendt <rmfendt@web.de> wrote:

> I would suggest changing it to what the publisher handler does (if this
> does not break anything, but at least it seems to work for me), e.g.:

yeah, i agree with you. this should be changed.
i have different matter that concerns me. actually psp instantly
does req.write while processing the template, so its possible that
only part of the page will be displayed due some processing errors
(like using not supported by 'vars = {}' key name etc.) when it
occurs we get an ugly error inside our page that was partially
displayed to the user. that is not a very pretty solution.
i wonder whether there is an option of making psp some more
configurable when it comes to sending content to user. i'd like
to buffer it and send it at once (if everything went okay), or
send some nice page informing about runtime error.
what are the good parts of sending the content on the fly when
template is processed, and not buffering it and sending it later
when all is done properly? does it have some performance impact?

best regards,
Kamil

From rmfendt at web.de  Sun Sep 26 02:06:42 2004
From: rmfendt at web.de (Robert Fendt)
Date: Sat Sep 25 19:05:24 2004
Subject: [mod_python] PSP content-type problem
In-Reply-To: <opsewg45qmv05qvk@localhost>
References: <20040925173311.7a12316f@vulcan>
	<opsewg45qmv05qvk@localhost>
Message-ID: <20040926010642.3bd7793b@vulcan>

And thus spake "Kamil Niechajewicz" <kamil@nvstudio.pl>
Sat, 25 Sep 2004 22:42:31 +0200:

> yeah, i agree with you. this should be changed.
> i have different matter that concerns me. actually psp instantly
> does req.write while processing the template, so its possible that
> only part of the page will be displayed due some processing errors
> (like using not supported by 'vars = {}' key name etc.) when it
> occurs we get an ugly error inside our page that was partially
> displayed to the user. that is not a very pretty solution.
> i wonder whether there is an option of making psp some more
> configurable when it comes to sending content to user. i'd like
> to buffer it and send it at once (if everything went okay), or
> send some nice page informing about runtime error.
> what are the good parts of sending the content on the fly when
> template is processed, and not buffering it and sending it later
> when all is done properly? does it have some performance impact?

I think that matches with my earlier remark about psp.PSP.__str()__ not
actually returning a string (in fact, it returns ""). In my opinion, it
really should do that. If so, you can do something e.g. like

page = str(psp.PSP(req, 'page.psp'))

and then determine if the rendering went alright. For example, you can
call it like this in the publisher handler and in case of error, you
include a simple, clean error message. Or you can store the output for
repeated use. There would be several advantages, I think, of __str()__
actually returning what it should. Just my $0.02.

Regards,
Robert


-- 
encrypted (or at least signed) email preferred
public PGP key available (e.g., via http://pgp.mit.edu/)
key type: DSS/DH; key ID: 1789F5DF
key fingerprint: F7A5 2001 2D35 A7FA C56E  E87F 369B ED81 1789 F5DF
From evert_carton at yahoo.co.uk  Sun Sep 26 03:49:10 2004
From: evert_carton at yahoo.co.uk (Evert Carton)
Date: Sat Sep 25 20:48:10 2004
Subject: [mod_python] HostNameLookups
In-Reply-To: <20040925173311.7a12316f@vulcan>
References: <20040925173311.7a12316f@vulcan>
Message-ID: <1096159750.32742.6706.camel@localhost>

Hi all,

[mod_python 3.1.3 on Linux, Apache 'prefork']

I'm having this little problem with hostname lookups.

I have HostNameLookups turned on in Apache, and I have an entry for a
given host both in the hosts file and in DNS. The hostname for the
IP-address can be resolved. I checked all that.

Since things didn't work as expected, I've put in some debugging code
(including printing the PID of the Apache child-process), and it looks
like mod_python thinks hostname resolution has not been done
(req.connection.remote_host = None). However, when I do a simple refresh
of the page, the hostname shows up fine.

When I go back to the page a little later, (in order to 'try' to talk to
a different Apache child-process, the problem returns: hostname does not
look like its been resolved ... page refresh and all is well ...

Go to a different virtualhost on the same IP (same Python code): problem
returns ... refresh ... all is well ...

Looking at the Apache access-log (and error-log), it seems like it has
always been doing hostname lookup just fine.  

Restarted Apache a few times, didn't help ;-)

Help ? Please ;-)
Kind Regards,
Evert

From xslom03 at vse.cz  Sun Sep 26 10:59:57 2004
From: xslom03 at vse.cz (Martin Slouf)
Date: Sun Sep 26 04:00:00 2004
Subject: [mod_python] PSP content-type problem
In-Reply-To: <redirect-14050051@vse.cz>
References: <20040925173311.7a12316f@vulcan> <redirect-14050051@vse.cz>
Message-ID: <20040926075957.GA4578@barbucha.martin.net>

On Sat, Sep 25, 2004 at 10:51:45PM +0200, Kamil Niechajewicz wrote:
> On Sat, 25 Sep 2004 17:33:11 +0200, Robert Fendt <rmfendt@web.de> wrote:
> 
> >I would suggest changing it to what the publisher handler does (if this
> >does not break anything, but at least it seems to work for me), e.g.:
> 
> yeah, i agree with you. this should be changed.
> i have different matter that concerns me. actually psp instantly
> does req.write while processing the template, so its possible that
> only part of the page will be displayed due some processing errors
> (like using not supported by 'vars = {}' key name etc.) when it
> occurs we get an ugly error inside our page that was partially
> displayed to the user. that is not a very pretty solution.

well, i agree that buffer would be nice, but you can do all the nescessary
error checking in handler and than just use vars to pass the html strings
generated

there is also possible to pregenerate the page and store it whole in a string

def registration(req, err = None):
    err_tmpl = get_err_tmpl(req, err)
    args = {"title": _("Registration"),
            "data" : get_reg_data(req),
            "err_tmpl" : err_tmpl}
    tmpl = TEMPLATES_DIR + "registration.html"
    return psp.PSP(req, tmpl, vars = args)

def get_err_tmpl(req, reg_err):
    tmpl = ""
    if (reg_err == None): pass
    else: tmpl = psp.PSP(req, TEMPLATES_DIR + "error.tmpl",
                         vars = {"err": reg_err})
    return tmpl

the 1st func is handler, err_tmpl contains any errors that are reported to user
and I use in the 2nd func

tmpl = psp.PSP(req, TEMPLATES_DIR + "error.tmpl",
               vars = {"err": reg_err})

'tmpl' is not an standalone page -- just a part of it and this code will
return its string representation (a layer actually)

i guess its pretty clear how you can use try...except around the code and catch
the exceptions, in fact, i use special handler that checks the data for me and
if ok, calls registration(reg) and if not it calls registration(reg, err) as
the last thing in its processing

m.
From xslom03 at vse.cz  Sun Sep 26 11:28:43 2004
From: xslom03 at vse.cz (Martin Slouf)
Date: Sun Sep 26 04:28:46 2004
Subject: [mod_python] using callable classes instead of plain functions in
	handlers
Message-ID: <20040926082843.GB4578@barbucha.martin.net>

Hi,

im new to mod_python, but not new to python, i used to do some jsp and php
coding but now im very impressed about mod_python.

im able to try this out, but id rather ask you for help first :)

my question is:

if you are using the mighty publisher handler, it calls a specified function,
based on request uri.

this is very nice, but sometimes i need the same coding in several handlers,
for example, if i handle errors in a standard way, i use the same code over and
over again (copy & paste with minor changes)

it would be _very_ nice if one could just create a class, use its () operator
(the __call__() method) and put some standard behavior in that call.  then
create an object of this class and publisher handler with request
http://somewhere.org/index.py/my_handler
would instead of a function 'my_handler' defined in 'index.py' would call my
callable object 'my_handler' created in 'index.py'

the MyHandler class could look like this:

class MyHandler:
      def __call__(req, ...):
	  self._handle_errors()
	  self._do_some_special_stuff() # ready to override
	  self._log_request()
	  self._generate_html()

if i want a special behaviour, no problem -- just subclass 'MyHandler' and
change the default behaviour.

anyone has tried that?  are there any frameworks using it?  is it slow?

m.
From Administrator at leebrown.org  Sun Sep 26 12:05:03 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Sun Sep 26 11:05:23 2004
Subject: [mod_python] PSP content-type problem
References: <20040925173311.7a12316f@vulcan> <opsewg45qmv05qvk@localhost>
Message-ID: <009901c4a3da$33c67a60$0200a8c0@UberBox>


From: "Kamil Niechajewicz" <kamil@nvstudio.pl>
To: "mod_python user mailing list" <mod_python@modpython.org>
Sent: Saturday, September 25, 2004 4:42 PM
Subject: Re: [mod_python] PSP content-type problem


> On Sat, 25 Sep 2004 17:33:11 +0200, Robert Fendt <rmfendt@web.de> wrote:
>
>> I would suggest changing it to what the publisher handler does (if this
>> does not break anything, but at least it seems to work for me), e.g.:
>
> yeah, i agree with you. this should be changed.
> i have different matter that concerns me. actually psp instantly
> does req.write while processing the template, so its possible that
> only part of the page will be displayed due some processing errors
> (like using not supported by 'vars = {}' key name etc.) when it
> occurs we get an ugly error inside our page that was partially
> displayed to the user. that is not a very pretty solution.

The problem of leaving a user staring at half of a 'broken' page had me 
worried as well.
I have found several 'low-tech' solutions to that, though, that work 
perfectly well with the Publisher Handler.
(My examples are simplistic for brevity.)

Solution 1:  Apache's SSI module can be used in a 'pseudo-PSP' manner:

Within the HTML document:
<h1>Welcome <!--#include virtual="myscript.py/supply_pagetitle" -->!<h1>

Within the script:
return 'to my Herpetology page'

When the script works, the user sees "Welcome to my Herpetology page!"
If the script fails to run and PythonDebug is Off, the user just sees 
"Welcome!" without realizing that anything is missing.

***

Solution 2: Use python's string formatting '%' function to insert data at 
specific point in an HTML document:

Within the HTML document:
<p>You are visitor number %s.  Welcome!<p>

Within the script:
docfile = open(htmlfile, 'r')
filestr = docfile.read()
return filestr % hitcounter()

***

Solution 3: Use Python's string replace function to replace a placeholder 
that also serves as a meaningful error message:

Within the HTML document:
<h1>Today's winning Lottery Number:<h1>
<p>(Server temporarily unavailable)</p>

Within the script:
docfile = open(htmlfile, 'r')
filestr = docfile.read()
return filestr.replace('(Server temporarily unavailable)', winning_number)

***

The overall strategy that I've been following is to 'fail gracefully' by 
building my HTML document templates so that they would make sense to the 
user even if the document template was the only thing returned.  In other 
words, the web site is augmented by the Python back-end instead of being 
completely dependant upon it. 

From dpopowich at comcast.net  Mon Sep 27 10:04:27 2004
From: dpopowich at comcast.net (Daniel Popowich)
Date: Mon Sep 27 09:06:36 2004
Subject: [mod_python] using callable classes instead of plain functions in
	handlers
In-Reply-To: <20040926082843.GB4578@barbucha.martin.net>
References: <20040926082843.GB4578@barbucha.martin.net>
Message-ID: <16728.4059.248773.588975@fenway.local.>


Martin Slouf writes:
> it would be _very_ nice if one could just create a class, use its () operator
> (the __call__() method) and put some standard behavior in that call.  then
> create an object of this class and publisher handler with request
> http://somewhere.org/index.py/my_handler
> would instead of a function 'my_handler' defined in 'index.py' would call my
> callable object 'my_handler' created in 'index.py'
> 
> the MyHandler class could look like this:
> 
> class MyHandler:
>       def __call__(req, ...):
> 	  self._handle_errors()
> 	  self._do_some_special_stuff() # ready to override
> 	  self._log_request()
> 	  self._generate_html()
> 
> if i want a special behaviour, no problem -- just subclass 'MyHandler' and
> change the default behaviour.
> 
> anyone has tried that?  are there any frameworks using it?  is it slow?

You may want to take a look at mod_python servlets (link below,
complete with on-line tutorial) where instances of classes handle each
request.  If all your servlets subclass (or mix-in) from a class that
has such behaviour, then you're golden.

Daniel Popowich
-----------------------------------------------
http://home.comcast.net/~d.popowich/mpservlets/

From rpinder at usc.edu  Mon Sep 27 08:08:24 2004
From: rpinder at usc.edu (Rich Pinder)
Date: Mon Sep 27 10:08:22 2004
Subject: [mod_python] Help with error message
Message-ID: <41581ED8.1060902@usc.edu>

I have a mod_python script that has worked fine for a couple years now.  
It has a single function defined within the script.
I'm adding a second web form to my site, so I defined a second function 
in the same .py script, added/modified the fields needed for the new 
insert, but get the error below.

A python only script (without the web stuff) confirms I can insert data 
into the table, using the specified user id - so I know the database is 
configured correctly.  And as I say, the original function within the 
.py script continues to work just fine, so mod_python is configured 
correctly.

Thanks in advance for your thoughts.
Rich

Config:

 Apache 1.3
 Python 2.2 (#1, Mar 26 2002, 15:46:04)  [GCC 2.95.3 20010315 (SuSE)] on 
linux2
 Mod_Python 2.7
 Kinterbasdb 3.0.2

ERROR:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/apache/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/apache/lib/python2.2/site-packages/mod_python/publisher.py", line 171, in handler
    result = apply(object, (), args)

TypeError: sendinfofup() takes exactly 14 non-keyword arguments (3 given)


HTML

<form action="https://www.xxxxx.org/ctspython/ctsform/sendinfofup" method="post" name="form1">


CODE in .PY file:

def sendinfofup(frm_id, frm_zip, frm_Email1, frm_Resident_1996, 
frm_Resident_1997, frm_Resident_1998, frm_Resident_1999, frm\
_Resident_2000, frm_Resident_2001, frm_Resident_2002, frm_Resident_2003, 
frm_Resident_2004, frm_ResidentOutOfCalif, frm_Text\
):

TABLE_NAME = 'ctsfup2004'

 con = kinterbasdb.connect(
        dsn="/xxx.gdb",
        user="xxxxxx",
        password="xxxxxx"
               )

 cur = con.cursor()

 newContact2 = (
         (frm_id, frm_zip, frm_Email1, frm_Resident_1996, 
frm_Resident_1997, frm_Resident_1998, frm_Resident_1999, frm_Resi\
dent_2000, frm_Resident_2001, frm_Resident_2002, frm_Resident_2003, 
frm_Resident_2004, frm_ResidentOutOfCalif, frm_Text))


 cur.execute("insert into TABLE_NAME(id, zip5, email, resident_96, 
resident_97, resident_98, resident_99, resident_00, resid\
ent_01, resident_02, resident_03, resident_04, residentoutofcalif, sugg) 
values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",\
newContact2)

 con.commit()
  ...
From nick at dd.revealed.net  Mon Sep 27 10:09:30 2004
From: nick at dd.revealed.net (Nick)
Date: Mon Sep 27 10:09:57 2004
Subject: [mod_python] "Offline" Testing of Python Handlers
In-Reply-To: <4154AA13.3020701@sebistar.net>
References: <003c01c4a241$54673380$0200a8c0@UberBox>
	<4154AA13.3020701@sebistar.net>
Message-ID: <41581F1A.1060702@dd.revealed.net>

PSE can run its servlets offline.

http://nick.borko.org/pse

Nick

Jon-Pierre Gentil wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Lee E. Brown wrote:
> 
> 
>>I've been thinking that it would be useful to be able to run and debug
>>Python Handler modules without actually having to run them with a live
>>server.  To do this, I'd have to create an environment that can
>>pass simulated request objects to the handlers and receive the
> 
> responses.
> 
>>There's certainly enough documentation around so that I could
> 
> eventually
> 
>>figure it out, but I thought I'd ask if anyone else has already done
>>this before I go re-inventing the wheel.
> 
> 
> I think about once a month someone comes up with this idea, and I
> don't think I ever see anything done, though.  So if you accomplish
> it, good luck!  :)
> 
> I think everyone just finds that setting up a local web server is far
> easier, and guarantees a more stable system.
> 
> 
> - --
> _________________________________________________________
> 
>   Jon-Pierre Gentil               PGP: 0xA21BC30E
>   jabber: jgentil@jabber.org      web: www.sebistar.net
>   "If you think education is expensive, try ignorance."
> _________________________________________________________
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.5 (GNU/Linux)
> 
> iEYEARECAAYFAkFUqhMACgkQOrVFmaIbww4G/wCfbjkkAPYSGuNXgLGkcztULWPZ
> bbkAoL7ubAauR0q+OvFhZS8vvZwpv9eP
> =5W8d
> -----END PGP SIGNATURE-----
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Mon Sep 27 11:40:50 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Sep 27 10:40:54 2004
Subject: [mod_python] PSP content-type problem
In-Reply-To: <20040926010642.3bd7793b@vulcan>
References: <20040925173311.7a12316f@vulcan> <opsewg45qmv05qvk@localhost>
	<20040926010642.3bd7793b@vulcan>
Message-ID: <20040927103633.V96647@onyx.ispol.com>



On Sun, 26 Sep 2004, Robert Fendt wrote:

> I think that matches with my earlier remark about psp.PSP.__str()__ not
> actually returning a string (in fact, it returns ""). In my opinion, it
> really should do that.

But how would that work? The PSP object uses the request object to send 
its output, which in turn sends it out the filter stack and out to the 
socket.

To get a string, you'd need a fake request object that uses a StringIO or 
something to buffer the output, but this output isn't going to reflect the 
real picture because it would not be subject to any other filter/module in 
httpd, and if the PSP page makes use of any request specific features 
(e.g. internal redirect), the fake request object isn't going to support 
it. The bottom line is not nearly as simple as it seems. :-)

Grisha
From stephane.bidoul at softwareag.com  Mon Sep 27 19:10:17 2004
From: stephane.bidoul at softwareag.com (=?iso-8859-1?Q?St=E9phane_Bidoul?=)
Date: Mon Sep 27 12:07:36 2004
Subject: [mod_python] Next bug-fix release?
Message-ID: <DAEMSG03ABLSAQV6uPD00000435@DAEMSG03.eur.ad.sag>

Hi,

Is there a bug-fix release of mod-python planned in the near future?

In particular, I'd like to have this patch:
http://www.modpython.org/pipermail/mod_python/2004-July/015961.html
integrated in a release, so the debian packages could be updated.

Thanks in advance.

-sbi

From grisha at modpython.org  Mon Sep 27 13:44:26 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Sep 27 12:44:30 2004
Subject: [mod_python] Next bug-fix release?
In-Reply-To: <DAEMSG03ABLSAQV6uPD00000435@DAEMSG03.eur.ad.sag>
References: <DAEMSG03ABLSAQV6uPD00000435@DAEMSG03.eur.ad.sag>
Message-ID: <20040927124227.K98460@onyx.ispol.com>


The best plan so far has been "some time in the near future...". I've been 
trying to make some time to make a release, but so far other things in 
life have been taking precedence.

Grisha

On Mon, 27 Sep 2004, [iso-8859-1] St?phane Bidoul wrote:

> Hi,
>
> Is there a bug-fix release of mod-python planned in the near future?
>
> In particular, I'd like to have this patch:
> http://www.modpython.org/pipermail/mod_python/2004-July/015961.html
> integrated in a release, so the debian packages could be updated.
>
> Thanks in advance.
>
> -sbi
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From nicolas at lehuen.com  Mon Sep 27 20:07:29 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Mon Sep 27 13:07:35 2004
Subject: [mod_python] Next bug-fix release?
In-Reply-To: <20040927124227.K98460@onyx.ispol.com>
Message-ID: <200409271707.i8RH7VSW003162@modpython.org>

Speaking of patch, this one would come handy in the next bug-fix release
(well, at least it would save me from having my own branch of mod-python
;)...

It is a patch which enables the garbage collection of objects referenced
from the request object. If you ever created a circular reference starting
from the request object (like with req.foo.bar['req']=req), you'll certainly
notice that nothing is collected (even the request object) => shazam, you've
got a memory leak ! This patch fixes that.

I've been using it in production for nearly two weeks now, and it seems to
solve the problem (this, plus the fix of the memory leak in mod_rewrite from
Apache 2.0.51).

I've posted it on the python-dev mailing list on 09/11, but so far I haven't
got any positive or negative feedback...

Regards,

Nicolas Lehuen

> -----Message d'origine-----
> De : mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] De la part de 
> Gregory (Grisha) Trubetskoy
> Envoy? : lundi 27 septembre 2004 18:44
> ? : mod_python user mailing list
> Objet : Re: [mod_python] Next bug-fix release?
> 
> 
> The best plan so far has been "some time in the near 
> future...". I've been trying to make some time to make a 
> release, but so far other things in life have been taking precedence.
> 
> Grisha
> 
> On Mon, 27 Sep 2004, [iso-8859-1] St?phane Bidoul wrote:
> 
> > Hi,
> >
> > Is there a bug-fix release of mod-python planned in the near future?
> >
> > In particular, I'd like to have this patch:
> > http://www.modpython.org/pipermail/mod_python/2004-July/015961.html
> > integrated in a release, so the debian packages could be updated.
> >
> > Thanks in advance.
> >
> > -sbi
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: requestobject.c.gz
Type: application/octet-stream
Size: 9923 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040927/185ceccd/requestobject.c.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: garbage_collection.patch
Type: application/octet-stream
Size: 3682 bytes
Desc: not available
Url : http://modpython.org/pipermail/mod_python/attachments/20040927/185ceccd/garbage_collection.obj
From jgentil at sebistar.net  Mon Sep 27 13:52:24 2004
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Mon Sep 27 13:52:34 2004
Subject: [mod_python] Help with error message
In-Reply-To: <41581ED8.1060902@usc.edu>
References: <41581ED8.1060902@usc.edu>
Message-ID: <41585358.9040500@sebistar.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Rich Pinder wrote:


> TypeError: sendinfofup() takes exactly 14 non-keyword arguments (3 given)
> 
> 
> HTML
> 
> <form action="https://www.xxxxx.org/ctspython/ctsform/sendinfofup"
> method="post" name="form1">
> 
> 
> CODE in .PY file:
> 
> def sendinfofup(frm_id, frm_zip, frm_Email1, frm_Resident_1996,
> frm_Resident_1997, frm_Resident_1998, frm_Resident_1999, frm\
> _Resident_2000, frm_Resident_2001, frm_Resident_2002, frm_Resident_2003,
> frm_Resident_2004, frm_ResidentOutOfCalif, frm_Text\
> 

Don't you need to put req as the first parameter?

And, make sure that EACH and all of those parameters are being
POSTed.  If you try and load the page without each one defined in the
POST, you'll get that error.  Try and make them optional paramters,
setting them to frm_whatever=None...

- --
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@jabber.org      web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iEYEARECAAYFAkFYU1gACgkQOrVFmaIbww6sEQCfcKl9vRjMiq+BFRPHqwGfwmKx
crgAoIR7HS9QTARPw1yoArryEro2Mdx+
=2/AX
-----END PGP SIGNATURE-----
From rmfendt at web.de  Tue Sep 28 01:24:43 2004
From: rmfendt at web.de (Robert Fendt)
Date: Mon Sep 27 18:23:20 2004
Subject: [mod_python] PSP content-type problem
In-Reply-To: <20040927103633.V96647@onyx.ispol.com>
References: <20040925173311.7a12316f@vulcan> <opsewg45qmv05qvk@localhost>
	<20040926010642.3bd7793b@vulcan>
	<20040927103633.V96647@onyx.ispol.com>
Message-ID: <20040928002443.0ea90a43@vulcan>

And thus spake "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
Mon, 27 Sep 2004 10:40:50 -0400 (EDT):

> But how would that work? The PSP object uses the request object to send 
> its output, which in turn sends it out the filter stack and out to the 
> socket.
> 
> To get a string, you'd need a fake request object that uses a StringIO or 
> something to buffer the output, but this output isn't going to reflect the 
> real picture because it would not be subject to any other filter/module in 
> httpd, and if the PSP page makes use of any request specific features 
> (e.g. internal redirect), the fake request object isn't going to support 
> it. The bottom line is not nearly as simple as it seems. :-)

Okay, point taken. But its behaviour has to be at least properly
documented. IMHO the docs are seriously lacking in regard to PSP, anyway.

The problem about the content-type remains, however. I still cannot
understand why the default has to be set outside the PSP object at all. Doing it like that is error-prone and produces redundant code.

I may not be a Python guru, but usually something like that is done in an
object's constructor (i.e., __init__() in Python). So what would by the
problem about doing it during instantiation? It would be much cleaner and
you would not have to check if it is initialised at various parts of the
code. Or we do not initialise it, and the request object itself checks it
upon first call to write(), setting it to text/html if needed. What about
that?

Regards,
Robert

From rpinder at usc.edu  Tue Sep 28 07:42:23 2004
From: rpinder at usc.edu (Rich Pinder)
Date: Tue Sep 28 09:42:20 2004
Subject: [mod_python] Help with error message
In-Reply-To: <41585358.9040500@sebistar.net>
References: <41581ED8.1060902@usc.edu> <41585358.9040500@sebistar.net>
Message-ID: <41596A3F.6090807@usc.edu>

An HTML attachment was scrubbed...
URL: http://modpython.org/pipermail/mod_python/attachments/20040928/905e6c7d/attachment.html
From jgentil at sebistar.net  Tue Sep 28 13:24:40 2004
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Tue Sep 28 13:25:07 2004
Subject: [mod_python] Help with error message
In-Reply-To: <41596A3F.6090807@usc.edu>
References: <41581ED8.1060902@usc.edu> <41585358.9040500@sebistar.net>
	<41596A3F.6090807@usc.edu>
Message-ID: <41599E58.3070805@sebistar.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Rich Pinder wrote:

>> <>Don't you need to put req as the first parameter?
> 
> It appears not - perhaps due to the older version of mod_python I'm
> using (??).  Old code has worked well without it.
> But I tried adding it, with no effect. 

Ah yes, forgot to take note of your mod_python version =)


- --
_________________________________________________________

  Jon-Pierre Gentil               PGP: 0xA21BC30E
  jabber: jgentil@jabber.org      web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iEYEARECAAYFAkFZnlgACgkQOrVFmaIbww6KXgCfdRkO6k6uD98kZlOhRNM3Nz8z
oDUAoLFqU9YAHApg+X10xvjQGjwOT7Is
=UeAX
-----END PGP SIGNATURE-----
From modpy-noreply at mailinator.com  Tue Sep 28 15:45:43 2004
From: modpy-noreply at mailinator.com (ModPython-NoReply)
Date: Tue Sep 28 14:42:31 2004
Subject: [mod_python] PSP crash on windows 2000 apache 2.0 mod python 3.1.3
	and python 2.3
Message-ID: <004b01c4a58b$5d386270$4c1f140a@airwolf>

> Is there anything stopping me from manually importing the psp module 
> and
> running psp.parsestring on a psp source code that I have manually read 
> from
> the filesystem?
>
> For some reason with windows apache 2.0 python 2.3.4 and mod_python 
> 3.1.3 I
> get apache to throw a crash...
>
>
> is this expected?

for example if I modified the "handler" function to


def handler(req):

    req.content_type = "text/html"
    code = parsestring("HELLO WORLD")
    exec code in {"req" : req}
    
    return apache.OK


It'll crash apache on the 1st or 2nd load of the page.

any help would be great

thanks

slim
From xslom03 at vse.cz  Wed Sep 29 15:28:30 2004
From: xslom03 at vse.cz (Martin Slouf)
Date: Wed Sep 29 08:28:36 2004
Subject: [mod_python] using callable classes instead of plain functions in
	handlers
In-Reply-To: <redirect-14059593@vse.cz>
References: <20040926082843.GB4578@barbucha.martin.net>
	<redirect-14059593@vse.cz>
Message-ID: <20040929122830.GA5220@barbucha.martin.net>

hi daniel,

first of all, thanks for the answer.

finally i got some time and i am looking at the mod_python.servlet module right
now (browsing the tutorial) and it looks good with some nice features (form
controls parsing and even the call to Session.save() is nice :), but let me
tell you how i handle requests now and pls tell me if there might be some
problems with that, or if there are better ways how to do it in
mod_python.servlet.

1. im bound to use PSP -- graphics and gui features are done by another guy, we
just cooperate on form fields, i think that it is no problem with
mod_python.servlet (i agree, that code generated HTML definitely has its
advances, but i cant use it now.)

to use PSP properly i would just call return the psp page from the
'write_content' method, right?

2. i use mod_python.publisher to great extend and the logic behind most forms
is:

say, we got 1 simple registration form that collects just user's login and
password, all is in 'registration.py' file with two handlers:

- registration.py/registration (html form page)
- registration.py/registrate (processing of the request)

the 1st one does the PSP page output (sets form controls to whatever the user
typed in or to defaults, if presented for the 1st time)

the 2nd handles the actual request of 'sending a form', typically it lokks like
this:

	a) does whatever it has to do if data are ok

	b) if any errors are found, any cleanup actions are done if required
	and then the 1st method is called with additional parameter specifying
	all the raised errors -- so the only PSP involved is used to inform
	user about the errors also and the form is with no special care filled
	with whatever the user typed in

this behaviour i found very usefull and suits for most cases. (and this
behaviour i would implement in my servlet base class).  thx to
mod_python.publisher i can have several functions in one file, sharing some
data, and what is best, call several handlers even though im processing single
request and handle errors in this transparent way (case ad b)).

now, finally, the question for you:

with mod_python.servlet it seems like just one class is involved in request
processing and im probably unable to "call" another class in case of an error,
am i right? or can i just instantiate a new class (new servlet) to handle the
request in 'write_content' method, initialize it somehow (how?) and proccess it
'write_content' method?

or, better, i should ask how you deal with input form checks when the form is
not simple a and it can raise several errors and you need to take some cleanup
and inform user as well?  are there any tools (contributed) for this already in
mod_python.servlet?

regards, martin.

P.S. The mod_python.servlet is realy nice and if i wont use it in this project,
i will definitely be using it somewhere else.

P.P.S. I also encountered an error during the install (setup.py install) -- the
import directive was complaining about nonexistent module '_apache', whih is
really nonexistent, well manual copying the file was fine :)

m.

On Mon, Sep 27, 2004 at 03:20:57PM +0200, Daniel Popowich wrote:
> 
> Martin Slouf writes:
> > it would be _very_ nice if one could just create a class, use its () operator
> > (the __call__() method) and put some standard behavior in that call.  then
> > create an object of this class and publisher handler with request
> > http://somewhere.org/index.py/my_handler
> > would instead of a function 'my_handler' defined in 'index.py' would call my
> > callable object 'my_handler' created in 'index.py'
> > 
> > the MyHandler class could look like this:
> > 
> > class MyHandler:
> >       def __call__(req, ...):
> > 	  self._handle_errors()
> > 	  self._do_some_special_stuff() # ready to override
> > 	  self._log_request()
> > 	  self._generate_html()
> > 
> > if i want a special behaviour, no problem -- just subclass 'MyHandler' and
> > change the default behaviour.
> > 
> > anyone has tried that?  are there any frameworks using it?  is it slow?
> 
> You may want to take a look at mod_python servlets (link below,
> complete with on-line tutorial) where instances of classes handle each
> request.  If all your servlets subclass (or mix-in) from a class that
> has such behaviour, then you're golden.
> 
> Daniel Popowich
> -----------------------------------------------
> http://home.comcast.net/~d.popowich/mpservlets/
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From juergen at fiedlerfamily.net  Wed Sep 29 19:47:18 2004
From: juergen at fiedlerfamily.net (Juergen Fiedler)
Date: Wed Sep 29 18:47:29 2004
Subject: [mod_python] Request For Input
Message-ID: <415B3B76.2040601@fiedlerfamily.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

I am beginning to learn mod_python; I have just written the skeleton of
a web application, but have no idea where exactly the glaring holes are
could someone please take a look at the code and tell me whether I am on
the right track?

My .htaccess looks like this:
- ---
AddHandler python-program .py
PythonHandler main
PythonAutoReload On
PythonDebug On
- ---



main.py:
- ---
from mod_python import apache

def handler(req):
~  page = ''

~  try:
~    page = req.uri.split('main.py/')[1]
~  except IndexError:
~    pass

~  if len(page)==0:
~    page = 'index'

~  try:
~    exec "import site_code."+page
~    exec "h = site_code."+page+".Handler"
~  except ImportError:
~    return apache.HTTP_NOT_FOUND

~  return h(req).handle()
- ---



site_code/test.py
- ---
from mod_python import apache

class Handler:
~  def __init__(self,req):
~    self.__req = req

~  def handle(self):
~    #apache.log_error("flan!");
~    #raise apache.SERVER_RETURN, apache.HTTP_FORBIDDEN
~    page = 'index'
~    try:
~      page = self.__req.uri.split('main.py/')[1]
~    except IndexError:
~      pass

~    self.__req.content_type = "text/plain"
~    self.__req.send_http_header()
~    self.__req.write("hello '"+page+"'")
~    return apache.OK
- ---



The idea is that the main handler takes a URL like
'http://www.test.com/main.py/test' and separates the last part
(everything after the 'main.py/'). It then loads a Handler class from a
module of that name in the site_code package. Then it instantiates an
object of that class and calls the 'handle' method.
I purposely did not touch anything but the default handler yet.

Now the big question: Is this a valid way to go about writing a web
application in mod_python or am I completely on the wrong track? The
exec calls in the main handler are probably not optimal when it comes to
~ execution speed, but I couldn't think of anything better to do to
import a module dynamically based on external variables.

Any input would be greatly appreciated.

Thanks
- --j
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBWzt2YFE+dpEf2hQRAmK2AKC1crxcBFYWHpklqZh9Hswx9qgRewCeKmUC
z7824NxbM4LeerguT1UPRqg=
=sCdF
-----END PGP SIGNATURE-----
From grahamd at dscpl.com.au  Wed Sep 29 18:10:10 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Sep 29 19:10:12 2004
Subject: [mod_python] Request For Input
In-Reply-To: <415B3B76.2040601@fiedlerfamily.net>
Message-ID: <1096499407.7486@dscpl.com.au>

On Sep 29 18:47, Juergen Fiedler <juergen@fiedlerfamily.net> wrote:
>
> Subject: [mod_python] Request For Input
> 
> I am beginning to learn mod_python; I have just written the skeleton of
> a web application, but have no idea where exactly the glaring holes are
> could someone please take a look at the code and tell me whether I am on
> the right track?
>
> ... 
> 
> The idea is that the main handler takes a URL like
> 'http://www.test.com/main.py/test' and separates the last part
> (everything after the 'main.py/'). It then loads a Handler class from a
> module of that name in the site_code package. Then it instantiates an
> object of that class and calls the 'handle' method.
> I purposely did not touch anything but the default handler yet.
> 
> Now the big question: Is this a valid way to go about writing a web
> application in mod_python or am I completely on the wrong track? The
> exec calls in the main handler are probably not optimal when it comes to
> ~ execution speed, but I couldn't think of anything better to do to
> import a module dynamically based on external variables.
> 
> Any input would be greatly appreciated.

Instead of exec'ing import, use mod_python.apache.import_module() method.

You might also have a look at Vampire:

  http://www.dscpl.com.au/projects/vampire

It also implements a high level handler which acts as a switch between subordinate
content handlers stored in separate code files.

There is a newer version of Vampire code ready to be released, but still updating
documentation.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From gdamjan at mail.net.mk  Thu Sep 30 05:08:42 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Wed Sep 29 22:08:46 2004
Subject: [mod_python] PSP namespace polluted??
Message-ID: <20040930020842.GA17750@legolas.on.net.mk>

I just made a simple .psp page like this:

<html><body>
<%='<br>\n'.join(dir())%>
</body></html>

I was supprised how much the PSP namespace is polluted... maybe it
should be trimmed down... This using the default mod_python.psp handler.



-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From juergen at fiedlerfamily.net  Wed Sep 29 23:17:05 2004
From: juergen at fiedlerfamily.net (Juergen Fiedler)
Date: Wed Sep 29 22:17:15 2004
Subject: [mod_python] Request For Input
In-Reply-To: <1096499407.7486@dscpl.com.au>
References: <1096499407.7486@dscpl.com.au>
Message-ID: <415B6CA1.9000603@fiedlerfamily.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Graham Dumpleton wrote:
[...]
| Instead of exec'ing import, use mod_python.apache.import_module() method.

Using apache.import_module() does make that part far more readable.

Thanks
- --j
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://enigmail.mozdev.org

iD8DBQFBW2ygYFE+dpEf2hQRAmUKAKC5sdhnamboiR4h3Go1UhcAbtyBDACeO5/8
mcCQfFH1Gpq9NrODIgDy7dI=
=BhYf
-----END PGP SIGNATURE-----
From ale at unixmania.net  Thu Sep 30 18:35:08 2004
From: ale at unixmania.net (Alessandro de Manzano)
Date: Thu Sep 30 11:35:12 2004
Subject: [mod_python] HTTP digest auth
Message-ID: <20040930173508.A26123@libero.sunshine.ale>

Hello,

I'm succesfully using mod_python (2.7.10 with Apache 1.3.31 on FreeBSD
4.x) to run an handler with HTTP basic authentication.

Now I'ld try to implement also (or only, better) HTTP digest auth. for
more security (yes, I know it's not perfect either, a SSL/TLS layer
would probably be much better but for now I can't use it ;( )

I'm reading RFC 2617 but to not reinvent the wheel ;), anyone knows
some mod_python-based implementation, examples, etc. ?
Is not clear to me how this new auth method relates to mod_python's
Request object (as you may have guessed, I'm quite new to mod_python ;)
)

ANY hint, suggestion, URL, etc. is greatly appreciated! :)

Many thanks in advance!


-- 

bye!

Ale

From nicolas at lehuen.com  Thu Sep 30 19:25:23 2004
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Sep 30 12:25:27 2004
Subject: [mod_python] HTTP digest auth
In-Reply-To: <20040930173508.A26123@libero.sunshine.ale>
Message-ID: <200409301625.i8UGPPSW015302@modpython.org>

Hi,

Have a look at this recipe :

http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/302378

It seems to cover what you need.

Regards,

Nicolas 

> -----Message d'origine-----
> De : mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] De la part de 
> Alessandro de Manzano
> Envoy? : jeudi 30 septembre 2004 17:35
> ? : mod_python@modpython.org
> Objet : [mod_python] HTTP digest auth
> 
> Hello,
> 
> I'm succesfully using mod_python (2.7.10 with Apache 1.3.31 on FreeBSD
> 4.x) to run an handler with HTTP basic authentication.
> 
> Now I'ld try to implement also (or only, better) HTTP digest 
> auth. for more security (yes, I know it's not perfect either, 
> a SSL/TLS layer would probably be much better but for now I 
> can't use it ;( )
> 
> I'm reading RFC 2617 but to not reinvent the wheel ;), anyone 
> knows some mod_python-based implementation, examples, etc. ?
> Is not clear to me how this new auth method relates to 
> mod_python's Request object (as you may have guessed, I'm 
> quite new to mod_python ;)
> )
> 
> ANY hint, suggestion, URL, etc. is greatly appreciated! :)
> 
> Many thanks in advance!
> 
> 
> -- 
> 
> bye!
> 
> Ale
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


