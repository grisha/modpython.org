From matusis at yahoo.com  Fri Aug  1 22:47:25 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Fri Aug  1 22:47:46 2008
Subject: [mod_python] intermittent bug with MySQLdb
Message-ID: <014f01c8f44a$1a224570$4e66d050$@com>

I was stress- testing MySQL replication on my development setup and run into
a particularly nasty case of a hard-to-reproduced bug that I have
encountered earlier.

 

Under high concurrency, I sometimes get

 

build/bdist.linux-i686/egg/MySQLdb/connections.py:

OperationalError: (2003, "Can't connect to MySQL server on ''10.18.0.2 (4)")

 

 

Here (4) stangs for:

 

#perror 4

OS error code   4:  Interrupted system call

 

I am using apache 2.2.6 with worker MPM , python 2.4.4 and mod_python 3.3.1.

 

10.18.0.2 is a remote DB test server.

I upgraded MySQLdb adapter from 1.2.0 to 1.2.2 and got the same error with
both versions. The adapters are compiled with 

mysqlclient_r , which is supposed to be thread-safe.

 

Then, I pointed MySQL connections to  localhost, which runs an identical
copy of the same database.

 

To get errors on localhost, I had to increase the request rate by about 10x
(no errors at all otherwise), and I got  

OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' (4)")

127.0.0.1 is my development machine, and I have never seen these errors
before, until I ran this stress test today, bringing the machine to load
average 8.0. 

 

127.0.0.1 and 10.18.0.2 are two different machines, with different kernels
and even different MySQL versions, so it is the  client machine that is a
problem.

 

I have written a single-threaded stand-alone python loop, that simply
connects to the DB on the remote server 10.18.0.2 and executes "SELECT 1". I
have run several of these loops concurrently each doing about 10000
iterations, and they never gave a connection error.

 

MySQLdb README says:

        MySQLdb is an interface to the popular MySQL_ database server for

        Python.  The design goals are

        - Thread-safety

        - Thread-friendliness (threads will not block each other)

 

So my guess is that this is a thread-safety problem having to do with
mod_python.

 

I now recall that I have seen the problem earlier: 

I have several identically configured production  web servers connected to a
single DB server. I have seen these errors infrequently on 32bit webservers,
but extremely rarely or almost never on 64bit webservers.   I since phased
out 32bit web servers to serve static files only, so I do not have this data
anymore.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080801/0ce4a905/attachment.html
From brianz at gmail.com  Mon Aug  4 04:05:09 2008
From: brianz at gmail.com (Brian Zambrano)
Date: Mon Aug  4 04:05:11 2008
Subject: [mod_python] PicklingError: Can't pickle <type 'mp_request'>
Message-ID: <5db256250808040105n56977197y6b0313068e986abe@mail.gmail.com>

Hi there,

I'm getting an odd pickling error from mod_python, apparently.  I'm a django
site with Apache 2.2.8 and mod_python 3.3.1 on Fedora 9.

Any assistance or clues into this would be greatly appreciated.....I'm a
mod_python newb and some quick searches were unfruitful.  I assume
mp_request is a mod_python request object and there is something in there
that pickle doesn't like?

Thanks,
BZ


Phase:          'PythonHandler'
Handler:        'django.core.handlers.modpython'

Traceback (most recent call last):

 File "/usr/lib64/python2.5/site-packages/mod_python/importer.py", line
1537, in HandlerDispatch
   default=default_handler, arg=req, silent=hlist.silent)
 File "/usr/lib64/python2.5/site-packages/mod_python/importer.py", line
1229, in _process_target
   result = _execute_target(config, req, object, arg)
 File "/usr/lib64/python2.5/site-packages/mod_python/importer.py", line
1128, in _execute_target
   result = object(arg)
 File "/usr/lib/python2.5/site-packages/django/core/handlers/modpython.py",
line 211, in handler
   return ModPythonHandler()(req)
 File "/usr/lib/python2.5/site-packages/django/core/handlers/modpython.py",
line 188, in __call__
   response = middleware_method(request, response)
 File
"/usr/lib/python2.5/site-packages/django/contrib/sessions/middleware.py",
line 33, in process_response
   request.session.save()
 File
"/usr/lib/python2.5/site-packages/django/contrib/sessions/backends/db.py",
line 42, in save
   session_data = self.encode(self._session),
 File
"/usr/lib/python2.5/site-packages/django/contrib/sessions/backends/base.py",
line 75, in encode
   pickled = pickle.dumps(session_dict, pickle.HIGHEST_PROTOCOL)

PicklingError: Can't pickle <type 'mp_request'>: attribute lookup
__builtin__.mp_request failed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080804/b5da1a23/attachment.html
From bharathv6.project at gmail.com  Mon Aug  4 08:41:25 2008
From: bharathv6.project at gmail.com (bharath venkatesh)
Date: Mon Aug  4 08:41:29 2008
Subject: [mod_python] how to use pythonImport ?
Message-ID: <2613171a0808040541o26002a30m8f1870c2b7e4118c@mail.gmail.com>

hi all ,
           I learn that pythonimport directory tells apache to import a
module when apache starts so i tried to import a module by placing the
pythonimport directive  in server configuration file .
like this:
PythonImport   /home/bharath/module.py    /usr/bin/python2.5

this does not report any error when i restart the server  unless i specify
wrong path to the module

but how to use the module imported by PythonImport module

if i do import module in my handler i can't get a import error saying that
no module as such
can anyone tell me how to use the module imported using pythonimport
directive
and also if the module that is imported by pythonimport is changed will
apache automatically reimport it ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080804/9c97d68b/attachment.html
From rrymaszewski at contentforces.pl  Mon Aug  4 09:41:38 2008
From: rrymaszewski at contentforces.pl (=?UTF-8?Q?Rados=C5=82aw_Rymaszewski?=)
Date: Mon Aug  4 09:41:44 2008
Subject: [mod_python] Proxy + Tomcat filter problems
In-Reply-To: <88e286470804170516o3d4ff0c5l4b2a2c9dc5bab180@mail.gmail.com>
References: <4834c71e0804170320y765408d4r7c93efe9eb3f4545@mail.gmail.com>
	<88e286470804170516o3d4ff0c5l4b2a2c9dc5bab180@mail.gmail.com>
Message-ID: <4834c71e0808040641q1d94717dqf1530d65e233ca24@mail.gmail.com>

Hello

I was trying to find out solution for my problem but there were no
perfect answers in google so I would like to ask You.
I want to check if session is created by FileSession because of old
session expirated or new user with new session.
I checked function is_new(), but it return 1 in both cases. Is there
any solution for it?
Maybe it could be good to add information in new session when old
session expired?

regards
-- 
Rados?aw Rymaszewski

From rrymaszewski at contentforces.pl  Mon Aug  4 09:43:38 2008
From: rrymaszewski at contentforces.pl (=?UTF-8?Q?Rados=C5=82aw_Rymaszewski?=)
Date: Mon Aug  4 09:43:43 2008
Subject: [mod_python] How to check if session is created because of old
	session expired?
Message-ID: <4834c71e0808040643m1f41ffa1t8a900c21a7fb4fef@mail.gmail.com>

Hello

I was trying to find out solution for my problem but there were no
perfect answers in google so I would like to ask You.
I want to check if session is created by FileSession because of old
session expired or new user with new session.
I checked function is_new(), but it return 1 in both cases. Is there
any solution for it?
Maybe it could be good to add information in new session when old
session expired?

regards
--
Rados?aw Rymaszewski

From brianz at gmail.com  Mon Aug  4 13:42:09 2008
From: brianz at gmail.com (Brian Zambrano)
Date: Mon Aug  4 13:42:12 2008
Subject: [mod_python] Re: PicklingError: Can't pickle <type 'mp_request'>
In-Reply-To: <5db256250808040105n56977197y6b0313068e986abe@mail.gmail.com>
References: <5db256250808040105n56977197y6b0313068e986abe@mail.gmail.com>
Message-ID: <5db256250808041042x1b320569u55a09c84ebd74ace@mail.gmail.com>

Alright, this was completely me saving something I shouldn't have been in
the django session....which was the request object itself.  Probably a
circular reference thing?  Anyway, it was working with the django dev server
but not with apache/mod_python....after removing the request object from the
session container the error went away.

BZ


On Mon, Aug 4, 2008 at 1:05 AM, Brian Zambrano <brianz@gmail.com> wrote:

> Hi there,
>
> I'm getting an odd pickling error from mod_python, apparently.  I'm a
> django site with Apache 2.2.8 and mod_python 3.3.1 on Fedora 9.
>
> Any assistance or clues into this would be greatly appreciated.....I'm a
> mod_python newb and some quick searches were unfruitful.  I assume
> mp_request is a mod_python request object and there is something in there
> that pickle doesn't like?
>
> Thanks,
> BZ
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080804/301d4ca5/attachment.html
From ynj0qeh02 at sneakemail.com  Mon Aug  4 14:51:23 2008
From: ynj0qeh02 at sneakemail.com (Jason Carver)
Date: Mon Aug  4 14:51:29 2008
Subject: [mod_python] python exceptions cause Apache to crash
Message-ID: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>

Hi all,

I am having the craziest error, confirmed on both a LAMPython and WAMPython
setup: exceptions in mod_python are causing Apache to crash hard.  Even
stranger is that the exceptions have to meet a few specific conditions to
cause Apache to crash.

As best I can tell those conditions include:

   - raising an exception (this problem always goes away if the exception is
   commented out)
   - having the exception be inside an if-block that tests a dictionary (the
   problem goes away if I do something like """if 'hello' == 'hello': raise
   Exception('goodbye')""")
   - catching the exception and logging it using the python built-in
   logging.exception(e) (the problem goes away if I comment out the logger)

Apache does not write anything to its error.log, so it was a bit of an
adventure to discover all these elements.

Any ideas?

Cheers,
Jason
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080804/9d1ebbe0/attachment.html
From ynj0qeh02 at sneakemail.com  Mon Aug  4 16:55:26 2008
From: ynj0qeh02 at sneakemail.com (Jason Carver)
Date: Mon Aug  4 16:55:32 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
Message-ID: <85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>

Here is code that consistently crashes Apache for me:

import logging

def index(req):
    """Handles all Browser Requests"""
    try:
        reqHandler = logging.StreamHandler(req)
        logging.getLogger('').addHandler(reqHandler)
        if req.form.has_key('action'):
            raise Exception('Goodbye Apache')
    except Exception, e:
        logging.exception('I crash')
        raise

Now just go to the site with /?action=dosomething and it will crash

Removing the if statement, the exception, or the logger are all ways of
alleviating the crash, but none of them should be necessary.

Cheers,
Jason

On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver <ynj0qeh02@sneakemail.com>wrote:

> Hi all,
>
> I am having the craziest error, confirmed on both a LAMPython and WAMPython
> setup: exceptions in mod_python are causing Apache to crash hard.  Even
> stranger is that the exceptions have to meet a few specific conditions to
> cause Apache to crash.
>
> As best I can tell those conditions include:
>
>    - raising an exception (this problem always goes away if the exception
>    is commented out)
>    - having the exception be inside an if-block that tests a dictionary
>    (the problem goes away if I do something like """if 'hello' == 'hello':
>    raise Exception('goodbye')""")
>    - catching the exception and logging it using the python built-in
>    logging.exception(e) (the problem goes away if I comment out the logger)
>
> Apache does not write anything to its error.log, so it was a bit of an
> adventure to discover all these elements.
>
> Any ideas?
>
> Cheers,
> Jason
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080804/0f8fc167/attachment.html
From remember.pol at gmail.com  Mon Aug  4 18:28:56 2008
From: remember.pol at gmail.com (.)
Date: Mon Aug  4 18:29:02 2008
Subject: [mod_python] line continuned operator...\
Message-ID: <852ca5d0808041528t4b77f611u9ef833d0530388b2@mail.gmail.com>

Well, I'm curious as to whether anyone could please properly explain
this to me ...

Any time I end a line in a .psp (mod_python) file with a single
backslash, this character is not rendered in the final HTML when the
page is requested through the HTTPD (Apache)..

If the backslash is placed anywhere other than as the extreme last
character on a line, then it is rendered as expected.

In order to have the backslash rendered at the end of a .psp line it
actually needs to be escaped by proceeding it with another backslash.

Note, this is _not_ within a code-delimited block (<% %>).

Also, not only is it not rendered but it actually results in the
newline following the backslash to be removed, resulting in the two
rendered HTML lines to actually be one.

I find this strange because in a sense the operator is functioning
``as defined''... but under what scope?  Simply because I have it in a
.psp file?

This doesn't happen in .php or .html files. And again I need to
reiterate this is _NOT_ within a python <% %> block.

Finally, this seems to be the only existing escapable character.

I tried placing \t and \n in the file (and yes, even right at the
extreme end of a line), and they simply show up as \t and \n in the
rendered HTML. (Not the actual ASCII character equivalents)

Any ideas?
From graham.dumpleton at gmail.com  Mon Aug  4 18:53:24 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 18:53:27 2008
Subject: [mod_python] How to check if session is created because of old
	session expired?
In-Reply-To: <4834c71e0808040643m1f41ffa1t8a900c21a7fb4fef@mail.gmail.com>
References: <4834c71e0808040643m1f41ffa1t8a900c21a7fb4fef@mail.gmail.com>
Message-ID: <88e286470808041553u2d54d62dw2ee933a6379d6ec7@mail.gmail.com>

2008/8/4 Rados?aw Rymaszewski <rrymaszewski@contentforces.pl>:
> Hello
>
> I was trying to find out solution for my problem but there were no
> perfect answers in google so I would like to ask You.
> I want to check if session is created by FileSession because of old
> session expired or new user with new session.
> I checked function is_new(), but it return 1 in both cases. Is there
> any solution for it?

No.

> Maybe it could be good to add information in new session when old
> session expired?

And how is it supposed to do that without keeping forever a record of
all old sessions?

Graham

From graham.dumpleton at gmail.com  Mon Aug  4 19:05:43 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 19:05:45 2008
Subject: [mod_python] how to use pythonImport ?
In-Reply-To: <2613171a0808040541o26002a30m8f1870c2b7e4118c@mail.gmail.com>
References: <2613171a0808040541o26002a30m8f1870c2b7e4118c@mail.gmail.com>
Message-ID: <88e286470808041605r62408135j737d5a4905de0064@mail.gmail.com>

2008/8/4 bharath venkatesh <bharathv6.project@gmail.com>:
> hi all ,
>            I learn that pythonimport directory tells apache to import a
> module when apache starts so i tried to import a module by placing the
> pythonimport directive  in server configuration file .
> like this:
> PythonImport   /home/bharath/module.py    /usr/bin/python2.5

As I believe I asked you before, why are you specifying interpreter
name as '/usr/bin/python2.5'. This isn't meant to be a path to the
'python' executable, it is just a name which has meaning within
mod_python itself. If you are going to use PythonImport, you are
likely going to also need PythonInterpreter so you can force which
interpreter your application is run in. Otherwise, you have to work
out what interpreter your application is running in by default and use
that name with PythonImport. Have you application dump out value of
req.interpreter to work it out.

> this does not report any error when i restart the server  unless i specify
> wrong path to the module

If it doesn't report an error, isn't that good, it means it probably worked.

> but how to use the module imported by PythonImport module

What do you mean by use it? It is just a facility to preload a Python
module at process startup. Yes it can do work as a side effect by
having executable code at global scope in that module, but if that
code is something that can fail, you really need a way for a specific
request to retrigger same code if some initialisation not complete,
otherwise only way to recover is restart Apache again.

> if i do import module in my handler i can't get a import error saying that
> no module as such
> can anyone tell me how to use the module imported using pythonimport
> directive

Small, self contained code example of what you are doing would help.
The exact error messages from Apache error logs would also help. It is
hard to tell you how to do something if you haven't explained what you
have tried so far and are complaining doesn't work.

> and also if the module that is imported by pythonimport is changed will
> apache automatically reimport it ?

As directed in PythonImport documentation, read about import_module() in:

  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

BTW, please ensure you reply-all to list and stop replying just to me.
I ignore such mails if people consistently do that.

Graham
From graham.dumpleton at gmail.com  Mon Aug  4 19:23:05 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 19:23:09 2008
Subject: [mod_python] line continuned operator...\
In-Reply-To: <852ca5d0808041528t4b77f611u9ef833d0530388b2@mail.gmail.com>
References: <852ca5d0808041528t4b77f611u9ef833d0530388b2@mail.gmail.com>
Message-ID: <88e286470808041623l27d35bc2y3db0c5ca2c2d3ba0@mail.gmail.com>

2008/8/5 . <remember.pol@gmail.com>:
> Well, I'm curious as to whether anyone could please properly explain
> this to me ...
>
> Any time I end a line in a .psp (mod_python) file with a single
> backslash, this character is not rendered in the final HTML when the
> page is requested through the HTTPD (Apache)..
>
> If the backslash is placed anywhere other than as the extreme last
> character on a line, then it is rendered as expected.
>
> In order to have the backslash rendered at the end of a .psp line it
> actually needs to be escaped by proceeding it with another backslash.
>
> Note, this is _not_ within a code-delimited block (<% %>).
>
> Also, not only is it not rendered but it actually results in the
> newline following the backslash to be removed, resulting in the two
> rendered HTML lines to actually be one.
>
> I find this strange because in a sense the operator is functioning
> ``as defined''... but under what scope?  Simply because I have it in a
> .psp file?
>
> This doesn't happen in .php or .html files. And again I need to
> reiterate this is _NOT_ within a python <% %> block.
>
> Finally, this seems to be the only existing escapable character.
>
> I tried placing \t and \n in the file (and yes, even right at the
> extreme end of a line), and they simply show up as \t and \n in the
> rendered HTML. (Not the actual ASCII character equivalents)
>
> Any ideas?

Enable PythonDebug and .psp_ extension and look at generated source
code. Because Python code is being generated, what is probably being
produced is:

  """dsfdsaasasfd\
asdasdfasfd"""

Python is then interpreting it as line continuation character.

Details of line continuation in:

  http://www.network-theory.co.uk/docs/pytut/Strings.html

Other than that, can't find anything in code which is specifically
dealing with backslash.

Graham
From graham.dumpleton at gmail.com  Mon Aug  4 19:28:08 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 19:28:10 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
Message-ID: <88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>

What operating system? What version of Python? What version of mod_python?

What startup messages for mod_python are in the Apache error log?

What is the mod_python configuration you have in Apache configuration files?

Specifically, are you setting PythonPath directive in really strange ways?

Does it happen if you don't use the 'logging' module?

Graham

2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
> Here is code that consistently crashes Apache for me:
>
> import logging
>
> def index(req):
>     """Handles all Browser Requests"""
>     try:
>         reqHandler = logging.StreamHandler(req)
>         logging.getLogger('').addHandler(reqHandler)
>         if req.form.has_key('action'):
>             raise Exception('Goodbye Apache')
>     except Exception, e:
>         logging.exception('I crash')
>         raise
>
> Now just go to the site with /?action=dosomething and it will crash
>
> Removing the if statement, the exception, or the logger are all ways of
> alleviating the crash, but none of them should be necessary.
>
> Cheers,
> Jason
>
> On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver <ynj0qeh02@sneakemail.com>
> wrote:
>>
>> Hi all,
>>
>> I am having the craziest error, confirmed on both a LAMPython and
>> WAMPython setup: exceptions in mod_python are causing Apache to crash hard.
>> Even stranger is that the exceptions have to meet a few specific conditions
>> to cause Apache to crash.
>>
>> As best I can tell those conditions include:
>>
>> raising an exception (this problem always goes away if the exception is
>> commented out)
>> having the exception be inside an if-block that tests a dictionary (the
>> problem goes away if I do something like """if 'hello' == 'hello': raise
>> Exception('goodbye')""")
>> catching the exception and logging it using the python built-in
>> logging.exception(e) (the problem goes away if I comment out the logger)
>>
>> Apache does not write anything to its error.log, so it was a bit of an
>> adventure to discover all these elements.
>>
>> Any ideas?
>>
>> Cheers,
>> Jason
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Mon Aug  4 21:18:19 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 21:18:22 2008
Subject: [mod_python] line continuned operator...\
In-Reply-To: <852ca5d0808041731nf706f78p998dd75ffbb6f549@mail.gmail.com>
References: <852ca5d0808041528t4b77f611u9ef833d0530388b2@mail.gmail.com>
	<88e286470808041623l27d35bc2y3db0c5ca2c2d3ba0@mail.gmail.com>
	<852ca5d0808041731nf706f78p998dd75ffbb6f549@mail.gmail.com>
Message-ID: <88e286470808041818he05d7bahf9fd529374c0199b@mail.gmail.com>

Bounced back to mailing list. Please use reply-all and keep followups on list.

2008/8/5  <remember.pol@gmail.com>:
> Ah.. I realized because the whole page is wrapped in a req.write.
> :)
>
> Thanks!
> Also, is there a way to replace string variables within a string
> literal in either Python or mod_python/psp functionality?
>
> It's done in PHP like so:
>
> $hi = 'hello';
> $my_str = '$hi world';
>
> whould would set $my_str to 'hello world'
>
> On 8/4/08, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>> 2008/8/5 . <remember.pol@gmail.com>:
>>> Well, I'm curious as to whether anyone could please properly explain
>>> this to me ...
>>>
>>> Any time I end a line in a .psp (mod_python) file with a single
>>> backslash, this character is not rendered in the final HTML when the
>>> page is requested through the HTTPD (Apache)..
>>>
>>> If the backslash is placed anywhere other than as the extreme last
>>> character on a line, then it is rendered as expected.
>>>
>>> In order to have the backslash rendered at the end of a .psp line it
>>> actually needs to be escaped by proceeding it with another backslash.
>>>
>>> Note, this is _not_ within a code-delimited block (<% %>).
>>>
>>> Also, not only is it not rendered but it actually results in the
>>> newline following the backslash to be removed, resulting in the two
>>> rendered HTML lines to actually be one.
>>>
>>> I find this strange because in a sense the operator is functioning
>>> ``as defined''... but under what scope?  Simply because I have it in a
>>> .psp file?
>>>
>>> This doesn't happen in .php or .html files. And again I need to
>>> reiterate this is _NOT_ within a python <% %> block.
>>>
>>> Finally, this seems to be the only existing escapable character.
>>>
>>> I tried placing \t and \n in the file (and yes, even right at the
>>> extreme end of a line), and they simply show up as \t and \n in the
>>> rendered HTML. (Not the actual ASCII character equivalents)
>>>
>>> Any ideas?
>>
>> Enable PythonDebug and .psp_ extension and look at generated source
>> code. Because Python code is being generated, what is probably being
>> produced is:
>>
>>   """dsfdsaasasfd\
>> asdasdfasfd"""
>>
>> Python is then interpreting it as line continuation character.
>>
>> Details of line continuation in:
>>
>>   http://www.network-theory.co.uk/docs/pytut/Strings.html
>>
>> Other than that, can't find anything in code which is specifically
>> dealing with backslash.
>>
>> Graham
>>
>
From graham.dumpleton at gmail.com  Mon Aug  4 21:21:28 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 21:21:29 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <19737-76735@sneakemail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
Message-ID: <88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>

2008/8/5  <ynj0qeh02@sneakemail.com>:
> Thanks for the quick reply!  Answers inline...
>
> On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
> graham.dumpleton-at-......... |public mailing list| <...> wrote:
>>
>> What operating system? What version of Python? What version of mod_python?
>
> I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
>
> I hacked the binary to use 2.5 on Windows, but the same problem is
> reproducible on Ubuntu 7.10 using the latest source from svn compiled with
> python 2.5.
>
>> What startup messages for mod_python are in the Apache error log?
>
>
> [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007 11:48:48
> [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process 27164
> [Mon Aug 04 20:03:22 2008] [error] python_init: Python version mismatch,
> expected '2.4.3', found '2.5'.

This is why it is probably breaking. Install mod_python compiled
against Python 2.5. The version you are using was compiled against
older version of Python.

Fix your installation and try again.

Do you get similar warnings on your other platform as well?

Graham

> [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable found
> 'C:\\xampp\\apache\\bin\\apache.exe'.
> [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being used
> 'C:\\Program
> Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
> [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session mutexes
> based on 0 max processes and 250 max threads.
>
>>
>>
>> What is the mod_python configuration you have in Apache configuration
>> files?
>
>
> PythonOption mod_python.mutex_directory "/pytmp"
> PythonOption mod_python.mutex_locks 8
>
> AliasMatch      ^/slique(.*)        'C:/Documents and Settings/Jason/My
> Documents/Coding/eclipse-workspace/slique-dev/src/$1'
>
> <Directory 'C:/Documents and Settings/Jason/My
> Documents/Coding/eclipse-workspace/slique-dev/src'>
>     Options Indexes ExecCGI FollowSymLinks MultiViews
>     AllowOverride All
>
>     AddHandler mod_python .py
>     PythonHandler mod_python.publisher
>     PythonDebug On
>     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
> Documents/Coding/eclipse-workspace/slique-dev/src']"
>
> </Directory>
>
>>
>>
>> Specifically, are you setting PythonPath directive in really strange ways?
>
> PythonPath is set this way
> PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
> Documents/Coding/eclipse-workspace/slique-dev/src']"
>
>>
>>
>> Does it happen if you don't use the 'logging' module?
>
> If I comment out logging.exception('I crash'), then the traceback prints to
> screen as expected.
>
>>
>> Graham
>>
>> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
>> > Here is code that consistently crashes Apache for me:
>> >
>> > import logging
>> >
>> > def index(req):
>> >     """Handles all Browser Requests"""
>> >     try:
>> >         reqHandler = logging.StreamHandler(req)
>> >         logging.getLogger('').addHandler(reqHandler)
>> >         if req.form.has_key('action'):
>> >             raise Exception('Goodbye Apache')
>> >     except Exception, e:
>> >         logging.exception('I crash')
>> >         raise
>> >
>> > Now just go to the site with /?action=dosomething and it will crash
>> >
>> > Removing the if statement, the exception, or the logger are all ways of
>> > alleviating the crash, but none of them should be necessary.
>> >
>> > Cheers,
>> > Jason
>> >
>> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver <ynj0qeh02@sneakemail.com>
>> > wrote:
>> >>
>> >> Hi all,
>> >>
>> >> I am having the craziest error, confirmed on both a LAMPython and
>> >> WAMPython setup: exceptions in mod_python are causing Apache to crash
>> >> hard.
>> >> Even stranger is that the exceptions have to meet a few specific
>> >> conditions
>> >> to cause Apache to crash.
>> >>
>> >> As best I can tell those conditions include:
>> >>
>> >> raising an exception (this problem always goes away if the exception is
>> >> commented out)
>> >> having the exception be inside an if-block that tests a dictionary (the
>> >> problem goes away if I do something like """if 'hello' == 'hello':
>> >> raise
>> >> Exception('goodbye')""")
>> >> catching the exception and logging it using the python built-in
>> >> logging.exception(e) (the problem goes away if I comment out the
>> >> logger)
>> >>
>> >> Apache does not write anything to its error.log, so it was a bit of an
>> >> adventure to discover all these elements.
>> >>
>> >> Any ideas?
>> >>
>> >> Cheers,
>> >> Jason
>> >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >
>> >
>
>
From graham.dumpleton at gmail.com  Mon Aug  4 21:44:20 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 21:44:23 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <30118-63458@sneakemail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
	<88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>
	<30118-63458@sneakemail.com>
Message-ID: <88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>

Please use reply-all and keep discussion on the list, don't reply just to me.

Have you tried uninstalling all versions of Python and mod_python
first and then install it? Ie., don't install when you have existing
versions on the system.

When installing packages, are you doing it as a user with
administrator privileges?

Graham

2008/8/5  <ynj0qeh02@sneakemail.com>:
> Unfortunately, when I tried to install the mod_python 3.3.1 for 2.5 I got
> this traceback:
> Traceback (most recent call last):
>   File "boot_com_servers.py", line 21, in <module>
>   File "C:\Python25\Lib\site-packages\pythoncom.py", line 3, in <module>
>     pywintypes.__import_pywin32_system_module__("pythoncom", globals())
>   File "C:\Python25\Lib\site-packages\win32\Lib\pywintypes.py", line 98, in
> __import_pywin32_system_module__
>     ('.dll', 'rb', imp.C_EXTENSION))
> ImportError: DLL load failed: The specified procedure could not be found.
>
> and when I try to start apache 2 anyway, it says "The requested operation
> has failed!"
>
> That's why I was using the version for 2.4.
>
> On Mon, Aug 4, 2008 at 9:21 PM, Graham Dumpleton
> graham.dumpleton-at-......... |public mailing list| <...> wrote:
>>
>> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>> > Thanks for the quick reply!  Answers inline...
>> >
>> > On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
>> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>> >>
>> >> What operating system? What version of Python? What version of
>> >> mod_python?
>> >
>> > I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
>> >
>> > I hacked the binary to use 2.5 on Windows, but the same problem is
>> > reproducible on Ubuntu 7.10 using the latest source from svn compiled
>> > with
>> > python 2.5.
>> >
>> >> What startup messages for mod_python are in the Apache error log?
>> >
>> >
>> > [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007 11:48:48
>> > [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process 27164
>> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python version mismatch,
>> > expected '2.4.3', found '2.5'.
>>
>> This is why it is probably breaking. Install mod_python compiled
>> against Python 2.5. The version you are using was compiled against
>> older version of Python.
>>
>> Fix your installation and try again.
>>
>> Do you get similar warnings on your other platform as well?
>>
>> Graham
>>
>> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable found
>> > 'C:\\xampp\\apache\\bin\\apache.exe'.
>> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being used
>> > 'C:\\Program
>> >
>> > Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
>> > [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session
>> > mutexes
>> > based on 0 max processes and 250 max threads.
>> >
>> >>
>> >>
>> >> What is the mod_python configuration you have in Apache configuration
>> >> files?
>> >
>> >
>> > PythonOption mod_python.mutex_directory "/pytmp"
>> > PythonOption mod_python.mutex_locks 8
>> >
>> > AliasMatch      ^/slique(.*)        'C:/Documents and Settings/Jason/My
>> > Documents/Coding/eclipse-workspace/slique-dev/src/$1'
>> >
>> > <Directory 'C:/Documents and Settings/Jason/My
>> > Documents/Coding/eclipse-workspace/slique-dev/src'>
>> >     Options Indexes ExecCGI FollowSymLinks MultiViews
>> >     AllowOverride All
>> >
>> >     AddHandler mod_python .py
>> >     PythonHandler mod_python.publisher
>> >     PythonDebug On
>> >     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >
>> > </Directory>
>> >
>> >>
>> >>
>> >> Specifically, are you setting PythonPath directive in really strange
>> >> ways?
>> >
>> > PythonPath is set this way
>> > PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >
>> >>
>> >>
>> >> Does it happen if you don't use the 'logging' module?
>> >
>> > If I comment out logging.exception('I crash'), then the traceback prints
>> > to
>> > screen as expected.
>> >
>> >>
>> >> Graham
>> >>
>> >> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
>> >> > Here is code that consistently crashes Apache for me:
>> >> >
>> >> > import logging
>> >> >
>> >> > def index(req):
>> >> >     """Handles all Browser Requests"""
>> >> >     try:
>> >> >         reqHandler = logging.StreamHandler(req)
>> >> >         logging.getLogger('').addHandler(reqHandler)
>> >> >         if req.form.has_key('action'):
>> >> >             raise Exception('Goodbye Apache')
>> >> >     except Exception, e:
>> >> >         logging.exception('I crash')
>> >> >         raise
>> >> >
>> >> > Now just go to the site with /?action=dosomething and it will crash
>> >> >
>> >> > Removing the if statement, the exception, or the logger are all ways
>> >> > of
>> >> > alleviating the crash, but none of them should be necessary.
>> >> >
>> >> > Cheers,
>> >> > Jason
>> >> >
>> >> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver
>> >> > <ynj0qeh02@sneakemail.com>
>> >> > wrote:
>> >> >>
>> >> >> Hi all,
>> >> >>
>> >> >> I am having the craziest error, confirmed on both a LAMPython and
>> >> >> WAMPython setup: exceptions in mod_python are causing Apache to
>> >> >> crash
>> >> >> hard.
>> >> >> Even stranger is that the exceptions have to meet a few specific
>> >> >> conditions
>> >> >> to cause Apache to crash.
>> >> >>
>> >> >> As best I can tell those conditions include:
>> >> >>
>> >> >> raising an exception (this problem always goes away if the exception
>> >> >> is
>> >> >> commented out)
>> >> >> having the exception be inside an if-block that tests a dictionary
>> >> >> (the
>> >> >> problem goes away if I do something like """if 'hello' == 'hello':
>> >> >> raise
>> >> >> Exception('goodbye')""")
>> >> >> catching the exception and logging it using the python built-in
>> >> >> logging.exception(e) (the problem goes away if I comment out the
>> >> >> logger)
>> >> >>
>> >> >> Apache does not write anything to its error.log, so it was a bit of
>> >> >> an
>> >> >> adventure to discover all these elements.
>> >> >>
>> >> >> Any ideas?
>> >> >>
>> >> >> Cheers,
>> >> >> Jason
>> >> >
>> >> > _______________________________________________
>> >> > Mod_python mailing list
>> >> > Mod_python@modpython.org
>> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >> >
>> >> >
>> >
>> >
>
>
From graham.dumpleton at gmail.com  Mon Aug  4 22:50:55 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug  4 22:50:58 2008
Subject: [mod_python] line continuned operator...\
In-Reply-To: <88e286470808041818he05d7bahf9fd529374c0199b@mail.gmail.com>
References: <852ca5d0808041528t4b77f611u9ef833d0530388b2@mail.gmail.com>
	<88e286470808041623l27d35bc2y3db0c5ca2c2d3ba0@mail.gmail.com>
	<852ca5d0808041731nf706f78p998dd75ffbb6f549@mail.gmail.com>
	<88e286470808041818he05d7bahf9fd529374c0199b@mail.gmail.com>
Message-ID: <88e286470808041950k366a8bc7uf8ae28e434a2383@mail.gmail.com>

2008/8/5 Graham Dumpleton <graham.dumpleton@gmail.com>:
> Bounced back to mailing list. Please use reply-all and keep followups on list.
>
> 2008/8/5  <remember.pol@gmail.com>:
>> Ah.. I realized because the whole page is wrapped in a req.write.
>> :)
>>
>> Thanks!
>> Also, is there a way to replace string variables within a string
>> literal in either Python or mod_python/psp functionality?
>>
>> It's done in PHP like so:
>>
>> $hi = 'hello';
>> $my_str = '$hi world';

You mean:

  hi = 'hello'
  my_str = '%s world' % hi

Graham

>> whould would set $my_str to 'hello world'
>>
>> On 8/4/08, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>>> 2008/8/5 . <remember.pol@gmail.com>:
>>>> Well, I'm curious as to whether anyone could please properly explain
>>>> this to me ...
>>>>
>>>> Any time I end a line in a .psp (mod_python) file with a single
>>>> backslash, this character is not rendered in the final HTML when the
>>>> page is requested through the HTTPD (Apache)..
>>>>
>>>> If the backslash is placed anywhere other than as the extreme last
>>>> character on a line, then it is rendered as expected.
>>>>
>>>> In order to have the backslash rendered at the end of a .psp line it
>>>> actually needs to be escaped by proceeding it with another backslash.
>>>>
>>>> Note, this is _not_ within a code-delimited block (<% %>).
>>>>
>>>> Also, not only is it not rendered but it actually results in the
>>>> newline following the backslash to be removed, resulting in the two
>>>> rendered HTML lines to actually be one.
>>>>
>>>> I find this strange because in a sense the operator is functioning
>>>> ``as defined''... but under what scope?  Simply because I have it in a
>>>> .psp file?
>>>>
>>>> This doesn't happen in .php or .html files. And again I need to
>>>> reiterate this is _NOT_ within a python <% %> block.
>>>>
>>>> Finally, this seems to be the only existing escapable character.
>>>>
>>>> I tried placing \t and \n in the file (and yes, even right at the
>>>> extreme end of a line), and they simply show up as \t and \n in the
>>>> rendered HTML. (Not the actual ASCII character equivalents)
>>>>
>>>> Any ideas?
>>>
>>> Enable PythonDebug and .psp_ extension and look at generated source
>>> code. Because Python code is being generated, what is probably being
>>> produced is:
>>>
>>>   """dsfdsaasasfd\
>>> asdasdfasfd"""
>>>
>>> Python is then interpreting it as line continuation character.
>>>
>>> Details of line continuation in:
>>>
>>>   http://www.network-theory.co.uk/docs/pytut/Strings.html
>>>
>>> Other than that, can't find anything in code which is specifically
>>> dealing with backslash.
>>>
>>> Graham
>>>
>>
>
From matusis at yahoo.com  Tue Aug  5 04:25:03 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Tue Aug  5 04:25:28 2008
Subject: [mod_python] intermittent bug with MySQLdb
In-Reply-To: <c70f1ac50808032124v15b4b64ei97ee99ff67e14ae7@mail.gmail.com>
References: <014f01c8f44a$1a224570$4e66d050$@com>
	<c70f1ac50808032124v15b4b64ei97ee99ff67e14ae7@mail.gmail.com>
Message-ID: <072101c8f6d4$c38f30a0$4aad91e0$@com>

One more interesting piece of evidence: when I connect to the DB on the same
physical machine were my web scripts are, I can reproduce this only when I
connect to 127.0.0.1. When I connect to localhost, I do not get the errors
at all. This is because 

http://dev.mysql.com/doc/refman/5.0/en/connecting.html

?For connections to localhost, MySQL programs attempt to connect to the
local server by using a Unix socket file. This occurs even if a --port or -P
option is given to specify a port number. To ensure that the client makes a
TCP/IP connection to the local server, use --host or -h to specify a
hostname value of 127.0.0.1?

This last thing makes me think it?s a networking problem as you suggest
?


From: Buck Golemon [mailto:workitharder@gmail.com] 
Sent: Sunday, August 03, 2008 9:24 PM
To: Alec Matusis
Subject: Re: [mod_python] intermittent bug with MySQLdb

Have you considered that this may be just a general problem of networking /
MySQL? That's my conclusion. I've gotten similar errors in my
high-concurrency applications (non mod-python) and to solve the problem,
wrote some code to re-try queryies on that error (among others) and wrapped
it around all my connections.

As a counter-argument (if you want one), try doing a similar stress test
using a completely different client (maybe perl?) and show that the error
does not occur under similar or higher loads.

--Buck
2008/8/1 Alec Matusis <matusis@yahoo.com>
I was stress- testing MySQL replication on my development setup and run into
a particularly nasty case of a hard-to-reproduced bug that I have
encountered earlier.
?
Under high concurrency, I sometimes get
?
build/bdist.linux-i686/egg/MySQLdb/connections.py:
OperationalError: (2003, "Can't connect to MySQL server on ''10.18.0.2 (4)")
?
?
Here (4) stangs for:
?
#perror 4
OS error code?? 4:? Interrupted system call
?
I am using apache 2.2.6 with worker MPM , python 2.4.4 and mod_python 3.3.1.
?
10.18.0.2 is a remote DB test server.
I upgraded MySQLdb adapter from 1.2.0 to 1.2.2 and got the same error with
both versions. The adapters are compiled with 
mysqlclient_r , which is supposed to be thread-safe.
?
Then, I pointed MySQL connections to ?localhost, which runs an identical
copy of the same database.
?
To get errors on localhost, I had to increase the request rate by about 10x
(no errors at all otherwise), and I got ?
OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' (4)")
127.0.0.1 is my development machine, and I have never seen these errors
before, until I ran this stress test today, bringing the machine to load
average 8.0. 
?
127.0.0.1 and 10.18.0.2 are two different machines, with different kernels
and even different MySQL versions, so it is the ?client machine that is a
problem.
?
I have written a single-threaded stand-alone python loop, that simply
connects to the DB on the remote server 10.18.0.2 and executes "SELECT 1". I
have run several of these loops concurrently each doing about 10000
iterations, and they never gave a connection error.
?
MySQLdb README says:
??????? MySQLdb is an interface to the popular MySQL_ database server for
??????? Python.? The design goals are
??????? - Thread-safety
??????? - Thread-friendliness (threads will not block each other)
?
So my guess is that this is a thread-safety problem having to do with
mod_python.
?
I now recall that I have seen the problem earlier: 
I have several identically configured production ?web servers connected to a
single DB server. I have seen these errors infrequently on 32bit webservers,
but extremely rarely or almost never on 64bit webservers. ??I since phased
out 32bit web servers to serve static files only, so I do not have this data
anymore.

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



-- 
Buck Golemon
AIM: bukzor
Cell: (480) 272-1153


From rrymaszewski at contentforces.pl  Tue Aug  5 04:42:39 2008
From: rrymaszewski at contentforces.pl (=?UTF-8?Q?Rados=C5=82aw_Rymaszewski?=)
Date: Tue Aug  5 04:42:44 2008
Subject: [mod_python] How to check if session is created because of old
	session expired?
In-Reply-To: <88e286470808041553u2d54d62dw2ee933a6379d6ec7@mail.gmail.com>
References: <4834c71e0808040643m1f41ffa1t8a900c21a7fb4fef@mail.gmail.com>
	<88e286470808041553u2d54d62dw2ee933a6379d6ec7@mail.gmail.com>
Message-ID: <4834c71e0808050142r47e7831fpdd10e08bc08feed5@mail.gmail.com>

>> Maybe it could be good to add information in new session when old
>> session expired?
>
> And how is it supposed to do that without keeping forever a record of
> all old sessions?

In my opinion if there is flag (1) for new session so if You are
checking old one and it's expired then You can use flag (e.g. 2)
instead of (1).

Function is_new() for this two flags will return True in both cases so
there should not be problem with it  (in almost all cases ;-).

You don't need to keep this information forever, because You need to
check this only once. You can delete this information similar to
is_new flag is deleted.

Of course old sessions could be marked to be clean up.

Please correct me if I am wrong, because I didn't check how works
creating new session after old session expired.

regards
-- 
Radek
From matusis at yahoo.com  Tue Aug  5 04:55:41 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Tue Aug  5 04:56:08 2008
Subject: [mod_python] intermittent bug with MySQLdb
References: <014f01c8f44a$1a224570$4e66d050$@com>
	<c70f1ac50808032124v15b4b64ei97ee99ff67e14ae7@mail.gmail.com> 
Message-ID: <074601c8f6d9$0bc16920$23443b60$@com>

PS.  

Found Another way to get rid of the error:

I had 
MaxRequestsPerChild 1 
since this is my dev server and I wanted to be able to edit mod_python
scripts without restarting apache.
Increasing it to 10 does not fix it.
Increasing to 100 makes it very rare.
Increasing it to 20000 apparently fixes the problem (maybe I did not wait
long enough) 


Perhaps what happens is that while the child is waiting on the MySQL
connection, it gets EINTR event from the parent that is ready to die,
because more requests came in, and so it dies before the child?s MySQL
connection is complete?

> -----Original Message-----
> From: Alec Matusis [mailto:matusis@yahoo.com]
> Sent: Tuesday, August 05, 2008 1:25 AM
> To: 'Buck Golemon'
> Cc: 'mod_python@modpython.org'
> Subject: RE: [mod_python] intermittent bug with MySQLdb
> 
> One more interesting piece of evidence: when I connect to the DB on the
> same physical machine were my web scripts are, I can reproduce this
> only when I connect to 127.0.0.1. When I connect to localhost, I do not
> get the errors at all. This is because
> 
> http://dev.mysql.com/doc/refman/5.0/en/connecting.html
> 
> ?For connections to localhost, MySQL programs attempt to connect to the
> local server by using a Unix socket file. This occurs even if a --port
> or -P option is given to specify a port number. To ensure that the
> client makes a TCP/IP connection to the local server, use --host or -h
> to specify a hostname value of 127.0.0.1?
> 
> This last thing makes me think it?s a networking problem as you
> suggest
?
> 
> 
> From: Buck Golemon [mailto:workitharder@gmail.com]
> Sent: Sunday, August 03, 2008 9:24 PM
> To: Alec Matusis
> Subject: Re: [mod_python] intermittent bug with MySQLdb
> 
> Have you considered that this may be just a general problem of
> networking / MySQL? That's my conclusion. I've gotten similar errors in
> my high-concurrency applications (non mod-python) and to solve the
> problem, wrote some code to re-try queryies on that error (among
> others) and wrapped it around all my connections.
> 
> As a counter-argument (if you want one), try doing a similar stress
> test using a completely different client (maybe perl?) and show that
> the error does not occur under similar or higher loads.
> 
> --Buck
> 2008/8/1 Alec Matusis <matusis@yahoo.com>
> I was stress- testing MySQL replication on my development setup and run
> into a particularly nasty case of a hard-to-reproduced bug that I have
> encountered earlier.
> 
> Under high concurrency, I sometimes get
> 
> build/bdist.linux-i686/egg/MySQLdb/connections.py:
> OperationalError: (2003, "Can't connect to MySQL server on ''10.18.0.2
> (4)")
> 
> 
> Here (4) stangs for:
> 
> #perror 4
> OS error code?? 4:? Interrupted system call
> 
> I am using apache 2.2.6 with worker MPM , python 2.4.4 and mod_python
> 3.3.1.
> 
> 10.18.0.2 is a remote DB test server.
> I upgraded MySQLdb adapter from 1.2.0 to 1.2.2 and got the same error
> with both versions. The adapters are compiled with
> mysqlclient_r , which is supposed to be thread-safe.
> 
> Then, I pointed MySQL connections to ?localhost, which runs an
> identical copy of the same database.
> 
> To get errors on localhost, I had to increase the request rate by about
> 10x (no errors at all otherwise), and I got
> OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'
> (4)")
> 127.0.0.1 is my development machine, and I have never seen these errors
> before, until I ran this stress test today, bringing the machine to
> load average 8.0.
> 
> 127.0.0.1 and 10.18.0.2 are two different machines, with different
> kernels and even different MySQL versions, so it is the ?client machine
> that is a problem.
> 
> I have written a single-threaded stand-alone python loop, that simply
> connects to the DB on the remote server 10.18.0.2 and executes "SELECT
> 1". I have run several of these loops concurrently each doing about
> 10000 iterations, and they never gave a connection error.
> 
> MySQLdb README says:
> ??????? MySQLdb is an interface to the popular MySQL_ database server
> for
> ??????? Python.? The design goals are
> ??????? - Thread-safety
> ??????? - Thread-friendliness (threads will not block each other)
> 
> So my guess is that this is a thread-safety problem having to do with
> mod_python.
> 
> I now recall that I have seen the problem earlier:
> I have several identically configured production ?web servers connected
> to a single DB server. I have seen these errors infrequently on 32bit
> webservers, but extremely rarely or almost never on 64bit webservers.
> ??I since phased out 32bit web servers to serve static files only, so I
> do not have this data anymore.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
> --
> Buck Golemon
> AIM: bukzor
> Cell: (480) 272-1153


From bharathv6.project at gmail.com  Tue Aug  5 05:18:51 2008
From: bharathv6.project at gmail.com (bharath venkatesh)
Date: Tue Aug  5 05:18:55 2008
Subject: [mod_python] importing a configuration module
In-Reply-To: <88e286470807280400x72a25b46k169caab033c1e842@mail.gmail.com>
References: <2613171a0807280329v191dbf42g8283529dc492edaa@mail.gmail.com>
	<2613171a0807280331p7b232c1dqa10f50e343d263cb@mail.gmail.com>
	<88e286470807280400x72a25b46k169caab033c1e842@mail.gmail.com>
Message-ID: <2613171a0808050218y5bd82b2fmfb2e46ff70b33a07@mail.gmail.com>

thanks for the help and link .. it was very helpful ..
but how to do initializations in mod-python for example connecting to
database etc ..

and in that case how does apache imports standard python lib modules only
once in the starting
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080805/bb754797/attachment.html
From graham.dumpleton at gmail.com  Tue Aug  5 06:40:09 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug  5 06:40:12 2008
Subject: [mod_python] How to check if session is created because of old
	session expired?
In-Reply-To: <4834c71e0808050142r47e7831fpdd10e08bc08feed5@mail.gmail.com>
References: <4834c71e0808040643m1f41ffa1t8a900c21a7fb4fef@mail.gmail.com>
	<88e286470808041553u2d54d62dw2ee933a6379d6ec7@mail.gmail.com>
	<4834c71e0808050142r47e7831fpdd10e08bc08feed5@mail.gmail.com>
Message-ID: <88e286470808050340l4f00ad98sd21d1586d92d0262@mail.gmail.com>

2008/8/5 Rados?aw Rymaszewski <rrymaszewski@contentforces.pl>:
>>> Maybe it could be good to add information in new session when old
>>> session expired?
>>
>> And how is it supposed to do that without keeping forever a record of
>> all old sessions?
>
> In my opinion if there is flag (1) for new session so if You are
> checking old one and it's expired then You can use flag (e.g. 2)
> instead of (1).
>
> Function is_new() for this two flags will return True in both cases so
> there should not be problem with it  (in almost all cases ;-).
>
> You don't need to keep this information forever, because You need to
> check this only once. You can delete this information similar to
> is_new flag is deleted.
>
> Of course old sessions could be marked to be clean up.
>
> Please correct me if I am wrong, because I didn't check how works
> creating new session after old session expired.

But as I said, unless you keep details of the session in the session
database, you will not know if it is an expired session. Thus the
session database would bloat out with old crap. Yes you could have two
levels of expiry, that is, session expiry time and the session data
expiry/purge timeout, but you still could be hitting the second case.
Thus your application has to cope some how with loss of session
information anyway, so why not just deal with it.

Graham

Graham

From graham.dumpleton at gmail.com  Tue Aug  5 06:43:20 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug  5 06:43:23 2008
Subject: [mod_python] importing a configuration module
In-Reply-To: <2613171a0808050218y5bd82b2fmfb2e46ff70b33a07@mail.gmail.com>
References: <2613171a0807280329v191dbf42g8283529dc492edaa@mail.gmail.com>
	<2613171a0807280331p7b232c1dqa10f50e343d263cb@mail.gmail.com>
	<88e286470807280400x72a25b46k169caab033c1e842@mail.gmail.com>
	<2613171a0808050218y5bd82b2fmfb2e46ff70b33a07@mail.gmail.com>
Message-ID: <88e286470808050343he1bcca9ufcb3907237eb9606@mail.gmail.com>

2008/8/5 bharath venkatesh <bharathv6.project@gmail.com>:
> thanks for the help and link .. it was very helpful ..
> but how to do initializations in mod-python for example connecting to
> database etc ..
>
> and in that case how does apache imports standard python lib modules only
> once in the starting

See response to question about PythonImport. Just put your code at
global scope in the module. In other words, just like a normal module.
This is nothing special to mod_python, but a standard Python thing.

Graham
From ynj0qeh02 at sneakemail.com  Tue Aug  5 12:59:04 2008
From: ynj0qeh02 at sneakemail.com (Jason Carver)
Date: Tue Aug  5 12:59:11 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
	<88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>
	<30118-63458@sneakemail.com>
	<88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>
Message-ID: <85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>

If I try to install mod_python without python 2.5 installed, mod_python
refuses, so I assume you mean uninstall all versions of python, then install
python 2.5.2, then mod_python-3.3.1.win32-py2.5-Apache2.2.exe

I did that, with no changes.  I get the same Traceback during mod_python
install and I can still reproduce the crash reliably.

Bug requirements update: It does not matter if I test the req object, it
only matters if the req object has something set.  So these are the new
requirements to reproduce the bug

   - use built in logging module
   - raise Exception
   - call page with variables (ie~ http://localhost/index.py?action=boom)
   - use the following code:

import logging

def index(req):
    """Handles all Browser Requests"""
    try:
        logging.getLogger('').addHandler( logging.StreamHandler(req) )

        raise Exception('Goodbye Apache')

    except Exception, e:
        logging.exception('I crash')
        raise

So there seems to be some kind of three way interaction between the logging
module, the apache req module, and exception handling.  If any one of the
three are not involved, apache does not crash...

For now I can use a home-grown logger to get around the bug, but I hate to
build code that already exists and make future developers have to learn my
logger instead of the built-in one.

Cheers,
Jason

On Mon, Aug 4, 2008 at 9:44 PM, Graham Dumpleton
graham.dumpleton-at-gmail.com |public mailing list| <
a9ghk53mp50t@sneakemail.com> wrote:

> Please use reply-all and keep discussion on the list, don't reply just to
> me.
>
> Have you tried uninstalling all versions of Python and mod_python
> first and then install it? Ie., don't install when you have existing
> versions on the system.
>
> When installing packages, are you doing it as a user with
> administrator privileges?
>
> Graham
>
> 2008/8/5  <ynj0qeh02@sneakemail.com>:
> > Unfortunately, when I tried to install the mod_python 3.3.1 for 2.5 I got
> > this traceback:
> > Traceback (most recent call last):
> >   File "boot_com_servers.py", line 21, in <module>
> >   File "C:\Python25\Lib\site-packages\pythoncom.py", line 3, in <module>
> >     pywintypes.__import_pywin32_system_module__("pythoncom", globals())
> >   File "C:\Python25\Lib\site-packages\win32\Lib\pywintypes.py", line 98,
> in
> > __import_pywin32_system_module__
> >     ('.dll', 'rb', imp.C_EXTENSION))
> > ImportError: DLL load failed: The specified procedure could not be found.
> >
> > and when I try to start apache 2 anyway, it says "The requested operation
> > has failed!"
> >
> > That's why I was using the version for 2.4.
> >
> > On Mon, Aug 4, 2008 at 9:21 PM, Graham Dumpleton
> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
> >>
> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
> >> > Thanks for the quick reply!  Answers inline...
> >> >
> >> > On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
> >> >>
> >> >> What operating system? What version of Python? What version of
> >> >> mod_python?
> >> >
> >> > I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
> >> >
> >> > I hacked the binary to use 2.5 on Windows, but the same problem is
> >> > reproducible on Ubuntu 7.10 using the latest source from svn compiled
> >> > with
> >> > python 2.5.
> >> >
> >> >> What startup messages for mod_python are in the Apache error log?
> >> >
> >> >
> >> > [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007 11:48:48
> >> > [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process
> 27164
> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python version
> mismatch,
> >> > expected '2.4.3', found '2.5'.
> >>
> >> This is why it is probably breaking. Install mod_python compiled
> >> against Python 2.5. The version you are using was compiled against
> >> older version of Python.
> >>
> >> Fix your installation and try again.
> >>
> >> Do you get similar warnings on your other platform as well?
> >>
> >> Graham
> >>
> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable
> found
> >> > 'C:\\xampp\\apache\\bin\\apache.exe'.
> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being used
> >> > 'C:\\Program
> >> >
> >> >
> Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
> >> > [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session
> >> > mutexes
> >> > based on 0 max processes and 250 max threads.
> >> >
> >> >>
> >> >>
> >> >> What is the mod_python configuration you have in Apache configuration
> >> >> files?
> >> >
> >> >
> >> > PythonOption mod_python.mutex_directory "/pytmp"
> >> > PythonOption mod_python.mutex_locks 8
> >> >
> >> > AliasMatch      ^/slique(.*)        'C:/Documents and
> Settings/Jason/My
> >> > Documents/Coding/eclipse-workspace/slique-dev/src/$1'
> >> >
> >> > <Directory 'C:/Documents and Settings/Jason/My
> >> > Documents/Coding/eclipse-workspace/slique-dev/src'>
> >> >     Options Indexes ExecCGI FollowSymLinks MultiViews
> >> >     AllowOverride All
> >> >
> >> >     AddHandler mod_python .py
> >> >     PythonHandler mod_python.publisher
> >> >     PythonDebug On
> >> >     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
> >> >
> >> > </Directory>
> >> >
> >> >>
> >> >>
> >> >> Specifically, are you setting PythonPath directive in really strange
> >> >> ways?
> >> >
> >> > PythonPath is set this way
> >> > PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
> >> >
> >> >>
> >> >>
> >> >> Does it happen if you don't use the 'logging' module?
> >> >
> >> > If I comment out logging.exception('I crash'), then the traceback
> prints
> >> > to
> >> > screen as expected.
> >> >
> >> >>
> >> >> Graham
> >> >>
> >> >> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
> >> >> > Here is code that consistently crashes Apache for me:
> >> >> >
> >> >> > import logging
> >> >> >
> >> >> > def index(req):
> >> >> >     """Handles all Browser Requests"""
> >> >> >     try:
> >> >> >         reqHandler = logging.StreamHandler(req)
> >> >> >         logging.getLogger('').addHandler(reqHandler)
> >> >> >         if req.form.has_key('action'):
> >> >> >             raise Exception('Goodbye Apache')
> >> >> >     except Exception, e:
> >> >> >         logging.exception('I crash')
> >> >> >         raise
> >> >> >
> >> >> > Now just go to the site with /?action=dosomething and it will crash
> >> >> >
> >> >> > Removing the if statement, the exception, or the logger are all
> ways
> >> >> > of
> >> >> > alleviating the crash, but none of them should be necessary.
> >> >> >
> >> >> > Cheers,
> >> >> > Jason
> >> >> >
> >> >> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver
> >> >> > <ynj0qeh02@sneakemail.com>
> >> >> > wrote:
> >> >> >>
> >> >> >> Hi all,
> >> >> >>
> >> >> >> I am having the craziest error, confirmed on both a LAMPython and
> >> >> >> WAMPython setup: exceptions in mod_python are causing Apache to
> >> >> >> crash
> >> >> >> hard.
> >> >> >> Even stranger is that the exceptions have to meet a few specific
> >> >> >> conditions
> >> >> >> to cause Apache to crash.
> >> >> >>
> >> >> >> As best I can tell those conditions include:
> >> >> >>
> >> >> >> raising an exception (this problem always goes away if the
> exception
> >> >> >> is
> >> >> >> commented out)
> >> >> >> having the exception be inside an if-block that tests a dictionary
> >> >> >> (the
> >> >> >> problem goes away if I do something like """if 'hello' == 'hello':
> >> >> >> raise
> >> >> >> Exception('goodbye')""")
> >> >> >> catching the exception and logging it using the python built-in
> >> >> >> logging.exception(e) (the problem goes away if I comment out the
> >> >> >> logger)
> >> >> >>
> >> >> >> Apache does not write anything to its error.log, so it was a bit
> of
> >> >> >> an
> >> >> >> adventure to discover all these elements.
> >> >> >>
> >> >> >> Any ideas?
> >> >> >>
> >> >> >> Cheers,
> >> >> >> Jason
> >> >> >
> >> >> > _______________________________________________
> >> >> > Mod_python mailing list
> >> >> > Mod_python@modpython.org
> >> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >> >> >
> >> >> >
> >> >
> >> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080805/3ae46490/attachment.html
From ynj0qeh02 at sneakemail.com  Tue Aug  5 13:01:39 2008
From: ynj0qeh02 at sneakemail.com (Jason Carver)
Date: Tue Aug  5 13:01:47 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
	<88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>
	<30118-63458@sneakemail.com>
	<88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>
	<85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>
Message-ID: <85f667130808051001k4f9528c3kbeb0d9326906ba2d@mail.gmail.com>

And yes, I am installing everything as an Administrator.

On Tue, Aug 5, 2008 at 12:59 PM, Jason Carver <ynj0qeh02@sneakemail.com>wrote:

> If I try to install mod_python without python 2.5 installed, mod_python
> refuses, so I assume you mean uninstall all versions of python, then install
> python 2.5.2, then mod_python-3.3.1.win32-py2.5-Apache2.2.exe
>
> I did that, with no changes.  I get the same Traceback during mod_python
> install and I can still reproduce the crash reliably.
>
> Bug requirements update: It does not matter if I test the req object, it
> only matters if the req object has something set.  So these are the new
> requirements to reproduce the bug
>
>    - use built in logging module
>    - raise Exception
>    - call page with variables (ie~ http://localhost/index.py?action=boom)
>    - use the following code:
>
> import logging
>
> def index(req):
>     """Handles all Browser Requests"""
>     try:
>         logging.getLogger('').addHandler( logging.StreamHandler(req) )
>
>         raise Exception('Goodbye Apache')
>
>     except Exception, e:
>         logging.exception('I crash')
>         raise
>
> So there seems to be some kind of three way interaction between the logging
> module, the apache req module, and exception handling.  If any one of the
> three are not involved, apache does not crash...
>
> For now I can use a home-grown logger to get around the bug, but I hate to
> build code that already exists and make future developers have to learn my
> logger instead of the built-in one.
>
> Cheers,
> Jason
>
>
> On Mon, Aug 4, 2008 at 9:44 PM, Graham Dumpleton
> graham.dumpleton-at-gmail.com |public mailing list| <
> a9ghk53mp50t@sneakemail.com> wrote:
>
>> Please use reply-all and keep discussion on the list, don't reply just to
>> me.
>>
>> Have you tried uninstalling all versions of Python and mod_python
>> first and then install it? Ie., don't install when you have existing
>> versions on the system.
>>
>> When installing packages, are you doing it as a user with
>> administrator privileges?
>>
>> Graham
>>
>> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>> > Unfortunately, when I tried to install the mod_python 3.3.1 for 2.5 I
>> got
>> > this traceback:
>> > Traceback (most recent call last):
>> >   File "boot_com_servers.py", line 21, in <module>
>> >   File "C:\Python25\Lib\site-packages\pythoncom.py", line 3, in <module>
>> >     pywintypes.__import_pywin32_system_module__("pythoncom", globals())
>> >   File "C:\Python25\Lib\site-packages\win32\Lib\pywintypes.py", line 98,
>> in
>> > __import_pywin32_system_module__
>> >     ('.dll', 'rb', imp.C_EXTENSION))
>> > ImportError: DLL load failed: The specified procedure could not be
>> found.
>> >
>> > and when I try to start apache 2 anyway, it says "The requested
>> operation
>> > has failed!"
>> >
>> > That's why I was using the version for 2.4.
>> >
>> > On Mon, Aug 4, 2008 at 9:21 PM, Graham Dumpleton
>> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>> >>
>> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>> >> > Thanks for the quick reply!  Answers inline...
>> >> >
>> >> > On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
>> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>> >> >>
>> >> >> What operating system? What version of Python? What version of
>> >> >> mod_python?
>> >> >
>> >> > I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
>> >> >
>> >> > I hacked the binary to use 2.5 on Windows, but the same problem is
>> >> > reproducible on Ubuntu 7.10 using the latest source from svn compiled
>> >> > with
>> >> > python 2.5.
>> >> >
>> >> >> What startup messages for mod_python are in the Apache error log?
>> >> >
>> >> >
>> >> > [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007
>> 11:48:48
>> >> > [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process
>> 27164
>> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python version
>> mismatch,
>> >> > expected '2.4.3', found '2.5'.
>> >>
>> >> This is why it is probably breaking. Install mod_python compiled
>> >> against Python 2.5. The version you are using was compiled against
>> >> older version of Python.
>> >>
>> >> Fix your installation and try again.
>> >>
>> >> Do you get similar warnings on your other platform as well?
>> >>
>> >> Graham
>> >>
>> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable
>> found
>> >> > 'C:\\xampp\\apache\\bin\\apache.exe'.
>> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being
>> used
>> >> > 'C:\\Program
>> >> >
>> >> >
>> Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
>> >> > [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session
>> >> > mutexes
>> >> > based on 0 max processes and 250 max threads.
>> >> >
>> >> >>
>> >> >>
>> >> >> What is the mod_python configuration you have in Apache
>> configuration
>> >> >> files?
>> >> >
>> >> >
>> >> > PythonOption mod_python.mutex_directory "/pytmp"
>> >> > PythonOption mod_python.mutex_locks 8
>> >> >
>> >> > AliasMatch      ^/slique(.*)        'C:/Documents and
>> Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src/$1'
>> >> >
>> >> > <Directory 'C:/Documents and Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src'>
>> >> >     Options Indexes ExecCGI FollowSymLinks MultiViews
>> >> >     AllowOverride All
>> >> >
>> >> >     AddHandler mod_python .py
>> >> >     PythonHandler mod_python.publisher
>> >> >     PythonDebug On
>> >> >     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >> >
>> >> > </Directory>
>> >> >
>> >> >>
>> >> >>
>> >> >> Specifically, are you setting PythonPath directive in really strange
>> >> >> ways?
>> >> >
>> >> > PythonPath is set this way
>> >> > PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >> >
>> >> >>
>> >> >>
>> >> >> Does it happen if you don't use the 'logging' module?
>> >> >
>> >> > If I comment out logging.exception('I crash'), then the traceback
>> prints
>> >> > to
>> >> > screen as expected.
>> >> >
>> >> >>
>> >> >> Graham
>> >> >>
>> >> >> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
>> >> >> > Here is code that consistently crashes Apache for me:
>> >> >> >
>> >> >> > import logging
>> >> >> >
>> >> >> > def index(req):
>> >> >> >     """Handles all Browser Requests"""
>> >> >> >     try:
>> >> >> >         reqHandler = logging.StreamHandler(req)
>> >> >> >         logging.getLogger('').addHandler(reqHandler)
>> >> >> >         if req.form.has_key('action'):
>> >> >> >             raise Exception('Goodbye Apache')
>> >> >> >     except Exception, e:
>> >> >> >         logging.exception('I crash')
>> >> >> >         raise
>> >> >> >
>> >> >> > Now just go to the site with /?action=dosomething and it will
>> crash
>> >> >> >
>> >> >> > Removing the if statement, the exception, or the logger are all
>> ways
>> >> >> > of
>> >> >> > alleviating the crash, but none of them should be necessary.
>> >> >> >
>> >> >> > Cheers,
>> >> >> > Jason
>> >> >> >
>> >> >> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver
>> >> >> > <ynj0qeh02@sneakemail.com>
>> >> >> > wrote:
>> >> >> >>
>> >> >> >> Hi all,
>> >> >> >>
>> >> >> >> I am having the craziest error, confirmed on both a LAMPython and
>> >> >> >> WAMPython setup: exceptions in mod_python are causing Apache to
>> >> >> >> crash
>> >> >> >> hard.
>> >> >> >> Even stranger is that the exceptions have to meet a few specific
>> >> >> >> conditions
>> >> >> >> to cause Apache to crash.
>> >> >> >>
>> >> >> >> As best I can tell those conditions include:
>> >> >> >>
>> >> >> >> raising an exception (this problem always goes away if the
>> exception
>> >> >> >> is
>> >> >> >> commented out)
>> >> >> >> having the exception be inside an if-block that tests a
>> dictionary
>> >> >> >> (the
>> >> >> >> problem goes away if I do something like """if 'hello' ==
>> 'hello':
>> >> >> >> raise
>> >> >> >> Exception('goodbye')""")
>> >> >> >> catching the exception and logging it using the python built-in
>> >> >> >> logging.exception(e) (the problem goes away if I comment out the
>> >> >> >> logger)
>> >> >> >>
>> >> >> >> Apache does not write anything to its error.log, so it was a bit
>> of
>> >> >> >> an
>> >> >> >> adventure to discover all these elements.
>> >> >> >>
>> >> >> >> Any ideas?
>> >> >> >>
>> >> >> >> Cheers,
>> >> >> >> Jason
>> >> >> >
>> >> >> > _______________________________________________
>> >> >> > Mod_python mailing list
>> >> >> > Mod_python@modpython.org
>> >> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >> >> >
>> >> >> >
>> >> >
>> >> >
>> >
>> >
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080805/5347df03/attachment-0001.html
From matusis at yahoo.com  Tue Aug  5 17:19:30 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Tue Aug  5 17:20:00 2008
Subject: [mod_python] intermittent bug with MySQLdb
In-Reply-To: <074601c8f6d9$0bc16920$23443b60$@com>
References: <014f01c8f44a$1a224570$4e66d050$@com>
	<c70f1ac50808032124v15b4b64ei97ee99ff67e14ae7@mail.gmail.com>
	<074601c8f6d9$0bc16920$23443b60$@com>
Message-ID: <09b301c8f740$f47f9a30$dd7ece90$@com>

I am now convinced that this is either a mod_python or MySQLdb threading
bug.
I recompiled apache with prefork instead of worker, and these MySQLdb errors
disappeared.

> -----Original Message-----
> From: Alec Matusis [mailto:matusis@yahoo.com]
> Sent: Tuesday, August 05, 2008 1:56 AM
> To: 'Alec Matusis'; 'Buck Golemon'
> Cc: mod_python@modpython.org
> Subject: RE: [mod_python] intermittent bug with MySQLdb
> 
> PS.
> 
> Found Another way to get rid of the error:
> 
> I had
> MaxRequestsPerChild 1
> since this is my dev server and I wanted to be able to edit mod_python
> scripts without restarting apache.
> Increasing it to 10 does not fix it.
> Increasing to 100 makes it very rare.
> Increasing it to 20000 apparently fixes the problem (maybe I did not
> wait
> long enough)
> 
> 
> Perhaps what happens is that while the child is waiting on the MySQL
> connection, it gets EINTR event from the parent that is ready to die,
> because more requests came in, and so it dies before the child?s MySQL
> connection is complete?
> 
> > -----Original Message-----
> > From: Alec Matusis [mailto:matusis@yahoo.com]
> > Sent: Tuesday, August 05, 2008 1:25 AM
> > To: 'Buck Golemon'
> > Cc: 'mod_python@modpython.org'
> > Subject: RE: [mod_python] intermittent bug with MySQLdb
> >
> > One more interesting piece of evidence: when I connect to the DB on
> the
> > same physical machine were my web scripts are, I can reproduce this
> > only when I connect to 127.0.0.1. When I connect to localhost, I do
> not
> > get the errors at all. This is because
> >
> > http://dev.mysql.com/doc/refman/5.0/en/connecting.html
> >
> > ?For connections to localhost, MySQL programs attempt to connect to
> the
> > local server by using a Unix socket file. This occurs even if a --
> port
> > or -P option is given to specify a port number. To ensure that the
> > client makes a TCP/IP connection to the local server, use --host or -
> h
> > to specify a hostname value of 127.0.0.1?
> >
> > This last thing makes me think it?s a networking problem as you
> > suggest
?
> >
> >
> > From: Buck Golemon [mailto:workitharder@gmail.com]
> > Sent: Sunday, August 03, 2008 9:24 PM
> > To: Alec Matusis
> > Subject: Re: [mod_python] intermittent bug with MySQLdb
> >
> > Have you considered that this may be just a general problem of
> > networking / MySQL? That's my conclusion. I've gotten similar errors
> in
> > my high-concurrency applications (non mod-python) and to solve the
> > problem, wrote some code to re-try queryies on that error (among
> > others) and wrapped it around all my connections.
> >
> > As a counter-argument (if you want one), try doing a similar stress
> > test using a completely different client (maybe perl?) and show that
> > the error does not occur under similar or higher loads.
> >
> > --Buck
> > 2008/8/1 Alec Matusis <matusis@yahoo.com>
> > I was stress- testing MySQL replication on my development setup and
> run
> > into a particularly nasty case of a hard-to-reproduced bug that I
> have
> > encountered earlier.
> >
> > Under high concurrency, I sometimes get
> >
> > build/bdist.linux-i686/egg/MySQLdb/connections.py:
> > OperationalError: (2003, "Can't connect to MySQL server on
> ''10.18.0.2
> > (4)")
> >
> >
> > Here (4) stangs for:
> >
> > #perror 4
> > OS error code?? 4:? Interrupted system call
> >
> > I am using apache 2.2.6 with worker MPM , python 2.4.4 and mod_python
> > 3.3.1.
> >
> > 10.18.0.2 is a remote DB test server.
> > I upgraded MySQLdb adapter from 1.2.0 to 1.2.2 and got the same error
> > with both versions. The adapters are compiled with
> > mysqlclient_r , which is supposed to be thread-safe.
> >
> > Then, I pointed MySQL connections to ?localhost, which runs an
> > identical copy of the same database.
> >
> > To get errors on localhost, I had to increase the request rate by
> about
> > 10x (no errors at all otherwise), and I got
> > OperationalError: (2003, "Can't connect to MySQL server on
> '127.0.0.1'
> > (4)")
> > 127.0.0.1 is my development machine, and I have never seen these
> errors
> > before, until I ran this stress test today, bringing the machine to
> > load average 8.0.
> >
> > 127.0.0.1 and 10.18.0.2 are two different machines, with different
> > kernels and even different MySQL versions, so it is the ?client
> machine
> > that is a problem.
> >
> > I have written a single-threaded stand-alone python loop, that simply
> > connects to the DB on the remote server 10.18.0.2 and executes
> "SELECT
> > 1". I have run several of these loops concurrently each doing about
> > 10000 iterations, and they never gave a connection error.
> >
> > MySQLdb README says:
> > ??????? MySQLdb is an interface to the popular MySQL_ database server
> > for
> > ??????? Python.? The design goals are
> > ??????? - Thread-safety
> > ??????? - Thread-friendliness (threads will not block each other)
> >
> > So my guess is that this is a thread-safety problem having to do with
> > mod_python.
> >
> > I now recall that I have seen the problem earlier:
> > I have several identically configured production ?web servers
> connected
> > to a single DB server. I have seen these errors infrequently on 32bit
> > webservers, but extremely rarely or almost never on 64bit webservers.
> > ??I since phased out 32bit web servers to serve static files only, so
> I
> > do not have this data anymore.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> > --
> > Buck Golemon
> > AIM: bukzor
> > Cell: (480) 272-1153


From graham.dumpleton at gmail.com  Tue Aug  5 20:36:44 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug  5 20:36:47 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
	<88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>
	<30118-63458@sneakemail.com>
	<88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>
	<85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>
Message-ID: <88e286470808051736s65ebdecg8f2c998663bf2c32@mail.gmail.com>

Just realised what the problem is, rather obvious really.

You are supplying a mod_python request object 'req' to:

  logging.getLogger('').addHandler(logging.StreamHandler(req))

You can't do that, as the logging handler you are creating will
persist beyond the lifetime of the internals of the 'req' object.
Thus, when logging tries to access it later, it will crash Apache.

In other words, 'req' is just a wrapper for some internal Apache data
structures which will go away. The mod_python code doesn't currently
try and protect itself from user code making the mistake of retaining
the 'req' object longer than it should and then accessing those
internals.

Graham

2008/8/6 Jason Carver <ynj0qeh02@sneakemail.com>:
> If I try to install mod_python without python 2.5 installed, mod_python
> refuses, so I assume you mean uninstall all versions of python, then install
> python 2.5.2, then mod_python-3.3.1.win32-py2.5-Apache2.2.exe
>
> I did that, with no changes.  I get the same Traceback during mod_python
> install and I can still reproduce the crash reliably.
>
> Bug requirements update: It does not matter if I test the req object, it
> only matters if the req object has something set.  So these are the new
> requirements to reproduce the bug
>
> use built in logging module
> raise Exception
> call page with variables (ie~ http://localhost/index.py?action=boom)
> use the following code:
>
> import logging
>
> def index(req):
>     """Handles all Browser Requests"""
>     try:
>         logging.getLogger('').addHandler( logging.StreamHandler(req) )
>
>         raise Exception('Goodbye Apache')
>
>     except Exception, e:
>         logging.exception('I crash')
>         raise
>
> So there seems to be some kind of three way interaction between the logging
> module, the apache req module, and exception handling.  If any one of the
> three are not involved, apache does not crash...
>
> For now I can use a home-grown logger to get around the bug, but I hate to
> build code that already exists and make future developers have to learn my
> logger instead of the built-in one.
>
> Cheers,
> Jason
>
> On Mon, Aug 4, 2008 at 9:44 PM, Graham Dumpleton
> graham.dumpleton-at-gmail.com |public mailing list|
> <a9ghk53mp50t@sneakemail.com> wrote:
>>
>> Please use reply-all and keep discussion on the list, don't reply just to
>> me.
>>
>> Have you tried uninstalling all versions of Python and mod_python
>> first and then install it? Ie., don't install when you have existing
>> versions on the system.
>>
>> When installing packages, are you doing it as a user with
>> administrator privileges?
>>
>> Graham
>>
>> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>> > Unfortunately, when I tried to install the mod_python 3.3.1 for 2.5 I
>> > got
>> > this traceback:
>> > Traceback (most recent call last):
>> >   File "boot_com_servers.py", line 21, in <module>
>> >   File "C:\Python25\Lib\site-packages\pythoncom.py", line 3, in <module>
>> >     pywintypes.__import_pywin32_system_module__("pythoncom", globals())
>> >   File "C:\Python25\Lib\site-packages\win32\Lib\pywintypes.py", line 98,
>> > in
>> > __import_pywin32_system_module__
>> >     ('.dll', 'rb', imp.C_EXTENSION))
>> > ImportError: DLL load failed: The specified procedure could not be
>> > found.
>> >
>> > and when I try to start apache 2 anyway, it says "The requested
>> > operation
>> > has failed!"
>> >
>> > That's why I was using the version for 2.4.
>> >
>> > On Mon, Aug 4, 2008 at 9:21 PM, Graham Dumpleton
>> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>> >>
>> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>> >> > Thanks for the quick reply!  Answers inline...
>> >> >
>> >> > On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
>> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>> >> >>
>> >> >> What operating system? What version of Python? What version of
>> >> >> mod_python?
>> >> >
>> >> > I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
>> >> >
>> >> > I hacked the binary to use 2.5 on Windows, but the same problem is
>> >> > reproducible on Ubuntu 7.10 using the latest source from svn compiled
>> >> > with
>> >> > python 2.5.
>> >> >
>> >> >> What startup messages for mod_python are in the Apache error log?
>> >> >
>> >> >
>> >> > [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007
>> >> > 11:48:48
>> >> > [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process
>> >> > 27164
>> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python version
>> >> > mismatch,
>> >> > expected '2.4.3', found '2.5'.
>> >>
>> >> This is why it is probably breaking. Install mod_python compiled
>> >> against Python 2.5. The version you are using was compiled against
>> >> older version of Python.
>> >>
>> >> Fix your installation and try again.
>> >>
>> >> Do you get similar warnings on your other platform as well?
>> >>
>> >> Graham
>> >>
>> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable
>> >> > found
>> >> > 'C:\\xampp\\apache\\bin\\apache.exe'.
>> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being
>> >> > used
>> >> > 'C:\\Program
>> >> >
>> >> >
>> >> > Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
>> >> > [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session
>> >> > mutexes
>> >> > based on 0 max processes and 250 max threads.
>> >> >
>> >> >>
>> >> >>
>> >> >> What is the mod_python configuration you have in Apache
>> >> >> configuration
>> >> >> files?
>> >> >
>> >> >
>> >> > PythonOption mod_python.mutex_directory "/pytmp"
>> >> > PythonOption mod_python.mutex_locks 8
>> >> >
>> >> > AliasMatch      ^/slique(.*)        'C:/Documents and
>> >> > Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src/$1'
>> >> >
>> >> > <Directory 'C:/Documents and Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src'>
>> >> >     Options Indexes ExecCGI FollowSymLinks MultiViews
>> >> >     AllowOverride All
>> >> >
>> >> >     AddHandler mod_python .py
>> >> >     PythonHandler mod_python.publisher
>> >> >     PythonDebug On
>> >> >     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >> >
>> >> > </Directory>
>> >> >
>> >> >>
>> >> >>
>> >> >> Specifically, are you setting PythonPath directive in really strange
>> >> >> ways?
>> >> >
>> >> > PythonPath is set this way
>> >> > PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >> >
>> >> >>
>> >> >>
>> >> >> Does it happen if you don't use the 'logging' module?
>> >> >
>> >> > If I comment out logging.exception('I crash'), then the traceback
>> >> > prints
>> >> > to
>> >> > screen as expected.
>> >> >
>> >> >>
>> >> >> Graham
>> >> >>
>> >> >> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
>> >> >> > Here is code that consistently crashes Apache for me:
>> >> >> >
>> >> >> > import logging
>> >> >> >
>> >> >> > def index(req):
>> >> >> >     """Handles all Browser Requests"""
>> >> >> >     try:
>> >> >> >         reqHandler = logging.StreamHandler(req)
>> >> >> >         logging.getLogger('').addHandler(reqHandler)
>> >> >> >         if req.form.has_key('action'):
>> >> >> >             raise Exception('Goodbye Apache')
>> >> >> >     except Exception, e:
>> >> >> >         logging.exception('I crash')
>> >> >> >         raise
>> >> >> >
>> >> >> > Now just go to the site with /?action=dosomething and it will
>> >> >> > crash
>> >> >> >
>> >> >> > Removing the if statement, the exception, or the logger are all
>> >> >> > ways
>> >> >> > of
>> >> >> > alleviating the crash, but none of them should be necessary.
>> >> >> >
>> >> >> > Cheers,
>> >> >> > Jason
>> >> >> >
>> >> >> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver
>> >> >> > <ynj0qeh02@sneakemail.com>
>> >> >> > wrote:
>> >> >> >>
>> >> >> >> Hi all,
>> >> >> >>
>> >> >> >> I am having the craziest error, confirmed on both a LAMPython and
>> >> >> >> WAMPython setup: exceptions in mod_python are causing Apache to
>> >> >> >> crash
>> >> >> >> hard.
>> >> >> >> Even stranger is that the exceptions have to meet a few specific
>> >> >> >> conditions
>> >> >> >> to cause Apache to crash.
>> >> >> >>
>> >> >> >> As best I can tell those conditions include:
>> >> >> >>
>> >> >> >> raising an exception (this problem always goes away if the
>> >> >> >> exception
>> >> >> >> is
>> >> >> >> commented out)
>> >> >> >> having the exception be inside an if-block that tests a
>> >> >> >> dictionary
>> >> >> >> (the
>> >> >> >> problem goes away if I do something like """if 'hello' ==
>> >> >> >> 'hello':
>> >> >> >> raise
>> >> >> >> Exception('goodbye')""")
>> >> >> >> catching the exception and logging it using the python built-in
>> >> >> >> logging.exception(e) (the problem goes away if I comment out the
>> >> >> >> logger)
>> >> >> >>
>> >> >> >> Apache does not write anything to its error.log, so it was a bit
>> >> >> >> of
>> >> >> >> an
>> >> >> >> adventure to discover all these elements.
>> >> >> >>
>> >> >> >> Any ideas?
>> >> >> >>
>> >> >> >> Cheers,
>> >> >> >> Jason
>> >> >> >
>> >> >> > _______________________________________________
>> >> >> > Mod_python mailing list
>> >> >> > Mod_python@modpython.org
>> >> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >> >> >
>> >> >> >
>> >> >
>> >> >
>> >
>> >
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From matusis at yahoo.com  Wed Aug  6 01:43:57 2008
From: matusis at yahoo.com (Alec Matusis)
Date: Wed Aug  6 01:44:30 2008
Subject: [mod_python] intermittent bug with MySQLdb
In-Reply-To: <c70f1ac50808051810k19f4636byf5f503a14e50d4e5@mail.gmail.com>
References: <014f01c8f44a$1a224570$4e66d050$@com>	
	<c70f1ac50808032124v15b4b64ei97ee99ff67e14ae7@mail.gmail.com>	
	<074601c8f6d9$0bc16920$23443b60$@com>	
	<09b301c8f740$f47f9a30$dd7ece90$@com>
	<c70f1ac50808051810k19f4636byf5f503a14e50d4e5@mail.gmail.com>
Message-ID: <0b8c01c8f787$6c9fd980$45df8c80$@com>

Sending it back to the list:

I cannot get the errors with MaxRequestsPerChild 1 or MaxRequestsPerChild
20000 when I use prefork.
Have you tried prefork?

From: Buck Golemon [mailto:workitharder@gmail.com] 
Sent: Tuesday, August 05, 2008 6:11 PM
To: Alec Matusis
Subject: Re: [mod_python] intermittent bug with MySQLdb

That's a pretty big "or". I was convinced it was MySQL networking until you
posted this. Do you still have your +20000 setting above in effect?


On 8/5/08, Alec Matusis <matusis@yahoo.com> wrote:
I am now convinced that this is either a mod_python or MySQLdb threading
bug.
I recompiled apache with prefork instead of worker, and these MySQLdb errors
disappeared.


> -----Original Message-----
> From: Alec Matusis [mailto:matusis@yahoo.com]

> Sent: Tuesday, August 05, 2008 1:56 AM
> To: 'Alec Matusis'; 'Buck Golemon'
> Cc: mod_python@modpython.org
> Subject: RE: [mod_python] intermittent bug with MySQLdb
>
> PS.
>
> Found Another way to get rid of the error:
>
> I had
> MaxRequestsPerChild 1
> since this is my dev server and I wanted to be able to edit mod_python
> scripts without restarting apache.
> Increasing it to 10 does not fix it.
> Increasing to 100 makes it very rare.
> Increasing it to 20000 apparently fixes the problem (maybe I did not
> wait
> long enough)
>
>
> Perhaps what happens is that while the child is waiting on the MySQL
> connection, it gets EINTR event from the parent that is ready to die,
> because more requests came in, and so it dies before the child's MySQL
> connection is complete?
>
> > -----Original Message-----
> > From: Alec Matusis [mailto:matusis@yahoo.com]
> > Sent: Tuesday, August 05, 2008 1:25 AM
> > To: 'Buck Golemon'
> > Cc: 'mod_python@modpython.org'
> > Subject: RE: [mod_python] intermittent bug with MySQLdb
> >
> > One more interesting piece of evidence: when I connect to the DB on
> the
> > same physical machine were my web scripts are, I can reproduce this
> > only when I connect to 127.0.0.1. When I connect to localhost, I do
> not
> > get the errors at all. This is because
> >
> > http://dev.mysql.com/doc/refman/5.0/en/connecting.html
> >
> > "For connections to localhost, MySQL programs attempt to connect to
> the
> > local server by using a Unix socket file. This occurs even if a --
> port
> > or -P option is given to specify a port number. To ensure that the
> > client makes a TCP/IP connection to the local server, use --host or -
> h
> > to specify a hostname value of 127.0.0.1"
> >
> > This last thing makes me think it's a networking problem as you
> > suggest
?
> >
> >
> > From: Buck Golemon [mailto:workitharder@gmail.com]
> > Sent: Sunday, August 03, 2008 9:24 PM
> > To: Alec Matusis
> > Subject: Re: [mod_python] intermittent bug with MySQLdb
> >
> > Have you considered that this may be just a general problem of
> > networking / MySQL? That's my conclusion. I've gotten similar errors
> in
> > my high-concurrency applications (non mod-python) and to solve the
> > problem, wrote some code to re-try queryies on that error (among
> > others) and wrapped it around all my connections.
> >
> > As a counter-argument (if you want one), try doing a similar stress
> > test using a completely different client (maybe perl?) and show that
> > the error does not occur under similar or higher loads.
> >
> > --Buck
> > 2008/8/1 Alec Matusis <matusis@yahoo.com>
> > I was stress- testing MySQL replication on my development setup and
> run
> > into a particularly nasty case of a hard-to-reproduced bug that I
> have
> > encountered earlier.
> >
> > Under high concurrency, I sometimes get
> >
> > build/bdist.linux-i686/egg/MySQLdb/connections.py:
> > OperationalError: (2003, "Can't connect to MySQL server on
> ''10.18.0.2
> > (4)")
> >
> >
> > Here (4) stangs for:
> >
> > #perror 4
> > OS error code?? 4:??Interrupted system call
> >
> > I am using apache 2.2.6 with worker MPM , python 2.4.4 and mod_python
> > 3.3.1.
> >
> > 10.18.0.2 is a remote DB test server.
> > I upgraded MySQLdb adapter from 1.2.0 to 1.2.2 and got the same error
> > with both versions. The adapters are compiled with
> > mysqlclient_r , which is supposed to be thread-safe.
> >
> > Then, I pointed MySQL connections to??localhost, which runs an
> > identical copy of the same database.
> >
> > To get errors on localhost, I had to increase the request rate by
> about
> > 10x (no errors at all otherwise), and I got
> > OperationalError: (2003, "Can't connect to MySQL server on
> '127.0.0.1'
> > (4)")
> > 127.0.0.1 is my development machine, and I have never seen these
> errors
> > before, until I ran this stress test today, bringing the machine to
> > load average 8.0.
> >
> > 127.0.0.1 and 10.18.0.2 are two different machines, with different
> > kernels and even different MySQL versions, so it is the??client
> machine
> > that is a problem.
> >
> > I have written a single-threaded stand-alone python loop, that simply
> > connects to the DB on the remote server 10.18.0.2 and executes
> "SELECT
> > 1". I have run several of these loops concurrently each doing about
> > 10000 iterations, and they never gave a connection error.
> >
> > MySQLdb README says:
> >???????? MySQLdb is an interface to the popular MySQL_ database server
> > for
> >???????? Python.??The design goals are
> >???????? - Thread-safety
> >???????? - Thread-friendliness (threads will not block each other)
> >
> > So my guess is that this is a thread-safety problem having to do with
> > mod_python.
> >
> > I now recall that I have seen the problem earlier:
> > I have several identically configured production??web servers
> connected
> > to a single DB server. I have seen these errors infrequently on 32bit
> > webservers, but extremely rarely or almost never on 64bit webservers.
> >?? I since phased out 32bit web servers to serve static files only, so
> I
> > do not have this data anymore.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> > --
> > Buck Golemon
> > AIM: bukzor
> > Cell: (480) 272-1153



-- 
Buck Golemon
AIM: bukzor
Cell: (480) 272-1153 


From durumdara at gmail.com  Wed Aug  6 06:03:17 2008
From: durumdara at gmail.com (durumdara@gmail.com)
Date: Wed Aug  6 06:03:48 2008
Subject: [mod_python] PyODBC makes me crazy... Is mxODBC working good?
Message-ID: <g7bstf$27o$1@ger.gmane.org>

Hi!

I have a mod_python based group of sites in a Win2k3 server.

Every of them uses PYODBC and DBISAM database. The DBISAM is needed 
because of I must access the existing datas.

The problem is that the new PYODBC (2.0.58) crashes the Apache.
But only in this server machine, in other machines I don't saw same 
situation.

The older version, the 2.0.52 is also crashes Apache, but 3-4 times in a 
month. The 2.0.58 do it in every 3-6 requests.

I don't know why, possible it is a memory releasing problem, or other 
thing... I don't know.

But I search for a solution.

1.)
Using another DataBase Server(for example: MySQL).
This is hard to do, because I need to recode the local databases too... :-(

2.)
Using another tool to Access ODBC. mxODBC the only possibility.

3.)
Using a special way to run an outer python module that makes a result.
It is a hard thing, because I must collect all of Query-s, Updates to 
one module that I call specially with outer Python. It is execute this 
module, and return with a result set, or other informations.
In this way I separate all of the Database operations, but possible not 
get the errors, because of native Python (and not modpy) interpreter.

I wanna ask that anybody have experience with mxODBC?
It have good price, but I don't wanna start a replace without any 
informations about it.

Thanks for your help in this problem:
    dd

From david.cardozo at apioutsourcing.com  Wed Aug  6 11:18:43 2008
From: david.cardozo at apioutsourcing.com (David Cardozo)
Date: Wed Aug  6 11:18:57 2008
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
Message-ID: <C4BF2B03.3237%david.cardozo@apioutsourcing.com>

I apologize by resurrecting this email thread, but I thought I would post
the ?what worked for me? solution in case someone else ever come across it.

For a quick history: when Mike Robokoff worked on this issue back in October
(we both worked together at the same company), we were able to work around
it by making changes to our python scripts to minimize the time spent
holding a lock to the Session.dbm file. This seemed to work fine for a
while. However, as our user load level increased, this problem started
manifesting itself again. I dedicated myself to this issue during this past
week and finally was able to narrow it down to the fix that solve it...
Hopefully once and for all.

Here is my analysis of this issue; please correct me if you think something
doesn?t sound right:

The root cause of this problem was the use of a bad mutex implementation by
mod_python in Solaris.

Mod_python relies on operating system mutexes to lock file system resources;
these mutexes are provided by the APR library (Apache Portable Runtime) by
invocation of the following method from mod_python.c:

 apr_global_mutex_create(&mutex[n], fname, APR_LOCK_DEFAULT, p);

The above call defaults to use the operating system default mutex
implementation (fcntl) which, in my opinion, does not work properly in an
Apache worker MPM model under any type of load.

by modifying the above call to:

apr_global_mutex_create(&mutex[n], fname,  APR_LOCK_POSIXSEM, p);

which forces the use of the POSIX semaphores implementation of mutexes by
mod_python, the problem was minimized to a just a few instances of the
"mutex" error under a moderate load: 400 concurrent threads.

The final change to make the problem go away completely was to modify the
AcceptMutex and SSLMutex properties in the httpd.conf file to "posixsem".
This, together with the mod_python changed, made the "mutex" error go away
even for 6400 concurrent threads.

I still ignore why the changes to AcceptMutex and SSLMutex are required
since our Apache installs were compiled with the
"--enable-nonportable-atomics" which, according to the Apache documentation
( http://httpd.apache.org/docs/2.2/misc/perf-tuning.html#compiletime):

"Solaris on SPARC
By default, APR uses mutex-based atomics on Solaris/SPARC. If you configure
with --enable-nonportable-atomics, however, APR generates code that uses a
SPARC v8plus opcode for fast hardware compare-and-swap. If you configure
Apache with this option, the atomic operations will be more efficient
(allowing for lower CPU utilization and higher concurrency), but the
resulting executable will run only on UltraSPARC chips. "

Maybe, even though we compile with that option, something in the OS, Apache
or APR, still doesn't allow us to take advantage of atomic operations. This
is pure speculation.

This is the email thread that pointed me to the right direction:
http://www.modpython.org/pipermail/mod_python/2006-November/022538.html
I?m not using the ITK MPM, just straight worker MPM, but that change made
the trick for me.

Regards,

David.

-------------- Last message in email thread ---------------------------

[mod_python] ValueError: Failed to acquire global mutex lock
Graham Dumpleton graham.dumpleton at gmail.com
Wed Oct 24 23:04:05 EDT 2007

    * Previous message: [mod_python] Problems with Apache
    * Next message: [mod_python] Multiple Django Applications
    * Messages sorted by: [ date ] [ thread ] [ subject ] [ author ]

Going by errors posted by someone else for other thread, seems that if
semaphores exhausted, error would occur at mod_python startup not when
locking the mutex.

I'll have to go back and read all your emails again. You said you were
using 'worker' MPM now didn't you. Your not using some strange MPM
like perchild or ITK-MPM are you. I know that these cause problems for
these mutexes in mod_python because of how different processes wanting
to lock the mutex run as different users.

Graham

On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com> wrote:
> # ipcs
> IPC status from <running system> as of Wed Oct 24 06:25:17 CDT 2007
> T         ID      KEY        MODE        OWNER    GROUP
> Message Queues:
> Shared Memory:
> Semaphores:
> s          2   0          --ra-------      api    other
>
> Not sure how to read that.
>
> If the problem is the semaphores, Shouldn't I be able to use the following
> set semsys:seminfo_semmni=2048
> set semsys:seminfo_semmns=2048
> set semsys:seminfo_semmnu=1024
> set semsys:seminfo_semmsl=300
> set semsys:seminfo_semopm=128
> set semsys:seminfo_semume=64
>
> to make more semaphores available?
>
> I tried that but it didn't change anything, do you think that was not
> enough?
>
>
> --Mike
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
> Sent: Tuesday, October 23, 2007 7:08 PM
> To: Michael Robokoff
> Cc: mod_python
> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>
> If you run 'ipcs' what is the output? Something must be using all the
> semaphores, can't be anything else.
>
> Graham
>
> On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com> wrote:
> > Ok the directive did take effect as the log entry below shows:
> >
> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: Creating 4 session mutexes
> > based on 6 max processes and 25 max threads.
> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: using mutex_directory /tmp
> >
> >
> > Still see this however:
> >
> > ValueError: Failed to acquire global mutex lock
> >
> > I will try recompiling with the option you mentioned and see what happens.
> >
> >
> > --Mike
> >
> >
> > -----Original Message-----
> > From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
> > Sent: Tuesday, October 23, 2007 6:40 AM
> > To: Michael Robokoff
> > Cc: mod_python
> > Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
> >
> > On 23/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com> wrote:
> > > [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session
> mutexes
> > > based on 6 max processes and 25 max threads.
> >
> > BTW, what did you end up setting mod_python.mutex_locks to? If you use
> > 4 like I said, then it can't have been in correct part of Apache
> > configuration, outside of all VirtualHost, as error log still shows '8
> > session mutexes'.
> >
> > if you can't get this to work, you might rebuild mod_python and
> > specific --with-max-locks=4 option to configure to force lower value
> > to be compiled in.
> >
> > Graham
> >
> >
> >
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080806/b9d0d366/attachment.html
From ynj0qeh02 at sneakemail.com  Wed Aug  6 13:48:52 2008
From: ynj0qeh02 at sneakemail.com (Jason Carver)
Date: Wed Aug  6 13:48:58 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <88e286470808051736s65ebdecg8f2c998663bf2c32@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
	<88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>
	<30118-63458@sneakemail.com>
	<88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>
	<85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>
	<88e286470808051736s65ebdecg8f2c998663bf2c32@mail.gmail.com>
Message-ID: <85f667130808061048h3229b280gf267265f1f3cb81c@mail.gmail.com>

Great, thanks for your help!  Is there a good place for me to file a feature
request to have mod_python do something besides crash in this case?

For reference, I have code here to demonstrate the bug and workaround:

def testCrash(req):
    """
    Reliably crash server (on 2nd page access)
    Open as: http://server/index.py/testCrash
    """
    handler = logging.StreamHandler(req)
    logging.getLogger('').addHandler( handler )
    logging.exception('I crash')

    #removing this line will cause an apache crash on the
    #    second web page access
    logging.getLogger('').removeHandler(handler)

I have confirmed that the workaround works reliably for me.

Cheers,
Jason

On Tue, Aug 5, 2008 at 8:36 PM, Graham Dumpleton
graham.dumpleton-at-gmail.com |public mailing list| <
a9ghk53mp50t@sneakemail.com> wrote:

> Just realised what the problem is, rather obvious really.
>
> You are supplying a mod_python request object 'req' to:
>
>  logging.getLogger('').addHandler(logging.StreamHandler(req))
>
> You can't do that, as the logging handler you are creating will
> persist beyond the lifetime of the internals of the 'req' object.
> Thus, when logging tries to access it later, it will crash Apache.
>
> In other words, 'req' is just a wrapper for some internal Apache data
> structures which will go away. The mod_python code doesn't currently
> try and protect itself from user code making the mistake of retaining
> the 'req' object longer than it should and then accessing those
> internals.
>
> Graham
>
> 2008/8/6 Jason Carver <ynj0qeh02@sneakemail.com>:
> > If I try to install mod_python without python 2.5 installed, mod_python
> > refuses, so I assume you mean uninstall all versions of python, then
> install
> > python 2.5.2, then mod_python-3.3.1.win32-py2.5-Apache2.2.exe
> >
> > I did that, with no changes.  I get the same Traceback during mod_python
> > install and I can still reproduce the crash reliably.
> >
> > Bug requirements update: It does not matter if I test the req object, it
> > only matters if the req object has something set.  So these are the new
> > requirements to reproduce the bug
> >
> > use built in logging module
> > raise Exception
> > call page with variables (ie~ http://localhost/index.py?action=boom)
> > use the following code:
> >
> > import logging
> >
> > def index(req):
> >     """Handles all Browser Requests"""
> >     try:
> >         logging.getLogger('').addHandler( logging.StreamHandler(req) )
> >
> >         raise Exception('Goodbye Apache')
> >
> >     except Exception, e:
> >         logging.exception('I crash')
> >         raise
> >
> > So there seems to be some kind of three way interaction between the
> logging
> > module, the apache req module, and exception handling.  If any one of the
> > three are not involved, apache does not crash...
> >
> > For now I can use a home-grown logger to get around the bug, but I hate
> to
> > build code that already exists and make future developers have to learn
> my
> > logger instead of the built-in one.
> >
> > Cheers,
> > Jason
> >
> > On Mon, Aug 4, 2008 at 9:44 PM, Graham Dumpleton
> > graham.dumpleton-at-gmail.com |public mailing list|
> > <a9ghk53mp50t@sneakemail.com> wrote:
> >>
> >> Please use reply-all and keep discussion on the list, don't reply just
> to
> >> me.
> >>
> >> Have you tried uninstalling all versions of Python and mod_python
> >> first and then install it? Ie., don't install when you have existing
> >> versions on the system.
> >>
> >> When installing packages, are you doing it as a user with
> >> administrator privileges?
> >>
> >> Graham
> >>
> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
> >> > Unfortunately, when I tried to install the mod_python 3.3.1 for 2.5 I
> >> > got
> >> > this traceback:
> >> > Traceback (most recent call last):
> >> >   File "boot_com_servers.py", line 21, in <module>
> >> >   File "C:\Python25\Lib\site-packages\pythoncom.py", line 3, in
> <module>
> >> >     pywintypes.__import_pywin32_system_module__("pythoncom",
> globals())
> >> >   File "C:\Python25\Lib\site-packages\win32\Lib\pywintypes.py", line
> 98,
> >> > in
> >> > __import_pywin32_system_module__
> >> >     ('.dll', 'rb', imp.C_EXTENSION))
> >> > ImportError: DLL load failed: The specified procedure could not be
> >> > found.
> >> >
> >> > and when I try to start apache 2 anyway, it says "The requested
> >> > operation
> >> > has failed!"
> >> >
> >> > That's why I was using the version for 2.4.
> >> >
> >> > On Mon, Aug 4, 2008 at 9:21 PM, Graham Dumpleton
> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
> >> >>
> >> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
> >> >> > Thanks for the quick reply!  Answers inline...
> >> >> >
> >> >> > On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
> >> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
> >> >> >>
> >> >> >> What operating system? What version of Python? What version of
> >> >> >> mod_python?
> >> >> >
> >> >> > I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
> >> >> >
> >> >> > I hacked the binary to use 2.5 on Windows, but the same problem is
> >> >> > reproducible on Ubuntu 7.10 using the latest source from svn
> compiled
> >> >> > with
> >> >> > python 2.5.
> >> >> >
> >> >> >> What startup messages for mod_python are in the Apache error log?
> >> >> >
> >> >> >
> >> >> > [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007
> >> >> > 11:48:48
> >> >> > [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process
> >> >> > 27164
> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python version
> >> >> > mismatch,
> >> >> > expected '2.4.3', found '2.5'.
> >> >>
> >> >> This is why it is probably breaking. Install mod_python compiled
> >> >> against Python 2.5. The version you are using was compiled against
> >> >> older version of Python.
> >> >>
> >> >> Fix your installation and try again.
> >> >>
> >> >> Do you get similar warnings on your other platform as well?
> >> >>
> >> >> Graham
> >> >>
> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable
> >> >> > found
> >> >> > 'C:\\xampp\\apache\\bin\\apache.exe'.
> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being
> >> >> > used
> >> >> > 'C:\\Program
> >> >> >
> >> >> >
> >> >> >
> Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
> >> >> > [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session
> >> >> > mutexes
> >> >> > based on 0 max processes and 250 max threads.
> >> >> >
> >> >> >>
> >> >> >>
> >> >> >> What is the mod_python configuration you have in Apache
> >> >> >> configuration
> >> >> >> files?
> >> >> >
> >> >> >
> >> >> > PythonOption mod_python.mutex_directory "/pytmp"
> >> >> > PythonOption mod_python.mutex_locks 8
> >> >> >
> >> >> > AliasMatch      ^/slique(.*)        'C:/Documents and
> >> >> > Settings/Jason/My
> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src/$1'
> >> >> >
> >> >> > <Directory 'C:/Documents and Settings/Jason/My
> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src'>
> >> >> >     Options Indexes ExecCGI FollowSymLinks MultiViews
> >> >> >     AllowOverride All
> >> >> >
> >> >> >     AddHandler mod_python .py
> >> >> >     PythonHandler mod_python.publisher
> >> >> >     PythonDebug On
> >> >> >     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
> >> >> >
> >> >> > </Directory>
> >> >> >
> >> >> >>
> >> >> >>
> >> >> >> Specifically, are you setting PythonPath directive in really
> strange
> >> >> >> ways?
> >> >> >
> >> >> > PythonPath is set this way
> >> >> > PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
> >> >> >
> >> >> >>
> >> >> >>
> >> >> >> Does it happen if you don't use the 'logging' module?
> >> >> >
> >> >> > If I comment out logging.exception('I crash'), then the traceback
> >> >> > prints
> >> >> > to
> >> >> > screen as expected.
> >> >> >
> >> >> >>
> >> >> >> Graham
> >> >> >>
> >> >> >> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
> >> >> >> > Here is code that consistently crashes Apache for me:
> >> >> >> >
> >> >> >> > import logging
> >> >> >> >
> >> >> >> > def index(req):
> >> >> >> >     """Handles all Browser Requests"""
> >> >> >> >     try:
> >> >> >> >         reqHandler = logging.StreamHandler(req)
> >> >> >> >         logging.getLogger('').addHandler(reqHandler)
> >> >> >> >         if req.form.has_key('action'):
> >> >> >> >             raise Exception('Goodbye Apache')
> >> >> >> >     except Exception, e:
> >> >> >> >         logging.exception('I crash')
> >> >> >> >         raise
> >> >> >> >
> >> >> >> > Now just go to the site with /?action=dosomething and it will
> >> >> >> > crash
> >> >> >> >
> >> >> >> > Removing the if statement, the exception, or the logger are all
> >> >> >> > ways
> >> >> >> > of
> >> >> >> > alleviating the crash, but none of them should be necessary.
> >> >> >> >
> >> >> >> > Cheers,
> >> >> >> > Jason
> >> >> >> >
> >> >> >> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver
> >> >> >> > <ynj0qeh02@sneakemail.com>
> >> >> >> > wrote:
> >> >> >> >>
> >> >> >> >> Hi all,
> >> >> >> >>
> >> >> >> >> I am having the craziest error, confirmed on both a LAMPython
> and
> >> >> >> >> WAMPython setup: exceptions in mod_python are causing Apache to
> >> >> >> >> crash
> >> >> >> >> hard.
> >> >> >> >> Even stranger is that the exceptions have to meet a few
> specific
> >> >> >> >> conditions
> >> >> >> >> to cause Apache to crash.
> >> >> >> >>
> >> >> >> >> As best I can tell those conditions include:
> >> >> >> >>
> >> >> >> >> raising an exception (this problem always goes away if the
> >> >> >> >> exception
> >> >> >> >> is
> >> >> >> >> commented out)
> >> >> >> >> having the exception be inside an if-block that tests a
> >> >> >> >> dictionary
> >> >> >> >> (the
> >> >> >> >> problem goes away if I do something like """if 'hello' ==
> >> >> >> >> 'hello':
> >> >> >> >> raise
> >> >> >> >> Exception('goodbye')""")
> >> >> >> >> catching the exception and logging it using the python built-in
> >> >> >> >> logging.exception(e) (the problem goes away if I comment out
> the
> >> >> >> >> logger)
> >> >> >> >>
> >> >> >> >> Apache does not write anything to its error.log, so it was a
> bit
> >> >> >> >> of
> >> >> >> >> an
> >> >> >> >> adventure to discover all these elements.
> >> >> >> >>
> >> >> >> >> Any ideas?
> >> >> >> >>
> >> >> >> >> Cheers,
> >> >> >> >> Jason
> >> >> >> >
> >> >> >> > _______________________________________________
> >> >> >> > Mod_python mailing list
> >> >> >> > Mod_python@modpython.org
> >> >> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >> >> >> >
> >> >> >> >
> >> >> >
> >> >> >
> >> >
> >> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080806/3bd46233/attachment-0001.html
From graham.dumpleton at gmail.com  Wed Aug  6 19:23:08 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Aug  6 19:23:10 2008
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <C4BF2B03.3237%david.cardozo@apioutsourcing.com>
References: <C4BF2B03.3237%david.cardozo@apioutsourcing.com>
Message-ID: <88e286470808061623k320a4508sa21cea3dacf60d18@mail.gmail.com>

2008/8/7 David Cardozo <david.cardozo@apioutsourcing.com>:
> I apologize by resurrecting this email thread, but I thought I would post
> the "what worked for me" solution in case someone else ever come across it.
>
> For a quick history: when Mike Robokoff worked on this issue back in October
> (we both worked together at the same company), we were able to work around
> it by making changes to our python scripts to minimize the time spent
> holding a lock to the Session.dbm file. This seemed to work fine for a
> while. However, as our user load level increased, this problem started
> manifesting itself again. I dedicated myself to this issue during this past
> week and finally was able to narrow it down to the fix that solve it...
> Hopefully once and for all.
>
> Here is my analysis of this issue; please correct me if you think something
> doesn't sound right:
>
> The root cause of this problem was the use of a bad mutex implementation by
> mod_python in Solaris.

No. The mod_python package just uses what APR has selected as the
default. If there is a problem with fcntl on Solaris then you need to
be asking the APR folks why they are defaulting to using that over
something that works properly. So, not strictly a mod_python problem
and the fact that you also had to set SSLMutex and AcceptMutex
reinforces that.

Note that --enable-nonportable-atomics wouldn't make a difference as
that likely only applies to in process replacement for certain uses of
local thread mutex. A global mutex is a lock that works across
processes and so no machine code level thing could in itself work as
far as I can see.

As far as mod_python goes, only change I can see you might benefit from is:

  http://issues.apache.org/jira/browse/MODPYTHON-202

That is, mod_python providing a directive akin to AcceptMutex to
override what type of mutex it uses. That way you wouldn't have to
change the code, but could configure it instead.

BTW, you don't have your Apache installation, including directory
where locks are, being served off an NFS partition do you. File based
locking used to at least have some issues with NFS. This was some time
back though in Solaris and presume they would have addressed it by
now.

Graham

> Mod_python relies on operating system mutexes to lock file system resources;
> these mutexes are provided by the APR library (Apache Portable Runtime) by
> invocation of the following method from mod_python.c:
>
>  apr_global_mutex_create(&mutex[n], fname, APR_LOCK_DEFAULT, p);
>
> The above call defaults to use the operating system default mutex
> implementation (fcntl) which, in my opinion, does not work properly in an
> Apache worker MPM model under any type of load.
>
> by modifying the above call to:
>
> apr_global_mutex_create(&mutex[n], fname,  APR_LOCK_POSIXSEM, p);
>
> which forces the use of the POSIX semaphores implementation of mutexes by
> mod_python, the problem was minimized to a just a few instances of the
> "mutex" error under a moderate load: 400 concurrent threads.
>
> The final change to make the problem go away completely was to modify the
> AcceptMutex and SSLMutex properties in the httpd.conf file to "posixsem".
> This, together with the mod_python changed, made the "mutex" error go away
> even for 6400 concurrent threads.
>
> I still ignore why the changes to AcceptMutex and SSLMutex are required
> since our Apache installs were compiled with the
> "--enable-nonportable-atomics" which, according to the Apache documentation
> ( http://httpd.apache.org/docs/2.2/misc/perf-tuning.html#compiletime):
>
> "Solaris on SPARC
> By default, APR uses mutex-based atomics on Solaris/SPARC. If you configure
> with --enable-nonportable-atomics, however, APR generates code that uses a
> SPARC v8plus opcode for fast hardware compare-and-swap. If you configure
> Apache with this option, the atomic operations will be more efficient
> (allowing for lower CPU utilization and higher concurrency), but the
> resulting executable will run only on UltraSPARC chips. "
>
> Maybe, even though we compile with that option, something in the OS, Apache
> or APR, still doesn't allow us to take advantage of atomic operations. This
> is pure speculation.
>
> This is the email thread that pointed me to the right direction:
> http://www.modpython.org/pipermail/mod_python/2006-November/022538.html
> I'm not using the ITK MPM, just straight worker MPM, but that change made
> the trick for me.
>
> Regards,
>
> David.
>
> -------------- Last message in email thread ---------------------------
>
> [mod_python] ValueError: Failed to acquire global mutex lock
> Graham Dumpleton graham.dumpleton at gmail.com
> Wed Oct 24 23:04:05 EDT 2007
>
>     * Previous message: [mod_python] Problems with Apache
>     * Next message: [mod_python] Multiple Django Applications
>     * Messages sorted by: [ date ] [ thread ] [ subject ] [ author ]
>
> Going by errors posted by someone else for other thread, seems that if
> semaphores exhausted, error would occur at mod_python startup not when
> locking the mutex.
>
> I'll have to go back and read all your emails again. You said you were
> using 'worker' MPM now didn't you. Your not using some strange MPM
> like perchild or ITK-MPM are you. I know that these cause problems for
> these mutexes in mod_python because of how different processes wanting
> to lock the mutex run as different users.
>
> Graham
>
> On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com> wrote:
>> # ipcs
>> IPC status from <running system> as of Wed Oct 24 06:25:17 CDT 2007
>> T         ID      KEY        MODE        OWNER    GROUP
>> Message Queues:
>> Shared Memory:
>> Semaphores:
>> s          2   0          --ra-------      api    other
>>
>> Not sure how to read that.
>>
>> If the problem is the semaphores, Shouldn't I be able to use the following
>> set semsys:seminfo_semmni=2048
>> set semsys:seminfo_semmns=2048
>> set semsys:seminfo_semmnu=1024
>> set semsys:seminfo_semmsl=300
>> set semsys:seminfo_semopm=128
>> set semsys:seminfo_semume=64
>>
>> to make more semaphores available?
>>
>> I tried that but it didn't change anything, do you think that was not
>> enough?
>>
>>
>> --Mike
>>
>>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
>> Sent: Tuesday, October 23, 2007 7:08 PM
>> To: Michael Robokoff
>> Cc: mod_python
>> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>>
>> If you run 'ipcs' what is the output? Something must be using all the
>> semaphores, can't be anything else.
>>
>> Graham
>>
>> On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>> wrote:
>> > Ok the directive did take effect as the log entry below shows:
>> >
>> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: Creating 4 session
>> > mutexes
>> > based on 6 max processes and 25 max threads.
>> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: using mutex_directory
>> > /tmp
>> >
>> >
>> > Still see this however:
>> >
>> > ValueError: Failed to acquire global mutex lock
>> >
>> > I will try recompiling with the option you mentioned and see what
>> > happens.
>> >
>> >
>> > --Mike
>> >
>> >
>> > -----Original Message-----
>> > From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
>> > Sent: Tuesday, October 23, 2007 6:40 AM
>> > To: Michael Robokoff
>> > Cc: mod_python
>> > Subject: Re: [mod_python] ValueError: Failed to acquire global mutex
>> > lock
>> >
>> > On 23/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>> > wrote:
>> > > [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session
>> mutexes
>> > > based on 6 max processes and 25 max threads.
>> >
>> > BTW, what did you end up setting mod_python.mutex_locks to? If you use
>> > 4 like I said, then it can't have been in correct part of Apache
>> > configuration, outside of all VirtualHost, as error log still shows '8
>> > session mutexes'.
>> >
>> > if you can't get this to work, you might rebuild mod_python and
>> > specific --with-max-locks=4 option to configure to force lower value
>> > to be compiled in.
>> >
>> > Graham
>> >
>> >
>> >
>>
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Wed Aug  6 19:27:13 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Aug  6 19:27:16 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <85f667130808061048h3229b280gf267265f1f3cb81c@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<85f667130808041355n5973acedw85b5f1ca8a8e3686@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
	<88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>
	<30118-63458@sneakemail.com>
	<88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>
	<85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>
	<88e286470808051736s65ebdecg8f2c998663bf2c32@mail.gmail.com>
	<85f667130808061048h3229b280gf267265f1f3cb81c@mail.gmail.com>
Message-ID: <88e286470808061627x4191e53fmedc1dd042ab3161c@mail.gmail.com>

2008/8/7 Jason Carver <ynj0qeh02@sneakemail.com>:
> Great, thanks for your help!  Is there a good place for me to file a feature
> request to have mod_python do something besides crash in this case?

The problem has been discussed before, but can't see that there is an
issue for it. Issues can be created at:

  http://issues.apache.org/jira/browse/MODPYTHON-202

Yes Python could protect against this so a crash doesn't occur, but
your code shouldn't have been doing that in the first place.

Graham

> For reference, I have code here to demonstrate the bug and workaround:
>
> def testCrash(req):
>     """
>     Reliably crash server (on 2nd page access)
>     Open as: http://server/index.py/testCrash
>     """
>     handler = logging.StreamHandler(req)
>     logging.getLogger('').addHandler( handler )
>     logging.exception('I crash')
>
>     #removing this line will cause an apache crash on the
>     #    second web page access
>     logging.getLogger('').removeHandler(handler)
>
> I have confirmed that the workaround works reliably for me.
>
> Cheers,
> Jason
>
> On Tue, Aug 5, 2008 at 8:36 PM, Graham Dumpleton
> graham.dumpleton-at-gmail.com |public mailing list|
> <a9ghk53mp50t@sneakemail.com> wrote:
>>
>> Just realised what the problem is, rather obvious really.
>>
>> You are supplying a mod_python request object 'req' to:
>>
>>  logging.getLogger('').addHandler(logging.StreamHandler(req))
>>
>> You can't do that, as the logging handler you are creating will
>> persist beyond the lifetime of the internals of the 'req' object.
>> Thus, when logging tries to access it later, it will crash Apache.
>>
>> In other words, 'req' is just a wrapper for some internal Apache data
>> structures which will go away. The mod_python code doesn't currently
>> try and protect itself from user code making the mistake of retaining
>> the 'req' object longer than it should and then accessing those
>> internals.
>>
>> Graham
>>
>> 2008/8/6 Jason Carver <ynj0qeh02@sneakemail.com>:
>> > If I try to install mod_python without python 2.5 installed, mod_python
>> > refuses, so I assume you mean uninstall all versions of python, then
>> > install
>> > python 2.5.2, then mod_python-3.3.1.win32-py2.5-Apache2.2.exe
>> >
>> > I did that, with no changes.  I get the same Traceback during mod_python
>> > install and I can still reproduce the crash reliably.
>> >
>> > Bug requirements update: It does not matter if I test the req object, it
>> > only matters if the req object has something set.  So these are the new
>> > requirements to reproduce the bug
>> >
>> > use built in logging module
>> > raise Exception
>> > call page with variables (ie~ http://localhost/index.py?action=boom)
>> > use the following code:
>> >
>> > import logging
>> >
>> > def index(req):
>> >     """Handles all Browser Requests"""
>> >     try:
>> >         logging.getLogger('').addHandler( logging.StreamHandler(req) )
>> >
>> >         raise Exception('Goodbye Apache')
>> >
>> >     except Exception, e:
>> >         logging.exception('I crash')
>> >         raise
>> >
>> > So there seems to be some kind of three way interaction between the
>> > logging
>> > module, the apache req module, and exception handling.  If any one of
>> > the
>> > three are not involved, apache does not crash...
>> >
>> > For now I can use a home-grown logger to get around the bug, but I hate
>> > to
>> > build code that already exists and make future developers have to learn
>> > my
>> > logger instead of the built-in one.
>> >
>> > Cheers,
>> > Jason
>> >
>> > On Mon, Aug 4, 2008 at 9:44 PM, Graham Dumpleton
>> > graham.dumpleton-at-gmail.com |public mailing list|
>> > <a9ghk53mp50t@sneakemail.com> wrote:
>> >>
>> >> Please use reply-all and keep discussion on the list, don't reply just
>> >> to
>> >> me.
>> >>
>> >> Have you tried uninstalling all versions of Python and mod_python
>> >> first and then install it? Ie., don't install when you have existing
>> >> versions on the system.
>> >>
>> >> When installing packages, are you doing it as a user with
>> >> administrator privileges?
>> >>
>> >> Graham
>> >>
>> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>> >> > Unfortunately, when I tried to install the mod_python 3.3.1 for 2.5 I
>> >> > got
>> >> > this traceback:
>> >> > Traceback (most recent call last):
>> >> >   File "boot_com_servers.py", line 21, in <module>
>> >> >   File "C:\Python25\Lib\site-packages\pythoncom.py", line 3, in
>> >> > <module>
>> >> >     pywintypes.__import_pywin32_system_module__("pythoncom",
>> >> > globals())
>> >> >   File "C:\Python25\Lib\site-packages\win32\Lib\pywintypes.py", line
>> >> > 98,
>> >> > in
>> >> > __import_pywin32_system_module__
>> >> >     ('.dll', 'rb', imp.C_EXTENSION))
>> >> > ImportError: DLL load failed: The specified procedure could not be
>> >> > found.
>> >> >
>> >> > and when I try to start apache 2 anyway, it says "The requested
>> >> > operation
>> >> > has failed!"
>> >> >
>> >> > That's why I was using the version for 2.4.
>> >> >
>> >> > On Mon, Aug 4, 2008 at 9:21 PM, Graham Dumpleton
>> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>> >> >>
>> >> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>> >> >> > Thanks for the quick reply!  Answers inline...
>> >> >> >
>> >> >> > On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
>> >> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>> >> >> >>
>> >> >> >> What operating system? What version of Python? What version of
>> >> >> >> mod_python?
>> >> >> >
>> >> >> > I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
>> >> >> >
>> >> >> > I hacked the binary to use 2.5 on Windows, but the same problem is
>> >> >> > reproducible on Ubuntu 7.10 using the latest source from svn
>> >> >> > compiled
>> >> >> > with
>> >> >> > python 2.5.
>> >> >> >
>> >> >> >> What startup messages for mod_python are in the Apache error log?
>> >> >> >
>> >> >> >
>> >> >> > [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007
>> >> >> > 11:48:48
>> >> >> > [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process
>> >> >> > 27164
>> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python version
>> >> >> > mismatch,
>> >> >> > expected '2.4.3', found '2.5'.
>> >> >>
>> >> >> This is why it is probably breaking. Install mod_python compiled
>> >> >> against Python 2.5. The version you are using was compiled against
>> >> >> older version of Python.
>> >> >>
>> >> >> Fix your installation and try again.
>> >> >>
>> >> >> Do you get similar warnings on your other platform as well?
>> >> >>
>> >> >> Graham
>> >> >>
>> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable
>> >> >> > found
>> >> >> > 'C:\\xampp\\apache\\bin\\apache.exe'.
>> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being
>> >> >> > used
>> >> >> > 'C:\\Program
>> >> >> >
>> >> >> >
>> >> >> >
>> >> >> > Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
>> >> >> > [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session
>> >> >> > mutexes
>> >> >> > based on 0 max processes and 250 max threads.
>> >> >> >
>> >> >> >>
>> >> >> >>
>> >> >> >> What is the mod_python configuration you have in Apache
>> >> >> >> configuration
>> >> >> >> files?
>> >> >> >
>> >> >> >
>> >> >> > PythonOption mod_python.mutex_directory "/pytmp"
>> >> >> > PythonOption mod_python.mutex_locks 8
>> >> >> >
>> >> >> > AliasMatch      ^/slique(.*)        'C:/Documents and
>> >> >> > Settings/Jason/My
>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src/$1'
>> >> >> >
>> >> >> > <Directory 'C:/Documents and Settings/Jason/My
>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src'>
>> >> >> >     Options Indexes ExecCGI FollowSymLinks MultiViews
>> >> >> >     AllowOverride All
>> >> >> >
>> >> >> >     AddHandler mod_python .py
>> >> >> >     PythonHandler mod_python.publisher
>> >> >> >     PythonDebug On
>> >> >> >     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >> >> >
>> >> >> > </Directory>
>> >> >> >
>> >> >> >>
>> >> >> >>
>> >> >> >> Specifically, are you setting PythonPath directive in really
>> >> >> >> strange
>> >> >> >> ways?
>> >> >> >
>> >> >> > PythonPath is set this way
>> >> >> > PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>> >> >> >
>> >> >> >>
>> >> >> >>
>> >> >> >> Does it happen if you don't use the 'logging' module?
>> >> >> >
>> >> >> > If I comment out logging.exception('I crash'), then the traceback
>> >> >> > prints
>> >> >> > to
>> >> >> > screen as expected.
>> >> >> >
>> >> >> >>
>> >> >> >> Graham
>> >> >> >>
>> >> >> >> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
>> >> >> >> > Here is code that consistently crashes Apache for me:
>> >> >> >> >
>> >> >> >> > import logging
>> >> >> >> >
>> >> >> >> > def index(req):
>> >> >> >> >     """Handles all Browser Requests"""
>> >> >> >> >     try:
>> >> >> >> >         reqHandler = logging.StreamHandler(req)
>> >> >> >> >         logging.getLogger('').addHandler(reqHandler)
>> >> >> >> >         if req.form.has_key('action'):
>> >> >> >> >             raise Exception('Goodbye Apache')
>> >> >> >> >     except Exception, e:
>> >> >> >> >         logging.exception('I crash')
>> >> >> >> >         raise
>> >> >> >> >
>> >> >> >> > Now just go to the site with /?action=dosomething and it will
>> >> >> >> > crash
>> >> >> >> >
>> >> >> >> > Removing the if statement, the exception, or the logger are all
>> >> >> >> > ways
>> >> >> >> > of
>> >> >> >> > alleviating the crash, but none of them should be necessary.
>> >> >> >> >
>> >> >> >> > Cheers,
>> >> >> >> > Jason
>> >> >> >> >
>> >> >> >> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver
>> >> >> >> > <ynj0qeh02@sneakemail.com>
>> >> >> >> > wrote:
>> >> >> >> >>
>> >> >> >> >> Hi all,
>> >> >> >> >>
>> >> >> >> >> I am having the craziest error, confirmed on both a LAMPython
>> >> >> >> >> and
>> >> >> >> >> WAMPython setup: exceptions in mod_python are causing Apache
>> >> >> >> >> to
>> >> >> >> >> crash
>> >> >> >> >> hard.
>> >> >> >> >> Even stranger is that the exceptions have to meet a few
>> >> >> >> >> specific
>> >> >> >> >> conditions
>> >> >> >> >> to cause Apache to crash.
>> >> >> >> >>
>> >> >> >> >> As best I can tell those conditions include:
>> >> >> >> >>
>> >> >> >> >> raising an exception (this problem always goes away if the
>> >> >> >> >> exception
>> >> >> >> >> is
>> >> >> >> >> commented out)
>> >> >> >> >> having the exception be inside an if-block that tests a
>> >> >> >> >> dictionary
>> >> >> >> >> (the
>> >> >> >> >> problem goes away if I do something like """if 'hello' ==
>> >> >> >> >> 'hello':
>> >> >> >> >> raise
>> >> >> >> >> Exception('goodbye')""")
>> >> >> >> >> catching the exception and logging it using the python
>> >> >> >> >> built-in
>> >> >> >> >> logging.exception(e) (the problem goes away if I comment out
>> >> >> >> >> the
>> >> >> >> >> logger)
>> >> >> >> >>
>> >> >> >> >> Apache does not write anything to its error.log, so it was a
>> >> >> >> >> bit
>> >> >> >> >> of
>> >> >> >> >> an
>> >> >> >> >> adventure to discover all these elements.
>> >> >> >> >>
>> >> >> >> >> Any ideas?
>> >> >> >> >>
>> >> >> >> >> Cheers,
>> >> >> >> >> Jason
>> >> >> >> >
>> >> >> >> > _______________________________________________
>> >> >> >> > Mod_python mailing list
>> >> >> >> > Mod_python@modpython.org
>> >> >> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >> >> >> >
>> >> >> >> >
>> >> >> >
>> >> >> >
>> >> >
>> >> >
>> >
>> >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >
>> >
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Wed Aug  6 19:28:21 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Aug  6 19:28:23 2008
Subject: [mod_python] Re: python exceptions cause Apache to crash
In-Reply-To: <88e286470808061627x4191e53fmedc1dd042ab3161c@mail.gmail.com>
References: <85f667130808041151t10bb4738g43750e0cc1b03617@mail.gmail.com>
	<88e286470808041628w235961e6l3e4658fa69b52b1@mail.gmail.com>
	<19737-76735@sneakemail.com>
	<88e286470808041821w7fca71eck9deeee0b897e4d96@mail.gmail.com>
	<30118-63458@sneakemail.com>
	<88e286470808041844u38500992g3e3180c34c96f00e@mail.gmail.com>
	<85f667130808050959v13708fd8vcba595352f2addf1@mail.gmail.com>
	<88e286470808051736s65ebdecg8f2c998663bf2c32@mail.gmail.com>
	<85f667130808061048h3229b280gf267265f1f3cb81c@mail.gmail.com>
	<88e286470808061627x4191e53fmedc1dd042ab3161c@mail.gmail.com>
Message-ID: <88e286470808061628i872394exb39e284918d2a705@mail.gmail.com>

Sorry, that should have been:

  http://issues.apache.org/jira/browse/MODPYTHON

Graham

2008/8/7 Graham Dumpleton <graham.dumpleton@gmail.com>:
> 2008/8/7 Jason Carver <ynj0qeh02@sneakemail.com>:
>> Great, thanks for your help!  Is there a good place for me to file a feature
>> request to have mod_python do something besides crash in this case?
>
> The problem has been discussed before, but can't see that there is an
> issue for it. Issues can be created at:
>
>  http://issues.apache.org/jira/browse/MODPYTHON-202
>
> Yes Python could protect against this so a crash doesn't occur, but
> your code shouldn't have been doing that in the first place.
>
> Graham
>
>> For reference, I have code here to demonstrate the bug and workaround:
>>
>> def testCrash(req):
>>     """
>>     Reliably crash server (on 2nd page access)
>>     Open as: http://server/index.py/testCrash
>>     """
>>     handler = logging.StreamHandler(req)
>>     logging.getLogger('').addHandler( handler )
>>     logging.exception('I crash')
>>
>>     #removing this line will cause an apache crash on the
>>     #    second web page access
>>     logging.getLogger('').removeHandler(handler)
>>
>> I have confirmed that the workaround works reliably for me.
>>
>> Cheers,
>> Jason
>>
>> On Tue, Aug 5, 2008 at 8:36 PM, Graham Dumpleton
>> graham.dumpleton-at-gmail.com |public mailing list|
>> <a9ghk53mp50t@sneakemail.com> wrote:
>>>
>>> Just realised what the problem is, rather obvious really.
>>>
>>> You are supplying a mod_python request object 'req' to:
>>>
>>>  logging.getLogger('').addHandler(logging.StreamHandler(req))
>>>
>>> You can't do that, as the logging handler you are creating will
>>> persist beyond the lifetime of the internals of the 'req' object.
>>> Thus, when logging tries to access it later, it will crash Apache.
>>>
>>> In other words, 'req' is just a wrapper for some internal Apache data
>>> structures which will go away. The mod_python code doesn't currently
>>> try and protect itself from user code making the mistake of retaining
>>> the 'req' object longer than it should and then accessing those
>>> internals.
>>>
>>> Graham
>>>
>>> 2008/8/6 Jason Carver <ynj0qeh02@sneakemail.com>:
>>> > If I try to install mod_python without python 2.5 installed, mod_python
>>> > refuses, so I assume you mean uninstall all versions of python, then
>>> > install
>>> > python 2.5.2, then mod_python-3.3.1.win32-py2.5-Apache2.2.exe
>>> >
>>> > I did that, with no changes.  I get the same Traceback during mod_python
>>> > install and I can still reproduce the crash reliably.
>>> >
>>> > Bug requirements update: It does not matter if I test the req object, it
>>> > only matters if the req object has something set.  So these are the new
>>> > requirements to reproduce the bug
>>> >
>>> > use built in logging module
>>> > raise Exception
>>> > call page with variables (ie~ http://localhost/index.py?action=boom)
>>> > use the following code:
>>> >
>>> > import logging
>>> >
>>> > def index(req):
>>> >     """Handles all Browser Requests"""
>>> >     try:
>>> >         logging.getLogger('').addHandler( logging.StreamHandler(req) )
>>> >
>>> >         raise Exception('Goodbye Apache')
>>> >
>>> >     except Exception, e:
>>> >         logging.exception('I crash')
>>> >         raise
>>> >
>>> > So there seems to be some kind of three way interaction between the
>>> > logging
>>> > module, the apache req module, and exception handling.  If any one of
>>> > the
>>> > three are not involved, apache does not crash...
>>> >
>>> > For now I can use a home-grown logger to get around the bug, but I hate
>>> > to
>>> > build code that already exists and make future developers have to learn
>>> > my
>>> > logger instead of the built-in one.
>>> >
>>> > Cheers,
>>> > Jason
>>> >
>>> > On Mon, Aug 4, 2008 at 9:44 PM, Graham Dumpleton
>>> > graham.dumpleton-at-gmail.com |public mailing list|
>>> > <a9ghk53mp50t@sneakemail.com> wrote:
>>> >>
>>> >> Please use reply-all and keep discussion on the list, don't reply just
>>> >> to
>>> >> me.
>>> >>
>>> >> Have you tried uninstalling all versions of Python and mod_python
>>> >> first and then install it? Ie., don't install when you have existing
>>> >> versions on the system.
>>> >>
>>> >> When installing packages, are you doing it as a user with
>>> >> administrator privileges?
>>> >>
>>> >> Graham
>>> >>
>>> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>>> >> > Unfortunately, when I tried to install the mod_python 3.3.1 for 2.5 I
>>> >> > got
>>> >> > this traceback:
>>> >> > Traceback (most recent call last):
>>> >> >   File "boot_com_servers.py", line 21, in <module>
>>> >> >   File "C:\Python25\Lib\site-packages\pythoncom.py", line 3, in
>>> >> > <module>
>>> >> >     pywintypes.__import_pywin32_system_module__("pythoncom",
>>> >> > globals())
>>> >> >   File "C:\Python25\Lib\site-packages\win32\Lib\pywintypes.py", line
>>> >> > 98,
>>> >> > in
>>> >> > __import_pywin32_system_module__
>>> >> >     ('.dll', 'rb', imp.C_EXTENSION))
>>> >> > ImportError: DLL load failed: The specified procedure could not be
>>> >> > found.
>>> >> >
>>> >> > and when I try to start apache 2 anyway, it says "The requested
>>> >> > operation
>>> >> > has failed!"
>>> >> >
>>> >> > That's why I was using the version for 2.4.
>>> >> >
>>> >> > On Mon, Aug 4, 2008 at 9:21 PM, Graham Dumpleton
>>> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>>> >> >>
>>> >> >> 2008/8/5  <ynj0qeh02@sneakemail.com>:
>>> >> >> > Thanks for the quick reply!  Answers inline...
>>> >> >> >
>>> >> >> > On Mon, Aug 4, 2008 at 7:28 PM, Graham Dumpleton
>>> >> >> > graham.dumpleton-at-......... |public mailing list| <...> wrote:
>>> >> >> >>
>>> >> >> >> What operating system? What version of Python? What version of
>>> >> >> >> mod_python?
>>> >> >> >
>>> >> >> > I am on Windows XP SP3 using Python 2.5 in mod_python 3.3.1
>>> >> >> >
>>> >> >> > I hacked the binary to use 2.5 on Windows, but the same problem is
>>> >> >> > reproducible on Ubuntu 7.10 using the latest source from svn
>>> >> >> > compiled
>>> >> >> > with
>>> >> >> > python 2.5.
>>> >> >> >
>>> >> >> >> What startup messages for mod_python are in the Apache error log?
>>> >> >> >
>>> >> >> >
>>> >> >> > [Mon Aug 04 20:03:21 2008] [notice] Server built: Nov  7 2007
>>> >> >> > 11:48:48
>>> >> >> > [Mon Aug 04 20:03:21 2008] [notice] Parent: Created child process
>>> >> >> > 27164
>>> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python version
>>> >> >> > mismatch,
>>> >> >> > expected '2.4.3', found '2.5'.
>>> >> >>
>>> >> >> This is why it is probably breaking. Install mod_python compiled
>>> >> >> against Python 2.5. The version you are using was compiled against
>>> >> >> older version of Python.
>>> >> >>
>>> >> >> Fix your installation and try again.
>>> >> >>
>>> >> >> Do you get similar warnings on your other platform as well?
>>> >> >>
>>> >> >> Graham
>>> >> >>
>>> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python executable
>>> >> >> > found
>>> >> >> > 'C:\\xampp\\apache\\bin\\apache.exe'.
>>> >> >> > [Mon Aug 04 20:03:22 2008] [error] python_init: Python path being
>>> >> >> > used
>>> >> >> > 'C:\\Program
>>> >> >> >
>>> >> >> >
>>> >> >> >
>>> >> >> > Files\\OpenLibraries\\python;C:\\WINDOWS\\system32\\python25.zip;C:\\Python25\\Lib;C:\\Python25\\DLLs;C:\\Python25\\Lib\\lib-tk;;C:\\xampp\\apache\\bin'.
>>> >> >> > [Mon Aug 04 20:03:22 2008] [notice] mod_python: Creating 8 session
>>> >> >> > mutexes
>>> >> >> > based on 0 max processes and 250 max threads.
>>> >> >> >
>>> >> >> >>
>>> >> >> >>
>>> >> >> >> What is the mod_python configuration you have in Apache
>>> >> >> >> configuration
>>> >> >> >> files?
>>> >> >> >
>>> >> >> >
>>> >> >> > PythonOption mod_python.mutex_directory "/pytmp"
>>> >> >> > PythonOption mod_python.mutex_locks 8
>>> >> >> >
>>> >> >> > AliasMatch      ^/slique(.*)        'C:/Documents and
>>> >> >> > Settings/Jason/My
>>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src/$1'
>>> >> >> >
>>> >> >> > <Directory 'C:/Documents and Settings/Jason/My
>>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src'>
>>> >> >> >     Options Indexes ExecCGI FollowSymLinks MultiViews
>>> >> >> >     AllowOverride All
>>> >> >> >
>>> >> >> >     AddHandler mod_python .py
>>> >> >> >     PythonHandler mod_python.publisher
>>> >> >> >     PythonDebug On
>>> >> >> >     PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>>> >> >> >
>>> >> >> > </Directory>
>>> >> >> >
>>> >> >> >>
>>> >> >> >>
>>> >> >> >> Specifically, are you setting PythonPath directive in really
>>> >> >> >> strange
>>> >> >> >> ways?
>>> >> >> >
>>> >> >> > PythonPath is set this way
>>> >> >> > PythonPath "sys.path + ['C:/Documents and Settings/Jason/My
>>> >> >> > Documents/Coding/eclipse-workspace/slique-dev/src']"
>>> >> >> >
>>> >> >> >>
>>> >> >> >>
>>> >> >> >> Does it happen if you don't use the 'logging' module?
>>> >> >> >
>>> >> >> > If I comment out logging.exception('I crash'), then the traceback
>>> >> >> > prints
>>> >> >> > to
>>> >> >> > screen as expected.
>>> >> >> >
>>> >> >> >>
>>> >> >> >> Graham
>>> >> >> >>
>>> >> >> >> 2008/8/5 Jason Carver <ynj0qeh02@sneakemail.com>:
>>> >> >> >> > Here is code that consistently crashes Apache for me:
>>> >> >> >> >
>>> >> >> >> > import logging
>>> >> >> >> >
>>> >> >> >> > def index(req):
>>> >> >> >> >     """Handles all Browser Requests"""
>>> >> >> >> >     try:
>>> >> >> >> >         reqHandler = logging.StreamHandler(req)
>>> >> >> >> >         logging.getLogger('').addHandler(reqHandler)
>>> >> >> >> >         if req.form.has_key('action'):
>>> >> >> >> >             raise Exception('Goodbye Apache')
>>> >> >> >> >     except Exception, e:
>>> >> >> >> >         logging.exception('I crash')
>>> >> >> >> >         raise
>>> >> >> >> >
>>> >> >> >> > Now just go to the site with /?action=dosomething and it will
>>> >> >> >> > crash
>>> >> >> >> >
>>> >> >> >> > Removing the if statement, the exception, or the logger are all
>>> >> >> >> > ways
>>> >> >> >> > of
>>> >> >> >> > alleviating the crash, but none of them should be necessary.
>>> >> >> >> >
>>> >> >> >> > Cheers,
>>> >> >> >> > Jason
>>> >> >> >> >
>>> >> >> >> > On Mon, Aug 4, 2008 at 2:51 PM, Jason Carver
>>> >> >> >> > <ynj0qeh02@sneakemail.com>
>>> >> >> >> > wrote:
>>> >> >> >> >>
>>> >> >> >> >> Hi all,
>>> >> >> >> >>
>>> >> >> >> >> I am having the craziest error, confirmed on both a LAMPython
>>> >> >> >> >> and
>>> >> >> >> >> WAMPython setup: exceptions in mod_python are causing Apache
>>> >> >> >> >> to
>>> >> >> >> >> crash
>>> >> >> >> >> hard.
>>> >> >> >> >> Even stranger is that the exceptions have to meet a few
>>> >> >> >> >> specific
>>> >> >> >> >> conditions
>>> >> >> >> >> to cause Apache to crash.
>>> >> >> >> >>
>>> >> >> >> >> As best I can tell those conditions include:
>>> >> >> >> >>
>>> >> >> >> >> raising an exception (this problem always goes away if the
>>> >> >> >> >> exception
>>> >> >> >> >> is
>>> >> >> >> >> commented out)
>>> >> >> >> >> having the exception be inside an if-block that tests a
>>> >> >> >> >> dictionary
>>> >> >> >> >> (the
>>> >> >> >> >> problem goes away if I do something like """if 'hello' ==
>>> >> >> >> >> 'hello':
>>> >> >> >> >> raise
>>> >> >> >> >> Exception('goodbye')""")
>>> >> >> >> >> catching the exception and logging it using the python
>>> >> >> >> >> built-in
>>> >> >> >> >> logging.exception(e) (the problem goes away if I comment out
>>> >> >> >> >> the
>>> >> >> >> >> logger)
>>> >> >> >> >>
>>> >> >> >> >> Apache does not write anything to its error.log, so it was a
>>> >> >> >> >> bit
>>> >> >> >> >> of
>>> >> >> >> >> an
>>> >> >> >> >> adventure to discover all these elements.
>>> >> >> >> >>
>>> >> >> >> >> Any ideas?
>>> >> >> >> >>
>>> >> >> >> >> Cheers,
>>> >> >> >> >> Jason
>>> >> >> >> >
>>> >> >> >> > _______________________________________________
>>> >> >> >> > Mod_python mailing list
>>> >> >> >> > Mod_python@modpython.org
>>> >> >> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> >> >> >> >
>>> >> >> >> >
>>> >> >> >
>>> >> >> >
>>> >> >
>>> >> >
>>> >
>>> >
>>> > _______________________________________________
>>> > Mod_python mailing list
>>> > Mod_python@modpython.org
>>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> >
>>> >
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
From David.Bear at asu.edu  Wed Aug  6 22:07:37 2008
From: David.Bear at asu.edu (David Bear)
Date: Wed Aug  6 22:07:44 2008
Subject: [mod_python] media rss syndicator in python
Message-ID: <1d1a54bf0808061907n43c3cf2eqefab3b398b09a713@mail.gmail.com>

Anyone know of an rss syndication module for modpython? I would like to
provide a media rss feed for some web services that I'm thinking about.

The goal is to have a directory where I dump a bunch of jpegs. Then have
modpython (probably using publisher) turn that directory into a media rss
feed.

Then, I'll use the google slideshow api to turn it in to something cool...

-- 
David Bear
College of Public Programs at ASU
602-464-0424
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080806/e9586f2b/attachment.html
From david.cardozo at apioutsourcing.com  Wed Aug  6 23:40:25 2008
From: david.cardozo at apioutsourcing.com (David Cardozo)
Date: Wed Aug  6 23:40:40 2008
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <88e286470808061623k320a4508sa21cea3dacf60d18@mail.gmail.com>
Message-ID: <C4BFD8D9.3252%david.cardozo@apioutsourcing.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 1383 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080806/91bcd822/attachment-0001.jpe
From graham.dumpleton at gmail.com  Wed Aug  6 23:52:30 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Aug  6 23:52:32 2008
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <C4BFD8D9.3252%david.cardozo@apioutsourcing.com>
References: <88e286470808061623k320a4508sa21cea3dacf60d18@mail.gmail.com>
	<C4BFD8D9.3252%david.cardozo@apioutsourcing.com>
Message-ID: <88e286470808062052s3a66b8c5vf5540b0b14d159d1@mail.gmail.com>

2008/8/7 David Cardozo <david.cardozo@apioutsourcing.com>:
> I concur; this is not strictly a mod_python problem, but rather caused by
> the default implementation chosen by APR.
> I remember coming across the MODPYTHON-202 bug report, but couldn't find it
> again to put is as a reference in my previous posting. Thanks for looking it
> up. Is there any chance of this been released soon?

No. That particular issue would be very low priority in the grander
scheme of things.

> Is there a new version
> of mod_python planned for sometime in the near future?

No. I have been trying to commit a few changes to repository for more
important things, but have very little time to even do that. Of the
people who have commit access, I am the only one who even answers
stuff on mailing list these days and I myself haven't even used
mod_python for couple of years. :-)

Graham

> No, we don't have Apache directories mounted via NFS.
>
> David.
>
> On 8/6/08 6:23 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:
>
> 2008/8/7 David Cardozo <david.cardozo@apioutsourcing.com>:
>> I apologize by resurrecting this email thread, but I thought I would post
>> the "what worked for me" solution in case someone else ever come across
>> it.
>>
>> For a quick history: when Mike Robokoff worked on this issue back in
>> October
>> (we both worked together at the same company), we were able to work around
>> it by making changes to our python scripts to minimize the time spent
>> holding a lock to the Session.dbm file. This seemed to work fine for a
>> while. However, as our user load level increased, this problem started
>> manifesting itself again. I dedicated myself to this issue during this
>> past
>> week and finally was able to narrow it down to the fix that solve it...
>> Hopefully once and for all.
>>
>> Here is my analysis of this issue; please correct me if you think
>> something
>> doesn't sound right:
>>
>> The root cause of this problem was the use of a bad mutex implementation
>> by
>> mod_python in Solaris.
>
> No. The mod_python package just uses what APR has selected as the
> default. If there is a problem with fcntl on Solaris then you need to
> be asking the APR folks why they are defaulting to using that over
> something that works properly. So, not strictly a mod_python problem
> and the fact that you also had to set SSLMutex and AcceptMutex
> reinforces that.
>
> Note that --enable-nonportable-atomics wouldn't make a difference as
> that likely only applies to in process replacement for certain uses of
> local thread mutex. A global mutex is a lock that works across
> processes and so no machine code level thing could in itself work as
> far as I can see.
>
> As far as mod_python goes, only change I can see you might benefit from is:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-202
>
> That is, mod_python providing a directive akin to AcceptMutex to
> override what type of mutex it uses. That way you wouldn't have to
> change the code, but could configure it instead.
>
> BTW, you don't have your Apache installation, including directory
> where locks are, being served off an NFS partition do you. File based
> locking used to at least have some issues with NFS. This was some time
> back though in Solaris and presume they would have addressed it by
> now.
>
> Graham
>
>> Mod_python relies on operating system mutexes to lock file system
>> resources;
>> these mutexes are provided by the APR library (Apache Portable Runtime) by
>> invocation of the following method from mod_python.c:
>>
>>  apr_global_mutex_create(&mutex[n], fname, APR_LOCK_DEFAULT, p);
>>
>> The above call defaults to use the operating system default mutex
>> implementation (fcntl) which, in my opinion, does not work properly in an
>> Apache worker MPM model under any type of load.
>>
>> by modifying the above call to:
>>
>> apr_global_mutex_create(&mutex[n], fname,  APR_LOCK_POSIXSEM, p);
>>
>> which forces the use of the POSIX semaphores implementation of mutexes by
>> mod_python, the problem was minimized to a just a few instances of the
>> "mutex" error under a moderate load: 400 concurrent threads.
>>
>> The final change to make the problem go away completely was to modify the
>> AcceptMutex and SSLMutex properties in the httpd.conf file to "posixsem".
>> This, together with the mod_python changed, made the "mutex" error go away
>> even for 6400 concurrent threads.
>>
>> I still ignore why the changes to AcceptMutex and SSLMutex are required
>> since our Apache installs were compiled with the
>> "--enable-nonportable-atomics" which, according to the Apache
>> documentation
>> ( http://httpd.apache.org/docs/2.2/misc/perf-tuning.html#compiletime):
>>
>> "Solaris on SPARC
>> By default, APR uses mutex-based atomics on Solaris/SPARC. If you
>> configure
>> with --enable-nonportable-atomics, however, APR generates code that uses a
>> SPARC v8plus opcode for fast hardware compare-and-swap. If you configure
>> Apache with this option, the atomic operations will be more efficient
>> (allowing for lower CPU utilization and higher concurrency), but the
>> resulting executable will run only on UltraSPARC chips. "
>>
>> Maybe, even though we compile with that option, something in the OS,
>> Apache
>> or APR, still doesn't allow us to take advantage of atomic operations.
>> This
>> is pure speculation.
>>
>> This is the email thread that pointed me to the right direction:
>> http://www.modpython.org/pipermail/mod_python/2006-November/022538.html
>> I'm not using the ITK MPM, just straight worker MPM, but that change made
>> the trick for me.
>>
>> Regards,
>>
>> David.
>>
>> -------------- Last message in email thread ---------------------------
>>
>> [mod_python] ValueError: Failed to acquire global mutex lock
>> Graham Dumpleton graham.dumpleton at gmail.com
>> Wed Oct 24 23:04:05 EDT 2007
>>
>>     * Previous message: [mod_python] Problems with Apache
>>     * Next message: [mod_python] Multiple Django Applications
>>     * Messages sorted by: [ date ] [ thread ] [ subject ] [ author ]
>>
>> Going by errors posted by someone else for other thread, seems that if
>> semaphores exhausted, error would occur at mod_python startup not when
>> locking the mutex.
>>
>> I'll have to go back and read all your emails again. You said you were
>> using 'worker' MPM now didn't you. Your not using some strange MPM
>> like perchild or ITK-MPM are you. I know that these cause problems for
>> these mutexes in mod_python because of how different processes wanting
>> to lock the mutex run as different users.
>>
>> Graham
>>
>> On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>> wrote:
>>> # ipcs
>>> IPC status from <running system> as of Wed Oct 24 06:25:17 CDT 2007
>>> T         ID      KEY        MODE        OWNER    GROUP
>>> Message Queues:
>>> Shared Memory:
>>> Semaphores:
>>> s          2   0          --ra-------      api    other
>>>
>>> Not sure how to read that.
>>>
>>> If the problem is the semaphores, Shouldn't I be able to use the
>>> following
>>> set semsys:seminfo_semmni=2048
>>> set semsys:seminfo_semmns=2048
>>> set semsys:seminfo_semmnu=1024
>>> set semsys:seminfo_semmsl=300
>>> set semsys:seminfo_semopm=128
>>> set semsys:seminfo_semume=64
>>>
>>> to make more semaphores available?
>>>
>>> I tried that but it didn't change anything, do you think that was not
>>> enough?
>>>
>>>
>>> --Mike
>>>
>>>
>>> -----Original Message-----
>>> From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
>>> Sent: Tuesday, October 23, 2007 7:08 PM
>>> To: Michael Robokoff
>>> Cc: mod_python
>>> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>>>
>>> If you run 'ipcs' what is the output? Something must be using all the
>>> semaphores, can't be anything else.
>>>
>>> Graham
>>>
>>> On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>>> wrote:
>>> > Ok the directive did take effect as the log entry below shows:
>>> >
>>> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: Creating 4 session
>>> > mutexes
>>> > based on 6 max processes and 25 max threads.
>>> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: using mutex_directory
>>> > /tmp
>>> >
>>> >
>>> > Still see this however:
>>> >
>>> > ValueError: Failed to acquire global mutex lock
>>> >
>>> > I will try recompiling with the option you mentioned and see what
>>> > happens.
>>> >
>>> >
>>> > --Mike
>>> >
>>> >
>>> > -----Original Message-----
>>> > From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
>>> > Sent: Tuesday, October 23, 2007 6:40 AM
>>> > To: Michael Robokoff
>>> > Cc: mod_python
>>> > Subject: Re: [mod_python] ValueError: Failed to acquire global mutex
>>> > lock
>>> >
>>> > On 23/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>>> > wrote:
>>> > > [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session
>>> mutexes
>>> > > based on 6 max processes and 25 max threads.
>>> >
>>> > BTW, what did you end up setting mod_python.mutex_locks to? If you use
>>> > 4 like I said, then it can't have been in correct part of Apache
>>> > configuration, outside of all VirtualHost, as error log still shows '8
>>> > session mutexes'.
>>> >
>>> > if you can't get this to work, you might rebuild mod_python and
>>> > specific --with-max-locks=4 option to configure to force lower value
>>> > to be compiled in.
>>> >
>>> > Graham
>>> >
>>> >
>>> >
>>>
>>>
>>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
>
>
>
>
> David Cardozo
> Software Systems Architect
>
> 2975 Lone Oak Drive  Suite 100  Eagan, MN  55121
> Direct: 651-675-2604 Fax: 651-675-2699
> Accounts Payable Transformation Research Report
> <http://www.apifao.com/company/AberdeenEquinoxReportMarch2008.pdf>
> www.apifao.com <http://www.apifao.com>
>
From david.cardozo at apioutsourcing.com  Thu Aug  7 09:05:32 2008
From: david.cardozo at apioutsourcing.com (David Cardozo)
Date: Thu Aug  7 09:05:52 2008
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <88e286470808062052s3a66b8c5vf5540b0b14d159d1@mail.gmail.com>
Message-ID: <C4C05D4C.3257%david.cardozo@apioutsourcing.com>

On 8/6/08 10:52 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:

> 2008/8/7 David Cardozo <david.cardozo@apioutsourcing.com>:
>> I concur; this is not strictly a mod_python problem, but rather caused by
>> the default implementation chosen by APR.
>> I remember coming across the MODPYTHON-202 bug report, but couldn't find it
>> again to put is as a reference in my previous posting. Thanks for looking it
>> up. Is there any chance of this been released soon?
> 
> No. That particular issue would be very low priority in the grander
> scheme of things.
> 
>> Is there a new version
>> of mod_python planned for sometime in the near future?
> 
> No. I have been trying to commit a few changes to repository for more
> important things, but have very little time to even do that. Of the
> people who have commit access, I am the only one who even answers
> stuff on mailing list these days and I myself haven't even used
> mod_python for couple of years. :-)

Then I feel obligated to ask what other scripting language have you used
lately with Apache... Is there a second best to python :-)

David.

> 
> Graham
> 
>> No, we don't have Apache directories mounted via NFS.
>> 
>> David.
>> 
>> On 8/6/08 6:23 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:
>> 
>> 2008/8/7 David Cardozo <david.cardozo@apioutsourcing.com>:
>>> I apologize by resurrecting this email thread, but I thought I would post
>>> the "what worked for me" solution in case someone else ever come across
>>> it.
>>> 
>>> For a quick history: when Mike Robokoff worked on this issue back in
>>> October
>>> (we both worked together at the same company), we were able to work around
>>> it by making changes to our python scripts to minimize the time spent
>>> holding a lock to the Session.dbm file. This seemed to work fine for a
>>> while. However, as our user load level increased, this problem started
>>> manifesting itself again. I dedicated myself to this issue during this
>>> past
>>> week and finally was able to narrow it down to the fix that solve it...
>>> Hopefully once and for all.
>>> 
>>> Here is my analysis of this issue; please correct me if you think
>>> something
>>> doesn't sound right:
>>> 
>>> The root cause of this problem was the use of a bad mutex implementation
>>> by
>>> mod_python in Solaris.
>> 
>> No. The mod_python package just uses what APR has selected as the
>> default. If there is a problem with fcntl on Solaris then you need to
>> be asking the APR folks why they are defaulting to using that over
>> something that works properly. So, not strictly a mod_python problem
>> and the fact that you also had to set SSLMutex and AcceptMutex
>> reinforces that.
>> 
>> Note that --enable-nonportable-atomics wouldn't make a difference as
>> that likely only applies to in process replacement for certain uses of
>> local thread mutex. A global mutex is a lock that works across
>> processes and so no machine code level thing could in itself work as
>> far as I can see.
>> 
>> As far as mod_python goes, only change I can see you might benefit from is:
>> 
>>   http://issues.apache.org/jira/browse/MODPYTHON-202
>> 
>> That is, mod_python providing a directive akin to AcceptMutex to
>> override what type of mutex it uses. That way you wouldn't have to
>> change the code, but could configure it instead.
>> 
>> BTW, you don't have your Apache installation, including directory
>> where locks are, being served off an NFS partition do you. File based
>> locking used to at least have some issues with NFS. This was some time
>> back though in Solaris and presume they would have addressed it by
>> now.
>> 
>> Graham
>> 
>>> Mod_python relies on operating system mutexes to lock file system
>>> resources;
>>> these mutexes are provided by the APR library (Apache Portable Runtime) by
>>> invocation of the following method from mod_python.c:
>>> 
>>>  apr_global_mutex_create(&mutex[n], fname, APR_LOCK_DEFAULT, p);
>>> 
>>> The above call defaults to use the operating system default mutex
>>> implementation (fcntl) which, in my opinion, does not work properly in an
>>> Apache worker MPM model under any type of load.
>>> 
>>> by modifying the above call to:
>>> 
>>> apr_global_mutex_create(&mutex[n], fname,  APR_LOCK_POSIXSEM, p);
>>> 
>>> which forces the use of the POSIX semaphores implementation of mutexes by
>>> mod_python, the problem was minimized to a just a few instances of the
>>> "mutex" error under a moderate load: 400 concurrent threads.
>>> 
>>> The final change to make the problem go away completely was to modify the
>>> AcceptMutex and SSLMutex properties in the httpd.conf file to "posixsem".
>>> This, together with the mod_python changed, made the "mutex" error go away
>>> even for 6400 concurrent threads.
>>> 
>>> I still ignore why the changes to AcceptMutex and SSLMutex are required
>>> since our Apache installs were compiled with the
>>> "--enable-nonportable-atomics" which, according to the Apache
>>> documentation
>>> ( http://httpd.apache.org/docs/2.2/misc/perf-tuning.html#compiletime):
>>> 
>>> "Solaris on SPARC
>>> By default, APR uses mutex-based atomics on Solaris/SPARC. If you
>>> configure
>>> with --enable-nonportable-atomics, however, APR generates code that uses a
>>> SPARC v8plus opcode for fast hardware compare-and-swap. If you configure
>>> Apache with this option, the atomic operations will be more efficient
>>> (allowing for lower CPU utilization and higher concurrency), but the
>>> resulting executable will run only on UltraSPARC chips. "
>>> 
>>> Maybe, even though we compile with that option, something in the OS,
>>> Apache
>>> or APR, still doesn't allow us to take advantage of atomic operations.
>>> This
>>> is pure speculation.
>>> 
>>> This is the email thread that pointed me to the right direction:
>>> http://www.modpython.org/pipermail/mod_python/2006-November/022538.html
>>> I'm not using the ITK MPM, just straight worker MPM, but that change made
>>> the trick for me.
>>> 
>>> Regards,
>>> 
>>> David.
>>> 
>>> -------------- Last message in email thread ---------------------------
>>> 
>>> [mod_python] ValueError: Failed to acquire global mutex lock
>>> Graham Dumpleton graham.dumpleton at gmail.com
>>> Wed Oct 24 23:04:05 EDT 2007
>>> 
>>>     * Previous message: [mod_python] Problems with Apache
>>>     * Next message: [mod_python] Multiple Django Applications
>>>     * Messages sorted by: [ date ] [ thread ] [ subject ] [ author ]
>>> 
>>> Going by errors posted by someone else for other thread, seems that if
>>> semaphores exhausted, error would occur at mod_python startup not when
>>> locking the mutex.
>>> 
>>> I'll have to go back and read all your emails again. You said you were
>>> using 'worker' MPM now didn't you. Your not using some strange MPM
>>> like perchild or ITK-MPM are you. I know that these cause problems for
>>> these mutexes in mod_python because of how different processes wanting
>>> to lock the mutex run as different users.
>>> 
>>> Graham
>>> 
>>> On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>>> wrote:
>>>> # ipcs
>>>> IPC status from <running system> as of Wed Oct 24 06:25:17 CDT 2007
>>>> T         ID      KEY        MODE        OWNER    GROUP
>>>> Message Queues:
>>>> Shared Memory:
>>>> Semaphores:
>>>> s          2   0          --ra-------      api    other
>>>> 
>>>> Not sure how to read that.
>>>> 
>>>> If the problem is the semaphores, Shouldn't I be able to use the
>>>> following
>>>> set semsys:seminfo_semmni=2048
>>>> set semsys:seminfo_semmns=2048
>>>> set semsys:seminfo_semmnu=1024
>>>> set semsys:seminfo_semmsl=300
>>>> set semsys:seminfo_semopm=128
>>>> set semsys:seminfo_semume=64
>>>> 
>>>> to make more semaphores available?
>>>> 
>>>> I tried that but it didn't change anything, do you think that was not
>>>> enough?
>>>> 
>>>> 
>>>> --Mike
>>>> 
>>>> 
>>>> -----Original Message-----
>>>> From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
>>>> Sent: Tuesday, October 23, 2007 7:08 PM
>>>> To: Michael Robokoff
>>>> Cc: mod_python
>>>> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>>>> 
>>>> If you run 'ipcs' what is the output? Something must be using all the
>>>> semaphores, can't be anything else.
>>>> 
>>>> Graham
>>>> 
>>>> On 24/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>>>> wrote:
>>>>> Ok the directive did take effect as the log entry below shows:
>>>>> 
>>>>> [Tue Oct 23 07:20:32 2007] [notice] mod_python: Creating 4 session
>>>>> mutexes
>>>>> based on 6 max processes and 25 max threads.
>>>>> [Tue Oct 23 07:20:32 2007] [notice] mod_python: using mutex_directory
>>>>> /tmp
>>>>> 
>>>>> 
>>>>> Still see this however:
>>>>> 
>>>>> ValueError: Failed to acquire global mutex lock
>>>>> 
>>>>> I will try recompiling with the option you mentioned and see what
>>>>> happens.
>>>>> 
>>>>> 
>>>>> --Mike
>>>>> 
>>>>> 
>>>>> -----Original Message-----
>>>>> From: Graham Dumpleton [mailto:graham.dumpleton at gmail.com]
>>>>> Sent: Tuesday, October 23, 2007 6:40 AM
>>>>> To: Michael Robokoff
>>>>> Cc: mod_python
>>>>> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex
>>>>> lock
>>>>> 
>>>>> On 23/10/2007, Michael Robokoff <mike.robokoff at apioutsourcing.com>
>>>>> wrote:
>>>>>> [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session
>>>> mutexes
>>>>>> based on 6 max processes and 25 max threads.
>>>>> 
>>>>> BTW, what did you end up setting mod_python.mutex_locks to? If you use
>>>>> 4 like I said, then it can't have been in correct part of Apache
>>>>> configuration, outside of all VirtualHost, as error log still shows '8
>>>>> session mutexes'.
>>>>> 
>>>>> if you can't get this to work, you might rebuild mod_python and
>>>>> specific --with-max-locks=4 option to configure to force lower value
>>>>> to be compiled in.
>>>>> 
>>>>> Graham
>>>>> 
>>>>> 
>>>>> 
>>>> 
>>>> 
>>>> 
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>> 
>>> 
>> 
>> 
>> 
>> 
>> 
>> David Cardozo
>> Software Systems Architect
>> 
>> 2975 Lone Oak Drive  Suite 100  Eagan, MN  55121
>> Direct: 651-675-2604 Fax: 651-675-2699
>> Accounts Payable Transformation Research Report
>> <http://www.apifao.com/company/AberdeenEquinoxReportMarch2008.pdf>
>> www.apifao.com <http://www.apifao.com>
>> 
> 
> 



David Cardozo
Software Systems Architect

2975 Lone Oak Drive  Suite 100  Eagan, MN  55121
Direct: 651-675-2604 Fax: 651-675-2699
Accounts Payable Transformation Research Report
<http://www.apifao.com/company/AberdeenEquinoxReportMarch2008.pdf>
www.apifao.com <http://www.apifao.com> 


From stephen at bartlettsoftware.biz  Thu Aug  7 13:27:16 2008
From: stephen at bartlettsoftware.biz (Stephen Bartlett)
Date: Thu Aug  7 13:27:32 2008
Subject: [mod_python] ANN: zope2psp-1.0.3 released
Message-ID: <1218130036.5976.2.camel@daemon>

zope2psp is a suite of tools that, together with a small runtime
component, aids in the conversion of a website built with Zope's DTML
to one that is based on just Python and the mod_python module for
Apache.  Once converted, the site no longer uses Zope as a platform.

Features:
---------

  o Automatic translation of all DTML pages (both DTML Documents and
    DTML Methods), Z SQL Methods, and Python Script objects.

  o Support for Zope-style lookup of items in the REQUEST object,
    cookie and form values, and the filesystem (a simplified version of
    Zope's acquisition feature).

  o Support for Zope-style inclusion of one page by another by merely
    "acquiring" the included page name.

  o Database connectivity via ODBC (pyodbc) and native psycopg2 to
    PostgreSQL.  Logging of SQL and results to a trace file is supported
    for both types of driver.  Connection pooling is also implemented 
    for both.

History:
--------

A client of mine has developed a growing body of website code using
Zope and DTML.  They are reaching the point where software development
using just through-the-web editing is becoming too painful.  Code
refactoring is difficult without global search-and-replace.  Zope
precludes the use of version control systems to manage changes over
time.  I took it upon myself to see if I could write a translation
tool to help them move away from Zope.

After several months of intensive effort, I'm pleased enough with its
results to release it to the public.  It has successfully translated a
website having 2,000 DTML pages, 1,600 Z SQL Methods, and 200 Python
Script objects into a straight mod_python website.  The resulting PSP
code may not be pretty, but it does indeed work!

License:
--------

zope2psp is Copyright 2008 Stephen Bartlett and licensed under the GNU
GPL (General Public License).  zope2psp is free software: you can
redistribute it and/or modify it under the terms of the GNU General
Public License as published by the Free Software Foundation.

More Info:
----------

Downloads and documentation are available at:

  http://www.bartlettsoftware.biz/products.php


-- 
Stephen Bartlett
President, Bartlett Software, Inc.
http://www.bartlettsoftware.biz/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080807/24d69bd6/attachment.bin
From graham.dumpleton at gmail.com  Thu Aug  7 17:49:18 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Aug  7 17:49:21 2008
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <C4C05D4C.3257%david.cardozo@apioutsourcing.com>
References: <88e286470808062052s3a66b8c5vf5540b0b14d159d1@mail.gmail.com>
	<C4C05D4C.3257%david.cardozo@apioutsourcing.com>
Message-ID: <88e286470808071449h7b03bc96gdcc7bf999ee0bb6c@mail.gmail.com>

2008/8/7 David Cardozo <david.cardozo@apioutsourcing.com>:
> On 8/6/08 10:52 PM, "Graham Dumpleton" <graham.dumpleton@gmail.com> wrote:
>
>> 2008/8/7 David Cardozo <david.cardozo@apioutsourcing.com>:
>>> I concur; this is not strictly a mod_python problem, but rather caused by
>>> the default implementation chosen by APR.
>>> I remember coming across the MODPYTHON-202 bug report, but couldn't find it
>>> again to put is as a reference in my previous posting. Thanks for looking it
>>> up. Is there any chance of this been released soon?
>>
>> No. That particular issue would be very low priority in the grander
>> scheme of things.
>>
>>> Is there a new version
>>> of mod_python planned for sometime in the near future?
>>
>> No. I have been trying to commit a few changes to repository for more
>> important things, but have very little time to even do that. Of the
>> people who have commit access, I am the only one who even answers
>> stuff on mailing list these days and I myself haven't even used
>> mod_python for couple of years. :-)
>
> Then I feel obligated to ask what other scripting language have you used
> lately with Apache... Is there a second best to python :-)

Second best to Python is Python. See mod_wsgi. ;-)

Graham
From scarfboy at gmail.com  Mon Aug 11 06:20:05 2008
From: scarfboy at gmail.com (Bart)
Date: Mon Aug 11 06:20:11 2008
Subject: [mod_python] Re: 411 Length Required, python question...
In-Reply-To: <40b755be0808061948g2c62d358y6130122b7f57091@mail.gmail.com>
References: <40b755be0808061947h2d84559dyd78503d59e3073d5@mail.gmail.com>
	<40b755be0808061948g2c62d358y6130122b7f57091@mail.gmail.com>
Message-ID: <b71082d80808110320q4f052aa0re79b2a4e9f7fa350@mail.gmail.com>

On Thu, Aug 7, 2008 at 4:48 AM, Mark D'Ascenzo <markdd@gmail.com> wrote:
> Hi Bart,
>
> Did you ever figure this out?  I'm having the same problem andguessing
> I'm using the wrong handlers in my python script.  Anyguidence you
> could offer on this would be greatly appreciated. Thanks!  -mark

I didn't try to. I suspected it was some nasty assumption that would
be too low-level to fix immediately. On the short term it was much
easier to work around with an client-side change telling the AJAX
library to use GET instead.

I do want to figure out what caused it, though am a little busy right now.

The wrong handlers how? As far as I can remember, the only difference
between GET and POST in mod_python seems to be a few relatively minor
parsing details and, in case of publisher, some sometimes nasty
assumptions that you cannot neatly avoid (IIRC. Then again, I'm
prejudiced against publisher.)

Do you use vampire?

--Bart


>> 2008/6/24 Bart <scarfboy at gmail.com>:
>>> I'm getting a 411 Length Required ("A request of the requested method
>>> POST requires a valid Content-length.") in response to a
>>> XMLHttpRequest, but that error does not seem to report the real
>>> problem; Firebug and Tamper Data clearly show "Content-Length" with
>>> value "30".
>>>
>>> I can probably hack the JS to make it use GET instead (which seems to
>>> work), but I figured I'd check whether this is a known bug first.
>>> Could this be 3.1-specific?
>>>
>>> Regards,
>>> --Bart Alewijnse
From Samuele.Kaplun at cern.ch  Tue Aug 12 05:10:30 2008
From: Samuele.Kaplun at cern.ch (Samuele Kaplun)
Date: Tue Aug 12 05:10:39 2008
Subject: [mod_python] Implementing Range Retrieval Requests
Message-ID: <200808121110.31428.Samuele.Kaplun@cern.ch>

Dear list,
I'm trying to implement a wide support for the HTTP 1.1 protocol in mod_python 
for streaming files to clients supporting caching, checksumming, range 
request.
In particular I'm now trying to implement support for "Range Retrieval 
Requests" 
<http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2>.

Some range request come in the form of multiple ranges. The corresponding 
respose should be implemented, according to the rfc, by means of a 
multipart/byteranges output:
<http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16>

My implementation is currently sending to the user the common HTTP headers and 
then manually writing each "part" with each corresponding HTTP headers and 
boundaries.
Obviously in the main HTTP header I can't specify the actual content-length, 
because this will depend on the sum of the parts I'm going to send (and if my 
interpretation is correct this should account also for each sub-headers and 
boundaries).

In mod_python, not setting the content-length prior to sending the first byte 
to the client implies using (apparently) chunked-encoding. 

Since I'm already sending output to the client in a low-level way (by building 
each part of the multipart) is there a way to avoid chunked-encoding headers 
to be sent to the client?

Should I precalculate the content-length in order to disable chunked-encoding?

Best regards,
	Samuele
-- 
.O.
..O
OOO
From graham.dumpleton at gmail.com  Tue Aug 12 06:17:37 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug 12 06:17:40 2008
Subject: [mod_python] Implementing Range Retrieval Requests
In-Reply-To: <200808121110.31428.Samuele.Kaplun@cern.ch>
References: <200808121110.31428.Samuele.Kaplun@cern.ch>
Message-ID: <88e286470808120317y27d1a109n3cdcc476b7cde3ba@mail.gmail.com>

2008/8/12 Samuele Kaplun <Samuele.Kaplun@cern.ch>:
> Dear list,
> I'm trying to implement a wide support for the HTTP 1.1 protocol in mod_python
> for streaming files to clients supporting caching, checksumming, range
> request.
> In particular I'm now trying to implement support for "Range Retrieval
> Requests"
> <http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2>.
>
> Some range request come in the form of multiple ranges. The corresponding
> respose should be implemented, according to the rfc, by means of a
> multipart/byteranges output:
> <http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16>
>
> My implementation is currently sending to the user the common HTTP headers and
> then manually writing each "part" with each corresponding HTTP headers and
> boundaries.
> Obviously in the main HTTP header I can't specify the actual content-length,
> because this will depend on the sum of the parts I'm going to send (and if my
> interpretation is correct this should account also for each sub-headers and
> boundaries).
>
> In mod_python, not setting the content-length prior to sending the first byte
> to the client implies using (apparently) chunked-encoding.
>
> Since I'm already sending output to the client in a low-level way (by building
> each part of the multipart) is there a way to avoid chunked-encoding headers
> to be sent to the client?
>
> Should I precalculate the content-length in order to disable chunked-encoding?

You would need the following to be implemented:

  https://issues.apache.org/jira/browse/MODPYTHON-238

If it is your own application on your own server, you could perhaps
modify mod_python source code to address the issue.

Graham
From dave6502 at googlemail.com  Tue Aug 12 17:14:52 2008
From: dave6502 at googlemail.com (dave selby)
Date: Tue Aug 12 17:14:59 2008
Subject: [mod_python] newbe mod pythoner - passing arguments ?
Message-ID: <f52017b60808121414x576c31d8s14e79954eca05ea9@mail.gmail.com>

Hi All,

I have PythonHandler mod_python.publisher and all is working well I
can call my scripts with xmlHttpReq calls AOK.

I am now trying to pass arguments to my python script much as I used
to do with PHP. I can't seem to find much info but have tried

arg = str(req.__getattribute__('args'))

But without much success. Can anyone point me in the right direction ?

Cheers

Dave



-- 

Please avoid sending me Word or PowerPoint attachments.
See http://www.gnu.org/philosophy/no-word-attachments.html
From dave6502 at googlemail.com  Tue Aug 12 17:30:14 2008
From: dave6502 at googlemail.com (dave selby)
Date: Tue Aug 12 17:30:16 2008
Subject: [mod_python] Re: newbe mod pythoner - passing arguments ?
In-Reply-To: <f52017b60808121414x576c31d8s14e79954eca05ea9@mail.gmail.com>
References: <f52017b60808121414x576c31d8s14e79954eca05ea9@mail.gmail.com>
Message-ID: <f52017b60808121430w51a56706t3b3debb844dd24f5@mail.gmail.com>

OK so the penny dropped, please just ignore me :)

Cheers

Dave

-- 

Please avoid sending me Word or PowerPoint attachments.
See http://www.gnu.org/philosophy/no-word-attachments.html
From ynj0qeh02 at sneakemail.com  Tue Aug 12 18:04:02 2008
From: ynj0qeh02 at sneakemail.com (Jason Carver)
Date: Tue Aug 12 18:04:06 2008
Subject: [mod_python] newbe mod pythoner - passing arguments ?
In-Reply-To: <f52017b60808121414x576c31d8s14e79954eca05ea9@mail.gmail.com>
References: <f52017b60808121414x576c31d8s14e79954eca05ea9@mail.gmail.com>
Message-ID: <85f667130808121504u9d190e7t241d358b99873af7@mail.gmail.com>

The variables are typically accessible via the request object member 'form'
as a dictionary.

So access variable 'foo' via req.form['foo']

Try out this tutorial for more:
http://ghantoos.org/howto-apache2-mod_python/

~Jason

On Tue, Aug 12, 2008 at 5:14 PM, dave selby
dave6502-at-googlemail.com|public mailing list|
<o8q1k5ibcj0t@sneakemail.com> wrote:

> Hi All,
>
> I have PythonHandler mod_python.publisher and all is working well I
> can call my scripts with xmlHttpReq calls AOK.
>
> I am now trying to pass arguments to my python script much as I used
> to do with PHP. I can't seem to find much info but have tried
>
> arg = str(req.__getattribute__('args'))
>
> But without much success. Can anyone point me in the right direction ?
>
> Cheers
>
> Dave
>
>
>
> --
>
> Please avoid sending me Word or PowerPoint attachments.
> See http://www.gnu.org/philosophy/no-word-attachments.html
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080812/6a5db3e3/attachment.html
From vext01 at gmail.com  Fri Aug 15 09:35:20 2008
From: vext01 at gmail.com (Edd Barrett)
Date: Fri Aug 15 09:35:31 2008
Subject: [mod_python] Solaris 10 Build system problems
Message-ID: <20080815133520.GU10083@dec170.sdec.bournemouth.ac.uk>

Hi,

I have been asked to install mod_python on our solaris servers. I have
been unable up until now:

* CC=gcc seems to be ignored, I have had to symbolically link gcc to cc
  to get the compiler to invoke.

* Even then you get some warnings:
  cc: unrecognized option `-KPIC'
  cc: language ildoff not recognized
  cc: finfoobject.c: linker input file unused because linking not done

  Is it assuming sunstudio compiler?

* awk syntax errors are prodiced duting configure. The gawk
  implementation found on most linux systems is not the same as the rest
  of the UNIX world. If I install gawk, the errors go away, but this can
  probably be made to work using the systam awk.

* Even after resolving (temproarily) these issues I am faced with a
  failure:
  /opt/csw/apache2/share/build/libtool --silent --mode=link cc -o mod_python.la  -rpath /opt/csw/apache2/libexec -module -avoid-version    finfoobject.lo hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -lm -lpython2.4 -lsocket -lnsl -ldl -lm _eprintf.o _floatdidf.o _muldi3.o

  *** Warning: Linking the shared library mod_python.la against the non-libtool
  *** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
  ld: fatal: file .libs/finfoobject.o: open failed: No such file or directory
  apxs:Error: Command failed with rc=65536
  .
  gmake[1]: *** [mod_python.so] Error 1
  gmake[1]: Leaving directory `/opt/mod_python_wrk/mod_python-3.3.1/src'
  gmake: *** [do_dso] Error 2

Here is my environment setup:

# uname -a
SunOS xxx 5.11 snv_90 i86pc i386 i86pc

# /opt/csw/apache2/sbin/httpd -version
Server version: Apache/2.2.6 (Unix)
Server built:   Oct 23 2007 16:48:02

-- 

Best Regards
Edd

http://students.dec.bmth.ac.uk/ebarrett
From graham.dumpleton at gmail.com  Fri Aug 15 17:54:26 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Aug 15 17:54:28 2008
Subject: [mod_python] Solaris 10 Build system problems
In-Reply-To: <20080815133520.GU10083@dec170.sdec.bournemouth.ac.uk>
References: <20080815133520.GU10083@dec170.sdec.bournemouth.ac.uk>
Message-ID: <88e286470808151454i14b49066t630ea15c7c657c40@mail.gmail.com>

Apache was originally installed with Sun C and so apxs tool is
configured to use it and not gcc. Making it use gcc is a bit
complicated and involves hacking up a new apxs installation.
Alternatively, reinstall Apache but have it use gcc when it is
installed.

Also, your mod_python installation doesn't provide a shared library by
the look of it. You should reinstall Python and use --enable-shared
when you run configure. You will need to also do some symlink fixes to
get shared library appear in Python config directory properly next to
static library.

Where do you want to start? :-)

Graham

2008/8/15 Edd Barrett <vext01@gmail.com>:
> Hi,
>
> I have been asked to install mod_python on our solaris servers. I have
> been unable up until now:
>
> * CC=gcc seems to be ignored, I have had to symbolically link gcc to cc
>  to get the compiler to invoke.
>
> * Even then you get some warnings:
>  cc: unrecognized option `-KPIC'
>  cc: language ildoff not recognized
>  cc: finfoobject.c: linker input file unused because linking not done
>
>  Is it assuming sunstudio compiler?
>
> * awk syntax errors are prodiced duting configure. The gawk
>  implementation found on most linux systems is not the same as the rest
>  of the UNIX world. If I install gawk, the errors go away, but this can
>  probably be made to work using the systam awk.
>
> * Even after resolving (temproarily) these issues I am faced with a
>  failure:
>  /opt/csw/apache2/share/build/libtool --silent --mode=link cc -o mod_python.la  -rpath /opt/csw/apache2/libexec -module -avoid-version    finfoobject.lo hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -lm -lpython2.4 -lsocket -lnsl -ldl -lm _eprintf.o _floatdidf.o _muldi3.o
>
>  *** Warning: Linking the shared library mod_python.la against the non-libtool
>  *** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
>  ld: fatal: file .libs/finfoobject.o: open failed: No such file or directory
>  apxs:Error: Command failed with rc=65536
>  .
>  gmake[1]: *** [mod_python.so] Error 1
>  gmake[1]: Leaving directory `/opt/mod_python_wrk/mod_python-3.3.1/src'
>  gmake: *** [do_dso] Error 2
>
> Here is my environment setup:
>
> # uname -a
> SunOS xxx 5.11 snv_90 i86pc i386 i86pc
>
> # /opt/csw/apache2/sbin/httpd -version
> Server version: Apache/2.2.6 (Unix)
> Server built:   Oct 23 2007 16:48:02
>
> --
>
> Best Regards
> Edd
>
> http://students.dec.bmth.ac.uk/ebarrett
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From camilot at terra.com.br  Sat Aug 16 07:16:42 2008
From: camilot at terra.com.br (Camilo Telles)
Date: Sat Aug 16 07:16:49 2008
Subject: [mod_python] problems with logging
Message-ID: <K5OXZU$F44B797597DEB5283E6D90EA98A4835C@multidominios>

Sirs,

I have an annoying problem happening with mod_python and logging.
Here is the code:
===========================================
import logging
from mod_python import util

def index(req, email):
        logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s;%(message)s',
                    filename='log_email.txt',
                    filemode='a')
        logging.info(email)
        logging.shutdown()

        util.redirect(req, 'http://dummy/download.html')
======================================

What happens: sometimes the logs occurs, sometimes it not. It?s completely random. 

I?m using:

Apache/2.2.8 (Ubuntu) 
mod_python/3.3.1 
Python/2.5.2

Any clue? I need to do some kind of flush? If yes, how? 

Thanks in advance.

Camilo



From graham.dumpleton at gmail.com  Sat Aug 16 07:22:31 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Aug 16 07:22:37 2008
Subject: [mod_python] problems with logging
In-Reply-To: <K5OXZU$F44B797597DEB5283E6D90EA98A4835C@multidominios>
References: <K5OXZU$F44B797597DEB5283E6D90EA98A4835C@multidominios>
Message-ID: <88e286470808160422x7db0ecbeq8a7de6494fdc3994@mail.gmail.com>

The sys.stderr stream in mod_python is buffered, you need to flush it.
You are better of implementing a logging module handler which logs
using apache.log_error().

Graham

2008/8/16 Camilo Telles <camilot@terra.com.br>:
> Sirs,
>
> I have an annoying problem happening with mod_python and logging.
> Here is the code:
> ===========================================
> import logging
> from mod_python import util
>
> def index(req, email):
>        logging.basicConfig(level=logging.DEBUG,
>                    format='%(asctime)s;%(message)s',
>                    filename='log_email.txt',
>                    filemode='a')
>        logging.info(email)
>        logging.shutdown()
>
>        util.redirect(req, 'http://dummy/download.html')
> ======================================
>
> What happens: sometimes the logs occurs, sometimes it not. It?s completely random.
>
> I?m using:
>
> Apache/2.2.8 (Ubuntu)
> mod_python/3.3.1
> Python/2.5.2
>
> Any clue? I need to do some kind of flush? If yes, how?
>
> Thanks in advance.
>
> Camilo
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From camilot at terra.com.br  Sat Aug 16 07:37:44 2008
From: camilot at terra.com.br (Camilo Telles)
Date: Sat Aug 16 07:37:49 2008
Subject: [mod_python] problems with logging
Message-ID: <K5OYYW$CB603FA80290885D222EDFDAD7DD11FC@multidominios>

Graham,

How do I flush it? How I get access to the FileHandler from the logging object?
I prefer to use the logging module, so I can split the content to be logged between two files.

Camilo



---------- Cabe?alho original -----------

De: "Graham Dumpleton" graham.dumpleton@gmail.com
Para: "Camilo Telles" camilot@terra.com.br
C?pia: "mod_python" mod_python@modpython.org
Data: Sat, 16 Aug 2008 21:22:31 +1000
Assunto: Re: [mod_python] problems with logging

> The sys.stderr stream in mod_python is buffered, you need to flush it.
> You are better of implementing a logging module handler which logs
> using apache.log_error().
> 
> Graham
> 
> 2008/8/16 Camilo Telles <camilot@terra.com.br>:
> > Sirs,
> >
> > I have an annoying problem happening with mod_python and logging.
> > Here is the code:
> > ===========================================
> > import logging
> > from mod_python import util
> >
> > def index(req, email):
> >        logging.basicConfig(level=logging.DEBUG,
> >                    format='%(asctime)s;%(message)s',
> >                    filename='log_email.txt',
> >                    filemode='a')
> >        logging.info(email)
> >        logging.shutdown()
> >
> >        util.redirect(req, 'http://dummy/download.html')
> > ======================================
> >
> > What happens: sometimes the logs occurs, sometimes it not. It?s completely random.
> >
> > I?m using:
> >
> > Apache/2.2.8 (Ubuntu)
> > mod_python/3.3.1
> > Python/2.5.2
> >
> > Any clue? I need to do some kind of flush? If yes, how?
> >
> > Thanks in advance.
> >
> > Camilo
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> Esta mensagem foi verificada pelo E-mail Protegido Terra.
> Atualizado em 16/08/2008
> 
> 


From graham.dumpleton at gmail.com  Sat Aug 16 08:10:17 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Aug 16 08:10:22 2008
Subject: [mod_python] problems with logging
In-Reply-To: <K5OYYW$CB603FA80290885D222EDFDAD7DD11FC@multidominios>
References: <K5OYYW$CB603FA80290885D222EDFDAD7DD11FC@multidominios>
Message-ID: <88e286470808160510o6d075be9yba22bca8e0128a97@mail.gmail.com>

2008/8/16 Camilo Telles <camilot@terra.com.br>:
> Graham,
>
> How do I flush it? How I get access to the FileHandler from the logging object?
> I prefer to use the logging module, so I can split the content to be logged between two files.

Use:

  import sys
  sys.stderr.flush()

It is a standard Python file like object.

Graham

> ---------- Cabe?alho original -----------
>
> De: "Graham Dumpleton" graham.dumpleton@gmail.com
> Para: "Camilo Telles" camilot@terra.com.br
> C?pia: "mod_python" mod_python@modpython.org
> Data: Sat, 16 Aug 2008 21:22:31 +1000
> Assunto: Re: [mod_python] problems with logging
>
>> The sys.stderr stream in mod_python is buffered, you need to flush it.
>> You are better of implementing a logging module handler which logs
>> using apache.log_error().
>>
>> Graham
>>
>> 2008/8/16 Camilo Telles <camilot@terra.com.br>:
>> > Sirs,
>> >
>> > I have an annoying problem happening with mod_python and logging.
>> > Here is the code:
>> > ===========================================
>> > import logging
>> > from mod_python import util
>> >
>> > def index(req, email):
>> >        logging.basicConfig(level=logging.DEBUG,
>> >                    format='%(asctime)s;%(message)s',
>> >                    filename='log_email.txt',
>> >                    filemode='a')
>> >        logging.info(email)
>> >        logging.shutdown()
>> >
>> >        util.redirect(req, 'http://dummy/download.html')
>> > ======================================
>> >
>> > What happens: sometimes the logs occurs, sometimes it not. It?s completely random.
>> >
>> > I?m using:
>> >
>> > Apache/2.2.8 (Ubuntu)
>> > mod_python/3.3.1
>> > Python/2.5.2
>> >
>> > Any clue? I need to do some kind of flush? If yes, how?
>> >
>> > Thanks in advance.
>> >
>> > Camilo
>> >
>> >
>> >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >
>>
>> Esta mensagem foi verificada pelo E-mail Protegido Terra.
>> Atualizado em 16/08/2008
>>
>>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From graham.dumpleton at gmail.com  Sat Aug 16 08:15:15 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Aug 16 08:15:21 2008
Subject: [mod_python] problems with logging
In-Reply-To: <88e286470808160510o6d075be9yba22bca8e0128a97@mail.gmail.com>
References: <K5OYYW$CB603FA80290885D222EDFDAD7DD11FC@multidominios>
	<88e286470808160510o6d075be9yba22bca8e0128a97@mail.gmail.com>
Message-ID: <88e286470808160515i15126424q984c7ed4ae7543fe@mail.gmail.com>

BTW, for what the problem is, see:

  https://issues.apache.org/jira/browse/MODPYTHON-223

Graham

2008/8/16 Graham Dumpleton <graham.dumpleton@gmail.com>:
> 2008/8/16 Camilo Telles <camilot@terra.com.br>:
>> Graham,
>>
>> How do I flush it? How I get access to the FileHandler from the logging object?
>> I prefer to use the logging module, so I can split the content to be logged between two files.
>
> Use:
>
>  import sys
>  sys.stderr.flush()
>
> It is a standard Python file like object.
>
> Graham
>
>> ---------- Cabe?alho original -----------
>>
>> De: "Graham Dumpleton" graham.dumpleton@gmail.com
>> Para: "Camilo Telles" camilot@terra.com.br
>> C?pia: "mod_python" mod_python@modpython.org
>> Data: Sat, 16 Aug 2008 21:22:31 +1000
>> Assunto: Re: [mod_python] problems with logging
>>
>>> The sys.stderr stream in mod_python is buffered, you need to flush it.
>>> You are better of implementing a logging module handler which logs
>>> using apache.log_error().
>>>
>>> Graham
>>>
>>> 2008/8/16 Camilo Telles <camilot@terra.com.br>:
>>> > Sirs,
>>> >
>>> > I have an annoying problem happening with mod_python and logging.
>>> > Here is the code:
>>> > ===========================================
>>> > import logging
>>> > from mod_python import util
>>> >
>>> > def index(req, email):
>>> >        logging.basicConfig(level=logging.DEBUG,
>>> >                    format='%(asctime)s;%(message)s',
>>> >                    filename='log_email.txt',
>>> >                    filemode='a')
>>> >        logging.info(email)
>>> >        logging.shutdown()
>>> >
>>> >        util.redirect(req, 'http://dummy/download.html')
>>> > ======================================
>>> >
>>> > What happens: sometimes the logs occurs, sometimes it not. It?s completely random.
>>> >
>>> > I?m using:
>>> >
>>> > Apache/2.2.8 (Ubuntu)
>>> > mod_python/3.3.1
>>> > Python/2.5.2
>>> >
>>> > Any clue? I need to do some kind of flush? If yes, how?
>>> >
>>> > Thanks in advance.
>>> >
>>> > Camilo
>>> >
>>> >
>>> >
>>> > _______________________________________________
>>> > Mod_python mailing list
>>> > Mod_python@modpython.org
>>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> >
>>>
>>> Esta mensagem foi verificada pelo E-mail Protegido Terra.
>>> Atualizado em 16/08/2008
>>>
>>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>

From graham.dumpleton at gmail.com  Sat Aug 16 08:31:25 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Aug 16 08:31:31 2008
Subject: [mod_python] problems with logging
In-Reply-To: <01b201c8ff9a$9ef63080$dce29180$@com.br>
References: <K5OYYW$CB603FA80290885D222EDFDAD7DD11FC@multidominios>
	<88e286470808160510o6d075be9yba22bca8e0128a97@mail.gmail.com>
	<01b201c8ff9a$9ef63080$dce29180$@com.br>
Message-ID: <88e286470808160531k78ef2560ye93a027b051e0db4@mail.gmail.com>

Please use reply-all and keep discussion on list.

If it doesn't work, then possibly because I assumed you were talking
about output appearing in Apache error log. Reading code you are
trying to have logging module send it somewhere else. Thus, if you are
complaining that output not appearing in your separate log file, then
can't really help.

Only further comment I can make is that you should not be initialising
logging module in the context of a request handler. You would want to
do it at global scope and preferably in a Python module which isn't
possibly being reloaded causing it to be configured multiple times in
lifetime of process. Also not sure how thread safe configuring logging
module is, which would be an issue when doing it in context of request
handler.

Graham

2008/8/16 Camilo Telles <camilot@terra.com.br>:
> Dear Graham,
>
> It didn't work.
> Any ideas?
>
> Regards,
>
>
> Camilo
>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
>> Sent: s?bado, 16 de agosto de 2008 09:10
>> To: Camilo Telles
>> Cc: mod_python
>> Subject: Re: [mod_python] problems with logging
>>
>> 2008/8/16 Camilo Telles <camilot@terra.com.br>:
>> > Graham,
>> >
>> > How do I flush it? How I get access to the FileHandler from the logging
>> object?
>> > I prefer to use the logging module, so I can split the content to be
> logged
>> between two files.
>>
>> Use:
>>
>>   import sys
>>   sys.stderr.flush()
>>
>> It is a standard Python file like object.
>>
>> Graham
>>
>> > ---------- Cabe?alho original -----------
>> >
>> > De: "Graham Dumpleton" graham.dumpleton@gmail.com
>> > Para: "Camilo Telles" camilot@terra.com.br
>> > C?pia: "mod_python" mod_python@modpython.org
>> > Data: Sat, 16 Aug 2008 21:22:31 +1000
>> > Assunto: Re: [mod_python] problems with logging
>> >
>> >> The sys.stderr stream in mod_python is buffered, you need to flush it.
>> >> You are better of implementing a logging module handler which logs
>> >> using apache.log_error().
>> >>
>> >> Graham
>> >>
>> >> 2008/8/16 Camilo Telles <camilot@terra.com.br>:
>> >> > Sirs,
>> >> >
>> >> > I have an annoying problem happening with mod_python and logging.
>> >> > Here is the code:
>> >> > ===========================================
>> >> > import logging
>> >> > from mod_python import util
>> >> >
>> >> > def index(req, email):
>> >> >        logging.basicConfig(level=logging.DEBUG,
>> >> >                    format='%(asctime)s;%(message)s',
>> >> >                    filename='log_email.txt',
>> >> >                    filemode='a')
>> >> >        logging.info(email)
>> >> >        logging.shutdown()
>> >> >
>> >> >        util.redirect(req, 'http://dummy/download.html')
>> >> > ======================================
>> >> >
>> >> > What happens: sometimes the logs occurs, sometimes it not. It?s
>> completely random.
>> >> >
>> >> > I?m using:
>> >> >
>> >> > Apache/2.2.8 (Ubuntu)
>> >> > mod_python/3.3.1
>> >> > Python/2.5.2
>> >> >
>> >> > Any clue? I need to do some kind of flush? If yes, how?
>> >> >
>> >> > Thanks in advance.
>> >> >
>> >> > Camilo
>> >> >
>> >> >
>> >> >
>> >> > _______________________________________________
>> >> > Mod_python mailing list
>> >> > Mod_python@modpython.org
>> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >> >
>> >>
>> >> Esta mensagem foi verificada pelo E-mail Protegido Terra.
>> >> Atualizado em 16/08/2008
>> >>
>> >>
>> >
>> >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >
>>
>> Esta mensagem foi verificada pelo E-mail Protegido Terra.
>> Atualizado em 15/08/2008
>
>
>

From polettog at gmail.com  Sun Aug 17 17:19:57 2008
From: polettog at gmail.com (Poletto Guillaume)
Date: Sun Aug 17 17:20:08 2008
Subject: [mod_python] [SPAM] [Newbie] import_module() function or Python's
	import statement
Message-ID: <20080817231957.7a17d625@gruentoo.gruhome>

Hi,

Yes, I'm new to both Python programming language and mod_python and i found the import_module() paragraph in the manual not really easy to eat.

What I understood is that, a such function is necessary to reload modified modules used by the webserver because the interpreter lives as long as the apache child process lives.

Okay, but what was not clear is : does mod_python overrides the Python's statement "import" to make the same things than import_module()?
If yes, why this function?

I made a test and i modified a module imported by "import" statement in my handler module : the changes where taken in count without restarting apache

Maybe the difference is in the treatment of packages.. The import_module() breaks all namespace stuff with packages (we could not do the same as "import package.subpackage.module" and then use stuff with "package.subpackage.module.function()" notation, although this doesn't seem to be recommanded in classic python softwares)

As I am new to Python, i was first thinking of designing my website like a classic python application, with packages and stuff, but tell me i should rather think of arranging my modules in classic directories and use import_module() each time.

Thanks
From graham.dumpleton at gmail.com  Sun Aug 17 20:59:19 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 17 20:59:20 2008
Subject: [mod_python] [SPAM] [Newbie] import_module() function or Python's
	import statement
In-Reply-To: <20080817231957.7a17d625@gruentoo.gruhome>
References: <20080817231957.7a17d625@gruentoo.gruhome>
Message-ID: <88e286470808171759ta2d620ag1d6aab2639aeffa@mail.gmail.com>

2008/8/18 Poletto Guillaume <polettog@gmail.com>:
>
> Yes, I'm new to both Python programming language and mod_python

If you are new to Python and want to write web applications, any
reason why you didn't start out with one of the arguably more friendly
higher level frameworks such as Django?

> and i found the import_module() paragraph in the manual not really easy to eat.

It is a complicated issue. :-)

> What I understood is that, a such function is necessary to reload modified modules used by the webserver because the interpreter lives as long as the apache child process lives.

It isn't absolutely necessary, it is a convenience more for when
developing code as you don't need to restart Apache after every
change. Do note though that the code modules this applies to is quite
limited. For changes to modules/packages installed on sys.path you
still need to restart the whole of Apache.

> Okay, but what was not clear is : does mod_python overrides the Python's statement "import" to make the same things than import_module()?
> If yes, why this function?

It doesn't strictly override 'import' statement. Instead it hooks in
Python APIs that underlay 'import'.

  http://www.python.org/dev/peps/pep-0302/

You thus have the ability to say that for certain imports they are
treated in certain ways and taken from different storage mechanisms.

> I made a test and i modified a module imported by "import" statement in my handler module : the changes where taken in count without restarting apache

Two things could be happening here. The first is that the module being
imported was in the same directory and was being managed by mod_python
module importer and on detecting a change, it reloaded code
appropriately.

Alternatively, you have been deceived by the fact that
Apache/mod_python on UNIX is a multiprocess web server and so a
completely different processes which hadn't loaded it previously
handled the request and so code got loaded for first time, and wasn't
because of a reload at all. In this later case, it may not have even
been a candidate for reloading and might just be a standard Python
module/package.

If you have:

  PythonDebug On

set in configuration and monitor the Apache error log files you should
be able to see when a code files is being handled by mod_python module
importer and when it is being first loaded and/or reloaded. If it
isn't in there, it is a standard module/package and reloading not
possible.

> Maybe the difference is in the treatment of packages.. The import_module() breaks all namespace stuff with packages (we could not do the same as "import package.subpackage.module" and then use stuff with "package.subpackage.module.function()" notation, although this doesn't seem to be recommanded in classic python softwares)

The documentation says that it only applies to single Python code
files and doesn't work for Python packages. If you are trying to get
it to work for Python packages, at least to the extent of expecting
reloading to work, you will be disappointed.

> As I am new to Python, i was first thinking of designing my website like a classic python application, with packages and stuff, but tell me i should rather think of arranging my modules in classic directories and use import_module() each time.

If you are new to Python and have dropped down to the level of
mod_python module importer already, I would suggest you run away.
Instead have a look at one of the high level web frameworks for Python
as you will be able to get onto developing your application much
quicker and will not have to be worried about such low level details.
:-)

Graham
From polettog at gmail.com  Mon Aug 18 08:32:30 2008
From: polettog at gmail.com (Guillaume Poletto)
Date: Mon Aug 18 08:32:36 2008
Subject: [mod_python] [SPAM] [Newbie] import_module() function or Python's
	import statement
In-Reply-To: <88e286470808171759ta2d620ag1d6aab2639aeffa@mail.gmail.com>
References: <20080817231957.7a17d625@gruentoo.gruhome>
	<88e286470808171759ta2d620ag1d6aab2639aeffa@mail.gmail.com>
Message-ID: <f9b452010808180532y3b353642l214cf9b4872022fb@mail.gmail.com>

Thanks for your answer

2008/8/18 Graham Dumpleton <graham.dumpleton@gmail.com>
>
> 2008/8/18 Poletto Guillaume <polettog@gmail.com>:
> >
> > Yes, I'm new to both Python programming language and mod_python
>
> If you are new to Python and want to write web applications, any
> reason why you didn't start out with one of the arguably more friendly
> higher level frameworks such as Django?

I don't know.. no doubt that Django is great, but i was seduced by
writing my own handler and controlling requests by parsing URIs by
hand.
Note that if i'm new to Python, i'm experimented in web developement,
and also in writing CGIs (although this is not CGI here, i know). I
already know some low level things concerning HTTP headers (i wrote
some tools in C to parse urlencoded query strings, POST data and
netscape cookies). So except the import_module() part, i did
assimilate most of the manual.
If there was no "util" module to fetch form parameters, i would have
taken a look to a higher level framework, but the base mod_python
seems to provide all i need :)
Also, i was interesting in writing Apache modules in C, so i thought
using mod_python at low level was good to learn about how work
handlers and apache internals

> > I made a test and i modified a module imported by "import" statement in my handler module : the changes where taken in count without restarting apache
>
> Two things could be happening here. The first is that the module being
> imported was in the same directory and was being managed by mod_python
> module importer and on detecting a change, it reloaded code
> appropriately.
>
> Alternatively, you have been deceived by the fact that
> Apache/mod_python on UNIX is a multiprocess web server and so a
> completely different processes which hadn't loaded it previously
> handled the request and so code got loaded for first time, and wasn't
> because of a reload at all. In this later case, it may not have even
> been a candidate for reloading and might just be a standard Python
> module/package.

That was it !
Yesterday, i made, the test 3 or 4 times, but there were 6 apache
processes, so at each request, the handler module was not yet
imported. This is why i thought modules where "reloaded".

>
> If you have:
>
>  PythonDebug On
>
> set in configuration and monitor the Apache error log files you should
> be able to see when a code files is being handled by mod_python module
> importer and when it is being first loaded and/or reloaded. If it
> isn't in there, it is a standard module/package and reloading not
> possible.

This is a great trick to look at the apache error log, i'll remember that

> If you are new to Python and have dropped down to the level of
> mod_python module importer already, I would suggest you run away.
> Instead have a look at one of the high level web frameworks for Python
> as you will be able to get onto developing your application much
> quicker and will not have to be worried about such low level details.
> :-)

Thanks for the advice but i think i'll look to a higher level
framework in a future project.
I've all the time !
Now i better understand what happens with "import" statements, i think
i will use them instead of import_module() and gracefully restart
apache at each update.
Now there's another problem : what's the right way to add another
import path ? Because i wanted to have the main source code outside
the directory in which is the handler module.
During my test, i did the tweak of adding dynamically my path to
sys.path list, but i find this a bit dirty.
So i found there was this apache directive "PythonPath" but according
to the manual, this is not recommanded to use it.
So what should i do?

Thanks
From Scott.Chapman at VerizonWireless.com  Mon Aug 18 11:32:30 2008
From: Scott.Chapman at VerizonWireless.com (Scott.Chapman@VerizonWireless.com)
Date: Mon Aug 18 11:32:42 2008
Subject: [mod_python] Mod_Python not releasing memory?
Message-ID: <200808181532.m7IFWd02022975@modpython.org>

I have Apache/2.2.8 (Unix) mod_python/3.3.1 Python/2.4.5 on Red Hat Enterprise Linux AS release 4 (Nahant Update 6).
Apache compiled:
./configure --with-mpm=prefork --enable-mods-shared="most proxy charset_lite" --with-expat=system 

Mod Python:
./configure --with-apxs=/usr/local/apache2/bin/apxs --with-python=/usr/local/bin/python2.4 

Python:
./configure --enable-shared 

My application is using Cheetah to generate a very large HTML table and sending it back to the client, after retrieving a bunch of database rows.

One hit to Apache to generate one of these big tables runs memory usage up to 30.6% of system RAM:

$ ps aux | grep 30316 | grep -v grep
USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   TIME COMMAND
web      30316  2.7 27.7 1559948 1122772 ?   Rl   12:48   1:21 /usr/local/apache2/bin/httpd -k start

$ ps aux | grep 30316 | grep -v grep
USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   TIME COMMAND
web      30316  2.7 30.6 1559948 1237948 ?   Rl   12:48   1:21 /usr/local/apache2/bin/httpd -k start

After the query is done and the results delivered to the browser, the Apache process is still holding about 25% of system memory.
I don't see any way to free that memory.  
Once I "return result" to the browser, I can't do "result=None" so I'm relying on Python to release the memory and it is taking way too long for that to happen.  I do set the database result set to None as soon as I can and that helps some.

If I get a number of these big hits, OOM starts killing PIDs which is a "Bad Thing".

Any clues on how to make that memory release sooner?

Thanks,
Scott


The information contained in this message and any attachment may be
proprietary, confidential, and privileged or subject to the work
product doctrine and thus protected from disclosure.  If the reader
of this message is not the intended recipient, or an employee or
agent responsible for delivering this message to the intended
recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited.
If you have received this communication in error, please notify me
immediately by replying to this message and deleting it and all
copies and backups thereof.  Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080818/c5e8dede/attachment.html
From graham.dumpleton at gmail.com  Mon Aug 18 21:26:06 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug 18 21:26:12 2008
Subject: [mod_python] [SPAM] [Newbie] import_module() function or Python's
	import statement
In-Reply-To: <f9b452010808180532y3b353642l214cf9b4872022fb@mail.gmail.com>
References: <20080817231957.7a17d625@gruentoo.gruhome>
	<88e286470808171759ta2d620ag1d6aab2639aeffa@mail.gmail.com>
	<f9b452010808180532y3b353642l214cf9b4872022fb@mail.gmail.com>
Message-ID: <88e286470808181826v897a96al6f1291a3434ce474@mail.gmail.com>

2008/8/18 Guillaume Poletto <polettog@gmail.com>:
> Thanks for your answer
>
> 2008/8/18 Graham Dumpleton <graham.dumpleton@gmail.com>
>>
>> 2008/8/18 Poletto Guillaume <polettog@gmail.com>:
>> >
>> > Yes, I'm new to both Python programming language and mod_python
>>
>> If you are new to Python and want to write web applications, any
>> reason why you didn't start out with one of the arguably more friendly
>> higher level frameworks such as Django?
>
> I don't know.. no doubt that Django is great, but i was seduced by
> writing my own handler and controlling requests by parsing URIs by
> hand.
> Note that if i'm new to Python, i'm experimented in web developement,
> and also in writing CGIs (although this is not CGI here, i know). I
> already know some low level things concerning HTTP headers (i wrote
> some tools in C to parse urlencoded query strings, POST data and
> netscape cookies). So except the import_module() part, i did
> assimilate most of the manual.
> If there was no "util" module to fetch form parameters, i would have
> taken a look to a higher level framework, but the base mod_python
> seems to provide all i need :)
> Also, i was interesting in writing Apache modules in C, so i thought
> using mod_python at low level was good to learn about how work
> handlers and apache internals

If you want to work at that level then you might also have a look at WSGI.

  http://www.python.org/dev/peps/pep-0333/
  http://www.wsgi.org

This is sort of a higher level form of CGI for Python. Whereas CGI is
based one off execution, WSGI understands the concept of persistent
processes. WSGI is also portable across hosting mechanisms and thus
technically can work on top of CGI, mod_python, mod_wsgi, fastcgi,
scgi, ajp plus standalone Python WSGI capable web servers.

Thus, if you have some familiarity with CGI, WSGI will not be too
foreign too you.

As to higher level frameworks, if you want a more low level
componentised framework which can work with WSGI, have a look at:

  http://werkzeug.pocoo.org/

>> If you are new to Python and have dropped down to the level of
>> mod_python module importer already, I would suggest you run away.
>> Instead have a look at one of the high level web frameworks for Python
>> as you will be able to get onto developing your application much
>> quicker and will not have to be worried about such low level details.
>> :-)
>
> Thanks for the advice but i think i'll look to a higher level
> framework in a future project.
> I've all the time !
> Now i better understand what happens with "import" statements, i think
> i will use them instead of import_module() and gracefully restart
> apache at each update.
> Now there's another problem : what's the right way to add another
> import path ? Because i wanted to have the main source code outside
> the directory in which is the handler module.
> During my test, i did the tweak of adding dynamically my path to
> sys.path list, but i find this a bit dirty.
> So i found there was this apache directive "PythonPath" but according
> to the manual, this is not recommanded to use it.
> So what should i do?

There is no problem using PythonPath. The only thing you shouldn't do
is overlap the directories between it and the mod_python internal
module importer.

So, for normal Python modules/packages installed outside of document
tree, the PythonPath is correct way of configuring their location.

Graham
From graham.dumpleton at gmail.com  Mon Aug 18 21:30:21 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Aug 18 21:30:27 2008
Subject: [mod_python] Mod_Python not releasing memory?
In-Reply-To: <200808181532.m7IFWd02022975@modpython.org>
References: <200808181532.m7IFWd02022975@modpython.org>
Message-ID: <88e286470808181830p81d763aj5b5f31cbe0055488@mail.gmail.com>

2008/8/19  <Scott.Chapman@verizonwireless.com>:
> I have Apache/2.2.8 (Unix) mod_python/3.3.1 Python/2.4.5 on Red Hat
> Enterprise Linux AS release 4 (Nahant Update 6).
> Apache compiled:
> ./configure --with-mpm=prefork --enable-mods-shared="most proxy
> charset_lite" --with-expat=system
>
> Mod Python:
> ./configure --with-apxs=/usr/local/apache2/bin/apxs
> --with-python=/usr/local/bin/python2.4
>
> Python:
> ./configure --enable-shared
>
> My application is using Cheetah to generate a very large HTML table and
> sending it back to the client, after retrieving a bunch of database rows.
>
> One hit to Apache to generate one of these big tables runs memory usage up
> to 30.6% of system RAM:
>
> $ ps aux | grep 30316 | grep -v grep
> USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   TIME COMMAND
> web      30316  2.7 27.7 1559948 1122772 ?   Rl   12:48   1:21
> /usr/local/apache2/bin/httpd -k start
>
> $ ps aux | grep 30316 | grep -v grep
> USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   TIME COMMAND
> web      30316  2.7 30.6 1559948 1237948 ?   Rl   12:48   1:21
> /usr/local/apache2/bin/httpd -k start
>
> After the query is done and the results delivered to the browser, the Apache
> process is still holding about 25% of system memory.
>
> I don't see any way to free that memory.
> Once I "return result" to the browser, I can't do "result=None" so I'm
> relying on Python to release the memory and it is taking way too long for
> that to happen.  I do set the database result set to None as soon as I can
> and that helps some.
>
> If I get a number of these big hits, OOM starts killing PIDs which is a "Bad
> Thing".
>
> Any clues on how to make that memory release sooner?

This is normal behaviour. You need to do some reading/research on how
memory is used in operating systems.

In short though, in general once a process needs to allocate memory
from the operating system it is then marked as being in use by that
process for the life of the process, even if the individual memory
fragments are freed by code. Such freed memory can be reused within
the same process, but isn't released back to operating system for
other processes to use.

Graham
From Samuele.Kaplun at cern.ch  Tue Aug 19 06:25:54 2008
From: Samuele.Kaplun at cern.ch (Samuele Kaplun)
Date: Tue Aug 19 06:26:04 2008
Subject: [mod_python] Implementing Range Retrieval Requests
In-Reply-To: <88e286470808120317y27d1a109n3cdcc476b7cde3ba@mail.gmail.com>
References: <200808121110.31428.Samuele.Kaplun@cern.ch>
	<88e286470808120317y27d1a109n3cdcc476b7cde3ba@mail.gmail.com>
Message-ID: <200808191225.55527.Samuele.Kaplun@cern.ch>

Dear Grahm,

Il Tuesday 12 August 2008 12:17:37 Graham Dumpleton ha scritto:
>
> You would need the following to be implemented:
>
>   https://issues.apache.org/jira/browse/MODPYTHON-238
>
> If it is your own application on your own server, you could perhaps
> modify mod_python source code to address the issue.
>
> Graham

pardon my ignorance, but do you mean that if I patch mod_python in order to 
have a setter for req.chunked and req.connection.keepalive, I could be able 
to disable chunked encoding even if content length is not specified, thus 
being able to manually build multirange responses?

I tried to patch mod_python, as you suggested, creating the patches I'm 
attaching. For the time being I'm still encountering some errors, that I 
still need to investigate (they are probably related to my implementation of 
multirange).

If you think my patches are enough for enabling writing support for chunked 
and keeplive (thus fulfilling MODPYTHON-238 issue), I'd be glad if you would 
like to accept them for integration into mod_python.

Best regards,
	Samuele

-- 
.O.
..O
OOO
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-connobject.patch
Type: text/x-diff
Size: 596 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080819/0c557061/mod_python-connobject.bin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mod_python-requestobject.patch
Type: text/x-diff
Size: 1378 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080819/0c557061/mod_python-requestobject.bin
From graham.dumpleton at gmail.com  Tue Aug 19 06:45:04 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug 19 06:45:09 2008
Subject: [mod_python] Implementing Range Retrieval Requests
In-Reply-To: <200808191225.55527.Samuele.Kaplun@cern.ch>
References: <200808121110.31428.Samuele.Kaplun@cern.ch>
	<88e286470808120317y27d1a109n3cdcc476b7cde3ba@mail.gmail.com>
	<200808191225.55527.Samuele.Kaplun@cern.ch>
Message-ID: <88e286470808190345x72ccbb98rfdbf592dd20e4879@mail.gmail.com>

2008/8/19 Samuele Kaplun <Samuele.Kaplun@cern.ch>:
> Dear Grahm,
>
> Il Tuesday 12 August 2008 12:17:37 Graham Dumpleton ha scritto:
>>
>> You would need the following to be implemented:
>>
>>   https://issues.apache.org/jira/browse/MODPYTHON-238
>>
>> If it is your own application on your own server, you could perhaps
>> modify mod_python source code to address the issue.
>>
>> Graham
>
> pardon my ignorance, but do you mean that if I patch mod_python in order to
> have a setter for req.chunked and req.connection.keepalive, I could be able
> to disable chunked encoding even if content length is not specified,

That is what my analysis in JIRA issues suggests.

> thus being able to manually build multirange responses?

Don't know about the multirange response side of things. :-)

> I tried to patch mod_python, as you suggested, creating the patches I'm
> attaching. For the time being I'm still encountering some errors, that I
> still need to investigate (they are probably related to my implementation of
> multirange).
>
> If you think my patches are enough for enabling writing support for chunked
> and keeplive (thus fulfilling MODPYTHON-238 issue), I'd be glad if you would
> like to accept them for integration into mod_python.

Wouldn't you also need to change:

    {"chunked",      (getter)getreq_recmbr, NULL, "Sending chunked
transfer-coding", "chunked"},

So that setter, rather than being NULL is:

  (setter)setreq_recmbr

The connection object hasn't previously had writable members so not
setup same way. Thus not sure how to enable member as writable without
trying it.

Not on machine where can play with source code at moment, can only
view it via web from repository.

Do you changes actually allow you to set values, then read back to
confirm changed?

Graham
From graham.dumpleton at gmail.com  Tue Aug 19 07:25:57 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug 19 07:26:00 2008
Subject: [mod_python] Implementing Range Retrieval Requests
In-Reply-To: <88e286470808190345x72ccbb98rfdbf592dd20e4879@mail.gmail.com>
References: <200808121110.31428.Samuele.Kaplun@cern.ch>
	<88e286470808120317y27d1a109n3cdcc476b7cde3ba@mail.gmail.com>
	<200808191225.55527.Samuele.Kaplun@cern.ch>
	<88e286470808190345x72ccbb98rfdbf592dd20e4879@mail.gmail.com>
Message-ID: <88e286470808190425s648da7a7yd9dc4dc4de3c0aa8@mail.gmail.com>

Haha, maybe I should scroll down. :-)

You do setup the setattr after all.

Graham

2008/8/19 Graham Dumpleton <graham.dumpleton@gmail.com>:
> 2008/8/19 Samuele Kaplun <Samuele.Kaplun@cern.ch>:
>> Dear Grahm,
>>
>> Il Tuesday 12 August 2008 12:17:37 Graham Dumpleton ha scritto:
>>>
>>> You would need the following to be implemented:
>>>
>>>   https://issues.apache.org/jira/browse/MODPYTHON-238
>>>
>>> If it is your own application on your own server, you could perhaps
>>> modify mod_python source code to address the issue.
>>>
>>> Graham
>>
>> pardon my ignorance, but do you mean that if I patch mod_python in order to
>> have a setter for req.chunked and req.connection.keepalive, I could be able
>> to disable chunked encoding even if content length is not specified,
>
> That is what my analysis in JIRA issues suggests.
>
>> thus being able to manually build multirange responses?
>
> Don't know about the multirange response side of things. :-)
>
>> I tried to patch mod_python, as you suggested, creating the patches I'm
>> attaching. For the time being I'm still encountering some errors, that I
>> still need to investigate (they are probably related to my implementation of
>> multirange).
>>
>> If you think my patches are enough for enabling writing support for chunked
>> and keeplive (thus fulfilling MODPYTHON-238 issue), I'd be glad if you would
>> like to accept them for integration into mod_python.
>
> Wouldn't you also need to change:
>
>    {"chunked",      (getter)getreq_recmbr, NULL, "Sending chunked
> transfer-coding", "chunked"},
>
> So that setter, rather than being NULL is:
>
>  (setter)setreq_recmbr
>
> The connection object hasn't previously had writable members so not
> setup same way. Thus not sure how to enable member as writable without
> trying it.
>
> Not on machine where can play with source code at moment, can only
> view it via web from repository.
>
> Do you changes actually allow you to set values, then read back to
> confirm changed?
>
> Graham
>
From graham.dumpleton at gmail.com  Tue Aug 19 07:43:39 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug 19 07:43:40 2008
Subject: [mod_python] Implementing Range Retrieval Requests
In-Reply-To: <88e286470808190425s648da7a7yd9dc4dc4de3c0aa8@mail.gmail.com>
References: <200808121110.31428.Samuele.Kaplun@cern.ch>
	<88e286470808120317y27d1a109n3cdcc476b7cde3ba@mail.gmail.com>
	<200808191225.55527.Samuele.Kaplun@cern.ch>
	<88e286470808190345x72ccbb98rfdbf592dd20e4879@mail.gmail.com>
	<88e286470808190425s648da7a7yd9dc4dc4de3c0aa8@mail.gmail.com>
Message-ID: <88e286470808190443k5e980eabi471426d00c78a407@mail.gmail.com>

Changes tested and works as expected as far as allowing chunking to be
disabled for HTTP/1.1 when no content length supplied for response.

Fixes in 687024 of trunk:

  https://svn.apache.org/repos/asf/quetzalcoatl/mod_python/trunk

Have fun.

Graham

2008/8/19 Graham Dumpleton <graham.dumpleton@gmail.com>:
> Haha, maybe I should scroll down. :-)
>
> You do setup the setattr after all.
>
> Graham
>
> 2008/8/19 Graham Dumpleton <graham.dumpleton@gmail.com>:
>> 2008/8/19 Samuele Kaplun <Samuele.Kaplun@cern.ch>:
>>> Dear Grahm,
>>>
>>> Il Tuesday 12 August 2008 12:17:37 Graham Dumpleton ha scritto:
>>>>
>>>> You would need the following to be implemented:
>>>>
>>>>   https://issues.apache.org/jira/browse/MODPYTHON-238
>>>>
>>>> If it is your own application on your own server, you could perhaps
>>>> modify mod_python source code to address the issue.
>>>>
>>>> Graham
>>>
>>> pardon my ignorance, but do you mean that if I patch mod_python in order to
>>> have a setter for req.chunked and req.connection.keepalive, I could be able
>>> to disable chunked encoding even if content length is not specified,
>>
>> That is what my analysis in JIRA issues suggests.
>>
>>> thus being able to manually build multirange responses?
>>
>> Don't know about the multirange response side of things. :-)
>>
>>> I tried to patch mod_python, as you suggested, creating the patches I'm
>>> attaching. For the time being I'm still encountering some errors, that I
>>> still need to investigate (they are probably related to my implementation of
>>> multirange).
>>>
>>> If you think my patches are enough for enabling writing support for chunked
>>> and keeplive (thus fulfilling MODPYTHON-238 issue), I'd be glad if you would
>>> like to accept them for integration into mod_python.
>>
>> Wouldn't you also need to change:
>>
>>    {"chunked",      (getter)getreq_recmbr, NULL, "Sending chunked
>> transfer-coding", "chunked"},
>>
>> So that setter, rather than being NULL is:
>>
>>  (setter)setreq_recmbr
>>
>> The connection object hasn't previously had writable members so not
>> setup same way. Thus not sure how to enable member as writable without
>> trying it.
>>
>> Not on machine where can play with source code at moment, can only
>> view it via web from repository.
>>
>> Do you changes actually allow you to set values, then read back to
>> confirm changed?
>>
>> Graham
>>
>
From Samuele.Kaplun at cern.ch  Tue Aug 19 07:53:12 2008
From: Samuele.Kaplun at cern.ch (Samuele Kaplun)
Date: Tue Aug 19 07:53:19 2008
Subject: [mod_python] Implementing Range Retrieval Requests
In-Reply-To: <88e286470808190425s648da7a7yd9dc4dc4de3c0aa8@mail.gmail.com>
References: <200808121110.31428.Samuele.Kaplun@cern.ch>
	<88e286470808190345x72ccbb98rfdbf592dd20e4879@mail.gmail.com>
	<88e286470808190425s648da7a7yd9dc4dc4de3c0aa8@mail.gmail.com>
Message-ID: <200808191353.13051.Samuele.Kaplun@cern.ch>

Il Tuesday 19 August 2008 13:25:57 Graham Dumpleton ha scritto:
> Haha, maybe I should scroll down. :-)
>
> You do setup the setattr after all.
>
> Graham

:-D yes!
And for the connection part, it seems to work... After the patch I can write 
into both attributes. 

Best regards,
	Samuele

-- 
.O.
..O
OOO
From Scott.Chapman at VerizonWireless.com  Tue Aug 19 09:55:58 2008
From: Scott.Chapman at VerizonWireless.com (Scott.Chapman@VerizonWireless.com)
Date: Tue Aug 19 09:56:06 2008
Subject: [mod_python] Mod_Python not releasing memory?
In-Reply-To: <NYOBGCEXSMTP21PkKTn000ba401@nyobgcexsmtp21.uswin.ad.vzwcorp.com>
Message-ID: <200808191356.m7JDu1eW012229@modpython.org>



> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Monday, August 18, 2008 9:30 PM
> To: Chapman, Scott Earl
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Mod_Python not releasing memory?
> 
> 
> 2008/8/19  <Scott.Chapman@verizonwireless.com>:
> > I have Apache/2.2.8 (Unix) mod_python/3.3.1 Python/2.4.5 on Red Hat
> > Enterprise Linux AS release 4 (Nahant Update 6).
> > Apache compiled:
> > ./configure --with-mpm=prefork --enable-mods-shared="most proxy
> > charset_lite" --with-expat=system
> >
> > Mod Python:
> > ./configure --with-apxs=/usr/local/apache2/bin/apxs
> > --with-python=/usr/local/bin/python2.4
> >
> > Python:
> > ./configure --enable-shared
> >
> > My application is using Cheetah to generate a very large 
> HTML table and
> > sending it back to the client, after retrieving a bunch of 
> database rows.
> >
> > One hit to Apache to generate one of these big tables runs 
> memory usage up
> > to 30.6% of system RAM:
> >
> > $ ps aux | grep 30316 | grep -v grep
> > USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   
> TIME COMMAND
> > web      30316  2.7 27.7 1559948 1122772 ?   Rl   12:48   1:21
> > /usr/local/apache2/bin/httpd -k start
> >
> > $ ps aux | grep 30316 | grep -v grep
> > USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START   
> TIME COMMAND
> > web      30316  2.7 30.6 1559948 1237948 ?   Rl   12:48   1:21
> > /usr/local/apache2/bin/httpd -k start
> >
> > After the query is done and the results delivered to the 
> browser, the Apache
> > process is still holding about 25% of system memory.
> >
> > I don't see any way to free that memory.
> > Once I "return result" to the browser, I can't do 
> "result=None" so I'm
> > relying on Python to release the memory and it is taking 
> way too long for
> > that to happen.  I do set the database result set to None 
> as soon as I can
> > and that helps some.
> >
> > If I get a number of these big hits, OOM starts killing 
> PIDs which is a "Bad
> > Thing".
> >
> > Any clues on how to make that memory release sooner?
> 
> This is normal behaviour. You need to do some reading/research on how
> memory is used in operating systems.
> 
> In short though, in general once a process needs to allocate memory
> from the operating system it is then marked as being in use by that
> process for the life of the process, even if the individual memory
> fragments are freed by code. Such freed memory can be reused within
> the same process, but isn't released back to operating system for
> other processes to use.

If that were true, how would a processes memory usage ever spike and then go back down? I have seen this behavior plenty of times.

Scott


The information contained in this message and any attachment may be
proprietary, confidential, and privileged or subject to the work
product doctrine and thus protected from disclosure.  If the reader
of this message is not the intended recipient, or an employee or
agent responsible for delivering this message to the intended
recipient, you are hereby notified that any dissemination,
distribution or copying of this communication is strictly prohibited.
If you have received this communication in error, please notify me
immediately by replying to this message and deleting it and all
copies and backups thereof.  Thank you.



From martijn at xs4us.nu  Tue Aug 19 13:09:50 2008
From: martijn at xs4us.nu (Martijn Moeling)
Date: Tue Aug 19 13:10:13 2008
Subject: [mod_python] Mod_Python not releasing memory?
In-Reply-To: <200808191356.m7JDu1eW012229@modpython.org>
References: <200808191356.m7JDu1eW012229@modpython.org>
Message-ID: <8F4694A6-E214-45FE-A681-186FD37495CD@xs4us.nu>

Hmm i had similar trouble with mysql. Turned out to be the connection  
to mysql must not be made global. My fix was to open it in my handler  
and to close it in the fixup by using req.register_cleanup

The connection to the db should be made within the req object: req.db  
= (make connection to your db) and like so with a cursor.

Also think 'stream'

Do not cursor.fetchall but fetchone, write the output after each fetch

If you load with fetchall and build the entire page, the data is I'm  
memory twice!! With streaming only one record is in apache process,  
you can handle way more request in the same memory and it greatly  
improves user experiance.

Hope it helps,
Martijn



Op 19 aug 2008 om 16:06 heeft "Scott.Chapman@VerizonWireless.com" <Scott.Chapman@VerizonWireless.com 
 > het volgende geschreven:\

>
>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
>> Sent: Monday, August 18, 2008 9:30 PM
>> To: Chapman, Scott Earl
>> Cc: mod_python@modpython.org
>> Subject: Re: [mod_python] Mod_Python not releasing memory?
>>
>>
>> 2008/8/19  <Scott.Chapman@verizonwireless.com>:
>>> I have Apache/2.2.8 (Unix) mod_python/3.3.1 Python/2.4.5 on Red Hat
>>> Enterprise Linux AS release 4 (Nahant Update 6).
>>> Apache compiled:
>>> ./configure --with-mpm=prefork --enable-mods-shared="most proxy
>>> charset_lite" --with-expat=system
>>>
>>> Mod Python:
>>> ./configure --with-apxs=/usr/local/apache2/bin/apxs
>>> --with-python=/usr/local/bin/python2.4
>>>
>>> Python:
>>> ./configure --enable-shared
>>>
>>> My application is using Cheetah to generate a very large
>> HTML table and
>>> sending it back to the client, after retrieving a bunch of
>> database rows.
>>>
>>> One hit to Apache to generate one of these big tables runs
>> memory usage up
>>> to 30.6% of system RAM:
>>>
>>> $ ps aux | grep 30316 | grep -v grep
>>> USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START
>> TIME COMMAND
>>> web      30316  2.7 27.7 1559948 1122772 ?   Rl   12:48   1:21
>>> /usr/local/apache2/bin/httpd -k start
>>>
>>> $ ps aux | grep 30316 | grep -v grep
>>> USER       PID %CPU %MEM   VSZ  RSS TTY      STAT START
>> TIME COMMAND
>>> web      30316  2.7 30.6 1559948 1237948 ?   Rl   12:48   1:21
>>> /usr/local/apache2/bin/httpd -k start
>>>
>>> After the query is done and the results delivered to the
>> browser, the Apache
>>> process is still holding about 25% of system memory.
>>>
>>> I don't see any way to free that memory.
>>> Once I "return result" to the browser, I can't do
>> "result=None" so I'm
>>> relying on Python to release the memory and it is taking
>> way too long for
>>> that to happen.  I do set the database result set to None
>> as soon as I can
>>> and that helps some.
>>>
>>> If I get a number of these big hits, OOM starts killing
>> PIDs which is a "Bad
>>> Thing".
>>>
>>> Any clues on how to make that memory release sooner?
>>
>> This is normal behaviour. You need to do some reading/research on how
>> memory is used in operating systems.
>>
>> In short though, in general once a process needs to allocate memory
>> from the operating system it is then marked as being in use by that
>> process for the life of the process, even if the individual memory
>> fragments are freed by code. Such freed memory can be reused within
>> the same process, but isn't released back to operating system for
>> other processes to use.
>
> If that were true, how would a processes memory usage ever spike and  
> then go back down? I have seen this behavior plenty of times.
>
> Scott
>
>
> The information contained in this message and any attachment may be
> proprietary, confidential, and privileged or subject to the work
> product doctrine and thus protected from disclosure.  If the reader
> of this message is not the intended recipient, or an employee or
> agent responsible for delivering this message to the intended
> recipient, you are hereby notified that any dissemination,
> distribution or copying of this communication is strictly prohibited.
> If you have received this communication in error, please notify me
> immediately by replying to this message and deleting it and all
> copies and backups thereof.  Thank you.
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From graham.dumpleton at gmail.com  Tue Aug 19 17:43:57 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Aug 19 17:44:03 2008
Subject: [mod_python] Mod_Python not releasing memory?
In-Reply-To: <200808191356.m7JDu1eW012229@modpython.org>
References: <NYOBGCEXSMTP21PkKTn000ba401@nyobgcexsmtp21.uswin.ad.vzwcorp.com>
	<200808191356.m7JDu1eW012229@modpython.org>
Message-ID: <88e286470808191443v7e797c09qecf10b0718f78df8@mail.gmail.com>

2008/8/19  <Scott.Chapman@verizonwireless.com>:
>> In short though, in general once a process needs to allocate memory
>> from the operating system it is then marked as being in use by that
>> process for the life of the process, even if the individual memory
>> fragments are freed by code. Such freed memory can be reused within
>> the same process, but isn't released back to operating system for
>> other processes to use.
>
> If that were true, how would a processes memory usage ever spike and then go back down? I have seen this behavior plenty of times.

Because certain memory allocaters treat allocation of large memory
blocks that would require more memory in a special way and allocated
them at top of memory, If they are released straight away and no more
memory allocated from top of memory, it can actually give it back to
operating system. This is why I said 'in general' it is more
complicated but you shouldn't rely on such behaviour, especially when
talking about small Python objects.

Graham
From hh at dsgx.org  Wed Aug 20 12:23:38 2008
From: hh at dsgx.org (hh@dsgx.org)
Date: Wed Aug 20 12:21:58 2008
Subject: [mod_python] Problem Running mod_python with apache  Apache/2.0.63
Message-ID: <48AC450A.7040605@dsgx.org>

I installed mod_python using freebsd 6.x thru ports 
/usr/ports/www/mod_python3
mod_python module was installed in
--
-rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18 
/usr/local/libexec/apache2/mod_python.so
--
Added the line into my httpd.conf
LoadModule python_module /usr/local/libexec/apache2/mod_python.so
PythonOption mod_python.mutex_directory "/tmp"
AddIcon /icons/p.gif .pl .py
AddHandler python-program .py

and tried to do that hello world test
----
settup a directory entry like on tutorial
--
<Directory /home/augusto/www/trac>
        AddHandler mod_python .py
        PythonHandler mptest
        PythonDebug On
</Directory>
----
-rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31 
/home/augusto/www/trac/test.py
--
inside ->
from mod_python import apache

    def handler(req):
            req.content_type = 'text/plain'
                    req.write("Hello World!")
                            return apache.OK
----

the error_log from my apache to make sure that the mod_python module was 
loaded
->
Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix) mod_python/3.3.1 
Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
---


Everything seems to be normal but insted of reading the file it just 
dumps the text to my browser any ideias ??? Thanks alot.


From bierbaum at vierfalt.com  Wed Aug 20 13:40:17 2008
From: bierbaum at vierfalt.com (Simon Bierbaum)
Date: Wed Aug 20 13:40:31 2008
Subject: [mod_python] persistence in mod_python
Message-ID: <C241E4D3-C827-4CE8-8261-5D35E8F07C44@vierfalt.com>

Hi all,

I would like to know exactly what bits in mod_python are persistent  
across multiple requests to the same apache process. I.e., once  
apache is started and mod_python is loaded, between two requests  
served by the same apache process and the same Python handler,

- does mod_python reload modules, i.e. is module initialization code  
only run once during the apache process lifespan?
- is there a way for modules to store objects persistently, e.g. a  
database connection pool?
- what happens to variables defined in the handler script but not  
locally within the handler() function (I'm not sure whether this is  
what Python calls "global")?

I have a bug in my application which uses mod_python, MySQLdb and the  
InnoDB storage engine revolving around transactions, and it's driving  
me mad...any help or a pointer to documentation is greatly appreciated.

Thanks, Simon
From graham.dumpleton at gmail.com  Wed Aug 20 16:43:29 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Aug 20 16:43:34 2008
Subject: [mod_python] persistence in mod_python
In-Reply-To: <C241E4D3-C827-4CE8-8261-5D35E8F07C44@vierfalt.com>
References: <C241E4D3-C827-4CE8-8261-5D35E8F07C44@vierfalt.com>
Message-ID: <88e286470808201343g201ff5a8obf1e1ffe4c7ba929@mail.gmail.com>

For a start, read:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

Graham

2008/8/21 Simon Bierbaum <bierbaum@vierfalt.com>:
> Hi all,
>
> I would like to know exactly what bits in mod_python are persistent across
> multiple requests to the same apache process. I.e., once apache is started
> and mod_python is loaded, between two requests served by the same apache
> process and the same Python handler,
>
> - does mod_python reload modules, i.e. is module initialization code only
> run once during the apache process lifespan?
> - is there a way for modules to store objects persistently, e.g. a database
> connection pool?
> - what happens to variables defined in the handler script but not locally
> within the handler() function (I'm not sure whether this is what Python
> calls "global")?
>
> I have a bug in my application which uses mod_python, MySQLdb and the InnoDB
> storage engine revolving around transactions, and it's driving me mad...any
> help or a pointer to documentation is greatly appreciated.
>
> Thanks, Simon
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Wed Aug 20 16:47:04 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Aug 20 16:47:25 2008
Subject: [mod_python] Problem Running mod_python with apache Apache/2.0.63
In-Reply-To: <48AC450A.7040605@dsgx.org>
References: <48AC450A.7040605@dsgx.org>
Message-ID: <88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>

Try starting over, including removing:

  AddHandler python-program .py

at global scope in configuration and follow instructions and debugging tips in:

  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking

Graham

2008/8/21 hh@dsgx.org <hh@dsgx.org>:
> I installed mod_python using freebsd 6.x thru ports
> /usr/ports/www/mod_python3
> mod_python module was installed in
> --
> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
> /usr/local/libexec/apache2/mod_python.so
> --
> Added the line into my httpd.conf
> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
> PythonOption mod_python.mutex_directory "/tmp"
> AddIcon /icons/p.gif .pl .py
> AddHandler python-program .py
>
> and tried to do that hello world test
> ----
> settup a directory entry like on tutorial
> --
> <Directory /home/augusto/www/trac>
>       AddHandler mod_python .py
>       PythonHandler mptest
>       PythonDebug On
> </Directory>
> ----
> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
> /home/augusto/www/trac/test.py
> --
> inside ->
> from mod_python import apache
>
>   def handler(req):
>           req.content_type = 'text/plain'
>                   req.write("Hello World!")
>                           return apache.OK
> ----
>
> the error_log from my apache to make sure that the mod_python module was
> loaded
> ->
> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix) mod_python/3.3.1
> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
> ---
>
>
> Everything seems to be normal but insted of reading the file it just dumps
> the text to my browser any ideias ??? Thanks alot.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From bierbaum at vierfalt.com  Wed Aug 20 17:43:03 2008
From: bierbaum at vierfalt.com (Simon Bierbaum)
Date: Wed Aug 20 17:43:16 2008
Subject: [mod_python] persistence in mod_python
In-Reply-To: <88e286470808201343g201ff5a8obf1e1ffe4c7ba929@mail.gmail.com>
References: <C241E4D3-C827-4CE8-8261-5D35E8F07C44@vierfalt.com>
	<88e286470808201343g201ff5a8obf1e1ffe4c7ba929@mail.gmail.com>
Message-ID: <17E75A0C-D0AF-4A1E-930F-C8CCF8B56E4B@vierfalt.com>

Thanks, Graham. From reading this and also http://www.dscpl.com.au/ 
wiki/ModPython/Articles/ModuleImportingIsBroken, I believe that two  
distinct requests, handled consecutively by the same unrecycled  
apache prefork child, will see the same global module objects and  
thus the same module state. Is that correct? I know this data sharing  
method should not be used, but it would mean the bug I'm hunting  
could be caused by some unintentionally left over state within a  
module, making the second request work with stale data.

Simon

Am 20.08.2008 um 22:43 schrieb Graham Dumpleton:

> For a start, read:
>
>   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
> TheProcessInterpreterModel
>
> Graham
>
> 2008/8/21 Simon Bierbaum <bierbaum@vierfalt.com>:
>> Hi all,
>>
>> I would like to know exactly what bits in mod_python are  
>> persistent across
>> multiple requests to the same apache process. I.e., once apache is  
>> started
>> and mod_python is loaded, between two requests served by the same  
>> apache
>> process and the same Python handler,
>>
>> - does mod_python reload modules, i.e. is module initialization  
>> code only
>> run once during the apache process lifespan?
>> - is there a way for modules to store objects persistently, e.g. a  
>> database
>> connection pool?
>> - what happens to variables defined in the handler script but not  
>> locally
>> within the handler() function (I'm not sure whether this is what  
>> Python
>> calls "global")?
>>
>> I have a bug in my application which uses mod_python, MySQLdb and  
>> the InnoDB
>> storage engine revolving around transactions, and it's driving me  
>> mad...any
>> help or a pointer to documentation is greatly appreciated.
>>
>> Thanks, Simon
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From hh at dsgx.org  Wed Aug 20 17:52:36 2008
From: hh at dsgx.org (hh@dsgx.org)
Date: Wed Aug 20 17:51:02 2008
Subject: [mod_python] Problem Running mod_python with apache Apache/2.0.63
In-Reply-To: <88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>
References: <48AC450A.7040605@dsgx.org>
	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>
Message-ID: <48AC9224.7020709@dsgx.org>

Ya i went there but still same problem from what i think is loading 
issue of mod_python.so so insted of using it . it just dumps the text 
into the screen
:(

Graham Dumpleton escreveu:
> Try starting over, including removing:
>
>   AddHandler python-program .py
>
> at global scope in configuration and follow instructions and debugging tips in:
>
>   http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>
> Graham
>
> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>   
>> I installed mod_python using freebsd 6.x thru ports
>> /usr/ports/www/mod_python3
>> mod_python module was installed in
>> --
>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>> /usr/local/libexec/apache2/mod_python.so
>> --
>> Added the line into my httpd.conf
>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>> PythonOption mod_python.mutex_directory "/tmp"
>> AddIcon /icons/p.gif .pl .py
>> AddHandler python-program .py
>>
>> and tried to do that hello world test
>> ----
>> settup a directory entry like on tutorial
>> --
>> <Directory /home/augusto/www/trac>
>>       AddHandler mod_python .py
>>       PythonHandler mptest
>>       PythonDebug On
>> </Directory>
>> ----
>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>> /home/augusto/www/trac/test.py
>> --
>> inside ->
>> from mod_python import apache
>>
>>   def handler(req):
>>           req.content_type = 'text/plain'
>>                   req.write("Hello World!")
>>                           return apache.OK
>> ----
>>
>> the error_log from my apache to make sure that the mod_python module was
>> loaded
>> ->
>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix) mod_python/3.3.1
>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>> ---
>>
>>
>> Everything seems to be normal but insted of reading the file it just dumps
>> the text to my browser any ideias ??? Thanks alot.
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>     
>
>   

From hh at dsgx.org  Wed Aug 20 18:08:07 2008
From: hh at dsgx.org (hh@dsgx.org)
Date: Wed Aug 20 18:06:27 2008
Subject: [mod_python] Problem Running mod_python with apache Apache/2.0.63
In-Reply-To: <48AC9224.7020709@dsgx.org>
References: <48AC450A.7040605@dsgx.org>	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>
	<48AC9224.7020709@dsgx.org>
Message-ID: <48AC95C7.4080108@dsgx.org>

Ok i decided to reinstall manually now at least im getting a different 
error check this out
Cannot load /home/apache2/libexec/apache2/mod_python.so into server: 
/home/apache2/libexec/apache2/mod_python.so: Undefined symbol 
"pthread_attr_init"

hh@dsgx.org escreveu:
> Ya i went there but still same problem from what i think is loading 
> issue of mod_python.so so insted of using it . it just dumps the text 
> into the screen
> :(
>
> Graham Dumpleton escreveu:
>> Try starting over, including removing:
>>
>>   AddHandler python-program .py
>>
>> at global scope in configuration and follow instructions and 
>> debugging tips in:
>>
>>   
>> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>>
>> Graham
>>
>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>  
>>> I installed mod_python using freebsd 6.x thru ports
>>> /usr/ports/www/mod_python3
>>> mod_python module was installed in
>>> -- 
>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>> /usr/local/libexec/apache2/mod_python.so
>>> -- 
>>> Added the line into my httpd.conf
>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>> PythonOption mod_python.mutex_directory "/tmp"
>>> AddIcon /icons/p.gif .pl .py
>>> AddHandler python-program .py
>>>
>>> and tried to do that hello world test
>>> ----
>>> settup a directory entry like on tutorial
>>> -- 
>>> <Directory /home/augusto/www/trac>
>>>       AddHandler mod_python .py
>>>       PythonHandler mptest
>>>       PythonDebug On
>>> </Directory>
>>> ----
>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>> /home/augusto/www/trac/test.py
>>> -- 
>>> inside ->
>>> from mod_python import apache
>>>
>>>   def handler(req):
>>>           req.content_type = 'text/plain'
>>>                   req.write("Hello World!")
>>>                           return apache.OK
>>> ----
>>>
>>> the error_log from my apache to make sure that the mod_python module 
>>> was
>>> loaded
>>> ->
>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix) 
>>> mod_python/3.3.1
>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>> ---
>>>
>>>
>>> Everything seems to be normal but insted of reading the file it just 
>>> dumps
>>> the text to my browser any ideias ??? Thanks alot.
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>     
>>
>>   
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From bierbaum at vierfalt.com  Wed Aug 20 18:07:53 2008
From: bierbaum at vierfalt.com (Simon Bierbaum)
Date: Wed Aug 20 18:08:03 2008
Subject: [mod_python] Problem Running mod_python with apache Apache/2.0.63
In-Reply-To: <48AC9224.7020709@dsgx.org>
References: <48AC450A.7040605@dsgx.org>
	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>
	<48AC9224.7020709@dsgx.org>
Message-ID: <73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>

>>>       PythonHandler mptest
>>> [...]
>>> /home/augusto/www/trac/test.py


Shouldn't the file be named mptest.py?

Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:

> Ya i went there but still same problem from what i think is loading  
> issue of mod_python.so so insted of using it . it just dumps the  
> text into the screen
> :(
>
> Graham Dumpleton escreveu:
>> Try starting over, including removing:
>>
>>   AddHandler python-program .py
>>
>> at global scope in configuration and follow instructions and  
>> debugging tips in:
>>
>>   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
>> GettingModPythonWorking
>>
>> Graham
>>
>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>
>>> I installed mod_python using freebsd 6.x thru ports
>>> /usr/ports/www/mod_python3
>>> mod_python module was installed in
>>> --
>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>> /usr/local/libexec/apache2/mod_python.so
>>> --
>>> Added the line into my httpd.conf
>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>> PythonOption mod_python.mutex_directory "/tmp"
>>> AddIcon /icons/p.gif .pl .py
>>> AddHandler python-program .py
>>>
>>> and tried to do that hello world test
>>> ----
>>> settup a directory entry like on tutorial
>>> --
>>> <Directory /home/augusto/www/trac>
>>>       AddHandler mod_python .py
>>>       PythonHandler mptest
>>>       PythonDebug On
>>> </Directory>
>>> ----
>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>> /home/augusto/www/trac/test.py
>>> --
>>> inside ->
>>> from mod_python import apache
>>>
>>>   def handler(req):
>>>           req.content_type = 'text/plain'
>>>                   req.write("Hello World!")
>>>                           return apache.OK
>>> ----
>>>
>>> the error_log from my apache to make sure that the mod_python  
>>> module was
>>> loaded
>>> ->
>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix)  
>>> mod_python/3.3.1
>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>> ---
>>>
>>>
>>> Everything seems to be normal but insted of reading the file it  
>>> just dumps
>>> the text to my browser any ideias ??? Thanks alot.
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From hh at dsgx.org  Wed Aug 20 18:26:44 2008
From: hh at dsgx.org (hh@dsgx.org)
Date: Wed Aug 20 18:25:02 2008
Subject: [SPAM] Re: [mod_python] Problem Running mod_python with apache
	Apache/2.0.63
In-Reply-To: <73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
References: <48AC450A.7040605@dsgx.org>	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>	<48AC9224.7020709@dsgx.org>
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
Message-ID: <48AC9A24.1030201@dsgx.org>

Still the same
check the outcome
http://www.dsgx.org/trac/mptest.py
i solved the issue of the threading with including lib into apache now 
only problem is making the program run the .py
btw im running freebsd 6.2


Simon Bierbaum escreveu:
>>>>       PythonHandler mptest
>>>> [...]
>>>> /home/augusto/www/trac/test.py
>
>
> Shouldn't the file be named mptest.py?
>
> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>
>> Ya i went there but still same problem from what i think is loading 
>> issue of mod_python.so so insted of using it . it just dumps the text 
>> into the screen
>> :(
>>
>> Graham Dumpleton escreveu:
>>> Try starting over, including removing:
>>>
>>>   AddHandler python-program .py
>>>
>>> at global scope in configuration and follow instructions and 
>>> debugging tips in:
>>>
>>>   
>>> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>>>
>>> Graham
>>>
>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>
>>>> I installed mod_python using freebsd 6.x thru ports
>>>> /usr/ports/www/mod_python3
>>>> mod_python module was installed in
>>>> -- 
>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>> /usr/local/libexec/apache2/mod_python.so
>>>> -- 
>>>> Added the line into my httpd.conf
>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>> AddIcon /icons/p.gif .pl .py
>>>> AddHandler python-program .py
>>>>
>>>> and tried to do that hello world test
>>>> ----
>>>> settup a directory entry like on tutorial
>>>> -- 
>>>> <Directory /home/augusto/www/trac>
>>>>       AddHandler mod_python .py
>>>>       PythonHandler mptest
>>>>       PythonDebug On
>>>> </Directory>
>>>> ----
>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>> /home/augusto/www/trac/test.py
>>>> -- 
>>>> inside ->
>>>> from mod_python import apache
>>>>
>>>>   def handler(req):
>>>>           req.content_type = 'text/plain'
>>>>                   req.write("Hello World!")
>>>>                           return apache.OK
>>>> ----
>>>>
>>>> the error_log from my apache to make sure that the mod_python 
>>>> module was
>>>> loaded
>>>> ->
>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix) 
>>>> mod_python/3.3.1
>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>> ---
>>>>
>>>>
>>>> Everything seems to be normal but insted of reading the file it 
>>>> just dumps
>>>> the text to my browser any ideias ??? Thanks alot.
>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From hh at dsgx.org  Thu Aug 21 02:28:16 2008
From: hh at dsgx.org (hh@dsgx.org)
Date: Thu Aug 21 02:26:34 2008
Subject: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <48AC9A24.1030201@dsgx.org>
References: <48AC450A.7040605@dsgx.org>	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>	<48AC9224.7020709@dsgx.org>
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
	<48AC9A24.1030201@dsgx.org>
Message-ID: <48AD0B00.4040802@dsgx.org>

now after setting pythonpath like u guys need on freebsd im getting a 
download box when i try to execute the python script
and i also added this to the directory
        AllowOverride FileInfo

but still poping any idea ? thanks

---
hh@dsgx.org escreveu:
> Still the same
> check the outcome
> http://www.dsgx.org/trac/mptest.py
> i solved the issue of the threading with including lib into apache now 
> only problem is making the program run the .py
> btw im running freebsd 6.2
>
>
> Simon Bierbaum escreveu:
>>>>>       PythonHandler mptest
>>>>> [...]
>>>>> /home/augusto/www/trac/test.py
>>
>>
>> Shouldn't the file be named mptest.py?
>>
>> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>>
>>> Ya i went there but still same problem from what i think is loading 
>>> issue of mod_python.so so insted of using it . it just dumps the 
>>> text into the screen
>>> :(
>>>
>>> Graham Dumpleton escreveu:
>>>> Try starting over, including removing:
>>>>
>>>>   AddHandler python-program .py
>>>>
>>>> at global scope in configuration and follow instructions and 
>>>> debugging tips in:
>>>>
>>>>   
>>>> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking 
>>>>
>>>>
>>>> Graham
>>>>
>>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>>
>>>>> I installed mod_python using freebsd 6.x thru ports
>>>>> /usr/ports/www/mod_python3
>>>>> mod_python module was installed in
>>>>> -- 
>>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>>> /usr/local/libexec/apache2/mod_python.so
>>>>> -- 
>>>>> Added the line into my httpd.conf
>>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>>> AddIcon /icons/p.gif .pl .py
>>>>> AddHandler python-program .py
>>>>>
>>>>> and tried to do that hello world test
>>>>> ----
>>>>> settup a directory entry like on tutorial
>>>>> -- 
>>>>> <Directory /home/augusto/www/trac>
>>>>>       AddHandler mod_python .py
>>>>>       PythonHandler mptest
>>>>>       PythonDebug On
>>>>> </Directory>
>>>>> ----
>>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>>> /home/augusto/www/trac/test.py
>>>>> -- 
>>>>> inside ->
>>>>> from mod_python import apache
>>>>>
>>>>>   def handler(req):
>>>>>           req.content_type = 'text/plain'
>>>>>                   req.write("Hello World!")
>>>>>                           return apache.OK
>>>>> ----
>>>>>
>>>>> the error_log from my apache to make sure that the mod_python 
>>>>> module was
>>>>> loaded
>>>>> ->
>>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix) 
>>>>> mod_python/3.3.1
>>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>>> ---
>>>>>
>>>>>
>>>>> Everything seems to be normal but insted of reading the file it 
>>>>> just dumps
>>>>> the text to my browser any ideias ??? Thanks alot.
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>

From bierbaum at vierfalt.com  Thu Aug 21 04:39:53 2008
From: bierbaum at vierfalt.com (Simon Bierbaum)
Date: Thu Aug 21 04:40:07 2008
Subject: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <48AD0B00.4040802@dsgx.org>
References: <48AC450A.7040605@dsgx.org>	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>	<48AC9224.7020709@dsgx.org>
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
	<48AC9A24.1030201@dsgx.org> <48AD0B00.4040802@dsgx.org>
Message-ID: <BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>

What's in the file it lets you download? Download box sounds to me  
like a MIME type problem, i.e. your browser does not know how to  
display what it's being served by apache. req.content_type = 'text/ 
plain' is correct, though. Maybe there's another directive in your  
httpd.conf which conflicts with this? Can you look at the HTTP  
response in Firefox with the Tamper Data add-on?

Simon

Am 21.08.2008 um 08:28 schrieb hh@dsgx.org:

> now after setting pythonpath like u guys need on freebsd im getting  
> a download box when i try to execute the python script
> and i also added this to the directory
>        AllowOverride FileInfo
>
> but still poping any idea ? thanks
>
> ---
> hh@dsgx.org escreveu:
>> Still the same
>> check the outcome
>> http://www.dsgx.org/trac/mptest.py
>> i solved the issue of the threading with including lib into apache  
>> now only problem is making the program run the .py
>> btw im running freebsd 6.2
>>
>>
>> Simon Bierbaum escreveu:
>>>>>>       PythonHandler mptest
>>>>>> [...]
>>>>>> /home/augusto/www/trac/test.py
>>>
>>>
>>> Shouldn't the file be named mptest.py?
>>>
>>> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>>>
>>>> Ya i went there but still same problem from what i think is  
>>>> loading issue of mod_python.so so insted of using it . it just  
>>>> dumps the text into the screen
>>>> :(
>>>>
>>>> Graham Dumpleton escreveu:
>>>>> Try starting over, including removing:
>>>>>
>>>>>   AddHandler python-program .py
>>>>>
>>>>> at global scope in configuration and follow instructions and  
>>>>> debugging tips in:
>>>>>
>>>>>   http://www.dscpl.com.au/wiki/ModPython/Articles/ 
>>>>> GettingModPythonWorking
>>>>>
>>>>> Graham
>>>>>
>>>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>>>
>>>>>> I installed mod_python using freebsd 6.x thru ports
>>>>>> /usr/ports/www/mod_python3
>>>>>> mod_python module was installed in
>>>>>> -- 
>>>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>>>> /usr/local/libexec/apache2/mod_python.so
>>>>>> -- 
>>>>>> Added the line into my httpd.conf
>>>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>>>> AddIcon /icons/p.gif .pl .py
>>>>>> AddHandler python-program .py
>>>>>>
>>>>>> and tried to do that hello world test
>>>>>> ----
>>>>>> settup a directory entry like on tutorial
>>>>>> -- 
>>>>>> <Directory /home/augusto/www/trac>
>>>>>>       AddHandler mod_python .py
>>>>>>       PythonHandler mptest
>>>>>>       PythonDebug On
>>>>>> </Directory>
>>>>>> ----
>>>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>>>> /home/augusto/www/trac/test.py
>>>>>> -- 
>>>>>> inside ->
>>>>>> from mod_python import apache
>>>>>>
>>>>>>   def handler(req):
>>>>>>           req.content_type = 'text/plain'
>>>>>>                   req.write("Hello World!")
>>>>>>                           return apache.OK
>>>>>> ----
>>>>>>
>>>>>> the error_log from my apache to make sure that the mod_python  
>>>>>> module was
>>>>>> loaded
>>>>>> ->
>>>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix)  
>>>>>> mod_python/3.3.1
>>>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>>>> ---
>>>>>>
>>>>>>
>>>>>> Everything seems to be normal but insted of reading the file  
>>>>>> it just dumps
>>>>>> the text to my browser any ideias ??? Thanks alot.
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From scarfboy at gmail.com  Thu Aug 21 06:08:55 2008
From: scarfboy at gmail.com (Bart)
Date: Thu Aug 21 06:08:58 2008
Subject: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>
References: <48AC450A.7040605@dsgx.org>
	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>
	<48AC9224.7020709@dsgx.org>
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
	<48AC9A24.1030201@dsgx.org> <48AD0B00.4040802@dsgx.org>
	<BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>
Message-ID: <b71082d80808210308l3ab982e4pd7a03bbb9a129044@mail.gmail.com>

Check the contents of what it downloads. It might be some other
mod_python error (see also your apache error logs, it may tell you
more), or might be the python source which would probably mean that
the AddHandler/SetHandler does not affect the specific path for some
reason.

Regards,
--Bart


On Thu, Aug 21, 2008 at 10:39 AM, Simon Bierbaum <bierbaum@vierfalt.com> wrote:
> What's in the file it lets you download? Download box sounds to me like a
> MIME type problem, i.e. your browser does not know how to display what it's
> being served by apache. req.content_type = 'text/plain' is correct, though.
> Maybe there's another directive in your httpd.conf which conflicts with
> this? Can you look at the HTTP response in Firefox with the Tamper Data
> add-on?
>
> Simon
>
> Am 21.08.2008 um 08:28 schrieb hh@dsgx.org:
>
>> now after setting pythonpath like u guys need on freebsd im getting a
>> download box when i try to execute the python script
>> and i also added this to the directory
>>       AllowOverride FileInfo
>>
>> but still poping any idea ? thanks
>>
>> ---
>> hh@dsgx.org escreveu:
>>>
>>> Still the same
>>> check the outcome
>>> http://www.dsgx.org/trac/mptest.py
>>> i solved the issue of the threading with including lib into apache now
>>> only problem is making the program run the .py
>>> btw im running freebsd 6.2
>>>
>>>
>>> Simon Bierbaum escreveu:
>>>>>>>
>>>>>>>      PythonHandler mptest
>>>>>>> [...]
>>>>>>> /home/augusto/www/trac/test.py
>>>>
>>>>
>>>> Shouldn't the file be named mptest.py?
>>>>
>>>> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>>>>
>>>>> Ya i went there but still same problem from what i think is loading
>>>>> issue of mod_python.so so insted of using it . it just dumps the text into
>>>>> the screen
>>>>> :(
>>>>>
>>>>> Graham Dumpleton escreveu:
>>>>>>
>>>>>> Try starting over, including removing:
>>>>>>
>>>>>>  AddHandler python-program .py
>>>>>>
>>>>>> at global scope in configuration and follow instructions and debugging
>>>>>> tips in:
>>>>>>
>>>>>>
>>>>>>  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>>>>>>
>>>>>> Graham
>>>>>>
>>>>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>>>>
>>>>>>> I installed mod_python using freebsd 6.x thru ports
>>>>>>> /usr/ports/www/mod_python3
>>>>>>> mod_python module was installed in
>>>>>>> --
>>>>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>>>>> /usr/local/libexec/apache2/mod_python.so
>>>>>>> --
>>>>>>> Added the line into my httpd.conf
>>>>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>>>>> AddIcon /icons/p.gif .pl .py
>>>>>>> AddHandler python-program .py
>>>>>>>
>>>>>>> and tried to do that hello world test
>>>>>>> ----
>>>>>>> settup a directory entry like on tutorial
>>>>>>> --
>>>>>>> <Directory /home/augusto/www/trac>
>>>>>>>      AddHandler mod_python .py
>>>>>>>      PythonHandler mptest
>>>>>>>      PythonDebug On
>>>>>>> </Directory>
>>>>>>> ----
>>>>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>>>>> /home/augusto/www/trac/test.py
>>>>>>> --
>>>>>>> inside ->
>>>>>>> from mod_python import apache
>>>>>>>
>>>>>>>  def handler(req):
>>>>>>>          req.content_type = 'text/plain'
>>>>>>>                  req.write("Hello World!")
>>>>>>>                          return apache.OK
>>>>>>> ----
>>>>>>>
>>>>>>> the error_log from my apache to make sure that the mod_python module
>>>>>>> was
>>>>>>> loaded
>>>>>>> ->
>>>>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix)
>>>>>>> mod_python/3.3.1
>>>>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>>>>> ---
>>>>>>>
>>>>>>>
>>>>>>> Everything seems to be normal but insted of reading the file it just
>>>>>>> dumps
>>>>>>> the text to my browser any ideias ??? Thanks alot.
>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Mod_python mailing list
>>>>>>> Mod_python@modpython.org
>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>
>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From hh at dsgx.org  Thu Aug 21 10:19:34 2008
From: hh at dsgx.org (hh@dsgx.org)
Date: Thu Aug 21 10:18:03 2008
Subject: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <b71082d80808210308l3ab982e4pd7a03bbb9a129044@mail.gmail.com>
References: <48AC450A.7040605@dsgx.org>	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>	<48AC9224.7020709@dsgx.org>	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>	<48AC9A24.1030201@dsgx.org>
	<48AD0B00.4040802@dsgx.org>	<BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>
	<b71082d80808210308l3ab982e4pd7a03bbb9a129044@mail.gmail.com>
Message-ID: <48AD7976.4050303@dsgx.org>

the content of the file was downhere with the message's ill glue again here
--

from mod_python import apache

 def handler(req):
         req.content_type = 'text/plain'
                 req.write("Hello World!")
                         return apache.OK
---
its the example hello world to test if python works just scroll down to check all my confs and what i did 
---
For simon
here's the data collected
---
Host -> www.dsgx.org
User-agent -> Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16
Accept -> text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
accept-language -> pt-br,pt;q=0.8,en-us;q=0.5,en;q=0.3
accept-ending ->gzip,deflate
accept-charset -> ISO-8859-1,utf-8;q=0.7,*;q=0.7
keep-alive -> 300
connection -> keep-alive
--
And yes seems like its trying to act like a .gz file




Bart escreveu:
> Check the contents of what it downloads. It might be some other
> mod_python error (see also your apache error logs, it may tell you
> more), or might be the python source which would probably mean that
> the AddHandler/SetHandler does not affect the specific path for some
> reason.
>
> Regards,
> --Bart
>
>
> On Thu, Aug 21, 2008 at 10:39 AM, Simon Bierbaum <bierbaum@vierfalt.com> wrote:
>   
>> What's in the file it lets you download? Download box sounds to me like a
>> MIME type problem, i.e. your browser does not know how to display what it's
>> being served by apache. req.content_type = 'text/plain' is correct, though.
>> Maybe there's another directive in your httpd.conf which conflicts with
>> this? Can you look at the HTTP response in Firefox with the Tamper Data
>> add-on?
>>
>> Simon
>>
>> Am 21.08.2008 um 08:28 schrieb hh@dsgx.org:
>>
>>     
>>> now after setting pythonpath like u guys need on freebsd im getting a
>>> download box when i try to execute the python script
>>> and i also added this to the directory
>>>       AllowOverride FileInfo
>>>
>>> but still poping any idea ? thanks
>>>
>>> ---
>>> hh@dsgx.org escreveu:
>>>       
>>>> Still the same
>>>> check the outcome
>>>> http://www.dsgx.org/trac/mptest.py
>>>> i solved the issue of the threading with including lib into apache now
>>>> only problem is making the program run the .py
>>>> btw im running freebsd 6.2
>>>>
>>>>
>>>> Simon Bierbaum escreveu:
>>>>         
>>>>>>>>      PythonHandler mptest
>>>>>>>> [...]
>>>>>>>> /home/augusto/www/trac/test.py
>>>>>>>>                 
>>>>> Shouldn't the file be named mptest.py?
>>>>>
>>>>> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>>>>>
>>>>>           
>>>>>> Ya i went there but still same problem from what i think is loading
>>>>>> issue of mod_python.so so insted of using it . it just dumps the text into
>>>>>> the screen
>>>>>> :(
>>>>>>
>>>>>> Graham Dumpleton escreveu:
>>>>>>             
>>>>>>> Try starting over, including removing:
>>>>>>>
>>>>>>>  AddHandler python-program .py
>>>>>>>
>>>>>>> at global scope in configuration and follow instructions and debugging
>>>>>>> tips in:
>>>>>>>
>>>>>>>
>>>>>>>  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>>>>>>>
>>>>>>> Graham
>>>>>>>
>>>>>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>>>>>
>>>>>>>               
>>>>>>>> I installed mod_python using freebsd 6.x thru ports
>>>>>>>> /usr/ports/www/mod_python3
>>>>>>>> mod_python module was installed in
>>>>>>>> --
>>>>>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>>>>>> /usr/local/libexec/apache2/mod_python.so
>>>>>>>> --
>>>>>>>> Added the line into my httpd.conf
>>>>>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>>>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>>>>>> AddIcon /icons/p.gif .pl .py
>>>>>>>> AddHandler python-program .py
>>>>>>>>
>>>>>>>> and tried to do that hello world test
>>>>>>>> ----
>>>>>>>> settup a directory entry like on tutorial
>>>>>>>> --
>>>>>>>> <Directory /home/augusto/www/trac>
>>>>>>>>      AddHandler mod_python .py
>>>>>>>>      PythonHandler mptest
>>>>>>>>      PythonDebug On
>>>>>>>> </Directory>
>>>>>>>> ----
>>>>>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>>>>>> /home/augusto/www/trac/test.py
>>>>>>>> --
>>>>>>>> inside ->
>>>>>>>> from mod_python import apache
>>>>>>>>
>>>>>>>>  def handler(req):
>>>>>>>>          req.content_type = 'text/plain'
>>>>>>>>                  req.write("Hello World!")
>>>>>>>>                          return apache.OK
>>>>>>>> ----
>>>>>>>>
>>>>>>>> the error_log from my apache to make sure that the mod_python module
>>>>>>>> was
>>>>>>>> loaded
>>>>>>>> ->
>>>>>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix)
>>>>>>>> mod_python/3.3.1
>>>>>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>>>>>> ---
>>>>>>>>
>>>>>>>>
>>>>>>>> Everything seems to be normal but insted of reading the file it just
>>>>>>>> dumps
>>>>>>>> the text to my browser any ideias ??? Thanks alot.
>>>>>>>>
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> Mod_python mailing list
>>>>>>>> Mod_python@modpython.org
>>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>>
>>>>>>>>
>>>>>>>>                 
>>>>>>>               
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>             
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>           
>>>>         
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>       
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>     
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>   

From graham.dumpleton at gmail.com  Thu Aug 21 20:28:44 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Aug 21 20:28:48 2008
Subject: [mod_python] persistence in mod_python
In-Reply-To: <17E75A0C-D0AF-4A1E-930F-C8CCF8B56E4B@vierfalt.com>
References: <C241E4D3-C827-4CE8-8261-5D35E8F07C44@vierfalt.com>
	<88e286470808201343g201ff5a8obf1e1ffe4c7ba929@mail.gmail.com>
	<17E75A0C-D0AF-4A1E-930F-C8CCF8B56E4B@vierfalt.com>
Message-ID: <88e286470808211728m761b5c07wc001115974b2cb37@mail.gmail.com>

2008/8/21 Simon Bierbaum <bierbaum@vierfalt.com>:
> Thanks, Graham. From reading this and also
> http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken, I
> believe that two distinct requests, handled consecutively by the same
> unrecycled apache prefork child, will see the same global module objects and
> thus the same module state. Is that correct?

Yes.

> I know this data sharing method
> should not be used,

The sharing method can be used, but not for stuff that must be the
same across all processes. Thus you can still use module global data
for caching information which is effectively read only and where if
necessary you have checks to ensure it is refreshed as needed.

> but it would mean the bug I'm hunting could be caused by
> some unintentionally left over state within a module, making the second
> request work with stale data.

It could also be due to that caching mechanism not being threaded
protected properly. For example, if one request is updating the cache
will a concurrent request in same process is using data from the
cache.

Without know more detail about the problem you are seeing and example
code showing how you are using global module data, had to say.

Graham

> Am 20.08.2008 um 22:43 schrieb Graham Dumpleton:
>
>> For a start, read:
>>
>>
>>  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel
>>
>> Graham
>>
>> 2008/8/21 Simon Bierbaum <bierbaum@vierfalt.com>:
>>>
>>> Hi all,
>>>
>>> I would like to know exactly what bits in mod_python are persistent
>>> across
>>> multiple requests to the same apache process. I.e., once apache is
>>> started
>>> and mod_python is loaded, between two requests served by the same apache
>>> process and the same Python handler,
>>>
>>> - does mod_python reload modules, i.e. is module initialization code only
>>> run once during the apache process lifespan?
>>> - is there a way for modules to store objects persistently, e.g. a
>>> database
>>> connection pool?
>>> - what happens to variables defined in the handler script but not locally
>>> within the handler() function (I'm not sure whether this is what Python
>>> calls "global")?
>>>
>>> I have a bug in my application which uses mod_python, MySQLdb and the
>>> InnoDB
>>> storage engine revolving around transactions, and it's driving me
>>> mad...any
>>> help or a pointer to documentation is greatly appreciated.
>>>
>>> Thanks, Simon
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Thu Aug 21 23:46:29 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Aug 21 23:46:32 2008
Subject: [SPAM] Re: [mod_python] Problem Running mod_python with apache
	Apache/2.0.63
In-Reply-To: <48AC9A24.1030201@dsgx.org>
References: <48AC450A.7040605@dsgx.org>
	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>
	<48AC9224.7020709@dsgx.org>
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
	<48AC9A24.1030201@dsgx.org>
Message-ID: <88e286470808212046q2e253b57pe4039d4d7f33fc10@mail.gmail.com>

2008/8/21 hh@dsgx.org <hh@dsgx.org>:
> Still the same
> check the outcome
> http://www.dsgx.org/trac/mptest.py
> i solved the issue of the threading with including lib into apache now only
> problem is making the program run the .py
> btw im running freebsd 6.2

When file is downloaded, it literally shows:

from mod_python import apache

    def handler(req):
            req.content_type = 'text/plain'
                    req.write("Hello World!")
                            return apache.OK

Thus, indenting in code is all screwed up to begin with.

Graham

>
> Simon Bierbaum escreveu:
>>>>>
>>>>>      PythonHandler mptest
>>>>> [...]
>>>>> /home/augusto/www/trac/test.py
>>
>>
>> Shouldn't the file be named mptest.py?
>>
>> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>>
>>> Ya i went there but still same problem from what i think is loading issue
>>> of mod_python.so so insted of using it . it just dumps the text into the
>>> screen
>>> :(
>>>
>>> Graham Dumpleton escreveu:
>>>>
>>>> Try starting over, including removing:
>>>>
>>>>  AddHandler python-program .py
>>>>
>>>> at global scope in configuration and follow instructions and debugging
>>>> tips in:
>>>>
>>>>  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>>>>
>>>> Graham
>>>>
>>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>>
>>>>> I installed mod_python using freebsd 6.x thru ports
>>>>> /usr/ports/www/mod_python3
>>>>> mod_python module was installed in
>>>>> --
>>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>>> /usr/local/libexec/apache2/mod_python.so
>>>>> --
>>>>> Added the line into my httpd.conf
>>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>>> AddIcon /icons/p.gif .pl .py
>>>>> AddHandler python-program .py
>>>>>
>>>>> and tried to do that hello world test
>>>>> ----
>>>>> settup a directory entry like on tutorial
>>>>> --
>>>>> <Directory /home/augusto/www/trac>
>>>>>      AddHandler mod_python .py
>>>>>      PythonHandler mptest
>>>>>      PythonDebug On
>>>>> </Directory>
>>>>> ----
>>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>>> /home/augusto/www/trac/test.py
>>>>> --
>>>>> inside ->
>>>>> from mod_python import apache
>>>>>
>>>>>  def handler(req):
>>>>>          req.content_type = 'text/plain'
>>>>>                  req.write("Hello World!")
>>>>>                          return apache.OK
>>>>> ----
>>>>>
>>>>> the error_log from my apache to make sure that the mod_python module
>>>>> was
>>>>> loaded
>>>>> ->
>>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix)
>>>>> mod_python/3.3.1
>>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>>> ---
>>>>>
>>>>>
>>>>> Everything seems to be normal but insted of reading the file it just
>>>>> dumps
>>>>> the text to my browser any ideias ??? Thanks alot.
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Thu Aug 21 23:51:05 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Aug 21 23:51:08 2008
Subject: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <48AD7976.4050303@dsgx.org>
References: <48AC450A.7040605@dsgx.org>
	<88e286470808201347la985fc0sd51527468e290b2a@mail.gmail.com>
	<48AC9224.7020709@dsgx.org>
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
	<48AC9A24.1030201@dsgx.org> <48AD0B00.4040802@dsgx.org>
	<BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>
	<b71082d80808210308l3ab982e4pd7a03bbb9a129044@mail.gmail.com>
	<48AD7976.4050303@dsgx.org>
Message-ID: <88e286470808212051s328600ecm1a96577a9f82e051@mail.gmail.com>

2008/8/22 hh@dsgx.org <hh@dsgx.org>:
> the content of the file was downhere with the message's ill glue again here
> --
>
> from mod_python import apache
>
> def handler(req):
>        req.content_type = 'text/plain'
>                req.write("Hello World!")
>                        return apache.OK

Wrong indenting as I pointed out before, although that in itself will
not cause problem.

When you followed instructions in document I referred to, what
mod_python related configuration was in your main Apache configuration
and what was in your .htaccess file?

What did the Directory container in main Apache configuration for
directory where you were adding .htaccess file contain?

Were you restarting Apache between changes to main Apache configuration?

Finally, to ensure your .htaccess file was being read, literally add to it:

  MakeMeDieWith500 On

If the .htaccess file was actually being read, then you should get a
500 error back from your browser. If you don't then .htaccess file
wasn't being read after all.

Graham

> its the example hello world to test if python works just scroll down to
> check all my confs and what i did ---
> For simon
> here's the data collected
> ---
> Host -> www.dsgx.org
> User-agent -> Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.8.1.16)
> Gecko/20080702 Firefox/2.0.0.16
> Accept ->
> text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
> accept-language -> pt-br,pt;q=0.8,en-us;q=0.5,en;q=0.3
> accept-ending ->gzip,deflate
> accept-charset -> ISO-8859-1,utf-8;q=0.7,*;q=0.7
> keep-alive -> 300
> connection -> keep-alive
> --
> And yes seems like its trying to act like a .gz file
>
>
>
>
> Bart escreveu:
>>
>> Check the contents of what it downloads. It might be some other
>> mod_python error (see also your apache error logs, it may tell you
>> more), or might be the python source which would probably mean that
>> the AddHandler/SetHandler does not affect the specific path for some
>> reason.
>>
>> Regards,
>> --Bart
>>
>>
>> On Thu, Aug 21, 2008 at 10:39 AM, Simon Bierbaum <bierbaum@vierfalt.com>
>> wrote:
>>
>>>
>>> What's in the file it lets you download? Download box sounds to me like a
>>> MIME type problem, i.e. your browser does not know how to display what
>>> it's
>>> being served by apache. req.content_type = 'text/plain' is correct,
>>> though.
>>> Maybe there's another directive in your httpd.conf which conflicts with
>>> this? Can you look at the HTTP response in Firefox with the Tamper Data
>>> add-on?
>>>
>>> Simon
>>>
>>> Am 21.08.2008 um 08:28 schrieb hh@dsgx.org:
>>>
>>>
>>>>
>>>> now after setting pythonpath like u guys need on freebsd im getting a
>>>> download box when i try to execute the python script
>>>> and i also added this to the directory
>>>>      AllowOverride FileInfo
>>>>
>>>> but still poping any idea ? thanks
>>>>
>>>> ---
>>>> hh@dsgx.org escreveu:
>>>>
>>>>>
>>>>> Still the same
>>>>> check the outcome
>>>>> http://www.dsgx.org/trac/mptest.py
>>>>> i solved the issue of the threading with including lib into apache now
>>>>> only problem is making the program run the .py
>>>>> btw im running freebsd 6.2
>>>>>
>>>>>
>>>>> Simon Bierbaum escreveu:
>>>>>
>>>>>>>>>
>>>>>>>>>     PythonHandler mptest
>>>>>>>>> [...]
>>>>>>>>> /home/augusto/www/trac/test.py
>>>>>>>>>
>>>>>>
>>>>>> Shouldn't the file be named mptest.py?
>>>>>>
>>>>>> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> Ya i went there but still same problem from what i think is loading
>>>>>>> issue of mod_python.so so insted of using it . it just dumps the text
>>>>>>> into
>>>>>>> the screen
>>>>>>> :(
>>>>>>>
>>>>>>> Graham Dumpleton escreveu:
>>>>>>>
>>>>>>>>
>>>>>>>> Try starting over, including removing:
>>>>>>>>
>>>>>>>>  AddHandler python-program .py
>>>>>>>>
>>>>>>>> at global scope in configuration and follow instructions and
>>>>>>>> debugging
>>>>>>>> tips in:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>>>>>>>>
>>>>>>>> Graham
>>>>>>>>
>>>>>>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>>>>>>
>>>>>>>>
>>>>>>>>>
>>>>>>>>> I installed mod_python using freebsd 6.x thru ports
>>>>>>>>> /usr/ports/www/mod_python3
>>>>>>>>> mod_python module was installed in
>>>>>>>>> --
>>>>>>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>>>>>>> /usr/local/libexec/apache2/mod_python.so
>>>>>>>>> --
>>>>>>>>> Added the line into my httpd.conf
>>>>>>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>>>>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>>>>>>> AddIcon /icons/p.gif .pl .py
>>>>>>>>> AddHandler python-program .py
>>>>>>>>>
>>>>>>>>> and tried to do that hello world test
>>>>>>>>> ----
>>>>>>>>> settup a directory entry like on tutorial
>>>>>>>>> --
>>>>>>>>> <Directory /home/augusto/www/trac>
>>>>>>>>>     AddHandler mod_python .py
>>>>>>>>>     PythonHandler mptest
>>>>>>>>>     PythonDebug On
>>>>>>>>> </Directory>
>>>>>>>>> ----
>>>>>>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>>>>>>> /home/augusto/www/trac/test.py
>>>>>>>>> --
>>>>>>>>> inside ->
>>>>>>>>> from mod_python import apache
>>>>>>>>>
>>>>>>>>>  def handler(req):
>>>>>>>>>         req.content_type = 'text/plain'
>>>>>>>>>                 req.write("Hello World!")
>>>>>>>>>                         return apache.OK
>>>>>>>>> ----
>>>>>>>>>
>>>>>>>>> the error_log from my apache to make sure that the mod_python
>>>>>>>>> module
>>>>>>>>> was
>>>>>>>>> loaded
>>>>>>>>> ->
>>>>>>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix)
>>>>>>>>> mod_python/3.3.1
>>>>>>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>>>>>>> ---
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Everything seems to be normal but insted of reading the file it
>>>>>>>>> just
>>>>>>>>> dumps
>>>>>>>>> the text to my browser any ideias ??? Thanks alot.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> Mod_python mailing list
>>>>>>>>> Mod_python@modpython.org
>>>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> Mod_python mailing list
>>>>>>> Mod_python@modpython.org
>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From bierbaum at vierfalt.com  Fri Aug 22 04:12:38 2008
From: bierbaum at vierfalt.com (Simon Bierbaum)
Date: Fri Aug 22 04:12:52 2008
Subject: [mod_python] persistence in mod_python
In-Reply-To: <88e286470808211728m761b5c07wc001115974b2cb37@mail.gmail.com>
References: <C241E4D3-C827-4CE8-8261-5D35E8F07C44@vierfalt.com>
	<88e286470808201343g201ff5a8obf1e1ffe4c7ba929@mail.gmail.com>
	<17E75A0C-D0AF-4A1E-930F-C8CCF8B56E4B@vierfalt.com>
	<88e286470808211728m761b5c07wc001115974b2cb37@mail.gmail.com>
Message-ID: <94F06137-57F3-4681-917F-D8C4B99D6D3C@vierfalt.com>

I solved the problem in the meantime. There was an SQLAlchemy session  
object I did not clean up with close() properly after finishing up a  
request. It still lived in the second request, resulting in correct  
data being fetched from the database, but an out-of-date object still  
present in the session was returned. Thanks again for your help :-)

Simon

Am 22.08.2008 um 02:28 schrieb Graham Dumpleton:

> 2008/8/21 Simon Bierbaum <bierbaum@vierfalt.com>:
>> Thanks, Graham. From reading this and also
>> http://www.dscpl.com.au/wiki/ModPython/Articles/ 
>> ModuleImportingIsBroken, I
>> believe that two distinct requests, handled consecutively by the same
>> unrecycled apache prefork child, will see the same global module  
>> objects and
>> thus the same module state. Is that correct?
>
> Yes.
>
>> I know this data sharing method
>> should not be used,
>
> The sharing method can be used, but not for stuff that must be the
> same across all processes. Thus you can still use module global data
> for caching information which is effectively read only and where if
> necessary you have checks to ensure it is refreshed as needed.
>
>> but it would mean the bug I'm hunting could be caused by
>> some unintentionally left over state within a module, making the  
>> second
>> request work with stale data.
>
> It could also be due to that caching mechanism not being threaded
> protected properly. For example, if one request is updating the cache
> will a concurrent request in same process is using data from the
> cache.
>
> Without know more detail about the problem you are seeing and example
> code showing how you are using global module data, had to say.
>
> Graham
>
>> Am 20.08.2008 um 22:43 schrieb Graham Dumpleton:
>>
>>> For a start, read:
>>>
>>>
>>>  http://www.dscpl.com.au/wiki/ModPython/Articles/ 
>>> TheProcessInterpreterModel
>>>
>>> Graham
>>>
>>> 2008/8/21 Simon Bierbaum <bierbaum@vierfalt.com>:
>>>>
>>>> Hi all,
>>>>
>>>> I would like to know exactly what bits in mod_python are persistent
>>>> across
>>>> multiple requests to the same apache process. I.e., once apache is
>>>> started
>>>> and mod_python is loaded, between two requests served by the  
>>>> same apache
>>>> process and the same Python handler,
>>>>
>>>> - does mod_python reload modules, i.e. is module initialization  
>>>> code only
>>>> run once during the apache process lifespan?
>>>> - is there a way for modules to store objects persistently, e.g. a
>>>> database
>>>> connection pool?
>>>> - what happens to variables defined in the handler script but  
>>>> not locally
>>>> within the handler() function (I'm not sure whether this is what  
>>>> Python
>>>> calls "global")?
>>>>
>>>> I have a bug in my application which uses mod_python, MySQLdb  
>>>> and the
>>>> InnoDB
>>>> storage engine revolving around transactions, and it's driving me
>>>> mad...any
>>>> help or a pointer to documentation is greatly appreciated.
>>>>
>>>> Thanks, Simon
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From graham.dumpleton at gmail.com  Sat Aug 23 00:59:57 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Aug 23 01:00:00 2008
Subject: Fwd: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <88e286470808222159v1c47774eh4f40be1bf02252ab@mail.gmail.com>
References: <48AC450A.7040605@dsgx.org>
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>
	<48AC9A24.1030201@dsgx.org> <48AD0B00.4040802@dsgx.org>
	<BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>
	<b71082d80808210308l3ab982e4pd7a03bbb9a129044@mail.gmail.com>
	<48AD7976.4050303@dsgx.org>
	<88e286470808212051s328600ecm1a96577a9f82e051@mail.gmail.com>
	<48AEBF59.8030903@dsgx.org>
	<88e286470808222159v1c47774eh4f40be1bf02252ab@mail.gmail.com>
Message-ID: <88e286470808222159o50cd0dd4l312558c4263a92e0@mail.gmail.com>

2008/8/22 hh@dsgx.org <hh@dsgx.org>:
> ->
>
> When you followed instructions in document I referred to, what
> mod_python related configuration was in your main Apache configuration
> and what was in your .htaccess file?
>
> ---
>
> ImportError: No module named _apache

Can't see how that was relevant to the particular question I had.

> it means that you have mod_python version 3.2. If you see the Python
> exception:

If you are using mod_python 3.2, I would though strongly recommend
updating to 3.3.1.

> bout .htaccess file from what i readed was or <directory> entry or .htaccess
> file or gotta be both ?

The directory you are doing things in, must be underneath a directory
identified by <Directory> directive in main Apache configuration file.
I want to know what that <Directory> directive container in main
Apache configuration had in it. That will tell me whether any
.htaccess file in the directory would even be read. Separately, I want
to also know what was in the .htaccess file.

That directory must also somehow be mapped to for a URL. That means,
it must be under DocumentRoot, or referenced by an Alias directory.
Show the parts of your main Apache configuration that show how the
directory is even mapped to for a URL.

Graham

> ---
> and yes of course i was restarting the apache on all attempts just the doubt
> of the .htaccess file
>
> Graham Dumpleton escreveu:
>>
>> 2008/8/22 hh@dsgx.org <hh@dsgx.org>:
>>
>>>
>>> the content of the file was downhere with the message's ill glue again
>>> here
>>> --
>>>
>>> from mod_python import apache
>>>
>>> def handler(req):
>>>       req.content_type = 'text/plain'
>>>               req.write("Hello World!")
>>>                       return apache.OK
>>>
>>
>> Wrong indenting as I pointed out before, although that in itself will
>> not cause problem.
>>
>> When you followed instructions in document I referred to, what
>> mod_python related configuration was in your main Apache configuration
>> and what was in your .htaccess file?
>>
>> What did the Directory container in main Apache configuration for
>> directory where you were adding .htaccess file contain?
>>
>> Were you restarting Apache between changes to main Apache configuration?
>>
>> Finally, to ensure your .htaccess file was being read, literally add to
>> it:
>>
>>  MakeMeDieWith500 On
>>
>> If the .htaccess file was actually being read, then you should get a
>> 500 error back from your browser. If you don't then .htaccess file
>> wasn't being read after all.
>>
>> Graham
>>
>>
>>>
>>> its the example hello world to test if python works just scroll down to
>>> check all my confs and what i did ---
>>> For simon
>>> here's the data collected
>>> ---
>>> Host -> www.dsgx.org
>>> User-agent -> Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR;
>>> rv:1.8.1.16)
>>> Gecko/20080702 Firefox/2.0.0.16
>>> Accept ->
>>>
>>> text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
>>> accept-language -> pt-br,pt;q=0.8,en-us;q=0.5,en;q=0.3
>>> accept-ending ->gzip,deflate
>>> accept-charset -> ISO-8859-1,utf-8;q=0.7,*;q=0.7
>>> keep-alive -> 300
>>> connection -> keep-alive
>>> --
>>> And yes seems like its trying to act like a .gz file
>>>
>>>
>>>
>>>
>>> Bart escreveu:
>>>
>>>>
>>>> Check the contents of what it downloads. It might be some other
>>>> mod_python error (see also your apache error logs, it may tell you
>>>> more), or might be the python source which would probably mean that
>>>> the AddHandler/SetHandler does not affect the specific path for some
>>>> reason.
>>>>
>>>> Regards,
>>>> --Bart
>>>>
>>>>
>>>> On Thu, Aug 21, 2008 at 10:39 AM, Simon Bierbaum <bierbaum@vierfalt.com>
>>>> wrote:
>>>>
>>>>
>>>>>
>>>>> What's in the file it lets you download? Download box sounds to me like
>>>>> a
>>>>> MIME type problem, i.e. your browser does not know how to display what
>>>>> it's
>>>>> being served by apache. req.content_type = 'text/plain' is correct,
>>>>> though.
>>>>> Maybe there's another directive in your httpd.conf which conflicts with
>>>>> this? Can you look at the HTTP response in Firefox with the Tamper Data
>>>>> add-on?
>>>>>
>>>>> Simon
>>>>>
>>>>> Am 21.08.2008 um 08:28 schrieb hh@dsgx.org:
>>>>>
>>>>>
>>>>>
>>>>>>
>>>>>> now after setting pythonpath like u guys need on freebsd im getting a
>>>>>> download box when i try to execute the python script
>>>>>> and i also added this to the directory
>>>>>>     AllowOverride FileInfo
>>>>>>
>>>>>> but still poping any idea ? thanks
>>>>>>
>>>>>> ---
>>>>>> hh@dsgx.org escreveu:
>>>>>>
>>>>>>
>>>>>>>
>>>>>>> Still the same
>>>>>>> check the outcome
>>>>>>> http://www.dsgx.org/trac/mptest.py
>>>>>>> i solved the issue of the threading with including lib into apache
>>>>>>> now
>>>>>>> only problem is making the program run the .py
>>>>>>> btw im running freebsd 6.2
>>>>>>>
>>>>>>>
>>>>>>> Simon Bierbaum escreveu:
>>>>>>>
>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>    PythonHandler mptest
>>>>>>>>>>> [...]
>>>>>>>>>>> /home/augusto/www/trac/test.py
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>
>>>>>>>> Shouldn't the file be named mptest.py?
>>>>>>>>
>>>>>>>> Am 20.08.2008 um 23:52 schrieb hh@dsgx.org:
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>>
>>>>>>>>> Ya i went there but still same problem from what i think is loading
>>>>>>>>> issue of mod_python.so so insted of using it . it just dumps the
>>>>>>>>> text
>>>>>>>>> into
>>>>>>>>> the screen
>>>>>>>>> :(
>>>>>>>>>
>>>>>>>>> Graham Dumpleton escreveu:
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Try starting over, including removing:
>>>>>>>>>>
>>>>>>>>>>  AddHandler python-program .py
>>>>>>>>>>
>>>>>>>>>> at global scope in configuration and follow instructions and
>>>>>>>>>> debugging
>>>>>>>>>> tips in:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
>>>>>>>>>>
>>>>>>>>>> Graham
>>>>>>>>>>
>>>>>>>>>> 2008/8/21 hh@dsgx.org <hh@dsgx.org>:
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> I installed mod_python using freebsd 6.x thru ports
>>>>>>>>>>> /usr/ports/www/mod_python3
>>>>>>>>>>> mod_python module was installed in
>>>>>>>>>>> --
>>>>>>>>>>> -rwxr-xr-x  1 root  wheel  121971 Aug 20 02:18
>>>>>>>>>>> /usr/local/libexec/apache2/mod_python.so
>>>>>>>>>>> --
>>>>>>>>>>> Added the line into my httpd.conf
>>>>>>>>>>> LoadModule python_module /usr/local/libexec/apache2/mod_python.so
>>>>>>>>>>> PythonOption mod_python.mutex_directory "/tmp"
>>>>>>>>>>> AddIcon /icons/p.gif .pl .py
>>>>>>>>>>> AddHandler python-program .py
>>>>>>>>>>>
>>>>>>>>>>> and tried to do that hello world test
>>>>>>>>>>> ----
>>>>>>>>>>> settup a directory entry like on tutorial
>>>>>>>>>>> --
>>>>>>>>>>> <Directory /home/augusto/www/trac>
>>>>>>>>>>>    AddHandler mod_python .py
>>>>>>>>>>>    PythonHandler mptest
>>>>>>>>>>>    PythonDebug On
>>>>>>>>>>> </Directory>
>>>>>>>>>>> ----
>>>>>>>>>>> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
>>>>>>>>>>> /home/augusto/www/trac/test.py
>>>>>>>>>>> --
>>>>>>>>>>> inside ->
>>>>>>>>>>> from mod_python import apache
>>>>>>>>>>>
>>>>>>>>>>>  def handler(req):
>>>>>>>>>>>        req.content_type = 'text/plain'
>>>>>>>>>>>                req.write("Hello World!")
>>>>>>>>>>>                        return apache.OK
>>>>>>>>>>> ----
>>>>>>>>>>>
>>>>>>>>>>> the error_log from my apache to make sure that the mod_python
>>>>>>>>>>> module
>>>>>>>>>>> was
>>>>>>>>>>> loaded
>>>>>>>>>>> ->
>>>>>>>>>>> Wed Aug 20 13:15:25 2008] [notice] Apache/2.0.63 (Unix)
>>>>>>>>>>> mod_python/3.3.1
>>>>>>>>>>> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>>>>>>>>>>> ---
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Everything seems to be normal but insted of reading the file it
>>>>>>>>>>> just
>>>>>>>>>>> dumps
>>>>>>>>>>> the text to my browser any ideias ??? Thanks alot.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> _______________________________________________
>>>>>>>>>>> Mod_python mailing list
>>>>>>>>>>> Mod_python@modpython.org
>>>>>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> Mod_python mailing list
>>>>>>>>> Mod_python@modpython.org
>>>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> Mod_python mailing list
>>>>>>>> Mod_python@modpython.org
>>>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> Mod_python mailing list
>>>>>> Mod_python@modpython.org
>>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>
>>
>
>
From remember.pol at gmail.com  Sat Aug 23 07:42:12 2008
From: remember.pol at gmail.com (.)
Date: Sat Aug 23 07:42:18 2008
Subject: [mod_python] Absolute include?
Message-ID: <852ca5d0808230442v76f53459ya902fd2bc204182d@mail.gmail.com>

<%@ include file = "/var/www/header.psp" %>

^-- produces a blank page.

Although...

<%@ include file = "../header.psp" %>

works OK.

I know I can do:

<% PSP( req, '/var/www/header.psp' ).run() %>

but this produces a different issue, in the manner of which if I
create a python syntax error after that header include... the header
is included then apache writes a full 200-OK error HTML page right
into the rest of the page, after the existing <HTML> tag in header.psp
which then produces two XML parsing errors.

Any fix for this absolute-path blank-page issue?

Also, why are double quotes required to specify the include file
whereas single quotes won't suffice?
From graham.dumpleton at gmail.com  Sat Aug 23 08:26:47 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Aug 23 08:26:50 2008
Subject: [mod_python] Absolute include?
In-Reply-To: <852ca5d0808230442v76f53459ya902fd2bc204182d@mail.gmail.com>
References: <852ca5d0808230442v76f53459ya902fd2bc204182d@mail.gmail.com>
Message-ID: <88e286470808230526s50d66172oea3d001ca6ff9409@mail.gmail.com>

What is in /var/www/header.psp?

Have you tried putting the absolute minimal in that file, ie., just
text, no markup or PSP logic and se if just the text gets included?

Have you looked at the HTML markup returned to the browser to make
sure that some syntax error in HTML isn't result in page content
ending up inside of HTML element and thus simply not displayed by
browser?

Graham

2008/8/23 . <remember.pol@gmail.com>:
> <%@ include file = "/var/www/header.psp" %>
>
> ^-- produces a blank page.
>
> Although...
>
> <%@ include file = "../header.psp" %>
>
> works OK.
>
> I know I can do:
>
> <% PSP( req, '/var/www/header.psp' ).run() %>
>
> but this produces a different issue, in the manner of which if I
> create a python syntax error after that header include... the header
> is included then apache writes a full 200-OK error HTML page right
> into the rest of the page, after the existing <HTML> tag in header.psp
> which then produces two XML parsing errors.
>
> Any fix for this absolute-path blank-page issue?
>
> Also, why are double quotes required to specify the include file
> whereas single quotes won't suffice?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From hh at dsgx.org  Sat Aug 23 11:30:28 2008
From: hh at dsgx.org (hh@dsgx.org)
Date: Sat Aug 23 11:28:35 2008
Subject: Fwd: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <88e286470808222159o50cd0dd4l312558c4263a92e0@mail.gmail.com>
References: <48AC450A.7040605@dsgx.org>	
	<73024B57-B848-4879-8005-56BB0D90AB06@vierfalt.com>	
	<48AC9A24.1030201@dsgx.org> <48AD0B00.4040802@dsgx.org>	
	<BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>	
	<b71082d80808210308l3ab982e4pd7a03bbb9a129044@mail.gmail.com>	
	<48AD7976.4050303@dsgx.org>	
	<88e286470808212051s328600ecm1a96577a9f82e051@mail.gmail.com>	
	<48AEBF59.8030903@dsgx.org>	
	<88e286470808222159v1c47774eh4f40be1bf02252ab@mail.gmail.com>
	<88e286470808222159o50cd0dd4l312558c4263a92e0@mail.gmail.com>
Message-ID: <48B02D14.20109@dsgx.org>

The directory you are doing things in, must be underneath a directory
identified by <Directory> directive in main Apache configuration file.
I want to know what that <Directory> directive container in main
Apache configuration had in it. That will tell me whether any
.htaccess file in the directory would even be read. Separately, I want
to also know what was in the .htaccess file.

--
What i got is
PythonPath "['/usr/local/lib/python2.5', '/home/augusto/www/trac']"
in the global scope like they said to put for freebsd users
on directory i have
<Directory /home/augusto/www/trac>
        AddHandler mod_python .py
        PythonHandler mptest
        PythonDebug On
        AllowOverride FileInfo

</Directory>

--
I dont have any .htaccess file in the directory from what i read u can 
either set on httpd.conf or there.
The path to the file is
-rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31 
/home/augusto/www/trac/mptest.py
--
error_log from apache
[Sat Aug 23 12:27:42 2008] [notice] mod_python: Creating 8 session 
mutexes based on 150 max processes and 0 max threads.
[Sat Aug 23 12:27:42 2008] [notice] mod_python: using mutex_directory /tmp
[Sat Aug 23 12:27:42 2008] [notice] Apache/2.0.63 (Unix) 
mod_python/3.3.1 Python/2.5.2 PHP/4.4.9 configured -- resuming normal 
operations


Graham Dumpleton escreveu:
> 2008/8/22 hh@dsgx.org <hh@dsgx.org>:
>   
>> ->
>>
>> When you followed instructions in document I referred to, what
>> mod_python related configuration was in your main Apache configuration
>> and what was in your .htaccess file?
>>
>> ---
>>
>> ImportError: No module named _apache
>>     
>
> Can't see how that was relevant to the particular question I had.
>
>   
>> it means that you have mod_python version 3.2. If you see the Python
>> exception:
>>     
>
> If you are using mod_python 3.2, I would though strongly recommend
> updating to 3.3.1.
>
>   
>> bout .htaccess file from what i readed was or <directory> entry or .htaccess
>> file or gotta be both ?
>>     
>
> The directory you are doing things in, must be underneath a directory
> identified by <Directory> directive in main Apache configuration file.
> I want to know what that <Directory> directive container in main
> Apache configuration had in it. That will tell me whether any
> .htaccess file in the directory would even be read. Separately, I want
> to also know what was in the .htaccess file.
>
> That directory must also somehow be mapped to for a URL. That means,
> it must be under DocumentRoot, or referenced by an Alias directory.
> Show the parts of your main Apache configuration that show how the
> directory is even mapped to for a URL.
>
> Graham
>
>   

From graham.dumpleton at gmail.com  Sun Aug 24 02:19:37 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 24 02:19:39 2008
Subject: Fwd: [SPAM] Re: [mod_python] Apache/2.0.63 poping download box
In-Reply-To: <48B02D14.20109@dsgx.org>
References: <48AC450A.7040605@dsgx.org> <48AD0B00.4040802@dsgx.org>
	<BB3AF053-DDD8-4E70-8FBB-A998F9E670BF@vierfalt.com>
	<b71082d80808210308l3ab982e4pd7a03bbb9a129044@mail.gmail.com>
	<48AD7976.4050303@dsgx.org>
	<88e286470808212051s328600ecm1a96577a9f82e051@mail.gmail.com>
	<48AEBF59.8030903@dsgx.org>
	<88e286470808222159v1c47774eh4f40be1bf02252ab@mail.gmail.com>
	<88e286470808222159o50cd0dd4l312558c4263a92e0@mail.gmail.com>
	<48B02D14.20109@dsgx.org>
Message-ID: <88e286470808232319h3394400bw6fd2309f0a122b7c@mail.gmail.com>

2008/8/24 hh@dsgx.org <hh@dsgx.org>:
> The directory you are doing things in, must be underneath a directory
> identified by <Directory> directive in main Apache configuration file.
> I want to know what that <Directory> directive container in main
> Apache configuration had in it. That will tell me whether any
> .htaccess file in the directory would even be read. Separately, I want
> to also know what was in the .htaccess file.
>
> --
> What i got is
> PythonPath "['/usr/local/lib/python2.5', '/home/augusto/www/trac']"

Which is nearly always wrong as you have completely blown away the
existing value of the Python module search path. You should be adding
to existing value, not replacing it. See:

  http://www.modpython.org/live/current/doc-html/dir-other-pp.html

In particular the example:

  PythonPath "sys.path+['/mydir']"

You also didn't need to be adding '/home/augusto/www/trac' to the
module search path anyway as mod_python wll look there for you anyway.

It is almost like you should not have set PythonPath at all. The
document I referred you to does not set PythonPath.

> in the global scope like they said to put for freebsd users
> on directory i have
> <Directory /home/augusto/www/trac>
>       AddHandler mod_python .py
>       PythonHandler mptest
>       PythonDebug On
>       AllowOverride FileInfo
>
> </Directory>
>
> --
> I dont have any .htaccess file in the directory from what i read u can
> either set on httpd.conf or there.

Yes you can, but using .htaccess generally shows better and easier
what people are doing wrong.

Maybe you undo all your changes, including PythonPath and that
Directory directive contents, except for FileInfo override and perhaps
start over and follow the instructions in document I directed you to
as written.

Graham

> The path to the file is
> -rwxr-xr-x  1 wwwrun  wwwrun  216 Aug 20 01:31
> /home/augusto/www/trac/mptest.py
> --
> error_log from apache
> [Sat Aug 23 12:27:42 2008] [notice] mod_python: Creating 8 session mutexes
> based on 150 max processes and 0 max threads.
> [Sat Aug 23 12:27:42 2008] [notice] mod_python: using mutex_directory /tmp
> [Sat Aug 23 12:27:42 2008] [notice] Apache/2.0.63 (Unix) mod_python/3.3.1
> Python/2.5.2 PHP/4.4.9 configured -- resuming normal operations
>
>
> Graham Dumpleton escreveu:
>>
>> 2008/8/22 hh@dsgx.org <hh@dsgx.org>:
>>
>>>
>>> ->
>>>
>>> When you followed instructions in document I referred to, what
>>> mod_python related configuration was in your main Apache configuration
>>> and what was in your .htaccess file?
>>>
>>> ---
>>>
>>> ImportError: No module named _apache
>>>
>>
>> Can't see how that was relevant to the particular question I had.
>>
>>
>>>
>>> it means that you have mod_python version 3.2. If you see the Python
>>> exception:
>>>
>>
>> If you are using mod_python 3.2, I would though strongly recommend
>> updating to 3.3.1.
>>
>>
>>>
>>> bout .htaccess file from what i readed was or <directory> entry or
>>> .htaccess
>>> file or gotta be both ?
>>>
>>
>> The directory you are doing things in, must be underneath a directory
>> identified by <Directory> directive in main Apache configuration file.
>> I want to know what that <Directory> directive container in main
>> Apache configuration had in it. That will tell me whether any
>> .htaccess file in the directory would even be read. Separately, I want
>> to also know what was in the .htaccess file.
>>
>> That directory must also somehow be mapped to for a URL. That means,
>> it must be under DocumentRoot, or referenced by an Alias directory.
>> Show the parts of your main Apache configuration that show how the
>> directory is even mapped to for a URL.
>>
>> Graham
>>
>>
>
>
From johna at johnaherne.co.uk  Sun Aug 24 07:14:19 2008
From: johna at johnaherne.co.uk (John Aherne)
Date: Sun Aug 24 07:14:23 2008
Subject: [mod_python] cache-control and session-id
Message-ID: <48B1428B.4000502@johnaherne.co.uk>

If I use sessions, mod_python adds a header

< Cache Control no-cache="Set Cookie">

What I can't make out despite searching all over google is whether by 
default the page generated will get cached by proxies if I don't include 
a cache-control header.

I must admit I thought that without any cache-control header, proxies 
would not cache the page.

I assume that the no-cache option means the session cookie is not 
cached. That is my understanding of the info I have read.

I'm not that clued up on caching, so I'm hoping that someone can give me 
the real facts if any on this

Hoping for some enlightenment.

Regards

John Aherne
From scarfboy at gmail.com  Sun Aug 24 11:29:20 2008
From: scarfboy at gmail.com (Bart)
Date: Sun Aug 24 11:29:25 2008
Subject: [mod_python] cache-control and session-id
In-Reply-To: <48B1428B.4000502@johnaherne.co.uk>
References: <48B1428B.4000502@johnaherne.co.uk>
Message-ID: <b71082d80808240829i3d45b027m6ee59ec256f2f304@mail.gmail.com>

IIRC the way to tell proxies what is and isn't personal is the Vary header.

I also don't know how to deal with mod_python in this regard (all my
session logic is my own).

--Bart


On Sun, Aug 24, 2008 at 1:14 PM, John Aherne <johna@johnaherne.co.uk> wrote:
> If I use sessions, mod_python adds a header
>
> < Cache Control no-cache="Set Cookie">
>
> What I can't make out despite searching all over google is whether by
> default the page generated will get cached by proxies if I don't include a
> cache-control header.
>
> I must admit I thought that without any cache-control header, proxies would
> not cache the page.
>
> I assume that the no-cache option means the session cookie is not cached.
> That is my understanding of the info I have read.
>
> I'm not that clued up on caching, so I'm hoping that someone can give me the
> real facts if any on this
>
> Hoping for some enlightenment.
>
> Regards
>
> John Aherne
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dfnsonfsduifb at gmx.de  Sun Aug 24 12:16:52 2008
From: dfnsonfsduifb at gmx.de (Johannes Bauer)
Date: Sun Aug 24 12:16:59 2008
Subject: [mod_python] auth_digest and mod_python give "Bad Request"
Message-ID: <48B18974.8030405@gmx.de>

Hello list,

I'm trying to set up Apache 2.2.3 + mod_python 3.2.10 + mod_digest to 
provide a .htaccess protected area.

Apache and mod_python work fine just as they do, but as soon as I 
protect a directory via a "AuthType Digest" directive, authentication 
works but as soon as a user is successfully authenticated, I receive:

 >Bad Request
 >Your browser sent a request that this server could not understand.

The logs do not show anythign abnormal. What might cause this?

Thanks in advance,
Johannes
From rcdailey at gmail.com  Sun Aug 24 16:35:50 2008
From: rcdailey at gmail.com (Robert Dailey)
Date: Sun Aug 24 16:35:56 2008
Subject: [mod_python] Configuration issue with Apache
Message-ID: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>

Hi,

I followed all of the steps to configure mod_python for apache 2.2,
and mod_python works flawlessly. My http document root is at
/srv/http, and that is the directory I configured (through .htaccess
file) to use mod_python. I also have some PHP scripts in
/srv/http/forum (phpBB), and when I have mod_python enabled in the
document root, my forum will not work, which as I already said uses
PHP. How can I configure the .htaccess in /srv/http/forum so that my
PHP scripts work? I believe the mod_python settings are being
inherited by /srv/http/forum, when in fact they should not since this
directory needs to run PHP and not mod_python.

Thanks in advance.
From graham.dumpleton at gmail.com  Sun Aug 24 19:20:21 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 24 19:20:22 2008
Subject: [mod_python] auth_digest and mod_python give "Bad Request"
In-Reply-To: <48B18974.8030405@gmx.de>
References: <48B18974.8030405@gmx.de>
Message-ID: <88e286470808241620n3b2e4d49m4886b660e4b85c1a@mail.gmail.com>

Upgrade mod_python. Fixed in 3.3.1. See:

  http://issues.apache.org/jira/browse/MODPYTHON-47

Graham

2008/8/25 Johannes Bauer <dfnsonfsduifb@gmx.de>:
> Hello list,
>
> I'm trying to set up Apache 2.2.3 + mod_python 3.2.10 + mod_digest to
> provide a .htaccess protected area.
>
> Apache and mod_python work fine just as they do, but as soon as I protect a
> directory via a "AuthType Digest" directive, authentication works but as
> soon as a user is successfully authenticated, I receive:
>
>>Bad Request
>>Your browser sent a request that this server could not understand.
>
> The logs do not show anythign abnormal. What might cause this?
>
> Thanks in advance,
> Johannes
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Sun Aug 24 19:24:06 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 24 19:24:08 2008
Subject: [mod_python] Configuration issue with Apache
In-Reply-To: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>
References: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>
Message-ID: <88e286470808241624k5b98463as8c12e249f19cb1c5@mail.gmail.com>

Since you haven't provided what configuration you used to enable
mod_python it is hard to tell. At a guess though it sounds like you
use SetHandler in the .htaccess to enable mod_python and so have made
all requests against directory use mod_python. You should look at
using AddHandler to restrict use of mod_python to certain extensions
in URL, or instead use 'SetHandler None' in .htaccess of subdirectory
where PHP is used, presuming that PHP configured to act as output
filter.

Provide configuration and crystal ball wouldn't be necessary.

Graham

2008/8/25 Robert Dailey <rcdailey@gmail.com>:
> Hi,
>
> I followed all of the steps to configure mod_python for apache 2.2,
> and mod_python works flawlessly. My http document root is at
> /srv/http, and that is the directory I configured (through .htaccess
> file) to use mod_python. I also have some PHP scripts in
> /srv/http/forum (phpBB), and when I have mod_python enabled in the
> document root, my forum will not work, which as I already said uses
> PHP. How can I configure the .htaccess in /srv/http/forum so that my
> PHP scripts work? I believe the mod_python settings are being
> inherited by /srv/http/forum, when in fact they should not since this
> directory needs to run PHP and not mod_python.
>
> Thanks in advance.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From rcdailey at gmail.com  Sun Aug 24 20:10:00 2008
From: rcdailey at gmail.com (Robert Dailey)
Date: Sun Aug 24 20:10:04 2008
Subject: [mod_python] Configuration issue with Apache
In-Reply-To: <88e286470808241624k5b98463as8c12e249f19cb1c5@mail.gmail.com>
References: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>
	<88e286470808241624k5b98463as8c12e249f19cb1c5@mail.gmail.com>
Message-ID: <496954360808241710s2a8ddd5cua0c02c49582f2b9a@mail.gmail.com>

On Sun, Aug 24, 2008 at 6:24 PM, Graham Dumpleton
<graham.dumpleton@gmail.com> wrote:
> Since you haven't provided what configuration you used to enable
> mod_python it is hard to tell. At a guess though it sounds like you
> use SetHandler in the .htaccess to enable mod_python and so have made
> all requests against directory use mod_python. You should look at
> using AddHandler to restrict use of mod_python to certain extensions
> in URL, or instead use 'SetHandler None' in .htaccess of subdirectory
> where PHP is used, presuming that PHP configured to act as output
> filter.
>
> Provide configuration and crystal ball wouldn't be necessary.
>
> Graham

Sorry for leaving out that vital information, not sure what I was
thinking to not provide it. I was in a hurry in my initial post, so I
do apologize. Below is the configuration I'm using. I believe I used
the setup instructions on the official mod_python website, but I don't
remember for sure. Note also that by adding "php" to the list of
extensions in <Files>, this still doesn't cause the forum scripts to
work. Sometimes I'd notice that the PHP script itself would show up
when I visited the forum instead of it being executed.

Thank you again for your help. Please let me know if I've left anything out.

#------------------------------------------------------------------
Options All -Indexes

# Set mod_python options
DirectoryIndex index.py
AddHandler mod_python .py
PythonHandler mod_python.publisher
PythonDebug on

AddType text/html;qs=1.0 .py
AddType text/html;qs=0.9 .html
AddType text/plain;qs=0.8 .txt

<Files ~ "\.(gif|html|jpg|png|swf)$">
   SetHandler default-handler
</Files>
#------------------------------------------------------------------
From graham.dumpleton at gmail.com  Sun Aug 24 20:14:28 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 24 20:14:45 2008
Subject: [mod_python] Configuration issue with Apache
In-Reply-To: <496954360808241710s2a8ddd5cua0c02c49582f2b9a@mail.gmail.com>
References: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>
	<88e286470808241624k5b98463as8c12e249f19cb1c5@mail.gmail.com>
	<496954360808241710s2a8ddd5cua0c02c49582f2b9a@mail.gmail.com>
Message-ID: <88e286470808241714h51ed8133o347945efa311b305@mail.gmail.com>

What is in .htaccess of /srv/http/forum or is that directory
configured from main Apache configuration?

What happens in you don't have:

  DirectoryIndex index.py

in root .htaccess directory?

It would be inherited by subdirectory and may be interfering depending
on how subdirectory configured.

Graham

2008/8/25 Robert Dailey <rcdailey@gmail.com>:
> On Sun, Aug 24, 2008 at 6:24 PM, Graham Dumpleton
> <graham.dumpleton@gmail.com> wrote:
>> Since you haven't provided what configuration you used to enable
>> mod_python it is hard to tell. At a guess though it sounds like you
>> use SetHandler in the .htaccess to enable mod_python and so have made
>> all requests against directory use mod_python. You should look at
>> using AddHandler to restrict use of mod_python to certain extensions
>> in URL, or instead use 'SetHandler None' in .htaccess of subdirectory
>> where PHP is used, presuming that PHP configured to act as output
>> filter.
>>
>> Provide configuration and crystal ball wouldn't be necessary.
>>
>> Graham
>
> Sorry for leaving out that vital information, not sure what I was
> thinking to not provide it. I was in a hurry in my initial post, so I
> do apologize. Below is the configuration I'm using. I believe I used
> the setup instructions on the official mod_python website, but I don't
> remember for sure. Note also that by adding "php" to the list of
> extensions in <Files>, this still doesn't cause the forum scripts to
> work. Sometimes I'd notice that the PHP script itself would show up
> when I visited the forum instead of it being executed.
>
> Thank you again for your help. Please let me know if I've left anything out.
>
> #------------------------------------------------------------------
> Options All -Indexes
>
> # Set mod_python options
> DirectoryIndex index.py
> AddHandler mod_python .py
> PythonHandler mod_python.publisher
> PythonDebug on
>
> AddType text/html;qs=1.0 .py
> AddType text/html;qs=0.9 .html
> AddType text/plain;qs=0.8 .txt
>
> <Files ~ "\.(gif|html|jpg|png|swf)$">
>   SetHandler default-handler
> </Files>
> #------------------------------------------------------------------
>
From rcdailey at gmail.com  Sun Aug 24 20:43:07 2008
From: rcdailey at gmail.com (Robert Dailey)
Date: Sun Aug 24 20:43:13 2008
Subject: [mod_python] Configuration issue with Apache
In-Reply-To: <88e286470808241714h51ed8133o347945efa311b305@mail.gmail.com>
References: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>
	<88e286470808241624k5b98463as8c12e249f19cb1c5@mail.gmail.com>
	<496954360808241710s2a8ddd5cua0c02c49582f2b9a@mail.gmail.com>
	<88e286470808241714h51ed8133o347945efa311b305@mail.gmail.com>
Message-ID: <496954360808241743r7f8c37abud9b51a753f4ed0d6@mail.gmail.com>

Removing the DirectoryIndex line actually works! The forum works just
fine! However, I find this odd because in the
/srv/http/forum/.htaccess file, I would add something like:

DirectoryIndex index.php and it would not work.

Right now there is a .htaccess file in the /srv/http/forum directory,
but it was the phpBB default, and its contents are below:


<Files "config.php">
    Order Allow,Deny
    Deny from All
</Files>

<Files "common.php">
    Order Allow,Deny
    Deny from All
</Files>



On Sun, Aug 24, 2008 at 7:14 PM, Graham Dumpleton
<graham.dumpleton@gmail.com> wrote:
> What is in .htaccess of /srv/http/forum or is that directory
> configured from main Apache configuration?
>
> What happens in you don't have:
>
>  DirectoryIndex index.py
>
> in root .htaccess directory?
>
> It would be inherited by subdirectory and may be interfering depending
> on how subdirectory configured.
>
> Graham
>
> 2008/8/25 Robert Dailey <rcdailey@gmail.com>:
>> On Sun, Aug 24, 2008 at 6:24 PM, Graham Dumpleton
>> <graham.dumpleton@gmail.com> wrote:
>>> Since you haven't provided what configuration you used to enable
>>> mod_python it is hard to tell. At a guess though it sounds like you
>>> use SetHandler in the .htaccess to enable mod_python and so have made
>>> all requests against directory use mod_python. You should look at
>>> using AddHandler to restrict use of mod_python to certain extensions
>>> in URL, or instead use 'SetHandler None' in .htaccess of subdirectory
>>> where PHP is used, presuming that PHP configured to act as output
>>> filter.
>>>
>>> Provide configuration and crystal ball wouldn't be necessary.
>>>
>>> Graham
>>
>> Sorry for leaving out that vital information, not sure what I was
>> thinking to not provide it. I was in a hurry in my initial post, so I
>> do apologize. Below is the configuration I'm using. I believe I used
>> the setup instructions on the official mod_python website, but I don't
>> remember for sure. Note also that by adding "php" to the list of
>> extensions in <Files>, this still doesn't cause the forum scripts to
>> work. Sometimes I'd notice that the PHP script itself would show up
>> when I visited the forum instead of it being executed.
>>
>> Thank you again for your help. Please let me know if I've left anything out.
>>
>> #------------------------------------------------------------------
>> Options All -Indexes
>>
>> # Set mod_python options
>> DirectoryIndex index.py
>> AddHandler mod_python .py
>> PythonHandler mod_python.publisher
>> PythonDebug on
>>
>> AddType text/html;qs=1.0 .py
>> AddType text/html;qs=0.9 .html
>> AddType text/plain;qs=0.8 .txt
>>
>> <Files ~ "\.(gif|html|jpg|png|swf)$">
>>   SetHandler default-handler
>> </Files>
>> #------------------------------------------------------------------
>>
>
From graham.dumpleton at gmail.com  Sun Aug 24 20:52:40 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 24 20:52:43 2008
Subject: [mod_python] Configuration issue with Apache
In-Reply-To: <496954360808241743r7f8c37abud9b51a753f4ed0d6@mail.gmail.com>
References: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>
	<88e286470808241624k5b98463as8c12e249f19cb1c5@mail.gmail.com>
	<496954360808241710s2a8ddd5cua0c02c49582f2b9a@mail.gmail.com>
	<88e286470808241714h51ed8133o347945efa311b305@mail.gmail.com>
	<496954360808241743r7f8c37abud9b51a753f4ed0d6@mail.gmail.com>
Message-ID: <88e286470808241752w30195f88j32c819504a14cb95@mail.gmail.com>

But is the .htaccess file in forum subdirectory actually read?

To double check, add a syntax error in it. Eg, add any crap such as:

  XXX

in it. If read, should then give 500 error response as Apache will
fail in reading .htaccess file.

DirectoryIndex will only be allowed in 'Indexes' option to
AllowOverride set for directory, but if it weren't then you would get
500 error response as well. If this was the case, only way 500 would
not be returned is if .htaccess file wasn't being read in first place.

But then, if DirectoryIndex worked in root directory, should also work
for subdirectory unless 'forum' is actually a symlink off to somewhere
else. Anyway, clutching at straws about now. :-)

Maybe just try:

  DirectoryIndex index.php index.py

in root directory .htaccess to see if will allow both.

Graham

2008/8/25 Robert Dailey <rcdailey@gmail.com>:
> Removing the DirectoryIndex line actually works! The forum works just
> fine! However, I find this odd because in the
> /srv/http/forum/.htaccess file, I would add something like:
>
> DirectoryIndex index.php and it would not work.
>
> Right now there is a .htaccess file in the /srv/http/forum directory,
> but it was the phpBB default, and its contents are below:
>
>
> <Files "config.php">
>    Order Allow,Deny
>    Deny from All
> </Files>
>
> <Files "common.php">
>    Order Allow,Deny
>    Deny from All
> </Files>
>
>
>
> On Sun, Aug 24, 2008 at 7:14 PM, Graham Dumpleton
> <graham.dumpleton@gmail.com> wrote:
>> What is in .htaccess of /srv/http/forum or is that directory
>> configured from main Apache configuration?
>>
>> What happens in you don't have:
>>
>>  DirectoryIndex index.py
>>
>> in root .htaccess directory?
>>
>> It would be inherited by subdirectory and may be interfering depending
>> on how subdirectory configured.
>>
>> Graham
>>
>> 2008/8/25 Robert Dailey <rcdailey@gmail.com>:
>>> On Sun, Aug 24, 2008 at 6:24 PM, Graham Dumpleton
>>> <graham.dumpleton@gmail.com> wrote:
>>>> Since you haven't provided what configuration you used to enable
>>>> mod_python it is hard to tell. At a guess though it sounds like you
>>>> use SetHandler in the .htaccess to enable mod_python and so have made
>>>> all requests against directory use mod_python. You should look at
>>>> using AddHandler to restrict use of mod_python to certain extensions
>>>> in URL, or instead use 'SetHandler None' in .htaccess of subdirectory
>>>> where PHP is used, presuming that PHP configured to act as output
>>>> filter.
>>>>
>>>> Provide configuration and crystal ball wouldn't be necessary.
>>>>
>>>> Graham
>>>
>>> Sorry for leaving out that vital information, not sure what I was
>>> thinking to not provide it. I was in a hurry in my initial post, so I
>>> do apologize. Below is the configuration I'm using. I believe I used
>>> the setup instructions on the official mod_python website, but I don't
>>> remember for sure. Note also that by adding "php" to the list of
>>> extensions in <Files>, this still doesn't cause the forum scripts to
>>> work. Sometimes I'd notice that the PHP script itself would show up
>>> when I visited the forum instead of it being executed.
>>>
>>> Thank you again for your help. Please let me know if I've left anything out.
>>>
>>> #------------------------------------------------------------------
>>> Options All -Indexes
>>>
>>> # Set mod_python options
>>> DirectoryIndex index.py
>>> AddHandler mod_python .py
>>> PythonHandler mod_python.publisher
>>> PythonDebug on
>>>
>>> AddType text/html;qs=1.0 .py
>>> AddType text/html;qs=0.9 .html
>>> AddType text/plain;qs=0.8 .txt
>>>
>>> <Files ~ "\.(gif|html|jpg|png|swf)$">
>>>   SetHandler default-handler
>>> </Files>
>>> #------------------------------------------------------------------
>>>
>>
>
From rcdailey at gmail.com  Sun Aug 24 22:23:01 2008
From: rcdailey at gmail.com (Robert Dailey)
Date: Sun Aug 24 22:23:07 2008
Subject: [mod_python] Configuration issue with Apache
In-Reply-To: <88e286470808241752w30195f88j32c819504a14cb95@mail.gmail.com>
References: <496954360808241335j18500c40vf5b665fd317454c2@mail.gmail.com>
	<88e286470808241624k5b98463as8c12e249f19cb1c5@mail.gmail.com>
	<496954360808241710s2a8ddd5cua0c02c49582f2b9a@mail.gmail.com>
	<88e286470808241714h51ed8133o347945efa311b305@mail.gmail.com>
	<496954360808241743r7f8c37abud9b51a753f4ed0d6@mail.gmail.com>
	<88e286470808241752w30195f88j32c819504a14cb95@mail.gmail.com>
Message-ID: <496954360808241923w786efadn7c244dd667c8c01b@mail.gmail.com>

Hmm, odd. For some reason doing a DirectoryIndex index.php works
perfectly fine in /srv/http/forum now. I'm not sure why. I think
before I was additionally trying to set the PHP handler as well, since
I'm new to apache I figured it just didn't know how to handle PHP
files. I'm not really sure where the hidden "AddHandler" for php files
is, I'm still pretty new to apache. But, all works now! Thank you very
much for your help!

On Sun, Aug 24, 2008 at 7:52 PM, Graham Dumpleton
<graham.dumpleton@gmail.com> wrote:
> But is the .htaccess file in forum subdirectory actually read?
>
> To double check, add a syntax error in it. Eg, add any crap such as:
>
>  XXX
>
> in it. If read, should then give 500 error response as Apache will
> fail in reading .htaccess file.
>
> DirectoryIndex will only be allowed in 'Indexes' option to
> AllowOverride set for directory, but if it weren't then you would get
> 500 error response as well. If this was the case, only way 500 would
> not be returned is if .htaccess file wasn't being read in first place.
>
> But then, if DirectoryIndex worked in root directory, should also work
> for subdirectory unless 'forum' is actually a symlink off to somewhere
> else. Anyway, clutching at straws about now. :-)
>
> Maybe just try:
>
>  DirectoryIndex index.php index.py
>
> in root directory .htaccess to see if will allow both.
>
> Graham
>
> 2008/8/25 Robert Dailey <rcdailey@gmail.com>:
>> Removing the DirectoryIndex line actually works! The forum works just
>> fine! However, I find this odd because in the
>> /srv/http/forum/.htaccess file, I would add something like:
>>
>> DirectoryIndex index.php and it would not work.
>>
>> Right now there is a .htaccess file in the /srv/http/forum directory,
>> but it was the phpBB default, and its contents are below:
>>
>>
>> <Files "config.php">
>>    Order Allow,Deny
>>    Deny from All
>> </Files>
>>
>> <Files "common.php">
>>    Order Allow,Deny
>>    Deny from All
>> </Files>
>>
>>
>>
>> On Sun, Aug 24, 2008 at 7:14 PM, Graham Dumpleton
>> <graham.dumpleton@gmail.com> wrote:
>>> What is in .htaccess of /srv/http/forum or is that directory
>>> configured from main Apache configuration?
>>>
>>> What happens in you don't have:
>>>
>>>  DirectoryIndex index.py
>>>
>>> in root .htaccess directory?
>>>
>>> It would be inherited by subdirectory and may be interfering depending
>>> on how subdirectory configured.
>>>
>>> Graham
>>>
>>> 2008/8/25 Robert Dailey <rcdailey@gmail.com>:
>>>> On Sun, Aug 24, 2008 at 6:24 PM, Graham Dumpleton
>>>> <graham.dumpleton@gmail.com> wrote:
>>>>> Since you haven't provided what configuration you used to enable
>>>>> mod_python it is hard to tell. At a guess though it sounds like you
>>>>> use SetHandler in the .htaccess to enable mod_python and so have made
>>>>> all requests against directory use mod_python. You should look at
>>>>> using AddHandler to restrict use of mod_python to certain extensions
>>>>> in URL, or instead use 'SetHandler None' in .htaccess of subdirectory
>>>>> where PHP is used, presuming that PHP configured to act as output
>>>>> filter.
>>>>>
>>>>> Provide configuration and crystal ball wouldn't be necessary.
>>>>>
>>>>> Graham
>>>>
>>>> Sorry for leaving out that vital information, not sure what I was
>>>> thinking to not provide it. I was in a hurry in my initial post, so I
>>>> do apologize. Below is the configuration I'm using. I believe I used
>>>> the setup instructions on the official mod_python website, but I don't
>>>> remember for sure. Note also that by adding "php" to the list of
>>>> extensions in <Files>, this still doesn't cause the forum scripts to
>>>> work. Sometimes I'd notice that the PHP script itself would show up
>>>> when I visited the forum instead of it being executed.
>>>>
>>>> Thank you again for your help. Please let me know if I've left anything out.
>>>>
>>>> #------------------------------------------------------------------
>>>> Options All -Indexes
>>>>
>>>> # Set mod_python options
>>>> DirectoryIndex index.py
>>>> AddHandler mod_python .py
>>>> PythonHandler mod_python.publisher
>>>> PythonDebug on
>>>>
>>>> AddType text/html;qs=1.0 .py
>>>> AddType text/html;qs=0.9 .html
>>>> AddType text/plain;qs=0.8 .txt
>>>>
>>>> <Files ~ "\.(gif|html|jpg|png|swf)$">
>>>>   SetHandler default-handler
>>>> </Files>
>>>> #------------------------------------------------------------------
>>>>
>>>
>>
>
From tiagobecker at gmail.com  Thu Aug 28 10:48:26 2008
From: tiagobecker at gmail.com (Tiago Becker)
Date: Thu Aug 28 10:48:32 2008
Subject: [mod_python] import error
Message-ID: <9bad843d0808280748p40520e97o90c68fd6d6a884a4@mail.gmail.com>

Hello guys!

I'm new to the mod python and im trying to write a few apps but without luck
so far...

Im trying to import the module ElementTree, as follow:

import xml.etree.ElementTree as ET

and i also tried:

ET = apache.import_module('xml.etree.ElementTree')

both result in the error

MOD_PYTHON ERROR

ProcessId:      3505
Interpreter:    'python.dev.com'

ServerName:     'python.dev.com'
DocumentRoot:   '/home/becker/framework_python_web'

URI:            '/xml.py'
Location:       None
Directory:      '/'
Filename:       '/home/becker/framework_python_web/xml.py'
PathInfo:       ''

Phase:          'PythonHandler'
Handler:        'mod_python.publisher'

Traceback (most recent call last):

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 1537, in HandlerDispatch
    default=default_handler, arg=req, silent=hlist.silent)

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 1229, in _process_target
    result = _execute_target(config, req, object, arg)

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 1128, in _execute_target
    result = object(arg)

  File "/usr/local/lib/python2.5/site-packages/mod_python/publisher.py",
line 204, in handler
    module = page_cache[req]

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 1059, in __getitem__
    return import_module(req.filename)

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 296, in import_module
    log, import_path)

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 680, in import_module
    execfile(file, module.__dict__)

  File "/home/becker/framework_python_web/xml.py", line 9, in <module>
    ET = apache.import_module('xml.etree.ElementTree', autoreload=1,
log=0, path=sys.path)

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 304, in import_module
    return __import__(module_name, {}, {}, ['*'])

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 991, in load_module
    return _global_modules_cache.import_module(self.__file)

  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
line 488, in import_module
    assert(file != parent_info.file), "Import cycle in %s." % file

AssertionError: Import cycle in /home/becker/framework_python_web/xml.py.


MODULE CACHE DETAILS

Accessed:       Thu Aug 28 11:13:37 2008
Generation:     0

_mp_2aae0703a63ecf6c62424b7b7e18a76f {
  FileName:     '/home/becker/framework_python_web/xml.py'
  Instance:     1 [IMPORT]
  Generation:   0 [ERROR]
  Modified:     Thu Aug 28 11:13:32 2008
}



can somebody tell me what am i doing wrong?

Thanks a lot for your answers.

Tiago Becker
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080828/0438ad4b/attachment.html
From bierbaum at vierfalt.com  Thu Aug 28 11:52:07 2008
From: bierbaum at vierfalt.com (Simon Bierbaum)
Date: Thu Aug 28 11:52:16 2008
Subject: [mod_python] import error
In-Reply-To: <9bad843d0808280748p40520e97o90c68fd6d6a884a4@mail.gmail.com>
References: <9bad843d0808280748p40520e97o90c68fd6d6a884a4@mail.gmail.com>
Message-ID: <75A49A10-9CCB-4D03-A3A8-EF6DB7B1CDC1@vierfalt.com>

Does renaming your xml.py (and changing httpd.conf accordingly) to  
anything but 'xml.py' help?

Just a wild guess: apache.import_module first tries to load the  
modules named 'xml', looking for it at sys.path, which happens to  
include /home/becker/framework_python_web. It finds your handler  
script (named xml.py), thinks it's the 'xml' module, reads it,  
stumbles upon the very same import statement it's currently  
executing, and promptly dies and report an import cycle.

Simon

Am 28.08.2008 um 16:48 schrieb Tiago Becker:

> Hello guys!
>
> I'm new to the mod python and im trying to write a few apps but  
> without luck so far...
>
> Im trying to import the module ElementTree, as follow:
>
> import xml.etree.ElementTree as ET
>
> and i also tried:
>
> ET = apache.import_module('xml.etree.ElementTree')
>
> both result in the error
>
> MOD_PYTHON ERROR
>
> ProcessId: 3505
> Interpreter: 'python.dev.com'
>
> ServerName: 'python.dev.com'
> DocumentRoot: '/home/becker/framework_python_web'
>
> URI: '/xml.py'
> Location: None
> Directory: '/'
> Filename: '/home/becker/framework_python_web/xml.py'
> PathInfo: ''
>
> Phase: 'PythonHandler'
> Handler: 'mod_python.publisher'
>
> Traceback (most recent call last):
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 1537, in HandlerDispatch
> default=default_handler, arg=req, silent=hlist.silent)
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 1229, in _process_target
> result = _execute_target(config, req, object, arg)
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 1128, in _execute_target
> result = object(arg)
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> publisher.py", line 204, in handler
> module = page_cache[req]
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 1059, in __getitem__
> return import_module(req.filename)
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 296, in import_module
> log, import_path)
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 680, in import_module
> execfile(file, module.__dict__)
>
> File "/home/becker/framework_python_web/xml.py", line 9, in <module>
> ET = apache.import_module('xml.etree.ElementTree', autoreload=1,  
> log=0, path=sys.path)
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 304, in import_module
> return __import__(module_name, {}, {}, ['*'])
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 991, in load_module
> return _global_modules_cache.import_module(self.__file)
>
> File "/usr/local/lib/python2.5/site-packages/mod_python/ 
> importer.py", line 488, in import_module
> assert(file != parent_info.file), "Import cycle in %s." % file
>
> AssertionError: Import cycle in /home/becker/framework_python_web/ 
> xml.py.
>
>
> MODULE CACHE DETAILS
>
> Accessed: Thu Aug 28 11:13:37 2008
> Generation: 0
>
> _mp_2aae0703a63ecf6c62424b7b7e18a76f {
> FileName: '/home/becker/framework_python_web/xml.py'
> Instance: 1 [IMPORT]
> Generation: 0 [ERROR]
> Modified: Thu Aug 28 11:13:32 2008
> }
>
>
>
> can somebody tell me what am i doing wrong?
>
> Thanks a lot for your answers.
>
> Tiago Becker
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From Peter.Bleackley at rd.bbc.co.uk  Fri Aug 29 09:34:57 2008
From: Peter.Bleackley at rd.bbc.co.uk (Peter Bleackley)
Date: Fri Aug 29 09:35:17 2008
Subject: [mod_python] Database access problems
Message-ID: <7.0.1.0.2.20080829142550.02616ea0@rd.bbc.co.uk>

I'm currently setting up a web application, and am having a problem 
connecting to databases. Whenever I try to create a connection 
object, apache throws a segmentation fault and my client gets a 
zero-sized reply. The server runs Solaris 10, apache 2.2.9, 
mod_python 3.3.1, python 2.5.2. My database access is via pysqlite2 
(I've tried sqlite3, that didn't work either). The application runs 
under the publisher handler. I've checked that apache has the correct 
access permissions for the directory where the database resides, so 
that isn't the problem. Has anybody got any idea what's wrong.

Dr Peter J Bleackley
Research Engineer
BBC Research

From yam at nerd.cx  Fri Aug 29 09:58:36 2008
From: yam at nerd.cx (William Witteman)
Date: Fri Aug 29 09:58:41 2008
Subject: [mod_python] Database access problems
In-Reply-To: <7.0.1.0.2.20080829142550.02616ea0@rd.bbc.co.uk>
References: <7.0.1.0.2.20080829142550.02616ea0@rd.bbc.co.uk>
Message-ID: <20080829135836.GA27846@sillyrabbi.dyndns.org>

On Fri, Aug 29, 2008 at 02:34:57PM +0100, Peter Bleackley wrote:
> I'm currently setting up a web application, and am having a problem  
> connecting to databases. Whenever I try to create a connection object, 
> apache throws a segmentation fault and my client gets a zero-sized reply. 
> The server runs Solaris 10, apache 2.2.9, mod_python 3.3.1, python 2.5.2. 
> My database access is via pysqlite2 (I've tried sqlite3, that didn't work 
> either). The application runs under the publisher handler. I've checked 
> that apache has the correct access permissions for the directory where 
> the database resides, so that isn't the problem. Has anybody got any idea 
> what's wrong.

It is hard to say without a look at your code, but I wouldn't rule out a
permission problem quite yet.  I find that sudo is useful here, because
you can, as root, use sudo to run a command as the webserver from the
command line to see if there are permission errors that you would
otherwise not see.

When I started with sqlite and mod_python I built up my code from the
simplest examples I could muster - I start with an in-memory database,
open it, create a table, insert a value, read a value, quit.  Once I 've
got that working I use an empty file for the same procedure, which was
where I found my permission trouble (the apache logs might help in
seeing these).  Once I got that working it was easy.

Post a minimal sample of code if this doesn't help.
-- 

yours,

William

From Peter.Bleackley at rd.bbc.co.uk  Fri Aug 29 10:56:22 2008
From: Peter.Bleackley at rd.bbc.co.uk (Peter Bleackley)
Date: Fri Aug 29 10:56:34 2008
Subject: [mod_python] Database access problems
In-Reply-To: <20080829135836.GA27846@sillyrabbi.dyndns.org>
References: <7.0.1.0.2.20080829142550.02616ea0@rd.bbc.co.uk>
	<20080829135836.GA27846@sillyrabbi.dyndns.org>
Message-ID: <7.0.1.0.2.20080829155227.00f41ea8@rd.bbc.co.uk>

At 14:58 29/08/2008, William Witteman wrote:

>Post a minimal sample of code if this doesn't help.

It seems that

from pysqlite2 import dbapi2 as sqlite

demographics=sqlite.connect('/home/data/demographics.db')

is enough to cause a segmentation fault.

Dr Peter J Bleackley
Research Engineer
BBC Research 

From sdavis2 at mail.nih.gov  Fri Aug 29 11:17:06 2008
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Fri Aug 29 11:17:11 2008
Subject: [mod_python] Database access problems
In-Reply-To: <7.0.1.0.2.20080829155227.00f41ea8@rd.bbc.co.uk>
References: <7.0.1.0.2.20080829142550.02616ea0@rd.bbc.co.uk>
	<20080829135836.GA27846@sillyrabbi.dyndns.org>
	<7.0.1.0.2.20080829155227.00f41ea8@rd.bbc.co.uk>
Message-ID: <264855a00808290817r2f283adfge8dbc0db589af7a2@mail.gmail.com>

On Fri, Aug 29, 2008 at 10:56 AM, Peter Bleackley
<Peter.Bleackley@rd.bbc.co.uk> wrote:
> At 14:58 29/08/2008, William Witteman wrote:
>
>> Post a minimal sample of code if this doesn't help.
>
> It seems that
>
> from pysqlite2 import dbapi2 as sqlite
>
> demographics=sqlite.connect('/home/data/demographics.db')
>
> is enough to cause a segmentation fault.

And this works at the command line or in a separate script not under
mod_python?  (Obvious question, I know, but just to be clear.)

Sean
From koolcoy at gmail.com  Fri Aug 29 11:25:35 2008
From: koolcoy at gmail.com (Deng Yao)
Date: Fri Aug 29 11:25:41 2008
Subject: [mod_python] Does mod_python support application variable?
Message-ID: <70f4829d0808290825j6c7f7015t1934a64378943851@mail.gmail.com>

Hello everyone:

Does anyone know how to define application variables(variables that lives
are as long as the apache server, ASP officially support this kind of
variables) under mod_python? or does mod_python really support this kind of
variables?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080829/2178faca/attachment.html
From tiagobecker at gmail.com  Fri Aug 29 16:24:59 2008
From: tiagobecker at gmail.com (Tiago Becker)
Date: Fri Aug 29 16:25:04 2008
Subject: [mod_python] Server address
Message-ID: <9bad843d0808291324y6acfd3d5rfcc2af29a64d674d@mail.gmail.com>

Hello guys!

Im trying to make my own framework for mod python, because none of the
available suited my needs.

Im trying to get the server address, without the request object, but i
couldnt find in the documentation.. is that possible?


Heres why i need it: i import apache and a configuration file, but that
config need to know the server address.. as i import the files prior to the
function that handles the request, i dont have the req object...

from mod_python import apache
import sys, os

#my cfg
CFG = apache.import_module('cfg/cfg')
CFG.LOCAL_PATH = os.path.dirname( __file__ )

..other imports etc

def index(req):
    #this is ther var i would like to get outside the function
    CFG.URL = 'http://' + req.hostname


Thanks for your answers!

Tiago Becker
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080829/81db3336/attachment.html
From graham.dumpleton at gmail.com  Fri Aug 29 19:41:53 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Aug 29 19:41:56 2008
Subject: [mod_python] Does mod_python support application variable?
In-Reply-To: <70f4829d0808290825j6c7f7015t1934a64378943851@mail.gmail.com>
References: <70f4829d0808290825j6c7f7015t1934a64378943851@mail.gmail.com>
Message-ID: <88e286470808291641g2dd5d7adicba64b2db1904a22@mail.gmail.com>

2008/8/30 Deng Yao <koolcoy@gmail.com>:
> Hello everyone:
>
> Does anyone know how to define application variables(variables that lives
> are as long as the apache server, ASP officially support this kind of
> variables) under mod_python? or does mod_python really support this kind of
> variables?

Start by reading:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

Except per restrictions outlined at end of that, you can use global
data variables in normal Python modules, ie., not mod_python
reloadable code/module files.

Graham
From graham.dumpleton at gmail.com  Fri Aug 29 19:47:33 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Aug 29 19:47:35 2008
Subject: [mod_python] Server address
In-Reply-To: <9bad843d0808291324y6acfd3d5rfcc2af29a64d674d@mail.gmail.com>
References: <9bad843d0808291324y6acfd3d5rfcc2af29a64d674d@mail.gmail.com>
Message-ID: <88e286470808291647t48e92787pfefe1e9cbc716dc5@mail.gmail.com>

2008/8/30 Tiago Becker <tiagobecker@gmail.com>:
> Hello guys!
>
> Im trying to make my own framework for mod python, because none of the
> available suited my needs.
>
> Im trying to get the server address, without the request object, but i
> couldnt find in the documentation.. is that possible?
>
>
> Heres why i need it: i import apache and a configuration file, but that
> config need to know the server address.. as i import the files prior to the
> function that handles the request, i dont have the req object...
>
> from mod_python import apache
> import sys, os
>
> #my cfg
> CFG = apache.import_module('cfg/cfg')
> CFG.LOCAL_PATH = os.path.dirname( __file__ )
>
> ..other imports etc
>
> def index(req):
>     #this is ther var i would like to get outside the function
>     CFG.URL = 'http://' + req.hostname

Sounds like you are going about it the wrong way. Can you give a
better reason why you need it.

First off, the only server details you can get outside of the context
of a request are those for the main server. If requests are handled
within the context of a VirtualHost then you can't do it. For main
server details do:

  from mod_python import apache
  print apache.main_server.server_hostname

Documentation at:

  http://www.modpython.org/live/current/doc-html/pyapi-apmem.html
  http://www.modpython.org/live/current/doc-html/pyapi-mpserver.html
  http://www.modpython.org/live/current/doc-html/pyapi-mpsrv-mem.html

If you need to construct URLs for use inside of a request, you should use:

  req.construct_url('/some/path')

Documetation at:

  http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html

Graham
From graham.dumpleton at gmail.com  Fri Aug 29 19:49:41 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Aug 29 19:49:43 2008
Subject: [mod_python] Database access problems
In-Reply-To: <264855a00808290817r2f283adfge8dbc0db589af7a2@mail.gmail.com>
References: <7.0.1.0.2.20080829142550.02616ea0@rd.bbc.co.uk>
	<20080829135836.GA27846@sillyrabbi.dyndns.org>
	<7.0.1.0.2.20080829155227.00f41ea8@rd.bbc.co.uk>
	<264855a00808290817r2f283adfge8dbc0db589af7a2@mail.gmail.com>
Message-ID: <88e286470808291649x61a39d12re6b012c0ac99a140@mail.gmail.com>

2008/8/30 Sean Davis <sdavis2@mail.nih.gov>:
> On Fri, Aug 29, 2008 at 10:56 AM, Peter Bleackley
> <Peter.Bleackley@rd.bbc.co.uk> wrote:
>> At 14:58 29/08/2008, William Witteman wrote:
>>
>>> Post a minimal sample of code if this doesn't help.
>>
>> It seems that
>>
>> from pysqlite2 import dbapi2 as sqlite
>>
>> demographics=sqlite.connect('/home/data/demographics.db')
>>
>> is enough to cause a segmentation fault.
>
> And this works at the command line or in a separate script not under
> mod_python?  (Obvious question, I know, but just to be clear.)

Then it is most likely a shared library version conflict.

For a discussion about all these sorts of problems that can occur with
shared libraries, you might have a browse through:

  http://code.google.com/p/modwsgi/wiki/ApplicationIssues

This is for mod_wsgi, but lot of the issues there also apply to mod_python.

Graham
From dfnsonfsduifb at gmx.de  Fri Aug 29 19:52:36 2008
From: dfnsonfsduifb at gmx.de (Johannes Bauer)
Date: Fri Aug 29 19:52:46 2008
Subject: [mod_python] Request parameter yields 500 Internal Server Error?
Message-ID: <48B88BC4.8070409@gmx.de>

Hello list,

I'm still using Apache 2.2.3 + mod_python 3.2.10 + mod_auth (as a 
workaround to the mod_digest bug, I just *really* want to avoid having 
to recompile mod_python). Playing around I'd now like to access POST 
variables passed to a document. Currently, I had my index function 
defined as

def index():

which I changed to

def index(request):

Now I'm getting:

[Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler 
mod_python.publisher: Traceback (most recent call last):, referer: 
https://myhostname.mydomain.com/network/doc_hostlist.py
[Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler 
mod_python.publisher:   File 
"/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in 
HandlerDispatch\n    result
  = object(req), referer: 
https://myhostname.mydomain.com/network/doc_hostlist.py
[Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler 
mod_python.publisher:   File 
"/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 213, in 
handler\n    published =
  publish_object(req, object), referer: 
https://myhostname.mydomain.com/network/doc_hostlist.py
[Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler 
mod_python.publisher:   File 
"/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 412, in 
publish_object\n    retu
rn publish_object(req,util.apply_fs_data(object, req.form, req=req)), 
referer: https://myhostname.mydomain.com/network/doc_hostlist.py
[Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler 
mod_python.publisher:   File 
"/usr/lib/python2.4/site-packages/mod_python/util.py", line 439, in 
apply_fs_data\n    return obj
ect(**args), referer: 
https://myhostname.mydomain.com/network/doc_hostlist.py
[Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler 
mod_python.publisher: TypeError: index() takes exactly 1 argument (0 
given), referer: https://myhostname.mydomain.com/network/d
oc_hostlist.py

Am I doing somethign wrong?

Regards,
Johannes
From graham.dumpleton at gmail.com  Fri Aug 29 21:06:14 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Aug 29 21:06:18 2008
Subject: [mod_python] Request parameter yields 500 Internal Server Error?
In-Reply-To: <48B88BC4.8070409@gmx.de>
References: <48B88BC4.8070409@gmx.de>
Message-ID: <88e286470808291806j6848e115g2064133998ec7763@mail.gmail.com>

Yes. From memory has to be caled 'req', not 'request'.

Graham

2008/8/30 Johannes Bauer <dfnsonfsduifb@gmx.de>:
> Hello list,
>
> I'm still using Apache 2.2.3 + mod_python 3.2.10 + mod_auth (as a workaround
> to the mod_digest bug, I just *really* want to avoid having to recompile
> mod_python). Playing around I'd now like to access POST variables passed to
> a document. Currently, I had my index function defined as
>
> def index():
>
> which I changed to
>
> def index(request):
>
> Now I'm getting:
>
> [Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler
> mod_python.publisher: Traceback (most recent call last):, referer:
> https://myhostname.mydomain.com/network/doc_hostlist.py
> [Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler
> mod_python.publisher:   File
> "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in
> HandlerDispatch\n    result
>  = object(req), referer:
> https://myhostname.mydomain.com/network/doc_hostlist.py
> [Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler
> mod_python.publisher:   File
> "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 213, in
> handler\n    published =
>  publish_object(req, object), referer:
> https://myhostname.mydomain.com/network/doc_hostlist.py
> [Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler
> mod_python.publisher:   File
> "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 412, in
> publish_object\n    retu
> rn publish_object(req,util.apply_fs_data(object, req.form, req=req)),
> referer: https://myhostname.mydomain.com/network/doc_hostlist.py
> [Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler
> mod_python.publisher:   File
> "/usr/lib/python2.4/site-packages/mod_python/util.py", line 439, in
> apply_fs_data\n    return obj
> ect(**args), referer:
> https://myhostname.mydomain.com/network/doc_hostlist.py
> [Sat Aug 30 01:48:39 2008] [error] [client 192.168.1.2] PythonHandler
> mod_python.publisher: TypeError: index() takes exactly 1 argument (0 given),
> referer: https://myhostname.mydomain.com/network/d
> oc_hostlist.py
>
> Am I doing somethign wrong?
>
> Regards,
> Johannes
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dfnsonfsduifb at gmx.de  Sat Aug 30 06:25:45 2008
From: dfnsonfsduifb at gmx.de (Johannes Bauer)
Date: Sat Aug 30 06:25:55 2008
Subject: [mod_python] Request parameter yields 500 Internal Server Error?
In-Reply-To: <88e286470808291806j6848e115g2064133998ec7763@mail.gmail.com>
References: <48B88BC4.8070409@gmx.de>
	<88e286470808291806j6848e115g2064133998ec7763@mail.gmail.com>
Message-ID: <48B92029.3050504@gmx.de>

Graham Dumpleton schrieb:
> Yes. From memory has to be caled 'req', not 'request'.

Thanks a lot, now it works.

However I'm curios on why this is so - shouldn't the name of formal 
parameters of functions be tranparent and invisible to the caller?

Kind regards,
Johannes
From graham.dumpleton at gmail.com  Sat Aug 30 06:28:22 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Aug 30 06:28:24 2008
Subject: [mod_python] Request parameter yields 500 Internal Server Error?
In-Reply-To: <48B92029.3050504@gmx.de>
References: <48B88BC4.8070409@gmx.de>
	<88e286470808291806j6848e115g2064133998ec7763@mail.gmail.com>
	<48B92029.3050504@gmx.de>
Message-ID: <88e286470808300328v26776232j4928cfec48ad1ca5@mail.gmail.com>

2008/8/30 Johannes Bauer <dfnsonfsduifb@gmx.de>:
> Graham Dumpleton schrieb:
>>
>> Yes. From memory has to be caled 'req', not 'request'.
>
> Thanks a lot, now it works.
>
> However I'm curios on why this is so - shouldn't the name of formal
> parameters of functions be tranparent and invisible to the caller?

Since a publisher function can take form arguments as well, if it
doesn't have a fixed name, how are you going to know which is the
argument for the request object and which are those for form
arguments.

Graham
From graham.dumpleton at gmail.com  Sun Aug 31 02:21:30 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 31 02:21:32 2008
Subject: [mod_python] Server address
In-Reply-To: <9bad843d0808300846n8cf778ek710b3efb3e85bb92@mail.gmail.com>
References: <9bad843d0808291324y6acfd3d5rfcc2af29a64d674d@mail.gmail.com>
	<88e286470808291647t48e92787pfefe1e9cbc716dc5@mail.gmail.com>
	<9bad843d0808300846n8cf778ek710b3efb3e85bb92@mail.gmail.com>
Message-ID: <88e286470808302321w2b47cdh4fea0d24874c62a0@mail.gmail.com>

---------- Forwarded message ----------
From: Tiago Becker <tiagobecker@gmail.com>
Date: 2008/8/31
Subject: Re: [mod_python] Server address
To: Graham Dumpleton <graham.dumpleton@gmail.com>


Well, i will probably use more than one .py file... I dont want to
copy all the configuration on each file...
Besides, i work with 5 other developers, each one with their own
virtual server and having to configurate every developer enviroment
seems too much trouble to maintain..

Well, i could import my CFG file inside the function, that would make
the request available (i think :-))... i just wanted to know if there
was any other way to do it.

The fact is that im coming from php where i had a global cfg file for
all the url configurations.. All i want with that is to have a config
file that will get the urls (and others variables) needed so no one
has to worry about that.

Re-reading my post, i saw that i wasnt clear enough :-)
Thanks for you answers and your patience with my 'english' :-)


On Fri, Aug 29, 2008 at 8:47 PM, Graham Dumpleton
<graham.dumpleton@gmail.com> wrote:
>
> 2008/8/30 Tiago Becker <tiagobecker@gmail.com>:
> > Hello guys!
> >
> > Im trying to make my own framework for mod python, because none of the
> > available suited my needs.
> >
> > Im trying to get the server address, without the request object, but i
> > couldnt find in the documentation.. is that possible?
> >
> >
> > Heres why i need it: i import apache and a configuration file, but that
> > config need to know the server address.. as i import the files prior to the
> > function that handles the request, i dont have the req object...
> >
> > from mod_python import apache
> > import sys, os
> >
> > #my cfg
> > CFG = apache.import_module('cfg/cfg')
> > CFG.LOCAL_PATH = os.path.dirname( __file__ )
> >
> > ..other imports etc
> >
> > def index(req):
> >     #this is ther var i would like to get outside the function
> >     CFG.URL = 'http://' + req.hostname
>
> Sounds like you are going about it the wrong way. Can you give a
> better reason why you need it.
>
> First off, the only server details you can get outside of the context
> of a request are those for the main server. If requests are handled
> within the context of a VirtualHost then you can't do it. For main
> server details do:
>
>  from mod_python import apache
>  print apache.main_server.server_hostname
>
> Documentation at:
>
>  http://www.modpython.org/live/current/doc-html/pyapi-apmem.html
>  http://www.modpython.org/live/current/doc-html/pyapi-mpserver.html
>  http://www.modpython.org/live/current/doc-html/pyapi-mpsrv-mem.html
>
> If you need to construct URLs for use inside of a request, you should use:
>
>  req.construct_url('/some/path')
>
> Documetation at:
>
>  http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html
>
> Graham
From graham.dumpleton at gmail.com  Sun Aug 31 05:56:15 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 31 05:56:29 2008
Subject: [mod_python] Server address
In-Reply-To: <88e286470808302321w2b47cdh4fea0d24874c62a0@mail.gmail.com>
References: <9bad843d0808291324y6acfd3d5rfcc2af29a64d674d@mail.gmail.com>
	<88e286470808291647t48e92787pfefe1e9cbc716dc5@mail.gmail.com>
	<9bad843d0808300846n8cf778ek710b3efb3e85bb92@mail.gmail.com>
	<88e286470808302321w2b47cdh4fea0d24874c62a0@mail.gmail.com>
Message-ID: <88e286470808310256j720870brf6eb6c67d58331f4@mail.gmail.com>

2008/8/31 Graham Dumpleton <graham.dumpleton@gmail.com>:
> ---------- Forwarded message ----------
> From: Tiago Becker <tiagobecker@gmail.com>
> Date: 2008/8/31
> Subject: Re: [mod_python] Server address
> To: Graham Dumpleton <graham.dumpleton@gmail.com>
>
>
> Well, i will probably use more than one .py file... I dont want to
> copy all the configuration on each file...
> Besides, i work with 5 other developers, each one with their own
> virtual server and having to configurate every developer enviroment
> seems too much trouble to maintain..
>
> Well, i could import my CFG file inside the function, that would make
> the request available (i think :-))... i just wanted to know if there
> was any other way to do it.
>
> The fact is that im coming from php where i had a global cfg file for
> all the url configurations.. All i want with that is to have a config
> file that will get the urls (and others variables) needed so no one
> has to worry about that.

PHP is hardly the indicator of good practice.

In web applications I would regard it as bad practice to hard wire
into configuration files URLs for the same site which incorporate the
name of the site, which seems to be what you are doing here.

The configuration file can contain an absolute path to a page, but it
should not be a fully formed HTTP address. Any code generating a
response which requires a fully formed HTTP address should take that
absolute path and feed it into req.construct_url(). This maps to an
internal Apache function which will fill it out to be a fully formed
HTTP address with all the correct hostname and port information as
matches what the original request to the site used.

In other words, if you do things the correct way of using
req.construct_url() you don't need to hardwire your hostname into your
global configuration files.

If for some reason the code generating the response doesn't have
access to the request object, then you should be looking at Python
features such as thread locals to stash away some request information
that can then be accessed by code directly which otherwise didn't get
passed the request object. This would allow it then to get hold of the
request object and call the construct_url() function.

That all said, why do you even need a fully formed HTTP address? If
you are including that in pages for the same site then that also could
be considered bad practice. You should just use an absolute, or better
still a relative path, in any href attributes of a HTML anchor tag,
not a full formed HTTP address.

> Re-reading my post, i saw that i wasnt clear enough :-)

I knew what you wanted. I questioned it because it seemed to be a poor
way of doing it.

BTW, please use reply-all and keep followups on mailing list.

Graham

> Thanks for you answers and your patience with my 'english' :-)
>
>
> On Fri, Aug 29, 2008 at 8:47 PM, Graham Dumpleton
> <graham.dumpleton@gmail.com> wrote:
>>
>> 2008/8/30 Tiago Becker <tiagobecker@gmail.com>:
>> > Hello guys!
>> >
>> > Im trying to make my own framework for mod python, because none of the
>> > available suited my needs.
>> >
>> > Im trying to get the server address, without the request object, but i
>> > couldnt find in the documentation.. is that possible?
>> >
>> >
>> > Heres why i need it: i import apache and a configuration file, but that
>> > config need to know the server address.. as i import the files prior to the
>> > function that handles the request, i dont have the req object...
>> >
>> > from mod_python import apache
>> > import sys, os
>> >
>> > #my cfg
>> > CFG = apache.import_module('cfg/cfg')
>> > CFG.LOCAL_PATH = os.path.dirname( __file__ )
>> >
>> > ..other imports etc
>> >
>> > def index(req):
>> >     #this is ther var i would like to get outside the function
>> >     CFG.URL = 'http://' + req.hostname
>>
>> Sounds like you are going about it the wrong way. Can you give a
>> better reason why you need it.
>>
>> First off, the only server details you can get outside of the context
>> of a request are those for the main server. If requests are handled
>> within the context of a VirtualHost then you can't do it. For main
>> server details do:
>>
>>  from mod_python import apache
>>  print apache.main_server.server_hostname
>>
>> Documentation at:
>>
>>  http://www.modpython.org/live/current/doc-html/pyapi-apmem.html
>>  http://www.modpython.org/live/current/doc-html/pyapi-mpserver.html
>>  http://www.modpython.org/live/current/doc-html/pyapi-mpsrv-mem.html
>>
>> If you need to construct URLs for use inside of a request, you should use:
>>
>>  req.construct_url('/some/path')
>>
>> Documetation at:
>>
>>  http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html
>>
>> Graham
>
From tiagobecker at gmail.com  Sun Aug 31 11:39:55 2008
From: tiagobecker at gmail.com (Tiago Becker)
Date: Sun Aug 31 11:40:01 2008
Subject: [mod_python] Server address
In-Reply-To: <88e286470808310256j720870brf6eb6c67d58331f4@mail.gmail.com>
References: <9bad843d0808291324y6acfd3d5rfcc2af29a64d674d@mail.gmail.com>
	<88e286470808291647t48e92787pfefe1e9cbc716dc5@mail.gmail.com>
	<9bad843d0808300846n8cf778ek710b3efb3e85bb92@mail.gmail.com>
	<88e286470808302321w2b47cdh4fea0d24874c62a0@mail.gmail.com>
	<88e286470808310256j720870brf6eb6c67d58331f4@mail.gmail.com>
Message-ID: <9bad843d0808310839m496eb958n3fceb998ae742506@mail.gmail.com>

Oh, cool, i didnt know that req.construct_url() would do the trick, thanks a
lot!

> In web applications I would regard it as bad practice to hard wire
> into configuration files URLs for the same site which incorporate the
> name of the site, which seems to be what you are doing here.


Ok, i can take your word for that, but could you elaborate on why is it a
bad practice? Since the url would be supplied (spelling?) by apache itself.
I dont see whats wrong with that.
It's not that i would write myVar = 'http://hostname etc' on my cfg (this i
can see it would be wrong)

on php i would do myVar = $_SERVER['hostname'] or something like it

I just want to know why because I don't understand your reasons for saying
that... Maybe i coded in php for far too long :-)

Sorry about the reply stuff and thank you for you patience :-D




On Sun, Aug 31, 2008 at 6:56 AM, Graham Dumpleton <
graham.dumpleton@gmail.com> wrote:

> 2008/8/31 Graham Dumpleton <graham.dumpleton@gmail.com>:
> > ---------- Forwarded message ----------
> > From: Tiago Becker <tiagobecker@gmail.com>
> > Date: 2008/8/31
> > Subject: Re: [mod_python] Server address
> > To: Graham Dumpleton <graham.dumpleton@gmail.com>
> >
> >
> > Well, i will probably use more than one .py file... I dont want to
> > copy all the configuration on each file...
> > Besides, i work with 5 other developers, each one with their own
> > virtual server and having to configurate every developer enviroment
> > seems too much trouble to maintain..
> >
> > Well, i could import my CFG file inside the function, that would make
> > the request available (i think :-))... i just wanted to know if there
> > was any other way to do it.
> >
> > The fact is that im coming from php where i had a global cfg file for
> > all the url configurations.. All i want with that is to have a config
> > file that will get the urls (and others variables) needed so no one
> > has to worry about that.
>
> PHP is hardly the indicator of good practice.
>
> In web applications I would regard it as bad practice to hard wire
> into configuration files URLs for the same site which incorporate the
> name of the site, which seems to be what you are doing here.
>
> The configuration file can contain an absolute path to a page, but it
> should not be a fully formed HTTP address. Any code generating a
> response which requires a fully formed HTTP address should take that
> absolute path and feed it into req.construct_url(). This maps to an
> internal Apache function which will fill it out to be a fully formed
> HTTP address with all the correct hostname and port information as
> matches what the original request to the site used.
>
> In other words, if you do things the correct way of using
> req.construct_url() you don't need to hardwire your hostname into your
> global configuration files.
>
> If for some reason the code generating the response doesn't have
> access to the request object, then you should be looking at Python
> features such as thread locals to stash away some request information
> that can then be accessed by code directly which otherwise didn't get
> passed the request object. This would allow it then to get hold of the
> request object and call the construct_url() function.
>
> That all said, why do you even need a fully formed HTTP address? If
> you are including that in pages for the same site then that also could
> be considered bad practice. You should just use an absolute, or better
> still a relative path, in any href attributes of a HTML anchor tag,
> not a full formed HTTP address.
>
> > Re-reading my post, i saw that i wasnt clear enough :-)
>
> I knew what you wanted. I questioned it because it seemed to be a poor
> way of doing it.
>
> BTW, please use reply-all and keep followups on mailing list.
>
> Graham
>
> > Thanks for you answers and your patience with my 'english' :-)
> >
> >
> > On Fri, Aug 29, 2008 at 8:47 PM, Graham Dumpleton
> > <graham.dumpleton@gmail.com> wrote:
> >>
> >> 2008/8/30 Tiago Becker <tiagobecker@gmail.com>:
> >> > Hello guys!
> >> >
> >> > Im trying to make my own framework for mod python, because none of the
> >> > available suited my needs.
> >> >
> >> > Im trying to get the server address, without the request object, but i
> >> > couldnt find in the documentation.. is that possible?
> >> >
> >> >
> >> > Heres why i need it: i import apache and a configuration file, but
> that
> >> > config need to know the server address.. as i import the files prior
> to the
> >> > function that handles the request, i dont have the req object...
> >> >
> >> > from mod_python import apache
> >> > import sys, os
> >> >
> >> > #my cfg
> >> > CFG = apache.import_module('cfg/cfg')
> >> > CFG.LOCAL_PATH = os.path.dirname( __file__ )
> >> >
> >> > ..other imports etc
> >> >
> >> > def index(req):
> >> >     #this is ther var i would like to get outside the function
> >> >     CFG.URL = 'http://' + req.hostname
> >>
> >> Sounds like you are going about it the wrong way. Can you give a
> >> better reason why you need it.
> >>
> >> First off, the only server details you can get outside of the context
> >> of a request are those for the main server. If requests are handled
> >> within the context of a VirtualHost then you can't do it. For main
> >> server details do:
> >>
> >>  from mod_python import apache
> >>  print apache.main_server.server_hostname
> >>
> >> Documentation at:
> >>
> >>  http://www.modpython.org/live/current/doc-html/pyapi-apmem.html
> >>  http://www.modpython.org/live/current/doc-html/pyapi-mpserver.html
> >>  http://www.modpython.org/live/current/doc-html/pyapi-mpsrv-mem.html
> >>
> >> If you need to construct URLs for use inside of a request, you should
> use:
> >>
> >>  req.construct_url('/some/path')
> >>
> >> Documetation at:
> >>
> >>
> http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html
> >>
> >> Graham
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20080831/6b4a99e0/attachment.html
From graham.dumpleton at gmail.com  Sun Aug 31 19:32:39 2008
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Aug 31 19:32:42 2008
Subject: [mod_python] Server address
In-Reply-To: <9bad843d0808310839m496eb958n3fceb998ae742506@mail.gmail.com>
References: <9bad843d0808291324y6acfd3d5rfcc2af29a64d674d@mail.gmail.com>
	<88e286470808291647t48e92787pfefe1e9cbc716dc5@mail.gmail.com>
	<9bad843d0808300846n8cf778ek710b3efb3e85bb92@mail.gmail.com>
	<88e286470808302321w2b47cdh4fea0d24874c62a0@mail.gmail.com>
	<88e286470808310256j720870brf6eb6c67d58331f4@mail.gmail.com>
	<9bad843d0808310839m496eb958n3fceb998ae742506@mail.gmail.com>
Message-ID: <88e286470808311632i3895a740td454f55e0f48fb89@mail.gmail.com>

2008/9/1 Tiago Becker <tiagobecker@gmail.com>:
> Oh, cool, i didnt know that req.construct_url() would do the trick, thanks a
> lot!
>
>> In web applications I would regard it as bad practice to hard wire
>> into configuration files URLs for the same site which incorporate the
>> name of the site, which seems to be what you are doing here.
>
>
> Ok, i can take your word for that, but could you elaborate on why is it a
> bad practice? Since the url would be supplied (spelling?) by apache itself.
> I dont see whats wrong with that.

If you are doing it for all HTML href attributes of link elements for
inter site links it is bad because it prohibits ability to save down a
related set of pages from a site and then browse them offline. If the
links are just path relative, then this would work.

That is just one example. Not knowing exactly how you are using them,
hard to comment more.

Graham

> It's not that i would write myVar = 'http://hostname etc' on my cfg (this i
> can see it would be wrong)
>
> on php i would do myVar = $_SERVER['hostname'] or something like it
>
> I just want to know why because I don't understand your reasons for saying
> that... Maybe i coded in php for far too long :-)
>
> Sorry about the reply stuff and thank you for you patience :-D
>
>
>
>
> On Sun, Aug 31, 2008 at 6:56 AM, Graham Dumpleton
> <graham.dumpleton@gmail.com> wrote:
>>
>> 2008/8/31 Graham Dumpleton <graham.dumpleton@gmail.com>:
>> > ---------- Forwarded message ----------
>> > From: Tiago Becker <tiagobecker@gmail.com>
>> > Date: 2008/8/31
>> > Subject: Re: [mod_python] Server address
>> > To: Graham Dumpleton <graham.dumpleton@gmail.com>
>> >
>> >
>> > Well, i will probably use more than one .py file... I dont want to
>> > copy all the configuration on each file...
>> > Besides, i work with 5 other developers, each one with their own
>> > virtual server and having to configurate every developer enviroment
>> > seems too much trouble to maintain..
>> >
>> > Well, i could import my CFG file inside the function, that would make
>> > the request available (i think :-))... i just wanted to know if there
>> > was any other way to do it.
>> >
>> > The fact is that im coming from php where i had a global cfg file for
>> > all the url configurations.. All i want with that is to have a config
>> > file that will get the urls (and others variables) needed so no one
>> > has to worry about that.
>>
>> PHP is hardly the indicator of good practice.
>>
>> In web applications I would regard it as bad practice to hard wire
>> into configuration files URLs for the same site which incorporate the
>> name of the site, which seems to be what you are doing here.
>>
>> The configuration file can contain an absolute path to a page, but it
>> should not be a fully formed HTTP address. Any code generating a
>> response which requires a fully formed HTTP address should take that
>> absolute path and feed it into req.construct_url(). This maps to an
>> internal Apache function which will fill it out to be a fully formed
>> HTTP address with all the correct hostname and port information as
>> matches what the original request to the site used.
>>
>> In other words, if you do things the correct way of using
>> req.construct_url() you don't need to hardwire your hostname into your
>> global configuration files.
>>
>> If for some reason the code generating the response doesn't have
>> access to the request object, then you should be looking at Python
>> features such as thread locals to stash away some request information
>> that can then be accessed by code directly which otherwise didn't get
>> passed the request object. This would allow it then to get hold of the
>> request object and call the construct_url() function.
>>
>> That all said, why do you even need a fully formed HTTP address? If
>> you are including that in pages for the same site then that also could
>> be considered bad practice. You should just use an absolute, or better
>> still a relative path, in any href attributes of a HTML anchor tag,
>> not a full formed HTTP address.
>>
>> > Re-reading my post, i saw that i wasnt clear enough :-)
>>
>> I knew what you wanted. I questioned it because it seemed to be a poor
>> way of doing it.
>>
>> BTW, please use reply-all and keep followups on mailing list.
>>
>> Graham
>>
>> > Thanks for you answers and your patience with my 'english' :-)
>> >
>> >
>> > On Fri, Aug 29, 2008 at 8:47 PM, Graham Dumpleton
>> > <graham.dumpleton@gmail.com> wrote:
>> >>
>> >> 2008/8/30 Tiago Becker <tiagobecker@gmail.com>:
>> >> > Hello guys!
>> >> >
>> >> > Im trying to make my own framework for mod python, because none of
>> >> > the
>> >> > available suited my needs.
>> >> >
>> >> > Im trying to get the server address, without the request object, but
>> >> > i
>> >> > couldnt find in the documentation.. is that possible?
>> >> >
>> >> >
>> >> > Heres why i need it: i import apache and a configuration file, but
>> >> > that
>> >> > config need to know the server address.. as i import the files prior
>> >> > to the
>> >> > function that handles the request, i dont have the req object...
>> >> >
>> >> > from mod_python import apache
>> >> > import sys, os
>> >> >
>> >> > #my cfg
>> >> > CFG = apache.import_module('cfg/cfg')
>> >> > CFG.LOCAL_PATH = os.path.dirname( __file__ )
>> >> >
>> >> > ..other imports etc
>> >> >
>> >> > def index(req):
>> >> >     #this is ther var i would like to get outside the function
>> >> >     CFG.URL = 'http://' + req.hostname
>> >>
>> >> Sounds like you are going about it the wrong way. Can you give a
>> >> better reason why you need it.
>> >>
>> >> First off, the only server details you can get outside of the context
>> >> of a request are those for the main server. If requests are handled
>> >> within the context of a VirtualHost then you can't do it. For main
>> >> server details do:
>> >>
>> >>  from mod_python import apache
>> >>  print apache.main_server.server_hostname
>> >>
>> >> Documentation at:
>> >>
>> >>  http://www.modpython.org/live/current/doc-html/pyapi-apmem.html
>> >>  http://www.modpython.org/live/current/doc-html/pyapi-mpserver.html
>> >>  http://www.modpython.org/live/current/doc-html/pyapi-mpsrv-mem.html
>> >>
>> >> If you need to construct URLs for use inside of a request, you should
>> >> use:
>> >>
>> >>  req.construct_url('/some/path')
>> >>
>> >> Documetation at:
>> >>
>> >>
>> >>  http://www.modpython.org/live/current/doc-html/pyapi-mprequest-meth.html
>> >>
>> >> Graham
>> >
>
>
