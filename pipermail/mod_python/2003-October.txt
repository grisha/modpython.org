From perry.tew at cibavision.novartis.com  Wed Oct  1 16:03:20 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:45 2004
Subject: [mod_python] writing to a file from mod_python
Message-ID: <OF32955EC0.F1936B00-ON85256DB2.006DFC43-85256DB2.006E2B3B@EU.novartis.net>

For security reasons, it's common to run the apache instance under a 
restricted user.  Many times this is 'noboby'. 
I only assumed 'nobody' based on past problems by other people.    At any 
rate, it seems you've solved your problem.

-Perry







hi Perry,

Yes !  Thank you.  I assumed if the relative paths were ok in a command
line execution they must be ok in mod python.  By the way, how do you
figure the apache instance is running under 'nobody' ?  In the httpd.conf
there is clearly a section where the user and group are defined by
default as 'apache'.

On Tue, 30 Sep 2003 perry.tew@cibavision.novartis.com wrote:

> Hello.
> Is your apache instance running under the 'nobody' user, or something
> similar?    If so, chmoding the somefile.txt to 'apache' will not help.
> I would advise caution in writing out files to relative paths.  Given 
that
> mod_python is an extension of Apache, would not a relative file
> such as 'somefile.txt' be written to the ServerRoot or bin directory?
> (I've never tried it).
> Here's something to try:  change the file from 'somefile.txt' to
> '/tmp/somefile.txt'. Almost every user id can write to the /tmp 
directory.
>
>
> Hope this helps,
> Perry Tew
>
>
>
>
>
> <tpc@csua.berkeley.edu>
> Sent by: mod_python-bounces@modpython.org
> 09/30/2003 04:37 PM
>
>
>         To:     <mod_python@modpython.org>
>         cc:
>         Subject:        [mod_python] writing to a file from mod_python
>
>
>
> hello all I have the following script that ran fine from the command 
line:
>
> <code>
> #!/usr/bin/env python
>
> #string1 = "hello world!"
>
> def writeFile(string1):
>         open('somefile.txt', 'w').write(string1)
>
> ## writeFile(string1)
> </code>
>
> but as soon as I ported it to mod python I got the following:
>
> <paste>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
335,
> in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
>
>   File "/var/www/html/python/testing.py", line 7, in writeFile
>
> IOError: [Errno 13] Permission denied: 'somefile.txt'
> </paste>
>
> I searched the web for the error message, chmod'ed 777 somefile.txt, and
> even chown'ed and chgrp'ed to user and group apache, all to no avail. Is
> there a way to write to a file from mod python ?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>




From perry.tew at cibavision.novartis.com  Wed Oct  1 16:39:32 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] 
 I can access mod_ssl cert env vars using PerlAuthenHandler, but howto do
 it with a PythonAuthenHandler?
Message-ID: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>

Hello,
   I'm trying to port a mod_perl handler to mod_python. 
The mod_perl handler was based off an Authentication Handler discussed 
in Chapter 6 of the "Writing Apache Modules in Perl and C" book by 
MacEachern 
(page 326 for those who have the book).   At any rate, concerning how to 
access 
environment variables set by mod_ssl, the book states correctly the 
following:

"""
The handler then issues a subrequest and retrieves the value of 
SSL_CLIENT_DN from 
the subrequest's environment table.  The subrequest is necessary because 
the parsed 
certificate fields aren't placed into the table until the fixup stage, 
which ordinarily occurs 
after the authorization phase.
"""


So, my perl code looks like this:
##########################################
my $subr = $r->lookup_uri($r->uri);
my $env = $subr->subprocess_env;
my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
my $dn = $env->{'SSL_CLIENT_S_DN'};
##########################################




I'm trying to do the same thing in python with this:
############################################
        req.internal_redirect(req.unparsed_uri)
        req.add_common_vars()
        for k, v in req.subprocess_env.items():
                msg = k + "=" + v
                apache.log_error( msg , apache.APLOG_NOTICE )

############################################

However, the SSL vars aren't in the env table when my handler dumps the 
items to the log. 
The handler is being called and it dumps a lot of
env variables to the log, but no SSL vars.  The PythonAuthenHandler that 
contains the code above 
protects the printenv script, which I call to test the handlers.  The 
printenv script is displaying all
of the SSL env vars correctly, so I know I have the mod_ssl directives 
correct.

Does anyone see an error in what I'm doing wrong (or need to do)?  This is 
my first attempt as writing an AuthenHandler
and I would greatly appreciate any insight.

Thanks,
Perry Tew
From perry.tew at cibavision.novartis.com  Wed Oct  1 17:47:02 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] 
	how to set the REMOTE_USER variable from a PythonAuthenHandler?
Message-ID: <OFDDDC9352.A22255E8-ON85256DB2.00779BAF-85256DB2.007797B1@EU.novartis.net>

Hello.

In a PerlAuthenHandler, I can do the following to set the REMOTE_USER 
variable
(which is necessary since I'm using SSL Client Certs for authentication 
and not Basic Auth, and no, I'm not using FakeBasicAuth)

Perl:
##########################################
package Apache::AuthClientCert;
# file: Apache/AuthClientCert;

use strict;
use Apache::Constants qw(:common);

sub handler{
        my $r = shift;
        return OK unless $r->is_main;

        my $subr = $r->lookup_uri($r->uri);
        my $env = $subr->subprocess_env;

        my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
        my $username = $cn;

        ### KEY LINE BELOW ###
        $r->connection->user( $username );
        ### KEY LINE ABOVE ###

        return OK;
}
1;
__END__
#############################################


If you notice in the perl script, I found that the REMOTE_USER variable is 

not populated, even
if I return OK, unless I explicitly set it using $r->connection->user( 
$username ). 

I go about it this
way because we all have digital certs in my company and it's an easy way 
to handle security.
However, even if I use SSL for the front door, my backend processes ( some 

java ) want to know
who is coming through the door. The only way to pass that information to a 

j2ee server like weblogic 
is via the REMOTE_USER variable.

So, my question is, how do I set this value using mod_python?  The docs 
state that req.user is read only.
I see the example PythonAuthenHandler (spam and eggs) uses 
req.connection.user, but I can't find any 
docs on that (anyone have a url)?

Does anyone know how to set the user so that the REMOTE_USER var is 
correctly populated?

Thanks for your time,
Perry

From alexiev at activesolutions.bg  Thu Oct  2 13:57:15 2003
From: alexiev at activesolutions.bg (Nikolay Alexiev)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] PublisherHandler
Message-ID: <200310021357.15162.alexiev@activesolutions.bg>

I'm using PublisherHandler for my project. This is my  .htaccess file

    AddHandler python-program .py
    SetHandler python-program
    PythonHandler mod_python.publisher
    PythonDebug On

But now I can't load pictures from this folder and from its subfolder. Can I 
do something or the only way is to move images in a folder that is a level 
above?
From schnieper at semafor.ch  Thu Oct  2 16:07:55 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] Problems with configure mod_python
Message-ID: <3F7C313B.8000300@semafor.ch>

Hi all

I tried to install the mod_python (www.modpython.org) for Apache Webserver.
By configure with
./configure --with-apxs /usr/sbin/apxs2-prefork
i get this error:

configure: error: yes not found or not executable

SuSE Linux 8.2
Apache 2.0
mod_python 3.0.1

Thanks in advance
Lukas

From grisha at modpython.org  Thu Oct  2 12:13:32 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031002121240.L57929@onyx.ispol.com>


Hmmm... I find it hard to believe that SuSE doesn't have the yes(1)
command. Are you sure your installation isn't corrupt somehow?

Grisha

On Thu, 2 Oct 2003, Lukas Schnieper wrote:

> Hi all
>
> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
>
> configure: error: yes not found or not executable
>
> SuSE Linux 8.2
> Apache 2.0
> mod_python 3.0.1
>
> Thanks in advance
> Lukas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Thu Oct  2 14:39:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
In-Reply-To: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
References: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
Message-ID: <20031002143438.X57929@onyx.ispol.com>



On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha
From grisha at modpython.org  Thu Oct  2 14:43:20 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <200310021357.15162.alexiev@activesolutions.bg>
References: <200310021357.15162.alexiev@activesolutions.bg>
Message-ID: <20031002144016.X57929@onyx.ispol.com>



On Thu, 2 Oct 2003, Nikolay Alexiev wrote:

> I'm using PublisherHandler for my project. This is my  .htaccess file
>
>     AddHandler python-program .py
>     SetHandler python-program

You don't need both AddHandler and SetHandler, SetHandler alone will cover
every type of file.

>     PythonHandler mod_python.publisher
>     PythonDebug On
>
> But now I can't load pictures from this folder and from its subfolder. Can I
> do something or the only way is to move images in a folder that is a level
> above?

You can create a subdirectory and add "SetHandler None" which reverses
previous SetHandler's:

http://httpd.apache.org/docs-2.0/mod/core.html#sethandler

HTH,

Grisha
From mikeklein at sbcglobal.net  Thu Oct  2 12:36:56 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002144016.X57929@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <3F7C7E58.20109@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
>  
>
>>I'm using PublisherHandler for my project. This is my  .htaccess file
>>
>>    AddHandler python-program .py
>>    SetHandler python-program
>>    
>>
>
>You don't need both AddHandler and SetHandler, SetHandler alone will cover
>every type of file.
>
>  
>
>>    PythonHandler mod_python.publisher
>>    PythonDebug On
>>
>>But now I can't load pictures from this folder and from its subfolder. Can I
>>do something or the only way is to move images in a folder that is a level
>>above?
>>    
>>
>
>You can create a subdirectory and add "SetHandler None" which reverses
>previous SetHandler's:
>
>http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
>HTH,
>
>Grisha
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>
Shouldn't he just remove the SetHandler line?


mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/bc38a4e3/attachment.htm
From grisha at modpython.org  Thu Oct  2 16:01:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <3F7C7E58.20109@sbcglobal.net>
References: <200310021357.15162.alexiev@activesolutions.bg>
 <20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
Message-ID: <20031002155847.O60460@onyx.ispol.com>



On Thu, 2 Oct 2003, Mike Klein wrote:

> Shouldn't he just remove the SetHandler line?

That would do it too, but I'm guessing he specifically neede SetHandler.

This would allow to use SetHandler-style URL's, such as
http://myhost.com/guestbook/adduser, (as opposed to
http://myhost.com/guestbook.py/adduser), and at the same time be able to
server other files, e.g. http://myhost.com/images/blah.gif

Grisha
From perry.tew at cibavision.novartis.com  Thu Oct  2 16:09:00 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
Message-ID: <OF8FB48689.25434CDF-ON85256DB3.006CC438-85256DB3.006EB017@EU.novartis.net>

Grisha,
   Thanks for the tip!  I'll try that tonight. 

About the infinite recursion issue  ... yeah, I struggled with that a lot. 
 The perl code I had did the following:

 return OK unless $r->is_main;

to prevent this loop.  I had something in my handler like this:

if req.prev:
        return apache.OK

but I took it out and the handler didn't seem to hang.  Quite strange. 
It's obvious I have some more
learning to do.  I'll continue experimenting.


If I may ask you a different question along the lines of authentication. I 
have need to cache roles and acls for urls
in order to prevent hitting a database for every request.   I need a way 
to cache these values and have each of
my child processes access them.

1.  I'm using the "worker" MPM.  Is that acceptable for use with 
mod_python?  I haven't had a problem yet with it.
2. Is there a preferred way of sharing data among the different children? 
dbm? berkley db? IPC?   I don't mind 
file based persistance, but I'm ignorant of the fastest and safest way to 
cache this data.  Any thoughts would be
appreciated.

Something else I thought of was that I guess I could jack up the number of 
threads per child and limit the number of
children to something small.  Would that not keep the number of caches 
down to 3 or 4 ( 1 per child )?

I'm really enjoying mod_python.  Thanks for writing it.
Perry Tew







On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha



From mikeklein at sbcglobal.net  Thu Oct  2 13:08:10 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C85AA.70907@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Mike Klein wrote:
>
>  
>
>>Shouldn't he just remove the SetHandler line?
>>    
>>
>
>That would do it too, but I'm guessing he specifically neede SetHandler.
>
>This would allow to use SetHandler-style URL's, such as
>http://myhost.com/guestbook/adduser, (as opposed to
>http://myhost.com/guestbook.py/adduser), and at the same time be able to
>server other files, e.g. http://myhost.com/images/blah.gif
>
>Grisha
>
>  
>
Caveat: I am a python 101 user...

My first mistake was assuming a php/jsp/shtml model for delivering 
pages. It took me a few tweaks to getting things in python similar to 
this model...where I can littler python files willy-nilly. I didn't see 
enough of his httpsd.conf file to understand what he wanted to do.

I just know his mistake 'smelled' similar to the first mistake I 
made...using SetHandler and then not being able to access anything else 
on my site!

For laughs...this is what I have (at a root/top level) in my httpsd.conf 
for Apache to deliver python pages from anywhere under my docroot:
------------------------
#
# Stuff for mod_python
#
AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On
------------------------

Other than having to specify functions within my py files (this is 
ok...standard), it gives me the 'document' under docroot model that I 
was looking for...

cheers,

mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/e07a9a26/attachment.htm
From scott_list at mischko.com  Thu Oct  2 14:14:13 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] 
	Python Apache authentication module ala Perl's Apache::AuthDBI?
Message-ID: <200310021414.13041.scott_list@mischko.com>

Is there a similar creature for Python that allows me to authenticate Apache 
users against a database (Postgres)?

I'm trying to do all my new projects in Python and get away from Perl.  This 
is a piece I need in my toolbox.

TIA,
Scott
From cs1spw at bath.ac.uk  Thu Oct  2 22:16:29 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C95AD.2020604@bath.ac.uk>

Gregory (Grisha) Trubetskoy wrote:
> That would do it too, but I'm guessing he specifically neede SetHandler.
> 
> This would allow to use SetHandler-style URL's, such as
> http://myhost.com/guestbook/adduser, (as opposed to
> http://myhost.com/guestbook.py/adduser), and at the same time be able to
> server other files, e.g. http://myhost.com/images/blah.gif

As a newcomer to mod_python I'm still trying to work out the best 
practise for developing applications under it. I'm using SetHandler 
style URLs, but does anyone have any good tips on how to lay out an 
overall mod_python application?

Cheers,

Simon

From cl at scriptall.com  Thu Oct  2 18:45:18 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] req.form question
Message-ID: <1065134717.1102.58.camel@px101>

A point of curiosity.  Please don't hurt me.

Some time ago, I was able to refer to a form field value in this manner:

req.form["fieldname"]

Now, I have to refer to the value in this fashion:

req.form["fieldname"][0]

Granted, it's been a while since I've done any new scripting with
mod_python.  I've searched the mailing list and looked at the docs for
both v2 and v3 but can't find any reference to a change in the form
attribute of the request object.

When did the keys for req.form change to a list?

Thanks,
-Chuck

From michael at dynamine.net  Thu Oct  2 17:27:26 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] req.form question
In-Reply-To: <1065134717.1102.58.camel@px101>
References: <1065134717.1102.58.camel@px101>
Message-ID: <3F7CC26E.1000206@dynamine.net>

It didn't; whether the value is an object or a list depends on the form 
submission contents.

 From http://www.python.org/doc/2.2.3/lib/node297.html:

If the submitted form data contains more than one field with the same 
name, the object retrieved by "form[key]" is not a FieldStorage or 
MiniFieldStorage instance but a list of such instances. Similarly, in 
this situation, "form.getvalue(key)" would return a list of strings. If 
you expect this possibility (when your HTML form contains multiple 
fields with the same name), use the isinstance() built-in function to 
determine whether you have a single instance or a list of instances. For 
example, this code concatenates any number of username fields, separated 
by commas:


value = form.getvalue("username", "")
if isinstance(value, list):
     # Multiple username fields specified
     usernames = ",".join(value)
else:
     # Single or no username field specified
     usernames = value

--Michael


Chuck Lima wrote:

> A point of curiosity.  Please don't hurt me.
> 
> Some time ago, I was able to refer to a form field value in this manner:
> 
> req.form["fieldname"]
> 
> Now, I have to refer to the value in this fashion:
> 
> req.form["fieldname"][0]
> 
> Granted, it's been a while since I've done any new scripting with
> mod_python.  I've searched the mailing list and looked at the docs for
> both v2 and v3 but can't find any reference to a change in the form
> attribute of the request object.
> 
> When did the keys for req.form change to a list?
> 
> Thanks,
> -Chuck
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From gdamjan at mail.net.mk  Fri Oct  3 03:07:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031003010704.GB25894@legolas.on.net.mk>

> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
> 
> configure: error: yes not found or not executable


./configure --with-apxs=/usr/sbin/apxs2-prefork
                      ^^^

Hey did this appear on news?
The question (and the answer) are very familiar to me...


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cl at scriptall.com  Thu Oct  2 21:17:41 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] req.form question
In-Reply-To: <3F7CC26E.1000206@dynamine.net>
References: <1065134717.1102.58.camel@px101> <3F7CC26E.1000206@dynamine.net>
Message-ID: <1065143861.1102.26.camel@px101>

Yep, sure enough, I had multiple input fields named the same thing.  

I'm looping over a bunch of records and creating a form for each one on
a single page and forgot to put a </form> at the end on each iteration!!

Thank you.

-Chuck


On Thu, 2003-10-02 at 20:27, Michael S. Fischer wrote:
> It didn't; whether the value is an object or a list depends on the form 
> submission contents.
> 
>  From http://www.python.org/doc/2.2.3/lib/node297.html:
> 
> If the submitted form data contains more than one field with the same 
> name, the object retrieved by "form[key]" is not a FieldStorage or 
> MiniFieldStorage instance but a list of such instances. Similarly, in 
> this situation, "form.getvalue(key)" would return a list of strings. If 
> you expect this possibility (when your HTML form contains multiple 
> fields with the same name), use the isinstance() built-in function to 
> determine whether you have a single instance or a list of instances. For 
> example, this code concatenates any number of username fields, separated 
> by commas:
> 
> 
> value = form.getvalue("username", "")
> if isinstance(value, list):
>      # Multiple username fields specified
>      usernames = ",".join(value)
> else:
>      # Single or no username field specified
>      usernames = value
> 
> --Michael
> 
> 
> Chuck Lima wrote:
> 
> > A point of curiosity.  Please don't hurt me.
> > 
> > Some time ago, I was able to refer to a form field value in this manner:
> > 
> > req.form["fieldname"]
> > 
> > Now, I have to refer to the value in this fashion:
> > 
> > req.form["fieldname"][0]
> > 
> > Granted, it's been a while since I've done any new scripting with
> > mod_python.  I've searched the mailing list and looked at the docs for
> > both v2 and v3 but can't find any reference to a change in the form
> > attribute of the request object.
> > 
> > When did the keys for req.form change to a list?
> > 
> > Thanks,
> > -Chuck
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> 

From gnb at itga.com.au  Fri Oct  3 11:26:12 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] req.form question 
In-Reply-To: Your message of Thu, 02 Oct 2003 18:45:18 -0400.
Message-ID: <200310030126.LAA21892@lightning.itga.com.au>

IN addition to the list vs singleton issue Michael mentioned, it seems that in 
mod_python 2.7 the list is a list of strings, but in mod_python 3, the list is 
a list of FieldStorage objects.  

Greg.

From robert at leftwich.info  Fri Oct  3 11:04:46 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] mod_python mysteriously stopped working under Windows
Message-ID: <MPG.19e775ef801061dd989684@news.gmane.org>

I have this bizarre problem that is driving me insane. I had a working 
mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python 
3.1.0a - all vanilla). I needed to combine 2 projects so I set out to 
create a new project directory structure and ran out of disk space on 
the c-drive while doing something unrelated to mod_python/apache/etc. I 
cleaned up a few directories (again unrelated) and ever since then I 
cannot get even the simplest mod_python setup to work. I've tried 
uninstalling/reinstalling everything, even reverting to python 
2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including 
explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
\site-packages;C:\Python23\lib (among other combinations) I get an error 
in the log file saying "[error] make_obcallback: could not import 
mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does 
not work at all, no messages anywhere - it is as if it is totally 
ignored. Note also that straight python cgi (e.g. pyblosxom) is working 
fine. At the moment I'm using the httpd.conf settings and mptest.py 
straight from the Testing section of the manual.

Can anyone shed light on this problem ?

Robert


From tpc at csua.berkeley.edu  Thu Oct  2 19:41:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] mod_python mysteriously stopped working under
 Windows
In-Reply-To: <MPG.19e775ef801061dd989684@news.gmane.org>
Message-ID: <20031002193058.S79163-100000@localhost.name>


oh wow this problem again.  I am going to repost an email I sent to one
Kevin Douglas who kept hitting this same brick wall:

<paste>
Date: Mon, 9 Jun 2003 14:37:28 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: kevin douglas <fitnah55@hotmail.com>
Cc: mod_python@modpython.org
Subject: RE: [mod_python] need working fix for 'import site' aka
    'ImportError'aka'make_obcallback' error


> -----
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> [Sun Jun 08 00:06:50 2003] [error] make_obcallback: could not import
> mod_python.apache.
> -----
>


I had that exact same problem, although I did not spend as much time
trying to fix it as you apparently have.  I ended up just reinstalling
mod_python.  It works fine now, though I don't understand why it broke in
the first place.
</paste>

if you search the archives you can find out how he resolved the problem,
which he ultimately did, as he recounted to us:

<paste>
Date: Mon, 9 Jun 2003 23:38:36 -0400
From: kevin douglas <fitnah55@hotmail.com>
To: mod_python@modpython.org
Subject: [mod_python]  working fix [FAQ: 'import site' failed; use -v for
traceback]


as stated in the make_obcallback FAQ entry, this is a sys.path
problem...

the main problem (i believe) is that the path that is available at
runtime is not always the same as it was with the previous run of
apache

with a linux distro that requires python as part of the base install
(even
with a minimal install) - the python in /usr is going to supercede
the python in /usr/local even if the path properly includes /usr/lib
and site-packages/mod_python is pointed to properly

what you should do is axe all the python rpm's that you can
(python-base is required for libuser which is required for passwd)
and then take the file list from python-base and manually delete it
(/usr/lib/python2.2 and /usr/bin/python)

this will free up the proper /usr/local/lib/python2.2 to be first in
line in the path

what's confusing is that you link to /usr/local/bin/python2.2 explicitly
to compile mod_python, but it still ends up with /usr/lib/python2.2
as the primary lib source... and even if you get the paths added as the
other FAQ entry states - you're still going to be running the old
site.py from /usr/lib...

and to make matters even worse sometimes it randomly decides to work
even before you axe the default distro install..

:o



kd
</paste>

As you can see something to do with paths and multiple Python versions
installed is the reason you are having trouble.

On Fri, 3 Oct 2003, Robert Leftwich wrote:

> I have this bizarre problem that is driving me insane. I had a working
> mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python
> 3.1.0a - all vanilla). I needed to combine 2 projects so I set out to
> create a new project directory structure and ran out of disk space on
> the c-drive while doing something unrelated to mod_python/apache/etc. I
> cleaned up a few directories (again unrelated) and ever since then I
> cannot get even the simplest mod_python setup to work. I've tried
> uninstalling/reinstalling everything, even reverting to python
> 2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including
> explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
> \site-packages;C:\Python23\lib (among other combinations) I get an error
> in the log file saying "[error] make_obcallback: could not import
> mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does
> not work at all, no messages anywhere - it is as if it is totally
> ignored. Note also that straight python cgi (e.g. pyblosxom) is working
> fine. At the moment I'm using the httpd.conf settings and mptest.py
> straight from the Testing section of the manual.
>
> Can anyone shed light on this problem ?
>
> Robert
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



From grisha at apache.org  Thu Oct  2 22:48:59 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] O'Reilly Onlamp.com
In-Reply-To: <3F7C3169.8040608@semafor.ch>
References: <3F7C3169.8040608@semafor.ch>
Message-ID: <20031002224613.S61437@onyx.ispol.com>


http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html

:-)

Grisha
From robert at leftwich.info  Fri Oct  3 13:30:55 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] 
	Re: mod_python mysteriously stopped working under   Windows
References: <MPG.19e775ef801061dd989684@news.gmane.org>
	<20031002193058.S79163-100000@localhost.name>
Message-ID: <MPG.19e7987abd327c0c989685@news.gmane.org>

In article <20031002193058.S79163-100000@localhost.name>, 
tpc@csua.berkeley.edu says...
> 
> oh wow this problem again.  I am going to repost an email I sent to one
> Kevin Douglas who kept hitting this same brick wall:
>  snip....

> As you can see something to do with paths and multiple Python versions
> installed is the reason you are having trouble.

That's what I thought, so I had completely uninstalled/deleted every 
python version/lib I could find and then re-installed only v2.3 - but no 
joy (and I also tried explicitly setting PYTHONHOME before running the 
Apache exe).

Robert


From neel at mediapulse.com  Fri Oct  3 09:40:58 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] RE: O'Reilly Onlamp.com
Message-ID: <C0FC22C08B82074A88B50061764157776B9749@johnson.mediapulse.net>

Woot!  And the author seems so in trouch with mod_python too!

Mike

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@apache.org] 
> Sent: Thursday, October 02, 2003 10:49 PM
> To: python-dev@httpd.apache.org; mod_python@modpython.org
> Subject: O'Reilly Onlamp.com
> 
> 
> 
> http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html
> 
> :-)
> 
> Grisha
> 

From alexiev at activesolutions.bg  Fri Oct  3 16:57:22 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] PublisherHandler
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <001b01c389b6$44c76fc0$0a01010a@dev1>

It's work fine under linux, but still have the same problem under windows.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "Nikolay Alexiev" <alexiev@activesolutions.bg>
Cc: <mod_python@modpython.org>
Sent: Thursday, October 02, 2003 9:43 PM
Subject: Re: [mod_python] PublisherHandler


>
>
> On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
> > I'm using PublisherHandler for my project. This is my  .htaccess file
> >
> >     AddHandler python-program .py
> >     SetHandler python-program
>
> You don't need both AddHandler and SetHandler, SetHandler alone will cover
> every type of file.
>
> >     PythonHandler mod_python.publisher
> >     PythonDebug On
> >
> > But now I can't load pictures from this folder and from its subfolder.
Can I
> > do something or the only way is to move images in a folder that is a
level
> > above?
>
> You can create a subdirectory and add "SetHandler None" which reverses
> previous SetHandler's:
>
> http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
> HTH,
>
> Grisha

From mark at s-wit.net  Fri Oct  3 14:31:11 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] Hello newbie problems 
Message-ID: <004b01c389dc$85014810$6a1fa8c0@ocfl061>

Hello,
I installed python 2.3.1 (or whatever is the latest from the site)
I d/l the mod_python 3.03
I have apache 2.0.47 running.
I did as per each README for each isntall.
Apache is running. python seemed to install ok. There were no errors.
I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
That seemed okay.
make gives me this error: google search brought up nothing on it. (last 2
lines).
I did the ./httpd -DONE_PROCESS also.

python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /temp/mod_python-3.0.3/src.
*** Error code 1
Mark DeWar

From grisha at modpython.org  Fri Oct  3 15:16:26 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] Hello newbie problems 
In-Reply-To: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
Message-ID: <20031003151613.S71021@onyx.ispol.com>


Check this out:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> Hello,
> I installed python 2.3.1 (or whatever is the latest from the site)
> I d/l the mod_python 3.03
> I have apache 2.0.47 running.
> I did as per each README for each isntall.
> Apache is running. python seemed to install ok. There were no errors.
> I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> That seemed okay.
> make gives me this error: google search brought up nothing on it. (last 2
> lines).
> I did the ./httpd -DONE_PROCESS also.
>
> python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
> requestobject.c:1055: (Each undeclared identifier is reported only once
> requestobject.c:1055: for each function it appears in.)
> requestobject.c:1056: syntax error before `l'
> requestobject.c:1057: `l' undeclared (first use in this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> *** Error code 1
>
> Stop in /temp/mod_python-3.0.3/src.
> *** Error code 1
> Mark DeWar
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From perry.tew at cibavision.novartis.com  Fri Oct  3 15:18:08 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] 
 I hacked out Application.py using Session.py as a template. Is sucha thing
 needed by anyone?
Message-ID: <OF1B330742.C489E342-ON85256DB4.0068F426-85256DB4.006A07FD@EU.novartis.net>

Hello,
   I had need for global persistence in my mod_python application under 
Solaris.  I read Grisha's article last night talking about the new Session 
code.  I thought is was really useful.  So I looked it over and used it as 
a template for creating application level data sharing similar to Visual 
Basic's Application object or JSP's application object.  I basically 
stripped out the cookie code, time stamping, and used a constant hash id 
for retrieving the data.

I'm still raw to python.  I was wondering if such functionality is needed 
by the mod_python community or if such a thing already exists.  I was also 
hoping that if somebody did have a use for it then they could code review 
it for me and hopefully provide criticism or optimizations on the code. If 
neither, then I'll just keep it for my own use.

The code is listed below.  I'm not sure if this mailing list accepts 
attachments, so I'm providing it both ways.

Thanks,
Perry Tew




#######################################################################
from mod_python import apache
import _apache

import os
import time
import anydbm, whichdb
import cPickle
import tempfile

APP_SID = 'app.sid'

tempdir = tempfile.gettempdir()


class BaseApplication(dict):

    def __init__(self, req, lock=1):

        self._req = req
        self._lock = lock
        self._new = 1
        self._created = 0
        self._locked = 0

        dict.__init__(self)

        self.init_lock()

        # attempt to load ourselves
        #self.lock()
        if self.load():
            self._new = 0

        if self._new:
            self._created = time.time()


    def load(self):
        dict = self.do_load()
        if dict == None:
            return 0

        self._created  = dict["_created"]
        self.update(dict["_data"])
        return 1

    def save(self):
        dict = {"_data"    : self.copy(), 
        "_created" : self._created}
        self.do_save(dict)

    def delete(self):
        self.do_delete()
        self.clear()

    def init_lock(self):
        pass

    def lock(self):
        if self._lock:
            _apache._global_lock(self._req.server, None, 0)
            self._locked = 1

    def unlock(self):
        if self._lock and self._locked:
            _apache._global_unlock(self._req.server, None, 0)
            self._locked = 0

    def is_new(self):
        return not not self._new

    def created(self):
        return self._created

    def __del__(self):
        self.unlock()



class DbmApplication(BaseApplication):

    def __init__(self, req, dbm=None, dbmtype=anydbm):

        if not dbm:
            opts = req.get_options()
            if opts.has_key("ApplicationDbm"):
                dbm = opts["ApplicationDbm"]
            else:
                dbm = os.path.join(tempdir, req.server.server_hostname + 
str(req.server.port))

        self._dbmfile = dbm
        self._dbmtype = dbmtype

        BaseApplication.__init__(self, req)

    def _set_dbm_type(self):
        module = whichdb.whichdb(self._dbmfile)
        if module:
            self._dbmtype = __import__(module)
 
    def _get_dbm(self):
        result = self._dbmtype.open(self._dbmfile, 'c')
        if self._dbmtype is anydbm:
            self._set_dbm_type()
        return result


    def do_load(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            if dbm.has_key(APP_SID):
                return cPickle.loads(dbm[APP_SID])
            else:
                return None
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_save(self, dict):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            dbm[APP_SID] = cPickle.dumps(dict)
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_delete(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            try:
                del dbm[APP_SID]
            except KeyError: pass
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)


class MemoryApplication(BaseApplication):

    sdict = {}

    def __init__(self, req):

        BaseApplication.__init__(self, req)

    def do_load(self):
        if MemoryApplication.sdict.has_key(APP_SID):
            return MemoryApplication.sdict[APP_SID]
        return None

    def do_save(self, dict):
        MemoryApplication.sdict[APP_SID] = dict

    def do_delete(self):
        try:
            del MemoryApplication.sdict[APP_SID]
        except KeyError: pass

def Application(req):

    threaded = _apache.mpm_query(apache.AP_MPMQ_IS_THREADED)
    forked = _apache.mpm_query(apache.AP_MPMQ_IS_FORKED)
    daemons =  _apache.mpm_query(apache.AP_MPMQ_MAX_DAEMONS)

    if (threaded and ((not forked) or (daemons == 1))):
        return MemoryApplication(req)
    else:
        return DbmApplication(req)
#######################################################################
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Application.py
Type: application/octet-stream
Size: 7023 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031003/199b5fec/Application.obj
From mark at s-wit.net  Fri Oct  3 16:34:29 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 21:47:46 2004
Subject: [mod_python] Hello newbie problems #2
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
Message-ID: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>

The below link got mod_python to compile and install.
However when I put the info into the httpd.conf I get this error:

Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
Cannot load /usr/local/apache2/modules/mod_python.so into server:
/usr/local/apa
che2/modules/mod_python.so: Undefined symbol "pthread_self"

At the bottom of the link provided I see that I should or thought I should
configure with these options:
spiderman#
./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
e2/bin/apxs

(I tried the --with-python=  being blank but system sat there and with
/usr/local/bin/ just gave an error.)

I could not find more info on this error.
Thanks
mark

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "M.D. DeWar" <mark@s-wit.net>
Cc: <mod_python@modpython.org>
Sent: Friday, October 03, 2003 3:16 PM
Subject: Re: [mod_python] Hello newbie problems


>
> Check this out:
>
> http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
>
> > Hello,
> > I installed python 2.3.1 (or whatever is the latest from the site)
> > I d/l the mod_python 3.03
> > I have apache 2.0.47 running.
> > I did as per each README for each isntall.
> > Apache is running. python seemed to install ok. There were no errors.
> > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > That seemed okay.
> > make gives me this error: google search brought up nothing on it. (last
2
> > lines).
> > I did the ./httpd -DONE_PROCESS also.
> >
> > python2.3  -c -o requestobject.lo requestobject.c && touch
requestobject.slo
> > requestobject.c: In function `getreq_recmbr_off':
> > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
function)
> > requestobject.c:1055: (Each undeclared identifier is reported only once
> > requestobject.c:1055: for each function it appears in.)
> > requestobject.c:1056: syntax error before `l'
> > requestobject.c:1057: `l' undeclared (first use in this function)
> > requestobject.c: At top level:
> > requestobject.c:1270: warning: initialization from incompatible pointer
type
> > apxs:Error: Command failed with rc=65536
> > .
> > *** Error code 1
> >
> > Stop in /temp/mod_python-3.0.3/src.
> > *** Error code 1
> > Mark DeWar
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >

From grisha at modpython.org  Fri Oct  3 16:49:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
Message-ID: <20031003164715.N75641@onyx.ispol.com>


This oftentimes means that either of Apache or Python was compiled without
thread support, and therefore you need to make sure that both are with or
without threads.

Which operating system is this on?

Grisha

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> The below link got mod_python to compile and install.
> However when I put the info into the httpd.conf I get this error:
>
> Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> Cannot load /usr/local/apache2/modules/mod_python.so into server:
> /usr/local/apa
> che2/modules/mod_python.so: Undefined symbol "pthread_self"
>
> At the bottom of the link provided I see that I should or thought I should
> configure with these options:
> spiderman#
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> e2/bin/apxs
>
> (I tried the --with-python=  being blank but system sat there and with
> /usr/local/bin/ just gave an error.)
>
> I could not find more info on this error.
> Thanks
> mark
>
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 3:16 PM
> Subject: Re: [mod_python] Hello newbie problems
>
>
> >
> > Check this out:
> >
> > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > Hello,
> > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > I d/l the mod_python 3.03
> > > I have apache 2.0.47 running.
> > > I did as per each README for each isntall.
> > > Apache is running. python seemed to install ok. There were no errors.
> > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > > That seemed okay.
> > > make gives me this error: google search brought up nothing on it. (last
> 2
> > > lines).
> > > I did the ./httpd -DONE_PROCESS also.
> > >
> > > python2.3  -c -o requestobject.lo requestobject.c && touch
> requestobject.slo
> > > requestobject.c: In function `getreq_recmbr_off':
> > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> function)
> > > requestobject.c:1055: (Each undeclared identifier is reported only once
> > > requestobject.c:1055: for each function it appears in.)
> > > requestobject.c:1056: syntax error before `l'
> > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > requestobject.c: At top level:
> > > requestobject.c:1270: warning: initialization from incompatible pointer
> type
> > > apxs:Error: Command failed with rc=65536
> > > .
> > > *** Error code 1
> > >
> > > Stop in /temp/mod_python-3.0.3/src.
> > > *** Error code 1
> > > Mark DeWar
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Fri Oct  3 19:28:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<20031003164715.N75641@onyx.ispol.com>
	<000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
Message-ID: <20031003192203.W77195@onyx.ispol.com>


On Fri, 3 Oct 2003, M.D. DeWar wrote:

> freebsd 4.8

On FreeBSD Apache defaults to no threads which creates a problem, so
either you have to compile Python without threads, or use a trick to load
threaded libs into Apache.

I think the simplest thing on FreeBSD is to use the ports rather than
trying to do it by hand (you'll need an up-to-date ports collection, see
the FreeBSD handbook on that):

# cd /usr/ports/www/mod_python3
# make install

Then read the warning at the end of the install that will tell you about
the thread libs loading trick.

Grisha


> apache 2.0.47
> php 4.3.2
> Mark
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 4:49 PM
> Subject: Re: [mod_python] Hello newbie problems #2
>
>
> >
> > This oftentimes means that either of Apache or Python was compiled without
> > thread support, and therefore you need to make sure that both are with or
> > without threads.
> >
> > Which operating system is this on?
> >
> > Grisha
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > The below link got mod_python to compile and install.
> > > However when I put the info into the httpd.conf I get this error:
> > >
> > > Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> > > Cannot load /usr/local/apache2/modules/mod_python.so into server:
> > > /usr/local/apa
> > > che2/modules/mod_python.so: Undefined symbol "pthread_self"
> > >
> > > At the bottom of the link provided I see that I should or thought I
> should
> > > configure with these options:
> > > spiderman#
> > >
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> > > e2/bin/apxs
> > >
> > > (I tried the --with-python=  being blank but system sat there and with
> > > /usr/local/bin/ just gave an error.)
> > >
> > > I could not find more info on this error.
> > > Thanks
> > > mark
> > >
> > > ----- Original Message -----
> > > From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> > > To: "M.D. DeWar" <mark@s-wit.net>
> > > Cc: <mod_python@modpython.org>
> > > Sent: Friday, October 03, 2003 3:16 PM
> > > Subject: Re: [mod_python] Hello newbie problems
> > >
> > >
> > > >
> > > > Check this out:
> > > >
> > > > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> > > >
> > > > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> > > >
> > > > > Hello,
> > > > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > > > I d/l the mod_python 3.03
> > > > > I have apache 2.0.47 running.
> > > > > I did as per each README for each isntall.
> > > > > Apache is running. python seemed to install ok. There were no
> errors.
> > > > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for
> mod_python.
> > > > > That seemed okay.
> > > > > make gives me this error: google search brought up nothing on it.
> (last
> > > 2
> > > > > lines).
> > > > > I did the ./httpd -DONE_PROCESS also.
> > > > >
> > > > > python2.3  -c -o requestobject.lo requestobject.c && touch
> > > requestobject.slo
> > > > > requestobject.c: In function `getreq_recmbr_off':
> > > > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> > > function)
> > > > > requestobject.c:1055: (Each undeclared identifier is reported only
> once
> > > > > requestobject.c:1055: for each function it appears in.)
> > > > > requestobject.c:1056: syntax error before `l'
> > > > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > > > requestobject.c: At top level:
> > > > > requestobject.c:1270: warning: initialization from incompatible
> pointer
> > > type
> > > > > apxs:Error: Command failed with rc=65536
> > > > > .
> > > > > *** Error code 1
> > > > >
> > > > > Stop in /temp/mod_python-3.0.3/src.
> > > > > *** Error code 1
> > > > > Mark DeWar
> > > > >
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
From idiot1 at netzero.net  Sat Oct  4 20:17:18 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <20031003164715.N75641@onyx.ispol.com>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
	<20031003164715.N75641@onyx.ispol.com>
Message-ID: <3F7F630E.2050601@netzero.net>

Apache FORKS, spawning new processes- in advance, and has a stable of them on 
hold waiting for incoming requests. When one has handled the number of service 
requests you preset in the conf file, it dies- and is replaced with a new one. 
This uses up a lot of memory with a lot of daemonspawn, and a threading server 
is more memory efficent, although difficult as all hell to write. Python will 
support threading servers if you write one that way. In fact, just to screw with 
your minds, here is one now:
-------------------------------BEWARE WORD WRAP-----------------------------
#!C:\Python22\Pythonw.exe
from SocketServer import ThreadingMixIn
import BaseHTTPServer, CGIHTTPServer, os
#
os.chdir ('.\web')	# INSTALL IN c:\Python22; web pages in ~\web
#
class ThreadingCGIServer(ThreadingMixIn,BaseHTTPServer.HTTPServer):
	pass
import sys
server=ThreadingCGIServer(('',8080),CGIHTTPServer.CGIHTTPRequestHandler)
try:
	while 1:
		sys.stdout.flush()
		server.handle_request()
except KeyboardInterrupt:
	print 'Finished.'
---------------------------END OF SCRIPT, CHAOS FOLLOWS------------------
This is by Steve Holden of the book 'Cgi programming for the Internet'.



Gregory (Grisha) Trubetskoy wrote:

> This oftentimes means that either of Apache or Python was compiled without
> thread support, and therefore you need to make sure that both are with or
> without threads.
> 
> Which operating system is this on?
> 
> Grisha
> 
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
> 
> 
>>The below link got mod_python to compile and install.
>>However when I put the info into the httpd.conf I get this error:
>>
>>Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
>>Cannot load /usr/local/apache2/modules/mod_python.so into server:
>>/usr/local/apa
>>che2/modules/mod_python.so: Undefined symbol "pthread_self"
>>
>>At the bottom of the link provided I see that I should or thought I should
>>configure with these options:
>>spiderman#
>>./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
>>e2/bin/apxs
>>
>>(I tried the --with-python=  being blank but system sat there and with
>>/usr/local/bin/ just gave an error.)
>>
>>I could not find more info on this error.
>>Thanks
>>mark
>>
>>----- Original Message -----
>>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>>To: "M.D. DeWar" <mark@s-wit.net>
>>Cc: <mod_python@modpython.org>
>>Sent: Friday, October 03, 2003 3:16 PM
>>Subject: Re: [mod_python] Hello newbie problems
>>
>>
>>
>>>Check this out:
>>>
>>>http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>>>
>>>On Fri, 3 Oct 2003, M.D. DeWar wrote:
>>>
>>>
>>>>Hello,
>>>>I installed python 2.3.1 (or whatever is the latest from the site)
>>>>I d/l the mod_python 3.03
>>>>I have apache 2.0.47 running.
>>>>I did as per each README for each isntall.
>>>>Apache is running. python seemed to install ok. There were no errors.
>>>>I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
>>>>That seemed okay.
>>>>make gives me this error: google search brought up nothing on it. (last
>>
>>2
>>
>>>>lines).
>>>>I did the ./httpd -DONE_PROCESS also.
>>>>
>>>>python2.3  -c -o requestobject.lo requestobject.c && touch
>>
>>requestobject.slo
>>
>>>>requestobject.c: In function `getreq_recmbr_off':
>>>>requestobject.c:1055: `LONG_LONG' undeclared (first use in this
>>
>>function)
>>
>>>>requestobject.c:1055: (Each undeclared identifier is reported only once
>>>>requestobject.c:1055: for each function it appears in.)
>>>>requestobject.c:1056: syntax error before `l'
>>>>requestobject.c:1057: `l' undeclared (first use in this function)
>>>>requestobject.c: At top level:
>>>>requestobject.c:1270: warning: initialization from incompatible pointer
>>
>>type
>>
>>>>apxs:Error: Command failed with rc=65536
>>>>.
>>>>*** Error code 1
>>>>
>>>>Stop in /temp/mod_python-3.0.3/src.
>>>>*** Error code 1
>>>>Mark DeWar
>>>>
>>>>_______________________________________________
>>>>Mod_python mailing list
>>>>Mod_python@modpython.org
>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Prometheus
  +                              kniht                                +

Fnord.

From scott_list at mischko.com  Mon Oct  6 12:11:27 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] 
	How to get the Apache authentication requirements into Python
	script?
Message-ID: <200310061211.27945.scott_list@mischko.com>

I have a home-brew Apache Authentication module coming together using 
mod_python and I'm wondering how to get the 'require valid-user' and 'require 
group blah' info into my Python handler so I know which groups to look out 
for, etc.  I've been over the mod_python docs quite a bit and I can't find 
info on this.

<Location /members>
    SetHandler python-program
    PythonDebug On
    PythonAuthenHandler www
    AuthType Basic
    AuthName "Members Login"
    require group admin
</Location>

If I have the above in my httpd.conf file, I'd like to have the group 
requirement of 'admin' come through to the Python script and the Location.

If I have 'require valid-user' in a .conf or .htaccess file, I'd like to be 
able to get those in also.  I've got a hunch a .htaccess file is handled 
differently. Is that correct?

Scott
From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:20:32 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] FINFO_* variables
Message-ID: <16257.56480.68230.797089@gargle.gargle.HOWL>


I've checked the FAQ and searched the archives, but have come up
empty...

There seems to be a problem with the FINFO_* variables in module
mod_python.apache.  In my version (3.0.3, built from source) the
following are defined:

    # the req.finfo tuple
    FINFO_MODE = 0
    FINFO_INO = 1
    FINFO_DEV = 2
    FINFO_NLINK = 4
    FINFO_UID = 5
    FINFO_GID = 6
    FINFO_SIZE = 7
    FINFO_ATIME = 8
    FINFO_MTIME = 9
    FINFO_CTIME = 10
    FINFO_FNAME = 11
    FINFO_NAME = 12

You may note the skip from 2 to 4.  I tested this with the following
handler:

    def handler(req):

	req.write('req.finfo: ' + str(req.finfo))
	return apache.OK

Going to a page that uses this handler, I get the following output
(I've pretty-printed it for readability):

    req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
		1065409206, 1065409206, '/var/www/py/foo', None)

If you line up the FINFO_* indexes with the appropriate tuple elements:

    FINFO_MODE = 0          1604	     	 	 
    FINFO_INO = 1	    359355	     	 	 
    FINFO_DEV = 2	    775		 
    FINFO_NLINK = 4	    500		 
    FINFO_UID = 5	    500		 
    FINFO_GID = 6	    14		 
    FINFO_SIZE = 7	    1065473633	 
    FINFO_ATIME = 8	    1065409206	 
    FINFO_MTIME = 9	    1065409206	 
    FINFO_CTIME = 10	    '/var/www/py/foo'
    FINFO_FNAME = 11	    None             
    FINFO_NAME = 12

You get the picture: everything is off by one after FINFO_DEV.  I
looked in CVS and noticed that the significant change in the FINFO_*
vars was between versions 1.45 and 1.46.  I'm quite surprised since
according to the repository this change happened in July of 2002.  I
can't be the only one who has used FINFO_* since then, can I?

BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).

Thanks,

 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:26:28 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16257.56836.418496.771252@gargle.gargle.HOWL>



 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:

I should have added that I had the same problem with 3.0.1, prebuilt
with redhat 9.0 rpm.  I thought perhaps I had an old and/or redhat
bug, so I upgraded to the latest stable source.  When the same problem
occured with 3.0.3 I then poked around at the CVS tree and noticed the
FINFO_* vars appear to have been off for some time now.

-- 
 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From perry.tew at cibavision.novartis.com  Tue Oct  7 00:33:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then
 apache tries to serve req as physical file in htdocs?
Message-ID: <OFC2BD368E.0E801EE4-ON85256DB8.0017C350-85256DB8.001910F1@EU.novartis.net>

Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 
directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 
anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


From schnieper at semafor.ch  Tue Oct  7 09:01:27 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] Problems with configure and make
Message-ID: <3F8264C7.3080201@semafor.ch>

Hi all

Are there any known problems with this versions?
I tried python 2.2.2 and 2.3.2
mod_python 3.1.0a and 3.0.3

But i always get a lot of mistakes by doing the make command.
Or could this be something with Apache 2.0.44

If it helps i can mail the errormessages.

Thanks in advance
Lukas

From perry.tew at cibavision.novartis.com  Tue Oct  7 09:10:26 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then apache tries to serve req as physical file in
 htdocs?
Message-ID: <OF06AA765B.2624506B-ON85256DB8.0048507A-85256DB8.00485DEA@EU.novartis.net>

The more I play with this, the more I think the problem I'm seeing is 
because I'm not using the
security as it was designed.  I don't think apache likes a 'require' 
directive without an AuthType
or AuthName.  The only problem is, if I add those two directives, the user 
is prompted for a username
and password, which I want to avoid since I'm using SSL certs.

I changed the handler from an authen handler to an access handler. 
Everything works like a charm.
I guess I'll live with that. Although it's technically not the correct 
place to authenticate, it's close enough
not to be confusing.

Thanks everyone,
Perry Tew




Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 

directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 

anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Tue Oct  7 23:52:29 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python]  How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310061211.27945.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
Message-ID: <20031007235047.H658@onyx.ispol.com>



On Mon, 6 Oct 2003, Scott Chapman wrote:

> mod_python and I'm wondering how to get the 'require valid-user' and 'require
> group blah' info into my Python handler so I know which groups to look out
> for, etc.  I've been over the mod_python docs quite a bit and I can't find
> info on this.

Right now you cannot. But 3.1 will have a req.requires() method which will
return just that info. If you *really* need it now, you can try out the
latest version from CVS.

Grisha
From seth at picklematrix.net  Tue Oct  7 22:41:29 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] could not import mod_python.apache ?
Message-ID: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>

Hello,

I'm very excited to try out the new 3.1 alpha.  I removed the 
mod_python RPM from RH9, did a configure, make, make install.  I then 
added:

LoadModule python_module /usr/lib/httpd/modules/mod_python.so

<Directory /home/*/public_html>
     SetHandler mod_python
     PythonHandler mod_python.publisher
</Directory>

And restarted.

My simple script:

def index(req):
     return "We are in index()"

Which made my error_log blow up with a lot of these messages:

[Wed Oct 08 03:25:50 2003] [error] make_obcallback: could not import 
mod_python.
apache.!
Traceback (most recent call last):
   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
784, in ?
     mpm_query = _apache.mpm_query
AttributeError: 'module' object has no attribute 'mpm_query'

And it killed apache.  Then I tried starting it back up (httpd 
restart), and I get this error, and it finishes with "Configuration 
Failed!"

[Wed Oct 08 03:25:54 2003] [notice] mod_python: Creating 150 session 
mutexes bas
ed on 150 max processes and 0 max threads.
[Wed Oct 08 03:25:54 2003] [error] (28)No space left on device: 
mod_python: Fail
ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

Any ideas what is going on?  I think I followed the installation 
instructions and tutorial to every step.  I'm running RH9 brand new, 
very bare install.  All standard RPMs, nothing from source (except 
this, of course).  And I removed the mod_python RPM before starting 
this.

Any tips or hints would be greatly appreciated.  Did I miss a step?

Thanks!
Seth

From grisha at modpython.org  Wed Oct  8 09:33:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
References: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
Message-ID: <20031008092957.Y6762@onyx.ispol.com>



On Tue, 7 Oct 2003, Seth Ladd wrote:

> Traceback (most recent call last):
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 784, in ?
>      mpm_query = _apache.mpm_query
> AttributeError: 'module' object has no attribute 'mpm_query'

Sounds to me like you still have the old mod_python/apache.py in your
pythonpath.

> ed on 150 max processes and 0 max threads.
> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
> mod_python: Fail
> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

There are references to that earlier in the list, also I believe the error
log shows a hint on what to do. It has to do with the default number of
available semaphores on Linux which needs to be increased.

The latest version that is in CVS deals with this issue a bit better.

Grisha
From scott_list at mischko.com  Wed Oct  8 07:06:31 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python]  How to get the Apache authentication requirements
	into Python script?
In-Reply-To: <20031007235047.H658@onyx.ispol.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
Message-ID: <200310080706.31323.scott_list@mischko.com>

On Tuesday 07 October 2003 20:52, Gregory (Grisha) Trubetskoy wrote:
> On Mon, 6 Oct 2003, Scott Chapman wrote:
> > mod_python and I'm wondering how to get the 'require valid-user' and
> > 'require group blah' info into my Python handler so I know which groups
> > to look out for, etc.  I've been over the mod_python docs quite a bit and
> > I can't find info on this.
>
> Right now you cannot. But 3.1 will have a req.requires() method which will
> return just that info. If you *really* need it now, you can try out the
> latest version from CVS.

Grisha,
What's the scheduled release date for 3.1?

Scott

From grisha at modpython.org  Wed Oct  8 11:41:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310080706.31323.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
	<200310080706.31323.scott_list@mischko.com>
Message-ID: <20031008113933.V6762@onyx.ispol.com>




On Wed, 8 Oct 2003, Scott Chapman wrote:

> Grisha,
> What's the scheduled release date for 3.1?

We do not have a formal schedule. I am hoping to release it as beta in the
next couple of days, and the final some time just before the upcoming
Apachecon.

Grisha
From anthony_barker at hotmail.com  Wed Oct  8 17:22:15 2003
From: anthony_barker at hotmail.com (Anthony Barker)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] getting started
Message-ID: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>

I was wondering how to get started processing an html form.

1) is there something equivalent to Apache::PerlRun?

"This module does not cache compiled scripts between runs.
A script is loaded and compiled freshly each time it is requested.
However, Apache::PerlRun still avoids the overhead of starting a new Perl
interpreter for each CGI script, so it's faster than traditional Perl CGI
scripting but slower than Apache::Registry or vanilla Apache API modules."

2) How would mod_python enable this simple script?

#!/usr/bin/python2
import cgi, sys, string
sys.stderr = sys.stdout
print "Content-type: text/html\r\n"

out1 = """
<HTML>
<HEAD><TITLE>Info Form</TITLE></HEAD>
<BODY BGCOLOR = white>
<H3>Please, enter your name and age.</H3>
<TABLE BORDER = 0>
<FORM METHOD = post ACTION = "t3.cgi">
<TR><TH>Name:</TH><TD>
<INPUT type = text name = "name"></TD>
</TABLE>
<INPUT TYPE = hidden NAME = "action" VALUE = "display"
<INPUT TYPE = submit VALUE = "Enter">
</FORM>
</BODY>
</HTML>"""

form = cgi.FieldStorage()
if form.has_key("action"):
    if form.has_key("name"):
        print "hello " + form["name"].value
else:
    print out1

_________________________________________________________________
Instant message in style with MSN Messenger 6.0. Download it now FREE!  
http://msnmessenger-download.com

From seth at picklematrix.net  Wed Oct  8 07:52:37 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <20031008092957.Y6762@onyx.ispol.com>
Message-ID: <341CC3E0-F9B8-11D7-A8D2-000A9576D038@picklematrix.net>

>
> Sounds to me like you still have the old mod_python/apache.py in your
> pythonpath.

That's what I thought to.  I'll do another install after I clean those 
files out by hand.

>
>> ed on 150 max processes and 0 max threads.
>> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
>> mod_python: Fail
>> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).
>
> There are references to that earlier in the list, also I believe the 
> error
> log shows a hint on what to do. It has to do with the default number of
> available semaphores on Linux which needs to be increased.

Exactly.  I should have phrased my question as "What are the issues 
with increasing the semaphores, and how do I do it?" :)

I'll search previously on the list to see what I can find.

Kudos for the work done on mod_python!
Seth

From grisha at modpython.org  Wed Oct  8 14:10:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] getting started
In-Reply-To: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
References: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
Message-ID: <20031008135000.C7910@onyx.ispol.com>


On Wed, 8 Oct 2003, Anthony Barker wrote:

> I was wondering how to get started processing an html form.
>
> 1) is there something equivalent to Apache::PerlRun?
>
> "This module does not cache compiled scripts between runs. A script is
> loaded and compiled freshly each time it is requested. However,
> Apache::PerlRun still avoids the overhead of starting a new Perl
> interpreter for each CGI script, so it's faster than traditional Perl
> CGI scripting but slower than Apache::Registry or vanilla Apache API
> modules."

No. (The cgi handler is as close as you will get to this). I don't know
what the Perl folks do, but on Python side the only way to achieve this
(including a clean namespace) is to reset the interpreter, which only
results in marginal improvement. Not to mention that there is something
awkward with this whole approach :-)

> 2) How would mod_python enable this simple script?
>
> #!/usr/bin/python2
> import cgi, sys, string
> sys.stderr = sys.stdout
> print "Content-type: text/html\r\n"
>
> out1 = """
> <HTML>
> <HEAD><TITLE>Info Form</TITLE></HEAD>
> <BODY BGCOLOR = white>
> <H3>Please, enter your name and age.</H3>
> <TABLE BORDER = 0>
> <FORM METHOD = post ACTION = "t3.cgi">
> <TR><TH>Name:</TH><TD>
> <INPUT type = text name = "name"></TD>
> </TABLE>
> <INPUT TYPE = hidden NAME = "action" VALUE = "display"
> <INPUT TYPE = submit VALUE = "Enter">
> </FORM>
> </BODY>
> </HTML>"""
>
> form = cgi.FieldStorage()
> if form.has_key("action"):
>     if form.has_key("name"):
>         print "hello " + form["name"].value
> else:
>     print out1
>

If you are using the publisher handler, then your Apache config would look
like this (and make sure it is not a CGI ScriptAlias):

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

And the script could be something like the below. If the script was named
form.py, you'd access the below via http://blah.bla.com/form.py/info.


def info(name=None, action=None):

    out1 = """
    <HTML>
    <HEAD><TITLE>Info Form</TITLE></HEAD>
    <BODY BGCOLOR = white>
    <H3>Please, enter your name and age.</H3>
    <TABLE BORDER = 0>
    <FORM METHOD = post ACTION = "info">
    <TR><TH>Name:</TH><TD>
    <INPUT type = text name = "name"></TD>
    </TABLE>
    <INPUT TYPE = hidden NAME = "action" VALUE = "display"
    <INPUT TYPE = submit VALUE = "Enter">
    </FORM>
    </BODY>
    </HTML>"""

    if action and name:
        return "hello %s" % name
    else:
        return out1



HTH,

Grisha
From dpopowich at mtrsd.k12.ma.us  Wed Oct  8 16:54:14 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16260.31094.314431.782441@gargle.gargle.HOWL>


I downloaded 3.1.0a and this same bug exists there, too...

Daniel J. Popowich writes:
> 
> I've checked the FAQ and searched the archives, but have come up
> empty...
> 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:
> 
>     # the req.finfo tuple
>     FINFO_MODE = 0
>     FINFO_INO = 1
>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>     FINFO_UID = 5
>     FINFO_GID = 6
>     FINFO_SIZE = 7
>     FINFO_ATIME = 8
>     FINFO_MTIME = 9
>     FINFO_CTIME = 10
>     FINFO_FNAME = 11
>     FINFO_NAME = 12
> 
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
> 
>     def handler(req):
> 
> 	req.write('req.finfo: ' + str(req.finfo))
> 	return apache.OK
> 
> Going to a page that uses this handler, I get the following output
> (I've pretty-printed it for readability):
> 
>     req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
> 		1065409206, 1065409206, '/var/www/py/foo', None)
> 
> If you line up the FINFO_* indexes with the appropriate tuple elements:
> 
>     FINFO_MODE = 0          1604	     	 	 
>     FINFO_INO = 1	    359355	     	 	 
>     FINFO_DEV = 2	    775		 
>     FINFO_NLINK = 4	    500		 
>     FINFO_UID = 5	    500		 
>     FINFO_GID = 6	    14		 
>     FINFO_SIZE = 7	    1065473633	 
>     FINFO_ATIME = 8	    1065409206	 
>     FINFO_MTIME = 9	    1065409206	 
>     FINFO_CTIME = 10	    '/var/www/py/foo'
>     FINFO_FNAME = 11	    None             
>     FINFO_NAME = 12
> 
> You get the picture: everything is off by one after FINFO_DEV.  I
> looked in CVS and noticed that the significant change in the FINFO_*
> vars was between versions 1.45 and 1.46.  I'm quite surprised since
> according to the repository this change happened in July of 2002.  I
> can't be the only one who has used FINFO_* since then, can I?
> 
> BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).
> 
> Thanks,
> 
>  ---------------------
>  Daniel Popowich     /
>  Network Specialist /
>  ------------------------------------------------------------------------------
>     /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
>    //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
>   //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
>  //      || //   //   \\  //// //////    413.625.0192 x22                  /
>  --------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Wed Oct  8 17:02:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <20031008165453.S10058@onyx.ispol.com>


On Mon, 6 Oct 2003, Daniel J. Popowich wrote:

>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
>
> I can't be the only one who has used FINFO_* since then, can I?

Looks like you are :-)

I checked and indeed FINFO_NLINK should be 3, and from there on they're
off by one, thanks for catching this.

Grisha
From grisha at modpython.org  Wed Oct  8 17:15:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16260.31094.314431.782441@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
 <16260.31094.314431.782441@gargle.gargle.HOWL>
Message-ID: <20031008171450.N10594@onyx.ispol.com>


Well it was only fixed about 10 minutes ago :-)

Grisha

On Wed, 8 Oct 2003, Daniel J. Popowich wrote:

>
> I downloaded 3.1.0a and this same bug exists there, too...
>
> Daniel J. Popowich writes:
> >
From grisha at modpython.org  Wed Oct  8 21:12:47 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] apache.log_error
In-Reply-To: <029f01c383af$ef321c60$95fe46c0@GIRLS>
References: <029f01c383af$ef321c60$95fe46c0@GIRLS>
Message-ID: <20031008210859.H11965@onyx.ispol.com>


You will have better luck on Windows with req.log_error than
apache.log_error, or you will have to call apache.log_error with the other
two optional arguments, level and server:

apache.log_error("blah", apache.APLOG_ERR, req.server)

I *think* (I haven't researched this too much) this is because on unix,
when req.server is omited, the function writes to stderr, which ultimately
ends up in the logs, but on windows, it goes nowhere.

But again, if you have a request object, always use:

req.log_error("blah")

Grisha

On Thu, 25 Sep 2003, Seung Chan Lim wrote:

> If I'm trying to spew error messages out to the default apache error log am
> I doing the right thing by using apache.log_error ??
>
> The problem is that I don't see anything on the default error log which I
> believe is Apache2/logs/error.log
>
> This is using mod_python 3.03
> Windows 2000
> Apache 2.0
> Python 2.2
>
> thanks
>
> slim
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Wed Oct  8 23:53:51 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] [help]please give an input filter example ?
In-Reply-To: <001201c38631$f12aa850$db64a8c0@camgelo>
References: <007c01c37dc6$32d21050$db64a8c0@camgelo>
	<3F69851B.3080703@sjsoft.com>
	<009d01c37dd0$bc2c5f40$db64a8c0@camgelo> <3F69916F.10406@sjsoft.com>
	<3F69D71A.8080005@sjsoft.com><20030923102333.N24322@onyx.ispol.com>
	<20030925092737.H57967@onyx.ispol.com>
	<20030926104954.C62356@onyx.ispol.com>
	<001201c38631$f12aa850$db64a8c0@camgelo>
Message-ID: <20031008234855.Q11965@onyx.ispol.com>


On Mon, 29 Sep 2003, camge wrote:

>     Below is the error message and error code is 730035.

This is SOCEWOULDBLOCK (aka EAGAIN). Not sure why it is returned here
since the read should be blocking (as the code specifies APR_BLOCK_READ),
may be its a windows thing, but I added a check for it, which should
eliminate this error:

        if (!APR_STATUS_IS_EAGAIN(self->rc) && !APR_STATUS_IS_SUCCESS(self->rc)) {
            PyErr_SetObject(PyExc_IOError,
	                    PyString_FromString("Input filter read error"));

(You can make this change in your sources, or check out the latest stuff
from CVS)

Grisha
From hara at oderwat.de  Thu Oct  9 12:30:36 2003
From: hara at oderwat.de (HaRa (OderWat))
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] 
	Prob. with Win32 mod_python 3.x and python 2.3.x and Apache2
Message-ID: <001401c38e50$69f41e80$ea5545d5@ikc.net>

Hi there,

I make it short:

If I d/l  the current 3.1.0a or 3.0.3 as win32 executable and install it on my apache2/python2.3.2 system, I get errors because the
win32 mod_python in either version opens python22.dll !!! I verified this in mod_python.so (contains: python22.dll). You can even
look at the Apache Signature:

Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.2.3 PHP/4.3.3 Server
                                                                     -------------

The 3.0.3 lets me choose if I want to install for 2.2 or 2.3 (if both are present). The 3.1.0a just asks to install for 2.3 ... bot
then open the python22.dll ..

Thank you for your Time!
Keep up the good work!

- Hans Raaf (Germany) / www.oderwat.de



From rclilly at cox.net  Thu Oct  9 18:22:28 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
Message-ID: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>

My setup:		Apache/2.0.47 (Win32) PHP/4.3.2 mod_python/3.0.3 Python/2.2.3

My http.conf:	LoadModule python_module modules/mod_python.so

			<Directory F:/MyApache/Apache2/htdocs/test>
			  AddHandler python-program .py
			  PythonHandler mptest
			  PythonDebug On
			</Directory>

When I try to access http://localhost/test/mptest.py I get and Internal
Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
make_obcallback: could not import mod_python.apache.

As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
start when using mod_python with Python 3.

Any clues on what I need to do to get mod_python working under Apache2?

TIA,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From rclilly at cox.net  Thu Oct  9 19:01:41 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
In-Reply-To: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>
Message-ID: <AMEDJPACLBJGECKBDAOKGEHCCBAA.rclilly@cox.net>

> My setup:		Apache/2.0.47 (Win32) PHP/4.3.2
> mod_python/3.0.3 Python/2.2.3
>
> My http.conf:	LoadModule python_module modules/mod_python.so
>
> 			<Directory F:/MyApache/Apache2/htdocs/test>
> 			  AddHandler python-program .py
> 			  PythonHandler mptest
> 			  PythonDebug On
> 			</Directory>
>
> When I try to access http://localhost/test/mptest.py I get and Internal
> Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
> make_obcallback: could not import mod_python.apache.
>
> As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
> start when using mod_python with Python 3.
>
> Any clues on what I need to do to get mod_python working under Apache2?
>
> TIA,
>
> Robert Lilly

I solved my problem. After uninstalling Python 2.3.2 and re-installing 2.2.3
I didn't re-install mod_python.  After re-installing mod_python all is well.

Is there a reason mod_python won't work with the Python 2.3? It has been out
quite a while now.

Thanks,

Robert
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From cs1spw at bath.ac.uk  Sat Oct 11 00:13:05 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
Message-ID: <3F873D01.8090107@bath.ac.uk>

Hi all,

Are there any plans for any mod_python related activities at PyCon DC 
next year?

http://www.python.org/pycon/dc2004/

Cheers,

Simon Willison
http://simon.incutio.com/



From grisha at modpython.org  Sat Oct 11 08:23:23 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
In-Reply-To: <3F873D01.8090107@bath.ac.uk>
References: <3F873D01.8090107@bath.ac.uk>
Message-ID: <20031011082229.Y67678@onyx.ispol.com>


Since it is in DC, I will probably submit for a talk on mod_python...

Grisha

On Sat, 11 Oct 2003, Simon Willison wrote:

> Hi all,
>
> Are there any plans for any mod_python related activities at PyCon DC
> next year?
>
> http://www.python.org/pycon/dc2004/
>
> Cheers,
>
> Simon Willison
> http://simon.incutio.com/
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From vmanera at manord.com  Mon Oct 13 11:14:56 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] Cannot load mod_python.so into server:
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B0@exchange2000.manord.com>

Environment on win2000:

python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
 Impossibile trovare il modulo specificato.


httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,
Villiam



From skremer at q.cis.uoguelph.ca  Mon Oct 13 19:56:43 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:47:47 2004
Subject: [mod_python] Persisten DB connection for passwords.
Message-ID: <Pine.LNX.4.44.0310131937410.9038-100000@q.cis.uoguelph.ca>


Hi,

I have built a web-site that uses a persistent DB connection as suggested 
in the FAQ to store user passwords for my web-site.

The existence of the separate connections (for each python process) is
problematic in this case, because one hit on the web-page will initialize
the password (or change it) with an SQL update and then another hit to the
same page (but on a different PID) may or may not get the lastest version
of the password with SELECT.

I understand that this is a product of the multiversion model concurrency
control (MVCC) which is generally desirable and specifically desirable for 
my web-site except for the password UPDATE and SELECT commands and the 
persistent connections I'm using with mod_python.

I've been poring over the documentaion and am still a little bit unsure of 
what the easiest way to approach this is (serializable isolation lever, 
table-level locks, row-level locks, SELECT FOR UPDATE) and where to apply 
it (during the UPDATE statement, SELECT statement, or both).  The 
problem is complicated by the fact that I can't easily test it because I 
never know when the transactions will be autocommitted and which PID my 
http get will get.  I'm looking for a nice simple solution that will work 
with this rare case (i.e. please don't suggest switching to a 
different DB, using mod_perl instead ;), etc.).

I'm hoping that someone else has tried something similar and can offer a 
suggestion or pointer (or even a snippit of SQL).

FYI the DB is Postgres-7.3 (built from source), mod_python is 3.0 (built 
from source), DBA is PoPy 2.0.11 (built from source) all living on top of 
an otherwise stock RH 9.0.

Thanks in advance,

	Stefan

-- 
--
Permanently                             Temporarily (Until Aug. 2004)
Dr. Stefan C. Kremer, Associate Prof.   Visiting Researcher
Reynolds Building, 106                  307 Computer Science/Engineering Bldg
Dept. of Computing & Info. Science      School of Info. & Computer Science
University of Guelph, Guelph, Ontario	  U of California at Irvine, Irvine, CA
N1G 2W1                                 92697-3425
Tel: (519)824-4120 Ext.58913  
Fax: (519)837-0323

WWW: http://q.cis.uoguelph.ca/~skremer  E-mail:  skremer@uoguelph.ca

From vmanera at manord.com  Tue Oct 14 12:35:09 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>

I have followed the whole history of mod_python.so,...:

>Gregory (Grisha) Trubetskoy grisha at modpython.org 

>Mon Sep 15 10:32:10 EST 2003 

>This is typically a mismatch of mod_python.so and the version of Python

>you have on your system. For some reason windows says "module cannot be

>found" whereas it really means "i had problems loading it".

>

>The mod_python binary available from Apache sites should be compatible

>with Python 2.2.x, but not 2.3.

but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3

I have decided to migrate from python 2.2 to 2.3 just for try session... on
mod_python 3.1.0a

what I have to do :-( ??

Thanks,

Villiam

 

 

Environment on win2000:

python 2.3.2

apache 2.0.47

mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe

Syntax error on line 173 of C:/Programmi/Apache

Group/Apache2/conf/httpd.conf:

Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into

server:

Impossibile trovare il modulo specificato.

 

httpd.conf:

........

172 #LoadModule ssl_module modules/mod_ssl.so

173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine

uninstalling Python 2.2.2 and mod_python 3.0.3

installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 

....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,

 

Villiam Manera 
Dirett.  Sistema Informativo 

Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 

Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031014/0648346c/attachment.htm
From gustavo.cordova at q-voz.com  Tue Oct 14 09:40:54 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <3F8C1906.1050102@q-voz.com>

Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


From hara at oderwat.de  Tue Oct 14 17:39:26 2003
From: hara at oderwat.de (HaRa)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <NCBBLHDKMKAEOLOOBEGGKEBHIAAA.hara@oderwat.de>

Hi..

I just can repeat something I wrote some days ago...

The Windows binaries I d/l from sourceforge had a link to python 2.2 even when they are announced for python 2.3 (only).
So it was using my python22.dll... and my own apache-extension modules (in 2.3 dir of python) where not found.

- Hans

-----Original Message-----
From: mod_python-bounces@modpython.org [mailto:mod_python-bounces@modpython.org]On Behalf Of Manera, Villiam
Sent: Tuesday, October 14, 2003 12:35 PM
To: mod_python@modpython.org
Subject: [mod_python] Cannot load mod_python.so into apache(2):


I have followed the whole history of mod_python.so,...:
>Gregory (Grisha) Trubetskoy grisha at modpython.org 
>Mon Sep 15 10:32:10 EST 2003 
>This is typically a mismatch of mod_python.so and the version of Python
>you have on your system. For some reason windows says "module cannot be
>found" whereas it really means "i had problems loading it".
>
>The mod_python binary available from Apache sites should be compatible
>with Python 2.2.x, but not 2.3.
but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
I have decided to migrate from python 2.2 to 2.3 just for try session... on mod_python 3.1.0a
what I have to do :-( ??
Thanks,
Villiam


Environment on win2000:
python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)
C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
Impossibile trovare il modulo specificato.

httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so
my step:
with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 
Any clues on what I need to do to get mod_python working under python 2.3?
Thanks,

Villiam Manera 
Dirett.  Sistema Informativo 
Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 
Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 
From mod_python at mlists.thewrittenword.com  Tue Oct 14 11:34:41 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] How to get request URI
Message-ID: <20031014163441.GA48143@spuckler.il.thewrittenword.com>

I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Tue Oct 14 18:26:54 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:48 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C3@exchange2000.manord.com>

:-)  Thanks you, now work properly

Villiam
-----Messaggio originale-----
Da: Gustavo C?rdova Avila [mailto:gustavo.cordova@q-voz.com]
Inviato: marted? 14 ottobre 2003 17.41
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: [mod_python] Cannot load mod_python.so into apache(2):


Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Tue Oct 14 10:31:21 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <3F8C1906.1050102@q-voz.com>
Message-ID: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>


> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

From gustavo.cordova at q-voz.com  Tue Oct 14 12:38:23 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
Message-ID: <3F8C429F.5020802@q-voz.com>

Nothing really... I just changed "22" for a "23" in the string 
"python22.dll" using "edit /70"  (for all youse DOS old hands out 
there).  :-)

1. Start Menu
2. Click "run"
3. Type "cmd"
4. cd into your apache modules directory (or wherever "mod_python.so" is 
stored).
5. Type "edit /70 mod_python.so"
6. Search for "python22.dll"
7. OVERWRITE "22" with "23", so it now says "python23.dll"
8. Make sure you OVERWROTE, and not INSERTED.
9. Save.
10. Start Apache and make sure it starts ok.

Remember to make a backup of "mod_python.so" before the operation.

Mind you, this isn't the ideal solution, but until we get a 
compiled-with-python23.dll module, it seems to work.

-gustavo

Robert Lilly wrote:

>When you say you changed python22.dll to python23.dll did you just rename
>it, or did you manipulate the file somehow? If the latter, what exactly did you do, and what editor did you use?
>
>Thanks!
>
>Robert Lilly
>
>
>
>  
>

From seth at picklematrix.net  Tue Oct 14 13:18:02 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] way to use PSP from publisher handler?
Message-ID: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>

Hello,

I've tried searching the docs and FAQ, but didn't find an immediate 
answer to this.  I'd like to use the Publisher handler for all the 
logic of the page, but I'd like the then forward (internally, not with 
a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
is great!).

Is there a way to use PSP as a template mechanism from within a 
publisher handler?  I've seen Cheetah, which acts the way I would want, 
but if I can use the builtin PSP, all the better. :)

Thanks!
Seth

From perry.tew at cibavision.novartis.com  Tue Oct 14 21:14:23 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] How to get request URI
Message-ID: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>


Apache passes environment variables to an ErrorDocument that should provide
all the information you need for a custom response:

here are some links:
http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
*** see this **** http://httpd.apache.org/docs-2.0/custom-error.html

so, the mod_python code would look like this:

req.add_common_vars()
env_vars = req.subprocess_env
orig_req_uri = env_vars['REDIRECT_URL']

Hope this helps,
Perry Tew






I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

--
albert chin (china@thewrittenword.com)
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python





From gargp at earthlink.net  Tue Oct 14 21:05:05 2003
From: gargp at earthlink.net (Pankaj K Garg)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] 
	Win32 Binary of modpython 3.0.3 that has the Python 2.3 patch 
Message-ID: <000401c392d1$89bb9ce0$37fea8c0@home.org>


Browsing through some previous emails:

Andy Sy wrote:

> > modpython 3.0.3 works fine with Python 2.3, but to build it you
> > need to hack src/include/mod_python.h.  There's a FAQ entry with
> > the necessary patch.
> >
> > Maybe Grisha should release a 3.0.4 with just this one patch?
> >
> > -Barry
>
> I second the motion.  Does anyone have such a binary?
> At the very least widespread testing will help uncover
> Python 2.3 vis-a-vis modpython 3.x bugs under Windows.

I was wondering if someone created a modpython 3.0.4
Win32 install for Python 2.3?

We've been using mod_python 3.0.4 with Python 2.3 on
Linux for some time now with no problems. Recently
I've had to try out things on Win32. The good folks
at Redhat provide the Cygwin environment, that by
default now comes with Python 2.3...so, it will be
tremendously helpful if there was a Win32 installer
for mod_python 3.0.4 with Python 2.3

Pankaj


--- 
Pankaj K Garg              gargp@acm.org
1684 Nightingale Avenue    408-373-4027
Sunnyvale, CA 94304
http://home.earthlink.net/~gargp
From grisha at modpython.org  Tue Oct 14 23:39:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
Message-ID: <20031014233917.U19523@onyx.ispol.com>


Have you tried req.prev.uri?

Grisha

On Tue, 14 Oct 2003, Albert Chin wrote:

> I want to have mod_python manage my ErrorDocument handler. How can I
> get the URI of the request that caused the error? I'm using
> mod_python-3.0.3 and Apache 2.0.47.
>
> The uri members in mprequest get me the URI of the ErrorDocument
> handler.
>
> --
> albert chin (china@thewrittenword.com)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:35 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014233917.U19523@onyx.ispol.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
	<20031014233917.U19523@onyx.ispol.com>
Message-ID: <20031015035335.GA64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 11:39:42PM -0400, Gregory (Grisha) Trubetskoy wrote:
> Have you tried req.prev.uri?

Works! Thanks.

> Grisha
> 
> On Tue, 14 Oct 2003, Albert Chin wrote:
> 
> > I want to have mod_python manage my ErrorDocument handler. How can I
> > get the URI of the request that caused the error? I'm using
> > mod_python-3.0.3 and Apache 2.0.47.
> >
> > The uri members in mprequest get me the URI of the ErrorDocument
> > handler.
> >
> > --
> > albert chin (china@thewrittenword.com)
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
albert chin (china@thewrittenword.com)
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:59 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
References: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
Message-ID: <20031015035359.GB64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 09:14:23PM -0400, perry.tew@cibavision.novartis.com wrote:
> 
> Apache passes environment variables to an ErrorDocument that should provide
> all the information you need for a custom response:
> 
> here are some links:
> http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
> *** see this **** http://httpd.apache.org/docs-2.0/custom-error.html
> 
> so, the mod_python code would look like this:
> 
> req.add_common_vars()
> env_vars = req.subprocess_env
> orig_req_uri = env_vars['REDIRECT_URL']

Thanks. That works!

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Wed Oct 15 09:12:39 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:48 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C5@exchange2000.manord.com>

I used hackman:http://www.technologismiki.com/en/

I find python22 (in ascii mode) then update in python23

Villiam
-----Messaggio originale-----
Da: Robert Lilly [mailto:rclilly@cox.net]
Inviato: marted? 14 ottobre 2003 19.31
A: mod_python@modpython.org
Oggetto: RE: [mod_python] Cannot load mod_python.so into apache(2):



> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From vmanera at manord.com  Wed Oct 15 10:07:58 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>

I have had to update the configuration file of apache with: PythonAutoReload
on 
before this was the defaut, as in the new manual :
 
5.4.8 PythonAutoReload 

Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
PythonAutoReload {On, Off} 
Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
PythonAutoReload On 


Villiam 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031015/6b67b283/attachment.htm
From alexiev at activesolutions.bg  Wed Oct 15 13:16:45 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00be01c39305$6f81c140$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem

---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543

From alexiev at activesolutions.bg  Wed Oct 15 13:21:34 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00d801c39306$1c0ff300$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem


---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543
From Hector.Sanchez at cern.ch  Wed Oct 15 14:17:53 2003
From: Hector.Sanchez at cern.ch (Hector Sanchez SanMartin)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] Having 2 scripts with the same name
Message-ID: <3F8D3AF1.8030108@cern.ch>

    Hello,

    I'm having the following problem: I have 2 scripts in diferent
locations but if I request one of them the server gives me an 404 error
(not found) so I need to restart apache in order to be able to execute
the second one but then the first one gives an 404, etc...
    Is there any way to avoid this?

-- 
Hector Sanchez

CERN Document Server ** <http://cds.cern.ch/> ** <cds.support@cern.ch>
InDiCo Project       ** <http://cern.ch/indico>
Room: Bldg 510-R-007 ** Voice: +41-22-7673829 ** Fax: +41-22-7678142



From grisha at modpython.org  Wed Oct 15 09:52:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
Message-ID: <20031015095146.T19523@onyx.ispol.com>


I am pretty sure that's been fixed in 3.1.1b

Grisha

On Wed, 15 Oct 2003, Manera, Villiam wrote:

> I have had to update the configuration file of apache with: PythonAutoReload
> on
> before this was the defaut, as in the new manual :
>
> 5.4.8 PythonAutoReload
>
> Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
> PythonAutoReload {On, Off}
> Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
> PythonAutoReload On
>
>
> Villiam
>
>
From dpopowich at mtrsd.k12.ma.us  Wed Oct 15 12:31:41 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] extending util.FieldStorage
Message-ID: <16269.30317.838811.476792@gargle.gargle.HOWL>


I found myself wanting methods of util.FieldStorage that are found in
the cgi module since python 2.2, getfirst and getlist.  They save tons
of code of the form:

       if form.has_key('foo'):
           foo = form['foo']
           if type(foo) is not type([]):
               foo = [foo]
       else:
           foo = []

which can cause code-clutter if you have a number of form variables.
Instead, one can simply write:

      foo = form.getlist('foo')

See the cgi documentation for 2.2 or later for details about these
methods and how they can help you reduce code and write safer code to
protect against malformed requests.

I extended util.FieldStorage to add those two methods plus a get()
(which behaves like a standard dict.get) and thought others might like
the code (which I didn't write in whole, but stole mostly from modules
cgi and UserDict).

If found useful by many, perhaps they can be included in the 3.1
distribution?

Enjoy,

Daniel Popowich
Network Specialist
MTRSD

======================================================================

from mod_python import util

class form(util.FieldStorage):

    def get(self, key, default=None):
        if not self.has_key(key):
            return default
        return self[key]

    def getfirst(self, key, default=None):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value[0]
            else:
                return value
        else:
            return default

    def getlist(self, key):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value
            else:
                return [value]
        else:
            return []


From grisha at modpython.org  Wed Oct 15 12:51:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <16269.30317.838811.476792@gargle.gargle.HOWL>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
Message-ID: <20031015125039.H33867@onyx.ispol.com>



On Wed, 15 Oct 2003, Daniel J. Popowich wrote:

>       foo = form.getlist('foo')
>
> If found useful by many, perhaps they can be included in the 3.1
> distribution?

getfirst and getlist are already in there, but thanks anyway!

Grisha
From perry.tew at cibavision.novartis.com  Wed Oct 15 15:20:24 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFDCC9909C.1102B3CA-ON85256DC0.006A35CD-85256DC0.006A3CED@EU.novartis.net>

Grisha,

I've downloaded, compiled, and installed 3.1.1b.  Everything with my 
application appears to function correctly.   However, I did
see a change with the initial message in my error log (sorry, I don't have 
the previous message).

Is the following line correct?  Why does it say -1 max processes?  With 
3.1.0a, it used to say "Creating 200 session mutexes"
[Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session 
mutexes based on -1 max processes and 50 max threads

If you're not concerned, I'm not, but it is different, so I mention it.


I'm using the worker mpm
( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b 
mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
on Solaris
[
System = SunOS
Node = usatux29
Release = 5.8
KernelID = Generic_108528-13
Machine = sun4u
BusType = <unknown>
Serial = <unknown>
Users = <unknown>
OEM# = 0
Origin# = 1
NumCPU = 2
]


Here's the relevant httpd.conf ( need more?)  I know my worker config is 
probably whacked a little.
I'm trying to keep a small amount of children with a high thread count.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15


<IfModule worker.c>
StartServers         3
MaxClients         200
MinSpareThreads     25
MaxSpareThreads     50 
ThreadsPerChild     50
MaxRequestsPerChild 500
</IfModule>


Other than that one confusing error message, which may just be due to my 
ignorance of Apache, I had no issues.


Thanks,
Perry Tew






I think I didn't make it clear in the last message:

In order for this release to be officially announced, at least a few
people on this list need to try it and send in a +1 indicating that it
worked on their system (along with some desciption of what their system
is). *Anyone* on this list can do this, you don't have to be an official
committer or anything of that sort.

Doing a test could probably take as little as 10 minutes, and I'd
encourage you to do it sooner than later.

Looking at the www.modpython.org log we've only had one download of the
tgz file so far, which isn't encouraging :-)

Grisha

On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> You can get the sneak preview of 3.1.1 beta here:
>
> http://www.modpython.org/tmp/3.1.1b/
>
> Please download it, then do the usual
>
> $ ./configure --with-apxs=/wherever/it/is
> $ make
> $ (su)
> # make install
>
> Then
>
> $ cd test
> $ python test.py
>
> And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris 
would
> be nice... (as well as Panther, if you have it).
>
> Also, Windows folks - please make sure that this binary isn't screwed
> like the last one. This one I think _really_ works with 2.3 :-)
>
> Please respond to the list with your results ASAP so we can announce 
this
> puppy!
>
> Thank you very much,
>
> Grisha
>




From perry.tew at cibavision.novartis.com  Wed Oct 15 15:56:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFAFFA7F02.B4ABAB19-ON85256DC0.006D4B2B-85256DC0.006D81FE@EU.novartis.net>

Yes, I was using the worker MPM with the same configuration.  Later 
tonight, I have to create another apache/mod_python instance.  I will 
start with 3.1.0a and capture the error log.  Then, I will upgrade to 
3.1.1b and capture that error log.  I'll send you the relevant portions 
for comparion.  Will that be useful?

Thanks,
Perry






"Gregory (Grisha) Trubetskoy" <grisha@apache.org>
10/15/2003 03:42 PM

 
        To:     Perry Tew/CV/Novartis@PH
        cc: 
        Subject:        Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results



In your last test (when it used to say creating 200 session mutexes), were
you using worker with the same configuration?

Grisha


On Wed, 15 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> Grisha,
>
> I've downloaded, compiled, and installed 3.1.1b.  Everything with my
> application appears to function correctly.   However, I did
> see a change with the initial message in my error log (sorry, I don't 
have
> the previous message).
>
> Is the following line correct?  Why does it say -1 max processes?  With
> 3.1.0a, it used to say "Creating 200 session mutexes"
> [Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session
> mutexes based on -1 max processes and 50 max threads
>
> If you're not concerned, I'm not, but it is different, so I mention it.
>
>
> I'm using the worker mpm
> ( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b
> mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
> on Solaris
> [
> System = SunOS
> Node = usatux29
> Release = 5.8
> KernelID = Generic_108528-13
> Machine = sun4u
> BusType = <unknown>
> Serial = <unknown>
> Users = <unknown>
> OEM# = 0
> Origin# = 1
> NumCPU = 2
> ]
>
>
> Here's the relevant httpd.conf ( need more?)  I know my worker config is
> probably whacked a little.
> I'm trying to keep a small amount of children with a high thread count.
> Timeout 300
> KeepAlive On
> MaxKeepAliveRequests 100
> KeepAliveTimeout 15
>
>
> <IfModule worker.c>
> StartServers         3
> MaxClients         200
> MinSpareThreads     25
> MaxSpareThreads     50
> ThreadsPerChild     50
> MaxRequestsPerChild 500
> </IfModule>
>
>
> Other than that one confusing error message, which may just be due to my
> ignorance of Apache, I had no issues.
>
>
> Thanks,
> Perry Tew
>
>
>
>
>
>
> I think I didn't make it clear in the last message:
>
> In order for this release to be officially announced, at least a few
> people on this list need to try it and send in a +1 indicating that it
> worked on their system (along with some desciption of what their system
> is). *Anyone* on this list can do this, you don't have to be an official
> committer or anything of that sort.
>
> Doing a test could probably take as little as 10 minutes, and I'd
> encourage you to do it sooner than later.
>
> Looking at the www.modpython.org log we've only had one download of the
> tgz file so far, which isn't encouraging :-)
>
> Grisha
>
> On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > You can get the sneak preview of 3.1.1 beta here:
> >
> > http://www.modpython.org/tmp/3.1.1b/
> >
> > Please download it, then do the usual
> >
> > $ ./configure --with-apxs=/wherever/it/is
> > $ make
> > $ (su)
> > # make install
> >
> > Then
> >
> > $ cd test
> > $ python test.py
> >
> > And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> > 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris
> would
> > be nice... (as well as Panther, if you have it).
> >
> > Also, Windows folks - please make sure that this binary isn't screwed
> > like the last one. This one I think _really_ works with 2.3 :-)
> >
> > Please respond to the list with your results ASAP so we can announce
> this
> > puppy!
> >
> > Thank you very much,
> >
> > Grisha
> >
>
>
>



From jm at eemsystems.cjb.net  Wed Oct 15 15:03:24 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] form, req problem
Message-ID: <1066248203.4790.13.camel@eemsystems.com>

this scrips was working good, but now i can't find what is the problem.

This was working in the following manner:

the firt time you call testpy control=''

then testpy return a html form with the variable: Fecha_Inicial,
Fecha_Final (in this case) an a hidden control with value '1'

The form action is the same function testpy, then in the second pass
control must be '1'... but this is not actualy the case.

I'm using python from debian/unstable



***********************************************************************

def testpy(req,control=''):
	if control=='':
		    return
aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
Medicos")
	elif control=='1':
		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
		if len(Fecha_Final)<3:
				Fecha_Final=Fecha_Inicial
	return Fecha_Inicial,Fecha_Final,control

************************************************************************
#module: aaa


def simpleform2(action,strparametros,titulo='',insertar=''):
	import string
	s='''<form method="post" action="''' +action+ '"><input type="hidden"
name="control" value="1">'
	parametros=string.split(strparametros,',')
	if len(strparametros)>2:
		s=s+"""<table><caption>"""+titulo+"""</caption>"""
		for i in parametros:
			s=s+"""<tr><td>"""+i+''':</td>
	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
value="">
	</td>
	</tr>'''
		s=s+'</table>'
	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
	return s
***************************************************************************

From jm at eemsystems.cjb.net  Wed Oct 15 15:44:15 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] form, req problem
In-Reply-To: <1066248203.4790.13.camel@eemsystems.com>
References: <1066248203.4790.13.camel@eemsystems.com>
Message-ID: <1066250655.5340.10.camel@eemsystems.com>

I run this scripts from another client machine and are working good.
look like browser problem in Debian/unstable.

thank you,

JM

El mi?, 15-10-2003 a las 15:03, Julio Mendoza escribi?:
> this scrips was working good, but now i can't find what is the problem.
> This was working in the following manner:
> 
> the firt time you call testpy control=''
> 
> then testpy return a html form with the variable: Fecha_Inicial,
> Fecha_Final (in this case) an a hidden control with value '1'
> 
> The form action is the same function testpy, then in the second pass
> control must be '1'... but this is not actualy the case.
> 
> I'm using python from debian/unstable
> 
> 
> 
> ***********************************************************************
> 
> def testpy(req,control=''):
> 	if control=='':
> 		    return
> aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
> Medicos")
> 	elif control=='1':
> 		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
> 		if len(Fecha_Final)<3:
> 				Fecha_Final=Fecha_Inicial
> 	return Fecha_Inicial,Fecha_Final,control
> 
> ************************************************************************
> #module: aaa
> 
> 
> def simpleform2(action,strparametros,titulo='',insertar=''):
> 	import string
> 	s='''<form method="post" action="''' +action+ '"><input type="hidden"
> name="control" value="1">'
> 	parametros=string.split(strparametros,',')
> 	if len(strparametros)>2:
> 		s=s+"""<table><caption>"""+titulo+"""</caption>"""
> 		for i in parametros:
> 			s=s+"""<tr><td>"""+i+''':</td>
> 	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
> value="">
> 	</td>
> 	</tr>'''
> 		s=s+'</table>'
> 	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
> 	return s
> ***************************************************************************
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From dpopowich at mtrsd.k12.ma.us  Thu Oct 16 09:16:24 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <20031015125039.H33867@onyx.ispol.com>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
	<20031015125039.H33867@onyx.ispol.com>
Message-ID: <16270.39464.384476.99879@gargle.gargle.HOWL>


Gregory (Grisha) Trubetskoy writes:
> 
> 
> On Wed, 15 Oct 2003, Daniel J. Popowich wrote:
> 
> >       foo = form.getlist('foo')
> >
> > If found useful by many, perhaps they can be included in the 3.1
> > distribution?
> 
> getfirst and getlist are already in there, but thanks anyway!
> 

I didn't see them in 3.1.0a, but I do see them in CVS.  Great!

Thanks,

Dan

From dagurp at heimsnet.is  Thu Oct 16 13:48:29 2003
From: dagurp at heimsnet.is (=?iso-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] python 2.3.2 binary
Message-ID: <001501c393ec$2eafbd60$1e01a8c0@dagur>


Hi

When can I expect a python 2.3 binary for mod_python 2.78? I'm on windows and I probably can't compile it myself. I'm having all sorts of problems because of this

thanks
Dagur
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/9e4cd4fb/attachment.htm
From grickert at coldstorage.com  Thu Oct 16 15:56:08 2003
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] RE: Testing 3.1.1b
In-Reply-To: <200310161700.h9GH041D052838@slash.mediapulse.com>
Message-ID: <DIEMKLHLKFCCPAEPDMHKMENECEAA.grickert@coldstorage.com>

+1  ;)

Grisha,

This is in response to you asking for *Anyone* to test this version.

Mod_Python 3.1.1b (mod_python-3.1.1b.win32-py2.3.exe) seems to be working
great with Python 2.3 on my system

Win2K, Python 2.3.2, Apache 2.0.47

My comprehensive test suite :) consists of a few web pages that use a custom
PythonHandler, Cheetah templates, and cx_Oracle, to allow a customer to log
in, track their session, and produce some dynamic reports.  Everything
functioned as before.  I'm very happy that I can move up to Python 2.3 & mp
3.1.  Keep up the great work!

Gerrat Rickert

P.S.  I have been watching the modpython home page, waiting for a Win binary
compatable with Python 2.3.  Now that this is available, you may want to
update that page so maybe more people will download it & try it.

Thanks again.


From modpython at lists.bumpern.de  Thu Oct 16 23:19:52 2003
From: modpython at lists.bumpern.de (Alexander Neumann)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] mod_python 2.7.8 broken on python2.3?
Message-ID: <20031016211952.GB8454@necromancer.hoffentlich.net>

Hi,

I just started having a look at mod_python, it looks really great, but
there are a few strange exceptions thrown at points where (IMHO) no
exception should be raised.

For example if I'm using this file (test.py):
=======
from mod_python import apache

def test(req):
    return "just a test\n"
=======


Calling the test-function directly works as expected:
$ dog --no-header http://localhost/~fd0/test/test
just a test


Calling only the file fails and throws a 404:
$ dog --no-header http://localhost/~fd0/tlis/test
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>404 Not Found</TITLE>
</HEAD><BODY>
<H1>Not Found</H1>
The requested URL /~fd0/tlis/test was not found on this server.<P>
<HR>
<ADDRESS>Apache/1.3.28 Server at localhost Port 80</ADDRESS>
</BODY></HTML>


But if the URL ends with a slash ("/"), an exception is thrown and I
don't know if that's the normal behaviour (I would expect a 404, just
like the example above):
$ dog --no-header http://localhost/~fd0/tlis/test/
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range




Another problem is using the file (example.py):
======
__auth_realm__ = "Members only"


def hello(req):
    def __auth__(req, user, passwd):
        if user == "eggs" and passwd == "spam" or \
           user == "joe" and passwd == "eoj":
            return 1
        else:
            return 0

    def __access__(req, user):
        if user == "joe":
            return 1
        else:
            return 0

    return 'hello<br><a href="logout?username=%s"> logout </a>' % req.connection.user

def logout(req, username=""):
    def __auth__(req, user, passwd):
        if not username == "":
            return 0
        else:
            return 1
    return '<a href="hello"> test it! </a>'
======


Calling the logout function throws an exception, too:
$ dog --no-header http://localhost/~fd0/tlis/example/logout
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 135, in handler
    object = resolve_object(req, module, func_path, realm, user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 296, in resolve_object
    user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 224, in process_auth
    __auth__ = new.function(__auth__, globals())

TypeError: arg 5 (closure) must be tuple




Is this a bug or a feature?


- Alexander

-- 
"Good luck... The only good thing about being compromised is that it
makes you more paranoid about being on the net."
 - Jamie Lawrence on debian-security
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/22b82c8e/attachment.bin
From gdamjan at mail.net.mk  Fri Oct 17 17:48:40 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:47:48 2004
Subject: [mod_python] way to use PSP from publisher handler?
In-Reply-To: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
References: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
Message-ID: <20031017154840.GH6261@legolas.on.net.mk>

> I've tried searching the docs and FAQ, but didn't find an immediate 
> answer to this.  I'd like to use the Publisher handler for all the 
> logic of the page, but I'd like the then forward (internally, not with 
> a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
> is great!).
> 
> Is there a way to use PSP as a template mechanism from within a 
> publisher handler?  I've seen Cheetah, which acts the way I would want, 
> but if I can use the builtin PSP, all the better. :)

Whats wrong with using PSP and Publisher in paralel?
You can do it. In the same directory. I've added an entry in the FAQ how
to do it.



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cs1spw at bath.ac.uk  Sat Oct 18 18:56:22 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] New Web SIG
Message-ID: <3F91D326.6000805@bath.ac.uk>

In case people on this list haven't heard about it yet, the powers that 
be have created a new Python Web special interest group. The SIG has a 
dual purpose: it will host discussions of ways of improving Python's web 
client abilities (httplib and the like) and also discussions of 
improvements to be made to the CGI module and other related server-side 
topics.

The server side discussions would certainly benefit from participants 
with experience of mod_python ;)

http://www.python.org/sigs/web-sig/

Cheers,

Simon Willison
http://simon.incutio.com/

From DHANCOCK at arinc.com  Sun Oct 19 00:27:02 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>

I'm new to mod_python, and I'm stuck already.  I'm working through the
examples in the documentation, and even after careful typing (and cutting
and pasting from the manual), I can't get the authentication example to
work.  The line:

	user = req.connection.user

Gives an attribute error ('user').  As shown in the manual, I'm calling
req.get_basic_auth_pw() first, but still no joy.

If I try/except to trap the attribute error, I avoid the 500 Server Error
message, but the authentication still doesn't work.

Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
got right going right now).  The mod_python is a precompiled binary.

I'll be grateful for any assistance I can get.  I'm trying to recreate a
mod_perl module (AuthCookie) which implements a ticket-based authentication
mechanism.  It works well in Perl, but my group standardized on Python and
we'd like to keep using Python for Apache modules, too.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031019/4a6519b3/attachment.htm
From grisha at modpython.org  Sun Oct 19 14:20:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.connection.user generates AttributeError
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
Message-ID: <20031019141946.L36129@onyx.ispol.com>


it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 17:20:36 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806A@exanpmb3.arinc.com>

Grisha: Thanks for getting back to me on this. I found req.connection.user
in the PDF manual dated 4/19/2002, Section 3.3, page 12.  And now that I
look at the title page, it's for 2.7.8, NOT for 3.0.3.  I downloaded the
manual to match my installation, and it shows req.user in that section.

My apologies for not having RTFMed better--I read, just the wrong one.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Sunday, October 19, 2003 2:21 PM
To: Hancock, David (DHANCOCK)
Cc: 'mod_python@modpython.org'
Subject: Re: [mod_python] req.connection.user generates AttributeError



it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what
I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based
authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 19:57:32 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>

Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From DHANCOCK at arinc.com  Sun Oct 19 20:25:52 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] RE: req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806E@exanpmb3.arinc.com>

Sorry to reply to my own post, but further reading of the list archives got
me the solution.  I moved the LoadModule directive for mod_python to be
first in the list, and voila! it started working right.  There was a thread
about this in July of this year.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Hancock, David (DHANCOCK) 
Sent: Sunday, October 19, 2003 7:58 PM
To: 'mod_python@modpython.org'
Subject: req.user always returns None?


Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From gah at research.att.com  Sun Oct 19 22:24:11 2003
From: gah at research.att.com (Glenn A. Hochberg)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <3F93474B.9070105@research.att.com>

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user instead.  Also note that you *can* assign a value to req.user -- it's not read-only as listed in the docs.

-Glenn Hochberg



From grisha at modpython.org  Sun Oct 19 23:21:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.user always returns None?
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
Message-ID: <20031019231815.K41524@onyx.ispol.com>



On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> def authenhandler(req):
>     user = req.user
>     pw = req.get_basic_auth_pw()
>     req.log_error(str(user) + ' ' + str(pw))
>     if user == "david" and pw == "secret":
>         return apache.OK
>     else:
>         return apache.HTTP_UNAUTHORIZED

The current docs neglect to mention this because at the time it seemed
like it was no longer necessary, but the call to get_basic_auth_pw()
should always _preceed_ the use of req.user. If the swap the first two
lines, it will work (regardless of position of LoadModule within the
config file).

Grisha
From mikeklein at sbcglobal.net  Sun Oct 19 22:40:40 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] 
	Problems building apache1 with threaded python and mod_python
Message-ID: <3F937558.1010206@sbcglobal.net>

Can this even be done? The docs/faqs seem vague on the subject.

I am building on a RH9 system, with apache1, mod_python, and python w/o 
threads. This seemed to be the only way I could get mod_python to build. 
I always get errors regarding pthread symbols not being found. Example:

Cannot load /usr/local/apache/libexec/mod_python.so into server: 
/usr/local/apache/libexec/mod_python.so: undefined symbol: pthread_sigmask

I recall earlier that I was able to get past a similar error (happened 
with no threads build I think) by adding "-lutil" to LIBS in 
src/Makefile, but I cannot get rid of the above problem.

I need a threaded-python/mod_python as I'm trying to run ZSI and SOAPpy 
applications and they seem to require thread support.

Any ideas would be appreciated...

I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
already built in, but I require apache1 as there are a few modules I 
want to use which aren't apache2 yet...

mike

From mikeklein at sbcglobal.net  Mon Oct 20 00:49:33 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] 	Problems building apache1 with threaded python
	and mod_python...solved
In-Reply-To: <3F937558.1010206@sbcglobal.net>
References: <3F937558.1010206@sbcglobal.net>
Message-ID: <3F93938D.1030801@sbcglobal.net>

My bad...I need to follow the docs a little more often...

I have RH9, Apache1.3.27, mod_python-2.7.8.

I first tried with Python 2.2.3. No go. Then I tried with 2.3.2...no go. 
In fact, mod_python even thought it was a nothread build.

Then I actually followed directions and got release 2.1.3, which 
mod_python does state as a prerequisite. It worked. Didn't even get any 
thread symbol wierdness when starting apache or had to patch makefiles 
with -lutil to fix openpty wierdness..

All is well now...I can make SOAPpy invocations. No more thread complaints.

Should mod_python be able to work with latest Python releases with 
threads enabled? I'm not sure what I'm missing in later python releases.


mike

Mike Klein wrote:

> Can this even be done? The docs/faqs seem vague on the subject.
>
> I am building on a RH9 system, with apache1, mod_python, and python 
> w/o threads. This seemed to be the only way I could get mod_python to 
> build. I always get errors regarding pthread symbols not being found. 
> Example:
>
> Cannot load /usr/local/apache/libexec/mod_python.so into server: 
> /usr/local/apache/libexec/mod_python.so: undefined symbol: 
> pthread_sigmask
>
> I recall earlier that I was able to get past a similar error (happened 
> with no threads build I think) by adding "-lutil" to LIBS in 
> src/Makefile, but I cannot get rid of the above problem.
>
> I need a threaded-python/mod_python as I'm trying to run ZSI and 
> SOAPpy applications and they seem to require thread support.
>
> Any ideas would be appreciated...
>
> I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
> already built in, but I require apache1 as there are a few modules I 
> want to use which aren't apache2 yet...
>
> mike
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From DHANCOCK at arinc.com  Mon Oct 20 08:21:33 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88072@exanpmb3.arinc.com>

Thanks Glenn and Grisha.

To recap:

1. Putting the assignment from req.user AFTER the req.get_basic_auth_pw call
fixes the AttributeError, and the LoadModule for mod_python can now be
anywhere in the list of Apache modules.

2. req.user can indeed be assigned to--smart stuff.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Glenn A. Hochberg [mailto:gah@research.att.com] 
Sent: Sunday, October 19, 2003 10:24 PM
To: 
Subject: Re: [mod_python] req.connection.user generates AttributeError


> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user
instead.  Also note that you *can* assign a value to req.user -- it's not
read-only as listed in the docs.

-Glenn Hochberg



_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From perry.tew at cibavision.novartis.com  Mon Oct 20 08:52:15 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <OF2CAEE580.6333EEBF-ON85256DC5.0044A937-85256DC5.0046B410@EU.novartis.net>

David,
   I just wrote some code for ticket based authentication.  It's not 
completely where I want it, but it may provide you a framework to get 
started.  It works for me, but I'm using client certificates for 
authentication.   You'd need to change the TicketMaster.py script to check 
for basic authentication.  Here's the code, along with my httpd.conf 
settings.  If you do use it, I would appreciate criticism and suggestions 
for improvement as I'm new to python and may be doing some Java-ish things 
that have better solutions in Python.  Also, it's still a work in progress 
concerning documentation.  FYI, I basically ported the TicketMaster 
example in the "Writing Apache modules in Perl and C" book.

Inside of my TicketAccessHandler.py is also some authorization stuff going 
against an RDBMS.  It's pretty sweet.  It's set for an intranet to allow 
managers of content to handle adding and deleting users from roles rather 
than bogging down a site admin with such mundane tasks.  It can run 
completely in memory and updates are event driven and take place in a 
cleanup handler.  If you're interested in that, I can sent you the code 
for it as well (sql, front end, etc), but I suspect your first priority is 
the md5 ticket cookie, so at least the TicketTool.py should be an pretty 
exact match of what you may need.

Hope this helps,
-Perry Tew




# ===========================================================
# ===========================================================
# ===========================================================
# TicketAuthenHandler.py ======================================
from mod_python import apache
import TicketTool

from ApachePool import ApachePool
dbpool = ApachePool()


def accesshandler(req):
        #apache.log_error("[TicketAuthenHandler] in handler() method")

# ===========================================================
# Authenication secition.  This handler contains both authen
# and authz.  This is because it doesn't use the default
# Basic authentication.  Without using Basic, I can't get the
# authz handler to be called.  So, I have them together here
# ===========================================================

        # the NameError should only happen once in the life of the apache 
child process 
        global ticketTool
        try:
                result, msg, user = ticketTool.verify_ticket(req)
        except NameError:
                # if the ticketTool hasn't been created yet, then do so.
                ticketTool = TicketTool.TicketTool(req)
                result, msg, user = ticketTool.verify_ticket(req)


        #apache.log_error("[TicketAuthenHandler] verify_ticket result was 
" + str(result))
        #apache.log_error("[TicketAuthenHandler] verify_ticket msg was " + 
msg)

        # ditch the call if something wasn't correct
        if result == 0:
                #apache.log_error(msg, apache.APLOG_WARNING)
                cookie = ticketTool.make_return_address(req)
                cout = cookie.output(header="")
                #apache.log_error( "cookie going out:" + cout)
                req.err_headers_out['Set-Cookie'] = cout
                req.err_headers_out['Pragma'] = 'no-cache'
                req.err_headers_out['Cache-Control'] = 'no-cache'
                req.err_headers_out['Expires'] = '-1'
                return apache.HTTP_FORBIDDEN



# ===========================================================
# Authorization section
# Make sure user's roles are sufficient to access uri
# ===========================================================

        #apache.log_error("[TicketAuthzHandler] in handler() method")

        uri_roles = get_uri_roles(req)
        #apache.log_error("URI ROLES:" + str(uri_roles)) 

        user_roles = get_user_roles(req, user)
        #apache.log_error("USER ROLES:" + ",".join(user_roles.keys())) 

        for a_uri, some_roles in uri_roles.items():
                #apache.log_error( "AUTHZ: checking " + a_uri )
                unauthorized = 1
                if some_roles is not None:
                        for a_role in some_roles:
                                #apache.log_error("AUTHZ: examining role:" 
+ a_role)
                                if user_roles.has_key(a_role):
                                        #apache.log_error("AUTHZ: MATCH 
>>" + a_role)
                                        unauthorized = 0
                else:
                        #apache.log_error( "AUTHZ: " + a_uri + " is not 
protected" )
                        unauthorized = 0


                if unauthorized:
                        #apache.log_error("AUTHZ: FAILED")
                        # can't return FORBIDDEN, since that may be used
                        # by the TicketAuthenHandler to redirect to the 
ticket
                        # master, and I sure don't want to do that for a 
missing
                        # role.
                        return apache.HTTP_PAYMENT_REQUIRED

        return apache.OK

# ===========================================================
# End of main handler
# ===========================================================


def get_user_roles(req, user):


        global userCache
        global dbpool
        try:
                if userCache.has_key(user):
                        #apache.log_error("found user roles in cache") 
                        return userCache[user]
        except NameError:
                #apache.log_error("userCache doesn't exist, creating it") 
                userCache = {}

        #apache.log_error("userCache: " + str(userCache.keys()))


        #apache.log_error("DB: retrieving user roles from database") 
        db = dbpool.get_connection()
        c = db.cursor()
        c.execute( "SELECT ROLE_NAME FROM AUTH_USER_ROLES WHERE DN ='%s'" 
% (user,))
        rset = c.fetchall()
        roles = {}
        for row in rset:
                roles[row[0]] = None

        userCache[user] = roles
        return roles
        c.close()
        db.commit()
        db.close()



def get_uri_roles(req):
        """
                break up the uri, make sure each part or substring of the 
uri is cached, then
                retrieve the roles from the uriCache
        """
        global uriCache
        global dbpool

        paths = get_paths(req)
        uri_roles = []   # list of dicts 

        try:
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
        except NameError:
                #apache.log_error("uriCache doesn't exist, creating it") 
                init_uri_cache(req)
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
 

        if len(uncached_paths) > 0:
                #apache.log_error("DB: retrieving uncached uri roles from 
database: " + str(uncached_paths)) 
                path_str = ",".join(map(add_quotes, uncached_paths))

                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI WHERE URI IN 
(%s)" % path_str
                c.execute( sql )
                rset = c.fetchall()
                for row in rset:
                        if not uriCache.has_key(row[0]):
                                uriCache[row[0]] = []
                        uriCache[row[0]].append(row[1])
                c.close()
                db.commit()
                db.close()
 

                # once all of the request_uri have been updated in the 
database, there
                # may be more that need updating.  For this, assign an 
empty hash for those
                # uris

                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
                for i in uncached_paths:
                        uriCache[i] = None


        uri_roles = {}
        for i in paths:
                uri_roles[i] = uriCache[i] 

        return uri_roles
 


def init_user_cache(req):
        global userCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                c.execute( "SELECT DN, ROLE_NAME FROM AUTH_USER_ROLES")
                rset = c.fetchall()
                tmp = {}
                roles = {}
                for row in rset:
                        if tmp.has_key(row[0]) == 0:
                                tmp[row[0]] = {}

                        tmp[row[0]][row[1]] = None

                c.close()
                db.commit()
                db.close()
                userCache = tmp
        else:
                userCache = {}




def init_uri_cache(req):
        global uriCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI"
                c.execute( sql )
                rset = c.fetchall()
                tmp = {}
                for row in rset:
                        if not tmp.has_key(row[0]):
                                tmp[row[0]] = []
                        tmp[row[0]].append(row[1])

                uriCache = tmp
                c.close()
                db.commit()
                db.close()

        else:
                uriCache = {}




def add_quotes(val):
        return "'" + val + "'"
 


def get_paths(req):

        uri_path = req.parsed_uri[apache.URI_PATH]
        #apache.log_error("URI PATH:" + uri_path)
        dirs = uri_path.split("/")
        current_path = ''
        paths = []
        i = 0
        while i < len(dirs) - 1:
                if dirs[i] == '':
                        paths.append('/')
                else:
                #current_path = current_path + dirs[i] + '/'
                        current_path = current_path + '/' +  dirs[i]
                        paths.append(current_path)
                ##apache.log_error("URI PATH current path:" + 
current_path)
                i = i + 1

        paths.append(uri_path)
        #apache.log_error("URI PATH current path:" + str(paths))
        return paths


def update_cache(req, userParm=None, uriParm=None):
        """
        If user = None, do nothing for the userCache.
        If user = 'ALL', recreate the entire cache
        If user = other, then delete just that user from the cache
        The same applies to the uri.

        All of this crap should be moved to the Authz handler, eh?
        """

        global userCache
        global uriCache


        if userParm is not None:
                if userParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE USER CACHE")
                        init_user_cache(req)
                else:
                        if userCache.has_key(userParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from userCache" % userParm)
                                del(userCache[userParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in userCache" % userParm)
 

        if uriParm is not None:
                if uriParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE URI CACHE")
                        uriCache = {}
                else:
                        if uriCache.has_key(uriParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from uriCache" % uriParm)
                                del(uriCache[uriParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in uriCache" % uriParm)
 

# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketMaster.py =============================================

#TODO - this method should verify that the user indeed exists in the user
#table of the auth system

import TicketTool
import Cookie
from mod_python import apache
from mod_python.util import FieldStorage

ticketTool = None

def handler(req):
        apache.log_error( "[TicketMaster] calling handler() method" )

        # this will only need doing once during the life of the apache 
child process
        global ticketTool
        if ticketTool == None:
                ticketTool = TicketTool.TicketTool(req)
 

        req.add_common_vars()

        request_uri = None

        # 1. check for a paramater named request_uri
        # 2. check for a cookie named request_uri
        # 3. check for a req.prev uri

        fields = FieldStorage(req)
        if fields.has_key('request_uri'):
                request_uri = fields['request_uri']
        else:
                apache.log_error( "[TicketMaster] no request_uri param" )

                if req.prev:
                        request_uri = req.prev.unparsed_uri
                        apache.log_error( "[TicketMaster] have a prev 
request_uri:" + request_uri )
                else:
                        cookies = Cookie.SimpleCookie()
                        try:
                                apache.log_error( "[TicketMaster] cookie 
headers_in:" + req.headers_in['Cookie'] )
                                cookies.load(req.headers_in['Cookie'])
                                request_uri = cookies['request_uri'].value
                                #request_uri = cookies['request_uri']
                                apache.log_error( "[TicketMaster] have a 
cookie request_uri:" + str(request_uri) )
                        except KeyError:
                                apache.log_error( "[TicketMaster] no 
cookies were found, what now?" )
 

        # if nothing by here, display and error and move on with life.
        # it's too short 
        if request_uri == None:
                apache.log_error( "[TicketMaster] no request_uri could be 
found" )
                no_cookie_error(req)
                return apache.OK



        user = ''
        try:
                user = req.subprocess_env['SSL_CLIENT_S_DN']
                apache.log_error("[TicketMaster] user dn:" + user)
        except KeyError:
                apache.log_error("[TicketMaster] no SSL DN env variable!" 
)
                display_missing_cert_screen(req, request_uri)
                return apache.OK


        result = 0
        msg = ''

        if user:
                # I don't authenticate here, since the SSL layer does that
                # for me

                try:
                        ticket = ticketTool.make_ticket(req, user)
                        go_to_uri(req, request_uri, ticket)
                        return apache.OK

                except:
                        apache.log_error( 'could not create ticket, 
missing secret key?', apache.APLOG_ERR)
                        raise
                        #return apache.HTTP_INTERNAL_SERVER_ERROR

        apache.log_error( "[TicketMaster] no req.user, so cannot make 
ticket" )
        display_missing_cert_screen(req, request_uri)
        return apache.OK


def go_to_uri(req, request_uri, ticket):
        apache.log_error( "[TicketMaster] sending refresh to browser to go 
here:" + request_uri)
        apache.log_error( "[TicketMaster] setting the following cookie:" + 
ticket.output(header=""))
        req.content_type = 'text/html'
        req.headers_out['Set-Cookie'] = ticket.output(header="")
        # the following line causes MSIE to wig out, so don't uncomment 
it.
        #req.headers_out['Refresh'] = '1;' + request_uri
        req.headers_out['Pragma'] = 'no-cache'
        req.headers_out['Cache-Control'] = 'no-cache'
        req.headers_out['Expires'] = '-1'
        #req.send_http_header()
        req.write("""
                <html>
                        <head>
                                <title>Successfully Authenticated</title>
                        </head>
                        <body>
                                <h4>Congratulations, you have successfully 
authenticated</h4>
                                <p>Click <a href="%s">here</a> to 
continue</p>
                                <p>A nice explanation about the cookie I 
just set would be swell</p>
                        </body>
                </html>

        """ % request_uri)
        return apache.OK
 


def display_missing_cert_screen(req,request_uri):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Missing Entrust PKI 
Certificate</title>
                        </head>
                        <body>
                                <p>The page you attempted to view (%s) was 
protected.</p>
                                <p>Protection for this web site is based 
on Digital Certificate technology.
                                You need a PKI certificate to access this 
portion of the website.
                                Contact Human Resources.</p>
                        </body>
                </html>""" % request_uri)

def no_cookie_error(req):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Unable to Log In</title>
                        </head>
                        <body>
                                <h4>Unable to Log In</h4>
                                <p>This site uses cookies for security. 
Your browser must be capable
                        of processing cookies <em>and</em> cookies must be 
activated. 
                                Please set your browser to accept cookies, 
then press the
                        <strong>reload</strong> button.</p>
                                <hr>
                        </body>
                </html>""")



# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketTool.py==============================================
import md5
import Cookie
import time
from mod_python import apache

defaults = {
        'TicketExpires':60000,
        'TicketSecret':'/home/webadmin/.secretkey',
        'TicketDomain':'.cv.usat'
}


class TicketTool(dict):
        serverName = ''

        def __init__(self, req):
                """
                args: self
                          req: mod_python request object
                """

                # set up the config items
                opts = req.get_options()
                for key,value in defaults.items():
                        try:
                                avalue = opts[key]
                        except KeyError:
                                avalue = value
                        self[key] = avalue

 
        def authenticate(self,user,passwd):
                # since this is going to run behind SSL client
                # cert authtication, just return true 
                return 1



        def fetch_secret(self):
                secret = ""
                try:
                        secret = self['SECRET_KEY']
                except KeyError:
                        secret = open(self['TicketSecret']).read()
                        self['SECRET_KEY'] = secret

                return secret



        def invalidate_secret(self):
                del(self['SECRET_KEY'])


        def make_ticket(self, req, username):
                """
                usage: cookie = ticketTool.make_ticket(req, username)
                Creates a cookie containing the secure user information
                """ 
 
                ip_address = req.connection.remote_ip
                expires = str(self['TicketExpires'])
                now = str(time.time())
                secret = self.fetch_secret()
                m = md5.new()
                m.update(secret+ip_address+now+expires+username)
                hash = m.hexdigest()

                cookie = Cookie.SimpleCookie()
                cookie["Ticket"] = 
ip_address+","+expires+","+username+","+now+","+hash
                cookie["Ticket"]['path'] = '/'
                cookie["Ticket"]['domain'] = self['TicketDomain']
                cookie["Ticket"]['max-age'] = self['TicketExpires'] * 3600 

                # TODO - is the expires in seconds?  If so, jack this up!
 
                return cookie

 

        def verify_ticket(self,req):
                """
                usage: result, msg, user = ticketTool.verify_ticket(req)
                """

                ticket = None 
                cookie = Cookie.SimpleCookie()

                # could get KeyError in two places.
                # 1. if there are no cookies
                # 2. if there isn't a cookie named 'Ticket'
                try:
                        cookie.load(req.headers_in['Cookie'])
                except KeyError:
                        return 0, "user has no cookies", 'noone'

                try:
                        ticket = cookie['Ticket'].value
                        apache.log_error("Ticket Cookie value:" + 
str(ticket))
                except KeyError:
                        return 0, "user has no ticket cookie", 'noone'


                ip, expires_s, user, timestamp_s, hash = ticket.split(",")
 
                apache.log_error("[Ticket Cookie] hash:" + hash)
                apache.log_error("[Ticket Cookie] user:" + user)
                apache.log_error("[Ticket Cookie] time:" + timestamp_s)
                apache.log_error("[Ticket Cookie] expires:" + expires_s)
                apache.log_error("[Ticket Cookie] ip:" + ip)

                timestamp = float(timestamp_s)
                expires = int(expires_s)

                if ip != req.connection.remote_ip:
                        return 0, "IP address mismatch in ticket", 'noone'

                if time.time() - timestamp / 60 < expires:
                        return 0, "ticket has expired", 'noone'

                secret = self.fetch_secret()

 
                m = md5.new()
                m.update(secret+ip+timestamp_s+expires_s+user)
                new_hash = m.hexdigest()

                if hash != new_hash:
                        self.invalidate_secret()
                        return 0, 'ticket mismatch', 'noone'


                req.user = user
                return 1, 'ok', user
 
 

        def make_return_address(self, req):
                """
                usage: cookie = ticketTool.make_return_address(req)
                """

                protocol = 'http://'
                if req.get_options().has_key('is_ssl'):
                        protocol = 'https://'
 
                request_uri = protocol + req.server.server_hostname + ':' 
+ str(req.server.port) + req.unparsed_uri

                cookie = Cookie.SimpleCookie()
                cookie['request_uri'] = request_uri
                cookie['request_uri']['domain'] = self['TicketDomain']
                cookie['request_uri']['path'] = '/'

                return cookie


# ===========================================================
# ===========================================================
# ===========================================================
# HTTPD.CONF: ==============================================

<Macro CertSecurity>
        PythonAccessHandler TicketAuthenHandler
        PythonCleanupHandler TicketCleanupHandler
        ErrorDocument 403 https://usatux29.cv.usat:22221/ticketMaster
        #ErrorDocument 402 /unauthorized.html
        ErrorDocument 402 /manager?_action=error_doc_unauth
        PythonOption TicketSecret /home/tewpe1/.secretkey

 #==================================================================
        # PythonOption fullyLoadCache ::= no|yes (default is no)
        # This option directs the Authen handler whether to fully load the
        # cache upon child startup or cache refresh
        PythonOption fullyLoadCache yes
 #==================================================================

 #==================================================================
        # PythonOption is_ssl ::= any value you wish
        # only set is_ssl to something if this url is under ssl.  It 
doesn't
        # matter what it's set to, only that it exists.  It is used to 
help
        # construct the redirect_url correctly

        #PythonOption is_ssl yes
 #==================================================================

</Macro>

<Directory "/web/devel/tewpe1/py/apache2/htdocs/secure">
        Use CertSecurity
</Directory>

<Location /ticketMaster>
        SSLRequireSSL
        SSLOptions +StdEnvVars +ExportCertData

        SetHandler python-program
        PythonHandler TicketMaster
        PythonDebug On
        Order allow,deny
        Allow from all
        PythonOption TicketSecret /home/tewpe1/.secretkey

</Location>









"Hancock, David (DHANCOCK)" <DHANCOCK@arinc.com>
Sent by: mod_python-bounces@modpython.org
10/19/2003 12:27 AM

 
        To:     "'mod_python@modpython.org'" <mod_python@modpython.org>
        cc: 
        Subject:        [mod_python] req.connection.user generates AttributeError


I'm new to mod_python, and I'm stuck already.  I'm working through the 
examples in the documentation, and even after careful typing (and cutting 
and pasting from the manual), I can't get the authentication example to 
work.  The line:
        user = req.connection.user 
Gives an attribute error ('user').  As shown in the manual, I'm calling 
req.get_basic_auth_pw() first, but still no joy.
If I try/except to trap the attribute error, I avoid the 500 Server Error 
message, but the authentication still doesn't work.
Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and 
mod_python 3.0.3.  (My other computer is a Linux box, but this is what 
I've got right going right now).  The mod_python is a precompiled binary.
I'll be grateful for any assistance I can get.  I'm trying to recreate a 
mod_perl module (AuthCookie) which implements a ticket-based 
authentication mechanism.  It works well in Perl, but my group 
standardized on Python and we'd like to keep using Python for Apache 
modules, too.
Cheers! 
-- 
David Hancock | dhancock@arinc.com | 410-266-4384 _______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketTool.py
Type: application/octet-stream
Size: 3650 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketTool.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketAuthenHandler.py
Type: application/octet-stream
Size: 8256 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketAuthenHandler.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketMaster.py
Type: application/octet-stream
Size: 4425 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketMaster.obj
From neel at mediapulse.com  Mon Oct 20 10:25:12 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <C0FC22C08B82074A88B50061764157776B976A@johnson.mediapulse.net>

Would it make since to add a function req.get_basic_auth() that returns
a tuple of (username, passwd)?  For backwards compatibility a call to
get_basic_auth_pw() followed by getting the req.user could remain, but:

user, pw = req.get_basic_auth()

might be easier to follow and be gentler on new users

Mike


> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
> Sent: Sunday, October 19, 2003 11:21 PM
> To: Hancock, David (DHANCOCK)
> Cc: 'mod_python@modpython.org'
> Subject: Re: [mod_python] req.user always returns None?
> 
> 
> 
> 
> On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:
> 
> > def authenhandler(req):
> >     user = req.user
> >     pw = req.get_basic_auth_pw()
> >     req.log_error(str(user) + ' ' + str(pw))
> >     if user == "david" and pw == "secret":
> >         return apache.OK
> >     else:
> >         return apache.HTTP_UNAUTHORIZED
> 
> The current docs neglect to mention this because at the time it seemed
> like it was no longer necessary, but the call to get_basic_auth_pw()
> should always _preceed_ the use of req.user. If the swap the first two
> lines, it will work (regardless of position of LoadModule within the
> config file).
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From woodfucius at comcast.net  Mon Oct 20 20:21:31 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] 
	Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
Message-ID: <3F940483.8030702@comcast.net>

I am having some trouble getting mod_python 3.0.3 to compile on my 
system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03. 
Apache version is 2.0.47 and Python version is 2.3.2 - both were built 
from ports.  I know there is a port for mod_python 2.7.8, but I would 
rather run the newest version and anyway the port complains about 
building Python with WITHOUT-THREADS set no matter if I set it or not. 
I have included the output from ./configure and make below.  Any ideas?

woodfucius# ./configure
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr/bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) 
/usr/local/sbin/apxs
found /usr/local/sbin/apxs, we'll use this. Use --with-apxs to specify 
another.
checking Apache version... 2.0.47
checking for Apache libexec directory... /usr/local/libexec/apache2
checking for Apache include directory... -I/usr/local/include/apache2
checking for --with-python... no
checking for python... (cached) /usr/local/bin/python
checking Python version... 2.3
checking Python install prefix... /usr/local
checking for Py_NewInterpreter in -lpython2.3... (cached) no
checking what libraries Python was linked with... 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/local/include/python2.3
updating cache ./config.cache
creating ./config.status
creating Makefile
creating src/Makefile
creating Doc/Makefile
creating test/testconf.py
creating dist/setup.py
creating dist/Makefile
woodfucius# make

Compiling for DSO.

/usr/local/sbin/apxs -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-Wl,--export-dynamic   -pthread -lm 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
mod_python.lo mod_python.c && touch mod_python.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
_apachemodule.lo _apachemodule.c && touch _apachemodule.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3/src.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3.
woodfucius#

From grisha at modpython.org  Mon Oct 20 12:17:13 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] Problems building mod_python 3.0.3 on FreeBSD
 4.8-STABLE
In-Reply-To: <3F940483.8030702@comcast.net>
References: <3F940483.8030702@comcast.net>
Message-ID: <20031020121423.O48570@onyx.ispol.com>



On Mon, 20 Oct 2003, Adam Wood wrote:

> I am having some trouble getting mod_python 3.0.3 to compile on my
> system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03.
> Apache version is 2.0.47 and Python version is 2.3.2 - both were built
> from ports.  I know there is a port for mod_python 2.7.8

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha
From woodfucius at comcast.net  Mon Oct 20 21:56:18 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] 
	SOLVED: Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
In-Reply-To: <20031020121423.O48570@onyx.ispol.com>
References: <3F940483.8030702@comcast.net>
	<20031020121423.O48570@onyx.ispol.com>
Message-ID: <3F941ABA.8060003@comcast.net>

Gregory (Grisha) Trubetskoy wrote:

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha

Thanks Grisha.  I installed Python 2.2.3, used the mod_python3 port, and 
rebuilt Apache with --enable-threads and that solved the problem, guess 
I just needed to RTFM a bit more.  Thanks again!

Adam Wood



From tpc at csua.berkeley.edu  Tue Oct 21 11:12:46 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031021110347.J40781-100000@localhost.name>


hello all, I am trying to index and search mp3s in my Apache document
root.  Whenever executing a database select statement that retrieves
the URL and title (the filename minus the .mp3 extension) of mp3s whose
filenames contain the words I type into a web form, I get a "invalid
literal for float" error message.  The same script works fine on the
command line and in IDLE.  The error messages vary, and I sometimes see
"invalid literal for int" or "invalid literal for long" though now it
seems I just get "invalid literal for float."  Also the error seems to
come and go, and sometimes I get the results I want.  I have gotten this
type of message before when playing around with Python and trying to
convert, say, a string to int, but this has me scratching my head:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>


From tpc at csua.berkeley.edu  Tue Oct 21 11:17:38 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] invalid literal for float addendum
Message-ID: <20031021111643.Y40948-100000@localhost.name>


By the by rpm -q mod_python tells me:
mod_python-3.0.1-3


From neel at mediapulse.com  Tue Oct 21 14:45:49 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>

There's nor really enough info here to see the cause, but it's a MySQLdb
error, not a mod_python error.  Your doesn't show the SQL statement you
are trying to execute, but my guess is that the field in the MySQL table
is defined as a float and your trying to insert a string (the title).
Seeing a few lines of the python module in question would help though.

Mike

> -----Original Message-----
> From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu] 
> Sent: Tuesday, October 21, 2003 2:13 PM
> To: mod_python@modpython.org
> Subject: [mod_python] invalid literal for float
> 
> 
> 
> hello all, I am trying to index and search mp3s in my Apache document
> root.  Whenever executing a database select statement that retrieves
> the URL and title (the filename minus the .mp3 extension) of 
> mp3s whose
> filenames contain the words I type into a web form, I get a "invalid
> literal for float" error message.  The same script works fine on the
> command line and in IDLE.  The error messages vary, and I 
> sometimes see
> "invalid literal for int" or "invalid literal for long" though now it
> seems I just get "invalid literal for float."  Also the error seems to
> come and go, and sometimes I get the results I want.  I have 
> gotten this
> type of message before when playing around with Python and trying to
> convert, say, a string to int, but this has me scratching my head:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> in HandlerDispatch
>     result = object(req)
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
>     results = getMP3SearchResults(terms)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> getMP3SearchResults
>     results = getMatchingURLs(cursor)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> getMatchingURLs
>     cursor.execute(sql)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 95, in
> execute
>     return self._execute(query, args)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 114, in
> _execute
>     self.errorhandler(self, exc, value)
> 
>   File 
> "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> in defaulterrorhandler
>     raise errorclass, errorvalue
> 
> ValueError: invalid literal for float(): <insert any mp3 title here>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From tpc at csua.berkeley.edu  Tue Oct 21 12:06:37 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>
Message-ID: <20031021120144.O41208-100000@localhost.name>

I have attached my code, although I must ask if it was a MySQL error
why does my script work fine on the command line and in IDLE ?  Also, the
script seems to throw an error during a cursor.execute(sql) of a SELECT statement:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

<paste>
#!/usr/bin/env python
"""Created to solve bug that outputs invalid literal for float, int, long.
Simplifies main search script and assumes query will always be one word
long
"""
import MySQLdb

DB = 'test'

def getMP3SearchResults(terms):
	conn = MySQLdb.Connection(db=DB)
	cursor = conn.cursor()
	createTemporaryTable(cursor)
	identifyMatchingURLs(terms, cursor)
	results = getMatchingURLs(cursor)
	cursor.close()
	conn.close()
	return results

def createTemporaryTable(cursor):
	try:
		sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
		      url_id INT NOT NULL,
		      ) TYPE = InnoDB;"""
		cursor.execute(sql)
	except:
		print "Error in creating URLs_WITH_MATCHES table"

def identifyMatchingURLs(terms, cursor):
        sql = """INSERT INTO URLs_WITH_MATCHES
              SELECT DISTINCT WORDS_X_URL.url_id
              FROM WORDS_X_URL
              INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id
              WHERE WORDS.word = '% s' """ % terms
        cursor.execute(sql)

def getMatchingURLs(cursor):
	sql = """SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs
	      WHERE URLs_WITH_MATCHES.url_id = URLs.id
	      GROUP BY URLs_WITH_MATCHES.url_id"""
	cursor.execute(sql)
	results = cursor.fetchall()
	return results

def search(terms):
        results = getMP3SearchResults(terms)
        return results
</paste>

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> There's nor really enough info here to see the cause, but it's a MySQLdb
> error, not a mod_python error.  Your doesn't show the SQL statement you
> are trying to execute, but my guess is that the field in the MySQL table
> is defined as a float and your trying to insert a string (the title).
> Seeing a few lines of the python module in question would help though.
>
> Mike
>
> > -----Original Message-----
> > From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu]
> > Sent: Tuesday, October 21, 2003 2:13 PM
> > To: mod_python@modpython.org
> > Subject: [mod_python] invalid literal for float
> >
> >
> >
> > hello all, I am trying to index and search mp3s in my Apache document
> > root.  Whenever executing a database select statement that retrieves
> > the URL and title (the filename minus the .mp3 extension) of
> > mp3s whose
> > filenames contain the words I type into a web form, I get a "invalid
> > literal for float" error message.  The same script works fine on the
> > command line and in IDLE.  The error messages vary, and I
> > sometimes see
> > "invalid literal for int" or "invalid literal for long" though now it
> > seems I just get "invalid literal for float."  Also the error seems to
> > come and go, and sometimes I get the results I want.  I have
> > gotten this
> > type of message before when playing around with Python and trying to
> > convert, say, a string to int, but this has me scratching my head:
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 194, in handler
> >     result = apply(object, (), args)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From seth at picklematrix.net  Tue Oct 21 12:07:52 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] returning apache code from publisher handler?
Message-ID: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>

Hello,

 From the examples I've seen, the publisher handler expects a string to 
be returned.  I'd like the option to return any arbitrary apache code 
if I need to.  Is this an option or possible?

Thanks very much!
Seth

From neel at mediapulse.com  Tue Oct 21 18:33:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>

> I have attached my code, although I must ask if it was a MySQL error
> why does my script work fine on the command line and in IDLE 
> ?  Also, the
> script seems to throw an error during a cursor.execute(sql) 
> of a SELECT statement:
> 

Your second sentence should answer the first, I doubt mod_python has any
cursor classes =p.  Your best asking this on the mysql lists and/or the
mysqldb list.

Nothing looks odd at a glance, I'd check over my table structures and
data, then fire off the question to one of the above places.

Mike

From grisha at modpython.org  Tue Oct 21 23:23:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:49 2004
Subject: [mod_python] returning apache code from publisher handler?
In-Reply-To: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
References: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
Message-ID: <20031021232220.V80359@onyx.ispol.com>


Yes, you can

raise apache.SERVER_RETURN, apache.OK

or

raise apache.SERVER_RETURN, apache.DECLINED

etc.

On Tue, 21 Oct 2003, Seth Ladd wrote:

> Hello,
>
>  From the examples I've seen, the publisher handler expects a string to
> be returned.  I'd like the option to return any arbitrary apache code
> if I need to.  Is this an option or possible?
>
> Thanks very much!
> Seth
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Wed Oct 22 10:21:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>
Message-ID: <20031022100911.F48998-100000@localhost.name>


hi Michael, I guess I will lookup MySQLdb support but the statements work
just fine in MySQL shell, and in php, and in python executed from the
command line and in IDLE, both of which have import MySQLdb.  I went to
this list first because the error message begins with:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)
</paste>

but ends with:

<paste>
 File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue
</paste>

Here's hoping MySQLdb support won't say it's a mod_python problem ;-)

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE
> > ?  Also, the
> > script seems to throw an error during a cursor.execute(sql)
> > of a SELECT statement:
> >
>
> Your second sentence should answer the first, I doubt mod_python has any
> cursor classes =p.  Your best asking this on the mysql lists and/or the
> mysqldb list.
>
> Nothing looks odd at a glance, I'd check over my table structures and
> data, then fire off the question to one of the above places.
>
> Mike
>

From tpc at csua.berkeley.edu  Wed Oct 22 10:26:53 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031022102616.K48998-100000@localhost.name>

this reply didn't get forwarded to the list

---------- Forwarded message ----------
Date: Wed, 22 Oct 2003 10:08:40 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: "caffeine@tuxfamily.org" <caffeine@tuxfamily.org>
Subject: Re: [mod_python] invalid literal for float


hi caffeine, I have tested my MySQL statements in PHP and in MySQL
shell with no error.  The MySQL select statement actually comes from a
working PHP script that I rewrote for use with Python.  I executed the
following in the MySQL shell:

CREATE TEMPORARY TABLE URLs_WITH_MATCHES ( url_id INT NOT NULL ) TYPE =
InnoDB;

INSERT INTO URLs_WITH_MATCHES SELECT DISTINCT WORDS_X_URL.url_id FROM
WORDS_X_URL INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id WHERE
WORDS.word = 'anyword'

SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs WHERE
URLs_WITH_MATCHES.url_id = URLs.id GROUP BY URLs_WITH_MATCHES.url_id;

drop table URLs_WITH_MATCHES;

with no problem.  Note to those trying this at home, whenever you create a
temporary table and try to SHOW TABLES you can never see the darn thing
(as of MySQL 4.0.14).  But as long as your MySQL shell is alive you can
access a temporary table.

On Wed, 22 Oct 2003, caffeine@tuxfamily.org wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
>
> On Mardi 21 Octobre 2003 19:06, tpc@csua.berkeley.edu wrote:
> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE ?  Also,
> > the script seems to throw an error during a cursor.execute(sql) of a
> > SELECT statement:
>
> Have you tried your SQL statements on the MySQL command line client ?
> I'd suggest you double-check your tables structure and data, then track
> exactly where is the problem (modpython, python mysql bindings, mysql
> itself...)
>
> Dunno if this is related to your problem, I had once MySQL firing all
> sorts of weird errors. We tracked it down to /var being full, we
> cleaned the partition and everything was back as normal.
>
> my 2 cents,
> sylvain
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.2 (GNU/Linux)
>
> iD8DBQE/ll7NK/qAVOpQGPYRAjYPAJ9faZH/I23okt6nhsNjyMFQVuDgQwCeNO12
> E9f0VrPQ5kBZLAJZGXTugQw=
> =/45O
> -----END PGP SIGNATURE-----
>
>


From conrad at hep.caltech.edu  Wed Oct 22 11:56:13 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] 3.1.1b Feedback
Message-ID: <1066848973.2812.75.camel@heppc22>

Hi Grisha

Since I was one of the complainers about the session locks in 3.1.0a,
I'm happy to confirm that 3.1.1b now works for me. Thanks!

The server startup log is given below. I don't actually use the
mod_python sessions, so for me it would still be useful to be able to
turn that feature off. But that is just a minor footnote :-)

--

I noticed another surprising behaviour relating to the PythonImport and
PythonPath directives (not new with 3.1.1b though):

For a Directory directive in the main httpd.conf file e.g.

<Directory /usr/mypath/>
       SetHandler python-program
       AddHandler python-program .py
       PythonInterpPerDirective On
       PythonHandler myhandler
       DirectoryIndex myhandler.py
       PythonInterpPerDirectory On

# Name of the interpreter
       PythonInterpreter default_interp
       PythonPath "sys.path+['/usr/mypath']"
</Directory>
# Init for the 'default' server
PythonImport server_init default_interp

The PythonImport directive loads the file /usr/mypath/server-init.py
into the default_interp interpreter. If the PythonPath directive is
omitted, this import fails. 

Cheers

Conrad




[Wed Oct 22 11:41:00 2003] [notice] mod_python: Creating 150 session
mutexes based on 150 max processes and 0 max threads.
[Wed Oct 22 11:41:00 2003] [error] (28)No space left on device:
mod_python: Failed to create global mutex 125 of 150
(/tmp/mpmtx4571125).
[Wed Oct 22 11:41:00 2003] [error] mod_python: We can probably continue,
but with diminished ability to process session locks.
[Wed Oct 22 11:41:00 2003] [error] mod_python: Hint: On Linux, the
problem may be the number of available semaphores, check 'sysctl
kernel.sem'
[Wed Oct 22 11:41:00 2003] [notice] Apache/2.0.47 (Unix) mod_ssl/2.0.47
OpenSSL/0.9.7b mod_python/3.1.1b Python/2.2.3 configured -- resuming
normal operations

-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From olivier at phgroup.com  Wed Oct 22 23:19:11 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] no more 3.1.1 ? 
Message-ID: <3F97025F.8090308@phgroup.com>

hi all,

I've read some posts about testing the 3.1.1 version of mod_python, but 
I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .

any ideas on where is it hidden ??
regards !


-- 
Olivier Migeon


From grisha at modpython.org  Wed Oct 22 20:22:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] no more 3.1.1 ? 
In-Reply-To: <3F97025F.8090308@phgroup.com>
References: <3F97025F.8090308@phgroup.com>
Message-ID: <20031022202152.L96424@onyx.ispol.com>


On Wed, 22 Oct 2003, Olivier Migeon wrote:

> hi all,
>
> I've read some posts about testing the 3.1.1 version of mod_python, but
> I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .
>
> any ideas on where is it hidden ??

in CVS :-)

Grisha
From scott_list at mischko.com  Wed Oct 22 19:20:04 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
Message-ID: <200310221920.04706.scott_list@mischko.com>

Hi all!

Draco relies on the req.server.my_generation for some of it's functionality.  
It appears that this is no longer included in mod_python3.1.1b?  Draco 
(0.99.4) is always getting an AttributeError when it accesses this.

I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.

Any ideas on this?  Is this actually gone from MP or am I missing something?

Scott
From grisha at modpython.org  Wed Oct 22 23:07:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310221920.04706.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
Message-ID: <20031022230636.R96424@onyx.ispol.com>


Heh - it appears to have been lost along the way :-)

I added it back in.

Grisha

On Wed, 22 Oct 2003, Scott Chapman wrote:

> Hi all!
>
> Draco relies on the req.server.my_generation for some of it's functionality.
> It appears that this is no longer included in mod_python3.1.1b?  Draco
> (0.99.4) is always getting an AttributeError when it accesses this.
>
> I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
>
> Any ideas on this?  Is this actually gone from MP or am I missing something?
>
> Scott
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Wed Oct 22 20:36:06 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031022230636.R96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
Message-ID: <200310222036.06088.scott_list@mischko.com>

The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I 
assume you added that patch in also?

Scott

On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> Heh - it appears to have been lost along the way :-)
>
> I added it back in.
>
> Grisha
>
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > Hi all!
> >
> > Draco relies on the req.server.my_generation for some of it's
> > functionality. It appears that this is no longer included in
> > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > when it accesses this.
> >
> > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> >
> > Any ideas on this?  Is this actually gone from MP or am I missing
> > something?
> >
> > Scott
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

From scott_list at mischko.com  Wed Oct 22 20:59:53 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] 
	restart_time is missing from the CVS checkout I just did.
Message-ID: <200310222059.53716.scott_list@mischko.com>

I just checked out CVS mod_python 3.1.2b and restart_time is missing from the 
server object.

Scott
From grisha at modpython.org  Thu Oct 23 09:26:35 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310222036.06088.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
	<200310222036.06088.scott_list@mischko.com>
Message-ID: <20031023092544.J96424@onyx.ispol.com>



On Wed, 22 Oct 2003, Scott Chapman wrote:

> The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I
> assume you added that patch in also?

If it's something other than my_generation, I don't know what the nature
of the patch is. If you find info on it, let me know.

Grisha

>
> Scott
>
> On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > Heh - it appears to have been lost along the way :-)
> >
> > I added it back in.
> >
> > Grisha
> >
> > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > Hi all!
> > >
> > > Draco relies on the req.server.my_generation for some of it's
> > > functionality. It appears that this is no longer included in
> > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > when it accesses this.
> > >
> > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > >
> > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > something?
> > >
> > > Scott
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Thu Oct 23 07:26:18 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031023092544.J96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<200310222036.06088.scott_list@mischko.com>
	<20031023092544.J96424@onyx.ispol.com>
Message-ID: <200310230726.18897.scott_list@mischko.com>

That's fixed.   It wasmy_generation.

Looks like you got my email on restart_time also.  Is there a test suite for 
mod_python that goes through and checks all the objects to make sure they 
still have all their normal attributes?

Thanks for the quick responses.  Draco's happy again!

Scott

On Thursday 23 October 2003 06:26, Gregory (Grisha) Trubetskoy wrote:
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > The Draco author mentioned a patch needed back in the 2.7.8 days of MP. 
> > I assume you added that patch in also?
>
> If it's something other than my_generation, I don't know what the nature
> of the patch is. If you find info on it, let me know.
>
> Grisha
>
> > Scott
> >
> > On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > > Heh - it appears to have been lost along the way :-)
> > >
> > > I added it back in.
> > >
> > > Grisha
> > >
> > > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > > Hi all!
> > > >
> > > > Draco relies on the req.server.my_generation for some of it's
> > > > functionality. It appears that this is no longer included in
> > > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > > when it accesses this.
> > > >
> > > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > > >
> > > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > > something?
> > > >
> > > > Scott
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python

From mikeklein at sbcglobal.net  Sat Oct 25 15:52:37 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] 
 Beginner question re: getting form data and key errors when var not
 defined
Message-ID: <3F9AFEB5.3090508@sbcglobal.net>

Why am I getting key errors when merely attempting to get <possible> 
form data from a mod_python request...ala:

author = req.form['author']

I get the following:

    raise KeyError, key

KeyError: subject

I do kind of expect certain form fields to possibly not have 
values...why the explicit error? Can't I just check for null or 
uninitialized in my code?

thanks,

mike

From michael at dynamine.net  Sat Oct 25 16:32:29 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9AFEB5.3090508@sbcglobal.net>
References: <3F9AFEB5.3090508@sbcglobal.net>
Message-ID: <3F9B080D.1020904@dynamine.net>

This is a really a Python language question, not a mod_python question 
per se.

You have several options, including:

if req.form.has_key('author'):
   author = req.form['author']
else:
   author = None

Or:

try:
   author = req.form['author']
except KeyError:
   author = None

See section 2.2.7 ("Mapping Types") in the Python Library Reference for 
details.

--Michael

Mike Klein wrote:

> Why am I getting key errors when merely attempting to get <possible> 
> form data from a mod_python request...ala:
> 
> author = req.form['author']
> 
> I get the following:
> 
>    raise KeyError, key
> 
> KeyError: subject
> 
> I do kind of expect certain form fields to possibly not have 
> values...why the explicit error? Can't I just check for null or 
> uninitialized in my code?
> 
> thanks,
> 
> mike
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From twa at post.com  Sun Oct 26 09:28:34 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
Message-ID: <3F9B93C2.6040908@post.com>

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.  
27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so                                                     
174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


From sgillies at frii.com  Sun Oct 26 08:58:07 2003
From: sgillies at frii.com (Sean Gillies)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>

On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:

> I am trying to run mod_python.
>
> My setup is:
>
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47
> Windows XP Home edition 2002 Service Pack 1
>
> I installed python, then apache and then mod_python.  I have made no 
> changes to apache (other than to httpd.conf) or mod_python.
>
> Apache ran ok before the install of mod_python.
>
> When trying to run up apache with the example python code I get:
>
>    Syntax error on line 173 of C:/Program Files/Apache 
> Group/Apache2/conf/httpd.conf:
>    Cannot load C:/Program Files/Apache 
> Group/Apache2/modules/mod_python.so into server: The specified module 
> could not be found.
>    Note the errors or messages above, and press the <ESC> key to exit. 
>  27...
>
> That part of httpd.conf looks like this:
>
> 165 LoadModule setenvif_module modules/mod_setenvif.so
> 166 #LoadModule speling_module modules/mod_speling.so
> 167 #LoadModule status_module modules/mod_status.so
> 168 #LoadModule unique_id_module modules/mod_unique_id.so
> 169 LoadModule userdir_module modules/mod_userdir.so
> 170 #LoadModule usertrack_module modules/mod_usertrack.so
> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
> 172 #LoadModule ssl_module modules/mod_ssl.so
> 173 LoadModule python_module modules/mod_python.so                     
>                                 174
> 175 #
> 176 # ExtendedStatus controls whether Apache will generate "full" 
> status
> 177 # information (ExtendedStatus On) or just basic information 
> (ExtendedStatus
> 178 # Off) when the "server-status" handler is called. The default is 
> Off.
> 179 #
> 180 #ExtendedStatus On
>
> As usual I expect I have missed something glaringly obvious, I just 
> don't know what right now.
>
> Any help or pointers much appreciated.
>
> Thanks.
>
> Tom
>

Tom,

I don't use windows these days, but shouldn't the mod_python module for 
Win32
be a DLL rather than a SO?  You didn't mention if you checked in
C:/Program Files/Apache Group/Apache2/modules/ to see if the module was 
there.
Check the directory and use the mod_python library you find.

cheers,
Sean
--
Sean Gillies
sgillies at frii dot com
http://www.frii.com/~sgillies

From cs1spw at bath.ac.uk  Sun Oct 26 12:53:03 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
References: <3F9B93C2.6040908@post.com>
Message-ID: <3F9C180F.6070305@bath.ac.uk>

Tom Ayerst wrote:

> I am trying to run mod_python.
> 
> My setup is:
> 
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47

mod_python currently requires Python 2.2 - it doesn't yet work with 
Python 2.3.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 18:56:44 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
References: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
Message-ID: <3F9C18EC.8040004@post.com>

Sorry, I should have mentioned that.  mod_python.so is in the modules 
directory.  All the other modules are called *.so so I assumed that that 
is the Apache approach (its not standard but I think you can do that in 
Windows).

Cheers

Tom

Sean Gillies wrote:

> On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:
>
>> I am trying to run mod_python.
>>
>> My setup is:
>>
>> mod_python version  3.0.3
>> python 2.3.2
>> Apache 2.0.47
>> Windows XP Home edition 2002 Service Pack 1
>>
>> I installed python, then apache and then mod_python.  I have made no 
>> changes to apache (other than to httpd.conf) or mod_python.
>>
>> Apache ran ok before the install of mod_python.
>>
>> When trying to run up apache with the example python code I get:
>>
>>    Syntax error on line 173 of C:/Program Files/Apache 
>> Group/Apache2/conf/httpd.conf:
>>    Cannot load C:/Program Files/Apache 
>> Group/Apache2/modules/mod_python.so into server: The specified module 
>> could not be found.
>>    Note the errors or messages above, and press the <ESC> key to 
>> exit.  27...
>>
>> That part of httpd.conf looks like this:
>>
>> 165 LoadModule setenvif_module modules/mod_setenvif.so
>> 166 #LoadModule speling_module modules/mod_speling.so
>> 167 #LoadModule status_module modules/mod_status.so
>> 168 #LoadModule unique_id_module modules/mod_unique_id.so
>> 169 LoadModule userdir_module modules/mod_userdir.so
>> 170 #LoadModule usertrack_module modules/mod_usertrack.so
>> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
>> 172 #LoadModule ssl_module modules/mod_ssl.so
>> 173 LoadModule python_module 
>> modules/mod_python.so                     
>>                                 174
>> 175 #
>> 176 # ExtendedStatus controls whether Apache will generate "full" status
>> 177 # information (ExtendedStatus On) or just basic information 
>> (ExtendedStatus
>> 178 # Off) when the "server-status" handler is called. The default is 
>> Off.
>> 179 #
>> 180 #ExtendedStatus On
>>
>> As usual I expect I have missed something glaringly obvious, I just 
>> don't know what right now.
>>
>> Any help or pointers much appreciated.
>>
>> Thanks.
>>
>> Tom
>>
>
> Tom,
>
> I don't use windows these days, but shouldn't the mod_python module 
> for Win32
> be a DLL rather than a SO?  You didn't mention if you checked in
> C:/Program Files/Apache Group/Apache2/modules/ to see if the module 
> was there.
> Check the directory and use the mod_python library you find.
>
> cheers,
> Sean
> -- 
> Sean Gillies
> sgillies at frii dot com
> http://www.frii.com/~sgillies
>
>


From rclilly at cox.net  Sun Oct 26 11:19:09 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9C18EC.8040004@post.com>
Message-ID: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>

>
> Sorry, I should have mentioned that.  mod_python.so is in the modules
> directory.  All the other modules are called *.so so I assumed that that
> is the Apache approach (its not standard but I think you can do that in
> Windows).
>
> >
> > I don't use windows these days, but shouldn't the mod_python module
> > for Win32
> > be a DLL rather than a SO?  You didn't mention if you checked in
> > C:/Program Files/Apache Group/Apache2/modules/ to see if the module
> > was there.
> > Check the directory and use the mod_python library you find.

mod_python.so is a dll, it's just named after the Apache convention. The
other response you got from Simon Willison letting you know that current
release version of mod_python does not yet work with Python 2.3 is the
relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
open mod_python.so and replace all references to python22.dll with
python23.dll. I've been running with the latter solution for almost two
weeks now and haven't noticed any problems.

HTH,

Robert Lilly

From rclilly at cox.net  Sun Oct 26 11:30:45 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] 
	Best place to start learning both mod_python and Python
Message-ID: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>

I've been using mod_python to enable applications written by others to work
under Apache. I've decided to expand my programming skills and it looks like
Python is the best language to start with. I currently only know how to
program with Visual Basic 6, and VBA. My specialty has been custom financial
applications using MS Excel and VBA.

So, to someone who is new to both to mod_python and to the Python
programming language, and whose only background is Visual Basic, what are
your recommendations on how and where to get started. I am primarily
interested in developing web applications at the moment, which is why I've
included mod_python in my learning agenda.

Also, is using mod_python the only way to use Python under Apache? If not,
although this is a mod_python list, I would appreciate knowing what the
various options are.

Thanks!

Robert Lilly

From mike_verdone at shaw.ca  Sun Oct 26 14:07:57 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 21:47:50 2004
Subject: =?iso-8859-1?q?=5Bmod=5Fpython=5D=09Best=20place=20to=20start=20learning?=
 =?iso-8859-1?q?=20both=20mod=5Fpython=20and?= Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <200310261407.57694.mike_verdone@shaw.ca>

Hi!

For learning Python, your best bet is to start with the tutorials at 
www.python.org.

http://www.python.org/doc/2.3.2/tut/tut.html

You will probably already know the concepts explained in the tutorial, but 
it's a good way to learn Python's syntax. The documentation on python.org 
also includes the library reference, which is good to have. Another good way 
to get help on the libraries is from the Python interpreter. If you run the 
python interpreter and type help(), you will be in the help menu. Then, type 
a module name and you will get documentation on that module.

Documentation on mod_python is available at www.modpython.org. Read the FAQ 
and the Docs.

There are a few ways to interface Python and Apache, but mod_python is the 
best. (In my opinion as a member of the mod_python mailing list ;-) ). 
Another way to do it is by using regular CGI, where each .py file is 
basically a script that is run externally by Apache. This has much lower 
performance, and doesn't make it easier to develop, so I'd stay away. There 
was also a module named mod_snake that supposedly had better performance than 
mod_python, but I don't think it's supported anymore. Finally, there's Zope, 
which is an enterprise server based on Python. Haven't really used it, but 
it's supposed to be good. www.zope.org.

Hope that helps!

Mike.


On October 26, 2003 12:30, Robert Lilly wrote:
> I've been using mod_python to enable applications written by others to work
> under Apache. I've decided to expand my programming skills and it looks
> like Python is the best language to start with. I currently only know how
> to program with Visual Basic 6, and VBA. My specialty has been custom
> financial applications using MS Excel and VBA.
>
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started. I am primarily
> interested in developing web applications at the moment, which is why I've
> included mod_python in my learning agenda.
>
> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.
>
> Thanks!
>
> Robert Lilly
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 12:28:59 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <200310261407.57694.mike_verdone@shaw.ca>
Message-ID: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>

> Hi!
>
> For learning Python, your best bet is to start with the tutorials at
> www.python.org.
>
> http://www.python.org/doc/2.3.2/tut/tut.html
>
> You will probably already know the concepts explained in the
> tutorial, but
> it's a good way to learn Python's syntax. The documentation on python.org
> also includes the library reference, which is good to have.
> Another good way
> to get help on the libraries is from the Python interpreter. If
> you run the
> python interpreter and type help(), you will be in the help menu.
> Then, type
> a module name and you will get documentation on that module.
>
> Documentation on mod_python is available at www.modpython.org.
> Read the FAQ
> and the Docs.
>
> There are a few ways to interface Python and Apache, but
> mod_python is the
> best. (In my opinion as a member of the mod_python mailing list ;-) ).
> Another way to do it is by using regular CGI, where each .py file is
> basically a script that is run externally by Apache. This has much lower
> performance, and doesn't make it easier to develop, so I'd stay
> away. There
> was also a module named mod_snake that supposedly had better
> performance than
> mod_python, but I don't think it's supported anymore. Finally,
> there's Zope,
> which is an enterprise server based on Python. Haven't really
> used it, but
> it's supposed to be good. www.zope.org.
>
> Hope that helps!
>
> Mike.

Thanks for the quick response Mike. I especially appreciate the information
about using the Python interpreter as I was not aware of that capability.

I agree with you regarding staying away from CGI. I intend to do this
whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
what I see, it's way overkill for my needs.

Thanks,

Robert

From matt at pollenation.net  Sun Oct 26 21:21:28 2003
From: matt at pollenation.net (Matt Goodall)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
Message-ID: <3F9C3AD8.4080303@pollenation.net>

Robert Lilly wrote:

>>Hi!
>>
>>    
>>
[snip]

>>There are a few ways to interface Python and Apache, but
>>mod_python is the
>>best. (In my opinion as a member of the mod_python mailing list ;-) ).
>>Another way to do it is by using regular CGI, where each .py file is
>>basically a script that is run externally by Apache. This has much lower
>>performance, and doesn't make it easier to develop, so I'd stay
>>away. There
>>was also a module named mod_snake that supposedly had better
>>performance than
>>mod_python, but I don't think it's supported anymore. Finally,
>>there's Zope,
>>which is an enterprise server based on Python. Haven't really
>>used it, but
>>it's supposed to be good. www.zope.org.
>>    
>>
>Thanks for the quick response Mike. I especially appreciate the information
>about using the Python interpreter as I was not aware of that capability.
>  
>
The interpreter is a fantastic tool for testing out ideas, you'll use it 
a lot. Also worth a mention is IPython (http://ipython.scipy.org/) which 
aims to be a better Python shell. It's got some great features for 
inspecting objects, getting help, looking at source code etc.

>I agree with you regarding staying away from CGI. I intend to do this
>whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
>what I see, it's way overkill for my needs.
>  
>
Traditional CGI is slow but SCGI 
(http://www.mems-exchange.org/software/scgi/) and FastCGI 
(http://www.fastcgi.com/) are Apache modules that provide a CGI-like 
interface to long-running Python applications. I find SCGI particularly 
useful during development as there is no need to restart Apache to 
reload an application - just Ctrl-C your application and start it again.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt@pollenation.net


From cs1spw at bath.ac.uk  Sun Oct 26 16:47:24 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] 	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <3F9C4EFC.3070107@bath.ac.uk>

Robert Lilly wrote:
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started.

If you already know how to program, Dive Into Python should be an 
essential stop on your tour of the Python universe. It's a free online 
book that teaches Python programming (including a lot of useful stuff on 
Python style) to people who already understand what if/then/else and for 
loops are:

http://diveintopython.org/

There's also a thriving Python weblog scene. A great index for this is 
the Python Programmer Weblogs page, which lists Python blogs and shows 
recent entries from them as well:

http://mechanicalcat.net/pyblagg.html

And finally some self promotion :) You might find the Python category on 
my own blog of some use:

http://simon.incutio.com/categories/python/

> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.

CGI always gets a bad rap for performance, but I don't think this is 
entirely deserved. Recently I've written a couple of applications that 
feature an admin panel powered by Python CGI that generates static HTML 
pages for public consumption. Performance on an admin panel that only 
gets accessed by one person at a time is fine with CGI. That said, I 
wouldn't want to run a full dynamic site from it.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 23:06:51 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
Message-ID: <3F9C538B.6050304@post.com>

Thanks Robert,

It all runs up now.  (Now I just have to get the app working !)

Tom

Robert Lilly wrote:

>>Sorry, I should have mentioned that.  mod_python.so is in the modules
>>directory.  All the other modules are called *.so so I assumed that that
>>is the Apache approach (its not standard but I think you can do that in
>>Windows).
>>
>>    
>>
>>>I don't use windows these days, but shouldn't the mod_python module
>>>for Win32
>>>be a DLL rather than a SO?  You didn't mention if you checked in
>>>C:/Program Files/Apache Group/Apache2/modules/ to see if the module
>>>was there.
>>>Check the directory and use the mod_python library you find.
>>>      
>>>
>
>mod_python.so is a dll, it's just named after the Apache convention. The
>other response you got from Simon Willison letting you know that current
>release version of mod_python does not yet work with Python 2.3 is the
>relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
>(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
>open mod_python.so and replace all references to python22.dll with
>python23.dll. I've been running with the latter solution for almost two
>weeks now and haven't noticed any problems.
>
>HTH,
>
>Robert Lilly
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From andre at burgaud.com  Sun Oct 26 21:43:30 2003
From: andre at burgaud.com (Andre Burgaud)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <000001c39c3c$7d8a91f0$6601a8c0@minnesota>



Hi Tom,

I faced the same situation recently and this has been also discussed in
the mod_python list. As a temporary solution, try with Python 2.2 and
this should work fine.

Andre


http://www.burgaud.com


-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Tom Ayerst
Sent: Sunday, October 26, 2003 3:29 AM
To: mod_python@modpython.org
Subject: [mod_python] Newbie problem running mod_python

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.

27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so

174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is
Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 21:50:30 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <200310270039.05867.gwidion@mpc.com.br>
Message-ID: <AMEDJPACLBJGECKBDAOKIELKCCAA.rclilly@cox.net>

> -----Original Message-----
> From: Joao S. O. Bueno [mailto:gwidion@mpc.com.br]
> Sent: Sunday, October 26, 2003 06:39 PM
> To: Robert Lilly
> Subject: Re: [mod_python] Newbie problem running mod_python
>
>
> On Sunday 26 October 2003 5:19 pm, Robert Lilly wrote:
>
> > mod_python.so is a dll, it's just named after the Apache
> > convention. The other response you got from Simon Willison letting
> > you know that current release version of mod_python does not yet
> > work with Python 2.3 is the relevant one. There are workarounds -
> > 1) revert to using Python 2.2, or 2) (courtesy of Gustavo Cordova
> > Avila) using either a text or a binary editor, open mod_python.so
> > and replace all references to python22.dll with python23.dll. I've
> > been running with the latter solution for almost two weeks now and
> > haven't noticed any problems.
>
> Hmm..would it not be cleaner to c:>copy python22.dll python23.dll  ?

I thought about doing that, but then other applications needing to use
python23.dll will be getting python22.dll, which I am sure will cause
problems. Making the modification within mod_python.so assures that it is
the only application affected.

Another solution that is working for me is to have both Python 2.2 and 2.3
on the same machine, into separate folders of course. During installation
most apps look in the registry and choose the version it needs. In many
cases it says it will work with either. In those cases I tell it to use 2.3.
There are some apps, however, that will only work with one or the other, but
not both. On this particular system I am running mod_python.so without
modification. When I installed mod_python, it automatically configured
itself in the Lib/site-packages folder of 2.2. I cannot see any difference
in stability or performance between this setup and the one where I modified
mod_python.so.

Robert Lilly

From stian at soiland.no  Mon Oct 27 09:30:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] 
	mod_python 3.1.1b and sessions: Failed to acquire global mutex lock
Message-ID: <20031027083048.GA30427@itea.ntnu.no>

I've just downloaded and installed the 3.1.1b from
http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
tested it with these two webservers:
   
   Redhat 9 - httpd-2.0.40-21.5
   Debian unstable - apache2-mpm-prefork 2.0.47-1

There seems to be some mutex permission problems:

    from mod_python.Session import Session
    def test(req):
        session = Session(req)
        doc = "<html><body><h1>hello</h1>Counts: %s</body></html>"
        counter = session.setdefault('count', 0)
        doc %= counter
        return doc

Yields on both servers:


[Mon Oct 27 08:54:12 2003] [notice] mod_python: Creating 32 session mutexes
    based on 150 max processes and 0 max threads.

(seems OK)

[Mon Oct 27 08:54:14 2003] [warn] (13)Permission denied: Failed to acquire
    global mutex lock at index 24
(.. traceback)
[Mon Oct 27 08:54:14 2003] [error] [client 129.241.56.39] PythonHandler
    mod_python.publisher: ValueError: Failed to acquire global mutex lock


Now, I can't find anything useful on mr. Google searching for this,
except some listing of a very similar bug that occured with mod_ssl.

The problem then was that the mutex was created by root - and
permissions never fixed so the httpd process could access it. Could it
be anything similar?

Any suggestions? (I'm really eager to test out 3.1.1b.. =) )


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Mon Oct 27 09:41:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] 
	Re: mod_python 3.1.1b and sessions: Failed to acquire global mutex
	lock
In-Reply-To: <20031027083048.GA30427@itea.ntnu.no>
References: <20031027083048.GA30427@itea.ntnu.no>
Message-ID: <20031027084148.GB30427@itea.ntnu.no>

On 2003-10-27 09:30:48, Stian S?iland wrote:

> I've just downloaded and installed the 3.1.1b from
> http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
> tested it with these two webservers:

The same problem seems to exist with 3.1.0a - although 3.1.0 of course
needed something like this to be able to start..:

sysctl -w kernel.sem="256 32000 64  256"

Is it only me? =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From gdamjan at mail.net.mk  Mon Oct 27 14:14:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python]  Beginner question re: getting form data and key
	errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <20031027131404.GA20746@legolas.on.net.mk>

> This is a really a Python language question, not a mod_python question 
> per se.
> 
> You have several options, including:
> 
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
> 
> Or:
> 
> try:
>   author = req.form['author']
> except KeyError:
>   author = None

or
    req.form.get('author', None)

this if req.form is a standard Python dictionary



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From nilsgri at idi.ntnu.no  Mon Oct 27 14:56:58 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 21:47:50 2004
Subject: [mod_python] instablility in mod_python or apache
Message-ID: <20031027135658.GA20134@bergljot.dyndns.org>

hi!

i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
and have some stability problems.

i have made a simple web-page that uses mod_python.publisher. in
apache2.conf:

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

when i'm reloading the page, it seams random whether it will load
properly or crash with 

"Not Found

The requested URL /~nilsgri/test.py was not found on this server."

i would guess it has something to do with caching, as when i restart
apache2, sometimes the it works every other or so time i reload the
page, and sometimes it works every time, and sometimes never.


i have tried to track down where these errors occur, and have found that
exeptions are thrown at the following locations:

mod_python.publisher: 
    resolve_object()
        the line "obj = getattr(obj, obj_str)" throws AttributeError
        sometimes. 
        
        in this case: 
            module_name=test, 
            config={'PythonDebug': '1'},
            path=['/home/nilsgri/public_html']
        which seems right

mod_python.publisher:
    import_module()
        "if (not file or path and not
                filter(lambda a: os.path.dirname(file).find(a) == 0,
                path)):" hits sometimes

what could be wrong?

is there any way of turning of caching of python modules?


i use the apache2 worker thread module, and i have also tried prefork. i
have not tried perchild or threadpool. should i?


klem fra nils

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <20031027101045.E26862@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy

From gustavo.cordova at q-voz.com  Mon Oct 27 10:32:52 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <3F9D48B4.9090202@q-voz.com>

Also, you can:

    author = req.form.get("author")

and if the "author" key is not present, the correct default value to 
return is None; at least that's the way it works with dictionaries.

-gustavo

Michael S. Fischer wrote:

> This is a really a Python language question, not a mod_python question 
> per se.
>
> You have several options, including:
>
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
>
> Or:
>
> try:
>   author = req.form['author']
> except KeyError:
>   author = None
>
> See section 2.2.7 ("Mapping Types") in the Python Library Reference 
> for details.
>
> --Michael
>
> Mike Klein wrote:
>
>> Why am I getting key errors when merely attempting to get <possible> 
>> form data from a mod_python request...ala:
>>
>> author = req.form['author']
>>
>> I get the following:
>>
>>    raise KeyError, key
>>
>> KeyError: subject
>>
>> I do kind of expect certain form fields to possibly not have 
>> values...why the explicit error? Can't I just check for null or 
>> uninitialized in my code?
>>
>> thanks,
>>
>> mike
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From tpc at csua.berkeley.edu  Mon Oct 27 11:20:10 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] invalid literal for float int or long solved !
Message-ID: <20031027111252.H91970-100000@localhost.name>


fingers crossed, here's hoping the bug doesn't rear its creepy head again,
can't really say wherefore the bug but I found a workaround, I changed the
basic MySQL statement below:

SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
URLs_WITH_MATCHES.url_id;

to:

SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
URLs_WITH_MATCHES.url_id;

and voila !  I am a complete idiot.

From grisha at modpython.org  Mon Oct 27 14:45:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027111252.H91970-100000@localhost.name>
References: <20031027111252.H91970-100000@localhost.name>
Message-ID: <20031027144335.Q39378@onyx.ispol.com>


The first one is "url, title", the second is "title, url" - was that the
problem, or was it the WHERE instead of INNER JOIN (which are same thing
IIRC).

Grisha


On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:

>
> fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> can't really say wherefore the bug but I found a workaround, I changed the
> basic MySQL statement below:
>
> SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> to:
>
> SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> and voila !  I am a complete idiot.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Mon Oct 27 12:26:39 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027121656.P92516-100000@localhost.name>


hi Grisha, I switched url, title before, and got the invalid literal
error.  I am not sure why since the return values are exactly the
same, but it seems like the "FROM URLs, URLs_WITH_MATCHES WHERE" was
causing problems, though I am not sure for which module, mod_python or
MySQLdb or both or maybe neither.  I am still testing and hoping the bug
doesn't all of a sudden appear.

On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From tpc at csua.berkeley.edu  Mon Oct 27 12:53:45 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027124550.E92775-100000@localhost.name>


ok I take that back.  I just switched it again as per your suggestion and
I now see that "url, title" gives me invalid literal errors whereas
"title, url" does not, even for the old SELECT statement.  This perplexes
me, as I know at least once I saw:

ValueError: invalid literal for float(): <insert any mp3 URL here>

However, I now make sure to <shift> RELOAD to make sure memory cache is
cleared, so you may be on to something.


On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jbi130 at yahoo.com  Mon Oct 27 15:12:05 2003
From: jbi130 at yahoo.com (jbi130@yahoo.com)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] Persistent socket connection.
Message-ID: <871xsye66y.fsf@syn.codemonkey.net>

Upon creation of a new "session" I want to open a socket to a remote 
server and be able to access this socket throughout the users session 
until he logs our or the session is timed out. 
 
Is there any way to do this?  I've been looking at twisted but would 
prefer a more traditional approach, maybe using mod_python. 
 
I guess the challenge is how do I keep this socket descriptor alive 
between browser requests. 
 
Any somewhat standard facilities to do this in mod_python? 
 
Thanks. 

From nilsgri at idi.ntnu.no  Mon Oct 27 22:48:46 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] instablility in mod_python or apache
In-Reply-To: <1067289858.3336.2.camel@heppc22>
References: <20031027135658.GA20134@bergljot.dyndns.org>
	<1067289858.3336.2.camel@heppc22>
Message-ID: <20031027214846.GA26966@bergljot.dyndns.org>

On Mon, Oct 27, 2003 at 01:24:19PM -0800, Conrad Steenberg wrote:
> Somebody probably already answered your question, but just in case:
> You should use mod_python 3.x with apache 2.x. 
>
> On Mon, 2003-10-27 at 05:56, Nils Grimsmo wrote:
> > i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
> > and have some stability problems.

sorry. got that wrong. looked at the package for apache1. use mod_python
3.0.3. i have now tried it for both python 2.2.3 and 2.3.2, with the
same old results.

> > i have made a simple web-page that uses mod_python.publisher. in
> > apache2.conf:
> > 
> > AddHandler python-program .py
> > PythonHandler mod_python.publisher
> > PythonDebug On
> > 
> > when i'm reloading the page, it seams random whether it will load
> > properly or crash with 
> > 
> > "Not Found
> > 
> > The requested URL /~nilsgri/test.py was not found on this server."
> > 
> > i would guess it has something to do with caching, as when i restart
> > apache2, sometimes the it works every other or so time i reload the
> > page, and sometimes it works every time, and sometimes never.
> > 
> > 
> > i have tried to track down where these errors occur, and have found that
> > exeptions are thrown at the following locations:
> > 
> > mod_python.publisher: 
> >     resolve_object()
> >         the line "obj = getattr(obj, obj_str)" throws AttributeError
> >         sometimes. 
> >         
> >         in this case: 
> >             module_name=test, 
> >             config={'PythonDebug': '1'},
> >             path=['/home/nilsgri/public_html']
> >         which seems right
> > 
> > mod_python.publisher:
> >     import_module()
> >         "if (not file or path and not
> >                 filter(lambda a: os.path.dirname(file).find(a) == 0,
> >                 path)):" hits sometimes
> > 
> > what could be wrong?
> > 
> > is there any way of turning off caching of python modules?
> > 
> > 
> > i use the apache2 worker thread module, and i have also tried prefork. i
> > have not tried perchild or threadpool. should i?
> > 
> > 
> > klem fra nils
> -- 
> Conrad Steenberg <conrad@hep.caltech.edu>
> 

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at modpython.org  Mon Oct 27 16:58:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] Persistent socket connection.
In-Reply-To: <871xsye66y.fsf@syn.codemonkey.net>
References: <871xsye66y.fsf@syn.codemonkey.net>
Message-ID: <20031027165528.W45098@onyx.ispol.com>


On Mon, 27 Oct 2003 jbi130@yahoo.com wrote:

> Upon creation of a new "session" I want to open a socket to a remote
> server and be able to access this socket throughout the users session
> until he logs our or the session is timed out.

Given the multi-process nature of httpd, doing something like this would
be very difficult.

On a single-process multithreaded apache, though, this should be a piece
of cake. Whether or not you can get a single-pocess configuration is
specific to your OS.

Grisha
From tpc at csua.berkeley.edu  Mon Oct 27 14:14:58 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <20031027135607.Q93216-100000@localhost.name>


hi Grisha and Andy, after consulting with my coworker I believe there is a
bug in how MySQLdb interacts with mod_python that you should know of.  He
suggested I try out the same script that was giving me problems  with
Python CGI, and it works just fine.  The only difference is the values in
the tuple get switched around, so the tuple that is returned is (title,
URL) but no more invalid literal for float, int or long errors.  The
critical piece of code in question involves an implementation in Python
of a MySQL SELECT statement of two fields from one table joined to another
table that works just fine from the command line, in MySQL shell, and in
Python CGI:

	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
URLs.id = URLs_WITH_MATCHES.url_id;"""
	cursor.execute(sql)

gives me:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
    search(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 47, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 15, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 42, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

From stian at soiland.no  Tue Oct 28 00:44:38 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] Re: Persistent socket connection.
In-Reply-To: <20031027165528.W45098@onyx.ispol.com>
References: <871xsye66y.fsf@syn.codemonkey.net>
	<20031027165528.W45098@onyx.ispol.com>
Message-ID: <20031027234438.GD815@itea.ntnu.no>

On 2003-10-27 22:58:34, Gregory (Grisha) Trubetskoy wrote:

> > Upon creation of a new "session" I want to open a socket to a remote
> > server and be able to access this socket throughout the users session
> > until he logs our or the session is timed out.
> Given the multi-process nature of httpd, doing something like this would
> be very difficult.

I actually discussed this matter with my colleague tonight, if you can't
go multithreading, one solution is to have a middleware server running
on it's one.

The middleserver could use the asyncore module from Python to manage
multiple connections from a singlethreaded process. While containing
sockets to "the world" mod_python connects to the program by a local
UNIX socket or a longstanding TCP connection (to say, localhost)

The connection between mod_python processes, say one pr. process (ie. in
a module somewhere) - could last between different users and just say
some "Switch user"-command to the middleware.

A simple approach would be to associate those user socket sessions (like
a telnet session?) with the user by using his session ID. The mod_python
framework would only care about the session ID and formatting/passing
commands through in the right format.

The middleware could be smart or dumb - my suggestion is to make a
simple xml-rpc API on the middleware proxy, not just bypass the
socket communication. (why? To get short intervals to let other requests
to the single threaded proxy come through)


Problems
--------

  * Middleware complexity increases risk of anything failing
    - severel connections could get lost 
    - the middleware could get trapped in a large respons/request
  
  * Scalabillity - the single-threaded middleware proxy could become the
    one thing slowing everything down in some situations - and 
    unless you've already thought of it, it could become difficult to
    scale up.

      simple workaround: 
        - several middleware instances - on the same or other machines
        - users are distributed to the most idle proxy
        

Suggestions
-----------

  * Go for threading and mod_python - it would make tasks
    much simpler. Just remember to have some locks (and timeouts) so two
    requests don't use the socket at once! (the double-reload syndrome)

  * If your environment requires a forking apache, why not use another
    apache installment on a local port? the "outer" apache could proxy
    requests down - just like wrapping away zope.


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Mon Oct 27 19:04:11 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <C0FC22C08B82074A88B500617641577787A7A3@johnson.mediapulse.net>

> 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> URLs.id = URLs_WITH_MATCHES.url_id;"""
> 	cursor.execute(sql)

I find it hard to believe that this is somehow a mod_python problem.
Are you running the latest version of MySQLdb?  I have used mod_python +
MySQLdb on well over 10 sites now for clients (more for my own sites)
and never ran into trouble; an error this basic I think would have shown
itself by now.

>From the traceback you can see that MySQLdb is throwing the execption,
and if you look at the lines in cursors.py it lists you can see that a
try block is pretty much wrapping the work done.  I'd try to go in and
comment out some of those try blocks and also place an assert here and
there to see what's really happening (fyi you can do an assert 0,
varname and get a traceback with the value of varname - quick trick to
help debug something).

Did you ask on the MySQLdb forums?  I looked at sf and didn't see it.  A
search in google showed some others with this issue, one related to the
locale not being US and another with a broken python install.  Remember
that the python you run at command line is not the same one you run
under mod_python, so if the python mod_pyhton is using is setup
differently and/or broken from the python binary that would explain why
it works in cgi (which exec's the python binary).

Mike

From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <7654106.1067300590712.JavaMail.Server@genix>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy


---------------------------------------------------------------------
To unsubscribe, e-mail: announce-unsubscribe@httpd.apache.org
For additional commands, e-mail: announce-help@httpd.apache.org



From rclilly at cox.net  Mon Oct 27 16:33:29 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
In-Reply-To: <20031027101045.E26862@onyx.ispol.com>
Message-ID: <AMEDJPACLBJGECKBDAOKCEMLCCAA.rclilly@cox.net>

Hi Grisha,

I just downloaded the beta and installed it. I got the following message
from the win32_postintall script:

'import site' failed; use -v for traceback
Traceback (most recent call last):
  File "F:\LANG\PYTHON~1.3\Scripts\win32_postinstall.py", line 62, in ?
    import sys, os, shutil
ImportError: No module named os
*** run_installscript: internal error 0xFFFFFFFF ***

As I am just learning Python, I don't yet know what this message means.
There is a new mod_python folder with files in it under F:\Lang\Python
2.3\Lib\site-packages\. So I don't know if that means it installed correctly
or not. I haven't tested it under Apache to see if it works yet. That's my
next step.

Thanks,

Robert Lilly

From flxkid at techemail.com  Tue Oct 28 10:36:41 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031028183641.D19AC393C@sitemail.everyone.net>

I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").

Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).

Other scripts not using scripting work fine.

Any ideas?

OLIVER


From flxkid at techemail.com  Tue Oct 28 17:18:51 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031029011853.344247265@sitemail.everyone.net>

Mike,

It worked great!  Thanx.  Now, why doesn't it work when I compile my own 2.3.2?  Is  the make install not overwriting somewhere where there is a 2.3 no threaded libpython?  How would I find out?  I'm just a curious kinda guy ;)

OLIVER


--- Mike Klein <mikeklein@sbcglobal.net> wrote:
You will get this same error trying to use SOAPpy too.

It means your Python that mod_python was built against doesn't support 
threads. You might have a thread.py module under your python libs dir 
but that doesn't mean your python supports threads.

Go the the mod_python page, get the appropriate version per your apache 
version, and then get EXACTLY the version of Python recommended. Build 
this python in your source tree (with threads!) and mod_python against 
this. Everything will work fine.


mike


Oliver Nelson wrote:

>I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").
>
>Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).
>
>Other scripts not using scripting work fine.
>
>Any ideas?
>
>OLIVER
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From vmanera at manord.com  Wed Oct 29 17:44:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] Session 
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F7@exchange2000.manord.com>

I played with the module Session on mod_python 3.1.2b on win2000 and  all
seems work fine.<?xml:namespace prefix = o ns =
"urn:schemas-microsoft-com:office:office" />

 

The only problem is that under win2000 Session is redirect to MemorySession,
so if I restart apache I loose all the session.

So I used  DbmSession directly and all work fine too.

 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

 

 

With my self made session that I currently use, I may see the sid timeouted
and the sid currently alive.  With some change from dbm_cleanup or
mem_cleanup is possible to achieve this information, but will be useful  a
new method in Session to do it.

Villiam 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031029/e01fa162/attachment.htm
From olivier at phgroup.com  Thu Oct 30 10:35:56 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] session mechanism in 3.1.0a
Message-ID: <3FA0E98C.1040400@phgroup.com>

Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













From vmanera at manord.com  Thu Oct 30 12:26:31 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:51 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>

try this:
	sess = Session.Session(req)
	sess.save()
	.....
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 11.36
A: mod_python@modpython.org
Oggetto: [mod_python] session mechanism in 3.1.0a


Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From olivier at phgroup.com  Thu Oct 30 11:58:49 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 21:47:51 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
Message-ID: <3FA0FCF9.6020804@phgroup.com>

Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 14:35:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:51 2004
Subject: R: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F8@exchange2000.manord.com>

I tested your code:
def main1(req):
     sess = Session.Session(req)
     sess.save()
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())

the first time:
I'm a new session, my id is : 8e7c9abff96d9256ca9159b40cc44249
if I reload the page:
I'm NOT a new session, my id is :8e7c9abff96d9256ca9159b40cc44249

the  mod_python/3.1.0a has a bug: it not reload the module change yuo have
to put
PythonAutoReload on on apache config
o restart apache
Villiam
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 12.59
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: R: [mod_python] session mechanism in 3.1.0a


Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 15:46:44 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] session on win2000
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>

Sorry , but anyone ha replyed to me and I'm ready to start the porting
Session in my application. 

The question is: 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

Villiam
From grisha at modpython.org  Thu Oct 30 11:28:05 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] Re: session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030112225.N97494@onyx.ispol.com>


There is no trap. It will probably be a little slower, also, depending on
what DBM Python uses on Windows, there may be a size limit on data stored
in session.

On Thu, 30 Oct 2003, Manera, Villiam wrote:

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application.
>
> The question is:
>
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?
>
> Villiam
>
From gdamjan at mail.net.mk  Thu Oct 30 19:55:08 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030185508.GA10855@legolas.on.net.mk>

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application. 
> 
> The question is: 
> 
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?

I guess MemorySession is used in Windows by default because it should be faster
than DbmSession, and in Windows Apache is multithreaded so MemorySession
_can_ be used.

Though I guess, in Linux a DbmSession in /dev/shm would be equally fast.


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From tpc at csua.berkeley.edu  Fri Oct 31 09:11:57 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] Re: invalid literal for float solved addendum
In-Reply-To: <1067611886.14197.6.camel@chef.neosouth.net>
Message-ID: <20031031081725.O29199-100000@localhost.name>


hi Andy, I also do not see how this error could be raised.  I tested the
statement from IDLE shell as well as the other frameworks I mentioned
below.  I also reviewed the table creation statements to see if there was
something re MySQL data types I was missing:

<code>
        sql = """CREATE TABLE URLs (
              id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
              url VARCHAR(255) UNIQUE KEY NOT NULL,
              title VARCHAR(255)
              ) TYPE = InnoDB;"""

                sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
                      url_id INT NOT NULL,
                      ) TYPE = InnoDB;"""
</code>

As you can see I am selecting two fields, url and title, from URLs where
URLs.id = URLs_WITH_MATCHES.url_id, both are type INT.

On Fri, 31 Oct 2003, Andy Dustman wrote:

> Sorry to have to ask this, but are you sure that's the SQL that
> generates the error? I don't see any way for that error to be raised.
>
> On Mon, 2003-10-27 at 17:14, tpc@csua.berkeley.edu wrote:
> > hi Grisha and Andy, after consulting with my coworker I believe there is a
> > bug in how MySQLdb interacts with mod_python that you should know of.  He
> > suggested I try out the same script that was giving me problems  with
> > Python CGI, and it works just fine.  The only difference is the values in
> > the tuple get switched around, so the tuple that is returned is (title,
> > URL) but no more invalid literal for float, int or long errors.  The
> > critical piece of code in question involves an implementation in Python
> > of a MySQL SELECT statement of two fields from one table joined to another
> > table that works just fine from the command line, in MySQL shell, and in
> > Python CGI:
> >
> > 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> > URLs.id = URLs_WITH_MATCHES.url_id;"""
> > 	cursor.execute(sql)
> >
> > gives me:
> >
> > <paste>
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 149, in handler
> >     module = apache.import_module(module_name, req.get_config(), [path])
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
> > in import_module
> >     module = imp.load_module(mname, f, p, d)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
> >     search(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 47, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 15, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 42, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> > </paste>
> --
> Andy Dustman         PGP: 0x930B8AB6
>     @       .net     http://dustman.net/andy
> Freedom isn't free. It's sold to the highest bidder.
>

From rpeterso at mtholyoke.edu  Fri Oct 31 14:28:04 2003
From: rpeterso at mtholyoke.edu (Ron Peterson)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] is mod_python threadsafe?
Message-ID: <20031031192804.GA724@mtholyoke.edu>

Is the latest mod_python threadsafe?  I.E. - is it o.k. to run under
apache compiled using --with-mpm=worker?

-- 
Ron Peterson                          -o)
Network & Systems Manager             /\\
Mount Holyoke College                _\_v
http://www.mtholyoke.edu/~rpeterso   ---- 
From jpeterson at ainet.com  Fri Oct 31 12:43:39 2003
From: jpeterson at ainet.com (Jim Peterson)
Date: Fri Jan  9 21:47:51 2004
Subject: [mod_python] basic cgi not working with mp 3.0.3
Message-ID: <3FA2C97B.80004@ainet.com>

Hi,

total newb to python, apache, mod_python, spyce.

running Apache/2.0.47 (Win32) mod_python/3.0.3 Python/2.2.2 Spyce 1.3.11
under Win2K, using ActiveState Python.

i'm trying to use the 'production ready', stable stuff.

Here's the details.  TIA

---------------------------------------------------------------------

Trying to port my CGI app to mod_python. It was blowing up until I 
traced the failure line to mod_python.apache.  I diffed the file against 
a beta version, found a patch there, and applied the patch to my 
apache.py.  The patch stopped the bomb but I'm not getting any form fields.

     #################################
     # original code
     #for k in sav_env:
     #    osenv[k] = env[k]

     # after the patch
     for k in sav_env:
         osenv[k] = sav_env[k]

I don't have any idea if that is relevant.

My test code works in a true CGI environment but not under the mp cgi 
handler.  I'm using Apache aliases to configure both true CGI and mp cgi
against the same directory.

# --------------------------------------------------------
# this configures a conventional CGI setup
ScriptAlias /xcgi-bin/ /Jim/Home/Web/CGI/
<Location /xcgi-bin/ >
     AllowOverride None
     Options +Indexes +ExecCGI
     Order allow,deny
     Allow from all
</Location>
# --------------------------------------------------------
# this configures a mod_python CGI handler, I guess
Alias /cgi-bin/ /Jim/Home/Web/CGI/
<Location /cgi-bin/ >
   SetHandler python-program
   PythonHandler mod_python.cgihandler
   PythonDebug On
</Location>

I invoke my test code with either URL.

I test mod_python handling with url of this form:
/cgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

I test true cgi handling with url of this form:
/xcgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

Throughout my app I pass values thru the URL/querystring.

Under true CGI, my script gets values in the form fields.  Under mp cgi, 
it gets None.

Here is the CGI script:

# ------------------- cut here --------------------
#!python

# cgitest.py
#
# test cgi port to mod_python cgi handler
#

import cgi
form = cgi.FieldStorage()

# print content type here to enable html rendering of debug form
print "Content-Type: text/html\n\n"

# prints dict of env vars, for debugging
#cgi.print_environ()

# prints dict of form args, for debugging
cgi.print_form(form)

# extract the data from the query string
fielda = form.getvalue('fielda')
fieldb = form.getvalue('fieldb')

# content-type printed above

html = \
'''
<html>
<head>
<title> cgitest.py </title>
</head>
<body>
<hr />
<table>
<tr><td> fielda </td><td> %s </td></tr>
<tr><td> fieldb </td><td> %s </td></tr>
</table>
<hr />
</body>
</html>
'''

print html % (fielda, fieldb)


# ---------------------------------------------------------------
# cgitest.py - end of file
# ---------------------------------------------------------------
#



From perry.tew at cibavision.novartis.com  Wed Oct  1 16:03:20 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] writing to a file from mod_python
Message-ID: <OF32955EC0.F1936B00-ON85256DB2.006DFC43-85256DB2.006E2B3B@EU.novartis.net>

For security reasons, it's common to run the apache instance under a 
restricted user.  Many times this is 'noboby'. 
I only assumed 'nobody' based on past problems by other people.    At any 
rate, it seems you've solved your problem.

-Perry







hi Perry,

Yes !  Thank you.  I assumed if the relative paths were ok in a command
line execution they must be ok in mod python.  By the way, how do you
figure the apache instance is running under 'nobody' ?  In the httpd.conf
there is clearly a section where the user and group are defined by
default as 'apache'.

On Tue, 30 Sep 2003 perry.tew@cibavision.novartis.com wrote:

> Hello.
> Is your apache instance running under the 'nobody' user, or something
> similar?    If so, chmoding the somefile.txt to 'apache' will not help.
> I would advise caution in writing out files to relative paths.  Given 
that
> mod_python is an extension of Apache, would not a relative file
> such as 'somefile.txt' be written to the ServerRoot or bin directory?
> (I've never tried it).
> Here's something to try:  change the file from 'somefile.txt' to
> '/tmp/somefile.txt'. Almost every user id can write to the /tmp 
directory.
>
>
> Hope this helps,
> Perry Tew
>
>
>
>
>
> <tpc@csua.berkeley.edu>
> Sent by: mod_python-bounces@modpython.org
> 09/30/2003 04:37 PM
>
>
>         To:     <mod_python@modpython.org>
>         cc:
>         Subject:        [mod_python] writing to a file from mod_python
>
>
>
> hello all I have the following script that ran fine from the command 
line:
>
> <code>
> #!/usr/bin/env python
>
> #string1 = "hello world!"
>
> def writeFile(string1):
>         open('somefile.txt', 'w').write(string1)
>
> ## writeFile(string1)
> </code>
>
> but as soon as I ported it to mod python I got the following:
>
> <paste>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
335,
> in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
>
>   File "/var/www/html/python/testing.py", line 7, in writeFile
>
> IOError: [Errno 13] Permission denied: 'somefile.txt'
> </paste>
>
> I searched the web for the error message, chmod'ed 777 somefile.txt, and
> even chown'ed and chgrp'ed to user and group apache, all to no avail. Is
> there a way to write to a file from mod python ?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>




From perry.tew at cibavision.novartis.com  Wed Oct  1 16:39:32 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] 
 I can access mod_ssl cert env vars using PerlAuthenHandler, but howto do
 it with a PythonAuthenHandler?
Message-ID: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>

Hello,
   I'm trying to port a mod_perl handler to mod_python. 
The mod_perl handler was based off an Authentication Handler discussed 
in Chapter 6 of the "Writing Apache Modules in Perl and C" book by 
MacEachern 
(page 326 for those who have the book).   At any rate, concerning how to 
access 
environment variables set by mod_ssl, the book states correctly the 
following:

"""
The handler then issues a subrequest and retrieves the value of 
SSL_CLIENT_DN from 
the subrequest's environment table.  The subrequest is necessary because 
the parsed 
certificate fields aren't placed into the table until the fixup stage, 
which ordinarily occurs 
after the authorization phase.
"""


So, my perl code looks like this:
##########################################
my $subr = $r->lookup_uri($r->uri);
my $env = $subr->subprocess_env;
my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
my $dn = $env->{'SSL_CLIENT_S_DN'};
##########################################




I'm trying to do the same thing in python with this:
############################################
        req.internal_redirect(req.unparsed_uri)
        req.add_common_vars()
        for k, v in req.subprocess_env.items():
                msg = k + "=" + v
                apache.log_error( msg , apache.APLOG_NOTICE )

############################################

However, the SSL vars aren't in the env table when my handler dumps the 
items to the log. 
The handler is being called and it dumps a lot of
env variables to the log, but no SSL vars.  The PythonAuthenHandler that 
contains the code above 
protects the printenv script, which I call to test the handlers.  The 
printenv script is displaying all
of the SSL env vars correctly, so I know I have the mod_ssl directives 
correct.

Does anyone see an error in what I'm doing wrong (or need to do)?  This is 
my first attempt as writing an AuthenHandler
and I would greatly appreciate any insight.

Thanks,
Perry Tew
From perry.tew at cibavision.novartis.com  Wed Oct  1 17:47:02 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] 
	how to set the REMOTE_USER variable from a PythonAuthenHandler?
Message-ID: <OFDDDC9352.A22255E8-ON85256DB2.00779BAF-85256DB2.007797B1@EU.novartis.net>

Hello.

In a PerlAuthenHandler, I can do the following to set the REMOTE_USER 
variable
(which is necessary since I'm using SSL Client Certs for authentication 
and not Basic Auth, and no, I'm not using FakeBasicAuth)

Perl:
##########################################
package Apache::AuthClientCert;
# file: Apache/AuthClientCert;

use strict;
use Apache::Constants qw(:common);

sub handler{
        my $r = shift;
        return OK unless $r->is_main;

        my $subr = $r->lookup_uri($r->uri);
        my $env = $subr->subprocess_env;

        my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
        my $username = $cn;

        ### KEY LINE BELOW ###
        $r->connection->user( $username );
        ### KEY LINE ABOVE ###

        return OK;
}
1;
__END__
#############################################


If you notice in the perl script, I found that the REMOTE_USER variable is 

not populated, even
if I return OK, unless I explicitly set it using $r->connection->user( 
$username ). 

I go about it this
way because we all have digital certs in my company and it's an easy way 
to handle security.
However, even if I use SSL for the front door, my backend processes ( some 

java ) want to know
who is coming through the door. The only way to pass that information to a 

j2ee server like weblogic 
is via the REMOTE_USER variable.

So, my question is, how do I set this value using mod_python?  The docs 
state that req.user is read only.
I see the example PythonAuthenHandler (spam and eggs) uses 
req.connection.user, but I can't find any 
docs on that (anyone have a url)?

Does anyone know how to set the user so that the REMOTE_USER var is 
correctly populated?

Thanks for your time,
Perry

From alexiev at activesolutions.bg  Thu Oct  2 13:57:15 2003
From: alexiev at activesolutions.bg (Nikolay Alexiev)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] PublisherHandler
Message-ID: <200310021357.15162.alexiev@activesolutions.bg>

I'm using PublisherHandler for my project. This is my  .htaccess file

    AddHandler python-program .py
    SetHandler python-program
    PythonHandler mod_python.publisher
    PythonDebug On

But now I can't load pictures from this folder and from its subfolder. Can I 
do something or the only way is to move images in a folder that is a level 
above?
From schnieper at semafor.ch  Thu Oct  2 16:07:55 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] Problems with configure mod_python
Message-ID: <3F7C313B.8000300@semafor.ch>

Hi all

I tried to install the mod_python (www.modpython.org) for Apache Webserver.
By configure with
./configure --with-apxs /usr/sbin/apxs2-prefork
i get this error:

configure: error: yes not found or not executable

SuSE Linux 8.2
Apache 2.0
mod_python 3.0.1

Thanks in advance
Lukas

From grisha at modpython.org  Thu Oct  2 12:13:32 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031002121240.L57929@onyx.ispol.com>


Hmmm... I find it hard to believe that SuSE doesn't have the yes(1)
command. Are you sure your installation isn't corrupt somehow?

Grisha

On Thu, 2 Oct 2003, Lukas Schnieper wrote:

> Hi all
>
> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
>
> configure: error: yes not found or not executable
>
> SuSE Linux 8.2
> Apache 2.0
> mod_python 3.0.1
>
> Thanks in advance
> Lukas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Thu Oct  2 14:39:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
In-Reply-To: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
References: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
Message-ID: <20031002143438.X57929@onyx.ispol.com>



On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha
From grisha at modpython.org  Thu Oct  2 14:43:20 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <200310021357.15162.alexiev@activesolutions.bg>
References: <200310021357.15162.alexiev@activesolutions.bg>
Message-ID: <20031002144016.X57929@onyx.ispol.com>



On Thu, 2 Oct 2003, Nikolay Alexiev wrote:

> I'm using PublisherHandler for my project. This is my  .htaccess file
>
>     AddHandler python-program .py
>     SetHandler python-program

You don't need both AddHandler and SetHandler, SetHandler alone will cover
every type of file.

>     PythonHandler mod_python.publisher
>     PythonDebug On
>
> But now I can't load pictures from this folder and from its subfolder. Can I
> do something or the only way is to move images in a folder that is a level
> above?

You can create a subdirectory and add "SetHandler None" which reverses
previous SetHandler's:

http://httpd.apache.org/docs-2.0/mod/core.html#sethandler

HTH,

Grisha
From mikeklein at sbcglobal.net  Thu Oct  2 12:36:56 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002144016.X57929@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <3F7C7E58.20109@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
>  
>
>>I'm using PublisherHandler for my project. This is my  .htaccess file
>>
>>    AddHandler python-program .py
>>    SetHandler python-program
>>    
>>
>
>You don't need both AddHandler and SetHandler, SetHandler alone will cover
>every type of file.
>
>  
>
>>    PythonHandler mod_python.publisher
>>    PythonDebug On
>>
>>But now I can't load pictures from this folder and from its subfolder. Can I
>>do something or the only way is to move images in a folder that is a level
>>above?
>>    
>>
>
>You can create a subdirectory and add "SetHandler None" which reverses
>previous SetHandler's:
>
>http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
>HTH,
>
>Grisha
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>
Shouldn't he just remove the SetHandler line?


mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/bc38a4e3/attachment-0001.htm
From grisha at modpython.org  Thu Oct  2 16:01:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <3F7C7E58.20109@sbcglobal.net>
References: <200310021357.15162.alexiev@activesolutions.bg>
 <20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
Message-ID: <20031002155847.O60460@onyx.ispol.com>



On Thu, 2 Oct 2003, Mike Klein wrote:

> Shouldn't he just remove the SetHandler line?

That would do it too, but I'm guessing he specifically neede SetHandler.

This would allow to use SetHandler-style URL's, such as
http://myhost.com/guestbook/adduser, (as opposed to
http://myhost.com/guestbook.py/adduser), and at the same time be able to
server other files, e.g. http://myhost.com/images/blah.gif

Grisha
From perry.tew at cibavision.novartis.com  Thu Oct  2 16:09:00 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
Message-ID: <OF8FB48689.25434CDF-ON85256DB3.006CC438-85256DB3.006EB017@EU.novartis.net>

Grisha,
   Thanks for the tip!  I'll try that tonight. 

About the infinite recursion issue  ... yeah, I struggled with that a lot. 
 The perl code I had did the following:

 return OK unless $r->is_main;

to prevent this loop.  I had something in my handler like this:

if req.prev:
        return apache.OK

but I took it out and the handler didn't seem to hang.  Quite strange. 
It's obvious I have some more
learning to do.  I'll continue experimenting.


If I may ask you a different question along the lines of authentication. I 
have need to cache roles and acls for urls
in order to prevent hitting a database for every request.   I need a way 
to cache these values and have each of
my child processes access them.

1.  I'm using the "worker" MPM.  Is that acceptable for use with 
mod_python?  I haven't had a problem yet with it.
2. Is there a preferred way of sharing data among the different children? 
dbm? berkley db? IPC?   I don't mind 
file based persistance, but I'm ignorant of the fastest and safest way to 
cache this data.  Any thoughts would be
appreciated.

Something else I thought of was that I guess I could jack up the number of 
threads per child and limit the number of
children to something small.  Would that not keep the number of caches 
down to 3 or 4 ( 1 per child )?

I'm really enjoying mod_python.  Thanks for writing it.
Perry Tew







On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha



From mikeklein at sbcglobal.net  Thu Oct  2 13:08:10 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C85AA.70907@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Mike Klein wrote:
>
>  
>
>>Shouldn't he just remove the SetHandler line?
>>    
>>
>
>That would do it too, but I'm guessing he specifically neede SetHandler.
>
>This would allow to use SetHandler-style URL's, such as
>http://myhost.com/guestbook/adduser, (as opposed to
>http://myhost.com/guestbook.py/adduser), and at the same time be able to
>server other files, e.g. http://myhost.com/images/blah.gif
>
>Grisha
>
>  
>
Caveat: I am a python 101 user...

My first mistake was assuming a php/jsp/shtml model for delivering 
pages. It took me a few tweaks to getting things in python similar to 
this model...where I can littler python files willy-nilly. I didn't see 
enough of his httpsd.conf file to understand what he wanted to do.

I just know his mistake 'smelled' similar to the first mistake I 
made...using SetHandler and then not being able to access anything else 
on my site!

For laughs...this is what I have (at a root/top level) in my httpsd.conf 
for Apache to deliver python pages from anywhere under my docroot:
------------------------
#
# Stuff for mod_python
#
AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On
------------------------

Other than having to specify functions within my py files (this is 
ok...standard), it gives me the 'document' under docroot model that I 
was looking for...

cheers,

mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/e07a9a26/attachment-0001.htm
From scott_list at mischko.com  Thu Oct  2 14:14:13 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] 
	Python Apache authentication module ala Perl's Apache::AuthDBI?
Message-ID: <200310021414.13041.scott_list@mischko.com>

Is there a similar creature for Python that allows me to authenticate Apache 
users against a database (Postgres)?

I'm trying to do all my new projects in Python and get away from Perl.  This 
is a piece I need in my toolbox.

TIA,
Scott
From cs1spw at bath.ac.uk  Thu Oct  2 22:16:29 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C95AD.2020604@bath.ac.uk>

Gregory (Grisha) Trubetskoy wrote:
> That would do it too, but I'm guessing he specifically neede SetHandler.
> 
> This would allow to use SetHandler-style URL's, such as
> http://myhost.com/guestbook/adduser, (as opposed to
> http://myhost.com/guestbook.py/adduser), and at the same time be able to
> server other files, e.g. http://myhost.com/images/blah.gif

As a newcomer to mod_python I'm still trying to work out the best 
practise for developing applications under it. I'm using SetHandler 
style URLs, but does anyone have any good tips on how to lay out an 
overall mod_python application?

Cheers,

Simon

From cl at scriptall.com  Thu Oct  2 18:45:18 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] req.form question
Message-ID: <1065134717.1102.58.camel@px101>

A point of curiosity.  Please don't hurt me.

Some time ago, I was able to refer to a form field value in this manner:

req.form["fieldname"]

Now, I have to refer to the value in this fashion:

req.form["fieldname"][0]

Granted, it's been a while since I've done any new scripting with
mod_python.  I've searched the mailing list and looked at the docs for
both v2 and v3 but can't find any reference to a change in the form
attribute of the request object.

When did the keys for req.form change to a list?

Thanks,
-Chuck

From michael at dynamine.net  Thu Oct  2 17:27:26 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] req.form question
In-Reply-To: <1065134717.1102.58.camel@px101>
References: <1065134717.1102.58.camel@px101>
Message-ID: <3F7CC26E.1000206@dynamine.net>

It didn't; whether the value is an object or a list depends on the form 
submission contents.

 From http://www.python.org/doc/2.2.3/lib/node297.html:

If the submitted form data contains more than one field with the same 
name, the object retrieved by "form[key]" is not a FieldStorage or 
MiniFieldStorage instance but a list of such instances. Similarly, in 
this situation, "form.getvalue(key)" would return a list of strings. If 
you expect this possibility (when your HTML form contains multiple 
fields with the same name), use the isinstance() built-in function to 
determine whether you have a single instance or a list of instances. For 
example, this code concatenates any number of username fields, separated 
by commas:


value = form.getvalue("username", "")
if isinstance(value, list):
     # Multiple username fields specified
     usernames = ",".join(value)
else:
     # Single or no username field specified
     usernames = value

--Michael


Chuck Lima wrote:

> A point of curiosity.  Please don't hurt me.
> 
> Some time ago, I was able to refer to a form field value in this manner:
> 
> req.form["fieldname"]
> 
> Now, I have to refer to the value in this fashion:
> 
> req.form["fieldname"][0]
> 
> Granted, it's been a while since I've done any new scripting with
> mod_python.  I've searched the mailing list and looked at the docs for
> both v2 and v3 but can't find any reference to a change in the form
> attribute of the request object.
> 
> When did the keys for req.form change to a list?
> 
> Thanks,
> -Chuck
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From gdamjan at mail.net.mk  Fri Oct  3 03:07:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:53:53 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031003010704.GB25894@legolas.on.net.mk>

> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
> 
> configure: error: yes not found or not executable


./configure --with-apxs=/usr/sbin/apxs2-prefork
                      ^^^

Hey did this appear on news?
The question (and the answer) are very familiar to me...


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cl at scriptall.com  Thu Oct  2 21:17:41 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] req.form question
In-Reply-To: <3F7CC26E.1000206@dynamine.net>
References: <1065134717.1102.58.camel@px101> <3F7CC26E.1000206@dynamine.net>
Message-ID: <1065143861.1102.26.camel@px101>

Yep, sure enough, I had multiple input fields named the same thing.  

I'm looping over a bunch of records and creating a form for each one on
a single page and forgot to put a </form> at the end on each iteration!!

Thank you.

-Chuck


On Thu, 2003-10-02 at 20:27, Michael S. Fischer wrote:
> It didn't; whether the value is an object or a list depends on the form 
> submission contents.
> 
>  From http://www.python.org/doc/2.2.3/lib/node297.html:
> 
> If the submitted form data contains more than one field with the same 
> name, the object retrieved by "form[key]" is not a FieldStorage or 
> MiniFieldStorage instance but a list of such instances. Similarly, in 
> this situation, "form.getvalue(key)" would return a list of strings. If 
> you expect this possibility (when your HTML form contains multiple 
> fields with the same name), use the isinstance() built-in function to 
> determine whether you have a single instance or a list of instances. For 
> example, this code concatenates any number of username fields, separated 
> by commas:
> 
> 
> value = form.getvalue("username", "")
> if isinstance(value, list):
>      # Multiple username fields specified
>      usernames = ",".join(value)
> else:
>      # Single or no username field specified
>      usernames = value
> 
> --Michael
> 
> 
> Chuck Lima wrote:
> 
> > A point of curiosity.  Please don't hurt me.
> > 
> > Some time ago, I was able to refer to a form field value in this manner:
> > 
> > req.form["fieldname"]
> > 
> > Now, I have to refer to the value in this fashion:
> > 
> > req.form["fieldname"][0]
> > 
> > Granted, it's been a while since I've done any new scripting with
> > mod_python.  I've searched the mailing list and looked at the docs for
> > both v2 and v3 but can't find any reference to a change in the form
> > attribute of the request object.
> > 
> > When did the keys for req.form change to a list?
> > 
> > Thanks,
> > -Chuck
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> 

From gnb at itga.com.au  Fri Oct  3 11:26:12 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] req.form question 
In-Reply-To: Your message of Thu, 02 Oct 2003 18:45:18 -0400.
Message-ID: <200310030126.LAA21892@lightning.itga.com.au>

IN addition to the list vs singleton issue Michael mentioned, it seems that in 
mod_python 2.7 the list is a list of strings, but in mod_python 3, the list is 
a list of FieldStorage objects.  

Greg.

From robert at leftwich.info  Fri Oct  3 11:04:46 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] mod_python mysteriously stopped working under Windows
Message-ID: <MPG.19e775ef801061dd989684@news.gmane.org>

I have this bizarre problem that is driving me insane. I had a working 
mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python 
3.1.0a - all vanilla). I needed to combine 2 projects so I set out to 
create a new project directory structure and ran out of disk space on 
the c-drive while doing something unrelated to mod_python/apache/etc. I 
cleaned up a few directories (again unrelated) and ever since then I 
cannot get even the simplest mod_python setup to work. I've tried 
uninstalling/reinstalling everything, even reverting to python 
2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including 
explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
\site-packages;C:\Python23\lib (among other combinations) I get an error 
in the log file saying "[error] make_obcallback: could not import 
mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does 
not work at all, no messages anywhere - it is as if it is totally 
ignored. Note also that straight python cgi (e.g. pyblosxom) is working 
fine. At the moment I'm using the httpd.conf settings and mptest.py 
straight from the Testing section of the manual.

Can anyone shed light on this problem ?

Robert


From tpc at csua.berkeley.edu  Thu Oct  2 19:41:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] mod_python mysteriously stopped working under
 Windows
In-Reply-To: <MPG.19e775ef801061dd989684@news.gmane.org>
Message-ID: <20031002193058.S79163-100000@localhost.name>


oh wow this problem again.  I am going to repost an email I sent to one
Kevin Douglas who kept hitting this same brick wall:

<paste>
Date: Mon, 9 Jun 2003 14:37:28 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: kevin douglas <fitnah55@hotmail.com>
Cc: mod_python@modpython.org
Subject: RE: [mod_python] need working fix for 'import site' aka
    'ImportError'aka'make_obcallback' error


> -----
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> [Sun Jun 08 00:06:50 2003] [error] make_obcallback: could not import
> mod_python.apache.
> -----
>


I had that exact same problem, although I did not spend as much time
trying to fix it as you apparently have.  I ended up just reinstalling
mod_python.  It works fine now, though I don't understand why it broke in
the first place.
</paste>

if you search the archives you can find out how he resolved the problem,
which he ultimately did, as he recounted to us:

<paste>
Date: Mon, 9 Jun 2003 23:38:36 -0400
From: kevin douglas <fitnah55@hotmail.com>
To: mod_python@modpython.org
Subject: [mod_python]  working fix [FAQ: 'import site' failed; use -v for
traceback]


as stated in the make_obcallback FAQ entry, this is a sys.path
problem...

the main problem (i believe) is that the path that is available at
runtime is not always the same as it was with the previous run of
apache

with a linux distro that requires python as part of the base install
(even
with a minimal install) - the python in /usr is going to supercede
the python in /usr/local even if the path properly includes /usr/lib
and site-packages/mod_python is pointed to properly

what you should do is axe all the python rpm's that you can
(python-base is required for libuser which is required for passwd)
and then take the file list from python-base and manually delete it
(/usr/lib/python2.2 and /usr/bin/python)

this will free up the proper /usr/local/lib/python2.2 to be first in
line in the path

what's confusing is that you link to /usr/local/bin/python2.2 explicitly
to compile mod_python, but it still ends up with /usr/lib/python2.2
as the primary lib source... and even if you get the paths added as the
other FAQ entry states - you're still going to be running the old
site.py from /usr/lib...

and to make matters even worse sometimes it randomly decides to work
even before you axe the default distro install..

:o



kd
</paste>

As you can see something to do with paths and multiple Python versions
installed is the reason you are having trouble.

On Fri, 3 Oct 2003, Robert Leftwich wrote:

> I have this bizarre problem that is driving me insane. I had a working
> mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python
> 3.1.0a - all vanilla). I needed to combine 2 projects so I set out to
> create a new project directory structure and ran out of disk space on
> the c-drive while doing something unrelated to mod_python/apache/etc. I
> cleaned up a few directories (again unrelated) and ever since then I
> cannot get even the simplest mod_python setup to work. I've tried
> uninstalling/reinstalling everything, even reverting to python
> 2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including
> explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
> \site-packages;C:\Python23\lib (among other combinations) I get an error
> in the log file saying "[error] make_obcallback: could not import
> mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does
> not work at all, no messages anywhere - it is as if it is totally
> ignored. Note also that straight python cgi (e.g. pyblosxom) is working
> fine. At the moment I'm using the httpd.conf settings and mptest.py
> straight from the Testing section of the manual.
>
> Can anyone shed light on this problem ?
>
> Robert
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



From grisha at apache.org  Thu Oct  2 22:48:59 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] O'Reilly Onlamp.com
In-Reply-To: <3F7C3169.8040608@semafor.ch>
References: <3F7C3169.8040608@semafor.ch>
Message-ID: <20031002224613.S61437@onyx.ispol.com>


http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html

:-)

Grisha
From robert at leftwich.info  Fri Oct  3 13:30:55 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] 
	Re: mod_python mysteriously stopped working under   Windows
References: <MPG.19e775ef801061dd989684@news.gmane.org>
	<20031002193058.S79163-100000@localhost.name>
Message-ID: <MPG.19e7987abd327c0c989685@news.gmane.org>

In article <20031002193058.S79163-100000@localhost.name>, 
tpc@csua.berkeley.edu says...
> 
> oh wow this problem again.  I am going to repost an email I sent to one
> Kevin Douglas who kept hitting this same brick wall:
>  snip....

> As you can see something to do with paths and multiple Python versions
> installed is the reason you are having trouble.

That's what I thought, so I had completely uninstalled/deleted every 
python version/lib I could find and then re-installed only v2.3 - but no 
joy (and I also tried explicitly setting PYTHONHOME before running the 
Apache exe).

Robert


From neel at mediapulse.com  Fri Oct  3 09:40:58 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] RE: O'Reilly Onlamp.com
Message-ID: <C0FC22C08B82074A88B50061764157776B9749@johnson.mediapulse.net>

Woot!  And the author seems so in trouch with mod_python too!

Mike

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@apache.org] 
> Sent: Thursday, October 02, 2003 10:49 PM
> To: python-dev@httpd.apache.org; mod_python@modpython.org
> Subject: O'Reilly Onlamp.com
> 
> 
> 
> http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html
> 
> :-)
> 
> Grisha
> 

From alexiev at activesolutions.bg  Fri Oct  3 16:57:22 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] PublisherHandler
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <001b01c389b6$44c76fc0$0a01010a@dev1>

It's work fine under linux, but still have the same problem under windows.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "Nikolay Alexiev" <alexiev@activesolutions.bg>
Cc: <mod_python@modpython.org>
Sent: Thursday, October 02, 2003 9:43 PM
Subject: Re: [mod_python] PublisherHandler


>
>
> On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
> > I'm using PublisherHandler for my project. This is my  .htaccess file
> >
> >     AddHandler python-program .py
> >     SetHandler python-program
>
> You don't need both AddHandler and SetHandler, SetHandler alone will cover
> every type of file.
>
> >     PythonHandler mod_python.publisher
> >     PythonDebug On
> >
> > But now I can't load pictures from this folder and from its subfolder.
Can I
> > do something or the only way is to move images in a folder that is a
level
> > above?
>
> You can create a subdirectory and add "SetHandler None" which reverses
> previous SetHandler's:
>
> http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
> HTH,
>
> Grisha

From mark at s-wit.net  Fri Oct  3 14:31:11 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] Hello newbie problems 
Message-ID: <004b01c389dc$85014810$6a1fa8c0@ocfl061>

Hello,
I installed python 2.3.1 (or whatever is the latest from the site)
I d/l the mod_python 3.03
I have apache 2.0.47 running.
I did as per each README for each isntall.
Apache is running. python seemed to install ok. There were no errors.
I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
That seemed okay.
make gives me this error: google search brought up nothing on it. (last 2
lines).
I did the ./httpd -DONE_PROCESS also.

python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /temp/mod_python-3.0.3/src.
*** Error code 1
Mark DeWar

From grisha at modpython.org  Fri Oct  3 15:16:26 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] Hello newbie problems 
In-Reply-To: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
Message-ID: <20031003151613.S71021@onyx.ispol.com>


Check this out:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> Hello,
> I installed python 2.3.1 (or whatever is the latest from the site)
> I d/l the mod_python 3.03
> I have apache 2.0.47 running.
> I did as per each README for each isntall.
> Apache is running. python seemed to install ok. There were no errors.
> I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> That seemed okay.
> make gives me this error: google search brought up nothing on it. (last 2
> lines).
> I did the ./httpd -DONE_PROCESS also.
>
> python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
> requestobject.c:1055: (Each undeclared identifier is reported only once
> requestobject.c:1055: for each function it appears in.)
> requestobject.c:1056: syntax error before `l'
> requestobject.c:1057: `l' undeclared (first use in this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> *** Error code 1
>
> Stop in /temp/mod_python-3.0.3/src.
> *** Error code 1
> Mark DeWar
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From perry.tew at cibavision.novartis.com  Fri Oct  3 15:18:08 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] 
 I hacked out Application.py using Session.py as a template. Is sucha thing
 needed by anyone?
Message-ID: <OF1B330742.C489E342-ON85256DB4.0068F426-85256DB4.006A07FD@EU.novartis.net>

Hello,
   I had need for global persistence in my mod_python application under 
Solaris.  I read Grisha's article last night talking about the new Session 
code.  I thought is was really useful.  So I looked it over and used it as 
a template for creating application level data sharing similar to Visual 
Basic's Application object or JSP's application object.  I basically 
stripped out the cookie code, time stamping, and used a constant hash id 
for retrieving the data.

I'm still raw to python.  I was wondering if such functionality is needed 
by the mod_python community or if such a thing already exists.  I was also 
hoping that if somebody did have a use for it then they could code review 
it for me and hopefully provide criticism or optimizations on the code. If 
neither, then I'll just keep it for my own use.

The code is listed below.  I'm not sure if this mailing list accepts 
attachments, so I'm providing it both ways.

Thanks,
Perry Tew




#######################################################################
from mod_python import apache
import _apache

import os
import time
import anydbm, whichdb
import cPickle
import tempfile

APP_SID = 'app.sid'

tempdir = tempfile.gettempdir()


class BaseApplication(dict):

    def __init__(self, req, lock=1):

        self._req = req
        self._lock = lock
        self._new = 1
        self._created = 0
        self._locked = 0

        dict.__init__(self)

        self.init_lock()

        # attempt to load ourselves
        #self.lock()
        if self.load():
            self._new = 0

        if self._new:
            self._created = time.time()


    def load(self):
        dict = self.do_load()
        if dict == None:
            return 0

        self._created  = dict["_created"]
        self.update(dict["_data"])
        return 1

    def save(self):
        dict = {"_data"    : self.copy(), 
        "_created" : self._created}
        self.do_save(dict)

    def delete(self):
        self.do_delete()
        self.clear()

    def init_lock(self):
        pass

    def lock(self):
        if self._lock:
            _apache._global_lock(self._req.server, None, 0)
            self._locked = 1

    def unlock(self):
        if self._lock and self._locked:
            _apache._global_unlock(self._req.server, None, 0)
            self._locked = 0

    def is_new(self):
        return not not self._new

    def created(self):
        return self._created

    def __del__(self):
        self.unlock()



class DbmApplication(BaseApplication):

    def __init__(self, req, dbm=None, dbmtype=anydbm):

        if not dbm:
            opts = req.get_options()
            if opts.has_key("ApplicationDbm"):
                dbm = opts["ApplicationDbm"]
            else:
                dbm = os.path.join(tempdir, req.server.server_hostname + 
str(req.server.port))

        self._dbmfile = dbm
        self._dbmtype = dbmtype

        BaseApplication.__init__(self, req)

    def _set_dbm_type(self):
        module = whichdb.whichdb(self._dbmfile)
        if module:
            self._dbmtype = __import__(module)
 
    def _get_dbm(self):
        result = self._dbmtype.open(self._dbmfile, 'c')
        if self._dbmtype is anydbm:
            self._set_dbm_type()
        return result


    def do_load(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            if dbm.has_key(APP_SID):
                return cPickle.loads(dbm[APP_SID])
            else:
                return None
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_save(self, dict):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            dbm[APP_SID] = cPickle.dumps(dict)
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_delete(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            try:
                del dbm[APP_SID]
            except KeyError: pass
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)


class MemoryApplication(BaseApplication):

    sdict = {}

    def __init__(self, req):

        BaseApplication.__init__(self, req)

    def do_load(self):
        if MemoryApplication.sdict.has_key(APP_SID):
            return MemoryApplication.sdict[APP_SID]
        return None

    def do_save(self, dict):
        MemoryApplication.sdict[APP_SID] = dict

    def do_delete(self):
        try:
            del MemoryApplication.sdict[APP_SID]
        except KeyError: pass

def Application(req):

    threaded = _apache.mpm_query(apache.AP_MPMQ_IS_THREADED)
    forked = _apache.mpm_query(apache.AP_MPMQ_IS_FORKED)
    daemons =  _apache.mpm_query(apache.AP_MPMQ_MAX_DAEMONS)

    if (threaded and ((not forked) or (daemons == 1))):
        return MemoryApplication(req)
    else:
        return DbmApplication(req)
#######################################################################
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Application.py
Type: application/octet-stream
Size: 7023 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031003/199b5fec/Application-0001.obj
From mark at s-wit.net  Fri Oct  3 16:34:29 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] Hello newbie problems #2
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
Message-ID: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>

The below link got mod_python to compile and install.
However when I put the info into the httpd.conf I get this error:

Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
Cannot load /usr/local/apache2/modules/mod_python.so into server:
/usr/local/apa
che2/modules/mod_python.so: Undefined symbol "pthread_self"

At the bottom of the link provided I see that I should or thought I should
configure with these options:
spiderman#
./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
e2/bin/apxs

(I tried the --with-python=  being blank but system sat there and with
/usr/local/bin/ just gave an error.)

I could not find more info on this error.
Thanks
mark

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "M.D. DeWar" <mark@s-wit.net>
Cc: <mod_python@modpython.org>
Sent: Friday, October 03, 2003 3:16 PM
Subject: Re: [mod_python] Hello newbie problems


>
> Check this out:
>
> http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
>
> > Hello,
> > I installed python 2.3.1 (or whatever is the latest from the site)
> > I d/l the mod_python 3.03
> > I have apache 2.0.47 running.
> > I did as per each README for each isntall.
> > Apache is running. python seemed to install ok. There were no errors.
> > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > That seemed okay.
> > make gives me this error: google search brought up nothing on it. (last
2
> > lines).
> > I did the ./httpd -DONE_PROCESS also.
> >
> > python2.3  -c -o requestobject.lo requestobject.c && touch
requestobject.slo
> > requestobject.c: In function `getreq_recmbr_off':
> > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
function)
> > requestobject.c:1055: (Each undeclared identifier is reported only once
> > requestobject.c:1055: for each function it appears in.)
> > requestobject.c:1056: syntax error before `l'
> > requestobject.c:1057: `l' undeclared (first use in this function)
> > requestobject.c: At top level:
> > requestobject.c:1270: warning: initialization from incompatible pointer
type
> > apxs:Error: Command failed with rc=65536
> > .
> > *** Error code 1
> >
> > Stop in /temp/mod_python-3.0.3/src.
> > *** Error code 1
> > Mark DeWar
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >

From grisha at modpython.org  Fri Oct  3 16:49:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
Message-ID: <20031003164715.N75641@onyx.ispol.com>


This oftentimes means that either of Apache or Python was compiled without
thread support, and therefore you need to make sure that both are with or
without threads.

Which operating system is this on?

Grisha

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> The below link got mod_python to compile and install.
> However when I put the info into the httpd.conf I get this error:
>
> Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> Cannot load /usr/local/apache2/modules/mod_python.so into server:
> /usr/local/apa
> che2/modules/mod_python.so: Undefined symbol "pthread_self"
>
> At the bottom of the link provided I see that I should or thought I should
> configure with these options:
> spiderman#
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> e2/bin/apxs
>
> (I tried the --with-python=  being blank but system sat there and with
> /usr/local/bin/ just gave an error.)
>
> I could not find more info on this error.
> Thanks
> mark
>
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 3:16 PM
> Subject: Re: [mod_python] Hello newbie problems
>
>
> >
> > Check this out:
> >
> > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > Hello,
> > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > I d/l the mod_python 3.03
> > > I have apache 2.0.47 running.
> > > I did as per each README for each isntall.
> > > Apache is running. python seemed to install ok. There were no errors.
> > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > > That seemed okay.
> > > make gives me this error: google search brought up nothing on it. (last
> 2
> > > lines).
> > > I did the ./httpd -DONE_PROCESS also.
> > >
> > > python2.3  -c -o requestobject.lo requestobject.c && touch
> requestobject.slo
> > > requestobject.c: In function `getreq_recmbr_off':
> > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> function)
> > > requestobject.c:1055: (Each undeclared identifier is reported only once
> > > requestobject.c:1055: for each function it appears in.)
> > > requestobject.c:1056: syntax error before `l'
> > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > requestobject.c: At top level:
> > > requestobject.c:1270: warning: initialization from incompatible pointer
> type
> > > apxs:Error: Command failed with rc=65536
> > > .
> > > *** Error code 1
> > >
> > > Stop in /temp/mod_python-3.0.3/src.
> > > *** Error code 1
> > > Mark DeWar
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Fri Oct  3 19:28:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<20031003164715.N75641@onyx.ispol.com>
	<000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
Message-ID: <20031003192203.W77195@onyx.ispol.com>


On Fri, 3 Oct 2003, M.D. DeWar wrote:

> freebsd 4.8

On FreeBSD Apache defaults to no threads which creates a problem, so
either you have to compile Python without threads, or use a trick to load
threaded libs into Apache.

I think the simplest thing on FreeBSD is to use the ports rather than
trying to do it by hand (you'll need an up-to-date ports collection, see
the FreeBSD handbook on that):

# cd /usr/ports/www/mod_python3
# make install

Then read the warning at the end of the install that will tell you about
the thread libs loading trick.

Grisha


> apache 2.0.47
> php 4.3.2
> Mark
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 4:49 PM
> Subject: Re: [mod_python] Hello newbie problems #2
>
>
> >
> > This oftentimes means that either of Apache or Python was compiled without
> > thread support, and therefore you need to make sure that both are with or
> > without threads.
> >
> > Which operating system is this on?
> >
> > Grisha
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > The below link got mod_python to compile and install.
> > > However when I put the info into the httpd.conf I get this error:
> > >
> > > Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> > > Cannot load /usr/local/apache2/modules/mod_python.so into server:
> > > /usr/local/apa
> > > che2/modules/mod_python.so: Undefined symbol "pthread_self"
> > >
> > > At the bottom of the link provided I see that I should or thought I
> should
> > > configure with these options:
> > > spiderman#
> > >
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> > > e2/bin/apxs
> > >
> > > (I tried the --with-python=  being blank but system sat there and with
> > > /usr/local/bin/ just gave an error.)
> > >
> > > I could not find more info on this error.
> > > Thanks
> > > mark
> > >
> > > ----- Original Message -----
> > > From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> > > To: "M.D. DeWar" <mark@s-wit.net>
> > > Cc: <mod_python@modpython.org>
> > > Sent: Friday, October 03, 2003 3:16 PM
> > > Subject: Re: [mod_python] Hello newbie problems
> > >
> > >
> > > >
> > > > Check this out:
> > > >
> > > > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> > > >
> > > > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> > > >
> > > > > Hello,
> > > > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > > > I d/l the mod_python 3.03
> > > > > I have apache 2.0.47 running.
> > > > > I did as per each README for each isntall.
> > > > > Apache is running. python seemed to install ok. There were no
> errors.
> > > > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for
> mod_python.
> > > > > That seemed okay.
> > > > > make gives me this error: google search brought up nothing on it.
> (last
> > > 2
> > > > > lines).
> > > > > I did the ./httpd -DONE_PROCESS also.
> > > > >
> > > > > python2.3  -c -o requestobject.lo requestobject.c && touch
> > > requestobject.slo
> > > > > requestobject.c: In function `getreq_recmbr_off':
> > > > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> > > function)
> > > > > requestobject.c:1055: (Each undeclared identifier is reported only
> once
> > > > > requestobject.c:1055: for each function it appears in.)
> > > > > requestobject.c:1056: syntax error before `l'
> > > > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > > > requestobject.c: At top level:
> > > > > requestobject.c:1270: warning: initialization from incompatible
> pointer
> > > type
> > > > > apxs:Error: Command failed with rc=65536
> > > > > .
> > > > > *** Error code 1
> > > > >
> > > > > Stop in /temp/mod_python-3.0.3/src.
> > > > > *** Error code 1
> > > > > Mark DeWar
> > > > >
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
From idiot1 at netzero.net  Sat Oct  4 20:17:18 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <20031003164715.N75641@onyx.ispol.com>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
	<20031003164715.N75641@onyx.ispol.com>
Message-ID: <3F7F630E.2050601@netzero.net>

Apache FORKS, spawning new processes- in advance, and has a stable of them on 
hold waiting for incoming requests. When one has handled the number of service 
requests you preset in the conf file, it dies- and is replaced with a new one. 
This uses up a lot of memory with a lot of daemonspawn, and a threading server 
is more memory efficent, although difficult as all hell to write. Python will 
support threading servers if you write one that way. In fact, just to screw with 
your minds, here is one now:
-------------------------------BEWARE WORD WRAP-----------------------------
#!C:\Python22\Pythonw.exe
from SocketServer import ThreadingMixIn
import BaseHTTPServer, CGIHTTPServer, os
#
os.chdir ('.\web')	# INSTALL IN c:\Python22; web pages in ~\web
#
class ThreadingCGIServer(ThreadingMixIn,BaseHTTPServer.HTTPServer):
	pass
import sys
server=ThreadingCGIServer(('',8080),CGIHTTPServer.CGIHTTPRequestHandler)
try:
	while 1:
		sys.stdout.flush()
		server.handle_request()
except KeyboardInterrupt:
	print 'Finished.'
---------------------------END OF SCRIPT, CHAOS FOLLOWS------------------
This is by Steve Holden of the book 'Cgi programming for the Internet'.



Gregory (Grisha) Trubetskoy wrote:

> This oftentimes means that either of Apache or Python was compiled without
> thread support, and therefore you need to make sure that both are with or
> without threads.
> 
> Which operating system is this on?
> 
> Grisha
> 
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
> 
> 
>>The below link got mod_python to compile and install.
>>However when I put the info into the httpd.conf I get this error:
>>
>>Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
>>Cannot load /usr/local/apache2/modules/mod_python.so into server:
>>/usr/local/apa
>>che2/modules/mod_python.so: Undefined symbol "pthread_self"
>>
>>At the bottom of the link provided I see that I should or thought I should
>>configure with these options:
>>spiderman#
>>./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
>>e2/bin/apxs
>>
>>(I tried the --with-python=  being blank but system sat there and with
>>/usr/local/bin/ just gave an error.)
>>
>>I could not find more info on this error.
>>Thanks
>>mark
>>
>>----- Original Message -----
>>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>>To: "M.D. DeWar" <mark@s-wit.net>
>>Cc: <mod_python@modpython.org>
>>Sent: Friday, October 03, 2003 3:16 PM
>>Subject: Re: [mod_python] Hello newbie problems
>>
>>
>>
>>>Check this out:
>>>
>>>http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>>>
>>>On Fri, 3 Oct 2003, M.D. DeWar wrote:
>>>
>>>
>>>>Hello,
>>>>I installed python 2.3.1 (or whatever is the latest from the site)
>>>>I d/l the mod_python 3.03
>>>>I have apache 2.0.47 running.
>>>>I did as per each README for each isntall.
>>>>Apache is running. python seemed to install ok. There were no errors.
>>>>I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
>>>>That seemed okay.
>>>>make gives me this error: google search brought up nothing on it. (last
>>
>>2
>>
>>>>lines).
>>>>I did the ./httpd -DONE_PROCESS also.
>>>>
>>>>python2.3  -c -o requestobject.lo requestobject.c && touch
>>
>>requestobject.slo
>>
>>>>requestobject.c: In function `getreq_recmbr_off':
>>>>requestobject.c:1055: `LONG_LONG' undeclared (first use in this
>>
>>function)
>>
>>>>requestobject.c:1055: (Each undeclared identifier is reported only once
>>>>requestobject.c:1055: for each function it appears in.)
>>>>requestobject.c:1056: syntax error before `l'
>>>>requestobject.c:1057: `l' undeclared (first use in this function)
>>>>requestobject.c: At top level:
>>>>requestobject.c:1270: warning: initialization from incompatible pointer
>>
>>type
>>
>>>>apxs:Error: Command failed with rc=65536
>>>>.
>>>>*** Error code 1
>>>>
>>>>Stop in /temp/mod_python-3.0.3/src.
>>>>*** Error code 1
>>>>Mark DeWar
>>>>
>>>>_______________________________________________
>>>>Mod_python mailing list
>>>>Mod_python@modpython.org
>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Prometheus
  +                              kniht                                +

Fnord.

From scott_list at mischko.com  Mon Oct  6 12:11:27 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] 
	How to get the Apache authentication requirements into Python
	script?
Message-ID: <200310061211.27945.scott_list@mischko.com>

I have a home-brew Apache Authentication module coming together using 
mod_python and I'm wondering how to get the 'require valid-user' and 'require 
group blah' info into my Python handler so I know which groups to look out 
for, etc.  I've been over the mod_python docs quite a bit and I can't find 
info on this.

<Location /members>
    SetHandler python-program
    PythonDebug On
    PythonAuthenHandler www
    AuthType Basic
    AuthName "Members Login"
    require group admin
</Location>

If I have the above in my httpd.conf file, I'd like to have the group 
requirement of 'admin' come through to the Python script and the Location.

If I have 'require valid-user' in a .conf or .htaccess file, I'd like to be 
able to get those in also.  I've got a hunch a .htaccess file is handled 
differently. Is that correct?

Scott
From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:20:32 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] FINFO_* variables
Message-ID: <16257.56480.68230.797089@gargle.gargle.HOWL>


I've checked the FAQ and searched the archives, but have come up
empty...

There seems to be a problem with the FINFO_* variables in module
mod_python.apache.  In my version (3.0.3, built from source) the
following are defined:

    # the req.finfo tuple
    FINFO_MODE = 0
    FINFO_INO = 1
    FINFO_DEV = 2
    FINFO_NLINK = 4
    FINFO_UID = 5
    FINFO_GID = 6
    FINFO_SIZE = 7
    FINFO_ATIME = 8
    FINFO_MTIME = 9
    FINFO_CTIME = 10
    FINFO_FNAME = 11
    FINFO_NAME = 12

You may note the skip from 2 to 4.  I tested this with the following
handler:

    def handler(req):

	req.write('req.finfo: ' + str(req.finfo))
	return apache.OK

Going to a page that uses this handler, I get the following output
(I've pretty-printed it for readability):

    req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
		1065409206, 1065409206, '/var/www/py/foo', None)

If you line up the FINFO_* indexes with the appropriate tuple elements:

    FINFO_MODE = 0          1604	     	 	 
    FINFO_INO = 1	    359355	     	 	 
    FINFO_DEV = 2	    775		 
    FINFO_NLINK = 4	    500		 
    FINFO_UID = 5	    500		 
    FINFO_GID = 6	    14		 
    FINFO_SIZE = 7	    1065473633	 
    FINFO_ATIME = 8	    1065409206	 
    FINFO_MTIME = 9	    1065409206	 
    FINFO_CTIME = 10	    '/var/www/py/foo'
    FINFO_FNAME = 11	    None             
    FINFO_NAME = 12

You get the picture: everything is off by one after FINFO_DEV.  I
looked in CVS and noticed that the significant change in the FINFO_*
vars was between versions 1.45 and 1.46.  I'm quite surprised since
according to the repository this change happened in July of 2002.  I
can't be the only one who has used FINFO_* since then, can I?

BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).

Thanks,

 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:26:28 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16257.56836.418496.771252@gargle.gargle.HOWL>



 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:

I should have added that I had the same problem with 3.0.1, prebuilt
with redhat 9.0 rpm.  I thought perhaps I had an old and/or redhat
bug, so I upgraded to the latest stable source.  When the same problem
occured with 3.0.3 I then poked around at the CVS tree and noticed the
FINFO_* vars appear to have been off for some time now.

-- 
 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From perry.tew at cibavision.novartis.com  Tue Oct  7 00:33:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then
 apache tries to serve req as physical file in htdocs?
Message-ID: <OFC2BD368E.0E801EE4-ON85256DB8.0017C350-85256DB8.001910F1@EU.novartis.net>

Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 
directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 
anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


From schnieper at semafor.ch  Tue Oct  7 09:01:27 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] Problems with configure and make
Message-ID: <3F8264C7.3080201@semafor.ch>

Hi all

Are there any known problems with this versions?
I tried python 2.2.2 and 2.3.2
mod_python 3.1.0a and 3.0.3

But i always get a lot of mistakes by doing the make command.
Or could this be something with Apache 2.0.44

If it helps i can mail the errormessages.

Thanks in advance
Lukas

From perry.tew at cibavision.novartis.com  Tue Oct  7 09:10:26 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then apache tries to serve req as physical file in
 htdocs?
Message-ID: <OF06AA765B.2624506B-ON85256DB8.0048507A-85256DB8.00485DEA@EU.novartis.net>

The more I play with this, the more I think the problem I'm seeing is 
because I'm not using the
security as it was designed.  I don't think apache likes a 'require' 
directive without an AuthType
or AuthName.  The only problem is, if I add those two directives, the user 
is prompted for a username
and password, which I want to avoid since I'm using SSL certs.

I changed the handler from an authen handler to an access handler. 
Everything works like a charm.
I guess I'll live with that. Although it's technically not the correct 
place to authenticate, it's close enough
not to be confusing.

Thanks everyone,
Perry Tew




Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 

directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 

anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Tue Oct  7 23:52:29 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python]  How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310061211.27945.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
Message-ID: <20031007235047.H658@onyx.ispol.com>



On Mon, 6 Oct 2003, Scott Chapman wrote:

> mod_python and I'm wondering how to get the 'require valid-user' and 'require
> group blah' info into my Python handler so I know which groups to look out
> for, etc.  I've been over the mod_python docs quite a bit and I can't find
> info on this.

Right now you cannot. But 3.1 will have a req.requires() method which will
return just that info. If you *really* need it now, you can try out the
latest version from CVS.

Grisha
From seth at picklematrix.net  Tue Oct  7 22:41:29 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] could not import mod_python.apache ?
Message-ID: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>

Hello,

I'm very excited to try out the new 3.1 alpha.  I removed the 
mod_python RPM from RH9, did a configure, make, make install.  I then 
added:

LoadModule python_module /usr/lib/httpd/modules/mod_python.so

<Directory /home/*/public_html>
     SetHandler mod_python
     PythonHandler mod_python.publisher
</Directory>

And restarted.

My simple script:

def index(req):
     return "We are in index()"

Which made my error_log blow up with a lot of these messages:

[Wed Oct 08 03:25:50 2003] [error] make_obcallback: could not import 
mod_python.
apache.!
Traceback (most recent call last):
   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
784, in ?
     mpm_query = _apache.mpm_query
AttributeError: 'module' object has no attribute 'mpm_query'

And it killed apache.  Then I tried starting it back up (httpd 
restart), and I get this error, and it finishes with "Configuration 
Failed!"

[Wed Oct 08 03:25:54 2003] [notice] mod_python: Creating 150 session 
mutexes bas
ed on 150 max processes and 0 max threads.
[Wed Oct 08 03:25:54 2003] [error] (28)No space left on device: 
mod_python: Fail
ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

Any ideas what is going on?  I think I followed the installation 
instructions and tutorial to every step.  I'm running RH9 brand new, 
very bare install.  All standard RPMs, nothing from source (except 
this, of course).  And I removed the mod_python RPM before starting 
this.

Any tips or hints would be greatly appreciated.  Did I miss a step?

Thanks!
Seth

From grisha at modpython.org  Wed Oct  8 09:33:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
References: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
Message-ID: <20031008092957.Y6762@onyx.ispol.com>



On Tue, 7 Oct 2003, Seth Ladd wrote:

> Traceback (most recent call last):
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 784, in ?
>      mpm_query = _apache.mpm_query
> AttributeError: 'module' object has no attribute 'mpm_query'

Sounds to me like you still have the old mod_python/apache.py in your
pythonpath.

> ed on 150 max processes and 0 max threads.
> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
> mod_python: Fail
> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

There are references to that earlier in the list, also I believe the error
log shows a hint on what to do. It has to do with the default number of
available semaphores on Linux which needs to be increased.

The latest version that is in CVS deals with this issue a bit better.

Grisha
From scott_list at mischko.com  Wed Oct  8 07:06:31 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python]  How to get the Apache authentication requirements
	into Python script?
In-Reply-To: <20031007235047.H658@onyx.ispol.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
Message-ID: <200310080706.31323.scott_list@mischko.com>

On Tuesday 07 October 2003 20:52, Gregory (Grisha) Trubetskoy wrote:
> On Mon, 6 Oct 2003, Scott Chapman wrote:
> > mod_python and I'm wondering how to get the 'require valid-user' and
> > 'require group blah' info into my Python handler so I know which groups
> > to look out for, etc.  I've been over the mod_python docs quite a bit and
> > I can't find info on this.
>
> Right now you cannot. But 3.1 will have a req.requires() method which will
> return just that info. If you *really* need it now, you can try out the
> latest version from CVS.

Grisha,
What's the scheduled release date for 3.1?

Scott

From grisha at modpython.org  Wed Oct  8 11:41:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310080706.31323.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
	<200310080706.31323.scott_list@mischko.com>
Message-ID: <20031008113933.V6762@onyx.ispol.com>




On Wed, 8 Oct 2003, Scott Chapman wrote:

> Grisha,
> What's the scheduled release date for 3.1?

We do not have a formal schedule. I am hoping to release it as beta in the
next couple of days, and the final some time just before the upcoming
Apachecon.

Grisha
From anthony_barker at hotmail.com  Wed Oct  8 17:22:15 2003
From: anthony_barker at hotmail.com (Anthony Barker)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] getting started
Message-ID: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>

I was wondering how to get started processing an html form.

1) is there something equivalent to Apache::PerlRun?

"This module does not cache compiled scripts between runs.
A script is loaded and compiled freshly each time it is requested.
However, Apache::PerlRun still avoids the overhead of starting a new Perl
interpreter for each CGI script, so it's faster than traditional Perl CGI
scripting but slower than Apache::Registry or vanilla Apache API modules."

2) How would mod_python enable this simple script?

#!/usr/bin/python2
import cgi, sys, string
sys.stderr = sys.stdout
print "Content-type: text/html\r\n"

out1 = """
<HTML>
<HEAD><TITLE>Info Form</TITLE></HEAD>
<BODY BGCOLOR = white>
<H3>Please, enter your name and age.</H3>
<TABLE BORDER = 0>
<FORM METHOD = post ACTION = "t3.cgi">
<TR><TH>Name:</TH><TD>
<INPUT type = text name = "name"></TD>
</TABLE>
<INPUT TYPE = hidden NAME = "action" VALUE = "display"
<INPUT TYPE = submit VALUE = "Enter">
</FORM>
</BODY>
</HTML>"""

form = cgi.FieldStorage()
if form.has_key("action"):
    if form.has_key("name"):
        print "hello " + form["name"].value
else:
    print out1

_________________________________________________________________
Instant message in style with MSN Messenger 6.0. Download it now FREE!  
http://msnmessenger-download.com

From seth at picklematrix.net  Wed Oct  8 07:52:37 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:53:54 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <20031008092957.Y6762@onyx.ispol.com>
Message-ID: <341CC3E0-F9B8-11D7-A8D2-000A9576D038@picklematrix.net>

>
> Sounds to me like you still have the old mod_python/apache.py in your
> pythonpath.

That's what I thought to.  I'll do another install after I clean those 
files out by hand.

>
>> ed on 150 max processes and 0 max threads.
>> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
>> mod_python: Fail
>> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).
>
> There are references to that earlier in the list, also I believe the 
> error
> log shows a hint on what to do. It has to do with the default number of
> available semaphores on Linux which needs to be increased.

Exactly.  I should have phrased my question as "What are the issues 
with increasing the semaphores, and how do I do it?" :)

I'll search previously on the list to see what I can find.

Kudos for the work done on mod_python!
Seth

From grisha at modpython.org  Wed Oct  8 14:10:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] getting started
In-Reply-To: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
References: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
Message-ID: <20031008135000.C7910@onyx.ispol.com>


On Wed, 8 Oct 2003, Anthony Barker wrote:

> I was wondering how to get started processing an html form.
>
> 1) is there something equivalent to Apache::PerlRun?
>
> "This module does not cache compiled scripts between runs. A script is
> loaded and compiled freshly each time it is requested. However,
> Apache::PerlRun still avoids the overhead of starting a new Perl
> interpreter for each CGI script, so it's faster than traditional Perl
> CGI scripting but slower than Apache::Registry or vanilla Apache API
> modules."

No. (The cgi handler is as close as you will get to this). I don't know
what the Perl folks do, but on Python side the only way to achieve this
(including a clean namespace) is to reset the interpreter, which only
results in marginal improvement. Not to mention that there is something
awkward with this whole approach :-)

> 2) How would mod_python enable this simple script?
>
> #!/usr/bin/python2
> import cgi, sys, string
> sys.stderr = sys.stdout
> print "Content-type: text/html\r\n"
>
> out1 = """
> <HTML>
> <HEAD><TITLE>Info Form</TITLE></HEAD>
> <BODY BGCOLOR = white>
> <H3>Please, enter your name and age.</H3>
> <TABLE BORDER = 0>
> <FORM METHOD = post ACTION = "t3.cgi">
> <TR><TH>Name:</TH><TD>
> <INPUT type = text name = "name"></TD>
> </TABLE>
> <INPUT TYPE = hidden NAME = "action" VALUE = "display"
> <INPUT TYPE = submit VALUE = "Enter">
> </FORM>
> </BODY>
> </HTML>"""
>
> form = cgi.FieldStorage()
> if form.has_key("action"):
>     if form.has_key("name"):
>         print "hello " + form["name"].value
> else:
>     print out1
>

If you are using the publisher handler, then your Apache config would look
like this (and make sure it is not a CGI ScriptAlias):

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

And the script could be something like the below. If the script was named
form.py, you'd access the below via http://blah.bla.com/form.py/info.


def info(name=None, action=None):

    out1 = """
    <HTML>
    <HEAD><TITLE>Info Form</TITLE></HEAD>
    <BODY BGCOLOR = white>
    <H3>Please, enter your name and age.</H3>
    <TABLE BORDER = 0>
    <FORM METHOD = post ACTION = "info">
    <TR><TH>Name:</TH><TD>
    <INPUT type = text name = "name"></TD>
    </TABLE>
    <INPUT TYPE = hidden NAME = "action" VALUE = "display"
    <INPUT TYPE = submit VALUE = "Enter">
    </FORM>
    </BODY>
    </HTML>"""

    if action and name:
        return "hello %s" % name
    else:
        return out1



HTH,

Grisha
From dpopowich at mtrsd.k12.ma.us  Wed Oct  8 16:54:14 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16260.31094.314431.782441@gargle.gargle.HOWL>


I downloaded 3.1.0a and this same bug exists there, too...

Daniel J. Popowich writes:
> 
> I've checked the FAQ and searched the archives, but have come up
> empty...
> 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:
> 
>     # the req.finfo tuple
>     FINFO_MODE = 0
>     FINFO_INO = 1
>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>     FINFO_UID = 5
>     FINFO_GID = 6
>     FINFO_SIZE = 7
>     FINFO_ATIME = 8
>     FINFO_MTIME = 9
>     FINFO_CTIME = 10
>     FINFO_FNAME = 11
>     FINFO_NAME = 12
> 
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
> 
>     def handler(req):
> 
> 	req.write('req.finfo: ' + str(req.finfo))
> 	return apache.OK
> 
> Going to a page that uses this handler, I get the following output
> (I've pretty-printed it for readability):
> 
>     req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
> 		1065409206, 1065409206, '/var/www/py/foo', None)
> 
> If you line up the FINFO_* indexes with the appropriate tuple elements:
> 
>     FINFO_MODE = 0          1604	     	 	 
>     FINFO_INO = 1	    359355	     	 	 
>     FINFO_DEV = 2	    775		 
>     FINFO_NLINK = 4	    500		 
>     FINFO_UID = 5	    500		 
>     FINFO_GID = 6	    14		 
>     FINFO_SIZE = 7	    1065473633	 
>     FINFO_ATIME = 8	    1065409206	 
>     FINFO_MTIME = 9	    1065409206	 
>     FINFO_CTIME = 10	    '/var/www/py/foo'
>     FINFO_FNAME = 11	    None             
>     FINFO_NAME = 12
> 
> You get the picture: everything is off by one after FINFO_DEV.  I
> looked in CVS and noticed that the significant change in the FINFO_*
> vars was between versions 1.45 and 1.46.  I'm quite surprised since
> according to the repository this change happened in July of 2002.  I
> can't be the only one who has used FINFO_* since then, can I?
> 
> BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).
> 
> Thanks,
> 
>  ---------------------
>  Daniel Popowich     /
>  Network Specialist /
>  ------------------------------------------------------------------------------
>     /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
>    //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
>   //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
>  //      || //   //   \\  //// //////    413.625.0192 x22                  /
>  --------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Wed Oct  8 17:02:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <20031008165453.S10058@onyx.ispol.com>


On Mon, 6 Oct 2003, Daniel J. Popowich wrote:

>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
>
> I can't be the only one who has used FINFO_* since then, can I?

Looks like you are :-)

I checked and indeed FINFO_NLINK should be 3, and from there on they're
off by one, thanks for catching this.

Grisha
From grisha at modpython.org  Wed Oct  8 17:15:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16260.31094.314431.782441@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
 <16260.31094.314431.782441@gargle.gargle.HOWL>
Message-ID: <20031008171450.N10594@onyx.ispol.com>


Well it was only fixed about 10 minutes ago :-)

Grisha

On Wed, 8 Oct 2003, Daniel J. Popowich wrote:

>
> I downloaded 3.1.0a and this same bug exists there, too...
>
> Daniel J. Popowich writes:
> >
From grisha at modpython.org  Wed Oct  8 21:12:47 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] apache.log_error
In-Reply-To: <029f01c383af$ef321c60$95fe46c0@GIRLS>
References: <029f01c383af$ef321c60$95fe46c0@GIRLS>
Message-ID: <20031008210859.H11965@onyx.ispol.com>


You will have better luck on Windows with req.log_error than
apache.log_error, or you will have to call apache.log_error with the other
two optional arguments, level and server:

apache.log_error("blah", apache.APLOG_ERR, req.server)

I *think* (I haven't researched this too much) this is because on unix,
when req.server is omited, the function writes to stderr, which ultimately
ends up in the logs, but on windows, it goes nowhere.

But again, if you have a request object, always use:

req.log_error("blah")

Grisha

On Thu, 25 Sep 2003, Seung Chan Lim wrote:

> If I'm trying to spew error messages out to the default apache error log am
> I doing the right thing by using apache.log_error ??
>
> The problem is that I don't see anything on the default error log which I
> believe is Apache2/logs/error.log
>
> This is using mod_python 3.03
> Windows 2000
> Apache 2.0
> Python 2.2
>
> thanks
>
> slim
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Wed Oct  8 23:53:51 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] [help]please give an input filter example ?
In-Reply-To: <001201c38631$f12aa850$db64a8c0@camgelo>
References: <007c01c37dc6$32d21050$db64a8c0@camgelo>
	<3F69851B.3080703@sjsoft.com>
	<009d01c37dd0$bc2c5f40$db64a8c0@camgelo> <3F69916F.10406@sjsoft.com>
	<3F69D71A.8080005@sjsoft.com><20030923102333.N24322@onyx.ispol.com>
	<20030925092737.H57967@onyx.ispol.com>
	<20030926104954.C62356@onyx.ispol.com>
	<001201c38631$f12aa850$db64a8c0@camgelo>
Message-ID: <20031008234855.Q11965@onyx.ispol.com>


On Mon, 29 Sep 2003, camge wrote:

>     Below is the error message and error code is 730035.

This is SOCEWOULDBLOCK (aka EAGAIN). Not sure why it is returned here
since the read should be blocking (as the code specifies APR_BLOCK_READ),
may be its a windows thing, but I added a check for it, which should
eliminate this error:

        if (!APR_STATUS_IS_EAGAIN(self->rc) && !APR_STATUS_IS_SUCCESS(self->rc)) {
            PyErr_SetObject(PyExc_IOError,
	                    PyString_FromString("Input filter read error"));

(You can make this change in your sources, or check out the latest stuff
from CVS)

Grisha
From hara at oderwat.de  Thu Oct  9 12:30:36 2003
From: hara at oderwat.de (HaRa (OderWat))
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] 
	Prob. with Win32 mod_python 3.x and python 2.3.x and Apache2
Message-ID: <001401c38e50$69f41e80$ea5545d5@ikc.net>

Hi there,

I make it short:

If I d/l  the current 3.1.0a or 3.0.3 as win32 executable and install it on my apache2/python2.3.2 system, I get errors because the
win32 mod_python in either version opens python22.dll !!! I verified this in mod_python.so (contains: python22.dll). You can even
look at the Apache Signature:

Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.2.3 PHP/4.3.3 Server
                                                                     -------------

The 3.0.3 lets me choose if I want to install for 2.2 or 2.3 (if both are present). The 3.1.0a just asks to install for 2.3 ... bot
then open the python22.dll ..

Thank you for your Time!
Keep up the good work!

- Hans Raaf (Germany) / www.oderwat.de



From rclilly at cox.net  Thu Oct  9 18:22:28 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
Message-ID: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>

My setup:		Apache/2.0.47 (Win32) PHP/4.3.2 mod_python/3.0.3 Python/2.2.3

My http.conf:	LoadModule python_module modules/mod_python.so

			<Directory F:/MyApache/Apache2/htdocs/test>
			  AddHandler python-program .py
			  PythonHandler mptest
			  PythonDebug On
			</Directory>

When I try to access http://localhost/test/mptest.py I get and Internal
Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
make_obcallback: could not import mod_python.apache.

As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
start when using mod_python with Python 3.

Any clues on what I need to do to get mod_python working under Apache2?

TIA,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From rclilly at cox.net  Thu Oct  9 19:01:41 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
In-Reply-To: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>
Message-ID: <AMEDJPACLBJGECKBDAOKGEHCCBAA.rclilly@cox.net>

> My setup:		Apache/2.0.47 (Win32) PHP/4.3.2
> mod_python/3.0.3 Python/2.2.3
>
> My http.conf:	LoadModule python_module modules/mod_python.so
>
> 			<Directory F:/MyApache/Apache2/htdocs/test>
> 			  AddHandler python-program .py
> 			  PythonHandler mptest
> 			  PythonDebug On
> 			</Directory>
>
> When I try to access http://localhost/test/mptest.py I get and Internal
> Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
> make_obcallback: could not import mod_python.apache.
>
> As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
> start when using mod_python with Python 3.
>
> Any clues on what I need to do to get mod_python working under Apache2?
>
> TIA,
>
> Robert Lilly

I solved my problem. After uninstalling Python 2.3.2 and re-installing 2.2.3
I didn't re-install mod_python.  After re-installing mod_python all is well.

Is there a reason mod_python won't work with the Python 2.3? It has been out
quite a while now.

Thanks,

Robert
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From cs1spw at bath.ac.uk  Sat Oct 11 00:13:05 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
Message-ID: <3F873D01.8090107@bath.ac.uk>

Hi all,

Are there any plans for any mod_python related activities at PyCon DC 
next year?

http://www.python.org/pycon/dc2004/

Cheers,

Simon Willison
http://simon.incutio.com/



From grisha at modpython.org  Sat Oct 11 08:23:23 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
In-Reply-To: <3F873D01.8090107@bath.ac.uk>
References: <3F873D01.8090107@bath.ac.uk>
Message-ID: <20031011082229.Y67678@onyx.ispol.com>


Since it is in DC, I will probably submit for a talk on mod_python...

Grisha

On Sat, 11 Oct 2003, Simon Willison wrote:

> Hi all,
>
> Are there any plans for any mod_python related activities at PyCon DC
> next year?
>
> http://www.python.org/pycon/dc2004/
>
> Cheers,
>
> Simon Willison
> http://simon.incutio.com/
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From vmanera at manord.com  Mon Oct 13 11:14:56 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Cannot load mod_python.so into server:
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B0@exchange2000.manord.com>

Environment on win2000:

python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
 Impossibile trovare il modulo specificato.


httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,
Villiam



From skremer at q.cis.uoguelph.ca  Mon Oct 13 19:56:43 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Persisten DB connection for passwords.
Message-ID: <Pine.LNX.4.44.0310131937410.9038-100000@q.cis.uoguelph.ca>


Hi,

I have built a web-site that uses a persistent DB connection as suggested 
in the FAQ to store user passwords for my web-site.

The existence of the separate connections (for each python process) is
problematic in this case, because one hit on the web-page will initialize
the password (or change it) with an SQL update and then another hit to the
same page (but on a different PID) may or may not get the lastest version
of the password with SELECT.

I understand that this is a product of the multiversion model concurrency
control (MVCC) which is generally desirable and specifically desirable for 
my web-site except for the password UPDATE and SELECT commands and the 
persistent connections I'm using with mod_python.

I've been poring over the documentaion and am still a little bit unsure of 
what the easiest way to approach this is (serializable isolation lever, 
table-level locks, row-level locks, SELECT FOR UPDATE) and where to apply 
it (during the UPDATE statement, SELECT statement, or both).  The 
problem is complicated by the fact that I can't easily test it because I 
never know when the transactions will be autocommitted and which PID my 
http get will get.  I'm looking for a nice simple solution that will work 
with this rare case (i.e. please don't suggest switching to a 
different DB, using mod_perl instead ;), etc.).

I'm hoping that someone else has tried something similar and can offer a 
suggestion or pointer (or even a snippit of SQL).

FYI the DB is Postgres-7.3 (built from source), mod_python is 3.0 (built 
from source), DBA is PoPy 2.0.11 (built from source) all living on top of 
an otherwise stock RH 9.0.

Thanks in advance,

	Stefan

-- 
--
Permanently                             Temporarily (Until Aug. 2004)
Dr. Stefan C. Kremer, Associate Prof.   Visiting Researcher
Reynolds Building, 106                  307 Computer Science/Engineering Bldg
Dept. of Computing & Info. Science      School of Info. & Computer Science
University of Guelph, Guelph, Ontario	  U of California at Irvine, Irvine, CA
N1G 2W1                                 92697-3425
Tel: (519)824-4120 Ext.58913  
Fax: (519)837-0323

WWW: http://q.cis.uoguelph.ca/~skremer  E-mail:  skremer@uoguelph.ca

From vmanera at manord.com  Tue Oct 14 12:35:09 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>

I have followed the whole history of mod_python.so,...:

>Gregory (Grisha) Trubetskoy grisha at modpython.org 

>Mon Sep 15 10:32:10 EST 2003 

>This is typically a mismatch of mod_python.so and the version of Python

>you have on your system. For some reason windows says "module cannot be

>found" whereas it really means "i had problems loading it".

>

>The mod_python binary available from Apache sites should be compatible

>with Python 2.2.x, but not 2.3.

but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3

I have decided to migrate from python 2.2 to 2.3 just for try session... on
mod_python 3.1.0a

what I have to do :-( ??

Thanks,

Villiam

 

 

Environment on win2000:

python 2.3.2

apache 2.0.47

mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe

Syntax error on line 173 of C:/Programmi/Apache

Group/Apache2/conf/httpd.conf:

Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into

server:

Impossibile trovare il modulo specificato.

 

httpd.conf:

........

172 #LoadModule ssl_module modules/mod_ssl.so

173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine

uninstalling Python 2.2.2 and mod_python 3.0.3

installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 

....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,

 

Villiam Manera 
Dirett.  Sistema Informativo 

Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 

Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031014/0648346c/attachment-0001.htm
From gustavo.cordova at q-voz.com  Tue Oct 14 09:40:54 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <3F8C1906.1050102@q-voz.com>

Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


From hara at oderwat.de  Tue Oct 14 17:39:26 2003
From: hara at oderwat.de (HaRa)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <NCBBLHDKMKAEOLOOBEGGKEBHIAAA.hara@oderwat.de>

Hi..

I just can repeat something I wrote some days ago...

The Windows binaries I d/l from sourceforge had a link to python 2.2 even when they are announced for python 2.3 (only).
So it was using my python22.dll... and my own apache-extension modules (in 2.3 dir of python) where not found.

- Hans

-----Original Message-----
From: mod_python-bounces@modpython.org [mailto:mod_python-bounces@modpython.org]On Behalf Of Manera, Villiam
Sent: Tuesday, October 14, 2003 12:35 PM
To: mod_python@modpython.org
Subject: [mod_python] Cannot load mod_python.so into apache(2):


I have followed the whole history of mod_python.so,...:
>Gregory (Grisha) Trubetskoy grisha at modpython.org 
>Mon Sep 15 10:32:10 EST 2003 
>This is typically a mismatch of mod_python.so and the version of Python
>you have on your system. For some reason windows says "module cannot be
>found" whereas it really means "i had problems loading it".
>
>The mod_python binary available from Apache sites should be compatible
>with Python 2.2.x, but not 2.3.
but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
I have decided to migrate from python 2.2 to 2.3 just for try session... on mod_python 3.1.0a
what I have to do :-( ??
Thanks,
Villiam


Environment on win2000:
python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)
C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
Impossibile trovare il modulo specificato.

httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so
my step:
with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 
Any clues on what I need to do to get mod_python working under python 2.3?
Thanks,

Villiam Manera 
Dirett.  Sistema Informativo 
Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 
Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 
From mod_python at mlists.thewrittenword.com  Tue Oct 14 11:34:41 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] How to get request URI
Message-ID: <20031014163441.GA48143@spuckler.il.thewrittenword.com>

I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Tue Oct 14 18:26:54 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:55 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C3@exchange2000.manord.com>

:-)  Thanks you, now work properly

Villiam
-----Messaggio originale-----
Da: Gustavo C?rdova Avila [mailto:gustavo.cordova@q-voz.com]
Inviato: marted? 14 ottobre 2003 17.41
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: [mod_python] Cannot load mod_python.so into apache(2):


Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Tue Oct 14 10:31:21 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <3F8C1906.1050102@q-voz.com>
Message-ID: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>


> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

From gustavo.cordova at q-voz.com  Tue Oct 14 12:38:23 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
Message-ID: <3F8C429F.5020802@q-voz.com>

Nothing really... I just changed "22" for a "23" in the string 
"python22.dll" using "edit /70"  (for all youse DOS old hands out 
there).  :-)

1. Start Menu
2. Click "run"
3. Type "cmd"
4. cd into your apache modules directory (or wherever "mod_python.so" is 
stored).
5. Type "edit /70 mod_python.so"
6. Search for "python22.dll"
7. OVERWRITE "22" with "23", so it now says "python23.dll"
8. Make sure you OVERWROTE, and not INSERTED.
9. Save.
10. Start Apache and make sure it starts ok.

Remember to make a backup of "mod_python.so" before the operation.

Mind you, this isn't the ideal solution, but until we get a 
compiled-with-python23.dll module, it seems to work.

-gustavo

Robert Lilly wrote:

>When you say you changed python22.dll to python23.dll did you just rename
>it, or did you manipulate the file somehow? If the latter, what exactly did you do, and what editor did you use?
>
>Thanks!
>
>Robert Lilly
>
>
>
>  
>

From seth at picklematrix.net  Tue Oct 14 13:18:02 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] way to use PSP from publisher handler?
Message-ID: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>

Hello,

I've tried searching the docs and FAQ, but didn't find an immediate 
answer to this.  I'd like to use the Publisher handler for all the 
logic of the page, but I'd like the then forward (internally, not with 
a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
is great!).

Is there a way to use PSP as a template mechanism from within a 
publisher handler?  I've seen Cheetah, which acts the way I would want, 
but if I can use the builtin PSP, all the better. :)

Thanks!
Seth

From perry.tew at cibavision.novartis.com  Tue Oct 14 21:14:23 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] How to get request URI
Message-ID: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>


Apache passes environment variables to an ErrorDocument that should provide
all the information you need for a custom response:

here are some links:
http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
*** see this **** http://httpd.apache.org/docs-2.0/custom-error.html

so, the mod_python code would look like this:

req.add_common_vars()
env_vars = req.subprocess_env
orig_req_uri = env_vars['REDIRECT_URL']

Hope this helps,
Perry Tew






I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

--
albert chin (china@thewrittenword.com)
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python





From gargp at earthlink.net  Tue Oct 14 21:05:05 2003
From: gargp at earthlink.net (Pankaj K Garg)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] 
	Win32 Binary of modpython 3.0.3 that has the Python 2.3 patch 
Message-ID: <000401c392d1$89bb9ce0$37fea8c0@home.org>


Browsing through some previous emails:

Andy Sy wrote:

> > modpython 3.0.3 works fine with Python 2.3, but to build it you
> > need to hack src/include/mod_python.h.  There's a FAQ entry with
> > the necessary patch.
> >
> > Maybe Grisha should release a 3.0.4 with just this one patch?
> >
> > -Barry
>
> I second the motion.  Does anyone have such a binary?
> At the very least widespread testing will help uncover
> Python 2.3 vis-a-vis modpython 3.x bugs under Windows.

I was wondering if someone created a modpython 3.0.4
Win32 install for Python 2.3?

We've been using mod_python 3.0.4 with Python 2.3 on
Linux for some time now with no problems. Recently
I've had to try out things on Win32. The good folks
at Redhat provide the Cygwin environment, that by
default now comes with Python 2.3...so, it will be
tremendously helpful if there was a Win32 installer
for mod_python 3.0.4 with Python 2.3

Pankaj


--- 
Pankaj K Garg              gargp@acm.org
1684 Nightingale Avenue    408-373-4027
Sunnyvale, CA 94304
http://home.earthlink.net/~gargp
From grisha at modpython.org  Tue Oct 14 23:39:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
Message-ID: <20031014233917.U19523@onyx.ispol.com>


Have you tried req.prev.uri?

Grisha

On Tue, 14 Oct 2003, Albert Chin wrote:

> I want to have mod_python manage my ErrorDocument handler. How can I
> get the URI of the request that caused the error? I'm using
> mod_python-3.0.3 and Apache 2.0.47.
>
> The uri members in mprequest get me the URI of the ErrorDocument
> handler.
>
> --
> albert chin (china@thewrittenword.com)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:35 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014233917.U19523@onyx.ispol.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
	<20031014233917.U19523@onyx.ispol.com>
Message-ID: <20031015035335.GA64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 11:39:42PM -0400, Gregory (Grisha) Trubetskoy wrote:
> Have you tried req.prev.uri?

Works! Thanks.

> Grisha
> 
> On Tue, 14 Oct 2003, Albert Chin wrote:
> 
> > I want to have mod_python manage my ErrorDocument handler. How can I
> > get the URI of the request that caused the error? I'm using
> > mod_python-3.0.3 and Apache 2.0.47.
> >
> > The uri members in mprequest get me the URI of the ErrorDocument
> > handler.
> >
> > --
> > albert chin (china@thewrittenword.com)
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
albert chin (china@thewrittenword.com)
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:59 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
References: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
Message-ID: <20031015035359.GB64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 09:14:23PM -0400, perry.tew@cibavision.novartis.com wrote:
> 
> Apache passes environment variables to an ErrorDocument that should provide
> all the information you need for a custom response:
> 
> here are some links:
> http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
> *** see this **** http://httpd.apache.org/docs-2.0/custom-error.html
> 
> so, the mod_python code would look like this:
> 
> req.add_common_vars()
> env_vars = req.subprocess_env
> orig_req_uri = env_vars['REDIRECT_URL']

Thanks. That works!

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Wed Oct 15 09:12:39 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:55 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C5@exchange2000.manord.com>

I used hackman:http://www.technologismiki.com/en/

I find python22 (in ascii mode) then update in python23

Villiam
-----Messaggio originale-----
Da: Robert Lilly [mailto:rclilly@cox.net]
Inviato: marted? 14 ottobre 2003 19.31
A: mod_python@modpython.org
Oggetto: RE: [mod_python] Cannot load mod_python.so into apache(2):



> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From vmanera at manord.com  Wed Oct 15 10:07:58 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>

I have had to update the configuration file of apache with: PythonAutoReload
on 
before this was the defaut, as in the new manual :
 
5.4.8 PythonAutoReload 

Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
PythonAutoReload {On, Off} 
Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
PythonAutoReload On 


Villiam 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031015/6b67b283/attachment-0001.htm
From alexiev at activesolutions.bg  Wed Oct 15 13:16:45 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00be01c39305$6f81c140$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem

---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543

From alexiev at activesolutions.bg  Wed Oct 15 13:21:34 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00d801c39306$1c0ff300$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem


---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543
From Hector.Sanchez at cern.ch  Wed Oct 15 14:17:53 2003
From: Hector.Sanchez at cern.ch (Hector Sanchez SanMartin)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] Having 2 scripts with the same name
Message-ID: <3F8D3AF1.8030108@cern.ch>

    Hello,

    I'm having the following problem: I have 2 scripts in diferent
locations but if I request one of them the server gives me an 404 error
(not found) so I need to restart apache in order to be able to execute
the second one but then the first one gives an 404, etc...
    Is there any way to avoid this?

-- 
Hector Sanchez

CERN Document Server ** <http://cds.cern.ch/> ** <cds.support@cern.ch>
InDiCo Project       ** <http://cern.ch/indico>
Room: Bldg 510-R-007 ** Voice: +41-22-7673829 ** Fax: +41-22-7678142



From grisha at modpython.org  Wed Oct 15 09:52:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:55 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
Message-ID: <20031015095146.T19523@onyx.ispol.com>


I am pretty sure that's been fixed in 3.1.1b

Grisha

On Wed, 15 Oct 2003, Manera, Villiam wrote:

> I have had to update the configuration file of apache with: PythonAutoReload
> on
> before this was the defaut, as in the new manual :
>
> 5.4.8 PythonAutoReload
>
> Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
> PythonAutoReload {On, Off}
> Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
> PythonAutoReload On
>
>
> Villiam
>
>
From dpopowich at mtrsd.k12.ma.us  Wed Oct 15 12:31:41 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] extending util.FieldStorage
Message-ID: <16269.30317.838811.476792@gargle.gargle.HOWL>


I found myself wanting methods of util.FieldStorage that are found in
the cgi module since python 2.2, getfirst and getlist.  They save tons
of code of the form:

       if form.has_key('foo'):
           foo = form['foo']
           if type(foo) is not type([]):
               foo = [foo]
       else:
           foo = []

which can cause code-clutter if you have a number of form variables.
Instead, one can simply write:

      foo = form.getlist('foo')

See the cgi documentation for 2.2 or later for details about these
methods and how they can help you reduce code and write safer code to
protect against malformed requests.

I extended util.FieldStorage to add those two methods plus a get()
(which behaves like a standard dict.get) and thought others might like
the code (which I didn't write in whole, but stole mostly from modules
cgi and UserDict).

If found useful by many, perhaps they can be included in the 3.1
distribution?

Enjoy,

Daniel Popowich
Network Specialist
MTRSD

======================================================================

from mod_python import util

class form(util.FieldStorage):

    def get(self, key, default=None):
        if not self.has_key(key):
            return default
        return self[key]

    def getfirst(self, key, default=None):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value[0]
            else:
                return value
        else:
            return default

    def getlist(self, key):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value
            else:
                return [value]
        else:
            return []


From grisha at modpython.org  Wed Oct 15 12:51:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <16269.30317.838811.476792@gargle.gargle.HOWL>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
Message-ID: <20031015125039.H33867@onyx.ispol.com>



On Wed, 15 Oct 2003, Daniel J. Popowich wrote:

>       foo = form.getlist('foo')
>
> If found useful by many, perhaps they can be included in the 3.1
> distribution?

getfirst and getlist are already in there, but thanks anyway!

Grisha
From perry.tew at cibavision.novartis.com  Wed Oct 15 15:20:24 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFDCC9909C.1102B3CA-ON85256DC0.006A35CD-85256DC0.006A3CED@EU.novartis.net>

Grisha,

I've downloaded, compiled, and installed 3.1.1b.  Everything with my 
application appears to function correctly.   However, I did
see a change with the initial message in my error log (sorry, I don't have 
the previous message).

Is the following line correct?  Why does it say -1 max processes?  With 
3.1.0a, it used to say "Creating 200 session mutexes"
[Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session 
mutexes based on -1 max processes and 50 max threads

If you're not concerned, I'm not, but it is different, so I mention it.


I'm using the worker mpm
( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b 
mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
on Solaris
[
System = SunOS
Node = usatux29
Release = 5.8
KernelID = Generic_108528-13
Machine = sun4u
BusType = <unknown>
Serial = <unknown>
Users = <unknown>
OEM# = 0
Origin# = 1
NumCPU = 2
]


Here's the relevant httpd.conf ( need more?)  I know my worker config is 
probably whacked a little.
I'm trying to keep a small amount of children with a high thread count.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15


<IfModule worker.c>
StartServers         3
MaxClients         200
MinSpareThreads     25
MaxSpareThreads     50 
ThreadsPerChild     50
MaxRequestsPerChild 500
</IfModule>


Other than that one confusing error message, which may just be due to my 
ignorance of Apache, I had no issues.


Thanks,
Perry Tew






I think I didn't make it clear in the last message:

In order for this release to be officially announced, at least a few
people on this list need to try it and send in a +1 indicating that it
worked on their system (along with some desciption of what their system
is). *Anyone* on this list can do this, you don't have to be an official
committer or anything of that sort.

Doing a test could probably take as little as 10 minutes, and I'd
encourage you to do it sooner than later.

Looking at the www.modpython.org log we've only had one download of the
tgz file so far, which isn't encouraging :-)

Grisha

On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> You can get the sneak preview of 3.1.1 beta here:
>
> http://www.modpython.org/tmp/3.1.1b/
>
> Please download it, then do the usual
>
> $ ./configure --with-apxs=/wherever/it/is
> $ make
> $ (su)
> # make install
>
> Then
>
> $ cd test
> $ python test.py
>
> And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris 
would
> be nice... (as well as Panther, if you have it).
>
> Also, Windows folks - please make sure that this binary isn't screwed
> like the last one. This one I think _really_ works with 2.3 :-)
>
> Please respond to the list with your results ASAP so we can announce 
this
> puppy!
>
> Thank you very much,
>
> Grisha
>




From perry.tew at cibavision.novartis.com  Wed Oct 15 15:56:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFAFFA7F02.B4ABAB19-ON85256DC0.006D4B2B-85256DC0.006D81FE@EU.novartis.net>

Yes, I was using the worker MPM with the same configuration.  Later 
tonight, I have to create another apache/mod_python instance.  I will 
start with 3.1.0a and capture the error log.  Then, I will upgrade to 
3.1.1b and capture that error log.  I'll send you the relevant portions 
for comparion.  Will that be useful?

Thanks,
Perry






"Gregory (Grisha) Trubetskoy" <grisha@apache.org>
10/15/2003 03:42 PM

 
        To:     Perry Tew/CV/Novartis@PH
        cc: 
        Subject:        Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results



In your last test (when it used to say creating 200 session mutexes), were
you using worker with the same configuration?

Grisha


On Wed, 15 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> Grisha,
>
> I've downloaded, compiled, and installed 3.1.1b.  Everything with my
> application appears to function correctly.   However, I did
> see a change with the initial message in my error log (sorry, I don't 
have
> the previous message).
>
> Is the following line correct?  Why does it say -1 max processes?  With
> 3.1.0a, it used to say "Creating 200 session mutexes"
> [Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session
> mutexes based on -1 max processes and 50 max threads
>
> If you're not concerned, I'm not, but it is different, so I mention it.
>
>
> I'm using the worker mpm
> ( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b
> mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
> on Solaris
> [
> System = SunOS
> Node = usatux29
> Release = 5.8
> KernelID = Generic_108528-13
> Machine = sun4u
> BusType = <unknown>
> Serial = <unknown>
> Users = <unknown>
> OEM# = 0
> Origin# = 1
> NumCPU = 2
> ]
>
>
> Here's the relevant httpd.conf ( need more?)  I know my worker config is
> probably whacked a little.
> I'm trying to keep a small amount of children with a high thread count.
> Timeout 300
> KeepAlive On
> MaxKeepAliveRequests 100
> KeepAliveTimeout 15
>
>
> <IfModule worker.c>
> StartServers         3
> MaxClients         200
> MinSpareThreads     25
> MaxSpareThreads     50
> ThreadsPerChild     50
> MaxRequestsPerChild 500
> </IfModule>
>
>
> Other than that one confusing error message, which may just be due to my
> ignorance of Apache, I had no issues.
>
>
> Thanks,
> Perry Tew
>
>
>
>
>
>
> I think I didn't make it clear in the last message:
>
> In order for this release to be officially announced, at least a few
> people on this list need to try it and send in a +1 indicating that it
> worked on their system (along with some desciption of what their system
> is). *Anyone* on this list can do this, you don't have to be an official
> committer or anything of that sort.
>
> Doing a test could probably take as little as 10 minutes, and I'd
> encourage you to do it sooner than later.
>
> Looking at the www.modpython.org log we've only had one download of the
> tgz file so far, which isn't encouraging :-)
>
> Grisha
>
> On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > You can get the sneak preview of 3.1.1 beta here:
> >
> > http://www.modpython.org/tmp/3.1.1b/
> >
> > Please download it, then do the usual
> >
> > $ ./configure --with-apxs=/wherever/it/is
> > $ make
> > $ (su)
> > # make install
> >
> > Then
> >
> > $ cd test
> > $ python test.py
> >
> > And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> > 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris
> would
> > be nice... (as well as Panther, if you have it).
> >
> > Also, Windows folks - please make sure that this binary isn't screwed
> > like the last one. This one I think _really_ works with 2.3 :-)
> >
> > Please respond to the list with your results ASAP so we can announce
> this
> > puppy!
> >
> > Thank you very much,
> >
> > Grisha
> >
>
>
>



From jm at eemsystems.cjb.net  Wed Oct 15 15:03:24 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] form, req problem
Message-ID: <1066248203.4790.13.camel@eemsystems.com>

this scrips was working good, but now i can't find what is the problem.

This was working in the following manner:

the firt time you call testpy control=''

then testpy return a html form with the variable: Fecha_Inicial,
Fecha_Final (in this case) an a hidden control with value '1'

The form action is the same function testpy, then in the second pass
control must be '1'... but this is not actualy the case.

I'm using python from debian/unstable



***********************************************************************

def testpy(req,control=''):
	if control=='':
		    return
aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
Medicos")
	elif control=='1':
		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
		if len(Fecha_Final)<3:
				Fecha_Final=Fecha_Inicial
	return Fecha_Inicial,Fecha_Final,control

************************************************************************
#module: aaa


def simpleform2(action,strparametros,titulo='',insertar=''):
	import string
	s='''<form method="post" action="''' +action+ '"><input type="hidden"
name="control" value="1">'
	parametros=string.split(strparametros,',')
	if len(strparametros)>2:
		s=s+"""<table><caption>"""+titulo+"""</caption>"""
		for i in parametros:
			s=s+"""<tr><td>"""+i+''':</td>
	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
value="">
	</td>
	</tr>'''
		s=s+'</table>'
	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
	return s
***************************************************************************

From jm at eemsystems.cjb.net  Wed Oct 15 15:44:15 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] form, req problem
In-Reply-To: <1066248203.4790.13.camel@eemsystems.com>
References: <1066248203.4790.13.camel@eemsystems.com>
Message-ID: <1066250655.5340.10.camel@eemsystems.com>

I run this scripts from another client machine and are working good.
look like browser problem in Debian/unstable.

thank you,

JM

El mi?, 15-10-2003 a las 15:03, Julio Mendoza escribi?:
> this scrips was working good, but now i can't find what is the problem.
> This was working in the following manner:
> 
> the firt time you call testpy control=''
> 
> then testpy return a html form with the variable: Fecha_Inicial,
> Fecha_Final (in this case) an a hidden control with value '1'
> 
> The form action is the same function testpy, then in the second pass
> control must be '1'... but this is not actualy the case.
> 
> I'm using python from debian/unstable
> 
> 
> 
> ***********************************************************************
> 
> def testpy(req,control=''):
> 	if control=='':
> 		    return
> aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
> Medicos")
> 	elif control=='1':
> 		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
> 		if len(Fecha_Final)<3:
> 				Fecha_Final=Fecha_Inicial
> 	return Fecha_Inicial,Fecha_Final,control
> 
> ************************************************************************
> #module: aaa
> 
> 
> def simpleform2(action,strparametros,titulo='',insertar=''):
> 	import string
> 	s='''<form method="post" action="''' +action+ '"><input type="hidden"
> name="control" value="1">'
> 	parametros=string.split(strparametros,',')
> 	if len(strparametros)>2:
> 		s=s+"""<table><caption>"""+titulo+"""</caption>"""
> 		for i in parametros:
> 			s=s+"""<tr><td>"""+i+''':</td>
> 	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
> value="">
> 	</td>
> 	</tr>'''
> 		s=s+'</table>'
> 	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
> 	return s
> ***************************************************************************
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From dpopowich at mtrsd.k12.ma.us  Thu Oct 16 09:16:24 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <20031015125039.H33867@onyx.ispol.com>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
	<20031015125039.H33867@onyx.ispol.com>
Message-ID: <16270.39464.384476.99879@gargle.gargle.HOWL>


Gregory (Grisha) Trubetskoy writes:
> 
> 
> On Wed, 15 Oct 2003, Daniel J. Popowich wrote:
> 
> >       foo = form.getlist('foo')
> >
> > If found useful by many, perhaps they can be included in the 3.1
> > distribution?
> 
> getfirst and getlist are already in there, but thanks anyway!
> 

I didn't see them in 3.1.0a, but I do see them in CVS.  Great!

Thanks,

Dan

From dagurp at heimsnet.is  Thu Oct 16 13:48:29 2003
From: dagurp at heimsnet.is (=?iso-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] python 2.3.2 binary
Message-ID: <001501c393ec$2eafbd60$1e01a8c0@dagur>


Hi

When can I expect a python 2.3 binary for mod_python 2.78? I'm on windows and I probably can't compile it myself. I'm having all sorts of problems because of this

thanks
Dagur
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/9e4cd4fb/attachment-0001.htm
From grickert at coldstorage.com  Thu Oct 16 15:56:08 2003
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] RE: Testing 3.1.1b
In-Reply-To: <200310161700.h9GH041D052838@slash.mediapulse.com>
Message-ID: <DIEMKLHLKFCCPAEPDMHKMENECEAA.grickert@coldstorage.com>

+1  ;)

Grisha,

This is in response to you asking for *Anyone* to test this version.

Mod_Python 3.1.1b (mod_python-3.1.1b.win32-py2.3.exe) seems to be working
great with Python 2.3 on my system

Win2K, Python 2.3.2, Apache 2.0.47

My comprehensive test suite :) consists of a few web pages that use a custom
PythonHandler, Cheetah templates, and cx_Oracle, to allow a customer to log
in, track their session, and produce some dynamic reports.  Everything
functioned as before.  I'm very happy that I can move up to Python 2.3 & mp
3.1.  Keep up the great work!

Gerrat Rickert

P.S.  I have been watching the modpython home page, waiting for a Win binary
compatable with Python 2.3.  Now that this is available, you may want to
update that page so maybe more people will download it & try it.

Thanks again.


From modpython at lists.bumpern.de  Thu Oct 16 23:19:52 2003
From: modpython at lists.bumpern.de (Alexander Neumann)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] mod_python 2.7.8 broken on python2.3?
Message-ID: <20031016211952.GB8454@necromancer.hoffentlich.net>

Hi,

I just started having a look at mod_python, it looks really great, but
there are a few strange exceptions thrown at points where (IMHO) no
exception should be raised.

For example if I'm using this file (test.py):
=======
from mod_python import apache

def test(req):
    return "just a test\n"
=======


Calling the test-function directly works as expected:
$ dog --no-header http://localhost/~fd0/test/test
just a test


Calling only the file fails and throws a 404:
$ dog --no-header http://localhost/~fd0/tlis/test
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>404 Not Found</TITLE>
</HEAD><BODY>
<H1>Not Found</H1>
The requested URL /~fd0/tlis/test was not found on this server.<P>
<HR>
<ADDRESS>Apache/1.3.28 Server at localhost Port 80</ADDRESS>
</BODY></HTML>


But if the URL ends with a slash ("/"), an exception is thrown and I
don't know if that's the normal behaviour (I would expect a 404, just
like the example above):
$ dog --no-header http://localhost/~fd0/tlis/test/
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range




Another problem is using the file (example.py):
======
__auth_realm__ = "Members only"


def hello(req):
    def __auth__(req, user, passwd):
        if user == "eggs" and passwd == "spam" or \
           user == "joe" and passwd == "eoj":
            return 1
        else:
            return 0

    def __access__(req, user):
        if user == "joe":
            return 1
        else:
            return 0

    return 'hello<br><a href="logout?username=%s"> logout </a>' % req.connection.user

def logout(req, username=""):
    def __auth__(req, user, passwd):
        if not username == "":
            return 0
        else:
            return 1
    return '<a href="hello"> test it! </a>'
======


Calling the logout function throws an exception, too:
$ dog --no-header http://localhost/~fd0/tlis/example/logout
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 135, in handler
    object = resolve_object(req, module, func_path, realm, user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 296, in resolve_object
    user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 224, in process_auth
    __auth__ = new.function(__auth__, globals())

TypeError: arg 5 (closure) must be tuple




Is this a bug or a feature?


- Alexander

-- 
"Good luck... The only good thing about being compromised is that it
makes you more paranoid about being on the net."
 - Jamie Lawrence on debian-security
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/22b82c8e/attachment-0001.bin
From gdamjan at mail.net.mk  Fri Oct 17 17:48:40 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] way to use PSP from publisher handler?
In-Reply-To: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
References: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
Message-ID: <20031017154840.GH6261@legolas.on.net.mk>

> I've tried searching the docs and FAQ, but didn't find an immediate 
> answer to this.  I'd like to use the Publisher handler for all the 
> logic of the page, but I'd like the then forward (internally, not with 
> a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
> is great!).
> 
> Is there a way to use PSP as a template mechanism from within a 
> publisher handler?  I've seen Cheetah, which acts the way I would want, 
> but if I can use the builtin PSP, all the better. :)

Whats wrong with using PSP and Publisher in paralel?
You can do it. In the same directory. I've added an entry in the FAQ how
to do it.



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cs1spw at bath.ac.uk  Sat Oct 18 18:56:22 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] New Web SIG
Message-ID: <3F91D326.6000805@bath.ac.uk>

In case people on this list haven't heard about it yet, the powers that 
be have created a new Python Web special interest group. The SIG has a 
dual purpose: it will host discussions of ways of improving Python's web 
client abilities (httplib and the like) and also discussions of 
improvements to be made to the CGI module and other related server-side 
topics.

The server side discussions would certainly benefit from participants 
with experience of mod_python ;)

http://www.python.org/sigs/web-sig/

Cheers,

Simon Willison
http://simon.incutio.com/

From DHANCOCK at arinc.com  Sun Oct 19 00:27:02 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>

I'm new to mod_python, and I'm stuck already.  I'm working through the
examples in the documentation, and even after careful typing (and cutting
and pasting from the manual), I can't get the authentication example to
work.  The line:

	user = req.connection.user

Gives an attribute error ('user').  As shown in the manual, I'm calling
req.get_basic_auth_pw() first, but still no joy.

If I try/except to trap the attribute error, I avoid the 500 Server Error
message, but the authentication still doesn't work.

Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
got right going right now).  The mod_python is a precompiled binary.

I'll be grateful for any assistance I can get.  I'm trying to recreate a
mod_perl module (AuthCookie) which implements a ticket-based authentication
mechanism.  It works well in Perl, but my group standardized on Python and
we'd like to keep using Python for Apache modules, too.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031019/4a6519b3/attachment-0001.htm
From grisha at modpython.org  Sun Oct 19 14:20:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] req.connection.user generates AttributeError
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
Message-ID: <20031019141946.L36129@onyx.ispol.com>


it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 17:20:36 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806A@exanpmb3.arinc.com>

Grisha: Thanks for getting back to me on this. I found req.connection.user
in the PDF manual dated 4/19/2002, Section 3.3, page 12.  And now that I
look at the title page, it's for 2.7.8, NOT for 3.0.3.  I downloaded the
manual to match my installation, and it shows req.user in that section.

My apologies for not having RTFMed better--I read, just the wrong one.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Sunday, October 19, 2003 2:21 PM
To: Hancock, David (DHANCOCK)
Cc: 'mod_python@modpython.org'
Subject: Re: [mod_python] req.connection.user generates AttributeError



it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what
I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based
authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 19:57:32 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>

Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From DHANCOCK at arinc.com  Sun Oct 19 20:25:52 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] RE: req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806E@exanpmb3.arinc.com>

Sorry to reply to my own post, but further reading of the list archives got
me the solution.  I moved the LoadModule directive for mod_python to be
first in the list, and voila! it started working right.  There was a thread
about this in July of this year.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Hancock, David (DHANCOCK) 
Sent: Sunday, October 19, 2003 7:58 PM
To: 'mod_python@modpython.org'
Subject: req.user always returns None?


Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From gah at research.att.com  Sun Oct 19 22:24:11 2003
From: gah at research.att.com (Glenn A. Hochberg)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <3F93474B.9070105@research.att.com>

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user instead.  Also note that you *can* assign a value to req.user -- it's not read-only as listed in the docs.

-Glenn Hochberg



From grisha at modpython.org  Sun Oct 19 23:21:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] req.user always returns None?
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
Message-ID: <20031019231815.K41524@onyx.ispol.com>



On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> def authenhandler(req):
>     user = req.user
>     pw = req.get_basic_auth_pw()
>     req.log_error(str(user) + ' ' + str(pw))
>     if user == "david" and pw == "secret":
>         return apache.OK
>     else:
>         return apache.HTTP_UNAUTHORIZED

The current docs neglect to mention this because at the time it seemed
like it was no longer necessary, but the call to get_basic_auth_pw()
should always _preceed_ the use of req.user. If the swap the first two
lines, it will work (regardless of position of LoadModule within the
config file).

Grisha
From mikeklein at sbcglobal.net  Sun Oct 19 22:40:40 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] 
	Problems building apache1 with threaded python and mod_python
Message-ID: <3F937558.1010206@sbcglobal.net>

Can this even be done? The docs/faqs seem vague on the subject.

I am building on a RH9 system, with apache1, mod_python, and python w/o 
threads. This seemed to be the only way I could get mod_python to build. 
I always get errors regarding pthread symbols not being found. Example:

Cannot load /usr/local/apache/libexec/mod_python.so into server: 
/usr/local/apache/libexec/mod_python.so: undefined symbol: pthread_sigmask

I recall earlier that I was able to get past a similar error (happened 
with no threads build I think) by adding "-lutil" to LIBS in 
src/Makefile, but I cannot get rid of the above problem.

I need a threaded-python/mod_python as I'm trying to run ZSI and SOAPpy 
applications and they seem to require thread support.

Any ideas would be appreciated...

I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
already built in, but I require apache1 as there are a few modules I 
want to use which aren't apache2 yet...

mike

From mikeklein at sbcglobal.net  Mon Oct 20 00:49:33 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] 	Problems building apache1 with threaded python
	and mod_python...solved
In-Reply-To: <3F937558.1010206@sbcglobal.net>
References: <3F937558.1010206@sbcglobal.net>
Message-ID: <3F93938D.1030801@sbcglobal.net>

My bad...I need to follow the docs a little more often...

I have RH9, Apache1.3.27, mod_python-2.7.8.

I first tried with Python 2.2.3. No go. Then I tried with 2.3.2...no go. 
In fact, mod_python even thought it was a nothread build.

Then I actually followed directions and got release 2.1.3, which 
mod_python does state as a prerequisite. It worked. Didn't even get any 
thread symbol wierdness when starting apache or had to patch makefiles 
with -lutil to fix openpty wierdness..

All is well now...I can make SOAPpy invocations. No more thread complaints.

Should mod_python be able to work with latest Python releases with 
threads enabled? I'm not sure what I'm missing in later python releases.


mike

Mike Klein wrote:

> Can this even be done? The docs/faqs seem vague on the subject.
>
> I am building on a RH9 system, with apache1, mod_python, and python 
> w/o threads. This seemed to be the only way I could get mod_python to 
> build. I always get errors regarding pthread symbols not being found. 
> Example:
>
> Cannot load /usr/local/apache/libexec/mod_python.so into server: 
> /usr/local/apache/libexec/mod_python.so: undefined symbol: 
> pthread_sigmask
>
> I recall earlier that I was able to get past a similar error (happened 
> with no threads build I think) by adding "-lutil" to LIBS in 
> src/Makefile, but I cannot get rid of the above problem.
>
> I need a threaded-python/mod_python as I'm trying to run ZSI and 
> SOAPpy applications and they seem to require thread support.
>
> Any ideas would be appreciated...
>
> I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
> already built in, but I require apache1 as there are a few modules I 
> want to use which aren't apache2 yet...
>
> mike
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From DHANCOCK at arinc.com  Mon Oct 20 08:21:33 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 21:53:56 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88072@exanpmb3.arinc.com>

Thanks Glenn and Grisha.

To recap:

1. Putting the assignment from req.user AFTER the req.get_basic_auth_pw call
fixes the AttributeError, and the LoadModule for mod_python can now be
anywhere in the list of Apache modules.

2. req.user can indeed be assigned to--smart stuff.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Glenn A. Hochberg [mailto:gah@research.att.com] 
Sent: Sunday, October 19, 2003 10:24 PM
To: 
Subject: Re: [mod_python] req.connection.user generates AttributeError


> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user
instead.  Also note that you *can* assign a value to req.user -- it's not
read-only as listed in the docs.

-Glenn Hochberg



_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From perry.tew at cibavision.novartis.com  Mon Oct 20 08:52:15 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <OF2CAEE580.6333EEBF-ON85256DC5.0044A937-85256DC5.0046B410@EU.novartis.net>

David,
   I just wrote some code for ticket based authentication.  It's not 
completely where I want it, but it may provide you a framework to get 
started.  It works for me, but I'm using client certificates for 
authentication.   You'd need to change the TicketMaster.py script to check 
for basic authentication.  Here's the code, along with my httpd.conf 
settings.  If you do use it, I would appreciate criticism and suggestions 
for improvement as I'm new to python and may be doing some Java-ish things 
that have better solutions in Python.  Also, it's still a work in progress 
concerning documentation.  FYI, I basically ported the TicketMaster 
example in the "Writing Apache modules in Perl and C" book.

Inside of my TicketAccessHandler.py is also some authorization stuff going 
against an RDBMS.  It's pretty sweet.  It's set for an intranet to allow 
managers of content to handle adding and deleting users from roles rather 
than bogging down a site admin with such mundane tasks.  It can run 
completely in memory and updates are event driven and take place in a 
cleanup handler.  If you're interested in that, I can sent you the code 
for it as well (sql, front end, etc), but I suspect your first priority is 
the md5 ticket cookie, so at least the TicketTool.py should be an pretty 
exact match of what you may need.

Hope this helps,
-Perry Tew




# ===========================================================
# ===========================================================
# ===========================================================
# TicketAuthenHandler.py ======================================
from mod_python import apache
import TicketTool

from ApachePool import ApachePool
dbpool = ApachePool()


def accesshandler(req):
        #apache.log_error("[TicketAuthenHandler] in handler() method")

# ===========================================================
# Authenication secition.  This handler contains both authen
# and authz.  This is because it doesn't use the default
# Basic authentication.  Without using Basic, I can't get the
# authz handler to be called.  So, I have them together here
# ===========================================================

        # the NameError should only happen once in the life of the apache 
child process 
        global ticketTool
        try:
                result, msg, user = ticketTool.verify_ticket(req)
        except NameError:
                # if the ticketTool hasn't been created yet, then do so.
                ticketTool = TicketTool.TicketTool(req)
                result, msg, user = ticketTool.verify_ticket(req)


        #apache.log_error("[TicketAuthenHandler] verify_ticket result was 
" + str(result))
        #apache.log_error("[TicketAuthenHandler] verify_ticket msg was " + 
msg)

        # ditch the call if something wasn't correct
        if result == 0:
                #apache.log_error(msg, apache.APLOG_WARNING)
                cookie = ticketTool.make_return_address(req)
                cout = cookie.output(header="")
                #apache.log_error( "cookie going out:" + cout)
                req.err_headers_out['Set-Cookie'] = cout
                req.err_headers_out['Pragma'] = 'no-cache'
                req.err_headers_out['Cache-Control'] = 'no-cache'
                req.err_headers_out['Expires'] = '-1'
                return apache.HTTP_FORBIDDEN



# ===========================================================
# Authorization section
# Make sure user's roles are sufficient to access uri
# ===========================================================

        #apache.log_error("[TicketAuthzHandler] in handler() method")

        uri_roles = get_uri_roles(req)
        #apache.log_error("URI ROLES:" + str(uri_roles)) 

        user_roles = get_user_roles(req, user)
        #apache.log_error("USER ROLES:" + ",".join(user_roles.keys())) 

        for a_uri, some_roles in uri_roles.items():
                #apache.log_error( "AUTHZ: checking " + a_uri )
                unauthorized = 1
                if some_roles is not None:
                        for a_role in some_roles:
                                #apache.log_error("AUTHZ: examining role:" 
+ a_role)
                                if user_roles.has_key(a_role):
                                        #apache.log_error("AUTHZ: MATCH 
>>" + a_role)
                                        unauthorized = 0
                else:
                        #apache.log_error( "AUTHZ: " + a_uri + " is not 
protected" )
                        unauthorized = 0


                if unauthorized:
                        #apache.log_error("AUTHZ: FAILED")
                        # can't return FORBIDDEN, since that may be used
                        # by the TicketAuthenHandler to redirect to the 
ticket
                        # master, and I sure don't want to do that for a 
missing
                        # role.
                        return apache.HTTP_PAYMENT_REQUIRED

        return apache.OK

# ===========================================================
# End of main handler
# ===========================================================


def get_user_roles(req, user):


        global userCache
        global dbpool
        try:
                if userCache.has_key(user):
                        #apache.log_error("found user roles in cache") 
                        return userCache[user]
        except NameError:
                #apache.log_error("userCache doesn't exist, creating it") 
                userCache = {}

        #apache.log_error("userCache: " + str(userCache.keys()))


        #apache.log_error("DB: retrieving user roles from database") 
        db = dbpool.get_connection()
        c = db.cursor()
        c.execute( "SELECT ROLE_NAME FROM AUTH_USER_ROLES WHERE DN ='%s'" 
% (user,))
        rset = c.fetchall()
        roles = {}
        for row in rset:
                roles[row[0]] = None

        userCache[user] = roles
        return roles
        c.close()
        db.commit()
        db.close()



def get_uri_roles(req):
        """
                break up the uri, make sure each part or substring of the 
uri is cached, then
                retrieve the roles from the uriCache
        """
        global uriCache
        global dbpool

        paths = get_paths(req)
        uri_roles = []   # list of dicts 

        try:
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
        except NameError:
                #apache.log_error("uriCache doesn't exist, creating it") 
                init_uri_cache(req)
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
 

        if len(uncached_paths) > 0:
                #apache.log_error("DB: retrieving uncached uri roles from 
database: " + str(uncached_paths)) 
                path_str = ",".join(map(add_quotes, uncached_paths))

                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI WHERE URI IN 
(%s)" % path_str
                c.execute( sql )
                rset = c.fetchall()
                for row in rset:
                        if not uriCache.has_key(row[0]):
                                uriCache[row[0]] = []
                        uriCache[row[0]].append(row[1])
                c.close()
                db.commit()
                db.close()
 

                # once all of the request_uri have been updated in the 
database, there
                # may be more that need updating.  For this, assign an 
empty hash for those
                # uris

                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
                for i in uncached_paths:
                        uriCache[i] = None


        uri_roles = {}
        for i in paths:
                uri_roles[i] = uriCache[i] 

        return uri_roles
 


def init_user_cache(req):
        global userCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                c.execute( "SELECT DN, ROLE_NAME FROM AUTH_USER_ROLES")
                rset = c.fetchall()
                tmp = {}
                roles = {}
                for row in rset:
                        if tmp.has_key(row[0]) == 0:
                                tmp[row[0]] = {}

                        tmp[row[0]][row[1]] = None

                c.close()
                db.commit()
                db.close()
                userCache = tmp
        else:
                userCache = {}




def init_uri_cache(req):
        global uriCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI"
                c.execute( sql )
                rset = c.fetchall()
                tmp = {}
                for row in rset:
                        if not tmp.has_key(row[0]):
                                tmp[row[0]] = []
                        tmp[row[0]].append(row[1])

                uriCache = tmp
                c.close()
                db.commit()
                db.close()

        else:
                uriCache = {}




def add_quotes(val):
        return "'" + val + "'"
 


def get_paths(req):

        uri_path = req.parsed_uri[apache.URI_PATH]
        #apache.log_error("URI PATH:" + uri_path)
        dirs = uri_path.split("/")
        current_path = ''
        paths = []
        i = 0
        while i < len(dirs) - 1:
                if dirs[i] == '':
                        paths.append('/')
                else:
                #current_path = current_path + dirs[i] + '/'
                        current_path = current_path + '/' +  dirs[i]
                        paths.append(current_path)
                ##apache.log_error("URI PATH current path:" + 
current_path)
                i = i + 1

        paths.append(uri_path)
        #apache.log_error("URI PATH current path:" + str(paths))
        return paths


def update_cache(req, userParm=None, uriParm=None):
        """
        If user = None, do nothing for the userCache.
        If user = 'ALL', recreate the entire cache
        If user = other, then delete just that user from the cache
        The same applies to the uri.

        All of this crap should be moved to the Authz handler, eh?
        """

        global userCache
        global uriCache


        if userParm is not None:
                if userParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE USER CACHE")
                        init_user_cache(req)
                else:
                        if userCache.has_key(userParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from userCache" % userParm)
                                del(userCache[userParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in userCache" % userParm)
 

        if uriParm is not None:
                if uriParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE URI CACHE")
                        uriCache = {}
                else:
                        if uriCache.has_key(uriParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from uriCache" % uriParm)
                                del(uriCache[uriParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in uriCache" % uriParm)
 

# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketMaster.py =============================================

#TODO - this method should verify that the user indeed exists in the user
#table of the auth system

import TicketTool
import Cookie
from mod_python import apache
from mod_python.util import FieldStorage

ticketTool = None

def handler(req):
        apache.log_error( "[TicketMaster] calling handler() method" )

        # this will only need doing once during the life of the apache 
child process
        global ticketTool
        if ticketTool == None:
                ticketTool = TicketTool.TicketTool(req)
 

        req.add_common_vars()

        request_uri = None

        # 1. check for a paramater named request_uri
        # 2. check for a cookie named request_uri
        # 3. check for a req.prev uri

        fields = FieldStorage(req)
        if fields.has_key('request_uri'):
                request_uri = fields['request_uri']
        else:
                apache.log_error( "[TicketMaster] no request_uri param" )

                if req.prev:
                        request_uri = req.prev.unparsed_uri
                        apache.log_error( "[TicketMaster] have a prev 
request_uri:" + request_uri )
                else:
                        cookies = Cookie.SimpleCookie()
                        try:
                                apache.log_error( "[TicketMaster] cookie 
headers_in:" + req.headers_in['Cookie'] )
                                cookies.load(req.headers_in['Cookie'])
                                request_uri = cookies['request_uri'].value
                                #request_uri = cookies['request_uri']
                                apache.log_error( "[TicketMaster] have a 
cookie request_uri:" + str(request_uri) )
                        except KeyError:
                                apache.log_error( "[TicketMaster] no 
cookies were found, what now?" )
 

        # if nothing by here, display and error and move on with life.
        # it's too short 
        if request_uri == None:
                apache.log_error( "[TicketMaster] no request_uri could be 
found" )
                no_cookie_error(req)
                return apache.OK



        user = ''
        try:
                user = req.subprocess_env['SSL_CLIENT_S_DN']
                apache.log_error("[TicketMaster] user dn:" + user)
        except KeyError:
                apache.log_error("[TicketMaster] no SSL DN env variable!" 
)
                display_missing_cert_screen(req, request_uri)
                return apache.OK


        result = 0
        msg = ''

        if user:
                # I don't authenticate here, since the SSL layer does that
                # for me

                try:
                        ticket = ticketTool.make_ticket(req, user)
                        go_to_uri(req, request_uri, ticket)
                        return apache.OK

                except:
                        apache.log_error( 'could not create ticket, 
missing secret key?', apache.APLOG_ERR)
                        raise
                        #return apache.HTTP_INTERNAL_SERVER_ERROR

        apache.log_error( "[TicketMaster] no req.user, so cannot make 
ticket" )
        display_missing_cert_screen(req, request_uri)
        return apache.OK


def go_to_uri(req, request_uri, ticket):
        apache.log_error( "[TicketMaster] sending refresh to browser to go 
here:" + request_uri)
        apache.log_error( "[TicketMaster] setting the following cookie:" + 
ticket.output(header=""))
        req.content_type = 'text/html'
        req.headers_out['Set-Cookie'] = ticket.output(header="")
        # the following line causes MSIE to wig out, so don't uncomment 
it.
        #req.headers_out['Refresh'] = '1;' + request_uri
        req.headers_out['Pragma'] = 'no-cache'
        req.headers_out['Cache-Control'] = 'no-cache'
        req.headers_out['Expires'] = '-1'
        #req.send_http_header()
        req.write("""
                <html>
                        <head>
                                <title>Successfully Authenticated</title>
                        </head>
                        <body>
                                <h4>Congratulations, you have successfully 
authenticated</h4>
                                <p>Click <a href="%s">here</a> to 
continue</p>
                                <p>A nice explanation about the cookie I 
just set would be swell</p>
                        </body>
                </html>

        """ % request_uri)
        return apache.OK
 


def display_missing_cert_screen(req,request_uri):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Missing Entrust PKI 
Certificate</title>
                        </head>
                        <body>
                                <p>The page you attempted to view (%s) was 
protected.</p>
                                <p>Protection for this web site is based 
on Digital Certificate technology.
                                You need a PKI certificate to access this 
portion of the website.
                                Contact Human Resources.</p>
                        </body>
                </html>""" % request_uri)

def no_cookie_error(req):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Unable to Log In</title>
                        </head>
                        <body>
                                <h4>Unable to Log In</h4>
                                <p>This site uses cookies for security. 
Your browser must be capable
                        of processing cookies <em>and</em> cookies must be 
activated. 
                                Please set your browser to accept cookies, 
then press the
                        <strong>reload</strong> button.</p>
                                <hr>
                        </body>
                </html>""")



# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketTool.py==============================================
import md5
import Cookie
import time
from mod_python import apache

defaults = {
        'TicketExpires':60000,
        'TicketSecret':'/home/webadmin/.secretkey',
        'TicketDomain':'.cv.usat'
}


class TicketTool(dict):
        serverName = ''

        def __init__(self, req):
                """
                args: self
                          req: mod_python request object
                """

                # set up the config items
                opts = req.get_options()
                for key,value in defaults.items():
                        try:
                                avalue = opts[key]
                        except KeyError:
                                avalue = value
                        self[key] = avalue

 
        def authenticate(self,user,passwd):
                # since this is going to run behind SSL client
                # cert authtication, just return true 
                return 1



        def fetch_secret(self):
                secret = ""
                try:
                        secret = self['SECRET_KEY']
                except KeyError:
                        secret = open(self['TicketSecret']).read()
                        self['SECRET_KEY'] = secret

                return secret



        def invalidate_secret(self):
                del(self['SECRET_KEY'])


        def make_ticket(self, req, username):
                """
                usage: cookie = ticketTool.make_ticket(req, username)
                Creates a cookie containing the secure user information
                """ 
 
                ip_address = req.connection.remote_ip
                expires = str(self['TicketExpires'])
                now = str(time.time())
                secret = self.fetch_secret()
                m = md5.new()
                m.update(secret+ip_address+now+expires+username)
                hash = m.hexdigest()

                cookie = Cookie.SimpleCookie()
                cookie["Ticket"] = 
ip_address+","+expires+","+username+","+now+","+hash
                cookie["Ticket"]['path'] = '/'
                cookie["Ticket"]['domain'] = self['TicketDomain']
                cookie["Ticket"]['max-age'] = self['TicketExpires'] * 3600 

                # TODO - is the expires in seconds?  If so, jack this up!
 
                return cookie

 

        def verify_ticket(self,req):
                """
                usage: result, msg, user = ticketTool.verify_ticket(req)
                """

                ticket = None 
                cookie = Cookie.SimpleCookie()

                # could get KeyError in two places.
                # 1. if there are no cookies
                # 2. if there isn't a cookie named 'Ticket'
                try:
                        cookie.load(req.headers_in['Cookie'])
                except KeyError:
                        return 0, "user has no cookies", 'noone'

                try:
                        ticket = cookie['Ticket'].value
                        apache.log_error("Ticket Cookie value:" + 
str(ticket))
                except KeyError:
                        return 0, "user has no ticket cookie", 'noone'


                ip, expires_s, user, timestamp_s, hash = ticket.split(",")
 
                apache.log_error("[Ticket Cookie] hash:" + hash)
                apache.log_error("[Ticket Cookie] user:" + user)
                apache.log_error("[Ticket Cookie] time:" + timestamp_s)
                apache.log_error("[Ticket Cookie] expires:" + expires_s)
                apache.log_error("[Ticket Cookie] ip:" + ip)

                timestamp = float(timestamp_s)
                expires = int(expires_s)

                if ip != req.connection.remote_ip:
                        return 0, "IP address mismatch in ticket", 'noone'

                if time.time() - timestamp / 60 < expires:
                        return 0, "ticket has expired", 'noone'

                secret = self.fetch_secret()

 
                m = md5.new()
                m.update(secret+ip+timestamp_s+expires_s+user)
                new_hash = m.hexdigest()

                if hash != new_hash:
                        self.invalidate_secret()
                        return 0, 'ticket mismatch', 'noone'


                req.user = user
                return 1, 'ok', user
 
 

        def make_return_address(self, req):
                """
                usage: cookie = ticketTool.make_return_address(req)
                """

                protocol = 'http://'
                if req.get_options().has_key('is_ssl'):
                        protocol = 'https://'
 
                request_uri = protocol + req.server.server_hostname + ':' 
+ str(req.server.port) + req.unparsed_uri

                cookie = Cookie.SimpleCookie()
                cookie['request_uri'] = request_uri
                cookie['request_uri']['domain'] = self['TicketDomain']
                cookie['request_uri']['path'] = '/'

                return cookie


# ===========================================================
# ===========================================================
# ===========================================================
# HTTPD.CONF: ==============================================

<Macro CertSecurity>
        PythonAccessHandler TicketAuthenHandler
        PythonCleanupHandler TicketCleanupHandler
        ErrorDocument 403 https://usatux29.cv.usat:22221/ticketMaster
        #ErrorDocument 402 /unauthorized.html
        ErrorDocument 402 /manager?_action=error_doc_unauth
        PythonOption TicketSecret /home/tewpe1/.secretkey

 #==================================================================
        # PythonOption fullyLoadCache ::= no|yes (default is no)
        # This option directs the Authen handler whether to fully load the
        # cache upon child startup or cache refresh
        PythonOption fullyLoadCache yes
 #==================================================================

 #==================================================================
        # PythonOption is_ssl ::= any value you wish
        # only set is_ssl to something if this url is under ssl.  It 
doesn't
        # matter what it's set to, only that it exists.  It is used to 
help
        # construct the redirect_url correctly

        #PythonOption is_ssl yes
 #==================================================================

</Macro>

<Directory "/web/devel/tewpe1/py/apache2/htdocs/secure">
        Use CertSecurity
</Directory>

<Location /ticketMaster>
        SSLRequireSSL
        SSLOptions +StdEnvVars +ExportCertData

        SetHandler python-program
        PythonHandler TicketMaster
        PythonDebug On
        Order allow,deny
        Allow from all
        PythonOption TicketSecret /home/tewpe1/.secretkey

</Location>









"Hancock, David (DHANCOCK)" <DHANCOCK@arinc.com>
Sent by: mod_python-bounces@modpython.org
10/19/2003 12:27 AM

 
        To:     "'mod_python@modpython.org'" <mod_python@modpython.org>
        cc: 
        Subject:        [mod_python] req.connection.user generates AttributeError


I'm new to mod_python, and I'm stuck already.  I'm working through the 
examples in the documentation, and even after careful typing (and cutting 
and pasting from the manual), I can't get the authentication example to 
work.  The line:
        user = req.connection.user 
Gives an attribute error ('user').  As shown in the manual, I'm calling 
req.get_basic_auth_pw() first, but still no joy.
If I try/except to trap the attribute error, I avoid the 500 Server Error 
message, but the authentication still doesn't work.
Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and 
mod_python 3.0.3.  (My other computer is a Linux box, but this is what 
I've got right going right now).  The mod_python is a precompiled binary.
I'll be grateful for any assistance I can get.  I'm trying to recreate a 
mod_perl module (AuthCookie) which implements a ticket-based 
authentication mechanism.  It works well in Perl, but my group 
standardized on Python and we'd like to keep using Python for Apache 
modules, too.
Cheers! 
-- 
David Hancock | dhancock@arinc.com | 410-266-4384 _______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketTool.py
Type: application/octet-stream
Size: 3650 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketTool-0001.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketAuthenHandler.py
Type: application/octet-stream
Size: 8256 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketAuthenHandler-0001.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketMaster.py
Type: application/octet-stream
Size: 4425 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketMaster-0001.obj
From neel at mediapulse.com  Mon Oct 20 10:25:12 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <C0FC22C08B82074A88B50061764157776B976A@johnson.mediapulse.net>

Would it make since to add a function req.get_basic_auth() that returns
a tuple of (username, passwd)?  For backwards compatibility a call to
get_basic_auth_pw() followed by getting the req.user could remain, but:

user, pw = req.get_basic_auth()

might be easier to follow and be gentler on new users

Mike


> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
> Sent: Sunday, October 19, 2003 11:21 PM
> To: Hancock, David (DHANCOCK)
> Cc: 'mod_python@modpython.org'
> Subject: Re: [mod_python] req.user always returns None?
> 
> 
> 
> 
> On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:
> 
> > def authenhandler(req):
> >     user = req.user
> >     pw = req.get_basic_auth_pw()
> >     req.log_error(str(user) + ' ' + str(pw))
> >     if user == "david" and pw == "secret":
> >         return apache.OK
> >     else:
> >         return apache.HTTP_UNAUTHORIZED
> 
> The current docs neglect to mention this because at the time it seemed
> like it was no longer necessary, but the call to get_basic_auth_pw()
> should always _preceed_ the use of req.user. If the swap the first two
> lines, it will work (regardless of position of LoadModule within the
> config file).
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From woodfucius at comcast.net  Mon Oct 20 20:21:31 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] 
	Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
Message-ID: <3F940483.8030702@comcast.net>

I am having some trouble getting mod_python 3.0.3 to compile on my 
system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03. 
Apache version is 2.0.47 and Python version is 2.3.2 - both were built 
from ports.  I know there is a port for mod_python 2.7.8, but I would 
rather run the newest version and anyway the port complains about 
building Python with WITHOUT-THREADS set no matter if I set it or not. 
I have included the output from ./configure and make below.  Any ideas?

woodfucius# ./configure
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr/bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) 
/usr/local/sbin/apxs
found /usr/local/sbin/apxs, we'll use this. Use --with-apxs to specify 
another.
checking Apache version... 2.0.47
checking for Apache libexec directory... /usr/local/libexec/apache2
checking for Apache include directory... -I/usr/local/include/apache2
checking for --with-python... no
checking for python... (cached) /usr/local/bin/python
checking Python version... 2.3
checking Python install prefix... /usr/local
checking for Py_NewInterpreter in -lpython2.3... (cached) no
checking what libraries Python was linked with... 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/local/include/python2.3
updating cache ./config.cache
creating ./config.status
creating Makefile
creating src/Makefile
creating Doc/Makefile
creating test/testconf.py
creating dist/setup.py
creating dist/Makefile
woodfucius# make

Compiling for DSO.

/usr/local/sbin/apxs -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-Wl,--export-dynamic   -pthread -lm 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
mod_python.lo mod_python.c && touch mod_python.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
_apachemodule.lo _apachemodule.c && touch _apachemodule.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3/src.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3.
woodfucius#

From grisha at modpython.org  Mon Oct 20 12:17:13 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] Problems building mod_python 3.0.3 on FreeBSD
 4.8-STABLE
In-Reply-To: <3F940483.8030702@comcast.net>
References: <3F940483.8030702@comcast.net>
Message-ID: <20031020121423.O48570@onyx.ispol.com>



On Mon, 20 Oct 2003, Adam Wood wrote:

> I am having some trouble getting mod_python 3.0.3 to compile on my
> system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03.
> Apache version is 2.0.47 and Python version is 2.3.2 - both were built
> from ports.  I know there is a port for mod_python 2.7.8

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha
From woodfucius at comcast.net  Mon Oct 20 21:56:18 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] 
	SOLVED: Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
In-Reply-To: <20031020121423.O48570@onyx.ispol.com>
References: <3F940483.8030702@comcast.net>
	<20031020121423.O48570@onyx.ispol.com>
Message-ID: <3F941ABA.8060003@comcast.net>

Gregory (Grisha) Trubetskoy wrote:

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha

Thanks Grisha.  I installed Python 2.2.3, used the mod_python3 port, and 
rebuilt Apache with --enable-threads and that solved the problem, guess 
I just needed to RTFM a bit more.  Thanks again!

Adam Wood



From tpc at csua.berkeley.edu  Tue Oct 21 11:12:46 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031021110347.J40781-100000@localhost.name>


hello all, I am trying to index and search mp3s in my Apache document
root.  Whenever executing a database select statement that retrieves
the URL and title (the filename minus the .mp3 extension) of mp3s whose
filenames contain the words I type into a web form, I get a "invalid
literal for float" error message.  The same script works fine on the
command line and in IDLE.  The error messages vary, and I sometimes see
"invalid literal for int" or "invalid literal for long" though now it
seems I just get "invalid literal for float."  Also the error seems to
come and go, and sometimes I get the results I want.  I have gotten this
type of message before when playing around with Python and trying to
convert, say, a string to int, but this has me scratching my head:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>


From tpc at csua.berkeley.edu  Tue Oct 21 11:17:38 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] invalid literal for float addendum
Message-ID: <20031021111643.Y40948-100000@localhost.name>


By the by rpm -q mod_python tells me:
mod_python-3.0.1-3


From neel at mediapulse.com  Tue Oct 21 14:45:49 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>

There's nor really enough info here to see the cause, but it's a MySQLdb
error, not a mod_python error.  Your doesn't show the SQL statement you
are trying to execute, but my guess is that the field in the MySQL table
is defined as a float and your trying to insert a string (the title).
Seeing a few lines of the python module in question would help though.

Mike

> -----Original Message-----
> From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu] 
> Sent: Tuesday, October 21, 2003 2:13 PM
> To: mod_python@modpython.org
> Subject: [mod_python] invalid literal for float
> 
> 
> 
> hello all, I am trying to index and search mp3s in my Apache document
> root.  Whenever executing a database select statement that retrieves
> the URL and title (the filename minus the .mp3 extension) of 
> mp3s whose
> filenames contain the words I type into a web form, I get a "invalid
> literal for float" error message.  The same script works fine on the
> command line and in IDLE.  The error messages vary, and I 
> sometimes see
> "invalid literal for int" or "invalid literal for long" though now it
> seems I just get "invalid literal for float."  Also the error seems to
> come and go, and sometimes I get the results I want.  I have 
> gotten this
> type of message before when playing around with Python and trying to
> convert, say, a string to int, but this has me scratching my head:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> in HandlerDispatch
>     result = object(req)
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
>     results = getMP3SearchResults(terms)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> getMP3SearchResults
>     results = getMatchingURLs(cursor)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> getMatchingURLs
>     cursor.execute(sql)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 95, in
> execute
>     return self._execute(query, args)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 114, in
> _execute
>     self.errorhandler(self, exc, value)
> 
>   File 
> "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> in defaulterrorhandler
>     raise errorclass, errorvalue
> 
> ValueError: invalid literal for float(): <insert any mp3 title here>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From tpc at csua.berkeley.edu  Tue Oct 21 12:06:37 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>
Message-ID: <20031021120144.O41208-100000@localhost.name>

I have attached my code, although I must ask if it was a MySQL error
why does my script work fine on the command line and in IDLE ?  Also, the
script seems to throw an error during a cursor.execute(sql) of a SELECT statement:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

<paste>
#!/usr/bin/env python
"""Created to solve bug that outputs invalid literal for float, int, long.
Simplifies main search script and assumes query will always be one word
long
"""
import MySQLdb

DB = 'test'

def getMP3SearchResults(terms):
	conn = MySQLdb.Connection(db=DB)
	cursor = conn.cursor()
	createTemporaryTable(cursor)
	identifyMatchingURLs(terms, cursor)
	results = getMatchingURLs(cursor)
	cursor.close()
	conn.close()
	return results

def createTemporaryTable(cursor):
	try:
		sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
		      url_id INT NOT NULL,
		      ) TYPE = InnoDB;"""
		cursor.execute(sql)
	except:
		print "Error in creating URLs_WITH_MATCHES table"

def identifyMatchingURLs(terms, cursor):
        sql = """INSERT INTO URLs_WITH_MATCHES
              SELECT DISTINCT WORDS_X_URL.url_id
              FROM WORDS_X_URL
              INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id
              WHERE WORDS.word = '% s' """ % terms
        cursor.execute(sql)

def getMatchingURLs(cursor):
	sql = """SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs
	      WHERE URLs_WITH_MATCHES.url_id = URLs.id
	      GROUP BY URLs_WITH_MATCHES.url_id"""
	cursor.execute(sql)
	results = cursor.fetchall()
	return results

def search(terms):
        results = getMP3SearchResults(terms)
        return results
</paste>

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> There's nor really enough info here to see the cause, but it's a MySQLdb
> error, not a mod_python error.  Your doesn't show the SQL statement you
> are trying to execute, but my guess is that the field in the MySQL table
> is defined as a float and your trying to insert a string (the title).
> Seeing a few lines of the python module in question would help though.
>
> Mike
>
> > -----Original Message-----
> > From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu]
> > Sent: Tuesday, October 21, 2003 2:13 PM
> > To: mod_python@modpython.org
> > Subject: [mod_python] invalid literal for float
> >
> >
> >
> > hello all, I am trying to index and search mp3s in my Apache document
> > root.  Whenever executing a database select statement that retrieves
> > the URL and title (the filename minus the .mp3 extension) of
> > mp3s whose
> > filenames contain the words I type into a web form, I get a "invalid
> > literal for float" error message.  The same script works fine on the
> > command line and in IDLE.  The error messages vary, and I
> > sometimes see
> > "invalid literal for int" or "invalid literal for long" though now it
> > seems I just get "invalid literal for float."  Also the error seems to
> > come and go, and sometimes I get the results I want.  I have
> > gotten this
> > type of message before when playing around with Python and trying to
> > convert, say, a string to int, but this has me scratching my head:
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 194, in handler
> >     result = apply(object, (), args)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From seth at picklematrix.net  Tue Oct 21 12:07:52 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] returning apache code from publisher handler?
Message-ID: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>

Hello,

 From the examples I've seen, the publisher handler expects a string to 
be returned.  I'd like the option to return any arbitrary apache code 
if I need to.  Is this an option or possible?

Thanks very much!
Seth

From neel at mediapulse.com  Tue Oct 21 18:33:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>

> I have attached my code, although I must ask if it was a MySQL error
> why does my script work fine on the command line and in IDLE 
> ?  Also, the
> script seems to throw an error during a cursor.execute(sql) 
> of a SELECT statement:
> 

Your second sentence should answer the first, I doubt mod_python has any
cursor classes =p.  Your best asking this on the mysql lists and/or the
mysqldb list.

Nothing looks odd at a glance, I'd check over my table structures and
data, then fire off the question to one of the above places.

Mike

From grisha at modpython.org  Tue Oct 21 23:23:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] returning apache code from publisher handler?
In-Reply-To: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
References: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
Message-ID: <20031021232220.V80359@onyx.ispol.com>


Yes, you can

raise apache.SERVER_RETURN, apache.OK

or

raise apache.SERVER_RETURN, apache.DECLINED

etc.

On Tue, 21 Oct 2003, Seth Ladd wrote:

> Hello,
>
>  From the examples I've seen, the publisher handler expects a string to
> be returned.  I'd like the option to return any arbitrary apache code
> if I need to.  Is this an option or possible?
>
> Thanks very much!
> Seth
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Wed Oct 22 10:21:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>
Message-ID: <20031022100911.F48998-100000@localhost.name>


hi Michael, I guess I will lookup MySQLdb support but the statements work
just fine in MySQL shell, and in php, and in python executed from the
command line and in IDLE, both of which have import MySQLdb.  I went to
this list first because the error message begins with:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)
</paste>

but ends with:

<paste>
 File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue
</paste>

Here's hoping MySQLdb support won't say it's a mod_python problem ;-)

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE
> > ?  Also, the
> > script seems to throw an error during a cursor.execute(sql)
> > of a SELECT statement:
> >
>
> Your second sentence should answer the first, I doubt mod_python has any
> cursor classes =p.  Your best asking this on the mysql lists and/or the
> mysqldb list.
>
> Nothing looks odd at a glance, I'd check over my table structures and
> data, then fire off the question to one of the above places.
>
> Mike
>

From tpc at csua.berkeley.edu  Wed Oct 22 10:26:53 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031022102616.K48998-100000@localhost.name>

this reply didn't get forwarded to the list

---------- Forwarded message ----------
Date: Wed, 22 Oct 2003 10:08:40 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: "caffeine@tuxfamily.org" <caffeine@tuxfamily.org>
Subject: Re: [mod_python] invalid literal for float


hi caffeine, I have tested my MySQL statements in PHP and in MySQL
shell with no error.  The MySQL select statement actually comes from a
working PHP script that I rewrote for use with Python.  I executed the
following in the MySQL shell:

CREATE TEMPORARY TABLE URLs_WITH_MATCHES ( url_id INT NOT NULL ) TYPE =
InnoDB;

INSERT INTO URLs_WITH_MATCHES SELECT DISTINCT WORDS_X_URL.url_id FROM
WORDS_X_URL INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id WHERE
WORDS.word = 'anyword'

SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs WHERE
URLs_WITH_MATCHES.url_id = URLs.id GROUP BY URLs_WITH_MATCHES.url_id;

drop table URLs_WITH_MATCHES;

with no problem.  Note to those trying this at home, whenever you create a
temporary table and try to SHOW TABLES you can never see the darn thing
(as of MySQL 4.0.14).  But as long as your MySQL shell is alive you can
access a temporary table.

On Wed, 22 Oct 2003, caffeine@tuxfamily.org wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
>
> On Mardi 21 Octobre 2003 19:06, tpc@csua.berkeley.edu wrote:
> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE ?  Also,
> > the script seems to throw an error during a cursor.execute(sql) of a
> > SELECT statement:
>
> Have you tried your SQL statements on the MySQL command line client ?
> I'd suggest you double-check your tables structure and data, then track
> exactly where is the problem (modpython, python mysql bindings, mysql
> itself...)
>
> Dunno if this is related to your problem, I had once MySQL firing all
> sorts of weird errors. We tracked it down to /var being full, we
> cleaned the partition and everything was back as normal.
>
> my 2 cents,
> sylvain
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.2 (GNU/Linux)
>
> iD8DBQE/ll7NK/qAVOpQGPYRAjYPAJ9faZH/I23okt6nhsNjyMFQVuDgQwCeNO12
> E9f0VrPQ5kBZLAJZGXTugQw=
> =/45O
> -----END PGP SIGNATURE-----
>
>


From conrad at hep.caltech.edu  Wed Oct 22 11:56:13 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] 3.1.1b Feedback
Message-ID: <1066848973.2812.75.camel@heppc22>

Hi Grisha

Since I was one of the complainers about the session locks in 3.1.0a,
I'm happy to confirm that 3.1.1b now works for me. Thanks!

The server startup log is given below. I don't actually use the
mod_python sessions, so for me it would still be useful to be able to
turn that feature off. But that is just a minor footnote :-)

--

I noticed another surprising behaviour relating to the PythonImport and
PythonPath directives (not new with 3.1.1b though):

For a Directory directive in the main httpd.conf file e.g.

<Directory /usr/mypath/>
       SetHandler python-program
       AddHandler python-program .py
       PythonInterpPerDirective On
       PythonHandler myhandler
       DirectoryIndex myhandler.py
       PythonInterpPerDirectory On

# Name of the interpreter
       PythonInterpreter default_interp
       PythonPath "sys.path+['/usr/mypath']"
</Directory>
# Init for the 'default' server
PythonImport server_init default_interp

The PythonImport directive loads the file /usr/mypath/server-init.py
into the default_interp interpreter. If the PythonPath directive is
omitted, this import fails. 

Cheers

Conrad




[Wed Oct 22 11:41:00 2003] [notice] mod_python: Creating 150 session
mutexes based on 150 max processes and 0 max threads.
[Wed Oct 22 11:41:00 2003] [error] (28)No space left on device:
mod_python: Failed to create global mutex 125 of 150
(/tmp/mpmtx4571125).
[Wed Oct 22 11:41:00 2003] [error] mod_python: We can probably continue,
but with diminished ability to process session locks.
[Wed Oct 22 11:41:00 2003] [error] mod_python: Hint: On Linux, the
problem may be the number of available semaphores, check 'sysctl
kernel.sem'
[Wed Oct 22 11:41:00 2003] [notice] Apache/2.0.47 (Unix) mod_ssl/2.0.47
OpenSSL/0.9.7b mod_python/3.1.1b Python/2.2.3 configured -- resuming
normal operations

-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From olivier at phgroup.com  Wed Oct 22 23:19:11 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] no more 3.1.1 ? 
Message-ID: <3F97025F.8090308@phgroup.com>

hi all,

I've read some posts about testing the 3.1.1 version of mod_python, but 
I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .

any ideas on where is it hidden ??
regards !


-- 
Olivier Migeon


From grisha at modpython.org  Wed Oct 22 20:22:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] no more 3.1.1 ? 
In-Reply-To: <3F97025F.8090308@phgroup.com>
References: <3F97025F.8090308@phgroup.com>
Message-ID: <20031022202152.L96424@onyx.ispol.com>


On Wed, 22 Oct 2003, Olivier Migeon wrote:

> hi all,
>
> I've read some posts about testing the 3.1.1 version of mod_python, but
> I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .
>
> any ideas on where is it hidden ??

in CVS :-)

Grisha
From scott_list at mischko.com  Wed Oct 22 19:20:04 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
Message-ID: <200310221920.04706.scott_list@mischko.com>

Hi all!

Draco relies on the req.server.my_generation for some of it's functionality.  
It appears that this is no longer included in mod_python3.1.1b?  Draco 
(0.99.4) is always getting an AttributeError when it accesses this.

I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.

Any ideas on this?  Is this actually gone from MP or am I missing something?

Scott
From grisha at modpython.org  Wed Oct 22 23:07:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310221920.04706.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
Message-ID: <20031022230636.R96424@onyx.ispol.com>


Heh - it appears to have been lost along the way :-)

I added it back in.

Grisha

On Wed, 22 Oct 2003, Scott Chapman wrote:

> Hi all!
>
> Draco relies on the req.server.my_generation for some of it's functionality.
> It appears that this is no longer included in mod_python3.1.1b?  Draco
> (0.99.4) is always getting an AttributeError when it accesses this.
>
> I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
>
> Any ideas on this?  Is this actually gone from MP or am I missing something?
>
> Scott
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Wed Oct 22 20:36:06 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031022230636.R96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
Message-ID: <200310222036.06088.scott_list@mischko.com>

The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I 
assume you added that patch in also?

Scott

On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> Heh - it appears to have been lost along the way :-)
>
> I added it back in.
>
> Grisha
>
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > Hi all!
> >
> > Draco relies on the req.server.my_generation for some of it's
> > functionality. It appears that this is no longer included in
> > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > when it accesses this.
> >
> > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> >
> > Any ideas on this?  Is this actually gone from MP or am I missing
> > something?
> >
> > Scott
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

From scott_list at mischko.com  Wed Oct 22 20:59:53 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] 
	restart_time is missing from the CVS checkout I just did.
Message-ID: <200310222059.53716.scott_list@mischko.com>

I just checked out CVS mod_python 3.1.2b and restart_time is missing from the 
server object.

Scott
From grisha at modpython.org  Thu Oct 23 09:26:35 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310222036.06088.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
	<200310222036.06088.scott_list@mischko.com>
Message-ID: <20031023092544.J96424@onyx.ispol.com>



On Wed, 22 Oct 2003, Scott Chapman wrote:

> The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I
> assume you added that patch in also?

If it's something other than my_generation, I don't know what the nature
of the patch is. If you find info on it, let me know.

Grisha

>
> Scott
>
> On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > Heh - it appears to have been lost along the way :-)
> >
> > I added it back in.
> >
> > Grisha
> >
> > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > Hi all!
> > >
> > > Draco relies on the req.server.my_generation for some of it's
> > > functionality. It appears that this is no longer included in
> > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > when it accesses this.
> > >
> > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > >
> > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > something?
> > >
> > > Scott
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Thu Oct 23 07:26:18 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031023092544.J96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<200310222036.06088.scott_list@mischko.com>
	<20031023092544.J96424@onyx.ispol.com>
Message-ID: <200310230726.18897.scott_list@mischko.com>

That's fixed.   It wasmy_generation.

Looks like you got my email on restart_time also.  Is there a test suite for 
mod_python that goes through and checks all the objects to make sure they 
still have all their normal attributes?

Thanks for the quick responses.  Draco's happy again!

Scott

On Thursday 23 October 2003 06:26, Gregory (Grisha) Trubetskoy wrote:
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > The Draco author mentioned a patch needed back in the 2.7.8 days of MP. 
> > I assume you added that patch in also?
>
> If it's something other than my_generation, I don't know what the nature
> of the patch is. If you find info on it, let me know.
>
> Grisha
>
> > Scott
> >
> > On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > > Heh - it appears to have been lost along the way :-)
> > >
> > > I added it back in.
> > >
> > > Grisha
> > >
> > > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > > Hi all!
> > > >
> > > > Draco relies on the req.server.my_generation for some of it's
> > > > functionality. It appears that this is no longer included in
> > > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > > when it accesses this.
> > > >
> > > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > > >
> > > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > > something?
> > > >
> > > > Scott
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python

From mikeklein at sbcglobal.net  Sat Oct 25 15:52:37 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] 
 Beginner question re: getting form data and key errors when var not
 defined
Message-ID: <3F9AFEB5.3090508@sbcglobal.net>

Why am I getting key errors when merely attempting to get <possible> 
form data from a mod_python request...ala:

author = req.form['author']

I get the following:

    raise KeyError, key

KeyError: subject

I do kind of expect certain form fields to possibly not have 
values...why the explicit error? Can't I just check for null or 
uninitialized in my code?

thanks,

mike

From michael at dynamine.net  Sat Oct 25 16:32:29 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9AFEB5.3090508@sbcglobal.net>
References: <3F9AFEB5.3090508@sbcglobal.net>
Message-ID: <3F9B080D.1020904@dynamine.net>

This is a really a Python language question, not a mod_python question 
per se.

You have several options, including:

if req.form.has_key('author'):
   author = req.form['author']
else:
   author = None

Or:

try:
   author = req.form['author']
except KeyError:
   author = None

See section 2.2.7 ("Mapping Types") in the Python Library Reference for 
details.

--Michael

Mike Klein wrote:

> Why am I getting key errors when merely attempting to get <possible> 
> form data from a mod_python request...ala:
> 
> author = req.form['author']
> 
> I get the following:
> 
>    raise KeyError, key
> 
> KeyError: subject
> 
> I do kind of expect certain form fields to possibly not have 
> values...why the explicit error? Can't I just check for null or 
> uninitialized in my code?
> 
> thanks,
> 
> mike
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From twa at post.com  Sun Oct 26 09:28:34 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] Newbie problem running mod_python
Message-ID: <3F9B93C2.6040908@post.com>

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.  
27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so                                                     
174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


From sgillies at frii.com  Sun Oct 26 08:58:07 2003
From: sgillies at frii.com (Sean Gillies)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>

On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:

> I am trying to run mod_python.
>
> My setup is:
>
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47
> Windows XP Home edition 2002 Service Pack 1
>
> I installed python, then apache and then mod_python.  I have made no 
> changes to apache (other than to httpd.conf) or mod_python.
>
> Apache ran ok before the install of mod_python.
>
> When trying to run up apache with the example python code I get:
>
>    Syntax error on line 173 of C:/Program Files/Apache 
> Group/Apache2/conf/httpd.conf:
>    Cannot load C:/Program Files/Apache 
> Group/Apache2/modules/mod_python.so into server: The specified module 
> could not be found.
>    Note the errors or messages above, and press the <ESC> key to exit. 
>  27...
>
> That part of httpd.conf looks like this:
>
> 165 LoadModule setenvif_module modules/mod_setenvif.so
> 166 #LoadModule speling_module modules/mod_speling.so
> 167 #LoadModule status_module modules/mod_status.so
> 168 #LoadModule unique_id_module modules/mod_unique_id.so
> 169 LoadModule userdir_module modules/mod_userdir.so
> 170 #LoadModule usertrack_module modules/mod_usertrack.so
> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
> 172 #LoadModule ssl_module modules/mod_ssl.so
> 173 LoadModule python_module modules/mod_python.so                     
>                                 174
> 175 #
> 176 # ExtendedStatus controls whether Apache will generate "full" 
> status
> 177 # information (ExtendedStatus On) or just basic information 
> (ExtendedStatus
> 178 # Off) when the "server-status" handler is called. The default is 
> Off.
> 179 #
> 180 #ExtendedStatus On
>
> As usual I expect I have missed something glaringly obvious, I just 
> don't know what right now.
>
> Any help or pointers much appreciated.
>
> Thanks.
>
> Tom
>

Tom,

I don't use windows these days, but shouldn't the mod_python module for 
Win32
be a DLL rather than a SO?  You didn't mention if you checked in
C:/Program Files/Apache Group/Apache2/modules/ to see if the module was 
there.
Check the directory and use the mod_python library you find.

cheers,
Sean
--
Sean Gillies
sgillies at frii dot com
http://www.frii.com/~sgillies

From cs1spw at bath.ac.uk  Sun Oct 26 12:53:03 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
References: <3F9B93C2.6040908@post.com>
Message-ID: <3F9C180F.6070305@bath.ac.uk>

Tom Ayerst wrote:

> I am trying to run mod_python.
> 
> My setup is:
> 
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47

mod_python currently requires Python 2.2 - it doesn't yet work with 
Python 2.3.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 18:56:44 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
References: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
Message-ID: <3F9C18EC.8040004@post.com>

Sorry, I should have mentioned that.  mod_python.so is in the modules 
directory.  All the other modules are called *.so so I assumed that that 
is the Apache approach (its not standard but I think you can do that in 
Windows).

Cheers

Tom

Sean Gillies wrote:

> On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:
>
>> I am trying to run mod_python.
>>
>> My setup is:
>>
>> mod_python version  3.0.3
>> python 2.3.2
>> Apache 2.0.47
>> Windows XP Home edition 2002 Service Pack 1
>>
>> I installed python, then apache and then mod_python.  I have made no 
>> changes to apache (other than to httpd.conf) or mod_python.
>>
>> Apache ran ok before the install of mod_python.
>>
>> When trying to run up apache with the example python code I get:
>>
>>    Syntax error on line 173 of C:/Program Files/Apache 
>> Group/Apache2/conf/httpd.conf:
>>    Cannot load C:/Program Files/Apache 
>> Group/Apache2/modules/mod_python.so into server: The specified module 
>> could not be found.
>>    Note the errors or messages above, and press the <ESC> key to 
>> exit.  27...
>>
>> That part of httpd.conf looks like this:
>>
>> 165 LoadModule setenvif_module modules/mod_setenvif.so
>> 166 #LoadModule speling_module modules/mod_speling.so
>> 167 #LoadModule status_module modules/mod_status.so
>> 168 #LoadModule unique_id_module modules/mod_unique_id.so
>> 169 LoadModule userdir_module modules/mod_userdir.so
>> 170 #LoadModule usertrack_module modules/mod_usertrack.so
>> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
>> 172 #LoadModule ssl_module modules/mod_ssl.so
>> 173 LoadModule python_module 
>> modules/mod_python.so                     
>>                                 174
>> 175 #
>> 176 # ExtendedStatus controls whether Apache will generate "full" status
>> 177 # information (ExtendedStatus On) or just basic information 
>> (ExtendedStatus
>> 178 # Off) when the "server-status" handler is called. The default is 
>> Off.
>> 179 #
>> 180 #ExtendedStatus On
>>
>> As usual I expect I have missed something glaringly obvious, I just 
>> don't know what right now.
>>
>> Any help or pointers much appreciated.
>>
>> Thanks.
>>
>> Tom
>>
>
> Tom,
>
> I don't use windows these days, but shouldn't the mod_python module 
> for Win32
> be a DLL rather than a SO?  You didn't mention if you checked in
> C:/Program Files/Apache Group/Apache2/modules/ to see if the module 
> was there.
> Check the directory and use the mod_python library you find.
>
> cheers,
> Sean
> -- 
> Sean Gillies
> sgillies at frii dot com
> http://www.frii.com/~sgillies
>
>


From rclilly at cox.net  Sun Oct 26 11:19:09 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:57 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9C18EC.8040004@post.com>
Message-ID: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>

>
> Sorry, I should have mentioned that.  mod_python.so is in the modules
> directory.  All the other modules are called *.so so I assumed that that
> is the Apache approach (its not standard but I think you can do that in
> Windows).
>
> >
> > I don't use windows these days, but shouldn't the mod_python module
> > for Win32
> > be a DLL rather than a SO?  You didn't mention if you checked in
> > C:/Program Files/Apache Group/Apache2/modules/ to see if the module
> > was there.
> > Check the directory and use the mod_python library you find.

mod_python.so is a dll, it's just named after the Apache convention. The
other response you got from Simon Willison letting you know that current
release version of mod_python does not yet work with Python 2.3 is the
relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
open mod_python.so and replace all references to python22.dll with
python23.dll. I've been running with the latter solution for almost two
weeks now and haven't noticed any problems.

HTH,

Robert Lilly

From rclilly at cox.net  Sun Oct 26 11:30:45 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] 
	Best place to start learning both mod_python and Python
Message-ID: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>

I've been using mod_python to enable applications written by others to work
under Apache. I've decided to expand my programming skills and it looks like
Python is the best language to start with. I currently only know how to
program with Visual Basic 6, and VBA. My specialty has been custom financial
applications using MS Excel and VBA.

So, to someone who is new to both to mod_python and to the Python
programming language, and whose only background is Visual Basic, what are
your recommendations on how and where to get started. I am primarily
interested in developing web applications at the moment, which is why I've
included mod_python in my learning agenda.

Also, is using mod_python the only way to use Python under Apache? If not,
although this is a mod_python list, I would appreciate knowing what the
various options are.

Thanks!

Robert Lilly

From mike_verdone at shaw.ca  Sun Oct 26 14:07:57 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 21:53:58 2004
Subject: =?iso-8859-1?q?=5Bmod=5Fpython=5D=09Best=20place=20to=20start=20learning?=
 =?iso-8859-1?q?=20both=20mod=5Fpython=20and?= Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <200310261407.57694.mike_verdone@shaw.ca>

Hi!

For learning Python, your best bet is to start with the tutorials at 
www.python.org.

http://www.python.org/doc/2.3.2/tut/tut.html

You will probably already know the concepts explained in the tutorial, but 
it's a good way to learn Python's syntax. The documentation on python.org 
also includes the library reference, which is good to have. Another good way 
to get help on the libraries is from the Python interpreter. If you run the 
python interpreter and type help(), you will be in the help menu. Then, type 
a module name and you will get documentation on that module.

Documentation on mod_python is available at www.modpython.org. Read the FAQ 
and the Docs.

There are a few ways to interface Python and Apache, but mod_python is the 
best. (In my opinion as a member of the mod_python mailing list ;-) ). 
Another way to do it is by using regular CGI, where each .py file is 
basically a script that is run externally by Apache. This has much lower 
performance, and doesn't make it easier to develop, so I'd stay away. There 
was also a module named mod_snake that supposedly had better performance than 
mod_python, but I don't think it's supported anymore. Finally, there's Zope, 
which is an enterprise server based on Python. Haven't really used it, but 
it's supposed to be good. www.zope.org.

Hope that helps!

Mike.


On October 26, 2003 12:30, Robert Lilly wrote:
> I've been using mod_python to enable applications written by others to work
> under Apache. I've decided to expand my programming skills and it looks
> like Python is the best language to start with. I currently only know how
> to program with Visual Basic 6, and VBA. My specialty has been custom
> financial applications using MS Excel and VBA.
>
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started. I am primarily
> interested in developing web applications at the moment, which is why I've
> included mod_python in my learning agenda.
>
> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.
>
> Thanks!
>
> Robert Lilly
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 12:28:59 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <200310261407.57694.mike_verdone@shaw.ca>
Message-ID: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>

> Hi!
>
> For learning Python, your best bet is to start with the tutorials at
> www.python.org.
>
> http://www.python.org/doc/2.3.2/tut/tut.html
>
> You will probably already know the concepts explained in the
> tutorial, but
> it's a good way to learn Python's syntax. The documentation on python.org
> also includes the library reference, which is good to have.
> Another good way
> to get help on the libraries is from the Python interpreter. If
> you run the
> python interpreter and type help(), you will be in the help menu.
> Then, type
> a module name and you will get documentation on that module.
>
> Documentation on mod_python is available at www.modpython.org.
> Read the FAQ
> and the Docs.
>
> There are a few ways to interface Python and Apache, but
> mod_python is the
> best. (In my opinion as a member of the mod_python mailing list ;-) ).
> Another way to do it is by using regular CGI, where each .py file is
> basically a script that is run externally by Apache. This has much lower
> performance, and doesn't make it easier to develop, so I'd stay
> away. There
> was also a module named mod_snake that supposedly had better
> performance than
> mod_python, but I don't think it's supported anymore. Finally,
> there's Zope,
> which is an enterprise server based on Python. Haven't really
> used it, but
> it's supposed to be good. www.zope.org.
>
> Hope that helps!
>
> Mike.

Thanks for the quick response Mike. I especially appreciate the information
about using the Python interpreter as I was not aware of that capability.

I agree with you regarding staying away from CGI. I intend to do this
whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
what I see, it's way overkill for my needs.

Thanks,

Robert

From matt at pollenation.net  Sun Oct 26 21:21:28 2003
From: matt at pollenation.net (Matt Goodall)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
Message-ID: <3F9C3AD8.4080303@pollenation.net>

Robert Lilly wrote:

>>Hi!
>>
>>    
>>
[snip]

>>There are a few ways to interface Python and Apache, but
>>mod_python is the
>>best. (In my opinion as a member of the mod_python mailing list ;-) ).
>>Another way to do it is by using regular CGI, where each .py file is
>>basically a script that is run externally by Apache. This has much lower
>>performance, and doesn't make it easier to develop, so I'd stay
>>away. There
>>was also a module named mod_snake that supposedly had better
>>performance than
>>mod_python, but I don't think it's supported anymore. Finally,
>>there's Zope,
>>which is an enterprise server based on Python. Haven't really
>>used it, but
>>it's supposed to be good. www.zope.org.
>>    
>>
>Thanks for the quick response Mike. I especially appreciate the information
>about using the Python interpreter as I was not aware of that capability.
>  
>
The interpreter is a fantastic tool for testing out ideas, you'll use it 
a lot. Also worth a mention is IPython (http://ipython.scipy.org/) which 
aims to be a better Python shell. It's got some great features for 
inspecting objects, getting help, looking at source code etc.

>I agree with you regarding staying away from CGI. I intend to do this
>whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
>what I see, it's way overkill for my needs.
>  
>
Traditional CGI is slow but SCGI 
(http://www.mems-exchange.org/software/scgi/) and FastCGI 
(http://www.fastcgi.com/) are Apache modules that provide a CGI-like 
interface to long-running Python applications. I find SCGI particularly 
useful during development as there is no need to restart Apache to 
reload an application - just Ctrl-C your application and start it again.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt@pollenation.net


From cs1spw at bath.ac.uk  Sun Oct 26 16:47:24 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] 	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <3F9C4EFC.3070107@bath.ac.uk>

Robert Lilly wrote:
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started.

If you already know how to program, Dive Into Python should be an 
essential stop on your tour of the Python universe. It's a free online 
book that teaches Python programming (including a lot of useful stuff on 
Python style) to people who already understand what if/then/else and for 
loops are:

http://diveintopython.org/

There's also a thriving Python weblog scene. A great index for this is 
the Python Programmer Weblogs page, which lists Python blogs and shows 
recent entries from them as well:

http://mechanicalcat.net/pyblagg.html

And finally some self promotion :) You might find the Python category on 
my own blog of some use:

http://simon.incutio.com/categories/python/

> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.

CGI always gets a bad rap for performance, but I don't think this is 
entirely deserved. Recently I've written a couple of applications that 
feature an admin panel powered by Python CGI that generates static HTML 
pages for public consumption. Performance on an admin panel that only 
gets accessed by one person at a time is fine with CGI. That said, I 
wouldn't want to run a full dynamic site from it.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 23:06:51 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
Message-ID: <3F9C538B.6050304@post.com>

Thanks Robert,

It all runs up now.  (Now I just have to get the app working !)

Tom

Robert Lilly wrote:

>>Sorry, I should have mentioned that.  mod_python.so is in the modules
>>directory.  All the other modules are called *.so so I assumed that that
>>is the Apache approach (its not standard but I think you can do that in
>>Windows).
>>
>>    
>>
>>>I don't use windows these days, but shouldn't the mod_python module
>>>for Win32
>>>be a DLL rather than a SO?  You didn't mention if you checked in
>>>C:/Program Files/Apache Group/Apache2/modules/ to see if the module
>>>was there.
>>>Check the directory and use the mod_python library you find.
>>>      
>>>
>
>mod_python.so is a dll, it's just named after the Apache convention. The
>other response you got from Simon Willison letting you know that current
>release version of mod_python does not yet work with Python 2.3 is the
>relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
>(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
>open mod_python.so and replace all references to python22.dll with
>python23.dll. I've been running with the latter solution for almost two
>weeks now and haven't noticed any problems.
>
>HTH,
>
>Robert Lilly
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From andre at burgaud.com  Sun Oct 26 21:43:30 2003
From: andre at burgaud.com (Andre Burgaud)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <000001c39c3c$7d8a91f0$6601a8c0@minnesota>



Hi Tom,

I faced the same situation recently and this has been also discussed in
the mod_python list. As a temporary solution, try with Python 2.2 and
this should work fine.

Andre


http://www.burgaud.com


-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Tom Ayerst
Sent: Sunday, October 26, 2003 3:29 AM
To: mod_python@modpython.org
Subject: [mod_python] Newbie problem running mod_python

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.

27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so

174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is
Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 21:50:30 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <200310270039.05867.gwidion@mpc.com.br>
Message-ID: <AMEDJPACLBJGECKBDAOKIELKCCAA.rclilly@cox.net>

> -----Original Message-----
> From: Joao S. O. Bueno [mailto:gwidion@mpc.com.br]
> Sent: Sunday, October 26, 2003 06:39 PM
> To: Robert Lilly
> Subject: Re: [mod_python] Newbie problem running mod_python
>
>
> On Sunday 26 October 2003 5:19 pm, Robert Lilly wrote:
>
> > mod_python.so is a dll, it's just named after the Apache
> > convention. The other response you got from Simon Willison letting
> > you know that current release version of mod_python does not yet
> > work with Python 2.3 is the relevant one. There are workarounds -
> > 1) revert to using Python 2.2, or 2) (courtesy of Gustavo Cordova
> > Avila) using either a text or a binary editor, open mod_python.so
> > and replace all references to python22.dll with python23.dll. I've
> > been running with the latter solution for almost two weeks now and
> > haven't noticed any problems.
>
> Hmm..would it not be cleaner to c:>copy python22.dll python23.dll  ?

I thought about doing that, but then other applications needing to use
python23.dll will be getting python22.dll, which I am sure will cause
problems. Making the modification within mod_python.so assures that it is
the only application affected.

Another solution that is working for me is to have both Python 2.2 and 2.3
on the same machine, into separate folders of course. During installation
most apps look in the registry and choose the version it needs. In many
cases it says it will work with either. In those cases I tell it to use 2.3.
There are some apps, however, that will only work with one or the other, but
not both. On this particular system I am running mod_python.so without
modification. When I installed mod_python, it automatically configured
itself in the Lib/site-packages folder of 2.2. I cannot see any difference
in stability or performance between this setup and the one where I modified
mod_python.so.

Robert Lilly

From stian at soiland.no  Mon Oct 27 09:30:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] 
	mod_python 3.1.1b and sessions: Failed to acquire global mutex lock
Message-ID: <20031027083048.GA30427@itea.ntnu.no>

I've just downloaded and installed the 3.1.1b from
http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
tested it with these two webservers:
   
   Redhat 9 - httpd-2.0.40-21.5
   Debian unstable - apache2-mpm-prefork 2.0.47-1

There seems to be some mutex permission problems:

    from mod_python.Session import Session
    def test(req):
        session = Session(req)
        doc = "<html><body><h1>hello</h1>Counts: %s</body></html>"
        counter = session.setdefault('count', 0)
        doc %= counter
        return doc

Yields on both servers:


[Mon Oct 27 08:54:12 2003] [notice] mod_python: Creating 32 session mutexes
    based on 150 max processes and 0 max threads.

(seems OK)

[Mon Oct 27 08:54:14 2003] [warn] (13)Permission denied: Failed to acquire
    global mutex lock at index 24
(.. traceback)
[Mon Oct 27 08:54:14 2003] [error] [client 129.241.56.39] PythonHandler
    mod_python.publisher: ValueError: Failed to acquire global mutex lock


Now, I can't find anything useful on mr. Google searching for this,
except some listing of a very similar bug that occured with mod_ssl.

The problem then was that the mutex was created by root - and
permissions never fixed so the httpd process could access it. Could it
be anything similar?

Any suggestions? (I'm really eager to test out 3.1.1b.. =) )


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Mon Oct 27 09:41:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] 
	Re: mod_python 3.1.1b and sessions: Failed to acquire global mutex
	lock
In-Reply-To: <20031027083048.GA30427@itea.ntnu.no>
References: <20031027083048.GA30427@itea.ntnu.no>
Message-ID: <20031027084148.GB30427@itea.ntnu.no>

On 2003-10-27 09:30:48, Stian S?iland wrote:

> I've just downloaded and installed the 3.1.1b from
> http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
> tested it with these two webservers:

The same problem seems to exist with 3.1.0a - although 3.1.0 of course
needed something like this to be able to start..:

sysctl -w kernel.sem="256 32000 64  256"

Is it only me? =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From gdamjan at mail.net.mk  Mon Oct 27 14:14:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python]  Beginner question re: getting form data and key
	errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <20031027131404.GA20746@legolas.on.net.mk>

> This is a really a Python language question, not a mod_python question 
> per se.
> 
> You have several options, including:
> 
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
> 
> Or:
> 
> try:
>   author = req.form['author']
> except KeyError:
>   author = None

or
    req.form.get('author', None)

this if req.form is a standard Python dictionary



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From nilsgri at idi.ntnu.no  Mon Oct 27 14:56:58 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] instablility in mod_python or apache
Message-ID: <20031027135658.GA20134@bergljot.dyndns.org>

hi!

i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
and have some stability problems.

i have made a simple web-page that uses mod_python.publisher. in
apache2.conf:

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

when i'm reloading the page, it seams random whether it will load
properly or crash with 

"Not Found

The requested URL /~nilsgri/test.py was not found on this server."

i would guess it has something to do with caching, as when i restart
apache2, sometimes the it works every other or so time i reload the
page, and sometimes it works every time, and sometimes never.


i have tried to track down where these errors occur, and have found that
exeptions are thrown at the following locations:

mod_python.publisher: 
    resolve_object()
        the line "obj = getattr(obj, obj_str)" throws AttributeError
        sometimes. 
        
        in this case: 
            module_name=test, 
            config={'PythonDebug': '1'},
            path=['/home/nilsgri/public_html']
        which seems right

mod_python.publisher:
    import_module()
        "if (not file or path and not
                filter(lambda a: os.path.dirname(file).find(a) == 0,
                path)):" hits sometimes

what could be wrong?

is there any way of turning of caching of python modules?


i use the apache2 worker thread module, and i have also tried prefork. i
have not tried perchild or threadpool. should i?


klem fra nils

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <20031027101045.E26862@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy

From gustavo.cordova at q-voz.com  Mon Oct 27 10:32:52 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <3F9D48B4.9090202@q-voz.com>

Also, you can:

    author = req.form.get("author")

and if the "author" key is not present, the correct default value to 
return is None; at least that's the way it works with dictionaries.

-gustavo

Michael S. Fischer wrote:

> This is a really a Python language question, not a mod_python question 
> per se.
>
> You have several options, including:
>
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
>
> Or:
>
> try:
>   author = req.form['author']
> except KeyError:
>   author = None
>
> See section 2.2.7 ("Mapping Types") in the Python Library Reference 
> for details.
>
> --Michael
>
> Mike Klein wrote:
>
>> Why am I getting key errors when merely attempting to get <possible> 
>> form data from a mod_python request...ala:
>>
>> author = req.form['author']
>>
>> I get the following:
>>
>>    raise KeyError, key
>>
>> KeyError: subject
>>
>> I do kind of expect certain form fields to possibly not have 
>> values...why the explicit error? Can't I just check for null or 
>> uninitialized in my code?
>>
>> thanks,
>>
>> mike
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From tpc at csua.berkeley.edu  Mon Oct 27 11:20:10 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] invalid literal for float int or long solved !
Message-ID: <20031027111252.H91970-100000@localhost.name>


fingers crossed, here's hoping the bug doesn't rear its creepy head again,
can't really say wherefore the bug but I found a workaround, I changed the
basic MySQL statement below:

SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
URLs_WITH_MATCHES.url_id;

to:

SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
URLs_WITH_MATCHES.url_id;

and voila !  I am a complete idiot.

From grisha at modpython.org  Mon Oct 27 14:45:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027111252.H91970-100000@localhost.name>
References: <20031027111252.H91970-100000@localhost.name>
Message-ID: <20031027144335.Q39378@onyx.ispol.com>


The first one is "url, title", the second is "title, url" - was that the
problem, or was it the WHERE instead of INNER JOIN (which are same thing
IIRC).

Grisha


On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:

>
> fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> can't really say wherefore the bug but I found a workaround, I changed the
> basic MySQL statement below:
>
> SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> to:
>
> SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> and voila !  I am a complete idiot.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Mon Oct 27 12:26:39 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027121656.P92516-100000@localhost.name>


hi Grisha, I switched url, title before, and got the invalid literal
error.  I am not sure why since the return values are exactly the
same, but it seems like the "FROM URLs, URLs_WITH_MATCHES WHERE" was
causing problems, though I am not sure for which module, mod_python or
MySQLdb or both or maybe neither.  I am still testing and hoping the bug
doesn't all of a sudden appear.

On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From tpc at csua.berkeley.edu  Mon Oct 27 12:53:45 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027124550.E92775-100000@localhost.name>


ok I take that back.  I just switched it again as per your suggestion and
I now see that "url, title" gives me invalid literal errors whereas
"title, url" does not, even for the old SELECT statement.  This perplexes
me, as I know at least once I saw:

ValueError: invalid literal for float(): <insert any mp3 URL here>

However, I now make sure to <shift> RELOAD to make sure memory cache is
cleared, so you may be on to something.


On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jbi130 at yahoo.com  Mon Oct 27 15:12:05 2003
From: jbi130 at yahoo.com (jbi130@yahoo.com)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] Persistent socket connection.
Message-ID: <871xsye66y.fsf@syn.codemonkey.net>

Upon creation of a new "session" I want to open a socket to a remote 
server and be able to access this socket throughout the users session 
until he logs our or the session is timed out. 
 
Is there any way to do this?  I've been looking at twisted but would 
prefer a more traditional approach, maybe using mod_python. 
 
I guess the challenge is how do I keep this socket descriptor alive 
between browser requests. 
 
Any somewhat standard facilities to do this in mod_python? 
 
Thanks. 

From nilsgri at idi.ntnu.no  Mon Oct 27 22:48:46 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] instablility in mod_python or apache
In-Reply-To: <1067289858.3336.2.camel@heppc22>
References: <20031027135658.GA20134@bergljot.dyndns.org>
	<1067289858.3336.2.camel@heppc22>
Message-ID: <20031027214846.GA26966@bergljot.dyndns.org>

On Mon, Oct 27, 2003 at 01:24:19PM -0800, Conrad Steenberg wrote:
> Somebody probably already answered your question, but just in case:
> You should use mod_python 3.x with apache 2.x. 
>
> On Mon, 2003-10-27 at 05:56, Nils Grimsmo wrote:
> > i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
> > and have some stability problems.

sorry. got that wrong. looked at the package for apache1. use mod_python
3.0.3. i have now tried it for both python 2.2.3 and 2.3.2, with the
same old results.

> > i have made a simple web-page that uses mod_python.publisher. in
> > apache2.conf:
> > 
> > AddHandler python-program .py
> > PythonHandler mod_python.publisher
> > PythonDebug On
> > 
> > when i'm reloading the page, it seams random whether it will load
> > properly or crash with 
> > 
> > "Not Found
> > 
> > The requested URL /~nilsgri/test.py was not found on this server."
> > 
> > i would guess it has something to do with caching, as when i restart
> > apache2, sometimes the it works every other or so time i reload the
> > page, and sometimes it works every time, and sometimes never.
> > 
> > 
> > i have tried to track down where these errors occur, and have found that
> > exeptions are thrown at the following locations:
> > 
> > mod_python.publisher: 
> >     resolve_object()
> >         the line "obj = getattr(obj, obj_str)" throws AttributeError
> >         sometimes. 
> >         
> >         in this case: 
> >             module_name=test, 
> >             config={'PythonDebug': '1'},
> >             path=['/home/nilsgri/public_html']
> >         which seems right
> > 
> > mod_python.publisher:
> >     import_module()
> >         "if (not file or path and not
> >                 filter(lambda a: os.path.dirname(file).find(a) == 0,
> >                 path)):" hits sometimes
> > 
> > what could be wrong?
> > 
> > is there any way of turning off caching of python modules?
> > 
> > 
> > i use the apache2 worker thread module, and i have also tried prefork. i
> > have not tried perchild or threadpool. should i?
> > 
> > 
> > klem fra nils
> -- 
> Conrad Steenberg <conrad@hep.caltech.edu>
> 

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at modpython.org  Mon Oct 27 16:58:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] Persistent socket connection.
In-Reply-To: <871xsye66y.fsf@syn.codemonkey.net>
References: <871xsye66y.fsf@syn.codemonkey.net>
Message-ID: <20031027165528.W45098@onyx.ispol.com>


On Mon, 27 Oct 2003 jbi130@yahoo.com wrote:

> Upon creation of a new "session" I want to open a socket to a remote
> server and be able to access this socket throughout the users session
> until he logs our or the session is timed out.

Given the multi-process nature of httpd, doing something like this would
be very difficult.

On a single-process multithreaded apache, though, this should be a piece
of cake. Whether or not you can get a single-pocess configuration is
specific to your OS.

Grisha
From tpc at csua.berkeley.edu  Mon Oct 27 14:14:58 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <20031027135607.Q93216-100000@localhost.name>


hi Grisha and Andy, after consulting with my coworker I believe there is a
bug in how MySQLdb interacts with mod_python that you should know of.  He
suggested I try out the same script that was giving me problems  with
Python CGI, and it works just fine.  The only difference is the values in
the tuple get switched around, so the tuple that is returned is (title,
URL) but no more invalid literal for float, int or long errors.  The
critical piece of code in question involves an implementation in Python
of a MySQL SELECT statement of two fields from one table joined to another
table that works just fine from the command line, in MySQL shell, and in
Python CGI:

	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
URLs.id = URLs_WITH_MATCHES.url_id;"""
	cursor.execute(sql)

gives me:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
    search(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 47, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 15, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 42, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

From stian at soiland.no  Tue Oct 28 00:44:38 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] Re: Persistent socket connection.
In-Reply-To: <20031027165528.W45098@onyx.ispol.com>
References: <871xsye66y.fsf@syn.codemonkey.net>
	<20031027165528.W45098@onyx.ispol.com>
Message-ID: <20031027234438.GD815@itea.ntnu.no>

On 2003-10-27 22:58:34, Gregory (Grisha) Trubetskoy wrote:

> > Upon creation of a new "session" I want to open a socket to a remote
> > server and be able to access this socket throughout the users session
> > until he logs our or the session is timed out.
> Given the multi-process nature of httpd, doing something like this would
> be very difficult.

I actually discussed this matter with my colleague tonight, if you can't
go multithreading, one solution is to have a middleware server running
on it's one.

The middleserver could use the asyncore module from Python to manage
multiple connections from a singlethreaded process. While containing
sockets to "the world" mod_python connects to the program by a local
UNIX socket or a longstanding TCP connection (to say, localhost)

The connection between mod_python processes, say one pr. process (ie. in
a module somewhere) - could last between different users and just say
some "Switch user"-command to the middleware.

A simple approach would be to associate those user socket sessions (like
a telnet session?) with the user by using his session ID. The mod_python
framework would only care about the session ID and formatting/passing
commands through in the right format.

The middleware could be smart or dumb - my suggestion is to make a
simple xml-rpc API on the middleware proxy, not just bypass the
socket communication. (why? To get short intervals to let other requests
to the single threaded proxy come through)


Problems
--------

  * Middleware complexity increases risk of anything failing
    - severel connections could get lost 
    - the middleware could get trapped in a large respons/request
  
  * Scalabillity - the single-threaded middleware proxy could become the
    one thing slowing everything down in some situations - and 
    unless you've already thought of it, it could become difficult to
    scale up.

      simple workaround: 
        - several middleware instances - on the same or other machines
        - users are distributed to the most idle proxy
        

Suggestions
-----------

  * Go for threading and mod_python - it would make tasks
    much simpler. Just remember to have some locks (and timeouts) so two
    requests don't use the socket at once! (the double-reload syndrome)

  * If your environment requires a forking apache, why not use another
    apache installment on a local port? the "outer" apache could proxy
    requests down - just like wrapping away zope.


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Mon Oct 27 19:04:11 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <C0FC22C08B82074A88B500617641577787A7A3@johnson.mediapulse.net>

> 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> URLs.id = URLs_WITH_MATCHES.url_id;"""
> 	cursor.execute(sql)

I find it hard to believe that this is somehow a mod_python problem.
Are you running the latest version of MySQLdb?  I have used mod_python +
MySQLdb on well over 10 sites now for clients (more for my own sites)
and never ran into trouble; an error this basic I think would have shown
itself by now.

>From the traceback you can see that MySQLdb is throwing the execption,
and if you look at the lines in cursors.py it lists you can see that a
try block is pretty much wrapping the work done.  I'd try to go in and
comment out some of those try blocks and also place an assert here and
there to see what's really happening (fyi you can do an assert 0,
varname and get a traceback with the value of varname - quick trick to
help debug something).

Did you ask on the MySQLdb forums?  I looked at sf and didn't see it.  A
search in google showed some others with this issue, one related to the
locale not being US and another with a broken python install.  Remember
that the python you run at command line is not the same one you run
under mod_python, so if the python mod_pyhton is using is setup
differently and/or broken from the python binary that would explain why
it works in cgi (which exec's the python binary).

Mike

From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <7654106.1067300590712.JavaMail.Server@genix>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy


---------------------------------------------------------------------
To unsubscribe, e-mail: announce-unsubscribe@httpd.apache.org
For additional commands, e-mail: announce-help@httpd.apache.org



From rclilly at cox.net  Mon Oct 27 16:33:29 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
In-Reply-To: <20031027101045.E26862@onyx.ispol.com>
Message-ID: <AMEDJPACLBJGECKBDAOKCEMLCCAA.rclilly@cox.net>

Hi Grisha,

I just downloaded the beta and installed it. I got the following message
from the win32_postintall script:

'import site' failed; use -v for traceback
Traceback (most recent call last):
  File "F:\LANG\PYTHON~1.3\Scripts\win32_postinstall.py", line 62, in ?
    import sys, os, shutil
ImportError: No module named os
*** run_installscript: internal error 0xFFFFFFFF ***

As I am just learning Python, I don't yet know what this message means.
There is a new mod_python folder with files in it under F:\Lang\Python
2.3\Lib\site-packages\. So I don't know if that means it installed correctly
or not. I haven't tested it under Apache to see if it works yet. That's my
next step.

Thanks,

Robert Lilly

From flxkid at techemail.com  Tue Oct 28 10:36:41 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031028183641.D19AC393C@sitemail.everyone.net>

I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").

Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).

Other scripts not using scripting work fine.

Any ideas?

OLIVER


From flxkid at techemail.com  Tue Oct 28 17:18:51 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031029011853.344247265@sitemail.everyone.net>

Mike,

It worked great!  Thanx.  Now, why doesn't it work when I compile my own 2.3.2?  Is  the make install not overwriting somewhere where there is a 2.3 no threaded libpython?  How would I find out?  I'm just a curious kinda guy ;)

OLIVER


--- Mike Klein <mikeklein@sbcglobal.net> wrote:
You will get this same error trying to use SOAPpy too.

It means your Python that mod_python was built against doesn't support 
threads. You might have a thread.py module under your python libs dir 
but that doesn't mean your python supports threads.

Go the the mod_python page, get the appropriate version per your apache 
version, and then get EXACTLY the version of Python recommended. Build 
this python in your source tree (with threads!) and mod_python against 
this. Everything will work fine.


mike


Oliver Nelson wrote:

>I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").
>
>Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).
>
>Other scripts not using scripting work fine.
>
>Any ideas?
>
>OLIVER
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From vmanera at manord.com  Wed Oct 29 17:44:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] Session 
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F7@exchange2000.manord.com>

I played with the module Session on mod_python 3.1.2b on win2000 and  all
seems work fine.<?xml:namespace prefix = o ns =
"urn:schemas-microsoft-com:office:office" />

 

The only problem is that under win2000 Session is redirect to MemorySession,
so if I restart apache I loose all the session.

So I used  DbmSession directly and all work fine too.

 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

 

 

With my self made session that I currently use, I may see the sid timeouted
and the sid currently alive.  With some change from dbm_cleanup or
mem_cleanup is possible to achieve this information, but will be useful  a
new method in Session to do it.

Villiam 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031029/e01fa162/attachment-0001.htm
From olivier at phgroup.com  Thu Oct 30 10:35:56 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 21:53:58 2004
Subject: [mod_python] session mechanism in 3.1.0a
Message-ID: <3FA0E98C.1040400@phgroup.com>

Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













From vmanera at manord.com  Thu Oct 30 12:26:31 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:58 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>

try this:
	sess = Session.Session(req)
	sess.save()
	.....
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 11.36
A: mod_python@modpython.org
Oggetto: [mod_python] session mechanism in 3.1.0a


Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From olivier at phgroup.com  Thu Oct 30 11:58:49 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 21:53:59 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
Message-ID: <3FA0FCF9.6020804@phgroup.com>

Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 14:35:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:59 2004
Subject: R: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F8@exchange2000.manord.com>

I tested your code:
def main1(req):
     sess = Session.Session(req)
     sess.save()
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())

the first time:
I'm a new session, my id is : 8e7c9abff96d9256ca9159b40cc44249
if I reload the page:
I'm NOT a new session, my id is :8e7c9abff96d9256ca9159b40cc44249

the  mod_python/3.1.0a has a bug: it not reload the module change yuo have
to put
PythonAutoReload on on apache config
o restart apache
Villiam
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 12.59
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: R: [mod_python] session mechanism in 3.1.0a


Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 15:46:44 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 21:53:59 2004
Subject: [mod_python] session on win2000
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>

Sorry , but anyone ha replyed to me and I'm ready to start the porting
Session in my application. 

The question is: 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

Villiam
From grisha at modpython.org  Thu Oct 30 11:28:05 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:59 2004
Subject: [mod_python] Re: session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030112225.N97494@onyx.ispol.com>


There is no trap. It will probably be a little slower, also, depending on
what DBM Python uses on Windows, there may be a size limit on data stored
in session.

On Thu, 30 Oct 2003, Manera, Villiam wrote:

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application.
>
> The question is:
>
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?
>
> Villiam
>
From gdamjan at mail.net.mk  Thu Oct 30 19:55:08 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:53:59 2004
Subject: [mod_python] session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030185508.GA10855@legolas.on.net.mk>

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application. 
> 
> The question is: 
> 
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?

I guess MemorySession is used in Windows by default because it should be faster
than DbmSession, and in Windows Apache is multithreaded so MemorySession
_can_ be used.

Though I guess, in Linux a DbmSession in /dev/shm would be equally fast.


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From tpc at csua.berkeley.edu  Fri Oct 31 09:11:57 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 21:53:59 2004
Subject: [mod_python] Re: invalid literal for float solved addendum
In-Reply-To: <1067611886.14197.6.camel@chef.neosouth.net>
Message-ID: <20031031081725.O29199-100000@localhost.name>


hi Andy, I also do not see how this error could be raised.  I tested the
statement from IDLE shell as well as the other frameworks I mentioned
below.  I also reviewed the table creation statements to see if there was
something re MySQL data types I was missing:

<code>
        sql = """CREATE TABLE URLs (
              id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
              url VARCHAR(255) UNIQUE KEY NOT NULL,
              title VARCHAR(255)
              ) TYPE = InnoDB;"""

                sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
                      url_id INT NOT NULL,
                      ) TYPE = InnoDB;"""
</code>

As you can see I am selecting two fields, url and title, from URLs where
URLs.id = URLs_WITH_MATCHES.url_id, both are type INT.

On Fri, 31 Oct 2003, Andy Dustman wrote:

> Sorry to have to ask this, but are you sure that's the SQL that
> generates the error? I don't see any way for that error to be raised.
>
> On Mon, 2003-10-27 at 17:14, tpc@csua.berkeley.edu wrote:
> > hi Grisha and Andy, after consulting with my coworker I believe there is a
> > bug in how MySQLdb interacts with mod_python that you should know of.  He
> > suggested I try out the same script that was giving me problems  with
> > Python CGI, and it works just fine.  The only difference is the values in
> > the tuple get switched around, so the tuple that is returned is (title,
> > URL) but no more invalid literal for float, int or long errors.  The
> > critical piece of code in question involves an implementation in Python
> > of a MySQL SELECT statement of two fields from one table joined to another
> > table that works just fine from the command line, in MySQL shell, and in
> > Python CGI:
> >
> > 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> > URLs.id = URLs_WITH_MATCHES.url_id;"""
> > 	cursor.execute(sql)
> >
> > gives me:
> >
> > <paste>
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 149, in handler
> >     module = apache.import_module(module_name, req.get_config(), [path])
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
> > in import_module
> >     module = imp.load_module(mname, f, p, d)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
> >     search(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 47, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 15, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 42, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> > </paste>
> --
> Andy Dustman         PGP: 0x930B8AB6
>     @       .net     http://dustman.net/andy
> Freedom isn't free. It's sold to the highest bidder.
>

From rpeterso at mtholyoke.edu  Fri Oct 31 14:28:04 2003
From: rpeterso at mtholyoke.edu (Ron Peterson)
Date: Fri Jan  9 21:53:59 2004
Subject: [mod_python] is mod_python threadsafe?
Message-ID: <20031031192804.GA724@mtholyoke.edu>

Is the latest mod_python threadsafe?  I.E. - is it o.k. to run under
apache compiled using --with-mpm=worker?

-- 
Ron Peterson                          -o)
Network & Systems Manager             /\\
Mount Holyoke College                _\_v
http://www.mtholyoke.edu/~rpeterso   ---- 
From jpeterson at ainet.com  Fri Oct 31 12:43:39 2003
From: jpeterson at ainet.com (Jim Peterson)
Date: Fri Jan  9 21:53:59 2004
Subject: [mod_python] basic cgi not working with mp 3.0.3
Message-ID: <3FA2C97B.80004@ainet.com>

Hi,

total newb to python, apache, mod_python, spyce.

running Apache/2.0.47 (Win32) mod_python/3.0.3 Python/2.2.2 Spyce 1.3.11
under Win2K, using ActiveState Python.

i'm trying to use the 'production ready', stable stuff.

Here's the details.  TIA

---------------------------------------------------------------------

Trying to port my CGI app to mod_python. It was blowing up until I 
traced the failure line to mod_python.apache.  I diffed the file against 
a beta version, found a patch there, and applied the patch to my 
apache.py.  The patch stopped the bomb but I'm not getting any form fields.

     #################################
     # original code
     #for k in sav_env:
     #    osenv[k] = env[k]

     # after the patch
     for k in sav_env:
         osenv[k] = sav_env[k]

I don't have any idea if that is relevant.

My test code works in a true CGI environment but not under the mp cgi 
handler.  I'm using Apache aliases to configure both true CGI and mp cgi
against the same directory.

# --------------------------------------------------------
# this configures a conventional CGI setup
ScriptAlias /xcgi-bin/ /Jim/Home/Web/CGI/
<Location /xcgi-bin/ >
     AllowOverride None
     Options +Indexes +ExecCGI
     Order allow,deny
     Allow from all
</Location>
# --------------------------------------------------------
# this configures a mod_python CGI handler, I guess
Alias /cgi-bin/ /Jim/Home/Web/CGI/
<Location /cgi-bin/ >
   SetHandler python-program
   PythonHandler mod_python.cgihandler
   PythonDebug On
</Location>

I invoke my test code with either URL.

I test mod_python handling with url of this form:
/cgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

I test true cgi handling with url of this form:
/xcgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

Throughout my app I pass values thru the URL/querystring.

Under true CGI, my script gets values in the form fields.  Under mp cgi, 
it gets None.

Here is the CGI script:

# ------------------- cut here --------------------
#!python

# cgitest.py
#
# test cgi port to mod_python cgi handler
#

import cgi
form = cgi.FieldStorage()

# print content type here to enable html rendering of debug form
print "Content-Type: text/html\n\n"

# prints dict of env vars, for debugging
#cgi.print_environ()

# prints dict of form args, for debugging
cgi.print_form(form)

# extract the data from the query string
fielda = form.getvalue('fielda')
fieldb = form.getvalue('fieldb')

# content-type printed above

html = \
'''
<html>
<head>
<title> cgitest.py </title>
</head>
<body>
<hr />
<table>
<tr><td> fielda </td><td> %s </td></tr>
<tr><td> fieldb </td><td> %s </td></tr>
</table>
<hr />
</body>
</html>
'''

print html % (fielda, fieldb)


# ---------------------------------------------------------------
# cgitest.py - end of file
# ---------------------------------------------------------------
#



From perry.tew at cibavision.novartis.com  Wed Oct  1 16:03:20 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python] writing to a file from mod_python
Message-ID: <OF32955EC0.F1936B00-ON85256DB2.006DFC43-85256DB2.006E2B3B@EU.novartis.net>

For security reasons, it's common to run the apache instance under a 
restricted user.  Many times this is 'noboby'. 
I only assumed 'nobody' based on past problems by other people.    At any 
rate, it seems you've solved your problem.

-Perry







hi Perry,

Yes !  Thank you.  I assumed if the relative paths were ok in a command
line execution they must be ok in mod python.  By the way, how do you
figure the apache instance is running under 'nobody' ?  In the httpd.conf
there is clearly a section where the user and group are defined by
default as 'apache'.

On Tue, 30 Sep 2003 perry.tew@cibavision.novartis.com wrote:

> Hello.
> Is your apache instance running under the 'nobody' user, or something
> similar?    If so, chmoding the somefile.txt to 'apache' will not help.
> I would advise caution in writing out files to relative paths.  Given 
that
> mod_python is an extension of Apache, would not a relative file
> such as 'somefile.txt' be written to the ServerRoot or bin directory?
> (I've never tried it).
> Here's something to try:  change the file from 'somefile.txt' to
> '/tmp/somefile.txt'. Almost every user id can write to the /tmp 
directory.
>
>
> Hope this helps,
> Perry Tew
>
>
>
>
>
> <tpc@csua.berkeley.edu>
> Sent by: mod_python-bounces@modpython.org
> 09/30/2003 04:37 PM
>
>
>         To:     <mod_python@modpython.org>
>         cc:
>         Subject:        [mod_python] writing to a file from mod_python
>
>
>
> hello all I have the following script that ran fine from the command 
line:
>
> <code>
> #!/usr/bin/env python
>
> #string1 = "hello world!"
>
> def writeFile(string1):
>         open('somefile.txt', 'w').write(string1)
>
> ## writeFile(string1)
> </code>
>
> but as soon as I ported it to mod python I got the following:
>
> <paste>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
335,
> in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
>
>   File "/var/www/html/python/testing.py", line 7, in writeFile
>
> IOError: [Errno 13] Permission denied: 'somefile.txt'
> </paste>
>
> I searched the web for the error message, chmod'ed 777 somefile.txt, and
> even chown'ed and chgrp'ed to user and group apache, all to no avail. Is
> there a way to write to a file from mod python ?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>




From perry.tew at cibavision.novartis.com  Wed Oct  1 16:39:32 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python] 
 I can access mod_ssl cert env vars using PerlAuthenHandler, but howto do
 it with a PythonAuthenHandler?
Message-ID: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>

Hello,
   I'm trying to port a mod_perl handler to mod_python. 
The mod_perl handler was based off an Authentication Handler discussed 
in Chapter 6 of the "Writing Apache Modules in Perl and C" book by 
MacEachern 
(page 326 for those who have the book).   At any rate, concerning how to 
access 
environment variables set by mod_ssl, the book states correctly the 
following:

"""
The handler then issues a subrequest and retrieves the value of 
SSL_CLIENT_DN from 
the subrequest's environment table.  The subrequest is necessary because 
the parsed 
certificate fields aren't placed into the table until the fixup stage, 
which ordinarily occurs 
after the authorization phase.
"""


So, my perl code looks like this:
##########################################
my $subr = $r->lookup_uri($r->uri);
my $env = $subr->subprocess_env;
my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
my $dn = $env->{'SSL_CLIENT_S_DN'};
##########################################




I'm trying to do the same thing in python with this:
############################################
        req.internal_redirect(req.unparsed_uri)
        req.add_common_vars()
        for k, v in req.subprocess_env.items():
                msg = k + "=" + v
                apache.log_error( msg , apache.APLOG_NOTICE )

############################################

However, the SSL vars aren't in the env table when my handler dumps the 
items to the log. 
The handler is being called and it dumps a lot of
env variables to the log, but no SSL vars.  The PythonAuthenHandler that 
contains the code above 
protects the printenv script, which I call to test the handlers.  The 
printenv script is displaying all
of the SSL env vars correctly, so I know I have the mod_ssl directives 
correct.

Does anyone see an error in what I'm doing wrong (or need to do)?  This is 
my first attempt as writing an AuthenHandler
and I would greatly appreciate any insight.

Thanks,
Perry Tew
From perry.tew at cibavision.novartis.com  Wed Oct  1 17:47:02 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python] 
	how to set the REMOTE_USER variable from a PythonAuthenHandler?
Message-ID: <OFDDDC9352.A22255E8-ON85256DB2.00779BAF-85256DB2.007797B1@EU.novartis.net>

Hello.

In a PerlAuthenHandler, I can do the following to set the REMOTE_USER 
variable
(which is necessary since I'm using SSL Client Certs for authentication 
and not Basic Auth, and no, I'm not using FakeBasicAuth)

Perl:
##########################################
package Apache::AuthClientCert;
# file: Apache/AuthClientCert;

use strict;
use Apache::Constants qw(:common);

sub handler{
        my $r = shift;
        return OK unless $r->is_main;

        my $subr = $r->lookup_uri($r->uri);
        my $env = $subr->subprocess_env;

        my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
        my $username = $cn;

        ### KEY LINE BELOW ###
        $r->connection->user( $username );
        ### KEY LINE ABOVE ###

        return OK;
}
1;
__END__
#############################################


If you notice in the perl script, I found that the REMOTE_USER variable is 

not populated, even
if I return OK, unless I explicitly set it using $r->connection->user( 
$username ). 

I go about it this
way because we all have digital certs in my company and it's an easy way 
to handle security.
However, even if I use SSL for the front door, my backend processes ( some 

java ) want to know
who is coming through the door. The only way to pass that information to a 

j2ee server like weblogic 
is via the REMOTE_USER variable.

So, my question is, how do I set this value using mod_python?  The docs 
state that req.user is read only.
I see the example PythonAuthenHandler (spam and eggs) uses 
req.connection.user, but I can't find any 
docs on that (anyone have a url)?

Does anyone know how to set the user so that the REMOTE_USER var is 
correctly populated?

Thanks for your time,
Perry

From alexiev at activesolutions.bg  Thu Oct  2 13:57:15 2003
From: alexiev at activesolutions.bg (Nikolay Alexiev)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python] PublisherHandler
Message-ID: <200310021357.15162.alexiev@activesolutions.bg>

I'm using PublisherHandler for my project. This is my  .htaccess file

    AddHandler python-program .py
    SetHandler python-program
    PythonHandler mod_python.publisher
    PythonDebug On

But now I can't load pictures from this folder and from its subfolder. Can I 
do something or the only way is to move images in a folder that is a level 
above?
From schnieper at semafor.ch  Thu Oct  2 16:07:55 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python] Problems with configure mod_python
Message-ID: <3F7C313B.8000300@semafor.ch>

Hi all

I tried to install the mod_python (www.modpython.org) for Apache Webserver.
By configure with
./configure --with-apxs /usr/sbin/apxs2-prefork
i get this error:

configure: error: yes not found or not executable

SuSE Linux 8.2
Apache 2.0
mod_python 3.0.1

Thanks in advance
Lukas

From grisha at modpython.org  Thu Oct  2 12:13:32 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031002121240.L57929@onyx.ispol.com>


Hmmm... I find it hard to believe that SuSE doesn't have the yes(1)
command. Are you sure your installation isn't corrupt somehow?

Grisha

On Thu, 2 Oct 2003, Lukas Schnieper wrote:

> Hi all
>
> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
>
> configure: error: yes not found or not executable
>
> SuSE Linux 8.2
> Apache 2.0
> mod_python 3.0.1
>
> Thanks in advance
> Lukas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Thu Oct  2 14:39:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
In-Reply-To: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
References: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
Message-ID: <20031002143438.X57929@onyx.ispol.com>



On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha
From grisha at modpython.org  Thu Oct  2 14:43:20 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:24 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <200310021357.15162.alexiev@activesolutions.bg>
References: <200310021357.15162.alexiev@activesolutions.bg>
Message-ID: <20031002144016.X57929@onyx.ispol.com>



On Thu, 2 Oct 2003, Nikolay Alexiev wrote:

> I'm using PublisherHandler for my project. This is my  .htaccess file
>
>     AddHandler python-program .py
>     SetHandler python-program

You don't need both AddHandler and SetHandler, SetHandler alone will cover
every type of file.

>     PythonHandler mod_python.publisher
>     PythonDebug On
>
> But now I can't load pictures from this folder and from its subfolder. Can I
> do something or the only way is to move images in a folder that is a level
> above?

You can create a subdirectory and add "SetHandler None" which reverses
previous SetHandler's:

http://httpd.apache.org/docs-2.0/mod/core.html#sethandler

HTH,

Grisha
From mikeklein at sbcglobal.net  Thu Oct  2 12:36:56 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002144016.X57929@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <3F7C7E58.20109@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
>  
>
>>I'm using PublisherHandler for my project. This is my  .htaccess file
>>
>>    AddHandler python-program .py
>>    SetHandler python-program
>>    
>>
>
>You don't need both AddHandler and SetHandler, SetHandler alone will cover
>every type of file.
>
>  
>
>>    PythonHandler mod_python.publisher
>>    PythonDebug On
>>
>>But now I can't load pictures from this folder and from its subfolder. Can I
>>do something or the only way is to move images in a folder that is a level
>>above?
>>    
>>
>
>You can create a subdirectory and add "SetHandler None" which reverses
>previous SetHandler's:
>
>http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
>HTH,
>
>Grisha
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>
Shouldn't he just remove the SetHandler line?


mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/bc38a4e3/attachment-0002.htm
From grisha at modpython.org  Thu Oct  2 16:01:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <3F7C7E58.20109@sbcglobal.net>
References: <200310021357.15162.alexiev@activesolutions.bg>
 <20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
Message-ID: <20031002155847.O60460@onyx.ispol.com>



On Thu, 2 Oct 2003, Mike Klein wrote:

> Shouldn't he just remove the SetHandler line?

That would do it too, but I'm guessing he specifically neede SetHandler.

This would allow to use SetHandler-style URL's, such as
http://myhost.com/guestbook/adduser, (as opposed to
http://myhost.com/guestbook.py/adduser), and at the same time be able to
server other files, e.g. http://myhost.com/images/blah.gif

Grisha
From perry.tew at cibavision.novartis.com  Thu Oct  2 16:09:00 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
Message-ID: <OF8FB48689.25434CDF-ON85256DB3.006CC438-85256DB3.006EB017@EU.novartis.net>

Grisha,
   Thanks for the tip!  I'll try that tonight. 

About the infinite recursion issue  ... yeah, I struggled with that a lot. 
 The perl code I had did the following:

 return OK unless $r->is_main;

to prevent this loop.  I had something in my handler like this:

if req.prev:
        return apache.OK

but I took it out and the handler didn't seem to hang.  Quite strange. 
It's obvious I have some more
learning to do.  I'll continue experimenting.


If I may ask you a different question along the lines of authentication. I 
have need to cache roles and acls for urls
in order to prevent hitting a database for every request.   I need a way 
to cache these values and have each of
my child processes access them.

1.  I'm using the "worker" MPM.  Is that acceptable for use with 
mod_python?  I haven't had a problem yet with it.
2. Is there a preferred way of sharing data among the different children? 
dbm? berkley db? IPC?   I don't mind 
file based persistance, but I'm ignorant of the fastest and safest way to 
cache this data.  Any thoughts would be
appreciated.

Something else I thought of was that I guess I could jack up the number of 
threads per child and limit the number of
children to something small.  Would that not keep the number of caches 
down to 3 or 4 ( 1 per child )?

I'm really enjoying mod_python.  Thanks for writing it.
Perry Tew







On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha



From mikeklein at sbcglobal.net  Thu Oct  2 13:08:10 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C85AA.70907@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Mike Klein wrote:
>
>  
>
>>Shouldn't he just remove the SetHandler line?
>>    
>>
>
>That would do it too, but I'm guessing he specifically neede SetHandler.
>
>This would allow to use SetHandler-style URL's, such as
>http://myhost.com/guestbook/adduser, (as opposed to
>http://myhost.com/guestbook.py/adduser), and at the same time be able to
>server other files, e.g. http://myhost.com/images/blah.gif
>
>Grisha
>
>  
>
Caveat: I am a python 101 user...

My first mistake was assuming a php/jsp/shtml model for delivering 
pages. It took me a few tweaks to getting things in python similar to 
this model...where I can littler python files willy-nilly. I didn't see 
enough of his httpsd.conf file to understand what he wanted to do.

I just know his mistake 'smelled' similar to the first mistake I 
made...using SetHandler and then not being able to access anything else 
on my site!

For laughs...this is what I have (at a root/top level) in my httpsd.conf 
for Apache to deliver python pages from anywhere under my docroot:
------------------------
#
# Stuff for mod_python
#
AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On
------------------------

Other than having to specify functions within my py files (this is 
ok...standard), it gives me the 'document' under docroot model that I 
was looking for...

cheers,

mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/e07a9a26/attachment-0002.htm
From scott_list at mischko.com  Thu Oct  2 14:14:13 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] 
	Python Apache authentication module ala Perl's Apache::AuthDBI?
Message-ID: <200310021414.13041.scott_list@mischko.com>

Is there a similar creature for Python that allows me to authenticate Apache 
users against a database (Postgres)?

I'm trying to do all my new projects in Python and get away from Perl.  This 
is a piece I need in my toolbox.

TIA,
Scott
From cs1spw at bath.ac.uk  Thu Oct  2 22:16:29 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C95AD.2020604@bath.ac.uk>

Gregory (Grisha) Trubetskoy wrote:
> That would do it too, but I'm guessing he specifically neede SetHandler.
> 
> This would allow to use SetHandler-style URL's, such as
> http://myhost.com/guestbook/adduser, (as opposed to
> http://myhost.com/guestbook.py/adduser), and at the same time be able to
> server other files, e.g. http://myhost.com/images/blah.gif

As a newcomer to mod_python I'm still trying to work out the best 
practise for developing applications under it. I'm using SetHandler 
style URLs, but does anyone have any good tips on how to lay out an 
overall mod_python application?

Cheers,

Simon

From cl at scriptall.com  Thu Oct  2 18:45:18 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] req.form question
Message-ID: <1065134717.1102.58.camel@px101>

A point of curiosity.  Please don't hurt me.

Some time ago, I was able to refer to a form field value in this manner:

req.form["fieldname"]

Now, I have to refer to the value in this fashion:

req.form["fieldname"][0]

Granted, it's been a while since I've done any new scripting with
mod_python.  I've searched the mailing list and looked at the docs for
both v2 and v3 but can't find any reference to a change in the form
attribute of the request object.

When did the keys for req.form change to a list?

Thanks,
-Chuck

From michael at dynamine.net  Thu Oct  2 17:27:26 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] req.form question
In-Reply-To: <1065134717.1102.58.camel@px101>
References: <1065134717.1102.58.camel@px101>
Message-ID: <3F7CC26E.1000206@dynamine.net>

It didn't; whether the value is an object or a list depends on the form 
submission contents.

 From http://www.python.org/doc/2.2.3/lib/node297.html:

If the submitted form data contains more than one field with the same 
name, the object retrieved by "form[key]" is not a FieldStorage or 
MiniFieldStorage instance but a list of such instances. Similarly, in 
this situation, "form.getvalue(key)" would return a list of strings. If 
you expect this possibility (when your HTML form contains multiple 
fields with the same name), use the isinstance() built-in function to 
determine whether you have a single instance or a list of instances. For 
example, this code concatenates any number of username fields, separated 
by commas:


value = form.getvalue("username", "")
if isinstance(value, list):
     # Multiple username fields specified
     usernames = ",".join(value)
else:
     # Single or no username field specified
     usernames = value

--Michael


Chuck Lima wrote:

> A point of curiosity.  Please don't hurt me.
> 
> Some time ago, I was able to refer to a form field value in this manner:
> 
> req.form["fieldname"]
> 
> Now, I have to refer to the value in this fashion:
> 
> req.form["fieldname"][0]
> 
> Granted, it's been a while since I've done any new scripting with
> mod_python.  I've searched the mailing list and looked at the docs for
> both v2 and v3 but can't find any reference to a change in the form
> attribute of the request object.
> 
> When did the keys for req.form change to a list?
> 
> Thanks,
> -Chuck
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From gdamjan at mail.net.mk  Fri Oct  3 03:07:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031003010704.GB25894@legolas.on.net.mk>

> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
> 
> configure: error: yes not found or not executable


./configure --with-apxs=/usr/sbin/apxs2-prefork
                      ^^^

Hey did this appear on news?
The question (and the answer) are very familiar to me...


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cl at scriptall.com  Thu Oct  2 21:17:41 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] req.form question
In-Reply-To: <3F7CC26E.1000206@dynamine.net>
References: <1065134717.1102.58.camel@px101> <3F7CC26E.1000206@dynamine.net>
Message-ID: <1065143861.1102.26.camel@px101>

Yep, sure enough, I had multiple input fields named the same thing.  

I'm looping over a bunch of records and creating a form for each one on
a single page and forgot to put a </form> at the end on each iteration!!

Thank you.

-Chuck


On Thu, 2003-10-02 at 20:27, Michael S. Fischer wrote:
> It didn't; whether the value is an object or a list depends on the form 
> submission contents.
> 
>  From http://www.python.org/doc/2.2.3/lib/node297.html:
> 
> If the submitted form data contains more than one field with the same 
> name, the object retrieved by "form[key]" is not a FieldStorage or 
> MiniFieldStorage instance but a list of such instances. Similarly, in 
> this situation, "form.getvalue(key)" would return a list of strings. If 
> you expect this possibility (when your HTML form contains multiple 
> fields with the same name), use the isinstance() built-in function to 
> determine whether you have a single instance or a list of instances. For 
> example, this code concatenates any number of username fields, separated 
> by commas:
> 
> 
> value = form.getvalue("username", "")
> if isinstance(value, list):
>      # Multiple username fields specified
>      usernames = ",".join(value)
> else:
>      # Single or no username field specified
>      usernames = value
> 
> --Michael
> 
> 
> Chuck Lima wrote:
> 
> > A point of curiosity.  Please don't hurt me.
> > 
> > Some time ago, I was able to refer to a form field value in this manner:
> > 
> > req.form["fieldname"]
> > 
> > Now, I have to refer to the value in this fashion:
> > 
> > req.form["fieldname"][0]
> > 
> > Granted, it's been a while since I've done any new scripting with
> > mod_python.  I've searched the mailing list and looked at the docs for
> > both v2 and v3 but can't find any reference to a change in the form
> > attribute of the request object.
> > 
> > When did the keys for req.form change to a list?
> > 
> > Thanks,
> > -Chuck
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> 

From gnb at itga.com.au  Fri Oct  3 11:26:12 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] req.form question 
In-Reply-To: Your message of Thu, 02 Oct 2003 18:45:18 -0400.
Message-ID: <200310030126.LAA21892@lightning.itga.com.au>

IN addition to the list vs singleton issue Michael mentioned, it seems that in 
mod_python 2.7 the list is a list of strings, but in mod_python 3, the list is 
a list of FieldStorage objects.  

Greg.

From robert at leftwich.info  Fri Oct  3 11:04:46 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] mod_python mysteriously stopped working under Windows
Message-ID: <MPG.19e775ef801061dd989684@news.gmane.org>

I have this bizarre problem that is driving me insane. I had a working 
mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python 
3.1.0a - all vanilla). I needed to combine 2 projects so I set out to 
create a new project directory structure and ran out of disk space on 
the c-drive while doing something unrelated to mod_python/apache/etc. I 
cleaned up a few directories (again unrelated) and ever since then I 
cannot get even the simplest mod_python setup to work. I've tried 
uninstalling/reinstalling everything, even reverting to python 
2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including 
explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
\site-packages;C:\Python23\lib (among other combinations) I get an error 
in the log file saying "[error] make_obcallback: could not import 
mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does 
not work at all, no messages anywhere - it is as if it is totally 
ignored. Note also that straight python cgi (e.g. pyblosxom) is working 
fine. At the moment I'm using the httpd.conf settings and mptest.py 
straight from the Testing section of the manual.

Can anyone shed light on this problem ?

Robert


From tpc at csua.berkeley.edu  Thu Oct  2 19:41:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] mod_python mysteriously stopped working under
 Windows
In-Reply-To: <MPG.19e775ef801061dd989684@news.gmane.org>
Message-ID: <20031002193058.S79163-100000@localhost.name>


oh wow this problem again.  I am going to repost an email I sent to one
Kevin Douglas who kept hitting this same brick wall:

<paste>
Date: Mon, 9 Jun 2003 14:37:28 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: kevin douglas <fitnah55@hotmail.com>
Cc: mod_python@modpython.org
Subject: RE: [mod_python] need working fix for 'import site' aka
    'ImportError'aka'make_obcallback' error


> -----
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> [Sun Jun 08 00:06:50 2003] [error] make_obcallback: could not import
> mod_python.apache.
> -----
>


I had that exact same problem, although I did not spend as much time
trying to fix it as you apparently have.  I ended up just reinstalling
mod_python.  It works fine now, though I don't understand why it broke in
the first place.
</paste>

if you search the archives you can find out how he resolved the problem,
which he ultimately did, as he recounted to us:

<paste>
Date: Mon, 9 Jun 2003 23:38:36 -0400
From: kevin douglas <fitnah55@hotmail.com>
To: mod_python@modpython.org
Subject: [mod_python]  working fix [FAQ: 'import site' failed; use -v for
traceback]


as stated in the make_obcallback FAQ entry, this is a sys.path
problem...

the main problem (i believe) is that the path that is available at
runtime is not always the same as it was with the previous run of
apache

with a linux distro that requires python as part of the base install
(even
with a minimal install) - the python in /usr is going to supercede
the python in /usr/local even if the path properly includes /usr/lib
and site-packages/mod_python is pointed to properly

what you should do is axe all the python rpm's that you can
(python-base is required for libuser which is required for passwd)
and then take the file list from python-base and manually delete it
(/usr/lib/python2.2 and /usr/bin/python)

this will free up the proper /usr/local/lib/python2.2 to be first in
line in the path

what's confusing is that you link to /usr/local/bin/python2.2 explicitly
to compile mod_python, but it still ends up with /usr/lib/python2.2
as the primary lib source... and even if you get the paths added as the
other FAQ entry states - you're still going to be running the old
site.py from /usr/lib...

and to make matters even worse sometimes it randomly decides to work
even before you axe the default distro install..

:o



kd
</paste>

As you can see something to do with paths and multiple Python versions
installed is the reason you are having trouble.

On Fri, 3 Oct 2003, Robert Leftwich wrote:

> I have this bizarre problem that is driving me insane. I had a working
> mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python
> 3.1.0a - all vanilla). I needed to combine 2 projects so I set out to
> create a new project directory structure and ran out of disk space on
> the c-drive while doing something unrelated to mod_python/apache/etc. I
> cleaned up a few directories (again unrelated) and ever since then I
> cannot get even the simplest mod_python setup to work. I've tried
> uninstalling/reinstalling everything, even reverting to python
> 2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including
> explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
> \site-packages;C:\Python23\lib (among other combinations) I get an error
> in the log file saying "[error] make_obcallback: could not import
> mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does
> not work at all, no messages anywhere - it is as if it is totally
> ignored. Note also that straight python cgi (e.g. pyblosxom) is working
> fine. At the moment I'm using the httpd.conf settings and mptest.py
> straight from the Testing section of the manual.
>
> Can anyone shed light on this problem ?
>
> Robert
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



From grisha at apache.org  Thu Oct  2 22:48:59 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] O'Reilly Onlamp.com
In-Reply-To: <3F7C3169.8040608@semafor.ch>
References: <3F7C3169.8040608@semafor.ch>
Message-ID: <20031002224613.S61437@onyx.ispol.com>


http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html

:-)

Grisha
From robert at leftwich.info  Fri Oct  3 13:30:55 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] 
	Re: mod_python mysteriously stopped working under   Windows
References: <MPG.19e775ef801061dd989684@news.gmane.org>
	<20031002193058.S79163-100000@localhost.name>
Message-ID: <MPG.19e7987abd327c0c989685@news.gmane.org>

In article <20031002193058.S79163-100000@localhost.name>, 
tpc@csua.berkeley.edu says...
> 
> oh wow this problem again.  I am going to repost an email I sent to one
> Kevin Douglas who kept hitting this same brick wall:
>  snip....

> As you can see something to do with paths and multiple Python versions
> installed is the reason you are having trouble.

That's what I thought, so I had completely uninstalled/deleted every 
python version/lib I could find and then re-installed only v2.3 - but no 
joy (and I also tried explicitly setting PYTHONHOME before running the 
Apache exe).

Robert


From neel at mediapulse.com  Fri Oct  3 09:40:58 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] RE: O'Reilly Onlamp.com
Message-ID: <C0FC22C08B82074A88B50061764157776B9749@johnson.mediapulse.net>

Woot!  And the author seems so in trouch with mod_python too!

Mike

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@apache.org] 
> Sent: Thursday, October 02, 2003 10:49 PM
> To: python-dev@httpd.apache.org; mod_python@modpython.org
> Subject: O'Reilly Onlamp.com
> 
> 
> 
> http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html
> 
> :-)
> 
> Grisha
> 

From alexiev at activesolutions.bg  Fri Oct  3 16:57:22 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] PublisherHandler
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <001b01c389b6$44c76fc0$0a01010a@dev1>

It's work fine under linux, but still have the same problem under windows.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "Nikolay Alexiev" <alexiev@activesolutions.bg>
Cc: <mod_python@modpython.org>
Sent: Thursday, October 02, 2003 9:43 PM
Subject: Re: [mod_python] PublisherHandler


>
>
> On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
> > I'm using PublisherHandler for my project. This is my  .htaccess file
> >
> >     AddHandler python-program .py
> >     SetHandler python-program
>
> You don't need both AddHandler and SetHandler, SetHandler alone will cover
> every type of file.
>
> >     PythonHandler mod_python.publisher
> >     PythonDebug On
> >
> > But now I can't load pictures from this folder and from its subfolder.
Can I
> > do something or the only way is to move images in a folder that is a
level
> > above?
>
> You can create a subdirectory and add "SetHandler None" which reverses
> previous SetHandler's:
>
> http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
> HTH,
>
> Grisha

From mark at s-wit.net  Fri Oct  3 14:31:11 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] Hello newbie problems 
Message-ID: <004b01c389dc$85014810$6a1fa8c0@ocfl061>

Hello,
I installed python 2.3.1 (or whatever is the latest from the site)
I d/l the mod_python 3.03
I have apache 2.0.47 running.
I did as per each README for each isntall.
Apache is running. python seemed to install ok. There were no errors.
I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
That seemed okay.
make gives me this error: google search brought up nothing on it. (last 2
lines).
I did the ./httpd -DONE_PROCESS also.

python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /temp/mod_python-3.0.3/src.
*** Error code 1
Mark DeWar

From grisha at modpython.org  Fri Oct  3 15:16:26 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] Hello newbie problems 
In-Reply-To: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
Message-ID: <20031003151613.S71021@onyx.ispol.com>


Check this out:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> Hello,
> I installed python 2.3.1 (or whatever is the latest from the site)
> I d/l the mod_python 3.03
> I have apache 2.0.47 running.
> I did as per each README for each isntall.
> Apache is running. python seemed to install ok. There were no errors.
> I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> That seemed okay.
> make gives me this error: google search brought up nothing on it. (last 2
> lines).
> I did the ./httpd -DONE_PROCESS also.
>
> python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
> requestobject.c:1055: (Each undeclared identifier is reported only once
> requestobject.c:1055: for each function it appears in.)
> requestobject.c:1056: syntax error before `l'
> requestobject.c:1057: `l' undeclared (first use in this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> *** Error code 1
>
> Stop in /temp/mod_python-3.0.3/src.
> *** Error code 1
> Mark DeWar
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From perry.tew at cibavision.novartis.com  Fri Oct  3 15:18:08 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] 
 I hacked out Application.py using Session.py as a template. Is sucha thing
 needed by anyone?
Message-ID: <OF1B330742.C489E342-ON85256DB4.0068F426-85256DB4.006A07FD@EU.novartis.net>

Hello,
   I had need for global persistence in my mod_python application under 
Solaris.  I read Grisha's article last night talking about the new Session 
code.  I thought is was really useful.  So I looked it over and used it as 
a template for creating application level data sharing similar to Visual 
Basic's Application object or JSP's application object.  I basically 
stripped out the cookie code, time stamping, and used a constant hash id 
for retrieving the data.

I'm still raw to python.  I was wondering if such functionality is needed 
by the mod_python community or if such a thing already exists.  I was also 
hoping that if somebody did have a use for it then they could code review 
it for me and hopefully provide criticism or optimizations on the code. If 
neither, then I'll just keep it for my own use.

The code is listed below.  I'm not sure if this mailing list accepts 
attachments, so I'm providing it both ways.

Thanks,
Perry Tew




#######################################################################
from mod_python import apache
import _apache

import os
import time
import anydbm, whichdb
import cPickle
import tempfile

APP_SID = 'app.sid'

tempdir = tempfile.gettempdir()


class BaseApplication(dict):

    def __init__(self, req, lock=1):

        self._req = req
        self._lock = lock
        self._new = 1
        self._created = 0
        self._locked = 0

        dict.__init__(self)

        self.init_lock()

        # attempt to load ourselves
        #self.lock()
        if self.load():
            self._new = 0

        if self._new:
            self._created = time.time()


    def load(self):
        dict = self.do_load()
        if dict == None:
            return 0

        self._created  = dict["_created"]
        self.update(dict["_data"])
        return 1

    def save(self):
        dict = {"_data"    : self.copy(), 
        "_created" : self._created}
        self.do_save(dict)

    def delete(self):
        self.do_delete()
        self.clear()

    def init_lock(self):
        pass

    def lock(self):
        if self._lock:
            _apache._global_lock(self._req.server, None, 0)
            self._locked = 1

    def unlock(self):
        if self._lock and self._locked:
            _apache._global_unlock(self._req.server, None, 0)
            self._locked = 0

    def is_new(self):
        return not not self._new

    def created(self):
        return self._created

    def __del__(self):
        self.unlock()



class DbmApplication(BaseApplication):

    def __init__(self, req, dbm=None, dbmtype=anydbm):

        if not dbm:
            opts = req.get_options()
            if opts.has_key("ApplicationDbm"):
                dbm = opts["ApplicationDbm"]
            else:
                dbm = os.path.join(tempdir, req.server.server_hostname + 
str(req.server.port))

        self._dbmfile = dbm
        self._dbmtype = dbmtype

        BaseApplication.__init__(self, req)

    def _set_dbm_type(self):
        module = whichdb.whichdb(self._dbmfile)
        if module:
            self._dbmtype = __import__(module)
 
    def _get_dbm(self):
        result = self._dbmtype.open(self._dbmfile, 'c')
        if self._dbmtype is anydbm:
            self._set_dbm_type()
        return result


    def do_load(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            if dbm.has_key(APP_SID):
                return cPickle.loads(dbm[APP_SID])
            else:
                return None
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_save(self, dict):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            dbm[APP_SID] = cPickle.dumps(dict)
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_delete(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            try:
                del dbm[APP_SID]
            except KeyError: pass
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)


class MemoryApplication(BaseApplication):

    sdict = {}

    def __init__(self, req):

        BaseApplication.__init__(self, req)

    def do_load(self):
        if MemoryApplication.sdict.has_key(APP_SID):
            return MemoryApplication.sdict[APP_SID]
        return None

    def do_save(self, dict):
        MemoryApplication.sdict[APP_SID] = dict

    def do_delete(self):
        try:
            del MemoryApplication.sdict[APP_SID]
        except KeyError: pass

def Application(req):

    threaded = _apache.mpm_query(apache.AP_MPMQ_IS_THREADED)
    forked = _apache.mpm_query(apache.AP_MPMQ_IS_FORKED)
    daemons =  _apache.mpm_query(apache.AP_MPMQ_MAX_DAEMONS)

    if (threaded and ((not forked) or (daemons == 1))):
        return MemoryApplication(req)
    else:
        return DbmApplication(req)
#######################################################################
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Application.py
Type: application/octet-stream
Size: 7023 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031003/199b5fec/Application-0002.obj
From mark at s-wit.net  Fri Oct  3 16:34:29 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] Hello newbie problems #2
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
Message-ID: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>

The below link got mod_python to compile and install.
However when I put the info into the httpd.conf I get this error:

Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
Cannot load /usr/local/apache2/modules/mod_python.so into server:
/usr/local/apa
che2/modules/mod_python.so: Undefined symbol "pthread_self"

At the bottom of the link provided I see that I should or thought I should
configure with these options:
spiderman#
./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
e2/bin/apxs

(I tried the --with-python=  being blank but system sat there and with
/usr/local/bin/ just gave an error.)

I could not find more info on this error.
Thanks
mark

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "M.D. DeWar" <mark@s-wit.net>
Cc: <mod_python@modpython.org>
Sent: Friday, October 03, 2003 3:16 PM
Subject: Re: [mod_python] Hello newbie problems


>
> Check this out:
>
> http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
>
> > Hello,
> > I installed python 2.3.1 (or whatever is the latest from the site)
> > I d/l the mod_python 3.03
> > I have apache 2.0.47 running.
> > I did as per each README for each isntall.
> > Apache is running. python seemed to install ok. There were no errors.
> > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > That seemed okay.
> > make gives me this error: google search brought up nothing on it. (last
2
> > lines).
> > I did the ./httpd -DONE_PROCESS also.
> >
> > python2.3  -c -o requestobject.lo requestobject.c && touch
requestobject.slo
> > requestobject.c: In function `getreq_recmbr_off':
> > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
function)
> > requestobject.c:1055: (Each undeclared identifier is reported only once
> > requestobject.c:1055: for each function it appears in.)
> > requestobject.c:1056: syntax error before `l'
> > requestobject.c:1057: `l' undeclared (first use in this function)
> > requestobject.c: At top level:
> > requestobject.c:1270: warning: initialization from incompatible pointer
type
> > apxs:Error: Command failed with rc=65536
> > .
> > *** Error code 1
> >
> > Stop in /temp/mod_python-3.0.3/src.
> > *** Error code 1
> > Mark DeWar
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >

From grisha at modpython.org  Fri Oct  3 16:49:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
Message-ID: <20031003164715.N75641@onyx.ispol.com>


This oftentimes means that either of Apache or Python was compiled without
thread support, and therefore you need to make sure that both are with or
without threads.

Which operating system is this on?

Grisha

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> The below link got mod_python to compile and install.
> However when I put the info into the httpd.conf I get this error:
>
> Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> Cannot load /usr/local/apache2/modules/mod_python.so into server:
> /usr/local/apa
> che2/modules/mod_python.so: Undefined symbol "pthread_self"
>
> At the bottom of the link provided I see that I should or thought I should
> configure with these options:
> spiderman#
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> e2/bin/apxs
>
> (I tried the --with-python=  being blank but system sat there and with
> /usr/local/bin/ just gave an error.)
>
> I could not find more info on this error.
> Thanks
> mark
>
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 3:16 PM
> Subject: Re: [mod_python] Hello newbie problems
>
>
> >
> > Check this out:
> >
> > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > Hello,
> > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > I d/l the mod_python 3.03
> > > I have apache 2.0.47 running.
> > > I did as per each README for each isntall.
> > > Apache is running. python seemed to install ok. There were no errors.
> > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > > That seemed okay.
> > > make gives me this error: google search brought up nothing on it. (last
> 2
> > > lines).
> > > I did the ./httpd -DONE_PROCESS also.
> > >
> > > python2.3  -c -o requestobject.lo requestobject.c && touch
> requestobject.slo
> > > requestobject.c: In function `getreq_recmbr_off':
> > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> function)
> > > requestobject.c:1055: (Each undeclared identifier is reported only once
> > > requestobject.c:1055: for each function it appears in.)
> > > requestobject.c:1056: syntax error before `l'
> > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > requestobject.c: At top level:
> > > requestobject.c:1270: warning: initialization from incompatible pointer
> type
> > > apxs:Error: Command failed with rc=65536
> > > .
> > > *** Error code 1
> > >
> > > Stop in /temp/mod_python-3.0.3/src.
> > > *** Error code 1
> > > Mark DeWar
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Fri Oct  3 19:28:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<20031003164715.N75641@onyx.ispol.com>
	<000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
Message-ID: <20031003192203.W77195@onyx.ispol.com>


On Fri, 3 Oct 2003, M.D. DeWar wrote:

> freebsd 4.8

On FreeBSD Apache defaults to no threads which creates a problem, so
either you have to compile Python without threads, or use a trick to load
threaded libs into Apache.

I think the simplest thing on FreeBSD is to use the ports rather than
trying to do it by hand (you'll need an up-to-date ports collection, see
the FreeBSD handbook on that):

# cd /usr/ports/www/mod_python3
# make install

Then read the warning at the end of the install that will tell you about
the thread libs loading trick.

Grisha


> apache 2.0.47
> php 4.3.2
> Mark
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 4:49 PM
> Subject: Re: [mod_python] Hello newbie problems #2
>
>
> >
> > This oftentimes means that either of Apache or Python was compiled without
> > thread support, and therefore you need to make sure that both are with or
> > without threads.
> >
> > Which operating system is this on?
> >
> > Grisha
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > The below link got mod_python to compile and install.
> > > However when I put the info into the httpd.conf I get this error:
> > >
> > > Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> > > Cannot load /usr/local/apache2/modules/mod_python.so into server:
> > > /usr/local/apa
> > > che2/modules/mod_python.so: Undefined symbol "pthread_self"
> > >
> > > At the bottom of the link provided I see that I should or thought I
> should
> > > configure with these options:
> > > spiderman#
> > >
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> > > e2/bin/apxs
> > >
> > > (I tried the --with-python=  being blank but system sat there and with
> > > /usr/local/bin/ just gave an error.)
> > >
> > > I could not find more info on this error.
> > > Thanks
> > > mark
> > >
> > > ----- Original Message -----
> > > From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> > > To: "M.D. DeWar" <mark@s-wit.net>
> > > Cc: <mod_python@modpython.org>
> > > Sent: Friday, October 03, 2003 3:16 PM
> > > Subject: Re: [mod_python] Hello newbie problems
> > >
> > >
> > > >
> > > > Check this out:
> > > >
> > > > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> > > >
> > > > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> > > >
> > > > > Hello,
> > > > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > > > I d/l the mod_python 3.03
> > > > > I have apache 2.0.47 running.
> > > > > I did as per each README for each isntall.
> > > > > Apache is running. python seemed to install ok. There were no
> errors.
> > > > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for
> mod_python.
> > > > > That seemed okay.
> > > > > make gives me this error: google search brought up nothing on it.
> (last
> > > 2
> > > > > lines).
> > > > > I did the ./httpd -DONE_PROCESS also.
> > > > >
> > > > > python2.3  -c -o requestobject.lo requestobject.c && touch
> > > requestobject.slo
> > > > > requestobject.c: In function `getreq_recmbr_off':
> > > > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> > > function)
> > > > > requestobject.c:1055: (Each undeclared identifier is reported only
> once
> > > > > requestobject.c:1055: for each function it appears in.)
> > > > > requestobject.c:1056: syntax error before `l'
> > > > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > > > requestobject.c: At top level:
> > > > > requestobject.c:1270: warning: initialization from incompatible
> pointer
> > > type
> > > > > apxs:Error: Command failed with rc=65536
> > > > > .
> > > > > *** Error code 1
> > > > >
> > > > > Stop in /temp/mod_python-3.0.3/src.
> > > > > *** Error code 1
> > > > > Mark DeWar
> > > > >
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
From idiot1 at netzero.net  Sat Oct  4 20:17:18 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <20031003164715.N75641@onyx.ispol.com>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
	<20031003164715.N75641@onyx.ispol.com>
Message-ID: <3F7F630E.2050601@netzero.net>

Apache FORKS, spawning new processes- in advance, and has a stable of them on 
hold waiting for incoming requests. When one has handled the number of service 
requests you preset in the conf file, it dies- and is replaced with a new one. 
This uses up a lot of memory with a lot of daemonspawn, and a threading server 
is more memory efficent, although difficult as all hell to write. Python will 
support threading servers if you write one that way. In fact, just to screw with 
your minds, here is one now:
-------------------------------BEWARE WORD WRAP-----------------------------
#!C:\Python22\Pythonw.exe
from SocketServer import ThreadingMixIn
import BaseHTTPServer, CGIHTTPServer, os
#
os.chdir ('.\web')	# INSTALL IN c:\Python22; web pages in ~\web
#
class ThreadingCGIServer(ThreadingMixIn,BaseHTTPServer.HTTPServer):
	pass
import sys
server=ThreadingCGIServer(('',8080),CGIHTTPServer.CGIHTTPRequestHandler)
try:
	while 1:
		sys.stdout.flush()
		server.handle_request()
except KeyboardInterrupt:
	print 'Finished.'
---------------------------END OF SCRIPT, CHAOS FOLLOWS------------------
This is by Steve Holden of the book 'Cgi programming for the Internet'.



Gregory (Grisha) Trubetskoy wrote:

> This oftentimes means that either of Apache or Python was compiled without
> thread support, and therefore you need to make sure that both are with or
> without threads.
> 
> Which operating system is this on?
> 
> Grisha
> 
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
> 
> 
>>The below link got mod_python to compile and install.
>>However when I put the info into the httpd.conf I get this error:
>>
>>Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
>>Cannot load /usr/local/apache2/modules/mod_python.so into server:
>>/usr/local/apa
>>che2/modules/mod_python.so: Undefined symbol "pthread_self"
>>
>>At the bottom of the link provided I see that I should or thought I should
>>configure with these options:
>>spiderman#
>>./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
>>e2/bin/apxs
>>
>>(I tried the --with-python=  being blank but system sat there and with
>>/usr/local/bin/ just gave an error.)
>>
>>I could not find more info on this error.
>>Thanks
>>mark
>>
>>----- Original Message -----
>>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>>To: "M.D. DeWar" <mark@s-wit.net>
>>Cc: <mod_python@modpython.org>
>>Sent: Friday, October 03, 2003 3:16 PM
>>Subject: Re: [mod_python] Hello newbie problems
>>
>>
>>
>>>Check this out:
>>>
>>>http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>>>
>>>On Fri, 3 Oct 2003, M.D. DeWar wrote:
>>>
>>>
>>>>Hello,
>>>>I installed python 2.3.1 (or whatever is the latest from the site)
>>>>I d/l the mod_python 3.03
>>>>I have apache 2.0.47 running.
>>>>I did as per each README for each isntall.
>>>>Apache is running. python seemed to install ok. There were no errors.
>>>>I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
>>>>That seemed okay.
>>>>make gives me this error: google search brought up nothing on it. (last
>>
>>2
>>
>>>>lines).
>>>>I did the ./httpd -DONE_PROCESS also.
>>>>
>>>>python2.3  -c -o requestobject.lo requestobject.c && touch
>>
>>requestobject.slo
>>
>>>>requestobject.c: In function `getreq_recmbr_off':
>>>>requestobject.c:1055: `LONG_LONG' undeclared (first use in this
>>
>>function)
>>
>>>>requestobject.c:1055: (Each undeclared identifier is reported only once
>>>>requestobject.c:1055: for each function it appears in.)
>>>>requestobject.c:1056: syntax error before `l'
>>>>requestobject.c:1057: `l' undeclared (first use in this function)
>>>>requestobject.c: At top level:
>>>>requestobject.c:1270: warning: initialization from incompatible pointer
>>
>>type
>>
>>>>apxs:Error: Command failed with rc=65536
>>>>.
>>>>*** Error code 1
>>>>
>>>>Stop in /temp/mod_python-3.0.3/src.
>>>>*** Error code 1
>>>>Mark DeWar
>>>>
>>>>_______________________________________________
>>>>Mod_python mailing list
>>>>Mod_python@modpython.org
>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Prometheus
  +                              kniht                                +

Fnord.

From scott_list at mischko.com  Mon Oct  6 12:11:27 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] 
	How to get the Apache authentication requirements into Python
	script?
Message-ID: <200310061211.27945.scott_list@mischko.com>

I have a home-brew Apache Authentication module coming together using 
mod_python and I'm wondering how to get the 'require valid-user' and 'require 
group blah' info into my Python handler so I know which groups to look out 
for, etc.  I've been over the mod_python docs quite a bit and I can't find 
info on this.

<Location /members>
    SetHandler python-program
    PythonDebug On
    PythonAuthenHandler www
    AuthType Basic
    AuthName "Members Login"
    require group admin
</Location>

If I have the above in my httpd.conf file, I'd like to have the group 
requirement of 'admin' come through to the Python script and the Location.

If I have 'require valid-user' in a .conf or .htaccess file, I'd like to be 
able to get those in also.  I've got a hunch a .htaccess file is handled 
differently. Is that correct?

Scott
From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:20:32 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] FINFO_* variables
Message-ID: <16257.56480.68230.797089@gargle.gargle.HOWL>


I've checked the FAQ and searched the archives, but have come up
empty...

There seems to be a problem with the FINFO_* variables in module
mod_python.apache.  In my version (3.0.3, built from source) the
following are defined:

    # the req.finfo tuple
    FINFO_MODE = 0
    FINFO_INO = 1
    FINFO_DEV = 2
    FINFO_NLINK = 4
    FINFO_UID = 5
    FINFO_GID = 6
    FINFO_SIZE = 7
    FINFO_ATIME = 8
    FINFO_MTIME = 9
    FINFO_CTIME = 10
    FINFO_FNAME = 11
    FINFO_NAME = 12

You may note the skip from 2 to 4.  I tested this with the following
handler:

    def handler(req):

	req.write('req.finfo: ' + str(req.finfo))
	return apache.OK

Going to a page that uses this handler, I get the following output
(I've pretty-printed it for readability):

    req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
		1065409206, 1065409206, '/var/www/py/foo', None)

If you line up the FINFO_* indexes with the appropriate tuple elements:

    FINFO_MODE = 0          1604	     	 	 
    FINFO_INO = 1	    359355	     	 	 
    FINFO_DEV = 2	    775		 
    FINFO_NLINK = 4	    500		 
    FINFO_UID = 5	    500		 
    FINFO_GID = 6	    14		 
    FINFO_SIZE = 7	    1065473633	 
    FINFO_ATIME = 8	    1065409206	 
    FINFO_MTIME = 9	    1065409206	 
    FINFO_CTIME = 10	    '/var/www/py/foo'
    FINFO_FNAME = 11	    None             
    FINFO_NAME = 12

You get the picture: everything is off by one after FINFO_DEV.  I
looked in CVS and noticed that the significant change in the FINFO_*
vars was between versions 1.45 and 1.46.  I'm quite surprised since
according to the repository this change happened in July of 2002.  I
can't be the only one who has used FINFO_* since then, can I?

BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).

Thanks,

 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:26:28 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:00:25 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16257.56836.418496.771252@gargle.gargle.HOWL>



 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:

I should have added that I had the same problem with 3.0.1, prebuilt
with redhat 9.0 rpm.  I thought perhaps I had an old and/or redhat
bug, so I upgraded to the latest stable source.  When the same problem
occured with 3.0.3 I then poked around at the CVS tree and noticed the
FINFO_* vars appear to have been off for some time now.

-- 
 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From perry.tew at cibavision.novartis.com  Tue Oct  7 00:33:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then
 apache tries to serve req as physical file in htdocs?
Message-ID: <OFC2BD368E.0E801EE4-ON85256DB8.0017C350-85256DB8.001910F1@EU.novartis.net>

Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 
directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 
anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


From schnieper at semafor.ch  Tue Oct  7 09:01:27 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Problems with configure and make
Message-ID: <3F8264C7.3080201@semafor.ch>

Hi all

Are there any known problems with this versions?
I tried python 2.2.2 and 2.3.2
mod_python 3.1.0a and 3.0.3

But i always get a lot of mistakes by doing the make command.
Or could this be something with Apache 2.0.44

If it helps i can mail the errormessages.

Thanks in advance
Lukas

From perry.tew at cibavision.novartis.com  Tue Oct  7 09:10:26 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then apache tries to serve req as physical file in
 htdocs?
Message-ID: <OF06AA765B.2624506B-ON85256DB8.0048507A-85256DB8.00485DEA@EU.novartis.net>

The more I play with this, the more I think the problem I'm seeing is 
because I'm not using the
security as it was designed.  I don't think apache likes a 'require' 
directive without an AuthType
or AuthName.  The only problem is, if I add those two directives, the user 
is prompted for a username
and password, which I want to avoid since I'm using SSL certs.

I changed the handler from an authen handler to an access handler. 
Everything works like a charm.
I guess I'll live with that. Although it's technically not the correct 
place to authenticate, it's close enough
not to be confusing.

Thanks everyone,
Perry Tew




Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 

directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 

anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Tue Oct  7 23:52:29 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python]  How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310061211.27945.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
Message-ID: <20031007235047.H658@onyx.ispol.com>



On Mon, 6 Oct 2003, Scott Chapman wrote:

> mod_python and I'm wondering how to get the 'require valid-user' and 'require
> group blah' info into my Python handler so I know which groups to look out
> for, etc.  I've been over the mod_python docs quite a bit and I can't find
> info on this.

Right now you cannot. But 3.1 will have a req.requires() method which will
return just that info. If you *really* need it now, you can try out the
latest version from CVS.

Grisha
From seth at picklematrix.net  Tue Oct  7 22:41:29 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] could not import mod_python.apache ?
Message-ID: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>

Hello,

I'm very excited to try out the new 3.1 alpha.  I removed the 
mod_python RPM from RH9, did a configure, make, make install.  I then 
added:

LoadModule python_module /usr/lib/httpd/modules/mod_python.so

<Directory /home/*/public_html>
     SetHandler mod_python
     PythonHandler mod_python.publisher
</Directory>

And restarted.

My simple script:

def index(req):
     return "We are in index()"

Which made my error_log blow up with a lot of these messages:

[Wed Oct 08 03:25:50 2003] [error] make_obcallback: could not import 
mod_python.
apache.!
Traceback (most recent call last):
   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
784, in ?
     mpm_query = _apache.mpm_query
AttributeError: 'module' object has no attribute 'mpm_query'

And it killed apache.  Then I tried starting it back up (httpd 
restart), and I get this error, and it finishes with "Configuration 
Failed!"

[Wed Oct 08 03:25:54 2003] [notice] mod_python: Creating 150 session 
mutexes bas
ed on 150 max processes and 0 max threads.
[Wed Oct 08 03:25:54 2003] [error] (28)No space left on device: 
mod_python: Fail
ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

Any ideas what is going on?  I think I followed the installation 
instructions and tutorial to every step.  I'm running RH9 brand new, 
very bare install.  All standard RPMs, nothing from source (except 
this, of course).  And I removed the mod_python RPM before starting 
this.

Any tips or hints would be greatly appreciated.  Did I miss a step?

Thanks!
Seth

From grisha at modpython.org  Wed Oct  8 09:33:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
References: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
Message-ID: <20031008092957.Y6762@onyx.ispol.com>



On Tue, 7 Oct 2003, Seth Ladd wrote:

> Traceback (most recent call last):
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 784, in ?
>      mpm_query = _apache.mpm_query
> AttributeError: 'module' object has no attribute 'mpm_query'

Sounds to me like you still have the old mod_python/apache.py in your
pythonpath.

> ed on 150 max processes and 0 max threads.
> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
> mod_python: Fail
> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

There are references to that earlier in the list, also I believe the error
log shows a hint on what to do. It has to do with the default number of
available semaphores on Linux which needs to be increased.

The latest version that is in CVS deals with this issue a bit better.

Grisha
From scott_list at mischko.com  Wed Oct  8 07:06:31 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python]  How to get the Apache authentication requirements
	into Python script?
In-Reply-To: <20031007235047.H658@onyx.ispol.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
Message-ID: <200310080706.31323.scott_list@mischko.com>

On Tuesday 07 October 2003 20:52, Gregory (Grisha) Trubetskoy wrote:
> On Mon, 6 Oct 2003, Scott Chapman wrote:
> > mod_python and I'm wondering how to get the 'require valid-user' and
> > 'require group blah' info into my Python handler so I know which groups
> > to look out for, etc.  I've been over the mod_python docs quite a bit and
> > I can't find info on this.
>
> Right now you cannot. But 3.1 will have a req.requires() method which will
> return just that info. If you *really* need it now, you can try out the
> latest version from CVS.

Grisha,
What's the scheduled release date for 3.1?

Scott

From grisha at modpython.org  Wed Oct  8 11:41:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310080706.31323.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
	<200310080706.31323.scott_list@mischko.com>
Message-ID: <20031008113933.V6762@onyx.ispol.com>




On Wed, 8 Oct 2003, Scott Chapman wrote:

> Grisha,
> What's the scheduled release date for 3.1?

We do not have a formal schedule. I am hoping to release it as beta in the
next couple of days, and the final some time just before the upcoming
Apachecon.

Grisha
From anthony_barker at hotmail.com  Wed Oct  8 17:22:15 2003
From: anthony_barker at hotmail.com (Anthony Barker)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] getting started
Message-ID: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>

I was wondering how to get started processing an html form.

1) is there something equivalent to Apache::PerlRun?

"This module does not cache compiled scripts between runs.
A script is loaded and compiled freshly each time it is requested.
However, Apache::PerlRun still avoids the overhead of starting a new Perl
interpreter for each CGI script, so it's faster than traditional Perl CGI
scripting but slower than Apache::Registry or vanilla Apache API modules."

2) How would mod_python enable this simple script?

#!/usr/bin/python2
import cgi, sys, string
sys.stderr = sys.stdout
print "Content-type: text/html\r\n"

out1 = """
<HTML>
<HEAD><TITLE>Info Form</TITLE></HEAD>
<BODY BGCOLOR = white>
<H3>Please, enter your name and age.</H3>
<TABLE BORDER = 0>
<FORM METHOD = post ACTION = "t3.cgi">
<TR><TH>Name:</TH><TD>
<INPUT type = text name = "name"></TD>
</TABLE>
<INPUT TYPE = hidden NAME = "action" VALUE = "display"
<INPUT TYPE = submit VALUE = "Enter">
</FORM>
</BODY>
</HTML>"""

form = cgi.FieldStorage()
if form.has_key("action"):
    if form.has_key("name"):
        print "hello " + form["name"].value
else:
    print out1

_________________________________________________________________
Instant message in style with MSN Messenger 6.0. Download it now FREE!  
http://msnmessenger-download.com

From seth at picklematrix.net  Wed Oct  8 07:52:37 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <20031008092957.Y6762@onyx.ispol.com>
Message-ID: <341CC3E0-F9B8-11D7-A8D2-000A9576D038@picklematrix.net>

>
> Sounds to me like you still have the old mod_python/apache.py in your
> pythonpath.

That's what I thought to.  I'll do another install after I clean those 
files out by hand.

>
>> ed on 150 max processes and 0 max threads.
>> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
>> mod_python: Fail
>> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).
>
> There are references to that earlier in the list, also I believe the 
> error
> log shows a hint on what to do. It has to do with the default number of
> available semaphores on Linux which needs to be increased.

Exactly.  I should have phrased my question as "What are the issues 
with increasing the semaphores, and how do I do it?" :)

I'll search previously on the list to see what I can find.

Kudos for the work done on mod_python!
Seth

From grisha at modpython.org  Wed Oct  8 14:10:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] getting started
In-Reply-To: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
References: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
Message-ID: <20031008135000.C7910@onyx.ispol.com>


On Wed, 8 Oct 2003, Anthony Barker wrote:

> I was wondering how to get started processing an html form.
>
> 1) is there something equivalent to Apache::PerlRun?
>
> "This module does not cache compiled scripts between runs. A script is
> loaded and compiled freshly each time it is requested. However,
> Apache::PerlRun still avoids the overhead of starting a new Perl
> interpreter for each CGI script, so it's faster than traditional Perl
> CGI scripting but slower than Apache::Registry or vanilla Apache API
> modules."

No. (The cgi handler is as close as you will get to this). I don't know
what the Perl folks do, but on Python side the only way to achieve this
(including a clean namespace) is to reset the interpreter, which only
results in marginal improvement. Not to mention that there is something
awkward with this whole approach :-)

> 2) How would mod_python enable this simple script?
>
> #!/usr/bin/python2
> import cgi, sys, string
> sys.stderr = sys.stdout
> print "Content-type: text/html\r\n"
>
> out1 = """
> <HTML>
> <HEAD><TITLE>Info Form</TITLE></HEAD>
> <BODY BGCOLOR = white>
> <H3>Please, enter your name and age.</H3>
> <TABLE BORDER = 0>
> <FORM METHOD = post ACTION = "t3.cgi">
> <TR><TH>Name:</TH><TD>
> <INPUT type = text name = "name"></TD>
> </TABLE>
> <INPUT TYPE = hidden NAME = "action" VALUE = "display"
> <INPUT TYPE = submit VALUE = "Enter">
> </FORM>
> </BODY>
> </HTML>"""
>
> form = cgi.FieldStorage()
> if form.has_key("action"):
>     if form.has_key("name"):
>         print "hello " + form["name"].value
> else:
>     print out1
>

If you are using the publisher handler, then your Apache config would look
like this (and make sure it is not a CGI ScriptAlias):

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

And the script could be something like the below. If the script was named
form.py, you'd access the below via http://blah.bla.com/form.py/info.


def info(name=None, action=None):

    out1 = """
    <HTML>
    <HEAD><TITLE>Info Form</TITLE></HEAD>
    <BODY BGCOLOR = white>
    <H3>Please, enter your name and age.</H3>
    <TABLE BORDER = 0>
    <FORM METHOD = post ACTION = "info">
    <TR><TH>Name:</TH><TD>
    <INPUT type = text name = "name"></TD>
    </TABLE>
    <INPUT TYPE = hidden NAME = "action" VALUE = "display"
    <INPUT TYPE = submit VALUE = "Enter">
    </FORM>
    </BODY>
    </HTML>"""

    if action and name:
        return "hello %s" % name
    else:
        return out1



HTH,

Grisha
From dpopowich at mtrsd.k12.ma.us  Wed Oct  8 16:54:14 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16260.31094.314431.782441@gargle.gargle.HOWL>


I downloaded 3.1.0a and this same bug exists there, too...

Daniel J. Popowich writes:
> 
> I've checked the FAQ and searched the archives, but have come up
> empty...
> 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:
> 
>     # the req.finfo tuple
>     FINFO_MODE = 0
>     FINFO_INO = 1
>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>     FINFO_UID = 5
>     FINFO_GID = 6
>     FINFO_SIZE = 7
>     FINFO_ATIME = 8
>     FINFO_MTIME = 9
>     FINFO_CTIME = 10
>     FINFO_FNAME = 11
>     FINFO_NAME = 12
> 
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
> 
>     def handler(req):
> 
> 	req.write('req.finfo: ' + str(req.finfo))
> 	return apache.OK
> 
> Going to a page that uses this handler, I get the following output
> (I've pretty-printed it for readability):
> 
>     req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
> 		1065409206, 1065409206, '/var/www/py/foo', None)
> 
> If you line up the FINFO_* indexes with the appropriate tuple elements:
> 
>     FINFO_MODE = 0          1604	     	 	 
>     FINFO_INO = 1	    359355	     	 	 
>     FINFO_DEV = 2	    775		 
>     FINFO_NLINK = 4	    500		 
>     FINFO_UID = 5	    500		 
>     FINFO_GID = 6	    14		 
>     FINFO_SIZE = 7	    1065473633	 
>     FINFO_ATIME = 8	    1065409206	 
>     FINFO_MTIME = 9	    1065409206	 
>     FINFO_CTIME = 10	    '/var/www/py/foo'
>     FINFO_FNAME = 11	    None             
>     FINFO_NAME = 12
> 
> You get the picture: everything is off by one after FINFO_DEV.  I
> looked in CVS and noticed that the significant change in the FINFO_*
> vars was between versions 1.45 and 1.46.  I'm quite surprised since
> according to the repository this change happened in July of 2002.  I
> can't be the only one who has used FINFO_* since then, can I?
> 
> BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).
> 
> Thanks,
> 
>  ---------------------
>  Daniel Popowich     /
>  Network Specialist /
>  ------------------------------------------------------------------------------
>     /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
>    //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
>   //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
>  //      || //   //   \\  //// //////    413.625.0192 x22                  /
>  --------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Wed Oct  8 17:02:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <20031008165453.S10058@onyx.ispol.com>


On Mon, 6 Oct 2003, Daniel J. Popowich wrote:

>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
>
> I can't be the only one who has used FINFO_* since then, can I?

Looks like you are :-)

I checked and indeed FINFO_NLINK should be 3, and from there on they're
off by one, thanks for catching this.

Grisha
From grisha at modpython.org  Wed Oct  8 17:15:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16260.31094.314431.782441@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
 <16260.31094.314431.782441@gargle.gargle.HOWL>
Message-ID: <20031008171450.N10594@onyx.ispol.com>


Well it was only fixed about 10 minutes ago :-)

Grisha

On Wed, 8 Oct 2003, Daniel J. Popowich wrote:

>
> I downloaded 3.1.0a and this same bug exists there, too...
>
> Daniel J. Popowich writes:
> >
From grisha at modpython.org  Wed Oct  8 21:12:47 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] apache.log_error
In-Reply-To: <029f01c383af$ef321c60$95fe46c0@GIRLS>
References: <029f01c383af$ef321c60$95fe46c0@GIRLS>
Message-ID: <20031008210859.H11965@onyx.ispol.com>


You will have better luck on Windows with req.log_error than
apache.log_error, or you will have to call apache.log_error with the other
two optional arguments, level and server:

apache.log_error("blah", apache.APLOG_ERR, req.server)

I *think* (I haven't researched this too much) this is because on unix,
when req.server is omited, the function writes to stderr, which ultimately
ends up in the logs, but on windows, it goes nowhere.

But again, if you have a request object, always use:

req.log_error("blah")

Grisha

On Thu, 25 Sep 2003, Seung Chan Lim wrote:

> If I'm trying to spew error messages out to the default apache error log am
> I doing the right thing by using apache.log_error ??
>
> The problem is that I don't see anything on the default error log which I
> believe is Apache2/logs/error.log
>
> This is using mod_python 3.03
> Windows 2000
> Apache 2.0
> Python 2.2
>
> thanks
>
> slim
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Wed Oct  8 23:53:51 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] [help]please give an input filter example ?
In-Reply-To: <001201c38631$f12aa850$db64a8c0@camgelo>
References: <007c01c37dc6$32d21050$db64a8c0@camgelo>
	<3F69851B.3080703@sjsoft.com>
	<009d01c37dd0$bc2c5f40$db64a8c0@camgelo> <3F69916F.10406@sjsoft.com>
	<3F69D71A.8080005@sjsoft.com><20030923102333.N24322@onyx.ispol.com>
	<20030925092737.H57967@onyx.ispol.com>
	<20030926104954.C62356@onyx.ispol.com>
	<001201c38631$f12aa850$db64a8c0@camgelo>
Message-ID: <20031008234855.Q11965@onyx.ispol.com>


On Mon, 29 Sep 2003, camge wrote:

>     Below is the error message and error code is 730035.

This is SOCEWOULDBLOCK (aka EAGAIN). Not sure why it is returned here
since the read should be blocking (as the code specifies APR_BLOCK_READ),
may be its a windows thing, but I added a check for it, which should
eliminate this error:

        if (!APR_STATUS_IS_EAGAIN(self->rc) && !APR_STATUS_IS_SUCCESS(self->rc)) {
            PyErr_SetObject(PyExc_IOError,
	                    PyString_FromString("Input filter read error"));

(You can make this change in your sources, or check out the latest stuff
from CVS)

Grisha
From hara at oderwat.de  Thu Oct  9 12:30:36 2003
From: hara at oderwat.de (HaRa (OderWat))
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] 
	Prob. with Win32 mod_python 3.x and python 2.3.x and Apache2
Message-ID: <001401c38e50$69f41e80$ea5545d5@ikc.net>

Hi there,

I make it short:

If I d/l  the current 3.1.0a or 3.0.3 as win32 executable and install it on my apache2/python2.3.2 system, I get errors because the
win32 mod_python in either version opens python22.dll !!! I verified this in mod_python.so (contains: python22.dll). You can even
look at the Apache Signature:

Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.2.3 PHP/4.3.3 Server
                                                                     -------------

The 3.0.3 lets me choose if I want to install for 2.2 or 2.3 (if both are present). The 3.1.0a just asks to install for 2.3 ... bot
then open the python22.dll ..

Thank you for your Time!
Keep up the good work!

- Hans Raaf (Germany) / www.oderwat.de



From rclilly at cox.net  Thu Oct  9 18:22:28 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
Message-ID: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>

My setup:		Apache/2.0.47 (Win32) PHP/4.3.2 mod_python/3.0.3 Python/2.2.3

My http.conf:	LoadModule python_module modules/mod_python.so

			<Directory F:/MyApache/Apache2/htdocs/test>
			  AddHandler python-program .py
			  PythonHandler mptest
			  PythonDebug On
			</Directory>

When I try to access http://localhost/test/mptest.py I get and Internal
Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
make_obcallback: could not import mod_python.apache.

As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
start when using mod_python with Python 3.

Any clues on what I need to do to get mod_python working under Apache2?

TIA,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From rclilly at cox.net  Thu Oct  9 19:01:41 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
In-Reply-To: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>
Message-ID: <AMEDJPACLBJGECKBDAOKGEHCCBAA.rclilly@cox.net>

> My setup:		Apache/2.0.47 (Win32) PHP/4.3.2
> mod_python/3.0.3 Python/2.2.3
>
> My http.conf:	LoadModule python_module modules/mod_python.so
>
> 			<Directory F:/MyApache/Apache2/htdocs/test>
> 			  AddHandler python-program .py
> 			  PythonHandler mptest
> 			  PythonDebug On
> 			</Directory>
>
> When I try to access http://localhost/test/mptest.py I get and Internal
> Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
> make_obcallback: could not import mod_python.apache.
>
> As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
> start when using mod_python with Python 3.
>
> Any clues on what I need to do to get mod_python working under Apache2?
>
> TIA,
>
> Robert Lilly

I solved my problem. After uninstalling Python 2.3.2 and re-installing 2.2.3
I didn't re-install mod_python.  After re-installing mod_python all is well.

Is there a reason mod_python won't work with the Python 2.3? It has been out
quite a while now.

Thanks,

Robert
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From cs1spw at bath.ac.uk  Sat Oct 11 00:13:05 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
Message-ID: <3F873D01.8090107@bath.ac.uk>

Hi all,

Are there any plans for any mod_python related activities at PyCon DC 
next year?

http://www.python.org/pycon/dc2004/

Cheers,

Simon Willison
http://simon.incutio.com/



From grisha at modpython.org  Sat Oct 11 08:23:23 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
In-Reply-To: <3F873D01.8090107@bath.ac.uk>
References: <3F873D01.8090107@bath.ac.uk>
Message-ID: <20031011082229.Y67678@onyx.ispol.com>


Since it is in DC, I will probably submit for a talk on mod_python...

Grisha

On Sat, 11 Oct 2003, Simon Willison wrote:

> Hi all,
>
> Are there any plans for any mod_python related activities at PyCon DC
> next year?
>
> http://www.python.org/pycon/dc2004/
>
> Cheers,
>
> Simon Willison
> http://simon.incutio.com/
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From vmanera at manord.com  Mon Oct 13 11:14:56 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Cannot load mod_python.so into server:
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B0@exchange2000.manord.com>

Environment on win2000:

python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
 Impossibile trovare il modulo specificato.


httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,
Villiam



From skremer at q.cis.uoguelph.ca  Mon Oct 13 19:56:43 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Persisten DB connection for passwords.
Message-ID: <Pine.LNX.4.44.0310131937410.9038-100000@q.cis.uoguelph.ca>


Hi,

I have built a web-site that uses a persistent DB connection as suggested 
in the FAQ to store user passwords for my web-site.

The existence of the separate connections (for each python process) is
problematic in this case, because one hit on the web-page will initialize
the password (or change it) with an SQL update and then another hit to the
same page (but on a different PID) may or may not get the lastest version
of the password with SELECT.

I understand that this is a product of the multiversion model concurrency
control (MVCC) which is generally desirable and specifically desirable for 
my web-site except for the password UPDATE and SELECT commands and the 
persistent connections I'm using with mod_python.

I've been poring over the documentaion and am still a little bit unsure of 
what the easiest way to approach this is (serializable isolation lever, 
table-level locks, row-level locks, SELECT FOR UPDATE) and where to apply 
it (during the UPDATE statement, SELECT statement, or both).  The 
problem is complicated by the fact that I can't easily test it because I 
never know when the transactions will be autocommitted and which PID my 
http get will get.  I'm looking for a nice simple solution that will work 
with this rare case (i.e. please don't suggest switching to a 
different DB, using mod_perl instead ;), etc.).

I'm hoping that someone else has tried something similar and can offer a 
suggestion or pointer (or even a snippit of SQL).

FYI the DB is Postgres-7.3 (built from source), mod_python is 3.0 (built 
from source), DBA is PoPy 2.0.11 (built from source) all living on top of 
an otherwise stock RH 9.0.

Thanks in advance,

	Stefan

-- 
--
Permanently                             Temporarily (Until Aug. 2004)
Dr. Stefan C. Kremer, Associate Prof.   Visiting Researcher
Reynolds Building, 106                  307 Computer Science/Engineering Bldg
Dept. of Computing & Info. Science      School of Info. & Computer Science
University of Guelph, Guelph, Ontario	  U of California at Irvine, Irvine, CA
N1G 2W1                                 92697-3425
Tel: (519)824-4120 Ext.58913  
Fax: (519)837-0323

WWW: http://q.cis.uoguelph.ca/~skremer  E-mail:  skremer@uoguelph.ca

From vmanera at manord.com  Tue Oct 14 12:35:09 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>

I have followed the whole history of mod_python.so,...:

>Gregory (Grisha) Trubetskoy grisha at modpython.org 

>Mon Sep 15 10:32:10 EST 2003 

>This is typically a mismatch of mod_python.so and the version of Python

>you have on your system. For some reason windows says "module cannot be

>found" whereas it really means "i had problems loading it".

>

>The mod_python binary available from Apache sites should be compatible

>with Python 2.2.x, but not 2.3.

but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3

I have decided to migrate from python 2.2 to 2.3 just for try session... on
mod_python 3.1.0a

what I have to do :-( ??

Thanks,

Villiam

 

 

Environment on win2000:

python 2.3.2

apache 2.0.47

mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe

Syntax error on line 173 of C:/Programmi/Apache

Group/Apache2/conf/httpd.conf:

Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into

server:

Impossibile trovare il modulo specificato.

 

httpd.conf:

........

172 #LoadModule ssl_module modules/mod_ssl.so

173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine

uninstalling Python 2.2.2 and mod_python 3.0.3

installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 

....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,

 

Villiam Manera 
Dirett.  Sistema Informativo 

Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 

Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031014/0648346c/attachment-0002.htm
From gustavo.cordova at q-voz.com  Tue Oct 14 09:40:54 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <3F8C1906.1050102@q-voz.com>

Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


From hara at oderwat.de  Tue Oct 14 17:39:26 2003
From: hara at oderwat.de (HaRa)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <NCBBLHDKMKAEOLOOBEGGKEBHIAAA.hara@oderwat.de>

Hi..

I just can repeat something I wrote some days ago...

The Windows binaries I d/l from sourceforge had a link to python 2.2 even when they are announced for python 2.3 (only).
So it was using my python22.dll... and my own apache-extension modules (in 2.3 dir of python) where not found.

- Hans

-----Original Message-----
From: mod_python-bounces@modpython.org [mailto:mod_python-bounces@modpython.org]On Behalf Of Manera, Villiam
Sent: Tuesday, October 14, 2003 12:35 PM
To: mod_python@modpython.org
Subject: [mod_python] Cannot load mod_python.so into apache(2):


I have followed the whole history of mod_python.so,...:
>Gregory (Grisha) Trubetskoy grisha at modpython.org 
>Mon Sep 15 10:32:10 EST 2003 
>This is typically a mismatch of mod_python.so and the version of Python
>you have on your system. For some reason windows says "module cannot be
>found" whereas it really means "i had problems loading it".
>
>The mod_python binary available from Apache sites should be compatible
>with Python 2.2.x, but not 2.3.
but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
I have decided to migrate from python 2.2 to 2.3 just for try session... on mod_python 3.1.0a
what I have to do :-( ??
Thanks,
Villiam


Environment on win2000:
python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)
C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
Impossibile trovare il modulo specificato.

httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so
my step:
with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 
Any clues on what I need to do to get mod_python working under python 2.3?
Thanks,

Villiam Manera 
Dirett.  Sistema Informativo 
Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 
Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 
From mod_python at mlists.thewrittenword.com  Tue Oct 14 11:34:41 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] How to get request URI
Message-ID: <20031014163441.GA48143@spuckler.il.thewrittenword.com>

I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Tue Oct 14 18:26:54 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:26 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C3@exchange2000.manord.com>

:-)  Thanks you, now work properly

Villiam
-----Messaggio originale-----
Da: Gustavo C?rdova Avila [mailto:gustavo.cordova@q-voz.com]
Inviato: marted? 14 ottobre 2003 17.41
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: [mod_python] Cannot load mod_python.so into apache(2):


Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Tue Oct 14 10:31:21 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <3F8C1906.1050102@q-voz.com>
Message-ID: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>


> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

From gustavo.cordova at q-voz.com  Tue Oct 14 12:38:23 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
Message-ID: <3F8C429F.5020802@q-voz.com>

Nothing really... I just changed "22" for a "23" in the string 
"python22.dll" using "edit /70"  (for all youse DOS old hands out 
there).  :-)

1. Start Menu
2. Click "run"
3. Type "cmd"
4. cd into your apache modules directory (or wherever "mod_python.so" is 
stored).
5. Type "edit /70 mod_python.so"
6. Search for "python22.dll"
7. OVERWRITE "22" with "23", so it now says "python23.dll"
8. Make sure you OVERWROTE, and not INSERTED.
9. Save.
10. Start Apache and make sure it starts ok.

Remember to make a backup of "mod_python.so" before the operation.

Mind you, this isn't the ideal solution, but until we get a 
compiled-with-python23.dll module, it seems to work.

-gustavo

Robert Lilly wrote:

>When you say you changed python22.dll to python23.dll did you just rename
>it, or did you manipulate the file somehow? If the latter, what exactly did you do, and what editor did you use?
>
>Thanks!
>
>Robert Lilly
>
>
>
>  
>

From seth at picklematrix.net  Tue Oct 14 13:18:02 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] way to use PSP from publisher handler?
Message-ID: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>

Hello,

I've tried searching the docs and FAQ, but didn't find an immediate 
answer to this.  I'd like to use the Publisher handler for all the 
logic of the page, but I'd like the then forward (internally, not with 
a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
is great!).

Is there a way to use PSP as a template mechanism from within a 
publisher handler?  I've seen Cheetah, which acts the way I would want, 
but if I can use the builtin PSP, all the better. :)

Thanks!
Seth

From perry.tew at cibavision.novartis.com  Tue Oct 14 21:14:23 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:26 2004
Subject: [mod_python] How to get request URI
Message-ID: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>


Apache passes environment variables to an ErrorDocument that should provide
all the information you need for a custom response:

here are some links:
http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
*** see this **** http://httpd.apache.org/docs-2.0/custom-error.html

so, the mod_python code would look like this:

req.add_common_vars()
env_vars = req.subprocess_env
orig_req_uri = env_vars['REDIRECT_URL']

Hope this helps,
Perry Tew






I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

--
albert chin (china@thewrittenword.com)
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python





From gargp at earthlink.net  Tue Oct 14 21:05:05 2003
From: gargp at earthlink.net (Pankaj K Garg)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] 
	Win32 Binary of modpython 3.0.3 that has the Python 2.3 patch 
Message-ID: <000401c392d1$89bb9ce0$37fea8c0@home.org>


Browsing through some previous emails:

Andy Sy wrote:

> > modpython 3.0.3 works fine with Python 2.3, but to build it you
> > need to hack src/include/mod_python.h.  There's a FAQ entry with
> > the necessary patch.
> >
> > Maybe Grisha should release a 3.0.4 with just this one patch?
> >
> > -Barry
>
> I second the motion.  Does anyone have such a binary?
> At the very least widespread testing will help uncover
> Python 2.3 vis-a-vis modpython 3.x bugs under Windows.

I was wondering if someone created a modpython 3.0.4
Win32 install for Python 2.3?

We've been using mod_python 3.0.4 with Python 2.3 on
Linux for some time now with no problems. Recently
I've had to try out things on Win32. The good folks
at Redhat provide the Cygwin environment, that by
default now comes with Python 2.3...so, it will be
tremendously helpful if there was a Win32 installer
for mod_python 3.0.4 with Python 2.3

Pankaj


--- 
Pankaj K Garg              gargp@acm.org
1684 Nightingale Avenue    408-373-4027
Sunnyvale, CA 94304
http://home.earthlink.net/~gargp
From grisha at modpython.org  Tue Oct 14 23:39:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
Message-ID: <20031014233917.U19523@onyx.ispol.com>


Have you tried req.prev.uri?

Grisha

On Tue, 14 Oct 2003, Albert Chin wrote:

> I want to have mod_python manage my ErrorDocument handler. How can I
> get the URI of the request that caused the error? I'm using
> mod_python-3.0.3 and Apache 2.0.47.
>
> The uri members in mprequest get me the URI of the ErrorDocument
> handler.
>
> --
> albert chin (china@thewrittenword.com)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:35 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014233917.U19523@onyx.ispol.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
	<20031014233917.U19523@onyx.ispol.com>
Message-ID: <20031015035335.GA64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 11:39:42PM -0400, Gregory (Grisha) Trubetskoy wrote:
> Have you tried req.prev.uri?

Works! Thanks.

> Grisha
> 
> On Tue, 14 Oct 2003, Albert Chin wrote:
> 
> > I want to have mod_python manage my ErrorDocument handler. How can I
> > get the URI of the request that caused the error? I'm using
> > mod_python-3.0.3 and Apache 2.0.47.
> >
> > The uri members in mprequest get me the URI of the ErrorDocument
> > handler.
> >
> > --
> > albert chin (china@thewrittenword.com)
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
albert chin (china@thewrittenword.com)
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:59 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
References: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
Message-ID: <20031015035359.GB64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 09:14:23PM -0400, perry.tew@cibavision.novartis.com wrote:
> 
> Apache passes environment variables to an ErrorDocument that should provide
> all the information you need for a custom response:
> 
> here are some links:
> http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
> *** see this **** http://httpd.apache.org/docs-2.0/custom-error.html
> 
> so, the mod_python code would look like this:
> 
> req.add_common_vars()
> env_vars = req.subprocess_env
> orig_req_uri = env_vars['REDIRECT_URL']

Thanks. That works!

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Wed Oct 15 09:12:39 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:27 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C5@exchange2000.manord.com>

I used hackman:http://www.technologismiki.com/en/

I find python22 (in ascii mode) then update in python23

Villiam
-----Messaggio originale-----
Da: Robert Lilly [mailto:rclilly@cox.net]
Inviato: marted? 14 ottobre 2003 19.31
A: mod_python@modpython.org
Oggetto: RE: [mod_python] Cannot load mod_python.so into apache(2):



> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From vmanera at manord.com  Wed Oct 15 10:07:58 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>

I have had to update the configuration file of apache with: PythonAutoReload
on 
before this was the defaut, as in the new manual :
 
5.4.8 PythonAutoReload 

Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
PythonAutoReload {On, Off} 
Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
PythonAutoReload On 


Villiam 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031015/6b67b283/attachment-0002.htm
From alexiev at activesolutions.bg  Wed Oct 15 13:16:45 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00be01c39305$6f81c140$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem

---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543

From alexiev at activesolutions.bg  Wed Oct 15 13:21:34 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00d801c39306$1c0ff300$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem


---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543
From Hector.Sanchez at cern.ch  Wed Oct 15 14:17:53 2003
From: Hector.Sanchez at cern.ch (Hector Sanchez SanMartin)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] Having 2 scripts with the same name
Message-ID: <3F8D3AF1.8030108@cern.ch>

    Hello,

    I'm having the following problem: I have 2 scripts in diferent
locations but if I request one of them the server gives me an 404 error
(not found) so I need to restart apache in order to be able to execute
the second one but then the first one gives an 404, etc...
    Is there any way to avoid this?

-- 
Hector Sanchez

CERN Document Server ** <http://cds.cern.ch/> ** <cds.support@cern.ch>
InDiCo Project       ** <http://cern.ch/indico>
Room: Bldg 510-R-007 ** Voice: +41-22-7673829 ** Fax: +41-22-7678142



From grisha at modpython.org  Wed Oct 15 09:52:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
Message-ID: <20031015095146.T19523@onyx.ispol.com>


I am pretty sure that's been fixed in 3.1.1b

Grisha

On Wed, 15 Oct 2003, Manera, Villiam wrote:

> I have had to update the configuration file of apache with: PythonAutoReload
> on
> before this was the defaut, as in the new manual :
>
> 5.4.8 PythonAutoReload
>
> Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
> PythonAutoReload {On, Off}
> Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
> PythonAutoReload On
>
>
> Villiam
>
>
From dpopowich at mtrsd.k12.ma.us  Wed Oct 15 12:31:41 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] extending util.FieldStorage
Message-ID: <16269.30317.838811.476792@gargle.gargle.HOWL>


I found myself wanting methods of util.FieldStorage that are found in
the cgi module since python 2.2, getfirst and getlist.  They save tons
of code of the form:

       if form.has_key('foo'):
           foo = form['foo']
           if type(foo) is not type([]):
               foo = [foo]
       else:
           foo = []

which can cause code-clutter if you have a number of form variables.
Instead, one can simply write:

      foo = form.getlist('foo')

See the cgi documentation for 2.2 or later for details about these
methods and how they can help you reduce code and write safer code to
protect against malformed requests.

I extended util.FieldStorage to add those two methods plus a get()
(which behaves like a standard dict.get) and thought others might like
the code (which I didn't write in whole, but stole mostly from modules
cgi and UserDict).

If found useful by many, perhaps they can be included in the 3.1
distribution?

Enjoy,

Daniel Popowich
Network Specialist
MTRSD

======================================================================

from mod_python import util

class form(util.FieldStorage):

    def get(self, key, default=None):
        if not self.has_key(key):
            return default
        return self[key]

    def getfirst(self, key, default=None):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value[0]
            else:
                return value
        else:
            return default

    def getlist(self, key):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value
            else:
                return [value]
        else:
            return []


From grisha at modpython.org  Wed Oct 15 12:51:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <16269.30317.838811.476792@gargle.gargle.HOWL>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
Message-ID: <20031015125039.H33867@onyx.ispol.com>



On Wed, 15 Oct 2003, Daniel J. Popowich wrote:

>       foo = form.getlist('foo')
>
> If found useful by many, perhaps they can be included in the 3.1
> distribution?

getfirst and getlist are already in there, but thanks anyway!

Grisha
From perry.tew at cibavision.novartis.com  Wed Oct 15 15:20:24 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFDCC9909C.1102B3CA-ON85256DC0.006A35CD-85256DC0.006A3CED@EU.novartis.net>

Grisha,

I've downloaded, compiled, and installed 3.1.1b.  Everything with my 
application appears to function correctly.   However, I did
see a change with the initial message in my error log (sorry, I don't have 
the previous message).

Is the following line correct?  Why does it say -1 max processes?  With 
3.1.0a, it used to say "Creating 200 session mutexes"
[Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session 
mutexes based on -1 max processes and 50 max threads

If you're not concerned, I'm not, but it is different, so I mention it.


I'm using the worker mpm
( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b 
mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
on Solaris
[
System = SunOS
Node = usatux29
Release = 5.8
KernelID = Generic_108528-13
Machine = sun4u
BusType = <unknown>
Serial = <unknown>
Users = <unknown>
OEM# = 0
Origin# = 1
NumCPU = 2
]


Here's the relevant httpd.conf ( need more?)  I know my worker config is 
probably whacked a little.
I'm trying to keep a small amount of children with a high thread count.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15


<IfModule worker.c>
StartServers         3
MaxClients         200
MinSpareThreads     25
MaxSpareThreads     50 
ThreadsPerChild     50
MaxRequestsPerChild 500
</IfModule>


Other than that one confusing error message, which may just be due to my 
ignorance of Apache, I had no issues.


Thanks,
Perry Tew






I think I didn't make it clear in the last message:

In order for this release to be officially announced, at least a few
people on this list need to try it and send in a +1 indicating that it
worked on their system (along with some desciption of what their system
is). *Anyone* on this list can do this, you don't have to be an official
committer or anything of that sort.

Doing a test could probably take as little as 10 minutes, and I'd
encourage you to do it sooner than later.

Looking at the www.modpython.org log we've only had one download of the
tgz file so far, which isn't encouraging :-)

Grisha

On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> You can get the sneak preview of 3.1.1 beta here:
>
> http://www.modpython.org/tmp/3.1.1b/
>
> Please download it, then do the usual
>
> $ ./configure --with-apxs=/wherever/it/is
> $ make
> $ (su)
> # make install
>
> Then
>
> $ cd test
> $ python test.py
>
> And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris 
would
> be nice... (as well as Panther, if you have it).
>
> Also, Windows folks - please make sure that this binary isn't screwed
> like the last one. This one I think _really_ works with 2.3 :-)
>
> Please respond to the list with your results ASAP so we can announce 
this
> puppy!
>
> Thank you very much,
>
> Grisha
>




From perry.tew at cibavision.novartis.com  Wed Oct 15 15:56:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFAFFA7F02.B4ABAB19-ON85256DC0.006D4B2B-85256DC0.006D81FE@EU.novartis.net>

Yes, I was using the worker MPM with the same configuration.  Later 
tonight, I have to create another apache/mod_python instance.  I will 
start with 3.1.0a and capture the error log.  Then, I will upgrade to 
3.1.1b and capture that error log.  I'll send you the relevant portions 
for comparion.  Will that be useful?

Thanks,
Perry






"Gregory (Grisha) Trubetskoy" <grisha@apache.org>
10/15/2003 03:42 PM

 
        To:     Perry Tew/CV/Novartis@PH
        cc: 
        Subject:        Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results



In your last test (when it used to say creating 200 session mutexes), were
you using worker with the same configuration?

Grisha


On Wed, 15 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> Grisha,
>
> I've downloaded, compiled, and installed 3.1.1b.  Everything with my
> application appears to function correctly.   However, I did
> see a change with the initial message in my error log (sorry, I don't 
have
> the previous message).
>
> Is the following line correct?  Why does it say -1 max processes?  With
> 3.1.0a, it used to say "Creating 200 session mutexes"
> [Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session
> mutexes based on -1 max processes and 50 max threads
>
> If you're not concerned, I'm not, but it is different, so I mention it.
>
>
> I'm using the worker mpm
> ( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b
> mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
> on Solaris
> [
> System = SunOS
> Node = usatux29
> Release = 5.8
> KernelID = Generic_108528-13
> Machine = sun4u
> BusType = <unknown>
> Serial = <unknown>
> Users = <unknown>
> OEM# = 0
> Origin# = 1
> NumCPU = 2
> ]
>
>
> Here's the relevant httpd.conf ( need more?)  I know my worker config is
> probably whacked a little.
> I'm trying to keep a small amount of children with a high thread count.
> Timeout 300
> KeepAlive On
> MaxKeepAliveRequests 100
> KeepAliveTimeout 15
>
>
> <IfModule worker.c>
> StartServers         3
> MaxClients         200
> MinSpareThreads     25
> MaxSpareThreads     50
> ThreadsPerChild     50
> MaxRequestsPerChild 500
> </IfModule>
>
>
> Other than that one confusing error message, which may just be due to my
> ignorance of Apache, I had no issues.
>
>
> Thanks,
> Perry Tew
>
>
>
>
>
>
> I think I didn't make it clear in the last message:
>
> In order for this release to be officially announced, at least a few
> people on this list need to try it and send in a +1 indicating that it
> worked on their system (along with some desciption of what their system
> is). *Anyone* on this list can do this, you don't have to be an official
> committer or anything of that sort.
>
> Doing a test could probably take as little as 10 minutes, and I'd
> encourage you to do it sooner than later.
>
> Looking at the www.modpython.org log we've only had one download of the
> tgz file so far, which isn't encouraging :-)
>
> Grisha
>
> On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > You can get the sneak preview of 3.1.1 beta here:
> >
> > http://www.modpython.org/tmp/3.1.1b/
> >
> > Please download it, then do the usual
> >
> > $ ./configure --with-apxs=/wherever/it/is
> > $ make
> > $ (su)
> > # make install
> >
> > Then
> >
> > $ cd test
> > $ python test.py
> >
> > And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> > 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris
> would
> > be nice... (as well as Panther, if you have it).
> >
> > Also, Windows folks - please make sure that this binary isn't screwed
> > like the last one. This one I think _really_ works with 2.3 :-)
> >
> > Please respond to the list with your results ASAP so we can announce
> this
> > puppy!
> >
> > Thank you very much,
> >
> > Grisha
> >
>
>
>



From jm at eemsystems.cjb.net  Wed Oct 15 15:03:24 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] form, req problem
Message-ID: <1066248203.4790.13.camel@eemsystems.com>

this scrips was working good, but now i can't find what is the problem.

This was working in the following manner:

the firt time you call testpy control=''

then testpy return a html form with the variable: Fecha_Inicial,
Fecha_Final (in this case) an a hidden control with value '1'

The form action is the same function testpy, then in the second pass
control must be '1'... but this is not actualy the case.

I'm using python from debian/unstable



***********************************************************************

def testpy(req,control=''):
	if control=='':
		    return
aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
Medicos")
	elif control=='1':
		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
		if len(Fecha_Final)<3:
				Fecha_Final=Fecha_Inicial
	return Fecha_Inicial,Fecha_Final,control

************************************************************************
#module: aaa


def simpleform2(action,strparametros,titulo='',insertar=''):
	import string
	s='''<form method="post" action="''' +action+ '"><input type="hidden"
name="control" value="1">'
	parametros=string.split(strparametros,',')
	if len(strparametros)>2:
		s=s+"""<table><caption>"""+titulo+"""</caption>"""
		for i in parametros:
			s=s+"""<tr><td>"""+i+''':</td>
	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
value="">
	</td>
	</tr>'''
		s=s+'</table>'
	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
	return s
***************************************************************************

From jm at eemsystems.cjb.net  Wed Oct 15 15:44:15 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] form, req problem
In-Reply-To: <1066248203.4790.13.camel@eemsystems.com>
References: <1066248203.4790.13.camel@eemsystems.com>
Message-ID: <1066250655.5340.10.camel@eemsystems.com>

I run this scripts from another client machine and are working good.
look like browser problem in Debian/unstable.

thank you,

JM

El mi?, 15-10-2003 a las 15:03, Julio Mendoza escribi?:
> this scrips was working good, but now i can't find what is the problem.
> This was working in the following manner:
> 
> the firt time you call testpy control=''
> 
> then testpy return a html form with the variable: Fecha_Inicial,
> Fecha_Final (in this case) an a hidden control with value '1'
> 
> The form action is the same function testpy, then in the second pass
> control must be '1'... but this is not actualy the case.
> 
> I'm using python from debian/unstable
> 
> 
> 
> ***********************************************************************
> 
> def testpy(req,control=''):
> 	if control=='':
> 		    return
> aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
> Medicos")
> 	elif control=='1':
> 		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
> 		if len(Fecha_Final)<3:
> 				Fecha_Final=Fecha_Inicial
> 	return Fecha_Inicial,Fecha_Final,control
> 
> ************************************************************************
> #module: aaa
> 
> 
> def simpleform2(action,strparametros,titulo='',insertar=''):
> 	import string
> 	s='''<form method="post" action="''' +action+ '"><input type="hidden"
> name="control" value="1">'
> 	parametros=string.split(strparametros,',')
> 	if len(strparametros)>2:
> 		s=s+"""<table><caption>"""+titulo+"""</caption>"""
> 		for i in parametros:
> 			s=s+"""<tr><td>"""+i+''':</td>
> 	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
> value="">
> 	</td>
> 	</tr>'''
> 		s=s+'</table>'
> 	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
> 	return s
> ***************************************************************************
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From dpopowich at mtrsd.k12.ma.us  Thu Oct 16 09:16:24 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <20031015125039.H33867@onyx.ispol.com>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
	<20031015125039.H33867@onyx.ispol.com>
Message-ID: <16270.39464.384476.99879@gargle.gargle.HOWL>


Gregory (Grisha) Trubetskoy writes:
> 
> 
> On Wed, 15 Oct 2003, Daniel J. Popowich wrote:
> 
> >       foo = form.getlist('foo')
> >
> > If found useful by many, perhaps they can be included in the 3.1
> > distribution?
> 
> getfirst and getlist are already in there, but thanks anyway!
> 

I didn't see them in 3.1.0a, but I do see them in CVS.  Great!

Thanks,

Dan

From dagurp at heimsnet.is  Thu Oct 16 13:48:29 2003
From: dagurp at heimsnet.is (=?iso-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] python 2.3.2 binary
Message-ID: <001501c393ec$2eafbd60$1e01a8c0@dagur>


Hi

When can I expect a python 2.3 binary for mod_python 2.78? I'm on windows and I probably can't compile it myself. I'm having all sorts of problems because of this

thanks
Dagur
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/9e4cd4fb/attachment-0002.htm
From grickert at coldstorage.com  Thu Oct 16 15:56:08 2003
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] RE: Testing 3.1.1b
In-Reply-To: <200310161700.h9GH041D052838@slash.mediapulse.com>
Message-ID: <DIEMKLHLKFCCPAEPDMHKMENECEAA.grickert@coldstorage.com>

+1  ;)

Grisha,

This is in response to you asking for *Anyone* to test this version.

Mod_Python 3.1.1b (mod_python-3.1.1b.win32-py2.3.exe) seems to be working
great with Python 2.3 on my system

Win2K, Python 2.3.2, Apache 2.0.47

My comprehensive test suite :) consists of a few web pages that use a custom
PythonHandler, Cheetah templates, and cx_Oracle, to allow a customer to log
in, track their session, and produce some dynamic reports.  Everything
functioned as before.  I'm very happy that I can move up to Python 2.3 & mp
3.1.  Keep up the great work!

Gerrat Rickert

P.S.  I have been watching the modpython home page, waiting for a Win binary
compatable with Python 2.3.  Now that this is available, you may want to
update that page so maybe more people will download it & try it.

Thanks again.


From modpython at lists.bumpern.de  Thu Oct 16 23:19:52 2003
From: modpython at lists.bumpern.de (Alexander Neumann)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] mod_python 2.7.8 broken on python2.3?
Message-ID: <20031016211952.GB8454@necromancer.hoffentlich.net>

Hi,

I just started having a look at mod_python, it looks really great, but
there are a few strange exceptions thrown at points where (IMHO) no
exception should be raised.

For example if I'm using this file (test.py):
=======
from mod_python import apache

def test(req):
    return "just a test\n"
=======


Calling the test-function directly works as expected:
$ dog --no-header http://localhost/~fd0/test/test
just a test


Calling only the file fails and throws a 404:
$ dog --no-header http://localhost/~fd0/tlis/test
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>404 Not Found</TITLE>
</HEAD><BODY>
<H1>Not Found</H1>
The requested URL /~fd0/tlis/test was not found on this server.<P>
<HR>
<ADDRESS>Apache/1.3.28 Server at localhost Port 80</ADDRESS>
</BODY></HTML>


But if the URL ends with a slash ("/"), an exception is thrown and I
don't know if that's the normal behaviour (I would expect a 404, just
like the example above):
$ dog --no-header http://localhost/~fd0/tlis/test/
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range




Another problem is using the file (example.py):
======
__auth_realm__ = "Members only"


def hello(req):
    def __auth__(req, user, passwd):
        if user == "eggs" and passwd == "spam" or \
           user == "joe" and passwd == "eoj":
            return 1
        else:
            return 0

    def __access__(req, user):
        if user == "joe":
            return 1
        else:
            return 0

    return 'hello<br><a href="logout?username=%s"> logout </a>' % req.connection.user

def logout(req, username=""):
    def __auth__(req, user, passwd):
        if not username == "":
            return 0
        else:
            return 1
    return '<a href="hello"> test it! </a>'
======


Calling the logout function throws an exception, too:
$ dog --no-header http://localhost/~fd0/tlis/example/logout
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 135, in handler
    object = resolve_object(req, module, func_path, realm, user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 296, in resolve_object
    user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 224, in process_auth
    __auth__ = new.function(__auth__, globals())

TypeError: arg 5 (closure) must be tuple




Is this a bug or a feature?


- Alexander

-- 
"Good luck... The only good thing about being compromised is that it
makes you more paranoid about being on the net."
 - Jamie Lawrence on debian-security
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/22b82c8e/attachment-0002.bin
From gdamjan at mail.net.mk  Fri Oct 17 17:48:40 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] way to use PSP from publisher handler?
In-Reply-To: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
References: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
Message-ID: <20031017154840.GH6261@legolas.on.net.mk>

> I've tried searching the docs and FAQ, but didn't find an immediate 
> answer to this.  I'd like to use the Publisher handler for all the 
> logic of the page, but I'd like the then forward (internally, not with 
> a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
> is great!).
> 
> Is there a way to use PSP as a template mechanism from within a 
> publisher handler?  I've seen Cheetah, which acts the way I would want, 
> but if I can use the builtin PSP, all the better. :)

Whats wrong with using PSP and Publisher in paralel?
You can do it. In the same directory. I've added an entry in the FAQ how
to do it.



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cs1spw at bath.ac.uk  Sat Oct 18 18:56:22 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] New Web SIG
Message-ID: <3F91D326.6000805@bath.ac.uk>

In case people on this list haven't heard about it yet, the powers that 
be have created a new Python Web special interest group. The SIG has a 
dual purpose: it will host discussions of ways of improving Python's web 
client abilities (httplib and the like) and also discussions of 
improvements to be made to the CGI module and other related server-side 
topics.

The server side discussions would certainly benefit from participants 
with experience of mod_python ;)

http://www.python.org/sigs/web-sig/

Cheers,

Simon Willison
http://simon.incutio.com/

From DHANCOCK at arinc.com  Sun Oct 19 00:27:02 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>

I'm new to mod_python, and I'm stuck already.  I'm working through the
examples in the documentation, and even after careful typing (and cutting
and pasting from the manual), I can't get the authentication example to
work.  The line:

	user = req.connection.user

Gives an attribute error ('user').  As shown in the manual, I'm calling
req.get_basic_auth_pw() first, but still no joy.

If I try/except to trap the attribute error, I avoid the 500 Server Error
message, but the authentication still doesn't work.

Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
got right going right now).  The mod_python is a precompiled binary.

I'll be grateful for any assistance I can get.  I'm trying to recreate a
mod_perl module (AuthCookie) which implements a ticket-based authentication
mechanism.  It works well in Perl, but my group standardized on Python and
we'd like to keep using Python for Apache modules, too.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031019/4a6519b3/attachment-0002.htm
From grisha at modpython.org  Sun Oct 19 14:20:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] req.connection.user generates AttributeError
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
Message-ID: <20031019141946.L36129@onyx.ispol.com>


it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 17:20:36 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806A@exanpmb3.arinc.com>

Grisha: Thanks for getting back to me on this. I found req.connection.user
in the PDF manual dated 4/19/2002, Section 3.3, page 12.  And now that I
look at the title page, it's for 2.7.8, NOT for 3.0.3.  I downloaded the
manual to match my installation, and it shows req.user in that section.

My apologies for not having RTFMed better--I read, just the wrong one.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Sunday, October 19, 2003 2:21 PM
To: Hancock, David (DHANCOCK)
Cc: 'mod_python@modpython.org'
Subject: Re: [mod_python] req.connection.user generates AttributeError



it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what
I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based
authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 19:57:32 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>

Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From DHANCOCK at arinc.com  Sun Oct 19 20:25:52 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] RE: req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806E@exanpmb3.arinc.com>

Sorry to reply to my own post, but further reading of the list archives got
me the solution.  I moved the LoadModule directive for mod_python to be
first in the list, and voila! it started working right.  There was a thread
about this in July of this year.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Hancock, David (DHANCOCK) 
Sent: Sunday, October 19, 2003 7:58 PM
To: 'mod_python@modpython.org'
Subject: req.user always returns None?


Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From gah at research.att.com  Sun Oct 19 22:24:11 2003
From: gah at research.att.com (Glenn A. Hochberg)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <3F93474B.9070105@research.att.com>

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user instead.  Also note that you *can* assign a value to req.user -- it's not read-only as listed in the docs.

-Glenn Hochberg



From grisha at modpython.org  Sun Oct 19 23:21:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:27 2004
Subject: [mod_python] req.user always returns None?
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
Message-ID: <20031019231815.K41524@onyx.ispol.com>



On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> def authenhandler(req):
>     user = req.user
>     pw = req.get_basic_auth_pw()
>     req.log_error(str(user) + ' ' + str(pw))
>     if user == "david" and pw == "secret":
>         return apache.OK
>     else:
>         return apache.HTTP_UNAUTHORIZED

The current docs neglect to mention this because at the time it seemed
like it was no longer necessary, but the call to get_basic_auth_pw()
should always _preceed_ the use of req.user. If the swap the first two
lines, it will work (regardless of position of LoadModule within the
config file).

Grisha
From mikeklein at sbcglobal.net  Sun Oct 19 22:40:40 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] 
	Problems building apache1 with threaded python and mod_python
Message-ID: <3F937558.1010206@sbcglobal.net>

Can this even be done? The docs/faqs seem vague on the subject.

I am building on a RH9 system, with apache1, mod_python, and python w/o 
threads. This seemed to be the only way I could get mod_python to build. 
I always get errors regarding pthread symbols not being found. Example:

Cannot load /usr/local/apache/libexec/mod_python.so into server: 
/usr/local/apache/libexec/mod_python.so: undefined symbol: pthread_sigmask

I recall earlier that I was able to get past a similar error (happened 
with no threads build I think) by adding "-lutil" to LIBS in 
src/Makefile, but I cannot get rid of the above problem.

I need a threaded-python/mod_python as I'm trying to run ZSI and SOAPpy 
applications and they seem to require thread support.

Any ideas would be appreciated...

I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
already built in, but I require apache1 as there are a few modules I 
want to use which aren't apache2 yet...

mike

From mikeklein at sbcglobal.net  Mon Oct 20 00:49:33 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] 	Problems building apache1 with threaded python
	and mod_python...solved
In-Reply-To: <3F937558.1010206@sbcglobal.net>
References: <3F937558.1010206@sbcglobal.net>
Message-ID: <3F93938D.1030801@sbcglobal.net>

My bad...I need to follow the docs a little more often...

I have RH9, Apache1.3.27, mod_python-2.7.8.

I first tried with Python 2.2.3. No go. Then I tried with 2.3.2...no go. 
In fact, mod_python even thought it was a nothread build.

Then I actually followed directions and got release 2.1.3, which 
mod_python does state as a prerequisite. It worked. Didn't even get any 
thread symbol wierdness when starting apache or had to patch makefiles 
with -lutil to fix openpty wierdness..

All is well now...I can make SOAPpy invocations. No more thread complaints.

Should mod_python be able to work with latest Python releases with 
threads enabled? I'm not sure what I'm missing in later python releases.


mike

Mike Klein wrote:

> Can this even be done? The docs/faqs seem vague on the subject.
>
> I am building on a RH9 system, with apache1, mod_python, and python 
> w/o threads. This seemed to be the only way I could get mod_python to 
> build. I always get errors regarding pthread symbols not being found. 
> Example:
>
> Cannot load /usr/local/apache/libexec/mod_python.so into server: 
> /usr/local/apache/libexec/mod_python.so: undefined symbol: 
> pthread_sigmask
>
> I recall earlier that I was able to get past a similar error (happened 
> with no threads build I think) by adding "-lutil" to LIBS in 
> src/Makefile, but I cannot get rid of the above problem.
>
> I need a threaded-python/mod_python as I'm trying to run ZSI and 
> SOAPpy applications and they seem to require thread support.
>
> Any ideas would be appreciated...
>
> I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
> already built in, but I require apache1 as there are a few modules I 
> want to use which aren't apache2 yet...
>
> mike
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From DHANCOCK at arinc.com  Mon Oct 20 08:21:33 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88072@exanpmb3.arinc.com>

Thanks Glenn and Grisha.

To recap:

1. Putting the assignment from req.user AFTER the req.get_basic_auth_pw call
fixes the AttributeError, and the LoadModule for mod_python can now be
anywhere in the list of Apache modules.

2. req.user can indeed be assigned to--smart stuff.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Glenn A. Hochberg [mailto:gah@research.att.com] 
Sent: Sunday, October 19, 2003 10:24 PM
To: 
Subject: Re: [mod_python] req.connection.user generates AttributeError


> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user
instead.  Also note that you *can* assign a value to req.user -- it's not
read-only as listed in the docs.

-Glenn Hochberg



_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From perry.tew at cibavision.novartis.com  Mon Oct 20 08:52:15 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <OF2CAEE580.6333EEBF-ON85256DC5.0044A937-85256DC5.0046B410@EU.novartis.net>

David,
   I just wrote some code for ticket based authentication.  It's not 
completely where I want it, but it may provide you a framework to get 
started.  It works for me, but I'm using client certificates for 
authentication.   You'd need to change the TicketMaster.py script to check 
for basic authentication.  Here's the code, along with my httpd.conf 
settings.  If you do use it, I would appreciate criticism and suggestions 
for improvement as I'm new to python and may be doing some Java-ish things 
that have better solutions in Python.  Also, it's still a work in progress 
concerning documentation.  FYI, I basically ported the TicketMaster 
example in the "Writing Apache modules in Perl and C" book.

Inside of my TicketAccessHandler.py is also some authorization stuff going 
against an RDBMS.  It's pretty sweet.  It's set for an intranet to allow 
managers of content to handle adding and deleting users from roles rather 
than bogging down a site admin with such mundane tasks.  It can run 
completely in memory and updates are event driven and take place in a 
cleanup handler.  If you're interested in that, I can sent you the code 
for it as well (sql, front end, etc), but I suspect your first priority is 
the md5 ticket cookie, so at least the TicketTool.py should be an pretty 
exact match of what you may need.

Hope this helps,
-Perry Tew




# ===========================================================
# ===========================================================
# ===========================================================
# TicketAuthenHandler.py ======================================
from mod_python import apache
import TicketTool

from ApachePool import ApachePool
dbpool = ApachePool()


def accesshandler(req):
        #apache.log_error("[TicketAuthenHandler] in handler() method")

# ===========================================================
# Authenication secition.  This handler contains both authen
# and authz.  This is because it doesn't use the default
# Basic authentication.  Without using Basic, I can't get the
# authz handler to be called.  So, I have them together here
# ===========================================================

        # the NameError should only happen once in the life of the apache 
child process 
        global ticketTool
        try:
                result, msg, user = ticketTool.verify_ticket(req)
        except NameError:
                # if the ticketTool hasn't been created yet, then do so.
                ticketTool = TicketTool.TicketTool(req)
                result, msg, user = ticketTool.verify_ticket(req)


        #apache.log_error("[TicketAuthenHandler] verify_ticket result was 
" + str(result))
        #apache.log_error("[TicketAuthenHandler] verify_ticket msg was " + 
msg)

        # ditch the call if something wasn't correct
        if result == 0:
                #apache.log_error(msg, apache.APLOG_WARNING)
                cookie = ticketTool.make_return_address(req)
                cout = cookie.output(header="")
                #apache.log_error( "cookie going out:" + cout)
                req.err_headers_out['Set-Cookie'] = cout
                req.err_headers_out['Pragma'] = 'no-cache'
                req.err_headers_out['Cache-Control'] = 'no-cache'
                req.err_headers_out['Expires'] = '-1'
                return apache.HTTP_FORBIDDEN



# ===========================================================
# Authorization section
# Make sure user's roles are sufficient to access uri
# ===========================================================

        #apache.log_error("[TicketAuthzHandler] in handler() method")

        uri_roles = get_uri_roles(req)
        #apache.log_error("URI ROLES:" + str(uri_roles)) 

        user_roles = get_user_roles(req, user)
        #apache.log_error("USER ROLES:" + ",".join(user_roles.keys())) 

        for a_uri, some_roles in uri_roles.items():
                #apache.log_error( "AUTHZ: checking " + a_uri )
                unauthorized = 1
                if some_roles is not None:
                        for a_role in some_roles:
                                #apache.log_error("AUTHZ: examining role:" 
+ a_role)
                                if user_roles.has_key(a_role):
                                        #apache.log_error("AUTHZ: MATCH 
>>" + a_role)
                                        unauthorized = 0
                else:
                        #apache.log_error( "AUTHZ: " + a_uri + " is not 
protected" )
                        unauthorized = 0


                if unauthorized:
                        #apache.log_error("AUTHZ: FAILED")
                        # can't return FORBIDDEN, since that may be used
                        # by the TicketAuthenHandler to redirect to the 
ticket
                        # master, and I sure don't want to do that for a 
missing
                        # role.
                        return apache.HTTP_PAYMENT_REQUIRED

        return apache.OK

# ===========================================================
# End of main handler
# ===========================================================


def get_user_roles(req, user):


        global userCache
        global dbpool
        try:
                if userCache.has_key(user):
                        #apache.log_error("found user roles in cache") 
                        return userCache[user]
        except NameError:
                #apache.log_error("userCache doesn't exist, creating it") 
                userCache = {}

        #apache.log_error("userCache: " + str(userCache.keys()))


        #apache.log_error("DB: retrieving user roles from database") 
        db = dbpool.get_connection()
        c = db.cursor()
        c.execute( "SELECT ROLE_NAME FROM AUTH_USER_ROLES WHERE DN ='%s'" 
% (user,))
        rset = c.fetchall()
        roles = {}
        for row in rset:
                roles[row[0]] = None

        userCache[user] = roles
        return roles
        c.close()
        db.commit()
        db.close()



def get_uri_roles(req):
        """
                break up the uri, make sure each part or substring of the 
uri is cached, then
                retrieve the roles from the uriCache
        """
        global uriCache
        global dbpool

        paths = get_paths(req)
        uri_roles = []   # list of dicts 

        try:
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
        except NameError:
                #apache.log_error("uriCache doesn't exist, creating it") 
                init_uri_cache(req)
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
 

        if len(uncached_paths) > 0:
                #apache.log_error("DB: retrieving uncached uri roles from 
database: " + str(uncached_paths)) 
                path_str = ",".join(map(add_quotes, uncached_paths))

                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI WHERE URI IN 
(%s)" % path_str
                c.execute( sql )
                rset = c.fetchall()
                for row in rset:
                        if not uriCache.has_key(row[0]):
                                uriCache[row[0]] = []
                        uriCache[row[0]].append(row[1])
                c.close()
                db.commit()
                db.close()
 

                # once all of the request_uri have been updated in the 
database, there
                # may be more that need updating.  For this, assign an 
empty hash for those
                # uris

                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
                for i in uncached_paths:
                        uriCache[i] = None


        uri_roles = {}
        for i in paths:
                uri_roles[i] = uriCache[i] 

        return uri_roles
 


def init_user_cache(req):
        global userCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                c.execute( "SELECT DN, ROLE_NAME FROM AUTH_USER_ROLES")
                rset = c.fetchall()
                tmp = {}
                roles = {}
                for row in rset:
                        if tmp.has_key(row[0]) == 0:
                                tmp[row[0]] = {}

                        tmp[row[0]][row[1]] = None

                c.close()
                db.commit()
                db.close()
                userCache = tmp
        else:
                userCache = {}




def init_uri_cache(req):
        global uriCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI"
                c.execute( sql )
                rset = c.fetchall()
                tmp = {}
                for row in rset:
                        if not tmp.has_key(row[0]):
                                tmp[row[0]] = []
                        tmp[row[0]].append(row[1])

                uriCache = tmp
                c.close()
                db.commit()
                db.close()

        else:
                uriCache = {}




def add_quotes(val):
        return "'" + val + "'"
 


def get_paths(req):

        uri_path = req.parsed_uri[apache.URI_PATH]
        #apache.log_error("URI PATH:" + uri_path)
        dirs = uri_path.split("/")
        current_path = ''
        paths = []
        i = 0
        while i < len(dirs) - 1:
                if dirs[i] == '':
                        paths.append('/')
                else:
                #current_path = current_path + dirs[i] + '/'
                        current_path = current_path + '/' +  dirs[i]
                        paths.append(current_path)
                ##apache.log_error("URI PATH current path:" + 
current_path)
                i = i + 1

        paths.append(uri_path)
        #apache.log_error("URI PATH current path:" + str(paths))
        return paths


def update_cache(req, userParm=None, uriParm=None):
        """
        If user = None, do nothing for the userCache.
        If user = 'ALL', recreate the entire cache
        If user = other, then delete just that user from the cache
        The same applies to the uri.

        All of this crap should be moved to the Authz handler, eh?
        """

        global userCache
        global uriCache


        if userParm is not None:
                if userParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE USER CACHE")
                        init_user_cache(req)
                else:
                        if userCache.has_key(userParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from userCache" % userParm)
                                del(userCache[userParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in userCache" % userParm)
 

        if uriParm is not None:
                if uriParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE URI CACHE")
                        uriCache = {}
                else:
                        if uriCache.has_key(uriParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from uriCache" % uriParm)
                                del(uriCache[uriParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in uriCache" % uriParm)
 

# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketMaster.py =============================================

#TODO - this method should verify that the user indeed exists in the user
#table of the auth system

import TicketTool
import Cookie
from mod_python import apache
from mod_python.util import FieldStorage

ticketTool = None

def handler(req):
        apache.log_error( "[TicketMaster] calling handler() method" )

        # this will only need doing once during the life of the apache 
child process
        global ticketTool
        if ticketTool == None:
                ticketTool = TicketTool.TicketTool(req)
 

        req.add_common_vars()

        request_uri = None

        # 1. check for a paramater named request_uri
        # 2. check for a cookie named request_uri
        # 3. check for a req.prev uri

        fields = FieldStorage(req)
        if fields.has_key('request_uri'):
                request_uri = fields['request_uri']
        else:
                apache.log_error( "[TicketMaster] no request_uri param" )

                if req.prev:
                        request_uri = req.prev.unparsed_uri
                        apache.log_error( "[TicketMaster] have a prev 
request_uri:" + request_uri )
                else:
                        cookies = Cookie.SimpleCookie()
                        try:
                                apache.log_error( "[TicketMaster] cookie 
headers_in:" + req.headers_in['Cookie'] )
                                cookies.load(req.headers_in['Cookie'])
                                request_uri = cookies['request_uri'].value
                                #request_uri = cookies['request_uri']
                                apache.log_error( "[TicketMaster] have a 
cookie request_uri:" + str(request_uri) )
                        except KeyError:
                                apache.log_error( "[TicketMaster] no 
cookies were found, what now?" )
 

        # if nothing by here, display and error and move on with life.
        # it's too short 
        if request_uri == None:
                apache.log_error( "[TicketMaster] no request_uri could be 
found" )
                no_cookie_error(req)
                return apache.OK



        user = ''
        try:
                user = req.subprocess_env['SSL_CLIENT_S_DN']
                apache.log_error("[TicketMaster] user dn:" + user)
        except KeyError:
                apache.log_error("[TicketMaster] no SSL DN env variable!" 
)
                display_missing_cert_screen(req, request_uri)
                return apache.OK


        result = 0
        msg = ''

        if user:
                # I don't authenticate here, since the SSL layer does that
                # for me

                try:
                        ticket = ticketTool.make_ticket(req, user)
                        go_to_uri(req, request_uri, ticket)
                        return apache.OK

                except:
                        apache.log_error( 'could not create ticket, 
missing secret key?', apache.APLOG_ERR)
                        raise
                        #return apache.HTTP_INTERNAL_SERVER_ERROR

        apache.log_error( "[TicketMaster] no req.user, so cannot make 
ticket" )
        display_missing_cert_screen(req, request_uri)
        return apache.OK


def go_to_uri(req, request_uri, ticket):
        apache.log_error( "[TicketMaster] sending refresh to browser to go 
here:" + request_uri)
        apache.log_error( "[TicketMaster] setting the following cookie:" + 
ticket.output(header=""))
        req.content_type = 'text/html'
        req.headers_out['Set-Cookie'] = ticket.output(header="")
        # the following line causes MSIE to wig out, so don't uncomment 
it.
        #req.headers_out['Refresh'] = '1;' + request_uri
        req.headers_out['Pragma'] = 'no-cache'
        req.headers_out['Cache-Control'] = 'no-cache'
        req.headers_out['Expires'] = '-1'
        #req.send_http_header()
        req.write("""
                <html>
                        <head>
                                <title>Successfully Authenticated</title>
                        </head>
                        <body>
                                <h4>Congratulations, you have successfully 
authenticated</h4>
                                <p>Click <a href="%s">here</a> to 
continue</p>
                                <p>A nice explanation about the cookie I 
just set would be swell</p>
                        </body>
                </html>

        """ % request_uri)
        return apache.OK
 


def display_missing_cert_screen(req,request_uri):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Missing Entrust PKI 
Certificate</title>
                        </head>
                        <body>
                                <p>The page you attempted to view (%s) was 
protected.</p>
                                <p>Protection for this web site is based 
on Digital Certificate technology.
                                You need a PKI certificate to access this 
portion of the website.
                                Contact Human Resources.</p>
                        </body>
                </html>""" % request_uri)

def no_cookie_error(req):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Unable to Log In</title>
                        </head>
                        <body>
                                <h4>Unable to Log In</h4>
                                <p>This site uses cookies for security. 
Your browser must be capable
                        of processing cookies <em>and</em> cookies must be 
activated. 
                                Please set your browser to accept cookies, 
then press the
                        <strong>reload</strong> button.</p>
                                <hr>
                        </body>
                </html>""")



# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketTool.py==============================================
import md5
import Cookie
import time
from mod_python import apache

defaults = {
        'TicketExpires':60000,
        'TicketSecret':'/home/webadmin/.secretkey',
        'TicketDomain':'.cv.usat'
}


class TicketTool(dict):
        serverName = ''

        def __init__(self, req):
                """
                args: self
                          req: mod_python request object
                """

                # set up the config items
                opts = req.get_options()
                for key,value in defaults.items():
                        try:
                                avalue = opts[key]
                        except KeyError:
                                avalue = value
                        self[key] = avalue

 
        def authenticate(self,user,passwd):
                # since this is going to run behind SSL client
                # cert authtication, just return true 
                return 1



        def fetch_secret(self):
                secret = ""
                try:
                        secret = self['SECRET_KEY']
                except KeyError:
                        secret = open(self['TicketSecret']).read()
                        self['SECRET_KEY'] = secret

                return secret



        def invalidate_secret(self):
                del(self['SECRET_KEY'])


        def make_ticket(self, req, username):
                """
                usage: cookie = ticketTool.make_ticket(req, username)
                Creates a cookie containing the secure user information
                """ 
 
                ip_address = req.connection.remote_ip
                expires = str(self['TicketExpires'])
                now = str(time.time())
                secret = self.fetch_secret()
                m = md5.new()
                m.update(secret+ip_address+now+expires+username)
                hash = m.hexdigest()

                cookie = Cookie.SimpleCookie()
                cookie["Ticket"] = 
ip_address+","+expires+","+username+","+now+","+hash
                cookie["Ticket"]['path'] = '/'
                cookie["Ticket"]['domain'] = self['TicketDomain']
                cookie["Ticket"]['max-age'] = self['TicketExpires'] * 3600 

                # TODO - is the expires in seconds?  If so, jack this up!
 
                return cookie

 

        def verify_ticket(self,req):
                """
                usage: result, msg, user = ticketTool.verify_ticket(req)
                """

                ticket = None 
                cookie = Cookie.SimpleCookie()

                # could get KeyError in two places.
                # 1. if there are no cookies
                # 2. if there isn't a cookie named 'Ticket'
                try:
                        cookie.load(req.headers_in['Cookie'])
                except KeyError:
                        return 0, "user has no cookies", 'noone'

                try:
                        ticket = cookie['Ticket'].value
                        apache.log_error("Ticket Cookie value:" + 
str(ticket))
                except KeyError:
                        return 0, "user has no ticket cookie", 'noone'


                ip, expires_s, user, timestamp_s, hash = ticket.split(",")
 
                apache.log_error("[Ticket Cookie] hash:" + hash)
                apache.log_error("[Ticket Cookie] user:" + user)
                apache.log_error("[Ticket Cookie] time:" + timestamp_s)
                apache.log_error("[Ticket Cookie] expires:" + expires_s)
                apache.log_error("[Ticket Cookie] ip:" + ip)

                timestamp = float(timestamp_s)
                expires = int(expires_s)

                if ip != req.connection.remote_ip:
                        return 0, "IP address mismatch in ticket", 'noone'

                if time.time() - timestamp / 60 < expires:
                        return 0, "ticket has expired", 'noone'

                secret = self.fetch_secret()

 
                m = md5.new()
                m.update(secret+ip+timestamp_s+expires_s+user)
                new_hash = m.hexdigest()

                if hash != new_hash:
                        self.invalidate_secret()
                        return 0, 'ticket mismatch', 'noone'


                req.user = user
                return 1, 'ok', user
 
 

        def make_return_address(self, req):
                """
                usage: cookie = ticketTool.make_return_address(req)
                """

                protocol = 'http://'
                if req.get_options().has_key('is_ssl'):
                        protocol = 'https://'
 
                request_uri = protocol + req.server.server_hostname + ':' 
+ str(req.server.port) + req.unparsed_uri

                cookie = Cookie.SimpleCookie()
                cookie['request_uri'] = request_uri
                cookie['request_uri']['domain'] = self['TicketDomain']
                cookie['request_uri']['path'] = '/'

                return cookie


# ===========================================================
# ===========================================================
# ===========================================================
# HTTPD.CONF: ==============================================

<Macro CertSecurity>
        PythonAccessHandler TicketAuthenHandler
        PythonCleanupHandler TicketCleanupHandler
        ErrorDocument 403 https://usatux29.cv.usat:22221/ticketMaster
        #ErrorDocument 402 /unauthorized.html
        ErrorDocument 402 /manager?_action=error_doc_unauth
        PythonOption TicketSecret /home/tewpe1/.secretkey

 #==================================================================
        # PythonOption fullyLoadCache ::= no|yes (default is no)
        # This option directs the Authen handler whether to fully load the
        # cache upon child startup or cache refresh
        PythonOption fullyLoadCache yes
 #==================================================================

 #==================================================================
        # PythonOption is_ssl ::= any value you wish
        # only set is_ssl to something if this url is under ssl.  It 
doesn't
        # matter what it's set to, only that it exists.  It is used to 
help
        # construct the redirect_url correctly

        #PythonOption is_ssl yes
 #==================================================================

</Macro>

<Directory "/web/devel/tewpe1/py/apache2/htdocs/secure">
        Use CertSecurity
</Directory>

<Location /ticketMaster>
        SSLRequireSSL
        SSLOptions +StdEnvVars +ExportCertData

        SetHandler python-program
        PythonHandler TicketMaster
        PythonDebug On
        Order allow,deny
        Allow from all
        PythonOption TicketSecret /home/tewpe1/.secretkey

</Location>









"Hancock, David (DHANCOCK)" <DHANCOCK@arinc.com>
Sent by: mod_python-bounces@modpython.org
10/19/2003 12:27 AM

 
        To:     "'mod_python@modpython.org'" <mod_python@modpython.org>
        cc: 
        Subject:        [mod_python] req.connection.user generates AttributeError


I'm new to mod_python, and I'm stuck already.  I'm working through the 
examples in the documentation, and even after careful typing (and cutting 
and pasting from the manual), I can't get the authentication example to 
work.  The line:
        user = req.connection.user 
Gives an attribute error ('user').  As shown in the manual, I'm calling 
req.get_basic_auth_pw() first, but still no joy.
If I try/except to trap the attribute error, I avoid the 500 Server Error 
message, but the authentication still doesn't work.
Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and 
mod_python 3.0.3.  (My other computer is a Linux box, but this is what 
I've got right going right now).  The mod_python is a precompiled binary.
I'll be grateful for any assistance I can get.  I'm trying to recreate a 
mod_perl module (AuthCookie) which implements a ticket-based 
authentication mechanism.  It works well in Perl, but my group 
standardized on Python and we'd like to keep using Python for Apache 
modules, too.
Cheers! 
-- 
David Hancock | dhancock@arinc.com | 410-266-4384 _______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketTool.py
Type: application/octet-stream
Size: 3650 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketTool-0002.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketAuthenHandler.py
Type: application/octet-stream
Size: 8256 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketAuthenHandler-0002.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketMaster.py
Type: application/octet-stream
Size: 4425 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketMaster-0002.obj
From neel at mediapulse.com  Mon Oct 20 10:25:12 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <C0FC22C08B82074A88B50061764157776B976A@johnson.mediapulse.net>

Would it make since to add a function req.get_basic_auth() that returns
a tuple of (username, passwd)?  For backwards compatibility a call to
get_basic_auth_pw() followed by getting the req.user could remain, but:

user, pw = req.get_basic_auth()

might be easier to follow and be gentler on new users

Mike


> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
> Sent: Sunday, October 19, 2003 11:21 PM
> To: Hancock, David (DHANCOCK)
> Cc: 'mod_python@modpython.org'
> Subject: Re: [mod_python] req.user always returns None?
> 
> 
> 
> 
> On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:
> 
> > def authenhandler(req):
> >     user = req.user
> >     pw = req.get_basic_auth_pw()
> >     req.log_error(str(user) + ' ' + str(pw))
> >     if user == "david" and pw == "secret":
> >         return apache.OK
> >     else:
> >         return apache.HTTP_UNAUTHORIZED
> 
> The current docs neglect to mention this because at the time it seemed
> like it was no longer necessary, but the call to get_basic_auth_pw()
> should always _preceed_ the use of req.user. If the swap the first two
> lines, it will work (regardless of position of LoadModule within the
> config file).
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From woodfucius at comcast.net  Mon Oct 20 20:21:31 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] 
	Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
Message-ID: <3F940483.8030702@comcast.net>

I am having some trouble getting mod_python 3.0.3 to compile on my 
system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03. 
Apache version is 2.0.47 and Python version is 2.3.2 - both were built 
from ports.  I know there is a port for mod_python 2.7.8, but I would 
rather run the newest version and anyway the port complains about 
building Python with WITHOUT-THREADS set no matter if I set it or not. 
I have included the output from ./configure and make below.  Any ideas?

woodfucius# ./configure
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr/bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) 
/usr/local/sbin/apxs
found /usr/local/sbin/apxs, we'll use this. Use --with-apxs to specify 
another.
checking Apache version... 2.0.47
checking for Apache libexec directory... /usr/local/libexec/apache2
checking for Apache include directory... -I/usr/local/include/apache2
checking for --with-python... no
checking for python... (cached) /usr/local/bin/python
checking Python version... 2.3
checking Python install prefix... /usr/local
checking for Py_NewInterpreter in -lpython2.3... (cached) no
checking what libraries Python was linked with... 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/local/include/python2.3
updating cache ./config.cache
creating ./config.status
creating Makefile
creating src/Makefile
creating Doc/Makefile
creating test/testconf.py
creating dist/setup.py
creating dist/Makefile
woodfucius# make

Compiling for DSO.

/usr/local/sbin/apxs -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-Wl,--export-dynamic   -pthread -lm 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
mod_python.lo mod_python.c && touch mod_python.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
_apachemodule.lo _apachemodule.c && touch _apachemodule.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3/src.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3.
woodfucius#

From grisha at modpython.org  Mon Oct 20 12:17:13 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] Problems building mod_python 3.0.3 on FreeBSD
 4.8-STABLE
In-Reply-To: <3F940483.8030702@comcast.net>
References: <3F940483.8030702@comcast.net>
Message-ID: <20031020121423.O48570@onyx.ispol.com>



On Mon, 20 Oct 2003, Adam Wood wrote:

> I am having some trouble getting mod_python 3.0.3 to compile on my
> system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03.
> Apache version is 2.0.47 and Python version is 2.3.2 - both were built
> from ports.  I know there is a port for mod_python 2.7.8

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha
From woodfucius at comcast.net  Mon Oct 20 21:56:18 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] 
	SOLVED: Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
In-Reply-To: <20031020121423.O48570@onyx.ispol.com>
References: <3F940483.8030702@comcast.net>
	<20031020121423.O48570@onyx.ispol.com>
Message-ID: <3F941ABA.8060003@comcast.net>

Gregory (Grisha) Trubetskoy wrote:

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha

Thanks Grisha.  I installed Python 2.2.3, used the mod_python3 port, and 
rebuilt Apache with --enable-threads and that solved the problem, guess 
I just needed to RTFM a bit more.  Thanks again!

Adam Wood



From tpc at csua.berkeley.edu  Tue Oct 21 11:12:46 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031021110347.J40781-100000@localhost.name>


hello all, I am trying to index and search mp3s in my Apache document
root.  Whenever executing a database select statement that retrieves
the URL and title (the filename minus the .mp3 extension) of mp3s whose
filenames contain the words I type into a web form, I get a "invalid
literal for float" error message.  The same script works fine on the
command line and in IDLE.  The error messages vary, and I sometimes see
"invalid literal for int" or "invalid literal for long" though now it
seems I just get "invalid literal for float."  Also the error seems to
come and go, and sometimes I get the results I want.  I have gotten this
type of message before when playing around with Python and trying to
convert, say, a string to int, but this has me scratching my head:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>


From tpc at csua.berkeley.edu  Tue Oct 21 11:17:38 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] invalid literal for float addendum
Message-ID: <20031021111643.Y40948-100000@localhost.name>


By the by rpm -q mod_python tells me:
mod_python-3.0.1-3


From neel at mediapulse.com  Tue Oct 21 14:45:49 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>

There's nor really enough info here to see the cause, but it's a MySQLdb
error, not a mod_python error.  Your doesn't show the SQL statement you
are trying to execute, but my guess is that the field in the MySQL table
is defined as a float and your trying to insert a string (the title).
Seeing a few lines of the python module in question would help though.

Mike

> -----Original Message-----
> From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu] 
> Sent: Tuesday, October 21, 2003 2:13 PM
> To: mod_python@modpython.org
> Subject: [mod_python] invalid literal for float
> 
> 
> 
> hello all, I am trying to index and search mp3s in my Apache document
> root.  Whenever executing a database select statement that retrieves
> the URL and title (the filename minus the .mp3 extension) of 
> mp3s whose
> filenames contain the words I type into a web form, I get a "invalid
> literal for float" error message.  The same script works fine on the
> command line and in IDLE.  The error messages vary, and I 
> sometimes see
> "invalid literal for int" or "invalid literal for long" though now it
> seems I just get "invalid literal for float."  Also the error seems to
> come and go, and sometimes I get the results I want.  I have 
> gotten this
> type of message before when playing around with Python and trying to
> convert, say, a string to int, but this has me scratching my head:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> in HandlerDispatch
>     result = object(req)
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
>     results = getMP3SearchResults(terms)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> getMP3SearchResults
>     results = getMatchingURLs(cursor)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> getMatchingURLs
>     cursor.execute(sql)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 95, in
> execute
>     return self._execute(query, args)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 114, in
> _execute
>     self.errorhandler(self, exc, value)
> 
>   File 
> "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> in defaulterrorhandler
>     raise errorclass, errorvalue
> 
> ValueError: invalid literal for float(): <insert any mp3 title here>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From tpc at csua.berkeley.edu  Tue Oct 21 12:06:37 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>
Message-ID: <20031021120144.O41208-100000@localhost.name>

I have attached my code, although I must ask if it was a MySQL error
why does my script work fine on the command line and in IDLE ?  Also, the
script seems to throw an error during a cursor.execute(sql) of a SELECT statement:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

<paste>
#!/usr/bin/env python
"""Created to solve bug that outputs invalid literal for float, int, long.
Simplifies main search script and assumes query will always be one word
long
"""
import MySQLdb

DB = 'test'

def getMP3SearchResults(terms):
	conn = MySQLdb.Connection(db=DB)
	cursor = conn.cursor()
	createTemporaryTable(cursor)
	identifyMatchingURLs(terms, cursor)
	results = getMatchingURLs(cursor)
	cursor.close()
	conn.close()
	return results

def createTemporaryTable(cursor):
	try:
		sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
		      url_id INT NOT NULL,
		      ) TYPE = InnoDB;"""
		cursor.execute(sql)
	except:
		print "Error in creating URLs_WITH_MATCHES table"

def identifyMatchingURLs(terms, cursor):
        sql = """INSERT INTO URLs_WITH_MATCHES
              SELECT DISTINCT WORDS_X_URL.url_id
              FROM WORDS_X_URL
              INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id
              WHERE WORDS.word = '% s' """ % terms
        cursor.execute(sql)

def getMatchingURLs(cursor):
	sql = """SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs
	      WHERE URLs_WITH_MATCHES.url_id = URLs.id
	      GROUP BY URLs_WITH_MATCHES.url_id"""
	cursor.execute(sql)
	results = cursor.fetchall()
	return results

def search(terms):
        results = getMP3SearchResults(terms)
        return results
</paste>

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> There's nor really enough info here to see the cause, but it's a MySQLdb
> error, not a mod_python error.  Your doesn't show the SQL statement you
> are trying to execute, but my guess is that the field in the MySQL table
> is defined as a float and your trying to insert a string (the title).
> Seeing a few lines of the python module in question would help though.
>
> Mike
>
> > -----Original Message-----
> > From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu]
> > Sent: Tuesday, October 21, 2003 2:13 PM
> > To: mod_python@modpython.org
> > Subject: [mod_python] invalid literal for float
> >
> >
> >
> > hello all, I am trying to index and search mp3s in my Apache document
> > root.  Whenever executing a database select statement that retrieves
> > the URL and title (the filename minus the .mp3 extension) of
> > mp3s whose
> > filenames contain the words I type into a web form, I get a "invalid
> > literal for float" error message.  The same script works fine on the
> > command line and in IDLE.  The error messages vary, and I
> > sometimes see
> > "invalid literal for int" or "invalid literal for long" though now it
> > seems I just get "invalid literal for float."  Also the error seems to
> > come and go, and sometimes I get the results I want.  I have
> > gotten this
> > type of message before when playing around with Python and trying to
> > convert, say, a string to int, but this has me scratching my head:
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 194, in handler
> >     result = apply(object, (), args)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From seth at picklematrix.net  Tue Oct 21 12:07:52 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] returning apache code from publisher handler?
Message-ID: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>

Hello,

 From the examples I've seen, the publisher handler expects a string to 
be returned.  I'd like the option to return any arbitrary apache code 
if I need to.  Is this an option or possible?

Thanks very much!
Seth

From neel at mediapulse.com  Tue Oct 21 18:33:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>

> I have attached my code, although I must ask if it was a MySQL error
> why does my script work fine on the command line and in IDLE 
> ?  Also, the
> script seems to throw an error during a cursor.execute(sql) 
> of a SELECT statement:
> 

Your second sentence should answer the first, I doubt mod_python has any
cursor classes =p.  Your best asking this on the mysql lists and/or the
mysqldb list.

Nothing looks odd at a glance, I'd check over my table structures and
data, then fire off the question to one of the above places.

Mike

From grisha at modpython.org  Tue Oct 21 23:23:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] returning apache code from publisher handler?
In-Reply-To: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
References: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
Message-ID: <20031021232220.V80359@onyx.ispol.com>


Yes, you can

raise apache.SERVER_RETURN, apache.OK

or

raise apache.SERVER_RETURN, apache.DECLINED

etc.

On Tue, 21 Oct 2003, Seth Ladd wrote:

> Hello,
>
>  From the examples I've seen, the publisher handler expects a string to
> be returned.  I'd like the option to return any arbitrary apache code
> if I need to.  Is this an option or possible?
>
> Thanks very much!
> Seth
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Wed Oct 22 10:21:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>
Message-ID: <20031022100911.F48998-100000@localhost.name>


hi Michael, I guess I will lookup MySQLdb support but the statements work
just fine in MySQL shell, and in php, and in python executed from the
command line and in IDLE, both of which have import MySQLdb.  I went to
this list first because the error message begins with:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)
</paste>

but ends with:

<paste>
 File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue
</paste>

Here's hoping MySQLdb support won't say it's a mod_python problem ;-)

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE
> > ?  Also, the
> > script seems to throw an error during a cursor.execute(sql)
> > of a SELECT statement:
> >
>
> Your second sentence should answer the first, I doubt mod_python has any
> cursor classes =p.  Your best asking this on the mysql lists and/or the
> mysqldb list.
>
> Nothing looks odd at a glance, I'd check over my table structures and
> data, then fire off the question to one of the above places.
>
> Mike
>

From tpc at csua.berkeley.edu  Wed Oct 22 10:26:53 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031022102616.K48998-100000@localhost.name>

this reply didn't get forwarded to the list

---------- Forwarded message ----------
Date: Wed, 22 Oct 2003 10:08:40 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: "caffeine@tuxfamily.org" <caffeine@tuxfamily.org>
Subject: Re: [mod_python] invalid literal for float


hi caffeine, I have tested my MySQL statements in PHP and in MySQL
shell with no error.  The MySQL select statement actually comes from a
working PHP script that I rewrote for use with Python.  I executed the
following in the MySQL shell:

CREATE TEMPORARY TABLE URLs_WITH_MATCHES ( url_id INT NOT NULL ) TYPE =
InnoDB;

INSERT INTO URLs_WITH_MATCHES SELECT DISTINCT WORDS_X_URL.url_id FROM
WORDS_X_URL INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id WHERE
WORDS.word = 'anyword'

SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs WHERE
URLs_WITH_MATCHES.url_id = URLs.id GROUP BY URLs_WITH_MATCHES.url_id;

drop table URLs_WITH_MATCHES;

with no problem.  Note to those trying this at home, whenever you create a
temporary table and try to SHOW TABLES you can never see the darn thing
(as of MySQL 4.0.14).  But as long as your MySQL shell is alive you can
access a temporary table.

On Wed, 22 Oct 2003, caffeine@tuxfamily.org wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
>
> On Mardi 21 Octobre 2003 19:06, tpc@csua.berkeley.edu wrote:
> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE ?  Also,
> > the script seems to throw an error during a cursor.execute(sql) of a
> > SELECT statement:
>
> Have you tried your SQL statements on the MySQL command line client ?
> I'd suggest you double-check your tables structure and data, then track
> exactly where is the problem (modpython, python mysql bindings, mysql
> itself...)
>
> Dunno if this is related to your problem, I had once MySQL firing all
> sorts of weird errors. We tracked it down to /var being full, we
> cleaned the partition and everything was back as normal.
>
> my 2 cents,
> sylvain
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.2 (GNU/Linux)
>
> iD8DBQE/ll7NK/qAVOpQGPYRAjYPAJ9faZH/I23okt6nhsNjyMFQVuDgQwCeNO12
> E9f0VrPQ5kBZLAJZGXTugQw=
> =/45O
> -----END PGP SIGNATURE-----
>
>


From conrad at hep.caltech.edu  Wed Oct 22 11:56:13 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] 3.1.1b Feedback
Message-ID: <1066848973.2812.75.camel@heppc22>

Hi Grisha

Since I was one of the complainers about the session locks in 3.1.0a,
I'm happy to confirm that 3.1.1b now works for me. Thanks!

The server startup log is given below. I don't actually use the
mod_python sessions, so for me it would still be useful to be able to
turn that feature off. But that is just a minor footnote :-)

--

I noticed another surprising behaviour relating to the PythonImport and
PythonPath directives (not new with 3.1.1b though):

For a Directory directive in the main httpd.conf file e.g.

<Directory /usr/mypath/>
       SetHandler python-program
       AddHandler python-program .py
       PythonInterpPerDirective On
       PythonHandler myhandler
       DirectoryIndex myhandler.py
       PythonInterpPerDirectory On

# Name of the interpreter
       PythonInterpreter default_interp
       PythonPath "sys.path+['/usr/mypath']"
</Directory>
# Init for the 'default' server
PythonImport server_init default_interp

The PythonImport directive loads the file /usr/mypath/server-init.py
into the default_interp interpreter. If the PythonPath directive is
omitted, this import fails. 

Cheers

Conrad




[Wed Oct 22 11:41:00 2003] [notice] mod_python: Creating 150 session
mutexes based on 150 max processes and 0 max threads.
[Wed Oct 22 11:41:00 2003] [error] (28)No space left on device:
mod_python: Failed to create global mutex 125 of 150
(/tmp/mpmtx4571125).
[Wed Oct 22 11:41:00 2003] [error] mod_python: We can probably continue,
but with diminished ability to process session locks.
[Wed Oct 22 11:41:00 2003] [error] mod_python: Hint: On Linux, the
problem may be the number of available semaphores, check 'sysctl
kernel.sem'
[Wed Oct 22 11:41:00 2003] [notice] Apache/2.0.47 (Unix) mod_ssl/2.0.47
OpenSSL/0.9.7b mod_python/3.1.1b Python/2.2.3 configured -- resuming
normal operations

-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From olivier at phgroup.com  Wed Oct 22 23:19:11 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] no more 3.1.1 ? 
Message-ID: <3F97025F.8090308@phgroup.com>

hi all,

I've read some posts about testing the 3.1.1 version of mod_python, but 
I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .

any ideas on where is it hidden ??
regards !


-- 
Olivier Migeon


From grisha at modpython.org  Wed Oct 22 20:22:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] no more 3.1.1 ? 
In-Reply-To: <3F97025F.8090308@phgroup.com>
References: <3F97025F.8090308@phgroup.com>
Message-ID: <20031022202152.L96424@onyx.ispol.com>


On Wed, 22 Oct 2003, Olivier Migeon wrote:

> hi all,
>
> I've read some posts about testing the 3.1.1 version of mod_python, but
> I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .
>
> any ideas on where is it hidden ??

in CVS :-)

Grisha
From scott_list at mischko.com  Wed Oct 22 19:20:04 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
Message-ID: <200310221920.04706.scott_list@mischko.com>

Hi all!

Draco relies on the req.server.my_generation for some of it's functionality.  
It appears that this is no longer included in mod_python3.1.1b?  Draco 
(0.99.4) is always getting an AttributeError when it accesses this.

I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.

Any ideas on this?  Is this actually gone from MP or am I missing something?

Scott
From grisha at modpython.org  Wed Oct 22 23:07:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310221920.04706.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
Message-ID: <20031022230636.R96424@onyx.ispol.com>


Heh - it appears to have been lost along the way :-)

I added it back in.

Grisha

On Wed, 22 Oct 2003, Scott Chapman wrote:

> Hi all!
>
> Draco relies on the req.server.my_generation for some of it's functionality.
> It appears that this is no longer included in mod_python3.1.1b?  Draco
> (0.99.4) is always getting an AttributeError when it accesses this.
>
> I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
>
> Any ideas on this?  Is this actually gone from MP or am I missing something?
>
> Scott
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Wed Oct 22 20:36:06 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031022230636.R96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
Message-ID: <200310222036.06088.scott_list@mischko.com>

The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I 
assume you added that patch in also?

Scott

On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> Heh - it appears to have been lost along the way :-)
>
> I added it back in.
>
> Grisha
>
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > Hi all!
> >
> > Draco relies on the req.server.my_generation for some of it's
> > functionality. It appears that this is no longer included in
> > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > when it accesses this.
> >
> > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> >
> > Any ideas on this?  Is this actually gone from MP or am I missing
> > something?
> >
> > Scott
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

From scott_list at mischko.com  Wed Oct 22 20:59:53 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] 
	restart_time is missing from the CVS checkout I just did.
Message-ID: <200310222059.53716.scott_list@mischko.com>

I just checked out CVS mod_python 3.1.2b and restart_time is missing from the 
server object.

Scott
From grisha at modpython.org  Thu Oct 23 09:26:35 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:28 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310222036.06088.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
	<200310222036.06088.scott_list@mischko.com>
Message-ID: <20031023092544.J96424@onyx.ispol.com>



On Wed, 22 Oct 2003, Scott Chapman wrote:

> The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I
> assume you added that patch in also?

If it's something other than my_generation, I don't know what the nature
of the patch is. If you find info on it, let me know.

Grisha

>
> Scott
>
> On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > Heh - it appears to have been lost along the way :-)
> >
> > I added it back in.
> >
> > Grisha
> >
> > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > Hi all!
> > >
> > > Draco relies on the req.server.my_generation for some of it's
> > > functionality. It appears that this is no longer included in
> > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > when it accesses this.
> > >
> > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > >
> > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > something?
> > >
> > > Scott
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Thu Oct 23 07:26:18 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031023092544.J96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<200310222036.06088.scott_list@mischko.com>
	<20031023092544.J96424@onyx.ispol.com>
Message-ID: <200310230726.18897.scott_list@mischko.com>

That's fixed.   It wasmy_generation.

Looks like you got my email on restart_time also.  Is there a test suite for 
mod_python that goes through and checks all the objects to make sure they 
still have all their normal attributes?

Thanks for the quick responses.  Draco's happy again!

Scott

On Thursday 23 October 2003 06:26, Gregory (Grisha) Trubetskoy wrote:
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > The Draco author mentioned a patch needed back in the 2.7.8 days of MP. 
> > I assume you added that patch in also?
>
> If it's something other than my_generation, I don't know what the nature
> of the patch is. If you find info on it, let me know.
>
> Grisha
>
> > Scott
> >
> > On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > > Heh - it appears to have been lost along the way :-)
> > >
> > > I added it back in.
> > >
> > > Grisha
> > >
> > > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > > Hi all!
> > > >
> > > > Draco relies on the req.server.my_generation for some of it's
> > > > functionality. It appears that this is no longer included in
> > > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > > when it accesses this.
> > > >
> > > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > > >
> > > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > > something?
> > > >
> > > > Scott
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python

From mikeklein at sbcglobal.net  Sat Oct 25 15:52:37 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] 
 Beginner question re: getting form data and key errors when var not
 defined
Message-ID: <3F9AFEB5.3090508@sbcglobal.net>

Why am I getting key errors when merely attempting to get <possible> 
form data from a mod_python request...ala:

author = req.form['author']

I get the following:

    raise KeyError, key

KeyError: subject

I do kind of expect certain form fields to possibly not have 
values...why the explicit error? Can't I just check for null or 
uninitialized in my code?

thanks,

mike

From michael at dynamine.net  Sat Oct 25 16:32:29 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9AFEB5.3090508@sbcglobal.net>
References: <3F9AFEB5.3090508@sbcglobal.net>
Message-ID: <3F9B080D.1020904@dynamine.net>

This is a really a Python language question, not a mod_python question 
per se.

You have several options, including:

if req.form.has_key('author'):
   author = req.form['author']
else:
   author = None

Or:

try:
   author = req.form['author']
except KeyError:
   author = None

See section 2.2.7 ("Mapping Types") in the Python Library Reference for 
details.

--Michael

Mike Klein wrote:

> Why am I getting key errors when merely attempting to get <possible> 
> form data from a mod_python request...ala:
> 
> author = req.form['author']
> 
> I get the following:
> 
>    raise KeyError, key
> 
> KeyError: subject
> 
> I do kind of expect certain form fields to possibly not have 
> values...why the explicit error? Can't I just check for null or 
> uninitialized in my code?
> 
> thanks,
> 
> mike
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From twa at post.com  Sun Oct 26 09:28:34 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
Message-ID: <3F9B93C2.6040908@post.com>

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.  
27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so                                                     
174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


From sgillies at frii.com  Sun Oct 26 08:58:07 2003
From: sgillies at frii.com (Sean Gillies)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>

On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:

> I am trying to run mod_python.
>
> My setup is:
>
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47
> Windows XP Home edition 2002 Service Pack 1
>
> I installed python, then apache and then mod_python.  I have made no 
> changes to apache (other than to httpd.conf) or mod_python.
>
> Apache ran ok before the install of mod_python.
>
> When trying to run up apache with the example python code I get:
>
>    Syntax error on line 173 of C:/Program Files/Apache 
> Group/Apache2/conf/httpd.conf:
>    Cannot load C:/Program Files/Apache 
> Group/Apache2/modules/mod_python.so into server: The specified module 
> could not be found.
>    Note the errors or messages above, and press the <ESC> key to exit. 
>  27...
>
> That part of httpd.conf looks like this:
>
> 165 LoadModule setenvif_module modules/mod_setenvif.so
> 166 #LoadModule speling_module modules/mod_speling.so
> 167 #LoadModule status_module modules/mod_status.so
> 168 #LoadModule unique_id_module modules/mod_unique_id.so
> 169 LoadModule userdir_module modules/mod_userdir.so
> 170 #LoadModule usertrack_module modules/mod_usertrack.so
> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
> 172 #LoadModule ssl_module modules/mod_ssl.so
> 173 LoadModule python_module modules/mod_python.so                     
>                                 174
> 175 #
> 176 # ExtendedStatus controls whether Apache will generate "full" 
> status
> 177 # information (ExtendedStatus On) or just basic information 
> (ExtendedStatus
> 178 # Off) when the "server-status" handler is called. The default is 
> Off.
> 179 #
> 180 #ExtendedStatus On
>
> As usual I expect I have missed something glaringly obvious, I just 
> don't know what right now.
>
> Any help or pointers much appreciated.
>
> Thanks.
>
> Tom
>

Tom,

I don't use windows these days, but shouldn't the mod_python module for 
Win32
be a DLL rather than a SO?  You didn't mention if you checked in
C:/Program Files/Apache Group/Apache2/modules/ to see if the module was 
there.
Check the directory and use the mod_python library you find.

cheers,
Sean
--
Sean Gillies
sgillies at frii dot com
http://www.frii.com/~sgillies

From cs1spw at bath.ac.uk  Sun Oct 26 12:53:03 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
References: <3F9B93C2.6040908@post.com>
Message-ID: <3F9C180F.6070305@bath.ac.uk>

Tom Ayerst wrote:

> I am trying to run mod_python.
> 
> My setup is:
> 
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47

mod_python currently requires Python 2.2 - it doesn't yet work with 
Python 2.3.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 18:56:44 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
References: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
Message-ID: <3F9C18EC.8040004@post.com>

Sorry, I should have mentioned that.  mod_python.so is in the modules 
directory.  All the other modules are called *.so so I assumed that that 
is the Apache approach (its not standard but I think you can do that in 
Windows).

Cheers

Tom

Sean Gillies wrote:

> On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:
>
>> I am trying to run mod_python.
>>
>> My setup is:
>>
>> mod_python version  3.0.3
>> python 2.3.2
>> Apache 2.0.47
>> Windows XP Home edition 2002 Service Pack 1
>>
>> I installed python, then apache and then mod_python.  I have made no 
>> changes to apache (other than to httpd.conf) or mod_python.
>>
>> Apache ran ok before the install of mod_python.
>>
>> When trying to run up apache with the example python code I get:
>>
>>    Syntax error on line 173 of C:/Program Files/Apache 
>> Group/Apache2/conf/httpd.conf:
>>    Cannot load C:/Program Files/Apache 
>> Group/Apache2/modules/mod_python.so into server: The specified module 
>> could not be found.
>>    Note the errors or messages above, and press the <ESC> key to 
>> exit.  27...
>>
>> That part of httpd.conf looks like this:
>>
>> 165 LoadModule setenvif_module modules/mod_setenvif.so
>> 166 #LoadModule speling_module modules/mod_speling.so
>> 167 #LoadModule status_module modules/mod_status.so
>> 168 #LoadModule unique_id_module modules/mod_unique_id.so
>> 169 LoadModule userdir_module modules/mod_userdir.so
>> 170 #LoadModule usertrack_module modules/mod_usertrack.so
>> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
>> 172 #LoadModule ssl_module modules/mod_ssl.so
>> 173 LoadModule python_module 
>> modules/mod_python.so                     
>>                                 174
>> 175 #
>> 176 # ExtendedStatus controls whether Apache will generate "full" status
>> 177 # information (ExtendedStatus On) or just basic information 
>> (ExtendedStatus
>> 178 # Off) when the "server-status" handler is called. The default is 
>> Off.
>> 179 #
>> 180 #ExtendedStatus On
>>
>> As usual I expect I have missed something glaringly obvious, I just 
>> don't know what right now.
>>
>> Any help or pointers much appreciated.
>>
>> Thanks.
>>
>> Tom
>>
>
> Tom,
>
> I don't use windows these days, but shouldn't the mod_python module 
> for Win32
> be a DLL rather than a SO?  You didn't mention if you checked in
> C:/Program Files/Apache Group/Apache2/modules/ to see if the module 
> was there.
> Check the directory and use the mod_python library you find.
>
> cheers,
> Sean
> -- 
> Sean Gillies
> sgillies at frii dot com
> http://www.frii.com/~sgillies
>
>


From rclilly at cox.net  Sun Oct 26 11:19:09 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9C18EC.8040004@post.com>
Message-ID: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>

>
> Sorry, I should have mentioned that.  mod_python.so is in the modules
> directory.  All the other modules are called *.so so I assumed that that
> is the Apache approach (its not standard but I think you can do that in
> Windows).
>
> >
> > I don't use windows these days, but shouldn't the mod_python module
> > for Win32
> > be a DLL rather than a SO?  You didn't mention if you checked in
> > C:/Program Files/Apache Group/Apache2/modules/ to see if the module
> > was there.
> > Check the directory and use the mod_python library you find.

mod_python.so is a dll, it's just named after the Apache convention. The
other response you got from Simon Willison letting you know that current
release version of mod_python does not yet work with Python 2.3 is the
relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
open mod_python.so and replace all references to python22.dll with
python23.dll. I've been running with the latter solution for almost two
weeks now and haven't noticed any problems.

HTH,

Robert Lilly

From rclilly at cox.net  Sun Oct 26 11:30:45 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] 
	Best place to start learning both mod_python and Python
Message-ID: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>

I've been using mod_python to enable applications written by others to work
under Apache. I've decided to expand my programming skills and it looks like
Python is the best language to start with. I currently only know how to
program with Visual Basic 6, and VBA. My specialty has been custom financial
applications using MS Excel and VBA.

So, to someone who is new to both to mod_python and to the Python
programming language, and whose only background is Visual Basic, what are
your recommendations on how and where to get started. I am primarily
interested in developing web applications at the moment, which is why I've
included mod_python in my learning agenda.

Also, is using mod_python the only way to use Python under Apache? If not,
although this is a mod_python list, I would appreciate knowing what the
various options are.

Thanks!

Robert Lilly

From mike_verdone at shaw.ca  Sun Oct 26 14:07:57 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 22:00:29 2004
Subject: =?iso-8859-1?q?=5Bmod=5Fpython=5D=09Best=20place=20to=20start=20learning?=
 =?iso-8859-1?q?=20both=20mod=5Fpython=20and?= Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <200310261407.57694.mike_verdone@shaw.ca>

Hi!

For learning Python, your best bet is to start with the tutorials at 
www.python.org.

http://www.python.org/doc/2.3.2/tut/tut.html

You will probably already know the concepts explained in the tutorial, but 
it's a good way to learn Python's syntax. The documentation on python.org 
also includes the library reference, which is good to have. Another good way 
to get help on the libraries is from the Python interpreter. If you run the 
python interpreter and type help(), you will be in the help menu. Then, type 
a module name and you will get documentation on that module.

Documentation on mod_python is available at www.modpython.org. Read the FAQ 
and the Docs.

There are a few ways to interface Python and Apache, but mod_python is the 
best. (In my opinion as a member of the mod_python mailing list ;-) ). 
Another way to do it is by using regular CGI, where each .py file is 
basically a script that is run externally by Apache. This has much lower 
performance, and doesn't make it easier to develop, so I'd stay away. There 
was also a module named mod_snake that supposedly had better performance than 
mod_python, but I don't think it's supported anymore. Finally, there's Zope, 
which is an enterprise server based on Python. Haven't really used it, but 
it's supposed to be good. www.zope.org.

Hope that helps!

Mike.


On October 26, 2003 12:30, Robert Lilly wrote:
> I've been using mod_python to enable applications written by others to work
> under Apache. I've decided to expand my programming skills and it looks
> like Python is the best language to start with. I currently only know how
> to program with Visual Basic 6, and VBA. My specialty has been custom
> financial applications using MS Excel and VBA.
>
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started. I am primarily
> interested in developing web applications at the moment, which is why I've
> included mod_python in my learning agenda.
>
> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.
>
> Thanks!
>
> Robert Lilly
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 12:28:59 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <200310261407.57694.mike_verdone@shaw.ca>
Message-ID: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>

> Hi!
>
> For learning Python, your best bet is to start with the tutorials at
> www.python.org.
>
> http://www.python.org/doc/2.3.2/tut/tut.html
>
> You will probably already know the concepts explained in the
> tutorial, but
> it's a good way to learn Python's syntax. The documentation on python.org
> also includes the library reference, which is good to have.
> Another good way
> to get help on the libraries is from the Python interpreter. If
> you run the
> python interpreter and type help(), you will be in the help menu.
> Then, type
> a module name and you will get documentation on that module.
>
> Documentation on mod_python is available at www.modpython.org.
> Read the FAQ
> and the Docs.
>
> There are a few ways to interface Python and Apache, but
> mod_python is the
> best. (In my opinion as a member of the mod_python mailing list ;-) ).
> Another way to do it is by using regular CGI, where each .py file is
> basically a script that is run externally by Apache. This has much lower
> performance, and doesn't make it easier to develop, so I'd stay
> away. There
> was also a module named mod_snake that supposedly had better
> performance than
> mod_python, but I don't think it's supported anymore. Finally,
> there's Zope,
> which is an enterprise server based on Python. Haven't really
> used it, but
> it's supposed to be good. www.zope.org.
>
> Hope that helps!
>
> Mike.

Thanks for the quick response Mike. I especially appreciate the information
about using the Python interpreter as I was not aware of that capability.

I agree with you regarding staying away from CGI. I intend to do this
whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
what I see, it's way overkill for my needs.

Thanks,

Robert

From matt at pollenation.net  Sun Oct 26 21:21:28 2003
From: matt at pollenation.net (Matt Goodall)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
Message-ID: <3F9C3AD8.4080303@pollenation.net>

Robert Lilly wrote:

>>Hi!
>>
>>    
>>
[snip]

>>There are a few ways to interface Python and Apache, but
>>mod_python is the
>>best. (In my opinion as a member of the mod_python mailing list ;-) ).
>>Another way to do it is by using regular CGI, where each .py file is
>>basically a script that is run externally by Apache. This has much lower
>>performance, and doesn't make it easier to develop, so I'd stay
>>away. There
>>was also a module named mod_snake that supposedly had better
>>performance than
>>mod_python, but I don't think it's supported anymore. Finally,
>>there's Zope,
>>which is an enterprise server based on Python. Haven't really
>>used it, but
>>it's supposed to be good. www.zope.org.
>>    
>>
>Thanks for the quick response Mike. I especially appreciate the information
>about using the Python interpreter as I was not aware of that capability.
>  
>
The interpreter is a fantastic tool for testing out ideas, you'll use it 
a lot. Also worth a mention is IPython (http://ipython.scipy.org/) which 
aims to be a better Python shell. It's got some great features for 
inspecting objects, getting help, looking at source code etc.

>I agree with you regarding staying away from CGI. I intend to do this
>whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
>what I see, it's way overkill for my needs.
>  
>
Traditional CGI is slow but SCGI 
(http://www.mems-exchange.org/software/scgi/) and FastCGI 
(http://www.fastcgi.com/) are Apache modules that provide a CGI-like 
interface to long-running Python applications. I find SCGI particularly 
useful during development as there is no need to restart Apache to 
reload an application - just Ctrl-C your application and start it again.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt@pollenation.net


From cs1spw at bath.ac.uk  Sun Oct 26 16:47:24 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] 	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <3F9C4EFC.3070107@bath.ac.uk>

Robert Lilly wrote:
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started.

If you already know how to program, Dive Into Python should be an 
essential stop on your tour of the Python universe. It's a free online 
book that teaches Python programming (including a lot of useful stuff on 
Python style) to people who already understand what if/then/else and for 
loops are:

http://diveintopython.org/

There's also a thriving Python weblog scene. A great index for this is 
the Python Programmer Weblogs page, which lists Python blogs and shows 
recent entries from them as well:

http://mechanicalcat.net/pyblagg.html

And finally some self promotion :) You might find the Python category on 
my own blog of some use:

http://simon.incutio.com/categories/python/

> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.

CGI always gets a bad rap for performance, but I don't think this is 
entirely deserved. Recently I've written a couple of applications that 
feature an admin panel powered by Python CGI that generates static HTML 
pages for public consumption. Performance on an admin panel that only 
gets accessed by one person at a time is fine with CGI. That said, I 
wouldn't want to run a full dynamic site from it.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 23:06:51 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
Message-ID: <3F9C538B.6050304@post.com>

Thanks Robert,

It all runs up now.  (Now I just have to get the app working !)

Tom

Robert Lilly wrote:

>>Sorry, I should have mentioned that.  mod_python.so is in the modules
>>directory.  All the other modules are called *.so so I assumed that that
>>is the Apache approach (its not standard but I think you can do that in
>>Windows).
>>
>>    
>>
>>>I don't use windows these days, but shouldn't the mod_python module
>>>for Win32
>>>be a DLL rather than a SO?  You didn't mention if you checked in
>>>C:/Program Files/Apache Group/Apache2/modules/ to see if the module
>>>was there.
>>>Check the directory and use the mod_python library you find.
>>>      
>>>
>
>mod_python.so is a dll, it's just named after the Apache convention. The
>other response you got from Simon Willison letting you know that current
>release version of mod_python does not yet work with Python 2.3 is the
>relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
>(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
>open mod_python.so and replace all references to python22.dll with
>python23.dll. I've been running with the latter solution for almost two
>weeks now and haven't noticed any problems.
>
>HTH,
>
>Robert Lilly
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From andre at burgaud.com  Sun Oct 26 21:43:30 2003
From: andre at burgaud.com (Andre Burgaud)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <000001c39c3c$7d8a91f0$6601a8c0@minnesota>



Hi Tom,

I faced the same situation recently and this has been also discussed in
the mod_python list. As a temporary solution, try with Python 2.2 and
this should work fine.

Andre


http://www.burgaud.com


-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Tom Ayerst
Sent: Sunday, October 26, 2003 3:29 AM
To: mod_python@modpython.org
Subject: [mod_python] Newbie problem running mod_python

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.

27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so

174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is
Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 21:50:30 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <200310270039.05867.gwidion@mpc.com.br>
Message-ID: <AMEDJPACLBJGECKBDAOKIELKCCAA.rclilly@cox.net>

> -----Original Message-----
> From: Joao S. O. Bueno [mailto:gwidion@mpc.com.br]
> Sent: Sunday, October 26, 2003 06:39 PM
> To: Robert Lilly
> Subject: Re: [mod_python] Newbie problem running mod_python
>
>
> On Sunday 26 October 2003 5:19 pm, Robert Lilly wrote:
>
> > mod_python.so is a dll, it's just named after the Apache
> > convention. The other response you got from Simon Willison letting
> > you know that current release version of mod_python does not yet
> > work with Python 2.3 is the relevant one. There are workarounds -
> > 1) revert to using Python 2.2, or 2) (courtesy of Gustavo Cordova
> > Avila) using either a text or a binary editor, open mod_python.so
> > and replace all references to python22.dll with python23.dll. I've
> > been running with the latter solution for almost two weeks now and
> > haven't noticed any problems.
>
> Hmm..would it not be cleaner to c:>copy python22.dll python23.dll  ?

I thought about doing that, but then other applications needing to use
python23.dll will be getting python22.dll, which I am sure will cause
problems. Making the modification within mod_python.so assures that it is
the only application affected.

Another solution that is working for me is to have both Python 2.2 and 2.3
on the same machine, into separate folders of course. During installation
most apps look in the registry and choose the version it needs. In many
cases it says it will work with either. In those cases I tell it to use 2.3.
There are some apps, however, that will only work with one or the other, but
not both. On this particular system I am running mod_python.so without
modification. When I installed mod_python, it automatically configured
itself in the Lib/site-packages folder of 2.2. I cannot see any difference
in stability or performance between this setup and the one where I modified
mod_python.so.

Robert Lilly

From stian at soiland.no  Mon Oct 27 09:30:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] 
	mod_python 3.1.1b and sessions: Failed to acquire global mutex lock
Message-ID: <20031027083048.GA30427@itea.ntnu.no>

I've just downloaded and installed the 3.1.1b from
http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
tested it with these two webservers:
   
   Redhat 9 - httpd-2.0.40-21.5
   Debian unstable - apache2-mpm-prefork 2.0.47-1

There seems to be some mutex permission problems:

    from mod_python.Session import Session
    def test(req):
        session = Session(req)
        doc = "<html><body><h1>hello</h1>Counts: %s</body></html>"
        counter = session.setdefault('count', 0)
        doc %= counter
        return doc

Yields on both servers:


[Mon Oct 27 08:54:12 2003] [notice] mod_python: Creating 32 session mutexes
    based on 150 max processes and 0 max threads.

(seems OK)

[Mon Oct 27 08:54:14 2003] [warn] (13)Permission denied: Failed to acquire
    global mutex lock at index 24
(.. traceback)
[Mon Oct 27 08:54:14 2003] [error] [client 129.241.56.39] PythonHandler
    mod_python.publisher: ValueError: Failed to acquire global mutex lock


Now, I can't find anything useful on mr. Google searching for this,
except some listing of a very similar bug that occured with mod_ssl.

The problem then was that the mutex was created by root - and
permissions never fixed so the httpd process could access it. Could it
be anything similar?

Any suggestions? (I'm really eager to test out 3.1.1b.. =) )


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Mon Oct 27 09:41:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] 
	Re: mod_python 3.1.1b and sessions: Failed to acquire global mutex
	lock
In-Reply-To: <20031027083048.GA30427@itea.ntnu.no>
References: <20031027083048.GA30427@itea.ntnu.no>
Message-ID: <20031027084148.GB30427@itea.ntnu.no>

On 2003-10-27 09:30:48, Stian S?iland wrote:

> I've just downloaded and installed the 3.1.1b from
> http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
> tested it with these two webservers:

The same problem seems to exist with 3.1.0a - although 3.1.0 of course
needed something like this to be able to start..:

sysctl -w kernel.sem="256 32000 64  256"

Is it only me? =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From gdamjan at mail.net.mk  Mon Oct 27 14:14:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python]  Beginner question re: getting form data and key
	errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <20031027131404.GA20746@legolas.on.net.mk>

> This is a really a Python language question, not a mod_python question 
> per se.
> 
> You have several options, including:
> 
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
> 
> Or:
> 
> try:
>   author = req.form['author']
> except KeyError:
>   author = None

or
    req.form.get('author', None)

this if req.form is a standard Python dictionary



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From nilsgri at idi.ntnu.no  Mon Oct 27 14:56:58 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] instablility in mod_python or apache
Message-ID: <20031027135658.GA20134@bergljot.dyndns.org>

hi!

i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
and have some stability problems.

i have made a simple web-page that uses mod_python.publisher. in
apache2.conf:

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

when i'm reloading the page, it seams random whether it will load
properly or crash with 

"Not Found

The requested URL /~nilsgri/test.py was not found on this server."

i would guess it has something to do with caching, as when i restart
apache2, sometimes the it works every other or so time i reload the
page, and sometimes it works every time, and sometimes never.


i have tried to track down where these errors occur, and have found that
exeptions are thrown at the following locations:

mod_python.publisher: 
    resolve_object()
        the line "obj = getattr(obj, obj_str)" throws AttributeError
        sometimes. 
        
        in this case: 
            module_name=test, 
            config={'PythonDebug': '1'},
            path=['/home/nilsgri/public_html']
        which seems right

mod_python.publisher:
    import_module()
        "if (not file or path and not
                filter(lambda a: os.path.dirname(file).find(a) == 0,
                path)):" hits sometimes

what could be wrong?

is there any way of turning of caching of python modules?


i use the apache2 worker thread module, and i have also tried prefork. i
have not tried perchild or threadpool. should i?


klem fra nils

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <20031027101045.E26862@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy

From gustavo.cordova at q-voz.com  Mon Oct 27 10:32:52 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <3F9D48B4.9090202@q-voz.com>

Also, you can:

    author = req.form.get("author")

and if the "author" key is not present, the correct default value to 
return is None; at least that's the way it works with dictionaries.

-gustavo

Michael S. Fischer wrote:

> This is a really a Python language question, not a mod_python question 
> per se.
>
> You have several options, including:
>
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
>
> Or:
>
> try:
>   author = req.form['author']
> except KeyError:
>   author = None
>
> See section 2.2.7 ("Mapping Types") in the Python Library Reference 
> for details.
>
> --Michael
>
> Mike Klein wrote:
>
>> Why am I getting key errors when merely attempting to get <possible> 
>> form data from a mod_python request...ala:
>>
>> author = req.form['author']
>>
>> I get the following:
>>
>>    raise KeyError, key
>>
>> KeyError: subject
>>
>> I do kind of expect certain form fields to possibly not have 
>> values...why the explicit error? Can't I just check for null or 
>> uninitialized in my code?
>>
>> thanks,
>>
>> mike
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From tpc at csua.berkeley.edu  Mon Oct 27 11:20:10 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] invalid literal for float int or long solved !
Message-ID: <20031027111252.H91970-100000@localhost.name>


fingers crossed, here's hoping the bug doesn't rear its creepy head again,
can't really say wherefore the bug but I found a workaround, I changed the
basic MySQL statement below:

SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
URLs_WITH_MATCHES.url_id;

to:

SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
URLs_WITH_MATCHES.url_id;

and voila !  I am a complete idiot.

From grisha at modpython.org  Mon Oct 27 14:45:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027111252.H91970-100000@localhost.name>
References: <20031027111252.H91970-100000@localhost.name>
Message-ID: <20031027144335.Q39378@onyx.ispol.com>


The first one is "url, title", the second is "title, url" - was that the
problem, or was it the WHERE instead of INNER JOIN (which are same thing
IIRC).

Grisha


On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:

>
> fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> can't really say wherefore the bug but I found a workaround, I changed the
> basic MySQL statement below:
>
> SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> to:
>
> SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> and voila !  I am a complete idiot.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Mon Oct 27 12:26:39 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027121656.P92516-100000@localhost.name>


hi Grisha, I switched url, title before, and got the invalid literal
error.  I am not sure why since the return values are exactly the
same, but it seems like the "FROM URLs, URLs_WITH_MATCHES WHERE" was
causing problems, though I am not sure for which module, mod_python or
MySQLdb or both or maybe neither.  I am still testing and hoping the bug
doesn't all of a sudden appear.

On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From tpc at csua.berkeley.edu  Mon Oct 27 12:53:45 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027124550.E92775-100000@localhost.name>


ok I take that back.  I just switched it again as per your suggestion and
I now see that "url, title" gives me invalid literal errors whereas
"title, url" does not, even for the old SELECT statement.  This perplexes
me, as I know at least once I saw:

ValueError: invalid literal for float(): <insert any mp3 URL here>

However, I now make sure to <shift> RELOAD to make sure memory cache is
cleared, so you may be on to something.


On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jbi130 at yahoo.com  Mon Oct 27 15:12:05 2003
From: jbi130 at yahoo.com (jbi130@yahoo.com)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Persistent socket connection.
Message-ID: <871xsye66y.fsf@syn.codemonkey.net>

Upon creation of a new "session" I want to open a socket to a remote 
server and be able to access this socket throughout the users session 
until he logs our or the session is timed out. 
 
Is there any way to do this?  I've been looking at twisted but would 
prefer a more traditional approach, maybe using mod_python. 
 
I guess the challenge is how do I keep this socket descriptor alive 
between browser requests. 
 
Any somewhat standard facilities to do this in mod_python? 
 
Thanks. 

From nilsgri at idi.ntnu.no  Mon Oct 27 22:48:46 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] instablility in mod_python or apache
In-Reply-To: <1067289858.3336.2.camel@heppc22>
References: <20031027135658.GA20134@bergljot.dyndns.org>
	<1067289858.3336.2.camel@heppc22>
Message-ID: <20031027214846.GA26966@bergljot.dyndns.org>

On Mon, Oct 27, 2003 at 01:24:19PM -0800, Conrad Steenberg wrote:
> Somebody probably already answered your question, but just in case:
> You should use mod_python 3.x with apache 2.x. 
>
> On Mon, 2003-10-27 at 05:56, Nils Grimsmo wrote:
> > i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
> > and have some stability problems.

sorry. got that wrong. looked at the package for apache1. use mod_python
3.0.3. i have now tried it for both python 2.2.3 and 2.3.2, with the
same old results.

> > i have made a simple web-page that uses mod_python.publisher. in
> > apache2.conf:
> > 
> > AddHandler python-program .py
> > PythonHandler mod_python.publisher
> > PythonDebug On
> > 
> > when i'm reloading the page, it seams random whether it will load
> > properly or crash with 
> > 
> > "Not Found
> > 
> > The requested URL /~nilsgri/test.py was not found on this server."
> > 
> > i would guess it has something to do with caching, as when i restart
> > apache2, sometimes the it works every other or so time i reload the
> > page, and sometimes it works every time, and sometimes never.
> > 
> > 
> > i have tried to track down where these errors occur, and have found that
> > exeptions are thrown at the following locations:
> > 
> > mod_python.publisher: 
> >     resolve_object()
> >         the line "obj = getattr(obj, obj_str)" throws AttributeError
> >         sometimes. 
> >         
> >         in this case: 
> >             module_name=test, 
> >             config={'PythonDebug': '1'},
> >             path=['/home/nilsgri/public_html']
> >         which seems right
> > 
> > mod_python.publisher:
> >     import_module()
> >         "if (not file or path and not
> >                 filter(lambda a: os.path.dirname(file).find(a) == 0,
> >                 path)):" hits sometimes
> > 
> > what could be wrong?
> > 
> > is there any way of turning off caching of python modules?
> > 
> > 
> > i use the apache2 worker thread module, and i have also tried prefork. i
> > have not tried perchild or threadpool. should i?
> > 
> > 
> > klem fra nils
> -- 
> Conrad Steenberg <conrad@hep.caltech.edu>
> 

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at modpython.org  Mon Oct 27 16:58:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] Persistent socket connection.
In-Reply-To: <871xsye66y.fsf@syn.codemonkey.net>
References: <871xsye66y.fsf@syn.codemonkey.net>
Message-ID: <20031027165528.W45098@onyx.ispol.com>


On Mon, 27 Oct 2003 jbi130@yahoo.com wrote:

> Upon creation of a new "session" I want to open a socket to a remote
> server and be able to access this socket throughout the users session
> until he logs our or the session is timed out.

Given the multi-process nature of httpd, doing something like this would
be very difficult.

On a single-process multithreaded apache, though, this should be a piece
of cake. Whether or not you can get a single-pocess configuration is
specific to your OS.

Grisha
From tpc at csua.berkeley.edu  Mon Oct 27 14:14:58 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:29 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <20031027135607.Q93216-100000@localhost.name>


hi Grisha and Andy, after consulting with my coworker I believe there is a
bug in how MySQLdb interacts with mod_python that you should know of.  He
suggested I try out the same script that was giving me problems  with
Python CGI, and it works just fine.  The only difference is the values in
the tuple get switched around, so the tuple that is returned is (title,
URL) but no more invalid literal for float, int or long errors.  The
critical piece of code in question involves an implementation in Python
of a MySQL SELECT statement of two fields from one table joined to another
table that works just fine from the command line, in MySQL shell, and in
Python CGI:

	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
URLs.id = URLs_WITH_MATCHES.url_id;"""
	cursor.execute(sql)

gives me:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
    search(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 47, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 15, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 42, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

From stian at soiland.no  Tue Oct 28 00:44:38 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] Re: Persistent socket connection.
In-Reply-To: <20031027165528.W45098@onyx.ispol.com>
References: <871xsye66y.fsf@syn.codemonkey.net>
	<20031027165528.W45098@onyx.ispol.com>
Message-ID: <20031027234438.GD815@itea.ntnu.no>

On 2003-10-27 22:58:34, Gregory (Grisha) Trubetskoy wrote:

> > Upon creation of a new "session" I want to open a socket to a remote
> > server and be able to access this socket throughout the users session
> > until he logs our or the session is timed out.
> Given the multi-process nature of httpd, doing something like this would
> be very difficult.

I actually discussed this matter with my colleague tonight, if you can't
go multithreading, one solution is to have a middleware server running
on it's one.

The middleserver could use the asyncore module from Python to manage
multiple connections from a singlethreaded process. While containing
sockets to "the world" mod_python connects to the program by a local
UNIX socket or a longstanding TCP connection (to say, localhost)

The connection between mod_python processes, say one pr. process (ie. in
a module somewhere) - could last between different users and just say
some "Switch user"-command to the middleware.

A simple approach would be to associate those user socket sessions (like
a telnet session?) with the user by using his session ID. The mod_python
framework would only care about the session ID and formatting/passing
commands through in the right format.

The middleware could be smart or dumb - my suggestion is to make a
simple xml-rpc API on the middleware proxy, not just bypass the
socket communication. (why? To get short intervals to let other requests
to the single threaded proxy come through)


Problems
--------

  * Middleware complexity increases risk of anything failing
    - severel connections could get lost 
    - the middleware could get trapped in a large respons/request
  
  * Scalabillity - the single-threaded middleware proxy could become the
    one thing slowing everything down in some situations - and 
    unless you've already thought of it, it could become difficult to
    scale up.

      simple workaround: 
        - several middleware instances - on the same or other machines
        - users are distributed to the most idle proxy
        

Suggestions
-----------

  * Go for threading and mod_python - it would make tasks
    much simpler. Just remember to have some locks (and timeouts) so two
    requests don't use the socket at once! (the double-reload syndrome)

  * If your environment requires a forking apache, why not use another
    apache installment on a local port? the "outer" apache could proxy
    requests down - just like wrapping away zope.


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Mon Oct 27 19:04:11 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <C0FC22C08B82074A88B500617641577787A7A3@johnson.mediapulse.net>

> 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> URLs.id = URLs_WITH_MATCHES.url_id;"""
> 	cursor.execute(sql)

I find it hard to believe that this is somehow a mod_python problem.
Are you running the latest version of MySQLdb?  I have used mod_python +
MySQLdb on well over 10 sites now for clients (more for my own sites)
and never ran into trouble; an error this basic I think would have shown
itself by now.

>From the traceback you can see that MySQLdb is throwing the execption,
and if you look at the lines in cursors.py it lists you can see that a
try block is pretty much wrapping the work done.  I'd try to go in and
comment out some of those try blocks and also place an assert here and
there to see what's really happening (fyi you can do an assert 0,
varname and get a traceback with the value of varname - quick trick to
help debug something).

Did you ask on the MySQLdb forums?  I looked at sf and didn't see it.  A
search in google showed some others with this issue, one related to the
locale not being US and another with a broken python install.  Remember
that the python you run at command line is not the same one you run
under mod_python, so if the python mod_pyhton is using is setup
differently and/or broken from the python binary that would explain why
it works in cgi (which exec's the python binary).

Mike

From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <7654106.1067300590712.JavaMail.Server@genix>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy


---------------------------------------------------------------------
To unsubscribe, e-mail: announce-unsubscribe@httpd.apache.org
For additional commands, e-mail: announce-help@httpd.apache.org



From rclilly at cox.net  Mon Oct 27 16:33:29 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
In-Reply-To: <20031027101045.E26862@onyx.ispol.com>
Message-ID: <AMEDJPACLBJGECKBDAOKCEMLCCAA.rclilly@cox.net>

Hi Grisha,

I just downloaded the beta and installed it. I got the following message
from the win32_postintall script:

'import site' failed; use -v for traceback
Traceback (most recent call last):
  File "F:\LANG\PYTHON~1.3\Scripts\win32_postinstall.py", line 62, in ?
    import sys, os, shutil
ImportError: No module named os
*** run_installscript: internal error 0xFFFFFFFF ***

As I am just learning Python, I don't yet know what this message means.
There is a new mod_python folder with files in it under F:\Lang\Python
2.3\Lib\site-packages\. So I don't know if that means it installed correctly
or not. I haven't tested it under Apache to see if it works yet. That's my
next step.

Thanks,

Robert Lilly

From flxkid at techemail.com  Tue Oct 28 10:36:41 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031028183641.D19AC393C@sitemail.everyone.net>

I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").

Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).

Other scripts not using scripting work fine.

Any ideas?

OLIVER


From flxkid at techemail.com  Tue Oct 28 17:18:51 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031029011853.344247265@sitemail.everyone.net>

Mike,

It worked great!  Thanx.  Now, why doesn't it work when I compile my own 2.3.2?  Is  the make install not overwriting somewhere where there is a 2.3 no threaded libpython?  How would I find out?  I'm just a curious kinda guy ;)

OLIVER


--- Mike Klein <mikeklein@sbcglobal.net> wrote:
You will get this same error trying to use SOAPpy too.

It means your Python that mod_python was built against doesn't support 
threads. You might have a thread.py module under your python libs dir 
but that doesn't mean your python supports threads.

Go the the mod_python page, get the appropriate version per your apache 
version, and then get EXACTLY the version of Python recommended. Build 
this python in your source tree (with threads!) and mod_python against 
this. Everything will work fine.


mike


Oliver Nelson wrote:

>I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").
>
>Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).
>
>Other scripts not using scripting work fine.
>
>Any ideas?
>
>OLIVER
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From vmanera at manord.com  Wed Oct 29 17:44:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] Session 
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F7@exchange2000.manord.com>

I played with the module Session on mod_python 3.1.2b on win2000 and  all
seems work fine.<?xml:namespace prefix = o ns =
"urn:schemas-microsoft-com:office:office" />

 

The only problem is that under win2000 Session is redirect to MemorySession,
so if I restart apache I loose all the session.

So I used  DbmSession directly and all work fine too.

 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

 

 

With my self made session that I currently use, I may see the sid timeouted
and the sid currently alive.  With some change from dbm_cleanup or
mem_cleanup is possible to achieve this information, but will be useful  a
new method in Session to do it.

Villiam 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031029/e01fa162/attachment-0002.htm
From olivier at phgroup.com  Thu Oct 30 10:35:56 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] session mechanism in 3.1.0a
Message-ID: <3FA0E98C.1040400@phgroup.com>

Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













From vmanera at manord.com  Thu Oct 30 12:26:31 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:30 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>

try this:
	sess = Session.Session(req)
	sess.save()
	.....
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 11.36
A: mod_python@modpython.org
Oggetto: [mod_python] session mechanism in 3.1.0a


Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From olivier at phgroup.com  Thu Oct 30 11:58:49 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 22:00:30 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
Message-ID: <3FA0FCF9.6020804@phgroup.com>

Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 14:35:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:30 2004
Subject: R: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F8@exchange2000.manord.com>

I tested your code:
def main1(req):
     sess = Session.Session(req)
     sess.save()
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())

the first time:
I'm a new session, my id is : 8e7c9abff96d9256ca9159b40cc44249
if I reload the page:
I'm NOT a new session, my id is :8e7c9abff96d9256ca9159b40cc44249

the  mod_python/3.1.0a has a bug: it not reload the module change yuo have
to put
PythonAutoReload on on apache config
o restart apache
Villiam
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 12.59
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: R: [mod_python] session mechanism in 3.1.0a


Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 15:46:44 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] session on win2000
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>

Sorry , but anyone ha replyed to me and I'm ready to start the porting
Session in my application. 

The question is: 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

Villiam
From grisha at modpython.org  Thu Oct 30 11:28:05 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] Re: session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030112225.N97494@onyx.ispol.com>


There is no trap. It will probably be a little slower, also, depending on
what DBM Python uses on Windows, there may be a size limit on data stored
in session.

On Thu, 30 Oct 2003, Manera, Villiam wrote:

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application.
>
> The question is:
>
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?
>
> Villiam
>
From gdamjan at mail.net.mk  Thu Oct 30 19:55:08 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030185508.GA10855@legolas.on.net.mk>

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application. 
> 
> The question is: 
> 
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?

I guess MemorySession is used in Windows by default because it should be faster
than DbmSession, and in Windows Apache is multithreaded so MemorySession
_can_ be used.

Though I guess, in Linux a DbmSession in /dev/shm would be equally fast.


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From tpc at csua.berkeley.edu  Fri Oct 31 09:11:57 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] Re: invalid literal for float solved addendum
In-Reply-To: <1067611886.14197.6.camel@chef.neosouth.net>
Message-ID: <20031031081725.O29199-100000@localhost.name>


hi Andy, I also do not see how this error could be raised.  I tested the
statement from IDLE shell as well as the other frameworks I mentioned
below.  I also reviewed the table creation statements to see if there was
something re MySQL data types I was missing:

<code>
        sql = """CREATE TABLE URLs (
              id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
              url VARCHAR(255) UNIQUE KEY NOT NULL,
              title VARCHAR(255)
              ) TYPE = InnoDB;"""

                sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
                      url_id INT NOT NULL,
                      ) TYPE = InnoDB;"""
</code>

As you can see I am selecting two fields, url and title, from URLs where
URLs.id = URLs_WITH_MATCHES.url_id, both are type INT.

On Fri, 31 Oct 2003, Andy Dustman wrote:

> Sorry to have to ask this, but are you sure that's the SQL that
> generates the error? I don't see any way for that error to be raised.
>
> On Mon, 2003-10-27 at 17:14, tpc@csua.berkeley.edu wrote:
> > hi Grisha and Andy, after consulting with my coworker I believe there is a
> > bug in how MySQLdb interacts with mod_python that you should know of.  He
> > suggested I try out the same script that was giving me problems  with
> > Python CGI, and it works just fine.  The only difference is the values in
> > the tuple get switched around, so the tuple that is returned is (title,
> > URL) but no more invalid literal for float, int or long errors.  The
> > critical piece of code in question involves an implementation in Python
> > of a MySQL SELECT statement of two fields from one table joined to another
> > table that works just fine from the command line, in MySQL shell, and in
> > Python CGI:
> >
> > 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> > URLs.id = URLs_WITH_MATCHES.url_id;"""
> > 	cursor.execute(sql)
> >
> > gives me:
> >
> > <paste>
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 149, in handler
> >     module = apache.import_module(module_name, req.get_config(), [path])
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
> > in import_module
> >     module = imp.load_module(mname, f, p, d)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
> >     search(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 47, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 15, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 42, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> > </paste>
> --
> Andy Dustman         PGP: 0x930B8AB6
>     @       .net     http://dustman.net/andy
> Freedom isn't free. It's sold to the highest bidder.
>

From rpeterso at mtholyoke.edu  Fri Oct 31 14:28:04 2003
From: rpeterso at mtholyoke.edu (Ron Peterson)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] is mod_python threadsafe?
Message-ID: <20031031192804.GA724@mtholyoke.edu>

Is the latest mod_python threadsafe?  I.E. - is it o.k. to run under
apache compiled using --with-mpm=worker?

-- 
Ron Peterson                          -o)
Network & Systems Manager             /\\
Mount Holyoke College                _\_v
http://www.mtholyoke.edu/~rpeterso   ---- 
From jpeterson at ainet.com  Fri Oct 31 12:43:39 2003
From: jpeterson at ainet.com (Jim Peterson)
Date: Fri Jan  9 22:00:30 2004
Subject: [mod_python] basic cgi not working with mp 3.0.3
Message-ID: <3FA2C97B.80004@ainet.com>

Hi,

total newb to python, apache, mod_python, spyce.

running Apache/2.0.47 (Win32) mod_python/3.0.3 Python/2.2.2 Spyce 1.3.11
under Win2K, using ActiveState Python.

i'm trying to use the 'production ready', stable stuff.

Here's the details.  TIA

---------------------------------------------------------------------

Trying to port my CGI app to mod_python. It was blowing up until I 
traced the failure line to mod_python.apache.  I diffed the file against 
a beta version, found a patch there, and applied the patch to my 
apache.py.  The patch stopped the bomb but I'm not getting any form fields.

     #################################
     # original code
     #for k in sav_env:
     #    osenv[k] = env[k]

     # after the patch
     for k in sav_env:
         osenv[k] = sav_env[k]

I don't have any idea if that is relevant.

My test code works in a true CGI environment but not under the mp cgi 
handler.  I'm using Apache aliases to configure both true CGI and mp cgi
against the same directory.

# --------------------------------------------------------
# this configures a conventional CGI setup
ScriptAlias /xcgi-bin/ /Jim/Home/Web/CGI/
<Location /xcgi-bin/ >
     AllowOverride None
     Options +Indexes +ExecCGI
     Order allow,deny
     Allow from all
</Location>
# --------------------------------------------------------
# this configures a mod_python CGI handler, I guess
Alias /cgi-bin/ /Jim/Home/Web/CGI/
<Location /cgi-bin/ >
   SetHandler python-program
   PythonHandler mod_python.cgihandler
   PythonDebug On
</Location>

I invoke my test code with either URL.

I test mod_python handling with url of this form:
/cgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

I test true cgi handling with url of this form:
/xcgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

Throughout my app I pass values thru the URL/querystring.

Under true CGI, my script gets values in the form fields.  Under mp cgi, 
it gets None.

Here is the CGI script:

# ------------------- cut here --------------------
#!python

# cgitest.py
#
# test cgi port to mod_python cgi handler
#

import cgi
form = cgi.FieldStorage()

# print content type here to enable html rendering of debug form
print "Content-Type: text/html\n\n"

# prints dict of env vars, for debugging
#cgi.print_environ()

# prints dict of form args, for debugging
cgi.print_form(form)

# extract the data from the query string
fielda = form.getvalue('fielda')
fieldb = form.getvalue('fieldb')

# content-type printed above

html = \
'''
<html>
<head>
<title> cgitest.py </title>
</head>
<body>
<hr />
<table>
<tr><td> fielda </td><td> %s </td></tr>
<tr><td> fieldb </td><td> %s </td></tr>
</table>
<hr />
</body>
</html>
'''

print html % (fielda, fieldb)


# ---------------------------------------------------------------
# cgitest.py - end of file
# ---------------------------------------------------------------
#



From perry.tew at cibavision.novartis.com  Wed Oct  1 16:03:20 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:13 2004
Subject: [mod_python] writing to a file from mod_python
Message-ID: <OF32955EC0.F1936B00-ON85256DB2.006DFC43-85256DB2.006E2B3B@EU.novartis.net>

For security reasons, it's common to run the apache instance under a 
restricted user.  Many times this is 'noboby'. 
I only assumed 'nobody' based on past problems by other people.    At any 
rate, it seems you've solved your problem.

-Perry







hi Perry,

Yes !  Thank you.  I assumed if the relative paths were ok in a command
line execution they must be ok in mod python.  By the way, how do you
figure the apache instance is running under 'nobody' ?  In the httpd.conf
there is clearly a section where the user and group are defined by
default as 'apache'.

On Tue, 30 Sep 2003 perry.tew@cibavision.novartis.com wrote:

> Hello.
> Is your apache instance running under the 'nobody' user, or something
> similar?    If so, chmoding the somefile.txt to 'apache' will not help.
> I would advise caution in writing out files to relative paths.  Given 
that
> mod_python is an extension of Apache, would not a relative file
> such as 'somefile.txt' be written to the ServerRoot or bin directory?
> (I've never tried it).
> Here's something to try:  change the file from 'somefile.txt' to
> '/tmp/somefile.txt'. Almost every user id can write to the /tmp 
directory.
>
>
> Hope this helps,
> Perry Tew
>
>
>
>
>
> <tpc@csua.berkeley.edu>
> Sent by: mod_python-bounces@modpython.org
> 09/30/2003 04:37 PM
>
>
>         To:     <mod_python@modpython.org>
>         cc:
>         Subject:        [mod_python] writing to a file from mod_python
>
>
>
> hello all I have the following script that ran fine from the command 
line:
>
> <code>
> #!/usr/bin/env python
>
> #string1 = "hello world!"
>
> def writeFile(string1):
>         open('somefile.txt', 'w').write(string1)
>
> ## writeFile(string1)
> </code>
>
> but as soon as I ported it to mod python I got the following:
>
> <paste>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
335,
> in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
>
>   File "/var/www/html/python/testing.py", line 7, in writeFile
>
> IOError: [Errno 13] Permission denied: 'somefile.txt'
> </paste>
>
> I searched the web for the error message, chmod'ed 777 somefile.txt, and
> even chown'ed and chgrp'ed to user and group apache, all to no avail. Is
> there a way to write to a file from mod python ?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>




From perry.tew at cibavision.novartis.com  Wed Oct  1 16:39:32 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] 
 I can access mod_ssl cert env vars using PerlAuthenHandler, but howto do
 it with a PythonAuthenHandler?
Message-ID: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>

Hello,
   I'm trying to port a mod_perl handler to mod_python. 
The mod_perl handler was based off an Authentication Handler discussed 
in Chapter 6 of the "Writing Apache Modules in Perl and C" book by 
MacEachern 
(page 326 for those who have the book).   At any rate, concerning how to 
access 
environment variables set by mod_ssl, the book states correctly the 
following:

"""
The handler then issues a subrequest and retrieves the value of 
SSL_CLIENT_DN from 
the subrequest's environment table.  The subrequest is necessary because 
the parsed 
certificate fields aren't placed into the table until the fixup stage, 
which ordinarily occurs 
after the authorization phase.
"""


So, my perl code looks like this:
##########################################
my $subr = $r->lookup_uri($r->uri);
my $env = $subr->subprocess_env;
my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
my $dn = $env->{'SSL_CLIENT_S_DN'};
##########################################




I'm trying to do the same thing in python with this:
############################################
        req.internal_redirect(req.unparsed_uri)
        req.add_common_vars()
        for k, v in req.subprocess_env.items():
                msg = k + "=" + v
                apache.log_error( msg , apache.APLOG_NOTICE )

############################################

However, the SSL vars aren't in the env table when my handler dumps the 
items to the log. 
The handler is being called and it dumps a lot of
env variables to the log, but no SSL vars.  The PythonAuthenHandler that 
contains the code above 
protects the printenv script, which I call to test the handlers.  The 
printenv script is displaying all
of the SSL env vars correctly, so I know I have the mod_ssl directives 
correct.

Does anyone see an error in what I'm doing wrong (or need to do)?  This is 
my first attempt as writing an AuthenHandler
and I would greatly appreciate any insight.

Thanks,
Perry Tew
From perry.tew at cibavision.novartis.com  Wed Oct  1 17:47:02 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] 
	how to set the REMOTE_USER variable from a PythonAuthenHandler?
Message-ID: <OFDDDC9352.A22255E8-ON85256DB2.00779BAF-85256DB2.007797B1@EU.novartis.net>

Hello.

In a PerlAuthenHandler, I can do the following to set the REMOTE_USER 
variable
(which is necessary since I'm using SSL Client Certs for authentication 
and not Basic Auth, and no, I'm not using FakeBasicAuth)

Perl:
##########################################
package Apache::AuthClientCert;
# file: Apache/AuthClientCert;

use strict;
use Apache::Constants qw(:common);

sub handler{
        my $r = shift;
        return OK unless $r->is_main;

        my $subr = $r->lookup_uri($r->uri);
        my $env = $subr->subprocess_env;

        my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
        my $username = $cn;

        ### KEY LINE BELOW ###
        $r->connection->user( $username );
        ### KEY LINE ABOVE ###

        return OK;
}
1;
__END__
#############################################


If you notice in the perl script, I found that the REMOTE_USER variable is 

not populated, even
if I return OK, unless I explicitly set it using $r->connection->user( 
$username ). 

I go about it this
way because we all have digital certs in my company and it's an easy way 
to handle security.
However, even if I use SSL for the front door, my backend processes ( some 

java ) want to know
who is coming through the door. The only way to pass that information to a 

j2ee server like weblogic 
is via the REMOTE_USER variable.

So, my question is, how do I set this value using mod_python?  The docs 
state that req.user is read only.
I see the example PythonAuthenHandler (spam and eggs) uses 
req.connection.user, but I can't find any 
docs on that (anyone have a url)?

Does anyone know how to set the user so that the REMOTE_USER var is 
correctly populated?

Thanks for your time,
Perry

From alexiev at activesolutions.bg  Thu Oct  2 13:57:15 2003
From: alexiev at activesolutions.bg (Nikolay Alexiev)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] PublisherHandler
Message-ID: <200310021357.15162.alexiev@activesolutions.bg>

I'm using PublisherHandler for my project. This is my  .htaccess file

    AddHandler python-program .py
    SetHandler python-program
    PythonHandler mod_python.publisher
    PythonDebug On

But now I can't load pictures from this folder and from its subfolder. Can I 
do something or the only way is to move images in a folder that is a level 
above?
From schnieper at semafor.ch  Thu Oct  2 16:07:55 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] Problems with configure mod_python
Message-ID: <3F7C313B.8000300@semafor.ch>

Hi all

I tried to install the mod_python (www.modpython.org) for Apache Webserver.
By configure with
./configure --with-apxs /usr/sbin/apxs2-prefork
i get this error:

configure: error: yes not found or not executable

SuSE Linux 8.2
Apache 2.0
mod_python 3.0.1

Thanks in advance
Lukas

From grisha at modpython.org  Thu Oct  2 12:13:32 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031002121240.L57929@onyx.ispol.com>


Hmmm... I find it hard to believe that SuSE doesn't have the yes(1)
command. Are you sure your installation isn't corrupt somehow?

Grisha

On Thu, 2 Oct 2003, Lukas Schnieper wrote:

> Hi all
>
> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
>
> configure: error: yes not found or not executable
>
> SuSE Linux 8.2
> Apache 2.0
> mod_python 3.0.1
>
> Thanks in advance
> Lukas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Thu Oct  2 14:39:50 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
In-Reply-To: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
References: <OFF05B698B.047966D6-ON85256DB2.006C1771-85256DB2.00717BB1@EU.novartis.net>
Message-ID: <20031002143438.X57929@onyx.ispol.com>



On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha
From grisha at modpython.org  Thu Oct  2 14:43:20 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <200310021357.15162.alexiev@activesolutions.bg>
References: <200310021357.15162.alexiev@activesolutions.bg>
Message-ID: <20031002144016.X57929@onyx.ispol.com>



On Thu, 2 Oct 2003, Nikolay Alexiev wrote:

> I'm using PublisherHandler for my project. This is my  .htaccess file
>
>     AddHandler python-program .py
>     SetHandler python-program

You don't need both AddHandler and SetHandler, SetHandler alone will cover
every type of file.

>     PythonHandler mod_python.publisher
>     PythonDebug On
>
> But now I can't load pictures from this folder and from its subfolder. Can I
> do something or the only way is to move images in a folder that is a level
> above?

You can create a subdirectory and add "SetHandler None" which reverses
previous SetHandler's:

http://httpd.apache.org/docs-2.0/mod/core.html#sethandler

HTH,

Grisha
From mikeklein at sbcglobal.net  Thu Oct  2 12:36:56 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002144016.X57929@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <3F7C7E58.20109@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
>  
>
>>I'm using PublisherHandler for my project. This is my  .htaccess file
>>
>>    AddHandler python-program .py
>>    SetHandler python-program
>>    
>>
>
>You don't need both AddHandler and SetHandler, SetHandler alone will cover
>every type of file.
>
>  
>
>>    PythonHandler mod_python.publisher
>>    PythonDebug On
>>
>>But now I can't load pictures from this folder and from its subfolder. Can I
>>do something or the only way is to move images in a folder that is a level
>>above?
>>    
>>
>
>You can create a subdirectory and add "SetHandler None" which reverses
>previous SetHandler's:
>
>http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
>HTH,
>
>Grisha
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>
Shouldn't he just remove the SetHandler line?


mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/bc38a4e3/attachment-0003.htm
From grisha at modpython.org  Thu Oct  2 16:01:59 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <3F7C7E58.20109@sbcglobal.net>
References: <200310021357.15162.alexiev@activesolutions.bg>
 <20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
Message-ID: <20031002155847.O60460@onyx.ispol.com>



On Thu, 2 Oct 2003, Mike Klein wrote:

> Shouldn't he just remove the SetHandler line?

That would do it too, but I'm guessing he specifically neede SetHandler.

This would allow to use SetHandler-style URL's, such as
http://myhost.com/guestbook/adduser, (as opposed to
http://myhost.com/guestbook.py/adduser), and at the same time be able to
server other files, e.g. http://myhost.com/images/blah.gif

Grisha
From perry.tew at cibavision.novartis.com  Thu Oct  2 16:09:00 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python]  I can access mod_ssl cert env vars using
 PerlAuthenHandler, but howto do it with a PythonAuthenHandler?
Message-ID: <OF8FB48689.25434CDF-ON85256DB3.006CC438-85256DB3.006EB017@EU.novartis.net>

Grisha,
   Thanks for the tip!  I'll try that tonight. 

About the infinite recursion issue  ... yeah, I struggled with that a lot. 
 The perl code I had did the following:

 return OK unless $r->is_main;

to prevent this loop.  I had something in my handler like this:

if req.prev:
        return apache.OK

but I took it out and the handler didn't seem to hang.  Quite strange. 
It's obvious I have some more
learning to do.  I'll continue experimenting.


If I may ask you a different question along the lines of authentication. I 
have need to cache roles and acls for urls
in order to prevent hitting a database for every request.   I need a way 
to cache these values and have each of
my child processes access them.

1.  I'm using the "worker" MPM.  Is that acceptable for use with 
mod_python?  I haven't had a problem yet with it.
2. Is there a preferred way of sharing data among the different children? 
dbm? berkley db? IPC?   I don't mind 
file based persistance, but I'm ignorant of the fastest and safest way to 
cache this data.  Any thoughts would be
appreciated.

Something else I thought of was that I guess I could jack up the number of 
threads per child and limit the number of
children to something small.  Would that not keep the number of caches 
down to 3 or 4 ( 1 per child )?

I'm really enjoying mod_python.  Thanks for writing it.
Perry Tew







On Wed, 1 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> So, my perl code looks like this:
> ##########################################
> my $subr = $r->lookup_uri($r->uri);
> my $env = $subr->subprocess_env;
> my $cn = $env->{'SSL_CLIENT_S_DN_CN'};
> my $dn = $env->{'SSL_CLIENT_S_DN'};
> ##########################################

It looks like mod_perl's lookup_uri returns the new request object, which
is rather clever, we should adopt this in mod_python :-)

> I'm trying to do the same thing in python with this:
> ############################################
>         req.internal_redirect(req.unparsed_uri)
>         req.add_common_vars()
>         for k, v in req.subprocess_env.items():
>                 msg = k + "=" + v
>                 apache.log_error( msg , apache.APLOG_NOTICE )
>
> ############################################

Try this instead:

         req.internal_redirect(req.unparsed_uri)
         req.next.add_common_vars()
         for k, v in req.next.subprocess_env.items():
                 msg = k + "=" + v
                 apache.log_error( msg , apache.APLOG_NOTICE )


Notice "req.next" instead of "req"

Also - don't know if your handler does this elsewhere, but I think that
req.internal_redirect(req.unparsed_uri) would create an infinite recursion
unless you check that you are not in a subrequest by examining req.prev.

Grisha



From mikeklein at sbcglobal.net  Thu Oct  2 13:08:10 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C85AA.70907@sbcglobal.net>

Gregory (Grisha) Trubetskoy wrote:

>On Thu, 2 Oct 2003, Mike Klein wrote:
>
>  
>
>>Shouldn't he just remove the SetHandler line?
>>    
>>
>
>That would do it too, but I'm guessing he specifically neede SetHandler.
>
>This would allow to use SetHandler-style URL's, such as
>http://myhost.com/guestbook/adduser, (as opposed to
>http://myhost.com/guestbook.py/adduser), and at the same time be able to
>server other files, e.g. http://myhost.com/images/blah.gif
>
>Grisha
>
>  
>
Caveat: I am a python 101 user...

My first mistake was assuming a php/jsp/shtml model for delivering 
pages. It took me a few tweaks to getting things in python similar to 
this model...where I can littler python files willy-nilly. I didn't see 
enough of his httpsd.conf file to understand what he wanted to do.

I just know his mistake 'smelled' similar to the first mistake I 
made...using SetHandler and then not being able to access anything else 
on my site!

For laughs...this is what I have (at a root/top level) in my httpsd.conf 
for Apache to deliver python pages from anywhere under my docroot:
------------------------
#
# Stuff for mod_python
#
AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On
------------------------

Other than having to specify functions within my py files (this is 
ok...standard), it gives me the 'document' under docroot model that I 
was looking for...

cheers,

mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031002/e07a9a26/attachment-0003.htm
From scott_list at mischko.com  Thu Oct  2 14:14:13 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] 
	Python Apache authentication module ala Perl's Apache::AuthDBI?
Message-ID: <200310021414.13041.scott_list@mischko.com>

Is there a similar creature for Python that allows me to authenticate Apache 
users against a database (Postgres)?

I'm trying to do all my new projects in Python and get away from Perl.  This 
is a piece I need in my toolbox.

TIA,
Scott
From cs1spw at bath.ac.uk  Thu Oct  2 22:16:29 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] PublisherHandler
In-Reply-To: <20031002155847.O60460@onyx.ispol.com>
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com> <3F7C7E58.20109@sbcglobal.net>
	<20031002155847.O60460@onyx.ispol.com>
Message-ID: <3F7C95AD.2020604@bath.ac.uk>

Gregory (Grisha) Trubetskoy wrote:
> That would do it too, but I'm guessing he specifically neede SetHandler.
> 
> This would allow to use SetHandler-style URL's, such as
> http://myhost.com/guestbook/adduser, (as opposed to
> http://myhost.com/guestbook.py/adduser), and at the same time be able to
> server other files, e.g. http://myhost.com/images/blah.gif

As a newcomer to mod_python I'm still trying to work out the best 
practise for developing applications under it. I'm using SetHandler 
style URLs, but does anyone have any good tips on how to lay out an 
overall mod_python application?

Cheers,

Simon

From cl at scriptall.com  Thu Oct  2 18:45:18 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] req.form question
Message-ID: <1065134717.1102.58.camel@px101>

A point of curiosity.  Please don't hurt me.

Some time ago, I was able to refer to a form field value in this manner:

req.form["fieldname"]

Now, I have to refer to the value in this fashion:

req.form["fieldname"][0]

Granted, it's been a while since I've done any new scripting with
mod_python.  I've searched the mailing list and looked at the docs for
both v2 and v3 but can't find any reference to a change in the form
attribute of the request object.

When did the keys for req.form change to a list?

Thanks,
-Chuck

From michael at dynamine.net  Thu Oct  2 17:27:26 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] req.form question
In-Reply-To: <1065134717.1102.58.camel@px101>
References: <1065134717.1102.58.camel@px101>
Message-ID: <3F7CC26E.1000206@dynamine.net>

It didn't; whether the value is an object or a list depends on the form 
submission contents.

 From http://www.python.org/doc/2.2.3/lib/node297.html:

If the submitted form data contains more than one field with the same 
name, the object retrieved by "form[key]" is not a FieldStorage or 
MiniFieldStorage instance but a list of such instances. Similarly, in 
this situation, "form.getvalue(key)" would return a list of strings. If 
you expect this possibility (when your HTML form contains multiple 
fields with the same name), use the isinstance() built-in function to 
determine whether you have a single instance or a list of instances. For 
example, this code concatenates any number of username fields, separated 
by commas:


value = form.getvalue("username", "")
if isinstance(value, list):
     # Multiple username fields specified
     usernames = ",".join(value)
else:
     # Single or no username field specified
     usernames = value

--Michael


Chuck Lima wrote:

> A point of curiosity.  Please don't hurt me.
> 
> Some time ago, I was able to refer to a form field value in this manner:
> 
> req.form["fieldname"]
> 
> Now, I have to refer to the value in this fashion:
> 
> req.form["fieldname"][0]
> 
> Granted, it's been a while since I've done any new scripting with
> mod_python.  I've searched the mailing list and looked at the docs for
> both v2 and v3 but can't find any reference to a change in the form
> attribute of the request object.
> 
> When did the keys for req.form change to a list?
> 
> Thanks,
> -Chuck
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From gdamjan at mail.net.mk  Fri Oct  3 03:07:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] Problems with configure mod_python
In-Reply-To: <3F7C313B.8000300@semafor.ch>
References: <3F7C313B.8000300@semafor.ch>
Message-ID: <20031003010704.GB25894@legolas.on.net.mk>

> I tried to install the mod_python (www.modpython.org) for Apache Webserver.
> By configure with
> ./configure --with-apxs /usr/sbin/apxs2-prefork
> i get this error:
> 
> configure: error: yes not found or not executable


./configure --with-apxs=/usr/sbin/apxs2-prefork
                      ^^^

Hey did this appear on news?
The question (and the answer) are very familiar to me...


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cl at scriptall.com  Thu Oct  2 21:17:41 2003
From: cl at scriptall.com (Chuck Lima)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] req.form question
In-Reply-To: <3F7CC26E.1000206@dynamine.net>
References: <1065134717.1102.58.camel@px101> <3F7CC26E.1000206@dynamine.net>
Message-ID: <1065143861.1102.26.camel@px101>

Yep, sure enough, I had multiple input fields named the same thing.  

I'm looping over a bunch of records and creating a form for each one on
a single page and forgot to put a </form> at the end on each iteration!!

Thank you.

-Chuck


On Thu, 2003-10-02 at 20:27, Michael S. Fischer wrote:
> It didn't; whether the value is an object or a list depends on the form 
> submission contents.
> 
>  From http://www.python.org/doc/2.2.3/lib/node297.html:
> 
> If the submitted form data contains more than one field with the same 
> name, the object retrieved by "form[key]" is not a FieldStorage or 
> MiniFieldStorage instance but a list of such instances. Similarly, in 
> this situation, "form.getvalue(key)" would return a list of strings. If 
> you expect this possibility (when your HTML form contains multiple 
> fields with the same name), use the isinstance() built-in function to 
> determine whether you have a single instance or a list of instances. For 
> example, this code concatenates any number of username fields, separated 
> by commas:
> 
> 
> value = form.getvalue("username", "")
> if isinstance(value, list):
>      # Multiple username fields specified
>      usernames = ",".join(value)
> else:
>      # Single or no username field specified
>      usernames = value
> 
> --Michael
> 
> 
> Chuck Lima wrote:
> 
> > A point of curiosity.  Please don't hurt me.
> > 
> > Some time ago, I was able to refer to a form field value in this manner:
> > 
> > req.form["fieldname"]
> > 
> > Now, I have to refer to the value in this fashion:
> > 
> > req.form["fieldname"][0]
> > 
> > Granted, it's been a while since I've done any new scripting with
> > mod_python.  I've searched the mailing list and looked at the docs for
> > both v2 and v3 but can't find any reference to a change in the form
> > attribute of the request object.
> > 
> > When did the keys for req.form change to a list?
> > 
> > Thanks,
> > -Chuck
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> 

From gnb at itga.com.au  Fri Oct  3 11:26:12 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] req.form question 
In-Reply-To: Your message of Thu, 02 Oct 2003 18:45:18 -0400.
Message-ID: <200310030126.LAA21892@lightning.itga.com.au>

IN addition to the list vs singleton issue Michael mentioned, it seems that in 
mod_python 2.7 the list is a list of strings, but in mod_python 3, the list is 
a list of FieldStorage objects.  

Greg.

From robert at leftwich.info  Fri Oct  3 11:04:46 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] mod_python mysteriously stopped working under Windows
Message-ID: <MPG.19e775ef801061dd989684@news.gmane.org>

I have this bizarre problem that is driving me insane. I had a working 
mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python 
3.1.0a - all vanilla). I needed to combine 2 projects so I set out to 
create a new project directory structure and ran out of disk space on 
the c-drive while doing something unrelated to mod_python/apache/etc. I 
cleaned up a few directories (again unrelated) and ever since then I 
cannot get even the simplest mod_python setup to work. I've tried 
uninstalling/reinstalling everything, even reverting to python 
2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including 
explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
\site-packages;C:\Python23\lib (among other combinations) I get an error 
in the log file saying "[error] make_obcallback: could not import 
mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does 
not work at all, no messages anywhere - it is as if it is totally 
ignored. Note also that straight python cgi (e.g. pyblosxom) is working 
fine. At the moment I'm using the httpd.conf settings and mptest.py 
straight from the Testing section of the manual.

Can anyone shed light on this problem ?

Robert


From tpc at csua.berkeley.edu  Thu Oct  2 19:41:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] mod_python mysteriously stopped working under
 Windows
In-Reply-To: <MPG.19e775ef801061dd989684@news.gmane.org>
Message-ID: <20031002193058.S79163-100000@localhost.name>


oh wow this problem again.  I am going to repost an email I sent to one
Kevin Douglas who kept hitting this same brick wall:

<paste>
Date: Mon, 9 Jun 2003 14:37:28 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: kevin douglas <fitnah55@hotmail.com>
Cc: mod_python@modpython.org
Subject: RE: [mod_python] need working fix for 'import site' aka
    'ImportError'aka'make_obcallback' error


> -----
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> [Sun Jun 08 00:06:50 2003] [error] make_obcallback: could not import
> mod_python.apache.
> -----
>


I had that exact same problem, although I did not spend as much time
trying to fix it as you apparently have.  I ended up just reinstalling
mod_python.  It works fine now, though I don't understand why it broke in
the first place.
</paste>

if you search the archives you can find out how he resolved the problem,
which he ultimately did, as he recounted to us:

<paste>
Date: Mon, 9 Jun 2003 23:38:36 -0400
From: kevin douglas <fitnah55@hotmail.com>
To: mod_python@modpython.org
Subject: [mod_python]  working fix [FAQ: 'import site' failed; use -v for
traceback]


as stated in the make_obcallback FAQ entry, this is a sys.path
problem...

the main problem (i believe) is that the path that is available at
runtime is not always the same as it was with the previous run of
apache

with a linux distro that requires python as part of the base install
(even
with a minimal install) - the python in /usr is going to supercede
the python in /usr/local even if the path properly includes /usr/lib
and site-packages/mod_python is pointed to properly

what you should do is axe all the python rpm's that you can
(python-base is required for libuser which is required for passwd)
and then take the file list from python-base and manually delete it
(/usr/lib/python2.2 and /usr/bin/python)

this will free up the proper /usr/local/lib/python2.2 to be first in
line in the path

what's confusing is that you link to /usr/local/bin/python2.2 explicitly
to compile mod_python, but it still ends up with /usr/lib/python2.2
as the primary lib source... and even if you get the paths added as the
other FAQ entry states - you're still going to be running the old
site.py from /usr/lib...

and to make matters even worse sometimes it randomly decides to work
even before you axe the default distro install..

:o



kd
</paste>

As you can see something to do with paths and multiple Python versions
installed is the reason you are having trouble.

On Fri, 3 Oct 2003, Robert Leftwich wrote:

> I have this bizarre problem that is driving me insane. I had a working
> mod_python setup yesterday (W2000, Apache 2.0.47, python 2.3, mod_python
> 3.1.0a - all vanilla). I needed to combine 2 projects so I set out to
> create a new project directory structure and ran out of disk space on
> the c-drive while doing something unrelated to mod_python/apache/etc. I
> cleaned up a few directories (again unrelated) and ever since then I
> cannot get even the simplest mod_python setup to work. I've tried
> uninstalling/reinstalling everything, even reverting to python
> 2.2.3/mod_python3.0.3 all to no avail. No matter what I try (including
> explicitly setting PYTHONHOME=C:\Python23 and PYTHONPATH=C:\Python23\lib
> \site-packages;C:\Python23\lib (among other combinations) I get an error
> in the log file saying "[error] make_obcallback: could not import
> mod_python.apache.". Note that python 2.2.3/mod_python3.0.3 just does
> not work at all, no messages anywhere - it is as if it is totally
> ignored. Note also that straight python cgi (e.g. pyblosxom) is working
> fine. At the moment I'm using the httpd.conf settings and mptest.py
> straight from the Testing section of the manual.
>
> Can anyone shed light on this problem ?
>
> Robert
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



From grisha at apache.org  Thu Oct  2 22:48:59 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] O'Reilly Onlamp.com
In-Reply-To: <3F7C3169.8040608@semafor.ch>
References: <3F7C3169.8040608@semafor.ch>
Message-ID: <20031002224613.S61437@onyx.ispol.com>


http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html

:-)

Grisha
From robert at leftwich.info  Fri Oct  3 13:30:55 2003
From: robert at leftwich.info (Robert Leftwich)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] 
	Re: mod_python mysteriously stopped working under   Windows
References: <MPG.19e775ef801061dd989684@news.gmane.org>
	<20031002193058.S79163-100000@localhost.name>
Message-ID: <MPG.19e7987abd327c0c989685@news.gmane.org>

In article <20031002193058.S79163-100000@localhost.name>, 
tpc@csua.berkeley.edu says...
> 
> oh wow this problem again.  I am going to repost an email I sent to one
> Kevin Douglas who kept hitting this same brick wall:
>  snip....

> As you can see something to do with paths and multiple Python versions
> installed is the reason you are having trouble.

That's what I thought, so I had completely uninstalled/deleted every 
python version/lib I could find and then re-installed only v2.3 - but no 
joy (and I also tried explicitly setting PYTHONHOME before running the 
Apache exe).

Robert


From neel at mediapulse.com  Fri Oct  3 09:40:58 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] RE: O'Reilly Onlamp.com
Message-ID: <C0FC22C08B82074A88B50061764157776B9749@johnson.mediapulse.net>

Woot!  And the author seems so in trouch with mod_python too!

Mike

> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@apache.org] 
> Sent: Thursday, October 02, 2003 10:49 PM
> To: python-dev@httpd.apache.org; mod_python@modpython.org
> Subject: O'Reilly Onlamp.com
> 
> 
> 
> http://www.onlamp.com/pub/a/python/2003/10/02/mod_python.html
> 
> :-)
> 
> Grisha
> 

From alexiev at activesolutions.bg  Fri Oct  3 16:57:22 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] PublisherHandler
References: <200310021357.15162.alexiev@activesolutions.bg>
	<20031002144016.X57929@onyx.ispol.com>
Message-ID: <001b01c389b6$44c76fc0$0a01010a@dev1>

It's work fine under linux, but still have the same problem under windows.

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "Nikolay Alexiev" <alexiev@activesolutions.bg>
Cc: <mod_python@modpython.org>
Sent: Thursday, October 02, 2003 9:43 PM
Subject: Re: [mod_python] PublisherHandler


>
>
> On Thu, 2 Oct 2003, Nikolay Alexiev wrote:
>
> > I'm using PublisherHandler for my project. This is my  .htaccess file
> >
> >     AddHandler python-program .py
> >     SetHandler python-program
>
> You don't need both AddHandler and SetHandler, SetHandler alone will cover
> every type of file.
>
> >     PythonHandler mod_python.publisher
> >     PythonDebug On
> >
> > But now I can't load pictures from this folder and from its subfolder.
Can I
> > do something or the only way is to move images in a folder that is a
level
> > above?
>
> You can create a subdirectory and add "SetHandler None" which reverses
> previous SetHandler's:
>
> http://httpd.apache.org/docs-2.0/mod/core.html#sethandler
>
> HTH,
>
> Grisha

From mark at s-wit.net  Fri Oct  3 14:31:11 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] Hello newbie problems 
Message-ID: <004b01c389dc$85014810$6a1fa8c0@ocfl061>

Hello,
I installed python 2.3.1 (or whatever is the latest from the site)
I d/l the mod_python 3.03
I have apache 2.0.47 running.
I did as per each README for each isntall.
Apache is running. python seemed to install ok. There were no errors.
I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
That seemed okay.
make gives me this error: google search brought up nothing on it. (last 2
lines).
I did the ./httpd -DONE_PROCESS also.

python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /temp/mod_python-3.0.3/src.
*** Error code 1
Mark DeWar

From grisha at modpython.org  Fri Oct  3 15:16:26 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] Hello newbie problems 
In-Reply-To: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
Message-ID: <20031003151613.S71021@onyx.ispol.com>


Check this out:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> Hello,
> I installed python 2.3.1 (or whatever is the latest from the site)
> I d/l the mod_python 3.03
> I have apache 2.0.47 running.
> I did as per each README for each isntall.
> Apache is running. python seemed to install ok. There were no errors.
> I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> That seemed okay.
> make gives me this error: google search brought up nothing on it. (last 2
> lines).
> I did the ./httpd -DONE_PROCESS also.
>
> python2.3  -c -o requestobject.lo requestobject.c && touch requestobject.slo
> requestobject.c: In function `getreq_recmbr_off':
> requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
> requestobject.c:1055: (Each undeclared identifier is reported only once
> requestobject.c:1055: for each function it appears in.)
> requestobject.c:1056: syntax error before `l'
> requestobject.c:1057: `l' undeclared (first use in this function)
> requestobject.c: At top level:
> requestobject.c:1270: warning: initialization from incompatible pointer type
> apxs:Error: Command failed with rc=65536
> .
> *** Error code 1
>
> Stop in /temp/mod_python-3.0.3/src.
> *** Error code 1
> Mark DeWar
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From perry.tew at cibavision.novartis.com  Fri Oct  3 15:18:08 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:14 2004
Subject: [mod_python] 
 I hacked out Application.py using Session.py as a template. Is sucha thing
 needed by anyone?
Message-ID: <OF1B330742.C489E342-ON85256DB4.0068F426-85256DB4.006A07FD@EU.novartis.net>

Hello,
   I had need for global persistence in my mod_python application under 
Solaris.  I read Grisha's article last night talking about the new Session 
code.  I thought is was really useful.  So I looked it over and used it as 
a template for creating application level data sharing similar to Visual 
Basic's Application object or JSP's application object.  I basically 
stripped out the cookie code, time stamping, and used a constant hash id 
for retrieving the data.

I'm still raw to python.  I was wondering if such functionality is needed 
by the mod_python community or if such a thing already exists.  I was also 
hoping that if somebody did have a use for it then they could code review 
it for me and hopefully provide criticism or optimizations on the code. If 
neither, then I'll just keep it for my own use.

The code is listed below.  I'm not sure if this mailing list accepts 
attachments, so I'm providing it both ways.

Thanks,
Perry Tew




#######################################################################
from mod_python import apache
import _apache

import os
import time
import anydbm, whichdb
import cPickle
import tempfile

APP_SID = 'app.sid'

tempdir = tempfile.gettempdir()


class BaseApplication(dict):

    def __init__(self, req, lock=1):

        self._req = req
        self._lock = lock
        self._new = 1
        self._created = 0
        self._locked = 0

        dict.__init__(self)

        self.init_lock()

        # attempt to load ourselves
        #self.lock()
        if self.load():
            self._new = 0

        if self._new:
            self._created = time.time()


    def load(self):
        dict = self.do_load()
        if dict == None:
            return 0

        self._created  = dict["_created"]
        self.update(dict["_data"])
        return 1

    def save(self):
        dict = {"_data"    : self.copy(), 
        "_created" : self._created}
        self.do_save(dict)

    def delete(self):
        self.do_delete()
        self.clear()

    def init_lock(self):
        pass

    def lock(self):
        if self._lock:
            _apache._global_lock(self._req.server, None, 0)
            self._locked = 1

    def unlock(self):
        if self._lock and self._locked:
            _apache._global_unlock(self._req.server, None, 0)
            self._locked = 0

    def is_new(self):
        return not not self._new

    def created(self):
        return self._created

    def __del__(self):
        self.unlock()



class DbmApplication(BaseApplication):

    def __init__(self, req, dbm=None, dbmtype=anydbm):

        if not dbm:
            opts = req.get_options()
            if opts.has_key("ApplicationDbm"):
                dbm = opts["ApplicationDbm"]
            else:
                dbm = os.path.join(tempdir, req.server.server_hostname + 
str(req.server.port))

        self._dbmfile = dbm
        self._dbmtype = dbmtype

        BaseApplication.__init__(self, req)

    def _set_dbm_type(self):
        module = whichdb.whichdb(self._dbmfile)
        if module:
            self._dbmtype = __import__(module)
 
    def _get_dbm(self):
        result = self._dbmtype.open(self._dbmfile, 'c')
        if self._dbmtype is anydbm:
            self._set_dbm_type()
        return result


    def do_load(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            if dbm.has_key(APP_SID):
                return cPickle.loads(dbm[APP_SID])
            else:
                return None
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_save(self, dict):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            dbm[APP_SID] = cPickle.dumps(dict)
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)

    def do_delete(self):
        _apache._global_lock(self._req.server, None, 0)
        dbm = self._get_dbm()
        try:
            try:
                del dbm[APP_SID]
            except KeyError: pass
        finally:
            dbm.close()
            _apache._global_unlock(self._req.server, None, 0)


class MemoryApplication(BaseApplication):

    sdict = {}

    def __init__(self, req):

        BaseApplication.__init__(self, req)

    def do_load(self):
        if MemoryApplication.sdict.has_key(APP_SID):
            return MemoryApplication.sdict[APP_SID]
        return None

    def do_save(self, dict):
        MemoryApplication.sdict[APP_SID] = dict

    def do_delete(self):
        try:
            del MemoryApplication.sdict[APP_SID]
        except KeyError: pass

def Application(req):

    threaded = _apache.mpm_query(apache.AP_MPMQ_IS_THREADED)
    forked = _apache.mpm_query(apache.AP_MPMQ_IS_FORKED)
    daemons =  _apache.mpm_query(apache.AP_MPMQ_MAX_DAEMONS)

    if (threaded and ((not forked) or (daemons == 1))):
        return MemoryApplication(req)
    else:
        return DbmApplication(req)
#######################################################################
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Application.py
Type: application/octet-stream
Size: 7023 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031003/199b5fec/Application-0003.obj
From mark at s-wit.net  Fri Oct  3 16:34:29 2003
From: mark at s-wit.net (M.D. DeWar)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] Hello newbie problems #2
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
Message-ID: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>

The below link got mod_python to compile and install.
However when I put the info into the httpd.conf I get this error:

Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
Cannot load /usr/local/apache2/modules/mod_python.so into server:
/usr/local/apa
che2/modules/mod_python.so: Undefined symbol "pthread_self"

At the bottom of the link provided I see that I should or thought I should
configure with these options:
spiderman#
./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
e2/bin/apxs

(I tried the --with-python=  being blank but system sat there and with
/usr/local/bin/ just gave an error.)

I could not find more info on this error.
Thanks
mark

----- Original Message ----- 
From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
To: "M.D. DeWar" <mark@s-wit.net>
Cc: <mod_python@modpython.org>
Sent: Friday, October 03, 2003 3:16 PM
Subject: Re: [mod_python] Hello newbie problems


>
> Check this out:
>
> http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
>
> > Hello,
> > I installed python 2.3.1 (or whatever is the latest from the site)
> > I d/l the mod_python 3.03
> > I have apache 2.0.47 running.
> > I did as per each README for each isntall.
> > Apache is running. python seemed to install ok. There were no errors.
> > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > That seemed okay.
> > make gives me this error: google search brought up nothing on it. (last
2
> > lines).
> > I did the ./httpd -DONE_PROCESS also.
> >
> > python2.3  -c -o requestobject.lo requestobject.c && touch
requestobject.slo
> > requestobject.c: In function `getreq_recmbr_off':
> > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
function)
> > requestobject.c:1055: (Each undeclared identifier is reported only once
> > requestobject.c:1055: for each function it appears in.)
> > requestobject.c:1056: syntax error before `l'
> > requestobject.c:1057: `l' undeclared (first use in this function)
> > requestobject.c: At top level:
> > requestobject.c:1270: warning: initialization from incompatible pointer
type
> > apxs:Error: Command failed with rc=65536
> > .
> > *** Error code 1
> >
> > Stop in /temp/mod_python-3.0.3/src.
> > *** Error code 1
> > Mark DeWar
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >

From grisha at modpython.org  Fri Oct  3 16:49:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
Message-ID: <20031003164715.N75641@onyx.ispol.com>


This oftentimes means that either of Apache or Python was compiled without
thread support, and therefore you need to make sure that both are with or
without threads.

Which operating system is this on?

Grisha

On Fri, 3 Oct 2003, M.D. DeWar wrote:

> The below link got mod_python to compile and install.
> However when I put the info into the httpd.conf I get this error:
>
> Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> Cannot load /usr/local/apache2/modules/mod_python.so into server:
> /usr/local/apa
> che2/modules/mod_python.so: Undefined symbol "pthread_self"
>
> At the bottom of the link provided I see that I should or thought I should
> configure with these options:
> spiderman#
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> e2/bin/apxs
>
> (I tried the --with-python=  being blank but system sat there and with
> /usr/local/bin/ just gave an error.)
>
> I could not find more info on this error.
> Thanks
> mark
>
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 3:16 PM
> Subject: Re: [mod_python] Hello newbie problems
>
>
> >
> > Check this out:
> >
> > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > Hello,
> > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > I d/l the mod_python 3.03
> > > I have apache 2.0.47 running.
> > > I did as per each README for each isntall.
> > > Apache is running. python seemed to install ok. There were no errors.
> > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
> > > That seemed okay.
> > > make gives me this error: google search brought up nothing on it. (last
> 2
> > > lines).
> > > I did the ./httpd -DONE_PROCESS also.
> > >
> > > python2.3  -c -o requestobject.lo requestobject.c && touch
> requestobject.slo
> > > requestobject.c: In function `getreq_recmbr_off':
> > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> function)
> > > requestobject.c:1055: (Each undeclared identifier is reported only once
> > > requestobject.c:1055: for each function it appears in.)
> > > requestobject.c:1056: syntax error before `l'
> > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > requestobject.c: At top level:
> > > requestobject.c:1270: warning: initialization from incompatible pointer
> type
> > > apxs:Error: Command failed with rc=65536
> > > .
> > > *** Error code 1
> > >
> > > Stop in /temp/mod_python-3.0.3/src.
> > > *** Error code 1
> > > Mark DeWar
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Fri Oct  3 19:28:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<20031003164715.N75641@onyx.ispol.com>
	<000701c389f2$0a3285c0$6a1fa8c0@ocfl061>
Message-ID: <20031003192203.W77195@onyx.ispol.com>


On Fri, 3 Oct 2003, M.D. DeWar wrote:

> freebsd 4.8

On FreeBSD Apache defaults to no threads which creates a problem, so
either you have to compile Python without threads, or use a trick to load
threaded libs into Apache.

I think the simplest thing on FreeBSD is to use the ports rather than
trying to do it by hand (you'll need an up-to-date ports collection, see
the FreeBSD handbook on that):

# cd /usr/ports/www/mod_python3
# make install

Then read the warning at the end of the install that will tell you about
the thread libs loading trick.

Grisha


> apache 2.0.47
> php 4.3.2
> Mark
> ----- Original Message -----
> From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> To: "M.D. DeWar" <mark@s-wit.net>
> Cc: <mod_python@modpython.org>
> Sent: Friday, October 03, 2003 4:49 PM
> Subject: Re: [mod_python] Hello newbie problems #2
>
>
> >
> > This oftentimes means that either of Apache or Python was compiled without
> > thread support, and therefore you need to make sure that both are with or
> > without threads.
> >
> > Which operating system is this on?
> >
> > Grisha
> >
> > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> >
> > > The below link got mod_python to compile and install.
> > > However when I put the info into the httpd.conf I get this error:
> > >
> > > Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
> > > Cannot load /usr/local/apache2/modules/mod_python.so into server:
> > > /usr/local/apa
> > > che2/modules/mod_python.so: Undefined symbol "pthread_self"
> > >
> > > At the bottom of the link provided I see that I should or thought I
> should
> > > configure with these options:
> > > spiderman#
> > >
> ./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
> > > e2/bin/apxs
> > >
> > > (I tried the --with-python=  being blank but system sat there and with
> > > /usr/local/bin/ just gave an error.)
> > >
> > > I could not find more info on this error.
> > > Thanks
> > > mark
> > >
> > > ----- Original Message -----
> > > From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
> > > To: "M.D. DeWar" <mark@s-wit.net>
> > > Cc: <mod_python@modpython.org>
> > > Sent: Friday, October 03, 2003 3:16 PM
> > > Subject: Re: [mod_python] Hello newbie problems
> > >
> > >
> > > >
> > > > Check this out:
> > > >
> > > > http://www.modpython.org/FAQ/faqw.py?req=all#4.2
> > > >
> > > > On Fri, 3 Oct 2003, M.D. DeWar wrote:
> > > >
> > > > > Hello,
> > > > > I installed python 2.3.1 (or whatever is the latest from the site)
> > > > > I d/l the mod_python 3.03
> > > > > I have apache 2.0.47 running.
> > > > > I did as per each README for each isntall.
> > > > > Apache is running. python seemed to install ok. There were no
> errors.
> > > > > I ./configured --with-apxs=/usr/local/apache2/bin/apxs for
> mod_python.
> > > > > That seemed okay.
> > > > > make gives me this error: google search brought up nothing on it.
> (last
> > > 2
> > > > > lines).
> > > > > I did the ./httpd -DONE_PROCESS also.
> > > > >
> > > > > python2.3  -c -o requestobject.lo requestobject.c && touch
> > > requestobject.slo
> > > > > requestobject.c: In function `getreq_recmbr_off':
> > > > > requestobject.c:1055: `LONG_LONG' undeclared (first use in this
> > > function)
> > > > > requestobject.c:1055: (Each undeclared identifier is reported only
> once
> > > > > requestobject.c:1055: for each function it appears in.)
> > > > > requestobject.c:1056: syntax error before `l'
> > > > > requestobject.c:1057: `l' undeclared (first use in this function)
> > > > > requestobject.c: At top level:
> > > > > requestobject.c:1270: warning: initialization from incompatible
> pointer
> > > type
> > > > > apxs:Error: Command failed with rc=65536
> > > > > .
> > > > > *** Error code 1
> > > > >
> > > > > Stop in /temp/mod_python-3.0.3/src.
> > > > > *** Error code 1
> > > > > Mark DeWar
> > > > >
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
From idiot1 at netzero.net  Sat Oct  4 20:17:18 2003
From: idiot1 at netzero.net (Kirk Bailey)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] Hello newbie problems #2
In-Reply-To: <20031003164715.N75641@onyx.ispol.com>
References: <004b01c389dc$85014810$6a1fa8c0@ocfl061>
	<20031003151613.S71021@onyx.ispol.com>
	<002a01c389ed$bec08b90$6a1fa8c0@ocfl061>
	<20031003164715.N75641@onyx.ispol.com>
Message-ID: <3F7F630E.2050601@netzero.net>

Apache FORKS, spawning new processes- in advance, and has a stable of them on 
hold waiting for incoming requests. When one has handled the number of service 
requests you preset in the conf file, it dies- and is replaced with a new one. 
This uses up a lot of memory with a lot of daemonspawn, and a threading server 
is more memory efficent, although difficult as all hell to write. Python will 
support threading servers if you write one that way. In fact, just to screw with 
your minds, here is one now:
-------------------------------BEWARE WORD WRAP-----------------------------
#!C:\Python22\Pythonw.exe
from SocketServer import ThreadingMixIn
import BaseHTTPServer, CGIHTTPServer, os
#
os.chdir ('.\web')	# INSTALL IN c:\Python22; web pages in ~\web
#
class ThreadingCGIServer(ThreadingMixIn,BaseHTTPServer.HTTPServer):
	pass
import sys
server=ThreadingCGIServer(('',8080),CGIHTTPServer.CGIHTTPRequestHandler)
try:
	while 1:
		sys.stdout.flush()
		server.handle_request()
except KeyboardInterrupt:
	print 'Finished.'
---------------------------END OF SCRIPT, CHAOS FOLLOWS------------------
This is by Steve Holden of the book 'Cgi programming for the Internet'.



Gregory (Grisha) Trubetskoy wrote:

> This oftentimes means that either of Apache or Python was compiled without
> thread support, and therefore you need to make sure that both are with or
> without threads.
> 
> Which operating system is this on?
> 
> Grisha
> 
> On Fri, 3 Oct 2003, M.D. DeWar wrote:
> 
> 
>>The below link got mod_python to compile and install.
>>However when I put the info into the httpd.conf I get this error:
>>
>>Syntax error on line 262 of /usr/local/apache2/conf/httpd.conf:
>>Cannot load /usr/local/apache2/modules/mod_python.so into server:
>>/usr/local/apa
>>che2/modules/mod_python.so: Undefined symbol "pthread_self"
>>
>>At the bottom of the link provided I see that I should or thought I should
>>configure with these options:
>>spiderman#
>>./configure --with-python=/usr/local/bin/python --with-apxs=/usr/local/apach
>>e2/bin/apxs
>>
>>(I tried the --with-python=  being blank but system sat there and with
>>/usr/local/bin/ just gave an error.)
>>
>>I could not find more info on this error.
>>Thanks
>>mark
>>
>>----- Original Message -----
>>From: "Gregory (Grisha) Trubetskoy" <grisha@modpython.org>
>>To: "M.D. DeWar" <mark@s-wit.net>
>>Cc: <mod_python@modpython.org>
>>Sent: Friday, October 03, 2003 3:16 PM
>>Subject: Re: [mod_python] Hello newbie problems
>>
>>
>>
>>>Check this out:
>>>
>>>http://www.modpython.org/FAQ/faqw.py?req=all#4.2
>>>
>>>On Fri, 3 Oct 2003, M.D. DeWar wrote:
>>>
>>>
>>>>Hello,
>>>>I installed python 2.3.1 (or whatever is the latest from the site)
>>>>I d/l the mod_python 3.03
>>>>I have apache 2.0.47 running.
>>>>I did as per each README for each isntall.
>>>>Apache is running. python seemed to install ok. There were no errors.
>>>>I ./configured --with-apxs=/usr/local/apache2/bin/apxs for mod_python.
>>>>That seemed okay.
>>>>make gives me this error: google search brought up nothing on it. (last
>>
>>2
>>
>>>>lines).
>>>>I did the ./httpd -DONE_PROCESS also.
>>>>
>>>>python2.3  -c -o requestobject.lo requestobject.c && touch
>>
>>requestobject.slo
>>
>>>>requestobject.c: In function `getreq_recmbr_off':
>>>>requestobject.c:1055: `LONG_LONG' undeclared (first use in this
>>
>>function)
>>
>>>>requestobject.c:1055: (Each undeclared identifier is reported only once
>>>>requestobject.c:1055: for each function it appears in.)
>>>>requestobject.c:1056: syntax error before `l'
>>>>requestobject.c:1057: `l' undeclared (first use in this function)
>>>>requestobject.c: At top level:
>>>>requestobject.c:1270: warning: initialization from incompatible pointer
>>
>>type
>>
>>>>apxs:Error: Command failed with rc=65536
>>>>.
>>>>*** Error code 1
>>>>
>>>>Stop in /temp/mod_python-3.0.3/src.
>>>>*** Error code 1
>>>>Mark DeWar
>>>>
>>>>_______________________________________________
>>>>Mod_python mailing list
>>>>Mod_python@modpython.org
>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 

-- 

end

Cheers!
         Kirk D Bailey

  +                              think                                +
   http://www.howlermonkey.net  +-----+        http://www.tinylist.org
   http://www.listville.net     | BOX |  http://www.sacredelectron.org
   Thou art free"-ERIS          +-----+     'Got a light?'-Prometheus
  +                              kniht                                +

Fnord.

From scott_list at mischko.com  Mon Oct  6 12:11:27 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] 
	How to get the Apache authentication requirements into Python
	script?
Message-ID: <200310061211.27945.scott_list@mischko.com>

I have a home-brew Apache Authentication module coming together using 
mod_python and I'm wondering how to get the 'require valid-user' and 'require 
group blah' info into my Python handler so I know which groups to look out 
for, etc.  I've been over the mod_python docs quite a bit and I can't find 
info on this.

<Location /members>
    SetHandler python-program
    PythonDebug On
    PythonAuthenHandler www
    AuthType Basic
    AuthName "Members Login"
    require group admin
</Location>

If I have the above in my httpd.conf file, I'd like to have the group 
requirement of 'admin' come through to the Python script and the Location.

If I have 'require valid-user' in a .conf or .htaccess file, I'd like to be 
able to get those in also.  I've got a hunch a .htaccess file is handled 
differently. Is that correct?

Scott
From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:20:32 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] FINFO_* variables
Message-ID: <16257.56480.68230.797089@gargle.gargle.HOWL>


I've checked the FAQ and searched the archives, but have come up
empty...

There seems to be a problem with the FINFO_* variables in module
mod_python.apache.  In my version (3.0.3, built from source) the
following are defined:

    # the req.finfo tuple
    FINFO_MODE = 0
    FINFO_INO = 1
    FINFO_DEV = 2
    FINFO_NLINK = 4
    FINFO_UID = 5
    FINFO_GID = 6
    FINFO_SIZE = 7
    FINFO_ATIME = 8
    FINFO_MTIME = 9
    FINFO_CTIME = 10
    FINFO_FNAME = 11
    FINFO_NAME = 12

You may note the skip from 2 to 4.  I tested this with the following
handler:

    def handler(req):

	req.write('req.finfo: ' + str(req.finfo))
	return apache.OK

Going to a page that uses this handler, I get the following output
(I've pretty-printed it for readability):

    req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
		1065409206, 1065409206, '/var/www/py/foo', None)

If you line up the FINFO_* indexes with the appropriate tuple elements:

    FINFO_MODE = 0          1604	     	 	 
    FINFO_INO = 1	    359355	     	 	 
    FINFO_DEV = 2	    775		 
    FINFO_NLINK = 4	    500		 
    FINFO_UID = 5	    500		 
    FINFO_GID = 6	    14		 
    FINFO_SIZE = 7	    1065473633	 
    FINFO_ATIME = 8	    1065409206	 
    FINFO_MTIME = 9	    1065409206	 
    FINFO_CTIME = 10	    '/var/www/py/foo'
    FINFO_FNAME = 11	    None             
    FINFO_NAME = 12

You get the picture: everything is off by one after FINFO_DEV.  I
looked in CVS and noticed that the significant change in the FINFO_*
vars was between versions 1.45 and 1.46.  I'm quite surprised since
according to the repository this change happened in July of 2002.  I
can't be the only one who has used FINFO_* since then, can I?

BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).

Thanks,

 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From dpopowich at mtrsd.k12.ma.us  Mon Oct  6 17:26:28 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16257.56836.418496.771252@gargle.gargle.HOWL>



 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:

I should have added that I had the same problem with 3.0.1, prebuilt
with redhat 9.0 rpm.  I thought perhaps I had an old and/or redhat
bug, so I upgraded to the latest stable source.  When the same problem
occured with 3.0.3 I then poked around at the CVS tree and noticed the
FINFO_* vars appear to have been off for some time now.

-- 
 ---------------------
 Daniel Popowich     /
 Network Specialist /
 ------------------------------------------------------------------------------
    /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
   //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
  //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
 //      || //   //   \\  //// //////    413.625.0192 x22                  /
 --------------------------------------------------------------------------

From perry.tew at cibavision.novartis.com  Tue Oct  7 00:33:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then
 apache tries to serve req as physical file in htdocs?
Message-ID: <OFC2BD368E.0E801EE4-ON85256DB8.0017C350-85256DB8.001910F1@EU.novartis.net>

Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 
directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 
anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


From schnieper at semafor.ch  Tue Oct  7 09:01:27 2003
From: schnieper at semafor.ch (Lukas Schnieper)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] Problems with configure and make
Message-ID: <3F8264C7.3080201@semafor.ch>

Hi all

Are there any known problems with this versions?
I tried python 2.2.2 and 2.3.2
mod_python 3.1.0a and 3.0.3

But i always get a lot of mistakes by doing the make command.
Or could this be something with Apache 2.0.44

If it helps i can mail the errormessages.

Thanks in advance
Lukas

From perry.tew at cibavision.novartis.com  Tue Oct  7 09:10:26 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] PythonHandler in <Location> works until I add a
 PythonAuthenHandler, then apache tries to serve req as physical file in
 htdocs?
Message-ID: <OF06AA765B.2624506B-ON85256DB8.0048507A-85256DB8.00485DEA@EU.novartis.net>

The more I play with this, the more I think the problem I'm seeing is 
because I'm not using the
security as it was designed.  I don't think apache likes a 'require' 
directive without an AuthType
or AuthName.  The only problem is, if I add those two directives, the user 
is prompted for a username
and password, which I want to avoid since I'm using SSL certs.

I changed the handler from an authen handler to an access handler. 
Everything works like a charm.
I guess I'll live with that. Although it's technically not the correct 
place to authenticate, it's close enough
not to be confusing.

Thanks everyone,
Perry Tew




Hello,
   I'm having a issue using both a PythonAuthenHandler and PythonHandler 
in the same <Location> directive.

The PythonAuthenHandler works when used within a <Directory /www/cgi-bin/> 

directive.
The PythonHandler works with a <Location> directive

However, when I add the Authen handler to the <Location> directive, my 
python handler is no longer called, instead, I receive a 404 stating that 
my uri was mapped to the htdocs directory and could not be found.   Allow 
me to illustrate:

<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager
</Location>

The above works fine.  My python script is located in my PythonPath under 
the site-packages directory and is named TicketManager.py.

However, this doesn't work:
<Location /manager>
        SetHandler python-program
        PythonHandler TicketManager

        PythonAuthenHandler TicketAuthenHandler
        require valid-user
</Location>

Instead of seeing the output of my python script, I receive a 404 error 
and the following is displayed in my error_log:
[Tue Oct 07 00:13:59 2003] [error] [client 170.60.46.224] File does not 
exist: /web/devel/tewpe1/py/apache2/htdocs/manager

Again, the authen handler works when protecting a physical directory. Does 

anyone have any insight to this?  I know the security directives seem a 
little bare bones, but I'm not using Basic Auth, I'm using SSL Client 
Certs.  However, it does work.  My authen handler returns apache.OK. 

I also have a CleanupHandler defined (but not shown) and that is 
executing.


Thanks for your  time,
Perry Tew


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From grisha at modpython.org  Tue Oct  7 23:52:29 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python]  How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310061211.27945.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
Message-ID: <20031007235047.H658@onyx.ispol.com>



On Mon, 6 Oct 2003, Scott Chapman wrote:

> mod_python and I'm wondering how to get the 'require valid-user' and 'require
> group blah' info into my Python handler so I know which groups to look out
> for, etc.  I've been over the mod_python docs quite a bit and I can't find
> info on this.

Right now you cannot. But 3.1 will have a req.requires() method which will
return just that info. If you *really* need it now, you can try out the
latest version from CVS.

Grisha
From seth at picklematrix.net  Tue Oct  7 22:41:29 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] could not import mod_python.apache ?
Message-ID: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>

Hello,

I'm very excited to try out the new 3.1 alpha.  I removed the 
mod_python RPM from RH9, did a configure, make, make install.  I then 
added:

LoadModule python_module /usr/lib/httpd/modules/mod_python.so

<Directory /home/*/public_html>
     SetHandler mod_python
     PythonHandler mod_python.publisher
</Directory>

And restarted.

My simple script:

def index(req):
     return "We are in index()"

Which made my error_log blow up with a lot of these messages:

[Wed Oct 08 03:25:50 2003] [error] make_obcallback: could not import 
mod_python.
apache.!
Traceback (most recent call last):
   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
784, in ?
     mpm_query = _apache.mpm_query
AttributeError: 'module' object has no attribute 'mpm_query'

And it killed apache.  Then I tried starting it back up (httpd 
restart), and I get this error, and it finishes with "Configuration 
Failed!"

[Wed Oct 08 03:25:54 2003] [notice] mod_python: Creating 150 session 
mutexes bas
ed on 150 max processes and 0 max threads.
[Wed Oct 08 03:25:54 2003] [error] (28)No space left on device: 
mod_python: Fail
ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

Any ideas what is going on?  I think I followed the installation 
instructions and tutorial to every step.  I'm running RH9 brand new, 
very bare install.  All standard RPMs, nothing from source (except 
this, of course).  And I removed the mod_python RPM before starting 
this.

Any tips or hints would be greatly appreciated.  Did I miss a step?

Thanks!
Seth

From grisha at modpython.org  Wed Oct  8 09:33:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
References: <35FE1FE8-F96B-11D7-8807-000A9576D038@picklematrix.net>
Message-ID: <20031008092957.Y6762@onyx.ispol.com>



On Tue, 7 Oct 2003, Seth Ladd wrote:

> Traceback (most recent call last):
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 784, in ?
>      mpm_query = _apache.mpm_query
> AttributeError: 'module' object has no attribute 'mpm_query'

Sounds to me like you still have the old mod_python/apache.py in your
pythonpath.

> ed on 150 max processes and 0 max threads.
> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
> mod_python: Fail
> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).

There are references to that earlier in the list, also I believe the error
log shows a hint on what to do. It has to do with the default number of
available semaphores on Linux which needs to be increased.

The latest version that is in CVS deals with this issue a bit better.

Grisha
From scott_list at mischko.com  Wed Oct  8 07:06:31 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python]  How to get the Apache authentication requirements
	into Python script?
In-Reply-To: <20031007235047.H658@onyx.ispol.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
Message-ID: <200310080706.31323.scott_list@mischko.com>

On Tuesday 07 October 2003 20:52, Gregory (Grisha) Trubetskoy wrote:
> On Mon, 6 Oct 2003, Scott Chapman wrote:
> > mod_python and I'm wondering how to get the 'require valid-user' and
> > 'require group blah' info into my Python handler so I know which groups
> > to look out for, etc.  I've been over the mod_python docs quite a bit and
> > I can't find info on this.
>
> Right now you cannot. But 3.1 will have a req.requires() method which will
> return just that info. If you *really* need it now, you can try out the
> latest version from CVS.

Grisha,
What's the scheduled release date for 3.1?

Scott

From grisha at modpython.org  Wed Oct  8 11:41:46 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] How to get the Apache authentication requirements
 into Python script?
In-Reply-To: <200310080706.31323.scott_list@mischko.com>
References: <200310061211.27945.scott_list@mischko.com>
	<20031007235047.H658@onyx.ispol.com>
	<200310080706.31323.scott_list@mischko.com>
Message-ID: <20031008113933.V6762@onyx.ispol.com>




On Wed, 8 Oct 2003, Scott Chapman wrote:

> Grisha,
> What's the scheduled release date for 3.1?

We do not have a formal schedule. I am hoping to release it as beta in the
next couple of days, and the final some time just before the upcoming
Apachecon.

Grisha
From anthony_barker at hotmail.com  Wed Oct  8 17:22:15 2003
From: anthony_barker at hotmail.com (Anthony Barker)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] getting started
Message-ID: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>

I was wondering how to get started processing an html form.

1) is there something equivalent to Apache::PerlRun?

"This module does not cache compiled scripts between runs.
A script is loaded and compiled freshly each time it is requested.
However, Apache::PerlRun still avoids the overhead of starting a new Perl
interpreter for each CGI script, so it's faster than traditional Perl CGI
scripting but slower than Apache::Registry or vanilla Apache API modules."

2) How would mod_python enable this simple script?

#!/usr/bin/python2
import cgi, sys, string
sys.stderr = sys.stdout
print "Content-type: text/html\r\n"

out1 = """
<HTML>
<HEAD><TITLE>Info Form</TITLE></HEAD>
<BODY BGCOLOR = white>
<H3>Please, enter your name and age.</H3>
<TABLE BORDER = 0>
<FORM METHOD = post ACTION = "t3.cgi">
<TR><TH>Name:</TH><TD>
<INPUT type = text name = "name"></TD>
</TABLE>
<INPUT TYPE = hidden NAME = "action" VALUE = "display"
<INPUT TYPE = submit VALUE = "Enter">
</FORM>
</BODY>
</HTML>"""

form = cgi.FieldStorage()
if form.has_key("action"):
    if form.has_key("name"):
        print "hello " + form["name"].value
else:
    print out1

_________________________________________________________________
Instant message in style with MSN Messenger 6.0. Download it now FREE!  
http://msnmessenger-download.com

From seth at picklematrix.net  Wed Oct  8 07:52:37 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] could not import mod_python.apache ?
In-Reply-To: <20031008092957.Y6762@onyx.ispol.com>
Message-ID: <341CC3E0-F9B8-11D7-A8D2-000A9576D038@picklematrix.net>

>
> Sounds to me like you still have the old mod_python/apache.py in your
> pythonpath.

That's what I thought to.  I'll do another install after I clean those 
files out by hand.

>
>> ed on 150 max processes and 0 max threads.
>> [Wed Oct 08 03:25:54 2003] [error] (28)No space left on device:
>> mod_python: Fail
>> ed to create global mutex 125 of 150 (/tmp/mpmtx12242125).
>
> There are references to that earlier in the list, also I believe the 
> error
> log shows a hint on what to do. It has to do with the default number of
> available semaphores on Linux which needs to be increased.

Exactly.  I should have phrased my question as "What are the issues 
with increasing the semaphores, and how do I do it?" :)

I'll search previously on the list to see what I can find.

Kudos for the work done on mod_python!
Seth

From grisha at modpython.org  Wed Oct  8 14:10:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] getting started
In-Reply-To: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
References: <BAY1-F123j6MkKKhD5B00002fc6@hotmail.com>
Message-ID: <20031008135000.C7910@onyx.ispol.com>


On Wed, 8 Oct 2003, Anthony Barker wrote:

> I was wondering how to get started processing an html form.
>
> 1) is there something equivalent to Apache::PerlRun?
>
> "This module does not cache compiled scripts between runs. A script is
> loaded and compiled freshly each time it is requested. However,
> Apache::PerlRun still avoids the overhead of starting a new Perl
> interpreter for each CGI script, so it's faster than traditional Perl
> CGI scripting but slower than Apache::Registry or vanilla Apache API
> modules."

No. (The cgi handler is as close as you will get to this). I don't know
what the Perl folks do, but on Python side the only way to achieve this
(including a clean namespace) is to reset the interpreter, which only
results in marginal improvement. Not to mention that there is something
awkward with this whole approach :-)

> 2) How would mod_python enable this simple script?
>
> #!/usr/bin/python2
> import cgi, sys, string
> sys.stderr = sys.stdout
> print "Content-type: text/html\r\n"
>
> out1 = """
> <HTML>
> <HEAD><TITLE>Info Form</TITLE></HEAD>
> <BODY BGCOLOR = white>
> <H3>Please, enter your name and age.</H3>
> <TABLE BORDER = 0>
> <FORM METHOD = post ACTION = "t3.cgi">
> <TR><TH>Name:</TH><TD>
> <INPUT type = text name = "name"></TD>
> </TABLE>
> <INPUT TYPE = hidden NAME = "action" VALUE = "display"
> <INPUT TYPE = submit VALUE = "Enter">
> </FORM>
> </BODY>
> </HTML>"""
>
> form = cgi.FieldStorage()
> if form.has_key("action"):
>     if form.has_key("name"):
>         print "hello " + form["name"].value
> else:
>     print out1
>

If you are using the publisher handler, then your Apache config would look
like this (and make sure it is not a CGI ScriptAlias):

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

And the script could be something like the below. If the script was named
form.py, you'd access the below via http://blah.bla.com/form.py/info.


def info(name=None, action=None):

    out1 = """
    <HTML>
    <HEAD><TITLE>Info Form</TITLE></HEAD>
    <BODY BGCOLOR = white>
    <H3>Please, enter your name and age.</H3>
    <TABLE BORDER = 0>
    <FORM METHOD = post ACTION = "info">
    <TR><TH>Name:</TH><TD>
    <INPUT type = text name = "name"></TD>
    </TABLE>
    <INPUT TYPE = hidden NAME = "action" VALUE = "display"
    <INPUT TYPE = submit VALUE = "Enter">
    </FORM>
    </BODY>
    </HTML>"""

    if action and name:
        return "hello %s" % name
    else:
        return out1



HTH,

Grisha
From dpopowich at mtrsd.k12.ma.us  Wed Oct  8 16:54:14 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <16260.31094.314431.782441@gargle.gargle.HOWL>


I downloaded 3.1.0a and this same bug exists there, too...

Daniel J. Popowich writes:
> 
> I've checked the FAQ and searched the archives, but have come up
> empty...
> 
> There seems to be a problem with the FINFO_* variables in module
> mod_python.apache.  In my version (3.0.3, built from source) the
> following are defined:
> 
>     # the req.finfo tuple
>     FINFO_MODE = 0
>     FINFO_INO = 1
>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>     FINFO_UID = 5
>     FINFO_GID = 6
>     FINFO_SIZE = 7
>     FINFO_ATIME = 8
>     FINFO_MTIME = 9
>     FINFO_CTIME = 10
>     FINFO_FNAME = 11
>     FINFO_NAME = 12
> 
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
> 
>     def handler(req):
> 
> 	req.write('req.finfo: ' + str(req.finfo))
> 	return apache.OK
> 
> Going to a page that uses this handler, I get the following output
> (I've pretty-printed it for readability):
> 
>     req.finfo: (1604, 359355, 775, 1, 500, 500, 14, 1065473633,
> 		1065409206, 1065409206, '/var/www/py/foo', None)
> 
> If you line up the FINFO_* indexes with the appropriate tuple elements:
> 
>     FINFO_MODE = 0          1604	     	 	 
>     FINFO_INO = 1	    359355	     	 	 
>     FINFO_DEV = 2	    775		 
>     FINFO_NLINK = 4	    500		 
>     FINFO_UID = 5	    500		 
>     FINFO_GID = 6	    14		 
>     FINFO_SIZE = 7	    1065473633	 
>     FINFO_ATIME = 8	    1065409206	 
>     FINFO_MTIME = 9	    1065409206	 
>     FINFO_CTIME = 10	    '/var/www/py/foo'
>     FINFO_FNAME = 11	    None             
>     FINFO_NAME = 12
> 
> You get the picture: everything is off by one after FINFO_DEV.  I
> looked in CVS and noticed that the significant change in the FINFO_*
> vars was between versions 1.45 and 1.46.  I'm quite surprised since
> according to the repository this change happened in July of 2002.  I
> can't be the only one who has used FINFO_* since then, can I?
> 
> BTW, this is used with apache 2.0.40 (prebuilt, redhat 9.0 rpm).
> 
> Thanks,
> 
>  ---------------------
>  Daniel Popowich     /
>  Network Specialist /
>  ------------------------------------------------------------------------------
>     /\   /| /////// ////// ////   ////   Mohawk Trail Regional School District/
>    //\\ //|   //   //  //  \\    //  //  24 Ashfield Rd.                     /
>   //  \//||  //   //////    \\  //  //   Shelburne Falls, MA 01370          /
>  //      || //   //   \\  //// //////    413.625.0192 x22                  /
>  --------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at modpython.org  Wed Oct  8 17:02:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16257.56480.68230.797089@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
Message-ID: <20031008165453.S10058@onyx.ispol.com>


On Mon, 6 Oct 2003, Daniel J. Popowich wrote:

>     FINFO_DEV = 2
>     FINFO_NLINK = 4
>
> You may note the skip from 2 to 4.  I tested this with the following
> handler:
>
> I can't be the only one who has used FINFO_* since then, can I?

Looks like you are :-)

I checked and indeed FINFO_NLINK should be 3, and from there on they're
off by one, thanks for catching this.

Grisha
From grisha at modpython.org  Wed Oct  8 17:15:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] FINFO_* variables
In-Reply-To: <16260.31094.314431.782441@gargle.gargle.HOWL>
References: <16257.56480.68230.797089@gargle.gargle.HOWL>
 <16260.31094.314431.782441@gargle.gargle.HOWL>
Message-ID: <20031008171450.N10594@onyx.ispol.com>


Well it was only fixed about 10 minutes ago :-)

Grisha

On Wed, 8 Oct 2003, Daniel J. Popowich wrote:

>
> I downloaded 3.1.0a and this same bug exists there, too...
>
> Daniel J. Popowich writes:
> >
From grisha at modpython.org  Wed Oct  8 21:12:47 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] apache.log_error
In-Reply-To: <029f01c383af$ef321c60$95fe46c0@GIRLS>
References: <029f01c383af$ef321c60$95fe46c0@GIRLS>
Message-ID: <20031008210859.H11965@onyx.ispol.com>


You will have better luck on Windows with req.log_error than
apache.log_error, or you will have to call apache.log_error with the other
two optional arguments, level and server:

apache.log_error("blah", apache.APLOG_ERR, req.server)

I *think* (I haven't researched this too much) this is because on unix,
when req.server is omited, the function writes to stderr, which ultimately
ends up in the logs, but on windows, it goes nowhere.

But again, if you have a request object, always use:

req.log_error("blah")

Grisha

On Thu, 25 Sep 2003, Seung Chan Lim wrote:

> If I'm trying to spew error messages out to the default apache error log am
> I doing the right thing by using apache.log_error ??
>
> The problem is that I don't see anything on the default error log which I
> believe is Apache2/logs/error.log
>
> This is using mod_python 3.03
> Windows 2000
> Apache 2.0
> Python 2.2
>
> thanks
>
> slim
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Wed Oct  8 23:53:51 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] [help]please give an input filter example ?
In-Reply-To: <001201c38631$f12aa850$db64a8c0@camgelo>
References: <007c01c37dc6$32d21050$db64a8c0@camgelo>
	<3F69851B.3080703@sjsoft.com>
	<009d01c37dd0$bc2c5f40$db64a8c0@camgelo> <3F69916F.10406@sjsoft.com>
	<3F69D71A.8080005@sjsoft.com><20030923102333.N24322@onyx.ispol.com>
	<20030925092737.H57967@onyx.ispol.com>
	<20030926104954.C62356@onyx.ispol.com>
	<001201c38631$f12aa850$db64a8c0@camgelo>
Message-ID: <20031008234855.Q11965@onyx.ispol.com>


On Mon, 29 Sep 2003, camge wrote:

>     Below is the error message and error code is 730035.

This is SOCEWOULDBLOCK (aka EAGAIN). Not sure why it is returned here
since the read should be blocking (as the code specifies APR_BLOCK_READ),
may be its a windows thing, but I added a check for it, which should
eliminate this error:

        if (!APR_STATUS_IS_EAGAIN(self->rc) && !APR_STATUS_IS_SUCCESS(self->rc)) {
            PyErr_SetObject(PyExc_IOError,
	                    PyString_FromString("Input filter read error"));

(You can make this change in your sources, or check out the latest stuff
from CVS)

Grisha
From hara at oderwat.de  Thu Oct  9 12:30:36 2003
From: hara at oderwat.de (HaRa (OderWat))
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] 
	Prob. with Win32 mod_python 3.x and python 2.3.x and Apache2
Message-ID: <001401c38e50$69f41e80$ea5545d5@ikc.net>

Hi there,

I make it short:

If I d/l  the current 3.1.0a or 3.0.3 as win32 executable and install it on my apache2/python2.3.2 system, I get errors because the
win32 mod_python in either version opens python22.dll !!! I verified this in mod_python.so (contains: python22.dll). You can even
look at the Apache Signature:

Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.2.3 PHP/4.3.3 Server
                                                                     -------------

The 3.0.3 lets me choose if I want to install for 2.2 or 2.3 (if both are present). The 3.1.0a just asks to install for 2.3 ... bot
then open the python22.dll ..

Thank you for your Time!
Keep up the good work!

- Hans Raaf (Germany) / www.oderwat.de



From rclilly at cox.net  Thu Oct  9 18:22:28 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
Message-ID: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>

My setup:		Apache/2.0.47 (Win32) PHP/4.3.2 mod_python/3.0.3 Python/2.2.3

My http.conf:	LoadModule python_module modules/mod_python.so

			<Directory F:/MyApache/Apache2/htdocs/test>
			  AddHandler python-program .py
			  PythonHandler mptest
			  PythonDebug On
			</Directory>

When I try to access http://localhost/test/mptest.py I get and Internal
Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
make_obcallback: could not import mod_python.apache.

As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
start when using mod_python with Python 3.

Any clues on what I need to do to get mod_python working under Apache2?

TIA,

Robert Lilly
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From rclilly at cox.net  Thu Oct  9 19:01:41 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache.
In-Reply-To: <AMEDJPACLBJGECKBDAOKAEHBCBAA.rclilly@cox.net>
Message-ID: <AMEDJPACLBJGECKBDAOKGEHCCBAA.rclilly@cox.net>

> My setup:		Apache/2.0.47 (Win32) PHP/4.3.2
> mod_python/3.0.3 Python/2.2.3
>
> My http.conf:	LoadModule python_module modules/mod_python.so
>
> 			<Directory F:/MyApache/Apache2/htdocs/test>
> 			  AddHandler python-program .py
> 			  PythonHandler mptest
> 			  PythonDebug On
> 			</Directory>
>
> When I try to access http://localhost/test/mptest.py I get and Internal
> Server Error. The error.log shows: [Thu Oct 09 18:09:56 2003] [error]
> make_obcallback: could not import mod_python.apache.
>
> As noted above, I'm using Python 2.2.3 as I couldn't even get Apache to
> start when using mod_python with Python 3.
>
> Any clues on what I need to do to get mod_python working under Apache2?
>
> TIA,
>
> Robert Lilly

I solved my problem. After uninstalling Python 2.3.2 and re-installing 2.2.3
I didn't re-install mod_python.  After re-installing mod_python all is well.

Is there a reason mod_python won't work with the Python 2.3? It has been out
quite a while now.

Thanks,

Robert
---
Outgoing mail is certified Virus Free.
Checked by AVG anti-virus system (http://www.grisoft.com).
Version: 6.0.524 / Virus Database: 321 - Release Date: 2003.10.06

From cs1spw at bath.ac.uk  Sat Oct 11 00:13:05 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
Message-ID: <3F873D01.8090107@bath.ac.uk>

Hi all,

Are there any plans for any mod_python related activities at PyCon DC 
next year?

http://www.python.org/pycon/dc2004/

Cheers,

Simon Willison
http://simon.incutio.com/



From grisha at modpython.org  Sat Oct 11 08:23:23 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] mod_python presence at PyCon DC 2004?
In-Reply-To: <3F873D01.8090107@bath.ac.uk>
References: <3F873D01.8090107@bath.ac.uk>
Message-ID: <20031011082229.Y67678@onyx.ispol.com>


Since it is in DC, I will probably submit for a talk on mod_python...

Grisha

On Sat, 11 Oct 2003, Simon Willison wrote:

> Hi all,
>
> Are there any plans for any mod_python related activities at PyCon DC
> next year?
>
> http://www.python.org/pycon/dc2004/
>
> Cheers,
>
> Simon Willison
> http://simon.incutio.com/
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From vmanera at manord.com  Mon Oct 13 11:14:56 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] Cannot load mod_python.so into server:
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B0@exchange2000.manord.com>

Environment on win2000:

python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
 Impossibile trovare il modulo specificato.


httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,
Villiam



From skremer at q.cis.uoguelph.ca  Mon Oct 13 19:56:43 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 22:04:15 2004
Subject: [mod_python] Persisten DB connection for passwords.
Message-ID: <Pine.LNX.4.44.0310131937410.9038-100000@q.cis.uoguelph.ca>


Hi,

I have built a web-site that uses a persistent DB connection as suggested 
in the FAQ to store user passwords for my web-site.

The existence of the separate connections (for each python process) is
problematic in this case, because one hit on the web-page will initialize
the password (or change it) with an SQL update and then another hit to the
same page (but on a different PID) may or may not get the lastest version
of the password with SELECT.

I understand that this is a product of the multiversion model concurrency
control (MVCC) which is generally desirable and specifically desirable for 
my web-site except for the password UPDATE and SELECT commands and the 
persistent connections I'm using with mod_python.

I've been poring over the documentaion and am still a little bit unsure of 
what the easiest way to approach this is (serializable isolation lever, 
table-level locks, row-level locks, SELECT FOR UPDATE) and where to apply 
it (during the UPDATE statement, SELECT statement, or both).  The 
problem is complicated by the fact that I can't easily test it because I 
never know when the transactions will be autocommitted and which PID my 
http get will get.  I'm looking for a nice simple solution that will work 
with this rare case (i.e. please don't suggest switching to a 
different DB, using mod_perl instead ;), etc.).

I'm hoping that someone else has tried something similar and can offer a 
suggestion or pointer (or even a snippit of SQL).

FYI the DB is Postgres-7.3 (built from source), mod_python is 3.0 (built 
from source), DBA is PoPy 2.0.11 (built from source) all living on top of 
an otherwise stock RH 9.0.

Thanks in advance,

	Stefan

-- 
--
Permanently                             Temporarily (Until Aug. 2004)
Dr. Stefan C. Kremer, Associate Prof.   Visiting Researcher
Reynolds Building, 106                  307 Computer Science/Engineering Bldg
Dept. of Computing & Info. Science      School of Info. & Computer Science
University of Guelph, Guelph, Ontario	  U of California at Irvine, Irvine, CA
N1G 2W1                                 92697-3425
Tel: (519)824-4120 Ext.58913  
Fax: (519)837-0323

WWW: http://q.cis.uoguelph.ca/~skremer  E-mail:  skremer@uoguelph.ca

From vmanera at manord.com  Tue Oct 14 12:35:09 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>

I have followed the whole history of mod_python.so,...:

>Gregory (Grisha) Trubetskoy grisha at modpython.org 

>Mon Sep 15 10:32:10 EST 2003 

>This is typically a mismatch of mod_python.so and the version of Python

>you have on your system. For some reason windows says "module cannot be

>found" whereas it really means "i had problems loading it".

>

>The mod_python binary available from Apache sites should be compatible

>with Python 2.2.x, but not 2.3.

but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3

I have decided to migrate from python 2.2 to 2.3 just for try session... on
mod_python 3.1.0a

what I have to do :-( ??

Thanks,

Villiam

 

 

Environment on win2000:

python 2.3.2

apache 2.0.47

mod_python 3.0.3 or 3.1.0a (boot the same error)

C:\Programmi\Apache Group\Apache2\bin>apache.exe

Syntax error on line 173 of C:/Programmi/Apache

Group/Apache2/conf/httpd.conf:

Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into

server:

Impossibile trovare il modulo specificato.

 

httpd.conf:

........

172 #LoadModule ssl_module modules/mod_ssl.so

173 LoadModule python_module modules/mod_python.so

my step:

with python 2.2.2 all work fine

uninstalling Python 2.2.2 and mod_python 3.0.3

installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 

....load problem 

Any clues on what I need to do to get mod_python working under python 2.3?

Thanks,

 

Villiam Manera 
Dirett.  Sistema Informativo 

Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 

Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031014/0648346c/attachment-0003.htm
From gustavo.cordova at q-voz.com  Tue Oct 14 09:40:54 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <3F8C1906.1050102@q-voz.com>

Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


From hara at oderwat.de  Tue Oct 14 17:39:26 2003
From: hara at oderwat.de (HaRa)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D4B8@exchange2000.manord.com>
Message-ID: <NCBBLHDKMKAEOLOOBEGGKEBHIAAA.hara@oderwat.de>

Hi..

I just can repeat something I wrote some days ago...

The Windows binaries I d/l from sourceforge had a link to python 2.2 even when they are announced for python 2.3 (only).
So it was using my python22.dll... and my own apache-extension modules (in 2.3 dir of python) where not found.

- Hans

-----Original Message-----
From: mod_python-bounces@modpython.org [mailto:mod_python-bounces@modpython.org]On Behalf Of Manera, Villiam
Sent: Tuesday, October 14, 2003 12:35 PM
To: mod_python@modpython.org
Subject: [mod_python] Cannot load mod_python.so into apache(2):


I have followed the whole history of mod_python.so,...:
>Gregory (Grisha) Trubetskoy grisha at modpython.org 
>Mon Sep 15 10:32:10 EST 2003 
>This is typically a mismatch of mod_python.so and the version of Python
>you have on your system. For some reason windows says "module cannot be
>found" whereas it really means "i had problems loading it".
>
>The mod_python binary available from Apache sites should be compatible
>with Python 2.2.x, but not 2.3.
but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
I have decided to migrate from python 2.2 to 2.3 just for try session... on mod_python 3.1.0a
what I have to do :-( ??
Thanks,
Villiam


Environment on win2000:
python 2.3.2
apache 2.0.47
mod_python 3.0.3 or 3.1.0a (boot the same error)
C:\Programmi\Apache Group\Apache2\bin>apache.exe
Syntax error on line 173 of C:/Programmi/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Programmi/Apache Group/Apache2/modules/mod_python.so into
server:
Impossibile trovare il modulo specificato.

httpd.conf:
........
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module modules/mod_python.so
my step:
with python 2.2.2 all work fine
uninstalling Python 2.2.2 and mod_python 3.0.3
installing python 2.3.2 and again mod_python 3.0.3 or 3.1.0a 
....load problem 
Any clues on what I need to do to get mod_python working under python 2.3?
Thanks,

Villiam Manera 
Dirett.  Sistema Informativo 
Manifatture del Nord srl 
viale Regina Elena 13-15 
42100 Reggio Emilia RE 
ITALY 
Tel. +39 0522 508200 
Fax +39 0522 514099 
email : vmanera@manord.com 
www.pennyblack.com 
From mod_python at mlists.thewrittenword.com  Tue Oct 14 11:34:41 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] How to get request URI
Message-ID: <20031014163441.GA48143@spuckler.il.thewrittenword.com>

I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Tue Oct 14 18:26:54 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:16 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C3@exchange2000.manord.com>

:-)  Thanks you, now work properly

Villiam
-----Messaggio originale-----
Da: Gustavo C?rdova Avila [mailto:gustavo.cordova@q-voz.com]
Inviato: marted? 14 ottobre 2003 17.41
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: [mod_python] Cannot load mod_python.so into apache(2):


Manera, Villiam wrote:

> I have followed the whole history of mod_python.so,...:
>
> >Gregory (Grisha) Trubetskoy grisha at modpython.org
>
> >Mon Sep 15 10:32:10 EST 2003
>
> >This is typically a mismatch of mod_python.so and the version of Python
>
> >you have on your system. For some reason windows says "module cannot be
>
> >found" whereas it really means "i had problems loading it".
>
> >
>
> >The mod_python binary available from Apache sites should be compatible
>
> >with Python 2.2.x, but not 2.3.
>
> but mod_python-3.1.0a.win32-py2.3.exe seems for python 2.3
>
> I have decided to migrate from python 2.2 to 2.3 just for try 
> session... on mod_python 3.1.0a
>
> what I have to do :-( ??
>
> Thanks,
>
> Villiam
>
I had the same problem exactly, so I did a "strings" on the file 
"mod_python.so", and found it depended on "python22.dll"; I then 
attacked this file with a binary file editor and changed "python22.dll" 
with "python23.dll", and Apache restarted OK.

Now... I don't know how stable this is, and I know that this isn't the 
best solution, but at least meanwhile, it's working and I can continue 
doing my stuff.

I'll post something if I run into trouble, but there's been none yet.

Happy Hacking :-)

-gustavo


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Tue Oct 14 10:31:21 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <3F8C1906.1050102@q-voz.com>
Message-ID: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>


> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

From gustavo.cordova at q-voz.com  Tue Oct 14 12:38:23 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] Cannot load mod_python.so into apache(2):
In-Reply-To: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMEKNCBAA.rclilly@cox.net>
Message-ID: <3F8C429F.5020802@q-voz.com>

Nothing really... I just changed "22" for a "23" in the string 
"python22.dll" using "edit /70"  (for all youse DOS old hands out 
there).  :-)

1. Start Menu
2. Click "run"
3. Type "cmd"
4. cd into your apache modules directory (or wherever "mod_python.so" is 
stored).
5. Type "edit /70 mod_python.so"
6. Search for "python22.dll"
7. OVERWRITE "22" with "23", so it now says "python23.dll"
8. Make sure you OVERWROTE, and not INSERTED.
9. Save.
10. Start Apache and make sure it starts ok.

Remember to make a backup of "mod_python.so" before the operation.

Mind you, this isn't the ideal solution, but until we get a 
compiled-with-python23.dll module, it seems to work.

-gustavo

Robert Lilly wrote:

>When you say you changed python22.dll to python23.dll did you just rename
>it, or did you manipulate the file somehow? If the latter, what exactly did you do, and what editor did you use?
>
>Thanks!
>
>Robert Lilly
>
>
>
>  
>

From seth at picklematrix.net  Tue Oct 14 13:18:02 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] way to use PSP from publisher handler?
Message-ID: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>

Hello,

I've tried searching the docs and FAQ, but didn't find an immediate 
answer to this.  I'd like to use the Publisher handler for all the 
logic of the page, but I'd like the then forward (internally, not with 
a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
is great!).

Is there a way to use PSP as a template mechanism from within a 
publisher handler?  I've seen Cheetah, which acts the way I would want, 
but if I can use the builtin PSP, all the better. :)

Thanks!
Seth

From perry.tew at cibavision.novartis.com  Tue Oct 14 21:14:23 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] How to get request URI
Message-ID: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>


Apache passes environment variables to an ErrorDocument that should provide
all the information you need for a custom response:

here are some links:
http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
*** see this **** http://httpd.apache.org/docs-2.0/custom-error.html

so, the mod_python code would look like this:

req.add_common_vars()
env_vars = req.subprocess_env
orig_req_uri = env_vars['REDIRECT_URL']

Hope this helps,
Perry Tew






I want to have mod_python manage my ErrorDocument handler. How can I
get the URI of the request that caused the error? I'm using
mod_python-3.0.3 and Apache 2.0.47.

The uri members in mprequest get me the URI of the ErrorDocument
handler.

--
albert chin (china@thewrittenword.com)
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python





From gargp at earthlink.net  Tue Oct 14 21:05:05 2003
From: gargp at earthlink.net (Pankaj K Garg)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] 
	Win32 Binary of modpython 3.0.3 that has the Python 2.3 patch 
Message-ID: <000401c392d1$89bb9ce0$37fea8c0@home.org>


Browsing through some previous emails:

Andy Sy wrote:

> > modpython 3.0.3 works fine with Python 2.3, but to build it you
> > need to hack src/include/mod_python.h.  There's a FAQ entry with
> > the necessary patch.
> >
> > Maybe Grisha should release a 3.0.4 with just this one patch?
> >
> > -Barry
>
> I second the motion.  Does anyone have such a binary?
> At the very least widespread testing will help uncover
> Python 2.3 vis-a-vis modpython 3.x bugs under Windows.

I was wondering if someone created a modpython 3.0.4
Win32 install for Python 2.3?

We've been using mod_python 3.0.4 with Python 2.3 on
Linux for some time now with no problems. Recently
I've had to try out things on Win32. The good folks
at Redhat provide the Cygwin environment, that by
default now comes with Python 2.3...so, it will be
tremendously helpful if there was a Win32 installer
for mod_python 3.0.4 with Python 2.3

Pankaj


--- 
Pankaj K Garg              gargp@acm.org
1684 Nightingale Avenue    408-373-4027
Sunnyvale, CA 94304
http://home.earthlink.net/~gargp
From grisha at modpython.org  Tue Oct 14 23:39:42 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
Message-ID: <20031014233917.U19523@onyx.ispol.com>


Have you tried req.prev.uri?

Grisha

On Tue, 14 Oct 2003, Albert Chin wrote:

> I want to have mod_python manage my ErrorDocument handler. How can I
> get the URI of the request that caused the error? I'm using
> mod_python-3.0.3 and Apache 2.0.47.
>
> The uri members in mprequest get me the URI of the ErrorDocument
> handler.
>
> --
> albert chin (china@thewrittenword.com)
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:35 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <20031014233917.U19523@onyx.ispol.com>
References: <20031014163441.GA48143@spuckler.il.thewrittenword.com>
	<20031014233917.U19523@onyx.ispol.com>
Message-ID: <20031015035335.GA64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 11:39:42PM -0400, Gregory (Grisha) Trubetskoy wrote:
> Have you tried req.prev.uri?

Works! Thanks.

> Grisha
> 
> On Tue, 14 Oct 2003, Albert Chin wrote:
> 
> > I want to have mod_python manage my ErrorDocument handler. How can I
> > get the URI of the request that caused the error? I'm using
> > mod_python-3.0.3 and Apache 2.0.47.
> >
> > The uri members in mprequest get me the URI of the ErrorDocument
> > handler.
> >
> > --
> > albert chin (china@thewrittenword.com)
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
albert chin (china@thewrittenword.com)
From mod_python at mlists.thewrittenword.com  Tue Oct 14 22:53:59 2003
From: mod_python at mlists.thewrittenword.com (Albert Chin)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] How to get request URI
In-Reply-To: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
References: <OFE48B8FFF.975AF7CE-ON85256DC0.00066CA1-85256DC0.0006BD37@EU.novartis.net>
Message-ID: <20031015035359.GB64489@spuckler.il.thewrittenword.com>

On Tue, Oct 14, 2003 at 09:14:23PM -0400, perry.tew@cibavision.novartis.com wrote:
> 
> Apache passes environment variables to an ErrorDocument that should provide
> all the information you need for a custom response:
> 
> here are some links:
> http://httpd.apache.org/docs-2.0/mod/core.html#errordocument
> *** see this **** http://httpd.apache.org/docs-2.0/custom-error.html
> 
> so, the mod_python code would look like this:
> 
> req.add_common_vars()
> env_vars = req.subprocess_env
> orig_req_uri = env_vars['REDIRECT_URL']

Thanks. That works!

-- 
albert chin (china@thewrittenword.com)
From vmanera at manord.com  Wed Oct 15 09:12:39 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:16 2004
Subject: R: [mod_python] Cannot load mod_python.so into apache(2):
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D4C5@exchange2000.manord.com>

I used hackman:http://www.technologismiki.com/en/

I find python22 (in ascii mode) then update in python23

Villiam
-----Messaggio originale-----
Da: Robert Lilly [mailto:rclilly@cox.net]
Inviato: marted? 14 ottobre 2003 19.31
A: mod_python@modpython.org
Oggetto: RE: [mod_python] Cannot load mod_python.so into apache(2):



> -----Original Message-----
> From: Gustavo Cordova Avila
> Subject: Re: [mod_python] Cannot load mod_python.so into apache(2):

> >
> > I have decided to migrate from python 2.2 to 2.3 just for try
> > session... on mod_python 3.1.0a
> >
> > what I have to do :-( ??
> >
> >
> I had the same problem exactly, so I did a "strings" on the file
> "mod_python.so", and found it depended on "python22.dll"; I then
> attacked this file with a binary file editor and changed "python22.dll"
> with "python23.dll", and Apache restarted OK.
>

When you say you changed python22.dll to python23.dll did you just rename
it, or did you manipulate the file somehow? If the latter, what exactly did
you do, and what editor did you use?

Thanks!

Robert Lilly

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From vmanera at manord.com  Wed Oct 15 10:07:58 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>

I have had to update the configuration file of apache with: PythonAutoReload
on 
before this was the defaut, as in the new manual :
 
5.4.8 PythonAutoReload 

Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
PythonAutoReload {On, Off} 
Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
PythonAutoReload On 


Villiam 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031015/6b67b283/attachment-0003.htm
From alexiev at activesolutions.bg  Wed Oct 15 13:16:45 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00be01c39305$6f81c140$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem

---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543

From alexiev at activesolutions.bg  Wed Oct 15 13:21:34 2003
From: alexiev at activesolutions.bg (Alexiev Nikolay)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] mod_python & pconnect
Message-ID: <00d801c39306$1c0ff300$0a01010a@dev1>

I use mod_python and MySQL-python-0.9.2. I need something like pconnect
becouse I have too many connections to MySQL for a short time. Can you give
me a solution for this problem


---------------------------------------
Best regards,
Alexiev, Nikolay
e-mail: alexiev@activesolutions.bg
phone: +359 2 8753543
From Hector.Sanchez at cern.ch  Wed Oct 15 14:17:53 2003
From: Hector.Sanchez at cern.ch (Hector Sanchez SanMartin)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] Having 2 scripts with the same name
Message-ID: <3F8D3AF1.8030108@cern.ch>

    Hello,

    I'm having the following problem: I have 2 scripts in diferent
locations but if I request one of them the server gives me an 404 error
(not found) so I need to restart apache in order to be able to execute
the second one but then the first one gives an 404, etc...
    Is there any way to avoid this?

-- 
Hector Sanchez

CERN Document Server ** <http://cds.cern.ch/> ** <cds.support@cern.ch>
InDiCo Project       ** <http://cern.ch/indico>
Room: Bldg 510-R-007 ** Voice: +41-22-7673829 ** Fax: +41-22-7678142



From grisha at modpython.org  Wed Oct 15 09:52:04 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] autoreload with mod_pthon 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF141048EF@exchange2000.manord.com>
Message-ID: <20031015095146.T19523@onyx.ispol.com>


I am pretty sure that's been fixed in 3.1.1b

Grisha

On Wed, 15 Oct 2003, Manera, Villiam wrote:

> I have had to update the configuration file of apache with: PythonAutoReload
> on
> before this was the defaut, as in the new manual :
>
> 5.4.8 PythonAutoReload
>
> Syntax: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Syntax>
> PythonAutoReload {On, Off}
> Default: <http://httpd.apache.org/docs-2.0/mod/directive-dict.html#Default>
> PythonAutoReload On
>
>
> Villiam
>
>
From dpopowich at mtrsd.k12.ma.us  Wed Oct 15 12:31:41 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] extending util.FieldStorage
Message-ID: <16269.30317.838811.476792@gargle.gargle.HOWL>


I found myself wanting methods of util.FieldStorage that are found in
the cgi module since python 2.2, getfirst and getlist.  They save tons
of code of the form:

       if form.has_key('foo'):
           foo = form['foo']
           if type(foo) is not type([]):
               foo = [foo]
       else:
           foo = []

which can cause code-clutter if you have a number of form variables.
Instead, one can simply write:

      foo = form.getlist('foo')

See the cgi documentation for 2.2 or later for details about these
methods and how they can help you reduce code and write safer code to
protect against malformed requests.

I extended util.FieldStorage to add those two methods plus a get()
(which behaves like a standard dict.get) and thought others might like
the code (which I didn't write in whole, but stole mostly from modules
cgi and UserDict).

If found useful by many, perhaps they can be included in the 3.1
distribution?

Enjoy,

Daniel Popowich
Network Specialist
MTRSD

======================================================================

from mod_python import util

class form(util.FieldStorage):

    def get(self, key, default=None):
        if not self.has_key(key):
            return default
        return self[key]

    def getfirst(self, key, default=None):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value[0]
            else:
                return value
        else:
            return default

    def getlist(self, key):

        if self.has_key(key):
            value = self[key]
            if type(value) is type([]):
                return value
            else:
                return [value]
        else:
            return []


From grisha at modpython.org  Wed Oct 15 12:51:31 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <16269.30317.838811.476792@gargle.gargle.HOWL>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
Message-ID: <20031015125039.H33867@onyx.ispol.com>



On Wed, 15 Oct 2003, Daniel J. Popowich wrote:

>       foo = form.getlist('foo')
>
> If found useful by many, perhaps they can be included in the 3.1
> distribution?

getfirst and getlist are already in there, but thanks anyway!

Grisha
From perry.tew at cibavision.novartis.com  Wed Oct 15 15:20:24 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFDCC9909C.1102B3CA-ON85256DC0.006A35CD-85256DC0.006A3CED@EU.novartis.net>

Grisha,

I've downloaded, compiled, and installed 3.1.1b.  Everything with my 
application appears to function correctly.   However, I did
see a change with the initial message in my error log (sorry, I don't have 
the previous message).

Is the following line correct?  Why does it say -1 max processes?  With 
3.1.0a, it used to say "Creating 200 session mutexes"
[Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session 
mutexes based on -1 max processes and 50 max threads

If you're not concerned, I'm not, but it is different, so I mention it.


I'm using the worker mpm
( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b 
mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
on Solaris
[
System = SunOS
Node = usatux29
Release = 5.8
KernelID = Generic_108528-13
Machine = sun4u
BusType = <unknown>
Serial = <unknown>
Users = <unknown>
OEM# = 0
Origin# = 1
NumCPU = 2
]


Here's the relevant httpd.conf ( need more?)  I know my worker config is 
probably whacked a little.
I'm trying to keep a small amount of children with a high thread count.
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 15


<IfModule worker.c>
StartServers         3
MaxClients         200
MinSpareThreads     25
MaxSpareThreads     50 
ThreadsPerChild     50
MaxRequestsPerChild 500
</IfModule>


Other than that one confusing error message, which may just be due to my 
ignorance of Apache, I had no issues.


Thanks,
Perry Tew






I think I didn't make it clear in the last message:

In order for this release to be officially announced, at least a few
people on this list need to try it and send in a +1 indicating that it
worked on their system (along with some desciption of what their system
is). *Anyone* on this list can do this, you don't have to be an official
committer or anything of that sort.

Doing a test could probably take as little as 10 minutes, and I'd
encourage you to do it sooner than later.

Looking at the www.modpython.org log we've only had one download of the
tgz file so far, which isn't encouraging :-)

Grisha

On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> You can get the sneak preview of 3.1.1 beta here:
>
> http://www.modpython.org/tmp/3.1.1b/
>
> Please download it, then do the usual
>
> $ ./configure --with-apxs=/wherever/it/is
> $ make
> $ (su)
> # make install
>
> Then
>
> $ cd test
> $ python test.py
>
> And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris 
would
> be nice... (as well as Panther, if you have it).
>
> Also, Windows folks - please make sure that this binary isn't screwed
> like the last one. This one I think _really_ works with 2.3 :-)
>
> Please respond to the list with your results ASAP so we can announce 
this
> puppy!
>
> Thank you very much,
>
> Grisha
>




From perry.tew at cibavision.novartis.com  Wed Oct 15 15:56:07 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] 
	Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results
Message-ID: <OFAFFA7F02.B4ABAB19-ON85256DC0.006D4B2B-85256DC0.006D81FE@EU.novartis.net>

Yes, I was using the worker MPM with the same configuration.  Later 
tonight, I have to create another apache/mod_python instance.  I will 
start with 3.1.0a and capture the error log.  Then, I will upgrade to 
3.1.1b and capture that error log.  I'll send you the relevant portions 
for comparion.  Will that be useful?

Thanks,
Perry






"Gregory (Grisha) Trubetskoy" <grisha@apache.org>
10/15/2003 03:42 PM

 
        To:     Perry Tew/CV/Novartis@PH
        cc: 
        Subject:        Re: [REPEAT] Please help test 3.1.1b  - SOLARIS 8 results



In your last test (when it used to say creating 200 session mutexes), were
you using worker with the same configuration?

Grisha


On Wed, 15 Oct 2003 perry.tew@cibavision.novartis.com wrote:

> Grisha,
>
> I've downloaded, compiled, and installed 3.1.1b.  Everything with my
> application appears to function correctly.   However, I did
> see a change with the initial message in my error log (sorry, I don't 
have
> the previous message).
>
> Is the following line correct?  Why does it say -1 max processes?  With
> 3.1.0a, it used to say "Creating 200 session mutexes"
> [Wed Oct 15 15:02:20 2003] [notice] mod_python: Creating 50 session
> mutexes based on -1 max processes and 50 max threads
>
> If you're not concerned, I'm not, but it is different, so I mention it.
>
>
> I'm using the worker mpm
> ( Apache/2.0.47 (Unix) DAV/2 mod_ssl/2.0.47 OpenSSL/0.9.6b
> mod_python/3.1.1b Python/2.3 mod_fastcgi/2.4.0)
> on Solaris
> [
> System = SunOS
> Node = usatux29
> Release = 5.8
> KernelID = Generic_108528-13
> Machine = sun4u
> BusType = <unknown>
> Serial = <unknown>
> Users = <unknown>
> OEM# = 0
> Origin# = 1
> NumCPU = 2
> ]
>
>
> Here's the relevant httpd.conf ( need more?)  I know my worker config is
> probably whacked a little.
> I'm trying to keep a small amount of children with a high thread count.
> Timeout 300
> KeepAlive On
> MaxKeepAliveRequests 100
> KeepAliveTimeout 15
>
>
> <IfModule worker.c>
> StartServers         3
> MaxClients         200
> MinSpareThreads     25
> MaxSpareThreads     50
> ThreadsPerChild     50
> MaxRequestsPerChild 500
> </IfModule>
>
>
> Other than that one confusing error message, which may just be due to my
> ignorance of Apache, I had no issues.
>
>
> Thanks,
> Perry Tew
>
>
>
>
>
>
> I think I didn't make it clear in the last message:
>
> In order for this release to be officially announced, at least a few
> people on this list need to try it and send in a +1 indicating that it
> worked on their system (along with some desciption of what their system
> is). *Anyone* on this list can do this, you don't have to be an official
> committer or anything of that sort.
>
> Doing a test could probably take as little as 10 minutes, and I'd
> encourage you to do it sooner than later.
>
> Looking at the www.modpython.org log we've only had one download of the
> tgz file so far, which isn't encouraging :-)
>
> Grisha
>
> On Tue, 14 Oct 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > You can get the sneak preview of 3.1.1 beta here:
> >
> > http://www.modpython.org/tmp/3.1.1b/
> >
> > Please download it, then do the usual
> >
> > $ ./configure --with-apxs=/wherever/it/is
> > $ make
> > $ (su)
> > # make install
> >
> > Then
> >
> > $ cd test
> > $ python test.py
> >
> > And see if any tests fail. I have tested this on FreeBSD 4.8 and OS X
> > 10.2.8, but not on Linux, as my Linux box is dead ATM. Also Solaris
> would
> > be nice... (as well as Panther, if you have it).
> >
> > Also, Windows folks - please make sure that this binary isn't screwed
> > like the last one. This one I think _really_ works with 2.3 :-)
> >
> > Please respond to the list with your results ASAP so we can announce
> this
> > puppy!
> >
> > Thank you very much,
> >
> > Grisha
> >
>
>
>



From jm at eemsystems.cjb.net  Wed Oct 15 15:03:24 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] form, req problem
Message-ID: <1066248203.4790.13.camel@eemsystems.com>

this scrips was working good, but now i can't find what is the problem.

This was working in the following manner:

the firt time you call testpy control=''

then testpy return a html form with the variable: Fecha_Inicial,
Fecha_Final (in this case) an a hidden control with value '1'

The form action is the same function testpy, then in the second pass
control must be '1'... but this is not actualy the case.

I'm using python from debian/unstable



***********************************************************************

def testpy(req,control=''):
	if control=='':
		    return
aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
Medicos")
	elif control=='1':
		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
		if len(Fecha_Final)<3:
				Fecha_Final=Fecha_Inicial
	return Fecha_Inicial,Fecha_Final,control

************************************************************************
#module: aaa


def simpleform2(action,strparametros,titulo='',insertar=''):
	import string
	s='''<form method="post" action="''' +action+ '"><input type="hidden"
name="control" value="1">'
	parametros=string.split(strparametros,',')
	if len(strparametros)>2:
		s=s+"""<table><caption>"""+titulo+"""</caption>"""
		for i in parametros:
			s=s+"""<tr><td>"""+i+''':</td>
	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
value="">
	</td>
	</tr>'''
		s=s+'</table>'
	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
	return s
***************************************************************************

From jm at eemsystems.cjb.net  Wed Oct 15 15:44:15 2003
From: jm at eemsystems.cjb.net (Julio Mendoza)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] form, req problem
In-Reply-To: <1066248203.4790.13.camel@eemsystems.com>
References: <1066248203.4790.13.camel@eemsystems.com>
Message-ID: <1066250655.5340.10.camel@eemsystems.com>

I run this scripts from another client machine and are working good.
look like browser problem in Debian/unstable.

thank you,

JM

El mi?, 15-10-2003 a las 15:03, Julio Mendoza escribi?:
> this scrips was working good, but now i can't find what is the problem.
> This was working in the following manner:
> 
> the firt time you call testpy control=''
> 
> then testpy return a html form with the variable: Fecha_Inicial,
> Fecha_Final (in this case) an a hidden control with value '1'
> 
> The form action is the same function testpy, then in the second pass
> control must be '1'... but this is not actualy the case.
> 
> I'm using python from debian/unstable
> 
> 
> 
> ***********************************************************************
> 
> def testpy(req,control=''):
> 	if control=='':
> 		    return
> aaa.simpleform2('./testpy',"Fecha_Inicial,Fecha_Final","Pacientes por
> Medicos")
> 	elif control=='1':
> 		[Fecha_Inicial,Fecha_Final]=[req.form["Fecha_Inicial"],req.form["Fecha_Final"]]
> 		if len(Fecha_Final)<3:
> 				Fecha_Final=Fecha_Inicial
> 	return Fecha_Inicial,Fecha_Final,control
> 
> ************************************************************************
> #module: aaa
> 
> 
> def simpleform2(action,strparametros,titulo='',insertar=''):
> 	import string
> 	s='''<form method="post" action="''' +action+ '"><input type="hidden"
> name="control" value="1">'
> 	parametros=string.split(strparametros,',')
> 	if len(strparametros)>2:
> 		s=s+"""<table><caption>"""+titulo+"""</caption>"""
> 		for i in parametros:
> 			s=s+"""<tr><td>"""+i+''':</td>
> 	<td><input type="text" name="'''+i+'''" size="20" maxlength="30"
> value="">
> 	</td>
> 	</tr>'''
> 		s=s+'</table>'
> 	s=s+insertar+'<br><input TYPE="submit" VALUE="Aceptar"></form>'
> 	return s
> ***************************************************************************
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From dpopowich at mtrsd.k12.ma.us  Thu Oct 16 09:16:24 2003
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] extending util.FieldStorage
In-Reply-To: <20031015125039.H33867@onyx.ispol.com>
References: <16269.30317.838811.476792@gargle.gargle.HOWL>
	<20031015125039.H33867@onyx.ispol.com>
Message-ID: <16270.39464.384476.99879@gargle.gargle.HOWL>


Gregory (Grisha) Trubetskoy writes:
> 
> 
> On Wed, 15 Oct 2003, Daniel J. Popowich wrote:
> 
> >       foo = form.getlist('foo')
> >
> > If found useful by many, perhaps they can be included in the 3.1
> > distribution?
> 
> getfirst and getlist are already in there, but thanks anyway!
> 

I didn't see them in 3.1.0a, but I do see them in CVS.  Great!

Thanks,

Dan

From dagurp at heimsnet.is  Thu Oct 16 13:48:29 2003
From: dagurp at heimsnet.is (=?iso-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] python 2.3.2 binary
Message-ID: <001501c393ec$2eafbd60$1e01a8c0@dagur>


Hi

When can I expect a python 2.3 binary for mod_python 2.78? I'm on windows and I probably can't compile it myself. I'm having all sorts of problems because of this

thanks
Dagur
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/9e4cd4fb/attachment-0003.htm
From grickert at coldstorage.com  Thu Oct 16 15:56:08 2003
From: grickert at coldstorage.com (Gerrat Rickert)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] RE: Testing 3.1.1b
In-Reply-To: <200310161700.h9GH041D052838@slash.mediapulse.com>
Message-ID: <DIEMKLHLKFCCPAEPDMHKMENECEAA.grickert@coldstorage.com>

+1  ;)

Grisha,

This is in response to you asking for *Anyone* to test this version.

Mod_Python 3.1.1b (mod_python-3.1.1b.win32-py2.3.exe) seems to be working
great with Python 2.3 on my system

Win2K, Python 2.3.2, Apache 2.0.47

My comprehensive test suite :) consists of a few web pages that use a custom
PythonHandler, Cheetah templates, and cx_Oracle, to allow a customer to log
in, track their session, and produce some dynamic reports.  Everything
functioned as before.  I'm very happy that I can move up to Python 2.3 & mp
3.1.  Keep up the great work!

Gerrat Rickert

P.S.  I have been watching the modpython home page, waiting for a Win binary
compatable with Python 2.3.  Now that this is available, you may want to
update that page so maybe more people will download it & try it.

Thanks again.


From modpython at lists.bumpern.de  Thu Oct 16 23:19:52 2003
From: modpython at lists.bumpern.de (Alexander Neumann)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] mod_python 2.7.8 broken on python2.3?
Message-ID: <20031016211952.GB8454@necromancer.hoffentlich.net>

Hi,

I just started having a look at mod_python, it looks really great, but
there are a few strange exceptions thrown at points where (IMHO) no
exception should be raised.

For example if I'm using this file (test.py):
=======
from mod_python import apache

def test(req):
    return "just a test\n"
=======


Calling the test-function directly works as expected:
$ dog --no-header http://localhost/~fd0/test/test
just a test


Calling only the file fails and throws a 404:
$ dog --no-header http://localhost/~fd0/tlis/test
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>404 Not Found</TITLE>
</HEAD><BODY>
<H1>Not Found</H1>
The requested URL /~fd0/tlis/test was not found on this server.<P>
<HR>
<ADDRESS>Apache/1.3.28 Server at localhost Port 80</ADDRESS>
</BODY></HTML>


But if the URL ends with a slash ("/"), an exception is thrown and I
don't know if that's the normal behaviour (I would expect a 404, just
like the example above):
$ dog --no-header http://localhost/~fd0/tlis/test/
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 88, in handler
    if func_path[-1] == ".":

IndexError: string index out of range




Another problem is using the file (example.py):
======
__auth_realm__ = "Members only"


def hello(req):
    def __auth__(req, user, passwd):
        if user == "eggs" and passwd == "spam" or \
           user == "joe" and passwd == "eoj":
            return 1
        else:
            return 0

    def __access__(req, user):
        if user == "joe":
            return 1
        else:
            return 0

    return 'hello<br><a href="logout?username=%s"> logout </a>' % req.connection.user

def logout(req, username=""):
    def __auth__(req, user, passwd):
        if not username == "":
            return 0
        else:
            return 1
    return '<a href="hello"> test it! </a>'
======


Calling the logout function throws an exception, too:
$ dog --no-header http://localhost/~fd0/tlis/example/logout
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 193, in Dispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 135, in handler
    object = resolve_object(req, module, func_path, realm, user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 296, in resolve_object
    user, passwd)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 224, in process_auth
    __auth__ = new.function(__auth__, globals())

TypeError: arg 5 (closure) must be tuple




Is this a bug or a feature?


- Alexander

-- 
"Good luck... The only good thing about being compromised is that it
makes you more paranoid about being on the net."
 - Jamie Lawrence on debian-security
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031016/22b82c8e/attachment-0003.bin
From gdamjan at mail.net.mk  Fri Oct 17 17:48:40 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:04:16 2004
Subject: [mod_python] way to use PSP from publisher handler?
In-Reply-To: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
References: <A82E31AC-FE9C-11D7-A960-000A9576D038@picklematrix.net>
Message-ID: <20031017154840.GH6261@legolas.on.net.mk>

> I've tried searching the docs and FAQ, but didn't find an immediate 
> answer to this.  I'd like to use the Publisher handler for all the 
> logic of the page, but I'd like the then forward (internally, not with 
> a redirect) to a PSP page.  This is all builtin to 3.1a (which I think 
> is great!).
> 
> Is there a way to use PSP as a template mechanism from within a 
> publisher handler?  I've seen Cheetah, which acts the way I would want, 
> but if I can use the builtin PSP, all the better. :)

Whats wrong with using PSP and Publisher in paralel?
You can do it. In the same directory. I've added an entry in the FAQ how
to do it.



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From cs1spw at bath.ac.uk  Sat Oct 18 18:56:22 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] New Web SIG
Message-ID: <3F91D326.6000805@bath.ac.uk>

In case people on this list haven't heard about it yet, the powers that 
be have created a new Python Web special interest group. The SIG has a 
dual purpose: it will host discussions of ways of improving Python's web 
client abilities (httplib and the like) and also discussions of 
improvements to be made to the CGI module and other related server-side 
topics.

The server side discussions would certainly benefit from participants 
with experience of mod_python ;)

http://www.python.org/sigs/web-sig/

Cheers,

Simon Willison
http://simon.incutio.com/

From DHANCOCK at arinc.com  Sun Oct 19 00:27:02 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>

I'm new to mod_python, and I'm stuck already.  I'm working through the
examples in the documentation, and even after careful typing (and cutting
and pasting from the manual), I can't get the authentication example to
work.  The line:

	user = req.connection.user

Gives an attribute error ('user').  As shown in the manual, I'm calling
req.get_basic_auth_pw() first, but still no joy.

If I try/except to trap the attribute error, I avoid the 500 Server Error
message, but the authentication still doesn't work.

Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
got right going right now).  The mod_python is a precompiled binary.

I'll be grateful for any assistance I can get.  I'm trying to recreate a
mod_perl module (AuthCookie) which implements a ticket-based authentication
mechanism.  It works well in Perl, but my group standardized on Python and
we'd like to keep using Python for Apache modules, too.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031019/4a6519b3/attachment-0003.htm
From grisha at modpython.org  Sun Oct 19 14:20:33 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.connection.user generates AttributeError
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F88069@exanpmb3.arinc.com>
Message-ID: <20031019141946.L36129@onyx.ispol.com>


it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 17:20:36 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806A@exanpmb3.arinc.com>

Grisha: Thanks for getting back to me on this. I found req.connection.user
in the PDF manual dated 4/19/2002, Section 3.3, page 12.  And now that I
look at the title page, it's for 2.7.8, NOT for 3.0.3.  I downloaded the
manual to match my installation, and it shows req.user in that section.

My apologies for not having RTFMed better--I read, just the wrong one.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
Sent: Sunday, October 19, 2003 2:21 PM
To: Hancock, David (DHANCOCK)
Cc: 'mod_python@modpython.org'
Subject: Re: [mod_python] req.connection.user generates AttributeError



it's req.user

Just curious - where in the manual do you see this? If you're looking at
the online version, can you send me the exact url?

Thanks,

Grisha

On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
>
> 	user = req.connection.user
>
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.
>
> If I try/except to trap the attribute error, I avoid the 500 Server Error
> message, but the authentication still doesn't work.
>
> Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and
> mod_python 3.0.3.  (My other computer is a Linux box, but this is what
I've
> got right going right now).  The mod_python is a precompiled binary.
>
> I'll be grateful for any assistance I can get.  I'm trying to recreate a
> mod_perl module (AuthCookie) which implements a ticket-based
authentication
> mechanism.  It works well in Perl, but my group standardized on Python and
> we'd like to keep using Python for Apache modules, too.
>
> Cheers!
> --
> David Hancock | dhancock@arinc.com | 410-266-4384
>
>
From DHANCOCK at arinc.com  Sun Oct 19 19:57:32 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>

Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From DHANCOCK at arinc.com  Sun Oct 19 20:25:52 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] RE: req.user always returns None?
Message-ID: <0734A2B8CF21D711B98B00080224869C02F8806E@exanpmb3.arinc.com>

Sorry to reply to my own post, but further reading of the list archives got
me the solution.  I moved the LoadModule directive for mod_python to be
first in the list, and voila! it started working right.  There was a thread
about this in July of this year.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Hancock, David (DHANCOCK) 
Sent: Sunday, October 19, 2003 7:58 PM
To: 'mod_python@modpython.org'
Subject: req.user always returns None?


Now that I'm using req.user instead of req.connection.user, I can get the
Tutorial's example authentication code to run without errors--thanks,
Grisha, for that.

Now, however, the example always returns HTTP_UNAUTHORIZED.  I've figured
out that this is because req.user is always None.  My browser is sending the
correct base64-encoded string for the Authorization: header. I'll append
additional information.

Thanks for any advice.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384

system
======
Windows 2000
Python 2.2.3
Apache 2.0.47
mod_python 3.0.3

httpd.conf
==========
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\authreq/"> 
  AddHandler python-program .py
  PythonHandler mptest
  PythonAuthenHandler mptest
  AuthType Basic
  AuthName "mod_python restricted area"
  require valid-user
  PythonDebug On 
</Directory>

mptest.py
=========
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write("Hello, world!")
    return apache.OK

def authenhandler(req):
    user = req.user
    pw = req.get_basic_auth_pw()
    req.log_error(str(user) + ' ' + str(pw))
    if user == "david" and pw == "secret":
        return apache.OK
    else:
        return apache.HTTP_UNAUTHORIZED

error_log (from req.log_error)
==============================
[Sun Oct 19 19:24:38 2003] [error] [client 127.0.0.1] None secret
[Sun Oct 19 19:25:02 2003] [error] [client 127.0.0.1] None secret

HTTP headers to and from (after initial 401)
============================================
GET /authreq/mptest.py HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.5b)
Gecko/20030827
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=
0.8,image/png,image/jpeg,image/gif;q=0.2,*/*;q=0.1
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Authorization: Basic ZGF2aWQ6c2VjcmV0

checking Authorization header
=============================
C:\Program Files\Apache Group\Apache2\logs>c:\python22\python
Python 2.2.3 (#42, May 30 2003, 18:12:08) [MSC 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import base64
>>> print base64.decodestring('ZGF2aWQ6c2VjcmV0')
david:secret
>>>
From gah at research.att.com  Sun Oct 19 22:24:11 2003
From: gah at research.att.com (Glenn A. Hochberg)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <3F93474B.9070105@research.att.com>

> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user instead.  Also note that you *can* assign a value to req.user -- it's not read-only as listed in the docs.

-Glenn Hochberg



From grisha at modpython.org  Sun Oct 19 23:21:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.user always returns None?
In-Reply-To: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
References: <0734A2B8CF21D711B98B00080224869C02F8806C@exanpmb3.arinc.com>
Message-ID: <20031019231815.K41524@onyx.ispol.com>



On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:

> def authenhandler(req):
>     user = req.user
>     pw = req.get_basic_auth_pw()
>     req.log_error(str(user) + ' ' + str(pw))
>     if user == "david" and pw == "secret":
>         return apache.OK
>     else:
>         return apache.HTTP_UNAUTHORIZED

The current docs neglect to mention this because at the time it seemed
like it was no longer necessary, but the call to get_basic_auth_pw()
should always _preceed_ the use of req.user. If the swap the first two
lines, it will work (regardless of position of LoadModule within the
config file).

Grisha
From mikeklein at sbcglobal.net  Sun Oct 19 22:40:40 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] 
	Problems building apache1 with threaded python and mod_python
Message-ID: <3F937558.1010206@sbcglobal.net>

Can this even be done? The docs/faqs seem vague on the subject.

I am building on a RH9 system, with apache1, mod_python, and python w/o 
threads. This seemed to be the only way I could get mod_python to build. 
I always get errors regarding pthread symbols not being found. Example:

Cannot load /usr/local/apache/libexec/mod_python.so into server: 
/usr/local/apache/libexec/mod_python.so: undefined symbol: pthread_sigmask

I recall earlier that I was able to get past a similar error (happened 
with no threads build I think) by adding "-lutil" to LIBS in 
src/Makefile, but I cannot get rid of the above problem.

I need a threaded-python/mod_python as I'm trying to run ZSI and SOAPpy 
applications and they seem to require thread support.

Any ideas would be appreciated...

I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
already built in, but I require apache1 as there are a few modules I 
want to use which aren't apache2 yet...

mike

From mikeklein at sbcglobal.net  Mon Oct 20 00:49:33 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] 	Problems building apache1 with threaded python
	and mod_python...solved
In-Reply-To: <3F937558.1010206@sbcglobal.net>
References: <3F937558.1010206@sbcglobal.net>
Message-ID: <3F93938D.1030801@sbcglobal.net>

My bad...I need to follow the docs a little more often...

I have RH9, Apache1.3.27, mod_python-2.7.8.

I first tried with Python 2.2.3. No go. Then I tried with 2.3.2...no go. 
In fact, mod_python even thought it was a nothread build.

Then I actually followed directions and got release 2.1.3, which 
mod_python does state as a prerequisite. It worked. Didn't even get any 
thread symbol wierdness when starting apache or had to patch makefiles 
with -lutil to fix openpty wierdness..

All is well now...I can make SOAPpy invocations. No more thread complaints.

Should mod_python be able to work with latest Python releases with 
threads enabled? I'm not sure what I'm missing in later python releases.


mike

Mike Klein wrote:

> Can this even be done? The docs/faqs seem vague on the subject.
>
> I am building on a RH9 system, with apache1, mod_python, and python 
> w/o threads. This seemed to be the only way I could get mod_python to 
> build. I always get errors regarding pthread symbols not being found. 
> Example:
>
> Cannot load /usr/local/apache/libexec/mod_python.so into server: 
> /usr/local/apache/libexec/mod_python.so: undefined symbol: 
> pthread_sigmask
>
> I recall earlier that I was able to get past a similar error (happened 
> with no threads build I think) by adding "-lutil" to LIBS in 
> src/Makefile, but I cannot get rid of the above problem.
>
> I need a threaded-python/mod_python as I'm trying to run ZSI and 
> SOAPpy applications and they seem to require thread support.
>
> Any ideas would be appreciated...
>
> I know RH9 comes with apache2 and mod_python/mod_perl/mod_everything 
> already built in, but I require apache1 as there are a few modules I 
> want to use which aren't apache2 yet...
>
> mike
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From DHANCOCK at arinc.com  Mon Oct 20 08:21:33 2003
From: DHANCOCK at arinc.com (Hancock, David (DHANCOCK))
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <0734A2B8CF21D711B98B00080224869C02F88072@exanpmb3.arinc.com>

Thanks Glenn and Grisha.

To recap:

1. Putting the assignment from req.user AFTER the req.get_basic_auth_pw call
fixes the AttributeError, and the LoadModule for mod_python can now be
anywhere in the list of Apache modules.

2. req.user can indeed be assigned to--smart stuff.

Cheers!
--
David Hancock | dhancock@arinc.com | 410-266-4384


-----Original Message-----
From: Glenn A. Hochberg [mailto:gah@research.att.com] 
Sent: Sunday, October 19, 2003 10:24 PM
To: 
Subject: Re: [mod_python] req.connection.user generates AttributeError


> I'm new to mod_python, and I'm stuck already.  I'm working through the
> examples in the documentation, and even after careful typing (and cutting
> and pasting from the manual), I can't get the authentication example to
> work.  The line:
> 
> 	user = req.connection.user
> 
> Gives an attribute error ('user').  As shown in the manual, I'm calling
> req.get_basic_auth_pw() first, but still no joy.

I ran into this too.  The documentation is wrong; you should use req.user
instead.  Also note that you *can* assign a value to req.user -- it's not
read-only as listed in the docs.

-Glenn Hochberg



_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From perry.tew at cibavision.novartis.com  Mon Oct 20 08:52:15 2003
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.connection.user generates AttributeError
Message-ID: <OF2CAEE580.6333EEBF-ON85256DC5.0044A937-85256DC5.0046B410@EU.novartis.net>

David,
   I just wrote some code for ticket based authentication.  It's not 
completely where I want it, but it may provide you a framework to get 
started.  It works for me, but I'm using client certificates for 
authentication.   You'd need to change the TicketMaster.py script to check 
for basic authentication.  Here's the code, along with my httpd.conf 
settings.  If you do use it, I would appreciate criticism and suggestions 
for improvement as I'm new to python and may be doing some Java-ish things 
that have better solutions in Python.  Also, it's still a work in progress 
concerning documentation.  FYI, I basically ported the TicketMaster 
example in the "Writing Apache modules in Perl and C" book.

Inside of my TicketAccessHandler.py is also some authorization stuff going 
against an RDBMS.  It's pretty sweet.  It's set for an intranet to allow 
managers of content to handle adding and deleting users from roles rather 
than bogging down a site admin with such mundane tasks.  It can run 
completely in memory and updates are event driven and take place in a 
cleanup handler.  If you're interested in that, I can sent you the code 
for it as well (sql, front end, etc), but I suspect your first priority is 
the md5 ticket cookie, so at least the TicketTool.py should be an pretty 
exact match of what you may need.

Hope this helps,
-Perry Tew




# ===========================================================
# ===========================================================
# ===========================================================
# TicketAuthenHandler.py ======================================
from mod_python import apache
import TicketTool

from ApachePool import ApachePool
dbpool = ApachePool()


def accesshandler(req):
        #apache.log_error("[TicketAuthenHandler] in handler() method")

# ===========================================================
# Authenication secition.  This handler contains both authen
# and authz.  This is because it doesn't use the default
# Basic authentication.  Without using Basic, I can't get the
# authz handler to be called.  So, I have them together here
# ===========================================================

        # the NameError should only happen once in the life of the apache 
child process 
        global ticketTool
        try:
                result, msg, user = ticketTool.verify_ticket(req)
        except NameError:
                # if the ticketTool hasn't been created yet, then do so.
                ticketTool = TicketTool.TicketTool(req)
                result, msg, user = ticketTool.verify_ticket(req)


        #apache.log_error("[TicketAuthenHandler] verify_ticket result was 
" + str(result))
        #apache.log_error("[TicketAuthenHandler] verify_ticket msg was " + 
msg)

        # ditch the call if something wasn't correct
        if result == 0:
                #apache.log_error(msg, apache.APLOG_WARNING)
                cookie = ticketTool.make_return_address(req)
                cout = cookie.output(header="")
                #apache.log_error( "cookie going out:" + cout)
                req.err_headers_out['Set-Cookie'] = cout
                req.err_headers_out['Pragma'] = 'no-cache'
                req.err_headers_out['Cache-Control'] = 'no-cache'
                req.err_headers_out['Expires'] = '-1'
                return apache.HTTP_FORBIDDEN



# ===========================================================
# Authorization section
# Make sure user's roles are sufficient to access uri
# ===========================================================

        #apache.log_error("[TicketAuthzHandler] in handler() method")

        uri_roles = get_uri_roles(req)
        #apache.log_error("URI ROLES:" + str(uri_roles)) 

        user_roles = get_user_roles(req, user)
        #apache.log_error("USER ROLES:" + ",".join(user_roles.keys())) 

        for a_uri, some_roles in uri_roles.items():
                #apache.log_error( "AUTHZ: checking " + a_uri )
                unauthorized = 1
                if some_roles is not None:
                        for a_role in some_roles:
                                #apache.log_error("AUTHZ: examining role:" 
+ a_role)
                                if user_roles.has_key(a_role):
                                        #apache.log_error("AUTHZ: MATCH 
>>" + a_role)
                                        unauthorized = 0
                else:
                        #apache.log_error( "AUTHZ: " + a_uri + " is not 
protected" )
                        unauthorized = 0


                if unauthorized:
                        #apache.log_error("AUTHZ: FAILED")
                        # can't return FORBIDDEN, since that may be used
                        # by the TicketAuthenHandler to redirect to the 
ticket
                        # master, and I sure don't want to do that for a 
missing
                        # role.
                        return apache.HTTP_PAYMENT_REQUIRED

        return apache.OK

# ===========================================================
# End of main handler
# ===========================================================


def get_user_roles(req, user):


        global userCache
        global dbpool
        try:
                if userCache.has_key(user):
                        #apache.log_error("found user roles in cache") 
                        return userCache[user]
        except NameError:
                #apache.log_error("userCache doesn't exist, creating it") 
                userCache = {}

        #apache.log_error("userCache: " + str(userCache.keys()))


        #apache.log_error("DB: retrieving user roles from database") 
        db = dbpool.get_connection()
        c = db.cursor()
        c.execute( "SELECT ROLE_NAME FROM AUTH_USER_ROLES WHERE DN ='%s'" 
% (user,))
        rset = c.fetchall()
        roles = {}
        for row in rset:
                roles[row[0]] = None

        userCache[user] = roles
        return roles
        c.close()
        db.commit()
        db.close()



def get_uri_roles(req):
        """
                break up the uri, make sure each part or substring of the 
uri is cached, then
                retrieve the roles from the uriCache
        """
        global uriCache
        global dbpool

        paths = get_paths(req)
        uri_roles = []   # list of dicts 

        try:
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
        except NameError:
                #apache.log_error("uriCache doesn't exist, creating it") 
                init_uri_cache(req)
                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
 

        if len(uncached_paths) > 0:
                #apache.log_error("DB: retrieving uncached uri roles from 
database: " + str(uncached_paths)) 
                path_str = ",".join(map(add_quotes, uncached_paths))

                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI WHERE URI IN 
(%s)" % path_str
                c.execute( sql )
                rset = c.fetchall()
                for row in rset:
                        if not uriCache.has_key(row[0]):
                                uriCache[row[0]] = []
                        uriCache[row[0]].append(row[1])
                c.close()
                db.commit()
                db.close()
 

                # once all of the request_uri have been updated in the 
database, there
                # may be more that need updating.  For this, assign an 
empty hash for those
                # uris

                uncached_paths = [a_path for a_path in paths if 
uriCache.has_key(a_path) == 0]
                for i in uncached_paths:
                        uriCache[i] = None


        uri_roles = {}
        for i in paths:
                uri_roles[i] = uriCache[i] 

        return uri_roles
 


def init_user_cache(req):
        global userCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                c.execute( "SELECT DN, ROLE_NAME FROM AUTH_USER_ROLES")
                rset = c.fetchall()
                tmp = {}
                roles = {}
                for row in rset:
                        if tmp.has_key(row[0]) == 0:
                                tmp[row[0]] = {}

                        tmp[row[0]][row[1]] = None

                c.close()
                db.commit()
                db.close()
                userCache = tmp
        else:
                userCache = {}




def init_uri_cache(req):
        global uriCache
        global dbpool
 
        opts = req.get_options()
        fully_load = 'no'
        try:
                fully_load = opts['fullyLoadCache'].lower()
        except KeyError:
                pass


        if fully_load == 'yes':
                #apache.log_error("USER CACHE: fully loading from 
database")
                db = dbpool.get_connection()
                c = db.cursor()
                sql = "SELECT URI, ROLE_NAME FROM AUTH_URI"
                c.execute( sql )
                rset = c.fetchall()
                tmp = {}
                for row in rset:
                        if not tmp.has_key(row[0]):
                                tmp[row[0]] = []
                        tmp[row[0]].append(row[1])

                uriCache = tmp
                c.close()
                db.commit()
                db.close()

        else:
                uriCache = {}




def add_quotes(val):
        return "'" + val + "'"
 


def get_paths(req):

        uri_path = req.parsed_uri[apache.URI_PATH]
        #apache.log_error("URI PATH:" + uri_path)
        dirs = uri_path.split("/")
        current_path = ''
        paths = []
        i = 0
        while i < len(dirs) - 1:
                if dirs[i] == '':
                        paths.append('/')
                else:
                #current_path = current_path + dirs[i] + '/'
                        current_path = current_path + '/' +  dirs[i]
                        paths.append(current_path)
                ##apache.log_error("URI PATH current path:" + 
current_path)
                i = i + 1

        paths.append(uri_path)
        #apache.log_error("URI PATH current path:" + str(paths))
        return paths


def update_cache(req, userParm=None, uriParm=None):
        """
        If user = None, do nothing for the userCache.
        If user = 'ALL', recreate the entire cache
        If user = other, then delete just that user from the cache
        The same applies to the uri.

        All of this crap should be moved to the Authz handler, eh?
        """

        global userCache
        global uriCache


        if userParm is not None:
                if userParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE USER CACHE")
                        init_user_cache(req)
                else:
                        if userCache.has_key(userParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from userCache" % userParm)
                                del(userCache[userParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in userCache" % userParm)
 

        if uriParm is not None:
                if uriParm == 'ALL':
                        apache.log_error("[TicketAuthenHandler] CLEARING 
ENTIRE URI CACHE")
                        uriCache = {}
                else:
                        if uriCache.has_key(uriParm):
                                apache.log_error("[TicketAuthenHandler] 
Clearing %s from uriCache" % uriParm)
                                del(uriCache[uriParm])
                        else:
                                pass
                                #apache.log_error("[TicketAuthenHandler] 
Invalid request to clearCache. %s was not found in uriCache" % uriParm)
 

# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketMaster.py =============================================

#TODO - this method should verify that the user indeed exists in the user
#table of the auth system

import TicketTool
import Cookie
from mod_python import apache
from mod_python.util import FieldStorage

ticketTool = None

def handler(req):
        apache.log_error( "[TicketMaster] calling handler() method" )

        # this will only need doing once during the life of the apache 
child process
        global ticketTool
        if ticketTool == None:
                ticketTool = TicketTool.TicketTool(req)
 

        req.add_common_vars()

        request_uri = None

        # 1. check for a paramater named request_uri
        # 2. check for a cookie named request_uri
        # 3. check for a req.prev uri

        fields = FieldStorage(req)
        if fields.has_key('request_uri'):
                request_uri = fields['request_uri']
        else:
                apache.log_error( "[TicketMaster] no request_uri param" )

                if req.prev:
                        request_uri = req.prev.unparsed_uri
                        apache.log_error( "[TicketMaster] have a prev 
request_uri:" + request_uri )
                else:
                        cookies = Cookie.SimpleCookie()
                        try:
                                apache.log_error( "[TicketMaster] cookie 
headers_in:" + req.headers_in['Cookie'] )
                                cookies.load(req.headers_in['Cookie'])
                                request_uri = cookies['request_uri'].value
                                #request_uri = cookies['request_uri']
                                apache.log_error( "[TicketMaster] have a 
cookie request_uri:" + str(request_uri) )
                        except KeyError:
                                apache.log_error( "[TicketMaster] no 
cookies were found, what now?" )
 

        # if nothing by here, display and error and move on with life.
        # it's too short 
        if request_uri == None:
                apache.log_error( "[TicketMaster] no request_uri could be 
found" )
                no_cookie_error(req)
                return apache.OK



        user = ''
        try:
                user = req.subprocess_env['SSL_CLIENT_S_DN']
                apache.log_error("[TicketMaster] user dn:" + user)
        except KeyError:
                apache.log_error("[TicketMaster] no SSL DN env variable!" 
)
                display_missing_cert_screen(req, request_uri)
                return apache.OK


        result = 0
        msg = ''

        if user:
                # I don't authenticate here, since the SSL layer does that
                # for me

                try:
                        ticket = ticketTool.make_ticket(req, user)
                        go_to_uri(req, request_uri, ticket)
                        return apache.OK

                except:
                        apache.log_error( 'could not create ticket, 
missing secret key?', apache.APLOG_ERR)
                        raise
                        #return apache.HTTP_INTERNAL_SERVER_ERROR

        apache.log_error( "[TicketMaster] no req.user, so cannot make 
ticket" )
        display_missing_cert_screen(req, request_uri)
        return apache.OK


def go_to_uri(req, request_uri, ticket):
        apache.log_error( "[TicketMaster] sending refresh to browser to go 
here:" + request_uri)
        apache.log_error( "[TicketMaster] setting the following cookie:" + 
ticket.output(header=""))
        req.content_type = 'text/html'
        req.headers_out['Set-Cookie'] = ticket.output(header="")
        # the following line causes MSIE to wig out, so don't uncomment 
it.
        #req.headers_out['Refresh'] = '1;' + request_uri
        req.headers_out['Pragma'] = 'no-cache'
        req.headers_out['Cache-Control'] = 'no-cache'
        req.headers_out['Expires'] = '-1'
        #req.send_http_header()
        req.write("""
                <html>
                        <head>
                                <title>Successfully Authenticated</title>
                        </head>
                        <body>
                                <h4>Congratulations, you have successfully 
authenticated</h4>
                                <p>Click <a href="%s">here</a> to 
continue</p>
                                <p>A nice explanation about the cookie I 
just set would be swell</p>
                        </body>
                </html>

        """ % request_uri)
        return apache.OK
 


def display_missing_cert_screen(req,request_uri):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Missing Entrust PKI 
Certificate</title>
                        </head>
                        <body>
                                <p>The page you attempted to view (%s) was 
protected.</p>
                                <p>Protection for this web site is based 
on Digital Certificate technology.
                                You need a PKI certificate to access this 
portion of the website.
                                Contact Human Resources.</p>
                        </body>
                </html>""" % request_uri)

def no_cookie_error(req):
        req.content_type = 'text/html'
        req.write("""
                <html>
                        <head>
                                <title>Unable to Log In</title>
                        </head>
                        <body>
                                <h4>Unable to Log In</h4>
                                <p>This site uses cookies for security. 
Your browser must be capable
                        of processing cookies <em>and</em> cookies must be 
activated. 
                                Please set your browser to accept cookies, 
then press the
                        <strong>reload</strong> button.</p>
                                <hr>
                        </body>
                </html>""")



# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# ===========================================================
# TicketTool.py==============================================
import md5
import Cookie
import time
from mod_python import apache

defaults = {
        'TicketExpires':60000,
        'TicketSecret':'/home/webadmin/.secretkey',
        'TicketDomain':'.cv.usat'
}


class TicketTool(dict):
        serverName = ''

        def __init__(self, req):
                """
                args: self
                          req: mod_python request object
                """

                # set up the config items
                opts = req.get_options()
                for key,value in defaults.items():
                        try:
                                avalue = opts[key]
                        except KeyError:
                                avalue = value
                        self[key] = avalue

 
        def authenticate(self,user,passwd):
                # since this is going to run behind SSL client
                # cert authtication, just return true 
                return 1



        def fetch_secret(self):
                secret = ""
                try:
                        secret = self['SECRET_KEY']
                except KeyError:
                        secret = open(self['TicketSecret']).read()
                        self['SECRET_KEY'] = secret

                return secret



        def invalidate_secret(self):
                del(self['SECRET_KEY'])


        def make_ticket(self, req, username):
                """
                usage: cookie = ticketTool.make_ticket(req, username)
                Creates a cookie containing the secure user information
                """ 
 
                ip_address = req.connection.remote_ip
                expires = str(self['TicketExpires'])
                now = str(time.time())
                secret = self.fetch_secret()
                m = md5.new()
                m.update(secret+ip_address+now+expires+username)
                hash = m.hexdigest()

                cookie = Cookie.SimpleCookie()
                cookie["Ticket"] = 
ip_address+","+expires+","+username+","+now+","+hash
                cookie["Ticket"]['path'] = '/'
                cookie["Ticket"]['domain'] = self['TicketDomain']
                cookie["Ticket"]['max-age'] = self['TicketExpires'] * 3600 

                # TODO - is the expires in seconds?  If so, jack this up!
 
                return cookie

 

        def verify_ticket(self,req):
                """
                usage: result, msg, user = ticketTool.verify_ticket(req)
                """

                ticket = None 
                cookie = Cookie.SimpleCookie()

                # could get KeyError in two places.
                # 1. if there are no cookies
                # 2. if there isn't a cookie named 'Ticket'
                try:
                        cookie.load(req.headers_in['Cookie'])
                except KeyError:
                        return 0, "user has no cookies", 'noone'

                try:
                        ticket = cookie['Ticket'].value
                        apache.log_error("Ticket Cookie value:" + 
str(ticket))
                except KeyError:
                        return 0, "user has no ticket cookie", 'noone'


                ip, expires_s, user, timestamp_s, hash = ticket.split(",")
 
                apache.log_error("[Ticket Cookie] hash:" + hash)
                apache.log_error("[Ticket Cookie] user:" + user)
                apache.log_error("[Ticket Cookie] time:" + timestamp_s)
                apache.log_error("[Ticket Cookie] expires:" + expires_s)
                apache.log_error("[Ticket Cookie] ip:" + ip)

                timestamp = float(timestamp_s)
                expires = int(expires_s)

                if ip != req.connection.remote_ip:
                        return 0, "IP address mismatch in ticket", 'noone'

                if time.time() - timestamp / 60 < expires:
                        return 0, "ticket has expired", 'noone'

                secret = self.fetch_secret()

 
                m = md5.new()
                m.update(secret+ip+timestamp_s+expires_s+user)
                new_hash = m.hexdigest()

                if hash != new_hash:
                        self.invalidate_secret()
                        return 0, 'ticket mismatch', 'noone'


                req.user = user
                return 1, 'ok', user
 
 

        def make_return_address(self, req):
                """
                usage: cookie = ticketTool.make_return_address(req)
                """

                protocol = 'http://'
                if req.get_options().has_key('is_ssl'):
                        protocol = 'https://'
 
                request_uri = protocol + req.server.server_hostname + ':' 
+ str(req.server.port) + req.unparsed_uri

                cookie = Cookie.SimpleCookie()
                cookie['request_uri'] = request_uri
                cookie['request_uri']['domain'] = self['TicketDomain']
                cookie['request_uri']['path'] = '/'

                return cookie


# ===========================================================
# ===========================================================
# ===========================================================
# HTTPD.CONF: ==============================================

<Macro CertSecurity>
        PythonAccessHandler TicketAuthenHandler
        PythonCleanupHandler TicketCleanupHandler
        ErrorDocument 403 https://usatux29.cv.usat:22221/ticketMaster
        #ErrorDocument 402 /unauthorized.html
        ErrorDocument 402 /manager?_action=error_doc_unauth
        PythonOption TicketSecret /home/tewpe1/.secretkey

 #==================================================================
        # PythonOption fullyLoadCache ::= no|yes (default is no)
        # This option directs the Authen handler whether to fully load the
        # cache upon child startup or cache refresh
        PythonOption fullyLoadCache yes
 #==================================================================

 #==================================================================
        # PythonOption is_ssl ::= any value you wish
        # only set is_ssl to something if this url is under ssl.  It 
doesn't
        # matter what it's set to, only that it exists.  It is used to 
help
        # construct the redirect_url correctly

        #PythonOption is_ssl yes
 #==================================================================

</Macro>

<Directory "/web/devel/tewpe1/py/apache2/htdocs/secure">
        Use CertSecurity
</Directory>

<Location /ticketMaster>
        SSLRequireSSL
        SSLOptions +StdEnvVars +ExportCertData

        SetHandler python-program
        PythonHandler TicketMaster
        PythonDebug On
        Order allow,deny
        Allow from all
        PythonOption TicketSecret /home/tewpe1/.secretkey

</Location>









"Hancock, David (DHANCOCK)" <DHANCOCK@arinc.com>
Sent by: mod_python-bounces@modpython.org
10/19/2003 12:27 AM

 
        To:     "'mod_python@modpython.org'" <mod_python@modpython.org>
        cc: 
        Subject:        [mod_python] req.connection.user generates AttributeError


I'm new to mod_python, and I'm stuck already.  I'm working through the 
examples in the documentation, and even after careful typing (and cutting 
and pasting from the manual), I can't get the authentication example to 
work.  The line:
        user = req.connection.user 
Gives an attribute error ('user').  As shown in the manual, I'm calling 
req.get_basic_auth_pw() first, but still no joy.
If I try/except to trap the attribute error, I avoid the 500 Server Error 
message, but the authentication still doesn't work.
Any ideas?  I'm running Windows 2000, Apache 2.0.47, Python 2.2, and 
mod_python 3.0.3.  (My other computer is a Linux box, but this is what 
I've got right going right now).  The mod_python is a precompiled binary.
I'll be grateful for any assistance I can get.  I'm trying to recreate a 
mod_perl module (AuthCookie) which implements a ticket-based 
authentication mechanism.  It works well in Perl, but my group 
standardized on Python and we'd like to keep using Python for Apache 
modules, too.
Cheers! 
-- 
David Hancock | dhancock@arinc.com | 410-266-4384 _______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketTool.py
Type: application/octet-stream
Size: 3650 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketTool-0003.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketAuthenHandler.py
Type: application/octet-stream
Size: 8256 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketAuthenHandler-0003.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TicketMaster.py
Type: application/octet-stream
Size: 4425 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20031020/f88d2166/TicketMaster-0003.obj
From neel at mediapulse.com  Mon Oct 20 10:25:12 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] req.user always returns None?
Message-ID: <C0FC22C08B82074A88B50061764157776B976A@johnson.mediapulse.net>

Would it make since to add a function req.get_basic_auth() that returns
a tuple of (username, passwd)?  For backwards compatibility a call to
get_basic_auth_pw() followed by getting the req.user could remain, but:

user, pw = req.get_basic_auth()

might be easier to follow and be gentler on new users

Mike


> -----Original Message-----
> From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org] 
> Sent: Sunday, October 19, 2003 11:21 PM
> To: Hancock, David (DHANCOCK)
> Cc: 'mod_python@modpython.org'
> Subject: Re: [mod_python] req.user always returns None?
> 
> 
> 
> 
> On Sun, 19 Oct 2003, Hancock, David (DHANCOCK) wrote:
> 
> > def authenhandler(req):
> >     user = req.user
> >     pw = req.get_basic_auth_pw()
> >     req.log_error(str(user) + ' ' + str(pw))
> >     if user == "david" and pw == "secret":
> >         return apache.OK
> >     else:
> >         return apache.HTTP_UNAUTHORIZED
> 
> The current docs neglect to mention this because at the time it seemed
> like it was no longer necessary, but the call to get_basic_auth_pw()
> should always _preceed_ the use of req.user. If the swap the first two
> lines, it will work (regardless of position of LoadModule within the
> config file).
> 
> Grisha
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From woodfucius at comcast.net  Mon Oct 20 20:21:31 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] 
	Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
Message-ID: <3F940483.8030702@comcast.net>

I am having some trouble getting mod_python 3.0.3 to compile on my 
system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03. 
Apache version is 2.0.47 and Python version is 2.3.2 - both were built 
from ports.  I know there is a port for mod_python 2.7.8, but I would 
rather run the newest version and anyway the port complains about 
building Python with WITHOUT-THREADS set no matter if I set it or not. 
I have included the output from ./configure and make below.  Any ideas?

woodfucius# ./configure
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr/bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) 
/usr/local/sbin/apxs
found /usr/local/sbin/apxs, we'll use this. Use --with-apxs to specify 
another.
checking Apache version... 2.0.47
checking for Apache libexec directory... /usr/local/libexec/apache2
checking for Apache include directory... -I/usr/local/include/apache2
checking for --with-python... no
checking for python... (cached) /usr/local/bin/python
checking Python version... 2.3
checking Python install prefix... /usr/local
checking for Py_NewInterpreter in -lpython2.3... (cached) no
checking what libraries Python was linked with... 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/local/include/python2.3
updating cache ./config.cache
creating ./config.status
creating Makefile
creating src/Makefile
creating Doc/Makefile
creating test/testconf.py
creating dist/setup.py
creating dist/Makefile
woodfucius# make

Compiling for DSO.

/usr/local/sbin/apxs -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-Wl,--export-dynamic   -pthread -lm 
/usr/local/lib/python2.3/config/libpython2.3.a    -lutil   -lm
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
mod_python.lo mod_python.c && touch mod_python.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
_apachemodule.lo _apachemodule.c && touch _apachemodule.slo
/usr/local/share/apache2/build/libtool --silent --mode=compile cc 
-prefer-pic -O -pipe -DAP_HAVE_DESIGNATED_INITIALIZER -D_REENTRANT 
-D_THREAD_SAFE  -I/usr/local/include/apache2 
-I/usr/local/include/apache2   -I/usr/local/include/apache2 
-I/usr/local/include -I/usr/home/wood/mod_python-3.0.3/src/include 
-I/usr/local/include/apache2 -I/usr/local/include/python2.3  -c -o 
requestobject.lo requestobject.c && touch requestobject.slo
requestobject.c: In function `getreq_recmbr_off':
requestobject.c:1055: `LONG_LONG' undeclared (first use in this function)
requestobject.c:1055: (Each undeclared identifier is reported only once
requestobject.c:1055: for each function it appears in.)
requestobject.c:1056: syntax error before `l'
requestobject.c:1057: `l' undeclared (first use in this function)
requestobject.c: At top level:
requestobject.c:1270: warning: initialization from incompatible pointer type
apxs:Error: Command failed with rc=65536
.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3/src.
*** Error code 1

Stop in /usr/home/wood/mod_python-3.0.3.
woodfucius#

From grisha at modpython.org  Mon Oct 20 12:17:13 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] Problems building mod_python 3.0.3 on FreeBSD
 4.8-STABLE
In-Reply-To: <3F940483.8030702@comcast.net>
References: <3F940483.8030702@comcast.net>
Message-ID: <20031020121423.O48570@onyx.ispol.com>



On Mon, 20 Oct 2003, Adam Wood wrote:

> I am having some trouble getting mod_python 3.0.3 to compile on my
> system.  The OS is FreeBSD 4.8-STABLE, last buildworld was on 22AUG03.
> Apache version is 2.0.47 and Python version is 2.3.2 - both were built
> from ports.  I know there is a port for mod_python 2.7.8

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha
From woodfucius at comcast.net  Mon Oct 20 21:56:18 2003
From: woodfucius at comcast.net (Adam Wood)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] 
	SOLVED: Problems building mod_python 3.0.3 on FreeBSD 4.8-STABLE
In-Reply-To: <20031020121423.O48570@onyx.ispol.com>
References: <3F940483.8030702@comcast.net>
	<20031020121423.O48570@onyx.ispol.com>
Message-ID: <3F941ABA.8060003@comcast.net>

Gregory (Grisha) Trubetskoy wrote:

There is also a port of 3.0.3 in /usr/ports/www/mod_python3

Your specific problem is described here:

http://www.modpython.org/FAQ/faqw.py?req=all#4.2

However, my recommendation would be to stick with Python 2.2.x until the
next version of mod_python.

Grisha

Thanks Grisha.  I installed Python 2.2.3, used the mod_python3 port, and 
rebuilt Apache with --enable-threads and that solved the problem, guess 
I just needed to RTFM a bit more.  Thanks again!

Adam Wood



From tpc at csua.berkeley.edu  Tue Oct 21 11:12:46 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031021110347.J40781-100000@localhost.name>


hello all, I am trying to index and search mp3s in my Apache document
root.  Whenever executing a database select statement that retrieves
the URL and title (the filename minus the .mp3 extension) of mp3s whose
filenames contain the words I type into a web form, I get a "invalid
literal for float" error message.  The same script works fine on the
command line and in IDLE.  The error messages vary, and I sometimes see
"invalid literal for int" or "invalid literal for long" though now it
seems I just get "invalid literal for float."  Also the error seems to
come and go, and sometimes I get the results I want.  I have gotten this
type of message before when playing around with Python and trying to
convert, say, a string to int, but this has me scratching my head:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>


From tpc at csua.berkeley.edu  Tue Oct 21 11:17:38 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] invalid literal for float addendum
Message-ID: <20031021111643.Y40948-100000@localhost.name>


By the by rpm -q mod_python tells me:
mod_python-3.0.1-3


From neel at mediapulse.com  Tue Oct 21 14:45:49 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>

There's nor really enough info here to see the cause, but it's a MySQLdb
error, not a mod_python error.  Your doesn't show the SQL statement you
are trying to execute, but my guess is that the field in the MySQL table
is defined as a float and your trying to insert a string (the title).
Seeing a few lines of the python module in question would help though.

Mike

> -----Original Message-----
> From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu] 
> Sent: Tuesday, October 21, 2003 2:13 PM
> To: mod_python@modpython.org
> Subject: [mod_python] invalid literal for float
> 
> 
> 
> hello all, I am trying to index and search mp3s in my Apache document
> root.  Whenever executing a database select statement that retrieves
> the URL and title (the filename minus the .mp3 extension) of 
> mp3s whose
> filenames contain the words I type into a web form, I get a "invalid
> literal for float" error message.  The same script works fine on the
> command line and in IDLE.  The error messages vary, and I 
> sometimes see
> "invalid literal for int" or "invalid literal for long" though now it
> seems I just get "invalid literal for float."  Also the error seems to
> come and go, and sometimes I get the results I want.  I have 
> gotten this
> type of message before when playing around with Python and trying to
> convert, say, a string to int, but this has me scratching my head:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> in HandlerDispatch
>     result = object(req)
> 
>   File 
> "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> 194, in handler
>     result = apply(object, (), args)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
>     results = getMP3SearchResults(terms)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> getMP3SearchResults
>     results = getMatchingURLs(cursor)
> 
>   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> getMatchingURLs
>     cursor.execute(sql)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 95, in
> execute
>     return self._execute(query, args)
> 
>   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", 
> line 114, in
> _execute
>     self.errorhandler(self, exc, value)
> 
>   File 
> "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> in defaulterrorhandler
>     raise errorclass, errorvalue
> 
> ValueError: invalid literal for float(): <insert any mp3 title here>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From tpc at csua.berkeley.edu  Tue Oct 21 12:06:37 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9778@johnson.mediapulse.net>
Message-ID: <20031021120144.O41208-100000@localhost.name>

I have attached my code, although I must ask if it was a MySQL error
why does my script work fine on the command line and in IDLE ?  Also, the
script seems to throw an error during a cursor.execute(sql) of a SELECT statement:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)

  File "/var/www/html/python/temp-invalidtest.py", line 45, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 14, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 40, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

<paste>
#!/usr/bin/env python
"""Created to solve bug that outputs invalid literal for float, int, long.
Simplifies main search script and assumes query will always be one word
long
"""
import MySQLdb

DB = 'test'

def getMP3SearchResults(terms):
	conn = MySQLdb.Connection(db=DB)
	cursor = conn.cursor()
	createTemporaryTable(cursor)
	identifyMatchingURLs(terms, cursor)
	results = getMatchingURLs(cursor)
	cursor.close()
	conn.close()
	return results

def createTemporaryTable(cursor):
	try:
		sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
		      url_id INT NOT NULL,
		      ) TYPE = InnoDB;"""
		cursor.execute(sql)
	except:
		print "Error in creating URLs_WITH_MATCHES table"

def identifyMatchingURLs(terms, cursor):
        sql = """INSERT INTO URLs_WITH_MATCHES
              SELECT DISTINCT WORDS_X_URL.url_id
              FROM WORDS_X_URL
              INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id
              WHERE WORDS.word = '% s' """ % terms
        cursor.execute(sql)

def getMatchingURLs(cursor):
	sql = """SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs
	      WHERE URLs_WITH_MATCHES.url_id = URLs.id
	      GROUP BY URLs_WITH_MATCHES.url_id"""
	cursor.execute(sql)
	results = cursor.fetchall()
	return results

def search(terms):
        results = getMP3SearchResults(terms)
        return results
</paste>

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> There's nor really enough info here to see the cause, but it's a MySQLdb
> error, not a mod_python error.  Your doesn't show the SQL statement you
> are trying to execute, but my guess is that the field in the MySQL table
> is defined as a float and your trying to insert a string (the title).
> Seeing a few lines of the python module in question would help though.
>
> Mike
>
> > -----Original Message-----
> > From: tpc@csua.berkeley.edu [mailto:tpc@csua.berkeley.edu]
> > Sent: Tuesday, October 21, 2003 2:13 PM
> > To: mod_python@modpython.org
> > Subject: [mod_python] invalid literal for float
> >
> >
> >
> > hello all, I am trying to index and search mp3s in my Apache document
> > root.  Whenever executing a database select statement that retrieves
> > the URL and title (the filename minus the .mp3 extension) of
> > mp3s whose
> > filenames contain the words I type into a web form, I get a "invalid
> > literal for float" error message.  The same script works fine on the
> > command line and in IDLE.  The error messages vary, and I
> > sometimes see
> > "invalid literal for int" or "invalid literal for long" though now it
> > seems I just get "invalid literal for float."  Also the error seems to
> > come and go, and sometimes I get the results I want.  I have
> > gotten this
> > type of message before when playing around with Python and trying to
> > convert, say, a string to int, but this has me scratching my head:
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 194, in handler
> >     result = apply(object, (), args)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 45, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 14, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 40, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py",
> > line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File
> > "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From seth at picklematrix.net  Tue Oct 21 12:07:52 2003
From: seth at picklematrix.net (Seth Ladd)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] returning apache code from publisher handler?
Message-ID: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>

Hello,

 From the examples I've seen, the publisher handler expects a string to 
be returned.  I'd like the option to return any arbitrary apache code 
if I need to.  Is this an option or possible?

Thanks very much!
Seth

From neel at mediapulse.com  Tue Oct 21 18:33:47 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] invalid literal for float
Message-ID: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>

> I have attached my code, although I must ask if it was a MySQL error
> why does my script work fine on the command line and in IDLE 
> ?  Also, the
> script seems to throw an error during a cursor.execute(sql) 
> of a SELECT statement:
> 

Your second sentence should answer the first, I doubt mod_python has any
cursor classes =p.  Your best asking this on the mysql lists and/or the
mysqldb list.

Nothing looks odd at a glance, I'd check over my table structures and
data, then fire off the question to one of the above places.

Mike

From grisha at modpython.org  Tue Oct 21 23:23:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:17 2004
Subject: [mod_python] returning apache code from publisher handler?
In-Reply-To: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
References: <03BB9193-0413-11D8-B875-000A9576D038@picklematrix.net>
Message-ID: <20031021232220.V80359@onyx.ispol.com>


Yes, you can

raise apache.SERVER_RETURN, apache.OK

or

raise apache.SERVER_RETURN, apache.DECLINED

etc.

On Tue, 21 Oct 2003, Seth Ladd wrote:

> Hello,
>
>  From the examples I've seen, the publisher handler expects a string to
> be returned.  I'd like the option to return any arbitrary apache code
> if I need to.  Is this an option or possible?
>
> Thanks very much!
> Seth
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Wed Oct 22 10:21:01 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] invalid literal for float
In-Reply-To: <C0FC22C08B82074A88B50061764157776B977D@johnson.mediapulse.net>
Message-ID: <20031022100911.F48998-100000@localhost.name>


hi Michael, I guess I will lookup MySQLdb support but the statements work
just fine in MySQL shell, and in php, and in python executed from the
command line and in IDLE, both of which have import MySQLdb.  I went to
this list first because the error message begins with:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
194, in handler
    result = apply(object, (), args)
</paste>

but ends with:

<paste>
 File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue
</paste>

Here's hoping MySQLdb support won't say it's a mod_python problem ;-)

On Tue, 21 Oct 2003, Michael C. Neel wrote:

> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE
> > ?  Also, the
> > script seems to throw an error during a cursor.execute(sql)
> > of a SELECT statement:
> >
>
> Your second sentence should answer the first, I doubt mod_python has any
> cursor classes =p.  Your best asking this on the mysql lists and/or the
> mysqldb list.
>
> Nothing looks odd at a glance, I'd check over my table structures and
> data, then fire off the question to one of the above places.
>
> Mike
>

From tpc at csua.berkeley.edu  Wed Oct 22 10:26:53 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] invalid literal for float
Message-ID: <20031022102616.K48998-100000@localhost.name>

this reply didn't get forwarded to the list

---------- Forwarded message ----------
Date: Wed, 22 Oct 2003 10:08:40 -0700 (PDT)
From: tpc@csua.berkeley.edu
To: "caffeine@tuxfamily.org" <caffeine@tuxfamily.org>
Subject: Re: [mod_python] invalid literal for float


hi caffeine, I have tested my MySQL statements in PHP and in MySQL
shell with no error.  The MySQL select statement actually comes from a
working PHP script that I rewrote for use with Python.  I executed the
following in the MySQL shell:

CREATE TEMPORARY TABLE URLs_WITH_MATCHES ( url_id INT NOT NULL ) TYPE =
InnoDB;

INSERT INTO URLs_WITH_MATCHES SELECT DISTINCT WORDS_X_URL.url_id FROM
WORDS_X_URL INNER JOIN WORDS ON WORDS_X_URL.word_id = WORDS.id WHERE
WORDS.word = 'anyword'

SELECT URLs.url, URLs.title FROM URLs_WITH_MATCHES, URLs WHERE
URLs_WITH_MATCHES.url_id = URLs.id GROUP BY URLs_WITH_MATCHES.url_id;

drop table URLs_WITH_MATCHES;

with no problem.  Note to those trying this at home, whenever you create a
temporary table and try to SHOW TABLES you can never see the darn thing
(as of MySQL 4.0.14).  But as long as your MySQL shell is alive you can
access a temporary table.

On Wed, 22 Oct 2003, caffeine@tuxfamily.org wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
>
>
> On Mardi 21 Octobre 2003 19:06, tpc@csua.berkeley.edu wrote:
> > I have attached my code, although I must ask if it was a MySQL error
> > why does my script work fine on the command line and in IDLE ?  Also,
> > the script seems to throw an error during a cursor.execute(sql) of a
> > SELECT statement:
>
> Have you tried your SQL statements on the MySQL command line client ?
> I'd suggest you double-check your tables structure and data, then track
> exactly where is the problem (modpython, python mysql bindings, mysql
> itself...)
>
> Dunno if this is related to your problem, I had once MySQL firing all
> sorts of weird errors. We tracked it down to /var being full, we
> cleaned the partition and everything was back as normal.
>
> my 2 cents,
> sylvain
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.2.2 (GNU/Linux)
>
> iD8DBQE/ll7NK/qAVOpQGPYRAjYPAJ9faZH/I23okt6nhsNjyMFQVuDgQwCeNO12
> E9f0VrPQ5kBZLAJZGXTugQw=
> =/45O
> -----END PGP SIGNATURE-----
>
>


From conrad at hep.caltech.edu  Wed Oct 22 11:56:13 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] 3.1.1b Feedback
Message-ID: <1066848973.2812.75.camel@heppc22>

Hi Grisha

Since I was one of the complainers about the session locks in 3.1.0a,
I'm happy to confirm that 3.1.1b now works for me. Thanks!

The server startup log is given below. I don't actually use the
mod_python sessions, so for me it would still be useful to be able to
turn that feature off. But that is just a minor footnote :-)

--

I noticed another surprising behaviour relating to the PythonImport and
PythonPath directives (not new with 3.1.1b though):

For a Directory directive in the main httpd.conf file e.g.

<Directory /usr/mypath/>
       SetHandler python-program
       AddHandler python-program .py
       PythonInterpPerDirective On
       PythonHandler myhandler
       DirectoryIndex myhandler.py
       PythonInterpPerDirectory On

# Name of the interpreter
       PythonInterpreter default_interp
       PythonPath "sys.path+['/usr/mypath']"
</Directory>
# Init for the 'default' server
PythonImport server_init default_interp

The PythonImport directive loads the file /usr/mypath/server-init.py
into the default_interp interpreter. If the PythonPath directive is
omitted, this import fails. 

Cheers

Conrad




[Wed Oct 22 11:41:00 2003] [notice] mod_python: Creating 150 session
mutexes based on 150 max processes and 0 max threads.
[Wed Oct 22 11:41:00 2003] [error] (28)No space left on device:
mod_python: Failed to create global mutex 125 of 150
(/tmp/mpmtx4571125).
[Wed Oct 22 11:41:00 2003] [error] mod_python: We can probably continue,
but with diminished ability to process session locks.
[Wed Oct 22 11:41:00 2003] [error] mod_python: Hint: On Linux, the
problem may be the number of available semaphores, check 'sysctl
kernel.sem'
[Wed Oct 22 11:41:00 2003] [notice] Apache/2.0.47 (Unix) mod_ssl/2.0.47
OpenSSL/0.9.7b mod_python/3.1.1b Python/2.2.3 configured -- resuming
normal operations

-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From olivier at phgroup.com  Wed Oct 22 23:19:11 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] no more 3.1.1 ? 
Message-ID: <3F97025F.8090308@phgroup.com>

hi all,

I've read some posts about testing the 3.1.1 version of mod_python, but 
I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .

any ideas on where is it hidden ??
regards !


-- 
Olivier Migeon


From grisha at modpython.org  Wed Oct 22 20:22:10 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] no more 3.1.1 ? 
In-Reply-To: <3F97025F.8090308@phgroup.com>
References: <3F97025F.8090308@phgroup.com>
Message-ID: <20031022202152.L96424@onyx.ispol.com>


On Wed, 22 Oct 2003, Olivier Migeon wrote:

> hi all,
>
> I've read some posts about testing the 3.1.1 version of mod_python, but
> I can't find it anywhere, even on http://apache.130th.net/httpd/modpython .
>
> any ideas on where is it hidden ??

in CVS :-)

Grisha
From scott_list at mischko.com  Wed Oct 22 19:20:04 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
Message-ID: <200310221920.04706.scott_list@mischko.com>

Hi all!

Draco relies on the req.server.my_generation for some of it's functionality.  
It appears that this is no longer included in mod_python3.1.1b?  Draco 
(0.99.4) is always getting an AttributeError when it accesses this.

I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.

Any ideas on this?  Is this actually gone from MP or am I missing something?

Scott
From grisha at modpython.org  Wed Oct 22 23:07:02 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310221920.04706.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
Message-ID: <20031022230636.R96424@onyx.ispol.com>


Heh - it appears to have been lost along the way :-)

I added it back in.

Grisha

On Wed, 22 Oct 2003, Scott Chapman wrote:

> Hi all!
>
> Draco relies on the req.server.my_generation for some of it's functionality.
> It appears that this is no longer included in mod_python3.1.1b?  Draco
> (0.99.4) is always getting an AttributeError when it accesses this.
>
> I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
>
> Any ideas on this?  Is this actually gone from MP or am I missing something?
>
> Scott
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Wed Oct 22 20:36:06 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031022230636.R96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
Message-ID: <200310222036.06088.scott_list@mischko.com>

The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I 
assume you added that patch in also?

Scott

On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> Heh - it appears to have been lost along the way :-)
>
> I added it back in.
>
> Grisha
>
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > Hi all!
> >
> > Draco relies on the req.server.my_generation for some of it's
> > functionality. It appears that this is no longer included in
> > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > when it accesses this.
> >
> > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> >
> > Any ideas on this?  Is this actually gone from MP or am I missing
> > something?
> >
> > Scott
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

From scott_list at mischko.com  Wed Oct 22 20:59:53 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] 
	restart_time is missing from the CVS checkout I just did.
Message-ID: <200310222059.53716.scott_list@mischko.com>

I just checked out CVS mod_python 3.1.2b and restart_time is missing from the 
server object.

Scott
From grisha at modpython.org  Thu Oct 23 09:26:35 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <200310222036.06088.scott_list@mischko.com>
References: <200310221920.04706.scott_list@mischko.com>
	<20031022230636.R96424@onyx.ispol.com>
	<200310222036.06088.scott_list@mischko.com>
Message-ID: <20031023092544.J96424@onyx.ispol.com>



On Wed, 22 Oct 2003, Scott Chapman wrote:

> The Draco author mentioned a patch needed back in the 2.7.8 days of MP.  I
> assume you added that patch in also?

If it's something other than my_generation, I don't know what the nature
of the patch is. If you find info on it, let me know.

Grisha

>
> Scott
>
> On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > Heh - it appears to have been lost along the way :-)
> >
> > I added it back in.
> >
> > Grisha
> >
> > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > Hi all!
> > >
> > > Draco relies on the req.server.my_generation for some of it's
> > > functionality. It appears that this is no longer included in
> > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > when it accesses this.
> > >
> > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > >
> > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > something?
> > >
> > > Scott
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scott_list at mischko.com  Thu Oct 23 07:26:18 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] mod_python 3.1.1b server.generation and Draco
In-Reply-To: <20031023092544.J96424@onyx.ispol.com>
References: <200310221920.04706.scott_list@mischko.com>
	<200310222036.06088.scott_list@mischko.com>
	<20031023092544.J96424@onyx.ispol.com>
Message-ID: <200310230726.18897.scott_list@mischko.com>

That's fixed.   It wasmy_generation.

Looks like you got my email on restart_time also.  Is there a test suite for 
mod_python that goes through and checks all the objects to make sure they 
still have all their normal attributes?

Thanks for the quick responses.  Draco's happy again!

Scott

On Thursday 23 October 2003 06:26, Gregory (Grisha) Trubetskoy wrote:
> On Wed, 22 Oct 2003, Scott Chapman wrote:
> > The Draco author mentioned a patch needed back in the 2.7.8 days of MP. 
> > I assume you added that patch in also?
>
> If it's something other than my_generation, I don't know what the nature
> of the patch is. If you find info on it, let me know.
>
> Grisha
>
> > Scott
> >
> > On Wednesday 22 October 2003 20:07, Gregory (Grisha) Trubetskoy wrote:
> > > Heh - it appears to have been lost along the way :-)
> > >
> > > I added it back in.
> > >
> > > Grisha
> > >
> > > On Wed, 22 Oct 2003, Scott Chapman wrote:
> > > > Hi all!
> > > >
> > > > Draco relies on the req.server.my_generation for some of it's
> > > > functionality. It appears that this is no longer included in
> > > > mod_python3.1.1b?  Draco (0.99.4) is always getting an AttributeError
> > > > when it accesses this.
> > > >
> > > > I'm running Apache 2.0.40 on RH 8.0 with Python 2.3.2.
> > > >
> > > > Any ideas on this?  Is this actually gone from MP or am I missing
> > > > something?
> > > >
> > > > Scott
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python

From mikeklein at sbcglobal.net  Sat Oct 25 15:52:37 2003
From: mikeklein at sbcglobal.net (Mike Klein)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] 
 Beginner question re: getting form data and key errors when var not
 defined
Message-ID: <3F9AFEB5.3090508@sbcglobal.net>

Why am I getting key errors when merely attempting to get <possible> 
form data from a mod_python request...ala:

author = req.form['author']

I get the following:

    raise KeyError, key

KeyError: subject

I do kind of expect certain form fields to possibly not have 
values...why the explicit error? Can't I just check for null or 
uninitialized in my code?

thanks,

mike

From michael at dynamine.net  Sat Oct 25 16:32:29 2003
From: michael at dynamine.net (Michael S. Fischer)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9AFEB5.3090508@sbcglobal.net>
References: <3F9AFEB5.3090508@sbcglobal.net>
Message-ID: <3F9B080D.1020904@dynamine.net>

This is a really a Python language question, not a mod_python question 
per se.

You have several options, including:

if req.form.has_key('author'):
   author = req.form['author']
else:
   author = None

Or:

try:
   author = req.form['author']
except KeyError:
   author = None

See section 2.2.7 ("Mapping Types") in the Python Library Reference for 
details.

--Michael

Mike Klein wrote:

> Why am I getting key errors when merely attempting to get <possible> 
> form data from a mod_python request...ala:
> 
> author = req.form['author']
> 
> I get the following:
> 
>    raise KeyError, key
> 
> KeyError: subject
> 
> I do kind of expect certain form fields to possibly not have 
> values...why the explicit error? Can't I just check for null or 
> uninitialized in my code?
> 
> thanks,
> 
> mike
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From twa at post.com  Sun Oct 26 09:28:34 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
Message-ID: <3F9B93C2.6040908@post.com>

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.  
27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so                                                     
174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


From sgillies at frii.com  Sun Oct 26 08:58:07 2003
From: sgillies at frii.com (Sean Gillies)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>

On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:

> I am trying to run mod_python.
>
> My setup is:
>
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47
> Windows XP Home edition 2002 Service Pack 1
>
> I installed python, then apache and then mod_python.  I have made no 
> changes to apache (other than to httpd.conf) or mod_python.
>
> Apache ran ok before the install of mod_python.
>
> When trying to run up apache with the example python code I get:
>
>    Syntax error on line 173 of C:/Program Files/Apache 
> Group/Apache2/conf/httpd.conf:
>    Cannot load C:/Program Files/Apache 
> Group/Apache2/modules/mod_python.so into server: The specified module 
> could not be found.
>    Note the errors or messages above, and press the <ESC> key to exit. 
>  27...
>
> That part of httpd.conf looks like this:
>
> 165 LoadModule setenvif_module modules/mod_setenvif.so
> 166 #LoadModule speling_module modules/mod_speling.so
> 167 #LoadModule status_module modules/mod_status.so
> 168 #LoadModule unique_id_module modules/mod_unique_id.so
> 169 LoadModule userdir_module modules/mod_userdir.so
> 170 #LoadModule usertrack_module modules/mod_usertrack.so
> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
> 172 #LoadModule ssl_module modules/mod_ssl.so
> 173 LoadModule python_module modules/mod_python.so                     
>                                 174
> 175 #
> 176 # ExtendedStatus controls whether Apache will generate "full" 
> status
> 177 # information (ExtendedStatus On) or just basic information 
> (ExtendedStatus
> 178 # Off) when the "server-status" handler is called. The default is 
> Off.
> 179 #
> 180 #ExtendedStatus On
>
> As usual I expect I have missed something glaringly obvious, I just 
> don't know what right now.
>
> Any help or pointers much appreciated.
>
> Thanks.
>
> Tom
>

Tom,

I don't use windows these days, but shouldn't the mod_python module for 
Win32
be a DLL rather than a SO?  You didn't mention if you checked in
C:/Program Files/Apache Group/Apache2/modules/ to see if the module was 
there.
Check the directory and use the mod_python library you find.

cheers,
Sean
--
Sean Gillies
sgillies at frii dot com
http://www.frii.com/~sgillies

From cs1spw at bath.ac.uk  Sun Oct 26 12:53:03 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
References: <3F9B93C2.6040908@post.com>
Message-ID: <3F9C180F.6070305@bath.ac.uk>

Tom Ayerst wrote:

> I am trying to run mod_python.
> 
> My setup is:
> 
> mod_python version  3.0.3
> python 2.3.2
> Apache 2.0.47

mod_python currently requires Python 2.2 - it doesn't yet work with 
Python 2.3.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 18:56:44 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
References: <30D0CC73-07CD-11D8-9685-000393B98B56@frii.com>
Message-ID: <3F9C18EC.8040004@post.com>

Sorry, I should have mentioned that.  mod_python.so is in the modules 
directory.  All the other modules are called *.so so I assumed that that 
is the Apache approach (its not standard but I think you can do that in 
Windows).

Cheers

Tom

Sean Gillies wrote:

> On Sunday, October 26, 2003, at 02:28  AM, Tom Ayerst wrote:
>
>> I am trying to run mod_python.
>>
>> My setup is:
>>
>> mod_python version  3.0.3
>> python 2.3.2
>> Apache 2.0.47
>> Windows XP Home edition 2002 Service Pack 1
>>
>> I installed python, then apache and then mod_python.  I have made no 
>> changes to apache (other than to httpd.conf) or mod_python.
>>
>> Apache ran ok before the install of mod_python.
>>
>> When trying to run up apache with the example python code I get:
>>
>>    Syntax error on line 173 of C:/Program Files/Apache 
>> Group/Apache2/conf/httpd.conf:
>>    Cannot load C:/Program Files/Apache 
>> Group/Apache2/modules/mod_python.so into server: The specified module 
>> could not be found.
>>    Note the errors or messages above, and press the <ESC> key to 
>> exit.  27...
>>
>> That part of httpd.conf looks like this:
>>
>> 165 LoadModule setenvif_module modules/mod_setenvif.so
>> 166 #LoadModule speling_module modules/mod_speling.so
>> 167 #LoadModule status_module modules/mod_status.so
>> 168 #LoadModule unique_id_module modules/mod_unique_id.so
>> 169 LoadModule userdir_module modules/mod_userdir.so
>> 170 #LoadModule usertrack_module modules/mod_usertrack.so
>> 171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
>> 172 #LoadModule ssl_module modules/mod_ssl.so
>> 173 LoadModule python_module 
>> modules/mod_python.so                     
>>                                 174
>> 175 #
>> 176 # ExtendedStatus controls whether Apache will generate "full" status
>> 177 # information (ExtendedStatus On) or just basic information 
>> (ExtendedStatus
>> 178 # Off) when the "server-status" handler is called. The default is 
>> Off.
>> 179 #
>> 180 #ExtendedStatus On
>>
>> As usual I expect I have missed something glaringly obvious, I just 
>> don't know what right now.
>>
>> Any help or pointers much appreciated.
>>
>> Thanks.
>>
>> Tom
>>
>
> Tom,
>
> I don't use windows these days, but shouldn't the mod_python module 
> for Win32
> be a DLL rather than a SO?  You didn't mention if you checked in
> C:/Program Files/Apache Group/Apache2/modules/ to see if the module 
> was there.
> Check the directory and use the mod_python library you find.
>
> cheers,
> Sean
> -- 
> Sean Gillies
> sgillies at frii dot com
> http://www.frii.com/~sgillies
>
>


From rclilly at cox.net  Sun Oct 26 11:19:09 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9C18EC.8040004@post.com>
Message-ID: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>

>
> Sorry, I should have mentioned that.  mod_python.so is in the modules
> directory.  All the other modules are called *.so so I assumed that that
> is the Apache approach (its not standard but I think you can do that in
> Windows).
>
> >
> > I don't use windows these days, but shouldn't the mod_python module
> > for Win32
> > be a DLL rather than a SO?  You didn't mention if you checked in
> > C:/Program Files/Apache Group/Apache2/modules/ to see if the module
> > was there.
> > Check the directory and use the mod_python library you find.

mod_python.so is a dll, it's just named after the Apache convention. The
other response you got from Simon Willison letting you know that current
release version of mod_python does not yet work with Python 2.3 is the
relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
open mod_python.so and replace all references to python22.dll with
python23.dll. I've been running with the latter solution for almost two
weeks now and haven't noticed any problems.

HTH,

Robert Lilly

From rclilly at cox.net  Sun Oct 26 11:30:45 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] 
	Best place to start learning both mod_python and Python
Message-ID: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>

I've been using mod_python to enable applications written by others to work
under Apache. I've decided to expand my programming skills and it looks like
Python is the best language to start with. I currently only know how to
program with Visual Basic 6, and VBA. My specialty has been custom financial
applications using MS Excel and VBA.

So, to someone who is new to both to mod_python and to the Python
programming language, and whose only background is Visual Basic, what are
your recommendations on how and where to get started. I am primarily
interested in developing web applications at the moment, which is why I've
included mod_python in my learning agenda.

Also, is using mod_python the only way to use Python under Apache? If not,
although this is a mod_python list, I would appreciate knowing what the
various options are.

Thanks!

Robert Lilly

From mike_verdone at shaw.ca  Sun Oct 26 14:07:57 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 22:04:18 2004
Subject: =?iso-8859-1?q?=5Bmod=5Fpython=5D=09Best=20place=20to=20start=20learning?=
 =?iso-8859-1?q?=20both=20mod=5Fpython=20and?= Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <200310261407.57694.mike_verdone@shaw.ca>

Hi!

For learning Python, your best bet is to start with the tutorials at 
www.python.org.

http://www.python.org/doc/2.3.2/tut/tut.html

You will probably already know the concepts explained in the tutorial, but 
it's a good way to learn Python's syntax. The documentation on python.org 
also includes the library reference, which is good to have. Another good way 
to get help on the libraries is from the Python interpreter. If you run the 
python interpreter and type help(), you will be in the help menu. Then, type 
a module name and you will get documentation on that module.

Documentation on mod_python is available at www.modpython.org. Read the FAQ 
and the Docs.

There are a few ways to interface Python and Apache, but mod_python is the 
best. (In my opinion as a member of the mod_python mailing list ;-) ). 
Another way to do it is by using regular CGI, where each .py file is 
basically a script that is run externally by Apache. This has much lower 
performance, and doesn't make it easier to develop, so I'd stay away. There 
was also a module named mod_snake that supposedly had better performance than 
mod_python, but I don't think it's supported anymore. Finally, there's Zope, 
which is an enterprise server based on Python. Haven't really used it, but 
it's supposed to be good. www.zope.org.

Hope that helps!

Mike.


On October 26, 2003 12:30, Robert Lilly wrote:
> I've been using mod_python to enable applications written by others to work
> under Apache. I've decided to expand my programming skills and it looks
> like Python is the best language to start with. I currently only know how
> to program with Visual Basic 6, and VBA. My specialty has been custom
> financial applications using MS Excel and VBA.
>
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started. I am primarily
> interested in developing web applications at the moment, which is why I've
> included mod_python in my learning agenda.
>
> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.
>
> Thanks!
>
> Robert Lilly
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 12:28:59 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <200310261407.57694.mike_verdone@shaw.ca>
Message-ID: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>

> Hi!
>
> For learning Python, your best bet is to start with the tutorials at
> www.python.org.
>
> http://www.python.org/doc/2.3.2/tut/tut.html
>
> You will probably already know the concepts explained in the
> tutorial, but
> it's a good way to learn Python's syntax. The documentation on python.org
> also includes the library reference, which is good to have.
> Another good way
> to get help on the libraries is from the Python interpreter. If
> you run the
> python interpreter and type help(), you will be in the help menu.
> Then, type
> a module name and you will get documentation on that module.
>
> Documentation on mod_python is available at www.modpython.org.
> Read the FAQ
> and the Docs.
>
> There are a few ways to interface Python and Apache, but
> mod_python is the
> best. (In my opinion as a member of the mod_python mailing list ;-) ).
> Another way to do it is by using regular CGI, where each .py file is
> basically a script that is run externally by Apache. This has much lower
> performance, and doesn't make it easier to develop, so I'd stay
> away. There
> was also a module named mod_snake that supposedly had better
> performance than
> mod_python, but I don't think it's supported anymore. Finally,
> there's Zope,
> which is an enterprise server based on Python. Haven't really
> used it, but
> it's supposed to be good. www.zope.org.
>
> Hope that helps!
>
> Mike.

Thanks for the quick response Mike. I especially appreciate the information
about using the Python interpreter as I was not aware of that capability.

I agree with you regarding staying away from CGI. I intend to do this
whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
what I see, it's way overkill for my needs.

Thanks,

Robert

From matt at pollenation.net  Sun Oct 26 21:21:28 2003
From: matt at pollenation.net (Matt Goodall)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python]	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKMELDCCAA.rclilly@cox.net>
Message-ID: <3F9C3AD8.4080303@pollenation.net>

Robert Lilly wrote:

>>Hi!
>>
>>    
>>
[snip]

>>There are a few ways to interface Python and Apache, but
>>mod_python is the
>>best. (In my opinion as a member of the mod_python mailing list ;-) ).
>>Another way to do it is by using regular CGI, where each .py file is
>>basically a script that is run externally by Apache. This has much lower
>>performance, and doesn't make it easier to develop, so I'd stay
>>away. There
>>was also a module named mod_snake that supposedly had better
>>performance than
>>mod_python, but I don't think it's supported anymore. Finally,
>>there's Zope,
>>which is an enterprise server based on Python. Haven't really
>>used it, but
>>it's supposed to be good. www.zope.org.
>>    
>>
>Thanks for the quick response Mike. I especially appreciate the information
>about using the Python interpreter as I was not aware of that capability.
>  
>
The interpreter is a fantastic tool for testing out ideas, you'll use it 
a lot. Also worth a mention is IPython (http://ipython.scipy.org/) which 
aims to be a better Python shell. It's got some great features for 
inspecting objects, getting help, looking at source code etc.

>I agree with you regarding staying away from CGI. I intend to do this
>whether I'm using Python, PHP, or whatever. I've heard of Zope, but from
>what I see, it's way overkill for my needs.
>  
>
Traditional CGI is slow but SCGI 
(http://www.mems-exchange.org/software/scgi/) and FastCGI 
(http://www.fastcgi.com/) are Apache modules that provide a CGI-like 
interface to long-running Python applications. I find SCGI particularly 
useful during development as there is no need to restart Apache to 
reload an application - just Ctrl-C your application and start it again.

Cheers, Matt

-- 
Matt Goodall, Pollenation Internet Ltd
w: http://www.pollenation.net
e: matt@pollenation.net


From cs1spw at bath.ac.uk  Sun Oct 26 16:47:24 2003
From: cs1spw at bath.ac.uk (Simon Willison)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] 	Best place to start learning both mod_python and
	Python
In-Reply-To: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKCELCCCAA.rclilly@cox.net>
Message-ID: <3F9C4EFC.3070107@bath.ac.uk>

Robert Lilly wrote:
> So, to someone who is new to both to mod_python and to the Python
> programming language, and whose only background is Visual Basic, what are
> your recommendations on how and where to get started.

If you already know how to program, Dive Into Python should be an 
essential stop on your tour of the Python universe. It's a free online 
book that teaches Python programming (including a lot of useful stuff on 
Python style) to people who already understand what if/then/else and for 
loops are:

http://diveintopython.org/

There's also a thriving Python weblog scene. A great index for this is 
the Python Programmer Weblogs page, which lists Python blogs and shows 
recent entries from them as well:

http://mechanicalcat.net/pyblagg.html

And finally some self promotion :) You might find the Python category on 
my own blog of some use:

http://simon.incutio.com/categories/python/

> Also, is using mod_python the only way to use Python under Apache? If not,
> although this is a mod_python list, I would appreciate knowing what the
> various options are.

CGI always gets a bad rap for performance, but I don't think this is 
entirely deserved. Recently I've written a couple of applications that 
feature an admin panel powered by Python CGI that generates static HTML 
pages for public consumption. Performance on an admin panel that only 
gets accessed by one person at a time is fine with CGI. That said, I 
wouldn't want to run a full dynamic site from it.

-- 
Simon Willison
Web development weblog: http://simon.incutio.com/

From twa at post.com  Sun Oct 26 23:06:51 2003
From: twa at post.com (Tom Ayerst)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
References: <AMEDJPACLBJGECKBDAOKOEKOCCAA.rclilly@cox.net>
Message-ID: <3F9C538B.6050304@post.com>

Thanks Robert,

It all runs up now.  (Now I just have to get the app working !)

Tom

Robert Lilly wrote:

>>Sorry, I should have mentioned that.  mod_python.so is in the modules
>>directory.  All the other modules are called *.so so I assumed that that
>>is the Apache approach (its not standard but I think you can do that in
>>Windows).
>>
>>    
>>
>>>I don't use windows these days, but shouldn't the mod_python module
>>>for Win32
>>>be a DLL rather than a SO?  You didn't mention if you checked in
>>>C:/Program Files/Apache Group/Apache2/modules/ to see if the module
>>>was there.
>>>Check the directory and use the mod_python library you find.
>>>      
>>>
>
>mod_python.so is a dll, it's just named after the Apache convention. The
>other response you got from Simon Willison letting you know that current
>release version of mod_python does not yet work with Python 2.3 is the
>relevant one. There are workarounds - 1) revert to using Python 2.2, or 2)
>(courtesy of Gustavo Cordova Avila) using either a text or a binary editor,
>open mod_python.so and replace all references to python22.dll with
>python23.dll. I've been running with the latter solution for almost two
>weeks now and haven't noticed any problems.
>
>HTH,
>
>Robert Lilly
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From andre at burgaud.com  Sun Oct 26 21:43:30 2003
From: andre at burgaud.com (Andre Burgaud)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <3F9B93C2.6040908@post.com>
Message-ID: <000001c39c3c$7d8a91f0$6601a8c0@minnesota>



Hi Tom,

I faced the same situation recently and this has been also discussed in
the mod_python list. As a temporary solution, try with Python 2.2 and
this should work fine.

Andre


http://www.burgaud.com


-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Tom Ayerst
Sent: Sunday, October 26, 2003 3:29 AM
To: mod_python@modpython.org
Subject: [mod_python] Newbie problem running mod_python

I am trying to run mod_python.

My setup is:

mod_python version  3.0.3
python 2.3.2
Apache 2.0.47
Windows XP Home edition 2002 Service Pack 1

I installed python, then apache and then mod_python.  I have made no 
changes to apache (other than to httpd.conf) or mod_python.

Apache ran ok before the install of mod_python.

When trying to run up apache with the example python code I get:

    Syntax error on line 173 of C:/Program Files/Apache 
Group/Apache2/conf/httpd.conf:
    Cannot load C:/Program Files/Apache 
Group/Apache2/modules/mod_python.so into server: The specified module 
could not be found.
    Note the errors or messages above, and press the <ESC> key to exit.

27...

That part of httpd.conf looks like this:

165 LoadModule setenvif_module modules/mod_setenvif.so
166 #LoadModule speling_module modules/mod_speling.so
167 #LoadModule status_module modules/mod_status.so
168 #LoadModule unique_id_module modules/mod_unique_id.so
169 LoadModule userdir_module modules/mod_userdir.so
170 #LoadModule usertrack_module modules/mod_usertrack.so
171 #LoadModule vhost_alias_module modules/mod_vhost_alias.so
172 #LoadModule ssl_module modules/mod_ssl.so
173 LoadModule python_module 
modules/mod_python.so

174
175 #
176 # ExtendedStatus controls whether Apache will generate "full" status
177 # information (ExtendedStatus On) or just basic information 
(ExtendedStatus
178 # Off) when the "server-status" handler is called. The default is
Off.
179 #
180 #ExtendedStatus On

As usual I expect I have missed something glaringly obvious, I just 
don't know what right now.

Any help or pointers much appreciated.

Thanks.

Tom


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From rclilly at cox.net  Sun Oct 26 21:50:30 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] Newbie problem running mod_python
In-Reply-To: <200310270039.05867.gwidion@mpc.com.br>
Message-ID: <AMEDJPACLBJGECKBDAOKIELKCCAA.rclilly@cox.net>

> -----Original Message-----
> From: Joao S. O. Bueno [mailto:gwidion@mpc.com.br]
> Sent: Sunday, October 26, 2003 06:39 PM
> To: Robert Lilly
> Subject: Re: [mod_python] Newbie problem running mod_python
>
>
> On Sunday 26 October 2003 5:19 pm, Robert Lilly wrote:
>
> > mod_python.so is a dll, it's just named after the Apache
> > convention. The other response you got from Simon Willison letting
> > you know that current release version of mod_python does not yet
> > work with Python 2.3 is the relevant one. There are workarounds -
> > 1) revert to using Python 2.2, or 2) (courtesy of Gustavo Cordova
> > Avila) using either a text or a binary editor, open mod_python.so
> > and replace all references to python22.dll with python23.dll. I've
> > been running with the latter solution for almost two weeks now and
> > haven't noticed any problems.
>
> Hmm..would it not be cleaner to c:>copy python22.dll python23.dll  ?

I thought about doing that, but then other applications needing to use
python23.dll will be getting python22.dll, which I am sure will cause
problems. Making the modification within mod_python.so assures that it is
the only application affected.

Another solution that is working for me is to have both Python 2.2 and 2.3
on the same machine, into separate folders of course. During installation
most apps look in the registry and choose the version it needs. In many
cases it says it will work with either. In those cases I tell it to use 2.3.
There are some apps, however, that will only work with one or the other, but
not both. On this particular system I am running mod_python.so without
modification. When I installed mod_python, it automatically configured
itself in the Lib/site-packages folder of 2.2. I cannot see any difference
in stability or performance between this setup and the one where I modified
mod_python.so.

Robert Lilly

From stian at soiland.no  Mon Oct 27 09:30:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] 
	mod_python 3.1.1b and sessions: Failed to acquire global mutex lock
Message-ID: <20031027083048.GA30427@itea.ntnu.no>

I've just downloaded and installed the 3.1.1b from
http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
tested it with these two webservers:
   
   Redhat 9 - httpd-2.0.40-21.5
   Debian unstable - apache2-mpm-prefork 2.0.47-1

There seems to be some mutex permission problems:

    from mod_python.Session import Session
    def test(req):
        session = Session(req)
        doc = "<html><body><h1>hello</h1>Counts: %s</body></html>"
        counter = session.setdefault('count', 0)
        doc %= counter
        return doc

Yields on both servers:


[Mon Oct 27 08:54:12 2003] [notice] mod_python: Creating 32 session mutexes
    based on 150 max processes and 0 max threads.

(seems OK)

[Mon Oct 27 08:54:14 2003] [warn] (13)Permission denied: Failed to acquire
    global mutex lock at index 24
(.. traceback)
[Mon Oct 27 08:54:14 2003] [error] [client 129.241.56.39] PythonHandler
    mod_python.publisher: ValueError: Failed to acquire global mutex lock


Now, I can't find anything useful on mr. Google searching for this,
except some listing of a very similar bug that occured with mod_ssl.

The problem then was that the mutex was created by root - and
permissions never fixed so the httpd process could access it. Could it
be anything similar?

Any suggestions? (I'm really eager to test out 3.1.1b.. =) )


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From stian at soiland.no  Mon Oct 27 09:41:48 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] 
	Re: mod_python 3.1.1b and sessions: Failed to acquire global mutex
	lock
In-Reply-To: <20031027083048.GA30427@itea.ntnu.no>
References: <20031027083048.GA30427@itea.ntnu.no>
Message-ID: <20031027084148.GB30427@itea.ntnu.no>

On 2003-10-27 09:30:48, Stian S?iland wrote:

> I've just downloaded and installed the 3.1.1b from
> http://www.apache.org/dist/httpd/modpython/ (dated 2003-10-24) - and
> tested it with these two webservers:

The same problem seems to exist with 3.1.0a - although 3.1.0 of course
needed something like this to be able to start..:

sysctl -w kernel.sem="256 32000 64  256"

Is it only me? =)

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From gdamjan at mail.net.mk  Mon Oct 27 14:14:04 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python]  Beginner question re: getting form data and key
	errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <20031027131404.GA20746@legolas.on.net.mk>

> This is a really a Python language question, not a mod_python question 
> per se.
> 
> You have several options, including:
> 
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
> 
> Or:
> 
> try:
>   author = req.form['author']
> except KeyError:
>   author = None

or
    req.form.get('author', None)

this if req.form is a standard Python dictionary



-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From nilsgri at idi.ntnu.no  Mon Oct 27 14:56:58 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 22:04:18 2004
Subject: [mod_python] instablility in mod_python or apache
Message-ID: <20031027135658.GA20134@bergljot.dyndns.org>

hi!

i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
and have some stability problems.

i have made a simple web-page that uses mod_python.publisher. in
apache2.conf:

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

when i'm reloading the page, it seams random whether it will load
properly or crash with 

"Not Found

The requested URL /~nilsgri/test.py was not found on this server."

i would guess it has something to do with caching, as when i restart
apache2, sometimes the it works every other or so time i reload the
page, and sometimes it works every time, and sometimes never.


i have tried to track down where these errors occur, and have found that
exeptions are thrown at the following locations:

mod_python.publisher: 
    resolve_object()
        the line "obj = getattr(obj, obj_str)" throws AttributeError
        sometimes. 
        
        in this case: 
            module_name=test, 
            config={'PythonDebug': '1'},
            path=['/home/nilsgri/public_html']
        which seems right

mod_python.publisher:
    import_module()
        "if (not file or path and not
                filter(lambda a: os.path.dirname(file).find(a) == 0,
                path)):" hits sometimes

what could be wrong?

is there any way of turning of caching of python modules?


i use the apache2 worker thread module, and i have also tried prefork. i
have not tried perchild or threadpool. should i?


klem fra nils

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <20031027101045.E26862@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy

From gustavo.cordova at q-voz.com  Mon Oct 27 10:32:52 2003
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python]  Beginner question re: getting form data and key
 errors when var not defined
In-Reply-To: <3F9B080D.1020904@dynamine.net>
References: <3F9AFEB5.3090508@sbcglobal.net> <3F9B080D.1020904@dynamine.net>
Message-ID: <3F9D48B4.9090202@q-voz.com>

Also, you can:

    author = req.form.get("author")

and if the "author" key is not present, the correct default value to 
return is None; at least that's the way it works with dictionaries.

-gustavo

Michael S. Fischer wrote:

> This is a really a Python language question, not a mod_python question 
> per se.
>
> You have several options, including:
>
> if req.form.has_key('author'):
>   author = req.form['author']
> else:
>   author = None
>
> Or:
>
> try:
>   author = req.form['author']
> except KeyError:
>   author = None
>
> See section 2.2.7 ("Mapping Types") in the Python Library Reference 
> for details.
>
> --Michael
>
> Mike Klein wrote:
>
>> Why am I getting key errors when merely attempting to get <possible> 
>> form data from a mod_python request...ala:
>>
>> author = req.form['author']
>>
>> I get the following:
>>
>>    raise KeyError, key
>>
>> KeyError: subject
>>
>> I do kind of expect certain form fields to possibly not have 
>> values...why the explicit error? Can't I just check for null or 
>> uninitialized in my code?
>>
>> thanks,
>>
>> mike
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From tpc at csua.berkeley.edu  Mon Oct 27 11:20:10 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] invalid literal for float int or long solved !
Message-ID: <20031027111252.H91970-100000@localhost.name>


fingers crossed, here's hoping the bug doesn't rear its creepy head again,
can't really say wherefore the bug but I found a workaround, I changed the
basic MySQL statement below:

SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
URLs_WITH_MATCHES.url_id;

to:

SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
URLs_WITH_MATCHES.url_id;

and voila !  I am a complete idiot.

From grisha at modpython.org  Mon Oct 27 14:45:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027111252.H91970-100000@localhost.name>
References: <20031027111252.H91970-100000@localhost.name>
Message-ID: <20031027144335.Q39378@onyx.ispol.com>


The first one is "url, title", the second is "title, url" - was that the
problem, or was it the WHERE instead of INNER JOIN (which are same thing
IIRC).

Grisha


On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:

>
> fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> can't really say wherefore the bug but I found a workaround, I changed the
> basic MySQL statement below:
>
> SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> to:
>
> SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> URLs_WITH_MATCHES.url_id;
>
> and voila !  I am a complete idiot.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tpc at csua.berkeley.edu  Mon Oct 27 12:26:39 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027121656.P92516-100000@localhost.name>


hi Grisha, I switched url, title before, and got the invalid literal
error.  I am not sure why since the return values are exactly the
same, but it seems like the "FROM URLs, URLs_WITH_MATCHES WHERE" was
causing problems, though I am not sure for which module, mod_python or
MySQLdb or both or maybe neither.  I am still testing and hoping the bug
doesn't all of a sudden appear.

On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From tpc at csua.berkeley.edu  Mon Oct 27 12:53:45 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] invalid literal for float int or long solved !
In-Reply-To: <20031027144335.Q39378@onyx.ispol.com>
Message-ID: <20031027124550.E92775-100000@localhost.name>


ok I take that back.  I just switched it again as per your suggestion and
I now see that "url, title" gives me invalid literal errors whereas
"title, url" does not, even for the old SELECT statement.  This perplexes
me, as I know at least once I saw:

ValueError: invalid literal for float(): <insert any mp3 URL here>

However, I now make sure to <shift> RELOAD to make sure memory cache is
cleared, so you may be on to something.


On Mon, 27 Oct 2003, Gregory (Grisha) Trubetskoy wrote:

>
> The first one is "url, title", the second is "title, url" - was that the
> problem, or was it the WHERE instead of INNER JOIN (which are same thing
> IIRC).
>
> Grisha
>
>
> On Mon, 27 Oct 2003 tpc@csua.berkeley.edu wrote:
>
> >
> > fingers crossed, here's hoping the bug doesn't rear its creepy head again,
> > can't really say wherefore the bug but I found a workaround, I changed the
> > basic MySQL statement below:
> >
> > SELECT url, title FROM URLs, URLs_WITH_MATCHES WHERE URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > to:
> >
> > SELECT title, url from URLs INNER JOIN URLs_WITH_MATCHES ON URLs.id =
> > URLs_WITH_MATCHES.url_id;
> >
> > and voila !  I am a complete idiot.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jbi130 at yahoo.com  Mon Oct 27 15:12:05 2003
From: jbi130 at yahoo.com (jbi130@yahoo.com)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] Persistent socket connection.
Message-ID: <871xsye66y.fsf@syn.codemonkey.net>

Upon creation of a new "session" I want to open a socket to a remote 
server and be able to access this socket throughout the users session 
until he logs our or the session is timed out. 
 
Is there any way to do this?  I've been looking at twisted but would 
prefer a more traditional approach, maybe using mod_python. 
 
I guess the challenge is how do I keep this socket descriptor alive 
between browser requests. 
 
Any somewhat standard facilities to do this in mod_python? 
 
Thanks. 

From nilsgri at idi.ntnu.no  Mon Oct 27 22:48:46 2003
From: nilsgri at idi.ntnu.no (Nils Grimsmo)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] instablility in mod_python or apache
In-Reply-To: <1067289858.3336.2.camel@heppc22>
References: <20031027135658.GA20134@bergljot.dyndns.org>
	<1067289858.3336.2.camel@heppc22>
Message-ID: <20031027214846.GA26966@bergljot.dyndns.org>

On Mon, Oct 27, 2003 at 01:24:19PM -0800, Conrad Steenberg wrote:
> Somebody probably already answered your question, but just in case:
> You should use mod_python 3.x with apache 2.x. 
>
> On Mon, 2003-10-27 at 05:56, Nils Grimsmo wrote:
> > i am running apache2 worker 2.0.47, mod_python 2.7.8 and python 2.3.2,
> > and have some stability problems.

sorry. got that wrong. looked at the package for apache1. use mod_python
3.0.3. i have now tried it for both python 2.2.3 and 2.3.2, with the
same old results.

> > i have made a simple web-page that uses mod_python.publisher. in
> > apache2.conf:
> > 
> > AddHandler python-program .py
> > PythonHandler mod_python.publisher
> > PythonDebug On
> > 
> > when i'm reloading the page, it seams random whether it will load
> > properly or crash with 
> > 
> > "Not Found
> > 
> > The requested URL /~nilsgri/test.py was not found on this server."
> > 
> > i would guess it has something to do with caching, as when i restart
> > apache2, sometimes the it works every other or so time i reload the
> > page, and sometimes it works every time, and sometimes never.
> > 
> > 
> > i have tried to track down where these errors occur, and have found that
> > exeptions are thrown at the following locations:
> > 
> > mod_python.publisher: 
> >     resolve_object()
> >         the line "obj = getattr(obj, obj_str)" throws AttributeError
> >         sometimes. 
> >         
> >         in this case: 
> >             module_name=test, 
> >             config={'PythonDebug': '1'},
> >             path=['/home/nilsgri/public_html']
> >         which seems right
> > 
> > mod_python.publisher:
> >     import_module()
> >         "if (not file or path and not
> >                 filter(lambda a: os.path.dirname(file).find(a) == 0,
> >                 path)):" hits sometimes
> > 
> > what could be wrong?
> > 
> > is there any way of turning off caching of python modules?
> > 
> > 
> > i use the apache2 worker thread module, and i have also tried prefork. i
> > have not tried perchild or threadpool. should i?
> > 
> > 
> > klem fra nils
> -- 
> Conrad Steenberg <conrad@hep.caltech.edu>
> 

-- 
nils grimsmo <nilsgri@idi.ntnu.no>
"why is this thus? what is the reason of this thusness"
                                         - artemus ward
From grisha at modpython.org  Mon Oct 27 16:58:34 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] Persistent socket connection.
In-Reply-To: <871xsye66y.fsf@syn.codemonkey.net>
References: <871xsye66y.fsf@syn.codemonkey.net>
Message-ID: <20031027165528.W45098@onyx.ispol.com>


On Mon, 27 Oct 2003 jbi130@yahoo.com wrote:

> Upon creation of a new "session" I want to open a socket to a remote
> server and be able to access this socket throughout the users session
> until he logs our or the session is timed out.

Given the multi-process nature of httpd, doing something like this would
be very difficult.

On a single-process multithreaded apache, though, this should be a piece
of cake. Whether or not you can get a single-pocess configuration is
specific to your OS.

Grisha
From tpc at csua.berkeley.edu  Mon Oct 27 14:14:58 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <20031027135607.Q93216-100000@localhost.name>


hi Grisha and Andy, after consulting with my coworker I believe there is a
bug in how MySQLdb interacts with mod_python that you should know of.  He
suggested I try out the same script that was giving me problems  with
Python CGI, and it works just fine.  The only difference is the values in
the tuple get switched around, so the tuple that is returned is (title,
URL) but no more invalid literal for float, int or long errors.  The
critical piece of code in question involves an implementation in Python
of a MySQL SELECT statement of two fields from one table joined to another
table that works just fine from the command line, in MySQL shell, and in
Python CGI:

	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
URLs.id = URLs_WITH_MATCHES.url_id;"""
	cursor.execute(sql)

gives me:

<paste>
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
    search(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 47, in search
    results = getMP3SearchResults(terms)

  File "/var/www/html/python/temp-invalidtest.py", line 15, in
getMP3SearchResults
    results = getMatchingURLs(cursor)

  File "/var/www/html/python/temp-invalidtest.py", line 42, in
getMatchingURLs
    cursor.execute(sql)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
execute
    return self._execute(query, args)

  File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
_execute
    self.errorhandler(self, exc, value)

  File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
in defaulterrorhandler
    raise errorclass, errorvalue

ValueError: invalid literal for float(): <insert any mp3 title here>
</paste>

From stian at soiland.no  Tue Oct 28 00:44:38 2003
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] Re: Persistent socket connection.
In-Reply-To: <20031027165528.W45098@onyx.ispol.com>
References: <871xsye66y.fsf@syn.codemonkey.net>
	<20031027165528.W45098@onyx.ispol.com>
Message-ID: <20031027234438.GD815@itea.ntnu.no>

On 2003-10-27 22:58:34, Gregory (Grisha) Trubetskoy wrote:

> > Upon creation of a new "session" I want to open a socket to a remote
> > server and be able to access this socket throughout the users session
> > until he logs our or the session is timed out.
> Given the multi-process nature of httpd, doing something like this would
> be very difficult.

I actually discussed this matter with my colleague tonight, if you can't
go multithreading, one solution is to have a middleware server running
on it's one.

The middleserver could use the asyncore module from Python to manage
multiple connections from a singlethreaded process. While containing
sockets to "the world" mod_python connects to the program by a local
UNIX socket or a longstanding TCP connection (to say, localhost)

The connection between mod_python processes, say one pr. process (ie. in
a module somewhere) - could last between different users and just say
some "Switch user"-command to the middleware.

A simple approach would be to associate those user socket sessions (like
a telnet session?) with the user by using his session ID. The mod_python
framework would only care about the session ID and formatting/passing
commands through in the right format.

The middleware could be smart or dumb - my suggestion is to make a
simple xml-rpc API on the middleware proxy, not just bypass the
socket communication. (why? To get short intervals to let other requests
to the single threaded proxy come through)


Problems
--------

  * Middleware complexity increases risk of anything failing
    - severel connections could get lost 
    - the middleware could get trapped in a large respons/request
  
  * Scalabillity - the single-threaded middleware proxy could become the
    one thing slowing everything down in some situations - and 
    unless you've already thought of it, it could become difficult to
    scale up.

      simple workaround: 
        - several middleware instances - on the same or other machines
        - users are distributed to the most idle proxy
        

Suggestions
-----------

  * Go for threading and mod_python - it would make tasks
    much simpler. Just remember to have some locks (and timeouts) so two
    requests don't use the socket at once! (the double-reload syndrome)

  * If your environment requires a forking apache, why not use another
    apache installment on a local port? the "outer" apache could proxy
    requests down - just like wrapping away zope.


-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From neel at mediapulse.com  Mon Oct 27 19:04:11 2003
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] invalid literal for float solved addendum
Message-ID: <C0FC22C08B82074A88B500617641577787A7A3@johnson.mediapulse.net>

> 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> URLs.id = URLs_WITH_MATCHES.url_id;"""
> 	cursor.execute(sql)

I find it hard to believe that this is somehow a mod_python problem.
Are you running the latest version of MySQLdb?  I have used mod_python +
MySQLdb on well over 10 sites now for clients (more for my own sites)
and never ran into trouble; an error this basic I think would have shown
itself by now.

>From the traceback you can see that MySQLdb is throwing the execption,
and if you look at the lines in cursors.py it lists you can see that a
try block is pretty much wrapping the work done.  I'd try to go in and
comment out some of those try blocks and also place an assert here and
there to see what's really happening (fyi you can do an assert 0,
varname and get a traceback with the value of varname - quick trick to
help debug something).

Did you ask on the MySQLdb forums?  I looked at sf and didn't see it.  A
search in google showed some others with this issue, one related to the
locale not being US and another with a broken python install.  Remember
that the python you run at command line is not the same one you run
under mod_python, so if the python mod_pyhton is using is setup
differently and/or broken from the python binary that would explain why
it works in cgi (which exec's the python binary).

Mike

From grisha at apache.org  Mon Oct 27 10:17:52 2003
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
Message-ID: <7654106.1067300590712.JavaMail.Server@genix>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.2 Beta release mod_python.

Some feature highlights:

* Server-side sessions with memory or dbm-based storage and session
locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
within HTML.

* Native cookie support, including support for automatic cryptographic
cookie signing and marshalling.

* Compatibility with Python 2.3, as well as many other enhancements.

Beta releases are NOT considered stable and may contain bugs.

This release is intended to solicit widespread testing of the code. We
strongly recommend that you try out your existing applications and
experiment with new features in a non-production environment using this
version and report any problems you may encounter so that they can be
addressed before the final release.

Preferred method of reporting problems is the mod_python user list
mod_python@modpython.org.

Mod_python 3.1.2b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit
http://www.modpython.org/

Regards,

Grisha Trubetskoy


---------------------------------------------------------------------
To unsubscribe, e-mail: announce-unsubscribe@httpd.apache.org
For additional commands, e-mail: announce-help@httpd.apache.org



From rclilly at cox.net  Mon Oct 27 16:33:29 2003
From: rclilly at cox.net (Robert Lilly)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.2 Beta
In-Reply-To: <20031027101045.E26862@onyx.ispol.com>
Message-ID: <AMEDJPACLBJGECKBDAOKCEMLCCAA.rclilly@cox.net>

Hi Grisha,

I just downloaded the beta and installed it. I got the following message
from the win32_postintall script:

'import site' failed; use -v for traceback
Traceback (most recent call last):
  File "F:\LANG\PYTHON~1.3\Scripts\win32_postinstall.py", line 62, in ?
    import sys, os, shutil
ImportError: No module named os
*** run_installscript: internal error 0xFFFFFFFF ***

As I am just learning Python, I don't yet know what this message means.
There is a new mod_python folder with files in it under F:\Lang\Python
2.3\Lib\site-packages\. So I don't know if that means it installed correctly
or not. I haven't tested it under Apache to see if it works yet. That's my
next step.

Thanks,

Robert Lilly

From flxkid at techemail.com  Tue Oct 28 10:36:41 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031028183641.D19AC393C@sitemail.everyone.net>

I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").

Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).

Other scripts not using scripting work fine.

Any ideas?

OLIVER


From flxkid at techemail.com  Tue Oct 28 17:18:51 2003
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] mod_python thread error (probably my fault)
Message-ID: <20031029011853.344247265@sitemail.everyone.net>

Mike,

It worked great!  Thanx.  Now, why doesn't it work when I compile my own 2.3.2?  Is  the make install not overwriting somewhere where there is a 2.3 no threaded libpython?  How would I find out?  I'm just a curious kinda guy ;)

OLIVER


--- Mike Klein <mikeklein@sbcglobal.net> wrote:
You will get this same error trying to use SOAPpy too.

It means your Python that mod_python was built against doesn't support 
threads. You might have a thread.py module under your python libs dir 
but that doesn't mean your python supports threads.

Go the the mod_python page, get the appropriate version per your apache 
version, and then get EXACTLY the version of Python recommended. Build 
this python in your source tree (with threads!) and mod_python against 
this. Everything will work fine.


mike


Oliver Nelson wrote:

>I'm trying to do some SOAP services with the ZSI stuff.  From a prompt my script reports no errors, but when I call the script from a browser (not expecting the SOAP to work through here, just testing for other errors) I get a mod_python error with a trace going back to threading.py about not being able to import module thread ("ImportError: No module named thread").
>
>Now, I got 2.3.2 through Apachetoolbox but that didn't work too well so I compiled and installed the newest apache and mod_python and python (no errors in this process).
>
>Other scripts not using scripting work fine.
>
>Any ideas?
>
>OLIVER
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>


From vmanera at manord.com  Wed Oct 29 17:44:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] Session 
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F7@exchange2000.manord.com>

I played with the module Session on mod_python 3.1.2b on win2000 and  all
seems work fine.<?xml:namespace prefix = o ns =
"urn:schemas-microsoft-com:office:office" />

 

The only problem is that under win2000 Session is redirect to MemorySession,
so if I restart apache I loose all the session.

So I used  DbmSession directly and all work fine too.

 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

 

 

With my self made session that I currently use, I may see the sid timeouted
and the sid currently alive.  With some change from dbm_cleanup or
mem_cleanup is possible to achieve this information, but will be useful  a
new method in Session to do it.

Villiam 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20031029/e01fa162/attachment-0003.htm
From olivier at phgroup.com  Thu Oct 30 10:35:56 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] session mechanism in 3.1.0a
Message-ID: <3FA0E98C.1040400@phgroup.com>

Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













From vmanera at manord.com  Thu Oct 30 12:26:31 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:19 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>

try this:
	sess = Session.Session(req)
	sess.save()
	.....
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 11.36
A: mod_python@modpython.org
Oggetto: [mod_python] session mechanism in 3.1.0a


Hi all,


I can't understand how the session mechanism works.
I'm using the publisher handler, my configuration is
Apache/2.0.47 (Win32) mod_python/3.1.0a Python/2.3.2
and I have this code :


** module test.py **

from mod_python import Session

def main(req):

     sess = Session.Session(req)
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())


** end of module test.py ***


Now, if I load test.py/main and reload it with the "reload page" button 
of my browser, I always get a new session. I may be tottaly wrong in 
some way, but this is not what I except.

Any idea ? Thanks for any help.

Olivier Migeon













_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From olivier at phgroup.com  Thu Oct 30 11:58:49 2003
From: olivier at phgroup.com (Olivier Migeon)
Date: Fri Jan  9 22:04:19 2004
Subject: R: [mod_python] session mechanism in 3.1.0a
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50C@exchange2000.manord.com>
Message-ID: <3FA0FCF9.6020804@phgroup.com>

Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 14:35:46 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:19 2004
Subject: R: R: [mod_python] session mechanism in 3.1.0a
Message-ID: <52DC70C1C1575C418CB033523A29CF141048F8@exchange2000.manord.com>

I tested your code:
def main1(req):
     sess = Session.Session(req)
     sess.save()
     if sess.is_new():
	return "I'm a new session, my id is : " + str(sess.id())
     else:
	return "I'm NOT a new session, my id is :" + str(sess.id())

the first time:
I'm a new session, my id is : 8e7c9abff96d9256ca9159b40cc44249
if I reload the page:
I'm NOT a new session, my id is :8e7c9abff96d9256ca9159b40cc44249

the  mod_python/3.1.0a has a bug: it not reload the module change yuo have
to put
PythonAutoReload on on apache config
o restart apache
Villiam
-----Messaggio originale-----
Da: Olivier Migeon [mailto:olivier@phgroup.com]
Inviato: gioved? 30 ottobre 2003 12.59
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: R: [mod_python] session mechanism in 3.1.0a


Manera, Villiam wrote:

> try this:
> 	sess = Session.Session(req)
> 	sess.save()


sorry. it doesn't change a thing...

as I undestand it :

the first time I load my page in a new session, I call :

sess = Session.Session(req)

this send a cookie to my browser, and I have checked that the cookie is 
actually sent and received.

when i reload the page, i call again :

sess = Session.Session(req)

according to the documentation (and to the code od Session.py, which 
seems straigtforward) mod_python should check that there is a valid 
relevant cookie, and not instanciate a new session.

it seems to me like a cookie-reading problem (or, from my part, a total 
misunderstanding of what a session is).


olivier migeon



From vmanera at manord.com  Thu Oct 30 15:46:44 2003
From: vmanera at manord.com (Manera, Villiam)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] session on win2000
Message-ID: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>

Sorry , but anyone ha replyed to me and I'm ready to start the porting
Session in my application. 

The question is: 

Any hidden trap in using DbmSession on win2000 instead of MemorySession?

Villiam
From grisha at modpython.org  Thu Oct 30 11:28:05 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] Re: session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030112225.N97494@onyx.ispol.com>


There is no trap. It will probably be a little slower, also, depending on
what DBM Python uses on Windows, there may be a size limit on data stored
in session.

On Thu, 30 Oct 2003, Manera, Villiam wrote:

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application.
>
> The question is:
>
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?
>
> Villiam
>
From gdamjan at mail.net.mk  Thu Oct 30 19:55:08 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] session on win2000
In-Reply-To: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF1497D50F@exchange2000.manord.com>
Message-ID: <20031030185508.GA10855@legolas.on.net.mk>

> Sorry , but anyone ha replyed to me and I'm ready to start the porting
> Session in my application. 
> 
> The question is: 
> 
> Any hidden trap in using DbmSession on win2000 instead of MemorySession?

I guess MemorySession is used in Windows by default because it should be faster
than DbmSession, and in Windows Apache is multithreaded so MemorySession
_can_ be used.

Though I guess, in Linux a DbmSession in /dev/shm would be equally fast.


-- 
Damjan Georgievski
jabberID: damjan@bagra.net.mk
From tpc at csua.berkeley.edu  Fri Oct 31 09:11:57 2003
From: tpc at csua.berkeley.edu (tpc@csua.berkeley.edu)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] Re: invalid literal for float solved addendum
In-Reply-To: <1067611886.14197.6.camel@chef.neosouth.net>
Message-ID: <20031031081725.O29199-100000@localhost.name>


hi Andy, I also do not see how this error could be raised.  I tested the
statement from IDLE shell as well as the other frameworks I mentioned
below.  I also reviewed the table creation statements to see if there was
something re MySQL data types I was missing:

<code>
        sql = """CREATE TABLE URLs (
              id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
              url VARCHAR(255) UNIQUE KEY NOT NULL,
              title VARCHAR(255)
              ) TYPE = InnoDB;"""

                sql = """CREATE TEMPORARY TABLE URLs_WITH_MATCHES (
                      url_id INT NOT NULL,
                      ) TYPE = InnoDB;"""
</code>

As you can see I am selecting two fields, url and title, from URLs where
URLs.id = URLs_WITH_MATCHES.url_id, both are type INT.

On Fri, 31 Oct 2003, Andy Dustman wrote:

> Sorry to have to ask this, but are you sure that's the SQL that
> generates the error? I don't see any way for that error to be raised.
>
> On Mon, 2003-10-27 at 17:14, tpc@csua.berkeley.edu wrote:
> > hi Grisha and Andy, after consulting with my coworker I believe there is a
> > bug in how MySQLdb interacts with mod_python that you should know of.  He
> > suggested I try out the same script that was giving me problems  with
> > Python CGI, and it works just fine.  The only difference is the values in
> > the tuple get switched around, so the tuple that is returned is (title,
> > URL) but no more invalid literal for float, int or long errors.  The
> > critical piece of code in question involves an implementation in Python
> > of a MySQL SELECT statement of two fields from one table joined to another
> > table that works just fine from the command line, in MySQL shell, and in
> > Python CGI:
> >
> > 	sql = """SELECT title, url FROM URLs, URLs_WITH_MATCHES WHERE
> > URLs.id = URLs_WITH_MATCHES.url_id;"""
> > 	cursor.execute(sql)
> >
> > gives me:
> >
> > <paste>
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 335,
> > in HandlerDispatch
> >     result = object(req)
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
> > 149, in handler
> >     module = apache.import_module(module_name, req.get_config(), [path])
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 502,
> > in import_module
> >     module = imp.load_module(mname, f, p, d)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 51, in ?
> >     search(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 47, in search
> >     results = getMP3SearchResults(terms)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 15, in
> > getMP3SearchResults
> >     results = getMatchingURLs(cursor)
> >
> >   File "/var/www/html/python/temp-invalidtest.py", line 42, in
> > getMatchingURLs
> >     cursor.execute(sql)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 95, in
> > execute
> >     return self._execute(query, args)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/cursors.py", line 114, in
> > _execute
> >     self.errorhandler(self, exc, value)
> >
> >   File "/usr/lib/python2.2/site-packages/MySQLdb/connections.py", line 33,
> > in defaulterrorhandler
> >     raise errorclass, errorvalue
> >
> > ValueError: invalid literal for float(): <insert any mp3 title here>
> > </paste>
> --
> Andy Dustman         PGP: 0x930B8AB6
>     @       .net     http://dustman.net/andy
> Freedom isn't free. It's sold to the highest bidder.
>

From rpeterso at mtholyoke.edu  Fri Oct 31 14:28:04 2003
From: rpeterso at mtholyoke.edu (Ron Peterson)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] is mod_python threadsafe?
Message-ID: <20031031192804.GA724@mtholyoke.edu>

Is the latest mod_python threadsafe?  I.E. - is it o.k. to run under
apache compiled using --with-mpm=worker?

-- 
Ron Peterson                          -o)
Network & Systems Manager             /\\
Mount Holyoke College                _\_v
http://www.mtholyoke.edu/~rpeterso   ---- 
From jpeterson at ainet.com  Fri Oct 31 12:43:39 2003
From: jpeterson at ainet.com (Jim Peterson)
Date: Fri Jan  9 22:04:19 2004
Subject: [mod_python] basic cgi not working with mp 3.0.3
Message-ID: <3FA2C97B.80004@ainet.com>

Hi,

total newb to python, apache, mod_python, spyce.

running Apache/2.0.47 (Win32) mod_python/3.0.3 Python/2.2.2 Spyce 1.3.11
under Win2K, using ActiveState Python.

i'm trying to use the 'production ready', stable stuff.

Here's the details.  TIA

---------------------------------------------------------------------

Trying to port my CGI app to mod_python. It was blowing up until I 
traced the failure line to mod_python.apache.  I diffed the file against 
a beta version, found a patch there, and applied the patch to my 
apache.py.  The patch stopped the bomb but I'm not getting any form fields.

     #################################
     # original code
     #for k in sav_env:
     #    osenv[k] = env[k]

     # after the patch
     for k in sav_env:
         osenv[k] = sav_env[k]

I don't have any idea if that is relevant.

My test code works in a true CGI environment but not under the mp cgi 
handler.  I'm using Apache aliases to configure both true CGI and mp cgi
against the same directory.

# --------------------------------------------------------
# this configures a conventional CGI setup
ScriptAlias /xcgi-bin/ /Jim/Home/Web/CGI/
<Location /xcgi-bin/ >
     AllowOverride None
     Options +Indexes +ExecCGI
     Order allow,deny
     Allow from all
</Location>
# --------------------------------------------------------
# this configures a mod_python CGI handler, I guess
Alias /cgi-bin/ /Jim/Home/Web/CGI/
<Location /cgi-bin/ >
   SetHandler python-program
   PythonHandler mod_python.cgihandler
   PythonDebug On
</Location>

I invoke my test code with either URL.

I test mod_python handling with url of this form:
/cgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

I test true cgi handling with url of this form:
/xcgi-bin/cgitest.py?fielda='asdf'&fieldb='qwer'

Throughout my app I pass values thru the URL/querystring.

Under true CGI, my script gets values in the form fields.  Under mp cgi, 
it gets None.

Here is the CGI script:

# ------------------- cut here --------------------
#!python

# cgitest.py
#
# test cgi port to mod_python cgi handler
#

import cgi
form = cgi.FieldStorage()

# print content type here to enable html rendering of debug form
print "Content-Type: text/html\n\n"

# prints dict of env vars, for debugging
#cgi.print_environ()

# prints dict of form args, for debugging
cgi.print_form(form)

# extract the data from the query string
fielda = form.getvalue('fielda')
fieldb = form.getvalue('fieldb')

# content-type printed above

html = \
'''
<html>
<head>
<title> cgitest.py </title>
</head>
<body>
<hr />
<table>
<tr><td> fielda </td><td> %s </td></tr>
<tr><td> fieldb </td><td> %s </td></tr>
</table>
<hr />
</body>
</html>
'''

print html % (fielda, fieldb)


# ---------------------------------------------------------------
# cgitest.py - end of file
# ---------------------------------------------------------------
#



