From harish at octopart.com  Tue Dec  4 00:35:36 2007
From: harish at octopart.com (Harish Agarwal)
Date: Tue Dec  4 00:35:46 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>
	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
Message-ID: <A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>


On Nov 26, 2007, at 1:38 PM, Graham Dumpleton wrote:

> On 27/11/2007, Harish Agarwal <harish@octopart.com> wrote:
>> I'm using session handling with ModPython 3.3.1.  Originally I was
>> using DbmSession and have since transitioned to a custom MySQL  
>> Session
>> handler.  With both session types, however, I've noticed that session
>> initialization intermittently hangs (not forever, but takes as long  
>> as
>> four minutes to complete), at a low-ish (a handful of times every
>> hour, while receiving, say, on order of a thousand or so requests
>> every hour) frequency which seems to scale with the amount of traffic
>> we're receiving.  I had read that long DbmSession cleanups can cause
>> problems, which is why I transitioned to the MySQL system, which  
>> takes
>> < 1 second to complete, but I'm still noticing the long session init
>> times.
>>
>>
>> I put some debugging statements into the code and it seems to be
>> related to session locking.  In particular, it is this function call
>> in the lock method of the BaseSession class:
>>
>>
>> _apache._global_lock(self._req.server, self._sid)
>>
>>
>> which is taking some time to complete. I'm not familiar with
>> _apache._global_lock (is it used to apply a mutex lock to the
>> session?) and am having trouble finding information describing its
>> usage - but it seems likely that this is the root cause.  In the past
>> I've had problems with session locking but have since transitioned  
>> the
>> code to ensure that only one session is created per request, as such:
>>
>> if not hasattr(req,'session'):
>>             req.session = Session.MySQLSession(req)
>>
>>
>> Can anyone tell me if this kind of behavior is normal or is  
>> indicative
>> of some common configuration or coding error?  Any help would be
>> greatly appreciated.
>
> Ignoring hangs, how long does your longest request normally take to
> execute? Are you perhaps performing file uploads that take a
> significant amount of time and are holding a session locked for the
> whole period of the request?
>
> To at least allow some level of concurrency, from memory mod_python
> holds a small pool of cross process mutex locks. Based on the session
> ID (I think) it should consistently pick the same mutex lock each
> time. Thus, if a request comes in with the same session ID it would be
> blocked while the existing request for that session runs. If however
> another request comes in with a different session ID, but where it
> maps to the same mutex lock from the pool, it will also be blocked
> until the request holding that lock has completed.
>
> What this means is that the number of mutex locks in the pool
> effectively dictates how many parallel session based requests you can
> have executed across the whole of the Apache server. Thus, if you have
> requests that take a long time while still holding the session lock,
> it can lock out other requests until it completes.
>
> One can makes things a bit better by increasing the number of mutex
> locks in the pool, but you have to be careful not to create too many
> in case it is using sysvsem and your OS doesn't allocate enough.
>
> The only other thing to do is to release the lock explicitly as soon
> as you no longer need it and don't rely on the cleanup handler for the
> request to unlock it.
>
> In other words, what your application is doing, your own code and how
> you have written it could be the problem, and not necessarily
> mod_python itself.
>
> If my memory has totally faded and my description is wrong, someone
> please correct me. :-)
>
> Graham


I put in some more debugging statements and I'm finding, very oddly,  
that the hanging is most likely due to a req.write taking quite a bit  
of time to complete.  I'm able to view the exact same webpage without  
experiencing a hang, so the hang seems to be fairly sporadic.

Any ideas?




From graham.dumpleton at gmail.com  Tue Dec  4 00:52:45 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec  4 00:52:51 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>
	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
Message-ID: <88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>

When you call req.write(), it defaults to flushing the data. Therefore
if you have a slow client or network issues then it may block waiting
to be able to flush out the data.

If your responses are not large, then use req.write(data, 0), ie.,
second argument of 0, to disable flushing. This will result in
response being buffered up in memory and only being flushed when the
whole request has completed.

Because it buffers in memory, you need to be careful with large
responses as can blow out memory usage.

Other alternative is to buffer all output yourself in StringIO and
then join it back together and send it all in one go when whole
response ready, and potentially after having released session locks.
This is actually more efficient, memory wise and potentially speed
wise, than allowing req.write() to buffer it because Apache output
filter buckets have more overhead than Python list for buffering.

Graham

On 04/12/2007, Harish Agarwal <harish@octopart.com> wrote:
>
> On Nov 26, 2007, at 1:38 PM, Graham Dumpleton wrote:
>
> > On 27/11/2007, Harish Agarwal <harish@octopart.com> wrote:
> >> I'm using session handling with ModPython 3.3.1.  Originally I was
> >> using DbmSession and have since transitioned to a custom MySQL
> >> Session
> >> handler.  With both session types, however, I've noticed that session
> >> initialization intermittently hangs (not forever, but takes as long
> >> as
> >> four minutes to complete), at a low-ish (a handful of times every
> >> hour, while receiving, say, on order of a thousand or so requests
> >> every hour) frequency which seems to scale with the amount of traffic
> >> we're receiving.  I had read that long DbmSession cleanups can cause
> >> problems, which is why I transitioned to the MySQL system, which
> >> takes
> >> < 1 second to complete, but I'm still noticing the long session init
> >> times.
> >>
> >>
> >> I put some debugging statements into the code and it seems to be
> >> related to session locking.  In particular, it is this function call
> >> in the lock method of the BaseSession class:
> >>
> >>
> >> _apache._global_lock(self._req.server, self._sid)
> >>
> >>
> >> which is taking some time to complete. I'm not familiar with
> >> _apache._global_lock (is it used to apply a mutex lock to the
> >> session?) and am having trouble finding information describing its
> >> usage - but it seems likely that this is the root cause.  In the past
> >> I've had problems with session locking but have since transitioned
> >> the
> >> code to ensure that only one session is created per request, as such:
> >>
> >> if not hasattr(req,'session'):
> >>             req.session = Session.MySQLSession(req)
> >>
> >>
> >> Can anyone tell me if this kind of behavior is normal or is
> >> indicative
> >> of some common configuration or coding error?  Any help would be
> >> greatly appreciated.
> >
> > Ignoring hangs, how long does your longest request normally take to
> > execute? Are you perhaps performing file uploads that take a
> > significant amount of time and are holding a session locked for the
> > whole period of the request?
> >
> > To at least allow some level of concurrency, from memory mod_python
> > holds a small pool of cross process mutex locks. Based on the session
> > ID (I think) it should consistently pick the same mutex lock each
> > time. Thus, if a request comes in with the same session ID it would be
> > blocked while the existing request for that session runs. If however
> > another request comes in with a different session ID, but where it
> > maps to the same mutex lock from the pool, it will also be blocked
> > until the request holding that lock has completed.
> >
> > What this means is that the number of mutex locks in the pool
> > effectively dictates how many parallel session based requests you can
> > have executed across the whole of the Apache server. Thus, if you have
> > requests that take a long time while still holding the session lock,
> > it can lock out other requests until it completes.
> >
> > One can makes things a bit better by increasing the number of mutex
> > locks in the pool, but you have to be careful not to create too many
> > in case it is using sysvsem and your OS doesn't allocate enough.
> >
> > The only other thing to do is to release the lock explicitly as soon
> > as you no longer need it and don't rely on the cleanup handler for the
> > request to unlock it.
> >
> > In other words, what your application is doing, your own code and how
> > you have written it could be the problem, and not necessarily
> > mod_python itself.
> >
> > If my memory has totally faded and my description is wrong, someone
> > please correct me. :-)
> >
> > Graham
>
>
> I put in some more debugging statements and I'm finding, very oddly,
> that the hanging is most likely due to a req.write taking quite a bit
> of time to complete.  I'm able to view the exact same webpage without
> experiencing a hang, so the hang seems to be fairly sporadic.
>
> Any ideas?
>
>
>
>
>
From davidjanes at blogmatrix.com  Tue Dec  4 04:48:57 2007
From: davidjanes at blogmatrix.com (David Janes)
Date: Tue Dec  4 04:49:06 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>
	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
	<88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>
Message-ID: <21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>

I'll note for the list that I put in the changes I outlined above ---
that is, handled locking entirely ourselves rather than using Apache's
lock function -- and I haven't had a hang since.

Regards, etc...

-- 
David Janes
Founder, BlogMatrix
http://www.blogmatrix.com
http://blogmatrix.blogmatrix.com
From graham.dumpleton at gmail.com  Tue Dec  4 05:05:53 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec  4 05:05:59 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>
	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
	<88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>
	<21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
Message-ID: <88e286470712040205h4873ab92w788b093763182996@mail.gmail.com>

On 04/12/2007, David Janes <davidjanes@blogmatrix.com> wrote:
> I'll note for the list that I put in the changes I outlined above ---
> that is, handled locking entirely ourselves rather than using Apache's
> lock function -- and I haven't had a hang since.

Or someone could address:

 http://issues.apache.org/jira/browse/MODPYTHON-202

and make mod_python honour AcceptMutex directive, plus allow global
session mutex type used by mod_python to be overridden. :-)

Graham
From harish at octopart.com  Tue Dec  4 12:28:06 2007
From: harish at octopart.com (Harish Agarwal)
Date: Tue Dec  4 12:28:18 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>
	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
	<88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>
	<21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
Message-ID: <2F6A6F93-5F08-47E0-8F1B-A38AFA6CAAD1@octopart.com>

Have you noticed any performance issues?  I want to make sure to keep  
things fast and am worried that departing from the Apache lock system  
will degrade performance.  Why was mod python designed to use the  
apache system and not use session specific locks?

Also a note for the list - I'm now explicitly unlocking the session  
after each save to ensure that the session isn't locked during a  
req.write call.  I've seen one hang since then, but in twelve hours,  
that is much much better than the issues I was seeing before.

I think that this problem directly contradicts the general philosophy  
behind using the mod_python session handling scheme - I feel like I've  
read, a few times now, that there is no reason to have to explicitly  
unlock sessions, but this is an instance where running everything in  
its default configuration (not unlocking sessions, flushing the buffer  
on req.writes) causes serious hanging problems...  In addition,  
unlocking the session after each save doesn't sit well with me - I  
don't think the session is thread-safe now (given that there can be  
multiple save's per request).

-Harish


On Dec 4, 2007, at 1:48 AM, David Janes wrote:

> I'll note for the list that I put in the changes I outlined above ---
> that is, handled locking entirely ourselves rather than using Apache's
> lock function -- and I haven't had a hang since.
>
> Regards, etc...
>
> -- 
> David Janes
> Founder, BlogMatrix
> http://www.blogmatrix.com
> http://blogmatrix.blogmatrix.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Tue Dec  4 13:39:05 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Dec  4 13:36:34 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <2F6A6F93-5F08-47E0-8F1B-A38AFA6CAAD1@octopart.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>	<88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>	<21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
	<2F6A6F93-5F08-47E0-8F1B-A38AFA6CAAD1@octopart.com>
Message-ID: <47559EC9.1060104@jgassociates.ca>

Harish Agarwal wrote:
> Have you noticed any performance issues?  I want to make sure to keep 
> things fast and am worried that departing from the Apache lock system 
> will degrade performance.  Why was mod python designed to use the apache 
> system and not use session specific locks?

I wasn't around when session handling was first introduced, but I assume 
the apache mutexes where used so that mod_python would be as 
cross-platform as possible. Python's fcntl.flock() is only available on 
*nix platforms.

The big drawback with apache's mutexes is that we are dealing with 
limited resource.

> Also a note for the list - I'm now explicitly unlocking the session 
> after each save to ensure that the session isn't locked during a 
> req.write call.  I've seen one hang since then, but in twelve hours, 
> that is much much better than the issues I was seeing before.

Are you re-locking the session before modifying the session object? If 
not then you've got a possible race condition and you risk losing 
session data. The only safe way to do this multiple times within a 
single request is:

session.lock()
session.read()
session['stuff'] = 'whatever'
session.save()
session.unlock()

Each read / save pair results in a disk access and unpickling/pickling 
the data, which may not be all that great for high performance.

You'll need to make sure the above sequence happens every time you 
modify the session object. If your code is complicated it would be 
pretty easy to lose some session data. You'll also need to make darn 
sure that there are matching lock/unlock pairs. If not you'll deadlock 
the session and in pretty short order you'll end up with a self 
inflicted denial of service as apache runs out of mutexes. Make sure you 
put a try/finally block in there with an unlock() in the finally section.

> I think that this problem directly contradicts the general philosophy 
> behind using the mod_python session handling scheme - I feel like I've 
> read, a few times now, that there is no reason to have to explicitly 
> unlock sessions, 

Then you missed comments about the problem with long running requests 
and session locking, such as the case of a large download. There are 
times when it really is advantageous to explicitly unlock a session. 
It's always best if you can finish with your session object before 
sending the file.

session['stuff'] = 'whatever'
session.save()
session.unlock()
req.sendfile("my_big_file.iso")

> but this is an instance where running everything in its 
> default configuration (not unlocking sessions, flushing the buffer on 
> req.writes) causes serious hanging problems...  In addition, unlocking 
> the session after each save doesn't sit well with me - I don't think the 
> session is thread-safe now (given that there can be multiple save's per 
> request).

It's not even a question of being thread safe. With prefork or worker 
mpms you are also dealing with multiple processes. If we just had to 
worry about one process with many threads life would be much easier.

Jim

> -Harish
> 
> 
> On Dec 4, 2007, at 1:48 AM, David Janes wrote:
> 
>> I'll note for the list that I put in the changes I outlined above ---
>> that is, handled locking entirely ourselves rather than using Apache's
>> lock function -- and I haven't had a hang since.
>>
>> Regards, etc...
>>
>> --David Janes
>> Founder, BlogMatrix
>> http://www.blogmatrix.com
>> http://blogmatrix.blogmatrix.com
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From harish at octopart.com  Tue Dec  4 13:52:09 2007
From: harish at octopart.com (Harish Agarwal)
Date: Tue Dec  4 13:52:19 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <47559EC9.1060104@jgassociates.ca>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>	<88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>	<21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
	<2F6A6F93-5F08-47E0-8F1B-A38AFA6CAAD1@octopart.com>
	<47559EC9.1060104@jgassociates.ca>
Message-ID: <7671C5AF-AC29-4B44-81FD-34B67E7070FA@octopart.com>

These aren't large files - this is the most typical request we serve  
up,  which under normal circumstances takes < 1 second to send (based  
on timers I've sent up).  The case where this request is taking a long  
time (I've noticed up to 300 seconds) is very rare, compared to how  
many times we serve the page up, but is still a problem as it causes a  
pile-up of session hangs which want the same mutex lock.

It sounds like the best way to deal with this problem, given the below  
issues surrounding session unlocking after every session.save(), is to  
do

session.unlock()
req.write(data)

before every single req.write I'm doing - is that correct?  If so, my  
only point is that this seems to go against the general philosophy of  
never explicitly having to do a session unlock (and in addition, makes  
the code which goes into our mod_python handlers less clean).  Don't  
get me wrong, I really appreciate mod python and it has served me  
incredibly well, but my apologies if, as an end-user, I'm finding it  
difficult to use it in what I think is a pretty standard way without  
encountering problems as our traffic goes up.

If you don't mind me asking, why are apache's mutexes limited?  If I  
were to switch to fcntl.flock, would we no longer have a limited pool  
of mutexes?

-Harish


On Dec 4, 2007, at 10:39 AM, Jim Gallacher wrote:

> Harish Agarwal wrote:
>> Have you noticed any performance issues?  I want to make sure to  
>> keep things fast and am worried that departing from the Apache lock  
>> system will degrade performance.  Why was mod python designed to  
>> use the apache system and not use session specific locks?
>
> I wasn't around when session handling was first introduced, but I  
> assume the apache mutexes where used so that mod_python would be as  
> cross-platform as possible. Python's fcntl.flock() is only available  
> on *nix platforms.
>
> The big drawback with apache's mutexes is that we are dealing with  
> limited resource.
>
>> Also a note for the list - I'm now explicitly unlocking the session  
>> after each save to ensure that the session isn't locked during a  
>> req.write call.  I've seen one hang since then, but in twelve  
>> hours, that is much much better than the issues I was seeing before.
>
> Are you re-locking the session before modifying the session object?  
> If not then you've got a possible race condition and you risk losing  
> session data. The only safe way to do this multiple times within a  
> single request is:
>
> session.lock()
> session.read()
> session['stuff'] = 'whatever'
> session.save()
> session.unlock()
>
> Each read / save pair results in a disk access and unpickling/ 
> pickling the data, which may not be all that great for high  
> performance.
>
> You'll need to make sure the above sequence happens every time you  
> modify the session object. If your code is complicated it would be  
> pretty easy to lose some session data. You'll also need to make darn  
> sure that there are matching lock/unlock pairs. If not you'll  
> deadlock the session and in pretty short order you'll end up with a  
> self inflicted denial of service as apache runs out of mutexes. Make  
> sure you put a try/finally block in there with an unlock() in the  
> finally section.
>
>> I think that this problem directly contradicts the general  
>> philosophy behind using the mod_python session handling scheme - I  
>> feel like I've read, a few times now, that there is no reason to  
>> have to explicitly unlock sessions,
>
> Then you missed comments about the problem with long running  
> requests and session locking, such as the case of a large download.  
> There are times when it really is advantageous to explicitly unlock  
> a session. It's always best if you can finish with your session  
> object before sending the file.
>
> session['stuff'] = 'whatever'
> session.save()
> session.unlock()
> req.sendfile("my_big_file.iso")
>
>> but this is an instance where running everything in its default  
>> configuration (not unlocking sessions, flushing the buffer on  
>> req.writes) causes serious hanging problems...  In addition,  
>> unlocking the session after each save doesn't sit well with me - I  
>> don't think the session is thread-safe now (given that there can be  
>> multiple save's per request).
>
> It's not even a question of being thread safe. With prefork or  
> worker mpms you are also dealing with multiple processes. If we just  
> had to worry about one process with many threads life would be much  
> easier.
>
> Jim
>
>> -Harish
>> On Dec 4, 2007, at 1:48 AM, David Janes wrote:
>>> I'll note for the list that I put in the changes I outlined above  
>>> ---
>>> that is, handled locking entirely ourselves rather than using  
>>> Apache's
>>> lock function -- and I haven't had a hang since.
>>>
>>> Regards, etc...
>>>
>>> --David Janes
>>> Founder, BlogMatrix
>>> http://www.blogmatrix.com
>>> http://blogmatrix.blogmatrix.com
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Tue Dec  4 13:59:20 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Dec  4 13:56:40 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
Message-ID: <4755A388.60309@jgassociates.ca>

Harish Agarwal wrote:
> 
> On Nov 26, 2007, at 1:38 PM, Graham Dumpleton wrote:
> 
>> On 27/11/2007, Harish Agarwal <harish@octopart.com> wrote:
>>> I'm using session handling with ModPython 3.3.1.  Originally I was
>>> using DbmSession and have since transitioned to a custom MySQL Session
>>> handler.  With both session types, however, I've noticed that session
>>> initialization intermittently hangs (not forever, but takes as long as
>>> four minutes to complete), at a low-ish (a handful of times every
>>> hour, while receiving, say, on order of a thousand or so requests
>>> every hour) frequency which seems to scale with the amount of traffic
>>> we're receiving.  I had read that long DbmSession cleanups can cause
>>> problems, which is why I transitioned to the MySQL system, which takes
>>> < 1 second to complete, but I'm still noticing the long session init
>>> times.
>>>
>>>
>>> I put some debugging statements into the code and it seems to be
>>> related to session locking.  In particular, it is this function call
>>> in the lock method of the BaseSession class:
>>>
>>>
>>> _apache._global_lock(self._req.server, self._sid)
>>>
>>>
>>> which is taking some time to complete. I'm not familiar with
>>> _apache._global_lock (is it used to apply a mutex lock to the
>>> session?) and am having trouble finding information describing its
>>> usage - but it seems likely that this is the root cause.  In the past
>>> I've had problems with session locking but have since transitioned the
>>> code to ensure that only one session is created per request, as such:
>>>
>>> if not hasattr(req,'session'):
>>>             req.session = Session.MySQLSession(req)
>>>
>>>
>>> Can anyone tell me if this kind of behavior is normal or is indicative
>>> of some common configuration or coding error?  Any help would be
>>> greatly appreciated.
>>
>> Ignoring hangs, how long does your longest request normally take to
>> execute? Are you perhaps performing file uploads that take a
>> significant amount of time and are holding a session locked for the
>> whole period of the request?
>>
>> To at least allow some level of concurrency, from memory mod_python
>> holds a small pool of cross process mutex locks. Based on the session
>> ID (I think) it should consistently pick the same mutex lock each
>> time. Thus, if a request comes in with the same session ID it would be
>> blocked while the existing request for that session runs. If however
>> another request comes in with a different session ID, but where it
>> maps to the same mutex lock from the pool, it will also be blocked
>> until the request holding that lock has completed.

That is an accurate summary. The mutex index is calculated by the 
following pseudo code:

index = (hash(session_id) % (nlocks - 1) + 1)

nlocks is 8 by default. Mutex index 0 is reserved for dbm file locking 
so you really only have 7 mutexes available.

The number of locks can be set with the "PythonOption 
mod_python.mutex_locks" config directive or at compile time.

>> What this means is that the number of mutex locks in the pool
>> effectively dictates how many parallel session based requests you can
>> have executed across the whole of the Apache server. Thus, if you have
>> requests that take a long time while still holding the session lock,
>> it can lock out other requests until it completes.
>>
>> One can makes things a bit better by increasing the number of mutex
>> locks in the pool, but you have to be careful not to create too many
>> in case it is using sysvsem and your OS doesn't allocate enough.
>>
>> The only other thing to do is to release the lock explicitly as soon
>> as you no longer need it and don't rely on the cleanup handler for the
>> request to unlock it.
>>
>> In other words, what your application is doing, your own code and how
>> you have written it could be the problem, and not necessarily
>> mod_python itself.
>>
>> If my memory has totally faded and my description is wrong, someone
>> please correct me. :-)

It's all good. :)

>> Graham
From davidjanes at blogmatrix.com  Tue Dec  4 14:16:31 2007
From: davidjanes at blogmatrix.com (David Janes)
Date: Tue Dec  4 14:16:38 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <2F6A6F93-5F08-47E0-8F1B-A38AFA6CAAD1@octopart.com>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>
	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
	<88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>
	<21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
	<2F6A6F93-5F08-47E0-8F1B-A38AFA6CAAD1@octopart.com>
Message-ID: <21e523c20712041116yd3380b0p5f45995ba5a4e624@mail.gmail.com>

(1)
We've had no problems so far, but I'd like to keep it in for awhile to
see if any problems occur before staking my reputation on it ;-)

Note that it's running on 3 sites:
http://www.blogmatrix.com
http://www.onaswarm.com
http://www.onamine.com

(2)
In terms of the locking logic, we just override all the lock functions
and implement them exactly the same way the base classes do (see
earlier code sample). Note that we _always_ explicitly unlock our
sessions, just because.

(3)
Definitely a Linux solution, though perhaps something like this would work:

if os.flock:
 ... do flock stuff ...
else:
  super.original_lock_code(self, ...)

Regards, etc...

On Dec 4, 2007 12:28 PM, Harish Agarwal <harish@octopart.com> wrote:
> Have you noticed any performance issues?  I want to make sure to keep
> things fast and am worried that departing from the Apache lock system
> will degrade performance.  Why was mod python designed to use the
> apache system and not use session specific locks?
>
> Also a note for the list - I'm now explicitly unlocking the session
> after each save to ensure that the session isn't locked during a
> req.write call.  I've seen one hang since then, but in twelve hours,
> that is much much better than the issues I was seeing before.
>
> I think that this problem directly contradicts the general philosophy
> behind using the mod_python session handling scheme - I feel like I've
> read, a few times now, that there is no reason to have to explicitly
> unlock sessions, but this is an instance where running everything in
> its default configuration (not unlocking sessions, flushing the buffer
> on req.writes) causes serious hanging problems...  In addition,
> unlocking the session after each save doesn't sit well with me - I
> don't think the session is thread-safe now (given that there can be
> multiple save's per request).
>
> -Harish
>
>
>
> On Dec 4, 2007, at 1:48 AM, David Janes wrote:
>
> > I'll note for the list that I put in the changes I outlined above ---
> > that is, handled locking entirely ourselves rather than using Apache's
> > lock function -- and I haven't had a hang since.
> >
> > Regards, etc...
> >
> > --
> > David Janes
> > Founder, BlogMatrix
> > http://www.blogmatrix.com
> > http://blogmatrix.blogmatrix.com
>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>



-- 
David Janes
Founder, BlogMatrix
http://www.blogmatrix.com
http://blogmatrix.blogmatrix.com
From graham.dumpleton at gmail.com  Tue Dec  4 16:32:07 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec  4 16:32:14 2007
Subject: [mod_python] Session Hanging Problems
In-Reply-To: <47559EC9.1060104@jgassociates.ca>
References: <223DABED-F63D-45B0-B1CF-B8F6A75E8E2A@octopart.com>
	<88e286470711261338l1da01282s6f8a9cc309d7b5a0@mail.gmail.com>
	<A71D6DDB-13D5-4DFB-94C4-8C07E3CE5058@octopart.com>
	<88e286470712032152s6101f8e4m77437a150a80766c@mail.gmail.com>
	<21e523c20712040148n74cfcb86u996c34f0c0badfc@mail.gmail.com>
	<2F6A6F93-5F08-47E0-8F1B-A38AFA6CAAD1@octopart.com>
	<47559EC9.1060104@jgassociates.ca>
Message-ID: <88e286470712041332u3d20a5a2wdb96d6dc7f3076b8@mail.gmail.com>

On 05/12/2007, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Harish Agarwal wrote:
> > Have you noticed any performance issues?  I want to make sure to keep
> > things fast and am worried that departing from the Apache lock system
> > will degrade performance.  Why was mod python designed to use the apache
> > system and not use session specific locks?
>
> I wasn't around when session handling was first introduced, but I assume
> the apache mutexes where used so that mod_python would be as
> cross-platform as possible. Python's fcntl.flock() is only available on
> *nix platforms.

Important thing to note is that the session locks must be cross
process on UNIX. Part of the problem is then that certain types of
lock mechanisms may not be able to be used by arbitrary processes.
Instead, a parent process needs to initialise the lock. That lock must
then be inherited through a process fork, with some reinitialisation
done in the child to cope with process owner changes, and then used.
Typically, the most efficient sorts of cross process locks work this
way.

Because no mod_python specific Python code is run within Apache parent
process, there is no opportunity for such style of locks to be setup
from Python code, so the APR C interfaces are used to do it and then
those interfaces exposed through to Python code.

In some respects it is a bad design as it means that Session code is
tightly bound to Apache. If it wasn't done this way then feasibly one
could more or less port the Python frameworkish code to work on a
different web server infrastructure.

BTW, the portability argument isn't necessarily valid as on Windows,
the only other platform mod_python really runs on, you can use Python
in process locks as session locks. This is because you don't have
multiple processes and so don't need cross process locks.

> The big drawback with apache's mutexes is that we are dealing with
> limited resource.

Only the case for certain types of cross process locks, eg., sysvsem.

Graham
From pascal at ilikecode.co.uk  Thu Dec  6 07:23:43 2007
From: pascal at ilikecode.co.uk (Pascal Opitz)
Date: Thu Dec  6 07:23:50 2007
Subject: [mod_python] Newbie question: Custom module path not taken over by
	importer
In-Reply-To: <7cfb99d0712060420t1a634ea5n7477292546efa21f@mail.gmail.com>
References: <7cfb99d0712060420t1a634ea5n7477292546efa21f@mail.gmail.com>
Message-ID: <7cfb99d0712060423i410b81bfved007e8c85b0622c@mail.gmail.com>

Hello, first of all apologies if I ask something really stupid and
simple, but I searched the list and tried various scenarios, but
Nothing worked.

I set up a Fedora 8 VM and got that running with:
httpd.i386                               2.2.6-3                installed
mod_python.i386                          3.3.1-5                installed
python.i386                              2.5.1-15.fc8           installed

Then I added a directory that should have custom modules, and now try
to pass that into mod_python via the httpd.conf, which with the new
importer (if I read that right) should be like this:

<VirtualHost *:80>
        ServerName demosite
        SetHandler mod_python
        PythonOption mod_python.importer.path
["/home/developer/projects/common/python/modules"]
        PythonHandler testmodule::hello_world
        PythonDebug On
</VirtualHost>

I also tried the old (? did I understand that right) way of utilizing
PythonPath:

<VirtualHost *:80>
        ServerName demosite
        SetHandler mod_python
        PythonPath "['/home/developer/projects/common/python/modules']"
        PythonHandler testmodule::hello_world
        PythonDebug On
</VirtualHost>

If I mode the testmodule into the site-packages directory, it works.
However, if I have it in
/home/developer/projects/common/python/modules/testmodule, and chmod
it with 777, it won't be picked up. Instead I get an error:

MOD_PYTHON ERROR

ProcessId: 2944
Interpreter: 'demosite'

ServerName: 'demosite'
DocumentRoot: '/var/www/html'

URI: '/'
Location: None
Directory: None
Filename: '/var/www/html/'
PathInfo: ''

Phase: 'PythonHandler'
Handler: 'testmodule::hello_world'

Traceback (most recent call last):

 File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line
1537, in HandlerDispatch
 default=default_handler, arg=req, silent=hlist.silent)

 File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line
1202, in _process_target
 module = import_module(module_name, path=path)

 File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line
304, in import_module
 return __import__(module_name, {}, {}, ['*'])

ImportError: No module named testmodule




Anything in my newbie attempt that is obviously wrong?
Best


Pascal
From graham.dumpleton at gmail.com  Thu Dec  6 17:01:22 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec  6 17:01:31 2007
Subject: [mod_python] Newbie question: Custom module path not taken over
	by importer
In-Reply-To: <7cfb99d0712060423i410b81bfved007e8c85b0622c@mail.gmail.com>
References: <7cfb99d0712060420t1a634ea5n7477292546efa21f@mail.gmail.com>
	<7cfb99d0712060423i410b81bfved007e8c85b0622c@mail.gmail.com>
Message-ID: <88e286470712061401n73f7f7b3ndd0970df7f99e96b@mail.gmail.com>

The mod_python module importer cannot be used on Python packages, only
Python modules. Is your software a package or a module.

Graham

On 06/12/2007, Pascal Opitz <pascal@ilikecode.co.uk> wrote:
> Hello, first of all apologies if I ask something really stupid and
> simple, but I searched the list and tried various scenarios, but
> Nothing worked.
>
> I set up a Fedora 8 VM and got that running with:
> httpd.i386                               2.2.6-3                installed
> mod_python.i386                          3.3.1-5                installed
> python.i386                              2.5.1-15.fc8           installed
>
> Then I added a directory that should have custom modules, and now try
> to pass that into mod_python via the httpd.conf, which with the new
> importer (if I read that right) should be like this:
>
> <VirtualHost *:80>
>         ServerName demosite
>         SetHandler mod_python
>         PythonOption mod_python.importer.path
> ["/home/developer/projects/common/python/modules"]
>         PythonHandler testmodule::hello_world
>         PythonDebug On
> </VirtualHost>
>
> I also tried the old (? did I understand that right) way of utilizing
> PythonPath:
>
> <VirtualHost *:80>
>         ServerName demosite
>         SetHandler mod_python
>         PythonPath "['/home/developer/projects/common/python/modules']"
>         PythonHandler testmodule::hello_world
>         PythonDebug On
> </VirtualHost>
>
> If I mode the testmodule into the site-packages directory, it works.
> However, if I have it in
> /home/developer/projects/common/python/modules/testmodule, and chmod
> it with 777, it won't be picked up. Instead I get an error:
>
> MOD_PYTHON ERROR
>
> ProcessId: 2944
> Interpreter: 'demosite'
>
> ServerName: 'demosite'
> DocumentRoot: '/var/www/html'
>
> URI: '/'
> Location: None
> Directory: None
> Filename: '/var/www/html/'
> PathInfo: ''
>
> Phase: 'PythonHandler'
> Handler: 'testmodule::hello_world'
>
> Traceback (most recent call last):
>
>  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line
> 1537, in HandlerDispatch
>  default=default_handler, arg=req, silent=hlist.silent)
>
>  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line
> 1202, in _process_target
>  module = import_module(module_name, path=path)
>
>  File "/usr/lib/python2.5/site-packages/mod_python/importer.py", line
> 304, in import_module
>  return __import__(module_name, {}, {}, ['*'])
>
> ImportError: No module named testmodule
>
>
>
>
> Anything in my newbie attempt that is obviously wrong?
> Best
>
>
> Pascal
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Thu Dec  6 17:40:55 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec  6 17:41:03 2007
Subject: [mod_python] Newbie question: Custom module path not taken over
	by importer
In-Reply-To: <7cfb99d0712061436u36cd6171ic18d0c9da387ca6@mail.gmail.com>
References: <7cfb99d0712060420t1a634ea5n7477292546efa21f@mail.gmail.com>
	<7cfb99d0712060423i410b81bfved007e8c85b0622c@mail.gmail.com>
	<88e286470712061401n73f7f7b3ndd0970df7f99e96b@mail.gmail.com>
	<7cfb99d0712061436u36cd6171ic18d0c9da387ca6@mail.gmail.com>
Message-ID: <88e286470712061440q6c596908m92fd5c5ea07fbfaa@mail.gmail.com>

On 07/12/2007, Pascal Opitz <pascal@ilikecode.co.uk> wrote:
> Hi Graham,
>
> thanks for getting back.
> At the moment it is a folder with an __init__.py file, which has just
> the hello world method in there.
> Creating an __init__.py file should identify the folder as module, right?

No. A directory which contains a __init__.py makes it a package.

Maybe have a read through:

  http://docs.python.org/tut/node8.html

I quickly Google'd it up, but think it describes the differences.

Please use reply-all to keep replies on the list. Thanks.

Graham

> > The mod_python module importer cannot be used on Python packages, only
> > Python modules. Is your software a package or a module.
> >
> > Graham
> >
>
From graham.dumpleton at gmail.com  Thu Dec  6 17:55:35 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec  6 17:55:45 2007
Subject: [mod_python] Newbie question: Custom module path not taken over
	by importer
In-Reply-To: <7cfb99d0712061448q786ef95hde9a585506ce0571@mail.gmail.com>
References: <7cfb99d0712060420t1a634ea5n7477292546efa21f@mail.gmail.com>
	<7cfb99d0712060423i410b81bfved007e8c85b0622c@mail.gmail.com>
	<88e286470712061401n73f7f7b3ndd0970df7f99e96b@mail.gmail.com>
	<7cfb99d0712061436u36cd6171ic18d0c9da387ca6@mail.gmail.com>
	<88e286470712061440q6c596908m92fd5c5ea07fbfaa@mail.gmail.com>
	<7cfb99d0712061448q786ef95hde9a585506ce0571@mail.gmail.com>
Message-ID: <88e286470712061455y86a24dew32b271268962b7ac@mail.gmail.com>

The mod_python module importer ignores packages as reloadable module
candidates. It also only looks on its own special module path for the
packages that are candidates for reloading. If it can't find a
module/package, it falls back to doing standard import and it looks on
sys.path for those, so it will find it in site-packages. When it falls
back to using standard import, those things aren't candidates for
reloading though. For more details see import_module() documentation
in:

  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

Graham

On 07/12/2007, Pascal Opitz <contact@pascalopitz.com> wrote:
> Graham, thanks for your help, will give it a shot ... just for my
> understanding: Why does it work when I move the same package into the
> site-packages directory?
>
> On Dec 6, 2007 10:40 PM, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > On 07/12/2007, Pascal Opitz <pascal@ilikecode.co.uk> wrote:
> > > Hi Graham,
> > >
> > > thanks for getting back.
> > > At the moment it is a folder with an __init__.py file, which has just
> > > the hello world method in there.
> > > Creating an __init__.py file should identify the folder as module, right?
> >
> > No. A directory which contains a __init__.py makes it a package.
> >
> > Maybe have a read through:
> >
> >   http://docs.python.org/tut/node8.html
> >
> > I quickly Google'd it up, but think it describes the differences.
> >
> > Please use reply-all to keep replies on the list. Thanks.
> >
> > Graham
> >
>
From mlopes at orangeway.org  Sat Dec  8 15:42:15 2007
From: mlopes at orangeway.org (Marco Lopes)
Date: Sat Dec  8 15:42:28 2007
Subject: [mod_python] How to read raw post in mod_python?
Message-ID: <ddb7d9250712081242q650afcaduc7d295b9c770ea0@mail.gmail.com>

Hi,

I'm giving my first steps in mod_python and I seem to be having some
problems to get the unprocessed post data.
I've been trying req.read() but the return result is empty, I tried it
without parameters, with the content-length and with some value higher than
the content-length but it still returned empty.
The content-length in the req.headers_in come with a non-zero value but the
variable req.clength is always 0.

First I used the following mod_python apache configuration:

    <Directory /var/www/test>
            AllowOverride AuthConfig
            Order allow,deny
            Allow from all

            DirectoryIndex index.py
            SetHandler mod_python
            PythonHandler mod_python.publisher
            PythonDebug On
    </Directory>


Then I found something in the mailling list about a problem that could occur
with that configuration that could cause strange behaviour leading to empty
or corrupt data in GET and/or POST data (because of not using the
index.pyfile name, this could be an old problem alredy addressed but I
can't
remember the message date) and I tried the following configuration:

    <Directory /var/www/test>
            AllowOverride AuthConfig
            Order allow,deny
            Allow from all

            AddHandler mod_python .py
            PythonHandler mod_python.publisher
            PythonDebug On
    </Directory>


The req.read() call continued to return empty.
I checked the req.form and the POST is there already processed, I'm thinking
that if I could find a way to tell mod_python not to process the post I
could then use req.read() to get the raw post.

Can anyone give-me any information that could help me with this?

Thanks,
Marco Lopes
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071208/9bdf11b0/attachment.html
From graham.dumpleton at gmail.com  Sat Dec  8 15:54:33 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Dec  8 15:54:39 2007
Subject: [mod_python] How to read raw post in mod_python?
In-Reply-To: <ddb7d9250712081242q650afcaduc7d295b9c770ea0@mail.gmail.com>
References: <ddb7d9250712081242q650afcaduc7d295b9c770ea0@mail.gmail.com>
Message-ID: <88e286470712081254j59ec20b7i352bad2547e30c2a@mail.gmail.com>

When using mod_python.publisher the POST data is always consumed. It
does this as by definition publisher always parses content for form
parameters. That is does this even when content type isn't form data
is arguable wrong. See:

  https://issues.apache.org/jira/browse/MODPYTHON-29

You would need to add an override for the specific URL in question and
route it to a basic mod_python handler and then you have full control
and thus full access to content of request.

Graham

On 09/12/2007, Marco Lopes <mlopes@orangeway.org> wrote:
> Hi,
>
> I'm giving my first steps in mod_python and I seem to be having some
> problems to get the unprocessed post data.
> I've been trying req.read() but the return result is empty, I tried it
> without parameters, with the content-length and with some value higher than
> the content-length but it still returned empty.
> The content-length in the req.headers_in come with a non-zero value but the
> variable req.clength is always 0.
>
> First I used the following mod_python apache configuration:
>
>     <Directory /var/www/test>
>             AllowOverride AuthConfig
>             Order allow,deny
>             Allow from all
>
>             DirectoryIndex index.py
>             SetHandler mod_python
>             PythonHandler mod_python.publisher
>             PythonDebug On
>     </Directory>
>
>
> Then I found something in the mailling list about a problem that could occur
> with that configuration that could cause strange behaviour leading to empty
> or corrupt data in GET and/or POST data (because of not using the index.py
> file name, this could be an old problem alredy addressed but I can't
> remember the message date) and I tried the following configuration:
>
>     <Directory /var/www/test>
>             AllowOverride AuthConfig
>             Order allow,deny
>             Allow from all
>
>             AddHandler mod_python .py
>             PythonHandler mod_python.publisher
>             PythonDebug On
>     </Directory>
>
>
> The req.read() call continued to return empty.
> I checked the req.form and the POST is there already processed, I'm thinking
> that if I could find a way to tell mod_python not to process the post I
> could then use req.read() to get the raw post.
>
> Can anyone give-me any information that could help me with this?
>
> Thanks,
> Marco Lopes
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From mlopes at orangeway.org  Sat Dec  8 16:58:55 2007
From: mlopes at orangeway.org (Marco Lopes)
Date: Sat Dec  8 16:59:02 2007
Subject: [mod_python] How to read raw post in mod_python?
In-Reply-To: <88e286470712081254j59ec20b7i352bad2547e30c2a@mail.gmail.com>
References: <ddb7d9250712081242q650afcaduc7d295b9c770ea0@mail.gmail.com>
	<88e286470712081254j59ec20b7i352bad2547e30c2a@mail.gmail.com>
Message-ID: <ddb7d9250712081358m41e207b3if5774f6860e9ceb1@mail.gmail.com>

Thank you very much, for your help, I created a subdirectory with the
following configurations:

SetHandler mod_python
PythonHandler index
PythonDebug On

Then I created a file named index.py with the following contents:

from mod_python import apache

def handler(req):
    req.content_type = 'image/jpg'
    req.write(req.read())
    return apache.OK

And managed to write a jpeg wich I posted for testing.

Thank you again and sorry for beeing so extensive in this reply but I just
wanted to send the an working example in the reply for those who need it
later.


On 12/8/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> When using mod_python.publisher the POST data is always consumed. It
> does this as by definition publisher always parses content for form
> parameters. That is does this even when content type isn't form data
> is arguable wrong. See:
>
>   https://issues.apache.org/jira/browse/MODPYTHON-29
>
> You would need to add an override for the specific URL in question and
> route it to a basic mod_python handler and then you have full control
> and thus full access to content of request.
>
> Graham
>
> On 09/12/2007, Marco Lopes <mlopes@orangeway.org> wrote:
> > Hi,
> >
> > I'm giving my first steps in mod_python and I seem to be having some
> > problems to get the unprocessed post data.
> > I've been trying req.read() but the return result is empty, I tried it
> > without parameters, with the content-length and with some value higher
> than
> > the content-length but it still returned empty.
> > The content-length in the req.headers_in come with a non-zero value but
> the
> > variable req.clength is always 0.
> >
> > First I used the following mod_python apache configuration:
> >
> >     <Directory /var/www/test>
> >             AllowOverride AuthConfig
> >             Order allow,deny
> >             Allow from all
> >
> >             DirectoryIndex index.py
> >             SetHandler mod_python
> >             PythonHandler mod_python.publisher
> >             PythonDebug On
> >     </Directory>
> >
> >
> > Then I found something in the mailling list about a problem that could
> occur
> > with that configuration that could cause strange behaviour leading to
> empty
> > or corrupt data in GET and/or POST data (because of not using the
> index.py
> > file name, this could be an old problem alredy addressed but I can't
> > remember the message date) and I tried the following configuration:
> >
> >     <Directory /var/www/test>
> >             AllowOverride AuthConfig
> >             Order allow,deny
> >             Allow from all
> >
> >             AddHandler mod_python .py
> >             PythonHandler mod_python.publisher
> >             PythonDebug On
> >     </Directory>
> >
> >
> > The req.read() call continued to return empty.
> > I checked the req.form and the POST is there already processed, I'm
> thinking
> > that if I could find a way to tell mod_python not to process the post I
> > could then use req.read() to get the raw post.
> >
> > Can anyone give-me any information that could help me with this?
> >
> > Thanks,
> > Marco Lopes
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071208/095367ec/attachment.html
From drunkirishmic420 at hotmail.com  Sat Dec  8 22:04:21 2007
From: drunkirishmic420 at hotmail.com (Brett Dixon)
Date: Sat Dec  8 22:04:29 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <mailman.16405.1197169128.9081.mod_python@modpython.org>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
Message-ID: <BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>

I'm not sure if this is a mod_python specific question or if it should be asked on the apache list.  But is there any way to get the username of the currently logged in user from Windows.  In PHP you could just snag REMOTE_USER or AUTH_USER.  I guess I'm just not sure how to get this info or if i need to run another module in order for this information to be available.

Thanks

_________________________________________________________________
Put your friends on the big screen with Windows Vista? + Windows Live?.
http://www.microsoft.com/windows/shop/specialoffers.mspx?ocid=TXT_TAGLM_CPC_MediaCtr_bigscreen_102007
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071208/3c7d802c/attachment.html
From graham.dumpleton at gmail.com  Sat Dec  8 23:36:31 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Dec  8 23:36:36 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
Message-ID: <88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>

Use:

  req.user

Graham

On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
>
> I'm not sure if this is a mod_python specific question or if it should be
> asked on the apache list.  But is there any way to get the username of the
> currently logged in user from Windows.  In PHP you could just snag
> REMOTE_USER or AUTH_USER.  I guess I'm just not sure how to get this info or
> if i need to run another module in order for this information to be
> available.
>
> Thanks
>
> ________________________________
> Get the power of Windows + Web with the new Windows Live. Power up!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Sun Dec  9 01:29:35 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec  9 01:29:41 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
Message-ID: <88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>

It should be set if an Apache authentication handler has actually
authorised a user. If it isn't being set, then the URL isn't being
authenticated or the authentication handler isn't compliant and doing
what is expected of an Apache authentication handler.

What is the actual authentication handler you are using? What handler
phase are you trying to access this attribute?

Please use reply-all to keep discussion on the mailing list.

Graham

On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
>
> i checked that one, but it is always None.  Is there something in the apache
> config i need to set first?
>
>
>
> ________________________________
> > Date: Sun, 9 Dec 2007 15:36:31 +1100
> > From: graham.dumpleton@gmail.com
> > To: drunkirishmic420@hotmail.com
> > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > CC: mod_python@modpython.org
>
> >
> > Use:
> >
> > req.user
> >
> > Graham
> >
> > On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> > >
> > > I'm not sure if this is a mod_python specific question or if it should
> be
> > > asked on the apache list. But is there any way to get the username of
> the
> > > currently logged in user from Windows. In PHP you could just snag
> > > REMOTE_USER or AUTH_USER. I guess I'm just not sure how to get this info
> or
> > > if i need to run another module in order for this information to be
> > > available.
> > >
> > > Thanks
> > >
> > > ________________________________
> > > Get the power of Windows + Web with the new Windows Live. Power up!
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
>
> ________________________________
> Share life as it happens with the new Windows Live. Share now!
From tactics40 at gmail.com  Sun Dec  9 01:42:20 2007
From: tactics40 at gmail.com (Michael M)
Date: Sun Dec  9 01:42:33 2007
Subject: [mod_python] Distinguishing uploaded files from POST form data
Message-ID: <a1119f280712082242h482b9cd0sdba8500137599903@mail.gmail.com>

Hello,

I'm using mod_python for a project of mine. It's working very nicely, save a
few quirks.

My question is how do you distinguish between regular form POST data and
uploaded files? In other words, I want to be able to take a FieldStorage
object and split it into something analogous to PHP's $_POST and $_FILES.
FieldStorage is a sloppy class which is tied way to closely to the
underlying implementation of HTTP. I was to abstract it so I can more easily
unittest my system (because mod_python absolutely hates being imported
outside of Apache). However, as far as I have been able to figure out,
there's no clear way to tell which is which. I can also imagine that maybe
PHP does a little black magic and the actual difference between uploaded
files and post data is fuzzier than Zend would have us all believe. If such
is the case, what would my best strategy be to try and make a good guess as
to when data is constitutes an uploaded file?

Any help would be spectacular.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/d04f5ff3/attachment.html
From mlopes at orangeway.org  Sun Dec  9 07:55:01 2007
From: mlopes at orangeway.org (Marco Lopes)
Date: Sun Dec  9 07:55:13 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
Message-ID: <ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>

I'm guessing you're both talking about different things. I'm new to
mod_python but I'd say req.user is the HTTP user, the user given when the
user is prompt for authentication by apache.
The "user" Brett is asking about is the username of the user logged in a
remote windows machine, wich I'd say he'd never be able to get cause the
client will never send it to the server side for security and privacy
reasons.

On 12/9/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> It should be set if an Apache authentication handler has actually
> authorised a user. If it isn't being set, then the URL isn't being
> authenticated or the authentication handler isn't compliant and doing
> what is expected of an Apache authentication handler.
>
> What is the actual authentication handler you are using? What handler
> phase are you trying to access this attribute?
>
> Please use reply-all to keep discussion on the mailing list.
>
> Graham
>
> On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> >
> > i checked that one, but it is always None.  Is there something in the
> apache
> > config i need to set first?
> >
> >
> >
> > ________________________________
> > > Date: Sun, 9 Dec 2007 15:36:31 +1100
> > > From: graham.dumpleton@gmail.com
> > > To: drunkirishmic420@hotmail.com
> > > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > > CC: mod_python@modpython.org
> >
> > >
> > > Use:
> > >
> > > req.user
> > >
> > > Graham
> > >
> > > On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> > > >
> > > > I'm not sure if this is a mod_python specific question or if it
> should
> > be
> > > > asked on the apache list. But is there any way to get the username
> of
> > the
> > > > currently logged in user from Windows. In PHP you could just snag
> > > > REMOTE_USER or AUTH_USER. I guess I'm just not sure how to get this
> info
> > or
> > > > if i need to run another module in order for this information to be
> > > > available.
> > > >
> > > > Thanks
> > > >
> > > > ________________________________
> > > > Get the power of Windows + Web with the new Windows Live. Power up!
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > > >
> >
> > ________________________________
> > Share life as it happens with the new Windows Live. Share now!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/66d44918/attachment.html
From scarfboy at gmail.com  Sun Dec  9 08:45:35 2007
From: scarfboy at gmail.com (Bart)
Date: Sun Dec  9 08:45:40 2007
Subject: [mod_python] Distinguishing uploaded files from POST form data
In-Reply-To: <a1119f280712082242h482b9cd0sdba8500137599903@mail.gmail.com>
References: <a1119f280712082242h482b9cd0sdba8500137599903@mail.gmail.com>
Message-ID: <b71082d80712090545m64473529mbaf35c374112d975@mail.gmail.com>

As I recall, files are just one type thing you can store in POST data.
The distinction is made in parsing, so yes, pretty much anything
makes that distinction.
PHP apparently chooses to put them in separate variables, while
(mod_)python doesn't, and you have to test what each member is
an instantiation of, mod_python.util.Field (a file) or StringField (a string).

You can likely imitate that for tests.
...though I get the impression I'm not answering the question you actually had.

--Bart


On Dec 9, 2007 7:42 AM, Michael M <tactics40@gmail.com> wrote:
> Hello,
>
> I'm using mod_python for a project of mine. It's working very nicely, save a
> few quirks.
>
> My question is how do you distinguish between regular form POST data and
> uploaded files? In other words, I want to be able to take a FieldStorage
> object and split it into something analogous to PHP's $_POST and $_FILES.
> FieldStorage is a sloppy class which is tied way to closely to the
> underlying implementation of HTTP. I was to abstract it so I can more easily
> unittest my system (because mod_python absolutely hates being imported
> outside of Apache). However, as far as I have been able to figure out,
> there's no clear way to tell which is which. I can also imagine that maybe
> PHP does a little black magic and the actual difference between uploaded
> files and post data is fuzzier than Zend would have us all believe. If such
> is the case, what would my best strategy be to try and make a good guess as
> to when data is constitutes an uploaded file?
>
> Any help would be spectacular.
From drunkirishmic420 at hotmail.com  Sun Dec  9 11:52:15 2007
From: drunkirishmic420 at hotmail.com (Brett Dixon)
Date: Sun Dec  9 11:52:21 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com> 
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
Message-ID: <BAY124-W259388AC4966059087F7CF916A0@phx.gbl>

yes Marco, that is the user i am trying to retrieve.  If it's not possible to get with apache/mod_python then its back to IIS i go :)

Thanks guys



Date: Sun, 9 Dec 2007 12:55:01 +0000
From: mlopes@orangeway.org
To: graham.dumpleton@gmail.com
Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
CC: drunkirishmic420@hotmail.com; mod_python@modpython.org

I'm guessing you're both talking about different things. I'm new to mod_python but I'd say req.user is the HTTP user, the user given when the user is prompt for authentication by apache. 
The "user" Brett is asking about is the username of the user logged in a remote windows machine, wich I'd say he'd never be able to get cause the client will never send it to the server side for security and privacy reasons.


On 12/9/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
It should be set if an Apache authentication handler has actually
authorised a user. If it isn't being set, then the URL isn't being
authenticated or the authentication handler isn't compliant and doing

what is expected of an Apache authentication handler.

What is the actual authentication handler you are using? What handler
phase are you trying to access this attribute?

Please use reply-all to keep discussion on the mailing list.


Graham

On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
>
> i checked that one, but it is always None.  Is there something in the apache

> config i need to set first?
>
>
>
> ________________________________
> > Date: Sun, 9 Dec 2007 15:36:31 +1100
> > From: graham.dumpleton@gmail.com

> > To: drunkirishmic420@hotmail.com
> > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > CC: 
mod_python@modpython.org
>
> >
> > Use:
> >
> > req.user
> >
> > Graham
> >
> > On 09/12/2007, Brett Dixon <
drunkirishmic420@hotmail.com> wrote:
> > >
> > > I'm not sure if this is a mod_python specific question or if it should
> be
> > > asked on the apache list. But is there any way to get the username of

> the
> > > currently logged in user from Windows. In PHP you could just snag
> > > REMOTE_USER or AUTH_USER. I guess I'm just not sure how to get this info
> or
> > > if i need to run another module in order for this information to be

> > > available.
> > >
> > > Thanks
> > >
> > > ________________________________
> > > Get the power of Windows + Web with the new Windows Live. Power up!

> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > >
> 
http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
>
> ________________________________
> Share life as it happens with the new Windows Live. Share now!

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org

http://mailman.modpython.org/mailman/listinfo/mod_python



_________________________________________________________________
Your smile counts. The more smiles you share, the more we donate.? Join in.
www.windowslive.com/smile?ocid=TXT_TAGLM_Wave2_oprsmilewlhmtagline
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/7b3d60e8/attachment.html
From programmer.py at gmail.com  Sun Dec  9 13:36:48 2007
From: programmer.py at gmail.com (Jaime Wyant)
Date: Sun Dec  9 13:36:54 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
Message-ID: <d52c72d20712091036t29195f93xafa1af8a3d2f98ef@mail.gmail.com>

You *can* use IIS, if you register python as an `activex` scripting
language.  I can not recall the details, but I know it comes with the win32
extensions.

Good luck!

jw

On Dec 9, 2007 10:52 AM, Brett Dixon <drunkirishmic420@hotmail.com> wrote:

> yes Marco, that is the user i am trying to retrieve.  If it's not possible
> to get with apache/mod_python then its back to IIS i go :)
>
> Thanks guys
>
>
>
> ------------------------------
> Date: Sun, 9 Dec 2007 12:55:01 +0000
> From: mlopes@orangeway.org
> To: graham.dumpleton@gmail.com
> Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> CC: drunkirishmic420@hotmail.com; mod_python@modpython.org
>
>
> I'm guessing you're both talking about different things. I'm new to
> mod_python but I'd say req.user is the HTTP user, the user given when the
> user is prompt for authentication by apache.
> The "user" Brett is asking about is the username of the user logged in a
> remote windows machine, wich I'd say he'd never be able to get cause the
> client will never send it to the server side for security and privacy
> reasons.
>
> On 12/9/07, *Graham Dumpleton* <graham.dumpleton@gmail.com> wrote:
>
> It should be set if an Apache authentication handler has actually
> authorised a user. If it isn't being set, then the URL isn't being
> authenticated or the authentication handler isn't compliant and doing
> what is expected of an Apache authentication handler.
>
> What is the actual authentication handler you are using? What handler
> phase are you trying to access this attribute?
>
> Please use reply-all to keep discussion on the mailing list.
>
> Graham
>
> On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> >
> > i checked that one, but it is always None.  Is there something in the
> apache
> > config i need to set first?
> >
> >
> >
> > ________________________________
> > > Date: Sun, 9 Dec 2007 15:36:31 +1100
> > > From: graham.dumpleton@gmail.com
> > > To: drunkirishmic420@hotmail.com
> > > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > > CC: mod_python@modpython.org
> >
> > >
> > > Use:
> > >
> > > req.user
> > >
> > > Graham
> > >
> > > On 09/12/2007, Brett Dixon < drunkirishmic420@hotmail.com> wrote:
> > > >
> > > > I'm not sure if this is a mod_python specific question or if it
> should
> > be
> > > > asked on the apache list. But is there any way to get the username
> of
> > the
> > > > currently logged in user from Windows. In PHP you could just snag
> > > > REMOTE_USER or AUTH_USER. I guess I'm just not sure how to get this
> info
> > or
> > > > if i need to run another module in order for this information to be
> > > > available.
> > > >
> > > > Thanks
> > > >
> > > > ________________________________
> > > > Get the power of Windows + Web with the new Windows Live. Power up!
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > > >
> >
> > ________________________________
> > Share life as it happens with the new Windows Live. Share now!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
> ------------------------------
> Your smile counts. The more smiles you share, the more we donate. Join in!<http://www.windowslive.com/smile?ocid=TXT_TAGLM_Wave2_oprsmilewlhmtagline>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>


-- 
"Government does not solve problems; it subsidizes them."
Ronald Reagan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/7a18c77e/attachment.html
From tactics40 at gmail.com  Sun Dec  9 14:18:25 2007
From: tactics40 at gmail.com (Michael M)
Date: Sun Dec  9 14:18:34 2007
Subject: [mod_python] (no subject)
Message-ID: <a1119f280712091118p77fb9e51g9947289388fc91c2@mail.gmail.com>

> As I recall, files are just one type thing you can store in POST data.
> The distinction is made in parsing, so yes, pretty much anything
> makes that distinction.
> PHP apparently chooses to put them in separate variables, while
> (mod_)python doesn't, and you have to test what each member is
> an instantiation of, mod_python.util.Field (a file) or StringField (a
string).

> You can likely imitate that for tests.
> ...though I get the impression I'm not answering the question you actually
had.

> --Bart


I think at one point I had actually figured that much out (that Field stored
files while StringField had form data),
but in the process of rewriting the part of my system which handles uploaded
files and form data,
I made the silly mistake of forgetting the enc-type, causing me about a day
and a half of frustration, since
mod_python sees everything as a StringField at that point.

I got it working though. Thanks alot.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/879731f1/attachment.html
From graham.dumpleton at gmail.com  Sun Dec  9 15:04:52 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec  9 15:04:59 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
Message-ID: <88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>

REMOTE_USER in PHP should be the same as req.user in mod_python.

The req.user attribute actually is 'user' attribute of internal Apache
request_rec structure. It is this value that is used to set
REMOTE_USER in CGI variable environments and presumably PHP.

This attribute isn't restricted to just HTTP Basic/Digest
authentication. Any authentication handler should be setting it
correctly, whether that be some special Windows specific
authentication mechanism or otherwise.

Do you have a Windows specific authentication handler enabled in your
Apache configuration?

Graham

On 10/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
>
> yes Marco, that is the user i am trying to retrieve.  If it's not possible
> to get with apache/mod_python then its back to IIS i go :)
>
> Thanks guys
>
>
>
> ________________________________
> Date: Sun, 9 Dec 2007 12:55:01 +0000
> From: mlopes@orangeway.org
> To: graham.dumpleton@gmail.com
> Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> CC: drunkirishmic420@hotmail.com; mod_python@modpython.org
>
>
> I'm guessing you're both talking about different things. I'm new to
> mod_python but I'd say req.user is the HTTP user, the user given when the
> user is prompt for authentication by apache.
> The "user" Brett is asking about is the username of the user logged in a
> remote windows machine, wich I'd say he'd never be able to get cause the
> client will never send it to the server side for security and privacy
> reasons.
>
> On 12/9/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  It should be set if an Apache authentication handler has actually
> authorised a user. If it isn't being set, then the URL isn't being
> authenticated or the authentication handler isn't compliant and doing
>  what is expected of an Apache authentication handler.
>
> What is the actual authentication handler you are using? What handler
> phase are you trying to access this attribute?
>
> Please use reply-all to keep discussion on the mailing list.
>
> Graham
>
> On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> >
> > i checked that one, but it is always None.  Is there something in the
> apache
> > config i need to set first?
> >
> >
> >
> > ________________________________
> > > Date: Sun, 9 Dec 2007 15:36:31 +1100
> > > From: graham.dumpleton@gmail.com
> > > To: drunkirishmic420@hotmail.com
> > > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > > CC: mod_python@modpython.org
> >
> > >
> > > Use:
> > >
> > > req.user
> > >
> > > Graham
> > >
> > > On 09/12/2007, Brett Dixon < drunkirishmic420@hotmail.com> wrote:
> > > >
> > > > I'm not sure if this is a mod_python specific question or if it should
> > be
> > > > asked on the apache list. But is there any way to get the username of
> > the
> > > > currently logged in user from Windows. In PHP you could just snag
> > > > REMOTE_USER or AUTH_USER. I guess I'm just not sure how to get this
> info
> > or
> > > > if i need to run another module in order for this information to be
> > > > available.
> > > >
> > > > Thanks
> > > >
> > > > ________________________________
> > > > Get the power of Windows + Web with the new Windows Live. Power up!
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > > >
> >
> > ________________________________
> > Share life as it happens with the new Windows Live. Share now!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
>  http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> ________________________________
> Your smile counts. The more smiles you share, the more we donate. Join in!
From drunkirishmic420 at hotmail.com  Sun Dec  9 20:31:49 2007
From: drunkirishmic420 at hotmail.com (Brett Dixon)
Date: Sun Dec  9 20:31:56 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl> 
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
Message-ID: <BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>

In my python handler Directory directive, i have the AuthTpye set to basic, but thats about it.  I have tried "ntlm" but that hasnt done much.  Is there a windows specific auth handler?



> Date: Mon, 10 Dec 2007 07:04:52 +1100
> From: graham.dumpleton@gmail.com
> To: drunkirishmic420@hotmail.com
> Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> CC: mlopes@orangeway.org; mod_python@modpython.org
> 
> REMOTE_USER in PHP should be the same as req.user in mod_python.
> 
> The req.user attribute actually is 'user' attribute of internal Apache
> request_rec structure. It is this value that is used to set
> REMOTE_USER in CGI variable environments and presumably PHP.
> 
> This attribute isn't restricted to just HTTP Basic/Digest
> authentication. Any authentication handler should be setting it
> correctly, whether that be some special Windows specific
> authentication mechanism or otherwise.
> 
> Do you have a Windows specific authentication handler enabled in your
> Apache configuration?
> 
> Graham
> 
> On 10/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> >
> > yes Marco, that is the user i am trying to retrieve.  If it's not possible
> > to get with apache/mod_python then its back to IIS i go :)
> >
> > Thanks guys
> >
> >
> >
> > ________________________________
> > Date: Sun, 9 Dec 2007 12:55:01 +0000
> > From: mlopes@orangeway.org
> > To: graham.dumpleton@gmail.com
> > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > CC: drunkirishmic420@hotmail.com; mod_python@modpython.org
> >
> >
> > I'm guessing you're both talking about different things. I'm new to
> > mod_python but I'd say req.user is the HTTP user, the user given when the
> > user is prompt for authentication by apache.
> > The "user" Brett is asking about is the username of the user logged in a
> > remote windows machine, wich I'd say he'd never be able to get cause the
> > client will never send it to the server side for security and privacy
> > reasons.
> >
> > On 12/9/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> >  It should be set if an Apache authentication handler has actually
> > authorised a user. If it isn't being set, then the URL isn't being
> > authenticated or the authentication handler isn't compliant and doing
> >  what is expected of an Apache authentication handler.
> >
> > What is the actual authentication handler you are using? What handler
> > phase are you trying to access this attribute?
> >
> > Please use reply-all to keep discussion on the mailing list.
> >
> > Graham
> >
> > On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> > >
> > > i checked that one, but it is always None.  Is there something in the
> > apache
> > > config i need to set first?
> > >
> > >
> > >
> > > ________________________________
> > > > Date: Sun, 9 Dec 2007 15:36:31 +1100
> > > > From: graham.dumpleton@gmail.com
> > > > To: drunkirishmic420@hotmail.com
> > > > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > > > CC: mod_python@modpython.org
> > >
> > > >
> > > > Use:
> > > >
> > > > req.user
> > > >
> > > > Graham
> > > >
> > > > On 09/12/2007, Brett Dixon < drunkirishmic420@hotmail.com> wrote:
> > > > >
> > > > > I'm not sure if this is a mod_python specific question or if it should
> > > be
> > > > > asked on the apache list. But is there any way to get the username of
> > > the
> > > > > currently logged in user from Windows. In PHP you could just snag
> > > > > REMOTE_USER or AUTH_USER. I guess I'm just not sure how to get this
> > info
> > > or
> > > > > if i need to run another module in order for this information to be
> > > > > available.
> > > > >
> > > > > Thanks
> > > > >
> > > > > ________________________________
> > > > > Get the power of Windows + Web with the new Windows Live. Power up!
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > >
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > > > >
> > >
> > > ________________________________
> > > Share life as it happens with the new Windows Live. Share now!
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> >  http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> > ________________________________
> > Your smile counts. The more smiles you share, the more we donate. Join in!

_________________________________________________________________
Share life as it happens with the new Windows Live.Download today it's FREE!
http://www.windowslive.com/share.html?ocid=TXT_TAGLM_Wave2_sharelife_112007
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/47492a6e/attachment-0001.html
From graham.dumpleton at gmail.com  Sun Dec  9 21:42:36 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Dec  9 21:42:42 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
Message-ID: <88e286470712091842t12d528ddv89dcea4585bdb1ed@mail.gmail.com>

I am not a Windows person, but as much as I understand it, I believe
you need mod_sspi installed and configured. See:

  http://sourceforge.net/projects/mod-auth-sspi/
  http://www.gknw.net/docu/ntlmsspi/mod_auth_sspi/

This should allow Apache authentication against a Windows domain to be
done transparently between IE and Apache without popup windows
requiring explicit password entry. In this circumstance, your client
machine user then should somehow be reflected in the req.user
attribute if mod_sspi does the right thing and sets it.

Graham

On 10/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
>
> In my python handler Directory directive, i have the AuthTpye set to basic,
> but thats about it.  I have tried "ntlm" but that hasnt done much.  Is there
> a windows specific auth handler?
>
>
>
> ________________________________
> > Date: Mon, 10 Dec 2007 07:04:52 +1100
> > From: graham.dumpleton@gmail.com
> > To: drunkirishmic420@hotmail.com
> > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > CC: mlopes@orangeway.org; mod_python@modpython.org
>
> >
> > REMOTE_USER in PHP should be the same as req.user in mod_python.
> >
> > The req.user attribute actually is 'user' attribute of internal Apache
> > request_rec structure. It is this value that is used to set
> > REMOTE_USER in CGI variable environments and presumably PHP.
> >
> > This attribute isn't restricted to just HTTP Basic/Digest
> > authentication. Any authentication handler should be setting it
> > correctly, whether that be some special Windows specific
> > authentication mechanism or otherwise.
> >
> > Do you have a Windows specific authentication handler enabled in your
> > Apache configuration?
> >
> > Graham
> >
> > On 10/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> > >
> > > yes Marco, that is the user i am trying to retrieve. If it's not
> possible
> > > to get with apache/mod_python then its back to IIS i go :)
> > >
> > > Thanks guys
> > >
> > >
> > >
> > > ________________________________
> > > Date: Sun, 9 Dec 2007 12:55:01 +0000
> > > From: mlopes@orangeway.org
> > > To: graham.dumpleton@gmail.com
> > > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > > CC: drunkirishmic420@hotmail.com; mod_python@modpython.org
> > >
> > >
> > > I'm guessing you're both talking about different things. I'm new to
> > > mod_python but I'd say req.user is the HTTP user, the user given when
> the
> > > user is prompt for authentication by apache.
> > > The "user" Brett is asking about is the username of the user logged in a
> > > remote windows machine, wich I'd say he'd never be able to get cause the
> > > client will never send it to the server side for security and privacy
> > > reasons.
> > >
> > > On 12/9/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > > It should be set if an Apache authentication handler has actually
> > > authorised a user. If it isn't being set, then the URL isn't being
> > > authenticated or the authentication handler isn't compliant and doing
> > > what is expected of an Apache authentication handler.
> > >
> > > What is the actual authentication handler you are using? What handler
> > > phase are you trying to access this attribute?
> > >
> > > Please use reply-all to keep discussion on the mailing list.
> > >
> > > Graham
> > >
> > > On 09/12/2007, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> > > >
> > > > i checked that one, but it is always None. Is there something in the
> > > apache
> > > > config i need to set first?
> > > >
> > > >
> > > >
> > > > ________________________________
> > > > > Date: Sun, 9 Dec 2007 15:36:31 +1100
> > > > > From: graham.dumpleton@gmail.com
> > > > > To: drunkirishmic420@hotmail.com
> > > > > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > > > > CC: mod_python@modpython.org
> > > >
> > > > >
> > > > > Use:
> > > > >
> > > > > req.user
> > > > >
> > > > > Graham
> > > > >
> > > > > On 09/12/2007, Brett Dixon < drunkirishmic420@hotmail.com> wrote:
> > > > > >
> > > > > > I'm not sure if this is a mod_python specific question or if it
> should
> > > > be
> > > > > > asked on the apache list. But is there any way to get the username
> of
> > > > the
> > > > > > currently logged in user from Windows. In PHP you could just snag
> > > > > > REMOTE_USER or AUTH_USER. I guess I'm just not sure how to get
> this
> > > info
> > > > or
> > > > > > if i need to run another module in order for this information to
> be
> > > > > > available.
> > > > > >
> > > > > > Thanks
> > > > > >
> > > > > > ________________________________
> > > > > > Get the power of Windows + Web with the new Windows Live. Power
> up!
> > > > > > _______________________________________________
> > > > > > Mod_python mailing list
> > > > > > Mod_python@modpython.org
> > > > > >
> > > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > >
> > > > > >
> > > >
> > > > ________________________________
> > > > Share life as it happens with the new Windows Live. Share now!
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> > > ________________________________
> > > Your smile counts. The more smiles you share, the more we donate. Join
> in!
>
> ________________________________
> Share life as it happens with the new Windows Live. Share now!
From hackeron at gmail.com  Sun Dec  9 23:03:58 2007
From: hackeron at gmail.com (Roman Gaufman)
Date: Sun Dec  9 23:04:07 2007
Subject: [mod_python] Include directive with variable for filename
Message-ID: <94A3FA72-3FAE-42B2-868D-256B7AF253C6@gmail.com>

Dear mod_python mailinglist,

I'm trying to do:

  <%@ include file=filename %>

filename being a variable defined earlier as code but it won't work  
unless I use a string for file.

I also tried string formatting:

<%@ include file="%s" % filename %>

Which throws an exception :(

Is there any work around to pass a variable to the include directive?

Roman
From scarfboy at gmail.com  Sun Dec  9 23:23:27 2007
From: scarfboy at gmail.com (Bart)
Date: Sun Dec  9 23:23:33 2007
Subject: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
Message-ID: <b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com>

On Dec 10, 2007 2:31 AM, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
>
> In my python handler Directory directive, i have the AuthTpye set to basic,
> but thats about it.  I have tried "ntlm" but that hasnt done much.  Is there
> a windows specific auth handler?
HTTP auth has nothing to do with the operating system.


It seems to me you're confused about what you're asking. I certainly am :)
The fact that you said 'yes' to an either-or summary didn't help.


At first I figured you wanted to fetch the username that windows users use
for their  profile. However, I doubt this is your actual question,
because as far as I know, no setup at all does this. It'd be a privacy issue.


Your mention of moving back to IIS to get the feature makes me think
that you are thinking of checking the username/password that the user
gives the web server (exchanged via http auth) against an existing windows
domain controller (or similar) you have near your web server.

This is possible, but the http authtype is unrelated to this - the two forms
of authtype refer to how HTTP exchanges the authentication. A
browser-server thing, unrelated to what happens once the login
arrives at the server.

You can use one of various apache modules to make a particular
subsystem/server do the actual authentication (exactly which depends
on your wishes and setup. the one Graham mentioned is one of them).


In either case, we could be more effective if you described your wishes
and intent in a little more detail.

--Bart
From drunkirishmic420 at hotmail.com  Sun Dec  9 23:55:54 2007
From: drunkirishmic420 at hotmail.com (Brett Dixon)
Date: Sun Dec  9 23:56:01 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl> 
	<b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com>
Message-ID: <BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl>

Graham gave me a tip on a module and I will try that.  But i will give a more detailed description of my goal :)

At work, we have a domain.  Users will log onto a machine with a user/pass on that domain.  I need to get that username, so i can use that as the website credentials.  This removes this responsibility from me and also allows them to "login" transparently.
On a previous project, i was using IIS 6 and PHP.  I was able to get the username from the REMOTE_USER or AUTH_USER environment variable, as seen from phpinfo().  So i am looking for a way to get at this info with apache/python.

I hope thats a better description, sorry for my ambiguity before :)



> Date: Mon, 10 Dec 2007 05:23:27 +0100
> From: scarfboy@gmail.com
> To: mod_python@modpython.org
> Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> 
> On Dec 10, 2007 2:31 AM, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> >
> > In my python handler Directory directive, i have the AuthTpye set to basic,
> > but thats about it.  I have tried "ntlm" but that hasnt done much.  Is there
> > a windows specific auth handler?
> HTTP auth has nothing to do with the operating system.
> 
> 
> It seems to me you're confused about what you're asking. I certainly am :)
> The fact that you said 'yes' to an either-or summary didn't help.
> 
> 
> At first I figured you wanted to fetch the username that windows users use
> for their  profile. However, I doubt this is your actual question,
> because as far as I know, no setup at all does this. It'd be a privacy issue.
> 
> 
> Your mention of moving back to IIS to get the feature makes me think
> that you are thinking of checking the username/password that the user
> gives the web server (exchanged via http auth) against an existing windows
> domain controller (or similar) you have near your web server.
> 
> This is possible, but the http authtype is unrelated to this - the two forms
> of authtype refer to how HTTP exchanges the authentication. A
> browser-server thing, unrelated to what happens once the login
> arrives at the server.
> 
> You can use one of various apache modules to make a particular
> subsystem/server do the actual authentication (exactly which depends
> on your wishes and setup. the one Graham mentioned is one of them).
> 
> 
> In either case, we could be more effective if you described your wishes
> and intent in a little more detail.
> 
> --Bart
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

_________________________________________________________________
Your smile counts. The more smiles you share, the more we donate.? Join in.
www.windowslive.com/smile?ocid=TXT_TAGLM_Wave2_oprsmilewlhmtagline
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/314df170/attachment.html
From drunkirishmic420 at hotmail.com  Mon Dec 10 01:36:08 2007
From: drunkirishmic420 at hotmail.com (Brett Dixon)
Date: Mon Dec 10 01:36:15 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W293E554788155BDB82EBE0916A0@phx.gbl>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl> 
	<b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com> 
	<BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl>
Message-ID: <BAY124-W183161A7F0AF69D22E73A4916B0@phx.gbl>

ok, it looks like the mod_sspi module was the ticket.  This is getting some of the info i need and looks like im on the right track so i will continue to tweak the server config.  Thanks for the help guys, much appreciated!



From: drunkirishmic420@hotmail.com
To: scarfboy@gmail.com; mod_python@modpython.org
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
Date: Sun, 9 Dec 2007 20:55:54 -0800
CC: 







Graham gave me a tip on a module and I will try that.  But i will give a more detailed description of my goal :)

At work, we have a domain.  Users will log onto a machine with a user/pass on that domain.  I need to get that username, so i can use that as the website credentials.  This removes this responsibility from me and also allows them to "login" transparently.
On a previous project, i was using IIS 6 and PHP.  I was able to get the username from the REMOTE_USER or AUTH_USER environment variable, as seen from phpinfo().  So i am looking for a way to get at this info with apache/python.

I hope thats a better description, sorry for my ambiguity before :)



> Date: Mon, 10 Dec 2007 05:23:27 +0100
> From: scarfboy@gmail.com
> To: mod_python@modpython.org
> Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> 
> On Dec 10, 2007 2:31 AM, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> >
> > In my python handler Directory directive, i have the AuthTpye set to basic,
> > but thats about it.  I have tried "ntlm" but that hasnt done much.  Is there
> > a windows specific auth handler?
> HTTP auth has nothing to do with the operating system.
> 
> 
> It seems to me you're confused about what you're asking. I certainly am :)
> The fact that you said 'yes' to an either-or summary didn't help.
> 
> 
> At first I figured you wanted to fetch the username that windows users use
> for their  profile. However, I doubt this is your actual question,
> because as far as I know, no setup at all does this. It'd be a privacy issue.
> 
> 
> Your mention of moving back to IIS to get the feature makes me think
> that you are thinking of checking the username/password that the user
> gives the web server (exchanged via http auth) against an existing windows
> domain controller (or similar) you have near your web server.
> 
> This is possible, but the http authtype is unrelated to this - the two forms
> of authtype refer to how HTTP exchanges the authentication. A
> browser-server thing, unrelated to what happens once the login
> arrives at the server.
> 
> You can use one of various apache modules to make a particular
> subsystem/server do the actual authentication (exactly which depends
> on your wishes and setup. the one Graham mentioned is one of them).
> 
> 
> In either case, we could be more effective if you described your wishes
> and intent in a little more detail.
> 
> --Bart
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

Your smile counts. The more smiles you share, the more we donate. Join in!

_________________________________________________________________
Put your friends on the big screen with Windows Vista? + Windows Live?.
http://www.microsoft.com/windows/shop/specialoffers.mspx?ocid=TXT_TAGLM_CPC_MediaCtr_bigscreen_102007
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071209/1d80f04c/attachment-0001.html
From nitinchandra1 at gmail.com  Mon Dec 10 04:32:02 2007
From: nitinchandra1 at gmail.com (nitin chandra)
Date: Mon Dec 10 04:32:08 2007
Subject: [mod_python] PLEASE guide
Message-ID: <965122bf0712100132h38015759rf242406b6c14e125@mail.gmail.com>

Hello Everyone,


I wrote this script below, it is installed in '/var/www/html/lr' directory.
Installed are Apache 2, mod_python2.2, and postgreSQL8.2 and python 2.4


=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X

from mod_python import apache
import psycopg2

template = """<html>
<head><title>Candidates' Details Entered</title></head>
<body bgcolor="#87CEFA">
<H1 ALIGN="CENTER"/><U/>Candidates' Details Entered</U/></H1/>
<table align=left border=2 cellpadding=6>
%s
</table>
</body>
</head>"""

def query(req, query, rows=[]):
    conn = psycopg2.connect('user=nitin dbname=nitin')
    curs = conn.cursor()
    curs.execute( 'SELECT * FROM area' ) ## Running this line from
command prompt, it works.
    rows = curs.fetchall()

    req.content_type='text/html'

    outp= ""
    outp += '<tr><td>First Name Entered:&nbsp %s</td></tr>' %(rows)

    req.write(template % outp)
    return apache.OK

=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=

Running the application from Apache i get the following error.

"NOT FOUND"
"The requested URL /test/testlr.py was not found on this server."
"Apache/2.0.52 (MostlyLinux) Server at localhost Port 80"


Please guide.

TIA.
Nitin
From graham.dumpleton at gmail.com  Mon Dec 10 04:42:15 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Dec 10 04:42:23 2007
Subject: [mod_python] PLEASE guide
In-Reply-To: <965122bf0712100132h38015759rf242406b6c14e125@mail.gmail.com>
References: <965122bf0712100132h38015759rf242406b6c14e125@mail.gmail.com>
Message-ID: <88e286470712100142o464698bdvdbab71586ed7424@mail.gmail.com>

There is no mod_python 2.2. The latest and best version to use is 3.3.1.

Start out with a hello world program by following:

  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking

This uses a basic mod_python handler, but will at least ensure you
have Apache configured properly to run mod_python.

Since you appear to want to use mod_python.publisher, then  perhaps
work through:

  http://webpython.codepoint.net/mod_python

Graham

On 10/12/2007, nitin chandra <nitinchandra1@gmail.com> wrote:
> Hello Everyone,
>
>
> I wrote this script below, it is installed in '/var/www/html/lr' directory.
> Installed are Apache 2, mod_python2.2, and postgreSQL8.2 and python 2.4
>
>
> =X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X
>
> from mod_python import apache
> import psycopg2
>
> template = """<html>
> <head><title>Candidates' Details Entered</title></head>
> <body bgcolor="#87CEFA">
> <H1 ALIGN="CENTER"/><U/>Candidates' Details Entered</U/></H1/>
> <table align=left border=2 cellpadding=6>
> %s
> </table>
> </body>
> </head>"""
>
> def query(req, query, rows=[]):
>     conn = psycopg2.connect('user=nitin dbname=nitin')
>     curs = conn.cursor()
>     curs.execute( 'SELECT * FROM area' ) ## Running this line from
> command prompt, it works.
>     rows = curs.fetchall()
>
>     req.content_type='text/html'
>
>     outp= ""
>     outp += '<tr><td>First Name Entered:&nbsp %s</td></tr>' %(rows)
>
>     req.write(template % outp)
>     return apache.OK
>
> =X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=X=
>
> Running the application from Apache i get the following error.
>
> "NOT FOUND"
> "The requested URL /test/testlr.py was not found on this server."
> "Apache/2.0.52 (MostlyLinux) Server at localhost Port 80"
>
>
> Please guide.
>
> TIA.
> Nitin
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From edgardalvescosta at gmail.com  Tue Dec 11 06:05:05 2007
From: edgardalvescosta at gmail.com (EdgardCosta)
Date: Tue Dec 11 06:05:18 2007
Subject: [mod_python] Add mod_python function on a web server wrote in python
Message-ID: <1197371105.7855.12.camel@ednote>

Mod_Python's friends

Can I or not make the functions of mod_python run in a web server wrote
in python. Or the mod_python functions is exclusvity of Apache?



-- 
EdgardCosta <edgardalvescosta@gmail.com>

From scarfboy at gmail.com  Tue Dec 11 11:08:18 2007
From: scarfboy at gmail.com (Bart)
Date: Tue Dec 11 11:08:28 2007
Subject: [mod_python] Add mod_python function on a web server wrote in
	python
In-Reply-To: <1197371105.7855.12.camel@ednote>
References: <1197371105.7855.12.camel@ednote>
Message-ID: <b71082d80712110808y2447e25ay857753a18925dc59@mail.gmail.com>

> Can I or not make the functions of mod_python run in a web server wrote
> in python. Or the mod_python functions is exclusvity of Apache?

mod_python itself is an apache module - it's integrated and relies on
apache for some of its functionality, so can't run without it.

If you're looking to port handler code currently written for m_p
to something else, that may be easy enough to do if it doesn't
use apache via m_p, and is otherwise not entangled.

--Bart
From mlopes at orangeway.org  Tue Dec 11 14:08:40 2007
From: mlopes at orangeway.org (Marco Lopes)
Date: Tue Dec 11 14:08:47 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
	<b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com>
	<BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl>
Message-ID: <ddb7d9250712111108w18bcff4exbb99bc7532894a3b@mail.gmail.com>

Be carefull with that, if you rely only on some string sent in an http
request from a client application (in this case a username sent by the
browser) it won't be hard for someone with a little knowledge of the http
protocol to send a fake username.

On 12/10/07, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
>
> Graham gave me a tip on a module and I will try that.  But i will give a
> more detailed description of my goal :)
>
> At work, we have a domain.  Users will log onto a machine with a user/pass
> on that domain.  I need to get that username, so i can use that as the
> website credentials.  This removes this responsibility from me and also
> allows them to "login" transparently.
> On a previous project, i was using IIS 6 and PHP.  I was able to get the
> username from the REMOTE_USER or AUTH_USER environment variable, as seen
> from phpinfo().  So i am looking for a way to get at this info with
> apache/python.
>
> I hope thats a better description, sorry for my ambiguity before :)
>
>
>
> ------------------------------
> > Date: Mon, 10 Dec 2007 05:23:27 +0100
> > From: scarfboy@gmail.com
> > To: mod_python@modpython.org
> > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> >
> > On Dec 10, 2007 2:31 AM, Brett Dixon <drunkirishmic420@hotmail.com>
> wrote:
> > >
> > > In my python handler Directory directive, i have the AuthTpye set to
> basic,
> > > but thats about it. I have tried "ntlm" but that hasnt done much. Is
> there
> > > a windows specific auth handler?
> > HTTP auth has nothing to do with the operating system.
> >
> >
> > It seems to me you're confused about what you're asking. I certainly am
> :)
> > The fact that you said 'yes' to an either-or summary didn't help.
> >
> >
> > At first I figured you wanted to fetch the username that windows users
> use
> > for their profile. However, I doubt this is your actual question,
> > because as far as I know, no setup at all does this. It'd be a privacy
> issue.
> >
> >
> > Your mention of moving back to IIS to get the feature makes me think
> > that you are thinking of checking the username/password that the user
> > gives the web server (exchanged via http auth) against an existing
> windows
> > domain controller (or similar) you have near your web server.
> >
> > This is possible, but the http authtype is unrelated to this - the two
> forms
> > of authtype refer to how HTTP exchanges the authentication. A
> > browser-server thing, unrelated to what happens once the login
> > arrives at the server.
> >
> > You can use one of various apache modules to make a particular
> > subsystem/server do the actual authentication (exactly which depends
> > on your wishes and setup. the one Graham mentioned is one of them).
> >
> >
> > In either case, we could be more effective if you described your wishes
> > and intent in a little more detail.
> >
> > --Bart
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
> ------------------------------
> Your smile counts. The more smiles you share, the more we donate. Join in!<http://www.windowslive.com/smile?ocid=TXT_TAGLM_Wave2_oprsmilewlhmtagline>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071211/fba1ada1/attachment.html
From greg at vig.co.nz  Tue Dec 11 15:04:41 2007
From: greg at vig.co.nz (Greg Fawcett)
Date: Tue Dec 11 15:04:49 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <ddb7d9250712111108w18bcff4exbb99bc7532894a3b@mail.gmail.com>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
	<b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com>
	<BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl>
	<ddb7d9250712111108w18bcff4exbb99bc7532894a3b@mail.gmail.com>
Message-ID: <928306280712111204ke9fa83cyafe7b191d1756cb7@mail.gmail.com>

Hi -

I have absolutely no knowledge of Windows authentication, but I wonder if
you could craft some client-side javascript to put the windows username into
a hidden variable. I use this technique to make my online apps show times in
the timezone of the browser, but it would depend on windows browsers
providing access to the username.

Cheers!
Greg.

On 12/12/2007, Marco Lopes <mlopes@orangeway.org> wrote:
>
> Be carefull with that, if you rely only on some string sent in an http
> request from a client application (in this case a username sent by the
> browser) it won't be hard for someone with a little knowledge of the http
> protocol to send a fake username.
>
> On 12/10/07, Brett Dixon <drunkirishmic420@hotmail.com> wrote:
> >
> > Graham gave me a tip on a module and I will try that.  But i will give a
> > more detailed description of my goal :)
> >
> > At work, we have a domain.  Users will log onto a machine with a
> > user/pass on that domain.  I need to get that username, so i can use that as
> > the website credentials.  This removes this responsibility from me and also
> > allows them to "login" transparently.
> > On a previous project, i was using IIS 6 and PHP.  I was able to get the
> > username from the REMOTE_USER or AUTH_USER environment variable, as seen
> > from phpinfo().  So i am looking for a way to get at this info with
> > apache/python.
> >
> > I hope thats a better description, sorry for my ambiguity before :)
> >
> >
> >
> > ------------------------------
> > > Date: Mon, 10 Dec 2007 05:23:27 +0100
> > > From: scarfboy@gmail.com
> > > To: mod_python@modpython.org
> > > Subject: Re: [mod_python] getting Windows username (REMOTE_USER)
> > >
> > > On Dec 10, 2007 2:31 AM, Brett Dixon < drunkirishmic420@hotmail.com>
> > wrote:
> > > >
> > > > In my python handler Directory directive, i have the AuthTpye set to
> > basic,
> > > > but thats about it. I have tried "ntlm" but that hasnt done much. Is
> > there
> > > > a windows specific auth handler?
> > > HTTP auth has nothing to do with the operating system.
> > >
> > >
> > > It seems to me you're confused about what you're asking. I certainly
> > am :)
> > > The fact that you said 'yes' to an either-or summary didn't help.
> > >
> > >
> > > At first I figured you wanted to fetch the username that windows users
> > use
> > > for their profile. However, I doubt this is your actual question,
> > > because as far as I know, no setup at all does this. It'd be a privacy
> > issue.
> > >
> > >
> > > Your mention of moving back to IIS to get the feature makes me think
> > > that you are thinking of checking the username/password that the user
> > > gives the web server (exchanged via http auth) against an existing
> > windows
> > > domain controller (or similar) you have near your web server.
> > >
> > > This is possible, but the http authtype is unrelated to this - the two
> > forms
> > > of authtype refer to how HTTP exchanges the authentication. A
> > > browser-server thing, unrelated to what happens once the login
> > > arrives at the server.
> > >
> > > You can use one of various apache modules to make a particular
> > > subsystem/server do the actual authentication (exactly which depends
> > > on your wishes and setup. the one Graham mentioned is one of them).
> > >
> > >
> > > In either case, we could be more effective if you described your
> > wishes
> > > and intent in a little more detail.
> > >
> > > --Bart
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> > ------------------------------
> > Your smile counts. The more smiles you share, the more we donate. Join
> > in!<http://www.windowslive.com/smile?ocid=TXT_TAGLM_Wave2_oprsmilewlhmtagline>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>


-- 
Phone: +64 3 409 8165
Mobile: +64 21 333 291
Fax: +64 3 974 6810
Web: www.vig.co.nz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071212/e9d6f0ac/attachment.html
From drunkirishmic420 at hotmail.com  Tue Dec 11 16:10:56 2007
From: drunkirishmic420 at hotmail.com (Brett Dixon)
Date: Tue Dec 11 16:11:02 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <ddb7d9250712111108w18bcff4exbb99bc7532894a3b@mail.gmail.com>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<88e286470712082036r7379f439s9adea045e1e5d898@mail.gmail.com>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
	<b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com>
	<BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl> 
	<ddb7d9250712111108w18bcff4exbb99bc7532894a3b@mail.gmail.com>
Message-ID: <BAY124-W329B964F821D99EAEE847E91640@phx.gbl>


its not really a high security app.  I am just using the username as a convenience.


Date: Tue, 11 Dec 2007 19:08:40 +0000
From: mlopes@orangeway.org
To: drunkirishmic420@hotmail.com
Subject: Re: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
CC: scarfboy@gmail.com; mod_python@modpython.org

Be carefull with that, if you rely only on some string sent in an http request from a client application (in this case a username sent by the browser) it won't be hard for someone with a little knowledge of the http protocol to send a fake username.


On 12/10/07, Brett Dixon <drunkirishmic420@hotmail.com> wrote:




Graham gave me a tip on a module and I will try that.  But i will give a more detailed description of my goal :)

At work, we have a domain.  Users will log onto a machine with a user/pass on that domain.  I need to get that username, so i can use that as the website credentials.  This removes this responsibility from me and also allows them to "login" transparently.

On a previous project, i was using IIS 6 and PHP.  I was able to get the username from the REMOTE_USER or AUTH_USER environment variable, as seen from phpinfo().  So i am looking for a way to get at this info with apache/python.


I hope thats a better description, sorry for my ambiguity before :)



> Date: Mon, 10 Dec 2007 05:23:27 +0100
> From: 
scarfboy@gmail.com
> To: mod_python@modpython.org
> Subject: Re: [mod_python] getting Windows username (REMOTE_USER)

> 
> On Dec 10, 2007 2:31 AM, Brett Dixon <
drunkirishmic420@hotmail.com> wrote:
> >
> > In my python handler Directory directive, i have the AuthTpye set to basic,
> > but thats about it.  I have tried "ntlm" but that hasnt done much.  Is there

> > a windows specific auth handler?
> HTTP auth has nothing to do with the operating system.
> 
> 
> It seems to me you're confused about what you're asking. I certainly am :)

> The fact that you said 'yes' to an either-or summary didn't help.
> 
> 
> At first I figured you wanted to fetch the username that windows users use
> for their  profile. However, I doubt this is your actual question,

> because as far as I know, no setup at all does this. It'd be a privacy issue.
> 
> 
> Your mention of moving back to IIS to get the feature makes me think
> that you are thinking of checking the username/password that the user

> gives the web server (exchanged via http auth) against an existing windows
> domain controller (or similar) you have near your web server.
> 
> This is possible, but the http authtype is unrelated to this - the two forms

> of authtype refer to how HTTP exchanges the authentication. A
> browser-server thing, unrelated to what happens once the login
> arrives at the server.
> 
> You can use one of various apache modules to make a particular

> subsystem/server do the actual authentication (exactly which depends
> on your wishes and setup. the one Graham mentioned is one of them).
> 
> 
> In either case, we could be more effective if you described your wishes

> and intent in a little more detail.
> 
> --Bart
> _______________________________________________
> Mod_python mailing list
> 
Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


Your smile counts. The more smiles you share, the more we donate. 
Join in!

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org

http://mailman.modpython.org/mailman/listinfo/mod_python




_________________________________________________________________
Get the power of Windows + Web with the new Windows Live.
http://www.windowslive.com?ocid=TXT_TAGHM_Wave2_powerofwindows_122007
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071211/a5f9e0f0/attachment-0001.html
From graham.dumpleton at gmail.com  Tue Dec 11 16:53:14 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Dec 11 16:53:20 2007
Subject: [mod_python] Add mod_python function on a web server wrote in
	python
In-Reply-To: <b71082d80712110808y2447e25ay857753a18925dc59@mail.gmail.com>
References: <1197371105.7855.12.camel@ednote>
	<b71082d80712110808y2447e25ay857753a18925dc59@mail.gmail.com>
Message-ID: <88e286470712111353w1c2eb0e3r9852d20d46f2f2a3@mail.gmail.com>

If you need portability, then use WSGI as a basis for your
application. That way you can run it on mod_python, mod_wsgi, cgi,
fastcgi, scgi or plain old Python web servers.

Graham

On 12/12/2007, Bart <scarfboy@gmail.com> wrote:
> > Can I or not make the functions of mod_python run in a web server wrote
> > in python. Or the mod_python functions is exclusvity of Apache?
>
> mod_python itself is an apache module - it's integrated and relies on
> apache for some of its functionality, so can't run without it.
>
> If you're looking to port handler code currently written for m_p
> to something else, that may be easy enough to do if it doesn't
> use apache via m_p, and is otherwise not entangled.
>
> --Bart
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From hackeron at gmail.com  Wed Dec 12 08:11:07 2007
From: hackeron at gmail.com (Roman Gaufman)
Date: Wed Dec 12 08:11:23 2007
Subject: [mod_python] Re: Include directive with variable for filename
In-Reply-To: <94A3FA72-3FAE-42B2-868D-256B7AF253C6@gmail.com>
References: <94A3FA72-3FAE-42B2-868D-256B7AF253C6@gmail.com>
Message-ID: <1682EDA2-69C1-4601-85E3-CCA149183081@gmail.com>

No one has any ideas/suggestions? :(

Roman

On 10 Dec 2007, at 04:03, Roman Gaufman wrote:

> Dear mod_python mailinglist,
>
> I'm trying to do:
>
> <%@ include file=filename %>
>
> filename being a variable defined earlier as code but it won't work  
> unless I use a string for file.
>
> I also tried string formatting:
>
> <%@ include file="%s" % filename %>
>
> Which throws an exception :(
>
> Is there any work around to pass a variable to the include directive?
>
> Roman

From hackeron at gmail.com  Wed Dec 12 11:51:26 2007
From: hackeron at gmail.com (Roman Gaufman)
Date: Wed Dec 12 11:51:35 2007
Subject: [mod_python] Re: Include directive with variable for filename
In-Reply-To: <1682EDA2-69C1-4601-85E3-CCA149183081@gmail.com>
References: <94A3FA72-3FAE-42B2-868D-256B7AF253C6@gmail.com>
	<1682EDA2-69C1-4601-85E3-CCA149183081@gmail.com>
Message-ID: <07298AAE-B370-4010-899C-F4939252B8FA@gmail.com>

I'm currently doing:

content_file = PSP(req, filename=myfilename)
content_file.run()

If there is anyway to do the same with include or a cleaner way to  
achieve the same otherwise, any information would be very appreciated.

Roman

On 12 Dec 2007, at 13:11, Roman Gaufman wrote:

> No one has any ideas/suggestions? :(
>
> Roman
>
> On 10 Dec 2007, at 04:03, Roman Gaufman wrote:
>
>> Dear mod_python mailinglist,
>>
>> I'm trying to do:
>>
>> <%@ include file=filename %>
>>
>> filename being a variable defined earlier as code but it won't work  
>> unless I use a string for file.
>>
>> I also tried string formatting:
>>
>> <%@ include file="%s" % filename %>
>>
>> Which throws an exception :(
>>
>> Is there any work around to pass a variable to the include directive?
>>
>> Roman
>

From graham.dumpleton at gmail.com  Wed Dec 12 15:53:39 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Dec 12 16:53:52 2007
Subject: [mod_python] Re: Include directive with variable for filename
In-Reply-To: <07298AAE-B370-4010-899C-F4939252B8FA@gmail.com>
References: <94A3FA72-3FAE-42B2-868D-256B7AF253C6@gmail.com>
	<1682EDA2-69C1-4601-85E3-CCA149183081@gmail.com>
	<07298AAE-B370-4010-899C-F4939252B8FA@gmail.com>
Message-ID: <88e286470712121253h13352d99j52fe24a53f4ad136@mail.gmail.com>

It cannot be done using 'include' as it expects a literal string. From
the PSP lexer:

  <DIR>"include"[ ]+"file"[ ]?=[ ]?"\""[^ ]+"\"" {

The way you are doing it is from memory more or less how people do it
dynamically.

Graham

On 13/12/2007, Roman Gaufman <hackeron@gmail.com> wrote:
> I'm currently doing:
>
> content_file = PSP(req, filename=myfilename)
> content_file.run()
>
> If there is anyway to do the same with include or a cleaner way to
> achieve the same otherwise, any information would be very appreciated.
>
> Roman
>
> On 12 Dec 2007, at 13:11, Roman Gaufman wrote:
>
> > No one has any ideas/suggestions? :(
> >
> > Roman
> >
> > On 10 Dec 2007, at 04:03, Roman Gaufman wrote:
> >
> >> Dear mod_python mailinglist,
> >>
> >> I'm trying to do:
> >>
> >> <%@ include file=filename %>
> >>
> >> filename being a variable defined earlier as code but it won't work
> >> unless I use a string for file.
> >>
> >> I also tried string formatting:
> >>
> >> <%@ include file="%s" % filename %>
> >>
> >> Which throws an exception :(
> >>
> >> Is there any work around to pass a variable to the include directive?
> >>
> >> Roman
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From scarfboy at gmail.com  Wed Dec 12 15:56:45 2007
From: scarfboy at gmail.com (Bart)
Date: Wed Dec 12 16:58:24 2007
Subject: [SPAM] RE: [mod_python] getting Windows username (REMOTE_USER)
In-Reply-To: <ddb7d9250712111108w18bcff4exbb99bc7532894a3b@mail.gmail.com>
References: <mailman.16405.1197169128.9081.mod_python@modpython.org>
	<BAY124-W27C949FE7BE5AEA03EE9E0916A0@phx.gbl>
	<88e286470712082229m22a14405q97737ab8d7ea38e9@mail.gmail.com>
	<ddb7d9250712090455od1bf6f3xde90eb174af0feca@mail.gmail.com>
	<BAY124-W259388AC4966059087F7CF916A0@phx.gbl>
	<88e286470712091204r72e00124w76edda7d12494d7f@mail.gmail.com>
	<BAY124-W37C1CF531F3B5D548DED6D916B0@phx.gbl>
	<b71082d80712092023q2984e51cub48d75d5dd22156@mail.gmail.com>
	<BAY124-W43B10DF40B6BFFD044769916B0@phx.gbl>
	<ddb7d9250712111108w18bcff4exbb99bc7532894a3b@mail.gmail.com>
Message-ID: <b71082d80712121256i6defca28hf76842a25753341f@mail.gmail.com>

> > Graham gave me a tip on a module and I will try that.  But i will give a
> more detailed description of my goal :)
> >
> > At work, we have a domain.  Users will log onto a machine with a user/pass
> on that domain.  I need to get that username, so i can use that as the
> website credentials.  This removes this responsibility from me and also
> allows them to "login" transparently.
> > On a previous project, i was using IIS 6 and PHP.  I was able to get the
> username from the REMOTE_USER or AUTH_USER environment variable, as seen
> from phpinfo().  So i am looking for a way to get at this info with
> apache/python.

The remote user should be fetchable in anything under the sun,
so I don't really get what the problem actually is (was?).

(As I recall, unless the server requests and does actual HTTP auth
 (that dialog asking for user/pass, in most cases), the login
 values you used won't make it to the auth variables even
 if you send it, but that seems to apply to PHP too, so isn't
 relevant as it was working before too.)

But you probably know this, since you had it working before.
And apparently now too, since you seem to have moved on
to actually using the login values...


(Note: I was confused partly because I didn't think  it would be possible
 for a browser to access the environment to fetch the username,
 which made me wonder what exactly you were asking.
 It seems that Internet Explorer will allow it via ActiveX and
 some relaxed security settings, which is probably what you're using.
 Interesting.)

--Bart
From drshade at gmail.com  Thu Dec 13 02:58:07 2007
From: drshade at gmail.com (Tom Wells)
Date: Thu Dec 13 02:58:13 2007
Subject: [mod_python] Singleton Object
Message-ID: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>

Hi everyone,

I've been evaluating mod_python to implement a particular set of
requirements, and am now convinced that it is going to work for me, however
I have one remaining problem to solve:

I need to be able to spawn a single "watchdog" thread within my module which
connects back to a central server (via webservice calls) to provide
monitoring data, plus synchronize certain session data. I need to support
apache2.2 running in worker mpm (on linux platform), as well as winnt. In
the winnt deployment it's easy to spawn a single thread, as i can do this
the first time my module imports, but in worker mpm my module is imported
for each apache process started (I haven't actually tested the winnt side so
it's an assumption after some heavy reading up on the apache threading
models).

After some research with the C apache api I've noticed a hook called
"ap_hook_post_config" which seems like a good place to spawn singleton
objects, but I couldn't track this down in the mod_python hooks, nor have I
actually tried it with the C api, so I could be very wrong!

I've also taken a look at the mod_python Session bits, hoping to be able to
possibly set a global flag somewhere so that further module imports don't
spawn more threads, but I need something which is non-persistent (so if
apache restarts that cache is cleared, which I get from the MemorySession,
except I can't share this across processes, catch-22).

Anyways, any suggestions would be greatly appreciated!

Thanks,
Tom


-- 
http://www.tomwells.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071213/cc195c39/attachment.html
From graham.dumpleton at gmail.com  Thu Dec 13 03:13:04 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 13 03:13:10 2007
Subject: [mod_python] Singleton Object
In-Reply-To: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
Message-ID: <88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>

On 13/12/2007, Tom Wells <drshade@gmail.com> wrote:
> Hi everyone,
>
> I've been evaluating mod_python to implement a particular set of
> requirements, and am now convinced that it is going to work for me, however
> I have one remaining problem to solve:
>
> I need to be able to spawn a single "watchdog" thread within my module which
> connects back to a central server (via webservice calls) to provide
> monitoring data, plus synchronize certain session data. I need to support
> apache2.2 running in worker mpm (on linux platform), as well as winnt. In
> the winnt deployment it's easy to spawn a single thread, as i can do this
> the first time my module imports, but in worker mpm my module is imported
> for each apache process started (I haven't actually tested the winnt side so
> it's an assumption after some heavy reading up on the apache threading
> models).
>
> After some research with the C apache api I've noticed a hook called
> "ap_hook_post_config" which seems like a good place to spawn singleton
> objects, but I couldn't track this down in the mod_python hooks, nor have I
> actually tried it with the C api, so I could be very wrong!
>
> I've also taken a look at the mod_python Session bits, hoping to be able to
> possibly set a global flag somewhere so that further module imports don't
> spawn more threads, but I need something which is non-persistent (so if
> apache restarts that cache is cleared, which I get from the MemorySession,
> except I can't share this across processes, catch-22).
>
> Anyways, any suggestions would be greatly appreciated!

If you expect state to be available in each Apache child process when
run on UNIX, you cant avoid having multiple distinct connections back
to the back end system to collect the data. Playing with the C API
post config hook isn't going to help you.

If a connection from each Apache child process is okay, then use
PythonImport directive to import a module on process startup which
does any once of initialisation.

Graham
From drshade at gmail.com  Thu Dec 13 03:57:12 2007
From: drshade at gmail.com (Tom Wells)
Date: Thu Dec 13 03:57:19 2007
Subject: [mod_python] Singleton Object
In-Reply-To: <88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
	<88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>
Message-ID: <ed756d900712130057q1660c065ie4ac2536c5d8cf0e@mail.gmail.com>

On Dec 13, 2007 10:13 AM, Graham Dumpleton <graham.dumpleton@gmail.com>
wrote:

>
> If you expect state to be available in each Apache child process when
> run on UNIX, you cant avoid having multiple distinct connections back
> to the back end system to collect the data. Playing with the C API
> post config hook isn't going to help you.
>
> If a connection from each Apache child process is okay, then use
> PythonImport directive to import a module on process startup which
> does any once of initialisation.
>

Hi Graham - thanks for the quick reply!

Your response is what I expected (sharing of data between child processes),
just wanted to confirm the my understanding with the experts. Thanks, the
PythonImport is actually exactly what I need for the watchdog thread.

However, it should be possible to share state between apache child processes
by using something like memcached right?

Thanks,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071213/2272bdd0/attachment.html
From graham.dumpleton at gmail.com  Thu Dec 13 04:03:57 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 13 04:04:04 2007
Subject: [mod_python] Singleton Object
In-Reply-To: <ed756d900712130057q1660c065ie4ac2536c5d8cf0e@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
	<88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>
	<ed756d900712130057q1660c065ie4ac2536c5d8cf0e@mail.gmail.com>
Message-ID: <88e286470712130103o46667bb9x68645a36b0674336@mail.gmail.com>

On 13/12/2007, Tom Wells <drshade@gmail.com> wrote:
>
> On Dec 13, 2007 10:13 AM, Graham Dumpleton <graham.dumpleton@gmail.com>
> wrote:
> > If you expect state to be available in each Apache child process when
> > run on UNIX, you cant avoid having multiple distinct connections back
> > to the back end system to collect the data. Playing with the C API
> > post config hook isn't going to help you.
> >
> > If a connection from each Apache child process is okay, then use
> > PythonImport directive to import a module on process startup which
> > does any once of initialisation.
> >
>
> Hi Graham - thanks for the quick reply!
> Your response is what I expected (sharing of data between child processes),
> just wanted to confirm the my understanding with the experts. Thanks, the
> PythonImport is actually exactly what I need for the watchdog thread.
>
> However, it should be possible to share state between apache child processes
> by using something like memcached right?

Using memcached is certainly an option.

For a bit of information on sharing issues see:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

The only other away around it would be to not use mod_python specific
features and write your application as WSGI application instead. You
could then use mod_wsgi, with embedded mode used on Windows and on
UNIX systems use daemon mode with a single multitheaded daemon
processes.

You can compare how mod_wsgi is same/different to mod_python in
respect of process use at:

  http://code.google.com/p/modwsgi/wiki/ProcessesAndThreading

Graham
From drshade at gmail.com  Thu Dec 13 08:43:00 2007
From: drshade at gmail.com (Tom Wells)
Date: Thu Dec 13 08:43:09 2007
Subject: [mod_python] Singleton Object
In-Reply-To: <88e286470712130103o46667bb9x68645a36b0674336@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
	<88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>
	<ed756d900712130057q1660c065ie4ac2536c5d8cf0e@mail.gmail.com>
	<88e286470712130103o46667bb9x68645a36b0674336@mail.gmail.com>
Message-ID: <ed756d900712130543j6e58591et48d5370cad823880@mail.gmail.com>

On Dec 13, 2007 11:03 AM, Graham Dumpleton <graham.dumpleton@gmail.com>
wrote:

> The only other away around it would be to not use mod_python specific
> features and write your application as WSGI application instead. You
> could then use mod_wsgi, with embedded mode used on Windows and on
> UNIX systems use daemon mode with a single multitheaded daemon
> processes.
>
> You can compare how mod_wsgi is same/different to mod_python in
> respect of process use at:
>
>
Yep, WSGI sounds great, and actually would probably work very nicely in a
pure apache solution, my issue is that I need to build a similar adapter for
Windows IIS, so I think it may be best to work at a lower level such as
mod_python (and pywin32 for the IIS side).

Graham, thanks - you've been a huge help, it's great to know that there is
someone of your "caliber" supporting mod_python, it makes the choice of
using the technology far easier for me.

All the best for the festive season,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071213/8d7a48c1/attachment-0001.html
From graham.dumpleton at gmail.com  Thu Dec 13 21:17:15 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 13 21:17:25 2007
Subject: [mod_python] Singleton Object
In-Reply-To: <ed756d900712130543j6e58591et48d5370cad823880@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
	<88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>
	<ed756d900712130057q1660c065ie4ac2536c5d8cf0e@mail.gmail.com>
	<88e286470712130103o46667bb9x68645a36b0674336@mail.gmail.com>
	<ed756d900712130543j6e58591et48d5370cad823880@mail.gmail.com>
Message-ID: <88e286470712131817s4764df89mf1fe2d91d2996f90@mail.gmail.com>

On 14/12/2007, Tom Wells <drshade@gmail.com> wrote:
> On Dec 13, 2007 11:03 AM, Graham Dumpleton <graham.dumpleton@gmail.com>
> wrote:
>
> > The only other away around it would be to not use mod_python specific
> > features and write your application as WSGI application instead. You
> > could then use mod_wsgi, with embedded mode used on Windows and on
> > UNIX systems use daemon mode with a single multitheaded daemon
> > processes.
> >
> > You can compare how mod_wsgi is same/different to mod_python in
> > respect of process use at:
> >
> >
>
> Yep, WSGI sounds great, and actually would probably work very nicely in a
> pure apache solution, my issue is that I need to build a similar adapter for
> Windows IIS, so I think it may be best to work at a lower level such as
> mod_python (and pywin32 for the IIS side).

For WSGI on IIS see:

  http://code.google.com/p/isapi-wsgi/

That way you should be able to use the sam code base.

Graham
From drshade at gmail.com  Fri Dec 14 02:22:55 2007
From: drshade at gmail.com (Tom Wells)
Date: Fri Dec 14 02:23:04 2007
Subject: [mod_python] Singleton Object
In-Reply-To: <88e286470712131817s4764df89mf1fe2d91d2996f90@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
	<88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>
	<ed756d900712130057q1660c065ie4ac2536c5d8cf0e@mail.gmail.com>
	<88e286470712130103o46667bb9x68645a36b0674336@mail.gmail.com>
	<ed756d900712130543j6e58591et48d5370cad823880@mail.gmail.com>
	<88e286470712131817s4764df89mf1fe2d91d2996f90@mail.gmail.com>
Message-ID: <ed756d900712132322l6ce4cc21o6095286795ace94e@mail.gmail.com>

On Dec 14, 2007 4:17 AM, Graham Dumpleton <graham.dumpleton@gmail.com>
wrote:

> For WSGI on IIS see:
>
>  http://code.google.com/p/isapi-wsgi/
>
> That way you should be able to use the sam code base.
>

A huge piece of my module needs to be purely an authentication piece,
protecting either a set of jsp/servlet pages on apache, or aspx on IIS, thus
I only actually hook into AuthenHandler and/or AuthzHandler - I have no
requirement to actually handle dynamically creating pages etc (which I
assume is the typical WSGI usage scenario). On the IIS side I was planning
to look at pywin32 and build the same sort of functionality using the ISAPI
basic interface (HttpFilterProc and HttpExtensionProc hooks). The IIS
interfaces are far weaker than the apache side (especially when trying to
introduce a new Authentication Type) - but fortunately my requirements for
IIS support are simpler, and I plan to merely hijack the "Basic
Authentication" tick-box ;)

I do like the idea of WSGI, I just feel it's going to be more pain than what
it's worth for my particular scenario - plus I like the fact that mod_python
comes out the box with my target platforms (ubuntu & suse) and so far seems
really simple once you understand the apache behemoth.

One quick question - AuthenHandler vs. AuthzHandler? Docs are very light,
and seem to say they do a similar job - please could you elaborate?

Thanks again,
Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071214/83e813c7/attachment.html
From graham.dumpleton at gmail.com  Fri Dec 14 18:27:20 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec 14 18:27:29 2007
Subject: [mod_python] Singleton Object
In-Reply-To: <ed756d900712132322l6ce4cc21o6095286795ace94e@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
	<88e286470712130013i57e90cf4k26aba6086cbfee36@mail.gmail.com>
	<ed756d900712130057q1660c065ie4ac2536c5d8cf0e@mail.gmail.com>
	<88e286470712130103o46667bb9x68645a36b0674336@mail.gmail.com>
	<ed756d900712130543j6e58591et48d5370cad823880@mail.gmail.com>
	<88e286470712131817s4764df89mf1fe2d91d2996f90@mail.gmail.com>
	<ed756d900712132322l6ce4cc21o6095286795ace94e@mail.gmail.com>
Message-ID: <88e286470712141527g6e7b703egc77cfa15bf099547@mail.gmail.com>

On 14/12/2007, Tom Wells <drshade@gmail.com> wrote:
> On Dec 14, 2007 4:17 AM, Graham Dumpleton <graham.dumpleton@gmail.com>
> wrote:
>
> > For WSGI on IIS see:
> >
> >  http://code.google.com/p/isapi-wsgi/
> >
> > That way you should be able to use the sam code base.
> >
>
>  A huge piece of my module needs to be purely an authentication piece,
> protecting either a set of jsp/servlet pages on apache, or aspx on IIS, thus
> I only actually hook into AuthenHandler and/or AuthzHandler - I have no
> requirement to actually handle dynamically creating pages etc (which I
> assume is the typical WSGI usage scenario). On the IIS side I was planning
> to look at pywin32 and build the same sort of functionality using the ISAPI
> basic interface (HttpFilterProc and HttpExtensionProc hooks). The IIS
> interfaces are far weaker than the apache side (especially when trying to
> introduce a new Authentication Type) - but fortunately my requirements for
> IIS support are simpler, and I plan to merely hijack the "Basic
> Authentication" tick-box ;)
>
> I do like the idea of WSGI, I just feel it's going to be more pain than what
> it's worth for my particular scenario - plus I like the fact that mod_python
> comes out the box with my target platforms (ubuntu & suse) and so far seems
> really simple once you understand the apache behemoth.
>
> One quick question - AuthenHandler vs. AuthzHandler? Docs are very light,
> and seem to say they do a similar job - please could you elaborate?

Sorry, no time to explain, so better you have a good read of:

  http://www.fmc-modeling.org/category/projects/apache/amp/Apache_Modeling_Project.html

 http://www.fmc-modeling.org/category/projects/apache/amp/4_4Request_Response_Loop.html

  http://www.fmc-modeling.org/category/projects/apache/amp/3_3Extending_Apache.html

Graham
From grisha at modpython.org  Wed Dec 19 19:07:45 2007
From: grisha at modpython.org (Eric Kong)
Date: Wed Dec 19 19:08:02 2007
Subject: [mod_python] [SPAM] Great Product
Message-ID: <xfvzqsOBYPDgrisha@modpython.org>

At Our Store,  we specialize in the sales of 
brand name quality look alike  timepieces, 
at some of the great deals ever.

 15% off when you buy 2 or more watches
 Highest Quality Product 
 Exact Look as the real brand
 Choose From 800 models (  Gucci ,   Gucci ,   Gucci , )
 Choose over 600 Bags, WALLETS, Miscellanous Keychains ,Luggage Strap  
 very afoardable deal.

You are only click away..
http://www.selleko.com/



Thank you,
Thomas Lamers

 
Click to be removed. You will be removed within 8 8 Hours
http://www.selleko.com/remove/ 



From linux at qbox.es  Thu Dec 20 06:08:34 2007
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Thu Dec 20 06:08:49 2007
Subject: [mod_python] Problem with modules of the same name
In-Reply-To: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
Message-ID: <1198148914.6122.15.camel@ThorUx>

Hi All,

I'm trying to setup 2 modPython aplications with modpython.psp handler.
ModPython is 3.3 tha comes with ubuntu 7.10.

In both applications I have a module named users.py into the
path /modules inside of the root for the psp pages of the application.

I imported the module in the psp page with:

	import users 

When navigating the pages of each, the pages that loads the users
module, can load any of the modules of the same name, so it displays
users of the other application.


I have tried to use:

	apache.import_module('users' , path='modules') 

But doesn't resolve the problem.





Thank You for your help,


	S.R.Pard?
	QBox A.C.





From muganor at videotron.ca  Thu Dec 20 11:29:17 2007
From: muganor at videotron.ca (Charles Perreault)
Date: Thu Dec 20 11:29:25 2007
Subject: [mod_python] Problem with .psp_
Message-ID: <476A985D.5020407@videotron.ca>

Hello,

I'm teaching a class on web applications and I want my students to use 
mod_python.  They'll have a couple of assignments during the semester, 
all to be done in python cgi (first assignment, just to get started) and 
psp.  I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4 
(Ubuntu) mod_python/3.3.1 Python/2.5.1 Server).  All configuration have 
to be done on server / virtual host config, forget the .htaccess (way to 
much trouble for students).

My students will program their sites in their home folder 
(~/public_html).  I want them to be able to both use mod_python.psp and 
mod_python.publisher, as I'll show them to use the both methods to 
create web applications.  So far, I've easily been able to make both 
work in the same directory using the following configuration (on 
Debian/Ubuntu httpd.conf is splitted in multiple files, allowing to 
enable/disable modules easily) :

userdir.conf
----------------------
<IfModule mod_userdir.c>
       UserDir public_html
       UserDir disabled root

       <Directory /home/*/public_html>
               AllowOverride FileInfo AuthConfig Limit
               Options MultiViews Indexes SymLinksIfOwnerMatch 
IncludesNoExec

               AddHandler mod_python .py .psp .psp_
               PythonHandler mod_python.psp | .psp .psp_
               PythonHandler mod_python.publisher | .py
               PythonDebug On
       </Directory>
</IfModule>

So you see I'm trying to assign .psp and .psp_ to mod_python.psp and .py 
to publisher.  So http://localhost/~user/test.py and 
http://localhost/~user/test.psp both work.  However, psp debugging with 
the underscore trick (.psp_) don't work.  I get a 403 forbidden error 
when I try to access http://localhost/~user/test.psp_.

Of course, test.psp exists.  From what I read, test.psp_ don't need to 
exist because the psp handler will understand that a debug request was 
done.  But it's not working.  However, if I create a symbolic link to 
test.psp :

ln -s test.psp test.psp_

the debug request works.  I get to see the generated PSP-produced python 
code and psp-html source.

I must be missing something.  Is there an Apache configuration that 
could be enabled by default that would prevent me to access .psp_ files 
that don't exist, before the mod_python.psp handler could do its magic ?

Anyone please can help ?  Thank you,

Charles Perreault



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071220/c8b1fd81/attachment.html
From linux at qbox.es  Thu Dec 20 12:41:43 2007
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Thu Dec 20 12:41:50 2007
Subject: [mod_python] Conflit with same different Session IDs
Message-ID: <1198172503.5707.48.camel@ThorUx>

Hi.

1.- I will explain what I'm doing to understand me better:

I'm trying to have various modpython applications that shared some
modules (like libraries) and with others modules with little
differences.
I wrote about problems with module names coincidence between
applications. 
Using import_module seems capable of load them when needed, but losing
the pickle abbility for using session for data persistence.

Now, I have modified the modules path, so modules shared among
applications now resides in different packages so I import them with:

	from appApack import users
or
	from appBpack import users

And modpython apache session now works ok.

? Do you think thats is well done ?




2.- Now I realized of one hidden problem appears that i haven't in
count:

Because in Firefox the same session ID is used for different tab and
browsers. Data stored in sessions, is used between applications. 

So, if I store an instance of class User in session['activeUser'], it is
retrieved by application A and application B.

But now, I received an error, when application B, try to retrieve an
object from session['activeUser']:

	ImportError: No module named appApack.users

That's because when it tries to retrieve an user of appBpack instead it
receives an instance of class User in appApack stored in the session
with the same name 'activeUser'.

Now the error is obvious, because the pack A doesn't exist in
application B paths, and I use the import.
Previously I tried with import_module and received an error trying to
import  _mp_62617189222202272 , that was not so clear. So I discarted
import_module.



? What can I do to solve that problem easily? 

	(I know I can prefix all session names with 'AppA_' or 'AppB_')


? Can I change session ID handling in Firefox ? 








From greg at vig.co.nz  Thu Dec 20 14:45:37 2007
From: greg at vig.co.nz (Greg Fawcett)
Date: Thu Dec 20 14:45:43 2007
Subject: [mod_python] Conflit with same different Session IDs
In-Reply-To: <1198172503.5707.48.camel@ThorUx>
References: <1198172503.5707.48.camel@ThorUx>
Message-ID: <928306280712201145t7613d256gb79aee7da708cc76@mail.gmail.com>

If your sessions rely on cookies (most do) then you can resolve your session
conflicts by using different domains - this will force browsers (all
browsers - you probably need to cater for more than just Firefox) to create
a new cookie/session. So set up appa.mydomain.co.nz for appa, and
appb.mydomain.co.nz for appb.

I think your first question about module names and sessions should wait for
wiser heads than mine, but I doubt that it is the module conflict that is
breaking pickle in sessions.

Cheers!
Greg.

On 21/12/2007, S.R.Pard? <linux@qbox.es> wrote:
>
> Hi.
>
> 1.- I will explain what I'm doing to understand me better:
>
> I'm trying to have various modpython applications that shared some
> modules (like libraries) and with others modules with little
> differences.
> I wrote about problems with module names coincidence between
> applications.
> Using import_module seems capable of load them when needed, but losing
> the pickle abbility for using session for data persistence.
>
> Now, I have modified the modules path, so modules shared among
> applications now resides in different packages so I import them with:
>
>         from appApack import users
> or
>         from appBpack import users
>
> And modpython apache session now works ok.
>
> ? Do you think thats is well done ?
>
>
>
>
> 2.- Now I realized of one hidden problem appears that i haven't in
> count:
>
> Because in Firefox the same session ID is used for different tab and
> browsers. Data stored in sessions, is used between applications.
>
> So, if I store an instance of class User in session['activeUser'], it is
> retrieved by application A and application B.
>
> But now, I received an error, when application B, try to retrieve an
> object from session['activeUser']:
>
>         ImportError: No module named appApack.users
>
> That's because when it tries to retrieve an user of appBpack instead it
> receives an instance of class User in appApack stored in the session
> with the same name 'activeUser'.
>
> Now the error is obvious, because the pack A doesn't exist in
> application B paths, and I use the import.
> Previously I tried with import_module and received an error trying to
> import  _mp_62617189222202272 , that was not so clear. So I discarted
> import_module.
>
>
>
> ? What can I do to solve that problem easily?
>
>         (I know I can prefix all session names with 'AppA_' or 'AppB_')
>
>
> ? Can I change session ID handling in Firefox ?
>
>
>
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



-- 
Phone: +64 3 409 8165
Mobile: +64 21 333 291
Fax: +64 3 974 6810
Web: www.vig.co.nz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071221/be2791be/attachment.html
From graham.dumpleton at gmail.com  Thu Dec 20 18:45:16 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 20 18:45:23 2007
Subject: [mod_python] Problem with modules of the same name
In-Reply-To: <1198148914.6122.15.camel@ThorUx>
References: <ed756d900712122358r1af9a5cew2cc05e01cf88e35@mail.gmail.com>
	<1198148914.6122.15.camel@ThorUx>
Message-ID: <88e286470712201545s1480ab10x1e1463cea7e15e23@mail.gmail.com>

On 20/12/2007, S.R.Pard? <linux@qbox.es> wrote:
> Hi All,
>
> I'm trying to setup 2 modPython aplications with modpython.psp handler.
> ModPython is 3.3 tha comes with ubuntu 7.10.
>
> In both applications I have a module named users.py into the
> path /modules inside of the root for the psp pages of the application.
>
> I imported the module in the psp page with:
>
>         import users
>
> When navigating the pages of each, the pages that loads the users
> module, can load any of the modules of the same name, so it displays
> users of the other application.
>
>
> I have tried to use:
>
>         apache.import_module('users' , path='modules')
>
> But doesn't resolve the problem.

The 'path' argument must be a list.

  apache.import_module('users' , path=['modules'])

It also must be an absolute path or uses special anchors to make it relative.

Read the documentation for import_module().

http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

Graham

From graham.dumpleton at gmail.com  Thu Dec 20 18:49:44 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 20 18:49:50 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <476A985D.5020407@videotron.ca>
References: <476A985D.5020407@videotron.ca>
Message-ID: <88e286470712201549r3b1e851eld8d9b9cd7926e9e@mail.gmail.com>

In the Apache access/error log, what is it saying when trying to
access the .psp_ file?

There should be an indication as to what Apache has matched the URL to
in the file system. With that can tell why configuration may not be
working.

Graham

On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
>
>  Hello,
>
>  I'm teaching a class on web applications and I want my students to use
> mod_python.  They'll have a couple of assignments during the semester, all
> to be done in python cgi (first assignment, just to get started) and psp.
> I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4 (Ubuntu)
> mod_python/3.3.1 Python/2.5.1 Server).  All configuration have to be done on
> server / virtual host config, forget the .htaccess (way to much trouble for
> students).
>
>  My students will program their sites in their home folder (~/public_html).
> I want them to be able to both use mod_python.psp and mod_python.publisher,
> as I'll show them to use the both methods to create web applications.  So
> far, I've easily been able to make both work in the same directory using the
> following configuration (on Debian/Ubuntu httpd.conf is splitted in multiple
> files, allowing to enable/disable modules easily) :
>
>  userdir.conf
>  ----------------------
>  <IfModule mod_userdir.c>
>         UserDir public_html
>         UserDir disabled root
>
>         <Directory /home/*/public_html>
>                 AllowOverride FileInfo AuthConfig Limit
>                 Options MultiViews Indexes SymLinksIfOwnerMatch
> IncludesNoExec
>
>                 AddHandler mod_python .py .psp .psp_
>                 PythonHandler mod_python.psp | .psp .psp_
>                 PythonHandler mod_python.publisher | .py
>                 PythonDebug On
>         </Directory>
>  </IfModule>
>
>  So you see I'm trying to assign .psp and .psp_ to mod_python.psp and .py to
> publisher.  So http://localhost/~user/test.py and
> http://localhost/~user/test.psp both work.  However, psp debugging with the
> underscore trick (.psp_) don't work.  I get a 403 forbidden error when I try
> to access http://localhost/~user/test.psp_.
>
>  Of course, test.psp exists.  From what I read, test.psp_ don't need to
> exist because the psp handler will understand that a debug request was done.
>  But it's not working.  However, if I create a symbolic link to test.psp :
>
>  ln -s test.psp test.psp_
>
>  the debug request works.  I get to see the generated PSP-produced python
> code and psp-html source.
>
>  I must be missing something.  Is there an Apache configuration that could
> be enabled by default that would prevent me to access .psp_ files that don't
> exist, before the mod_python.psp handler could do its magic ?
>
>  Anyone please can help ?  Thank you,
From graham.dumpleton at gmail.com  Thu Dec 20 18:52:13 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 20 18:52:18 2007
Subject: [mod_python] Conflit with same different Session IDs
In-Reply-To: <928306280712201145t7613d256gb79aee7da708cc76@mail.gmail.com>
References: <1198172503.5707.48.camel@ThorUx>
	<928306280712201145t7613d256gb79aee7da708cc76@mail.gmail.com>
Message-ID: <88e286470712201552o2eee6e9ci299da503fef30f74@mail.gmail.com>

Or use a cookie path. See:

  http://www.modpython.org/live/current/doc-html/pyapi-sess-classes.html

In particular:

  mod_python.session.application_path

option.

Ensure this option is set differently for each application URL context
using Location directive.

Graham

On 21/12/2007, Greg Fawcett <greg@vig.co.nz> wrote:
> If your sessions rely on cookies (most do) then you can resolve your session
> conflicts by using different domains - this will force browsers (all
> browsers - you probably need to cater for more than just Firefox) to create
> a new cookie/session. So set up appa.mydomain.co.nz for appa, and
> appb.mydomain.co.nz for appb.
>
> I think your first question about module names and sessions should wait for
> wiser heads than mine, but I doubt that it is the module conflict that is
> breaking pickle in sessions.
>
> Cheers!
> Greg.
>
>
> On 21/12/2007, S.R.Pard? <linux@qbox.es> wrote:
> > Hi.
> >
> > 1.- I will explain what I'm doing to understand me better:
> >
> > I'm trying to have various modpython applications that shared some
> > modules (like libraries) and with others modules with little
> > differences.
> > I wrote about problems with module names coincidence between
> > applications.
> > Using import_module seems capable of load them when needed, but losing
> > the pickle abbility for using session for data persistence.
> >
> > Now, I have modified the modules path, so modules shared among
> > applications now resides in different packages so I import them with:
> >
> >         from appApack import users
> > or
> >         from appBpack import users
> >
> > And modpython apache session now works ok.
> >
> > ? Do you think thats is well done ?
> >
> >
> >
> >
> > 2.- Now I realized of one hidden problem appears that i haven't in
> > count:
> >
> > Because in Firefox the same session ID is used for different tab and
> > browsers. Data stored in sessions, is used between applications.
> >
> > So, if I store an instance of class User in session['activeUser'], it is
> > retrieved by application A and application B.
> >
> > But now, I received an error, when application B, try to retrieve an
> > object from session['activeUser']:
> >
> >         ImportError: No module named appApack.users
> >
> > That's because when it tries to retrieve an user of appBpack instead it
> > receives an instance of class User in appApack stored in the session
> > with the same name 'activeUser'.
> >
> > Now the error is obvious, because the pack A doesn't exist in
> > application B paths, and I use the import.
> > Previously I tried with import_module and received an error trying to
> > import  _mp_62617189222202272 , that was not so clear. So I discarted
> > import_module.
> >
> >
> >
> > ? What can I do to solve that problem easily?
> >
> >         (I know I can prefix all session names with 'AppA_' or 'AppB_')
> >
> >
> > ? Can I change session ID handling in Firefox ?
> >
> >
> >
> >
> >
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
>
> --
> Phone: +64 3 409 8165
> Mobile: +64 21 333 291
> Fax: +64 3 974 6810
> Web: www.vig.co.nz
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From sancar.saran at evodot.com  Thu Dec 20 18:53:08 2007
From: sancar.saran at evodot.com (Sancar Saran)
Date: Thu Dec 20 18:53:26 2007
Subject: [mod_python] Documentation for Web Programming
Message-ID: <200712210153.08700.sancar.saran@evodot.com>

Hello,

Is there any good web programming documentation in python for especially 
people like me who has php programming experience.

Regards

Sancar
From graham.dumpleton at gmail.com  Thu Dec 20 19:03:00 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 20 19:03:07 2007
Subject: [mod_python] Documentation for Web Programming
In-Reply-To: <200712210153.08700.sancar.saran@evodot.com>
References: <200712210153.08700.sancar.saran@evodot.com>
Message-ID: <88e286470712201603w4ea62445wf7fbe2cea9cfcb7f@mail.gmail.com>

On 21/12/2007, Sancar Saran <sancar.saran@evodot.com> wrote:
> Hello,
>
> Is there any good web programming documentation in python for especially
> people like me who has php programming experience.

Since WSGI is where things are heading. I would start at:

  http://www.wsgi.org

and follow links to various packages there. The mod_python package
isn't the only solution and since you have no prior Python web
programming experience you may be better off using one of the higher
level Python web frameworks rather than mod_python.

That said, if you really want to use mod_python, then one of the first
Google results for 'mod_python tutorial' is:

  http://webpython.codepoint.net/mod_python

Using Google you will no doubt be able to easily find a lot of other
stuff as well.

Graham
From muganor at videotron.ca  Thu Dec 20 22:05:32 2007
From: muganor at videotron.ca (Charles Perreault)
Date: Thu Dec 20 22:05:39 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <88e286470712201549r3b1e851eld8d9b9cd7926e9e@mail.gmail.com>
References: <476A985D.5020407@videotron.ca>
	<88e286470712201549r3b1e851eld8d9b9cd7926e9e@mail.gmail.com>
Message-ID: <476B2D7C.9050205@videotron.ca>

The Apache access/error log don't say much :

access.log :
127.0.0.1 - - [20/Dec/2007:21:59:48 -0500] "GET /~user/test.psp_ 
HTTP/1.1" 403 326 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; 
rv:1.8.1.10) Gecko/20071128 Ubuntu/8.04 (hardy) Firefox/2.0.0.10"

error.log :
[Thu Dec 20 21:59:48 2007] [error] [client 127.0.0.1] (13)Permission 
denied: cannot read directory for multi: /home/user/public_html/

The same lines are repeated for each access to test.psp_.

Thank you,

Charles


Graham Dumpleton wrote:
> In the Apache access/error log, what is it saying when trying to
> access the .psp_ file?
>
> There should be an indication as to what Apache has matched the URL to
> in the file system. With that can tell why configuration may not be
> working.
>
> Graham
>
> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
>   
>>  Hello,
>>
>>  I'm teaching a class on web applications and I want my students to use
>> mod_python.  They'll have a couple of assignments during the semester, all
>> to be done in python cgi (first assignment, just to get started) and psp.
>> I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4 (Ubuntu)
>> mod_python/3.3.1 Python/2.5.1 Server).  All configuration have to be done on
>> server / virtual host config, forget the .htaccess (way to much trouble for
>> students).
>>
>>  My students will program their sites in their home folder (~/public_html).
>> I want them to be able to both use mod_python.psp and mod_python.publisher,
>> as I'll show them to use the both methods to create web applications.  So
>> far, I've easily been able to make both work in the same directory using the
>> following configuration (on Debian/Ubuntu httpd.conf is splitted in multiple
>> files, allowing to enable/disable modules easily) :
>>
>>  userdir.conf
>>  ----------------------
>>  <IfModule mod_userdir.c>
>>         UserDir public_html
>>         UserDir disabled root
>>
>>         <Directory /home/*/public_html>
>>                 AllowOverride FileInfo AuthConfig Limit
>>                 Options MultiViews Indexes SymLinksIfOwnerMatch
>> IncludesNoExec
>>
>>                 AddHandler mod_python .py .psp .psp_
>>                 PythonHandler mod_python.psp | .psp .psp_
>>                 PythonHandler mod_python.publisher | .py
>>                 PythonDebug On
>>         </Directory>
>>  </IfModule>
>>
>>  So you see I'm trying to assign .psp and .psp_ to mod_python.psp and .py to
>> publisher.  So http://localhost/~user/test.py and
>> http://localhost/~user/test.psp both work.  However, psp debugging with the
>> underscore trick (.psp_) don't work.  I get a 403 forbidden error when I try
>> to access http://localhost/~user/test.psp_.
>>
>>  Of course, test.psp exists.  From what I read, test.psp_ don't need to
>> exist because the psp handler will understand that a debug request was done.
>>  But it's not working.  However, if I create a symbolic link to test.psp :
>>
>>  ln -s test.psp test.psp_
>>
>>  the debug request works.  I get to see the generated PSP-produced python
>> code and psp-html source.
>>
>>  I must be missing something.  Is there an Apache configuration that could
>> be enabled by default that would prevent me to access .psp_ files that don't
>> exist, before the mod_python.psp handler could do its magic ?
>>
>>  Anyone please can help ?  Thank you,
>>     

From graham.dumpleton at gmail.com  Thu Dec 20 22:12:26 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 20 22:12:31 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <476B2D7C.9050205@videotron.ca>
References: <476A985D.5020407@videotron.ca>
	<88e286470712201549r3b1e851eld8d9b9cd7926e9e@mail.gmail.com>
	<476B2D7C.9050205@videotron.ca>
Message-ID: <88e286470712201912p4be6f182rcda85c0da590eade@mail.gmail.com>

What do you get if you run:

  ls -las /home/user/public_html/

Apache complaining about directory permissions is pretty significant.
Because Apache is running as a special user, it must have read/search
access to that directory plus the parent user directory.

It is odd though that you would get this complaint if straight .psp
file is working.

Graham

On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> The Apache access/error log don't say much :
>
> access.log :
> 127.0.0.1 - - [20/Dec/2007:21:59:48 -0500] "GET /~user/test.psp_
> HTTP/1.1" 403 326 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US;
> rv:1.8.1.10) Gecko/20071128 Ubuntu/8.04 (hardy) Firefox/2.0.0.10"
>
> error.log :
> [Thu Dec 20 21:59:48 2007] [error] [client 127.0.0.1] (13)Permission
> denied: cannot read directory for multi: /home/user/public_html/
>
> The same lines are repeated for each access to test.psp_.
>
> Thank you,
>
> Charles
>
>
> Graham Dumpleton wrote:
> > In the Apache access/error log, what is it saying when trying to
> > access the .psp_ file?
> >
> > There should be an indication as to what Apache has matched the URL to
> > in the file system. With that can tell why configuration may not be
> > working.
> >
> > Graham
> >
> > On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> >
> >>  Hello,
> >>
> >>  I'm teaching a class on web applications and I want my students to use
> >> mod_python.  They'll have a couple of assignments during the semester, all
> >> to be done in python cgi (first assignment, just to get started) and psp.
> >> I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4 (Ubuntu)
> >> mod_python/3.3.1 Python/2.5.1 Server).  All configuration have to be done on
> >> server / virtual host config, forget the .htaccess (way to much trouble for
> >> students).
> >>
> >>  My students will program their sites in their home folder (~/public_html).
> >> I want them to be able to both use mod_python.psp and mod_python.publisher,
> >> as I'll show them to use the both methods to create web applications.  So
> >> far, I've easily been able to make both work in the same directory using the
> >> following configuration (on Debian/Ubuntu httpd.conf is splitted in multiple
> >> files, allowing to enable/disable modules easily) :
> >>
> >>  userdir.conf
> >>  ----------------------
> >>  <IfModule mod_userdir.c>
> >>         UserDir public_html
> >>         UserDir disabled root
> >>
> >>         <Directory /home/*/public_html>
> >>                 AllowOverride FileInfo AuthConfig Limit
> >>                 Options MultiViews Indexes SymLinksIfOwnerMatch
> >> IncludesNoExec
> >>
> >>                 AddHandler mod_python .py .psp .psp_
> >>                 PythonHandler mod_python.psp | .psp .psp_
> >>                 PythonHandler mod_python.publisher | .py
> >>                 PythonDebug On
> >>         </Directory>
> >>  </IfModule>
> >>
> >>  So you see I'm trying to assign .psp and .psp_ to mod_python.psp and .py to
> >> publisher.  So http://localhost/~user/test.py and
> >> http://localhost/~user/test.psp both work.  However, psp debugging with the
> >> underscore trick (.psp_) don't work.  I get a 403 forbidden error when I try
> >> to access http://localhost/~user/test.psp_.
> >>
> >>  Of course, test.psp exists.  From what I read, test.psp_ don't need to
> >> exist because the psp handler will understand that a debug request was done.
> >>  But it's not working.  However, if I create a symbolic link to test.psp :
> >>
> >>  ln -s test.psp test.psp_
> >>
> >>  the debug request works.  I get to see the generated PSP-produced python
> >> code and psp-html source.
> >>
> >>  I must be missing something.  Is there an Apache configuration that could
> >> be enabled by default that would prevent me to access .psp_ files that don't
> >> exist, before the mod_python.psp handler could do its magic ?
> >>
> >>  Anyone please can help ?  Thank you,
> >>
>
>
From graham.dumpleton at gmail.com  Thu Dec 20 23:46:32 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Dec 20 23:46:40 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <476B4019.2070104@videotron.ca>
References: <476B2D7C.9050205@videotron.ca>
	<88e286470712201912p4be6f182rcda85c0da590eade@mail.gmail.com>
	<476B4019.2070104@videotron.ca>
Message-ID: <88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>

On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> ~$: ls -las /home/user/public_html/
>  8 drwx--x--x  7 user user  4096 2007-12-20 21:58 .
> 64 drwx--x--x 71 user user 49152 2007-12-20 23:01 ..
>  8 drwx--x--x  5 user user  4096 2007-12-16 22:04 cgi-bin
>  0 drwxr-xr-x  2 user user     1 2007-12-16 11:24 download
>  4 -rw-r--r--  1 user user  1150 2007-11-06 20:45 favicon.ico
>  4 -rw-r--r--  1 user user    66 2007-12-16 22:29 test.psp
>  4 -rw-r--r--  1 user user   401 2007-12-16 00:31 index.html
>  4 -rw-r--r--  1 user user   106 2007-12-17 16:16 komodo.html
>  4 -rw-r--r--  1 user user   206 2007-12-16 23:57 komodo.py
>  4 -rw-r--r--  1 user user   134 2007-12-16 23:23 mptest.py
>  4 drwx--x--x  5 user user    72 2007-12-17 16:24 noel
>  8 drwx--x--x 10 user user  4096 2007-12-16 01:01 photos
>  0 drwx------  4 user user    16 2007-11-26 21:56 upload
>
> Yes Apache is running as user and group 'www-data'.  I know about file
> permissions and ACL a lot.  The complaint in error.log is about Apache
> Multiviews, which I don't care if it doesn't work.  In fact I'm thinking
> about disabling it.  You say Apache needs reading option on directories,
> which from my experience is only true IF you want it to be able to
> create a directory listing (which is a minor security issue and must be
> enabled on a per-directory basis).

True, although looks like MultiViews may depend on getting directory
listing as well and thus the error.

>  Else, indeed files need reading
> permissions and folders only need execute.  Does mod_python .psp_
> debugging rely on Multiview and therefore on folder reading permissions ???

No, doesn't require MultiViews so safe to disable that option. Can't
see how it would make a difference though.

Can't think of anything else at the moment and don't have access to
mod_python code to look at it.

BTW, as far as teaching a class, any reason why you didn't go for web
stuff that works to WSGI interface rather than mod_python? WSGI is the
way Python is heading and way more hosting options available for it.

> Charles
>
>
>
> Graham Dumpleton wrote:
> > What do you get if you run:
> >
> >   ls -las /home/user/public_html/
> >
> > Apache complaining about directory permissions is pretty significant.
> > Because Apache is running as a special user, it must have read/search
> > access to that directory plus the parent user directory.
> >
> > It is odd though that you would get this complaint if straight .psp
> > file is working.
> >
> > Graham
> >
> > On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> >
> >> The Apache access/error log don't say much :
> >>
> >> access.log :
> >> 127.0.0.1 - - [20/Dec/2007:21:59:48 -0500] "GET /~user/test.psp_
> >> HTTP/1.1" 403 326 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US;
> >> rv:1.8.1.10) Gecko/20071128 Ubuntu/8.04 (hardy) Firefox/2.0.0.10"
> >>
> >> error.log :
> >> [Thu Dec 20 21:59:48 2007] [error] [client 127.0.0.1] (13)Permission
> >> denied: cannot read directory for multi: /home/user/public_html/
> >>
> >> The same lines are repeated for each access to test.psp_.
> >>
> >> Thank you,
> >>
> >> Charles
> >>
> >>
> >> Graham Dumpleton wrote:
> >>
> >>> In the Apache access/error log, what is it saying when trying to
> >>> access the .psp_ file?
> >>>
> >>> There should be an indication as to what Apache has matched the URL to
> >>> in the file system. With that can tell why configuration may not be
> >>> working.
> >>>
> >>> Graham
> >>>
> >>> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> >>>
> >>>
> >>>>  Hello,
> >>>>
> >>>>  I'm teaching a class on web applications and I want my students to use
> >>>> mod_python.  They'll have a couple of assignments during the semester, all
> >>>> to be done in python cgi (first assignment, just to get started) and psp.
> >>>> I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4 (Ubuntu)
> >>>> mod_python/3.3.1 Python/2.5.1 Server).  All configuration have to be done on
> >>>> server / virtual host config, forget the .htaccess (way to much trouble for
> >>>> students).
> >>>>
> >>>>  My students will program their sites in their home folder (~/public_html).
> >>>> I want them to be able to both use mod_python.psp and mod_python.publisher,
> >>>> as I'll show them to use the both methods to create web applications.  So
> >>>> far, I've easily been able to make both work in the same directory using the
> >>>> following configuration (on Debian/Ubuntu httpd.conf is splitted in multiple
> >>>> files, allowing to enable/disable modules easily) :
> >>>>
> >>>>  userdir.conf
> >>>>  ----------------------
> >>>>  <IfModule mod_userdir.c>
> >>>>         UserDir public_html
> >>>>         UserDir disabled root
> >>>>
> >>>>         <Directory /home/*/public_html>
> >>>>                 AllowOverride FileInfo AuthConfig Limit
> >>>>                 Options MultiViews Indexes SymLinksIfOwnerMatch
> >>>> IncludesNoExec
> >>>>
> >>>>                 AddHandler mod_python .py .psp .psp_
> >>>>                 PythonHandler mod_python.psp | .psp .psp_
> >>>>                 PythonHandler mod_python.publisher | .py
> >>>>                 PythonDebug On
> >>>>         </Directory>
> >>>>  </IfModule>
> >>>>
> >>>>  So you see I'm trying to assign .psp and .psp_ to mod_python.psp and .py to
> >>>> publisher.  So http://localhost/~user/test.py and
> >>>> http://localhost/~user/test.psp both work.  However, psp debugging with the
> >>>> underscore trick (.psp_) don't work.  I get a 403 forbidden error when I try
> >>>> to access http://localhost/~user/test.psp_.
> >>>>
> >>>>  Of course, test.psp exists.  From what I read, test.psp_ don't need to
> >>>> exist because the psp handler will understand that a debug request was done.
> >>>>  But it's not working.  However, if I create a symbolic link to test.psp :
> >>>>
> >>>>  ln -s test.psp test.psp_
> >>>>
> >>>>  the debug request works.  I get to see the generated PSP-produced python
> >>>> code and psp-html source.
> >>>>
> >>>>  I must be missing something.  Is there an Apache configuration that could
> >>>> be enabled by default that would prevent me to access .psp_ files that don't
> >>>> exist, before the mod_python.psp handler could do its magic ?
> >>>>
> >>>>  Anyone please can help ?  Thank you,
> >>>>
> >>>>
> >>
>
>
From muganor at videotron.ca  Fri Dec 21 00:13:47 2007
From: muganor at videotron.ca (Charles Perreault)
Date: Fri Dec 21 00:13:58 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
References: <476B4019.2070104@videotron.ca>
	<88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
Message-ID: <476B4B8B.70405@videotron.ca>

Graham Dumpleton wrote:
> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
>   
>> ~$: ls -las /home/user/public_html/
>>  8 drwx--x--x  7 user user  4096 2007-12-20 21:58 .
>> 64 drwx--x--x 71 user user 49152 2007-12-20 23:01 ..
>>  8 drwx--x--x  5 user user  4096 2007-12-16 22:04 cgi-bin
>>  0 drwxr-xr-x  2 user user     1 2007-12-16 11:24 download
>>  4 -rw-r--r--  1 user user  1150 2007-11-06 20:45 favicon.ico
>>  4 -rw-r--r--  1 user user    66 2007-12-16 22:29 test.psp
>>  4 -rw-r--r--  1 user user   401 2007-12-16 00:31 index.html
>>  4 -rw-r--r--  1 user user   106 2007-12-17 16:16 komodo.html
>>  4 -rw-r--r--  1 user user   206 2007-12-16 23:57 komodo.py
>>  4 -rw-r--r--  1 user user   134 2007-12-16 23:23 mptest.py
>>  4 drwx--x--x  5 user user    72 2007-12-17 16:24 noel
>>  8 drwx--x--x 10 user user  4096 2007-12-16 01:01 photos
>>  0 drwx------  4 user user    16 2007-11-26 21:56 upload
>>
>> Yes Apache is running as user and group 'www-data'.  I know about file
>> permissions and ACL a lot.  The complaint in error.log is about Apache
>> Multiviews, which I don't care if it doesn't work.  In fact I'm thinking
>> about disabling it.  You say Apache needs reading option on directories,
>> which from my experience is only true IF you want it to be able to
>> create a directory listing (which is a minor security issue and must be
>> enabled on a per-directory basis).
>>     
>
> True, although looks like MultiViews may depend on getting directory
> listing as well and thus the error.
>   
Indeed it does need to get the directory listing.  Multiview tries to 
match inexisting requests with the best match it can find in a 
directory.  Therefore, it needs to get the listing and parse it.  
Example:  http://localhost/mypage  may be redirected to 
http://localhost/mypage.php if mypage don't exist.  However, if  
mypage.xhtml, mypage.html, mypage.html3, mypage.psp, mypage.php all 
exists, it's hard to know which file will be picked.
>   
>>  Else, indeed files need reading
>> permissions and folders only need execute.  Does mod_python .psp_
>> debugging rely on Multiview and therefore on folder reading permissions ???
>>     
>
> No, doesn't require MultiViews so safe to disable that option. Can't
> see how it would make a difference though.
>   
Same here.
> Can't think of anything else at the moment and don't have access to
> mod_python code to look at it.
>   
Maybe multiview can make .psp_ work, since it will try to match the 
request with an existing file, which will surely be the .psp file.  But 
I doubt that is the correct way to make .psp_ work.
> BTW, as far as teaching a class, any reason why you didn't go for web
> stuff that works to WSGI interface rather than mod_python? WSGI is the
> way Python is heading and way more hosting options available for it.
>
>   
Most of my material is already prepared (notes, assignments, etc) and 
translated in French (Universit? de Sherbrooke, Qu?bec, Canada).  Of 
course Django, WSGI, ASP.NET, Ruby on rails, are all very fun to learn 
and use, but a choice must be made.  I'm going to teach web programming 
to a class of geo-scientists, not programmers.  They don't even know 
for-loops and html... So, we must start from the bottom (html) and go 
up.  In a 15 weeks semester, there isn't enough time to teach html, 
javascript, css, python, cgi, parallel computing, distributed systems, 
wsgi and django, and plone, and etc.  mod_python fills the gap between 
cgi and frameworks, and is similar to php/asp, which is very common 
nonetheless.  Python is easier to learn than php, IMHO.  Students will 
learn the basis, and from there continue with real world tools if they 
need too.  The philosophy here is to learn people how things work, under 
the hood, and become versatile.  Then, the use of higher level 
frameworks and real life tools is somewhat easier, and will be done if 
the students need to in their future job.

Charles
>>
>> Graham Dumpleton wrote:
>>     
>>> What do you get if you run:
>>>
>>>   ls -las /home/user/public_html/
>>>
>>> Apache complaining about directory permissions is pretty significant.
>>> Because Apache is running as a special user, it must have read/search
>>> access to that directory plus the parent user directory.
>>>
>>> It is odd though that you would get this complaint if straight .psp
>>> file is working.
>>>
>>> Graham
>>>
>>> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
>>>
>>>       
>>>> The Apache access/error log don't say much :
>>>>
>>>> access.log :
>>>> 127.0.0.1 - - [20/Dec/2007:21:59:48 -0500] "GET /~user/test.psp_
>>>> HTTP/1.1" 403 326 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US;
>>>> rv:1.8.1.10) Gecko/20071128 Ubuntu/8.04 (hardy) Firefox/2.0.0.10"
>>>>
>>>> error.log :
>>>> [Thu Dec 20 21:59:48 2007] [error] [client 127.0.0.1] (13)Permission
>>>> denied: cannot read directory for multi: /home/user/public_html/
>>>>
>>>> The same lines are repeated for each access to test.psp_.
>>>>
>>>> Thank you,
>>>>
>>>> Charles
>>>>
>>>>
>>>> Graham Dumpleton wrote:
>>>>
>>>>         
>>>>> In the Apache access/error log, what is it saying when trying to
>>>>> access the .psp_ file?
>>>>>
>>>>> There should be an indication as to what Apache has matched the URL to
>>>>> in the file system. With that can tell why configuration may not be
>>>>> working.
>>>>>
>>>>> Graham
>>>>>
>>>>> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
>>>>>
>>>>>
>>>>>           
>>>>>>  Hello,
>>>>>>
>>>>>>  I'm teaching a class on web applications and I want my students to use
>>>>>> mod_python.  They'll have a couple of assignments during the semester, all
>>>>>> to be done in python cgi (first assignment, just to get started) and psp.
>>>>>> I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4 (Ubuntu)
>>>>>> mod_python/3.3.1 Python/2.5.1 Server).  All configuration have to be done on
>>>>>> server / virtual host config, forget the .htaccess (way to much trouble for
>>>>>> students).
>>>>>>
>>>>>>  My students will program their sites in their home folder (~/public_html).
>>>>>> I want them to be able to both use mod_python.psp and mod_python.publisher,
>>>>>> as I'll show them to use the both methods to create web applications.  So
>>>>>> far, I've easily been able to make both work in the same directory using the
>>>>>> following configuration (on Debian/Ubuntu httpd.conf is splitted in multiple
>>>>>> files, allowing to enable/disable modules easily) :
>>>>>>
>>>>>>  userdir.conf
>>>>>>  ----------------------
>>>>>>  <IfModule mod_userdir.c>
>>>>>>         UserDir public_html
>>>>>>         UserDir disabled root
>>>>>>
>>>>>>         <Directory /home/*/public_html>
>>>>>>                 AllowOverride FileInfo AuthConfig Limit
>>>>>>                 Options MultiViews Indexes SymLinksIfOwnerMatch
>>>>>> IncludesNoExec
>>>>>>
>>>>>>                 AddHandler mod_python .py .psp .psp_
>>>>>>                 PythonHandler mod_python.psp | .psp .psp_
>>>>>>                 PythonHandler mod_python.publisher | .py
>>>>>>                 PythonDebug On
>>>>>>         </Directory>
>>>>>>  </IfModule>
>>>>>>
>>>>>>  So you see I'm trying to assign .psp and .psp_ to mod_python.psp and .py to
>>>>>> publisher.  So http://localhost/~user/test.py and
>>>>>> http://localhost/~user/test.psp both work.  However, psp debugging with the
>>>>>> underscore trick (.psp_) don't work.  I get a 403 forbidden error when I try
>>>>>> to access http://localhost/~user/test.psp_.
>>>>>>
>>>>>>  Of course, test.psp exists.  From what I read, test.psp_ don't need to
>>>>>> exist because the psp handler will understand that a debug request was done.
>>>>>>  But it's not working.  However, if I create a symbolic link to test.psp :
>>>>>>
>>>>>>  ln -s test.psp test.psp_
>>>>>>
>>>>>>  the debug request works.  I get to see the generated PSP-produced python
>>>>>> code and psp-html source.
>>>>>>
>>>>>>  I must be missing something.  Is there an Apache configuration that could
>>>>>> be enabled by default that would prevent me to access .psp_ files that don't
>>>>>> exist, before the mod_python.psp handler could do its magic ?
>>>>>>
>>>>>>  Anyone please can help ?  Thank you,
>>>>>>
>>>>>>
>>>>>>             
>>     

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071221/bd1d5ecf/attachment-0001.html
From jpg at jgassociates.ca  Fri Dec 21 00:56:15 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Dec 21 00:55:54 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <476B4B8B.70405@videotron.ca>
References: <476B4019.2070104@videotron.ca>	<88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
	<476B4B8B.70405@videotron.ca>
Message-ID: <476B557F.6020102@jgassociates.ca>

Charles Perreault wrote:
> Graham Dumpleton wrote:
>> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
>>   
>>> ~$: ls -las /home/user/public_html/
>>>  8 drwx--x--x  7 user user  4096 2007-12-20 21:58 .
>>> 64 drwx--x--x 71 user user 49152 2007-12-20 23:01 ..
>>>  8 drwx--x--x  5 user user  4096 2007-12-16 22:04 cgi-bin
>>>  0 drwxr-xr-x  2 user user     1 2007-12-16 11:24 download
>>>  4 -rw-r--r--  1 user user  1150 2007-11-06 20:45 favicon.ico
>>>  4 -rw-r--r--  1 user user    66 2007-12-16 22:29 test.psp
>>>  4 -rw-r--r--  1 user user   401 2007-12-16 00:31 index.html
>>>  4 -rw-r--r--  1 user user   106 2007-12-17 16:16 komodo.html
>>>  4 -rw-r--r--  1 user user   206 2007-12-16 23:57 komodo.py
>>>  4 -rw-r--r--  1 user user   134 2007-12-16 23:23 mptest.py
>>>  4 drwx--x--x  5 user user    72 2007-12-17 16:24 noel
>>>  8 drwx--x--x 10 user user  4096 2007-12-16 01:01 photos
>>>  0 drwx------  4 user user    16 2007-11-26 21:56 upload
>>>
>>> Yes Apache is running as user and group 'www-data'.  I know about file
>>> permissions and ACL a lot.  The complaint in error.log is about Apache
>>> Multiviews, which I don't care if it doesn't work.  In fact I'm thinking
>>> about disabling it.  You say Apache needs reading option on directories,
>>> which from my experience is only true IF you want it to be able to
>>> create a directory listing (which is a minor security issue and must be
>>> enabled on a per-directory basis).
>>>     
>>
>> True, although looks like MultiViews may depend on getting directory
>> listing as well and thus the error.
>>   
> Indeed it does need to get the directory listing.  Multiview tries to 
> match inexisting requests with the best match it can find in a 
> directory.  Therefore, it needs to get the listing and parse it.  
> Example:  http://localhost/mypage  may be redirected to 
> http://localhost/mypage.php if mypage don't exist.  However, if  
> mypage.xhtml, mypage.html, mypage.html3, mypage.psp, mypage.php all 
> exists, it's hard to know which file will be picked.
>>   
>>>  Else, indeed files need reading
>>> permissions and folders only need execute.  Does mod_python .psp_
>>> debugging rely on Multiview and therefore on folder reading permissions ???
>>>     
>>
>> No, doesn't require MultiViews so safe to disable that option. Can't
>> see how it would make a difference though.
>>   
> Same here.
>> Can't think of anything else at the moment and don't have access to
>> mod_python code to look at it.
>>   
> Maybe multiview can make .psp_ work, since it will try to match the 
> request with an existing file, which will surely be the .psp file.  But 
> I doubt that is the correct way to make .psp_ work.

I really don't think it's a problem with mod_python. The way I 
understand it, with MultiViews on apache selects the content handler 
*after* it's made it's best attempt at a file match. As test.psp_ 
doesn't exist apache needs to read the directory but it is prevented 
from doing so because of your directory permissions, so it generates a 
403 error and returns. Mod_python (or any other handler) never gets a look.

Either turn Multiviews off or change your directory permissions to allow 
apache to read the directory.

Jim
From matusis at yahoo.com  Fri Dec 21 01:04:53 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Fri Dec 21 01:05:28 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
References: <476B2D7C.9050205@videotron.ca>	<88e286470712201912p4be6f182rcda85c0da590eade@mail.gmail.com>	<476B4019.2070104@videotron.ca>
	<88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
Message-ID: <08fd01c84397$679e00f0$36da02d0$@com>

> WSGI is the way Python is heading and way more hosting options available
for it.

Does this mean that mod_python will become unmaintained or obsolete?
Is WSGI more scalable than mod_python (when mod_python is used with worker
MPM)?


> -----Original Message-----
> From: mod_python-bounces@modpython.org [mailto:mod_python-
> bounces@modpython.org] On Behalf Of Graham Dumpleton
> Sent: Thursday, December 20, 2007 8:47 PM
> To: Charles Perreault
> Cc: mod_python
> Subject: Re: [mod_python] Problem with .psp_
> 
> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> > ~$: ls -las /home/user/public_html/
> >  8 drwx--x--x  7 user user  4096 2007-12-20 21:58 .
> > 64 drwx--x--x 71 user user 49152 2007-12-20 23:01 ..
> >  8 drwx--x--x  5 user user  4096 2007-12-16 22:04 cgi-bin
> >  0 drwxr-xr-x  2 user user     1 2007-12-16 11:24 download
> >  4 -rw-r--r--  1 user user  1150 2007-11-06 20:45 favicon.ico
> >  4 -rw-r--r--  1 user user    66 2007-12-16 22:29 test.psp
> >  4 -rw-r--r--  1 user user   401 2007-12-16 00:31 index.html
> >  4 -rw-r--r--  1 user user   106 2007-12-17 16:16 komodo.html
> >  4 -rw-r--r--  1 user user   206 2007-12-16 23:57 komodo.py
> >  4 -rw-r--r--  1 user user   134 2007-12-16 23:23 mptest.py
> >  4 drwx--x--x  5 user user    72 2007-12-17 16:24 noel
> >  8 drwx--x--x 10 user user  4096 2007-12-16 01:01 photos
> >  0 drwx------  4 user user    16 2007-11-26 21:56 upload
> >
> > Yes Apache is running as user and group 'www-data'.  I know about
> file
> > permissions and ACL a lot.  The complaint in error.log is about
> Apache
> > Multiviews, which I don't care if it doesn't work.  In fact I'm
> thinking
> > about disabling it.  You say Apache needs reading option on
> directories,
> > which from my experience is only true IF you want it to be able to
> > create a directory listing (which is a minor security issue and must
> be
> > enabled on a per-directory basis).
> 
> True, although looks like MultiViews may depend on getting directory
> listing as well and thus the error.
> 
> >  Else, indeed files need reading
> > permissions and folders only need execute.  Does mod_python .psp_
> > debugging rely on Multiview and therefore on folder reading
> permissions ???
> 
> No, doesn't require MultiViews so safe to disable that option. Can't
> see how it would make a difference though.
> 
> Can't think of anything else at the moment and don't have access to
> mod_python code to look at it.
> 
> BTW, as far as teaching a class, any reason why you didn't go for web
> stuff that works to WSGI interface rather than mod_python? WSGI is the
> way Python is heading and way more hosting options available for it.
> 
> > Charles
> >
> >
> >
> > Graham Dumpleton wrote:
> > > What do you get if you run:
> > >
> > >   ls -las /home/user/public_html/
> > >
> > > Apache complaining about directory permissions is pretty
> significant.
> > > Because Apache is running as a special user, it must have
> read/search
> > > access to that directory plus the parent user directory.
> > >
> > > It is odd though that you would get this complaint if straight .psp
> > > file is working.
> > >
> > > Graham
> > >
> > > On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> > >
> > >> The Apache access/error log don't say much :
> > >>
> > >> access.log :
> > >> 127.0.0.1 - - [20/Dec/2007:21:59:48 -0500] "GET /~user/test.psp_
> > >> HTTP/1.1" 403 326 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US;
> > >> rv:1.8.1.10) Gecko/20071128 Ubuntu/8.04 (hardy) Firefox/2.0.0.10"
> > >>
> > >> error.log :
> > >> [Thu Dec 20 21:59:48 2007] [error] [client 127.0.0.1]
> (13)Permission
> > >> denied: cannot read directory for multi: /home/user/public_html/
> > >>
> > >> The same lines are repeated for each access to test.psp_.
> > >>
> > >> Thank you,
> > >>
> > >> Charles
> > >>
> > >>
> > >> Graham Dumpleton wrote:
> > >>
> > >>> In the Apache access/error log, what is it saying when trying to
> > >>> access the .psp_ file?
> > >>>
> > >>> There should be an indication as to what Apache has matched the
> URL to
> > >>> in the file system. With that can tell why configuration may not
> be
> > >>> working.
> > >>>
> > >>> Graham
> > >>>
> > >>> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> > >>>
> > >>>
> > >>>>  Hello,
> > >>>>
> > >>>>  I'm teaching a class on web applications and I want my students
> to use
> > >>>> mod_python.  They'll have a couple of assignments during the
> semester, all
> > >>>> to be done in python cgi (first assignment, just to get started)
> and psp.
> > >>>> I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4
> (Ubuntu)
> > >>>> mod_python/3.3.1 Python/2.5.1 Server).  All configuration have
> to be done on
> > >>>> server / virtual host config, forget the .htaccess (way to much
> trouble for
> > >>>> students).
> > >>>>
> > >>>>  My students will program their sites in their home folder
> (~/public_html).
> > >>>> I want them to be able to both use mod_python.psp and
> mod_python.publisher,
> > >>>> as I'll show them to use the both methods to create web
> applications.  So
> > >>>> far, I've easily been able to make both work in the same
> directory using the
> > >>>> following configuration (on Debian/Ubuntu httpd.conf is splitted
> in multiple
> > >>>> files, allowing to enable/disable modules easily) :
> > >>>>
> > >>>>  userdir.conf
> > >>>>  ----------------------
> > >>>>  <IfModule mod_userdir.c>
> > >>>>         UserDir public_html
> > >>>>         UserDir disabled root
> > >>>>
> > >>>>         <Directory /home/*/public_html>
> > >>>>                 AllowOverride FileInfo AuthConfig Limit
> > >>>>                 Options MultiViews Indexes SymLinksIfOwnerMatch
> > >>>> IncludesNoExec
> > >>>>
> > >>>>                 AddHandler mod_python .py .psp .psp_
> > >>>>                 PythonHandler mod_python.psp | .psp .psp_
> > >>>>                 PythonHandler mod_python.publisher | .py
> > >>>>                 PythonDebug On
> > >>>>         </Directory>
> > >>>>  </IfModule>
> > >>>>
> > >>>>  So you see I'm trying to assign .psp and .psp_ to
> mod_python.psp and .py to
> > >>>> publisher.  So http://localhost/~user/test.py and
> > >>>> http://localhost/~user/test.psp both work.  However, psp
> debugging with the
> > >>>> underscore trick (.psp_) don't work.  I get a 403 forbidden
> error when I try
> > >>>> to access http://localhost/~user/test.psp_.
> > >>>>
> > >>>>  Of course, test.psp exists.  From what I read, test.psp_ don't
> need to
> > >>>> exist because the psp handler will understand that a debug
> request was done.
> > >>>>  But it's not working.  However, if I create a symbolic link to
> test.psp :
> > >>>>
> > >>>>  ln -s test.psp test.psp_
> > >>>>
> > >>>>  the debug request works.  I get to see the generated PSP-
> produced python
> > >>>> code and psp-html source.
> > >>>>
> > >>>>  I must be missing something.  Is there an Apache configuration
> that could
> > >>>> be enabled by default that would prevent me to access .psp_
> files that don't
> > >>>> exist, before the mod_python.psp handler could do its magic ?
> > >>>>
> > >>>>  Anyone please can help ?  Thank you,
> > >>>>
> > >>>>
> > >>
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From muganor at videotron.ca  Fri Dec 21 01:10:09 2007
From: muganor at videotron.ca (Charles Perreault)
Date: Fri Dec 21 01:10:20 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <476B557F.6020102@jgassociates.ca>
References: <476B4B8B.70405@videotron.ca> <476B557F.6020102@jgassociates.ca>
Message-ID: <476B58C1.6000108@videotron.ca>


> I really don't think it's a problem with mod_python. The way I 
> understand it, with MultiViews on apache selects the content handler 
> *after* it's made it's best attempt at a file match. As test.psp_ 
> doesn't exist apache needs to read the directory but it is prevented 
> from doing so because of your directory permissions, so it generates a 
> 403 error and returns. Mod_python (or any other handler) never gets a look.
>
> Either turn Multiviews off or change your directory permissions to allow 
> apache to read the directory.
>
> Jim
>   
And you are absolutely right!  MultiViews prevented mod_python to look 
at the request, and turning MultiViews off solved the problem (I 
should've disabled it long ago... if I wasn't so lazy).  I knew there 
was something wrong in my apache config (I patched the default from 
Ubuntu), I never thought it was a problem with mod_python itself.

Thanks a lot,

Charles


From sancar.saran at evodot.com  Fri Dec 21 03:35:55 2007
From: sancar.saran at evodot.com (Sancar Saran)
Date: Fri Dec 21 03:35:52 2007
Subject: [mod_python] Documentation for Web Programming
In-Reply-To: <88e286470712201603w4ea62445wf7fbe2cea9cfcb7f@mail.gmail.com>
References: <200712210153.08700.sancar.saran@evodot.com>
	<88e286470712201603w4ea62445wf7fbe2cea9cfcb7f@mail.gmail.com>
Message-ID: <200712211035.56182.sancar.saran@evodot.com>

On Friday 21 December 2007 02:03:00 Graham Dumpleton wrote:
> On 21/12/2007, Sancar Saran <sancar.saran@evodot.com> wrote:
> > Hello,
> >
> > Is there any good web programming documentation in python for especially
> > people like me who has php programming experience.
>
> Since WSGI is where things are heading. I would start at:
>
>   http://www.wsgi.org
>
> and follow links to various packages there. The mod_python package
> isn't the only solution and since you have no prior Python web
> programming experience you may be better off using one of the higher
> level Python web frameworks rather than mod_python.
>
> That said, if you really want to use mod_python, then one of the first
> Google results for 'mod_python tutorial' is:
>
>   http://webpython.codepoint.net/mod_python
>
> Using Google you will no doubt be able to easily find a lot of other
> stuff as well.
>
> Graham

Hello again,

Thanks for response,

Using google for example "python browser detector" results noting.
Last week I do head crash to google find someting.

And download ton's of pdf to learn how to create web sites using python. 

Noting was help. Documentation was pathetic. Everybody foctus to Python 
programming language. No real examples for non "Real" programmers. Every 
document focus to steal C++ programmers using words "how python easy".

I collect tiny bity information warious web sites to find where is the 
HTTP_USER_AGENT information.

And 

Frameworks try to put you in their way. I'm still noobie about python and then 
they push their way, their terminology. It was totally double alien world.

Anyhow thanks for links. It seems they had valuable info for example cookies 
and forms.

Regards

Sancar
From graham.dumpleton at gmail.com  Fri Dec 21 04:51:22 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Dec 21 04:51:29 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <08fd01c84397$679e00f0$36da02d0$@com>
References: <476B2D7C.9050205@videotron.ca>
	<88e286470712201912p4be6f182rcda85c0da590eade@mail.gmail.com>
	<476B4019.2070104@videotron.ca>
	<88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
	<08fd01c84397$679e00f0$36da02d0$@com>
Message-ID: <88e286470712210151r245fe29u9761cdef7cfa508d@mail.gmail.com>

On 21/12/2007, Alec Matusis <matusis@yahoo.com> wrote:
> > WSGI is the way Python is heading and way more hosting options available
> for it.
>
> Does this mean that mod_python will become unmaintained or obsolete?

One can still use mod_python as a way of hosting WSGI applications,
although for Apache hosting mod_wsgi is a more purpose built solution
for that. There are some things obviously that mod_python can do that
mod_wsgi can't though because the point of mod_python is to allow
programming against Apache interfaces and not restricted WSGI
interface.

I think the bigger challenge to mod_python is Python 3.0. The problem
there is the change to the standard string type being unicode, with
byte strings being distinct and more limited than current string type
in Python 2.X.

The mod_python interfaces are all going to have to be updated to cope
with this change and it will probably mean that applications on top
will also need to be changed. Same sort of changes will need to occur
to a degree with WSGI applications as well but not as much because its
interface is much more restricted in scope.

What I would be concerned about is whether anyone would step forward
to do the hard work on updating mod_python for Python 3.0. I know that
I will not be that person as my priorities lie elsewhere these days.
So, probably important for people to start thinking about and
discussing what they would like to see happen with mod_python.

One option may be to port the mod_python style of interface so it can
work on top WSGI and thus allow existing applications, maybe with some
small changes, to work on WSGI hosting solutions like mod_wsgi, or
standalone Python web servers.

> Is WSGI more scalable than mod_python (when mod_python is used with worker
> MPM)?

Technically they would make use of the same underlying features of
Apache, so no real difference in that respect. In mod_wsgi there is a
bit less overhead than mod_python and lower memory footprint, but
considering the bottleneck is generally the web application itself or
database access, the differences would generally not amount to that
much difference.

Graham

> > -----Original Message-----
> > From: mod_python-bounces@modpython.org [mailto:mod_python-
> > bounces@modpython.org] On Behalf Of Graham Dumpleton
> > Sent: Thursday, December 20, 2007 8:47 PM
> > To: Charles Perreault
> > Cc: mod_python
> > Subject: Re: [mod_python] Problem with .psp_
> >
> > On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> > > ~$: ls -las /home/user/public_html/
> > >  8 drwx--x--x  7 user user  4096 2007-12-20 21:58 .
> > > 64 drwx--x--x 71 user user 49152 2007-12-20 23:01 ..
> > >  8 drwx--x--x  5 user user  4096 2007-12-16 22:04 cgi-bin
> > >  0 drwxr-xr-x  2 user user     1 2007-12-16 11:24 download
> > >  4 -rw-r--r--  1 user user  1150 2007-11-06 20:45 favicon.ico
> > >  4 -rw-r--r--  1 user user    66 2007-12-16 22:29 test.psp
> > >  4 -rw-r--r--  1 user user   401 2007-12-16 00:31 index.html
> > >  4 -rw-r--r--  1 user user   106 2007-12-17 16:16 komodo.html
> > >  4 -rw-r--r--  1 user user   206 2007-12-16 23:57 komodo.py
> > >  4 -rw-r--r--  1 user user   134 2007-12-16 23:23 mptest.py
> > >  4 drwx--x--x  5 user user    72 2007-12-17 16:24 noel
> > >  8 drwx--x--x 10 user user  4096 2007-12-16 01:01 photos
> > >  0 drwx------  4 user user    16 2007-11-26 21:56 upload
> > >
> > > Yes Apache is running as user and group 'www-data'.  I know about
> > file
> > > permissions and ACL a lot.  The complaint in error.log is about
> > Apache
> > > Multiviews, which I don't care if it doesn't work.  In fact I'm
> > thinking
> > > about disabling it.  You say Apache needs reading option on
> > directories,
> > > which from my experience is only true IF you want it to be able to
> > > create a directory listing (which is a minor security issue and must
> > be
> > > enabled on a per-directory basis).
> >
> > True, although looks like MultiViews may depend on getting directory
> > listing as well and thus the error.
> >
> > >  Else, indeed files need reading
> > > permissions and folders only need execute.  Does mod_python .psp_
> > > debugging rely on Multiview and therefore on folder reading
> > permissions ???
> >
> > No, doesn't require MultiViews so safe to disable that option. Can't
> > see how it would make a difference though.
> >
> > Can't think of anything else at the moment and don't have access to
> > mod_python code to look at it.
> >
> > BTW, as far as teaching a class, any reason why you didn't go for web
> > stuff that works to WSGI interface rather than mod_python? WSGI is the
> > way Python is heading and way more hosting options available for it.
> >
> > > Charles
> > >
> > >
> > >
> > > Graham Dumpleton wrote:
> > > > What do you get if you run:
> > > >
> > > >   ls -las /home/user/public_html/
> > > >
> > > > Apache complaining about directory permissions is pretty
> > significant.
> > > > Because Apache is running as a special user, it must have
> > read/search
> > > > access to that directory plus the parent user directory.
> > > >
> > > > It is odd though that you would get this complaint if straight .psp
> > > > file is working.
> > > >
> > > > Graham
> > > >
> > > > On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> > > >
> > > >> The Apache access/error log don't say much :
> > > >>
> > > >> access.log :
> > > >> 127.0.0.1 - - [20/Dec/2007:21:59:48 -0500] "GET /~user/test.psp_
> > > >> HTTP/1.1" 403 326 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US;
> > > >> rv:1.8.1.10) Gecko/20071128 Ubuntu/8.04 (hardy) Firefox/2.0.0.10"
> > > >>
> > > >> error.log :
> > > >> [Thu Dec 20 21:59:48 2007] [error] [client 127.0.0.1]
> > (13)Permission
> > > >> denied: cannot read directory for multi: /home/user/public_html/
> > > >>
> > > >> The same lines are repeated for each access to test.psp_.
> > > >>
> > > >> Thank you,
> > > >>
> > > >> Charles
> > > >>
> > > >>
> > > >> Graham Dumpleton wrote:
> > > >>
> > > >>> In the Apache access/error log, what is it saying when trying to
> > > >>> access the .psp_ file?
> > > >>>
> > > >>> There should be an indication as to what Apache has matched the
> > URL to
> > > >>> in the file system. With that can tell why configuration may not
> > be
> > > >>> working.
> > > >>>
> > > >>> Graham
> > > >>>
> > > >>> On 21/12/2007, Charles Perreault <muganor@videotron.ca> wrote:
> > > >>>
> > > >>>
> > > >>>>  Hello,
> > > >>>>
> > > >>>>  I'm teaching a class on web applications and I want my students
> > to use
> > > >>>> mod_python.  They'll have a couple of assignments during the
> > semester, all
> > > >>>> to be done in python cgi (first assignment, just to get started)
> > and psp.
> > > >>>> I'm now setuping Apache on our Ubuntu 7.10 server (Apache/2.2.4
> > (Ubuntu)
> > > >>>> mod_python/3.3.1 Python/2.5.1 Server).  All configuration have
> > to be done on
> > > >>>> server / virtual host config, forget the .htaccess (way to much
> > trouble for
> > > >>>> students).
> > > >>>>
> > > >>>>  My students will program their sites in their home folder
> > (~/public_html).
> > > >>>> I want them to be able to both use mod_python.psp and
> > mod_python.publisher,
> > > >>>> as I'll show them to use the both methods to create web
> > applications.  So
> > > >>>> far, I've easily been able to make both work in the same
> > directory using the
> > > >>>> following configuration (on Debian/Ubuntu httpd.conf is splitted
> > in multiple
> > > >>>> files, allowing to enable/disable modules easily) :
> > > >>>>
> > > >>>>  userdir.conf
> > > >>>>  ----------------------
> > > >>>>  <IfModule mod_userdir.c>
> > > >>>>         UserDir public_html
> > > >>>>         UserDir disabled root
> > > >>>>
> > > >>>>         <Directory /home/*/public_html>
> > > >>>>                 AllowOverride FileInfo AuthConfig Limit
> > > >>>>                 Options MultiViews Indexes SymLinksIfOwnerMatch
> > > >>>> IncludesNoExec
> > > >>>>
> > > >>>>                 AddHandler mod_python .py .psp .psp_
> > > >>>>                 PythonHandler mod_python.psp | .psp .psp_
> > > >>>>                 PythonHandler mod_python.publisher | .py
> > > >>>>                 PythonDebug On
> > > >>>>         </Directory>
> > > >>>>  </IfModule>
> > > >>>>
> > > >>>>  So you see I'm trying to assign .psp and .psp_ to
> > mod_python.psp and .py to
> > > >>>> publisher.  So http://localhost/~user/test.py and
> > > >>>> http://localhost/~user/test.psp both work.  However, psp
> > debugging with the
> > > >>>> underscore trick (.psp_) don't work.  I get a 403 forbidden
> > error when I try
> > > >>>> to access http://localhost/~user/test.psp_.
> > > >>>>
> > > >>>>  Of course, test.psp exists.  From what I read, test.psp_ don't
> > need to
> > > >>>> exist because the psp handler will understand that a debug
> > request was done.
> > > >>>>  But it's not working.  However, if I create a symbolic link to
> > test.psp :
> > > >>>>
> > > >>>>  ln -s test.psp test.psp_
> > > >>>>
> > > >>>>  the debug request works.  I get to see the generated PSP-
> > produced python
> > > >>>> code and psp-html source.
> > > >>>>
> > > >>>>  I must be missing something.  Is there an Apache configuration
> > that could
> > > >>>> be enabled by default that would prevent me to access .psp_
> > files that don't
> > > >>>> exist, before the mod_python.psp handler could do its magic ?
> > > >>>>
> > > >>>>  Anyone please can help ?  Thank you,
> > > >>>>
> > > >>>>
> > > >>
> > >
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From kamakhya_gupta at satyam.com  Fri Dec 21 07:12:19 2007
From: kamakhya_gupta at satyam.com (kamakhya)
Date: Fri Dec 21 07:16:19 2007
Subject: [mod_python] test
Message-ID: <1198239139.18282.16.camel@localhost.localdomain>

d


DISCLAIMER:
This email (including any attachments) is intended for the sole use of the intended recipient/s and may contain material that is CONFIDENTIAL AND PRIVATE COMPANY INFORMATION. Any review or reliance by others or copying or distribution or forwarding of any or all of the contents in this message is STRICTLY PROHIBITED. If you are not the intended recipient, please contact the sender by email and delete all copies; your cooperation in this regard is appreciated.

From kamakhya_gupta at satyam.com  Fri Dec 21 07:08:58 2007
From: kamakhya_gupta at satyam.com (kamakhya)
Date: Fri Dec 21 07:16:21 2007
Subject: [mod_python] only one time load of a module
Message-ID: <1198238938.18282.14.camel@localhost.localdomain>

I have a form.py, which looks like following

import xyz
def content(req,var1):
	return some_html_page

Each time the form.py is called, xyz is loaded again. In my case,
loading of xyz is time consuming. Can anyone suggest for only one time
load which can be reused?

Regards
kamakhya


DISCLAIMER:
This email (including any attachments) is intended for the sole use of the intended recipient/s and may contain material that is CONFIDENTIAL AND PRIVATE COMPANY INFORMATION. Any review or reliance by others or copying or distribution or forwarding of any or all of the contents in this message is STRICTLY PROHIBITED. If you are not the intended recipient, please contact the sender by email and delete all copies; your cooperation in this regard is appreciated.

From kamakhya_gupta at satyam.com  Fri Dec 21 07:01:55 2007
From: kamakhya_gupta at satyam.com (kamakhya)
Date: Fri Dec 21 07:16:23 2007
Subject: [mod_python] one  time load of import statement
Message-ID: <1198238515.18282.7.camel@localhost.localdomain>

I have a import xyz statement in the form.py, each time the from.py is
called , the module xyz is reloaded again. I want to load it only once.
Can any one suggest how to do it. 

Regards
kamakhya


DISCLAIMER:
This email (including any attachments) is intended for the sole use of the intended recipient/s and may contain material that is CONFIDENTIAL AND PRIVATE COMPANY INFORMATION. Any review or reliance by others or copying or distribution or forwarding of any or all of the contents in this message is STRICTLY PROHIBITED. If you are not the intended recipient, please contact the sender by email and delete all copies; your cooperation in this regard is appreciated.

From kamakhya_gupta at satyam.com  Fri Dec 21 07:23:04 2007
From: kamakhya_gupta at satyam.com (kamakhya)
Date: Fri Dec 21 07:23:55 2007
Subject: [mod_python] one time load of import
Message-ID: <1198239785.29447.8.camel@localhost.localdomain>

 I have a form.py which looks like following,
----------------
 import xyz

 def content(req,var1):
	return some_html_page

----------------
whenever from.py is called, the import xyz is reloaded. Since xyz is
time consuming. I don't want xyz to be  loaded again. Can any one help
me how to do it?

Regards
kamakhya


DISCLAIMER:
This email (including any attachments) is intended for the sole use of the intended recipient/s and may contain material that is CONFIDENTIAL AND PRIVATE COMPANY INFORMATION. Any review or reliance by others or copying or distribution or forwarding of any or all of the contents in this message is STRICTLY PROHIBITED. If you are not the intended recipient, please contact the sender by email and delete all copies; your cooperation in this regard is appreciated.

From mateusz at ant.gliwice.pl  Fri Dec 21 07:26:44 2007
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Dec 21 07:28:28 2007
Subject: [mod_python] only one time load of a module
In-Reply-To: <1198238938.18282.14.camel@localhost.localdomain>
References: <1198238938.18282.14.camel@localhost.localdomain>
Message-ID: <200712211326.44421.mateusz@ant.gliwice.pl>

On Friday 21 of December 2007, kamakhya wrote:
> I have a form.py, which looks like following
>
> import xyz
> def content(req,var1):
> 	return some_html_page
>
> Each time the form.py is called,
imported ?

> xyz is loaded again. 
Prolly false.
It is loaded once per each http process.
Prolly few first reqests hits new process, so it looks like, but later will be 
no more imports.

> In my case,  
> loading of xyz is time consuming. Can anyone suggest for only one time
> load which can be reused?



-- 
Mateusz Korniak
From linux at qbox.es  Fri Dec 21 08:17:21 2007
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Fri Dec 21 08:17:32 2007
Subject: [mod_python] Conflit with same different Session IDs
In-Reply-To: <88e286470712201552o2eee6e9ci299da503fef30f74@mail.gmail.com>
References: <1198172503.5707.48.camel@ThorUx>
	<928306280712201145t7613d256gb79aee7da708cc76@mail.gmail.com>
	<88e286470712201552o2eee6e9ci299da503fef30f74@mail.gmail.com>
Message-ID: <1198243042.9573.4.camel@ThorUx>

Hi again.

Ok, now the cookies have an app path for every key. And data is not
shared between applications.


I have added the PythonOption  in the two apps.
But now the It seems the data is not retrieved after.


When I check with:

	seesion.has_key('user')

 ? Its necesary access it with 	seesion.has_key('apppath/user') ?



Thank You


	S.R.Parda



El vie, 21-12-2007 a las 10:52 +1100, Graham Dumpleton escribi?:
> Or use a cookie path. See:
> 
>   http://www.modpython.org/live/current/doc-html/pyapi-sess-classes.html
> 
> In particular:
> 
>   mod_python.session.application_path
> 
> option.
> 
> Ensure this option is set differently for each application URL context
> using Location directive.
> 
> Graham
> 
> On 21/12/2007, Greg Fawcett <greg@vig.co.nz> wrote:
> > If your sessions rely on cookies (most do) then you can resolve your session
> > conflicts by using different domains - this will force browsers (all
> > browsers - you probably need to cater for more than just Firefox) to create
> > a new cookie/session. So set up appa.mydomain.co.nz for appa, and
> > appb.mydomain.co.nz for appb.
> >
> > I think your first question about module names and sessions should wait for
> > wiser heads than mine, but I doubt that it is the module conflict that is
> > breaking pickle in sessions.
> >
> > Cheers!
> > Greg.
> >
> >
> > On 21/12/2007, S.R.Pard? <linux@qbox.es> wrote:
> > > Hi.
> > >
> > > 1.- I will explain what I'm doing to understand me better:
> > >
> > > I'm trying to have various modpython applications that shared some
> > > modules (like libraries) and with others modules with little
> > > differences.
> > > I wrote about problems with module names coincidence between
> > > applications.
> > > Using import_module seems capable of load them when needed, but losing
> > > the pickle abbility for using session for data persistence.
> > >
> > > Now, I have modified the modules path, so modules shared among
> > > applications now resides in different packages so I import them with:
> > >
> > >         from appApack import users
> > > or
> > >         from appBpack import users
> > >
> > > And modpython apache session now works ok.
> > >
> > > ? Do you think thats is well done ?
> > >
> > >
> > >
> > >
> > > 2.- Now I realized of one hidden problem appears that i haven't in
> > > count:
> > >
> > > Because in Firefox the same session ID is used for different tab and
> > > browsers. Data stored in sessions, is used between applications.
> > >
> > > So, if I store an instance of class User in session['activeUser'], it is
> > > retrieved by application A and application B.
> > >
> > > But now, I received an error, when application B, try to retrieve an
> > > object from session['activeUser']:
> > >
> > >         ImportError: No module named appApack.users
> > >
> > > That's because when it tries to retrieve an user of appBpack instead it
> > > receives an instance of class User in appApack stored in the session
> > > with the same name 'activeUser'.
> > >
> > > Now the error is obvious, because the pack A doesn't exist in
> > > application B paths, and I use the import.
> > > Previously I tried with import_module and received an error trying to
> > > import  _mp_62617189222202272 , that was not so clear. So I discarted
> > > import_module.
> > >
> > >
> > >
> > > ? What can I do to solve that problem easily?
> > >
> > >         (I know I can prefix all session names with 'AppA_' or 'AppB_')
> > >
> > >
> > > ? Can I change session ID handling in Firefox ?
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> >
> >
> > --
> > Phone: +64 3 409 8165
> > Mobile: +64 21 333 291
> > Fax: +64 3 974 6810
> > Web: www.vig.co.nz
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >

From programmer.py at gmail.com  Fri Dec 21 10:44:55 2007
From: programmer.py at gmail.com (Jaime Wyant)
Date: Fri Dec 21 10:45:05 2007
Subject: [mod_python] Documentation for Web Programming
In-Reply-To: <200712211035.56182.sancar.saran@evodot.com>
References: <200712210153.08700.sancar.saran@evodot.com>
	<88e286470712201603w4ea62445wf7fbe2cea9cfcb7f@mail.gmail.com>
	<200712211035.56182.sancar.saran@evodot.com>
Message-ID: <d52c72d20712210744m32c35909n9ead342806a44a43@mail.gmail.com>

On Dec 21, 2007 2:35 AM, Sancar Saran <sancar.saran@evodot.com> wrote:

>
> Hello again,
>
> Thanks for response,
>
> Using google for example "python browser detector" results noting.
> Last week I do head crash to google find someting.
>

I've dug around looking for this information too.  But apparently, no one
has bothered writing something in python to do this.  So, like most people,
I've hacked together my own browser detection code.

The only time I've needed this hack was to detect if ie7 or less was being
used.  If you want to display png's with a transparent background, you'll
need to use proprietary microsoft attributes in your image tag.


>
> And download ton's of pdf to learn how to create web sites using python.
>
> Noting was help. Documentation was pathetic. Everybody foctus to Python
> programming language. No real examples for non "Real" programmers. Every
> document focus to steal C++ programmers using words "how python easy".
>
> I collect tiny bity information warious web sites to find where is the
> HTTP_USER_AGENT information.
>

If you want information about this, check this website.

http://www.zytrax.com/tech/web/browser_ids.htm


>
> And
>
> Frameworks try to put you in their way. I'm still noobie about python and
> then
> they push their way, their terminology. It was totally double alien world.
>

If you're still new to Python, then I *highly* recommend you learn the
basics of the language  before attempting to write a website (
http://www.diveintopython.org/).  Once you have the basics down, try some
simple CGI stuff first, and then move into a full fledged framework (I
recommend pylons).  http://pylonshq.com/

Pylons is a very loosely coupled web framework with decent documentation.
Beware though, there is a  moderate learning curve associated with pylons.
This is especially true for someone new to Python.

Good luck!

jw
-- 
"Government does not solve problems; it subsidizes them."
Ronald Reagan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071221/5be9c769/attachment-0001.html
From linux at qbox.es  Fri Dec 21 11:06:14 2007
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Fri Dec 21 11:06:22 2007
Subject: [mod_python] Conflit with same different Session IDs
In-Reply-To: <1198243042.9573.4.camel@ThorUx>
References: <1198172503.5707.48.camel@ThorUx>
	<928306280712201145t7613d256gb79aee7da708cc76@mail.gmail.com>
	<88e286470712201552o2eee6e9ci299da503fef30f74@mail.gmail.com>
	<1198243042.9573.4.camel@ThorUx>
Message-ID: <1198253174.5848.18.camel@ThorUx>

hI, 

Sorry to post again. 


I don't understand why session are not retrived , after change the path.


This is what I have done:

   <Directory "/home/user/appA/"> 
	PythonOption mod_python.session.application_path "/appA"
   </Directory>

or 

   <Location /appA>
	PythonOption mod_python.session.application_path /appA
   </Location>


And now I see the cookies in firefox have the path "appA". Ok.



When I test in a psp page:

	Session received: <%=str(dict(session))%> <br>
	<%
	# Set the session for next time
	session['TEST'] = 'Ok'
	%>
	Sesion set: <%=str(dict(session))%> <br>


The output the first time is what was expected:

	Session received: {}
	Session set: {'TEST':'Ok'}

the second time is the same when, the session received should be
{'TEST':'Ok'}. But the output was:

	Session received: {}
	Session set: {'TEST':'Ok'}



If I disable the application_path , all works fine. 

One stupid question:

? Is There something I should know ? 

Of course, because otherwise it would work. I'm reading session
documentation, but don't see nothing. 
I have test with session.load and session.save nd other things.




Thank You

	S.R.Parda



El vie, 21-12-2007 a las 14:17 +0100, S.R.Pard? escribi?:
> Hi again.
> 
> Ok, now the cookies have an app path for every key. And data is not
> shared between applications.
> 
> 
> I have added the PythonOption  in the two apps.
> But now the It seems the data is not retrieved after.
> 
> 
> When I check with:
> 
> 	seesion.has_key('user')
> 
>  ? Its necesary access it with 	seesion.has_key('apppath/user') ?
> 
> 
> 
> Thank You
> 
> 
> 	S.R.Parda
> 
> 
> 
> El vie, 21-12-2007 a las 10:52 +1100, Graham Dumpleton escribi?:
> > Or use a cookie path. See:
> > 
> >   http://www.modpython.org/live/current/doc-html/pyapi-sess-classes.html
> > 
> > In particular:
> > 
> >   mod_python.session.application_path
> > 
> > option.
> > 
> > Ensure this option is set differently for each application URL context
> > using Location directive.
> > 
> > Graham
> > 
> > On 21/12/2007, Greg Fawcett <greg@vig.co.nz> wrote:
> > > If your sessions rely on cookies (most do) then you can resolve your session
> > > conflicts by using different domains - this will force browsers (all
> > > browsers - you probably need to cater for more than just Firefox) to create
> > > a new cookie/session. So set up appa.mydomain.co.nz for appa, and
> > > appb.mydomain.co.nz for appb.
> > >
> > > I think your first question about module names and sessions should wait for
> > > wiser heads than mine, but I doubt that it is the module conflict that is
> > > breaking pickle in sessions.
> > >
> > > Cheers!
> > > Greg.
> > >
> > >
> > > On 21/12/2007, S.R.Pard? <linux@qbox.es> wrote:
> > > > Hi.
> > > >
> > > > 1.- I will explain what I'm doing to understand me better:
> > > >
> > > > I'm trying to have various modpython applications that shared some
> > > > modules (like libraries) and with others modules with little
> > > > differences.
> > > > I wrote about problems with module names coincidence between
> > > > applications.
> > > > Using import_module seems capable of load them when needed, but losing
> > > > the pickle abbility for using session for data persistence.
> > > >
> > > > Now, I have modified the modules path, so modules shared among
> > > > applications now resides in different packages so I import them with:
> > > >
> > > >         from appApack import users
> > > > or
> > > >         from appBpack import users
> > > >
> > > > And modpython apache session now works ok.
> > > >
> > > > ? Do you think thats is well done ?
> > > >
> > > >
> > > >
> > > >
> > > > 2.- Now I realized of one hidden problem appears that i haven't in
> > > > count:
> > > >
> > > > Because in Firefox the same session ID is used for different tab and
> > > > browsers. Data stored in sessions, is used between applications.
> > > >
> > > > So, if I store an instance of class User in session['activeUser'], it is
> > > > retrieved by application A and application B.
> > > >
> > > > But now, I received an error, when application B, try to retrieve an
> > > > object from session['activeUser']:
> > > >
> > > >         ImportError: No module named appApack.users
> > > >
> > > > That's because when it tries to retrieve an user of appBpack instead it
> > > > receives an instance of class User in appApack stored in the session
> > > > with the same name 'activeUser'.
> > > >
> > > > Now the error is obvious, because the pack A doesn't exist in
> > > > application B paths, and I use the import.
> > > > Previously I tried with import_module and received an error trying to
> > > > import  _mp_62617189222202272 , that was not so clear. So I discarted
> > > > import_module.
> > > >
> > > >
> > > >
> > > > ? What can I do to solve that problem easily?
> > > >
> > > >         (I know I can prefix all session names with 'AppA_' or 'AppB_')
> > > >
> > > >
> > > > ? Can I change session ID handling in Firefox ?
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > >
> > >
> > >
> > > --
> > > Phone: +64 3 409 8165
> > > Mobile: +64 21 333 291
> > > Fax: +64 3 974 6810
> > > Web: www.vig.co.nz
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From linux at qbox.es  Fri Dec 21 20:38:34 2007
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Fri Dec 21 20:38:43 2007
Subject: [mod_python] Conflit with same different Session IDs
In-Reply-To: <1198253174.5848.18.camel@ThorUx>
References: <1198172503.5707.48.camel@ThorUx>
	<928306280712201145t7613d256gb79aee7da708cc76@mail.gmail.com>
	<88e286470712201552o2eee6e9ci299da503fef30f74@mail.gmail.com>
	<1198243042.9573.4.camel@ThorUx>  <1198253174.5848.18.camel@ThorUx>
Message-ID: <1198287514.6023.17.camel@ThorUx>

Hi,

Ok, problem solved. Thank You very much.


At end, It was my fail, because I was misleading the directory name for
session.application_path.

The real directories of the application are different for
simplification, of the examples I posted.
In the real ones, I used a little different directory name for
session.application_path variable, something like (nothe the Capital
letters):

   <Directory "/home/user/AppA/"> 
        PythonOption mod_python.session.application_path "/appA"
   </Directory>


By error, I thought that the directory indicated in the application_path
was a virtual one for the cookie.
Changing the value to the exact and real directory (with capital
letters) solved the problem. Something like:

   <Directory "/home/user/AppA/"> 
        PythonOption mod_python.session.application_path "/AppA"
   </Directory>


Now it works perfect, I can continue the development and testing of the
applicationss , now I'm more confident with the robustness of the
applications based in mod_python (thinking in the final production
environment).


Your help was greatly aprecciated.


	S.R.Pard?




From scarfboy at gmail.com  Sat Dec 22 08:19:35 2007
From: scarfboy at gmail.com (Bart)
Date: Sat Dec 22 08:19:42 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <88e286470712210151r245fe29u9761cdef7cfa508d@mail.gmail.com>
References: <476B2D7C.9050205@videotron.ca>
	<88e286470712201912p4be6f182rcda85c0da590eade@mail.gmail.com>
	<476B4019.2070104@videotron.ca>
	<88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
	<08fd01c84397$679e00f0$36da02d0$@com>
	<88e286470712210151r245fe29u9761cdef7cfa508d@mail.gmail.com>
Message-ID: <b71082d80712220519k7f0262f7s676676018cc0c204@mail.gmail.com>

On Dec 21, 2007 10:51 AM, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> On 21/12/2007, Alec Matusis <matusis@yahoo.com> wrote:
> > > WSGI is the way Python is heading and way more hosting options available
> > for it.
> >
> > Does this mean that mod_python will become unmaintained or obsolete?
>
> One can still use mod_python as a way of hosting WSGI applications,
> although for Apache hosting mod_wsgi is a more purpose built solution
> for that. There are some things obviously that mod_python can do that
> mod_wsgi can't though because the point of mod_python is to allow
> programming against Apache interfaces and not restricted WSGI
> interface.
>
> I think the bigger challenge to mod_python is Python 3.0. The problem
> there is the change to the standard string type being unicode, with
> byte strings being distinct and more limited than current string type
> in Python 2.X.
>
> The mod_python interfaces are all going to have to be updated to cope
> with this change and it will probably mean that applications on top
> will also need to be changed. Same sort of changes will need to occur
> to a degree with WSGI applications as well but not as much because its
> interface is much more restricted in scope.
>
> What I would be concerned about is whether anyone would step forward
> to do the hard work on updating mod_python for Python 3.0. I know that
> I will not be that person as my priorities lie elsewhere these days.
> So, probably important for people to start thinking about and
> discussing what they would like to see happen with mod_python.

I'm guessing few people would even know what those changes are.

The unicode support thing ought to be simple - since it's
lacking right now, it just needs to be introduced right.
Of course, internally it's probably more complex.

I think it's going to be harder to keep mod_python together.
there is no benevolent dictator, so I fear things are just going
to get more complex (I already think m_p could stand a lot
of simplification - it's not something I'd suggest friends to use)
and sort of complexify itself out of relevance. Which is a pity.

--Bart
From graham.dumpleton at gmail.com  Sat Dec 22 18:12:55 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Dec 22 18:13:01 2007
Subject: [mod_python] Problem with .psp_
In-Reply-To: <b71082d80712220519k7f0262f7s676676018cc0c204@mail.gmail.com>
References: <476B2D7C.9050205@videotron.ca>
	<88e286470712201912p4be6f182rcda85c0da590eade@mail.gmail.com>
	<476B4019.2070104@videotron.ca>
	<88e286470712202046h13f8708ep1edac2a27c317052@mail.gmail.com>
	<08fd01c84397$679e00f0$36da02d0$@com>
	<88e286470712210151r245fe29u9761cdef7cfa508d@mail.gmail.com>
	<b71082d80712220519k7f0262f7s676676018cc0c204@mail.gmail.com>
Message-ID: <88e286470712221512q1d439e27q8f090360ea4d4eb7@mail.gmail.com>

FWIW, the discussion about Python 3.0 and WSGI can be found at:

  http://groups.google.com/group/python-web-sig/browse_frm/thread/f8f54fe99485312a

This may give a feel for what some of the issues will be.

Graham

On 23/12/2007, Bart <scarfboy@gmail.com> wrote:
> On Dec 21, 2007 10:51 AM, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > On 21/12/2007, Alec Matusis <matusis@yahoo.com> wrote:
> > > > WSGI is the way Python is heading and way more hosting options available
> > > for it.
> > >
> > > Does this mean that mod_python will become unmaintained or obsolete?
> >
> > One can still use mod_python as a way of hosting WSGI applications,
> > although for Apache hosting mod_wsgi is a more purpose built solution
> > for that. There are some things obviously that mod_python can do that
> > mod_wsgi can't though because the point of mod_python is to allow
> > programming against Apache interfaces and not restricted WSGI
> > interface.
> >
> > I think the bigger challenge to mod_python is Python 3.0. The problem
> > there is the change to the standard string type being unicode, with
> > byte strings being distinct and more limited than current string type
> > in Python 2.X.
> >
> > The mod_python interfaces are all going to have to be updated to cope
> > with this change and it will probably mean that applications on top
> > will also need to be changed. Same sort of changes will need to occur
> > to a degree with WSGI applications as well but not as much because its
> > interface is much more restricted in scope.
> >
> > What I would be concerned about is whether anyone would step forward
> > to do the hard work on updating mod_python for Python 3.0. I know that
> > I will not be that person as my priorities lie elsewhere these days.
> > So, probably important for people to start thinking about and
> > discussing what they would like to see happen with mod_python.
>
> I'm guessing few people would even know what those changes are.
>
> The unicode support thing ought to be simple - since it's
> lacking right now, it just needs to be introduced right.
> Of course, internally it's probably more complex.
>
> I think it's going to be harder to keep mod_python together.
> there is no benevolent dictator, so I fear things are just going
> to get more complex (I already think m_p could stand a lot
> of simplification - it's not something I'd suggest friends to use)
> and sort of complexify itself out of relevance. Which is a pity.
>
> --Bart
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From cchamb2 at cisaz.com  Thu Dec 27 11:47:44 2007
From: cchamb2 at cisaz.com (Charles Chambers [c])
Date: Thu Dec 27 12:37:47 2007
Subject: [mod_python] Wwindows installation of
	mod_python-3.3.1win32-py2.5-Apache2.0 [signed]
Message-ID: <000001c848af$3e1c7c30$0a00a8c0@charlies>

I have Windows XP Home installed on my home/main computer, which serves as a training and educational workstation.

I have a stock Apache 2.2.6 installed on a computer used for education.  All installation  options are default.

I also have ActivePython 2.5.1.1-win32-x86 installed on the same computer.  All installation options are default, except for the program path (it's now at 
c:\program files\python).

The installation of the Apache python module fails (I think) with an error message referencing the copying of:
 
c:\program files\Python\lib\shutil.py and 
c:\program files\Apache Software Foundation\modules\mod_python.so

The first appears to be present as specified, but the second is not.

I'm only installing it so that I can test, develop, and deploy on the same box for education purposes.

Do I need to worry about the error message on the installer?




--
--------------------- [ SECURITY NOTICE ] ---------------------
To: mod_python@modpython.org.
For your security, cchamb2@cisaz.com
digitally signed this message on 27 December 2007 at 17:37:38 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
---------------- [ CIPHIRE DIGITAL SIGNATURE ] ----------------
Q2lwaGlyZSBTaWcuAjhtb2RfcHl0aG9uQG1vZHB5dGhvbi5vcmcAY2NoYW1iMkBj
aXNhei5jb20AZW1haWwgYm9keQDXAgAAfAB8AAAAAQAAAOLic0fXAgAA1AMAAgAC
AAIAIKcndwSb7LAnCJoHsiLMAKdI7J4GgO+XNCGD5Ql/An3eAQAghoV4BdJtXHwt
Z83FCbGFuhfyoDRB2s/O+wEDKonZKi2NAvMTYpSL3OUGAD9E3Zo+hZrrZ5En3AQw
VadZvCLLU2lnRW5k
------------------ [ END DIGITAL SIGNATURE ] ------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071227/b19fd452/attachment.html
From cchamb2 at cisaz.com  Thu Dec 27 18:45:58 2007
From: cchamb2 at cisaz.com (Charles Chambers [c])
Date: Thu Dec 27 18:45:36 2007
Subject: [mod_python] Windows [signed]
Message-ID: <003501c848e2$a1a5de30$0a00a8c0@charlies>

And for my next question:

Same system, installing Apache with a preasembled binary that throws in Apache 2.0.54, along with the modules for Perl 5.8.7, mod_perl 2.0.1, OpenSSL 0.9.7, and php 4.3.11.  I still can't get mod_python to load right.  I'm using the mod_python-3.3.1.win32-ph2.5-Apache2.0 binary distribution.

I'm still getting the error message that Apache can't find the module.

The only difference is that the Apache directory is now c:\Program Files\Apache2\Apache2\modules.






--
--------------------- [ SECURITY NOTICE ] ---------------------
To: mod_python@modpython.org.
For your security, cchamb2@cisaz.com
digitally signed this message on 27 December 2007 at 23:45:29 UTC.
Verify this digital signature at http://www.ciphire.com/verify.
---------------- [ CIPHIRE DIGITAL SIGNATURE ] ----------------
Q2lwaGlyZSBTaWcuAjhtb2RfcHl0aG9uQG1vZHB5dGhvbi5vcmcAY2NoYW1iMkBj
aXNhei5jb20AZW1haWwgYm9keQCgAQAAfAB8AAAAAQAAABk5dEegAQAAKwIAAgAC
AAIAIKcndwSb7LAnCJoHsiLMAKdI7J4GgO+XNCGD5Ql/An3eAQAghoV4BdJtXHwt
Z83FCbGFuhfyoDRB2s/O+wEDKonZKliVYXY7LywW0A+wZ5PLIKIOHodZ7SywMquO
jiO0J73MU2lnRW5k
------------------ [ END DIGITAL SIGNATURE ] ------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071227/e66afe1a/attachment.html
From grisha at modpython.org  Sat Dec 29 17:03:56 2007
From: grisha at modpython.org (Cruz Bowden)
Date: Sat Dec 29 17:05:40 2007
Subject: [mod_python] [SPAM] December promo on w4tches
Message-ID: <lksmyXXGTWgrisha@modpython.org>

Christmas are coming, 0rder precious repl1ca w4tches!
Brand new models of w4tches, purses & bags from 2008!
http://www.assdefgg.com/



From grisha at modpython.org  Sun Dec 30 04:25:02 2007
From: grisha at modpython.org (Kyle Salinas)
Date: Sun Dec 30 04:26:46 2007
Subject: [mod_python] [SPAM] Winter qual1ty w4tches offer HUAc
Message-ID: <eusavmsPZLWMNgrisha@modpython.org>

Newest 2008 repl1ca watch3s collection!
15% off in January and huge choose of repl1cas!
http://www.spdooekk.com/

yrwbiLRhAo6



From grisha at modpython.org  Mon Dec 31 08:28:36 2007
From: grisha at modpython.org (Jonathon Darby)
Date: Mon Dec 31 08:30:32 2007
Subject: [mod_python] [SPAM] Hot repl1ca w4tches from 2008 BpAj
Message-ID: <rblhjLSMKDKgrisha@modpython.org>

Newest 2008 repl1ca watch3s collection!
15% off in January and huge choose of repl1cas!
http://www.spoeeiij.com/

3q6s9trI2ny4Pzo



From grisha at modpython.org  Mon Dec 31 18:39:20 2007
From: grisha at modpython.org (Brant Finch)
Date: Mon Dec 31 18:41:07 2007
Subject: [mod_python] [SPAM] Hot repl1ca w4tches from 2008 wwwk
Message-ID: <zbrzjRSOLUBgrisha@modpython.org>

New Year is knocking, 0rder precious repl1ca w4tches!
Brand new models of w4tches, purses & bags from 2008!
http://www.spoeeiij.com/

2ic1zcD



