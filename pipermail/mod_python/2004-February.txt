From khurram at renai-soft.com  Sun Feb  1 15:35:56 2004
From: khurram at renai-soft.com (Khurram)
Date: Sun Feb  1 04:34:25 2004
Subject: [mod_python]POST form data retrieval&In-Reply-To=
Message-ID: <1075671356.401d713c7bece@webmail.renai-soft.com>

There are many ways you can learn how to parse data(I assume you know how to do
it from your last post) and three ways to extract data in mod_python. 

request object : use request object's read methods to extract the body of the
request.
connection object: using connection object gives you full control over the
parsing of the request. You will need extra effort through. The headers are
also unparsed and you will get connection object which has no utility methods
or properties.
mod_python cgi handler source. If you have developed the program using cgi then
this is the best method. Please see this cgi handler's code for how to setup a
cgi environment for you script using mod_python.

Khurram Ijaz,
Renaissance Software.
http://www.renai-soft.com

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

From jalil at securia.com  Mon Feb  2 10:12:45 2004
From: jalil at securia.com (jalil)
Date: Mon Feb  2 14:06:15 2004
Subject: [mod_python] Any support for on-time Initialization?
Message-ID: <401E931D.8070407@securia.com>

I was wondering if there is any support for one-time initialization for 
applications in mod-python - similar to the init() call of a servlet for 
example. I would like to set up a database connection pool but I need to 
do it only once when my app starts.

If there is no support for initialization, what is the best way to set 
up things that need to be set up only once per app in mod-python?

Thanks,

-Jalil

From dwmp at opti.cgi.net  Mon Feb  2 12:29:56 2004
From: dwmp at opti.cgi.net (Daniel West)
Date: Mon Feb  2 14:24:24 2004
Subject: [mod_python] Any support for on-time Initialization?
In-Reply-To: <401E931D.8070407@securia.com>
Message-ID: <5.2.1.1.2.20040202122207.0303d6b0@mail.pyxos.com>


Jalil,

The best way to setup database connections is just to wait for the first 
request to come in.  Keep your database connection in a module name space 
that all of your pages share and it'll persist between connections so long 
as you don't explicitly close it.  Once you import a module it stays in the 
interpreter name space between requests so future requests have access to 
the module without having to load it again.

If you're interested in keeping "pools" of database connections then you 
may be considering one of the multi-threaded MPM's for Apache 2.  You'll 
save yourself a lot of hair pulling if you stick with the prefork mpm.  It 
bears saying that in the prefork mpm, each process does not share 
interpreter resources with the other processes.  This means each process 
will have it's own "pool" of database connections which may not bode well 
with your database server if you run a moderately heavy Apache load.

-Dan



At 10:12 AM 2/2/2004 -0800, you wrote:
>I was wondering if there is any support for one-time initialization for 
>applications in mod-python - similar to the init() call of a servlet for 
>example. I would like to set up a database connection pool but I need to 
>do it only once when my app starts.
>
>If there is no support for initialization, what is the best way to set up 
>things that need to be set up only once per app in mod-python?
>
>Thanks,
>
>-Jalil
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python


From lawrence_jesse at yahoo.ca  Mon Feb  2 14:28:29 2004
From: lawrence_jesse at yahoo.ca (Jesse Lawrence)
Date: Mon Feb  2 15:23:28 2004
Subject: [mod_python] Conditional handlers?
Message-ID: <20040202192829.28301.qmail@web11303.mail.yahoo.com>

Hello everyone,

Is there a way of doing conditional handlers, for
instance, using the PythonAuthenHandler only if the
request uses the HTTP POST method?

Thanks,

Jesse Lawrence

______________________________________________________________________ 
Post your free ad now! http://personals.yahoo.ca
From neel at mediapulse.com  Mon Feb  2 14:33:55 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Mon Feb  2 15:28:57 2004
Subject: [mod_python] Any support for on-time Initialization?
Message-ID: <C0FC22C08B82074A88B500617641577787A830@johnson.mediapulse.net>

>From my own adventures, MySQL is okay with having a large number of
connections open - it doesn't seem to affect performance.  Just make
sure your connection limit is set at or higher than your apache process
limit; there will be a one-to-one tie here assuming each apache child
makes only one connection.

Also, MySQL seems to be okay with not getting an explicit db.close()
call, so you can connect to the database either in the first request and
reuse that from there on out, or connect when the module is imported,
like such:

from modpython import apache
import MySQLdb

db = MySQLdb.connect()

def handler(req):
	c = db.cursor()
	## do stuff
	c.close()
	
	return apache.OK

Which can be the easiest if your database settings can be hard coded.
Like Daniel said, going with a threaded MPM is not for the faint of
heart, as MySQLdb doesn't like sharing connections very much.

If your not using MySQL you may be able to get away with the above, but
do some testing first to be safe.


> -----Original Message-----
> From: Daniel West [mailto:dwmp@opti.cgi.net] 
> Sent: Monday, February 02, 2004 1:30 PM
> To: mod_python@modpython.org
> Subject: Re: [mod_python] Any support for on-time Initialization?
> 
> 
> 
> Jalil,
> 
> The best way to setup database connections is just to wait 
> for the first 
> request to come in.  Keep your database connection in a 
> module name space 
> that all of your pages share and it'll persist between 
> connections so long 
> as you don't explicitly close it.  Once you import a module 
> it stays in the 
> interpreter name space between requests so future requests 
> have access to 
> the module without having to load it again.
> 
> If you're interested in keeping "pools" of database 
> connections then you 
> may be considering one of the multi-threaded MPM's for Apache 
> 2.  You'll 
> save yourself a lot of hair pulling if you stick with the 
> prefork mpm.  It 
> bears saying that in the prefork mpm, each process does not share 
> interpreter resources with the other processes.  This means 
> each process 
> will have it's own "pool" of database connections which may 
> not bode well 
> with your database server if you run a moderately heavy Apache load.
> 
> -Dan
> 
> 
> 
> At 10:12 AM 2/2/2004 -0800, you wrote:
> >I was wondering if there is any support for one-time 
> initialization for 
> >applications in mod-python - similar to the init() call of a 
> servlet for 
> >example. I would like to set up a database connection pool 
> but I need to 
> >do it only once when my app starts.
> >
> >If there is no support for initialization, what is the best 
> way to set up 
> >things that need to be set up only once per app in mod-python?
> >
> >Thanks,
> >
> >-Jalil
> >
> >_______________________________________________
> >Mod_python mailing list
> >Mod_python@modpython.org
> >http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From neel at mediapulse.com  Mon Feb  2 14:43:16 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Mon Feb  2 15:38:18 2004
Subject: [mod_python] Conditional handlers?
Message-ID: <C0FC22C08B82074A88B50061764157776B9A49@johnson.mediapulse.net>

You can return apache.DECLINED, which tells apache your handler declines
processing this request and to go onto the next.

In the case of an AuthenHandler, I would just simply check the request
type and if a POST check the user, otherwise return an apache.OK

These are for straight handlers, I do not know if these work in the
publisher handler - I've never used it.

Mike

> -----Original Message-----
> From: Jesse Lawrence [mailto:lawrence_jesse@yahoo.ca] 
> Sent: Monday, February 02, 2004 2:28 PM
> To: mod_python@modpython.org
> Subject: [mod_python] Conditional handlers?
> 
> 
> Hello everyone,
> 
> Is there a way of doing conditional handlers, for
> instance, using the PythonAuthenHandler only if the
> request uses the HTTP POST method?
> 
> Thanks,
> 
> Jesse Lawrence
> 
> ______________________________________________________________
> ________ 
> Post your free ad now! http://personals.yahoo.ca
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From gwidion at mpc.com.br  Mon Feb  2 18:21:34 2004
From: gwidion at mpc.com.br (Joao S. O. Bueno)
Date: Mon Feb  2 16:16:32 2004
Subject: [mod_python] Conditional handlers?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9A49@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9A49@johnson.mediapulse.net>
Message-ID: <401E952E.70607@mpc.com.br>

Michael C. Neel escreveu:
> You can return apache.DECLINED, which tells apache your handler declines
> processing this request and to go onto the next.
> 
> In the case of an AuthenHandler, I would just simply check the request
> type and if a POST check the user, otherwise return an apache.OK
> 
> These are for straight handlers, I do not know if these work in the
> publisher handler - I've never used it.
> 
> Mike

Actually, you can have an starigfht handler for authentication and the 
publisher for the main section. I am using it this way.
LAs, I also have conditional handlers on the very same app. - I use
  req.add_handler ("PythonHandler","mod_python.publisher")
therefore, the actuall application is reached only if authencation 
suceeds, else, it is directed to a dummy handler.


> 
> 
>>-----Original Message-----
>>From: Jesse Lawrence [mailto:lawrence_jesse@yahoo.ca] 
>>Sent: Monday, February 02, 2004 2:28 PM
>>To: mod_python@modpython.org
>>Subject: [mod_python] Conditional handlers?
>>
>>
>>Hello everyone,
>>
>>Is there a way of doing conditional handlers, for
>>instance, using the PythonAuthenHandler only if the
>>request uses the HTTP POST method?
>>
>>Thanks,
>>
>>Jesse Lawrence
>>
>>______________________________________________________________
>>________ 
>>Post your free ad now! http://personals.yahoo.ca
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 


From jalil at securia.com  Mon Feb  2 15:01:56 2004
From: jalil at securia.com (jalil)
Date: Mon Feb  2 18:55:25 2004
Subject: [mod_python] How to use this class (Pool.py)?
Message-ID: <401ED6E4.6090404@securia.com>

I came across the following Pool.py 
(http://dustman.net/andy/python/Pool) while reading MySQLdb docs but I 
am not sure how to use it.  I have inserted the code below. Could 
somebody familiar let me know how we are supposed to use it?

Thanks,

-Jalil

 
class Pool(Queue):
 
    """Manage a fixed-size pool of reusable, identical objects."""
    
    def __init__(self, constructor, poolsize=5):
        Queue.__init__(self, poolsize)
        self.constructor = constructor
 
    def get(self, block=1):
        """Get an object from the pool or a new one if empty."""
        try:
            return self.empty() and self.constructor() or 
Queue.get(self, block)        except Empty:
            return self.constructor()
        
    def put(self, obj, block=1):
        """Put an object into the pool if it is not full. The caller must
        not use the object after this."""
        try:
            return self.full() and None or Queue.put(self, obj, block)
        except Full:
            pass
 
 
class Constructor:
 
    """Returns a constructor that returns apply(function, args, kwargs)
    when called."""
 
    def __init__(self, function, *args, **kwargs):
        self.f = function
        self.args = args
        self.kwargs = kwargs
 
    def __call__(self):
        return apply(self.f, self.args, self.kwargs)


From dwmp at opti.cgi.net  Mon Feb  2 17:23:29 2004
From: dwmp at opti.cgi.net (Daniel West)
Date: Mon Feb  2 19:18:07 2004
Subject: [mod_python] Any support for on-time Initialization?
In-Reply-To: <C0FC22C08B82074A88B500617641577787A830@johnson.mediapulse.
 net>
Message-ID: <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>

At 02:33 PM 2/2/2004 -0500, you wrote:

>Like Daniel said, going with a threaded MPM is not for the faint of
>heart, as MySQLdb doesn't like sharing connections very much.

Actually, database connections can successfully be shared among multiple 
threads with the standard Python Queue module plus some support 
code.  However, mod_python seems to have problems in general with 
multi-threaded environments.  It's quite the shame too, because the Apache 
2 worker MPM is great for moderate to high load sites.  Plus it's overall 
more efficient when it comes to shared resources like connection pools.

-Dan



From grisha at modpython.org  Mon Feb  2 21:41:28 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Feb  2 22:36:31 2004
Subject: [mod_python] Any support for on-time Initialization?
In-Reply-To: <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
References: <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
Message-ID: <20040202213838.P99543@onyx.ispol.com>



On Mon, 2 Feb 2004, Daniel West wrote:

> At 02:33 PM 2/2/2004 -0500, you wrote:
>
> >Like Daniel said, going with a threaded MPM is not for the faint of
> >heart, as MySQLdb doesn't like sharing connections very much.
>
> Actually, database connections can successfully be shared among multiple
> threads with the standard Python Queue module plus some support
> code.  However, mod_python seems to have problems in general with
> multi-threaded environments.

Just to be fair - mod_python does not have problems with multi-threaded
environments, none that I am aware of at least. It is used quite a bit in
mutlithreaded environments, not the least of which is Windows, where
multi-threaded is the only option.

What does have a problem with multi-threaded environment is one of the
commonly used MySQL Python modules, which doesn't really have much to do
with mod_python itself.

Grisha
From dwmp at opti.cgi.net  Mon Feb  2 21:00:04 2004
From: dwmp at opti.cgi.net (Daniel West)
Date: Mon Feb  2 22:55:07 2004
Subject: [mod_python] Any support for on-time Initialization?
In-Reply-To: <20040202213838.P99543@onyx.ispol.com>
References: <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
 <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
Message-ID: <5.2.1.1.2.20040202205034.02e53de0@mail.pyxos.com>

At 09:41 PM 2/2/2004 -0500, you wrote:


>On Mon, 2 Feb 2004, Daniel West wrote:
>
> > At 02:33 PM 2/2/2004 -0500, you wrote:
> >
> > >Like Daniel said, going with a threaded MPM is not for the faint of
> > >heart, as MySQLdb doesn't like sharing connections very much.
> >
> > Actually, database connections can successfully be shared among multiple
> > threads with the standard Python Queue module plus some support
> > code.  However, mod_python seems to have problems in general with
> > multi-threaded environments.
>
>Just to be fair - mod_python does not have problems with multi-threaded
>environments, none that I am aware of at least. It is used quite a bit in
>mutlithreaded environments, not the least of which is Windows, where
>multi-threaded is the only option.
>
>What does have a problem with multi-threaded environment is one of the
>commonly used MySQL Python modules, which doesn't really have much to do
>with mod_python itself.


Grisha,

I posted a problem I ran into a couple weeks ago to this list (subject: 
3.1.2b and worker_mpm).  Seems the output filter under load was mixing up 
requests.  When making a request I would get part of my request plus part 
of another request.  When I changed to a prefork model, that problem went 
away.  The only response I got to my message was from Perry who claims "it 
went to pieces under stress testing" and "I saw some
wicked nasty recursion errors" in reference to the worker_mpm and 
mod_python.  Since I didn't get any response from you or anyone else in the 
know about these things, I was left to assume that this was a weak area for 
mod_python which would receive attention in due time.  I even offered my 
assistance for testing.  I don't know how else to describe the problem I 
experienced except for a threading issue.

Perhaps there's something there that you're not aware of.  I, for one, 
would love to be able to use worker_mpm again.

-Dan


From perry.tew at cibavision.novartis.com  Mon Feb  2 22:44:33 2004
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Mon Feb  2 23:39:37 2004
Subject: [mod_python] Any support for on-time Initialization?
Message-ID: <OF7B069B74.C4F46FFB-ON85256E2F.00127677-85256E2F.00148D89@EU.novartis.net>

Grisha,
   Alas, I fear I have offended.  Let me elaborate on the errors I 
received.  While using the worker MPM, I was making calls to an oracle 
database using cx_Oracle (bad idea) and later the DCOracle2 
implementation.  Under low stress, the worker MPM contained no errors. 
However, under heavy load, I started to receive errors thrown from the 
jonpy dbpool.py class, specifically in the _connection_notinuse method. It 
would recurse until the apache child died.    When I switched to the 
prefork model I could not reproduce the error at all.  And I pounded the 
site using ab and 250 clients. 
    Without knowing for sure that the jonpy module was absolutely correct, 
it is unfair for me to say that it's mod_python's fault.  However, it is 
fair for me to say that the combination of mod_python with the jon.dbpool 
class did not work under the worker MPM, and does work under the prefork.  
I could not and do not know how to validate the dbpool.py class.  I'm new 
to python and have yet to understand weak references and some other 
things.  It was easy for me to recompile apache using a different MPM.   I 
hope that sheds some more light onto the situation I'm encountered and 
gives mod_python a fairer shake.

    Let me also say that I feel really bad speaking negatively about free 
open source software.  I know you've worked hard for the past several 
years to provide a really good python module for apache.  I do appreciate 
it.   I also know that since I've paid zero dollars to use it, it's bad 
mojo to criticize.  However, I was only trying to help another developer 
having similar issues as I was.

    I do intend to contribute to this project. But, I come from a strong 
java background and am learning python and C as I go.  Man, do I _love_ 
python.  Right now I am but a grasshopper.   I will commit to 
troubleshooting the jonpy module under the worker MPM and report back what 
the root cause failure analysis is (as best as I understand it).   I did 
not do it previously because of deadlines (I know we all got 'em).  When I 
can, I will investigate.      It would help if anyone has any experience 
with the jonpy modules and can report on their experiences.  It would also 
help if someone could suggest another pooling module to manage db 
connections under a threaded model.  I don't know of another.

    In the meantime, is there anything I can do from a low-tech or 
non-tech perspective that doesn't require a critical timeline?

Thanks,
Perry Tew






At 09:41 PM 2/2/2004 -0500, you wrote:


>On Mon, 2 Feb 2004, Daniel West wrote:
>
> > At 02:33 PM 2/2/2004 -0500, you wrote:
> >
> > >Like Daniel said, going with a threaded MPM is not for the faint of
> > >heart, as MySQLdb doesn't like sharing connections very much.
> >
> > Actually, database connections can successfully be shared among 
multiple
> > threads with the standard Python Queue module plus some support
> > code.  However, mod_python seems to have problems in general with
> > multi-threaded environments.
>
>Just to be fair - mod_python does not have problems with multi-threaded
>environments, none that I am aware of at least. It is used quite a bit in
>mutlithreaded environments, not the least of which is Windows, where
>multi-threaded is the only option.
>
>What does have a problem with multi-threaded environment is one of the
>commonly used MySQL Python modules, which doesn't really have much to do
>with mod_python itself.


Grisha,

I posted a problem I ran into a couple weeks ago to this list (subject: 
3.1.2b and worker_mpm).  Seems the output filter under load was mixing up 
requests.  When making a request I would get part of my request plus part 
of another request.  When I changed to a prefork model, that problem went 
away.  The only response I got to my message was from Perry who claims "it 

went to pieces under stress testing" and "I saw some
wicked nasty recursion errors" in reference to the worker_mpm and 
mod_python.  Since I didn't get any response from you or anyone else in 
the 
know about these things, I was left to assume that this was a weak area 
for 
mod_python which would receive attention in due time.  I even offered my 
assistance for testing.  I don't know how else to describe the problem I 
experienced except for a threading issue.

Perhaps there's something there that you're not aware of.  I, for one, 
would love to be able to use worker_mpm again.

-Dan


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From eurleif at ecritters.biz  Tue Feb  3 04:54:53 2004
From: eurleif at ecritters.biz (Leif K-Brooks)
Date: Tue Feb  3 05:55:43 2004
Subject: [mod_python] DirectoryIndex index.py?
Message-ID: <401F6FED.3000001@ecritters.biz>

I'm starting to like mod_python, but I'm running into a bit of a problem 
with making a Python script a DirectoryIndex. I have this configuration:

AddHandler python-program .py
PythonHandler myhandler
DirectoryIndex index.py

But when I go to http://localhost/directory/, I get the Apache file 
listing. My Python handler is stored in a seprate directory, and there's 
no physical index.py file, so I'm guessing that Apache thinks there is 
no file at all. How can I get it to use my DirectoryIndex?
From khurram at renai-soft.com  Tue Feb  3 17:35:31 2004
From: khurram at renai-soft.com (Khurram)
Date: Tue Feb  3 06:29:12 2004
Subject: [mod_python] Any support for on-time Initialization?
Message-ID: <1075851331.4020304306bc4@webmail.renai-soft.com>

Hi,

I have been using python in multithreaded environments for a long time. In the
web-server env i had to go for multi-threaded module (perchild mpm) due to some
transactional requirements for an application. We had mysql and apache 1.3 so
the transactional state was not shared. The application was developed on
windows, so it had no problem on that system with apache 2.0.48 . For unix we
had to upgrade and we now have a single process running for some domains(Do
give a max request limit for the child process). The server is receiving alot
of requests each hour(1.3 crashed under this load),  and is able to scale to
that, thanx to the multi-threaded architecture. 

If there is some problem its in your code. Check that thread locks are right.

Khurram Ijaz,
Renaissance Software.
http://www.renai-soft.com

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

From khurram at renai-soft.com  Tue Feb  3 17:55:29 2004
From: khurram at renai-soft.com (Khurram)
Date: Tue Feb  3 06:49:20 2004
Subject: [mod_python] gzip and conditional get
Message-ID: <1075852529.402034f115625@webmail.renai-soft.com>

An example of output compression.

import gzip

def getWriter(req):
    try:
        if req.headers_in['Accept-Encoding']=='gzip, deflate':
            return gzip.GZipFile('','wb',9,req)
    except:
        pass
    return req

def processRequest(req):
    writer = getWriter(req)
    writer.write(header)   
    writer.write(content)
    writer.write(footer)
    writer.close() # Good practice to do this. It does not try to close req
object
    return apache.OK

If you want to use it with Cheetah or another templating engine, most of them
accept writers and you will be better off passing the writer to them for quick
response.


Khurram Ijaz,
Renaissance Software.
http://www.renai-soft.com

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

From grisha at modpython.org  Tue Feb  3 06:34:38 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Tue Feb  3 07:29:42 2004
Subject: [mod_python] Any support for on-time Initialization?
In-Reply-To: <5.2.1.1.2.20040202205034.02e53de0@mail.pyxos.com>
References: <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
 <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
 <5.2.1.1.2.20040202205034.02e53de0@mail.pyxos.com>
Message-ID: <20040203061846.N6418@onyx.ispol.com>



On Mon, 2 Feb 2004, Daniel West wrote:
>
> > >On Mon, 2 Feb 2004, Daniel West wrote:
> > >
> > > However, mod_python seems to have problems in general with
> > > multi-threaded environments.
> >
> > Just to be fair - mod_python does not have problems with
> > multi-threaded environments, none that I am aware of at least.
>
> I posted a problem I ran into a couple weeks ago to this list (subject:
> 3.1.2b and worker_mpm).  Seems the output filter under load was mixing up
> requests.
>
> [ ... ]
>
> I don't know how else to describe the problem I experienced except for a
> threading issue.

Well, first 3.1.2b is a beta release, and beta releases are known to
contain problems. It's not logical to assume that if there is a problem in
a beta release, and your best guess is that it has to do with threading,
then all versions of mod_python "have problems in general with
multi-threaded environments".  Someone new to mod_python may read this in
the archives and take it as a true statement, when it isn't.

Second - I think you gave up on that particular problem and drew a
conclusion way to eraly. Posting the problem code to the list would be a
start :-)

Grisha
From paulhart at redchocolate.ca  Tue Feb  3 11:39:15 2004
From: paulhart at redchocolate.ca (Paul Hart)
Date: Tue Feb  3 12:34:14 2004
Subject: [mod_python] Snapshot building error
Message-ID: <80F1D004-5667-11D8-A4CB-000393CC268A@redchocolate.ca>

Hi all,

I'm attempting to build the latest snapshots of mod_python from the 
apache CVS (so that I can use sessions), and my build is failing at the 
PSP stage of things.

flex is complaining about its invocation from the Makefile:

/usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h 
psp_parser.l
/usr/local/bin/flex: unknown flag 'R'.  For usage, try
         /usr/local/bin/flex --help
*** Error code 1

Stop in /root/httpd-python/dist/src (line 79 of Makefile).
*** Error code 1

Stop in /root/httpd-python/dist (line 65 of Makefile).
*** Error code 1

Stop in /root/httpd-python (line 73 of Makefile).


I'm using flex 2.5.4 (this is the latest version available from 
ftp.gnu.org), building on OpenBSD 3.3-STABLE.

Anyone have any suggestions?

Many thanks,

Paul

From oliver at mellet.net  Tue Feb  3 08:46:23 2004
From: oliver at mellet.net (Oliver Mellet)
Date: Tue Feb  3 12:41:31 2004
Subject: [mod_python] Snapshot building error
In-Reply-To: <80F1D004-5667-11D8-A4CB-000393CC268A@redchocolate.ca>
Message-ID: <20040203164622.E91002AEA99@meatwad.modul.us>

The latest version of Flex won't work, you need 2.5.31.  I'd suggest you
either find the older version of flex, or just delete the makefile rule that
requires it (the psp_parser.c that flex generates is also under source
control, IIRC).

> -----Original Message-----
> From: mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Paul Hart
> Sent: Tuesday, February 03, 2004 8:39 AM
> To: mod_python@modpython.org
> Subject: [mod_python] Snapshot building error
> 
> Hi all,
> 
> I'm attempting to build the latest snapshots of mod_python 
> from the apache CVS (so that I can use sessions), and my 
> build is failing at the PSP stage of things.
> 
> flex is complaining about its invocation from the Makefile:
> 
> /usr/local/bin/flex -R -opsp_parser.c 
> --header-file=include/psp_flex.h psp_parser.l
> /usr/local/bin/flex: unknown flag 'R'.  For usage, try
>          /usr/local/bin/flex --help
> *** Error code 1
> 
> Stop in /root/httpd-python/dist/src (line 79 of Makefile).
> *** Error code 1
> 
> Stop in /root/httpd-python/dist (line 65 of Makefile).
> *** Error code 1
> 
> Stop in /root/httpd-python (line 73 of Makefile).
> 
> 
> I'm using flex 2.5.4 (this is the latest version available 
> from ftp.gnu.org), building on OpenBSD 3.3-STABLE.
> 
> Anyone have any suggestions?
> 
> Many thanks,
> 
> Paul
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From dwmp at opti.cgi.net  Wed Feb  4 23:17:50 2004
From: dwmp at opti.cgi.net (Daniel West)
Date: Thu Feb  5 01:12:52 2004
Subject: [mod_python] Any support for on-time Initialization?
In-Reply-To: <20040203061846.N6418@onyx.ispol.com>
References: <5.2.1.1.2.20040202205034.02e53de0@mail.pyxos.com>
 <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
 <5.2.1.1.2.20040202171116.030c55d8@mail.pyxos.com>
 <5.2.1.1.2.20040202205034.02e53de0@mail.pyxos.com>
Message-ID: <5.2.1.1.2.20040204223631.038d19d8@mail.pyxos.com>

At 06:34 AM 2/3/2004 -0500, you wrote:

>Well, first 3.1.2b is a beta release, and beta releases are known to
>contain problems. It's not logical to assume that if there is a problem in
>a beta release, and your best guess is that it has to do with threading,
>then all versions of mod_python "have problems in general with
>multi-threaded environments".  Someone new to mod_python may read this in
>the archives and take it as a true statement, when it isn't.

The last thing I want to do is discourage use of mod_python to new members 
of the list.  I'm very thankful for the solution you've created in 
mod_python and I want to see it grow.  I'm in the process of porting a 
couple moderately high traffic sites over to mod_python now.

Yes, I have been using the beta (primarily because I wanted to use PSP), 
and I realize it could just be a problem with the beta.  However, after my 
original post on threading, I got no response save for Perry's who seemed 
to be having difficulty with threading as well.  I don't mean to be 
spreading dis-information, it's just that no one had taken the time to 
correct my dis-information until now.


>Second - I think you gave up on that particular problem and drew a
>conclusion way to eraly. Posting the problem code to the list would be a
>start :-)

In my post I described an output filter that was sending part of one 
request and part of another unrelated request in the first request.  In 
other words, requests were getting mixed up mid-stream.  Is this even 
something that can be done in python purposely without resorting to global 
or module level namespaces?  The filter I was using was pretty simple.  It 
just did some update queries based on information from the filter.req 
object and then called filter.pass_on().  I'll try and reproduce the 
problem without the database queries, just a filter.pass_on() call and then 
I'll let you know what I get.

-Dan


From flxkid at techemail.com  Wed Feb  4 22:16:35 2004
From: flxkid at techemail.com (Oliver Nelson)
Date: Thu Feb  5 02:11:36 2004
Subject: [mod_python] O/S SendFile call
Message-ID: <20040205061635.7758A3951@sitemail.everyone.net>

I read in the apache docs that if possible you should try and have an O/S version that has the sendfile call so that apache doesn't have to do a read and a send of files.

I am writing a python handler that has to go out on a network, find a file and then pass then return that file to the client browser.  Right now I'm reading in the file and then writing it the output stream.  It seems that there should be a much better way to do this like apache does it with sendfile.  Is it possible to use this (the sendfile os call) from inside my python handler?

OLIVER
From stian at soiland.no  Thu Feb  5 07:23:28 2004
From: stian at soiland.no (Stian =?iso-8859-1?Q?S=F8iland?=)
Date: Thu Feb  5 02:18:29 2004
Subject: [mod_python] Re: DirectoryIndex index.py?
In-Reply-To: <401F6FED.3000001@ecritters.biz>
References: <401F6FED.3000001@ecritters.biz>
Message-ID: <20040205062328.GB31070@itea.ntnu.no>

On 2004-02-03 10:54:53, Leif K-Brooks wrote:

> I'm starting to like mod_python, but I'm running into a bit of a problem 
> with making a Python script a DirectoryIndex. I have this configuration:
> 
> AddHandler python-program .py
> PythonHandler myhandler
> DirectoryIndex index.py
> 
> But when I go to http://localhost/directory/, I get the Apache file 
> listing. My Python handler is stored in a seprate directory, and there's 
> no physical index.py file, so I'm guessing that Apache thinks there is 
> no file at all. How can I get it to use my DirectoryIndex?

That's correct - for some reason DirectoryIndex checking is done
directly at a file level by Apache, so a file index.py (or whatever)
must exist.

I've just used DirectoryIndex index and created an empty file 'index'.
Stupid - but works :) 

-- 
Stian S?iland               Work toward win-win situation. Win-lose
Trondheim, Norway           is where you win and the other lose.
http://www.soiland.no/      Lose-lose and lose-win are left as an
                            exercise to the reader.  [Limoncelli/Hogan]

From grisha at modpython.org  Thu Feb  5 06:38:07 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb  5 07:33:12 2004
Subject: [mod_python] SetEnv and add_common_vars()
In-Reply-To: <20040109235319.GJ5495@rackspace.com>
References: <20040109235319.GJ5495@rackspace.com>
Message-ID: <20040205063600.B88128@onyx.ispol.com>


I am unable to replicate this problem. Perhaps you can provide more
details, such as the OS, version of apache, version of mod_python and the
config excertps that specifies SetEnv?

Grisha

On Fri, 9 Jan 2004, Edwin Grubbs wrote:

> When I use SetEnv in my apache conf file, it causes a lot of the
> environment variables (such as DOCUMENT_ROOT) to disappear that
> add_common_vars() normally would set.
>
> The only workaround I have is to put the SetEnv statements in a
> different <Directory> block than the directory with the files served by
> mod_python.
>
> Is this a bug in mod_env or mod_python? Is there a better way to fix
> this?
>
> -Edwin
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Thu Feb  5 06:41:44 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb  5 07:36:50 2004
Subject: [mod_python] typehandler in mod_python 3.0.3
In-Reply-To: <1073935366.4306.57.camel@jade.biology.duke.edu>
References: <1073935366.4306.57.camel@jade.biology.duke.edu>
Message-ID: <20040205064035.X88128@onyx.ispol.com>


Can you provide more specifics on this, I'm not sure what "typehandler
never being run" means exactly.

Grisha

On Mon, 12 Jan 2004, Hunter Matthews wrote:

> We're having an issue with the typehandler never being run. The same
> code on 3.0.1 works perfectly.
>
> This is the mod_python rpm that is included with RHEL 3 - version 3.0.3,
> and is similar to the problem that we had with mod_python 3.0, as
> included with RH 9.
>
> Are there any known typehandler regressions in 3.0.3?
> --
> Hunter Matthews                          Unix / Network Administrator
> Office: BioScience 145/244               Duke Univ. Biology Department
> Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
> Never take candy from strangers. Especially on the internet.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Thu Feb  5 06:50:28 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb  5 07:45:33 2004
Subject: [mod_python] setting content_type intelligently
In-Reply-To: <16388.4485.164768.754148@gargle.gargle.HOWL>
References: <16388.4485.164768.754148@gargle.gargle.HOWL>
Message-ID: <20040205064512.X88128@onyx.ispol.com>



On Tue, 13 Jan 2004, Daniel J. Popowich wrote:

> In most of my mod_python apps if a request comes in for a file that I
> don't want to handle, let's say an image file, foo.gif, I raise
> apache.SERVER_RETURN with a value of apache.DECLINED.  Apache then
> handles the request and sends in the header:
>
>   Content-Type: image/gif
>
> However, I now have an app that wants to live in a <Location ...>
> directive so returning apache.DECLINED doesn't work: apache has no
> other means of handling the request so it returns a 404 error.

I am not sure I understand why that is... - what's the difference between
a request in <Location ...> and any other request?

> My only means of recourse seems to be something like this:
>
>     if NOT_HANDLING_PAGE:
>         req.write(open(filename).read())

As a sidenote, if you're using 3.1.2b, you should check out
req.sendfile().

>
> but content_type is not set properly (it appears to default to
> text/plain), so binary files, like image files, appear as gibberish in
> a browser.
>
> Two questions:
>
>    1.  What does mod_python/apache do if content_type is not set by a
>        handler?  Does it default to text/plain?

Nothing, IIRC.

>    2.  I'm looking for an intelligent means of setting the
>        content_type.  I know I can use mimetypes.guess_type(), but
>        that is based only on the file's extension.  Apache does more
>        than that, eg, if 'foo.gif' was named 'foo' apache still
>        determines the content type correctly as image/gif.  Is there a
>        way to tap into apache's content_type determination?

None that I know of.

Grisha
From grisha at modpython.org  Thu Feb  5 06:54:37 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb  5 07:49:43 2004
Subject: [mod_python] cgihandler.py never returns 500
In-Reply-To: <Pine.LNX.4.58.0401131446260.9993@kodiak.oz.net>
References: <Pine.LNX.4.58.0401131446260.9993@kodiak.oz.net>
Message-ID: <20040205065237.H88128@onyx.ispol.com>


No, because it will result in an apache.HTTP_INTERNAL_SERVER_ERROR anyway.

The only place where I see the publisher returns
apache.HTTP_INTERNAL_SERVER_ERROR is when a function doesn't return
anything, which is a different situation.

Grisha

On Tue, 13 Jan 2004, Paul wrote:

> The cgihandler.py in mod_python 3.0.4 and earlier never seems
> to return an HTTP 500 error (internal server error).  Code
> snippet from cgihandler.py:
>
>             # this executes the module
>             imp.load_module(module_name, fd, path, desc)
>
>             return apache.OK
>
> Shouldn't this be something like:
>
>             # this executes the module
>             try:
>                 imp.load_module(module_name, fd, path, desc)
>             except Exception, e:
>                 if e.args and type(e.args[0]) == types.IntType:
>                     return e.args[0]
>                 else:
>                     return apache.HTTP_INTERNAL_SERVER_ERROR
>
>             return apache.OK
>
> publisher.py has something similar implemented.
>
> -- Paul
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grisha at modpython.org  Thu Feb  5 07:00:40 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb  5 07:55:44 2004
Subject: [mod_python] Startup Options
In-Reply-To: <5.2.1.1.2.20040114210126.03307008@mail.pyxos.com>
References: <5.2.1.1.2.20040114210126.03307008@mail.pyxos.com>
Message-ID: <20040205065738.T88128@onyx.ispol.com>



On Wed, 14 Jan 2004, Daniel West wrote:

> mod_python's PythonImport is a neat feature; it allows you to run a script
> when an Apache process fires up.  However, it doesn't work under
> VirtualHosts, only the main server config (mod_python 3.0 and up).

The problem with PythonImport is that apache has no information on virtual
hosts when the PythonImport is executed.

The reason it was allowed to be specified anywhere rather than only the
server config was a bug in 2.7, which was corrected in 3.0

Grisha
From grisha at modpython.org  Thu Feb  5 07:06:58 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Feb  5 08:02:04 2004
Subject: [mod_python] Snapshot building error
In-Reply-To: <80F1D004-5667-11D8-A4CB-000393CC268A@redchocolate.ca>
References: <80F1D004-5667-11D8-A4CB-000393CC268A@redchocolate.ca>
Message-ID: <20040205070446.X88128@onyx.ispol.com>


mod_python requires flex 2.5.31, which is an entirely different version
from 2.5.4.

in any event - why are bothering with flex - didn't you get a
pre-generated psp_parser.c file with the snapshot?

Grisha

On Tue, 3 Feb 2004, Paul Hart wrote:

> Hi all,
>
> I'm attempting to build the latest snapshots of mod_python from the
> apache CVS (so that I can use sessions), and my build is failing at the
> PSP stage of things.
>
> flex is complaining about its invocation from the Makefile:
>
> /usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h
> psp_parser.l
> /usr/local/bin/flex: unknown flag 'R'.  For usage, try
>          /usr/local/bin/flex --help
> *** Error code 1
>
> Stop in /root/httpd-python/dist/src (line 79 of Makefile).
> *** Error code 1
>
> Stop in /root/httpd-python/dist (line 65 of Makefile).
> *** Error code 1
>
> Stop in /root/httpd-python (line 73 of Makefile).
>
>
> I'm using flex 2.5.4 (this is the latest version available from
> ftp.gnu.org), building on OpenBSD 3.3-STABLE.
>
> Anyone have any suggestions?
>
> Many thanks,
>
> Paul
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From dpopowich at mtrsd.k12.ma.us  Thu Feb  5 10:32:23 2004
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Thu Feb  5 11:28:24 2004
Subject: [mod_python] setting content_type intelligently
In-Reply-To: <20040205064512.X88128@onyx.ispol.com>
References: <16388.4485.164768.754148@gargle.gargle.HOWL>
	<20040205064512.X88128@onyx.ispol.com>
Message-ID: <16418.25095.769715.22416@gargle.gargle.HOWL>

Gregory (Grisha) Trubetskoy writes:
> 
> 
> On Tue, 13 Jan 2004, Daniel J. Popowich wrote:
> 
> > In most of my mod_python apps if a request comes in for a file that I
> > don't want to handle, let's say an image file, foo.gif, I raise
> > apache.SERVER_RETURN with a value of apache.DECLINED.  Apache then
> > handles the request and sends in the header:
> >
> >   Content-Type: image/gif
> >
> > However, I now have an app that wants to live in a <Location ...>
> > directive so returning apache.DECLINED doesn't work: apache has no
> > other means of handling the request so it returns a 404 error.
> 
> I am not sure I understand why that is... - what's the difference between
> a request in <Location ...> and any other request?
> 

<Location ...> directives live in url space, completely outside from
the filesystem.  I have my app configured like this:


    <Location /site>
    SetHandler python-program
    PythonHandler ...
    ...
    </Location>

When requests come in, such as http://myserver/site/foo/bar, my
handler will use 'foo/bar' to determine what it sends back to the
client and, generally, use the pathinfo as a relative path from a data
directory configured, purposefully, outside of DocumentRoot.  So, how
do I set content-type correctly for content I don't generate, ie,
images?

If my app was <Directory> based, I could raise apache.SERVER_RETURN
with apache.DECLINED; apache would have means to find the file and "do
the right thing," but inside <Location> there is NO filesystem, thus
my 404 error.

> > My only means of recourse seems to be something like this:
> >
> >     if NOT_HANDLING_PAGE:
> >         req.write(open(filename).read())
> 
> As a sidenote, if you're using 3.1.2b, you should check out
> req.sendfile().

Yes, I'm using 3.1.2b.  I'll check it out, it may be just what I'm
looking for.

Thanks,

Daniel

From neel at mediapulse.com  Thu Feb  5 10:47:08 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Feb  5 11:42:13 2004
Subject: [mod_python] setting content_type intelligently
Message-ID: <C0FC22C08B82074A88B500617641577787A837@johnson.mediapulse.net>

> <Location ...> directives live in url space, completely outside from
> the filesystem.  I have my app configured like this:
> 
> 
>     <Location /site>
>     SetHandler python-program
>     PythonHandler ...
>     ...
>     </Location>
> 
> When requests come in, such as http://myserver/site/foo/bar, my
> handler will use 'foo/bar' to determine what it sends back to the
> client and, generally, use the pathinfo as a relative path from a data
> directory configured, purposefully, outside of DocumentRoot.  So, how
> do I set content-type correctly for content I don't generate, ie,
> images?
> 
> If my app was <Directory> based, I could raise apache.SERVER_RETURN
> with apache.DECLINED; apache would have means to find the file and "do
> the right thing," but inside <Location> there is NO filesystem, thus
> my 404 error.
> 

You can still return apache.DECLINED from Location's, I do this all the
time for files I don't want to handle.  Since your location doesn't
exist under document root, make sure the items you are declining do.
Something like:

/safe_dir/foo/bar/pages.html
/docroot/foo/bar/images.gif

However, a better solution imho would be to not reference images in the
/site url, i.e. images are all in /images under doc root and therefore
the location /site would never get called.

hth,
Mike

From dpopowich at mtrsd.k12.ma.us  Thu Feb  5 11:08:07 2004
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Thu Feb  5 12:04:04 2004
Subject: [mod_python] setting content_type intelligently
In-Reply-To: <C0FC22C08B82074A88B500617641577787A837@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B500617641577787A837@johnson.mediapulse.net>
Message-ID: <16418.27239.752609.580448@gargle.gargle.HOWL>


Michael C. Neel writes:
> > <Location ...> directives live in url space, completely outside from
> > the filesystem.  I have my app configured like this:
> > 
> > 
> >     <Location /site>
> >     SetHandler python-program
> >     PythonHandler ...
> >     ...
> >     </Location>
> > 
> > When requests come in, such as http://myserver/site/foo/bar, my
> > handler will use 'foo/bar' to determine what it sends back to the
> > client and, generally, use the pathinfo as a relative path from a data
> > directory configured, purposefully, outside of DocumentRoot.  So, how
> > do I set content-type correctly for content I don't generate, ie,
> > images?
> > 
> > If my app was <Directory> based, I could raise apache.SERVER_RETURN
> > with apache.DECLINED; apache would have means to find the file and "do
> > the right thing," but inside <Location> there is NO filesystem, thus
> > my 404 error.
> > 
> 
> You can still return apache.DECLINED from Location's, I do this all the
> time for files I don't want to handle.  Since your location doesn't
> exist under document root, make sure the items you are declining do.
> ...

I'm aware I can (technically) return apache.DECLINED, it's just that
it doesn't work for me because the images are outside of DocumentRoot.

> However, a better solution imho would be to not reference images in the
> /site url, i.e. images are all in /images under doc root and therefore
> the location /site would never get called.

For cultural reasons this is not feasible for this app.  My users
demand their images be "near" their docs.  Oh, tho I've tried to press
the issue.

Side note: As per Grisha's recommendation I checked out
req.sendfile(FILE) in my app.  It sends the file to the client (and I
presume more efficiently than req.write(open(FILE).read()) ever
could), but that's all, no header processing by apache, so I still
need to come up with a way to determine content type.

Sure wish I could tap into apache's content-type determination code.
That would be ideal.  In the meantime, mimetypes.guess_type() seems
to be my only solution, or talk my users into putting all images under
/images.

Thanks,

Daniel

From paulhart at redchocolate.ca  Thu Feb  5 11:42:14 2004
From: paulhart at redchocolate.ca (Paul Hart)
Date: Thu Feb  5 12:37:16 2004
Subject: Follow-up Re: [mod_python] Snapshot building error
In-Reply-To: <20040205070446.X88128@onyx.ispol.com>
References: <80F1D004-5667-11D8-A4CB-000393CC268A@redchocolate.ca>
	<20040205070446.X88128@onyx.ispol.com>
Message-ID: <4077D942-57FA-11D8-A4CB-000393CC268A@redchocolate.ca>

There was a pre-generated psp_parser.c included in the snapshot, but 
for some reason my version of make didn't really care about that too 
much, and decided that it absolutely had to build the file.

Probably the @rm psp_parser.c line in the makefile didn't help matters 
;)

I ended up removing the lines from the Makefile.in files, running 
configure, and everything is now working fine. I didn't need the PSP 
support in any case.

Thanks for everyone's assistance, it was very much appreciated.

Paul

On 5 Feb 2004, at 07:06, Gregory (Grisha) Trubetskoy wrote:

>
> mod_python requires flex 2.5.31, which is an entirely different version
> from 2.5.4.
>
> in any event - why are bothering with flex - didn't you get a
> pre-generated psp_parser.c file with the snapshot?
>
> Grisha
>
> On Tue, 3 Feb 2004, Paul Hart wrote:
>
>> Hi all,
>>
>> I'm attempting to build the latest snapshots of mod_python from the
>> apache CVS (so that I can use sessions), and my build is failing at 
>> the
>> PSP stage of things.
>>
>> flex is complaining about its invocation from the Makefile:
>>
>> /usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h
>> psp_parser.l
>> /usr/local/bin/flex: unknown flag 'R'.  For usage, try
>>          /usr/local/bin/flex --help
>> *** Error code 1
>>
>> Stop in /root/httpd-python/dist/src (line 79 of Makefile).
>> *** Error code 1
>>
>> Stop in /root/httpd-python/dist (line 65 of Makefile).
>> *** Error code 1
>>
>> Stop in /root/httpd-python (line 73 of Makefile).
>>
>>
>> I'm using flex 2.5.4 (this is the latest version available from
>> ftp.gnu.org), building on OpenBSD 3.3-STABLE.
>>
>> Anyone have any suggestions?
>>
>> Many thanks,
>>
>> Paul
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From neel at mediapulse.com  Thu Feb  5 12:01:38 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Feb  5 12:56:44 2004
Subject: [mod_python] setting content_type intelligently
Message-ID: <C0FC22C08B82074A88B500617641577787A838@johnson.mediapulse.net>

Well, imho when things get painful it's usally time to consider
something's not right =).

As a hail mary play, I believe there is a phase of the request where
apache goes searching the disk for the file, separate from the content
handling phase.  This is where DocumentRoot, Alias, ScriptAlias, etc are
all handled.  You could handle this yourself, and when you image request
comes in, set the required pieces of the request data to state the
location of the image on disk.  The your content handler would return
apache.DECLINED, and then apache mime magic would take over.

FYI apache's mime handling is just extension based.  The mapping is
either defined in the conf files (something called mime.conf fulle of
AddTypes) or can be told to use the /etc/mime.types file.  If your
concern is images only, python's stdlib imghdr module, which can tell
the image type by looking at the first few bytes of the file, and works
for the images files that would be used in a web page.  If you also have
other data, such as pdf's, then best to go with mime.types.  If your
apache is using /etc/mime.types, then you can have mimetypes also use
that file.  See what your mimetypes.knownfiles are, and run
mimetypes.init() to load the files listed (if they exist).

let me know if any of the above pan out,
mike

> I'm aware I can (technically) return apache.DECLINED, it's just that
> it doesn't work for me because the images are outside of DocumentRoot.
> 
...
> For cultural reasons this is not feasible for this app.  My users
> demand their images be "near" their docs.  Oh, tho I've tried to press
> the issue.

From bud at comune.grosseto.it  Thu Feb  5 19:15:35 2004
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Thu Feb  5 14:05:41 2004
Subject: [mod_python] set cookie in auth stage?
Message-ID: <5.2.1.1.0.20040205185738.01f169e0@mail.comune.grosseto.it>

Hello everyone,

I'm new to modpython and hope to not ask an overly stupid question.

Is it possible with modpython (apache) to set a cookie at the authentiction 
stage while a later stage interfaces to some kind of "application servers" 
(j2ee, cgi, fcgi, modpython PythonHandler, etc.) that create the actual 
response?

The danger I see is that the cookie, being part of the response header, may 
be overwritten by the application server.  If this is the case, should I 
prepare the cookie data in the authentication handler and communicate it to 
a handler that runs after the response is created by the application 
server.  The manual states that "You can dynamically assign attributes to 
[the request object] as a way to communicate between handlers".   Is this 
the mechanism that I could use to communicate the cookie data?  If so, does 
anyone have an example for such communications?  And also, what stage would 
I use to actually set the cookie (is the cleanup handler a good choice?).

Many thanks for any help

-bud



-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 bud@comune.grosseto.it
Servizio Elaborazione Dati                    0564-488 577 (voice)
Comune di Grosseto                            0564- 21139 (fax)
Via Ginori, 43
58100 Grosseto

Collaborazione Open Source per la CIE http://www.comune.grosseto.it/cie/ 

From neel at mediapulse.com  Thu Feb  5 13:28:21 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Feb  5 14:23:28 2004
Subject: [mod_python] set cookie in auth stage?
Message-ID: <C0FC22C08B82074A88B50061764157776B9A6C@johnson.mediapulse.net>

If your going to pass data between different "application servers", then
best is to stick data into the apache notes table, as that is part of
the apache api so each module should be able to access that data.

In general I don't think you would have to worry about your headers
being replaced, but to be on the safe side there are two things you
could do.  One is to set the cookies in the error headers, which are
always sent (name is misleading, they are sent for errors and normal
requests).  Another option is to also use the fixup handler phase, which
runs after the content handler.  This way the application is done with
the response, and you can add your headers without worring about the
application clearing them.

mike

> -----Original Message-----
> From: Bud P. Bruegger [mailto:bud@comune.grosseto.it] 
> Sent: Thursday, February 05, 2004 1:16 PM
> To: mod_python@modpython.org
> Subject: [mod_python] set cookie in auth stage?
> 
> 
> Hello everyone,
> 
> I'm new to modpython and hope to not ask an overly stupid question.
> 
> Is it possible with modpython (apache) to set a cookie at the 
> authentiction 
> stage while a later stage interfaces to some kind of 
> "application servers" 
> (j2ee, cgi, fcgi, modpython PythonHandler, etc.) that create 
> the actual 
> response?
> 
> The danger I see is that the cookie, being part of the 
> response header, may 
> be overwritten by the application server.  If this is the 
> case, should I 
> prepare the cookie data in the authentication handler and 
> communicate it to 
> a handler that runs after the response is created by the application 
> server.  The manual states that "You can dynamically assign 
> attributes to 
> [the request object] as a way to communicate between 
> handlers".   Is this 
> the mechanism that I could use to communicate the cookie 
> data?  If so, does 
> anyone have an example for such communications?  And also, 
> what stage would 
> I use to actually set the cookie (is the cleanup handler a 
> good choice?).
> 
> Many thanks for any help
> 
> -bud
> 
> 
> 
> --------------------------------------------------------------
> -----------------------------------
> Ing. Bud P. Bruegger, Ph.D.                 bud@comune.grosseto.it
> Servizio Elaborazione Dati                    0564-488 577 (voice)
> Comune di Grosseto                            0564- 21139 (fax)
> Via Ginori, 43
> 58100 Grosseto
> 
> Collaborazione Open Source per la CIE 
> http://www.comune.grosseto.it/cie/ 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From dpopowich at mtrsd.k12.ma.us  Thu Feb  5 13:58:13 2004
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Thu Feb  5 14:54:12 2004
Subject: [mod_python] setting content_type intelligently
In-Reply-To: <C0FC22C08B82074A88B500617641577787A838@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B500617641577787A838@johnson.mediapulse.net>
Message-ID: <16418.37445.309956.89799@gargle.gargle.HOWL>


Michael C. Neel writes:
> Well, imho when things get painful it's usally time to consider
> something's not right =).

Agreed!  :-)

> As a hail mary play, I believe there is a phase of the request where
> apache goes searching the disk for the file, separate from the content
> handling phase.  This is where DocumentRoot, Alias, ScriptAlias, etc are
> all handled.  You could handle this yourself, and when you image request
> comes in, set the required pieces of the request data to state the
> location of the image on disk.  The your content handler would return
> apache.DECLINED, and then apache mime magic would take over.

Let me see if I got this right...your theory is that, after
determining I really want apache to handle the request, I should be
able to tweak the req such that returning apache.DECLINED will work
even in a <Location ...>.

Sounds like a great theory to me.  Does anyone know how to do this?

> FYI apache's mime handling is just extension based...

First pass, yes, but there's another module, mod_mime_magic, that can
determine what files are by looking at their first few bytes, like the
unix file(1) command.  This module is used if mod_mime fails.

Daniel


From neel at mediapulse.com  Thu Feb  5 14:33:02 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Feb  5 15:28:08 2004
Subject: [mod_python] setting content_type intelligently
Message-ID: <C0FC22C08B82074A88B500617641577787A839@johnson.mediapulse.net>

> > As a hail mary play, I believe there is a phase of the request where
> > apache goes searching the disk for the file, separate from 
> the content
> > handling phase.  This is where DocumentRoot, Alias, 
> ScriptAlias, etc are
> > all handled.  You could handle this yourself, and when you 
> image request
> > comes in, set the required pieces of the request data to state the
> > location of the image on disk.  The your content handler 
> would return
> > apache.DECLINED, and then apache mime magic would take over.
> 
> Let me see if I got this right...your theory is that, after
> determining I really want apache to handle the request, I should be
> able to tweak the req such that returning apache.DECLINED will work
> even in a <Location ...>.
> 
> Sounds like a great theory to me.  Does anyone know how to do this?
> 

Well, looking at the documentation mod_python may not be able to do this
for you.  The handler you want is PythonTransHandler, but mod_python
makes the req.uri and req.filename read only, which is what you need to
change.  You could test this to see if the docs are in error.

Since I have mime-phobia I would just fall back on mod_perl to handle
this phase, and switch if/when mod_python could be used instead.

mike

From bje at apnic.net  Fri Feb  6 09:17:37 2004
From: bje at apnic.net (Byron Ellacott)
Date: Thu Feb  5 19:13:32 2004
Subject: [mod_python] set cookie in auth stage?
In-Reply-To: <5.2.1.1.0.20040205185738.01f169e0@mail.comune.grosseto.it>
References: <5.2.1.1.0.20040205185738.01f169e0@mail.comune.grosseto.it>
Message-ID: <1076023057.7862.9.camel@ping.apnic.net>

On Fri, 2004-02-06 at 04:15, Bud P. Bruegger wrote:
> Is it possible with modpython (apache) to set a cookie at the authentiction 
> stage while a later stage interfaces to some kind of "application servers" 
> (j2ee, cgi, fcgi, modpython PythonHandler, etc.) that create the actual 
> response?

The req.headers_out member is a table object.  If later phases correctly
use .add() rather than directly assigning to
req.headers_out['Set-Cookie'], then the values you add in earlier phases
should survive.

> server.  The manual states that "You can dynamically assign attributes to 
> [the request object] as a way to communicate between handlers".   Is this 
> the mechanism that I could use to communicate the cookie data?  If so, does 
> anyone have an example for such communications?  And also, what stage would 
> I use to actually set the cookie (is the cleanup handler a good choice?).

--snip--
def authenhandler(req):
    req.is_bje = req.user == 'bje'
    return apache.OK

def handler(req):
    req.send_http_header()
    req.write('<html><head></head><body>\r\n')
    if req.is_bje:
        req.write('You are bje!\r\n')
    else:
        req.write('You are NOT bje!\r\n')
    req.write('</body></html>\r\n')
    return apache.OK
--snip--

Just like that.  It is important to note that the request object is
specific to the interpreter it is running in.  Thus, if you have a
directive that changes the interpreter between phases, you will get a
new request object built, and your attribute(s) will vanish!

In other words, if you have a <Files> section with a PythonInterpreter
statement in it, you most likely cannot rely on attributes from earlier
phases being available.

-- 
bje
From jmccaskey1 at comcast.net  Thu Feb  5 21:33:57 2004
From: jmccaskey1 at comcast.net (John McCaskey)
Date: Fri Feb  6 01:28:43 2004
Subject: [mod_python] Error in 3.1.2b documentation
Message-ID: <200402060628.i166SeKP017092@slash.mediapulse.com>

Forgive me if this is a known issue and this documentation is just not up to
date as 3.1.2 is a beta version, however I am just getting familiar with
mod_python.
 
In section 3.4 the following example code is presented:
 
from mod_python import apache
 
def authenhandler(req):
 
    pw = req.get_basic_auth_pw()
    user = req.user
 
    if user == "spam" and pw == "eggs":
       return apache.OK
    else:
       return apache.HTTP_UNAUTHORIZED
 
 
This code would cause my apache to return a 500 internal server error and I
found the following in my logs:
[Thu Feb 05 21:24:09 2004] [error] [client 10.0.0.1] python_handler: After
PythonAuthenHandler req->user is NULL. Assign req.user to avoid this error.
 
>From that I was able to deduce the problem and added:
               req.user = 'unauthorized'
directly above the return apache.HTTP_UNAUTHORIZED.  
 
No big deal, but whoever takes care of the docs might want to update the
example.
 
Btw, I love what I see so far! I'm a long time apache/php/mysql user and
I've also done several projects with j2ee and .net but I have high hopes
that mod_python will be a more flexible and powerful platform for some
upcoming projects!
 
John McCaskey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20040205/98c05637/attachment-0001.html
From eurleif at ecritters.biz  Fri Feb  6 05:54:07 2004
From: eurleif at ecritters.biz (Leif K-Brooks)
Date: Fri Feb  6 06:55:11 2004
Subject: [mod_python] Reload scripts without restarting Apache?
Message-ID: <4023724F.7070908@ecritters.biz>

I'm getting started doing some development with mod_python, and I 
generally like to do a little bit at a time and test. That's made more 
difficult by having to restart Apache to get my new scripts used, and it 
would probably be worse on a production server. I don't want to lose 
performance, but is there  a way to make mod_python check if the script 
has changed or something?
From loper at ananzi.co.za  Fri Feb  6 11:38:58 2004
From: loper at ananzi.co.za (Gerhard Venter)
Date: Fri Feb  6 07:34:06 2004
Subject: [mod_python] Reload scripts without restarting Apache?
In-Reply-To: <4023724F.7070908@ecritters.biz>
References: <4023724F.7070908@ecritters.biz>
Message-ID: <40237CD2.3080304@ananzi.co.za>

Hi

I found you don't need to restart Apache  (Apache  2 in my case) when
you've changed the script, only if you've changed the Apache directives.
I hope I'm not giving you bad advice here , but I think you should use
the publisher handler.  Then you don't need to change the Apache
directives if  you stick to the same script name (eg script.py) - with
the publisher handler you can do that, because all your scripts can be
functions within script.py:

#script.py
import mod_python, os, sys, string
def dothis (req, x):
      #dothis actions

def dothat (req, y):
      #dothat actions

Then your various scripts are called as follows:
http://localhost/script.py/dothis
http://localhost/script.py/dothat

And all you need per directory in the Apache directives is:
   AddHandler python-program .py
   PythonHandler mod_python.publisher
   PythonDebug On

And you use only one .py per directory
Gerhard









Leif K-Brooks wrote:

> I'm getting started doing some development with mod_python, and I 
> generally like to do a little bit at a time and test. That's made more 
> difficult by having to restart Apache to get my new scripts used, and 
> it would probably be worse on a production server. I don't want to 
> lose performance, but is there  a way to make mod_python check if the 
> script has changed or something?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From davidf at sjsoft.com  Fri Feb  6 14:31:01 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Feb  6 08:26:10 2004
Subject: [mod_python] Reload scripts without restarting Apache?
In-Reply-To: <4023724F.7070908@ecritters.biz>
References: <4023724F.7070908@ecritters.biz>
Message-ID: <40238905.50307@sjsoft.com>

Leif K-Brooks wrote:

> I'm getting started doing some development with mod_python, and I 
> generally like to do a little bit at a time and test. That's made more 
> difficult by having to restart Apache to get my new scripts used, and 
> it would probably be worse on a production server. I don't want to 
> lose performance, but is there  a way to make mod_python check if the 
> script has changed or something?

There's a PythonReload option I think, check the docs.
It will only reload the imported module ; you need to handle any more
complex reloads yourself
Also, you shouldn't be doing testing on a production server so you
shouldn't have to restart so often...

David

From conrad at hep.caltech.edu  Fri Feb  6 04:54:47 2004
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Feb  6 09:19:33 2004
Subject: [mod_python] O/S SendFile call
In-Reply-To: <20040205061635.7758A3951@sitemail.everyone.net>
References: <20040205061635.7758A3951@sitemail.everyone.net>
Message-ID: <1076072087.3329.1.camel@localhost.localdomain>

Hi Oliver

The request class in newer versions (3.1b2+ I think) has a write_file
method that you can use as follows:

# First init the offset and bytes variables, then:
  try:
    while bytes>0:
      sent=0
      sent=req.write_file(filename,offset,bytes)
      if sent<0: raise OSError(5,"Error sending file")
      offset=offset+sent
      bytes=bytes-sent
  except:
    # handle error
    pass
  return apache.OK

HTH

Conrad

On Wed, 2004-02-04 at 22:16, Oliver Nelson wrote:
> I read in the apache docs that if possible you should try and have an O/S version that has the sendfile call so that apache doesn't have to do a read and a send of files.
> 
> I am writing a python handler that has to go out on a network, find a file and then pass then return that file to the client browser.  Right now I'm reading in the file and then writing it the output stream.  It seems that there should be a much better way to do this like apache does it with sendfile.  Is it possible to use this (the sendfile os call) from inside my python handler?
> 
> OLIVER
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From SAiello at Jentoo.com  Fri Feb  6 11:24:54 2004
From: SAiello at Jentoo.com (SAiello@Jentoo.com)
Date: Fri Feb  6 12:16:35 2004
Subject: [mod_python] Publisher Handler
In-Reply-To: <4077D942-57FA-11D8-A4CB-000393CC268A@redchocolate.ca>
References: <80F1D004-5667-11D8-A4CB-000393CC268A@redchocolate.ca>
	<20040205070446.X88128@onyx.ispol.com>
	<4077D942-57FA-11D8-A4CB-000393CC268A@redchocolate.ca>
Message-ID: <200402061124.54555.SAiello@Jentoo.com>

Per the 3.0 documentation I have setup up apache 2.0.48 per chapter 6.1.1. 
Documentation as follows:

To use the handler, you need the following lines in your configuration 
	<Directory /some/path}
 		SetHandler python-program
  		PythonHandler mod_python.publisher
	</Directory>
 This handler allows access to functions and variables within a module via 
URL's. For example, if you have the following module, called hello.py: 

	""" Publisher example """

	def say(req, what="NOTHING"):
 		return "I am saying %s" % what

A URL http://www.mysite.com/hello.py/say would return "I am saying NOTHING". A 
URL http://www.mysite.com/hello.py/say?what=hello would return "I am saying 
hello". 

When I access my server I get the following error:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 338, in 
HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line 140, 
in handler
    path=[path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 493, in 
import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named index
From flxkid at techemail.com  Fri Feb  6 12:31:05 2004
From: flxkid at techemail.com (Oliver Nelson)
Date: Fri Feb  6 16:26:15 2004
Subject: [mod_python] O/S SendFile call
Message-ID: <20040206203106.358DC393A@sitemail.everyone.net>

Conrad,

Thanx for the tip.  Had 3.1.2b2 or something and it wasn't working.  Went to the CVS and found some notes that your patch had been changed from write_file to sendfile.  Just FYI.

Thanx again,

OLIVER


--- Conrad Steenberg <conrad@hep.caltech.edu> wrote:
Hi Oliver

The request class in newer versions (3.1b2+ I think) has a write_file
method that you can use as follows:

# First init the offset and bytes variables, then:
  try:
    while bytes>0:
      sent=0
      sent=req.write_file(filename,offset,bytes)
      if sent<0: raise OSError(5,"Error sending file")
      offset=offset+sent
      bytes=bytes-sent
  except:
    # handle error
    pass
  return apache.OK

HTH

Conrad

On Wed, 2004-02-04 at 22:16, Oliver Nelson wrote:
> I read in the apache docs that if possible you should try and have an O/S version that has the sendfile call so that apache doesn't have to do a read and a send of files.
> 
> I am writing a python handler that has to go out on a network, find a file and then pass then return that file to the client browser.  Right now I'm reading in the file and then writing it the output stream.  It seems that there should be a much better way to do this like apache does it with sendfile.  Is it possible to use this (the sendfile os call) from inside my python handler?
> 
> OLIVER
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From modpython at holovaty.com  Fri Feb  6 16:02:04 2004
From: modpython at holovaty.com (Adrian Holovaty)
Date: Fri Feb  6 17:58:43 2004
Subject: [mod_python] Reload scripts without restarting Apache?
In-Reply-To: <4023724F.7070908@ecritters.biz>
References: <4023724F.7070908@ecritters.biz>
Message-ID: <200402061602.04891.modpython@holovaty.com>

Leif K-Brooks wrote:
> I'm getting started doing some development with mod_python, and I
> generally like to do a little bit at a time and test. That's made more
> difficult by having to restart Apache to get my new scripts used, and it
> would probably be worse on a production server. I don't want to lose
> performance, but is there  a way to make mod_python check if the script
> has changed or something?

I'd definitely *not* recommend doing this on a production server, but...

On my "development server" (a.k.a. my laptop), I've set this in httpd.conf:

MaxRequestsPerChild  1

That way, regardless of the PythonReload directive, each Apache child will 
only live long enough to serve one request. Which means the Python 
interpreter will restart for every request and you can always be certain 
there isn't any weird module caching voodoo going on.

Adrian

From neel at mediapulse.com  Fri Feb  6 17:32:56 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Fri Feb  6 18:28:03 2004
Subject: [mod_python] Reload scripts without restarting Apache?
Message-ID: <C0FC22C08B82074A88B50061764157776B9A72@johnson.mediapulse.net>

> I'd definitely *not* recommend doing this on a production 
> server, but...
> 
> On my "development server" (a.k.a. my laptop), I've set this 
> in httpd.conf:
> 
> MaxRequestsPerChild  1
> 
Heh... wow.  That's one way to do it =p

Search the mail archives and you'll find this question has come up a few
times.  You can use apache.import to let mod_python decide when to
reload a module (I think it's called apache.import), or you can call
reload yourself.  I choose the latter, and tie it to the PythonDebug
setting, i.e.
	
	import mymod1, mymod2

	def handler(req):
		if req.config.has_key('PythonDebug'):
			reload(mymod1)
			reload(mymod2)

(syntax may not be right there, going from memory atm).  There were some
other method listed as well, can't recall what they were atm.

Mike

From jalil at securia.com  Fri Feb  6 17:21:23 2004
From: jalil at securia.com (jalil)
Date: Fri Feb  6 21:15:13 2004
Subject: [mod_python] Issue after upgrade
Message-ID: <40243D93.2090209@securia.com>


My web application in mod_python used to work fine. I was using a 
version of MySQLdb I had compiled a while ago with the production 
version of Mysql. I later  upgraded Mysql to a later version (the alpha 
version) and everything kept working just fine.

A few days ago, while trying to run a python program from shell, I came 
across the following error: 

 File "/usr/local/lib/python2.3/site-packages/MySQLdb/__init__.py", line 
31, in ?
   raise ImportError, "this is MySQLdb version %s, but _mysql is version 
%s" %\ImportError: this is MySQLdb version (0, 9, 1, 'final', 1), but 
_mysql is version (0, 9, 2, 'final', 1)

I thought I had to re-compile MySQLdb with the later version of MySQL. I 
did it and I could run my python program from shell fine. However, after 
the recompile, my mod-python app stopped working. Now, in some select 
statements, the call just doesn't return and I believe it crahes.

I didn't touch anything in my web app and the only way I can explain it 
is b/c I recompiled the MySQLdb. Could anybody help me debug this 
situation. I am stuck. How can I find out what is going on exactly?

I appreciate any help.

- Jalil

From dietrich at zdome.net  Sat Feb  7 03:21:52 2004
From: dietrich at zdome.net (Dietrich Epp)
Date: Sat Feb  7 07:15:44 2004
Subject: [mod_python] Error: Could not import mod_python.apache
Message-ID: <D40ECEC6-595F-11D8-8166-0003934ACDEC@zdome.net>

I've spent a while searching the list archives for a solution to the 
problem:

make_obcallback: could not import mod_python.apache.

I'm running Apache 2.0 and mod_python from CVS.  Python is installed in 
a funny place, /usr/local/python.  According to my research, I have to 
do something to tell apache/mod_python Python's location.  Is that 
correct?  How do I do this?  I've seen a decent number of messages on 
this topic, but very few answers, and none that are definitive.

Since I'm doing the tutorial in the docs, I see no need to post my 
httpd.conf sections here.

From jalil at securia.com  Sat Feb  7 10:27:31 2004
From: jalil at securia.com (jalil)
Date: Sat Feb  7 14:21:21 2004
Subject: [mod_python] Question on Transactions 
Message-ID: <40252E13.4060203@securia.com>

I am looking for a clean way to create a transaction and use it across 
multiple method calls. For example, method A calls B and C. B updates a 
row successfully but C fails. I like A to abort changes made by B. I 
thought about doing it by passing a connection created in A to B and C 
so I can rollback if needed in A. But I don't like this approach.  I 
like B to creates its own connection but join the transaction that 
already started by A (or somehow get the same connection) or use its own 
transaction context (or a new connection) if none there.

I wonder how other people do this using Python.

Thanks,

-Jalil

From rclilly at cox.net  Sat Feb  7 11:25:21 2004
From: rclilly at cox.net (Robert Lilly)
Date: Sat Feb  7 15:20:29 2004
Subject: [mod_python] Question on Transactions 
In-Reply-To: <40252E13.4060203@securia.com>
Message-ID: <IPEBIIINFOKECGJPOAOMAEAPCCAA.rclilly@cox.net>

> [mailto:mod_python-bounces@modpython.org]On Behalf Of jalil
> Sent: Saturday, February 07, 2004 10:28 AM
> Subject: [mod_python] Question on Transactions
>
> I am looking for a clean way to create a transaction and use it across
> multiple method calls. For example, method A calls B and C. B updates a
> row successfully but C fails. I like A to abort changes made by B. I
> thought about doing it by passing a connection created in A to B and C
> so I can rollback if needed in A. But I don't like this approach.  I
> like B to creates its own connection but join the transaction that
> already started by A (or somehow get the same connection) or use its own
> transaction context (or a new connection) if none there.
>
> I wonder how other people do this using Python.
>
> Thanks,
>
> -Jalil

Jalil, is this a database transaction? It sounds like the Atomicity part of
the ACID test for DBMSes where when a transaction that updates the database
occurs, either all of the update occurs, or none of the update occurs, even
if a hardware or software failure occurs during the transaction.

I'm not sure how DBMSes accomplish this, but maybe the same principle would
work for you.

Sorry I'm not of much help, but maybe this will assist others to get a
better idea of your situation.

-Robert

From guhanets_work at yahoo.com  Sat Feb  7 11:28:32 2004
From: guhanets_work at yahoo.com (Guhan Santhanam)
Date: Sat Feb  7 15:23:39 2004
Subject: [mod_python] dynamic web pages
Message-ID: <20040207192832.35891.qmail@web61108.mail.yahoo.com>

hi,
i want to write dynamic in server web pages in mod_python. please tell me the best place 2 get started .
 
thanks a lot in advance.
 
Guhan


---------------------------------
Do you Yahoo!?
Yahoo! Finance: Get your refund fast by filing online
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20040207/81b6bcc1/attachment.html
From jalil at securia.com  Sat Feb  7 12:32:33 2004
From: jalil at securia.com (jalil)
Date: Sat Feb  7 16:26:23 2004
Subject: [mod_python] Question on Transactions
In-Reply-To: <IPEBIIINFOKECGJPOAOMAEAPCCAA.rclilly@cox.net>
References: <IPEBIIINFOKECGJPOAOMAEAPCCAA.rclilly@cox.net>
Message-ID: <40254B61.1080901@securia.com>

Robert,

Thanks for the reply. Yes, this is a database transaction and I want to, 
as you described,  make sure all updates or none happens.

-Jalil

Robert Lilly wrote:

>>[mailto:mod_python-bounces@modpython.org]On Behalf Of jalil
>>Sent: Saturday, February 07, 2004 10:28 AM
>>Subject: [mod_python] Question on Transactions
>>
>>I am looking for a clean way to create a transaction and use it across
>>multiple method calls. For example, method A calls B and C. B updates a
>>row successfully but C fails. I like A to abort changes made by B. I
>>thought about doing it by passing a connection created in A to B and C
>>so I can rollback if needed in A. But I don't like this approach.  I
>>like B to creates its own connection but join the transaction that
>>already started by A (or somehow get the same connection) or use its own
>>transaction context (or a new connection) if none there.
>>
>>I wonder how other people do this using Python.
>>
>>Thanks,
>>
>>-Jalil
>>    
>>
>
>Jalil, is this a database transaction? It sounds like the Atomicity part of
>the ACID test for DBMSes where when a transaction that updates the database
>occurs, either all of the update occurs, or none of the update occurs, even
>if a hardware or software failure occurs during the transaction.
>
>I'm not sure how DBMSes accomplish this, but maybe the same principle would
>work for you.
>
>Sorry I'm not of much help, but maybe this will assist others to get a
>better idea of your situation.
>
>-Robert
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>

From jalil at securia.com  Sat Feb  7 12:37:09 2004
From: jalil at securia.com (jalil)
Date: Sat Feb  7 16:30:58 2004
Subject: [mod_python] Python Data Objects
Message-ID: <40254C75.9090600@securia.com>

I came across http://skunkweb.sourceforge.net/PyDO/ but it seems this is 
part of a python-based web server named skunkweb. I am not really 
familiar with skunkweb and like to use pydo (or another python data 
object class) in my mod_python which uses MySQLDb.

Does anybody know if it is possible to use just skunkweb pydo class w/o 
the skunk web? If so, how I should do it? If not, is there any other 
classes I can use?

Thanks,

-Jalil

From jalil at securia.com  Sat Feb  7 13:12:03 2004
From: jalil at securia.com (jalil)
Date: Sat Feb  7 17:05:53 2004
Subject: [mod_python] Any support for Class Destructors
Message-ID: <402554A3.4010605@securia.com>


Is there a concept of class destructors in Python? I couldn't find any. 
If not, what is the right way to release resources that are needed 
during the lifetime of an object w/o making an explict call to a method?

Thanks,

-Jalil

From jalil at securia.com  Sat Feb  7 13:30:04 2004
From: jalil at securia.com (jalil)
Date: Sat Feb  7 17:23:53 2004
Subject: [mod_python] Any support for Class Destructors
In-Reply-To: <402554A3.4010605@securia.com>
References: <402554A3.4010605@securia.com>
Message-ID: <402558DC.8090100@securia.com>

Sorry! I just found about the __del__ (self) method.

-Jalil

jalil wrote:

>
> Is there a concept of class destructors in Python? I couldn't find 
> any. If not, what is the right way to release resources that are 
> needed during the lifetime of an object w/o making an explict call to 
> a method?
>
> Thanks,
>
> -Jalil
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From oliver at mellet.net  Sat Feb  7 13:34:56 2004
From: oliver at mellet.net (Oliver Mellet)
Date: Sat Feb  7 17:30:53 2004
Subject: [mod_python] Any support for Class Destructors
In-Reply-To: <402554A3.4010605@securia.com>
Message-ID: <20040207213525.020D32AEA99@meatwad.modul.us>

If you define a __del__(self) method on your class, it will be 
called once the class instance's reference count drops to zero.
Just to be safe, tho, I wouldn't rely on this mechanism to release
important resources like db connections or file handles, but would
explicitly release them.


> -----Original Message-----
> From: mod_python-bounces@modpython.org 
> [mailto:mod_python-bounces@modpython.org] On Behalf Of jalil
> Sent: Saturday, February 07, 2004 1:12 PM
> To: python
> Subject: [mod_python] Any support for Class Destructors
> 
> 
> Is there a concept of class destructors in Python? I couldn't 
> find any. 
> If not, what is the right way to release resources that are 
> needed during the lifetime of an object w/o making an explict 
> call to a method?
> 
> Thanks,
> 
> -Jalil
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From dannoritzer at web.de  Sun Feb  8 00:37:05 2004
From: dannoritzer at web.de (dannoritzer@web.de)
Date: Sat Feb  7 19:32:30 2004
Subject: [mod_python] .htaccess auth with mod_python publisher handler
Message-ID: <402576A1.9030000@web.de>

Hello,

I am pretty new to mod_python and got my first script with a publisher 
handler going. Now I would like to restrict access to it with the 
.htaccess file. Is there anything different to consider other than 
access restriction to a plain html file e.g.?

I am using the following configuration, but always get the error 
message: "Bad Request", after I provided login and password. If I 
disable the access control, the script works just fine.


<files "menu.*">
   AuthType Digest
   AuthName "Menu"
   AuthDigestFile /srv/www/passwords/.digest
   AuthDigestDomain /dynamic/ http:/www.myDomain.com/dynamic/
   AuthDigestNonceLifetime 300
   Allow from All
   Options +ExecCGI
   AddHandler python-program .py
   Require valid-user
</files>

Using:
Apache 2.0.47
mod_python 3.1.0a
Python 2.3


Thanks for the help.

Guenter


From kevin at discogs.com  Sat Feb  7 15:50:53 2004
From: kevin at discogs.com (Kevin Lewandowski)
Date: Sat Feb  7 19:46:02 2004
Subject: [mod_python] Python Data Objects
In-Reply-To: <40254C75.9090600@securia.com>;
	from jalil@securia.com on Sat, Feb 07, 2004 at 12:37:09PM -0800
References: <40254C75.9090600@securia.com>
Message-ID: <20040207155053.A14326@discogs.com>

Yes, I am using PyDO with mod_python and no skunkweb. Works great.

It is available as a standalone package, separate from skunkweb. Download
from here: http://sourceforge.net/projects/skunkweb/

Kevin


On Sat, Feb 07, 2004 at 12:37:09PM -0800, jalil wrote:
> I came across http://skunkweb.sourceforge.net/PyDO/ but it seems this is 
> part of a python-based web server named skunkweb. I am not really 
> familiar with skunkweb and like to use pydo (or another python data 
> object class) in my mod_python which uses MySQLDb.
> 
> Does anybody know if it is possible to use just skunkweb pydo class w/o 
> the skunk web? If so, how I should do it? If not, is there any other 
> classes I can use?
> 
> Thanks,
> 
> -Jalil
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From davidf at sjsoft.com  Sun Feb  8 08:05:26 2004
From: davidf at sjsoft.com (David Fraser)
Date: Sun Feb  8 02:00:40 2004
Subject: [mod_python] Question on Transactions
In-Reply-To: <40252E13.4060203@securia.com>
References: <40252E13.4060203@securia.com>
Message-ID: <4025D1A6.2080104@sjsoft.com>

jalil wrote:

> I am looking for a clean way to create a transaction and use it across 
> multiple method calls. For example, method A calls B and C. B updates 
> a row successfully but C fails. I like A to abort changes made by B. I 
> thought about doing it by passing a connection created in A to B and C 
> so I can rollback if needed in A. But I don't like this approach.  I 
> like B to creates its own connection but join the transaction that 
> already started by A (or somehow get the same connection) or use its 
> own transaction context (or a new connection) if none there.
>
> I wonder how other people do this using Python.

Sounds like you need a single cursor that is opened in A and passed in
to B and C.
You should be able to use a single connection throughout your
application, then open a new cursor for each transaction...

David

From davidf at sjsoft.com  Sun Feb  8 08:07:03 2004
From: davidf at sjsoft.com (David Fraser)
Date: Sun Feb  8 02:02:18 2004
Subject: [mod_python] dynamic web pages
In-Reply-To: <20040207192832.35891.qmail@web61108.mail.yahoo.com>
References: <20040207192832.35891.qmail@web61108.mail.yahoo.com>
Message-ID: <4025D207.9040506@sjsoft.com>

Guhan Santhanam wrote:

> hi,
> i want to write dynamic in server web pages in mod_python. please tell 
> me the best place 2 get started .
>  
> thanks a lot in advance.
>  
> Guhan

That is exactly what mod_python does! But unless you supply more
specifics, it is hard to answer your question.
Probably best to read the mod_python documentation - if that seems to
complex, then it means you should be using another web framework layered
on top of mod_python, which you can search for on the web...

David

From jalil at securia.com  Sun Feb  8 10:34:39 2004
From: jalil at securia.com (jalil)
Date: Sun Feb  8 14:28:33 2004
Subject: [mod_python] Big Issue w/ sys.path
Message-ID: <4026813F.9070504@securia.com>

I  am running two mod-python apps on one apache server. One app is for 
development and the other is for testing. I just came across an 
interesting issue with sys.path that I am not sure how to resolve.

In my app, I have a pylib dir and I set the sys.path in the app to 
include this dir. I just noticed that I get to the test data in my 
development version (and sometimes vice versa randomly) and after 
spending sometime I realized that sys.path is shared b/w the two 
versions. I think Apache starts mod_python in one process and shares it 
across apps and when I set sys.path in one app it is visible to the 
other app. This cause my apps to randomly use each other environment 
libraries, which I don't want to happen at all as one is in development 
and one in testing.

Is there a way to keep the two apps completely isolated? I am using the 
pre-fork MPM in apache and just have separate paths on Apache to serve 
my apps.

Thanks,

-Jalil

From dwmp at opti.cgi.net  Sun Feb  8 12:45:19 2004
From: dwmp at opti.cgi.net (Daniel West)
Date: Sun Feb  8 14:39:55 2004
Subject: [mod_python] Big Issue w/ sys.path
In-Reply-To: <4026813F.9070504@securia.com>
Message-ID: <5.2.1.1.2.20040208124414.0374a9d8@mail.pyxos.com>

At 10:34 AM 2/8/2004 -0800, you wrote:
>I  am running two mod-python apps on one apache server. One app is for 
>development and the other is for testing. I just came across an 
>interesting issue with sys.path that I am not sure how to resolve.
>
>In my app, I have a pylib dir and I set the sys.path in the app to include 
>this dir. I just noticed that I get to the test data in my development 
>version (and sometimes vice versa randomly) and after spending sometime I 
>realized that sys.path is shared b/w the two versions. I think Apache 
>starts mod_python in one process and shares it across apps and when I set 
>sys.path in one app it is visible to the other app. This cause my apps to 
>randomly use each other environment libraries, which I don't want to 
>happen at all as one is in development and one in testing.
>
>Is there a way to keep the two apps completely isolated? I am using the 
>pre-fork MPM in apache and just have separate paths on Apache to serve my apps.

PythonPath is supported in the virtual host config.  Perhaps you could 
structure your test and development into different virtual hosts.

-Dan

From grisha at modpython.org  Sun Feb  8 16:14:57 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Sun Feb  8 17:10:06 2004
Subject: [mod_python] Big Issue w/ sys.path
In-Reply-To: <4026813F.9070504@securia.com>
References: <4026813F.9070504@securia.com>
Message-ID: <20040208161136.B40859@onyx.ispol.com>



On Sun, 8 Feb 2004, jalil wrote:

> I think Apache starts mod_python in one process and shares it across
> apps and when I set sys.path in one app it is visible to the other app.

This is the way it should work. sys.path is global to the sub-intepreter,
so if both apps are running in the same sub-interpreter, then they share
sys.path (as well as lots of other things).

There are two things you can do - first rethink your app so that you don't
have to change sys.path, the second way is to ensure that the apps are
running in seprate sub-interpreters.

The manual has more info on this:

http://www.modpython.org/live/current/doc-html/pyapi-interps.html

Grisha
From jalil at securia.com  Sun Feb  8 16:23:10 2004
From: jalil at securia.com (jalil)
Date: Sun Feb  8 20:17:05 2004
Subject: [mod_python] Big Issue w/ sys.path
In-Reply-To: <20040208161136.B40859@onyx.ispol.com>
References: <4026813F.9070504@securia.com>
	<20040208161136.B40859@onyx.ispol.com>
Message-ID: <4026D2EE.5090009@securia.com>

Thanks for the info. I remember reading some notes on PSP where there 
was a pylib dir and the sys.path was set to include pylib. I just 
followed the example. My fault!

I made changes and I now don't set the sys.path anymore. I turned my 
pylib dir into a package and then imported modules explicitly using the 
apache.import_module("pylib.<module>") in my psp files. However, when I 
run both apps, the base dir of both apps appears in the sys.path (which 
now makes sense) in a random order, so, to prevent the problem, I still 
have to rename my pylib dir to pylibs in test dir and modify the path in 
the import_apache calls when I move the files for testing.

It is not a clean solution but works for now. If there is a better way 
to do this  (without using virtual hosts or a sub-interpreter), please 
let me know.

Thanks,

-Jalil


Gregory (Grisha) Trubetskoy wrote:

>On Sun, 8 Feb 2004, jalil wrote:
>
>  
>
>>I think Apache starts mod_python in one process and shares it across
>>apps and when I set sys.path in one app it is visible to the other app.
>>    
>>
>
>This is the way it should work. sys.path is global to the sub-intepreter,
>so if both apps are running in the same sub-interpreter, then they share
>sys.path (as well as lots of other things).
>
>There are two things you can do - first rethink your app so that you don't
>have to change sys.path, the second way is to ensure that the apps are
>running in seprate sub-interpreters.
>
>The manual has more info on this:
>
>http://www.modpython.org/live/current/doc-html/pyapi-interps.html
>
>Grisha
>
>  
>

From dg at sponsera.com  Mon Feb  9 00:04:59 2004
From: dg at sponsera.com (David Geller)
Date: Mon Feb  9 01:00:10 2004
Subject: [mod_python] 
	DocumentRoot / security / directory structure questions
Message-ID: <402714FB.1040207@sponsera.com>

Hi,

1. I hope this doesn't sound *too* naive, but I have this question. For 
cgi scripts, books tell you not to include the scripts within your 
document root, for "security" reasons (not exactly sure why this is, but 
I suppose this is a bit of extra security to prevent folks from viewing 
the raw python files via some apache backdoor....). So typically, with 
ScriptAlias, your cgi directory can be anywhere (and outside the 
DocumentRoot) and life is good.

With mod_python, is it possible to keep your python files outside the 
DocumentRoot?  I guess it is, with all python files other than the one 
containing the handler,  but can you put the handler file outside the 
document root as well?

I have read through most of the mod_python mail archives, and issues 
related to this are mentioned, but not his exactly (I think).

2. Related question - (I think this was answered, but not quite 
sure...). If you want *all* your requests to come through your python 
handler, and you are *not* serving *directly* html or img, how do you do 
this? AND, you basically want to obfiscate the fact you are using 
python, and want only very generic-looking  file names to appear in the 
"url" bar (top browser bar).  Of course, your python might itself 
generate html that will contain references to images, javascript etc - 
and for these resources, it is fine, for them to be inside your document 
root

3. And another related question: I have seen apps (e.g., written in PHP) 
that always have the same (original, simple) url appear in the top URL 
bar, no matter which URL's are generated by the underlying program (eg., 
during POST requests). How is this done?


Much obliged!

David Geller


From oliver at mellet.net  Sun Feb  8 21:47:36 2004
From: oliver at mellet.net (Oliver Mellet)
Date: Mon Feb  9 01:42:51 2004
Subject: [mod_python] Login and redirection
Message-ID: <20040209054737.4D7142AEAA7@meatwad.modul.us>

I've got a situation where I need to protect pages, and I'm doing
it using cookies and sessions. If the user requests a 
protected page and he or she hasn't logged in, I redirect them
to a psp login page, which then POSTs to a publisher handler script.
That script then does req.internal_redirect to the originating url, or
back to the login page if the login didn't take.
The problem I'm having is twofold:
1.  If the login succeeds, then the internal redirect shows up in the 
location bar as the publisher script url, rather than the proper url
of the protected document.  It's ugly, but I can live with it if I have to.

2.  If the login fails, the internal redirect back to the login page never
happens; it seems like there's some sort of deadlock going from :
	login.psp redirect->POST login.py->internal_redirect login.psp

Having said all that, there's probably a better way to skin this particular
cat. If anyone has any suggestions, I'd be much obliged.

Thanks
Oliver

From khurram at renai-soft.com  Mon Feb  9 14:17:01 2004
From: khurram at renai-soft.com (Khurram)
Date: Mon Feb  9 03:10:56 2004
Subject: [mod_python] Python Data
	Objects&In-Reply-To=40254C75.9090600@securia.com
In-Reply-To: <200402081700.i18H06KR028034@slash.mediapulse.com>
References: <200402081700.i18H06KR028034@slash.mediapulse.com>
Message-ID: <1076357821.4027eabd4b183@webmail.renai-soft.com>

Hi,

Please check http://php.weblogs.com/adodb_python#download for python ado_db. Its
supports transactions. You can also use transactions by native db calls such
BEGIN TRANSACTION etc.

Khurram Ijaz,
http://www.renai-soft.com

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

From dietrich at zdome.net  Sun Feb  8 23:43:48 2004
From: dietrich at zdome.net (Dietrich Epp)
Date: Mon Feb  9 03:37:41 2004
Subject: [mod_python] Error: Could not import mod_python.apache
In-Reply-To: <D40ECEC6-595F-11D8-8166-0003934ACDEC@zdome.net>
References: <D40ECEC6-595F-11D8-8166-0003934ACDEC@zdome.net>
Message-ID: <B25F5A9E-5AD3-11D8-8DEC-0003934ACDEC@zdome.net>

Hmm... this time I'll try sending the reply to the LIST, as opposed to 
just myself.

Okay, it's been almost 48 hours and the response has been dead except 
for a single person telling me that they had the same problem.  That's 
cool.  I rewrote the error handling for the section of mod_python that 
failed and got a much more descriptive message.  I replaced the 
occurrences of \n with newlines.  It appears to be cut off by Python at 
(2^9)-1 characters after "ImportError: ".

[error] mod_python: ImportError: Failure linking new module: : dyld: 
/usr/local/apache/bin/httpd Undefined symbols:
/usr/local/python/lib/python2.3/lib-dynload/time.so undefined reference 
to _PyArg_Parse expected to be defined in the executable
/usr/local/python/lib/python2.3/lib-dynload/time.so undefined reference 
to _PyArg_ParseTuple expected to be defined in the executable
/usr/local/python/lib/python2.3/lib-dynload/time.so undefined reference 
to _PyDict_GetItemString expected to be defined in the executable
/usr/local/python/lib/pytho

This leaves me with some questions.

0. Why does mod_python call PyErr_Print?  The output goes nowhere, as 
far as I can tell, even if httpd is launched with -X.

1. Does this mean that python's dynamically-linked modules only look in 
the linking application namespace to find symbols expected to be found 
in Python?

2. Could I fix this by relinking Python with a single level namespace 
(this is specific to Mac OS X)?  This seems to be a bad solution, as I 
don't think the problem is OS X-specific.

3. Could I fix this by changing in a more general (i.e., 
cross-platform) way the method that Python's libraries search for their 
dependencies?  Can this be done without moving Python's core code to a 
dynamic library?

4. Have other projects had the same problem when embedding Python in 
dynamically loaded object code?

5. Are there even any other projects which embed Python in dynamically 
loaded object code?

6. Am I posting on the wrong list?

On Feb 7, 2004, at 3:21 AM, Dietrich Epp wrote:

> I've spent a while searching the list archives for a solution to the 
> problem:
>
> make_obcallback: could not import mod_python.apache.
>
> I'm running Apache 2.0 and mod_python from CVS.  Python is installed 
> in a funny place, /usr/local/python.  According to my research, I have 
> to do something to tell apache/mod_python Python's location.  Is that 
> correct?  How do I do this?  I've seen a decent number of messages on 
> this topic, but very few answers, and none that are definitive.
>
> Since I'm doing the tutorial in the docs, I see no need to post my 
> httpd.conf sections here.

From kamil at nvstudio.pl  Mon Feb  9 12:06:40 2004
From: kamil at nvstudio.pl (Kamil Niechajewicz)
Date: Mon Feb  9 07:02:14 2004
Subject: [mod_python] serving files by modpython handler
Message-ID: <20040209120640.5686c3f3.kamil@nvstudio.pl>


I'm using mod_python to handle all requests to, for
example, URL "mysite/". Now I need to include some
images on my website, so I put

<img src="/img/someimage.gif"> 

into my HTML and display page, but nothing happens,
because when browser wants to get an image from url
that is mapped to my modpython module it's of course
redirected to handler, and gets no image at all.

Here I want to ask, what is best way to solve this problem -
I see two ways.

- I can write some code in my handler that will check 
	whether someone wants to get a "file resource",
	and send the content of this file to browser

- Second way is making some dir outside, that will not
	be mapped to my handler, but I don't know whether it
	will work, because my _whole_ site is handled by
	mod_python module. So when I have "/ and below" 
	handled by modpython how can I have "/img" handled
	by normal apache handlers that will just send requested
	file?

What is the best method to do this?

With regards,  
 K.
From fowlertrainer at anonym.hu  Mon Feb  9 12:29:56 2004
From: fowlertrainer at anonym.hu (fowlertrainer@anonym.hu)
Date: Mon Feb  9 07:25:10 2004
Subject: [mod_python] File like directory
Message-ID: <2314233566.20040209122956@anonym.hu>

Hello !

  Have the Apache (not the mod_python !) a directive, what do this ?
  root/Any.html (this is the file)
  http://Any/personal http://Any/modify (I can access as directory)

  The mod_rewrite is do that, but have the Apache (2) a directive,
  what do that also ?

  thanx
  
-- 
Best regards,
 fowlertrainer                          mailto:fowlertrainer@anonym.hu

Ps:
 Please write to my personal email (if possible), because I'm in
 digest mode, and I wait for the answer.
 Thx
 

From dpopowich at mtrsd.k12.ma.us  Mon Feb  9 09:32:12 2004
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Mon Feb  9 10:28:21 2004
Subject: [mod_python] Reload scripts without restarting Apache?
In-Reply-To: <C0FC22C08B82074A88B50061764157776B9A72@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B50061764157776B9A72@johnson.mediapulse.net>
Message-ID: <16423.39404.253068.652576@gargle.gargle.HOWL>


Michael C. Neel writes:
> > I'd definitely *not* recommend doing this on a production 
> > server, but...
> > 
> > On my "development server" (a.k.a. my laptop), I've set this 
> > in httpd.conf:
> > 
> > MaxRequestsPerChild  1
> > 
> Heh... wow.  That's one way to do it =p
> 

Sure is and I'm going to use it for development!!  The problem with
doing manual reloads, conditional on some debugging state, is the
complexity involved when you have deeply nested modules.  In the app
I'm developing, I'm currently doing a lot of tweaking of code in a
module imported a few modules down the pipe, as it were.  It's really
HARD to get the re-importing logic down there AND it really doesn't
want to be there because one of the intermediate modules has no
knowledge of being used via mod_python.  Or maybe you're using a
third-party module that allows plugins and you're working on the
plugin -- you don't want to modify the third-party module to do
conditional reloads -- UGLY!

I love the MaxRequestsPerChild idea.  Simple!!!  I just hope I
remember to reset it!  :-)

Daniel

From neel at mediapulse.com  Mon Feb  9 10:56:21 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Mon Feb  9 11:51:31 2004
Subject: [mod_python] Reload scripts without restarting Apache?
Message-ID: <C0FC22C08B82074A88B500617641577787A83B@johnson.mediapulse.net>

> Sure is and I'm going to use it for development!!  The problem with
> doing manual reloads, conditional on some debugging state, is the
> complexity involved when you have deeply nested modules.  In the app
> I'm developing, I'm currently doing a lot of tweaking of code in a
> module imported a few modules down the pipe, as it were.  It's really
> HARD to get the re-importing logic down there AND it really doesn't
> want to be there because one of the intermediate modules has no
> knowledge of being used via mod_python.  Or maybe you're using a
> third-party module that allows plugins and you're working on the
> plugin -- you don't want to modify the third-party module to do
> conditional reloads -- UGLY!
> 

I believe you should be able to import any module you want in your
handler module, even if the handler doesn't use the module directly, and
have reload() work as expected.  This way you can keep any special debug
flag action in the handler module and the other modules never need to
know.

Another option is starting httpd with -X, in which it runs in single
process mode and I think dumps log info to the standard out.  If your
going MaxChild 1, might as well go the full monty with httpd -X =p

Mike

From michael at dynamine.net  Mon Feb  9 08:57:30 2004
From: michael at dynamine.net (Michael S. Fischer)
Date: Mon Feb  9 12:52:46 2004
Subject: [mod_python] Error: Could not import mod_python.apache
References: <D40ECEC6-595F-11D8-8166-0003934ACDEC@zdome.net>
	<B25F5A9E-5AD3-11D8-8DEC-0003934ACDEC@zdome.net>
Message-ID: <004f01c3ef2d$cf5f4540$0a01a8c0@lucinda>

Dietrich,

You probably didn't get a response because in your original post, you didn't
tell us the details of your system.  Now we know you're using OS X, but we
still don't know which version.

If you're using Panther (10.3), you don't need a separate Python
installation; the stock Python 2.3 that ships with it will suffice.  Check
the following post for additional information:

http://www.modpython.org/pipermail/mod_python/2003-December/014637.html

Best,

--Michael

----- Original Message ----- 
From: "Dietrich Epp" <dietrich@zdome.net>
To: "Mod Python Users" <mod_python@modpython.org>
Sent: Sunday, February 08, 2004 11:43 PM
Subject: Re: [mod_python] Error: Could not import mod_python.apache


> Hmm... this time I'll try sending the reply to the LIST, as opposed to
> just myself.
>
> Okay, it's been almost 48 hours and the response has been dead except
> for a single person telling me that they had the same problem.  That's
> cool.  I rewrote the error handling for the section of mod_python that
> failed and got a much more descriptive message.  I replaced the
> occurrences of \n with newlines.  It appears to be cut off by Python at
> (2^9)-1 characters after "ImportError: ".
>
> [error] mod_python: ImportError: Failure linking new module: : dyld:
> /usr/local/apache/bin/httpd Undefined symbols:
> /usr/local/python/lib/python2.3/lib-dynload/time.so undefined reference
> to _PyArg_Parse expected to be defined in the executable
> /usr/local/python/lib/python2.3/lib-dynload/time.so undefined reference
> to _PyArg_ParseTuple expected to be defined in the executable
> /usr/local/python/lib/python2.3/lib-dynload/time.so undefined reference
> to _PyDict_GetItemString expected to be defined in the executable
> /usr/local/python/lib/pytho
>
> This leaves me with some questions.
>
> 0. Why does mod_python call PyErr_Print?  The output goes nowhere, as
> far as I can tell, even if httpd is launched with -X.
>
> 1. Does this mean that python's dynamically-linked modules only look in
> the linking application namespace to find symbols expected to be found
> in Python?
>
> 2. Could I fix this by relinking Python with a single level namespace
> (this is specific to Mac OS X)?  This seems to be a bad solution, as I
> don't think the problem is OS X-specific.
>
> 3. Could I fix this by changing in a more general (i.e.,
> cross-platform) way the method that Python's libraries search for their
> dependencies?  Can this be done without moving Python's core code to a
> dynamic library?
>
> 4. Have other projects had the same problem when embedding Python in
> dynamically loaded object code?
>
> 5. Are there even any other projects which embed Python in dynamically
> loaded object code?
>
> 6. Am I posting on the wrong list?
>
> On Feb 7, 2004, at 3:21 AM, Dietrich Epp wrote:
>
> > I've spent a while searching the list archives for a solution to the
> > problem:
> >
> > make_obcallback: could not import mod_python.apache.
> >
> > I'm running Apache 2.0 and mod_python from CVS.  Python is installed
> > in a funny place, /usr/local/python.  According to my research, I have
> > to do something to tell apache/mod_python Python's location.  Is that
> > correct?  How do I do this?  I've seen a decent number of messages on
> > this topic, but very few answers, and none that are definitive.
> >
> > Since I'm doing the tutorial in the docs, I see no need to post my
> > httpd.conf sections here.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

From dpopowich at mtrsd.k12.ma.us  Mon Feb  9 12:16:30 2004
From: dpopowich at mtrsd.k12.ma.us (Daniel J. Popowich)
Date: Mon Feb  9 13:12:39 2004
Subject: [mod_python] Reload scripts without restarting Apache?
In-Reply-To: <C0FC22C08B82074A88B500617641577787A83B@johnson.mediapulse.net>
References: <C0FC22C08B82074A88B500617641577787A83B@johnson.mediapulse.net>
Message-ID: <16423.49262.885549.451736@gargle.gargle.HOWL>


Michael C. Neel writes:
> > Sure is and I'm going to use it for development!!  The problem with
> > doing manual reloads, conditional on some debugging state, is the
> > complexity involved when you have deeply nested modules.  In the app
> > I'm developing, I'm currently doing a lot of tweaking of code in a
> > module imported a few modules down the pipe, as it were.  It's really
> > HARD to get the re-importing logic down there AND it really doesn't
> > want to be there because one of the intermediate modules has no
> > knowledge of being used via mod_python.  Or maybe you're using a
> > third-party module that allows plugins and you're working on the
> > plugin -- you don't want to modify the third-party module to do
> > conditional reloads -- UGLY!
> > 

> I believe you should be able to import any module you want in your
> handler module, even if the handler doesn't use the module directly, and
> have reload() work as expected.  This way you can keep any special debug
> flag action in the handler module and the other modules never need to
> know.

But there are so many caveats to using reload() (see the python doc
for the builtin, but in particular the use of from ... import ...)
that I find I almost always need to restart apache.  For certain
development situations (lots of tweaks to buried modules)
MaxRequestsPerChild set to 1 is perfect for *me* and perhaps for
others.  IMHO, worthwhile enough to mention it in the FAQ as one way
to handle this problem.

Daniel


From sgillies at frii.com  Mon Feb  9 12:48:12 2004
From: sgillies at frii.com (Sean Gillies)
Date: Mon Feb  9 15:43:19 2004
Subject: [mod_python] Apache config to use the PSP example?
Message-ID: <E53A196A-5B38-11D8-8626-000393B98B56@frii.com>

In index.py, there's a list of necessary Apache directives:

Apache config:

   SetHandler mod_python
   PythonHandler mod_python.publisher

Is more needed?  Does one have to set the directoryindex to index.py?

Sean

--
Sean Gillies
sgillies at frii dot com
http://users.frii.com/sgillies

From grisha at modpython.org  Mon Feb  9 15:42:34 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Feb  9 16:37:43 2004
Subject: [mod_python] Apache config to use the PSP example?
In-Reply-To: <E53A196A-5B38-11D8-8626-000393B98B56@frii.com>
References: <E53A196A-5B38-11D8-8626-000393B98B56@frii.com>
Message-ID: <20040209154155.M72857@onyx.ispol.com>



On Mon, 9 Feb 2004, Sean Gillies wrote:

> In index.py, there's a list of necessary Apache directives:
>
> Apache config:
>
>    SetHandler mod_python
>    PythonHandler mod_python.publisher
>
> Is more needed?  Does one have to set the directoryindex to index.py?

No, index.py is something that the publisher does for you, it doesn't have
anything to do with directoryindex.

Grisha
From rfelder at globaltecsolutions.com  Mon Feb  9 15:40:13 2004
From: rfelder at globaltecsolutions.com (Ryan Felder)
Date: Mon Feb  9 17:35:31 2004
Subject: [mod_python] Mod_Python and win32com
Message-ID: <BFELILJNDOILCFMKOHDBMEJICBAA.rfelder@globaltecsolutions.com>

Hi all, I'm pretty new to working with Mod_Python, and the project I am
working on requires me to be able to poll for some data through COM.

I am developing in windows 2000 professional, and will be running
my code on windows apache 2.0 with mod python. More specifically,
I am using the distribution of apache ssl and others named Swamp.

The code works fine when I run it standalone, however, when I attempt
to run it on my development site, the calls to the com object that work
beautifully alone, simply fail to return data. As follows is a brief
code sample which demonstrates this behaviour. This code functions
properly from a command prompt or in the interpreter.

def index():
	import win32com.client
	a=win32com.client.Dispatch('MyDataSource')
	b=str(a.GetOrders(account_identifier,'',2,0))
	return str(len(b))

if __name__ == "__main__":
	print index()

When this code runs standalone, it will return a non-zero value,
and when run from mod_python, it returns a zero value, due to
the len() function measuring the length of the output of my data call.

By way of typos, I have been able to produce exceptions in my testing
browser, so this leads me to believe that it is not passing any exceptions.

My research online has suggested that I try importing my modules through
apache.import_module. This gives me a number of different issues where
if I instantiate an instance of win32com, then try to address
that.client.Dispatch,
I recieve "module does not have 'client'", or similarly, if I try to
instantiate
an instance of win32com.client, I recieve "module does not have 'Dispatch'".

I have also seen it suggested that I initialize the com properly, and
manually,
by
	import sys
	sys.coinit_flags = 0

as well as

	import pythoncom
	pythoncom.CoInitializeEx(pythoncom.COINIT_MULTITHREADED)

which I do before attemting to import win32com, but to no avail,
in many, and in all permutations.

I have tried every permutation of apache.import_module and import,
that I can muster, and I am hitting a brick wall.

It seems that there is a breakdown in communications between myself and the
com objects when I try to import them. Any help that you all can offer me
would be hugely appreciated!

- Ryan


From perry.tew at cibavision.novartis.com  Mon Feb  9 17:25:55 2004
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Mon Feb  9 18:21:02 2004
Subject: [mod_python] 
	core dumping in worker MPM - can anyone help with these stack
	traces?
Message-ID: <OF1108EF83.1BFBC446-ON85256E35.007A56C8-85256E35.007B393F@EU.novartis.net>

Hey Everyone,
   Well, as promised, I'm attempting to troubleshoot my problems with the 
worker MPM crashes I'm experiencing.  I rebuilt everything with the -g 
CFLAG and when I examine the core file using gdb I receive the following 
stack traces (I did it three times to see if it reproduced).  btw. I'm 
using mod_python-3.1.1b (not using the latest 'cause my flex is out of 
date) and apache 2.0.48. 

I can provide additional information, but the actual code will be 
difficult to set up since it's an Authen handler going against an Oracle 
database using DCOracle2.

If anyone can provide a path I should go down, I would appreciate it.  I 
don't know the Apache API, and the only line of code that looks to be 
mod_python-ish is
#4  0xfdc2e9b0 in python_merge_config (p=0x67eb68, current_conf=0xdb520, 
new_conf=0xef2f8) at mod_python.c:653

which is this line of code from the source (mod_python.c 
python_merge_config):
    apr_table_overlap(merged_conf->options, nc->options, 
APR_OVERLAP_TABLES_SET);

Again, this runs without issue using the prefork model.

Thanks!
Perry Tew


(gdb) where
#0  0xfee4efec in strcasecmp () from /usr/lib/libc.so.1
#1  0xff0ccdd4 in table_mergesort (pool=0xa1670, values=0x5a4420, n=12) at 
apr_tables.c:1013
#2  0xff0ccfb4 in apr_table_compress (t=0x6804b0, flags=0) at 
apr_tables.c:1125
#3  0xff0cd2dc in apr_table_overlap (a=0x6804b0, b=0xef448, flags=0) at 
apr_tables.c:1244
#4  0xfdc2e9b0 in python_merge_config (p=0x67eb68, current_conf=0xdb520, 
new_conf=0xef2f8) at mod_python.c:653
#5  0x3bc10 in ap_merge_per_dir_configs (p=0x67eb68, base=0xd1ab8, 
new_conf=0x6800f8) at config.c:278
#6  0x668b0 in ap_directory_walk (r=0x67eba0) at request.c:1177
#7  0x60118 in core_map_to_storage (r=0x67eba0) at core.c:3367
#8  0x6384c in ap_run_map_to_storage (r=0x67eba0) at request.c:110
#9  0x64960 in ap_process_request_internal (r=0x67eba0) at request.c:191
#10 0x337d0 in ap_process_request (r=0x67eba0) at http_request.c:286
#11 0x2ae2c in ap_process_http_connection (c=0x3c5aa8) at http_core.c:293
#12 0x4e29c in ap_run_process_connection (c=0x3c5aa8) at connection.c:85
#13 0x4e83c in ap_process_connection (c=0x3c5aa8, csd=0x3c59b8) at 
connection.c:211
#14 0x35904 in process_socket (p=0x3c5980, sock=0x3c59b8, my_child_num=0, 
my_thread_num=8, bucket_alloc=0x3cf9a8)
    at worker.c:632
#15 0x36448 in worker_thread (thd=0xbbcf8, dummy=0x14bcb8) at worker.c:946
#16 0xff0d4de0 in dummy_worker (opaque=0xbbcf8) at thread.c:127




(gdb) where
#0  0xfee4efd4 in strcasecmp () from /usr/lib/libc.so.1
#1  0xfee4efcc in strcasecmp () from /usr/lib/libc.so.1
#2  0xff0ccfb4 in apr_table_compress (t=0x4b64c0, flags=0) at 
apr_tables.c:1125
#3  0xff0cd2dc in apr_table_overlap (a=0x4b64c0, b=0xef448, flags=0) at 
apr_tables.c:1244
#4  0xfdc2e9b0 in python_merge_config (p=0x4b4b80, current_conf=0xdb520, 
new_conf=0xef2f8) at mod_python.c:653
#5  0x3bc10 in ap_merge_per_dir_configs (p=0x4b4b80, base=0xd1ab8, 
new_conf=0x4b6108) at config.c:278
#6  0x668b0 in ap_directory_walk (r=0x4b4bb8) at request.c:1177
#7  0x60118 in core_map_to_storage (r=0x4b4bb8) at core.c:3367
#8  0x6384c in ap_run_map_to_storage (r=0x4b4bb8) at request.c:110
#9  0x64960 in ap_process_request_internal (r=0x4b4bb8) at request.c:191
#10 0x337d0 in ap_process_request (r=0x4b4bb8) at http_request.c:286
#11 0x2ae2c in ap_process_http_connection (c=0x4b0af8) at http_core.c:293
#12 0x4e29c in ap_run_process_connection (c=0x4b0af8) at connection.c:85
#13 0x4e83c in ap_process_connection (c=0x4b0af8, csd=0x4b0a08) at 
connection.c:211
#14 0x35904 in process_socket (p=0x4b09d0, sock=0x4b0a08, my_child_num=0, 
my_thread_num=14, bucket_alloc=0x4b2ae0)
    at worker.c:632
#15 0x36448 in worker_thread (thd=0xbbdb8, dummy=0x146c58) at worker.c:946
#16 0xff0d4de0 in dummy_worker (opaque=0xbbdb8) at thread.c:127




(gdb) where
#0  0xfee4efd4 in strcasecmp () from /usr/lib/libc.so.1
#1  0xfee4efcc in strcasecmp () from /usr/lib/libc.so.1
#2  0xff0ccfb4 in apr_table_compress (t=0x497290, flags=0) at 
apr_tables.c:1125
#3  0xff0cd2dc in apr_table_overlap (a=0x497290, b=0xef448, flags=0) at 
apr_tables.c:1244
#4  0xfdc2e9b0 in python_merge_config (p=0x495948, current_conf=0xdb520, 
new_conf=0xef2f8) at mod_python.c:653
#5  0x3bc10 in ap_merge_per_dir_configs (p=0x495948, base=0xd1ab8, 
new_conf=0x496ed8) at config.c:278
#6  0x668b0 in ap_directory_walk (r=0x495980) at request.c:1177
#7  0x60118 in core_map_to_storage (r=0x495980) at core.c:3367
#8  0x6384c in ap_run_map_to_storage (r=0x495980) at request.c:110
#9  0x64960 in ap_process_request_internal (r=0x495980) at request.c:191
#10 0x337d0 in ap_process_request (r=0x495980) at http_request.c:286
#11 0x2ae2c in ap_process_http_connection (c=0x490d58) at http_core.c:293
#12 0x4e29c in ap_run_process_connection (c=0x490d58) at connection.c:85
#13 0x4e83c in ap_process_connection (c=0x490d58, csd=0x490c68) at 
connection.c:211
#14 0x35904 in process_socket (p=0x490c30, sock=0x490c68, my_child_num=0, 
my_thread_num=18, bucket_alloc=0x493940)
    at worker.c:632
#15 0x36448 in worker_thread (thd=0xbbe38, dummy=0x14bcb8) at worker.c:946
#16 0xff0d4de0 in dummy_worker (opaque=0xbbe38) at thread.c:127

From bje at apnic.net  Tue Feb 10 09:15:39 2004
From: bje at apnic.net (Byron Ellacott)
Date: Mon Feb  9 19:13:03 2004
Subject: [mod_python] Big Issue w/ sys.path
In-Reply-To: <4026D2EE.5090009@securia.com>
References: <4026813F.9070504@securia.com>
	<4026D2EE.5090009@securia.com>
Message-ID: <1076368539.16141.2.camel@ping.apnic.net>

On Mon, 2004-02-09 at 10:23, jalil wrote:
> It is not a clean solution but works for now. If there is a better way 
> to do this  (without using virtual hosts or a sub-interpreter), please 
> let me know.

Is there a reason multiple interpreters wouldn't work for you?

<Directory /dev/app>
  PythonInterpreter dev
  ...
</Directory>

<Directory /test/app>
  PythonInterpreter test
  ...
</Directory>

The two apps would then run in completely separate instances of the
Python interpreter, and have no chance to mess with each others' data. 
I'd recommend doing this regardless of a workaround for your import
problems.

-- 
bje
From rfelder at globaltecsolutions.com  Mon Feb  9 17:21:58 2004
From: rfelder at globaltecsolutions.com (Ryan Felder)
Date: Mon Feb  9 19:17:19 2004
Subject: [mod_python] Mod_Python and win32com
Message-ID: <BFELILJNDOILCFMKOHDBIEJKCBAA.rfelder@globaltecsolutions.com>

Sorry for not including version information.

Apache/2.0.43 (Win32) mod_ssl/2.0.43 OpenSSL/0.9.6h mod_python/3.0.4
Python/2.3.3

I commented out the lines of my httpd.conf that were set by default, by
swamp,
to import PHP, due to the fact that it is not installed, and was generating
many
error messages.

-Ryan

Wizetrade?, 4X Made Easy?, Options Made Easy?, Wizefinder?, OptionHunter?,
Wizefeed?, Optionsfeed? and 4Xfeed? are trademarks and subsidiaries of
GlobalTec Solutions, LLP?.  Wizetrade?, 4X Made Easy?, Options Made Easy?,
Wizefinder? and OptionsHunter?, and any related products, are analytical
tools only and are not intended to replace individual research or licensed
investment advice. Unique experiences and past performances do not guarantee
future results!  Testimonials are non-representative of all clients; certain
accounts may have worse performance than that indicated. Trading stocks,
options and spot currencies involves substantial risk; and there is always
the potential for loss. Your trading results may vary. No representation is
being made that any software or training will guarantee profits or not
result in losses from trading. Neither the software programs, any
explanation or demonstration of their operation, nor any training held in
conjunction therewith, including, without limitation, through online chat,
in connection with our radio programs, during our in-person seminars or
otherwise, should be construed as providing a trade recommendation or the
giving of investment advice.  The purchase, sale or advice regarding a
security can only be performed by a licensed Broker/Dealer and/or Registered
Investment Advisor. Neither GlobalTec Solutions, LLP? nor its officers,
employees, owners, agents, principals or affiliates is a registered
Broker/Dealer or Investment Advisor in any State or Federally. All
purchasers of software or other products owned by GlobalTec Solutions, LLP?
are encouraged to consult with a licensed representative of their choice
regarding any particular investment or investment strategy. Prices and
offers are subject to change without notice. All shipping & handling charges
are non-refundable. Texas residents add 8.25% sales tax. International
customers are responsible for all tariffs, duties and fees.




From bje at apnic.net  Tue Feb 10 09:22:14 2004
From: bje at apnic.net (Byron Ellacott)
Date: Mon Feb  9 19:19:35 2004
Subject: [mod_python]  DocumentRoot / security / directory structure
	questions
In-Reply-To: <402714FB.1040207@sponsera.com>
References: <402714FB.1040207@sponsera.com>
Message-ID: <1076368934.16136.10.camel@ping.apnic.net>

On Mon, 2004-02-09 at 15:04, David Geller wrote:
> With mod_python, is it possible to keep your python files outside the 
> DocumentRoot?  I guess it is, with all python files other than the one 
> containing the handler,  but can you put the handler file outside the 
> document root as well?

<Directory /my/app>
  PythonInterpreter myapp
  SetHandler python-program
  PythonHandler myhandler
</Directory>

As long as myhandler is somewhere in sys.path, this will work just
fine.  Note that you can modify sys.path via the PythonPath directive:

  PythonPath "sys.path.append('/opt/my/app/lib')"

As long as your program doesn't further mess with sys.path, this is also
quite efficient, since mod_python doesn't redo PythonPath directives
it's already done.

> 2. Related question - (I think this was answered, but not quite 
> sure...). If you want *all* your requests to come through your python 
> handler, and you are *not* serving *directly* html or img, how do you do 
> this? AND, you basically want to obfiscate the fact you are using 
> python, and want only very generic-looking  file names to appear in the 
> "url" bar (top browser bar).  Of course, your python might itself 
> generate html that will contain references to images, javascript etc - 
> and for these resources, it is fine, for them to be inside your document 
> root

The above <Directory ...> directives (or the same directives in a
.htaccess) will pass all requests through myhandler.handler().  You can
fetch http://your.site/my/app/images/modpy_logo.png and it will call
your handler, even though those files don't exist.

The only gotcha is that DirectoryIndex won't work as expected.  Because
it tests for the existence of various files directly, it won't redirect
to index.html unless that file exists on disk.  I haven't looked into
solving the problem, but I'm sure you can. :)

> 3. And another related question: I have seen apps (e.g., written in PHP) 
> that always have the same (original, simple) url appear in the top URL 
> bar, no matter which URL's are generated by the underlying program (eg., 
> during POST requests). How is this done?

<form method="POST">
<input type="hidden" name="target" value="custdetails">
...
</form>

You can then check for "target" to know what you're supposed to do. 
Whether this is a useful or good practice is another matter, though. :)

-- 
bje
From bje at apnic.net  Tue Feb 10 09:28:42 2004
From: bje at apnic.net (Byron Ellacott)
Date: Mon Feb  9 19:26:02 2004
Subject: [mod_python] serving files by modpython handler
In-Reply-To: <20040209120640.5686c3f3.kamil@nvstudio.pl>
References: <20040209120640.5686c3f3.kamil@nvstudio.pl>
Message-ID: <1076369322.16141.13.camel@ping.apnic.net>

On Mon, 2004-02-09 at 21:06, Kamil Niechajewicz wrote:
> - Second way is making some dir outside, that will not
> 	be mapped to my handler, but I don't know whether it
> 	will work, because my _whole_ site is handled by
> 	mod_python module. So when I have "/ and below" 
> 	handled by modpython how can I have "/img" handled
> 	by normal apache handlers that will just send requested
> 	file?

<Files *.gif>
  SetHandler default
</Files>

Or

<Directory /img>
  SetHandler default
</Directory>

-- 
bje
From grisha at modpython.org  Mon Feb  9 20:13:26 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Feb  9 21:08:36 2004
Subject: [mod_python]  core dumping in worker MPM - can anyone help with
 these stack traces?
In-Reply-To: <OF1108EF83.1BFBC446-ON85256E35.007A56C8-85256E35.007B393F@EU.novartis.net>
References: <OF1108EF83.1BFBC446-ON85256E35.007A56C8-85256E35.007B393F@EU.novartis.net>
Message-ID: <20040209201251.H74619@onyx.ispol.com>


This may be a dumb question - but do you know for certain that the oracle
driver you're using is thread-safe?

Grisha

On Mon, 9 Feb 2004 perry.tew@cibavision.novartis.com wrote:

> Hey Everyone,
>    Well, as promised, I'm attempting to troubleshoot my problems with the
> worker MPM crashes I'm experiencing.  I rebuilt everything with the -g
> CFLAG and when I examine the core file using gdb I receive the following
> stack traces (I did it three times to see if it reproduced).  btw. I'm
> using mod_python-3.1.1b (not using the latest 'cause my flex is out of
> date) and apache 2.0.48.
>
> I can provide additional information, but the actual code will be
> difficult to set up since it's an Authen handler going against an Oracle
> database using DCOracle2.
>
> If anyone can provide a path I should go down, I would appreciate it.  I
> don't know the Apache API, and the only line of code that looks to be
> mod_python-ish is
> #4  0xfdc2e9b0 in python_merge_config (p=0x67eb68, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
>
> which is this line of code from the source (mod_python.c
> python_merge_config):
>     apr_table_overlap(merged_conf->options, nc->options,
> APR_OVERLAP_TABLES_SET);
>
> Again, this runs without issue using the prefork model.
>
> Thanks!
> Perry Tew
>
>
> (gdb) where
> #0  0xfee4efec in strcasecmp () from /usr/lib/libc.so.1
> #1  0xff0ccdd4 in table_mergesort (pool=0xa1670, values=0x5a4420, n=12) at
> apr_tables.c:1013
> #2  0xff0ccfb4 in apr_table_compress (t=0x6804b0, flags=0) at
> apr_tables.c:1125
> #3  0xff0cd2dc in apr_table_overlap (a=0x6804b0, b=0xef448, flags=0) at
> apr_tables.c:1244
> #4  0xfdc2e9b0 in python_merge_config (p=0x67eb68, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
> #5  0x3bc10 in ap_merge_per_dir_configs (p=0x67eb68, base=0xd1ab8,
> new_conf=0x6800f8) at config.c:278
> #6  0x668b0 in ap_directory_walk (r=0x67eba0) at request.c:1177
> #7  0x60118 in core_map_to_storage (r=0x67eba0) at core.c:3367
> #8  0x6384c in ap_run_map_to_storage (r=0x67eba0) at request.c:110
> #9  0x64960 in ap_process_request_internal (r=0x67eba0) at request.c:191
> #10 0x337d0 in ap_process_request (r=0x67eba0) at http_request.c:286
> #11 0x2ae2c in ap_process_http_connection (c=0x3c5aa8) at http_core.c:293
> #12 0x4e29c in ap_run_process_connection (c=0x3c5aa8) at connection.c:85
> #13 0x4e83c in ap_process_connection (c=0x3c5aa8, csd=0x3c59b8) at
> connection.c:211
> #14 0x35904 in process_socket (p=0x3c5980, sock=0x3c59b8, my_child_num=0,
> my_thread_num=8, bucket_alloc=0x3cf9a8)
>     at worker.c:632
> #15 0x36448 in worker_thread (thd=0xbbcf8, dummy=0x14bcb8) at worker.c:946
> #16 0xff0d4de0 in dummy_worker (opaque=0xbbcf8) at thread.c:127
>
>
>
>
> (gdb) where
> #0  0xfee4efd4 in strcasecmp () from /usr/lib/libc.so.1
> #1  0xfee4efcc in strcasecmp () from /usr/lib/libc.so.1
> #2  0xff0ccfb4 in apr_table_compress (t=0x4b64c0, flags=0) at
> apr_tables.c:1125
> #3  0xff0cd2dc in apr_table_overlap (a=0x4b64c0, b=0xef448, flags=0) at
> apr_tables.c:1244
> #4  0xfdc2e9b0 in python_merge_config (p=0x4b4b80, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
> #5  0x3bc10 in ap_merge_per_dir_configs (p=0x4b4b80, base=0xd1ab8,
> new_conf=0x4b6108) at config.c:278
> #6  0x668b0 in ap_directory_walk (r=0x4b4bb8) at request.c:1177
> #7  0x60118 in core_map_to_storage (r=0x4b4bb8) at core.c:3367
> #8  0x6384c in ap_run_map_to_storage (r=0x4b4bb8) at request.c:110
> #9  0x64960 in ap_process_request_internal (r=0x4b4bb8) at request.c:191
> #10 0x337d0 in ap_process_request (r=0x4b4bb8) at http_request.c:286
> #11 0x2ae2c in ap_process_http_connection (c=0x4b0af8) at http_core.c:293
> #12 0x4e29c in ap_run_process_connection (c=0x4b0af8) at connection.c:85
> #13 0x4e83c in ap_process_connection (c=0x4b0af8, csd=0x4b0a08) at
> connection.c:211
> #14 0x35904 in process_socket (p=0x4b09d0, sock=0x4b0a08, my_child_num=0,
> my_thread_num=14, bucket_alloc=0x4b2ae0)
>     at worker.c:632
> #15 0x36448 in worker_thread (thd=0xbbdb8, dummy=0x146c58) at worker.c:946
> #16 0xff0d4de0 in dummy_worker (opaque=0xbbdb8) at thread.c:127
>
>
>
>
> (gdb) where
> #0  0xfee4efd4 in strcasecmp () from /usr/lib/libc.so.1
> #1  0xfee4efcc in strcasecmp () from /usr/lib/libc.so.1
> #2  0xff0ccfb4 in apr_table_compress (t=0x497290, flags=0) at
> apr_tables.c:1125
> #3  0xff0cd2dc in apr_table_overlap (a=0x497290, b=0xef448, flags=0) at
> apr_tables.c:1244
> #4  0xfdc2e9b0 in python_merge_config (p=0x495948, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
> #5  0x3bc10 in ap_merge_per_dir_configs (p=0x495948, base=0xd1ab8,
> new_conf=0x496ed8) at config.c:278
> #6  0x668b0 in ap_directory_walk (r=0x495980) at request.c:1177
> #7  0x60118 in core_map_to_storage (r=0x495980) at core.c:3367
> #8  0x6384c in ap_run_map_to_storage (r=0x495980) at request.c:110
> #9  0x64960 in ap_process_request_internal (r=0x495980) at request.c:191
> #10 0x337d0 in ap_process_request (r=0x495980) at http_request.c:286
> #11 0x2ae2c in ap_process_http_connection (c=0x490d58) at http_core.c:293
> #12 0x4e29c in ap_run_process_connection (c=0x490d58) at connection.c:85
> #13 0x4e83c in ap_process_connection (c=0x490d58, csd=0x490c68) at
> connection.c:211
> #14 0x35904 in process_socket (p=0x490c30, sock=0x490c68, my_child_num=0,
> my_thread_num=18, bucket_alloc=0x493940)
>     at worker.c:632
> #15 0x36448 in worker_thread (thd=0xbbe38, dummy=0x14bcb8) at worker.c:946
> #16 0xff0d4de0 in dummy_worker (opaque=0xbbe38) at thread.c:127
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From perry.tew at cibavision.novartis.com  Tue Feb 10 00:34:47 2004
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Tue Feb 10 01:29:58 2004
Subject: [mod_python]  core dumping in worker MPM - can anyone help with
	these stack traces?
Message-ID: <OF0B4876D7.F7ACDA78-ON85256E36.000AC882-85256E36.001E84A4@EU.novartis.net>

Grisha,
   No.  It's not a dumb question at all.  It's a question I've been 
pondering alot.   It's the DCOracle2 library used by zope.  It reports a 
threadsafety of 3.   Additionally, I'm using the jonpy class dbpool which 
implements a Queue to provide additionally threadsafety.   Now, whether 
both of those libraries are actually threadsafe I can't tell.  I've got 4 
possible points of failure: apache, mod_python, jonpy, oracle.

<time lapse>

I got to thinking about it and started to try and remove the complexity.  
So, I've stripped down my setup to a bare minimum.   I've found that 
there's another module that's conflicting with mod_python (never seen that 
before, eh?) and causing the segfaults.  When I have all extra mods 
removed, it doesn't core  Note, they're all standard mods that ship with 
apache with the exception of mod_macro.  However, it hangs at times and 
flies at other times.  Here's the results of running ab (1000 hits 
simulating 10 concurrent users).  If I remove mod_python, there is no 
performance issue.

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   1.7      0      50
Processing:     1  320 2986.9      9   30015
Waiting:       -1  257 2674.6      7   30011
Total:          1  320 2986.9      9   30015

Percentage of the requests served within a certain time (ms)
  50%      9
  66%     10
  75%     11
  80%     12
  90%     15
  95%     25
  98%    961
  99%  30000
 100%  30015 (longest request)


So, I will continue to troubleshoot this issue.  I'm going to recompile 
everything and profile it and see where the hanging is going on.  I'll 
also find out which module is causing mod_python to crash.  At any rate, 
thanks for your response.

Thanks,
Perry Tew




Here's my new setup:

Only 1 python class:
#================================================
from mod_python import apache

i = 0

def accesshandler(req):

        global i
        apache.log_error( "Request #%d" % i )
        i = i + 1

        return apache.OK
#================================================


I've stripped down my httpd.conf as small as possible:









This may be a dumb question - but do you know for certain that the oracle
driver you're using is thread-safe?

Grisha

On Mon, 9 Feb 2004 perry.tew@cibavision.novartis.com wrote:

> Hey Everyone,
>    Well, as promised, I'm attempting to troubleshoot my problems with 
the
> worker MPM crashes I'm experiencing.  I rebuilt everything with the -g
> CFLAG and when I examine the core file using gdb I receive the following
> stack traces (I did it three times to see if it reproduced).  btw. I'm
> using mod_python-3.1.1b (not using the latest 'cause my flex is out of
> date) and apache 2.0.48.
>
> I can provide additional information, but the actual code will be
> difficult to set up since it's an Authen handler going against an Oracle
> database using DCOracle2.
>
> If anyone can provide a path I should go down, I would appreciate it.  I
> don't know the Apache API, and the only line of code that looks to be
> mod_python-ish is
> #4  0xfdc2e9b0 in python_merge_config (p=0x67eb68, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
>
> which is this line of code from the source (mod_python.c
> python_merge_config):
>     apr_table_overlap(merged_conf->options, nc->options,
> APR_OVERLAP_TABLES_SET);
>
> Again, this runs without issue using the prefork model.
>
> Thanks!
> Perry Tew
>
>
> (gdb) where
> #0  0xfee4efec in strcasecmp () from /usr/lib/libc.so.1
> #1  0xff0ccdd4 in table_mergesort (pool=0xa1670, values=0x5a4420, n=12) 
at
> apr_tables.c:1013
> #2  0xff0ccfb4 in apr_table_compress (t=0x6804b0, flags=0) at
> apr_tables.c:1125
> #3  0xff0cd2dc in apr_table_overlap (a=0x6804b0, b=0xef448, flags=0) at
> apr_tables.c:1244
> #4  0xfdc2e9b0 in python_merge_config (p=0x67eb68, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
> #5  0x3bc10 in ap_merge_per_dir_configs (p=0x67eb68, base=0xd1ab8,
> new_conf=0x6800f8) at config.c:278
> #6  0x668b0 in ap_directory_walk (r=0x67eba0) at request.c:1177
> #7  0x60118 in core_map_to_storage (r=0x67eba0) at core.c:3367
> #8  0x6384c in ap_run_map_to_storage (r=0x67eba0) at request.c:110
> #9  0x64960 in ap_process_request_internal (r=0x67eba0) at request.c:191
> #10 0x337d0 in ap_process_request (r=0x67eba0) at http_request.c:286
> #11 0x2ae2c in ap_process_http_connection (c=0x3c5aa8) at 
http_core.c:293
> #12 0x4e29c in ap_run_process_connection (c=0x3c5aa8) at connection.c:85
> #13 0x4e83c in ap_process_connection (c=0x3c5aa8, csd=0x3c59b8) at
> connection.c:211
> #14 0x35904 in process_socket (p=0x3c5980, sock=0x3c59b8, 
my_child_num=0,
> my_thread_num=8, bucket_alloc=0x3cf9a8)
>     at worker.c:632
> #15 0x36448 in worker_thread (thd=0xbbcf8, dummy=0x14bcb8) at 
worker.c:946
> #16 0xff0d4de0 in dummy_worker (opaque=0xbbcf8) at thread.c:127
>
>
>
>
> (gdb) where
> #0  0xfee4efd4 in strcasecmp () from /usr/lib/libc.so.1
> #1  0xfee4efcc in strcasecmp () from /usr/lib/libc.so.1
> #2  0xff0ccfb4 in apr_table_compress (t=0x4b64c0, flags=0) at
> apr_tables.c:1125
> #3  0xff0cd2dc in apr_table_overlap (a=0x4b64c0, b=0xef448, flags=0) at
> apr_tables.c:1244
> #4  0xfdc2e9b0 in python_merge_config (p=0x4b4b80, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
> #5  0x3bc10 in ap_merge_per_dir_configs (p=0x4b4b80, base=0xd1ab8,
> new_conf=0x4b6108) at config.c:278
> #6  0x668b0 in ap_directory_walk (r=0x4b4bb8) at request.c:1177
> #7  0x60118 in core_map_to_storage (r=0x4b4bb8) at core.c:3367
> #8  0x6384c in ap_run_map_to_storage (r=0x4b4bb8) at request.c:110
> #9  0x64960 in ap_process_request_internal (r=0x4b4bb8) at request.c:191
> #10 0x337d0 in ap_process_request (r=0x4b4bb8) at http_request.c:286
> #11 0x2ae2c in ap_process_http_connection (c=0x4b0af8) at 
http_core.c:293
> #12 0x4e29c in ap_run_process_connection (c=0x4b0af8) at connection.c:85
> #13 0x4e83c in ap_process_connection (c=0x4b0af8, csd=0x4b0a08) at
> connection.c:211
> #14 0x35904 in process_socket (p=0x4b09d0, sock=0x4b0a08, 
my_child_num=0,
> my_thread_num=14, bucket_alloc=0x4b2ae0)
>     at worker.c:632
> #15 0x36448 in worker_thread (thd=0xbbdb8, dummy=0x146c58) at 
worker.c:946
> #16 0xff0d4de0 in dummy_worker (opaque=0xbbdb8) at thread.c:127
>
>
>
>
> (gdb) where
> #0  0xfee4efd4 in strcasecmp () from /usr/lib/libc.so.1
> #1  0xfee4efcc in strcasecmp () from /usr/lib/libc.so.1
> #2  0xff0ccfb4 in apr_table_compress (t=0x497290, flags=0) at
> apr_tables.c:1125
> #3  0xff0cd2dc in apr_table_overlap (a=0x497290, b=0xef448, flags=0) at
> apr_tables.c:1244
> #4  0xfdc2e9b0 in python_merge_config (p=0x495948, current_conf=0xdb520,
> new_conf=0xef2f8) at mod_python.c:653
> #5  0x3bc10 in ap_merge_per_dir_configs (p=0x495948, base=0xd1ab8,
> new_conf=0x496ed8) at config.c:278
> #6  0x668b0 in ap_directory_walk (r=0x495980) at request.c:1177
> #7  0x60118 in core_map_to_storage (r=0x495980) at core.c:3367
> #8  0x6384c in ap_run_map_to_storage (r=0x495980) at request.c:110
> #9  0x64960 in ap_process_request_internal (r=0x495980) at request.c:191
> #10 0x337d0 in ap_process_request (r=0x495980) at http_request.c:286
> #11 0x2ae2c in ap_process_http_connection (c=0x490d58) at 
http_core.c:293
> #12 0x4e29c in ap_run_process_connection (c=0x490d58) at connection.c:85
> #13 0x4e83c in ap_process_connection (c=0x490d58, csd=0x490c68) at
> connection.c:211
> #14 0x35904 in process_socket (p=0x490c30, sock=0x490c68, 
my_child_num=0,
> my_thread_num=18, bucket_alloc=0x493940)
>     at worker.c:632
> #15 0x36448 in worker_thread (thd=0xbbe38, dummy=0x14bcb8) at 
worker.c:946
> #16 0xff0d4de0 in dummy_worker (opaque=0xbbe38) at thread.c:127
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



From davidf at sjsoft.com  Tue Feb 10 09:04:24 2004
From: davidf at sjsoft.com (David Fraser)
Date: Tue Feb 10 03:00:39 2004
Subject: [mod_python] Mod_Python and win32com
In-Reply-To: <BFELILJNDOILCFMKOHDBMEJICBAA.rfelder@globaltecsolutions.com>
References: <BFELILJNDOILCFMKOHDBMEJICBAA.rfelder@globaltecsolutions.com>
Message-ID: <40288278.80302@sjsoft.com>

Ryan Felder wrote:

>Hi all, I'm pretty new to working with Mod_Python, and the project I am
>working on requires me to be able to poll for some data through COM.
>
>I am developing in windows 2000 professional, and will be running
>my code on windows apache 2.0 with mod python. More specifically,
>I am using the distribution of apache ssl and others named Swamp.
>
>The code works fine when I run it standalone, however, when I attempt
>to run it on my development site, the calls to the com object that work
>beautifully alone, simply fail to return data. As follows is a brief
>code sample which demonstrates this behaviour. This code functions
>properly from a command prompt or in the interpreter.
>
>def index():
>	import win32com.client
>	a=win32com.client.Dispatch('MyDataSource')
>	b=str(a.GetOrders(account_identifier,'',2,0))
>	return str(len(b))
>
>if __name__ == "__main__":
>	print index()
>
>When this code runs standalone, it will return a non-zero value,
>and when run from mod_python, it returns a zero value, due to
>the len() function measuring the length of the output of my data call.
>
>By way of typos, I have been able to produce exceptions in my testing
>browser, so this leads me to believe that it is not passing any exceptions.
>
>My research online has suggested that I try importing my modules through
>apache.import_module. This gives me a number of different issues where
>if I instantiate an instance of win32com, then try to address
>that.client.Dispatch,
>I recieve "module does not have 'client'", or similarly, if I try to
>instantiate
>an instance of win32com.client, I recieve "module does not have 'Dispatch'".
>
>I have also seen it suggested that I initialize the com properly, and
>manually,
>by
>	import sys
>	sys.coinit_flags = 0
>
>as well as
>
>	import pythoncom
>	pythoncom.CoInitializeEx(pythoncom.COINIT_MULTITHREADED)
>
>which I do before attemting to import win32com, but to no avail,
>in many, and in all permutations.
>
>I have tried every permutation of apache.import_module and import,
>that I can muster, and I am hitting a brick wall.
>
>It seems that there is a breakdown in communications between myself and the
>com objects when I try to import them. Any help that you all can offer me
>would be hugely appreciated!
>
>- Ryan
>  
>
This sounds wierd
We use win32com.client without any problems from within mod_python (also 
using similar versions to you, but Python 2.2).
Which version of win32all are you using? It may be interesting to try 
stepping into the win32com code and adding traces, to see whether the 
COM call is actually made and nothing is returned, or whether it never 
gets there and isn't producing an error though it should be.

David
From davidf at sjsoft.com  Tue Feb 10 10:02:32 2004
From: davidf at sjsoft.com (David Fraser)
Date: Tue Feb 10 03:57:55 2004
Subject: [mod_python] Python Data
	Objects&In-Reply-To=40254C75.9090600@securia.com
In-Reply-To: <1076444477.40293d3dc2b97@webmail.renai-soft.com>
References: <200402081700.i18H06KR028034@slash.mediapulse.com>
	<1076357821.4027eabd4b183@webmail.renai-soft.com>
	<40274EF9.6090301@sjsoft.com>
	<1076444477.40293d3dc2b97@webmail.renai-soft.com>
Message-ID: <40289018.6020203@sjsoft.com>

Hi

The basic difference is that this code is just a Python wrapper around
ADO, where as pyado.sourceforge.net as a Python DB-API 2.0 compliant
driver for any database using PyADO.
So we don't have to have multiple versions of the driver to support
different databases. This has been used successfully with Access and
Oracle and SQL server.
Also the code will work for any Python system that has been set up to
use the DB-API interface. So it is more natural to the Python way of
doing things.
You may find that your speed problems require using some of the Python
win32 extensions to statically link the types:
run
python makepy.py "Microsoft ActiveX Data Objects 2.5 Library"
(but substitute the right version number)

David

Khurram wrote:

>Hi,
>
>Thats the interface to microsofts ActiveX Database Objects. adodb was first
>developed for php and it has drivers for almost any database. PHP version has
>also been developed in native code and is 80% faster. It works on unix,linux,
>windows etc. Similar is the python version, but it has support for only 4-5
>databases unlike the php-version. Please see examples on the adodb site for
>more help. If you use adodb you code can support many databases.
>
>Khurram Ijaz,
>Renaissance Software.
>http://www.renai-soft.com
>
>Quoting David Fraser <davidf@sjsoft.com>:
>
>  
>
>>Khurram wrote:
>>
>>    
>>
>>>Hi,
>>>
>>>Please check http://php.weblogs.com/adodb_python#download for python ado_db.
>>>      
>>>
>>Its
>>    
>>
>>>supports transactions. You can also use transactions by native db calls
>>>      
>>>
>>such
>>    
>>
>>>BEGIN TRANSACTION etc.
>>>
>>>Khurram Ijaz,
>>>http://www.renai-soft.com
>>>
>>> 
>>>
>>>      
>>>
>>Interesting. We also have a Python DB-API driver for ADO, at 
>>pyado.sourceforge.net
>>I wonder what the similarities/differences are
>>
>>David
>>    
>>


From perry.tew at cibavision.novartis.com  Tue Feb 10 08:49:50 2004
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Tue Feb 10 09:45:01 2004
Subject: [mod_python] Python Data
	Objects&In-Reply-To=40254C75.9090600@securia.com
Message-ID: <OFE95B028D.B1415DFB-ON85256E36.004BDBA1-85256E36.004BF94B@EU.novartis.net>

Hey.  What's the thread safety on this library?
-Perry




Hi

The basic difference is that this code is just a Python wrapper around
ADO, where as pyado.sourceforge.net as a Python DB-API 2.0 compliant
driver for any database using PyADO.
So we don't have to have multiple versions of the driver to support
different databases. This has been used successfully with Access and
Oracle and SQL server.
Also the code will work for any Python system that has been set up to
use the DB-API interface. So it is more natural to the Python way of
doing things.
You may find that your speed problems require using some of the Python
win32 extensions to statically link the types:
run
python makepy.py "Microsoft ActiveX Data Objects 2.5 Library"
(but substitute the right version number)

David

Khurram wrote:

>Hi,
>
>Thats the interface to microsofts ActiveX Database Objects. adodb was 
first
>developed for php and it has drivers for almost any database. PHP version 
has
>also been developed in native code and is 80% faster. It works on 
unix,linux,
>windows etc. Similar is the python version, but it has support for only 
4-5
>databases unlike the php-version. Please see examples on the adodb site 
for
>more help. If you use adodb you code can support many databases.
>
>Khurram Ijaz,
>Renaissance Software.
>http://www.renai-soft.com
>
>Quoting David Fraser <davidf@sjsoft.com>:
>
> 
>
>>Khurram wrote:
>>
>> 
>>
>>>Hi,
>>>
>>>Please check http://php.weblogs.com/adodb_python#download for python ado_db.
>>> 
>>>
>>Its
>> 
>>
>>>supports transactions. You can also use transactions by native db calls
>>> 
>>>
>>such
>> 
>>
>>>BEGIN TRANSACTION etc.
>>>
>>>Khurram Ijaz,
>>>http://www.renai-soft.com
>>>
>>> 
>>>
>>> 
>>>
>>Interesting. We also have a Python DB-API driver for ADO, at 
>>pyado.sourceforge.net
>>I wonder what the similarities/differences are
>>
>>David
>> 
>>


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From rfelder at globaltecsolutions.com  Tue Feb 10 09:41:40 2004
From: rfelder at globaltecsolutions.com (Ryan Felder)
Date: Tue Feb 10 11:36:58 2004
Subject: [mod_python] Mod_Python and win32com
In-Reply-To: <40288278.80302@sjsoft.com>
Message-ID: <BFELILJNDOILCFMKOHDBMEJMCBAA.rfelder@globaltecsolutions.com>


Sorry for not including my version numbers.
Apache/2.0.43 (Win32) mod_ssl/2.0.43 OpenSSL/0.9.6h mod_python/3.0.4
Python/2.3.3

I am using the most recent version of python from python.org, and the
win32all
that is included with it. My version of apache is from the swamp
distribution
of apache for windows.

I have done another example to verify that this is not an issue with the
third party dll I am calling. The example code is very similar to my
previous example code.

This code properly opens up excel from a command prompt, but when run
from under mod_python, it seems to ignore the com calls entirely.

This code will return "aha" to my web browser, as expected.

def index():
	import win32com.client
	a=win32com.client.Dispatch('Excel.Application')
	a.Visible = 1
	a.Workbooks.Add()
	a.ActiveSheet.Cells(1,1).Value = 'aha'
	return "aha"

if __name__ == "__main__":
	print index()

Thanks again.

- Ryan

-----Original Message-----
From: David Fraser [mailto:davidf@sjsoft.com]
Sent: Tuesday, February 10, 2004 1:04 AM
To: Ryan Felder
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Mod_Python and win32com

This sounds wierd
We use win32com.client without any problems from within mod_python (also
using similar versions to you, but Python 2.2).
Which version of win32all are you using? It may be interesting to try
stepping into the win32com code and adding traces, to see whether the
COM call is actually made and nothing is returned, or whether it never
gets there and isn't producing an error though it should be.

David

Ryan Felder wrote:

>Hi all, I'm pretty new to working with Mod_Python, and the project I am
>working on requires me to be able to poll for some data through COM.
>
>I am developing in windows 2000 professional, and will be running
>my code on windows apache 2.0 with mod python. More specifically,
>I am using the distribution of apache ssl and others named Swamp.
>
>The code works fine when I run it standalone, however, when I attempt
>to run it on my development site, the calls to the com object that work
>beautifully alone, simply fail to return data. As follows is a brief
>code sample which demonstrates this behaviour. This code functions
>properly from a command prompt or in the interpreter.
>
>def index():
>	import win32com.client
>	a=win32com.client.Dispatch('MyDataSource')
>	b=str(a.GetOrders(account_identifier,'',2,0))
>	return str(len(b))
>
>if __name__ == "__main__":
>	print index()
>
>When this code runs standalone, it will return a non-zero value,
>and when run from mod_python, it returns a zero value, due to
>the len() function measuring the length of the output of my data call.
>
>By way of typos, I have been able to produce exceptions in my testing
>browser, so this leads me to believe that it is not passing any exceptions.
>
>My research online has suggested that I try importing my modules through
>apache.import_module. This gives me a number of different issues where
>if I instantiate an instance of win32com, then try to address
>that.client.Dispatch,
>I recieve "module does not have 'client'", or similarly, if I try to
>instantiate
>an instance of win32com.client, I recieve "module does not have
'Dispatch'".
>
>I have also seen it suggested that I initialize the com properly, and
>manually,
>by
>	import sys
>	sys.coinit_flags = 0
>
>as well as
>
>	import pythoncom
>	pythoncom.CoInitializeEx(pythoncom.COINIT_MULTITHREADED)
>
>which I do before attemting to import win32com, but to no avail,
>in many, and in all permutations.
>
>I have tried every permutation of apache.import_module and import,
>that I can muster, and I am hitting a brick wall.
>
>It seems that there is a breakdown in communications between myself and the
>com objects when I try to import them. Any help that you all can offer me
>would be hugely appreciated!
>
>- Ryan
>
>


From neel at mediapulse.com  Tue Feb 10 11:16:49 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Tue Feb 10 12:12:01 2004
Subject: [mod_python] Wrapping a CGI script
Message-ID: <000b01c3ef84$9fc4eb30$0200a8c0@CLAPTON>

My emails are going into an abyss atm, so if this double posts I
apologize...

Okay, so lets say I have a collection of sites that share one forum app
(in my case iKonboard).  Each site has a different design template
generated by my application based on the site name from the client.
iKonboard is perl, my app python.  I don't want to write yet another bbs
and actually iKonbaord has several features in use so the time it would
take to recreate is too much.  It is however cgi, which got me
thinking...

What would be the best approach to wrapping a cgi script?  I'm thinking
the basic flow would need to be:

python handler reads request from client
python handler sets up env space
python handler exec's cgi script
cgi scrpit acts as normal
python handler catches stdout
python handler parses and updates headers
python handler call app to skin board
result sent to client.

I'm thinking this will work, but I'm not quite sure how to setup the CGI
env space (really not a mod_python issue, more a python issue, but
mod_python may offer some help here).  There also may be another
approach I haven't thought of, besides Apache 2 handler chains (since I
don't have access to apache 2 for this site).

Thoughts?
Mike

From rfelder at globaltecsolutions.com  Tue Feb 10 10:20:19 2004
From: rfelder at globaltecsolutions.com (Ryan Felder)
Date: Tue Feb 10 12:15:35 2004
Subject: [mod_python] Mod_Python and win32com
In-Reply-To: <40288278.80302@sjsoft.com>
Message-ID: <BFELILJNDOILCFMKOHDBKEJNCBAA.rfelder@globaltecsolutions.com>

Sorry again... I have the most recent win32all from sourceforge for python
2.3
and the win32com that is included with THAT.

>I am using the most recent version of python from python.org, and the
win32all
>that is included with it. My version of apache is from the swamp
distribution
>of apache for windows.

- Ryan


From davekennedy at alescere.com  Tue Feb 10 15:04:15 2004
From: davekennedy at alescere.com (davekennedy@alescere.com)
Date: Tue Feb 10 17:04:07 2004
Subject: [mod_python] transhandler difficulties with apache
Message-ID: <61450.12.100.137.66.1076443455.squirrel@www.alescere.net>

I am trying to accept uri's that include slashes.  What I've tried to do is:

added to httpd.conf:
---
PythonTransHandler /(absolutepath)/THandler.py

---


Here is THandler.py:
---
from mod_python import apache
import string

def transhandler(req):
  req.filename = "/(absolutepath)TC.py
  return apache.OK
---



I've built a request handler TC.py that works.
My error log reports:

---
[Tue Feb 10 15:58:26 2004] [error] [client 12.100.137.66]
PythonTransHandler /(abspath)/THandler.py: ImportError: No module named
/(abspath)/THandler
---


Any ideas?

Thanks much,



-- 
David Kennedy
Program Manager, Alescere LLC.
630.968.8950 x311

Find us on the web at http://www.alescere.com


From davidf at sjsoft.com  Wed Feb 11 08:57:33 2004
From: davidf at sjsoft.com (David Fraser)
Date: Wed Feb 11 02:52:54 2004
Subject: [mod_python] Python Data
	Objects&In-Reply-To=40254C75.9090600@securia.com
In-Reply-To: <OFE95B028D.B1415DFB-ON85256E36.004BDBA1-85256E36.004BF94B@EU.novartis.net>
References: <OFE95B028D.B1415DFB-ON85256E36.004BDBA1-85256E36.004BF94B@EU.novartis.net>
Message-ID: <4029D25D.7000903@sjsoft.com>

perry.tew@cibavision.novartis.com wrote:

>Hey.  What's the thread safety on this library?
>-Perry
>  
>
It's basically threadsafe assuming the underlying OLE DB drivers etc you 
use are threadsafe.
I think you would have problems sharing the same cursor between threads, 
but the same connection can be used on multiple threads to create 
different cursors

David

>
>
>
>Hi
>
>The basic difference is that this code is just a Python wrapper around
>ADO, where as pyado.sourceforge.net as a Python DB-API 2.0 compliant
>driver for any database using PyADO.
>So we don't have to have multiple versions of the driver to support
>different databases. This has been used successfully with Access and
>Oracle and SQL server.
>Also the code will work for any Python system that has been set up to
>use the DB-API interface. So it is more natural to the Python way of
>doing things.
>You may find that your speed problems require using some of the Python
>win32 extensions to statically link the types:
>run
>python makepy.py "Microsoft ActiveX Data Objects 2.5 Library"
>(but substitute the right version number)
>
>David
>
>Khurram wrote:
>
>  
>
>>Hi,
>>
>>Thats the interface to microsofts ActiveX Database Objects. adodb was 
>>    
>>
>first
>  
>
>>developed for php and it has drivers for almost any database. PHP version 
>>    
>>
>has
>  
>
>>also been developed in native code and is 80% faster. It works on 
>>    
>>
>unix,linux,
>  
>
>>windows etc. Similar is the python version, but it has support for only 
>>    
>>
>4-5
>  
>
>>databases unlike the php-version. Please see examples on the adodb site 
>>    
>>
>for
>  
>
>>more help. If you use adodb you code can support many databases.
>>
>>Khurram Ijaz,
>>Renaissance Software.
>>http://www.renai-soft.com
>>
>>Quoting David Fraser <davidf@sjsoft.com>:
>>
>>
>>
>>    
>>
>>>Khurram wrote:
>>>
>>>
>>>
>>>      
>>>
>>>>Hi,
>>>>
>>>>Please check http://php.weblogs.com/adodb_python#download for python ado_db.
>>>>
>>>>
>>>>        
>>>>
>>>Its
>>>
>>>
>>>      
>>>
>>>>supports transactions. You can also use transactions by native db calls
>>>>
>>>>
>>>>        
>>>>
>>>such
>>>
>>>
>>>      
>>>
>>>>BEGIN TRANSACTION etc.
>>>>
>>>>Khurram Ijaz,
>>>>http://www.renai-soft.com
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>        
>>>>
>>>Interesting. We also have a Python DB-API driver for ADO, at 
>>>pyado.sourceforge.net
>>>I wonder what the similarities/differences are
>>>
>>>David
>>>
>>>
>>>      
>>>
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>

From khurram at renai-soft.com  Wed Feb 11 17:47:36 2004
From: khurram at renai-soft.com (Khurram)
Date: Wed Feb 11 06:41:37 2004
Subject: [mod_python] Python Data
	Objects&In-Reply-To=40254C75.9090600@securia.com
In-Reply-To: <OFE95B028D.B1415DFB-ON85256E36.004BDBA1-85256E36.004BF94B@EU.novartis.net>
References: <OFE95B028D.B1415DFB-ON85256E36.004BDBA1-85256E36.004BF94B@EU.novartis.net>
Message-ID: <1076543256.402abf18ec3cc@webmail.renai-soft.com>

Hi,

Managing threads is upto you. I can tell you one thing about Microsoft's ado,
although it supports multiple dbs, but it cannot run on *nix systems.

Warm Regards,
Khurram Ijaz.
Quoting perry.tew@cibavision.novartis.com:

> Hey.  What's the thread safety on this library?
> -Perry
> 
> 
> 
> 
> Hi
> 
> The basic difference is that this code is just a Python wrapper around
> ADO, where as pyado.sourceforge.net as a Python DB-API 2.0 compliant
> driver for any database using PyADO.
> So we don't have to have multiple versions of the driver to support
> different databases. This has been used successfully with Access and
> Oracle and SQL server.
> Also the code will work for any Python system that has been set up to
> use the DB-API interface. So it is more natural to the Python way of
> doing things.
> You may find that your speed problems require using some of the Python
> win32 extensions to statically link the types:
> run
> python makepy.py "Microsoft ActiveX Data Objects 2.5 Library"
> (but substitute the right version number)
> 
> David
> 
> Khurram wrote:
> 
> >Hi,
> >
> >Thats the interface to microsofts ActiveX Database Objects. adodb was 
> first
> >developed for php and it has drivers for almost any database. PHP version 
> has
> >also been developed in native code and is 80% faster. It works on 
> unix,linux,
> >windows etc. Similar is the python version, but it has support for only 
> 4-5
> >databases unlike the php-version. Please see examples on the adodb site 
> for
> >more help. If you use adodb you code can support many databases.
> >
> >Khurram Ijaz,
> >Renaissance Software.
> >http://www.renai-soft.com
> >
> >Quoting David Fraser <davidf@sjsoft.com>:
> >
> > 
> >
> >>Khurram wrote:
> >>
> >> 
> >>
> >>>Hi,
> >>>
> >>>Please check http://php.weblogs.com/adodb_python#download for python
> ado_db.
> >>> 
> >>>
> >>Its
> >> 
> >>
> >>>supports transactions. You can also use transactions by native db calls
> >>> 
> >>>
> >>such
> >> 
> >>
> >>>BEGIN TRANSACTION etc.
> >>>
> >>>Khurram Ijaz,
> >>>http://www.renai-soft.com
> >>>
> >>> 
> >>>
> >>> 
> >>>
> >>Interesting. We also have a Python DB-API driver for ADO, at 
> >>pyado.sourceforge.net
> >>I wonder what the similarities/differences are
> >>
> >>David
> >> 
> >>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
> 


Khurram Ijaz,
Renaissance Software.
http://www.renai-soft.com

----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

From rfelder at globaltecsolutions.com  Wed Feb 11 13:28:34 2004
From: rfelder at globaltecsolutions.com (Ryan Felder)
Date: Wed Feb 11 15:23:52 2004
Subject: [mod_python] Mod_Python and win32com
In-Reply-To: <40288278.80302@sjsoft.com>
Message-ID: <BFELILJNDOILCFMKOHDBOEKDCBAA.rfelder@globaltecsolutions.com>

Okay, I've got my problem solved. The trouble was that the com
object I was polling for data was getting it from a running application.
Due to the default permissions enforced upon Apache by windows, this
behaviour
is restricted. The solution, I found, was to modify my Apache service's
properties, and set the "Allow service to interact with the desktop" check.



-----Original Message-----
From: David Fraser [mailto:davidf@sjsoft.com]
Sent: Tuesday, February 10, 2004 1:04 AM
To: Ryan Felder
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Mod_Python and win32com


Ryan Felder wrote:

>Hi all, I'm pretty new to working with Mod_Python, and the project I am
>working on requires me to be able to poll for some data through COM.
>
>I am developing in windows 2000 professional, and will be running
>my code on windows apache 2.0 with mod python. More specifically,
>I am using the distribution of apache ssl and others named Swamp.
>
>The code works fine when I run it standalone, however, when I attempt
>to run it on my development site, the calls to the com object that work
>beautifully alone, simply fail to return data. As follows is a brief
>code sample which demonstrates this behaviour. This code functions
>properly from a command prompt or in the interpreter.
>
>def index():
>	import win32com.client
>	a=win32com.client.Dispatch('MyDataSource')
>	b=str(a.GetOrders(account_identifier,'',2,0))
>	return str(len(b))
>
>if __name__ == "__main__":
>	print index()
>
>When this code runs standalone, it will return a non-zero value,
>and when run from mod_python, it returns a zero value, due to
>the len() function measuring the length of the output of my data call.
>
>By way of typos, I have been able to produce exceptions in my testing
>browser, so this leads me to believe that it is not passing any exceptions.
>
>My research online has suggested that I try importing my modules through
>apache.import_module. This gives me a number of different issues where
>if I instantiate an instance of win32com, then try to address
>that.client.Dispatch,
>I recieve "module does not have 'client'", or similarly, if I try to
>instantiate
>an instance of win32com.client, I recieve "module does not have
'Dispatch'".
>
>I have also seen it suggested that I initialize the com properly, and
>manually,
>by
>	import sys
>	sys.coinit_flags = 0
>
>as well as
>
>	import pythoncom
>	pythoncom.CoInitializeEx(pythoncom.COINIT_MULTITHREADED)
>
>which I do before attemting to import win32com, but to no avail,
>in many, and in all permutations.
>
>I have tried every permutation of apache.import_module and import,
>that I can muster, and I am hitting a brick wall.
>
>It seems that there is a breakdown in communications between myself and the
>com objects when I try to import them. Any help that you all can offer me
>would be hugely appreciated!
>
>- Ryan
>
>
This sounds wierd
We use win32com.client without any problems from within mod_python (also
using similar versions to you, but Python 2.2).
Which version of win32all are you using? It may be interesting to try
stepping into the win32com code and adding traces, to see whether the
COM call is actually made and nothing is returned, or whether it never
gets there and isn't producing an error though it should be.

David


From david at rebirthing.co.nz  Thu Feb 12 17:26:50 2004
From: david at rebirthing.co.nz (David McNab)
Date: Thu Feb 12 00:22:05 2004
Subject: [mod_python] question - Getting/Setting Cookies
Message-ID: <402B008A.8030307@rebirthing.co.nz>

Hi,

I've been a longtime user of Cookie.SimpleCookie, as an easy way of 
getting/setting cookies within Python CGI scripts.

A couple of days ago, I installed mod_python.

While I'm impressed with the performance gain mod_python is giving me 
with its CGI handler, I suspect things can run faster still if I write 
my own handler.

Only problem is - I can't see a trivial way to get a Cookie object from 
the 'req' object which gets passed to one's mod_python handler.

So my question is - is there any code for getting a Cookie object from 
the 'req' object?

It's not too hard to write one - just a bit of farting about. But I'd 
rather not 'reinvent a wheel' if someone else has already done this.

But if I have to write it myself, here's another question - how do I get 
the raw http headers from 'req' as a bulk string, which I can pass to 
Cookie.load()?

Thanks in advance for your help

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter

From davidf at sjsoft.com  Thu Feb 12 09:10:57 2004
From: davidf at sjsoft.com (David Fraser)
Date: Thu Feb 12 03:06:16 2004
Subject: [mod_python] Mod_Python and win32com
In-Reply-To: <BFELILJNDOILCFMKOHDBOEKDCBAA.rfelder@globaltecsolutions.com>
References: <BFELILJNDOILCFMKOHDBOEKDCBAA.rfelder@globaltecsolutions.com>
Message-ID: <402B2701.6050408@sjsoft.com>

Glad to hear that, I was really stumped as to what the problem could be...

David

Ryan Felder wrote:

>Okay, I've got my problem solved. The trouble was that the com
>object I was polling for data was getting it from a running application.
>Due to the default permissions enforced upon Apache by windows, this
>behaviour
>is restricted. The solution, I found, was to modify my Apache service's
>properties, and set the "Allow service to interact with the desktop" check.
>
>
>
>-----Original Message-----
>From: David Fraser [mailto:davidf@sjsoft.com]
>Sent: Tuesday, February 10, 2004 1:04 AM
>To: Ryan Felder
>Cc: mod_python@modpython.org
>Subject: Re: [mod_python] Mod_Python and win32com
>
>
>Ryan Felder wrote:
>
>  
>
>>Hi all, I'm pretty new to working with Mod_Python, and the project I am
>>working on requires me to be able to poll for some data through COM.
>>
>>I am developing in windows 2000 professional, and will be running
>>my code on windows apache 2.0 with mod python. More specifically,
>>I am using the distribution of apache ssl and others named Swamp.
>>
>>The code works fine when I run it standalone, however, when I attempt
>>to run it on my development site, the calls to the com object that work
>>beautifully alone, simply fail to return data. As follows is a brief
>>code sample which demonstrates this behaviour. This code functions
>>properly from a command prompt or in the interpreter.
>>
>>def index():
>>	import win32com.client
>>	a=win32com.client.Dispatch('MyDataSource')
>>	b=str(a.GetOrders(account_identifier,'',2,0))
>>	return str(len(b))
>>
>>if __name__ == "__main__":
>>	print index()
>>
>>When this code runs standalone, it will return a non-zero value,
>>and when run from mod_python, it returns a zero value, due to
>>the len() function measuring the length of the output of my data call.
>>
>>By way of typos, I have been able to produce exceptions in my testing
>>browser, so this leads me to believe that it is not passing any exceptions.
>>
>>My research online has suggested that I try importing my modules through
>>apache.import_module. This gives me a number of different issues where
>>if I instantiate an instance of win32com, then try to address
>>that.client.Dispatch,
>>I recieve "module does not have 'client'", or similarly, if I try to
>>instantiate
>>an instance of win32com.client, I recieve "module does not have
>>    
>>
>'Dispatch'".
>  
>
>>I have also seen it suggested that I initialize the com properly, and
>>manually,
>>by
>>	import sys
>>	sys.coinit_flags = 0
>>
>>as well as
>>
>>	import pythoncom
>>	pythoncom.CoInitializeEx(pythoncom.COINIT_MULTITHREADED)
>>
>>which I do before attemting to import win32com, but to no avail,
>>in many, and in all permutations.
>>
>>I have tried every permutation of apache.import_module and import,
>>that I can muster, and I am hitting a brick wall.
>>
>>It seems that there is a breakdown in communications between myself and the
>>com objects when I try to import them. Any help that you all can offer me
>>would be hugely appreciated!
>>
>>- Ryan
>>
>>
>>    
>>
>This sounds wierd
>We use win32com.client without any problems from within mod_python (also
>using similar versions to you, but Python 2.2).
>Which version of win32all are you using? It may be interesting to try
>stepping into the win32com code and adding traces, to see whether the
>COM call is actually made and nothing is returned, or whether it never
>gets there and isn't producing an error though it should be.
>
>David
>
>
>  
>

From david at rebirthing.co.nz  Thu Feb 12 22:03:16 2004
From: david at rebirthing.co.nz (David McNab)
Date: Thu Feb 12 04:58:41 2004
Subject: [mod_python] question - Getting/Setting Cookies
In-Reply-To: <402B0259.6000807@ljworld.com>
References: <402B008A.8030307@rebirthing.co.nz> <402B0259.6000807@ljworld.com>
Message-ID: <402B4154.5050903@rebirthing.co.nz>

Simon Willison wrote:

>> So my question is - is there any code for getting a Cookie object from 
>> the 'req' object?

> c = SimpleCookie()
> c.load(req.headers_in.get('cookie', ''))

There's no 'get' attribute in req.headers_in, at least not in mod_python 
v2.7.10 (Debian).

However, the following works:

     c = Cookie.SimpleCookie()
     if req.headers_in.has_key('cookie'):
         c.load(req.headers_in['cookie'])

Sorry for not asking before, but what's the cleanest way of putting the 
cookies into req.headers_out?

For me, the dictionary nature of req.headers_out is a stumbling block, 
because when I write the second and subsequent 'Set-Cookie' items, they 
overwrite the ones before.

Thanks again in advance for any help

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter

From bud at comune.grosseto.it  Thu Feb 12 10:11:42 2004
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Thu Feb 12 05:01:34 2004
Subject: [mod_python] question - Getting/Setting Cookies
In-Reply-To: <402B008A.8030307@rebirthing.co.nz>
Message-ID: <5.2.1.1.0.20040212095142.029b3950@mail.comune.grosseto.it>

Hi David,

I don't know much about mod-python--just planning to use it myself.  But 
maybe this is what you're looking for:

http://www.modpython.org/live/mod_python-3.1.2b/doc-html/pyapi-cookie.html

I came across this before and had a hell of a time finding it 
again.  Trouble seems to be that it is in the 3.1 beta version and the home 
page links to the stable manual (3.0).

cheers
-b

At 17.26 12/02/2004 +1300, you wrote:
>Hi,
>
>I've been a longtime user of Cookie.SimpleCookie, as an easy way of 
>getting/setting cookies within Python CGI scripts.
>
>A couple of days ago, I installed mod_python.
>
>While I'm impressed with the performance gain mod_python is giving me with 
>its CGI handler, I suspect things can run faster still if I write my own 
>handler.
>
>Only problem is - I can't see a trivial way to get a Cookie object from 
>the 'req' object which gets passed to one's mod_python handler.
>
>So my question is - is there any code for getting a Cookie object from the 
>'req' object?
>
>It's not too hard to write one - just a bit of farting about. But I'd 
>rather not 'reinvent a wheel' if someone else has already done this.
>
>But if I have to write it myself, here's another question - how do I get 
>the raw http headers from 'req' as a bulk string, which I can pass to 
>Cookie.load()?
>
>Thanks in advance for your help
>
>--
>
>Kind regards
>David
>
>--
>
>leave this line intact so your email gets through my junk mail filter
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python


-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 bud@comune.grosseto.it
Servizio Elaborazione Dati                    0564-488 577 (voice)
Comune di Grosseto                            0564- 21139 (fax)
Via Ginori, 43
58100 Grosseto

Collaborazione Open Source per la CIE http://www.comune.grosseto.it/cie/ 

From david at rebirthing.co.nz  Thu Feb 12 22:16:33 2004
From: david at rebirthing.co.nz (David McNab)
Date: Thu Feb 12 05:11:53 2004
Subject: [mod_python] question - Getting/Setting Cookies
In-Reply-To: <5.2.1.1.0.20040212095142.029b3950@mail.comune.grosseto.it>
References: <5.2.1.1.0.20040212095142.029b3950@mail.comune.grosseto.it>
Message-ID: <402B4471.1000309@rebirthing.co.nz>

Bud P. Bruegger wrote:
 > maybe this is what you're looking for:
 > 
http://www.modpython.org/live/mod_python-3.1.2b/doc-html/pyapi-cookie.html

Thanks for that, Bud.

Seems that Debian's 'latest' version of mod_python, vers 2.7.10, is
downright ancient.

Thanks to Simon for earlier response re getting cookies.

A nasty hack that allows me to set cookies is:

     c = Cookie.SimpleCookie()
     c['fred']  = 'blahblah'
     ...
     cRaw = str(c)
     if cRaw:
         req.headers_out['Set-Cookie'] = cRaw.split('Set-Cookie: ', 1)[1]

Cheers
David

From alexiev at activesolutions.bg  Thu Feb 12 11:49:21 2004
From: alexiev at activesolutions.bg (Nikolay Alexiev)
Date: Thu Feb 12 05:44:31 2004
Subject: [mod_python] question - Getting/Setting Cookies
In-Reply-To: <5.2.1.1.0.20040212095142.029b3950@mail.comune.grosseto.it>
References: <5.2.1.1.0.20040212095142.029b3950@mail.comune.grosseto.it>
Message-ID: <402B4C21.4020407@activesolutions.bg>


# I use this
cookies = SimpleCookie()
cookies['cookie1'] = value1
cookies['cookie2'] = value2
req.headers_out.add('Set-Cookie', cookies.output(header='', 
sep='\r\nSet-Cookie:'))


Bud P. Bruegger wrote:

> Hi David,
>
> I don't know much about mod-python--just planning to use it myself.  
> But maybe this is what you're looking for:
>
> http://www.modpython.org/live/mod_python-3.1.2b/doc-html/pyapi-cookie.html 
>
>
> I came across this before and had a hell of a time finding it again.  
> Trouble seems to be that it is in the 3.1 beta version and the home 
> page links to the stable manual (3.0).
>
> cheers
> -b
>
> At 17.26 12/02/2004 +1300, you wrote:
>
>> Hi,
>>
>> I've been a longtime user of Cookie.SimpleCookie, as an easy way of 
>> getting/setting cookies within Python CGI scripts.
>>
>> A couple of days ago, I installed mod_python.
>>
>> While I'm impressed with the performance gain mod_python is giving me 
>> with its CGI handler, I suspect things can run faster still if I 
>> write my own handler.
>>
>> Only problem is - I can't see a trivial way to get a Cookie object 
>> from the 'req' object which gets passed to one's mod_python handler.
>>
>> So my question is - is there any code for getting a Cookie object 
>> from the 'req' object?
>>
>> It's not too hard to write one - just a bit of farting about. But I'd 
>> rather not 'reinvent a wheel' if someone else has already done this.
>>
>> But if I have to write it myself, here's another question - how do I 
>> get the raw http headers from 'req' as a bulk string, which I can 
>> pass to Cookie.load()?
>>
>> Thanks in advance for your help
>>
>> -- 
>>
>> Kind regards
>> David
>>
>> -- 
>>
>> leave this line intact so your email gets through my junk mail filter
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
> ------------------------------------------------------------------------------------------------- 
>
> Ing. Bud P. Bruegger, Ph.D.                 bud@comune.grosseto.it
> Servizio Elaborazione Dati                    0564-488 577 (voice)
> Comune di Grosseto                            0564- 21139 (fax)
> Via Ginori, 43
> 58100 Grosseto
>
> Collaborazione Open Source per la CIE http://www.comune.grosseto.it/cie/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From ntimm at intellithreat.com  Thu Feb 12 09:45:04 2004
From: ntimm at intellithreat.com (ntimm)
Date: Thu Feb 12 11:39:59 2004
Subject: [mod_python] Mod Python Issue?
Message-ID: <000001c3f17f$2f1016b0$7801a8c0@Mobile>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/gif
Size: 145 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20040212/6e38f4a7/attachment-0001.gif
From davekennedy at alescere.com  Thu Feb 12 10:57:55 2004
From: davekennedy at alescere.com (davekennedy@alescere.com)
Date: Thu Feb 12 12:58:11 2004
Subject: [mod_python] 4suite and mod_python interworking
In-Reply-To: <402B4C21.4020407@activesolutions.bg>
References: <5.2.1.1.0.20040212095142.029b3950@mail.comune.grosseto.it>
        <402B4C21.4020407@activesolutions.bg>
Message-ID: <63398.12.100.137.66.1076601475.squirrel@www.alescere.net>

Has anyone found a version of apache, mod_python, 4suite, and python that
all work well with eachother?  Documentation on this subject seems
somewhat sparse...there is alot of discussion on what doesnt work and
little on what does.  I've already tried several combinations that dont
work; I'm running on Debian 3.0.

Thanks much,




-- 
David Kennedy
Program Manager, Alescere LLC.
630.968.8950 x311

Find us on the web at http://www.alescere.com


From perry.tew at cibavision.novartis.com  Thu Feb 12 12:04:09 2004
From: perry.tew at cibavision.novartis.com (perry.tew@cibavision.novartis.com)
Date: Thu Feb 12 12:59:22 2004
Subject: [mod_python] question - Getting/Setting Cookies
Message-ID: <OF8C7502B2.DCB05168-ON85256E38.005CC43A-85256E38.005DC3E2@EU.novartis.net>

First, sorry for posting redundant information about how to handle 
cookies.  I hadn't received everyone's posts until after I sent mine.

Second, as far as cookies go, I've used SimpleCookie.   I see that Grisha 
recently added a Cookie class specific to mod_python.
Let me ask, has any investigation been done into libapreq?  I know it 
seems to be a mod_perl thing, but on their main page they have a blurb 
about python tie-ins with nothing listed below.

I ask of speed issues.
Using python code to parse cookies is pretty expensive.  Not horrible, but 
when every request is parsed for cookies it becomes a significant part of 
processing time, especially with a lot of cookies being set and passed 
around.  For an authentication handler, I've been able to reduce this time 
by slicing the cookie header for just my cookie and then passing that to 
the cookie load() method.  It cut my time to 1/5 when I had a lot of 
cookies.

                cookie_header = req.headers_in.get('Cookie', '')
                start_index = string.find(cookie_header, 'Ticket')
 
                if start_index == -1:
                        return 0, "user has no ticket cookie", 'noone'

                end_index = string.find(cookie_header, ';', start_index)
                if end_index == -1:
                        end_index = len(cookie_header)
                stripped_down_cookie = 
cookie_header[start_index:end_index] 

                cookie = Cookie.SimpleCookie()
                cookie.load(stripped_down_cookie)
                ticket = cookie['Ticket'].value

The above code is much quicker than passing the entire header to the 
load() when there are many cookies.  btw, if someone has some optimization 
tips for the above code, or a better way to do it, please let me know!

At any rate, I haven't tested Grisha's new cookie class, but it's also a 
pure python solution.   That's what got me thinking about libapreq since 
it's a C solution and has routines for parsing cookies.   Thought I'd ask 
if anything has been done yet.   I googled and came up blank.  Anyone?

Thanks,
Perry Tew








# I use this
cookies = SimpleCookie()
cookies['cookie1'] = value1
cookies['cookie2'] = value2
req.headers_out.add('Set-Cookie', cookies.output(header='', 
sep='\r\nSet-Cookie:'))


Bud P. Bruegger wrote:

> Hi David,
>
> I don't know much about mod-python--just planning to use it myself. 
> But maybe this is what you're looking for:
>
> http://www.modpython.org/live/mod_python-3.1.2b/doc-html/pyapi-cookie.html 
>
>
> I came across this before and had a hell of a time finding it again. 
> Trouble seems to be that it is in the 3.1 beta version and the home 
> page links to the stable manual (3.0).
>
> cheers
> -b
>
> At 17.26 12/02/2004 +1300, you wrote:
>
>> Hi,
>>
>> I've been a longtime user of Cookie.SimpleCookie, as an easy way of 
>> getting/setting cookies within Python CGI scripts.
>>
>> A couple of days ago, I installed mod_python.
>>
>> While I'm impressed with the performance gain mod_python is giving me 
>> with its CGI handler, I suspect things can run faster still if I 
>> write my own handler.
>>
>> Only problem is - I can't see a trivial way to get a Cookie object 
>> from the 'req' object which gets passed to one's mod_python handler.
>>
>> So my question is - is there any code for getting a Cookie object 
>> from the 'req' object?
>>
>> It's not too hard to write one - just a bit of farting about. But I'd 
>> rather not 'reinvent a wheel' if someone else has already done this.
>>
>> But if I have to write it myself, here's another question - how do I 
>> get the raw http headers from 'req' as a bulk string, which I can 
>> pass to Cookie.load()?
>>
>> Thanks in advance for your help
>>
>> -- 
>>
>> Kind regards
>> David
>>
>> -- 
>>
>> leave this line intact so your email gets through my junk mail filter
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
> 
------------------------------------------------------------------------------------------------- 

>
> Ing. Bud P. Bruegger, Ph.D.                 bud@comune.grosseto.it
> Servizio Elaborazione Dati                    0564-488 577 (voice)
> Comune di Grosseto                            0564- 21139 (fax)
> Via Ginori, 43
> 58100 Grosseto
>
> Collaborazione Open Source per la CIE http://www.comune.grosseto.it/cie/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From neel at mediapulse.com  Thu Feb 12 12:40:47 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Thu Feb 12 13:36:01 2004
Subject: [mod_python] question - Getting/Setting Cookies
Message-ID: <C0FC22C08B82074A88B500617641577787A841@johnson.mediapulse.net>

> Seems that Debian's 'latest' version of mod_python, vers 2.7.10, is
> downright ancient.

No, 2.7.10 is the latesst for Apache 1.3, 3.x is for Apache 2 - however
no new features or corrections outside of security fixes are being done
to 2.x mod_python, so it doesn't have many of the things that 3.x does.
If you can switch to Apache 2 that might be best, but going from 1.3 to
2 isn't always easy depending on what modules/apps are using 1.3.

That said, if you are staying with 2.7.10, I use this to read cookies:

    # Get any cookies we may have
    cstr = ""
    if req.headers_in.has_key("Cookie"):
        for cookie in req.headers_in["Cookie"]:
            cstr += cookie

    cookies = Cookie.SimpleCookie(cstr)

And this to write a cookie:

            CNew = Cookie.SimpleCookie()
            CNew["test"] = "test"
            req.headers_out.add("Set-Cookie",
CNew["mynhg"].OutputString())

( you want to use .add so as to not overwrite any other set-cookie
headers, as there can be more than one).

hth,
Mike

From davidf at sjsoft.com  Fri Feb 13 08:46:34 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Feb 13 02:42:00 2004
Subject: [mod_python] Mod Python Issue?
In-Reply-To: <000001c3f17f$2f1016b0$7801a8c0@Mobile>
References: <000001c3f17f$2f1016b0$7801a8c0@Mobile>
Message-ID: <402C72CA.4060909@sjsoft.com>

ntimm wrote:

> I am running mod python 3.0.4 with apache 2.0.47 connecting to a 
> postgresql database. The only issue I am having is that each time a 
> mod python script is called that has a db query in all just select 
> statements if leaves a instance of postgres running and eventually my 
> max connection to postgres is hit. I have tried the db.close 
> statements but then that cause sporadic errors with the connection not 
> being valid. The only way I have found to close the postgres instance 
> is either restart apache or postgres. I there some mod python variable 
> that I can use or any type of connection pooling Or maybe a apache 
> config option I have tried messing with the apache config but with no 
> luck.
>
> I have tried to use PythonImport variable but couldn?t get it to work 
> with the pg module at all.
>
> Any help would be appreciated.
>
> Thanks,
>
If you post some of the relevant code it will be easier to see what the
problem is...
But basically if you import the pg module, it will not be re-imported
for each call.
So you want to set up a global variable that is the connection, then
just create a new cursor each time the script is run, and close the
cursor at the end.
Running under Unix, you will still get multiple connections because
there are multiple Python Interpreters - one for each Apache process -
but there will be a limit.
Not sure about the connection pooling, but have a look at
http://sqlrelay.sourceforge.net/ - I haven't used it, but it seems to be
the kind of thing you want...

David

From david at rebirthing.co.nz  Fri Feb 13 19:52:37 2004
From: david at rebirthing.co.nz (David McNab)
Date: Fri Feb 13 02:47:53 2004
Subject: [mod_python] Detecting if running under mod_python
Message-ID: <402C7435.60208@rebirthing.co.nz>

Hi,

(thx muchly for helpful earlier replies re cookies)

Another question:

How can I tell, from *within* my python code, whether I've been launched by:

1) regular apache CGI
2) mod_python CGI, or
3) mod_python 'publisher handler', or
4) a custom mod_python handler?

Please suggest techniques that will work with mod_python 2.x

Thx in advance for your help

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter

From bortzmeyer at nic.fr  Fri Feb 13 11:21:44 2004
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Fri Feb 13 06:16:57 2004
Subject: [mod_python] Re: 4suite and mod_python interworking
In-Reply-To: <63398.12.100.137.66.1076601475.squirrel@www.alescere.net>
References: <5.2.1.1.0.20040212095142.029b3950@mail.comune.grosseto.it>
	<402B4C21.4020407@activesolutions.bg>
	<63398.12.100.137.66.1076601475.squirrel@www.alescere.net>
Message-ID: <20040213102144.GA10488@nic.fr>

On Thu, Feb 12, 2004 at 10:57:55AM -0500,
 davekennedy@alescere.com <davekennedy@alescere.com> wrote 
 a message of 23 lines which said:

> Has anyone found a version of apache, mod_python, 4suite, and python that
> all work well with eachother?  
...
> I'm running on Debian 3.0.

For Apache and mod_python, it works well for me on i386/Debian
3.0. See <URL:http://www.generic-nic.net/python/ANYTHING> for a demo.

For XSLT, it has nothing to do with mod_python. See Debian bug #202457
for a discussion and a possible workaround (I did not test it).
From bortzmeyer at nic.fr  Fri Feb 13 11:36:18 2004
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Fri Feb 13 06:31:27 2004
Subject: [mod_python] Status of a running mod_python
Message-ID: <20040213103618.GB10488@nic.fr>

[Warning: user coming from a mod_perl background and missing many
things.]

I wonder how to get the status of a running mod_python interpreter,
like you do in mod_perl with Apache::Status? 

Apache::Status allows you to see the loaded modules (and their dates
and possibly their symbol table).

Other Apache Perl modules can register data here so you can see, for
instance, pooled Apache::DBI DBMS connections.

I cannot find how to do it in mod_python.

From davidf at sjsoft.com  Fri Feb 13 15:54:50 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Feb 13 09:50:04 2004
Subject: [mod_python] Mod Python Issue?
In-Reply-To: <000001c3f237$f8544060$7801a8c0@Mobile>
References: <000001c3f237$f8544060$7801a8c0@Mobile>
Message-ID: <402CD72A.7090203@sjsoft.com>

ntimm wrote:

>Are you saying import the module with pythonimport command?  Her is a
>piece of one of the scripts basically all scripts look like this except
>different query and results.   I have looked at sql relay  but just
>don't want to change all our code to support it.
>I have tried the pythonImport command but didn't know the correct
>syntax.
>  
>
I don't think the PythonImport command is relevant here, your problem 
isn't with importing modules but connection caching...

>The varweb module contains a lot of the session handling.
>  
>
How many database connections are you getting? I presume you are running 
this under Unix?
Are you aware that you get one connection for each Apache process? It 
may be that you have 20 or more processes, that is why you are seeing 
multiple connections

David

>import sys, shelve, random, pg, md5, time, string
>sys.path.insert(0, "/home/varlog/lib")
>from mod_python import apache
>#db = pg.connect('varlog','localhost')
>from varweb import *
>
>def default(req,sid):
>        sid = '%s'%(sid)
>        if check_session(sid) == 1:
> 
>[user,auth_level,sla_level,org_id,host_id,ip]=get_sess_info(sid)
>                orgid = '%s' %(org_id)
>                hid = '%s' %(host_id)
>                vquery = "select * from vuln_scan where o_id = %s and
>h_id = %s order by level desc limit 50;" %(orgid,hid)
>                output = vuln(sid,vquery)
>        else:
>                output = var_login_redirect()
>        return output
>
>def vuln(sid,query):
>        table = ['']
>        for data in db.query(query).dictresult():
>                Hid = data['h_id']
>                Oid = data['o_id']
>                Id = data['id']
>                Ip = data['ip']
>                Port = data['port']
>                Nid = data['nessus_id']
>                Adv = data['advisory']
>                Lev = data['level']
>                Date = data['time']
>                dat = '<a
>href="/text.py/default?sid=%s&id=%s">Details</a>' %(sid,Id)
>                False = data['is_false']
>                if False == 0:
>                        False = '<a
>href="/vulnerabilities.py/false?sid=%s&id=%s">No</a>' %(sid,Id)
>                else:
>                        False = 'Yes'
>                html =
>sub_table_r([Hid,Oid,Id,Ip,Port,Nid,Adv,Lev,Date,dat,False])
>                table.append(html)
>        table_html = string.join(table,'\n')
>        output =
>sub_pattern_mult('/var/www/ids-events.com/templates/vuln.html',
>table_html,sid)
>        return output
>
>-----Original Message-----
>From: David Fraser [mailto:davidf@sjsoft.com] 
>Sent: Friday, February 13, 2004 12:47 AM
>To: ntimm
>Cc: mod_python@modpython.org
>Subject: Re: [mod_python] Mod Python Issue?
>
>ntimm wrote:
>
>  
>
>>I am running mod python 3.0.4 with apache 2.0.47 connecting to a 
>>postgresql database. The only issue I am having is that each time a 
>>mod python script is called that has a db query in all just select 
>>statements if leaves a instance of postgres running and eventually my 
>>max connection to postgres is hit. I have tried the db.close 
>>statements but then that cause sporadic errors with the connection not
>>    
>>
>
>  
>
>>being valid. The only way I have found to close the postgres instance 
>>is either restart apache or postgres. I there some mod python variable
>>    
>>
>
>  
>
>>that I can use or any type of connection pooling Or maybe a apache 
>>config option I have tried messing with the apache config but with no 
>>luck.
>>
>>I have tried to use PythonImport variable but couldn't get it to work 
>>with the pg module at all.
>>
>>Any help would be appreciated.
>>
>>Thanks,
>>
>>    
>>
>If you post some of the relevant code it will be easier to see what the
>problem is...
>But basically if you import the pg module, it will not be re-imported
>for each call.
>So you want to set up a global variable that is the connection, then
>just create a new cursor each time the script is run, and close the
>cursor at the end.
>Running under Unix, you will still get multiple connections because
>there are multiple Python Interpreters - one for each Apache process -
>but there will be a limit.
>Not sure about the connection pooling, but have a look at
>http://sqlrelay.sourceforge.net/ - I haven't used it, but it seems to be
>the kind of thing you want...
>
>David
>
>  
>

From davidf at sjsoft.com  Fri Feb 13 17:17:02 2004
From: davidf at sjsoft.com (David Fraser)
Date: Fri Feb 13 11:12:22 2004
Subject: [mod_python] Mod Python Issue?
In-Reply-To: <000001c3f242$45c86470$6601a8c0@forensics>
References: <000001c3f242$45c86470$6601a8c0@forensics>
Message-ID: <402CEA6E.6010902@sjsoft.com>

Neal

The danger with closing the connections is that you may have 
multithreaded code trying to use the connection you have closed.
Generally you want to keep some connections open, because it is 
time-consuming opening them, and to do so for each request makes them slow.
How many apache processes are you getting, and how many database 
connections? It should be the same number...
But I'm not sure I'm answering you, maybe somebody else on the list can 
help...

David

Neal Timm wrote:

>Shouldn't these
> postgres: varlog varlog [local] idle
>Die when the apache connection is dropped.
>The only way I can get rid of them is to restart apache or postgres.
>And ventually when the max db connections is hit it doesn't except any
>more cause of all these idle process.  I have tried using a db.close
>statement but then I have come connection issues saying connection is
>not valid.  Is there any other way I can close these or reuse them.
>Varweb calls the db with db =pg.DB()
>
>-----Original Message-----
>From: David Fraser [mailto:davidf@sjsoft.com] 
>Sent: Friday, February 13, 2004 7:55 AM
>To: ntimm
>Cc: ModPython mail list
>Subject: Re: [mod_python] Mod Python Issue?
>
>
>ntimm wrote:
>
>  
>
>>Are you saying import the module with pythonimport command?  Her is a 
>>piece of one of the scripts basically all scripts look like this except
>>different query and results.   I have looked at sql relay  but just
>>don't want to change all our code to support it.
>>I have tried the pythonImport command but didn't know the correct 
>>syntax.
>> 
>>
>>    
>>
>I don't think the PythonImport command is relevant here, your problem 
>isn't with importing modules but connection caching...
>
>  
>
>>The varweb module contains a lot of the session handling.
>> 
>>
>>    
>>
>How many database connections are you getting? I presume you are running
>
>this under Unix?
>Are you aware that you get one connection for each Apache process? It 
>may be that you have 20 or more processes, that is why you are seeing 
>multiple connections
>
>David
>
>  
>
>>import sys, shelve, random, pg, md5, time, string sys.path.insert(0, 
>>"/home/varlog/lib") from mod_python import apache
>>#db = pg.connect('varlog','localhost')
>>    
>>
>>from varweb import *
>  
>
>>def default(req,sid):
>>       sid = '%s'%(sid)
>>       if check_session(sid) == 1:
>>
>>[user,auth_level,sla_level,org_id,host_id,ip]=get_sess_info(sid)
>>               orgid = '%s' %(org_id)
>>               hid = '%s' %(host_id)
>>               vquery = "select * from vuln_scan where o_id = %s and 
>>h_id = %s order by level desc limit 50;" %(orgid,hid)
>>               output = vuln(sid,vquery)
>>       else:
>>               output = var_login_redirect()
>>       return output
>>
>>def vuln(sid,query):
>>       table = ['']
>>       for data in db.query(query).dictresult():
>>               Hid = data['h_id']
>>               Oid = data['o_id']
>>               Id = data['id']
>>               Ip = data['ip']
>>               Port = data['port']
>>               Nid = data['nessus_id']
>>               Adv = data['advisory']
>>               Lev = data['level']
>>               Date = data['time']
>>               dat = '<a 
>>href="/text.py/default?sid=%s&id=%s">Details</a>' %(sid,Id)
>>               False = data['is_false']
>>               if False == 0:
>>                       False = '<a 
>>href="/vulnerabilities.py/false?sid=%s&id=%s">No</a>' %(sid,Id)
>>               else:
>>                       False = 'Yes'
>>               html =
>>sub_table_r([Hid,Oid,Id,Ip,Port,Nid,Adv,Lev,Date,dat,False])
>>               table.append(html)
>>       table_html = string.join(table,'\n')
>>       output = 
>>sub_pattern_mult('/var/www/ids-events.com/templates/vuln.html',
>>table_html,sid)
>>       return output
>>
>>-----Original Message-----
>>From: David Fraser [mailto:davidf@sjsoft.com]
>>Sent: Friday, February 13, 2004 12:47 AM
>>To: ntimm
>>Cc: mod_python@modpython.org
>>Subject: Re: [mod_python] Mod Python Issue?
>>
>>ntimm wrote:
>>
>> 
>>
>>    
>>
>>>I am running mod python 3.0.4 with apache 2.0.47 connecting to a
>>>postgresql database. The only issue I am having is that each time a 
>>>mod python script is called that has a db query in all just select 
>>>statements if leaves a instance of postgres running and eventually my 
>>>max connection to postgres is hit. I have tried the db.close 
>>>statements but then that cause sporadic errors with the connection not
>>>   
>>>
>>>      
>>>
>> 
>>
>>    
>>
>>>being valid. The only way I have found to close the postgres instance
>>>is either restart apache or postgres. I there some mod python variable
>>>   
>>>
>>>      
>>>
>> 
>>
>>    
>>
>>>that I can use or any type of connection pooling Or maybe a apache
>>>config option I have tried messing with the apache config but with no 
>>>luck.
>>>
>>>I have tried to use PythonImport variable but couldn't get it to work
>>>with the pg module at all.
>>>
>>>Any help would be appreciated.
>>>
>>>Thanks,
>>>
>>>   
>>>
>>>      
>>>
>>If you post some of the relevant code it will be easier to see what the
>>    
>>
>
>  
>
>>problem is... But basically if you import the pg module, it will not be
>>    
>>
>
>  
>
>>re-imported for each call.
>>So you want to set up a global variable that is the connection, then
>>just create a new cursor each time the script is run, and close the
>>cursor at the end.
>>Running under Unix, you will still get multiple connections because
>>there are multiple Python Interpreters - one for each Apache process -
>>but there will be a limit.
>>Not sure about the connection pooling, but have a look at
>>http://sqlrelay.sourceforge.net/ - I haven't used it, but it seems to
>>    
>>
>be
>  
>
>>the kind of thing you want...
>>
>>David
>>
>> 
>>
>>    
>>
>
>
>  
>

From jciccale at mac.com  Fri Feb 13 16:44:52 2004
From: jciccale at mac.com (=?iso-8859-1?Q?Juli=E1n_Ciccal=E8?=)
Date: Fri Feb 13 11:40:19 2004
Subject: [mod_python] Mod Python Issue?
In-Reply-To: <402CEA6E.6010902@sjsoft.com>
Message-ID: <200402131640.i1DGeHKP047769@slash.mediapulse.com>

Neal,

	Im using the psycopg module to connect to postgres, that does
connection pooling itself and is thread safe. I'm running apache 2.0.48 and
mod_python 3.1.2b and works great.

You can find psycopg at www.initd.org .

Hope it helps.

Julian

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of David Fraser
Sent: viernes, 13 de febrero de 2004 16:17
To: Neal Timm
Cc: ModPython mail list
Subject: Re: [mod_python] Mod Python Issue?

Neal

The danger with closing the connections is that you may have 
multithreaded code trying to use the connection you have closed.
Generally you want to keep some connections open, because it is 
time-consuming opening them, and to do so for each request makes them slow.
How many apache processes are you getting, and how many database 
connections? It should be the same number...
But I'm not sure I'm answering you, maybe somebody else on the list can 
help...

David

Neal Timm wrote:

>Shouldn't these
> postgres: varlog varlog [local] idle
>Die when the apache connection is dropped.
>The only way I can get rid of them is to restart apache or postgres.
>And ventually when the max db connections is hit it doesn't except any
>more cause of all these idle process.  I have tried using a db.close
>statement but then I have come connection issues saying connection is
>not valid.  Is there any other way I can close these or reuse them.
>Varweb calls the db with db =pg.DB()
>
>-----Original Message-----
>From: David Fraser [mailto:davidf@sjsoft.com] 
>Sent: Friday, February 13, 2004 7:55 AM
>To: ntimm
>Cc: ModPython mail list
>Subject: Re: [mod_python] Mod Python Issue?
>
>
>ntimm wrote:
>
>  
>
>>Are you saying import the module with pythonimport command?  Her is a 
>>piece of one of the scripts basically all scripts look like this except
>>different query and results.   I have looked at sql relay  but just
>>don't want to change all our code to support it.
>>I have tried the pythonImport command but didn't know the correct 
>>syntax.
>> 
>>
>>    
>>
>I don't think the PythonImport command is relevant here, your problem 
>isn't with importing modules but connection caching...
>
>  
>
>>The varweb module contains a lot of the session handling.
>> 
>>
>>    
>>
>How many database connections are you getting? I presume you are running
>
>this under Unix?
>Are you aware that you get one connection for each Apache process? It 
>may be that you have 20 or more processes, that is why you are seeing 
>multiple connections
>
>David
>
>  
>
>>import sys, shelve, random, pg, md5, time, string sys.path.insert(0, 
>>"/home/varlog/lib") from mod_python import apache
>>#db = pg.connect('varlog','localhost')
>>    
>>
>>from varweb import *
>  
>
>>def default(req,sid):
>>       sid = '%s'%(sid)
>>       if check_session(sid) == 1:
>>
>>[user,auth_level,sla_level,org_id,host_id,ip]=get_sess_info(sid)
>>               orgid = '%s' %(org_id)
>>               hid = '%s' %(host_id)
>>               vquery = "select * from vuln_scan where o_id = %s and 
>>h_id = %s order by level desc limit 50;" %(orgid,hid)
>>               output = vuln(sid,vquery)
>>       else:
>>               output = var_login_redirect()
>>       return output
>>
>>def vuln(sid,query):
>>       table = ['']
>>       for data in db.query(query).dictresult():
>>               Hid = data['h_id']
>>               Oid = data['o_id']
>>               Id = data['id']
>>               Ip = data['ip']
>>               Port = data['port']
>>               Nid = data['nessus_id']
>>               Adv = data['advisory']
>>               Lev = data['level']
>>               Date = data['time']
>>               dat = '<a 
>>href="/text.py/default?sid=%s&id=%s">Details</a>' %(sid,Id)
>>               False = data['is_false']
>>               if False == 0:
>>                       False = '<a 
>>href="/vulnerabilities.py/false?sid=%s&id=%s">No</a>' %(sid,Id)
>>               else:
>>                       False = 'Yes'
>>               html =
>>sub_table_r([Hid,Oid,Id,Ip,Port,Nid,Adv,Lev,Date,dat,False])
>>               table.append(html)
>>       table_html = string.join(table,'\n')
>>       output = 
>>sub_pattern_mult('/var/www/ids-events.com/templates/vuln.html',
>>table_html,sid)
>>       return output
>>
>>-----Original Message-----
>>From: David Fraser [mailto:davidf@sjsoft.com]
>>Sent: Friday, February 13, 2004 12:47 AM
>>To: ntimm
>>Cc: mod_python@modpython.org
>>Subject: Re: [mod_python] Mod Python Issue?
>>
>>ntimm wrote:
>>
>> 
>>
>>    
>>
>>>I am running mod python 3.0.4 with apache 2.0.47 connecting to a
>>>postgresql database. The only issue I am having is that each time a 
>>>mod python script is called that has a db query in all just select 
>>>statements if leaves a instance of postgres running and eventually my 
>>>max connection to postgres is hit. I have tried the db.close 
>>>statements but then that cause sporadic errors with the connection not
>>>   
>>>
>>>      
>>>
>> 
>>
>>    
>>
>>>being valid. The only way I have found to close the postgres instance
>>>is either restart apache or postgres. I there some mod python variable
>>>   
>>>
>>>      
>>>
>> 
>>
>>    
>>
>>>that I can use or any type of connection pooling Or maybe a apache
>>>config option I have tried messing with the apache config but with no 
>>>luck.
>>>
>>>I have tried to use PythonImport variable but couldn't get it to work
>>>with the pg module at all.
>>>
>>>Any help would be appreciated.
>>>
>>>Thanks,
>>>
>>>   
>>>
>>>      
>>>
>>If you post some of the relevant code it will be easier to see what the
>>    
>>
>
>  
>
>>problem is... But basically if you import the pg module, it will not be
>>    
>>
>
>  
>
>>re-imported for each call.
>>So you want to set up a global variable that is the connection, then
>>just create a new cursor each time the script is run, and close the
>>cursor at the end.
>>Running under Unix, you will still get multiple connections because
>>there are multiple Python Interpreters - one for each Apache process -
>>but there will be a limit.
>>Not sure about the connection pooling, but have a look at
>>http://sqlrelay.sourceforge.net/ - I haven't used it, but it seems to
>>    
>>
>be
>  
>
>>the kind of thing you want...
>>
>>David
>>
>> 
>>
>>    
>>
>
>
>  
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From jciccale at mac.com  Fri Feb 13 18:30:10 2004
From: jciccale at mac.com (=?iso-8859-1?Q?Juli=E1n_Ciccal=E8?=)
Date: Fri Feb 13 13:25:48 2004
Subject: [mod_python] Mod Python Issue?
In-Reply-To: <000501c3f253$db416810$6601a8c0@forensics>
Message-ID: <200402131825.i1DIPkKP048033@slash.mediapulse.com>

I do the following with psycopg:

In my app, at module level, a connection is opened using a specified user
and password and dbname.

So within your mod_python app, you could use a module that opens a
connection at module level and leaves it there. Suppose your module is
called "db.py" (something like this):

import psycopg as pg

con = db.connect( "username=testuser password=testpass dbname=testdb" )


Then you could use it like this:

import db

 def my_func():
	cur = db.cursor()
	cur.execute( "select col1, col2 from table" )
	t = cur.dictfetchall()
	for row in t:
		print "Col1 is " + row[ "col1" ]
		print "Col2 is " + row[ "col2" ]


psycopg implements DB API 2.0 of python so you could you read the docs 
at python.org on DB API 2.0 specs.

The connection pooling and everything is implemented in C, so you would have
to look there to see the code.

The connection gets released when apache is restarted.

Julian

-----Original Message-----
From: Neal Timm [mailto:ntimm@intellithreat.com] 
Sent: viernes, 13 de febrero de 2004 18:07
To: 'Juli?n Ciccal?'
Subject: RE: [mod_python] Mod Python Issue?

Yea I just installed psycopg will just have to port a lot of code to it.
Can you show me how it does the pooling is it a script or variable I
just did a couple of queries with it and had the same issue of it
leaving a posgres instance open. I couldn't find a lot of docs on it's
usage.

-----Original Message-----
From: Juli?n Ciccal? [mailto:jciccale@mac.com] 
Sent: Friday, February 13, 2004 9:45 AM
To: 'David Fraser'; 'Neal Timm'
Cc: 'ModPython mail list'
Subject: RE: [mod_python] Mod Python Issue?


Neal,

	Im using the psycopg module to connect to postgres, that does
connection pooling itself and is thread safe. I'm running apache 2.0.48
and mod_python 3.1.2b and works great.

You can find psycopg at www.initd.org .

Hope it helps.

Julian

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of David Fraser
Sent: viernes, 13 de febrero de 2004 16:17
To: Neal Timm
Cc: ModPython mail list
Subject: Re: [mod_python] Mod Python Issue?

Neal

The danger with closing the connections is that you may have 
multithreaded code trying to use the connection you have closed.
Generally you want to keep some connections open, because it is 
time-consuming opening them, and to do so for each request makes them
slow. How many apache processes are you getting, and how many database 
connections? It should be the same number...
But I'm not sure I'm answering you, maybe somebody else on the list can 
help...

David

Neal Timm wrote:

>Shouldn't these
> postgres: varlog varlog [local] idle
>Die when the apache connection is dropped.
>The only way I can get rid of them is to restart apache or postgres. 
>And ventually when the max db connections is hit it doesn't except any 
>more cause of all these idle process.  I have tried using a db.close 
>statement but then I have come connection issues saying connection is 
>not valid.  Is there any other way I can close these or reuse them. 
>Varweb calls the db with db =pg.DB()
>
>-----Original Message-----
>From: David Fraser [mailto:davidf@sjsoft.com]
>Sent: Friday, February 13, 2004 7:55 AM
>To: ntimm
>Cc: ModPython mail list
>Subject: Re: [mod_python] Mod Python Issue?
>
>
>ntimm wrote:
>
>  
>
>>Are you saying import the module with pythonimport command?  Her is a
>>piece of one of the scripts basically all scripts look like this
except
>>different query and results.   I have looked at sql relay  but just
>>don't want to change all our code to support it.
>>I have tried the pythonImport command but didn't know the correct 
>>syntax.
>> 
>>
>>    
>>
>I don't think the PythonImport command is relevant here, your problem
>isn't with importing modules but connection caching...
>
>  
>
>>The varweb module contains a lot of the session handling.
>> 
>>
>>    
>>
>How many database connections are you getting? I presume you are 
>running
>
>this under Unix?
>Are you aware that you get one connection for each Apache process? It
>may be that you have 20 or more processes, that is why you are seeing 
>multiple connections
>
>David
>
>  
>
>>import sys, shelve, random, pg, md5, time, string sys.path.insert(0,
>>"/home/varlog/lib") from mod_python import apache
>>#db = pg.connect('varlog','localhost')
>>    
>>
>>from varweb import *
>  
>
>>def default(req,sid):
>>       sid = '%s'%(sid)
>>       if check_session(sid) == 1:
>>
>>[user,auth_level,sla_level,org_id,host_id,ip]=get_sess_info(sid)
>>               orgid = '%s' %(org_id)
>>               hid = '%s' %(host_id)
>>               vquery = "select * from vuln_scan where o_id = %s and
>>h_id = %s order by level desc limit 50;" %(orgid,hid)
>>               output = vuln(sid,vquery)
>>       else:
>>               output = var_login_redirect()
>>       return output
>>
>>def vuln(sid,query):
>>       table = ['']
>>       for data in db.query(query).dictresult():
>>               Hid = data['h_id']
>>               Oid = data['o_id']
>>               Id = data['id']
>>               Ip = data['ip']
>>               Port = data['port']
>>               Nid = data['nessus_id']
>>               Adv = data['advisory']
>>               Lev = data['level']
>>               Date = data['time']
>>               dat = '<a
>>href="/text.py/default?sid=%s&id=%s">Details</a>' %(sid,Id)
>>               False = data['is_false']
>>               if False == 0:
>>                       False = '<a 
>>href="/vulnerabilities.py/false?sid=%s&id=%s">No</a>' %(sid,Id)
>>               else:
>>                       False = 'Yes'
>>               html =
>>sub_table_r([Hid,Oid,Id,Ip,Port,Nid,Adv,Lev,Date,dat,False])
>>               table.append(html)
>>       table_html = string.join(table,'\n')
>>       output = 
>>sub_pattern_mult('/var/www/ids-events.com/templates/vuln.html',
>>table_html,sid)
>>       return output
>>
>>-----Original Message-----
>>From: David Fraser [mailto:davidf@sjsoft.com]
>>Sent: Friday, February 13, 2004 12:47 AM
>>To: ntimm
>>Cc: mod_python@modpython.org
>>Subject: Re: [mod_python] Mod Python Issue?
>>
>>ntimm wrote:
>>
>> 
>>
>>    
>>
>>>I am running mod python 3.0.4 with apache 2.0.47 connecting to a 
>>>postgresql database. The only issue I am having is that each time a 
>>>mod python script is called that has a db query in all just select 
>>>statements if leaves a instance of postgres running and eventually my

>>>max connection to postgres is hit. I have tried the db.close 
>>>statements but then that cause sporadic errors with the connection 
>>>not
>>>   
>>>
>>>      
>>>
>> 
>>
>>    
>>
>>>being valid. The only way I have found to close the postgres instance

>>>is either restart apache or postgres. I there some mod python 
>>>variable
>>>   
>>>
>>>      
>>>
>> 
>>
>>    
>>
>>>that I can use or any type of connection pooling Or maybe a apache 
>>>config option I have tried messing with the apache config but with no

>>>luck.
>>>
>>>I have tried to use PythonImport variable but couldn't get it to work

>>>with the pg module at all.
>>>
>>>Any help would be appreciated.
>>>
>>>Thanks,
>>>
>>>   
>>>
>>>      
>>>
>>If you post some of the relevant code it will be easier to see what 
>>the
>>    
>>
>
>  
>
>>problem is... But basically if you import the pg module, it will not 
>>be
>>    
>>
>
>  
>
>>re-imported for each call.
>>So you want to set up a global variable that is the connection, then 
>>just create a new cursor each time the script is run, and close the 
>>cursor at the end. Running under Unix, you will still get multiple 
>>connections because there are multiple Python Interpreters - one for 
>>each Apache process - but there will be a limit.
>>Not sure about the connection pooling, but have a look at
>>http://sqlrelay.sourceforge.net/ - I haven't used it, but it seems to
>>    
>>
>be
>  
>
>>the kind of thing you want...
>>
>>David
>>
>> 
>>
>>    
>>
>
>
>  
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From binarybrain at phreaker.net  Sat Feb 14 08:52:24 2004
From: binarybrain at phreaker.net (Jim)
Date: Fri Feb 13 21:51:10 2004
Subject: [mod_python] Newbie needs help with forms
Message-ID: <1076766744.830.17.camel@debbie>

I am new to modpython and I could use a hand with forms. I currently
have the publisher setup. The following snippit of code prints none of
the form vars that I (thought) I was passing. When I click submit test
gets loaded but the page is blank. I thought iterating through the keys
would work. What am I doing wrong here? 

TIA - Jim

from mod_python import apache, util
import HTMLgen
from HTMLgen import *

def test(req):
        html_page = HTMLgen.BasicDocument(title='Test')
        for i in util.FieldStorage(req).keys():
                html_page.append(i)
        return html_page
                                                
def handler(req):
        html_page = HTMLgen.BasicDocument(title='Register')
        f = Form('http://69.56.173.110/register.py/test')
        f.append("Please pick a username and password")
        f.append("Username")
        f.append(Input(type='textfield', name='username'))
        f.append("Password")
        f.append(Input(type='password', name='passwd'))
        f = space(f)
        role = ['Official', 'Coach', 'Parent', 'Player']
        for choice in role:
                r = Input(type='radio', name='role', rlabel=choice)
                f.append(r)
        f.submit = Input(type='submit', value='register')
        html_page.append(f)
        req.write(str(html_page))
        return req


From david at rebirthing.co.nz  Sat Feb 14 19:08:16 2004
From: david at rebirthing.co.nz (David McNab)
Date: Sat Feb 14 02:03:37 2004
Subject: [mod_python] Q - Lifetime of imported modules?
Message-ID: <402DBB50.6060301@rebirthing.co.nz>

Hi,

I notice when using my own handler, that it persists within mod_python 
between client hits. However, if more than 30 seconds expire between 
hits, mod_python seems to reload() my handler (and everything it 
imports) on the next hit.

This is a feature I'd like to be able to take advantage of, since it 
could give yet another big performance boost.

Are there any ways to control this behaviour?
For example, turning it on/off, or getting/changing the timeout value?

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter

From dannoritzer at web.de  Sat Feb 14 09:33:44 2004
From: dannoritzer at web.de (dannoritzer@web.de)
Date: Sat Feb 14 04:29:07 2004
Subject: [mod_python] Newbie needs help with forms
In-Reply-To: <1076766744.830.17.camel@debbie>
References: <1076766744.830.17.camel@debbie>
Message-ID: <402DDD68.2020804@web.de>

Jim,

I have to admit, I haven't used the FieldStorage class explicitly yet.

The way I access the form data is using the form attribute from the 
Request object.

See the documentation at: 
http://www.modpython.org/live/current/doc-html/node85.html


Try doing it like this:

(snip)
          for i in req.form.keys():
                  html_page.append(i)
(snip)


Guenter





Jim wrote:

> I am new to modpython and I could use a hand with forms. I currently
> have the publisher setup. The following snippit of code prints none of
> the form vars that I (thought) I was passing. When I click submit test
> gets loaded but the page is blank. I thought iterating through the keys
> would work. What am I doing wrong here? 
> 
> TIA - Jim
> 
> from mod_python import apache, util
> import HTMLgen
> from HTMLgen import *
> 
> def test(req):
>         html_page = HTMLgen.BasicDocument(title='Test')
>         for i in util.FieldStorage(req).keys():
>                 html_page.append(i)
>         return html_page
>                                                 
> def handler(req):
>         html_page = HTMLgen.BasicDocument(title='Register')
>         f = Form('http://69.56.173.110/register.py/test')
>         f.append("Please pick a username and password")
>         f.append("Username")
>         f.append(Input(type='textfield', name='username'))
>         f.append("Password")
>         f.append(Input(type='password', name='passwd'))
>         f = space(f)
>         role = ['Official', 'Coach', 'Parent', 'Player']
>         for choice in role:
>                 r = Input(type='radio', name='role', rlabel=choice)
>                 f.append(r)
>         f.submit = Input(type='submit', value='register')
>         html_page.append(f)
>         req.write(str(html_page))
>         return req
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From binarybrain at phreaker.net  Sun Feb 15 03:44:49 2004
From: binarybrain at phreaker.net (Jim)
Date: Sat Feb 14 16:43:25 2004
Subject: [mod_python] Newbie needs help with forms
In-Reply-To: <1076766744.830.17.camel@debbie>
References: <1076766744.830.17.camel@debbie>
Message-ID: <1076834689.2307.0.camel@debbie>

Thanks to those of you that helped me out. I did get an answer and I
wanted to post it to the list because I don't think the documentation
explains this well.

In my case instead of using util.FieldStorage(req).keys() using the
following worked...

for i in req.form.keys():
        html_page.append(req.form[i])



On Sat, 2004-02-14 at 08:52, Jim wrote:
> I am new to modpython and I could use a hand with forms. I currently
> have the publisher setup. The following snippit of code prints none of
> the form vars that I (thought) I was passing. When I click submit test
> gets loaded but the page is blank. I thought iterating through the keys
> would work. What am I doing wrong here? 
> 
> TIA - Jim
> 
> from mod_python import apache, util
> import HTMLgen
> from HTMLgen import *
> 
> def test(req):
>         html_page = HTMLgen.BasicDocument(title='Test')
>         for i in util.FieldStorage(req).keys():
>                 html_page.append(i)
>         return html_page
>                                                 
> def handler(req):
>         html_page = HTMLgen.BasicDocument(title='Register')
>         f = Form('http://69.56.173.110/register.py/test')
>         f.append("Please pick a username and password")
>         f.append("Username")
>         f.append(Input(type='textfield', name='username'))
>         f.append("Password")
>         f.append(Input(type='password', name='passwd'))
>         f = space(f)
>         role = ['Official', 'Coach', 'Parent', 'Player']
>         for choice in role:
>                 r = Input(type='radio', name='role', rlabel=choice)
>                 f.append(r)
>         f.submit = Input(type='submit', value='register')
>         html_page.append(f)
>         req.write(str(html_page))
>         return req
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From oliver at mellet.net  Sun Feb 15 11:55:34 2004
From: oliver at mellet.net (Oliver Mellet)
Date: Sun Feb 15 15:50:54 2004
Subject: [mod_python] Login and redirection
In-Reply-To: <20040209054737.4D7142AEAA7@meatwad.modul.us>
References: <20040209054737.4D7142AEAA7@meatwad.modul.us>
Message-ID: <EAC9F275-5FF0-11D8-AD97-000A95962D62@mellet.net>

In case anyone's curious, here's how I solved it (the example here is 
for logging in to a Sasl2 db).  Note that I no longer need to use 
internal_redirect; util.redirect works fine:

from mod_python import Session, util
import Sasl2

def login(req, username, password, redir):
    err = ""
    name = ""
    logged_in = False
    try:
       user = Sasl2.getuser(username)
       if user != None:
          if user['password'] == password:
             logged_in = True
             name = user["username"]
          else:
             err = "Invalid Password"
       else:
          err = "Invalid Username"
    except Exception, e:
       err = "Unexpected Error: %s" % e
       req.log_error(str(e))
    sess = Session.Session(req,secret="<yourpass>")
    sess["error_str"] = err
    sess["logged_in"] = logged_in
    sess["user"] = name
    sess.save()
    util.redirect(req, redir)


On Feb 8, 2004, at 9:47 PM, Oliver Mellet wrote:

> I've got a situation where I need to protect pages, and I'm doing
> it using cookies and sessions. If the user requests a
> protected page and he or she hasn't logged in, I redirect them
> to a psp login page, which then POSTs to a publisher handler script.
> That script then does req.internal_redirect to the originating url, or
> back to the login page if the login didn't take.
> The problem I'm having is twofold:
> 1.  If the login succeeds, then the internal redirect shows up in the
> location bar as the publisher script url, rather than the proper url
> of the protected document.  It's ugly, but I can live with it if I 
> have to.
>
> 2.  If the login fails, the internal redirect back to the login page 
> never
> happens; it seems like there's some sort of deadlock going from :
> 	login.psp redirect->POST login.py->internal_redirect login.psp
>
> Having said all that, there's probably a better way to skin this 
> particular
> cat. If anyone has any suggestions, I'd be much obliged.
>
> Thanks
> Oliver
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From w.lipp at bgbm.org  Mon Feb 16 10:00:17 2004
From: w.lipp at bgbm.org (Lipp, Wolfgang)
Date: Mon Feb 16 05:00:28 2004
Subject: [mod_python] installing mod_python -- sharing experiences
Message-ID: <2AA6298359429F469FC88C007B7A818D6790FA@bgbm19.bgbm.fu-berlin.de>



i would like to briefly share my experiences with
installing mod_python on a w2000 box. i must say that i
believe the installation process to be unnecessarily
complicated by the simple fact that the installer itself
seems to be buggy -- in my case, no combination of
mod_python 3.0.4, 3.1.2b and python 2.2.3, 2.3.3 ever
came to completion. rather, the installer would exit --
after an initial declaration of having successfully
found python in the registry -- with the words that it
'could not load python'. i now believe this may be due
to python being absent from ``path`` and a missing value
in ``pythonhome`` (see below), but on the other hand,
all my other package installations with this particular
installer brand had never given me any troubles. it
would be a nice thing if the installer was smart enough
to dispense some hints in such a case.

it is important to check that the correct python version
is selected for the respective version of mod_python --
as far as i can see, both 3.0.4 and 3.1.2b are built for
python 2.3, which at least in the former case is not so
clear from descriptions or filenames. whatever version
you downloaded, you can quickly check this by 1)
unpacking the ``*.exe`` file with a zip tool, 2) go to
the contained folder ``DATA``, open the binary
``mod_python.so`` in any text editor, and 3) search for
the string ``python2``. this should yield a single hit,
from which you can glean the expected version of the
python dll. since i never managed to finish the
installation process with the installer, i think it is
the best idea to then proceed like this:


1) simply grab that ``python_mod.so`` file and drop it
in the ``apache/modules`` folder; likewise, go to the
directory ``PURELIB/mod_python`` in the executable
archive and copy it as ``python/Lib/site-
packages/mod_python``.


2) in apaches ``httpd.conf``, do a test configuration
like this::

    #   NB.: When setting an alias, both the alias
    #   and the aliased location should end in a
    #   slash or avoid it.

    Alias /mod_python0 "drive:/some/path/mod_python/test0"

    <Directory "drive:/some/path/mod_python/test0">
        Options                     Indexes
        AddHandler                  python-program .py
        PythonHandler               myhandler
        PythonDebug                 On
    </Directory>

observe that ``.py`` does start with a dot -- this does
not seem to be essential, though.

one important point is that you had better make sure
that python scripts are not declared as cgi scripts in a
parent directory. if you absolutely need this, try
later, but for the moment it is important to understand
that the ``ExecCGI`` and the ``python-program``
declarations are enemies. -- restart apache (must be
version 2, btw, afaics), either from the services
management console, or, much better, from a terminal
window by saying

    apache.exe -k restart

(if you have your apache installed as a service). the
terminal window method has the distinct advantage that
any error messages due to problems with the httpd.conf
do appear right in front of your eyes, instead of being
silently swallowed by the system. of course, you can
also simply start apache as an ordinary program with a
line like ::

    apache -w -f drive:\path\to\apache\conf\httpd.conf


3) create .../mod_python/test0/myhandler.py and make
it contain something like this::

    #
    # -*- coding: utf-8 -*-

    from mod_python import apache

    def handler(req):

        req.content_type = "text/plain"
        req.write("Hello World!")
        return apache.OK

observe that the ``import`` statement prohibits the
execution of this snippet as a script, since it causes
the import of a module that is only available from
``mod_python.so`` -- maybe someone can come up with a
good idea how to make mod_python web scripts executable
from the command line some day; developers will love
that.


4) in case the directory where the pythonXX.dll is to be
found should *not* appear on the environment variable
``path``, apache will refuse to start and issue the
following message::

    Cannot load drive/dir/Apache2/modules/mod_python.so
    into server: The specified module could not be
    found.

this may be a problem with per-user python installations
that put the dll into the python directory, not into the
windows directory.


5) you also may want to consider setting the
``pythonhome`` environment variable -- while
experimenting, this solved my problems in one case, but
for some reason, i found myself unable to reproduce the
behavior later. anyhow, you'd simply type ::

    set pythonhome=drive:\path\to\python

or create an entry in ``autoexec.bat``, or set the
variable in the system administration.


6) one user also mentioned insufficient access rights in
the scripts directory as a potential cause of
malfunction -- apache does ordinarily not run as a
common user, but under a special account that must be
granted execution access to the directories where you
deploy your web application (i did not have his problem,
but may be this is due to apache running with
administrator rights, which is not a brilliant idea to
boot).


7) enjoy.


greetings,

_wolf


ps. i should add that one must make sure that sufficient
rights are granted to whatever account the apache
service is run under to read and execute not only in the
web application directory, but also *in the python
directory* -- i guess this point is easily missed. as a
quick check whether this may be one of your problems
(which normally results in the message ``could not
import mod_python.apache`` in the apache errors log
file) you can =either= temporarily set the apache
service account to administrator (provided you have the
rights to do so) =or=, alternatively, go to the python
directory and grant the ``SYSTEM`` account execution
rights. of course, this does not work on fat32 volumes.
-- hope these tips in conjunction with my preceding
posting help people fly their apps, -- _w

From neel at mediapulse.com  Mon Feb 16 08:21:23 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Mon Feb 16 09:16:40 2004
Subject: [mod_python] Mod Python 3.0.4 Filter Issue
Message-ID: <C0FC22C08B82074A88B50061764157776B9A9F@johnson.mediapulse.net>


I don't know if this is fixed in the pending 3.1.3 or not, but there
seems to be a bug in 3.0.4 with directives...
 
With a conf like (instead of a snippet, so much is going on that could
be related I'm posting the whole server):
 
<VirtualHost 192.168.0.1>
        ServerName beta.mysite.com
        ServerAlias *.beta.mysite.com
        DocumentRoot /home/sites/mysite.com/www_beta/htdocs
        ScriptAlias /cgi-bin /home/sites/mysite.com/www_beta/cgi-bin
        ErrorLog /home/sites/mysite.com/logs/www_beta_error_log
        TransferLog /home/sites/mysite.com/logs/www_beta_access_log
        Alias /assets /home/sites/mysite.com/assets
        ErrorDocument 401 /error.html
        ErrorDocument 403 /error.html
        ErrorDocument 404 /error.html
        ErrorDocument 500 /error.html
        <Directory /home/sites/mysite.com/www_beta>
                PythonDebug On
                PythonPath
['/home/sites/mysite.com/www_beta/modules']+sys.path
                PythonOption site_dir /home/sites/mysite.com/www_beta
                PythonOption domain_dir /home/sites/mysite.com
                PythonOption db_host db_server.mysite.com
                PythonOption db_name mysite_beta
                PythonOption db_user myuser
                PythonOption db_pass mypass
                PythonOption developer_email your@email.here
        </Directory>
        <Location />
                Options None
                SetHandler python-program
                PythonHandler www
                #PythonAuthenHandler www
                AuthType Basic
                AuthName "beta.mysite.com Site Login"
                AuthUserFile
/home/sites/mysite.com/authfiles/www_beta_htpasswd
                AuthGroupFile /dev/null
                require valid-user
        </Location>
        <Location /cgi-bin>
                SetHandler cgi-script
                PythonOutputFilter www SKIN
                AddOutputFilter SKIN cgi
                Options ExecCGI
        </Location>
</VirtualHost>

Inside the Location /, all the Python settings are seen from the
Directory block - but the outputfilter sees none of them, and infact
errors with cannot find the www module.  If I add to the location block:
 
    PythonPath ['/home/sites/mysite.com/www_beta/modules']+sys.path
 
It will then find the www module correctly and execute as expected (the
filter just skins the output of a cgi script).  Now if I add:
 
    PythonOption db_host db_server.mysite.com
 
It will see *all* of the PythonOptions from the Directory block, just as
the Location / block does. (this is confirmed by doing a 
filter.write(str(filter.req.get_options())) in the output filter).
 
I'm able to use the above to work around the issue, but I need to know
wether FIlters are supposed to have their own "namespace" of
PythonOptions, or they are intended to inherit them just as a handler
would - I don't want to have to rework code for the next release =p
 
Mike

From mogmios at mlug.missouri.edu  Fri Feb 20 20:20:12 2004
From: mogmios at mlug.missouri.edu (Michael)
Date: Sat Feb 21 00:15:28 2004
Subject: [mod_python] default function?
Message-ID: <4036DC7C.7070605@mlug.missouri.edu>

I'm trying to use mod_python for the first time.. using Publisher. How 
do you set the default function to use? ie it seems mycode.py/doit runs 
the doit function. How would you make a function to run if someone just 
tries to use mycode.py ?
From dannoritzer at web.de  Sat Feb 21 09:05:08 2004
From: dannoritzer at web.de (dannoritzer@web.de)
Date: Sat Feb 21 04:00:43 2004
Subject: [mod_python] default function?
In-Reply-To: <4036DC7C.7070605@mlug.missouri.edu>
References: <4036DC7C.7070605@mlug.missouri.edu>
Message-ID: <40371134.7080405@web.de>

Michael,

If you call mycode.py the function mycode.py/index is called, if you 
implemented it in mycode.py.

However, I am not so experienced to know whether you can change the name 
of this default function.

Guenter



Michael wrote:

> I'm trying to use mod_python for the first time.. using Publisher. How 
> do you set the default function to use? ie it seems mycode.py/doit runs 
> the doit function. How would you make a function to run if someone just 
> tries to use mycode.py ?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From mogmios at mlug.missouri.edu  Sat Feb 21 00:35:02 2004
From: mogmios at mlug.missouri.edu (Michael)
Date: Sat Feb 21 04:30:18 2004
Subject: [mod_python] default function?
In-Reply-To: <40371134.7080405@web.de>
References: <4036DC7C.7070605@mlug.missouri.edu> <40371134.7080405@web.de>
Message-ID: <40371836.2000607@mlug.missouri.edu>

If I try doing http://mysite.com/mycode.py I get a 404 error. If I do 
http://mysite.com/mycode.py/ I get an error 'Mod_python error: 
"PythonHandler mod_python.publisher"'. http://mysite.com/mycode.py/index 
works as expected. Any idea what I'm doing wrong?

> If you call mycode.py the function mycode.py/index is called, if you 
> implemented it in mycode.py.
> However, I am not so experienced to know whether you can change the 
> name of this default function.

From vincent_delft at yahoo.com  Sat Feb 21 01:52:02 2004
From: vincent_delft at yahoo.com (vincent delft)
Date: Sat Feb 21 05:47:20 2004
Subject: [mod_python] PSP include directive
Message-ID: <20040221095202.81679.qmail@web11507.mail.yahoo.com>

With mod_python-3.1.2b, I'm using the psp handler.

The include directive is very usefull, but....
the reload is not totally correct.

I will explain it with the following example.
I have several pages like this :
Page1 (with include of subpage1)
  subpage1 (with include of subpage11)
   subpage11

If I do modifications in subpage11 or in subpage1 and
call page1 with my browser (Konqueror within KDE 3.2),
the modifications are not take into account.
They come only when I do a touch on page1

I think about a caching mechanism somewhere. but where
? mod_python? psp? apache?

Is there a way to avoid this ? 


Thanks

PS : I'm agreed that is not very annoying, but if a
simple solution exist...





__________________________________
Do you Yahoo!?
Yahoo! Mail SpamGuard - Read only the mail you want.
http://antispam.yahoo.com/tools
From grisha at modpython.org  Sat Feb 21 12:16:40 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Sat Feb 21 13:12:03 2004
Subject: [mod_python] PSP include directive
In-Reply-To: <20040221095202.81679.qmail@web11507.mail.yahoo.com>
References: <20040221095202.81679.qmail@web11507.mail.yahoo.com>
Message-ID: <20040221121510.E85336@onyx.ispol.com>


Yes, this is correct. Right now PSP isn't smart enough to be able to
figure this out, you just have to touch the main page to make everything
reload.

Grisha

On Sat, 21 Feb 2004, vincent delft wrote:

> With mod_python-3.1.2b, I'm using the psp handler.
>
> The include directive is very usefull, but....
> the reload is not totally correct.
>
> I will explain it with the following example.
> I have several pages like this :
> Page1 (with include of subpage1)
>   subpage1 (with include of subpage11)
>    subpage11
>
> If I do modifications in subpage11 or in subpage1 and
> call page1 with my browser (Konqueror within KDE 3.2),
> the modifications are not take into account.
> They come only when I do a touch on page1
>
> I think about a caching mechanism somewhere. but where
> ? mod_python? psp? apache?
>
> Is there a way to avoid this ?
>
>
> Thanks
>
> PS : I'm agreed that is not very annoying, but if a
> simple solution exist...
>
>
>
>
>
> __________________________________
> Do you Yahoo!?
> Yahoo! Mail SpamGuard - Read only the mail you want.
> http://antispam.yahoo.com/tools
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mogmios at mlug.missouri.edu  Mon Feb 23 23:29:38 2004
From: mogmios at mlug.missouri.edu (Michael)
Date: Tue Feb 24 03:25:04 2004
Subject: [mod_python] XML-RPC?
Message-ID: <403AFD62.4060002@mlug.missouri.edu>

I want to use Mod_Python to implement an XML-RPC server. Am I right in 
trying to use CGIXMLRPCRequestHandler for that? How do I get the POST 
data from Mod_Python so I can run it through the XML-RPC handler? Thanks.
From Volker.Duetsch at nexans.com  Tue Feb 24 13:07:55 2004
From: Volker.Duetsch at nexans.com (Volker.Duetsch@nexans.com)
Date: Tue Feb 24 08:01:54 2004
Subject: [mod_python] mod_python problems on w2k box
Message-ID: <OF8EFBA556.0ABD77E4-ONC1256E44.0041B115-C1256E44.00428129@de.nexans.com>

Hi,

I installed mod_python binary 3.0.4 on my windows 2000 sp3 box.
Already located is python 2.3.2 (from activestate) and I configured
httpd.conf (I'm using xampp 0.9 from apachefriends.org) as described
in the documents.

Running the test script as listed in 2.4 of the Mod_python Manual results 
in:

[error] [client 127.0.0.1] PythonHandler mptest: ImportError: No
module named mptest

[notice] mod_python: (Re)importing module 'mptest'

[error] [client 127.0.0.1] PythonHandler mptest: Traceback (most
recent call last):

[error] [client 127.0.0.1] PythonHandler mptest:   File
"C:\Python23\Lib\site-packages\mod_python\apache.py", line 320, in
HandlerDispatch module = import_module(module_name, config)

[error] [client 127.0.0.1] PythonHandler mptest:   File
"C:\Python23\Lib\site-packages\mod_python\apache.py", line 496, in
import_module f, p, d = imp.find_module(parts[i], path)

[error] [client 127.0.0.1] PythonHandler mptest: ImportError: No
module named mptest

[notice] Parent: Received shutdown signal -- Shutting down the
server.


apache-document-root: c:\xampp\htdocs

in httpd.conf:
--
LoadModule python_module modules/mod_python.so

<Directory /xampp/htdocs/test>
  AddHandler python-program .py
  PythonHandler mptest.py
  PythonDebug On
</Directory>
--

- no mime configuration for py or pyc - files!

I've found several postings related to this topic, but none of them
could help to fix my problem...



regards
Volker

E-Mail: volker.duetsch@nexans.com
From manfred.stienstra at dwerg.net  Tue Feb 24 18:20:15 2004
From: manfred.stienstra at dwerg.net (Manfred Stienstra)
Date: Tue Feb 24 13:11:38 2004
Subject: [mod_python] XML-RPC?
In-Reply-To: <403AFD62.4060002@mlug.missouri.edu>
References: <403AFD62.4060002@mlug.missouri.edu>
Message-ID: <1077643215.24303.2.camel@ack.dwerg.net>

On Tue, 2004-02-24 at 08:29, Michael wrote:
> I want to use Mod_Python to implement an XML-RPC server. Am I right in 
> trying to use CGIXMLRPCRequestHandler for that? How do I get the POST 
> data from Mod_Python so I can run it through the XML-RPC handler? Thanks.

I use xmlrpclib together with the xmlrpc_registry (by Eric Kidd), but I
guess it works for any xmlrpc handler.

params, method = xmlrpclib.loads(req.read())

Manfred


From vincent_delft at yahoo.com  Wed Feb 25 04:57:51 2004
From: vincent_delft at yahoo.com (vincent delft)
Date: Wed Feb 25 08:53:30 2004
Subject: [mod_python] idea for PSP
Message-ID: <20040225125751.72239.qmail@web11510.mail.yahoo.com>

I'm using PSP since several weeks, and I would suggest
an idea for improvement.

What:
-----
my idea is to use "print" command instead of
"req.write".
>From my point of view this will simplify the PSP code;
just use print to see the html string on your html
page.

example:
--------
to illustrate it by and example, the code use in the
3.1.2b example at the chapter 4.9, will be:

print """<html>"""
import time
print """Hello world, the time is: %s """ %
time.strftime("%Y-%m-%d, %H:%M:%S")
print """</html>"""

why:
----
I personally think that this way of doing is much more
easy and usefull.
In the case of PSP, everything you send to the
standard output will be html pages.
logger exist if you need to add some "track point" in
the psp code.

How:
----
The lexer must be adapted: psp_parser.l
adapt the psp.py code by using an "exec" (instead of
eval) and redirect sys.sdtout to req.write just before
the execute.

Impact:
-------
I don't think that this will have impact on the
current PSP code (to be verified).




I've not enough knwoledge of lexer to do it by my
self. If someone is interested to look into that
direction with me ... let me know. 
I initially would see if it's feasible; if it's
backward compatible; ....

I don't want to generate a fuzzy troll on that
subject, but idea or comments are welcome.

Thanks.




__________________________________
Do you Yahoo!?
Yahoo! Mail SpamGuard - Read only the mail you want.
http://antispam.yahoo.com/tools
From grisha at modpython.org  Wed Feb 25 08:36:21 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Feb 25 09:31:48 2004
Subject: [mod_python] idea for PSP
In-Reply-To: <20040225125751.72239.qmail@web11510.mail.yahoo.com>
References: <20040225125751.72239.qmail@web11510.mail.yahoo.com>
Message-ID: <20040225083349.Q72103@onyx.ispol.com>



On Wed, 25 Feb 2004, vincent delft wrote:

> adapt the psp.py code by using an "exec" (instead of eval) and redirect
> sys.sdtout to req.write just before the execute.

"print" is what the original mod_psp.c used, actually.

The problem is that in a multithreaded configuration, there is only one
sys.stdout for multiple requests, so one thread cannot assign to it
without affecting others :-)

Grisha
From vincent_delft at yahoo.com  Wed Feb 25 06:01:58 2004
From: vincent_delft at yahoo.com (vincent delft)
Date: Wed Feb 25 09:57:20 2004
Subject: [mod_python] idea for PSP
In-Reply-To: <20040225083349.Q72103@onyx.ispol.com>
Message-ID: <20040225140158.24001.qmail@web11509.mail.yahoo.com>

Oups .

really really good remark.
100% agreed.

Is there a way to skip this ?
Can we imagine to have a "echo" like PHP ?







--- "Gregory (Grisha) Trubetskoy"
<grisha@modpython.org> wrote:
> 
> 
> On Wed, 25 Feb 2004, vincent delft wrote:
> 
> > adapt the psp.py code by using an "exec" (instead
> of eval) and redirect
> > sys.sdtout to req.write just before the execute.
> 
> "print" is what the original mod_psp.c used,
> actually.
> 
> The problem is that in a multithreaded
> configuration, there is only one
> sys.stdout for multiple requests, so one thread
> cannot assign to it
> without affecting others :-)
> 
> Grisha


__________________________________
Do you Yahoo!?
Yahoo! Mail SpamGuard - Read only the mail you want.
http://antispam.yahoo.com/tools
From grisha at apache.org  Wed Feb 25 09:03:39 2004
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Wed Feb 25 09:59:12 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.3
Message-ID: <20040223140927.T38146@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.3 release of mod_python. Mod_python 3.1.3 is
considered a stable release, suitable for production use.

Mod_python is an Apache HTTP Server module that embeds the Python language
interpreter within the server. With mod_python you can write web-based
applications in Python that will run many times faster than traditional
CGI and will have access to advanced features such as ability to maintain
objects between requests, access to httpd internals, content filters and
connection handlers.

This release includes several features not available in the previous
stable release (3.0.x). Some feature highlights:

* Native cookie support, including support for automatic cryptographic
  cookie signing and marshalling.

* Server-side sessions with memory or dbm-based storage and session
  locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
  within HTML.

Mod_python 3.1.3 is released under the new Apache License version 2.0.

Mod_python 3.1.3 is available for download from:

http://httpd.apache.org/modules/python-download.cgi

More infromation about mod_python is available at:

http://httpd.apache.org/modules/

Regards,

Grisha Trubetskoy
From paulhart at redchocolate.ca  Wed Feb 25 09:35:40 2004
From: paulhart at redchocolate.ca (Paul Hart)
Date: Wed Feb 25 10:31:05 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.3
In-Reply-To: <20040223140927.T38146@onyx.ispol.com>
References: <20040223140927.T38146@onyx.ispol.com>
Message-ID: <E2C4949B-679F-11D8-936B-000393CC268A@redchocolate.ca>

Congrats to everyone involved, I'm looking forward to installing this 
version :)

Paul Hart
--
When you cut into the present the future leaks out.
On 25 Feb 2004, at 09:03, Gregory (Grisha) Trubetskoy wrote:

>
> The Apache Software Foundation and The Apache HTTP Server Project are
> pleased to announce the 3.1.3 release of mod_python. Mod_python 3.1.3 
> is
> considered a stable release, suitable for production use.

From modpython at holovaty.com  Wed Feb 25 10:51:27 2004
From: modpython at holovaty.com (Adrian Holovaty)
Date: Wed Feb 25 12:46:58 2004
Subject: [mod_python] Re: ANNOUNCE: Mod_python 3.1.3
In-Reply-To: <20040223140927.T38146@onyx.ispol.com>
References: <20040223140927.T38146@onyx.ispol.com>
Message-ID: <200402251051.27998.modpython@holovaty.com>

Gregory (Grisha) Trubetskoy wrote:
> The Apache Software Foundation and The Apache HTTP Server Project are
> pleased to announce the 3.1.3 release of mod_python. Mod_python 3.1.3 is
> considered a stable release, suitable for production use.

Is a detailed changelog available? I couldn't find one on the mod_python or 
Apache Web sites.

Adrian

From ograf at rz-online.net  Wed Feb 25 19:28:12 2004
From: ograf at rz-online.net (Oliver Graf)
Date: Wed Feb 25 14:23:39 2004
Subject: [mod_python] Bug in resolve_object of mod_python 2.7.10
Message-ID: <20040225182812.GA15311@rz-online.net>

Hi!

Some weeks ago I reported a bug in the resolve_object method of
mod_python.apache. It hinders the use of dotted object references in
Handler definitions like:

  PythonHandler some.module::someclass.method

Without the fix mod_python fails to find 'method' below 'someclass'.

The fix has been included into mod_python 3.1.3, but is not in the
2.7.X branch. Please include the fix in the next release of 2.7.X,
too.

Regards,
  Oliver.

From eurleif at ecritters.biz  Wed Feb 25 17:19:22 2004
From: eurleif at ecritters.biz (Leif K-Brooks)
Date: Wed Feb 25 18:16:13 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.3
In-Reply-To: <20040223140927.T38146@onyx.ispol.com>
References: <20040223140927.T38146@onyx.ispol.com>
Message-ID: <403D1F6A.8060907@ecritters.biz>

Gregory (Grisha) Trubetskoy wrote:

>This release includes several features not available in the previous
>stable release (3.0.x). Some feature highlights:
>* Server-side sessions with memory or dbm-based storage and session
>  locking support.
>  
>
I'm working on a project where I planned to implement my own sessions 
using a PosgtreSQL database for storage. Can and should I get the new 
mod_python sessions to store in my database instead?
From mogmios at mlug.missouri.edu  Wed Feb 25 14:23:47 2004
From: mogmios at mlug.missouri.edu (Michael)
Date: Wed Feb 25 18:19:05 2004
Subject: [mod_python] XML-RPC?
In-Reply-To: <1077643215.24303.2.camel@ack.dwerg.net>
References: <403AFD62.4060002@mlug.missouri.edu>
	<1077643215.24303.2.camel@ack.dwerg.net>
Message-ID: <403D2073.8080205@mlug.missouri.edu>

Any idea what I'm doing wrong here? I've tried both just pasting this 
HTTP data to the server and using the below client code to make the 
connection. Either way I get a ResponseError from the server code - from 
the xmlrpclib. If I have the server print the POST data it has read it 
looks correct. If I paste the POST data from that into a Python script 
and run it through xmlrpclib.loads() it works fine. What is wrong?

client
------
server = xmlrpclib.ServerProxy ( 'http://localhost/mike.py', verbose = 
True )

try:
        print server.testing ( 41 )
except xmlrpclib.Error, e:
        print 'ERROR:', e


server
------
def handler ( req ):
        req.content_type = "text/xml"
        req.send_http_header ()
        data = req.read ()
        try:
                params, method = xmlrpclib.loads ( data )
        except xmlrpclib.ResponseError, e:
                req.write ( xmlrpclib.dumps ( e ) )
        return apache.OK


>>I want to use Mod_Python to implement an XML-RPC server. Am I right in 
>>trying to use CGIXMLRPCRequestHandler for that? How do I get the POST 
>>data from Mod_Python so I can run it through the XML-RPC handler? Thanks.
>>    
>>
>
>I use xmlrpclib together with the xmlrpc_registry (by Eric Kidd), but I
>guess it works for any xmlrpc handler.
>
>params, method = xmlrpclib.loads(req.read())
>  
>

From grisha at modpython.org  Wed Feb 25 18:35:50 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Feb 25 19:31:17 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.3
In-Reply-To: <403D1F6A.8060907@ecritters.biz>
References: <20040223140927.T38146@onyx.ispol.com>
	<403D1F6A.8060907@ecritters.biz>
Message-ID: <20040225183241.O78303@onyx.ispol.com>


On Wed, 25 Feb 2004, Leif K-Brooks wrote:

> Gregory (Grisha) Trubetskoy wrote:
>
> >This release includes several features not available in the previous
> >stable release (3.0.x). Some feature highlights:
> >* Server-side sessions with memory or dbm-based storage and session
> >  locking support.
> >
> >
> I'm working on a project where I planned to implement my own sessions
> using a PosgtreSQL database for storage. Can and should I get the new
> mod_python sessions to store in my database instead?

You'll probably save yourself quite a bit of trouble by using mod_python's
sessions. Mod_python will not give the ability to store session data in
postgres out-of-the-box of course, but it should be pretty simple to a
create a session subclass to do just that - look at the DbmSession as an
example.

Grisha
From bje at apnic.net  Thu Feb 26 09:36:11 2004
From: bje at apnic.net (Byron Ellacott)
Date: Wed Feb 25 19:31:40 2004
Subject: [mod_python] idea for PSP
In-Reply-To: <20040225083349.Q72103@onyx.ispol.com>
References: <20040225125751.72239.qmail@web11510.mail.yahoo.com>
	 <20040225083349.Q72103@onyx.ispol.com>
Message-ID: <1077752170.4286.4.camel@ping.apnic.net>

On Wed, 2004-02-25 at 23:36, Gregory (Grisha) Trubetskoy wrote:
> On Wed, 25 Feb 2004, vincent delft wrote:
> The problem is that in a multithreaded configuration, there is only one
> sys.stdout for multiple requests, so one thread cannot assign to it
> without affecting others :-)

Assuming there is some way to get the current thread, you /COULD/ do:

class tstdout:
    def __init__(self):
        self.threads = {}
    def add_thread(self, thread_id, stream):
        self.threads[thread_id] = stream
    def write(self, data):
        self.threads[current_thread_id()].write(data)
    # Other methods of sys.stdout as appropriate

save = sys.stdout
sys.stdout = tstdout()
sys.stdout.add_thread(None, save)

There's not much good you can say about what this would do to
efficiency, though. :)

-- 
bje
From david at rebirthing.co.nz  Thu Feb 26 14:09:52 2004
From: david at rebirthing.co.nz (David McNab)
Date: Wed Feb 25 21:05:21 2004
Subject: [mod_python] Anti-mod_python discrimination
Message-ID: <403D4760.5030505@rebirthing.co.nz>

Hi,

I wonder if anyone on this list might want to comment on why so many 
commercial shared web hosting providers steadfastly refuse to allow the 
use of mod_python on their servers.

I'm using mod_python on my own server, and finding it to be one of the 
greatest things since Python and Apache themselves. But I'm feeling 
hesitant to fully 'surrender' to the mod_python environment, and make 
full commitment to it, given that probably less than 2% of shared 
hosting providers hosts allow it, and the ones that do allow it tend to 
charge 3 to n times more than the others.

As a defense, I've built into my 'yet another python web app server 
framework' a system of 'contexts', where web apps can run the same way, 
without mods, regardless of whether they're running under straight CGI, 
mod_python CGI, my custom mod_python handler, or through an embedded 
server. (apologies that I'm not using Twisted ;p)

But I would really like to know what concerns shared web host admins 
have about mod_python. Are there real security issues, whereby a 
malicious python web app could do nasty stuff to 'neighbour' accounts, 
or to the server itself? Or is there just a 'fear of the unknown' issue? 
Or have hosting providers been fed some FUD along the way?

Just curious

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter
From renderpipe at speedpost.net  Wed Feb 25 20:52:46 2004
From: renderpipe at speedpost.net (RenderPipe)
Date: Wed Feb 25 21:48:10 2004
Subject: [mod_python] mod_python-2.7.10 with quixote
Message-ID: <1077760366.711.181668192@webmail.messagingengine.com>

Hello,

After a brutal 2 days I have finally gotten mod_python to work with
quixote. I still have 2 problems that I can't figure out. I posted on the
quixote mailing list but there weren't much mod_python responses.
Although they were quite helpful! So I thought I try my luck here.

1-When I browse the to the quixote demo page it's supposed to load
__init__.py automatically.  However I get a directory listing instead? 
How can I get mod_python/apache to load the __init__.py file by default? 

Here's my config:

LoadModule python_module    extramodules/mod_python.so
<LocationMatch "^/qdemo(/|$)">
    SetHandler python-program
    PythonHandler quixote.mod_python_handler
    PythonOption quixote-root-namespace quixote.demo
    PythonInterpreter quixote.demo
    PythonDebug On
    PythonPath "sys.path + ['/home/htdocs/qdemo']"
</LocationMatch>

2-I think the problem is that the main PythonPath not working. I think if
I can get quixote to be in the PythonPath the proper file will load. By
default quixote is supposed to load __init__.py. This works as cgi and
scgi but not with mod_python-2.7.10

If anyone has these 2 working together, I would appreciate it if you
could point me in the right direction.

tia,

Bobby

-- 
http://www.fastmail.fm - Sent 0.000002 seconds ago
From bje at apnic.net  Thu Feb 26 12:03:11 2004
From: bje at apnic.net (Byron Ellacott)
Date: Wed Feb 25 21:58:41 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <403D4760.5030505@rebirthing.co.nz>
References: <403D4760.5030505@rebirthing.co.nz>
Message-ID: <1077760991.4286.17.camel@ping.apnic.net>

On Thu, 2004-02-26 at 11:09, David McNab wrote:
> I wonder if anyone on this list might want to comment on why so many 
> commercial shared web hosting providers steadfastly refuse to allow the 
> use of mod_python on their servers.

Go back a few years, and you can s/mod_python/mod_perl/g.  In order to
support mod_python, the provider would need staff with python and
mod_python skills, which either means training or hiring.

Unfortunately, perl already had a solid history as the language of
choice for CGI, and mod_perl filled a hole.  mod_python may never get as
much acceptance as perl.

(All python needs is syntactic support for regular expression objects,
and it will surpass perl in every respect -- except existing expertise!)

-- 
bje
From david at rebirthing.co.nz  Thu Feb 26 15:19:58 2004
From: david at rebirthing.co.nz (David McNab)
Date: Wed Feb 25 22:15:29 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <1077760991.4286.17.camel@ping.apnic.net>
References: <403D4760.5030505@rebirthing.co.nz>
	<1077760991.4286.17.camel@ping.apnic.net>
Message-ID: <403D57CE.5080505@rebirthing.co.nz>

Byron Ellacott wrote:
> (All python needs is syntactic support for regular expression objects,
> and it will surpass perl in every respect -- except existing expertise!)

Sorry to say this, but...
Ouch! What a cruel thing to do to such a lovely language!

What can Perl actually do that can't be done with python's re module?

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter
From david at rebirthing.co.nz  Thu Feb 26 15:24:50 2004
From: david at rebirthing.co.nz (David McNab)
Date: Wed Feb 25 22:20:18 2004
Subject: [mod_python] Mysterious Apache2.0 pauses
Message-ID: <403D58F2.2030908@rebirthing.co.nz>

Hi,

When hitting a mod_python driven page in Apache 2.0, something seems to 
hang for up to 30 seconds.

I've painstakingly verified that it is not my code, or my (very simple) 
mod_python handler, causing the hang.

This is only happening with Apache2.0, and doesn't always happen.

I see it most often with the first hit after restarting Apache (in which 
  case it happens probably 1 in 3 times).

Occasionally I see it happen with subsequent hits to the same page, but 
much less often - slightly more often if there's been a delay between hits.

Any thoughts?

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter
From gnb at itga.com.au  Thu Feb 26 13:52:05 2004
From: gnb at itga.com.au (Gregory Bond)
Date: Wed Feb 25 22:47:31 2004
Subject: [mod_python] Anti-mod_python discrimination 
In-Reply-To: Your message of Thu, 26 Feb 2004 15:19:58 +1300.
Message-ID: <200402260252.NAA29916@lightning.itga.com.au>


david@rebirthing.co.nz said:
> What can Perl actually do that can't be done with python's re module? 

Nothing (IIUC it's even the same C regex code under the hood.)  

Perl can't do anything that you can't also do in FORTRAN or COBOL or even a
Universal Turing Machine, either.  At one level, it's all a matter of
convenience, and perl's RE-as-language-syntax is much more convenient to use
for serious text hackery than python's RE-as-library-calls.

All of which is way OT for a mod_python list, of course.



From vincent_delft at yahoo.com  Wed Feb 25 21:46:02 2004
From: vincent_delft at yahoo.com (vincent delft)
Date: Thu Feb 26 01:41:40 2004
Subject: [mod_python] idea for PSP
In-Reply-To: <20040225083349.Q72103@onyx.ispol.com>
Message-ID: <20040226054602.40886.qmail@web11507.mail.yahoo.com>

I've think about your feedback. And, now I'm confused.
Sorry to come back with this, but I would like to
understand.

If you execute the following code, you will get a
counter in each file like expected because each thread
has his own buffer.

import time
from threading import Thread
import sys
def funct(i):
     fid=open('/tmp/tt%s.tt' % i,'w')
     sys.stdout=fid
     for j in xrange(50):
        print i,j,
        time.sleep(0)
     fid.close()
for i in xrange(50): Thread(target=funct,
args=(i,)).start()


Thus, if we redirect the stdout to "req" in each
thread we should not have conflicts.

The common between threads is not sys.stdout but the
console (or the log file) on which stdout is linked.







--- "Gregory (Grisha) Trubetskoy"
<grisha@modpython.org> wrote:
> 
> 
> On Wed, 25 Feb 2004, vincent delft wrote:
> 
> > adapt the psp.py code by using an "exec" (instead
> of eval) and redirect
> > sys.sdtout to req.write just before the execute.
> 
> "print" is what the original mod_psp.c used,
> actually.
> 
> The problem is that in a multithreaded
> configuration, there is only one
> sys.stdout for multiple requests, so one thread
> cannot assign to it
> without affecting others :-)
> 
> Grisha


__________________________________
Do you Yahoo!?
Get better spam protection with Yahoo! Mail.
http://antispam.yahoo.com/tools
From bje at apnic.net  Thu Feb 26 15:53:30 2004
From: bje at apnic.net (Byron Ellacott)
Date: Thu Feb 26 01:49:00 2004
Subject: [mod_python] idea for PSP
In-Reply-To: <20040226054602.40886.qmail@web11507.mail.yahoo.com>
References: <20040226054602.40886.qmail@web11507.mail.yahoo.com>
Message-ID: <1077774810.4284.40.camel@ping.apnic.net>

On Thu, 2004-02-26 at 15:46, vincent delft wrote:
> import time
> from threading import Thread
> import sys
> def funct(i):
>      fid=open('/tmp/tt%s.tt' % i,'w')
>      sys.stdout=fid
>      for j in xrange(50):
>         print i,j,
>         time.sleep(0)

Change this to time.sleep(1) and see what happens.

>      fid.close()
> for i in xrange(50): Thread(target=funct,
> args=(i,)).start()

-- 
bje
From davidf at sjsoft.com  Thu Feb 26 08:20:04 2004
From: davidf at sjsoft.com (David Fraser)
Date: Thu Feb 26 02:15:30 2004
Subject: [mod_python] Mysterious Apache2.0 pauses
In-Reply-To: <403D58F2.2030908@rebirthing.co.nz>
References: <403D58F2.2030908@rebirthing.co.nz>
Message-ID: <403D9014.4030807@sjsoft.com>

David McNab wrote:

> Hi,
>
> When hitting a mod_python driven page in Apache 2.0, something seems 
> to hang for up to 30 seconds.
>
> I've painstakingly verified that it is not my code, or my (very 
> simple) mod_python handler, causing the hang.
>
> This is only happening with Apache2.0, and doesn't always happen.
>
> I see it most often with the first hit after restarting Apache (in 
> which case it happens probably 1 in 3 times).
>
> Occasionally I see it happen with subsequent hits to the same page, 
> but much less often - slightly more often if there's been a delay 
> between hits.
>
> Any thoughts?
>
Which version of mod_python are you using, which version of Apache, what 
operating system?
What you could do is add logging code that logs the time at the start 
and end of the request - I presume you mean you've done this.
Is the pause before or after your request handler gets called?

David
From ograf at rz-online.net  Thu Feb 26 08:57:43 2004
From: ograf at rz-online.net (Oliver Graf)
Date: Thu Feb 26 03:53:08 2004
Subject: [mod_python] Bug in resolve_object of mod_python 2.7.10
In-Reply-To: <20040225182812.GA15311@rz-online.net>
References: <20040225182812.GA15311@rz-online.net>
Message-ID: <20040226075743.GB11880@rz-online.net>

On Wed, Feb 25, 2004 at 07:28:12PM +0100, Oliver Graf wrote:
> Some weeks ago I reported a bug in the resolve_object method of
> mod_python.apache. It hinders the use of dotted object references in
> Handler definitions like:
> 
>   PythonHandler some.module::someclass.method
> 
> Without the fix mod_python fails to find 'method' below 'someclass'.
> 
> The fix has been included into mod_python 3.1.3, but is not in the
> 2.7.X branch. Please include the fix in the next release of 2.7.X,
> too.

To make it a bit simpler, here is a diff for this. Please apply to the
2.7 branch.

Oliver.

-------------- next part --------------
--- mod_python-2.7.10/lib/python/mod_python/apache.py.orig	2004-02-26 08:55:57.000000000 +0100
+++ mod_python-2.7.10/lib/python/mod_python/apache.py	2004-02-26 08:56:24.000000000 +0100
@@ -384,7 +384,7 @@
         parent = obj
 
         # don't throw attribute errors when silent
-        if silent and not hasattr(module, obj_str):
+        if silent and not hasattr(obj, obj_str):
             return None
 
         # this adds a little clarity if we have an attriute error
From lists at bwbohh.net  Thu Feb 26 16:23:39 2004
From: lists at bwbohh.net (Eric Windisch)
Date: Thu Feb 26 17:19:07 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <403D4760.5030505@rebirthing.co.nz>
References: <403D4760.5030505@rebirthing.co.nz>
Message-ID: <1077830619.823.17.camel@duchamp>

On Wed, 2004-02-25 at 20:09, David McNab wrote:
> I wonder if anyone on this list might want to comment on why so many 
> commercial shared web hosting providers steadfastly refuse to allow the 
> use of mod_python on their servers.

This is a shameless plug, as I work there, but you might want to
checkout GrokThis.net.  Our Advanced accounts provide mod_python,
mod_perl, and Zope.

> But I would really like to know what concerns shared web host admins 
> have about mod_python. 

Memory consumption and security.  There is also an issue of support. 
Lots of people know PHP, which I've found to be well-supported at many
of those cheap shared-hosting providers, whereas there are far fewer
people with mod_python experience and expertise.

> full commitment to it, given that probably less than 2% of shared 
> hosting providers hosts allow it, and the ones that do allow it tend to 
> charge 3 to n times more than the others.

I believe that we offers competitive rates.  Our accounts with mod_perl
and mod_python are slightly more expensive than those without, but it is
more expensive to host due to the additionaly server resources
required.  Luckily, I've found that users of mod_python and mod_perl are
usually much easier to deal with - requiring less support.

> Are there real security issues, whereby a 
> malicious python web app could do nasty stuff to 'neighbour' accounts, 

Yes.  GrokThis.net avoids this by giving each user their own Apache
installation running on a high (8000+) port, bound to port 80 via a
proxy.

-- 
Eric Windisch <lists@bwbohh.net>

From ronwalf at umd.edu  Thu Feb 26 17:20:57 2004
From: ronwalf at umd.edu (Ron Alford)
Date: Thu Feb 26 18:16:19 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <403D4760.5030505@rebirthing.co.nz>
References: <403D4760.5030505@rebirthing.co.nz>
Message-ID: <403E7149.4060409@umd.edu>

David McNab wrote:

> 
> But I would really like to know what concerns shared web host admins 
> have about mod_python. Are there real security issues, whereby a 
> malicious python web app could do nasty stuff to 'neighbour'
> accounts, or to the server itself? Or is there just a 'fear of the
> unknown' issue? Or have hosting providers been fed some FUD along the
> way?


These arguments are probably true of all mod_*, but here are some
reasons I wouldn't want to have untrusted users using mod_python:
1) You need to have seperate interpretters per user.  Import hooks,
module versions, and other things can all play havoc with other users.
This really isn't such a big deal.  Default is what, interpretter per
virtual host?

2) Can't make use of apache threading.  It would be really easy to
import a .so module and cause the entire server to segfault.  I've even
done this with the standard library before (though my bug was heinous).

3) Remember that you're part of the same process as apache.  Anything
apache has stored in ram, and anything apache can touch is accessible to
you.


Given the last problem, if I were to host untrusted users and give them
access to mod_python, I would have an apache server per user running
under their account.

Going this far, I'd probably go a little further and just give them
their own virtual linux box.

And as I've gone that far, I'll just put in a plug for
http://www.johncompanies.com/

They've given me relatively cheap hosting on a nice box.  I get to do
with it as I please, and it's as reliable as I could wish for.

-Ron
From grisha at apache.org  Fri Feb 27 09:10:29 2004
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Fri Feb 27 10:05:59 2004
Subject: [mod_python] My onlamp article on mod_python psp
Message-ID: <20040227090856.W1910@onyx.ispol.com>


Here is a little discription of what mod_python PSP can do:

http://www.onlamp.com/pub/a/python/2004/02/26/python_server_pages.html

Grisha
From remi at python-hosting.com  Fri Feb 27 16:22:02 2004
From: remi at python-hosting.com (Remi Delon)
Date: Fri Feb 27 12:17:29 2004
Subject: [mod_python] Re: Anti-mod_python discrimination
Message-ID: <012a01c3fd4d$d6a1c160$e617a8c0@hoegh.co.uk>

> I wonder if anyone on this list might want to comment on why so many
> commercial shared web hosting providers steadfastly refuse to allow the
> use of mod_python on their servers.

One reason is probably that it is not very easy to get it to work properly/securely in a shared hosting environment...

For instance, I provide VirtualHosting only I want my users to be completely separate from each other ...

Fortunately, with Apache 2 it's possible but you have to use the perchild MPM and it is really a pain in the neck to get it to work
properly ...


> I'm using mod_python on my own server, and finding it to be one of the
> greatest things since Python and Apache themselves. But I'm feeling
> hesitant to fully 'surrender' to the mod_python environment, and make
> full commitment to it, given that probably less than 2% of shared
> hosting providers hosts allow it, and the ones that do allow it tend to
>  charge 3 to n times more than the others.

I don't ... I provide mod_python with my cheapest package ($15/month)


> But I would really like to know what concerns shared web host admins
> have about mod_python. Are there real security issues, whereby a
> malicious python web app could do nasty stuff to 'neighbour' accounts,
> or to the server itself? Or is there just a 'fear of the unknown' issue?

I think it's a combination of both and the fact that it takes quite some expertise to get the mod_python/perchild MPM combo to work
properly ...


Best,

Remi  - http://www.python-hosting.com



From colarte at telesat.com.co  Fri Feb 27 14:13:06 2004
From: colarte at telesat.com.co (Camilo Olarte)
Date: Fri Feb 27 15:08:33 2004
Subject: [mod_python] mod_python in redhat 9.0 (i386)
Message-ID: <1077909186.403f96c2dda0d@ilpostino4.telesat.com.co>

Hello , 

Is there an rpm for mod_python 3.1 , one that works well??

Actually i'm having a problem with mod_python 3.0 that comes with normal red hat
9.0 distribution, when i install it it supposedly installs allright but when i'm
going to use the Handler i can't use it..

In this installation i can use mod_python.publisher only, i can't use sessions
neither all the apache facilites like authentication, private pages...

For example if i use the python interpreter and do :

Python 2.2.3 (#1, Jun 16 2003, 13:21:11) 
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import mod_python
>>> 
 everything is allright , but....
if I do :


Python 2.2.3 (#1, Jun 16 2003, 13:21:11) 
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> from mod_python import apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 66, in ?
    import _apache
ImportError: No module named _apache
>>> 

and if i look in site-packages/mod_python i can't find any apache.so file(so
what i think is that this rpm brought the mod_python borken)

is there a way to get that apache.so ???

I tried to compile python2.3 without any results in this machine... i think that
 is given by red hats heavy dependence on python for it's anaconda configuration
system... , what i mean is that i cannot just uninstall python2.2 and compile
python2.3 without doing a lot of changes so that red hat keeps working allright.


So , until now i have opted to use mod.publisher only , and to use something
like pso to handle sessions... but i really want to use the whole mod_python...

is there something i can do, (i need to use red hat linux, its a requirement,
and also gcc3.+ because i would be using firebird 1.5 -database-)

Note: at my house with debian linux i have no problem!.
      One idea is to compile mod_python in other machine and grab the so...
      I did it on a Mandrake Machine but with the same results i had on the Red
  Hat. :(

Camilo Olarte
thanks for any help.








Telesat, m?s f?cil...m?s Internet.
http://www.telesat.com.co/
From colarte at telesat.com.co  Fri Feb 27 14:14:14 2004
From: colarte at telesat.com.co (Camilo Olarte)
Date: Fri Feb 27 15:09:39 2004
Subject: [mod_python] mod_python in redhat 9.0 (i386)
Message-ID: <1077909254.403f9706efc01@ilpostino4.telesat.com.co>

Hello , 

Is there an rpm for mod_python 3.1 , one that works well??

Actually i'm having a problem with mod_python 3.0 that comes with normal red hat
9.0 distribution, when i install it it supposedly installs allright but when i'm
going to use the Handler i can't use it..

In this installation i can use mod_python.publisher only, i can't use sessions
neither all the apache facilites like authentication, private pages...

For example if i use the python interpreter and do :

Python 2.2.3 (#1, Jun 16 2003, 13:21:11) 
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import mod_python
>>> 
 everything is allright , but....
if I do :


Python 2.2.3 (#1, Jun 16 2003, 13:21:11) 
[GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> from mod_python import apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 66, in ?
    import _apache
ImportError: No module named _apache
>>> 

and if i look in site-packages/mod_python i can't find any apache.so file(so
what i think is that this rpm brought the mod_python borken)

is there a way to get that apache.so ???

I tried to compile python2.3 without any results in this machine... i think that
 is given by red hats heavy dependence on python for it's anaconda configuration
system... , what i mean is that i cannot just uninstall python2.2 and compile
python2.3 without doing a lot of changes so that red hat keeps working allright.


So , until now i have opted to use mod.publisher only , and to use something
like pso to handle sessions... but i really want to use the whole mod_python...

is there something i can do, (i need to use red hat linux, its a requirement,
and also gcc3.+ because i would be using firebird 1.5 -database-)

Note: at my house with debian linux i have no problem!.
      One idea is to compile mod_python in other machine and grab the so...
      I did it on a Mandrake Machine but with the same results i had on the Red
  Hat. :(

Camilo Olarte
thanks for any help.








Telesat, m?s f?cil...m?s Internet.
http://www.telesat.com.co/
From russell at balest.com  Fri Feb 27 23:26:23 2004
From: russell at balest.com (Russell Balest)
Date: Sat Feb 28 00:21:08 2004
Subject: [mod_python] libxml2 failure
Message-ID: <4040186F.1060102@balest.com>


   I've seen people asking this exact question a year ago and I don't 
see any answer to it.
The problem is that libxml2 works fine as a standalone script and 
completely fails under mod_python.
Was there ever a resolution to this?

   I can tell you my setup but this bug has been clearly stated many 
times before.  In fact, 4Suite is plagued by the same problems as libxml2.

   Here is a minimal publisher handler which fails:

--------------------------------------
   def something(req):
        styledoc = libxml2.parseFile("/tmp/template.xml")
        # The value of styledoc is empty after this call.
        # The file has an absolute pathname and exists in /tmp.
--------------------------------------
My httpd.conf file is fine because I can get other handles to work 
correctly.
It's just libxml2 for some reason that doesn't work, and 4Suite.

    My python version:
---------------------------------------
Python 2.2.3 (#1, Nov 25 2003, 20:14:09)
[GCC 2.95.4 20020320 [FreeBSD]] on freebsd4

---------------
Apache 1.3
mod_python 2.3.8


  Thanks for your suggestions (please!),
   Russ Balest

From cfox at cfconsulting.ca  Fri Feb 27 23:38:23 2004
From: cfox at cfconsulting.ca (Colin Fox)
Date: Sat Feb 28 03:33:57 2004
Subject: [mod_python] libxml2 failure
In-Reply-To: <4040186F.1060102@balest.com>
References: <4040186F.1060102@balest.com>
Message-ID: <4040456F.50707@cfconsulting.ca>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Russell Balest wrote:
|
|   I've seen people asking this exact question a year ago and I don't see
| any answer to it.
| The problem is that libxml2 works fine as a standalone script and
| completely fails under mod_python.

Actually, I have it working perfectly under apache2 & mod_python. My setup:

Gentoo Linux:
libxml2 v 2.6.4
python 2.3.3
apache 2.0.48-r1
mod_python 3.0.4-r2

Here's a snippet from my processor:

~    def lowlevel_process(self, xml_filename, xsl_filename):
	libxml2.lineNumbersDefault(1)
	libxml2.substituteEntitiesDefault(1)

	styledoc = libxml2.parseFile(xsl_filename)
	style = libxslt.parseStylesheetDoc(styledoc)
	doc = libxml2.parseFile(xml_filename)

	result = style.applyStylesheet(doc, None)

	html = result.serialize()
	style.freeStylesheet()
	doc.freeDoc()
	result.freeDoc()
	return html

This works great, and is very fast.

Do you get anything in your /var/log/apache/error_log when you try to
process your xml?

cf
| Was there ever a resolution to this?
|
|   I can tell you my setup but this bug has been clearly stated many
| times before.  In fact, 4Suite is plagued by the same problems as libxml2.
|
|   Here is a minimal publisher handler which fails:
|
| --------------------------------------
|   def something(req):
|        styledoc = libxml2.parseFile("/tmp/template.xml")
|        # The value of styledoc is empty after this call.
|        # The file has an absolute pathname and exists in /tmp.
| --------------------------------------
| My httpd.conf file is fine because I can get other handles to work
| correctly.
| It's just libxml2 for some reason that doesn't work, and 4Suite.
|
|    My python version:
| ---------------------------------------
| Python 2.2.3 (#1, Nov 25 2003, 20:14:09)
| [GCC 2.95.4 20020320 [FreeBSD]] on freebsd4
|
| ---------------
| Apache 1.3
| mod_python 2.3.8
|
|
|  Thanks for your suggestions (please!),
|   Russ Balest
|
| _______________________________________________
| Mod_python mailing list
| Mod_python@modpython.org
| http://mailman.modpython.org/mailman/listinfo/mod_python

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFAQEVvoaQ1/feGlJoRApALAKCWs5TH77Tl8g3qhDF+9heSkaA7mgCfVt9p
xMRM+7NPRUOUPVhzjZcBDaA=
=orRR
-----END PGP SIGNATURE-----
From vincent_delft at yahoo.com  Sat Feb 28 00:41:08 2004
From: vincent_delft at yahoo.com (vincent delft)
Date: Sat Feb 28 04:36:48 2004
Subject: [mod_python] idea for PSP
In-Reply-To: <20040225083349.Q72103@onyx.ispol.com>
Message-ID: <20040228084108.82866.qmail@web11507.mail.yahoo.com>

By adding 'global_scope.update({"echo":req.write})' in
psp.py at line 208 (mod_python 3.1.3), we create a new
function called "echo" (like in php) that fit my
original requirement (mail post before with same
subject).

Does this idea is Thread safe ... et cetera.

This simplify the psp coding. Like I've explained in
my previous mail, we will able to do :

...
<% 
for i in range(5):
   echo "<br>Hello"
#end
%>
...


OK. My example is not the best one, but I think psp
writters will see the idea.
It's not always so easy to use the "last indentation"
feature. 
This "echo" command is an "elegant" (up to you to
confirm) alternative to "building string" within the
loop.

 
Thanks












--- "Gregory (Grisha) Trubetskoy"
<grisha@modpython.org> wrote:
> 
> 
> On Wed, 25 Feb 2004, vincent delft wrote:
> 
> > adapt the psp.py code by using an "exec" (instead
> of eval) and redirect
> > sys.sdtout to req.write just before the execute.
> 
> "print" is what the original mod_psp.c used,
> actually.
> 
> The problem is that in a multithreaded
> configuration, there is only one
> sys.stdout for multiple requests, so one thread
> cannot assign to it
> without affecting others :-)
> 
> Grisha


__________________________________
Do you Yahoo!?
Get better spam protection with Yahoo! Mail.
http://antispam.yahoo.com/tools
From rien at yeepa.org  Sat Feb 28 12:42:25 2004
From: rien at yeepa.org (Adrien Plisson)
Date: Sat Feb 28 07:36:44 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <403D4760.5030505@rebirthing.co.nz>
References: <403D4760.5030505@rebirthing.co.nz>
Message-ID: <40407EA1.3010902@yeepa.org>

Hello,

David McNab wrote:

 > I wonder if anyone on this list might want to comment on why so many
 > commercial shared web hosting providers steadfastly refuse to allow
 > the use of mod_python on their servers.

The problem is not only with mod_python. Hosting providers offers 
support for Perl but rarely for Python.

For example, my provider do support Perl: it names Perl as a possible 
language for CGI scripts, provides help on Perl (through FAQ, tutorials, 
and technical support). But python is never referenced. I dicovered the 
python interpreter was present and accessible, but after asking them 
they told me they do not provide support for python. While their Perl 
interpreter is an up-to-date last release of Perl, their python 
interpreter is an old bare-bone 1.5 dating from years.

With such a lack of good python support from my provider, i don't have 
any wish to write a script, even a simple CGI one. If hosting providers 
could at least provide a decent version of Python, it would benefit to 
all the python community.

Maybe all Python users should scream louder for good python support...

-- 
rien

From lists at bwbohh.net  Sat Feb 28 07:00:54 2004
From: lists at bwbohh.net (Eric Windisch)
Date: Sat Feb 28 07:56:54 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <40407EA1.3010902@yeepa.org>
References: <403D4760.5030505@rebirthing.co.nz> <40407EA1.3010902@yeepa.org>
Message-ID: <1077969654.11767.5.camel@duchamp>

On Sat, 2004-02-28 at 06:42, Adrien Plisson wrote:
> With such a lack of good python support from my provider, i don't have 
> any wish to write a script, even a simple CGI one. If hosting providers 
> could at least provide a decent version of Python, it would benefit to 
> all the python community.
> 
> Maybe all Python users should scream louder for good python support...

There are quite a few hosts out there that have modern Python
interpreters installed but it is probably true that hosts which actively
support Python are few between.  In addition to the hosting providers
supporting Python and/or mod_python listed by others (and myself) in
this thread, it is notable that the popular CPanel web hosting control
panel software provides a recent release of GNU Mailman so you can be
confident that any hosting provider with CPanel will have a moderately
recent version of Python.  

Web hosting companies providing CPanel will make it quite clear on their
website.  This does not mean that they support Python, only that they
will have a version installed new enough to run Mailman.

-- 
Eric Windisch <lists@bwbohh.net>
GrokThis.net - mod_python web hosting specialists

From david at rebirthing.co.nz  Sun Feb 29 01:49:42 2004
From: david at rebirthing.co.nz (David McNab)
Date: Sat Feb 28 08:45:24 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <1077969654.11767.5.camel@duchamp>
References: <403D4760.5030505@rebirthing.co.nz> <40407EA1.3010902@yeepa.org>
	<1077969654.11767.5.camel@duchamp>
Message-ID: <40408E66.5050908@rebirthing.co.nz>

Eric Windisch wrote:
> Web hosting companies providing CPanel will make it quite clear on their
> website.  This does not mean that they support Python, only that they
> will have a version installed new enough to run Mailman.

Nice tip. Verrry nice tip! :)

Especially given the number of vhosts that say they have 'python', but 
never indicate on their websites *which version* of python.

Also, it seems the majority of public vhosts refuse to run a python 
later than 1.5.2.

But knowing about Cpanel, it's looking possible to construct google 
queries for hosting that might give low-noise results lists.

-- 

Kind regards
David

--

leave this line intact so your email gets through my junk mail filter
From grisha at modpython.org  Sat Feb 28 09:08:14 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Sat Feb 28 10:03:45 2004
Subject: [mod_python] idea for PSP
In-Reply-To: <20040228084108.82866.qmail@web11507.mail.yahoo.com>
References: <20040228084108.82866.qmail@web11507.mail.yahoo.com>
Message-ID: <20040228090639.M16585@onyx.ispol.com>



On Sat, 28 Feb 2004, vincent delft wrote:

> <%
> for i in range(5):
>    echo "<br>Hello"
> #end
> %>

but I'm not sure I understand how is it that much better than

<%
for i in range(5):
   req.write("<br>Hello")
#end
%>

Grisha
From d.holton at vanderbilt.edu  Sat Feb 28 11:31:16 2004
From: d.holton at vanderbilt.edu (Doug Holton)
Date: Sat Feb 28 13:27:04 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <200402281504.i1SF4VKP006479@slash.mediapulse.com>
References: <200402281504.i1SF4VKP006479@slash.mediapulse.com>
Message-ID: <4040D064.9050801@vanderbilt.edu>


If you want to run apache and mod_python yourself for about as cheap as 
a shared hosting account, try a user-mode Linux account.  See:
http://holton.ltc.vanderbilt.edu/wiki/UserModeLinux
I am using Bytemark now, and they have good documentation on how to set 
up domain names, etc.

The difficulty though is that you need to know how to run a Linux server.

Debian is the easiest version of Linux to keep up to date, but the 
default "stable" version of Debian only comes with Apache 1.3 and python 
2.1.  You'd have to upgrade your server to use Debian "testing" or 
"unstable" instead.

You might want to practice on your own computer first with Debian, or 
Knoppix, which is Debian "unstable" and runs off a CD: 
http://www.knoppix.net/get.php

From lists at bwbohh.net  Sat Feb 28 12:56:49 2004
From: lists at bwbohh.net (Eric Windisch)
Date: Sat Feb 28 13:52:55 2004
Subject: [mod_python] Anti-mod_python discrimination
In-Reply-To: <4040D064.9050801@vanderbilt.edu>
References: <200402281504.i1SF4VKP006479@slash.mediapulse.com>
	 <4040D064.9050801@vanderbilt.edu>
Message-ID: <1077990852.11772.17.camel@duchamp>

On Sat, 2004-02-28 at 12:31, Doug Holton wrote:
> If you want to run apache and mod_python yourself for about as cheap as 
> a shared hosting account, try a user-mode Linux account.  See:
> http://holton.ltc.vanderbilt.edu/wiki/UserModeLinux
> I am using Bytemark now, and they have good documentation on how to set 
> up domain names, etc.

User mode linux falls under VDS (Virtual Dedicated Server) which usually
costs quite a bit more than a "normal" shared hosting account.  There
are providers (or at least one, see sig) that provide independent web
servers for each client without resorting to becoming a VDS provider and
thus are able to offer accounts at a lower monthly rate.  Compared to a
VDS, the only thing lost is the (apparent) root access, which really
isn't necessary if you're just hosting a handful of sites within your
account.

Remi mentioned possibly using Apache2 and the per_child MPM but with
that the user loses the ability to tune their own VirtualHost entries in
their Apache configuration and are unable to restart the Apache server. 
I'm also not yet convinced of how secure running Apache2+per_child is,
compared to the more obvious security advantages of giving each user
their own Apache server.

-- 
Eric Windisch <lists@bwbohh.net>
GrokThis.net - mod_python web hosting specialists

From sameerc1 at grandecom.net  Sat Feb 28 20:51:59 2004
From: sameerc1 at grandecom.net (S C)
Date: Sun Feb 29 04:58:42 2004
Subject: [mod_python] mod_python installation \ initial setup help
Message-ID: <404153CF.6080700@grandecom.net>

platform: Debian Linux
Apache/2.0.48, mod-python/3.0.4 and Python/2.3.3

I installed mod_python, and it's loading correctly.

Tried the standard hello world app, placing the following in my 
sites-enabled default file with the correct directory path:

<Directory /var/www/apache2-default/python>

        AddHandler mod_python .py
        PythonHandler mptest
        PythonDebug On
</Directory>


in my python directory (/var/www/apache2-default/python), I created the 
file mptest.py which contains the following lines:

from mod_python import apache

def handler(req):
        req.write("Hello World!")
        return apache.OK

The file is set as executable.

When I go look at this path from my web browser, it asks me if I want to 
save mptest.py?  How can I make the file execute?

Thanks in advance!!



From david at rebirthing.co.nz  Sun Feb 29 23:28:31 2004
From: david at rebirthing.co.nz (David McNab)
Date: Sun Feb 29 06:24:19 2004
Subject: [mod_python] mod_python installation \ initial setup help
In-Reply-To: <404153CF.6080700@grandecom.net>
References: <404153CF.6080700@grandecom.net>
Message-ID: <4041BECF.1030207@rebirthing.co.nz>

Do you have anywhere in your apache configs the line:

LoadModule python_module /usr/lib/apache2/modules/mod_python.so

?

(change the path to wherever your mod_python.so is)

Cheers
David


S C wrote:
> platform: Debian Linux
> Apache/2.0.48, mod-python/3.0.4 and Python/2.3.3
> 
> I installed mod_python, and it's loading correctly.
> 
> Tried the standard hello world app, placing the following in my 
> sites-enabled default file with the correct directory path:
> 
> <Directory /var/www/apache2-default/python>
> 
>        AddHandler mod_python .py
>        PythonHandler mptest
>        PythonDebug On
> </Directory>
> 
> 
> in my python directory (/var/www/apache2-default/python), I created the 
> file mptest.py which contains the following lines:
> 
> from mod_python import apache
> 
> def handler(req):
>        req.write("Hello World!")
>        return apache.OK
> 
> The file is set as executable.
> 
> When I go look at this path from my web browser, it asks me if I want to 
> save mptest.py?  How can I make the file execute?
> 
> Thanks in advance!!
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

--

leave this line intact so your email gets through my junk mail filter
From mogmios at mlug.missouri.edu  Sun Feb 29 03:45:49 2004
From: mogmios at mlug.missouri.edu (Michael)
Date: Sun Feb 29 07:41:11 2004
Subject: [mod_python] XML-RPC?
Message-ID: <4041D0ED.70807@mlug.missouri.edu>

Having looked further at this it seems to be caused any time

xmlrpclib.loads() is used inside a mod_python handler. Even when the 
data being sent to loads() isn't being read() from the client. The same 
code ran from the command line does not raise an error. I can run the 
code with mod_python imported though. Is there some bad interaction 
between Apache, mod_python, and xmlrpclib (or prehaps one of it's parsers)?

> Any idea what I'm doing wrong here? I've tried both just pasting this 
> HTTP data to the server and using the below client code to make the 
> connection. Either way I get a ResponseError from the server code - 
> from the xmlrpclib. If I have the server print the POST data it has 
> read it looks correct. If I paste the POST data from that into a 
> Python script and run it through xmlrpclib.loads() it works fine. What 
> is wrong?
>
> client
> ------
> server = xmlrpclib.ServerProxy ( 'http://localhost/mike.py', verbose = 
> True )
>
> try:
>        print server.testing ( 41 )
> except xmlrpclib.Error, e:
>        print 'ERROR:', e
>
>
> server
> ------
> def handler ( req ):
>        req.content_type = "text/xml"
>        req.send_http_header ()
>        data = req.read ()
>        try:
>                params, method = xmlrpclib.loads ( data )
>        except xmlrpclib.ResponseError, e:
>                req.write ( xmlrpclib.dumps ( e ) )
>        return apache.OK
>
>
>>> I want to use Mod_Python to implement an XML-RPC server. Am I right 
>>> in trying to use CGIXMLRPCRequestHandler for that? How do I get the 
>>> POST data from Mod_Python so I can run it through the XML-RPC 
>>> handler? Thanks.
>>>   
>>
>>
>> I use xmlrpclib together with the xmlrpc_registry (by Eric Kidd), but I
>> guess it works for any xmlrpc handler.
>>
>> params, method = xmlrpclib.loads(req.read())
>

From luc at server.by  Sun Feb 29 13:57:30 2004
From: luc at server.by (Serg Kozhemyakin)
Date: Sun Feb 29 08:02:36 2004
Subject: [mod_python] mod_python installation \ initial setup help
In-Reply-To: <404153CF.6080700@grandecom.net>
References: <404153CF.6080700@grandecom.net>
Message-ID: <200402291357.30059.luc@server.by>

? ????????? ?? Sun February 29 2004 04:51 S C ???????(a):

> def handler(req):
>         req.write("Hello World!")
>         return apache.OK

Just add req.content_type="text/plain" before req.write.
From sameerc1 at grandecom.net  Sun Feb 29 04:12:10 2004
From: sameerc1 at grandecom.net (S C)
Date: Sun Feb 29 12:18:55 2004
Subject: [mod_python] mod_python installation \ initial setup help
In-Reply-To: <4041BECF.1030207@rebirthing.co.nz>
References: <404153CF.6080700@grandecom.net>
	<4041BECF.1030207@rebirthing.co.nz>
Message-ID: <4041BAFA.2040602@grandecom.net>

David McNab wrote:

> Do you have anywhere in your apache configs the line:
>
> LoadModule python_module /usr/lib/apache2/modules/mod_python.so
>
> ?
>

In my mods-enabled directory under /etc/apache2, I have a symbolic link 
to file mod_python.load which exists in directory mods-available.  The 
single line in mod_python.load is: LoadModule python_module 
/usr/lib/apache2/modules/mod_python.so.

Even in my apache error log it says Apache/2.0.48 mod_python/3.0.4 
Python/2.3.3 configured - resuming normal operations when I restart 
apache. 

I think as far as apache knows, it's running mod_python, just not 
executing my .py file!

Any more suggestions?

Thanks in advance!!


> (change the path to wherever your mod_python.so is)
>
> Cheers
> David
>
>
> S C wrote:
>
>> platform: Debian Linux
>> Apache/2.0.48, mod-python/3.0.4 and Python/2.3.3
>>
>> I installed mod_python, and it's loading correctly.
>>
>> Tried the standard hello world app, placing the following in my 
>> sites-enabled default file with the correct directory path:
>>
>> <Directory /var/www/apache2-default/python>
>>
>>        AddHandler mod_python .py
>>        PythonHandler mptest
>>        PythonDebug On
>> </Directory>
>>
>>
>> in my python directory (/var/www/apache2-default/python), I created 
>> the file mptest.py which contains the following lines:
>>
>> from mod_python import apache
>>
>> def handler(req):
>>        req.write("Hello World!")
>>        return apache.OK
>>
>> The file is set as executable.
>>
>> When I go look at this path from my web browser, it asks me if I want 
>> to save mptest.py?  How can I make the file execute?
>>
>> Thanks in advance!!
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> -- 
>
> leave this line intact so your email gets through my junk mail filter
>
>
>


From sameerc1 at grandecom.net  Sun Feb 29 04:17:11 2004
From: sameerc1 at grandecom.net (S C)
Date: Sun Feb 29 12:23:57 2004
Subject: [mod_python] Re: Mod_python Digest, Vol 11, Issue 31
In-Reply-To: <200402291700.i1TH09KQ009860@slash.mediapulse.com>
References: <200402291700.i1TH09KQ009860@slash.mediapulse.com>
Message-ID: <4041BC27.7060808@grandecom.net>

Message: 6
Date: Sun, 29 Feb 2004 13:57:30 +0200
From: Serg Kozhemyakin <luc@server.by>
Subject: Re: [mod_python] mod_python installation \ initial setup help
To: mod_python@modpython.org
Message-ID: <200402291357.30059.luc@server.by>
Content-Type: text/plain;  charset="koi8-r"

? ????????? ?? Sun February 29 2004 04:51 S C ???????(a):


>> def handler(req):
>>         req.write("Hello World!")
>>         return apache.OK
>

>Just add req.content_type="text/plain" before req.write.
>
>  
>

I tried that.  it doesn't help.  My browser still wants to save the 
file, it is not executed at the server side by mod_python.  Any other 
suggestions?

Thanks in advance !!!

From manfred.stienstra at dwerg.net  Sun Feb 29 22:57:40 2004
From: manfred.stienstra at dwerg.net (Manfred Stienstra)
Date: Sun Feb 29 17:48:55 2004
Subject: [mod_python] XML-RPC?
In-Reply-To: <4041D0ED.70807@mlug.missouri.edu>
References: <4041D0ED.70807@mlug.missouri.edu>
Message-ID: <1078091860.4526.4.camel@ack.dwerg.net>

On Sun, 2004-02-29 at 12:45, Michael wrote:
> Having looked further at this it seems to be caused any time
> 
> xmlrpclib.loads() is used inside a mod_python handler. Even when the 
> data being sent to loads() isn't being read() from the client. The same 
> code ran from the command line does not raise an error. I can run the 
> code with mod_python imported though. Is there some bad interaction 
> between Apache, mod_python, and xmlrpclib (or prehaps one of it's parsers)?

Can you please post the error?

Manfred

From manfred.stienstra at dwerg.net  Sun Feb 29 23:55:06 2004
From: manfred.stienstra at dwerg.net (Manfred Stienstra)
Date: Sun Feb 29 18:46:20 2004
Subject: [mod_python] XML-RPC?
In-Reply-To: <40426719.8060801@mlug.missouri.edu>
References: <4041D0ED.70807@mlug.missouri.edu>
	 <1078091860.4526.4.camel@ack.dwerg.net>
	 <40426719.8060801@mlug.missouri.edu>
Message-ID: <1078095306.4528.16.camel@ack.dwerg.net>

On Sun, 2004-02-29 at 23:26, Michael wrote:
> >>Having looked further at this it seems to be caused any time
> >>
> >>xmlrpclib.loads() is used inside a mod_python handler. Even when the 
> >>data being sent to loads() isn't being read() from the client. The same 
> >>code ran from the command line does not raise an error. I can run the 
> >>code with mod_python imported though. Is there some bad interaction 
> >>between Apache, mod_python, and xmlrpclib (or prehaps one of it's parsers)
> >
> >Can you please post the error?
> >
> INPUT
> --------
> POST /mike.py HTTP/1.0
> User-Agent: None
> Host: kavlon.org
> Content-Type: text/xml
> Content-length: 117
> 
> <methodCall><methodName>test</methodName>
> <params><param><value><int>41</int></value></param></params></methodCall>
> 
> 
> 
> OUTPUT
> -----------
> HTTP/1.1 200 OK
> Date: Sun, 29 Feb 2004 22:23:37 GMT
> Server: Apache/1.3.29 (Unix) mod_python/2.7.8 Python/2.3.2 PHP/4.3.4
> Connection: close
> Content-Type: text/xml
> 
> 
> Mod_python error: "PythonHandler mike"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", 
> line 193,
> in Dispatch
>     result = object(req)
> 
>   File "/home/webserver/localhost/mike.py", line 12, in handler
>     params, method = xmlrpclib.loads ( req.read () )
> 
>   File "/usr/local/lib/python2.3/xmlrpclib.py", line 1014, in loads
>     return u.close(), u.getmethodname()
> 
>   File "/usr/local/lib/python2.3/xmlrpclib.py", line 740, in close
>     raise ResponseError()
> 
> ResponseError: <xmlrpclib.ResponseError instance at 0x4069324c>


The error appears to come from the Unmarshaller, so I guess you will
have to hack into that to figure out what goes wrong...

Manfred

From grisha at apache.org  Wed Feb 25 09:03:39 2004
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Wed Mar  3 18:37:59 2004
Subject: [mod_python] ANNOUNCE: Mod_python 3.1.3
Message-ID: <20040223140927.T38146@onyx.ispol.com>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.1.3 release of mod_python. Mod_python 3.1.3 is
considered a stable release, suitable for production use.

Mod_python is an Apache HTTP Server module that embeds the Python language
interpreter within the server. With mod_python you can write web-based
applications in Python that will run many times faster than traditional
CGI and will have access to advanced features such as ability to maintain
objects between requests, access to httpd internals, content filters and
connection handlers.

This release includes several features not available in the previous
stable release (3.0.x). Some feature highlights:

* Native cookie support, including support for automatic cryptographic
  cookie signing and marshalling.

* Server-side sessions with memory or dbm-based storage and session
  locking support.

* PSP - a fast flex-based scanner which allows embedding Python code
  within HTML.

Mod_python 3.1.3 is released under the new Apache License version 2.0.

Mod_python 3.1.3 is available for download from:

http://httpd.apache.org/modules/python-download.cgi

More infromation about mod_python is available at:

http://httpd.apache.org/modules/

Regards,

Grisha Trubetskoy

---------------------------------------------------------------------
To unsubscribe, e-mail: announce-unsubscribe@httpd.apache.org
For additional commands, e-mail: announce-help@httpd.apache.org

