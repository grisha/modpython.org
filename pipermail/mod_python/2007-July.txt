From jeffh at dundeemt.com  Sun Jul  1 09:18:06 2007
From: jeffh at dundeemt.com (Jeff Hinrichs - DM&T)
Date: Sun Jul  1 09:18:16 2007
Subject: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
	mod_python.so: unsupported file layout
In-Reply-To: <88e286470706301833wbef8c28w95735075c8b06d7f@mail.gmail.com>
References: <20070630214248.BJQ07976@mail6.persistent.co.in>
	<88e286470706301833wbef8c28w95735075c8b06d7f@mail.gmail.com>
Message-ID: <5aaed53f0707010618q10124f27l17e3d2ff43576f2a@mail.gmail.com>

On 6/30/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> Usually these problems are caused through using the mod_python.so with
> a version of Apache which is different to the version of Apache that
> mod_python was compiled against. This can especially occur where you
> have a standard OS installation of Apache but you try and use an
> alternate version under /usr/local/ or elsewhere.
>
> What options did you use with 'configure' when you ran it? Did the
> compile line correctly pick up includes and libraries from the version
> under /usr/local?
>
> Graham
>
> On 01/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> > Hi Folks,
> >
> > Have come to the community with a new issue with regard to installing mod_python on FreeBSD.
> >
> > Eariler had installed apache/mod_python on
> > Suse 10 / 64 Arch.
> > - Apache 2.2.4
> > - mod_python 3.3.1
> > - apr 1.2.8
> > - apr-util 1.2.8
> >
> > problems -
> > The issue with mod_python being installed in to locations.
> > Managed to get it working on this setup sucessfully.
> > ---
> >
> > Now I've installed the same configuration on
> > Free BSD 6.1 32 Arch.
> > >>>>
> > FreeBSD perputo3.inetu.net 6.1-RELEASE-p3 FreeBSD 6.1-RELEASE-p3 #107: Mon Nov  6 20:31:10 EST 2006     root@turnip.inetu.org:/usr/obj/usr/src/sys/INU6  i386
> > >>>>
> >
> > Installation was completed successfully for all the above modules.
> >
> > But after adding the required configuration line -
> > >>>
> > LoadModule python_module modules/mod_python.so
> > >>>
> >
> > And restarting apache , it throws the following error
> > >>>>
> > /usr/local/apache-ast>./bin/apachectl start
> > httpd: Syntax error on line 54 of /usr/local/apache-ast/conf/httpd.conf: Cannot load /usr/local/apache-ast/modules/mod_python.so into server: /usr/local/apache-ast/modules/mod_python.so: unsupported file layout
> >
> > >>>>
> >
> > The required mod_python.so appears to be installed in
> > /usr/local/apache-ast/modules directory.
> >
> > >>>>
> > /usr/local/apache-ast>ls -l modules/
> > total 1738
> > -rw-r--r--  1 root  wheel     8951 Jun 29 10:19 httpd.exp
> > -rwxr-xr-x  1 root  wheel  1739997 Jun 29 10:50 mod_python.so
> >
> > >>>>
> >
> > Have also added the following lines in the config file -
> > >>>>
> > <Directory "/usr/local/apache-ast/htdocs">
> >       AddHandler mod_python .py
> >       PythonHandler mod_python.publisher
> >       PythonDebug On
> > </Directory>
> >
> > >>>>
> >
> > Any one knows if there is any bug with mod_python installation on FreeBSD 6.1. Please let me know in case you there is anything that is missing in the install steps.
> >

Have you installed apache, python and mod_python ALL from ports?  If
not, make uninstall the lot and then install it via ports.  I've got
mod_python installed on FreeBSD 5.x -> 6.2 all with out issue and
without any fiddling.  Just install apache2 and python from ports,
then build mod_python from ports.  If you installed apache2 from a
tar-ball then that is most likely the source of your problems.

-Jeff
From anthony_raj at persistent.co.in  Mon Jul  2 01:14:23 2007
From: anthony_raj at persistent.co.in (Anthony Raj)
Date: Mon Jul  2 01:14:19 2007
Subject: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
	mod_python.so: unsupported file layout
In-Reply-To: <88e286470706301833wbef8c28w95735075c8b06d7f@mail.gmail.com>
References: <20070630214248.BJQ07976@mail6.persistent.co.in>
	<88e286470706301833wbef8c28w95735075c8b06d7f@mail.gmail.com>
Message-ID: <CEABD77036C54B10B3BEE959321D84B6@persistent.co.in>

Hi Graham,

It ran correctly with the following configuration -
No errors were detected while the linking any lib.
Need to look carefully at the error generated.
AFAIK , it got installed without lib related errors.

-------
1.	Install apr 1.2.8
Install Steps :
./configure --prefix=/local/apr-util-httpd --with-apr=/local/apr-httpd
make
make install
----

2. Install apr-util 1.2.8
	- apr-util has bug for 64 bit Arch. Need to patch it first.
http://www.weblogs.uhi.ac.uk/sm00ay/?p=196
http://issues.apache.org/bugzilla/show_bug.cgi?id=28205
Install Steps :
./configure --prefix=/local/apr-httpd
make
make install
----

3.	Install httpd 2.2.4
Install Steps :

	./configure --prefix=/local/apache-ast --with-apr=/local/apr-httpd/
--with-apr-util=/local/apr-util-httpd/
make
make install
----

4. Install mod_python 3.3.1
	Install Steps:
	./configure --with-apxs=/local/apache-ast/bin/apxs
make
make install
----

Cheers,
Anthony

-----Original Message-----
From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com] 
Sent: Sunday, July 01, 2007 7:04 AM
To: anthony_raj@persistent.co.in
Cc: mod_python@modpython.org; rajeev.nair@gridstoneresearch.com
Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
mod_python.so: unsupported file layout

Usually these problems are caused through using the mod_python.so with
a version of Apache which is different to the version of Apache that
mod_python was compiled against. This can especially occur where you
have a standard OS installation of Apache but you try and use an
alternate version under /usr/local/ or elsewhere.

What options did you use with 'configure' when you ran it? Did the
compile line correctly pick up includes and libraries from the version
under /usr/local?

Graham

On 01/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> Hi Folks,
>
> Have come to the community with a new issue with regard to installing
mod_python on FreeBSD.
>
> Eariler had installed apache/mod_python on
> Suse 10 / 64 Arch.
> - Apache 2.2.4
> - mod_python 3.3.1
> - apr 1.2.8
> - apr-util 1.2.8
>
> problems -
> The issue with mod_python being installed in to locations.
> Managed to get it working on this setup sucessfully.
> ---
>
> Now I've installed the same configuration on
> Free BSD 6.1 32 Arch.
> >>>>
> FreeBSD perputo3.inetu.net 6.1-RELEASE-p3 FreeBSD 6.1-RELEASE-p3 #107: Mon
Nov  6 20:31:10 EST 2006     root@turnip.inetu.org:/usr/obj/usr/src/sys/INU6
i386
> >>>>
>
> Installation was completed successfully for all the above modules.
>
> But after adding the required configuration line -
> >>>
> LoadModule python_module modules/mod_python.so
> >>>
>
> And restarting apache , it throws the following error
> >>>>
> /usr/local/apache-ast>./bin/apachectl start
> httpd: Syntax error on line 54 of /usr/local/apache-ast/conf/httpd.conf:
Cannot load /usr/local/apache-ast/modules/mod_python.so into server:
/usr/local/apache-ast/modules/mod_python.so: unsupported file layout
>
> >>>>
>
> The required mod_python.so appears to be installed in
> /usr/local/apache-ast/modules directory.
>
> >>>>
> /usr/local/apache-ast>ls -l modules/
> total 1738
> -rw-r--r--  1 root  wheel     8951 Jun 29 10:19 httpd.exp
> -rwxr-xr-x  1 root  wheel  1739997 Jun 29 10:50 mod_python.so
>
> >>>>
>
> Have also added the following lines in the config file -
> >>>>
> <Directory "/usr/local/apache-ast/htdocs">
>       AddHandler mod_python .py
>       PythonHandler mod_python.publisher
>       PythonDebug On
> </Directory>
>
> >>>>
>
> Any one knows if there is any bug with mod_python installation on FreeBSD
6.1. Please let me know in case you there is anything that is missing in the
install steps.
>
> Or is there any port of mod_python for Free BSD that needs to be used
here.
>
> Please let me know your advice on the same.
>
> cheers,
> Anthony
>
> DISCLAIMER
> ==========
> This e-mail may contain privileged and confidential information which is
the property of Persistent Systems Pvt. Ltd. It is intended only for the use
of the individual or entity to which it is addressed. If you are not the
intended recipient, you are not authorized to read, retain, copy, print,
distribute or use this message. If you have received this communication in
error, please notify the sender and delete all copies of this message.
Persistent Systems Pvt. Ltd. does not accept any liability for virus
infected mails.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Pvt. Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Pvt. Ltd. does not accept any liability for virus infected mails.
From graham.dumpleton at gmail.com  Mon Jul  2 01:22:26 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul  2 01:22:32 2007
Subject: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
	mod_python.so: unsupported file layout
In-Reply-To: <CEABD77036C54B10B3BEE959321D84B6@persistent.co.in>
References: <20070630214248.BJQ07976@mail6.persistent.co.in>
	<88e286470706301833wbef8c28w95735075c8b06d7f@mail.gmail.com>
	<CEABD77036C54B10B3BEE959321D84B6@persistent.co.in>
Message-ID: <88e286470707012222u87a0e3eg91bd9f873d73f98a@mail.gmail.com>

Have you tried what Jeff suggested, which was to use the BSD ports
versions rather than build directly from your own source code?

Graham

On 02/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> Hi Graham,
>
> It ran correctly with the following configuration -
> No errors were detected while the linking any lib.
> Need to look carefully at the error generated.
> AFAIK , it got installed without lib related errors.
>
> -------
> 1.      Install apr 1.2.8
> Install Steps :
> ./configure --prefix=/local/apr-util-httpd --with-apr=/local/apr-httpd
> make
> make install
> ----
>
> 2. Install apr-util 1.2.8
>         - apr-util has bug for 64 bit Arch. Need to patch it first.
> http://www.weblogs.uhi.ac.uk/sm00ay/?p=196
> http://issues.apache.org/bugzilla/show_bug.cgi?id=28205
> Install Steps :
> ./configure --prefix=/local/apr-httpd
> make
> make install
> ----
>
> 3.      Install httpd 2.2.4
> Install Steps :
>
>         ./configure --prefix=/local/apache-ast --with-apr=/local/apr-httpd/
> --with-apr-util=/local/apr-util-httpd/
> make
> make install
> ----
>
> 4. Install mod_python 3.3.1
>         Install Steps:
>         ./configure --with-apxs=/local/apache-ast/bin/apxs
> make
> make install
> ----
>
> Cheers,
> Anthony
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Sunday, July 01, 2007 7:04 AM
> To: anthony_raj@persistent.co.in
> Cc: mod_python@modpython.org; rajeev.nair@gridstoneresearch.com
> Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
> mod_python.so: unsupported file layout
>
> Usually these problems are caused through using the mod_python.so with
> a version of Apache which is different to the version of Apache that
> mod_python was compiled against. This can especially occur where you
> have a standard OS installation of Apache but you try and use an
> alternate version under /usr/local/ or elsewhere.
>
> What options did you use with 'configure' when you ran it? Did the
> compile line correctly pick up includes and libraries from the version
> under /usr/local?
>
> Graham
>
> On 01/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> > Hi Folks,
> >
> > Have come to the community with a new issue with regard to installing
> mod_python on FreeBSD.
> >
> > Eariler had installed apache/mod_python on
> > Suse 10 / 64 Arch.
> > - Apache 2.2.4
> > - mod_python 3.3.1
> > - apr 1.2.8
> > - apr-util 1.2.8
> >
> > problems -
> > The issue with mod_python being installed in to locations.
> > Managed to get it working on this setup sucessfully.
> > ---
> >
> > Now I've installed the same configuration on
> > Free BSD 6.1 32 Arch.
> > >>>>
> > FreeBSD perputo3.inetu.net 6.1-RELEASE-p3 FreeBSD 6.1-RELEASE-p3 #107: Mon
> Nov  6 20:31:10 EST 2006     root@turnip.inetu.org:/usr/obj/usr/src/sys/INU6
> i386
> > >>>>
> >
> > Installation was completed successfully for all the above modules.
> >
> > But after adding the required configuration line -
> > >>>
> > LoadModule python_module modules/mod_python.so
> > >>>
> >
> > And restarting apache , it throws the following error
> > >>>>
> > /usr/local/apache-ast>./bin/apachectl start
> > httpd: Syntax error on line 54 of /usr/local/apache-ast/conf/httpd.conf:
> Cannot load /usr/local/apache-ast/modules/mod_python.so into server:
> /usr/local/apache-ast/modules/mod_python.so: unsupported file layout
> >
> > >>>>
> >
> > The required mod_python.so appears to be installed in
> > /usr/local/apache-ast/modules directory.
> >
> > >>>>
> > /usr/local/apache-ast>ls -l modules/
> > total 1738
> > -rw-r--r--  1 root  wheel     8951 Jun 29 10:19 httpd.exp
> > -rwxr-xr-x  1 root  wheel  1739997 Jun 29 10:50 mod_python.so
> >
> > >>>>
> >
> > Have also added the following lines in the config file -
> > >>>>
> > <Directory "/usr/local/apache-ast/htdocs">
> >       AddHandler mod_python .py
> >       PythonHandler mod_python.publisher
> >       PythonDebug On
> > </Directory>
> >
> > >>>>
> >
> > Any one knows if there is any bug with mod_python installation on FreeBSD
> 6.1. Please let me know in case you there is anything that is missing in the
> install steps.
> >
> > Or is there any port of mod_python for Free BSD that needs to be used
> here.
> >
> > Please let me know your advice on the same.
> >
> > cheers,
> > Anthony
> >
> > DISCLAIMER
> > ==========
> > This e-mail may contain privileged and confidential information which is
> the property of Persistent Systems Pvt. Ltd. It is intended only for the use
> of the individual or entity to which it is addressed. If you are not the
> intended recipient, you are not authorized to read, retain, copy, print,
> distribute or use this message. If you have received this communication in
> error, please notify the sender and delete all copies of this message.
> Persistent Systems Pvt. Ltd. does not accept any liability for virus
> infected mails.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
> DISCLAIMER
> ==========
> This e-mail may contain privileged and confidential information which is the property of Persistent Systems Pvt. Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Pvt. Ltd. does not accept any liability for virus infected mails.
>
From graham.dumpleton at gmail.com  Mon Jul  2 01:39:04 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul  2 01:39:10 2007
Subject: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
	mod_python.so: unsupported file layout
In-Reply-To: <001201c7bc69$72548c40$8801a8c0@gsr.com>
References: <5aaed53f0707010618q10124f27l17e3d2ff43576f2a@mail.gmail.com>
	<001201c7bc69$72548c40$8801a8c0@gsr.com>
Message-ID: <88e286470707012239n1b2dfed2t15e863e9e17d216@mail.gmail.com>

For more information on BSD ports, one can go to:

  http://www.freebsd.org/ports/

Graham

On 02/07/07, Rajeev Nair <rajeev.nair@gridstoneresearch.com> wrote:
> Hi Jeff,
>
> Thanks for the reply. We have installed apache from source files and thats
> how we always have been doing. Few questions:
> 1) So what exactly do you mean installing from ports? Is it something of an
> RPM equivalent for FreeBSD?
> 2)And do we need to install all the packages that we installed through
> source to be installed with ports again?
> 3)We already have two separate instances of apache already running on the
> server.
> 4)Will this installation affect that by any chance?
>
> We shall also appreciate if you could forward some links also that can help
> us expedite this issue soon.
>
> Regards,
> Rajeev
>
> -----Original Message-----
> From: dundeemt@gmail.com [mailto:dundeemt@gmail.com] On Behalf Of Jeff
> Hinrichs - DM&T
> Sent: Sunday, July 01, 2007 6:48 PM
> To: Graham Dumpleton
> Cc: anthony_raj@persistent.co.in; mod_python@modpython.org;
> rajeev.nair@gridstoneresearch.com
> Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
> mod_python.so: unsupported file layout
>
> On 6/30/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > Usually these problems are caused through using the mod_python.so with
> > a version of Apache which is different to the version of Apache that
> > mod_python was compiled against. This can especially occur where you
> > have a standard OS installation of Apache but you try and use an
> > alternate version under /usr/local/ or elsewhere.
> >
> > What options did you use with 'configure' when you ran it? Did the
> > compile line correctly pick up includes and libraries from the version
> > under /usr/local?
> >
> > Graham
> >
> > On 01/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> > > Hi Folks,
> > >
> > > Have come to the community with a new issue with regard to installing
> mod_python on FreeBSD.
> > >
> > > Eariler had installed apache/mod_python on
> > > Suse 10 / 64 Arch.
> > > - Apache 2.2.4
> > > - mod_python 3.3.1
> > > - apr 1.2.8
> > > - apr-util 1.2.8
> > >
> > > problems -
> > > The issue with mod_python being installed in to locations.
> > > Managed to get it working on this setup sucessfully.
> > > ---
> > >
> > > Now I've installed the same configuration on
> > > Free BSD 6.1 32 Arch.
> > > >>>>
> > > FreeBSD perputo3.inetu.net 6.1-RELEASE-p3 FreeBSD 6.1-RELEASE-p3 #107:
> Mon Nov  6 20:31:10 EST 2006
> root@turnip.inetu.org:/usr/obj/usr/src/sys/INU6  i386
> > > >>>>
> > >
> > > Installation was completed successfully for all the above modules.
> > >
> > > But after adding the required configuration line -
> > > >>>
> > > LoadModule python_module modules/mod_python.so
> > > >>>
> > >
> > > And restarting apache , it throws the following error
> > > >>>>
> > > /usr/local/apache-ast>./bin/apachectl start
> > > httpd: Syntax error on line 54 of /usr/local/apache-ast/conf/httpd.conf:
> Cannot load /usr/local/apache-ast/modules/mod_python.so into server:
> /usr/local/apache-ast/modules/mod_python.so: unsupported file layout
> > >
> > > >>>>
> > >
> > > The required mod_python.so appears to be installed in
> > > /usr/local/apache-ast/modules directory.
> > >
> > > >>>>
> > > /usr/local/apache-ast>ls -l modules/
> > > total 1738
> > > -rw-r--r--  1 root  wheel     8951 Jun 29 10:19 httpd.exp
> > > -rwxr-xr-x  1 root  wheel  1739997 Jun 29 10:50 mod_python.so
> > >
> > > >>>>
> > >
> > > Have also added the following lines in the config file -
> > > >>>>
> > > <Directory "/usr/local/apache-ast/htdocs">
> > >       AddHandler mod_python .py
> > >       PythonHandler mod_python.publisher
> > >       PythonDebug On
> > > </Directory>
> > >
> > > >>>>
> > >
> > > Any one knows if there is any bug with mod_python installation on
> FreeBSD 6.1. Please let me know in case you there is anything that is
> missing in the install steps.
> > >
>
> Have you installed apache, python and mod_python ALL from ports?  If
> not, make uninstall the lot and then install it via ports.  I've got
> mod_python installed on FreeBSD 5.x -> 6.2 all with out issue and
> without any fiddling.  Just install apache2 and python from ports,
> then build mod_python from ports.  If you installed apache2 from a
> tar-ball then that is most likely the source of your problems.
>
> -Jeff
>
>
From anthony_raj at persistent.co.in  Mon Jul  2 02:26:06 2007
From: anthony_raj at persistent.co.in (Anthony Raj)
Date: Mon Jul  2 02:25:44 2007
Subject: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
	mod_python.so: unsupported file layout
In-Reply-To: <88e286470707012222u87a0e3eg91bd9f873d73f98a@mail.gmail.com>
References: <20070630214248.BJQ07976@mail6.persistent.co.in>
	<88e286470706301833wbef8c28w95735075c8b06d7f@mail.gmail.com>
	<CEABD77036C54B10B3BEE959321D84B6@persistent.co.in>
	<88e286470707012222u87a0e3eg91bd9f873d73f98a@mail.gmail.com>
Message-ID: <FA2B26B0E66B455993EDA45CE44549DB@persistent.co.in>

Hi Graham / Jeff,

Yes have got the required Free BSD ports now - 

Apache 2.2.4
http://cvsweb.freebsd.org/ports/www/apache22/apache22.tar.gz?tarball=1

Python 2.4.2 / 2.4.4
http://cvsweb.freebsd.org/ports/lang/python24/python24.tar.gz?tarball=1

mod_python 3.3.1
http://cvsweb.freebsd.org/ports/www/mod_python3/mod_python3.tar.gz?tarball=1

apr 1.2.8
http://cvsweb.freebsd.org/ports/devel/apr/apr.tar.gz?tarball=1

----

I think we should be done after installation from ports.
Need to figure out the correct installation steps.

Thanks for your inputs so far !

Cheers,
Anthony

-----Original Message-----
From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com] 
Sent: Monday, July 02, 2007 10:52 AM
To: Anthony Raj
Cc: mod_python@modpython.org; rajeev.nair@gridstoneresearch.com
Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
mod_python.so: unsupported file layout

Have you tried what Jeff suggested, which was to use the BSD ports
versions rather than build directly from your own source code?

Graham

On 02/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> Hi Graham,
>
> It ran correctly with the following configuration -
> No errors were detected while the linking any lib.
> Need to look carefully at the error generated.
> AFAIK , it got installed without lib related errors.
>
> -------
> 1.      Install apr 1.2.8
> Install Steps :
> ./configure --prefix=/local/apr-util-httpd --with-apr=/local/apr-httpd
> make
> make install
> ----
>
> 2. Install apr-util 1.2.8
>         - apr-util has bug for 64 bit Arch. Need to patch it first.
> http://www.weblogs.uhi.ac.uk/sm00ay/?p=196
> http://issues.apache.org/bugzilla/show_bug.cgi?id=28205
> Install Steps :
> ./configure --prefix=/local/apr-httpd
> make
> make install
> ----
>
> 3.      Install httpd 2.2.4
> Install Steps :
>
>         ./configure --prefix=/local/apache-ast
--with-apr=/local/apr-httpd/
> --with-apr-util=/local/apr-util-httpd/
> make
> make install
> ----
>
> 4. Install mod_python 3.3.1
>         Install Steps:
>         ./configure --with-apxs=/local/apache-ast/bin/apxs
> make
> make install
> ----
>
> Cheers,
> Anthony
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Sunday, July 01, 2007 7:04 AM
> To: anthony_raj@persistent.co.in
> Cc: mod_python@modpython.org; rajeev.nair@gridstoneresearch.com
> Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
> mod_python.so: unsupported file layout
>
> Usually these problems are caused through using the mod_python.so with
> a version of Apache which is different to the version of Apache that
> mod_python was compiled against. This can especially occur where you
> have a standard OS installation of Apache but you try and use an
> alternate version under /usr/local/ or elsewhere.
>
> What options did you use with 'configure' when you ran it? Did the
> compile line correctly pick up includes and libraries from the version
> under /usr/local?
>
> Graham
>
> On 01/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> > Hi Folks,
> >
> > Have come to the community with a new issue with regard to installing
> mod_python on FreeBSD.
> >
> > Eariler had installed apache/mod_python on
> > Suse 10 / 64 Arch.
> > - Apache 2.2.4
> > - mod_python 3.3.1
> > - apr 1.2.8
> > - apr-util 1.2.8
> >
> > problems -
> > The issue with mod_python being installed in to locations.
> > Managed to get it working on this setup sucessfully.
> > ---
> >
> > Now I've installed the same configuration on
> > Free BSD 6.1 32 Arch.
> > >>>>
> > FreeBSD perputo3.inetu.net 6.1-RELEASE-p3 FreeBSD 6.1-RELEASE-p3 #107:
Mon
> Nov  6 20:31:10 EST 2006
root@turnip.inetu.org:/usr/obj/usr/src/sys/INU6
> i386
> > >>>>
> >
> > Installation was completed successfully for all the above modules.
> >
> > But after adding the required configuration line -
> > >>>
> > LoadModule python_module modules/mod_python.so
> > >>>
> >
> > And restarting apache , it throws the following error
> > >>>>
> > /usr/local/apache-ast>./bin/apachectl start
> > httpd: Syntax error on line 54 of /usr/local/apache-ast/conf/httpd.conf:
> Cannot load /usr/local/apache-ast/modules/mod_python.so into server:
> /usr/local/apache-ast/modules/mod_python.so: unsupported file layout
> >
> > >>>>
> >
> > The required mod_python.so appears to be installed in
> > /usr/local/apache-ast/modules directory.
> >
> > >>>>
> > /usr/local/apache-ast>ls -l modules/
> > total 1738
> > -rw-r--r--  1 root  wheel     8951 Jun 29 10:19 httpd.exp
> > -rwxr-xr-x  1 root  wheel  1739997 Jun 29 10:50 mod_python.so
> >
> > >>>>
> >
> > Have also added the following lines in the config file -
> > >>>>
> > <Directory "/usr/local/apache-ast/htdocs">
> >       AddHandler mod_python .py
> >       PythonHandler mod_python.publisher
> >       PythonDebug On
> > </Directory>
> >
> > >>>>
> >
> > Any one knows if there is any bug with mod_python installation on
FreeBSD
> 6.1. Please let me know in case you there is anything that is missing in
the
> install steps.
> >
> > Or is there any port of mod_python for Free BSD that needs to be used
> here.
> >
> > Please let me know your advice on the same.
> >
> > cheers,
> > Anthony
> >
> > DISCLAIMER
> > ==========
> > This e-mail may contain privileged and confidential information which is
> the property of Persistent Systems Pvt. Ltd. It is intended only for the
use
> of the individual or entity to which it is addressed. If you are not the
> intended recipient, you are not authorized to read, retain, copy, print,
> distribute or use this message. If you have received this communication in
> error, please notify the sender and delete all copies of this message.
> Persistent Systems Pvt. Ltd. does not accept any liability for virus
> infected mails.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
> DISCLAIMER
> ==========
> This e-mail may contain privileged and confidential information which is
the property of Persistent Systems Pvt. Ltd. It is intended only for the use
of the individual or entity to which it is addressed. If you are not the
intended recipient, you are not authorized to read, retain, copy, print,
distribute or use this message. If you have received this communication in
error, please notify the sender and delete all copies of this message.
Persistent Systems Pvt. Ltd. does not accept any liability for virus
infected mails.
>


DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Pvt. Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Pvt. Ltd. does not accept any liability for virus infected mails.
From anthony_raj at persistent.co.in  Mon Jul  2 08:31:22 2007
From: anthony_raj at persistent.co.in (Anthony Raj)
Date: Mon Jul  2 08:30:55 2007
Subject: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
	mod_python.so: unsupported file layout
In-Reply-To: <5aaed53f0707020517i555ef210gc016626de6ebe2b@mail.gmail.com>
References: <20070630214248.BJQ07976@mail6.persistent.co.in>
	<88e286470706301833wbef8c28w95735075c8b06d7f@mail.gmail.com>
	<CEABD77036C54B10B3BEE959321D84B6@persistent.co.in>
	<88e286470707012222u87a0e3eg91bd9f873d73f98a@mail.gmail.com>
	<FA2B26B0E66B455993EDA45CE44549DB@persistent.co.in>
	<5aaed53f0707020517i555ef210gc016626de6ebe2b@mail.gmail.com>
Message-ID: <3D1942C77DDA4224B377D2127EA45731@persistent.co.in>

Hi Jeff,

Your mail could not have come at a better timing.

Have been using the link that you mentioned in your mail since morning.


The constraint that we are working with is 
1. Not to use the default install locations.
2. Specify a install prefix for apache and mod_python

Have tried to use DESTDIR=/usr/local/apache-new

(http://www.freebsd.org/doc/en_US.ISO8859-1/books/porters-handbook/porting-p
refix.html)

prompt> cd /usr/ports/www/apache22
prompt> make

Basically since we are working on the production machine directly,
Its getting a bit difficult to know if its going to overwrite the
Existing installations (which is thru ports).

Question: How do I set a new installation directory for apache22 ?

Thanks in Advance ,
Cheers,
Anthony

-----Original Message-----
From: Jeff Hinrichs - DM&T [mailto:dundeemt@gmail.com] 
Sent: Monday, July 02, 2007 5:48 PM
To: Anthony Raj
Cc: Graham Dumpleton; mod_python@modpython.org;
rajeev.nair@gridstoneresearch.com
Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
mod_python.so: unsupported file layout

Anthony,

Ports are better than RPMs.  All of your questions are answered by the
FreeBSD handbook,
http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/ports-using.html
(hint: use portsnap)

Specific questions about FreeBSD would be best asked on that groups
list, but to get you started, it takes no special configuration or
flags to build everything you need from ports.  My other hint would be
portupgrade/portinstall  http://wiki.freebsd.org/portupgrade.

-Jeff

On 7/2/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> Hi Graham / Jeff,
>
> Yes have got the required Free BSD ports now -
>
> Apache 2.2.4
> http://cvsweb.freebsd.org/ports/www/apache22/apache22.tar.gz?tarball=1
>
> Python 2.4.2 / 2.4.4
> http://cvsweb.freebsd.org/ports/lang/python24/python24.tar.gz?tarball=1
>
> mod_python 3.3.1
>
http://cvsweb.freebsd.org/ports/www/mod_python3/mod_python3.tar.gz?tarball=1
>
> apr 1.2.8
> http://cvsweb.freebsd.org/ports/devel/apr/apr.tar.gz?tarball=1
>
> ----
>
> I think we should be done after installation from ports.
> Need to figure out the correct installation steps.
>
> Thanks for your inputs so far !
>
> Cheers,
> Anthony
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Monday, July 02, 2007 10:52 AM
> To: Anthony Raj
> Cc: mod_python@modpython.org; rajeev.nair@gridstoneresearch.com
> Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
> mod_python.so: unsupported file layout
>
> Have you tried what Jeff suggested, which was to use the BSD ports
> versions rather than build directly from your own source code?
>
> Graham
>
> On 02/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> > Hi Graham,
> >
> > It ran correctly with the following configuration -
> > No errors were detected while the linking any lib.
> > Need to look carefully at the error generated.
> > AFAIK , it got installed without lib related errors.
> >
> > -------
> > 1.      Install apr 1.2.8
> > Install Steps :
> > ./configure --prefix=/local/apr-util-httpd --with-apr=/local/apr-httpd
> > make
> > make install
> > ----
> >
> > 2. Install apr-util 1.2.8
> >         - apr-util has bug for 64 bit Arch. Need to patch it first.
> > http://www.weblogs.uhi.ac.uk/sm00ay/?p=196
> > http://issues.apache.org/bugzilla/show_bug.cgi?id=28205
> > Install Steps :
> > ./configure --prefix=/local/apr-httpd
> > make
> > make install
> > ----
> >
> > 3.      Install httpd 2.2.4
> > Install Steps :
> >
> >         ./configure --prefix=/local/apache-ast
> --with-apr=/local/apr-httpd/
> > --with-apr-util=/local/apr-util-httpd/
> > make
> > make install
> > ----
> >
> > 4. Install mod_python 3.3.1
> >         Install Steps:
> >         ./configure --with-apxs=/local/apache-ast/bin/apxs
> > make
> > make install
> > ----
> >
> > Cheers,
> > Anthony
> >
> > -----Original Message-----
> > From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> > Sent: Sunday, July 01, 2007 7:04 AM
> > To: anthony_raj@persistent.co.in
> > Cc: mod_python@modpython.org; rajeev.nair@gridstoneresearch.com
> > Subject: Re: [mod_python] mod_python on FreeBSD 6.1 gives Syntax error -
> > mod_python.so: unsupported file layout
> >
> > Usually these problems are caused through using the mod_python.so with
> > a version of Apache which is different to the version of Apache that
> > mod_python was compiled against. This can especially occur where you
> > have a standard OS installation of Apache but you try and use an
> > alternate version under /usr/local/ or elsewhere.
> >
> > What options did you use with 'configure' when you ran it? Did the
> > compile line correctly pick up includes and libraries from the version
> > under /usr/local?
> >
> > Graham
> >
> > On 01/07/07, Anthony Raj <anthony_raj@persistent.co.in> wrote:
> > > Hi Folks,
> > >
> > > Have come to the community with a new issue with regard to installing
> > mod_python on FreeBSD.
> > >
> > > Eariler had installed apache/mod_python on
> > > Suse 10 / 64 Arch.
> > > - Apache 2.2.4
> > > - mod_python 3.3.1
> > > - apr 1.2.8
> > > - apr-util 1.2.8
> > >
> > > problems -
> > > The issue with mod_python being installed in to locations.
> > > Managed to get it working on this setup sucessfully.
> > > ---
> > >
> > > Now I've installed the same configuration on
> > > Free BSD 6.1 32 Arch.
> > > >>>>
> > > FreeBSD perputo3.inetu.net 6.1-RELEASE-p3 FreeBSD 6.1-RELEASE-p3 #107:
> Mon
> > Nov  6 20:31:10 EST 2006
> root@turnip.inetu.org:/usr/obj/usr/src/sys/INU6
> > i386
> > > >>>>
> > >
> > > Installation was completed successfully for all the above modules.
> > >
> > > But after adding the required configuration line -
> > > >>>
> > > LoadModule python_module modules/mod_python.so
> > > >>>
> > >
> > > And restarting apache , it throws the following error
> > > >>>>
> > > /usr/local/apache-ast>./bin/apachectl start
> > > httpd: Syntax error on line 54 of
/usr/local/apache-ast/conf/httpd.conf:
> > Cannot load /usr/local/apache-ast/modules/mod_python.so into server:
> > /usr/local/apache-ast/modules/mod_python.so: unsupported file layout
> > >
> > > >>>>
> > >
> > > The required mod_python.so appears to be installed in
> > > /usr/local/apache-ast/modules directory.
> > >
> > > >>>>
> > > /usr/local/apache-ast>ls -l modules/
> > > total 1738
> > > -rw-r--r--  1 root  wheel     8951 Jun 29 10:19 httpd.exp
> > > -rwxr-xr-x  1 root  wheel  1739997 Jun 29 10:50 mod_python.so
> > >
> > > >>>>
> > >
> > > Have also added the following lines in the config file -
> > > >>>>
> > > <Directory "/usr/local/apache-ast/htdocs">
> > >       AddHandler mod_python .py
> > >       PythonHandler mod_python.publisher
> > >       PythonDebug On
> > > </Directory>
> > >
> > > >>>>
> > >
> > > Any one knows if there is any bug with mod_python installation on
> FreeBSD
> > 6.1. Please let me know in case you there is anything that is missing in
> the
> > install steps.
> > >
> > > Or is there any port of mod_python for Free BSD that needs to be used
> > here.
> > >
> > > Please let me know your advice on the same.
> > >
> > > cheers,
> > > Anthony
> > >
> > > DISCLAIMER
> > > ==========
> > > This e-mail may contain privileged and confidential information which
is
> > the property of Persistent Systems Pvt. Ltd. It is intended only for the
> use
> > of the individual or entity to which it is addressed. If you are not the
> > intended recipient, you are not authorized to read, retain, copy, print,
> > distribute or use this message. If you have received this communication
in
> > error, please notify the sender and delete all copies of this message.
> > Persistent Systems Pvt. Ltd. does not accept any liability for virus
> > infected mails.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> >
> > DISCLAIMER
> > ==========
> > This e-mail may contain privileged and confidential information which is
> the property of Persistent Systems Pvt. Ltd. It is intended only for the
use
> of the individual or entity to which it is addressed. If you are not the
> intended recipient, you are not authorized to read, retain, copy, print,
> distribute or use this message. If you have received this communication in
> error, please notify the sender and delete all copies of this message.
> Persistent Systems Pvt. Ltd. does not accept any liability for virus
> infected mails.
> >
>
>
> DISCLAIMER
> ==========
> This e-mail may contain privileged and confidential information which is
the property of Persistent Systems Pvt. Ltd. It is intended only for the use
of the individual or entity to which it is addressed. If you are not the
intended recipient, you are not authorized to read, retain, copy, print,
distribute or use this message. If you have received this communication in
error, please notify the sender and delete all copies of this message.
Persistent Systems Pvt. Ltd. does not accept any liability for virus
infected mails.
>


DISCLAIMER
==========
This e-mail may contain privileged and confidential information which is the property of Persistent Systems Pvt. Ltd. It is intended only for the use of the individual or entity to which it is addressed. If you are not the intended recipient, you are not authorized to read, retain, copy, print, distribute or use this message. If you have received this communication in error, please notify the sender and delete all copies of this message. Persistent Systems Pvt. Ltd. does not accept any liability for virus infected mails.
From mateusz at ant.gliwice.pl  Mon Jul  2 08:38:04 2007
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Mon Jul  2 08:37:48 2007
Subject: [mod_python] Translation toolkit.
Message-ID: <200707021438.04369.mateusz@ant.gliwice.pl>

How do You translate mod_python apps to other languages ?
TIA
-- 
Mateusz Korniak
From njvsny at yahoo.com  Mon Jul  2 15:44:36 2007
From: njvsny at yahoo.com (Hristo Asenov)
Date: Mon Jul  2 15:44:54 2007
Subject: [mod_python] unable to get publisher handler working
Message-ID: <404559.38026.qm@web37901.mail.mud.yahoo.com>

Hello, I installed mod_python recently and got the mptest example from the Documentation book working. However, I want to have user input capabilities and get forms working. I think that it is working, but unfortunately my form is not going to the right place. I am able to see the script working when I manually go to
http://localhost/form.py/trial?command=hello
however when I post using the form provided in the example, the url goes to
http://localhost/form.py/trial%22 
if I have "POST" as a method of posting and it is 
http://localhost/form.py/trial%22?command=hello
if I have a "GET" as a method of posting. Does someone know what I am doing wrong? Here is the url: http://ecks.homeunix.net/form.html.

       
---------------------------------
Choose the right car based on your needs.  Check out Yahoo! Autos new Car Finder tool.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070702/95229bb0/attachment.html
From njvsny at yahoo.com  Mon Jul  2 17:54:17 2007
From: njvsny at yahoo.com (Hristo Asenov)
Date: Mon Jul  2 17:54:25 2007
Subject: [mod_python] unable to get publisher handler working
In-Reply-To: <404559.38026.qm@web37901.mail.mud.yahoo.com>
Message-ID: <623465.31899.qm@web37906.mail.mud.yahoo.com>

actually, i just got it working, i didn't have the html formatted right i think.

Hristo Asenov <njvsny@yahoo.com> wrote: Hello, I installed mod_python recently and got the mptest example from the Documentation book working. However, I want to have user input capabilities and get forms working. I think that it is working, but unfortunately my form is not going to the right place. I am able to see the script working when I manually go to
http://localhost/form.py/trial?command=hello
however when I post using the form provided in the example, the url goes to
http://localhost/form.py/trial%22 
if I have "POST" as a method of posting and it is 
http://localhost/form.py/trial%22?command=hello
if I have a "GET" as a method of posting. Does someone know what I am doing wrong? Here is the url: http://ecks.homeunix.net/form.html.
        

---------------------------------
Choose the right car based on your needs.   Check out Yahoo! Autos new Car Finder tool. _______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


       
---------------------------------
Need a vacation? Get great deals to amazing places on Yahoo! Travel. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070702/598be4fd/attachment.html
From graham.dumpleton at gmail.com  Mon Jul  2 17:58:47 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul  2 17:58:55 2007
Subject: [mod_python] unable to get publisher handler working
In-Reply-To: <404559.38026.qm@web37901.mail.mud.yahoo.com>
References: <404559.38026.qm@web37901.mail.mud.yahoo.com>
Message-ID: <88e286470707021458n7bd4a8adga2172b5f37519173@mail.gmail.com>

Post to the list your HTML form. Would look like you have a simple
typo in the form.

Graham

On 03/07/07, Hristo Asenov <njvsny@yahoo.com> wrote:
> Hello, I installed mod_python recently and got the mptest example from the
> Documentation book working. However, I want to have user input capabilities
> and get forms working. I think that it is working, but unfortunately my form
> is not going to the right place. I am able to see the script working when I
> manually go to
> http://localhost/form.py/trial?command=hello
> however when I post using the form provided in the example, the url goes to
> http://localhost/form.py/trial%22
> if I have "POST" as a method of posting and it is
> http://localhost/form.py/trial%22?command=hello
> if I have a "GET" as a method of posting. Does someone know what I am doing
> wrong? Here is the url: http://ecks.homeunix.net/form.html.
>
>
>  ________________________________
> Choose the right car based on your needs. Check out Yahoo! Autos new Car
> Finder tool.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From sliderw at hotmail.com  Mon Jul  2 23:02:59 2007
From: sliderw at hotmail.com (sliderw hotmail)
Date: Mon Jul  2 23:03:11 2007
Subject: [mod_python] Can't get a 206 (partial content) response
Message-ID: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>

I have this PythonHandler running on Apache 2.2.2 with mod_python 3.3.1:

def handler(req):
    req.headers_out["Content-Range"] = "bytes 0-9/1234"
    req.set_content_length(10)
    req.write("x" * 10)
    return apache.HTTP_PARTIAL_CONTENT

When I hit the URL, I expect the HTTP response code to be 206, but it is 
actually 200.

Am I doing something wrong?

_________________________________________________________________
http://newlivehotmail.com

From graham.dumpleton at gmail.com  Mon Jul  2 23:11:56 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul  2 23:12:00 2007
Subject: [mod_python] Can't get a 206 (partial content) response
In-Reply-To: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>
References: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>
Message-ID: <88e286470707022011q7887a000x394d598cc479cba9@mail.gmail.com>

On 03/07/07, sliderw hotmail <sliderw@hotmail.com> wrote:
> I have this PythonHandler running on Apache 2.2.2 with mod_python 3.3.1:
>
> def handler(req):
>     req.headers_out["Content-Range"] = "bytes 0-9/1234"
>     req.set_content_length(10)
>     req.write("x" * 10)
>     return apache.HTTP_PARTIAL_CONTENT
>
> When I hit the URL, I expect the HTTP response code to be 206, but it is
> actually 200.
>
> Am I doing something wrong?

Use:

  def handler(req):
      req.status = apache.HTTP_PARTIAL_CONTENT
      req.headers_out["Content-Range"] = "bytes 0-9/1234"
      req.set_content_length(10)
      req.write("x" * 10)
      return apache.OK

Calling req.write() flushes the response code and headers, so need to
supply status through req.status.

Graham
From nlv11281 at natlab.research.philips.com  Tue Jul  3 01:34:15 2007
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Jul  3 01:34:31 2007
Subject: [mod_python] streaming tar and/or zip files?
In-Reply-To: <e94d85500706291341g177ca66j694567652f252de9@mail.gmail.com>
References: <e94d85500706291341g177ca66j694567652f252de9@mail.gmail.com>
Message-ID: <4689DFD7.60902@natlab.research.philips.com>

The "tarfile" built-in Python module can do as you ask, and also do compression (gzip or bzip2). ZIP 
cannot be "streamed", it has a sort of directory table inside to which it jumps up and down.

You can just open a tarfile object with the req object as file output.

Setting content-type to "application/x-tar" or something similar will help your client figuring out 
what to do with the file.

I've used the tarfile module with archives over 800GB in size, without problems.


Mike Looijmans
Philips Natlab / Topic Automation


Matthew Dennis wrote:
> This may not be the appropriate list, my apologies if that is indeed the 
> case...
> 
> I need to push from mod_python a file archive of sorts.  Any of tar, 
> tar.gz or zip will work (I'm also open to other suggestions).  The 
> requirement is that I can package several other "files" into it, 
> compressed or not.  I have no disk to write to and finite memory to deal 
> with but the "files" I'm outputting are quite large (much larger than 
> can fit in memory), thus I need to stream them directly out.  The reason 
> I put "files" in quotes is because they are not really files, but 
> dynamic content that is generated on the fly.  ZipOutputStream from Java 
> is a example of what I'm talking about if anyone is familiar with it, as 
> are other such streams.  I don't know the size of the content until 
> after it is all generated so there is no way to populate a TarInfo 
> object with the size et cetera and make my dynamic content look like a 
> file (which it doesn't seem I can do anyway as gettarinfo() tries to 
> call .fileno() which doesn't exist on any file like object I would create).
> 
> In other words, something like:
> 
> output = TarFileStream(someFileObj)
> 
> output.addEntry("file_1.txt")
> out.write( /*some dynamically generated content */ )
> out.write( /*some dynamically generated content */ )
> out.write( /*some dynamically generated content */ )
> 
> output.addEntry("file_2.txt")
> out.write( /*some dynamically generated content */ )
> out.write( /*some dynamically generated content */ )
> out.write( /*some dynamically generated content */ )
> 
> ...
> 
> output.addEntry("file_N.txt")
> out.write( /*some dynamically generated content */ )
> out.write( /*some dynamically generated content */ )
> out.write( /*some dynamically generated content */ )
> 
> output.close()
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From trueice at gmail.com  Tue Jul  3 02:03:21 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 02:03:29 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
Message-ID: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>

Our project has a live HTTP video streamer written in python, which keeps
pumping a stream out to the client.
The HTTP serving module is a simple mod_python request handler running on
Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
The stream is read out of our streaming server via TCP socket, and the
python script just do some simple processing like header building, each
allocated buffer is del-ed after being used.

The problem is:
We observed that after its running serveral hours, its memory occupation
grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
increment every 1-2 seconds.

Below is a simple testing scriptlet, the memory leaking issue is not so
serious as our live serving module, but you can still observe 4k memory
growing every serveral seconds.

Could anyone help me to figure out the root cause of this issue?

--------------------------
import time

def pump_file(req):
    while(True):
        fp = open("/dev/zero", "r")
        buf = fp.read(4096)
        try:
            req.write(buf)
            del buf
            time.sleep(0.1)
        except:
            fp.close()
            break

---------------------------------------


-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/b4d482ad/attachment.html
From graham.dumpleton at gmail.com  Tue Jul  3 02:11:03 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 02:11:14 2007
Subject: [mod_python] Can't get a 206 (partial content) response
In-Reply-To: <729753ee0707022306h45e0462agb36ae39d15d8eb2e@mail.gmail.com>
References: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>
	<88e286470707022011q7887a000x394d598cc479cba9@mail.gmail.com>
	<729753ee0707022306h45e0462agb36ae39d15d8eb2e@mail.gmail.com>
Message-ID: <88e286470707022311r145b731bmc861d44dfba8c847@mail.gmail.com>

On 03/07/07, yubing <trueice@gmail.com> wrote:
> BTW, how can I send a HTTP/1.0 response via a request handler ? the default
> is HTTP/1.1 :)
> thanks

What exactly do you mean? Are you simply wanting to disable keep
alive, or something more?

Please use reply-all to keep discussion in mailing list.

Graham

> On 7/3/07, Graham Dumpleton < graham.dumpleton@gmail.com> wrote:
> >
> > On 03/07/07, sliderw hotmail < sliderw@hotmail.com> wrote:
> > > I have this PythonHandler running on Apache 2.2.2 with mod_python 3.3.1:
> > >
> > > def handler(req):
> > >     req.headers_out["Content-Range"] = "bytes 0-9/1234"
> > >     req.set_content_length(10)
> > >     req.write("x" * 10)
> > >     return apache.HTTP_PARTIAL_CONTENT
> > >
> > > When I hit the URL, I expect the HTTP response code to be 206, but it is
> > > actually 200.
> > >
> > > Am I doing something wrong?
> >
> > Use:
> >
> >   def handler(req):
> >       req.status = apache.HTTP_PARTIAL_CONTENT
> >       req.headers_out["Content-Range"] = "bytes 0-9/1234"
> >       req.set_content_length(10)
> >       req.write("x" * 10)
> >       return apache.OK
> >
> > Calling req.write() flushes the response code and headers, so need to
> > supply status through req.status.
> >
> > Graham
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
>
> --
> truly yours
> ice
From trueice at gmail.com  Tue Jul  3 02:22:33 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 02:22:39 2007
Subject: [mod_python] Re: mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
Message-ID: <729753ee0707022322k68d1f60co9103acd3fa8a6dbf@mail.gmail.com>

I've observed that, Apache will automatically convert the transfer-encoding
to chunked upon a HTTP/1.1 response without content-length specified. Is
there any known memory issue with chunked-encoding?

thanks a lot~


On 7/3/07, yubing <trueice@gmail.com> wrote:
>
> Our project has a live HTTP video streamer written in python, which keeps
> pumping a stream out to the client.
> The HTTP serving module is a simple mod_python request handler running on
> Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> The stream is read out of our streaming server via TCP socket, and the
> python script just do some simple processing like header building, each
> allocated buffer is del-ed after being used.
>
> The problem is:
> We observed that after its running serveral hours, its memory occupation
> grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
> increment every 1-2 seconds.
>
> Below is a simple testing scriptlet, the memory leaking issue is not so
> serious as our live serving module, but you can still observe 4k memory
> growing every serveral seconds.
>
> Could anyone help me to figure out the root cause of this issue?
>
> --------------------------
> import time
>
> def pump_file(req):
>     while(True):
>         fp = open("/dev/zero", "r")
>         buf = fp.read(4096)
>         try:
>             req.write(buf)
>             del buf
>             time.sleep(0.1)
>         except:
>             fp.close()
>             break
>
> ---------------------------------------
>
>
> --
> truly yours
> ice




-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/75011e82/attachment.html
From graham.dumpleton at gmail.com  Tue Jul  3 02:56:51 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 02:56:58 2007
Subject: [mod_python] Re: mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707022322k68d1f60co9103acd3fa8a6dbf@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<729753ee0707022322k68d1f60co9103acd3fa8a6dbf@mail.gmail.com>
Message-ID: <88e286470707022356u393dad72jeec6cfc84b79ce27@mail.gmail.com>

To turn off keep alive and thus chunked output, try:

  req.connection.keepalive = apache.AP_CONN_CLOSE

before you start writing any response data.

Graham

On 03/07/07, yubing <trueice@gmail.com> wrote:
> I've observed that, Apache will automatically convert the transfer-encoding
> to chunked upon a HTTP/1.1 response without content-length specified. Is
> there any known memory issue with chunked-encoding?
>
> thanks a lot~
>
>
>
> On 7/3/07, yubing <trueice@gmail.com> wrote:
> > Our project has a live HTTP video streamer written in python, which keeps
> pumping a stream out to the client.
> > The HTTP serving module is a simple mod_python request handler running on
> Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > The stream is read out of our streaming server via TCP socket, and the
> python script just do some simple processing like header building, each
> allocated buffer is del-ed after being used.
> >
> > The problem is:
> > We observed that after its running serveral hours, its memory occupation
> grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
> increment every 1-2 seconds.
> >
> > Below is a simple testing scriptlet, the memory leaking issue is not so
> serious as our live serving module, but you can still observe 4k memory
> growing every serveral seconds.
> >
> > Could anyone help me to figure out the root cause of this issue?
> >
> > --------------------------
> > import time
> >
> > def pump_file(req):
> >     while(True):
> >         fp = open("/dev/zero", "r")
> >         buf = fp.read(4096)
> >         try:
> >             req.write(buf)
> >             del buf
> >             time.sleep(0.1)
> >         except:
> >             fp.close()
> >             break
> >
> > ---------------------------------------
> >
> >
> > --
> > truly yours
> > ice
>
>
>
> --
> truly yours
> ice
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Tue Jul  3 03:03:40 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 03:03:47 2007
Subject: [mod_python] Re: mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707022356u393dad72jeec6cfc84b79ce27@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<729753ee0707022322k68d1f60co9103acd3fa8a6dbf@mail.gmail.com>
	<88e286470707022356u393dad72jeec6cfc84b79ce27@mail.gmail.com>
Message-ID: <88e286470707030003n256876e1k1f797a829b13574d@mail.gmail.com>

Hmm, that will not actually work as mod_python doesn't make the
attribute writable like it should.

May have to set it off for whole server by setting in Apache configuration:

  KeepAlive Off

Graham

On 03/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> To turn off keep alive and thus chunked output, try:
>
>   req.connection.keepalive = apache.AP_CONN_CLOSE
>
> before you start writing any response data.
>
> Graham
>
> On 03/07/07, yubing <trueice@gmail.com> wrote:
> > I've observed that, Apache will automatically convert the transfer-encoding
> > to chunked upon a HTTP/1.1 response without content-length specified. Is
> > there any known memory issue with chunked-encoding?
> >
> > thanks a lot~
> >
> >
> >
> > On 7/3/07, yubing <trueice@gmail.com> wrote:
> > > Our project has a live HTTP video streamer written in python, which keeps
> > pumping a stream out to the client.
> > > The HTTP serving module is a simple mod_python request handler running on
> > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > > The stream is read out of our streaming server via TCP socket, and the
> > python script just do some simple processing like header building, each
> > allocated buffer is del-ed after being used.
> > >
> > > The problem is:
> > > We observed that after its running serveral hours, its memory occupation
> > grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
> > increment every 1-2 seconds.
> > >
> > > Below is a simple testing scriptlet, the memory leaking issue is not so
> > serious as our live serving module, but you can still observe 4k memory
> > growing every serveral seconds.
> > >
> > > Could anyone help me to figure out the root cause of this issue?
> > >
> > > --------------------------
> > > import time
> > >
> > > def pump_file(req):
> > >     while(True):
> > >         fp = open("/dev/zero", "r")
> > >         buf = fp.read(4096)
> > >         try:
> > >             req.write(buf)
> > >             del buf
> > >             time.sleep(0.1)
> > >         except:
> > >             fp.close()
> > >             break
> > >
> > > ---------------------------------------
> > >
> > >
> > > --
> > > truly yours
> > > ice
> >
> >
> >
> > --
> > truly yours
> > ice
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
From trueice at gmail.com  Tue Jul  3 03:13:14 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 03:13:21 2007
Subject: [mod_python] Can't get a 206 (partial content) response
In-Reply-To: <88e286470707022311r145b731bmc861d44dfba8c847@mail.gmail.com>
References: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>
	<88e286470707022011q7887a000x394d598cc479cba9@mail.gmail.com>
	<729753ee0707022306h45e0462agb36ae39d15d8eb2e@mail.gmail.com>
	<88e286470707022311r145b731bmc861d44dfba8c847@mail.gmail.com>
Message-ID: <729753ee0707030013r2e3cbe17t7865d7fb0b48832b@mail.gmail.com>

I'm doing flv streaming to the flash player, it seems that the player
refuses to play multiple chunked streams (>2).
To avoid this, I have to set the response code to HTTP/1.0, and that works
fine with php scriptlets with:

header("HTTP/1.0 200 OK");

for mod_python, I have to set apache's env like this
<Location /live>
      SetEnv downgrade-1.0
      SetEnv force-response-1.0
</Location>

Is there any solution to send HTTP/1.0 response in mod_python ?

thanks:)

On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> On 03/07/07, yubing <trueice@gmail.com> wrote:
> > BTW, how can I send a HTTP/1.0 response via a request handler ? the
> default
> > is HTTP/1.1 :)
> > thanks
>
> What exactly do you mean? Are you simply wanting to disable keep
> alive, or something more?
>
> Please use reply-all to keep discussion in mailing list.
>
> Graham
>
> > On 7/3/07, Graham Dumpleton < graham.dumpleton@gmail.com> wrote:
> > >
> > > On 03/07/07, sliderw hotmail < sliderw@hotmail.com> wrote:
> > > > I have this PythonHandler running on Apache 2.2.2 with mod_python
> 3.3.1:
> > > >
> > > > def handler(req):
> > > >     req.headers_out["Content-Range"] = "bytes 0-9/1234"
> > > >     req.set_content_length(10)
> > > >     req.write("x" * 10)
> > > >     return apache.HTTP_PARTIAL_CONTENT
> > > >
> > > > When I hit the URL, I expect the HTTP response code to be 206, but
> it is
> > > > actually 200.
> > > >
> > > > Am I doing something wrong?
> > >
> > > Use:
> > >
> > >   def handler(req):
> > >       req.status = apache.HTTP_PARTIAL_CONTENT
> > >       req.headers_out["Content-Range"] = "bytes 0-9/1234"
> > >       req.set_content_length(10)
> > >       req.write("x" * 10)
> > >       return apache.OK
> > >
> > > Calling req.write() flushes the response code and headers, so need to
> > > supply status through req.status.
> > >
> > > Graham
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> >
> >
> > --
> > truly yours
> > ice
>



-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/441eea82/attachment.html
From trueice at gmail.com  Tue Jul  3 03:17:55 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 03:18:05 2007
Subject: [mod_python] Re: mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707030003n256876e1k1f797a829b13574d@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<729753ee0707022322k68d1f60co9103acd3fa8a6dbf@mail.gmail.com>
	<88e286470707022356u393dad72jeec6cfc84b79ce27@mail.gmail.com>
	<88e286470707030003n256876e1k1f797a829b13574d@mail.gmail.com>
Message-ID: <729753ee0707030017x5f9d849cp20301d44236b05d1@mail.gmail.com>

It seems the memory usage still keeps going up :P

And if I run the test program in command line (without mod_python, just pump
the stream to a local file), the memory usage doesn't grow :)


On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> Hmm, that will not actually work as mod_python doesn't make the
> attribute writable like it should.
>
> May have to set it off for whole server by setting in Apache
> configuration:
>
>   KeepAlive Off
>
> Graham
>
> On 03/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > To turn off keep alive and thus chunked output, try:
> >
> >   req.connection.keepalive = apache.AP_CONN_CLOSE
> >
> > before you start writing any response data.
> >
> > Graham
> >
> > On 03/07/07, yubing <trueice@gmail.com> wrote:
> > > I've observed that, Apache will automatically convert the
> transfer-encoding
> > > to chunked upon a HTTP/1.1 response without content-length specified.
> Is
> > > there any known memory issue with chunked-encoding?
> > >
> > > thanks a lot~
> > >
> > >
> > >
> > > On 7/3/07, yubing <trueice@gmail.com> wrote:
> > > > Our project has a live HTTP video streamer written in python, which
> keeps
> > > pumping a stream out to the client.
> > > > The HTTP serving module is a simple mod_python request handler
> running on
> > > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > > > The stream is read out of our streaming server via TCP socket, and
> the
> > > python script just do some simple processing like header building,
> each
> > > allocated buffer is del-ed after being used.
> > > >
> > > > The problem is:
> > > > We observed that after its running serveral hours, its memory
> occupation
> > > grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
> > > increment every 1-2 seconds.
> > > >
> > > > Below is a simple testing scriptlet, the memory leaking issue is not
> so
> > > serious as our live serving module, but you can still observe 4k
> memory
> > > growing every serveral seconds.
> > > >
> > > > Could anyone help me to figure out the root cause of this issue?
> > > >
> > > > --------------------------
> > > > import time
> > > >
> > > > def pump_file(req):
> > > >     while(True):
> > > >         fp = open("/dev/zero", "r")
> > > >         buf = fp.read(4096)
> > > >         try:
> > > >             req.write(buf)
> > > >             del buf
> > > >             time.sleep(0.1)
> > > >         except:
> > > >             fp.close()
> > > >             break
> > > >
> > > > ---------------------------------------
> > > >
> > > >
> > > > --
> > > > truly yours
> > > > ice
> > >
> > >
> > >
> > > --
> > > truly yours
> > > ice
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> >
>



-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/64a0bef9/attachment-0001.html
From nlv11281 at natlab.research.philips.com  Tue Jul  3 03:39:24 2007
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Jul  3 03:39:36 2007
Subject: [mod_python] Can't get a 206 (partial content) response
In-Reply-To: <729753ee0707030013r2e3cbe17t7865d7fb0b48832b@mail.gmail.com>
References: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>	<88e286470707022011q7887a000x394d598cc479cba9@mail.gmail.com>	<729753ee0707022306h45e0462agb36ae39d15d8eb2e@mail.gmail.com>	<88e286470707022311r145b731bmc861d44dfba8c847@mail.gmail.com>
	<729753ee0707030013r2e3cbe17t7865d7fb0b48832b@mail.gmail.com>
Message-ID: <4689FD2C.6010300@natlab.research.philips.com>

For most streaming clients, a simple workaround to disable chunking is to set a Content-Length of 
some arbitrary large number (2GB or so), and add the "Connection: Close" header to the output. Most 
streaming players will accept this. The length will be ignored by the media player anyway.

If the device really wants the HTTP/1.0 in the header, you can change the httpd.conf file of Apache 
to force output to 1.0 for certain client strings. I don't recall the particulars, but there was 
example code in the default config file in apache 2.

Mike Looijmans
Philips Natlab / Topic Automation


yubing wrote:
> I'm doing flv streaming to the flash player, it seems that the player 
> refuses to play multiple chunked streams (>2).
> To avoid this, I have to set the response code to HTTP/1.0, and that 
> works fine with php scriptlets with:
> 
> header("HTTP/1.0 200 OK");
> 
> for mod_python, I have to set apache's env like this
> <Location /live>
>       SetEnv downgrade-1.0
>       SetEnv force-response-1.0
> </Location>
> 
> Is there any solution to send HTTP/1.0 response in mod_python ?


From graham.dumpleton at gmail.com  Tue Jul  3 04:19:31 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 04:19:38 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
Message-ID: <88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>

On 03/07/07, yubing <trueice@gmail.com> wrote:
> Our project has a live HTTP video streamer written in python, which keeps
> pumping a stream out to the client.
> The HTTP serving module is a simple mod_python request handler running on
> Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> The stream is read out of our streaming server via TCP socket, and the
> python script just do some simple processing like header building, each
> allocated buffer is del-ed after being used.
>
> The problem is:
> We observed that after its running serveral hours, its memory occupation
> grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
> increment every 1-2 seconds.
>
> Below is a simple testing scriptlet, the memory leaking issue is not so
> serious as our live serving module, but you can still observe 4k memory
> growing every serveral seconds.
>
> Could anyone help me to figure out the root cause of this issue?
>
> --------------------------
> import time
>
> def pump_file(req):
>     while(True):
>         fp = open("/dev/zero", "r")
>         buf = fp.read(4096)
>         try:
>             req.write(buf)
>             del buf
>             time.sleep(0.1)
>         except:
>             fp.close()
>             break

BTW, you do realise that you open the file in the loop when it should
be outside.

Graham
From trueice at gmail.com  Tue Jul  3 07:22:34 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 07:22:40 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
Message-ID: <729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>

oh, sorry, that's my typo in the mail, it should have been:
------------------------------
def pump_file(req):
    fp = open("/dev/zero", "r")
    while(True):
        buf = fp.read(4096)
        try:
            req.write(buf)
            time.sleep(0.1)
        except:
            fp.close()
            break
-------------------------------
you can still observe the memory going up slowly
BTW: I'm using the prefork mpm of apache

On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> On 03/07/07, yubing <trueice@gmail.com> wrote:
> > Our project has a live HTTP video streamer written in python, which
> keeps
> > pumping a stream out to the client.
> > The HTTP serving module is a simple mod_python request handler running
> on
> > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > The stream is read out of our streaming server via TCP socket, and the
> > python script just do some simple processing like header building, each
> > allocated buffer is del-ed after being used.
> >
> > The problem is:
> > We observed that after its running serveral hours, its memory occupation
> > grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
> > increment every 1-2 seconds.
> >
> > Below is a simple testing scriptlet, the memory leaking issue is not so
> > serious as our live serving module, but you can still observe 4k memory
> > growing every serveral seconds.
> >
> > Could anyone help me to figure out the root cause of this issue?
> >
> > --------------------------
> > import time
> >
> > def pump_file(req):
> >     while(True):
> >         fp = open("/dev/zero", "r")
> >         buf = fp.read(4096)
> >         try:
> >             req.write(buf)
> >             del buf
> >             time.sleep(0.1)
> >         except:
> >             fp.close()
> >             break
>
> BTW, you do realise that you open the file in the loop when it should
> be outside.
>
> Graham
>



-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/a6c8cf61/attachment.html
From graham.dumpleton at gmail.com  Tue Jul  3 07:56:27 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 07:56:35 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
Message-ID: <88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>

All I can say is that is simply how Apache works. It is not a problem
with mod_python. To try and explain it, look at simpler code of
ap_rflush() which is one of two Apache functions called when you call
req.write().

AP_DECLARE(int) ap_rflush(request_rec *r)
{
    conn_rec *c = r->connection;
    apr_bucket_brigade *bb;
    apr_bucket *b;

    bb = apr_brigade_create(r->pool, c->bucket_alloc);
    b = apr_bucket_flush_create(c->bucket_alloc);
    APR_BRIGADE_INSERT_TAIL(bb, b);
    if (ap_pass_brigade(r->output_filters, bb) != APR_SUCCESS)
        return -1;

    return 0;
}

The important thing here is r->pool. This is a memory pool which
exists for the life of a request. When you allocate memory from the
memory pool, it will only be reclaimed at the end of the request. Ie.,
it isn't like malloc/free where you can give back a block of memory
using free and it will be reusable straight away.

Now, every time a flush is occurring, it needs to create a bucket
brigade which holds a special flush object. This is then passed down
through the output filters. In this case it causes any pending data to
be flushed out.

Now because the memory for those bucket structures is only reclaimed
at the end of the request, it means if you have a very long running
request which outputs data in small blocks, then there will be an
incremental use of memory because of the need to create the bucket
structures. This memory will be unavailable for use by anything else
until the requests ends.

FWIW, I didn't realise Apache did this either. I can see there are
potentially good reasons for it being done this way, but still was a
surprise.

Graham

On 03/07/07, yubing <trueice@gmail.com> wrote:
> oh, sorry, that's my typo in the mail, it should have been:
> ------------------------------
> def pump_file(req):
>     fp = open("/dev/zero", "r")
>     while(True):
>         buf = fp.read(4096)
>         try:
>             req.write(buf)
>             time.sleep(0.1)
>         except:
>             fp.close()
>             break
> -------------------------------
> you can still observe the memory going up slowly
> BTW: I'm using the prefork mpm of apache
>
> On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com > wrote:
> > On 03/07/07, yubing <trueice@gmail.com > wrote:
> > > Our project has a live HTTP video streamer written in python, which
> keeps
> > > pumping a stream out to the client.
> > > The HTTP serving module is a simple mod_python request handler running
> on
> > > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > > The stream is read out of our streaming server via TCP socket, and the
> > > python script just do some simple processing like header building, each
> > > allocated buffer is del-ed after being used.
> > >
> > > The problem is:
> > > We observed that after its running serveral hours, its memory occupation
> > > grows up to serveral hundreds of megabytes and keeps growing in 4k-8k
> > > increment every 1-2 seconds.
> > >
> > > Below is a simple testing scriptlet, the memory leaking issue is not so
> > > serious as our live serving module, but you can still observe 4k memory
> > > growing every serveral seconds.
> > >
> > > Could anyone help me to figure out the root cause of this issue?
> > >
> > > --------------------------
> > > import time
> > >
> > > def pump_file(req):
> > >     while(True):
> > >         fp = open("/dev/zero", "r")
> > >         buf = fp.read(4096)
> > >         try:
> > >             req.write(buf)
> > >             del buf
> > >             time.sleep(0.1)
> > >         except:
> > >             fp.close()
> > >             break
> >
> > BTW, you do realise that you open the file in the loop when it should
> > be outside.
> >
> > Graham
> >
>
>
>
> --
> truly yours
> ice
From trueice at gmail.com  Tue Jul  3 07:58:39 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 07:58:47 2007
Subject: [mod_python] Can't get a 206 (partial content) response
In-Reply-To: <4689FD2C.6010300@natlab.research.philips.com>
References: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>
	<88e286470707022011q7887a000x394d598cc479cba9@mail.gmail.com>
	<729753ee0707022306h45e0462agb36ae39d15d8eb2e@mail.gmail.com>
	<88e286470707022311r145b731bmc861d44dfba8c847@mail.gmail.com>
	<729753ee0707030013r2e3cbe17t7865d7fb0b48832b@mail.gmail.com>
	<4689FD2C.6010300@natlab.research.philips.com>
Message-ID: <729753ee0707030458i785486c2x9929b7a42fb28522@mail.gmail.com>

yes, the Firefox flash player plugin only supports 2GB content-length,
beyond that, it will refuse to play the stream.
However, we want longer stream (maybe infinite) to monitor our streaming
server :)
Maybe we should try RTMP in the near future:)

On 7/3/07, Mike Looijmans <nlv11281@natlab.research.philips.com> wrote:
>
> For most streaming clients, a simple workaround to disable chunking is to
> set a Content-Length of
> some arbitrary large number (2GB or so), and add the "Connection: Close"
> header to the output. Most
> streaming players will accept this. The length will be ignored by the
> media player anyway.
>
> If the device really wants the HTTP/1.0 in the header, you can change the
> httpd.conf file of Apache
> to force output to 1.0 for certain client strings. I don't recall the
> particulars, but there was
> example code in the default config file in apache 2.
>
> Mike Looijmans
> Philips Natlab / Topic Automation
>
>
> yubing wrote:
> > I'm doing flv streaming to the flash player, it seems that the player
> > refuses to play multiple chunked streams (>2).
> > To avoid this, I have to set the response code to HTTP/1.0, and that
> > works fine with php scriptlets with:
> >
> > header("HTTP/1.0 200 OK");
> >
> > for mod_python, I have to set apache's env like this
> > <Location /live>
> >       SetEnv downgrade-1.0
> >       SetEnv force-response-1.0
> > </Location>
> >
> > Is there any solution to send HTTP/1.0 response in mod_python ?
>
>
>


-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/f066d0b9/attachment.html
From trueice at gmail.com  Tue Jul  3 08:15:22 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 08:15:28 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
Message-ID: <729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>

That's great of you:)
I've tried a php scriptlet that pumps file to user, it has the same memory
behavior as the python pumper.
The pooled allocated memory will only be released when the apache thread
exits (reaches the MaxRequestsPerChild).

However, our streaming code's memory usage(VmRSS) grows too fast in one
request (maybe 16k per second).
Is mod_python using such pooled allocation mechanisms during one request ?

On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> All I can say is that is simply how Apache works. It is not a problem
> with mod_python. To try and explain it, look at simpler code of
> ap_rflush() which is one of two Apache functions called when you call
> req.write().
>
> AP_DECLARE(int) ap_rflush(request_rec *r)
> {
>     conn_rec *c = r->connection;
>     apr_bucket_brigade *bb;
>     apr_bucket *b;
>
>     bb = apr_brigade_create(r->pool, c->bucket_alloc);
>     b = apr_bucket_flush_create(c->bucket_alloc);
>     APR_BRIGADE_INSERT_TAIL(bb, b);
>     if (ap_pass_brigade(r->output_filters, bb) != APR_SUCCESS)
>         return -1;
>
>     return 0;
> }
>
> The important thing here is r->pool. This is a memory pool which
> exists for the life of a request. When you allocate memory from the
> memory pool, it will only be reclaimed at the end of the request. Ie.,
> it isn't like malloc/free where you can give back a block of memory
> using free and it will be reusable straight away.
>
> Now, every time a flush is occurring, it needs to create a bucket
> brigade which holds a special flush object. This is then passed down
> through the output filters. In this case it causes any pending data to
> be flushed out.
>
> Now because the memory for those bucket structures is only reclaimed
> at the end of the request, it means if you have a very long running
> request which outputs data in small blocks, then there will be an
> incremental use of memory because of the need to create the bucket
> structures. This memory will be unavailable for use by anything else
> until the requests ends.
>
> FWIW, I didn't realise Apache did this either. I can see there are
> potentially good reasons for it being done this way, but still was a
> surprise.
>
> Graham
>
> On 03/07/07, yubing <trueice@gmail.com> wrote:
> > oh, sorry, that's my typo in the mail, it should have been:
> > ------------------------------
> > def pump_file(req):
> >     fp = open("/dev/zero", "r")
> >     while(True):
> >         buf = fp.read(4096)
> >         try:
> >             req.write(buf)
> >             time.sleep(0.1)
> >         except:
> >             fp.close()
> >             break
> > -------------------------------
> > you can still observe the memory going up slowly
> > BTW: I'm using the prefork mpm of apache
> >
> > On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com > wrote:
> > > On 03/07/07, yubing <trueice@gmail.com > wrote:
> > > > Our project has a live HTTP video streamer written in python, which
> > keeps
> > > > pumping a stream out to the client.
> > > > The HTTP serving module is a simple mod_python request handler
> running
> > on
> > > > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > > > The stream is read out of our streaming server via TCP socket, and
> the
> > > > python script just do some simple processing like header building,
> each
> > > > allocated buffer is del-ed after being used.
> > > >
> > > > The problem is:
> > > > We observed that after its running serveral hours, its memory
> occupation
> > > > grows up to serveral hundreds of megabytes and keeps growing in
> 4k-8k
> > > > increment every 1-2 seconds.
> > > >
> > > > Below is a simple testing scriptlet, the memory leaking issue is not
> so
> > > > serious as our live serving module, but you can still observe 4k
> memory
> > > > growing every serveral seconds.
> > > >
> > > > Could anyone help me to figure out the root cause of this issue?
> > > >
> > > > --------------------------
> > > > import time
> > > >
> > > > def pump_file(req):
> > > >     while(True):
> > > >         fp = open("/dev/zero", "r")
> > > >         buf = fp.read(4096)
> > > >         try:
> > > >             req.write(buf)
> > > >             del buf
> > > >             time.sleep(0.1)
> > > >         except:
> > > >             fp.close()
> > > >             break
> > >
> > > BTW, you do realise that you open the file in the loop when it should
> > > be outside.
> > >
> > > Graham
> > >
> >
> >
> >
> > --
> > truly yours
> > ice
>



-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/66eb0645/attachment-0001.html
From graham.dumpleton at gmail.com  Tue Jul  3 08:22:39 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 08:22:46 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
Message-ID: <88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>

On 03/07/07, yubing <trueice@gmail.com> wrote:
> That's great of you:)
> I've tried a php scriptlet that pumps file to user, it has the same memory
> behavior as the python pumper.
> The pooled allocated memory will only be released when the apache thread
> exits (reaches the MaxRequestsPerChild).

No. The pool here is associated with the particular request, not the
whole process. So would be released and available for use at the end
of the request. Nothing to do with MaxRequestsPerChild.

> However, our streaming code's memory usage(VmRSS) grows too fast in one
> request (maybe 16k per second).
> Is mod_python using such pooled allocation mechanisms during one request ?

Not sure what to suggest at the moment bar having it on a different
port or host and using a custom Python web server for just that one
task.

I can only presume that this problem exists because mod_python is
using a high level API for writing response data. It is quite possible
if writing a custom C handler that if one used the bucket API directly
then one could control it better and ensure that bucket structures
released straight away after data flushed.

Anyway, mod_wsgi suffers the same problem, so I might have to dig into
the lower level bucket API for a solution so I can at least make
mod_wsgi work properly. From that, might understand how to fix
mod_python.

Sleep time for me now, but maybe I'll come up with some bright idea
during the night. :-)

Graham

>  On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > All I can say is that is simply how Apache works. It is not a problem
> > with mod_python. To try and explain it, look at simpler code of
> > ap_rflush() which is one of two Apache functions called when you call
> > req.write ().
> >
> > AP_DECLARE(int) ap_rflush(request_rec *r)
> > {
> >     conn_rec *c = r->connection;
> >     apr_bucket_brigade *bb;
> >     apr_bucket *b;
> >
> >     bb = apr_brigade_create(r->pool, c->bucket_alloc);
> >     b = apr_bucket_flush_create(c->bucket_alloc);
> >     APR_BRIGADE_INSERT_TAIL(bb, b);
> >     if (ap_pass_brigade(r->output_filters, bb) !=
> APR_SUCCESS)
> >         return -1;
> >
> >     return 0;
> > }
> >
> > The important thing here is r->pool. This is a memory pool which
> > exists for the life of a request. When you allocate memory from the
> > memory pool, it will only be reclaimed at the end of the request. Ie.,
> > it isn't like malloc/free where you can give back a block of memory
> > using free and it will be reusable straight away.
> >
> > Now, every time a flush is occurring, it needs to create a bucket
> > brigade which holds a special flush object. This is then passed down
> > through the output filters. In this case it causes any pending data to
> > be flushed out.
> >
> > Now because the memory for those bucket structures is only reclaimed
> > at the end of the request, it means if you have a very long running
> > request which outputs data in small blocks, then there will be an
> > incremental use of memory because of the need to create the bucket
> > structures. This memory will be unavailable for use by anything else
> > until the requests ends.
> >
> > FWIW, I didn't realise Apache did this either. I can see there are
> > potentially good reasons for it being done this way, but still was a
> > surprise.
> >
> > Graham
> >
> > On 03/07/07, yubing <trueice@gmail.com> wrote:
> > > oh, sorry, that's my typo in the mail, it should have been:
> > > ------------------------------
> > > def pump_file(req):
> > >     fp = open("/dev/zero", "r")
> > >     while(True):
> > >         buf = fp.read(4096)
> > >         try:
> > >             req.write(buf)
> > >             time.sleep(0.1)
> > >         except:
> > >             fp.close()
> > >             break
> > > -------------------------------
> > > you can still observe the memory going up slowly
> > > BTW: I'm using the prefork mpm of apache
> > >
> > > On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com > wrote:
> > > > On 03/07/07, yubing < trueice@gmail.com > wrote:
> > > > > Our project has a live HTTP video streamer written in python, which
> > > keeps
> > > > > pumping a stream out to the client.
> > > > > The HTTP serving module is a simple mod_python request handler
> running
> > > on
> > > > > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > > > > The stream is read out of our streaming server via TCP socket, and
> the
> > > > > python script just do some simple processing like header building,
> each
> > > > > allocated buffer is del-ed after being used.
> > > > >
> > > > > The problem is:
> > > > > We observed that after its running serveral hours, its memory
> occupation
> > > > > grows up to serveral hundreds of megabytes and keeps growing in
> 4k-8k
> > > > > increment every 1-2 seconds.
> > > > >
> > > > > Below is a simple testing scriptlet, the memory leaking issue is not
> so
> > > > > serious as our live serving module, but you can still observe 4k
> memory
> > > > > growing every serveral seconds.
> > > > >
> > > > > Could anyone help me to figure out the root cause of this issue?
> > > > >
> > > > > --------------------------
> > > > > import time
> > > > >
> > > > > def pump_file(req):
> > > > >     while(True):
> > > > >         fp = open("/dev/zero", "r")
> > > > >         buf = fp.read(4096)
> > > > >         try:
> > > > >             req.write(buf)
> > > > >             del buf
> > > > >             time.sleep(0.1)
> > > > >         except:
> > > > >             fp.close()
> > > > >             break
> > > >
> > > > BTW, you do realise that you open the file in the loop when it should
> > > > be outside.
> > > >
> > > > Graham
> > > >
> > >
> > >
> > >
> > > --
> > > truly yours
> > > ice
> >
>
>
>
> --
> truly yours
> ice
From trueice at gmail.com  Tue Jul  3 08:37:15 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 08:37:24 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
Message-ID: <729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>

On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> On 03/07/07, yubing <trueice@gmail.com> wrote:
> > That's great of you:)
> > I've tried a php scriptlet that pumps file to user, it has the same
> memory
> > behavior as the python pumper.
> > The pooled allocated memory will only be released when the apache thread
> > exits (reaches the MaxRequestsPerChild).
>
> No. The pool here is associated with the particular request, not the
> whole process. So would be released and available for use at the end
> of the request. Nothing to do with MaxRequestsPerChild.


When the http client exits, the allocated pool memory of that process will
not be reclaimed, you can observe that on both python and php streamers:)
The only chance to return that memory to the system may be the time the
apache thread itself exits.

> However, our streaming code's memory usage(VmRSS) grows too fast in one
> > request (maybe 16k per second).
> > Is mod_python using such pooled allocation mechanisms during one request
> ?
>
> Not sure what to suggest at the moment bar having it on a different
> port or host and using a custom Python web server for just that one
> task.


Anyhow, it's clear that ap_rflush is the root cause of this memory leak,
maybe we should find a new API for this (maybe we should also add a new
method to the request_object ).

I can only presume that this problem exists because mod_python is
> using a high level API for writing response data. It is quite possible
> if writing a custom C handler that if one used the bucket API directly
> then one could control it better and ensure that bucket structures
> released straight away after data flushed.


agreed:)

Anyway, mod_wsgi suffers the same problem, so I might have to dig into
> the lower level bucket API for a solution so I can at least make
> mod_wsgi work properly. From that, might understand how to fix
> mod_python.


Will lighttpd be a better choice? I'll try it later:)

Sleep time for me now, but maybe I'll come up with some bright idea
> during the night. :-)
>
> Graham
>
> >  On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > > All I can say is that is simply how Apache works. It is not a problem
> > > with mod_python. To try and explain it, look at simpler code of
> > > ap_rflush() which is one of two Apache functions called when you call
> > > req.write ().
> > >
> > > AP_DECLARE(int) ap_rflush(request_rec *r)
> > > {
> > >     conn_rec *c = r->connection;
> > >     apr_bucket_brigade *bb;
> > >     apr_bucket *b;
> > >
> > >     bb = apr_brigade_create(r->pool, c->bucket_alloc);
> > >     b = apr_bucket_flush_create(c->bucket_alloc);
> > >     APR_BRIGADE_INSERT_TAIL(bb, b);
> > >     if (ap_pass_brigade(r->output_filters, bb) !=
> > APR_SUCCESS)
> > >         return -1;
> > >
> > >     return 0;
> > > }
> > >
> > > The important thing here is r->pool. This is a memory pool which
> > > exists for the life of a request. When you allocate memory from the
> > > memory pool, it will only be reclaimed at the end of the request. Ie.,
> > > it isn't like malloc/free where you can give back a block of memory
> > > using free and it will be reusable straight away.
> > >
> > > Now, every time a flush is occurring, it needs to create a bucket
> > > brigade which holds a special flush object. This is then passed down
> > > through the output filters. In this case it causes any pending data to
> > > be flushed out.
> > >
> > > Now because the memory for those bucket structures is only reclaimed
> > > at the end of the request, it means if you have a very long running
> > > request which outputs data in small blocks, then there will be an
> > > incremental use of memory because of the need to create the bucket
> > > structures. This memory will be unavailable for use by anything else
> > > until the requests ends.
> > >
> > > FWIW, I didn't realise Apache did this either. I can see there are
> > > potentially good reasons for it being done this way, but still was a
> > > surprise.
> > >
> > > Graham
> > >
> > > On 03/07/07, yubing <trueice@gmail.com> wrote:
> > > > oh, sorry, that's my typo in the mail, it should have been:
> > > > ------------------------------
> > > > def pump_file(req):
> > > >     fp = open("/dev/zero", "r")
> > > >     while(True):
> > > >         buf = fp.read(4096)
> > > >         try:
> > > >             req.write(buf)
> > > >             time.sleep(0.1)
> > > >         except:
> > > >             fp.close()
> > > >             break
> > > > -------------------------------
> > > > you can still observe the memory going up slowly
> > > > BTW: I'm using the prefork mpm of apache
> > > >
> > > > On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com > wrote:
> > > > > On 03/07/07, yubing < trueice@gmail.com > wrote:
> > > > > > Our project has a live HTTP video streamer written in python,
> which
> > > > keeps
> > > > > > pumping a stream out to the client.
> > > > > > The HTTP serving module is a simple mod_python request handler
> > running
> > > > on
> > > > > > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > > > > > The stream is read out of our streaming server via TCP socket,
> and
> > the
> > > > > > python script just do some simple processing like header
> building,
> > each
> > > > > > allocated buffer is del-ed after being used.
> > > > > >
> > > > > > The problem is:
> > > > > > We observed that after its running serveral hours, its memory
> > occupation
> > > > > > grows up to serveral hundreds of megabytes and keeps growing in
> > 4k-8k
> > > > > > increment every 1-2 seconds.
> > > > > >
> > > > > > Below is a simple testing scriptlet, the memory leaking issue is
> not
> > so
> > > > > > serious as our live serving module, but you can still observe 4k
> > memory
> > > > > > growing every serveral seconds.
> > > > > >
> > > > > > Could anyone help me to figure out the root cause of this issue?
> > > > > >
> > > > > > --------------------------
> > > > > > import time
> > > > > >
> > > > > > def pump_file(req):
> > > > > >     while(True):
> > > > > >         fp = open("/dev/zero", "r")
> > > > > >         buf = fp.read(4096)
> > > > > >         try:
> > > > > >             req.write(buf)
> > > > > >             del buf
> > > > > >             time.sleep(0.1)
> > > > > >         except:
> > > > > >             fp.close()
> > > > > >             break
> > > > >
> > > > > BTW, you do realise that you open the file in the loop when it
> should
> > > > > be outside.
> > > > >
> > > > > Graham
> > > > >
> > > >
> > > >
> > > >
> > > > --
> > > > truly yours
> > > > ice
> > >
> >
> >
> >
> > --
> > truly yours
> > ice
>



-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/a80e32e9/attachment.html
From trueice at gmail.com  Tue Jul  3 08:53:44 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 08:53:52 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
	<729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
Message-ID: <729753ee0707030553n2f0f4b19r464621328bea645d@mail.gmail.com>

On 7/3/07, yubing <trueice@gmail.com> wrote:
>
>
> On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> >
> > On 03/07/07, yubing <trueice@gmail.com> wrote:
> > > That's great of you:)
> > > I've tried a php scriptlet that pumps file to user, it has the same
> > memory
> > > behavior as the python pumper.
> > > The pooled allocated memory will only be released when the apache
> > thread
> > > exits (reaches the MaxRequestsPerChild).
> >
> > No. The pool here is associated with the particular request, not the
> > whole process. So would be released and available for use at the end
> > of the request. Nothing to do with MaxRequestsPerChild.
>
>
> When the http client exits, the allocated pool memory of that process will
> not be reclaimed, you can observe that on both python and php streamers:)
> The only chance to return that memory to the system may be the time the
> apache thread itself exits.
>

oh, here to be accurate: the memory will be returned to the pool after one
request ends, and the pool will keep growing when another requests exceed
its size, and only be returned to the system when the process ends :)

> However, our streaming code's memory usage(VmRSS) grows too fast in one
> > > request (maybe 16k per second).
> > > Is mod_python using such pooled allocation mechanisms during one
> > request ?
> >
> > Not sure what to suggest at the moment bar having it on a different
> > port or host and using a custom Python web server for just that one
> > task.
>
>
> Anyhow, it's clear that ap_rflush is the root cause of this memory leak,
> maybe we should find a new API for this (maybe we should also add a new
> method to the request_object ).
>
> I can only presume that this problem exists because mod_python is
> > using a high level API for writing response data. It is quite possible
> > if writing a custom C handler that if one used the bucket API directly
> > then one could control it better and ensure that bucket structures
> > released straight away after data flushed.
>
>
> agreed:)
>
> Anyway, mod_wsgi suffers the same problem, so I might have to dig into
> > the lower level bucket API for a solution so I can at least make
> > mod_wsgi work properly. From that, might understand how to fix
> > mod_python.
>
>
> Will lighttpd be a better choice? I'll try it later:)
>
> Sleep time for me now, but maybe I'll come up with some bright idea
> > during the night. :-)
> >
> > Graham
> >
> > >  On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com > wrote:
> > > > All I can say is that is simply how Apache works. It is not a
> > problem
> > > > with mod_python. To try and explain it, look at simpler code of
> > > > ap_rflush() which is one of two Apache functions called when you
> > call
> > > > req.write ().
> > > >
> > > > AP_DECLARE(int) ap_rflush(request_rec *r)
> > > > {
> > > >     conn_rec *c = r->connection;
> > > >     apr_bucket_brigade *bb;
> > > >     apr_bucket *b;
> > > >
> > > >     bb = apr_brigade_create(r->pool, c->bucket_alloc);
> > > >     b = apr_bucket_flush_create(c->bucket_alloc);
> > > >     APR_BRIGADE_INSERT_TAIL(bb, b);
> > > >     if (ap_pass_brigade(r->output_filters, bb) !=
> > > APR_SUCCESS)
> > > >         return -1;
> > > >
> > > >     return 0;
> > > > }
> > > >
> > > > The important thing here is r->pool. This is a memory pool which
> > > > exists for the life of a request. When you allocate memory from the
> > > > memory pool, it will only be reclaimed at the end of the request.
> > Ie.,
> > > > it isn't like malloc/free where you can give back a block of memory
> > > > using free and it will be reusable straight away.
> > > >
> > > > Now, every time a flush is occurring, it needs to create a bucket
> > > > brigade which holds a special flush object. This is then passed down
> > > > through the output filters. In this case it causes any pending data
> > to
> > > > be flushed out.
> > > >
> > > > Now because the memory for those bucket structures is only reclaimed
> > > > at the end of the request, it means if you have a very long running
> > > > request which outputs data in small blocks, then there will be an
> > > > incremental use of memory because of the need to create the bucket
> > > > structures. This memory will be unavailable for use by anything else
> > > > until the requests ends.
> > > >
> > > > FWIW, I didn't realise Apache did this either. I can see there are
> > > > potentially good reasons for it being done this way, but still was a
> > > > surprise.
> > > >
> > > > Graham
> > > >
> > > > On 03/07/07, yubing < trueice@gmail.com> wrote:
> > > > > oh, sorry, that's my typo in the mail, it should have been:
> > > > > ------------------------------
> > > > > def pump_file(req):
> > > > >     fp = open("/dev/zero", "r")
> > > > >     while(True):
> > > > >         buf = fp.read(4096)
> > > > >         try:
> > > > >             req.write(buf)
> > > > >             time.sleep(0.1)
> > > > >         except:
> > > > >             fp.close()
> > > > >             break
> > > > > -------------------------------
> > > > > you can still observe the memory going up slowly
> > > > > BTW: I'm using the prefork mpm of apache
> > > > >
> > > > > On 7/3/07, Graham Dumpleton <graham.dumpleton@gmail.com > wrote:
> > > > > > On 03/07/07, yubing < trueice@gmail.com > wrote:
> > > > > > > Our project has a live HTTP video streamer written in python,
> > which
> > > > > keeps
> > > > > > > pumping a stream out to the client.
> > > > > > > The HTTP serving module is a simple mod_python request handler
> > > running
> > > > > on
> > > > > > > Apache 2.2.4 with mod_python 3.3.1 (Python 2.5.1).
> > > > > > > The stream is read out of our streaming server via TCP socket,
> > and
> > > the
> > > > > > > python script just do some simple processing like header
> > building,
> > > each
> > > > > > > allocated buffer is del-ed after being used.
> > > > > > >
> > > > > > > The problem is:
> > > > > > > We observed that after its running serveral hours, its memory
> > > occupation
> > > > > > > grows up to serveral hundreds of megabytes and keeps growing
> > in
> > > 4k-8k
> > > > > > > increment every 1-2 seconds.
> > > > > > >
> > > > > > > Below is a simple testing scriptlet, the memory leaking issue
> > is not
> > > so
> > > > > > > serious as our live serving module, but you can still observe
> > 4k
> > > memory
> > > > > > > growing every serveral seconds.
> > > > > > >
> > > > > > > Could anyone help me to figure out the root cause of this
> > issue?
> > > > > > >
> > > > > > > --------------------------
> > > > > > > import time
> > > > > > >
> > > > > > > def pump_file(req):
> > > > > > >     while(True):
> > > > > > >         fp = open("/dev/zero", "r")
> > > > > > >         buf = fp.read(4096)
> > > > > > >         try:
> > > > > > >             req.write(buf)
> > > > > > >             del buf
> > > > > > >             time.sleep(0.1)
> > > > > > >         except:
> > > > > > >             fp.close()
> > > > > > >             break
> > > > > >
> > > > > > BTW, you do realise that you open the file in the loop when it
> > should
> > > > > > be outside.
> > > > > >
> > > > > > Graham
> > > > > >
> > > > >
> > > > >
> > > > >
> > > > > --
> > > > > truly yours
> > > > > ice
> > > >
> > >
> > >
> > >
> > > --
> > > truly yours
> > > ice
> >
>
>
>
> --
> truly yours
> ice




-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070703/34618bee/attachment-0001.html
From nlv11281 at natlab.research.philips.com  Tue Jul  3 09:56:47 2007
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Jul  3 09:56:58 2007
Subject: [mod_python] Can't get a 206 (partial content) response
In-Reply-To: <729753ee0707030458i785486c2x9929b7a42fb28522@mail.gmail.com>
References: <BAY103-F18BD903270A77886A49AC7BD0C0@phx.gbl>	
	<88e286470707022011q7887a000x394d598cc479cba9@mail.gmail.com>	
	<729753ee0707022306h45e0462agb36ae39d15d8eb2e@mail.gmail.com>	
	<88e286470707022311r145b731bmc861d44dfba8c847@mail.gmail.com>	
	<729753ee0707030013r2e3cbe17t7865d7fb0b48832b@mail.gmail.com>	
	<4689FD2C.6010300@natlab.research.philips.com>
	<729753ee0707030458i785486c2x9929b7a42fb28522@mail.gmail.com>
Message-ID: <468A559F.2030609@natlab.research.philips.com>

Just lie. There is no check on the content-length actually being correct, so you can set it to "1" 
and still pump out a terabyte stream. I've done that with a few embedded players, worked just fine.

--
Mike Looijmans
Philips Natlab / Topic Automation


yubing wrote:
> yes, the Firefox flash player plugin only supports 2GB content-length, 
> beyond that, it will refuse to play the stream.
> However, we want longer stream (maybe infinite) to monitor our streaming 
> server :)
> Maybe we should try RTMP in the near future:)


From graham.dumpleton at gmail.com  Tue Jul  3 19:04:14 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 19:04:23 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
	<729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
Message-ID: <88e286470707031604l3718e500obf74612cc91e46a8@mail.gmail.com>

On 03/07/07, yubing <trueice@gmail.com> wrote:
> Anyhow, it's clear that ap_rflush is the root cause of this memory leak,
> maybe we should find a new API for this (maybe we should also add a new
> method to the request_object ).

It is not just ap_rflush() but also ap_rwrite(), as it is also using
the request pool.

To avoid the problem would mean creating a separate pool just for the
one operation and for the buckets to be allocated from that, with the
pool destroyed at the end of the call.

Unfortunately it isn't perhaps quite as simple as that though. This is
because one can only use a separate pool if you know the buckets would
be used up and no longer required after the call. When doing a flush
this may be the case, but need to check. Definitely not the case if
not doing a flush though.

Graham
From graham.dumpleton at gmail.com  Tue Jul  3 22:43:45 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 22:43:51 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707031604l3718e500obf74612cc91e46a8@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
	<729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
	<88e286470707031604l3718e500obf74612cc91e46a8@mail.gmail.com>
Message-ID: <88e286470707031943q18536809xe3b00ed09701c622@mail.gmail.com>

On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> On 03/07/07, yubing <trueice@gmail.com> wrote:
> > Anyhow, it's clear that ap_rflush is the root cause of this memory leak,
> > maybe we should find a new API for this (maybe we should also add a new
> > method to the request_object ).
>
> It is not just ap_rflush() but also ap_rwrite(), as it is also using
> the request pool.
>
> To avoid the problem would mean creating a separate pool just for the
> one operation and for the buckets to be allocated from that, with the
> pool destroyed at the end of the call.
>
> Unfortunately it isn't perhaps quite as simple as that though. This is
> because one can only use a separate pool if you know the buckets would
> be used up and no longer required after the call. When doing a flush
> this may be the case, but need to check. Definitely not the case if
> not doing a flush though.

Okay, I'm confused now. The bucket functions aren't supposed to be
allocating memory out of the resource pool.

/**
 * Create a new bucket brigade.  The bucket brigade is originally empty.
 * @param p The pool to associate with the brigade.  Data is not allocated out
 *          of the pool, but a cleanup is registered.
 * @param list The bucket allocator to use
 * @return The empty bucket brigade
 */
APU_DECLARE(apr_bucket_brigade *) apr_brigade_create(apr_pool_t *p,
                                                     apr_bucket_alloc_t *list);

Ie., it takes buckets from a bucket list, to which buckets are
returned for reuse when the bucket brigade is no longer needed at the
completion of the operation.

The only reason the request pool is required is so that the bucket
brigade can be cleaned up automatically if the code forgets to
explicitly destroy it before the request is over.

So, looks like I have some more research to do to understand all this. :-(

Graham
From graham.dumpleton at gmail.com  Tue Jul  3 23:55:56 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul  3 23:56:03 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707031943q18536809xe3b00ed09701c622@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
	<729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
	<88e286470707031604l3718e500obf74612cc91e46a8@mail.gmail.com>
	<88e286470707031943q18536809xe3b00ed09701c622@mail.gmail.com>
Message-ID: <88e286470707032055m2df2b848qd64b2e740c71ec55@mail.gmail.com>

On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > On 03/07/07, yubing <trueice@gmail.com> wrote:
> > > Anyhow, it's clear that ap_rflush is the root cause of this memory leak,
> > > maybe we should find a new API for this (maybe we should also add a new
> > > method to the request_object ).
> >
> > It is not just ap_rflush() but also ap_rwrite(), as it is also using
> > the request pool.
> >
> > To avoid the problem would mean creating a separate pool just for the
> > one operation and for the buckets to be allocated from that, with the
> > pool destroyed at the end of the call.
> >
> > Unfortunately it isn't perhaps quite as simple as that though. This is
> > because one can only use a separate pool if you know the buckets would
> > be used up and no longer required after the call. When doing a flush
> > this may be the case, but need to check. Definitely not the case if
> > not doing a flush though.
>
> Okay, I'm confused now. The bucket functions aren't supposed to be
> allocating memory out of the resource pool.
>
> /**
>  * Create a new bucket brigade.  The bucket brigade is originally empty.
>  * @param p The pool to associate with the brigade.  Data is not allocated out
>  *          of the pool, but a cleanup is registered.
>  * @param list The bucket allocator to use
>  * @return The empty bucket brigade
>  */
> APU_DECLARE(apr_bucket_brigade *) apr_brigade_create(apr_pool_t *p,
>                                                      apr_bucket_alloc_t *list);
>
> Ie., it takes buckets from a bucket list, to which buckets are
> returned for reuse when the bucket brigade is no longer needed at the
> completion of the operation.
>
> The only reason the request pool is required is so that the bucket
> brigade can be cleaned up automatically if the code forgets to
> explicitly destroy it before the request is over.
>
> So, looks like I have some more research to do to understand all this. :-(

Understand now. The buckets themselves are reused, but the bucket
brigade object is not. Thus for each ap_rwrite()/ap_rflush() memory
will increase still because of the bucket brigade object. What is also
odd is that the bucket brigade isn't even notionally destroyed,
meaning that the cleanup handler isn't killed off and would appear to
hang around until the end of the request at which point it would be
called. If you have lots of bucket brigade objects created, that could
be a lot of cleanup handlers needing to be killed.

Anyway, I will not post any more on this. I'll work out a solution for
mod_wsgi and then create a JIRA issue for mod_python describing what
might be done for mod_python when we get around to doing more changes
to it.

Graham
From trueice at gmail.com  Tue Jul  3 23:56:36 2007
From: trueice at gmail.com (yubing)
Date: Tue Jul  3 23:56:43 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707031943q18536809xe3b00ed09701c622@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
	<729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
	<88e286470707031604l3718e500obf74612cc91e46a8@mail.gmail.com>
	<88e286470707031943q18536809xe3b00ed09701c622@mail.gmail.com>
Message-ID: <729753ee0707032056l77c3c737mb45c2f7c6afa9f74@mail.gmail.com>

Now, the python streamer only issue one flush about every 30 frames, the
memory usage grows very slow:)

Maybe Apache is too complicated for me, its default output filters requires
the buckets and brigades.

apr_brigade_create does actually do the pool allocation:

APU_DECLARE(apr_bucket_brigade *) apr_brigade_create(apr_pool_t *p,
                                                     apr_bucket_alloc_t
*list)
{
    apr_bucket_brigade *b;

    b = apr_palloc(p, sizeof(*b));
    b->p = p;
    b->bucket_alloc = list;

    APR_RING_INIT(&b->list, apr_bucket, link);

    apr_pool_cleanup_register(b->p, b, brigade_cleanup,
apr_pool_cleanup_null);
    return b;
}



On 7/4/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > On 03/07/07, yubing <trueice@gmail.com> wrote:
> > > Anyhow, it's clear that ap_rflush is the root cause of this memory
> leak,
> > > maybe we should find a new API for this (maybe we should also add a
> new
> > > method to the request_object ).
> >
> > It is not just ap_rflush() but also ap_rwrite(), as it is also using
> > the request pool.
> >
> > To avoid the problem would mean creating a separate pool just for the
> > one operation and for the buckets to be allocated from that, with the
> > pool destroyed at the end of the call.
> >
> > Unfortunately it isn't perhaps quite as simple as that though. This is
> > because one can only use a separate pool if you know the buckets would
> > be used up and no longer required after the call. When doing a flush
> > this may be the case, but need to check. Definitely not the case if
> > not doing a flush though.
>
> Okay, I'm confused now. The bucket functions aren't supposed to be
> allocating memory out of the resource pool.
>
> /**
> * Create a new bucket brigade.  The bucket brigade is originally empty.
> * @param p The pool to associate with the brigade.  Data is not allocated
> out
> *          of the pool, but a cleanup is registered.
> * @param list The bucket allocator to use
> * @return The empty bucket brigade
> */
> APU_DECLARE(apr_bucket_brigade *) apr_brigade_create(apr_pool_t *p,
>                                                     apr_bucket_alloc_t
> *list);
>
> Ie., it takes buckets from a bucket list, to which buckets are
> returned for reuse when the bucket brigade is no longer needed at the
> completion of the operation.
>
> The only reason the request pool is required is so that the bucket
> brigade can be cleaned up automatically if the code forgets to
> explicitly destroy it before the request is over.
>
> So, looks like I have some more research to do to understand all this. :-(
>
> Graham
>



-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070704/09065355/attachment.html
From trueice at gmail.com  Wed Jul  4 00:00:49 2007
From: trueice at gmail.com (yubing)
Date: Wed Jul  4 00:00:57 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <88e286470707032055m2df2b848qd64b2e740c71ec55@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<88e286470707030119h4a757f47nb9218fffa2d1eb@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
	<729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
	<88e286470707031604l3718e500obf74612cc91e46a8@mail.gmail.com>
	<88e286470707031943q18536809xe3b00ed09701c622@mail.gmail.com>
	<88e286470707032055m2df2b848qd64b2e740c71ec55@mail.gmail.com>
Message-ID: <729753ee0707032100q62e18333p4de21fd26dc0fd42@mail.gmail.com>

quite right, thanks a lot:)
Then is the connection object suitable for my case? It seems request based
handling is just for short connections, and conn_write() has its own pool
mgmt code:


    if (len) {
        buff = apr_pmemdup(c->pool, PyString_AS_STRING(s), len);

        bb = apr_brigade_create(c->pool, c->bucket_alloc);

        b = apr_bucket_pool_create(buff, len, c->pool, c->bucket_alloc);
        APR_BRIGADE_INSERT_TAIL(bb, b);

        /* Make sure the data is flushed to the client */
        b = apr_bucket_flush_create(c->bucket_alloc);
        APR_BRIGADE_INSERT_TAIL(bb, b);

        ap_pass_brigade(c->output_filters, bb);
    }




On 7/4/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>
> On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > > On 03/07/07, yubing <trueice@gmail.com> wrote:
> > > > Anyhow, it's clear that ap_rflush is the root cause of this memory
> leak,
> > > > maybe we should find a new API for this (maybe we should also add a
> new
> > > > method to the request_object ).
> > >
> > > It is not just ap_rflush() but also ap_rwrite(), as it is also using
> > > the request pool.
> > >
> > > To avoid the problem would mean creating a separate pool just for the
> > > one operation and for the buckets to be allocated from that, with the
> > > pool destroyed at the end of the call.
> > >
> > > Unfortunately it isn't perhaps quite as simple as that though. This is
> > > because one can only use a separate pool if you know the buckets would
> > > be used up and no longer required after the call. When doing a flush
> > > this may be the case, but need to check. Definitely not the case if
> > > not doing a flush though.
> >
> > Okay, I'm confused now. The bucket functions aren't supposed to be
> > allocating memory out of the resource pool.
> >
> > /**
> >  * Create a new bucket brigade.  The bucket brigade is originally empty.
> >  * @param p The pool to associate with the brigade.  Data is not
> allocated out
> >  *          of the pool, but a cleanup is registered.
> >  * @param list The bucket allocator to use
> >  * @return The empty bucket brigade
> >  */
> > APU_DECLARE(apr_bucket_brigade *) apr_brigade_create(apr_pool_t *p,
> >                                                      apr_bucket_alloc_t
> *list);
> >
> > Ie., it takes buckets from a bucket list, to which buckets are
> > returned for reuse when the bucket brigade is no longer needed at the
> > completion of the operation.
> >
> > The only reason the request pool is required is so that the bucket
> > brigade can be cleaned up automatically if the code forgets to
> > explicitly destroy it before the request is over.
> >
> > So, looks like I have some more research to do to understand all this.
> :-(
>
> Understand now. The buckets themselves are reused, but the bucket
> brigade object is not. Thus for each ap_rwrite()/ap_rflush() memory
> will increase still because of the bucket brigade object. What is also
> odd is that the bucket brigade isn't even notionally destroyed,
> meaning that the cleanup handler isn't killed off and would appear to
> hang around until the end of the request at which point it would be
> called. If you have lots of bucket brigade objects created, that could
> be a lot of cleanup handlers needing to be killed.
>
> Anyway, I will not post any more on this. I'll work out a solution for
> mod_wsgi and then create a JIRA issue for mod_python describing what
> might be done for mod_python when we get around to doing more changes
> to it.
>
> Graham
>



-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070704/cde51588/attachment-0001.html
From trueice at gmail.com  Wed Jul  4 00:07:47 2007
From: trueice at gmail.com (yubing)
Date: Wed Jul  4 00:07:53 2007
Subject: [mod_python] mod_python 3.3.1 memory leak?
In-Reply-To: <729753ee0707032100q62e18333p4de21fd26dc0fd42@mail.gmail.com>
References: <729753ee0707022303l641ffac9i77167021b93429d@mail.gmail.com>
	<729753ee0707030422h417dc86ai19dad78ae9550aad@mail.gmail.com>
	<88e286470707030456s3af7c124l44bbb567f21a4013@mail.gmail.com>
	<729753ee0707030515r4a121347p6ca12bb07dd39e62@mail.gmail.com>
	<88e286470707030522x1818f851v9024ce7ce172f38f@mail.gmail.com>
	<729753ee0707030537s79ffd477ve5b03ed155a8eda4@mail.gmail.com>
	<88e286470707031604l3718e500obf74612cc91e46a8@mail.gmail.com>
	<88e286470707031943q18536809xe3b00ed09701c622@mail.gmail.com>
	<88e286470707032055m2df2b848qd64b2e740c71ec55@mail.gmail.com>
	<729753ee0707032100q62e18333p4de21fd26dc0fd42@mail.gmail.com>
Message-ID: <729753ee0707032107scd921d2pa464604bc5bb9523@mail.gmail.com>

oh, that's almost the same as the ap_rwrite and ap_rflush

On 7/4/07, yubing <trueice@gmail.com> wrote:
>
> quite right, thanks a lot:)
> Then is the connection object suitable for my case? It seems request based
> handling is just for short connections, and conn_write() has its own pool
> mgmt code:
>
>
>     if (len) {
>         buff = apr_pmemdup(c->pool, PyString_AS_STRING(s), len);
>
>         bb = apr_brigade_create(c->pool, c->bucket_alloc);
>
>         b = apr_bucket_pool_create(buff, len, c->pool, c->bucket_alloc);
>         APR_BRIGADE_INSERT_TAIL(bb, b);
>
>         /* Make sure the data is flushed to the client */
>         b = apr_bucket_flush_create(c->bucket_alloc);
>         APR_BRIGADE_INSERT_TAIL(bb, b);
>
>         ap_pass_brigade(c->output_filters, bb);
>     }
>
>
>
>
> On 7/4/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> >
> > On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com > wrote:
> > > On 04/07/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > > > On 03/07/07, yubing <trueice@gmail.com > wrote:
> > > > > Anyhow, it's clear that ap_rflush is the root cause of this memory
> > leak,
> > > > > maybe we should find a new API for this (maybe we should also add
> > a new
> > > > > method to the request_object ).
> > > >
> > > > It is not just ap_rflush() but also ap_rwrite(), as it is also using
> > > > the request pool.
> > > >
> > > > To avoid the problem would mean creating a separate pool just for
> > the
> > > > one operation and for the buckets to be allocated from that, with
> > the
> > > > pool destroyed at the end of the call.
> > > >
> > > > Unfortunately it isn't perhaps quite as simple as that though. This
> > is
> > > > because one can only use a separate pool if you know the buckets
> > would
> > > > be used up and no longer required after the call. When doing a flush
> > > > this may be the case, but need to check. Definitely not the case if
> > > > not doing a flush though.
> > >
> > > Okay, I'm confused now. The bucket functions aren't supposed to be
> > > allocating memory out of the resource pool.
> > >
> > > /**
> > >  * Create a new bucket brigade.  The bucket brigade is originally
> > empty.
> > >  * @param p The pool to associate with the brigade.  Data is not
> > allocated out
> > >  *          of the pool, but a cleanup is registered.
> > >  * @param list The bucket allocator to use
> > >  * @return The empty bucket brigade
> > >  */
> > > APU_DECLARE(apr_bucket_brigade *) apr_brigade_create(apr_pool_t *p,
> > >                                                      apr_bucket_alloc_t
> > *list);
> > >
> > > Ie., it takes buckets from a bucket list, to which buckets are
> > > returned for reuse when the bucket brigade is no longer needed at the
> > > completion of the operation.
> > >
> > > The only reason the request pool is required is so that the bucket
> > > brigade can be cleaned up automatically if the code forgets to
> > > explicitly destroy it before the request is over.
> > >
> > > So, looks like I have some more research to do to understand all this.
> > :-(
> >
> > Understand now. The buckets themselves are reused, but the bucket
> > brigade object is not. Thus for each ap_rwrite()/ap_rflush() memory
> > will increase still because of the bucket brigade object. What is also
> > odd is that the bucket brigade isn't even notionally destroyed,
> > meaning that the cleanup handler isn't killed off and would appear to
> > hang around until the end of the request at which point it would be
> > called. If you have lots of bucket brigade objects created, that could
> > be a lot of cleanup handlers needing to be killed.
> >
> > Anyway, I will not post any more on this. I'll work out a solution for
> > mod_wsgi and then create a JIRA issue for mod_python describing what
> > might be done for mod_python when we get around to doing more changes
> > to it.
> >
> > Graham
> >
>
>
>
> --
> truly yours
> ice




-- 
truly yours
ice
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070704/feb994a0/attachment.html
From njvsny at yahoo.com  Thu Jul  5 12:00:04 2007
From: njvsny at yahoo.com (Hristo Asenov)
Date: Thu Jul  5 12:00:29 2007
Subject: [mod_python] creating a socket using mod_python
Message-ID: <845258.37164.qm@web37907.mail.mud.yahoo.com>

i am just starting to get acquainted with modpython and it is very interesting. what I already have build is a socket listening on one port, and then a client connecting to it through another computer. The client sends shell commands to the server, the server executes those commands, and responds with the output. It is something like a telnet or ssh program, but built from the ground up. Anyways, I would like to make a web-based interface for it, where I can type a command into a form, send it, and get a response. I have managed to open a socket, send the command, receive the output, and then close the socket. However, in order this to work properly, my client needs to be running as a daemon, in a continuous loop, otherwise it looses its current working directory. modpython.publisher cannot do this, since it returns a value and I can't return and terminate the program running in the background. I tried using req.write() also, but that doesn't work either since it needs to
 return with apache.OK in order for req.write() to be displayed. Is there any other other way I could get this working. I was thinking of maybe having that program run in the background, and then build another socket that connects to that program temporarily, but seems like too much redundancy. I was either thinking of rather than write to screen, the program could write to file temporarily, and then modpython could read from there. However, there might be a better solution using modpython that I am not aware of yet.

       
---------------------------------
Sick sense of humor? Visit Yahoo! TV's Comedy with an Edge to see what's on, when. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070705/bf0de43d/attachment.html
From mdennis at merfer.net  Thu Jul  5 15:59:03 2007
From: mdennis at merfer.net (Matthew Dennis)
Date: Thu Jul  5 15:59:19 2007
Subject: [mod_python] streaming tar and/or zip files?
In-Reply-To: <4689DFD7.60902@natlab.research.philips.com>
References: <e94d85500706291341g177ca66j694567652f252de9@mail.gmail.com>
	<4689DFD7.60902@natlab.research.philips.com>
Message-ID: <e94d85500707051259r6a759b76jf5faf24ae23e221d@mail.gmail.com>

Can you please give an example because I don't see a way to do it from
looking at the docs.  It looks like there are only two methods for getting
data into the stream: add() or addfile() and both require the data being
sent to be in actual files, neither appear to let me stream data to them.  I
can't use add() because it expects the name of an actual file to add.  I
can't use addfile() because the fileobj that is passed in requires
TarInfo.size to be set to the number of bytes to be read and even if that
wasn't the case, it tries to make calls using the name of the file (which
again doesn't exist).


On 7/3/07, Mike Looijmans < nlv11281@natlab.research.philips.com> wrote:
>
> The "tarfile" built-in Python module can do as you ask, and also do
> compression (gzip or bzip2). ZIP
> cannot be "streamed", it has a sort of directory table inside to which it
> jumps up and down.
>
> You can just open a tarfile object with the req object as file output.
>
> Setting content-type to "application/x-tar" or something similar will help
> your client figuring out
> what to do with the file.
>
> I've used the tarfile module with archives over 800GB in size, without
> problems.
>
>
> Mike Looijmans
> Philips Natlab / Topic Automation
>
>
> Matthew Dennis wrote:
> > This may not be the appropriate list, my apologies if that is indeed the
>
> > case...
> >
> > I need to push from mod_python a file archive of sorts.  Any of tar,
> > tar.gz or zip will work (I'm also open to other suggestions).  The
> > requirement is that I can package several other "files" into it,
> > compressed or not.  I have no disk to write to and finite memory to deal
> > with but the "files" I'm outputting are quite large (much larger than
> > can fit in memory), thus I need to stream them directly out.  The reason
>
> > I put "files" in quotes is because they are not really files, but
> > dynamic content that is generated on the fly.  ZipOutputStream from Java
> > is a example of what I'm talking about if anyone is familiar with it, as
>
> > are other such streams.  I don't know the size of the content until
> > after it is all generated so there is no way to populate a TarInfo
> > object with the size et cetera and make my dynamic content look like a
> > file (which it doesn't seem I can do anyway as gettarinfo() tries to
> > call .fileno() which doesn't exist on any file like object I would
> create).
> >
> > In other words, something like:
> >
> > output = TarFileStream(someFileObj)
> >
> > output.addEntry("file_1.txt")
> > out.write( /*some dynamically generated content */ )
> > out.write( /*some dynamically generated content */ )
> > out.write( /*some dynamically generated content */ )
> >
> > output.addEntry("file_2.txt")
> > out.write( /*some dynamically generated content */ )
> > out.write( /*some dynamically generated content */ )
> > out.write( /*some dynamically generated content */ )
> >
> > ...
> >
> > output.addEntry("file_N.txt")
> > out.write( /*some dynamically generated content */ )
> > out.write( /*some dynamically generated content */ )
> > out.write( /*some dynamically generated content */ )
> >
> > output.close()
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070705/3bb3cbc5/attachment.html
From roberto at connexer.com  Thu Jul  5 18:27:53 2007
From: roberto at connexer.com (Roberto =?iso-8859-1?Q?C=2E_S=E1nchez?=)
Date: Thu Jul  5 18:28:02 2007
Subject: [mod_python] creating a socket using mod_python
In-Reply-To: <845258.37164.qm@web37907.mail.mud.yahoo.com>
References: <845258.37164.qm@web37907.mail.mud.yahoo.com>
Message-ID: <20070705222753.GA5160@miami.connexer.com>

On Thu, Jul 05, 2007 at 09:00:04AM -0700, Hristo Asenov wrote:
> i am just starting to get acquainted with modpython and it is very
> interesting. what I already have build is a socket listening on one
> port, and then a client connecting to it through another computer. The
> client sends shell commands to the server, the server executes those
> commands, and responds with the output. It is something like a telnet
> or ssh program, but built from the ground up. Anyways, I would like to
> make a web-based interface for it, where I can type a command into a
> form, send it, and get a response. I have managed to open a socket,
> send the command, receive the output, and then close the socket.
> However, in order this to work properly, my client needs to be running
> as a daemon, in a continuous loop, otherwise it looses its current
> working directory. modpython.publisher cannot do this, since it
> returns a value and I can't return and terminate the program running
> in the background. I tried using req.write() also, but that doesn't
> work either since it needs to return with apache.OK in order for
> req.write() to be displayed. Is there any other other way I could get
> this working. I was thinking of maybe having that program run in the
> background, and then build another socket that connects to that
> program temporarily, but seems like too much redundancy. I was either
> thinking of rather than write to screen, the program could write to
> file temporarily, and then modpython could read from there. However,
> there might be a better solution using modpython that I am not aware
> of yet.
> 
Please fix your mail client configuration so that it wraps lines.

It seems like what you want to do is more suited to a framework like
twisted.  That is, it seems like you have to reinvent functionality that
someone else has already implemented for you.

Regards,

-Roberto

-- 
Roberto C. S?nchez
http://people.connexer.com/~roberto
http://www.connexer.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070705/d65f75c9/attachment.bin
From nlv11281 at natlab.research.philips.com  Fri Jul  6 01:21:59 2007
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Fri Jul  6 01:22:11 2007
Subject: [mod_python] streaming tar and/or zip files?
In-Reply-To: <e94d85500707051259r6a759b76jf5faf24ae23e221d@mail.gmail.com>
References: <e94d85500706291341g177ca66j694567652f252de9@mail.gmail.com>	
	<4689DFD7.60902@natlab.research.philips.com>
	<e94d85500707051259r6a759b76jf5faf24ae23e221d@mail.gmail.com>
Message-ID: <468DD177.9040201@natlab.research.philips.com>

Yes, you have to set the number of bytes to be written, because the tar file header absolutely must 
contain that information. You can't cheat there. If you don't know the file size in advance, i think 
you're stuck with either inventing your own archive format, picking some other method of sending the 
data, or explaining some more of what you are trying to accomplish so that we may help you with that.

Mike Looijmans
Philips Natlab / Topic Automation


Matthew Dennis wrote:
> Can you please give an example because I don't see a way to do it from 
> looking at the docs.  It looks like there are only two methods for 
> getting data into the stream: add() or addfile() and both require the 
> data being sent to be in actual files, neither appear to let me stream 
> data to them.  I can't use add() because it expects the name of an 
> actual file to add.  I can't use addfile() because the fileobj that is 
> passed in requires TarInfo.size to be set to the number of bytes to be 
> read and even if that wasn't the case, it tries to make calls using the 
> name of the file (which again doesn't exist).
> 
> 
> On 7/3/07, *Mike Looijmans* < nlv11281@natlab.research.philips.com 
> <mailto:nlv11281@natlab.research.philips.com>> wrote:
> 
>     The "tarfile" built-in Python module can do as you ask, and also do
>     compression (gzip or bzip2). ZIP
>     cannot be "streamed", it has a sort of directory table inside to
>     which it jumps up and down.
> 
>     You can just open a tarfile object with the req object as file output.
> 
>     Setting content-type to "application/x-tar" or something similar
>     will help your client figuring out
>     what to do with the file.
> 
>     I've used the tarfile module with archives over 800GB in size,
>     without problems.
> 
> 
>     Mike Looijmans
>     Philips Natlab / Topic Automation
> 
> 
>     Matthew Dennis wrote:
>      > This may not be the appropriate list, my apologies if that is
>     indeed the
>      > case...
>      >
>      > I need to push from mod_python a file archive of sorts.  Any of tar,
>      > tar.gz or zip will work (I'm also open to other suggestions).  The
>      > requirement is that I can package several other "files" into it,
>      > compressed or not.  I have no disk to write to and finite memory
>     to deal
>      > with but the "files" I'm outputting are quite large (much larger than
>      > can fit in memory), thus I need to stream them directly out.  The
>     reason
>      > I put "files" in quotes is because they are not really files, but
>      > dynamic content that is generated on the fly.  ZipOutputStream
>     from Java
>      > is a example of what I'm talking about if anyone is familiar with
>     it, as
>      > are other such streams.  I don't know the size of the content until
>      > after it is all generated so there is no way to populate a TarInfo
>      > object with the size et cetera and make my dynamic content look
>     like a
>      > file (which it doesn't seem I can do anyway as gettarinfo() tries to
>      > call .fileno() which doesn't exist on any file like object I
>     would create).
>      >
>      > In other words, something like:
>      >
>      > output = TarFileStream(someFileObj)
>      >
>      > output.addEntry("file_1.txt")
>      > out.write( /*some dynamically generated content */ )
>      > out.write( /*some dynamically generated content */ )
>      > out.write( /*some dynamically generated content */ )
>      >
>      > output.addEntry("file_2.txt")
>      > out.write( /*some dynamically generated content */ )
>      > out.write( /*some dynamically generated content */ )
>      > out.write( /*some dynamically generated content */ )
>      >
>      > ...
>      >
>      > output.addEntry("file_N.txt")
>      > out.write( /*some dynamically generated content */ )
>      > out.write( /*some dynamically generated content */ )
>      > out.write( /*some dynamically generated content */ )
>      >
>      > output.close()
>      >
>      >
>      >
>     ------------------------------------------------------------------------
>      >
>      > _______________________________________________
>      > Mod_python mailing list
>      > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>      > http://mailman.modpython.org/mailman/listinfo/mod_python
>     <http://mailman.modpython.org/mailman/listinfo/mod_python>
> 
> 
> 


From jcsarante at gmail.com  Sun Jul  8 14:07:48 2007
From: jcsarante at gmail.com (Jean Sarante)
Date: Sun Jul  8 14:07:58 2007
Subject: [mod_python] Problem with mod_python module
Message-ID: <ea865c9a0707081107u4a2c4d49re36bcdb0d9c770c2@mail.gmail.com>

Hi, my name is Jean and I wanna if someone here can help, i'm trying to get
running the mod_python module on Apache 2.0.59.



the specifications are:


   - python-2.5.1
   - Windows  XP, service pack 2
   - mod_python-3.3.1
   - I'm using the global configuration  file
   - Syntax error on line 173 of C:/Archivos de programa/Apache
   Group/Apache2/conf/ht
   tpd.conf:
   Cannot load C:/Archivos de programa/Apache
   Group/Apache2/modules/mod_python.so i
   nto server: No se encontr\xf3 el proceso especificado.
   Note the errors or messages above, and press the <ESC> key to exit.
   23...


-- 
Jean Sarante
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070708/6aed3522/attachment.html
From graham.dumpleton at gmail.com  Sun Jul  8 18:20:56 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul  8 18:21:03 2007
Subject: [mod_python] Problem with mod_python module
In-Reply-To: <ea865c9a0707081107u4a2c4d49re36bcdb0d9c770c2@mail.gmail.com>
References: <ea865c9a0707081107u4a2c4d49re36bcdb0d9c770c2@mail.gmail.com>
Message-ID: <88e286470707081520u31f6af33r752570f538cf2586@mail.gmail.com>

On 09/07/07, Jean Sarante <jcsarante@gmail.com> wrote:
>
> Hi, my name is Jean and I wanna if someone here can help, i'm trying to get
> running the mod_python module on Apache 2.0.59.
>
>
>
> the specifications are:
>
>
> python-2.5.1
> Windows  XP, service pack 2
> mod_python-3.3.1
> I'm using the global configuration  file
> Syntax error on line 173 of C:/Archivos de programa/Apache
> Group/Apache2/conf/ht
>  tpd.conf:
>  Cannot load C:/Archivos de programa/Apache
> Group/Apache2/modules/mod_python.so i
>  nto server: No se encontr\xf3 el proceso especificado.
>  Note the errors or messages above, and press the <ESC> key to exit.  23...

A failure to even load the mod_python module in Apache on Windows
generally indicates one of the following:

1. Using the wrong version of the mod_python installer for the
combination of Python and Apache that you are using. Where did you get
the installer from and what was it called?

2. Running the Python installers as non administrator with result that
permissions of installed files are not correct such that the user that
Apache service runs as can read them, or Windows registry settings
haven't been defined for whole machine and only user that installer
was run as. Who did you run the installer as?

3. Running the mod_python installer as non administrator with result
that permissions of installed files are not correct such that the user
that Apache service runs as can read them. Who did you run the
installer as?

4. Missing the required Microsoft C/C++ runtime libraries for the
version of Python being used, or the library is not readable to the
user that Apache service runs as.

I am not a Windows user, but if you suspect one of the above, maybe
others can fill out details on exactly what to check and how to set
things to fix it. You can also search through past posts on mailing
list using search box at www.modpython.org.

Graham
From nlv11281 at natlab.research.philips.com  Mon Jul  9 01:13:29 2007
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Jul  9 01:13:43 2007
Subject: [mod_python] Re: [jira] Commented: (MODPYTHON-238)
 req.connection.keepalive should be writable
In-Reply-To: <20305427.1183895885351.JavaMail.jira@brutus>
References: <20305427.1183895885351.JavaMail.jira@brutus>
Message-ID: <4691C3F9.2090100@natlab.research.philips.com>

If there is a separate req.chunked, I'd advise to keep them separated. It's perfectly valid to have 
a chunked stream with a connection: close setting, and someone is bound to use that. For one thing, 
it allows the client to reliably detect whether all the data has really been sent.

Having a side-effect like setting one disables the other is bound to surprise someone.

Mike Looijmans
Philips Natlab / Topic Automation


Graham Dumpleton (JIRA) wrote:
>     [ https://issues.apache.org/jira/browse/MODPYTHON-238?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#action_12510973 ] 
> 
> Graham Dumpleton commented on MODPYTHON-238:
> --------------------------------------------
> 
> Actually also need to make req.chunked writable. As it has to be set to 0 in combination with setting close for keepalive to disabled chunked encoding for response.
> 
>> req.connection.keepalive should be writable
>> -------------------------------------------
>>
>>                 Key: MODPYTHON-238
>>                 URL: https://issues.apache.org/jira/browse/MODPYTHON-238
>>             Project: mod_python
>>          Issue Type: Improvement
>>          Components: core
>>    Affects Versions: 3.3.1
>>            Reporter: Graham Dumpleton
>>            Priority: Minor
>>
>> The attribute req.connection.keepalive should be writable. This would allow handlers to use:
>>   req.connection.keepalive = apache.AP_CONN_CLOSE
>> Doing this before any data is written has the effect of disabling keepalive and also turning off chunked encoding for response content when no content length has been supplied.
> 


From rebcoair at cfl.rr.com  Wed Jul 11 08:34:51 2007
From: rebcoair at cfl.rr.com (ron banks)
Date: Wed Jul 11 08:35:00 2007
Subject: [mod_python] Using Templates
Message-ID: <1184157291.25761.22.camel@localhost.localdomain>

Have been doing fine with mod_python and in the process of learning it.
I can see the wisdom of utilizing templates.
Here's where I establish my newbie status. Can someone tell me what I am
doing wrong, how I should be doing it,
or why I am not getting this. Be gentle, I set up my first web site
using psp only recently and I have no experience
with templates. Newbie status established. I have a function that builds
the html to create a calendar that I will later
populate with scheduling records. I'm just trying to get a calendar that
the user can navigate back and forth by month
so I will have a couple of buttons that will javascript a string with a
date, "2007,7,11" using ajax to set a session variable.
Then I want to run the same calendar function that will pick up this
session variable and build a calendar based on the
new date. I trying to figure out how to do this with templates. Here's
an example:

-------------------------Month.psp-------------------------
<%
from mod_python import apache, psp
from loadCalendar import setStrDate
%>
<%=setStrDate(req)%>

----------------loadCalendar/setStrDate----------------
def setStrDate(req):
	if not hasattr(req, 'session'):
		session = initSession(req)
		strDate = ""
	else:
		session = Session.Session(req)
		strDate = getSessionVariable(session, 'currDate')
	req.content_type = 'text/html'
	tmpl = psp.PSP(req, filename='Month.tmpl')
	tmpl.run(vars = {'strDate': strDate})
	return ""

------------------------Month.tmpl-------------------------
<%
from mod_python import apache, psp
from loadCalendar import loadMonth, strDate
%>

<%=loadPan()%>
<%=loadMonth(req, =strDate)%>

----------------Traceback from psp.py-------------------
  File "/var/www/html/TaskMaster/Month.tmpl", line 21


    req.write("""


""",0); req.write(str(loadPan()),0); req.write("""
""",0); req.write(str(loadMonth(req, =strDate)),0); req.write("""
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070711/a4fbc7a1/attachment.html
From jpg at jgassociates.ca  Wed Jul 11 09:09:22 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 11 09:08:27 2007
Subject: [mod_python] Using Templates
In-Reply-To: <1184157291.25761.22.camel@localhost.localdomain>
References: <1184157291.25761.22.camel@localhost.localdomain>
Message-ID: <4694D682.7090003@jgassociates.ca>

Hi Ron,

You'll need to show us the full traceback as there is not enough 
information to determine the problem. There may be a typo in your code, 
or is just in the email? Do you really have:

<%=loadMonth(req, =strDate)%>
                   ^
                  ???

Also you might want to put your python code in a block rather than 
enclosing each statement in "<%= %>". Doing this will make your code 
(and tracebacks) easier to read. ie

<%

from mod_python import apache, psp
from loadCalendar import loadMonth, strDate

loadPan()
loadMonth(req, strDate)

%>

Jim

ron banks wrote:
> Have been doing fine with mod_python and in the process of learning it.
> I can see the wisdom of utilizing templates.
> Here's where I establish my newbie status. Can someone tell me what I am
> doing wrong, how I should be doing it,
> or why I am not getting this. Be gentle, I set up my first web site
> using psp only recently and I have no experience
> with templates. Newbie status established. I have a function that builds
> the html to create a calendar that I will later
> populate with scheduling records. I'm just trying to get a calendar that
> the user can navigate back and forth by month
> so I will have a couple of buttons that will javascript a string with a
> date, "2007,7,11" using ajax to set a session variable.
> Then I want to run the same calendar function that will pick up this
> session variable and build a calendar based on the
> new date. I trying to figure out how to do this with templates. Here's
> an example:
> 
> -------------------------Month.psp-------------------------
> <%
> from mod_python import apache, psp
> from loadCalendar import setStrDate
> %>
> <%=setStrDate(req)%>
> 
> ----------------loadCalendar/setStrDate----------------
> def setStrDate(req):
> 	if not hasattr(req, 'session'):
> 		session = initSession(req)
> 		strDate = ""
> 	else:
> 		session = Session.Session(req)
> 		strDate = getSessionVariable(session, 'currDate')
> 	req.content_type = 'text/html'
> 	tmpl = psp.PSP(req, filename='Month.tmpl')
> 	tmpl.run(vars = {'strDate': strDate})
> 	return ""
> 
> ------------------------Month.tmpl-------------------------
> <%
> from mod_python import apache, psp
> from loadCalendar import loadMonth, strDate
> %>
> 
> <%=loadPan()%>
> <%=loadMonth(req, =strDate)%>
> 
> ----------------Traceback from psp.py-------------------
>   File "/var/www/html/TaskMaster/Month.tmpl", line 21
> 
> 
>     req.write("""
> 
> 
> """,0); req.write(str(loadPan()),0); req.write("""
> """,0); req.write(str(loadMonth(req, =strDate)),0); req.write("""
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From rebcoair at cfl.rr.com  Wed Jul 11 09:50:21 2007
From: rebcoair at cfl.rr.com (ron banks)
Date: Wed Jul 11 09:50:30 2007
Subject: [mod_python] Using Templates
Message-ID: <1184161821.26232.21.camel@localhost.localdomain>

Jim,

Thanks for the quick reply. I must yield to pretty much anyone on how it
should be done due to previously mentioned newbie status but I have
tried putting the code all in one block and I don't think that is right.
It doesn't error but it just hangs. I'm probably missing the concept
here but the <%=statement%> is like php and is just a placeholder. I get
that. All I want to do is get the variable strDate to the loadMonth
function with the new date string (e.g., "2007,7,11"). What method would
be best for doing that? Here is the complete traceback from the original
code:

Mod_python error: "PythonHandler mod_python.psp"

------------------Traceback------------------
Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 302, in handler
    p.run()

  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 213, in run
    exec code in global_scope

  File "/var/www/html/TaskMaster/Month.psp", line 4, in ?
    %>

  File "/var/www/html/loadCalendar.py", line 56, in setStrDate
    tmpl = psp.PSP(req, filename='Month.tmpl')

  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 111, in __init__
    self.load_from_file()

  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 179, in load_from_file
    code = compile(source, filename, "exec")

  File "/var/www/html/TaskMaster/Month.tmpl", line 22

    req.write("""


""",0); req.write(str(loadPan()),0); req.write("""
""",0); req.write(str(loadMonth(req, =strDate)),0); req.write("""
------------------end------------------

It might be that I can't or shouldn't use templates for what I am trying to accomplish.
Prior to testing templates I pretty much had figured out everything else and probably
just need advise on doing it another way. I have the session being updated with the user
selected date through ajax. What I need is a method to download the same page again with
the loadMonth function using the new date. I was hoping to use a template where I could
set the strDate variable and load the page. Obviously, I'm doing that wrong.

From jpg at jgassociates.ca  Wed Jul 11 11:36:55 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 11 11:34:58 2007
Subject: [mod_python] Using Templates
In-Reply-To: <1184161821.26232.21.camel@localhost.localdomain>
References: <1184161821.26232.21.camel@localhost.localdomain>
Message-ID: <4694F917.8090709@jgassociates.ca>

Hi Ron,

I'll have some additional comments later, but I just noticed that you 
have a name collision in your month.tmpl. Whatever loadCalendar.strDate 
is will override the value of strDate you set in the line tmpl.run(vars 
= {'strDate': strDate})


----------------loadCalendar/setStrDate----------------
def setStrDate(req):
	if not hasattr(req, 'session'):
		session = initSession(req)
		strDate = ""
	else:
		session = Session.Session(req)
		strDate = getSessionVariable(session, 'currDate')
	req.content_type = 'text/html'
	tmpl = psp.PSP(req, filename='Month.tmpl')
	tmpl.run(vars = {'strDate': strDate})
                           ^^^^^^^
	return ""



------------------------Month.tmpl-------------------------
<%
from mod_python import apache, psp
from loadCalendar import loadMonth, strDate
                                     ^^^^^^^^^^^
                                     What's this?

%>

<%=loadPan()%>
<%=loadMonth(req, =strDate)%>


Jim

ron banks wrote:
> Jim,
> 
> Thanks for the quick reply. I must yield to pretty much anyone on how it
> should be done due to previously mentioned newbie status but I have
> tried putting the code all in one block and I don't think that is right.
> It doesn't error but it just hangs. I'm probably missing the concept
> here but the <%=statement%> is like php and is just a placeholder. I get
> that. All I want to do is get the variable strDate to the loadMonth
> function with the new date string (e.g., "2007,7,11"). What method would
> be best for doing that? Here is the complete traceback from the original
> code:
> 
> Mod_python error: "PythonHandler mod_python.psp"
> 
> ------------------Traceback------------------
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 302, in handler
>     p.run()
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 213, in run
>     exec code in global_scope
> 
>   File "/var/www/html/TaskMaster/Month.psp", line 4, in ?
>     %>
> 
>   File "/var/www/html/loadCalendar.py", line 56, in setStrDate
>     tmpl = psp.PSP(req, filename='Month.tmpl')
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 111, in __init__
>     self.load_from_file()
> 
>   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 179, in load_from_file
>     code = compile(source, filename, "exec")
> 
>   File "/var/www/html/TaskMaster/Month.tmpl", line 22
> 
>     req.write("""
> 
> 
> """,0); req.write(str(loadPan()),0); req.write("""
> """,0); req.write(str(loadMonth(req, =strDate)),0); req.write("""
> ------------------end------------------
> 
> It might be that I can't or shouldn't use templates for what I am trying to accomplish.
> Prior to testing templates I pretty much had figured out everything else and probably
> just need advise on doing it another way. I have the session being updated with the user
> selected date through ajax. What I need is a method to download the same page again with
> the loadMonth function using the new date. I was hoping to use a template where I could
> set the strDate variable and load the page. Obviously, I'm doing that wrong.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From pbanty at yahoo.com  Wed Jul 11 12:00:16 2007
From: pbanty at yahoo.com (Chris)
Date: Wed Jul 11 12:00:50 2007
Subject: [mod_python] PythonAutoReload Problem
Message-ID: <567370.99638.qm@web56811.mail.re3.yahoo.com>

I noticed that sometimes I have to restart Apache before my changes are visible in the browser. I then learned that "PythonAutoReload On" should fix this. However, my problem is that the URL being requested is not a file that was updated so it's not automatically reloading. Does anyone know any tricks to get around this?

Thanks,
Chris

       
---------------------------------
Get the free Yahoo! toolbar and rest assured with the added security of spyware protection. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070711/3a4128d6/attachment.html
From rebcoair at cfl.rr.com  Wed Jul 11 12:07:20 2007
From: rebcoair at cfl.rr.com (ron banks)
Date: Wed Jul 11 12:07:28 2007
Subject: [mod_python] Using Templates
In-Reply-To: <4694F917.8090709@jgassociates.ca>
References: <1184161821.26232.21.camel@localhost.localdomain>
	<4694F917.8090709@jgassociates.ca>
Message-ID: <1184170040.12916.9.camel@localhost.localdomain>

Jim,

Yes, that was an oversight actually. Removing it doesn't change the
Traceback however.

------------------------Month.tmpl-------------------------
<%
from mod_python import apache, psp
from loadCalendar import loadPan, loadMonth
%>
<%=loadPan()%>
<%=loadMonth(req, =strDate)%>
                   ^^^^^^^
This is how this is supposed to work though right? The value
Month.tmpl.strDate gets set by loadCalendar.setStrDate.strDate?

On Wed, 2007-07-11 at 11:36 -0400, Jim Gallacher wrote:
> Hi Ron,
> 
> I'll have some additional comments later, but I just noticed that you 
> have a name collision in your month.tmpl. Whatever loadCalendar.strDate 
> is will override the value of strDate you set in the line tmpl.run(vars 
> = {'strDate': strDate})
> 
> 
> ----------------loadCalendar/setStrDate----------------
> def setStrDate(req):
> 	if not hasattr(req, 'session'):
> 		session = initSession(req)
> 		strDate = ""
> 	else:
> 		session = Session.Session(req)
> 		strDate = getSessionVariable(session, 'currDate')
> 	req.content_type = 'text/html'
> 	tmpl = psp.PSP(req, filename='Month.tmpl')
> 	tmpl.run(vars = {'strDate': strDate})
>                            ^^^^^^^
> 	return ""
> 
> 
> 
> ------------------------Month.tmpl-------------------------
> <%
> from mod_python import apache, psp
> from loadCalendar import loadMonth, strDate
>                                      ^^^^^^^^^^^
>                                      What's this?
> 
> %>
> 
> <%=loadPan()%>
> <%=loadMonth(req, =strDate)%>
> 
> 
> Jim
> 
> ron banks wrote:
> > Jim,
> > 
> > Thanks for the quick reply. I must yield to pretty much anyone on how it
> > should be done due to previously mentioned newbie status but I have
> > tried putting the code all in one block and I don't think that is right.
> > It doesn't error but it just hangs. I'm probably missing the concept
> > here but the <%=statement%> is like php and is just a placeholder. I get
> > that. All I want to do is get the variable strDate to the loadMonth
> > function with the new date string (e.g., "2007,7,11"). What method would
> > be best for doing that? Here is the complete traceback from the original
> > code:
> > 
> > Mod_python error: "PythonHandler mod_python.psp"
> > 
> > ------------------Traceback------------------
> > Traceback (most recent call last):
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
> >     result = object(req)
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 302, in handler
> >     p.run()
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 213, in run
> >     exec code in global_scope
> > 
> >   File "/var/www/html/TaskMaster/Month.psp", line 4, in ?
> >     %>
> > 
> >   File "/var/www/html/loadCalendar.py", line 56, in setStrDate
> >     tmpl = psp.PSP(req, filename='Month.tmpl')
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 111, in __init__
> >     self.load_from_file()
> > 
> >   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 179, in load_from_file
> >     code = compile(source, filename, "exec")
> > 
> >   File "/var/www/html/TaskMaster/Month.tmpl", line 22
> > 
> >     req.write("""
> > 
> > 
> > """,0); req.write(str(loadPan()),0); req.write("""
> > """,0); req.write(str(loadMonth(req, =strDate)),0); req.write("""
> > ------------------end------------------
> > 
> > It might be that I can't or shouldn't use templates for what I am trying to accomplish.
> > Prior to testing templates I pretty much had figured out everything else and probably
> > just need advise on doing it another way. I have the session being updated with the user
> > selected date through ajax. What I need is a method to download the same page again with
> > the loadMonth function using the new date. I was hoping to use a template where I could
> > set the strDate variable and load the page. Obviously, I'm doing that wrong.
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 

From rebcoair at cfl.rr.com  Wed Jul 11 12:15:20 2007
From: rebcoair at cfl.rr.com (ron banks)
Date: Wed Jul 11 12:15:29 2007
Subject: [mod_python] PythonAutoReload Problem
In-Reply-To: <567370.99638.qm@web56811.mail.re3.yahoo.com>
References: <567370.99638.qm@web56811.mail.re3.yahoo.com>
Message-ID: <1184170520.12916.16.camel@localhost.localdomain>

Hi Chris,

I'll let someone else set you straight on this but if you search this
mailing list you will find that it is best to always restart Apache to
be sure that you have the most current code module loaded. If you don't
my understanding is that you can't be sure. I know this because I just
researched it recently myself for the same reasons. I'm sure someone
will correct me if I am misspeaking.

PythonAutoReload is on by default by the way. This directive is there to
give you the option to turn it off.

Ron

On Wed, 2007-07-11 at 09:00 -0700, Chris wrote:
> I noticed that sometimes I have to restart Apache before my changes
> are visible in the browser. I then learned that "PythonAutoReload On"
> should fix this. However, my problem is that the URL being requested
> is not a file that was updated so it's not automatically reloading.
> Does anyone know any tricks to get around this?
> 
> Thanks,
> Chris
> 
> 
> 
> ______________________________________________________________________
> Get the free Yahoo! toolbar and rest assured with the added security
> of spyware protection. 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From graham.dumpleton at gmail.com  Wed Jul 11 23:18:10 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jul 11 23:18:20 2007
Subject: [mod_python] PythonAutoReload Problem
In-Reply-To: <1184170520.12916.16.camel@localhost.localdomain>
References: <567370.99638.qm@web56811.mail.re3.yahoo.com>
	<1184170520.12916.16.camel@localhost.localdomain>
Message-ID: <88e286470707112018h40d28a49l58a9798f49ab12a7@mail.gmail.com>

On 12/07/07, ron banks <rebcoair@cfl.rr.com> wrote:
> Hi Chris,
>
> I'll let someone else set you straight on this but if you search this
> mailing list you will find that it is best to always restart Apache to
> be sure that you have the most current code module loaded. If you don't
> my understanding is that you can't be sure. I know this because I just
> researched it recently myself for the same reasons. I'm sure someone
> will correct me if I am misspeaking.

In mod_python 3.3 there is now a clear line between standard Python
modules and packages which are found by searching sys.path, and those
Python code file modules which are found in the document tree and on
the module importer path. Modules and packages which are found on
sys.path are never reloaded, so making changes to them will always
require a full restart of Apache. The PythonAutoReload directive
doesn't in any way affect importing of those modules and packages.

Python code file modules in the document tree which contain mod_python
handlers, or which contain mod_python.publisher published functions
and data are however candidates for module reloading. In mod_python
3.3 the module importer is smart enough to track parent/child
relationships between modules and thus even know to reimport a parent
module when the child has changed.

In summary, if using version of mod_python prior to 3.3, it wasn't
always predictable and thus full restarts were often required. In
mod_python 3.3, if you setup you application code such that the
mod_python module importer is always used to import it, then you can
go quite a fair way in changing code and not having to do a full
restart, with mod_python automatically reloading modules as necessary.

For further reading, consult documentation for import_module() in:

  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

For a long list of problems solved in mod_python 3.3 in respect of
module importing, see:

  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken

Graham

> PythonAutoReload is on by default by the way. This directive is there to
> give you the option to turn it off.
>
>
> Ron
>
> On Wed, 2007-07-11 at 09:00 -0700, Chris wrote:
> > I noticed that sometimes I have to restart Apache before my changes
> > are visible in the browser. I then learned that "PythonAutoReload On"
> > should fix this. However, my problem is that the URL being requested
> > is not a file that was updated so it's not automatically reloading.
> > Does anyone know any tricks to get around this?
> >
> > Thanks,
> > Chris
> >
> >
> >
> > ______________________________________________________________________
> > Get the free Yahoo! toolbar and rest assured with the added security
> > of spyware protection.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Wed Jul 11 23:22:57 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jul 11 23:23:03 2007
Subject: [mod_python] Using Templates
In-Reply-To: <1184161821.26232.21.camel@localhost.localdomain>
References: <1184161821.26232.21.camel@localhost.localdomain>
Message-ID: <88e286470707112022s2b34cf6qded56f8eca38c523@mail.gmail.com>

On 11/07/07, ron banks <rebcoair@cfl.rr.com> wrote:

>   File "/var/www/html/TaskMaster/Month.tmpl", line 22
>
>     req.write("""
>
>
> """,0); req.write(str(loadPan()),0); req.write("""
> """,0); req.write(str(loadMonth(req, =strDate)),0); req.write("""

Bad syntax caused by '=' before 'strDate' when used as argument to
function. Everything between the '<%=' and '%>' must be valid Python
code. You should not be sticking additional '=' in front of variable
references.

Graham
From rebcoair at cfl.rr.com  Thu Jul 12 07:52:07 2007
From: rebcoair at cfl.rr.com (ron banks)
Date: Thu Jul 12 07:52:16 2007
Subject: [mod_python] Using Templates
In-Reply-To: <88e286470707112022s2b34cf6qded56f8eca38c523@mail.gmail.com>
References: <1184161821.26232.21.camel@localhost.localdomain>
	<88e286470707112022s2b34cf6qded56f8eca38c523@mail.gmail.com>
Message-ID: <1184241127.18468.32.camel@localhost.localdomain>

Graham,

Thanks for the reply. I do realize that the '=' is wrong. When removed
the browser just hangs without reporting errors. What I am not getting
is how to properly set the 'strDate' variable in:

----------------Month.tmpl------------------
<%=loadMonth(req, strDate)%>
                  ^^^^^^^

with this function:
---------------setStrDate-------------------
def setStrDate(req):
	session = Session.Session(req)
	if session.is_new():
		strDate = ""
	else:
		strDate = getSessionVariable(session, 'currDate')
	req.content_type = 'text/html'
	tmpl = psp.PSP(req, filename='Month.tmpl')
	tmpl.run(vars = {'strDate': strDate})
	return ""

called from:
----------------Month.psp------------------
<%
from mod_python import apache, psp
from loadCalendar import setStrDate
%>
<%=setStrDate(req)%>

How should this be done? This is a first experiment for me utilizing
templates. What I am trying to do is to set a session variable
'currDate' with a new date through ajax methods and load a page with the
same loadMonth function which builds a calendar populated with records
from a database backend. I have worked out almost everything else and
have only a couple of problems before I can move forward.

I either need to figure out how to utilize a template system as
described which I think might be preferable in this situation or
possibly reload the same page letting the loadMonth function pick up the
changed session variable and building the page based on the new date.
I'm not sure how to reload the page. Should I use some type of redirect
from the server side or javascript from the client side? I have only
started to experiment with these methods. I can't seem to get the
redirect to do anything yet.  With the javascript reload the session
variable seems to go away. Is this because of the new request or
something? Maybe a better method is to control session information in
the database and just use javascript. I don't know what differences in
speed would be. What do you think?

On Thu, 2007-07-12 at 13:22 +1000, Graham Dumpleton wrote:
> On 11/07/07, ron banks <rebcoair@cfl.rr.com> wrote:
> 
> >   File "/var/www/html/TaskMaster/Month.tmpl", line 22
> >
> >     req.write("""
> >
> >
> > """,0); req.write(str(loadPan()),0); req.write("""
> > """,0); req.write(str(loadMonth(req, =strDate)),0); req.write("""
> 
> Bad syntax caused by '=' before 'strDate' when used as argument to
> function. Everything between the '<%=' and '%>' must be valid Python
> code. You should not be sticking additional '=' in front of variable
> references.
> 
> Graham

From jpg at jgassociates.ca  Thu Jul 12 11:07:37 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Jul 12 11:07:00 2007
Subject: [mod_python] Using Templates
In-Reply-To: <1184241127.18468.32.camel@localhost.localdomain>
References: <1184161821.26232.21.camel@localhost.localdomain>	<88e286470707112022s2b34cf6qded56f8eca38c523@mail.gmail.com>
	<1184241127.18468.32.camel@localhost.localdomain>
Message-ID: <469643B9.7040904@jgassociates.ca>

ron banks wrote:
> Graham,
> 
> Thanks for the reply. I do realize that the '=' is wrong. When removed
> the browser just hangs without reporting errors.

It occurs to me that you may have a session deadlock. Do you use the 
"session" variable name anywhere in any of your psp templates, or is it 
just in setStrDate?

The rule is that you should only create one session instance per 
request. When a session instance is created it is locked for the 
duration of the request to protect your data. If you attempt to create a 
second instance the request will appear to hang as the 2nd session waits 
for the lock to be released, which of course never happens.

There is some "magic" in psp where it will create a session instance if 
it finds a variable named "session" anywhere in the template. It will 
check to see if it can find req.session first, so if you need to create 
a session outside of psp make sure you assign it to req.session. This is 
probably a good habit to get into even if you aren't using the psp handler.

> What I am not getting
> is how to properly set the 'strDate' variable in:

Actually, I think you are setting it properly. ;)

> ----------------Month.tmpl------------------
> <%=loadMonth(req, strDate)%>
>                   ^^^^^^^
> 
> with this function:
> ---------------setStrDate-------------------
> def setStrDate(req):
> 	session = Session.Session(req)
> 	if session.is_new():
> 		strDate = ""
> 	else:
> 		strDate = getSessionVariable(session, 'currDate')
> 	req.content_type = 'text/html'
> 	tmpl = psp.PSP(req, filename='Month.tmpl')
> 	tmpl.run(vars = {'strDate': strDate})
> 	return ""
> 
> called from:
> ----------------Month.psp------------------
> <%
> from mod_python import apache, psp
> from loadCalendar import setStrDate
> %>
> <%=setStrDate(req)%>
> 
> How should this be done? This is a first experiment for me utilizing
> templates. What I am trying to do is to set a session variable
> 'currDate' with a new date through ajax methods and load a page with the
> same loadMonth function which builds a calendar populated with records
> from a database backend. I have worked out almost everything else and
> have only a couple of problems before I can move forward.

You're on the right track. I would suggest that you simplify 
setStrDate() so that it only does one thing. You might also consider 
renaming it to getStrDate as that seems to be it's function. Move the 
things not related to the date to another function. It'll make your 
program logic easier to understand. It might not see like a big deal 
right now, but if need to come back and modify the code 6 months from 
now you'll thank me. ;)

Your code might look more like this:

---------------getStrDate-------------------
def getStrDate(req):
	if not hasattr(req, 'session'):
		req.session = Session.Session(req)
	if req.session.is_new():
  		strDate = ""
  	else:
  		strDate = getSessionVariable(req.session, 'currDate')
  	return strDate


----------------Month.tmpl------------------
<%
loadMonth(req, strDate)
%>


----------------Month.psp------------------
<%
from mod_python import apache, psp
from loadCalendar import getStrDate

strDate = getStrDate(req)

tmpl = psp.PSP(req, filename='Month.tmpl')
tmpl.run(vars = {'strDate': strDate})

%>

> I either need to figure out how to utilize a template system as
> described which I think might be preferable in this situation or
> possibly reload the same page letting the loadMonth function pick up the
> changed session variable and building the page based on the new date.
> I'm not sure how to reload the page. Should I use some type of redirect
> from the server side or javascript from the client side? I have only
> started to experiment with these methods. I can't seem to get the
> redirect to do anything yet.  With the javascript reload the session
> variable seems to go away.

This may be related to the way you are using sessions. Once we've 
determined if you have a deadlock we can deal with this issue.

Do you save the session anywhere, or are you depending on psp? Psp will 
only save the session if it finds the "session" variable name in your 
template. Otherwise you'll need to save it explicitly somewhere with 
session.save().

> Is this because of the new request or
> something? Maybe a better method is to control session information in
> the database and just use javascript. I don't know what differences in
> speed would be. What do you think?

Use the mod_python session machinery until you've got it working. Adding 
another layer of complexity won't help at this point.

As I mull this over I'm convinced you're problem lies with the way you 
are using sessions, and not with psp templates.

Jim


From pete at shinners.org  Sat Jul 14 16:27:31 2007
From: pete at shinners.org (Peter Shinners)
Date: Sat Jul 14 16:27:46 2007
Subject: [mod_python] Mysterious 500 error?
Message-ID: <469931B3.7030908@shinners.org>

I have a simple mod_python handler that works correctly for web browsers, 
but fetching with wget gives a 500 Internal Server Error. This is using 
the latest mod_python 2.7 under Apache 1.3.37. I can't see any problem. 
The only different I see is perhaps HTTP/1.1 and HTTP/1.0 ?

You can test the live url here, http://www.shinners.org/iCream/magic.html

Here is the handler code...

def handler(req):
     path = req.uri.split("/", 2)[-1]
     if path == "magic.html":
         req.content_type = "text/html"
         req.status = apache.OK
         req.send_http_header()
         req.write("<html><body>It is ok</body></html>")
         return apache.OK
     # ... other urls handled afterwards


On the client end, these are the headers I get back.

Date:Sat, 14 Jul 2007 20:16:07 GMT
Server:Apache
Keep-Alive:timeout=5, max=50
Connection:Keep-Alive
Transfer-Encoding:chunked
Content-Type:text/html



Here are the requests I see in the server log. I see a difference between 
HTTP/1.1 and HTTP/1.0 ?

76.168.41.58 - - [14/Jul/2007:16:16:08 -0400] "GET /iCream/magic.html 
HTTP/1.1" - 46 "-" "Mozilla/5.0 (X11; U; Linux i686; en; rv:1.8.1.4) 
Gecko/20061201 Epiphany/2.18 Firefox/2.0.0.4 (Ubuntu-feisty)"

76.168.41.58 - - [14/Jul/2007:16:10:41 -0400] "GET /iCream/magic.html 
HTTP/1.0" - 34 "-" "Wget/1.10.2"


I'm not seeing anything show up in the server error logs, but it doesn't 
look like I'm getting the raw logs given to me.
From graham.dumpleton at gmail.com  Sat Jul 14 20:31:09 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Jul 14 20:31:17 2007
Subject: [mod_python] Mysterious 500 error?
In-Reply-To: <469931B3.7030908@shinners.org>
References: <469931B3.7030908@shinners.org>
Message-ID: <88e286470707141731s10999af4ocaaaa217b6d4df61@mail.gmail.com>

I'd suggest you browser is also seeing a 500 response, but because
page content is being returned it doesn't care and still displays the
page. Use Firefox live headers or similar to confirm.

My only guess is that your Apache configuration is wrong and you have
somehow managed to create a stacked set of handlers by listing
PythonHandler directive more than once. The first one generates the
correct response, but the second is failing resulting in a 500 status
overriding the firsts 200 response.

What does you Apache configuration snippet look like where you have
defined PythonHandler etc?

Graham

On 15/07/07, Peter Shinners <pete@shinners.org> wrote:
> I have a simple mod_python handler that works correctly for web browsers,
> but fetching with wget gives a 500 Internal Server Error. This is using
> the latest mod_python 2.7 under Apache 1.3.37. I can't see any problem.
> The only different I see is perhaps HTTP/1.1 and HTTP/1.0 ?
>
> You can test the live url here, http://www.shinners.org/iCream/magic.html
>
> Here is the handler code...
>
> def handler(req):
>      path = req.uri.split("/", 2)[-1]
>      if path == "magic.html":
>          req.content_type = "text/html"
>          req.status = apache.OK
>          req.send_http_header()
>          req.write("<html><body>It is ok</body></html>")
>          return apache.OK
>      # ... other urls handled afterwards
>
>
> On the client end, these are the headers I get back.
>
> Date:Sat, 14 Jul 2007 20:16:07 GMT
> Server:Apache
> Keep-Alive:timeout=5, max=50
> Connection:Keep-Alive
> Transfer-Encoding:chunked
> Content-Type:text/html
>
>
>
> Here are the requests I see in the server log. I see a difference between
> HTTP/1.1 and HTTP/1.0 ?
>
> 76.168.41.58 - - [14/Jul/2007:16:16:08 -0400] "GET /iCream/magic.html
> HTTP/1.1" - 46 "-" "Mozilla/5.0 (X11; U; Linux i686; en; rv:1.8.1.4)
> Gecko/20061201 Epiphany/2.18 Firefox/2.0.0.4 (Ubuntu-feisty)"
>
> 76.168.41.58 - - [14/Jul/2007:16:10:41 -0400] "GET /iCream/magic.html
> HTTP/1.0" - 34 "-" "Wget/1.10.2"
>
>
> I'm not seeing anything show up in the server error logs, but it doesn't
> look like I'm getting the raw logs given to me.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From rebcoair at cfl.rr.com  Sat Jul 14 21:03:56 2007
From: rebcoair at cfl.rr.com (ron banks)
Date: Sat Jul 14 21:04:04 2007
Subject: [mod_python] Using Templates
In-Reply-To: <469643B9.7040904@jgassociates.ca>
References: <1184161821.26232.21.camel@localhost.localdomain>
	<88e286470707112022s2b34cf6qded56f8eca38c523@mail.gmail.com>
	<1184241127.18468.32.camel@localhost.localdomain>
	<469643B9.7040904@jgassociates.ca>
Message-ID: <1184461437.5799.5.camel@localhost.localdomain>

Jim,

Sorry Jim, our company had a series of hardware failures taking out our
phone systems that required attention. Had to put this on hold for 24
hrs. Got to make a living while experimenting on other things, right?

Ok, it certainly is easier to debug when you get running code. I'll
claim ignorance on the dead lock in the session calls. After your tip
and seeing that in the documentation it was easy to find and correct the
offending code. The template calls are now working, thanks, and in the
long run this will be a much cleaner method for what I am doing with the
separation of code and content.

That leaves the one problem remaining with reloading or redirecting the
new page with the new date information. The function that I am using to
update the session works and yes I do a session.save() at the end. I
have a page where I can check the session values and they are updated
each time so that's not the problem. What is the best method in my
situation to use to load the page again using the new session variable
from mod_python?

On Thu, 2007-07-12 at 11:07 -0400, Jim Gallacher wrote: 
> ron banks wrote:
> > Graham,
> > 
> > Thanks for the reply. I do realize that the '=' is wrong. When removed
> > the browser just hangs without reporting errors.
> 
> It occurs to me that you may have a session deadlock. Do you use the 
> "session" variable name anywhere in any of your psp templates, or is it 
> just in setStrDate?

> The rule is that you should only create one session instance per 
> request. When a session instance is created it is locked for the 
> duration of the request to protect your data. If you attempt to create a 
> second instance the request will appear to hang as the 2nd session waits 
> for the lock to be released, which of course never happens.
> 
> There is some "magic" in psp where it will create a session instance if 
> it finds a variable named "session" anywhere in the template. It will 
> check to see if it can find req.session first, so if you need to create 
> a session outside of psp make sure you assign it to req.session. This is 
> probably a good habit to get into even if you aren't using the psp handler.
> 
> > What I am not getting
> > is how to properly set the 'strDate' variable in:
> 
> Actually, I think you are setting it properly. ;)
> 
> > ----------------Month.tmpl------------------
> > <%=loadMonth(req, strDate)%>
> >                   ^^^^^^^
> > 
> > with this function:
> > ---------------setStrDate-------------------
> > def setStrDate(req):
> > 	session = Session.Session(req)
> > 	if session.is_new():
> > 		strDate = ""
> > 	else:
> > 		strDate = getSessionVariable(session, 'currDate')
> > 	req.content_type = 'text/html'
> > 	tmpl = psp.PSP(req, filename='Month.tmpl')
> > 	tmpl.run(vars = {'strDate': strDate})
> > 	return ""
> > 
> > called from:
> > ----------------Month.psp------------------
> > <%
> > from mod_python import apache, psp
> > from loadCalendar import setStrDate
> > %>
> > <%=setStrDate(req)%>
> > 
> > How should this be done? This is a first experiment for me utilizing
> > templates. What I am trying to do is to set a session variable
> > 'currDate' with a new date through ajax methods and load a page with the
> > same loadMonth function which builds a calendar populated with records
> > from a database backend. I have worked out almost everything else and
> > have only a couple of problems before I can move forward.
> 
> You're on the right track. I would suggest that you simplify 
> setStrDate() so that it only does one thing. You might also consider 
> renaming it to getStrDate as that seems to be it's function. Move the 
> things not related to the date to another function. It'll make your 
> program logic easier to understand. It might not see like a big deal 
> right now, but if need to come back and modify the code 6 months from 
> now you'll thank me. ;)
> 
> Your code might look more like this:
> 
> ---------------getStrDate-------------------
> def getStrDate(req):
> 	if not hasattr(req, 'session'):
> 		req.session = Session.Session(req)
> 	if req.session.is_new():
>   		strDate = ""
>   	else:
>   		strDate = getSessionVariable(req.session, 'currDate')
>   	return strDate
> 
> 
> ----------------Month.tmpl------------------
> <%
> loadMonth(req, strDate)
> %>
> 
> 
> ----------------Month.psp------------------
> <%
> from mod_python import apache, psp
> from loadCalendar import getStrDate
> 
> strDate = getStrDate(req)
> 
> tmpl = psp.PSP(req, filename='Month.tmpl')
> tmpl.run(vars = {'strDate': strDate})
> 
> %>
> 
> > I either need to figure out how to utilize a template system as
> > described which I think might be preferable in this situation or
> > possibly reload the same page letting the loadMonth function pick up the
> > changed session variable and building the page based on the new date.
> > I'm not sure how to reload the page. Should I use some type of redirect
> > from the server side or javascript from the client side? I have only
> > started to experiment with these methods. I can't seem to get the
> > redirect to do anything yet.  With the javascript reload the session
> > variable seems to go away.
> 
> This may be related to the way you are using sessions. Once we've 
> determined if you have a deadlock we can deal with this issue.
> 
> Do you save the session anywhere, or are you depending on psp? Psp will 
> only save the session if it finds the "session" variable name in your 
> template. Otherwise you'll need to save it explicitly somewhere with 
> session.save().
> 
> > Is this because of the new request or
> > something? Maybe a better method is to control session information in
> > the database and just use javascript. I don't know what differences in
> > speed would be. What do you think?
> 
> Use the mod_python session machinery until you've got it working. Adding 
> another layer of complexity won't help at this point.
> 
> As I mull this over I'm convinced you're problem lies with the way you 
> are using sessions, and not with psp templates.
> 
> Jim
> 

From jpg at jgassociates.ca  Sun Jul 15 12:24:44 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jul 15 12:24:28 2007
Subject: [mod_python] Mysterious 500 error?
In-Reply-To: <88e286470707141731s10999af4ocaaaa217b6d4df61@mail.gmail.com>
References: <469931B3.7030908@shinners.org>
	<88e286470707141731s10999af4ocaaaa217b6d4df61@mail.gmail.com>
Message-ID: <469A4A4C.3050500@jgassociates.ca>

Graham Dumpleton wrote:
> I'd suggest you browser is also seeing a 500 response, but because
> page content is being returned it doesn't care and still displays the
> page. Use Firefox live headers or similar to confirm.

Using the Firefox Web Developer extension I can confirm that the browser 
is getting a 500 response.

Jim


> 
> My only guess is that your Apache configuration is wrong and you have
> somehow managed to create a stacked set of handlers by listing
> PythonHandler directive more than once. The first one generates the
> correct response, but the second is failing resulting in a 500 status
> overriding the firsts 200 response.
> 
> What does you Apache configuration snippet look like where you have
> defined PythonHandler etc?
> 
> Graham
> 
> On 15/07/07, Peter Shinners <pete@shinners.org> wrote:
>> I have a simple mod_python handler that works correctly for web browsers,
>> but fetching with wget gives a 500 Internal Server Error. This is using
>> the latest mod_python 2.7 under Apache 1.3.37. I can't see any problem.
>> The only different I see is perhaps HTTP/1.1 and HTTP/1.0 ?
>>
>> You can test the live url here, http://www.shinners.org/iCream/magic.html
>>
>> Here is the handler code...
>>
>> def handler(req):
>>      path = req.uri.split("/", 2)[-1]
>>      if path == "magic.html":
>>          req.content_type = "text/html"
>>          req.status = apache.OK
>>          req.send_http_header()
>>          req.write("<html><body>It is ok</body></html>")
>>          return apache.OK
>>      # ... other urls handled afterwards
>>
>>
>> On the client end, these are the headers I get back.
>>
>> Date:Sat, 14 Jul 2007 20:16:07 GMT
>> Server:Apache
>> Keep-Alive:timeout=5, max=50
>> Connection:Keep-Alive
>> Transfer-Encoding:chunked
>> Content-Type:text/html
>>
>>
>>
>> Here are the requests I see in the server log. I see a difference between
>> HTTP/1.1 and HTTP/1.0 ?
>>
>> 76.168.41.58 - - [14/Jul/2007:16:16:08 -0400] "GET /iCream/magic.html
>> HTTP/1.1" - 46 "-" "Mozilla/5.0 (X11; U; Linux i686; en; rv:1.8.1.4)
>> Gecko/20061201 Epiphany/2.18 Firefox/2.0.0.4 (Ubuntu-feisty)"
>>
>> 76.168.41.58 - - [14/Jul/2007:16:10:41 -0400] "GET /iCream/magic.html
>> HTTP/1.0" - 34 "-" "Wget/1.10.2"
>>
>>
>> I'm not seeing anything show up in the server error logs, but it doesn't
>> look like I'm getting the raw logs given to me.
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From pete at shinners.org  Sun Jul 15 14:26:24 2007
From: pete at shinners.org (Peter Shinners)
Date: Sun Jul 15 14:26:35 2007
Subject: [mod_python] Mysterious 500 error?
In-Reply-To: <88e286470707141731s10999af4ocaaaa217b6d4df61@mail.gmail.com>
References: <469931B3.7030908@shinners.org>
	<88e286470707141731s10999af4ocaaaa217b6d4df61@mail.gmail.com>
Message-ID: <469A66D0.7010209@shinners.org>

Graham Dumpleton wrote:
> I'd suggest you browser is also seeing a 500 response, but because
> page content is being returned it doesn't care and still displays the
> page. Use Firefox live headers or similar to confirm.
> 
> What does you Apache configuration snippet look like where you have
> defined PythonHandler etc?


I've done this in an .htaccess file, it references the 'cone.py' I have in 
the same directory (added to the PythonPath). I've checked the .htaccess 
in the parent directories, and they are empty. The file look like this:

SetHandler python-program
PythonPath "sys.path+['/home/shinners/public_html/iCream', 
'/home/shinners/python/lib/python2.4/site-packages']"
PythonHandler cone
PythonDebug On


From graham.dumpleton at gmail.com  Sun Jul 15 21:55:29 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 15 21:55:37 2007
Subject: [mod_python] Mysterious 500 error?
In-Reply-To: <469A66D0.7010209@shinners.org>
References: <469931B3.7030908@shinners.org>
	<88e286470707141731s10999af4ocaaaa217b6d4df61@mail.gmail.com>
	<469A66D0.7010209@shinners.org>
Message-ID: <88e286470707151855g37fbbd83q11f89c93dacc0a5e@mail.gmail.com>

On 16/07/07, Peter Shinners <pete@shinners.org> wrote:
> Graham Dumpleton wrote:
> > I'd suggest you browser is also seeing a 500 response, but because
> > page content is being returned it doesn't care and still displays the
> > page. Use Firefox live headers or similar to confirm.
> >
> > What does you Apache configuration snippet look like where you have
> > defined PythonHandler etc?
>
>
> I've done this in an .htaccess file, it references the 'cone.py' I have in
> the same directory (added to the PythonPath). I've checked the .htaccess
> in the parent directories, and they are empty. The file look like this:
>
> SetHandler python-program
> PythonPath "sys.path+['/home/shinners/public_html/iCream',
> '/home/shinners/python/lib/python2.4/site-packages']"
> PythonHandler cone
> PythonDebug On

Nothing looks wrong.

Because you are using such an old version of mod_python, not sure
there is much more we can offer in the way of ideas. Am I right in
assuming that you are stuck with Apache 1.3 because that is all your
hosting service provides? If you do control your own web site, then
I'd really recommend upgrading to Apache 2.X and the most recent
version of of mod_python.

Graham
From deliberatus at verizon.net  Sun Jul 15 22:06:15 2007
From: deliberatus at verizon.net (Kirk Bailey)
Date: Sun Jul 15 22:06:20 2007
Subject: [mod_python] install into a windows apache server
Message-ID: <469AD297.6020107@verizon.net>

I justt installed apache i n my laptop;  how can I install mod-python  in 
it? The instructions  on the site are written from a linux persoectiive with 
compiling and MAKE procedures. somehow I tthtiink bill's bonanza will not 
like that overmuch.

-- 
Salute!
	-Kirk Bailey
           Think
          +-----+
          | BOX |
          +-----+
           knihT

Fnord.
From graham.dumpleton at gmail.com  Sun Jul 15 22:20:05 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 15 22:20:11 2007
Subject: [mod_python] install into a windows apache server
In-Reply-To: <469AD297.6020107@verizon.net>
References: <469AD297.6020107@verizon.net>
Message-ID: <88e286470707151920ne04656di133081931cbf0752@mail.gmail.com>

Have you not looked properly on the mod_python download page and noted
the link which says 'Win32 Binaries'? :-)

Graham

On 16/07/07, Kirk Bailey <deliberatus@verizon.net> wrote:
> I justt installed apache i n my laptop;  how can I install mod-python  in
> it? The instructions  on the site are written from a linux persoectiive with
> compiling and MAKE procedures. somehow I tthtiink bill's bonanza will not
> like that overmuch.
>
> --
> Salute!
>         -Kirk Bailey
>            Think
>           +-----+
>           | BOX |
>           +-----+
>            knihT
>
> Fnord.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From pete at shinners.org  Mon Jul 16 02:37:38 2007
From: pete at shinners.org (Peter Shinners)
Date: Mon Jul 16 02:37:54 2007
Subject: [mod_python] Mysterious 500 error? Solved!
In-Reply-To: <469931B3.7030908@shinners.org>
References: <469931B3.7030908@shinners.org>
Message-ID: <469B1232.5000001@shinners.org>

Peter Shinners wrote:
> def handler(req):
>     path = req.uri.split("/", 2)[-1]
>     if path == "magic.html":
>         req.content_type = "text/html"
>         req.status = apache.OK
>         req.send_http_header()
>         req.write("<html><body>It is ok</body></html>")
>         return apache.OK

Found and fixed the problem. Just setting request.status seems to 
desginate an error. Even if setting to apache.OK. By not setting any 
status when things are ok, I get clean and clear 200 statuses.


From graham.dumpleton at gmail.com  Mon Jul 16 02:57:14 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul 16 02:57:21 2007
Subject: [mod_python] Mysterious 500 error? Solved!
In-Reply-To: <469B1232.5000001@shinners.org>
References: <469931B3.7030908@shinners.org> <469B1232.5000001@shinners.org>
Message-ID: <88e286470707152357y6beab575p5ae1a67416c15de@mail.gmail.com>

On 16/07/07, Peter Shinners <pete@shinners.org> wrote:
> Peter Shinners wrote:
> > def handler(req):
> >     path = req.uri.split("/", 2)[-1]
> >     if path == "magic.html":
> >         req.content_type = "text/html"
> >         req.status = apache.OK
> >         req.send_http_header()
> >         req.write("<html><body>It is ok</body></html>")
> >         return apache.OK
>
> Found and fixed the problem. Just setting request.status seems to
> desginate an error. Even if setting to apache.OK. By not setting any
> status when things are ok, I get clean and clear 200 statuses.

Of course. :-)

req.status must be a HTTP status value. apache.OK is 0 which Apache
would see as being an invalid status code and it would most likely
return 500 error as a result to indicate a problem.

I did think setting req.status wasn't a good thing to do in this case,
but didn't occur to me that that would be the problem.

Graham
From paulbaranowski at gmail.com  Mon Jul 16 06:22:54 2007
From: paulbaranowski at gmail.com (Paul Baranowski)
Date: Mon Jul 16 06:23:01 2007
Subject: [mod_python] mod_python 3.3.1/Win32/apache 2.2/python 2.4 is
	compiled against python 2.4.3 instead of 2.4.4
Message-ID: <e3ff85a20707160322k492566e5kbb14e3f44599aba9@mail.gmail.com>

Hi guys -
Thanks for your great work on mod_python.  I recently downloaded the Win32
binary for mod_python 3.3.1/Win32/apache 2.2/python 2.4 and noticed it is
compiled against python 2.4.3 instead of python 2.4.4 (the latest version of
python 2.4).  The problem with this is that when you try to load mod_python
in apache, it complains with:

[error] python_init: Python version mismatch, expected '2.4.3', found '2.4.4
'.

Any chance of a new binary for python 2.4.4?  It would be greatly
appreciated! :)

- Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070716/7241e10d/attachment.html
From graham.dumpleton at gmail.com  Mon Jul 16 06:31:36 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul 16 06:31:44 2007
Subject: [mod_python] mod_python 3.3.1/Win32/apache 2.2/python 2.4 is
	compiled against python 2.4.3 instead of 2.4.4
In-Reply-To: <e3ff85a20707160322k492566e5kbb14e3f44599aba9@mail.gmail.com>
References: <e3ff85a20707160322k492566e5kbb14e3f44599aba9@mail.gmail.com>
Message-ID: <88e286470707160331p1aefd856nb882e17aabb24ed3@mail.gmail.com>

Treat it as an annoying warning only. On Windows as the Python library
is a DLL, it should all work fine where it is only a patch level
difference.

On 16/07/07, Paul Baranowski <paulbaranowski@gmail.com> wrote:
> Hi guys -
> Thanks for your great work on mod_python.  I recently downloaded the Win32
> binary for mod_python 3.3.1/Win32/apache 2.2/python 2.4 and noticed it is
> compiled against python 2.4.3 instead of python 2.4.4 (the latest version of
> python 2.4).  The problem with this is that when you try to load mod_python
> in apache, it complains with:
>
> [error] python_init: Python version mismatch, expected '2.4.3', found
> '2.4.4'.
>
> Any chance of a new binary for python 2.4.4?  It would be greatly
> appreciated! :)
>
> - Paul
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From jwynacht at mac.com  Mon Jul 16 17:20:58 2007
From: jwynacht at mac.com (Jon Wynacht)
Date: Mon Jul 16 17:21:10 2007
Subject: [mod_python] Install Question
Message-ID: <A076F4CB-0113-1000-95AD-45F71FFF0EA5-Webmail-10012@mac.com>

Hi,

I've installed mod_python on a number of servers and haven't had any issues until now. When I go to do the sample mptest.py everything seems to run fine and then I get a 404 error. The log file output looks like this:

[Mon Jul 16 14:14:14 2007] [notice] mod_python (pid=11745, interpreter='clam'): Importing module '/web/apache2/htdocs/mptest.py'

Here's what the log output is when I start the server up:

[Mon Jul 16 13:48:21 2007] [notice] Apache/2.2.0 (Unix) DAV/2 PHP/5.2.2 mod_python/3.3.1 Python/2.4.3 mod_perl/2.0.2 Perl/v5.8.6 configured -- resuming normal operations

And finally, I can run this simple script:

def index(req):
    return "Test successful";

Perms all seem good to go....what am I missing?

Thanks in advance,

Jon
From graham.dumpleton at gmail.com  Mon Jul 16 18:45:09 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul 16 18:45:18 2007
Subject: [mod_python] Install Question
In-Reply-To: <A076F4CB-0113-1000-95AD-45F71FFF0EA5-Webmail-10012@mac.com>
References: <A076F4CB-0113-1000-95AD-45F71FFF0EA5-Webmail-10012@mac.com>
Message-ID: <88e286470707161545g52463c12m97063b89f978f8c7@mail.gmail.com>

You have provided insufficient information.

On 17/07/07, Jon Wynacht <jwynacht@mac.com> wrote:
> Hi,
>
> I've installed mod_python on a number of servers and haven't had any issues until now. When I go to do the sample mptest.py everything seems to run fine and then I get a 404 error.

What do you mean 'seems to run fine and then I get a 404 error'? Do
you mean your desired page appears sometimes but then on other
attempts you get a 404, or do you mean something else?

> The log file output looks like this:
>
> [Mon Jul 16 14:14:14 2007] [notice] mod_python (pid=11745, interpreter='clam'): Importing module '/web/apache2/htdocs/mptest.py'

But what does the part of your Apache configuration you use to
configure mod_python say? Are you doing it in the main Apache
configuration or are you using a .htaccess file?

> And finally, I can run this simple script:
>
> def index(req):
>     return "Test successful";

Which is a mod_python.publisher handler not an mptest.py style basic
handler as described in documentation. If you are using publisher
style configuration with a basic handler it isn't likely to work.

> Perms all seem good to go....what am I missing?

Maybe you should go back to square one and follow the following
instructions, instead of what you have been doing now as it may help
you see what you are doing wrong.

  http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking

Graham
From ryan_gm at sbcglobal.net  Tue Jul 17 00:44:11 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Tue Jul 17 00:44:23 2007
Subject: [mod_python] Grr
Message-ID: <906005.73972.qm@web80813.mail.mud.yahoo.com>

Im having trouble getting Apache to read .py files the right way.
I'v followed this http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
guide but it still shows the source code and not the result of the code.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070716/32a78b7e/attachment.html
From pete at shinners.org  Tue Jul 17 00:59:53 2007
From: pete at shinners.org (Peter Shinners)
Date: Tue Jul 17 01:00:06 2007
Subject: [mod_python] Facebook application with mod_python
Message-ID: <469C4CC9.7010500@shinners.org>

I created a fun little application for Facebook using mod_python. It is 
called iCream, and allows building and comparing cones with other users.

It uses a bunch of projects I've been meaning to learn lately. Besides 
mod_python there is PIL, storm, and simplejson.

There's a standalone version of the site also, but to see all the features 
it needs information from Facebook.

iCream standalone, http://www.shinners.org/iCream/
iCream facebook, http://apps.facebook.com/icreamflavors/

From graham.dumpleton at gmail.com  Tue Jul 17 01:02:32 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 17 01:02:40 2007
Subject: [mod_python] Grr
In-Reply-To: <906005.73972.qm@web80813.mail.mud.yahoo.com>
References: <906005.73972.qm@web80813.mail.mud.yahoo.com>
Message-ID: <88e286470707162202j72cf839ag18332628bab99174@mail.gmail.com>

On 17/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> Im having trouble getting Apache to read .py files the right way.
> I'v followed this
> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
> guide but it still shows the source code and not the result of the code.

If using a .htaccess file, have you verified the .htaccess file is
even been read?

You can do this by putting in it some random crap, eg.

  XXXX

This should result in browser returning a 500 error if .htaccess file is read.

If no 500 error, the FileInfo override isn't set for the directory.

Anyway, that is about all the mind reading I can do without you
actually posting your .htaccess configuration as well as the main
configuration Directory configuration for the directory where you are
putting stuff.

Graham
From graham.dumpleton at gmail.com  Tue Jul 17 01:09:47 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 17 01:09:53 2007
Subject: [mod_python] Grr
In-Reply-To: <980981.12727.qm@web80806.mail.mud.yahoo.com>
References: <88e286470707162202j72cf839ag18332628bab99174@mail.gmail.com>
	<980981.12727.qm@web80806.mail.mud.yahoo.com>
Message-ID: <88e286470707162209s2b3a1cbfp6aea5f5adfd19aae@mail.gmail.com>

On 17/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> Hmm, i guess its not being read because theres no error when i through in
> some random characters

Well ensure that you have somewhere in main Apache configuration:

  <Directory /some/path/to/your/directory>

  AllowOverride FileInfo

  </Directory>

Ie., FileInfo needs to be set for that directory or some enclosing directory.

BTW, please use reply-all and keep follow ups on mailing list.

Graham

> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  On 17/07/07, ryan luna wrote:
> > Im having trouble getting Apache to read .py files the right way.
> > I'v followed this
> >
> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
> > guide but it still shows the source code and not the result of the code.
>
> If using a .htaccess file, have you verified the .htaccess file is
> even been read?
>
> You can do this by putting in it some random crap, eg.
>
>  XXXX
>
> This should result in browser returning a 500 error if .htaccess file is
> read.
>
> If no 500 error, the FileInfo override isn't set for the directory.
>
> Anyway, that is about all the mind reading I can do without you
> actually posting your .htaccess configuration as well as the main
> configuration Directory configuration for the directory where you are
> putting stuff.
>
> Graham
>
>
From greg at vig.co.nz  Tue Jul 17 01:15:56 2007
From: greg at vig.co.nz (Greg Fawcett)
Date: Tue Jul 17 01:16:03 2007
Subject: [mod_python] Grr
In-Reply-To: <906005.73972.qm@web80813.mail.mud.yahoo.com>
References: <906005.73972.qm@web80813.mail.mud.yahoo.com>
Message-ID: <928306280707162215g37053ffbtb024e2a9daaf3f53@mail.gmail.com>

Please submit more details. Platform, package versions, config files would
allow us to help.

On 17/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
>
> Im having trouble getting Apache to read .py files the right way.
> I'v followed this
> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
> guide but it still shows the source code and not the result of the code.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>


-- 
Phone: +64 3 409 8165
Mobile: +64 21 333 291
Fax: +64 3 974 6810
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070717/b27734d5/attachment.html
From ryan_gm at sbcglobal.net  Tue Jul 17 01:18:54 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Tue Jul 17 01:19:05 2007
Subject: [mod_python] Grr
In-Reply-To: <88e286470707162209s2b3a1cbfp6aea5f5adfd19aae@mail.gmail.com>
Message-ID: <426374.76528.qm@web80814.mail.mud.yahoo.com>

I have that line the in file and its pointing to the directory
and LoadModule python_module modules/mod_python.so is in the file aswell

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: On 17/07/07, ryan luna  wrote:
> Hmm, i guess its not being read because theres no error when i through in
> some random characters

Well ensure that you have somewhere in main Apache configuration:

  

  AllowOverride FileInfo

  

Ie., FileInfo needs to be set for that directory or some enclosing directory.

BTW, please use reply-all and keep follow ups on mailing list.

Graham

> Graham Dumpleton  wrote:
>  On 17/07/07, ryan luna wrote:
> > Im having trouble getting Apache to read .py files the right way.
> > I'v followed this
> >
> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
> > guide but it still shows the source code and not the result of the code.
>
> If using a .htaccess file, have you verified the .htaccess file is
> even been read?
>
> You can do this by putting in it some random crap, eg.
>
>  XXXX
>
> This should result in browser returning a 500 error if .htaccess file is
> read.
>
> If no 500 error, the FileInfo override isn't set for the directory.
>
> Anyway, that is about all the mind reading I can do without you
> actually posting your .htaccess configuration as well as the main
> configuration Directory configuration for the directory where you are
> putting stuff.
>
> Graham
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070716/7297b9b3/attachment.html
From graham.dumpleton at gmail.com  Tue Jul 17 01:22:06 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 17 01:22:13 2007
Subject: [mod_python] Grr
In-Reply-To: <426374.76528.qm@web80814.mail.mud.yahoo.com>
References: <88e286470707162209s2b3a1cbfp6aea5f5adfd19aae@mail.gmail.com>
	<426374.76528.qm@web80814.mail.mud.yahoo.com>
Message-ID: <88e286470707162222l1ab6e27en6a079065e5d3f920@mail.gmail.com>

Ensure that somewhere in your Apache configuration you have:

  AccessFileName .htaccess

Did you ensure that you restarted Apache and did you verify that
mod_python startup message appears in the Apache error log file?

Graham

On 17/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> I have that line the in file and its pointing to the directory
> and LoadModule python_module modules/mod_python.so is in the file aswell
>
> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  On 17/07/07, ryan luna wrote:
> > Hmm, i guess its not being read because theres no error when i through in
> > some random characters
>
> Well ensure that you have somewhere in main Apache configuration:
>
>
>
>  AllowOverride FileInfo
>
>
>
> Ie., FileInfo needs to be set for that directory or some enclosing
> directory.
>
> BTW, please use reply-all and keep follow ups on mailing list.
>
> Graham
>
> > Graham Dumpleton wrote:
> > On 17/07/07, ryan luna wrote:
> > > Im having trouble getting Apache to read .py files the right way.
> > > I'v followed this
> > >
> >
> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
> > > guide but it still shows the source code and not the result of the code.
> >
> > If using a .htaccess file, have you verified the .htaccess file is
> > even been read?
> >
> > You can do this by putting in it some random crap, eg.
> >
> > XXXX
> >
> > This should result in browser returning a 500 error if .htaccess file is
> > read.
> >
> > If no 500 error, the FileInfo override isn't set for the directory.
> >
> > Anyway, that is about all the mind reading I can do without you
> > actually posting your .htaccess configuration as well as the main
> > configuration Directory configuration for the directory where you are
> > putting stuff.
> >
> > Graham
> >
> >
>
>
From ryan_gm at sbcglobal.net  Tue Jul 17 01:33:56 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Tue Jul 17 01:34:04 2007
Subject: [mod_python] Grr
In-Reply-To: <88e286470707162222l1ab6e27en6a079065e5d3f920@mail.gmail.com>
Message-ID: <901518.37871.qm@web80808.mail.mud.yahoo.com>

That line is not in the Apache conf file
and yes i restart Apache after changes and in the error log i see
 mod_python: Creating 8 session mutexes based on 0 max processes and 250 max threads.


Graham Dumpleton <graham.dumpleton@gmail.com> wrote: Ensure that somewhere in your Apache configuration you have:

  AccessFileName .htaccess

Did you ensure that you restarted Apache and did you verify that
mod_python startup message appears in the Apache error log file?

Graham

On 17/07/07, ryan luna  wrote:
> I have that line the in file and its pointing to the directory
> and LoadModule python_module modules/mod_python.so is in the file aswell
>
> Graham Dumpleton  wrote:
>  On 17/07/07, ryan luna wrote:
> > Hmm, i guess its not being read because theres no error when i through in
> > some random characters
>
> Well ensure that you have somewhere in main Apache configuration:
>
>
>
>  AllowOverride FileInfo
>
>
>
> Ie., FileInfo needs to be set for that directory or some enclosing
> directory.
>
> BTW, please use reply-all and keep follow ups on mailing list.
>
> Graham
>
> > Graham Dumpleton wrote:
> > On 17/07/07, ryan luna wrote:
> > > Im having trouble getting Apache to read .py files the right way.
> > > I'v followed this
> > >
> >
> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
> > > guide but it still shows the source code and not the result of the code.
> >
> > If using a .htaccess file, have you verified the .htaccess file is
> > even been read?
> >
> > You can do this by putting in it some random crap, eg.
> >
> > XXXX
> >
> > This should result in browser returning a 500 error if .htaccess file is
> > read.
> >
> > If no 500 error, the FileInfo override isn't set for the directory.
> >
> > Anyway, that is about all the mind reading I can do without you
> > actually posting your .htaccess configuration as well as the main
> > configuration Directory configuration for the directory where you are
> > putting stuff.
> >
> > Graham
> >
> >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070716/1ecb77ce/attachment.html
From ryan_gm at sbcglobal.net  Tue Jul 17 02:29:00 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Tue Jul 17 02:29:07 2007
Subject: [mod_python] Grr
In-Reply-To: <928306280707162215g37053ffbtb024e2a9daaf3f53@mail.gmail.com>
Message-ID: <160239.94204.qm@web80805.mail.mud.yahoo.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: httpd.conf
Type: application/octet-stream
Size: 18727 bytes
Desc: 3968087939-httpd.conf
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070716/3a901091/httpd-0001.obj
From graham.dumpleton at gmail.com  Tue Jul 17 05:57:30 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 17 05:57:37 2007
Subject: [mod_python] Grr
In-Reply-To: <901518.37871.qm@web80808.mail.mud.yahoo.com>
References: <88e286470707162222l1ab6e27en6a079065e5d3f920@mail.gmail.com>
	<901518.37871.qm@web80808.mail.mud.yahoo.com>
Message-ID: <88e286470707170257m36f2f798obf945bfb4e6e934d@mail.gmail.com>

Bar stating the obvious of checking whether your .htaccess file is
readable to others, so Apache can read it, I would suggest you simply
move your configuration to inside of the Directory directive in the
main Apache configuration and do it that way. At least while you work
out why .htaccess file not being used.

Graham

On 17/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> That line is not in the Apache conf file
> and yes i restart Apache after changes and in the error log i see
>  mod_python: Creating 8 session mutexes based on 0 max processes and 250 max
> threads.
>
>
> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  Ensure that somewhere in your Apache configuration you have:
>
>  AccessFileName .htaccess
>
> Did you ensure that you restarted Apache and did you verify that
> mod_python startup message appears in the Apache error log file?
>
> Graham
>
> On 17/07/07, ryan luna wrote:
> > I have that line the in file and its pointing to the directory
> > and LoadModule python_module modules/mod_python.so is in the file aswell
> >
> > Graham Dumpleton wrote:
> > On 17/07/07, ryan luna wrote:
> > > Hmm, i guess its not being read because theres no error when i through
> in
> > > some random characters
> >
> > Well ensure that you have somewhere in main Apache configuration:
> >
> >
> >
> > AllowOverride FileInfo
> >
> >
> >
> > Ie., FileInfo needs to be set for that directory or some enclosing
> > directory.
> >
> > BTW, please use reply-all and keep follow ups on mailing list.
> >
> > Graham
> >
> > > Graham Dumpleton wrote:
> > > On 17/07/07, ryan luna wrote:
> > > > Im having trouble getting Apache to read .py files the right way.
> > > > I'v followed this
> > > >
> > >
> >
> http://www.dscpl.com.au/wiki/ModPython/Articles/GettingModPythonWorking
> > > > guide but it still shows the source code and not the result of the
> code.
> > >
> > > If using a .htaccess file, have you verified the .htaccess file is
> > > even been read?
> > >
> > > You can do this by putting in it some random crap, eg.
> > >
> > > XXXX
> > >
> > > This should result in browser returning a 500 error if .htaccess file is
> > > read.
> > >
> > > If no 500 error, the FileInfo override isn't set for the directory.
> > >
> > > Anyway, that is about all the mind reading I can do without you
> > > actually posting your .htaccess configuration as well as the main
> > > configuration Directory configuration for the directory where you are
> > > putting stuff.
> > >
> > > Graham
> > >
> > >
> >
> >
>
>
From ryan_gm at sbcglobal.net  Tue Jul 17 20:37:36 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Tue Jul 17 20:37:49 2007
Subject: [mod_python] (no subject)
Message-ID: <807508.28400.qm@web80815.mail.mud.yahoo.com>

Im running the latest python version, mod_python 3.3.1, and latest Apache.
Heres my apache config file http://www.megaupload.com/?d=OKNGKO7Q
Still having trouble figuring out why apache still shows the source code of .py files instead of the code output.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070717/c849dfe1/attachment.html
From graham.dumpleton at gmail.com  Tue Jul 17 20:50:51 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 17 20:51:00 2007
Subject: [mod_python] (no subject)
In-Reply-To: <807508.28400.qm@web80815.mail.mud.yahoo.com>
References: <807508.28400.qm@web80815.mail.mud.yahoo.com>
Message-ID: <88e286470707171750t291ad03aje1b90036a534e70f@mail.gmail.com>

Hmmm, you never mentioned you were on a Windows box.

Did you try what was previously suggested of putting the mod_python
configuration stuff in an appropriate Directory directive in your main
Apache configuration file?

<Directory C:/Scripts/>
PythonHandler mptest
AddHandler mod_python .py
PythonDebug On
</Directory>

Graham

On 18/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> Im running the latest python version, mod_python 3.3.1, and latest Apache.
> Heres my apache config file
> http://www.megaupload.com/?d=OKNGKO7Q
> Still having trouble figuring out why apache still shows the source code of
> .py files instead of the code output.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From ryan_gm at sbcglobal.net  Tue Jul 17 22:16:58 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Tue Jul 17 22:17:05 2007
Subject: [mod_python] (no subject)
In-Reply-To: <88e286470707171750t291ad03aje1b90036a534e70f@mail.gmail.com>
Message-ID: <58204.20321.qm@web80803.mail.mud.yahoo.com>

I just tried that and theres no change.
The fact that im using WAMP instead of straight up Apache wouldn't have anything to do with it would it?

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: Hmmm, you never mentioned you were on a Windows box.

Did you try what was previously suggested of putting the mod_python
configuration stuff in an appropriate Directory directive in your main
Apache configuration file?


PythonHandler mptest
AddHandler mod_python .py
PythonDebug On


Graham

On 18/07/07, ryan luna  wrote:
> Im running the latest python version, mod_python 3.3.1, and latest Apache.
> Heres my apache config file
> http://www.megaupload.com/?d=OKNGKO7Q
> Still having trouble figuring out why apache still shows the source code of
> .py files instead of the code output.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070717/6f4442b1/attachment.html
From graham.dumpleton at gmail.com  Tue Jul 17 22:23:01 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 17 22:23:09 2007
Subject: [mod_python] (no subject)
In-Reply-To: <58204.20321.qm@web80803.mail.mud.yahoo.com>
References: <88e286470707171750t291ad03aje1b90036a534e70f@mail.gmail.com>
	<58204.20321.qm@web80803.mail.mud.yahoo.com>
Message-ID: <88e286470707171923s72257535n77b3633bf154f1a6@mail.gmail.com>

What happens if you use add this configuration:

  <Location /mpinfo>
  SetHandler mod_python
  PythonHandler mod_python.testhandler
  </Location>

Then access '/mpinfo'.

Do you get lots of mod_python debug info?

Graham.

On 18/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> I just tried that and theres no change.
> The fact that im using WAMP instead of straight up Apache wouldn't have
> anything to do with it would it?
>
> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  Hmmm, you never mentioned you were on a Windows box.
>
> Did you try what was previously suggested of putting the mod_python
> configuration stuff in an appropriate Directory directive in your main
> Apache configuration file?
>
>
> PythonHandler mptest
> AddHandler mod_python .py
> PythonDebug On
>
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > Im running the latest python version, mod_python 3.3.1, and latest Apache.
> > Heres my apache config file
> > http://www.megaupload.com/?d=OKNGKO7Q
> > Still having trouble figuring out why apache still shows the source code
> of
> > .py files instead of the code output.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
>
From ryan_gm at sbcglobal.net  Tue Jul 17 23:35:15 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Tue Jul 17 23:35:22 2007
Subject: [mod_python] (no subject)
In-Reply-To: <88e286470707171923s72257535n77b3633bf154f1a6@mail.gmail.com>
Message-ID: <466594.48919.qm@web80803.mail.mud.yahoo.com>

You mean putting those lines to the httpd.conf and running the mpinfo.py?
If so this is what i get
Traceback (most recent call last):
  File "C:\Scripts\mptest.py", line 1, in <module>
    from mod_python import apache
  File "C:\Python25\Lib\site-packages\mod_python\apache.py", line 30, in <module>
    import _apache
ImportError: No module named _apache

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: What happens if you use add this configuration:

  
  SetHandler mod_python
  PythonHandler mod_python.testhandler
  

Then access '/mpinfo'.

Do you get lots of mod_python debug info?

Graham.

On 18/07/07, ryan luna  wrote:
> I just tried that and theres no change.
> The fact that im using WAMP instead of straight up Apache wouldn't have
> anything to do with it would it?
>
> Graham Dumpleton  wrote:
>  Hmmm, you never mentioned you were on a Windows box.
>
> Did you try what was previously suggested of putting the mod_python
> configuration stuff in an appropriate Directory directive in your main
> Apache configuration file?
>
>
> PythonHandler mptest
> AddHandler mod_python .py
> PythonDebug On
>
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > Im running the latest python version, mod_python 3.3.1, and latest Apache.
> > Heres my apache config file
> > http://www.megaupload.com/?d=OKNGKO7Q
> > Still having trouble figuring out why apache still shows the source code
> of
> > .py files instead of the code output.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070717/dda5167a/attachment.html
From graham.dumpleton at gmail.com  Tue Jul 17 23:43:14 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 17 23:43:24 2007
Subject: [mod_python] (no subject)
In-Reply-To: <466594.48919.qm@web80803.mail.mud.yahoo.com>
References: <88e286470707171923s72257535n77b3633bf154f1a6@mail.gmail.com>
	<466594.48919.qm@web80803.mail.mud.yahoo.com>
Message-ID: <88e286470707172043m5ef28b5dsae96334e396e6619@mail.gmail.com>

If you don't understand what a Location directive is and that to
access /mpinfo meant to access from it your web browser, I would very
much suggest that before even trying to use mod_python that you learn
something about Apache and configuring it first. I suggest starting
with the following:

  http://httpd.apache.org/docs/2.2/

Without you having some understanding of Apache configuration we could
go on forever suggesting you try certain things, yet never even be
certain that you are doing it correctly, and probably never find a
solution either.

Graham

On 18/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> You mean putting those lines to the httpd.conf and running the mpinfo.py?
> If so this is what i get
> Traceback (most recent call last):
>   File "C:\Scripts\mptest.py", line 1, in <module>
>     from mod_python import apache
>   File
> "C:\Python25\Lib\site-packages\mod_python\apache.py", line
> 30, in <module>
>     import _apache
> ImportError: No module named _apache
>
> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  What happens if you use add this configuration:
>
>
>  SetHandler mod_python
>  PythonHandler mod_python.testhandler
>
>
> Then access '/mpinfo'.
>
> Do you get lots of mod_python debug info?
>
> Graham.
>
> On 18/07/07, ryan luna wrote:
> > I just tried that and theres no change.
> > The fact that im using WAMP instead of straight up Apache wouldn't have
> > anything to do with it would it?
> >
> > Graham Dumpleton wrote:
> > Hmmm, you never mentioned you were on a Windows box.
> >
> > Did you try what was previously suggested of putting the mod_python
> > configuration stuff in an appropriate Directory directive in your main
> > Apache configuration file?
> >
> >
> > PythonHandler mptest
> > AddHandler mod_python .py
> > PythonDebug On
> >
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > Im running the latest python version, mod_python 3.3.1, and latest
> Apache.
> > > Heres my apache config file
> > > http://www.megaupload.com/?d=OKNGKO7Q
> > > Still having trouble figuring out why apache still shows the source code
> > of
> > > .py files instead of the code output.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> >
> >
>
>
From ryan_gm at sbcglobal.net  Wed Jul 18 00:13:53 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Wed Jul 18 00:14:03 2007
Subject: [mod_python] (no subject)
In-Reply-To: <88e286470707172043m5ef28b5dsae96334e396e6619@mail.gmail.com>
Message-ID: <786115.63763.qm@web80808.mail.mud.yahoo.com>

/mpinfo is a .py file...meaning when i got to /mpinfo it shows the source code i thought iv made this clear -.-

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: If you don't understand what a Location directive is and that to
access /mpinfo meant to access from it your web browser, I would very
much suggest that before even trying to use mod_python that you learn
something about Apache and configuring it first. I suggest starting
with the following:

  http://httpd.apache.org/docs/2.2/

Without you having some understanding of Apache configuration we could
go on forever suggesting you try certain things, yet never even be
certain that you are doing it correctly, and probably never find a
solution either.

Graham

On 18/07/07, ryan luna  wrote:
> You mean putting those lines to the httpd.conf and running the mpinfo.py?
> If so this is what i get
> Traceback (most recent call last):
>   File "C:\Scripts\mptest.py", line 1, in 
>     from mod_python import apache
>   File
> "C:\Python25\Lib\site-packages\mod_python\apache.py", line
> 30, in 
>     import _apache
> ImportError: No module named _apache
>
> Graham Dumpleton  wrote:
>  What happens if you use add this configuration:
>
>
>  SetHandler mod_python
>  PythonHandler mod_python.testhandler
>
>
> Then access '/mpinfo'.
>
> Do you get lots of mod_python debug info?
>
> Graham.
>
> On 18/07/07, ryan luna wrote:
> > I just tried that and theres no change.
> > The fact that im using WAMP instead of straight up Apache wouldn't have
> > anything to do with it would it?
> >
> > Graham Dumpleton wrote:
> > Hmmm, you never mentioned you were on a Windows box.
> >
> > Did you try what was previously suggested of putting the mod_python
> > configuration stuff in an appropriate Directory directive in your main
> > Apache configuration file?
> >
> >
> > PythonHandler mptest
> > AddHandler mod_python .py
> > PythonDebug On
> >
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > Im running the latest python version, mod_python 3.3.1, and latest
> Apache.
> > > Heres my apache config file
> > > http://www.megaupload.com/?d=OKNGKO7Q
> > > Still having trouble figuring out why apache still shows the source code
> > of
> > > .py files instead of the code output.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> >
> >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070717/8e7c70df/attachment-0001.html
From graham.dumpleton at gmail.com  Wed Jul 18 00:47:46 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jul 18 00:47:53 2007
Subject: [mod_python] (no subject)
In-Reply-To: <786115.63763.qm@web80808.mail.mud.yahoo.com>
References: <88e286470707172043m5ef28b5dsae96334e396e6619@mail.gmail.com>
	<786115.63763.qm@web80808.mail.mud.yahoo.com>
Message-ID: <88e286470707172147x20a95aa3o3285cecb3b37013@mail.gmail.com>

I told you to do something which was unrelated to the mptest.py file.
I asked you to add to your main Apache configuration file:

 <Location /mpinfo>
 SetHandler mod_python
 PythonHandler mod_python.testhandler
 </Location>

You should then have restarted Apache. When you access your web server
from a web browser using the URL /mpinfo, this should have the result
of triggering the special inbuilt mod_python handler called
mod_python.testhandler. The Location directive in this case has got
nothing to do with your files and directories that exists on disk, it
matches the URL directly. I wanted you to at least get this working so
I knew whether you knew enough about Apache configuration so that I
had some idea that my other instructions made any sense to you and
that you were following them correctly. This Location based test
handler check was a simple as I could get and wouldn't depend on other
things you could get wrong and not manage to correct such as file and
user permissions. If you weren't able to even get this going, then I'd
have to consider that I wasting my time until you went and actually
read the Apache documentation and learned how to configure and use
Apache, something which I still suggest you now go do.

Graham

On 18/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> /mpinfo is a .py file...meaning when i got to /mpinfo it shows the source
> code i thought iv made this clear -.-
>
> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  If you don't understand what a Location directive is and that to
> access /mpinfo meant to access from it your web browser, I would very
> much suggest that before even trying to use mod_python that you learn
> something about Apache and configuring it first. I suggest starting
> with the following:
>
>  http://httpd.apache.org/docs/2.2/
>
> Without you having some understanding of Apache configuration we could
> go on forever suggesting you try certain things, yet never even be
> certain that you are doing it correctly, and probably never find a
> solution either.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > You mean putting those lines to the httpd.conf and running the mpinfo.py?
> > If so this is what i get
> > Traceback (most recent call last):
> > File "C:\Scripts\mptest.py", line 1, in
> > from mod_python import apache
> > File
> > "C:\Python25\Lib\site-packages\mod_python\apache.py",
> line
> > 30, in
> > import _apache
> > ImportError: No module named _apache
> >
> > Graham Dumpleton wrote:
> > What happens if you use add this configuration:
> >
> >
> > SetHandler mod_python
> > PythonHandler mod_python.testhandler
> >
> >
> > Then access '/mpinfo'.
> >
> > Do you get lots of mod_python debug info?
> >
> > Graham.
> >
> > On 18/07/07, ryan luna wrote:
> > > I just tried that and theres no change.
> > > The fact that im using WAMP instead of straight up Apache wouldn't have
> > > anything to do with it would it?
> > >
> > > Graham Dumpleton wrote:
> > > Hmmm, you never mentioned you were on a Windows box.
> > >
> > > Did you try what was previously suggested of putting the mod_python
> > > configuration stuff in an appropriate Directory directive in your main
> > > Apache configuration file?
> > >
> > >
> > > PythonHandler mptest
> > > AddHandler mod_python .py
> > > PythonDebug On
> > >
> > >
> > > Graham
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > Im running the latest python version, mod_python 3.3.1, and latest
> > Apache.
> > > > Heres my apache config file
> > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > Still having trouble figuring out why apache still shows the source
> code
> > > of
> > > > .py files instead of the code output.
> > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > > >
> > >
> > >
> >
> >
>
>
From ryan_gm at sbcglobal.net  Wed Jul 18 01:23:30 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Wed Jul 18 01:23:39 2007
Subject: [mod_python] (no subject)
In-Reply-To: <88e286470707172147x20a95aa3o3285cecb3b37013@mail.gmail.com>
Message-ID: <852613.4503.qm@web80804.mail.mud.yahoo.com>

Alright ill read the link you sent,
But i did add that line to the config file and i went to /mptest and it was not found.

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: I told you to do something which was unrelated to the mptest.py file.
I asked you to add to your main Apache configuration file:

 
 SetHandler mod_python
 PythonHandler mod_python.testhandler
 

You should then have restarted Apache. When you access your web server
from a web browser using the URL /mpinfo, this should have the result
of triggering the special inbuilt mod_python handler called
mod_python.testhandler. The Location directive in this case has got
nothing to do with your files and directories that exists on disk, it
matches the URL directly. I wanted you to at least get this working so
I knew whether you knew enough about Apache configuration so that I
had some idea that my other instructions made any sense to you and
that you were following them correctly. This Location based test
handler check was a simple as I could get and wouldn't depend on other
things you could get wrong and not manage to correct such as file and
user permissions. If you weren't able to even get this going, then I'd
have to consider that I wasting my time until you went and actually
read the Apache documentation and learned how to configure and use
Apache, something which I still suggest you now go do.

Graham

On 18/07/07, ryan luna  wrote:
> /mpinfo is a .py file...meaning when i got to /mpinfo it shows the source
> code i thought iv made this clear -.-
>
> Graham Dumpleton  wrote:
>  If you don't understand what a Location directive is and that to
> access /mpinfo meant to access from it your web browser, I would very
> much suggest that before even trying to use mod_python that you learn
> something about Apache and configuring it first. I suggest starting
> with the following:
>
>  http://httpd.apache.org/docs/2.2/
>
> Without you having some understanding of Apache configuration we could
> go on forever suggesting you try certain things, yet never even be
> certain that you are doing it correctly, and probably never find a
> solution either.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > You mean putting those lines to the httpd.conf and running the mpinfo.py?
> > If so this is what i get
> > Traceback (most recent call last):
> > File "C:\Scripts\mptest.py", line 1, in
> > from mod_python import apache
> > File
> > "C:\Python25\Lib\site-packages\mod_python\apache.py",
> line
> > 30, in
> > import _apache
> > ImportError: No module named _apache
> >
> > Graham Dumpleton wrote:
> > What happens if you use add this configuration:
> >
> >
> > SetHandler mod_python
> > PythonHandler mod_python.testhandler
> >
> >
> > Then access '/mpinfo'.
> >
> > Do you get lots of mod_python debug info?
> >
> > Graham.
> >
> > On 18/07/07, ryan luna wrote:
> > > I just tried that and theres no change.
> > > The fact that im using WAMP instead of straight up Apache wouldn't have
> > > anything to do with it would it?
> > >
> > > Graham Dumpleton wrote:
> > > Hmmm, you never mentioned you were on a Windows box.
> > >
> > > Did you try what was previously suggested of putting the mod_python
> > > configuration stuff in an appropriate Directory directive in your main
> > > Apache configuration file?
> > >
> > >
> > > PythonHandler mptest
> > > AddHandler mod_python .py
> > > PythonDebug On
> > >
> > >
> > > Graham
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > Im running the latest python version, mod_python 3.3.1, and latest
> > Apache.
> > > > Heres my apache config file
> > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > Still having trouble figuring out why apache still shows the source
> code
> > > of
> > > > .py files instead of the code output.
> > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > > >
> > >
> > >
> >
> >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070717/1db8f427/attachment.html
From graham.dumpleton at gmail.com  Wed Jul 18 01:36:55 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jul 18 01:37:05 2007
Subject: [mod_python] (no subject)
In-Reply-To: <852613.4503.qm@web80804.mail.mud.yahoo.com>
References: <88e286470707172147x20a95aa3o3285cecb3b37013@mail.gmail.com>
	<852613.4503.qm@web80804.mail.mud.yahoo.com>
Message-ID: <88e286470707172236m6523c998p929e621af83c2be@mail.gmail.com>

If you went to /mptest I wouldn't be surprised that it was not found
as that isn't the URL I told you to use. I said to use /mpinfo and
that should have been obvious from the configuration example.

Also, whatever email program you are using keeps deleting parts of the
examples I send you when they appear in your responses. Turn off your
HTML editing/rendering in your email program. You may well find that
if you read the original raw text of the messages that you will find
other bits of configuration which you aren't even putting in your
files. This may well account for why you can't get anything working.

Anyway, when you can get that /mpinfo test handler example working and
have read about Apache configuration then come back to the list. I
though seem not be able to help you, so if you are lucky someone else
with more patience than me will keep going.

Graham

On 18/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> Alright ill read the link you sent,
> But i did add that line to the config file and i went to /mptest and it was
> not found.
>
> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  I told you to do something which was unrelated to the mptest.py file.
> I asked you to add to your main Apache configuration file:
>
>
>  SetHandler mod_python
>  PythonHandler mod_python.testhandler
>
>
> You should then have restarted Apache. When you access your web server
> from a web browser using the URL /mpinfo, this should have the result
> of triggering the special inbuilt mod_python handler called
> mod_python.testhandler. The Location directive in this case has got
> nothing to do with your files and directories that exists on disk, it
> matches the URL directly. I wanted you to at least get this working so
> I knew whether you knew enough about Apache configuration so that I
> had some idea that my other instructions made any sense to you and
> that you were following them correctly. This Location based test
> handler check was a simple as I could get and wouldn't depend on other
> things you could get wrong and not manage to correct such as file and
> user permissions. If you weren't able to even get this going, then I'd
> have to consider that I wasting my time until you went and actually
> read the Apache documentation and learned how to configure and use
> Apache, something which I still suggest you now go do.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > /mpinfo is a .py file...meaning when i got to /mpinfo it shows the source
> > code i thought iv made this clear -.-
> >
> > Graham Dumpleton wrote:
> > If you don't understand what a Location directive is and that to
> > access /mpinfo meant to access from it your web browser, I would very
> > much suggest that before even trying to use mod_python that you learn
> > something about Apache and configuring it first. I suggest starting
> > with the following:
> >
> > http://httpd.apache.org/docs/2.2/
> >
> > Without you having some understanding of Apache configuration we could
> > go on forever suggesting you try certain things, yet never even be
> > certain that you are doing it correctly, and probably never find a
> > solution either.
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > You mean putting those lines to the httpd.conf and running the
> mpinfo.py?
> > > If so this is what i get
> > > Traceback (most recent call last):
> > > File "C:\Scripts\mptest.py", line 1, in
> > > from mod_python import apache
> > > File
> > > "C:\Python25\Lib\site-packages\mod_python\apache.py",
> > line
> > > 30, in
> > > import _apache
> > > ImportError: No module named _apache
> > >
> > > Graham Dumpleton wrote:
> > > What happens if you use add this configuration:
> > >
> > >
> > > SetHandler mod_python
> > > PythonHandler mod_python.testhandler
> > >
> > >
> > > Then access '/mpinfo'.
> > >
> > > Do you get lots of mod_python debug info?
> > >
> > > Graham.
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > I just tried that and theres no change.
> > > > The fact that im using WAMP instead of straight up Apache wouldn't
> have
> > > > anything to do with it would it?
> > > >
> > > > Graham Dumpleton wrote:
> > > > Hmmm, you never mentioned you were on a Windows box.
> > > >
> > > > Did you try what was previously suggested of putting the mod_python
> > > > configuration stuff in an appropriate Directory directive in your main
> > > > Apache configuration file?
> > > >
> > > >
> > > > PythonHandler mptest
> > > > AddHandler mod_python .py
> > > > PythonDebug On
> > > >
> > > >
> > > > Graham
> > > >
> > > > On 18/07/07, ryan luna wrote:
> > > > > Im running the latest python version, mod_python 3.3.1, and latest
> > > Apache.
> > > > > Heres my apache config file
> > > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > > Still having trouble figuring out why apache still shows the source
> > code
> > > > of
> > > > > .py files instead of the code output.
> > > > >
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > >
> > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > > > >
> > > >
> > > >
> > >
> > >
> >
> >
>
>
From ryan_gm at sbcglobal.net  Wed Jul 18 02:12:49 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Wed Jul 18 02:12:59 2007
Subject: [mod_python] (no subject)
In-Reply-To: <88e286470707172236m6523c998p929e621af83c2be@mail.gmail.com>
Message-ID: <678080.99463.qm@web80802.mail.mud.yahoo.com>

hmm yeah its late, /mpinfo does show alot of info.
Your not seeing the full code in my replys but im seeing it in my emails

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: If you went to /mptest I wouldn't be surprised that it was not found
as that isn't the URL I told you to use. I said to use /mpinfo and
that should have been obvious from the configuration example.

Also, whatever email program you are using keeps deleting parts of the
examples I send you when they appear in your responses. Turn off your
HTML editing/rendering in your email program. You may well find that
if you read the original raw text of the messages that you will find
other bits of configuration which you aren't even putting in your
files. This may well account for why you can't get anything working.

Anyway, when you can get that /mpinfo test handler example working and
have read about Apache configuration then come back to the list. I
though seem not be able to help you, so if you are lucky someone else
with more patience than me will keep going.

Graham

On 18/07/07, ryan luna  wrote:
> Alright ill read the link you sent,
> But i did add that line to the config file and i went to /mptest and it was
> not found.
>
> Graham Dumpleton  wrote:
>  I told you to do something which was unrelated to the mptest.py file.
> I asked you to add to your main Apache configuration file:
>
>
>  SetHandler mod_python
>  PythonHandler mod_python.testhandler
>
>
> You should then have restarted Apache. When you access your web server
> from a web browser using the URL /mpinfo, this should have the result
> of triggering the special inbuilt mod_python handler called
> mod_python.testhandler. The Location directive in this case has got
> nothing to do with your files and directories that exists on disk, it
> matches the URL directly. I wanted you to at least get this working so
> I knew whether you knew enough about Apache configuration so that I
> had some idea that my other instructions made any sense to you and
> that you were following them correctly. This Location based test
> handler check was a simple as I could get and wouldn't depend on other
> things you could get wrong and not manage to correct such as file and
> user permissions. If you weren't able to even get this going, then I'd
> have to consider that I wasting my time until you went and actually
> read the Apache documentation and learned how to configure and use
> Apache, something which I still suggest you now go do.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > /mpinfo is a .py file...meaning when i got to /mpinfo it shows the source
> > code i thought iv made this clear -.-
> >
> > Graham Dumpleton wrote:
> > If you don't understand what a Location directive is and that to
> > access /mpinfo meant to access from it your web browser, I would very
> > much suggest that before even trying to use mod_python that you learn
> > something about Apache and configuring it first. I suggest starting
> > with the following:
> >
> > http://httpd.apache.org/docs/2.2/
> >
> > Without you having some understanding of Apache configuration we could
> > go on forever suggesting you try certain things, yet never even be
> > certain that you are doing it correctly, and probably never find a
> > solution either.
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > You mean putting those lines to the httpd.conf and running the
> mpinfo.py?
> > > If so this is what i get
> > > Traceback (most recent call last):
> > > File "C:\Scripts\mptest.py", line 1, in
> > > from mod_python import apache
> > > File
> > > "C:\Python25\Lib\site-packages\mod_python\apache.py",
> > line
> > > 30, in
> > > import _apache
> > > ImportError: No module named _apache
> > >
> > > Graham Dumpleton wrote:
> > > What happens if you use add this configuration:
> > >
> > >
> > > SetHandler mod_python
> > > PythonHandler mod_python.testhandler
> > >
> > >
> > > Then access '/mpinfo'.
> > >
> > > Do you get lots of mod_python debug info?
> > >
> > > Graham.
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > I just tried that and theres no change.
> > > > The fact that im using WAMP instead of straight up Apache wouldn't
> have
> > > > anything to do with it would it?
> > > >
> > > > Graham Dumpleton wrote:
> > > > Hmmm, you never mentioned you were on a Windows box.
> > > >
> > > > Did you try what was previously suggested of putting the mod_python
> > > > configuration stuff in an appropriate Directory directive in your main
> > > > Apache configuration file?
> > > >
> > > >
> > > > PythonHandler mptest
> > > > AddHandler mod_python .py
> > > > PythonDebug On
> > > >
> > > >
> > > > Graham
> > > >
> > > > On 18/07/07, ryan luna wrote:
> > > > > Im running the latest python version, mod_python 3.3.1, and latest
> > > Apache.
> > > > > Heres my apache config file
> > > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > > Still having trouble figuring out why apache still shows the source
> > code
> > > > of
> > > > > .py files instead of the code output.
> > > > >
> > > > > _______________________________________________
> > > > > Mod_python mailing list
> > > > > Mod_python@modpython.org
> > > > >
> > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > >
> > > > >
> > > >
> > > >
> > >
> > >
> >
> >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070717/a8a7648b/attachment-0001.html
From graham.dumpleton at gmail.com  Wed Jul 18 05:02:20 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jul 18 05:02:28 2007
Subject: [mod_python] (no subject)
In-Reply-To: <678080.99463.qm@web80802.mail.mud.yahoo.com>
References: <88e286470707172236m6523c998p929e621af83c2be@mail.gmail.com>
	<678080.99463.qm@web80802.mail.mud.yahoo.com>
Message-ID: <88e286470707180202p66aee3d4g1cb204f3b95f66e0@mail.gmail.com>

Since you have that Location test handler working, now change:

<Location /mpinfo>
 SetHandler mod_python
 PythonHandler mod_python.testhandler
 </Location>

to:

<Location /mpinfo>
 SetHandler mod_python
 PythonHandler C:/Scripts/mptest.py
 </Location>

Ie., change PythonHandler to be the full pathname to your Python code
file with your test handler in it. Then restart and access /mpinfo
again.

Using Location will avoid all the problems you seem to have with
getting Directory directive to work and at least give you something to
play with.

Graham

On 18/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> hmm yeah its late, /mpinfo does show alot of info.
> Your not seeing the full code in my replys but im seeing it in my emails
>
> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  If you went to /mptest I wouldn't be surprised that it was not found
> as that isn't the URL I told you to use. I said to use /mpinfo and
> that should have been obvious from the configuration example.
>
> Also, whatever email program you are using keeps deleting parts of the
> examples I send you when they appear in your responses. Turn off your
> HTML editing/rendering in your email program. You may well find that
> if you read the original raw text of the messages that you will find
> other bits of configuration which you aren't even putting in your
> files. This may well account for why you can't get anything working.
>
> Anyway, when you can get that /mpinfo test handler example working and
> have read about Apache configuration then come back to the list. I
> though seem not be able to help you, so if you are lucky someone else
> with more patience than me will keep going.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > Alright ill read the link you sent,
> > But i did add that line to the config file and i went to /mptest and it
> was
> > not found.
> >
> > Graham Dumpleton wrote:
> > I told you to do something which was unrelated to the mptest.py file.
> > I asked you to add to your main Apache configuration file:
> >
> >
> > SetHandler mod_python
> > PythonHandler mod_python.testhandler
> >
> >
> > You should then have restarted Apache. When you access your web server
> > from a web browser using the URL /mpinfo, this should have the result
> > of triggering the special inbuilt mod_python handler called
> > mod_python.testhandler. The Location directive in this case has got
> > nothing to do with your files and directories that exists on disk, it
> > matches the URL directly. I wanted you to at least get this working so
> > I knew whether you knew enough about Apache configuration so that I
> > had some idea that my other instructions made any sense to you and
> > that you were following them correctly. This Location based test
> > handler check was a simple as I could get and wouldn't depend on other
> > things you could get wrong and not manage to correct such as file and
> > user permissions. If you weren't able to even get this going, then I'd
> > have to consider that I wasting my time until you went and actually
> > read the Apache documentation and learned how to configure and use
> > Apache, something which I still suggest you now go do.
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > /mpinfo is a .py file...meaning when i got to /mpinfo it shows the
> source
> > > code i thought iv made this clear -.-
> > >
> > > Graham Dumpleton wrote:
> > > If you don't understand what a Location directive is and that to
> > > access /mpinfo meant to access from it your web browser, I would very
> > > much suggest that before even trying to use mod_python that you learn
> > > something about Apache and configuring it first. I suggest starting
> > > with the following:
> > >
> > > http://httpd.apache.org/docs/2.2/
> > >
> > > Without you having some understanding of Apache configuration we could
> > > go on forever suggesting you try certain things, yet never even be
> > > certain that you are doing it correctly, and probably never find a
> > > solution either.
> > >
> > > Graham
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > You mean putting those lines to the httpd.conf and running the
> > mpinfo.py?
> > > > If so this is what i get
> > > > Traceback (most recent call last):
> > > > File "C:\Scripts\mptest.py", line 1, in
> > > > from mod_python import apache
> > > > File
> > > > "C:\Python25\Lib\site-packages\mod_python\apache.py",
> > > line
> > > > 30, in
> > > > import _apache
> > > > ImportError: No module named _apache
> > > >
> > > > Graham Dumpleton wrote:
> > > > What happens if you use add this configuration:
> > > >
> > > >
> > > > SetHandler mod_python
> > > > PythonHandler mod_python.testhandler
> > > >
> > > >
> > > > Then access '/mpinfo'.
> > > >
> > > > Do you get lots of mod_python debug info?
> > > >
> > > > Graham.
> > > >
> > > > On 18/07/07, ryan luna wrote:
> > > > > I just tried that and theres no change.
> > > > > The fact that im using WAMP instead of straight up Apache wouldn't
> > have
> > > > > anything to do with it would it?
> > > > >
> > > > > Graham Dumpleton wrote:
> > > > > Hmmm, you never mentioned you were on a Windows box.
> > > > >
> > > > > Did you try what was previously suggested of putting the mod_python
> > > > > configuration stuff in an appropriate Directory directive in your
> main
> > > > > Apache configuration file?
> > > > >
> > > > >
> > > > > PythonHandler mptest
> > > > > AddHandler mod_python .py
> > > > > PythonDebug On
> > > > >
> > > > >
> > > > > Graham
> > > > >
> > > > > On 18/07/07, ryan luna wrote:
> > > > > > Im running the latest python version, mod_python 3.3.1, and latest
> > > > Apache.
> > > > > > Heres my apache config file
> > > > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > > > Still having trouble figuring out why apache still shows the
> source
> > > code
> > > > > of
> > > > > > .py files instead of the code output.
> > > > > >
> > > > > > _______________________________________________
> > > > > > Mod_python mailing list
> > > > > > Mod_python@modpython.org
> > > > > >
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > >
> > > > > >
> > > > >
> > > > >
> > > >
> > > >
> > >
> > >
> >
> >
>
>
From rebcoair at cfl.rr.com  Wed Jul 18 07:13:11 2007
From: rebcoair at cfl.rr.com (ron banks)
Date: Wed Jul 18 07:16:59 2007
Subject: [Re: [mod_python] Using Templates]
Message-ID: <1184757191.27298.3.camel@245-73.202-68.tampabay.res.rr.com>

Jim,

Any advice on this? Thanks again.

-------- Forwarded Message --------
From: ron banks <rebcoair@cfl.rr.com>
Reply-To: rebcoair@cfl.rr.com
To: Jim Gallacher <jpg@jgassociates.ca>
Cc: mod_python Mailing List <mod_python@modpython.org>
Subject: Re: [mod_python] Using Templates
Date: Sat, 14 Jul 2007 21:03:59 -0400

Jim,

Sorry Jim, our company had a series of hardware failures taking out our
phone systems that required attention. Had to put this on hold for 24
hrs. Got to make a living while experimenting on other things, right?

Ok, it certainly is easier to debug when you get running code. I'll
claim ignorance on the dead lock in the session calls. After your tip
and seeing that in the documentation it was easy to find and correct the
offending code. The template calls are now working, thanks, and in the
long run this will be a much cleaner method for what I am doing with the
separation of code and content.

That leaves the one problem remaining with reloading or redirecting the
new page with the new date information. The function that I am using to
update the session works and yes I do a session.save() at the end. I
have a page where I can check the session values and they are updated
each time so that's not the problem. What is the best method in my
situation to use to load the page again using the new session variable
from mod_python?

On Thu, 2007-07-12 at 11:07 -0400, Jim Gallacher wrote: 
> ron banks wrote:
> > Graham,
> > 
> > Thanks for the reply. I do realize that the '=' is wrong. When removed
> > the browser just hangs without reporting errors.
> 
> It occurs to me that you may have a session deadlock. Do you use the 
> "session" variable name anywhere in any of your psp templates, or is it 
> just in setStrDate?

> The rule is that you should only create one session instance per 
> request. When a session instance is created it is locked for the 
> duration of the request to protect your data. If you attempt to create a 
> second instance the request will appear to hang as the 2nd session waits 
> for the lock to be released, which of course never happens.
> 
> There is some "magic" in psp where it will create a session instance if 
> it finds a variable named "session" anywhere in the template. It will 
> check to see if it can find req.session first, so if you need to create 
> a session outside of psp make sure you assign it to req.session. This is 
> probably a good habit to get into even if you aren't using the psp handler.
> 
> > What I am not getting
> > is how to properly set the 'strDate' variable in:
> 
> Actually, I think you are setting it properly. ;)
> 
> > ----------------Month.tmpl------------------
> > <%=loadMonth(req, strDate)%>
> >                   ^^^^^^^
> > 
> > with this function:
> > ---------------setStrDate-------------------
> > def setStrDate(req):
> > 	session = Session.Session(req)
> > 	if session.is_new():
> > 		strDate = ""
> > 	else:
> > 		strDate = getSessionVariable(session, 'currDate')
> > 	req.content_type = 'text/html'
> > 	tmpl = psp.PSP(req, filename='Month.tmpl')
> > 	tmpl.run(vars = {'strDate': strDate})
> > 	return ""
> > 
> > called from:
> > ----------------Month.psp------------------
> > <%
> > from mod_python import apache, psp
> > from loadCalendar import setStrDate
> > %>
> > <%=setStrDate(req)%>
> > 
> > How should this be done? This is a first experiment for me utilizing
> > templates. What I am trying to do is to set a session variable
> > 'currDate' with a new date through ajax methods and load a page with the
> > same loadMonth function which builds a calendar populated with records
> > from a database backend. I have worked out almost everything else and
> > have only a couple of problems before I can move forward.
> 
> You're on the right track. I would suggest that you simplify 
> setStrDate() so that it only does one thing. You might also consider 
> renaming it to getStrDate as that seems to be it's function. Move the 
> things not related to the date to another function. It'll make your 
> program logic easier to understand. It might not see like a big deal 
> right now, but if need to come back and modify the code 6 months from 
> now you'll thank me. ;)
> 
> Your code might look more like this:
> 
> ---------------getStrDate-------------------
> def getStrDate(req):
> 	if not hasattr(req, 'session'):
> 		req.session = Session.Session(req)
> 	if req.session.is_new():
>   		strDate = ""
>   	else:
>   		strDate = getSessionVariable(req.session, 'currDate')
>   	return strDate
> 
> 
> ----------------Month.tmpl------------------
> <%
> loadMonth(req, strDate)
> %>
> 
> 
> ----------------Month.psp------------------
> <%
> from mod_python import apache, psp
> from loadCalendar import getStrDate
> 
> strDate = getStrDate(req)
> 
> tmpl = psp.PSP(req, filename='Month.tmpl')
> tmpl.run(vars = {'strDate': strDate})
> 
> %>
> 
> > I either need to figure out how to utilize a template system as
> > described which I think might be preferable in this situation or
> > possibly reload the same page letting the loadMonth function pick up the
> > changed session variable and building the page based on the new date.
> > I'm not sure how to reload the page. Should I use some type of redirect
> > from the server side or javascript from the client side? I have only
> > started to experiment with these methods. I can't seem to get the
> > redirect to do anything yet.  With the javascript reload the session
> > variable seems to go away.
> 
> This may be related to the way you are using sessions. Once we've 
> determined if you have a deadlock we can deal with this issue.
> 
> Do you save the session anywhere, or are you depending on psp? Psp will 
> only save the session if it finds the "session" variable name in your 
> template. Otherwise you'll need to save it explicitly somewhere with 
> session.save().
> 
> > Is this because of the new request or
> > something? Maybe a better method is to control session information in
> > the database and just use javascript. I don't know what differences in
> > speed would be. What do you think?
> 
> Use the mod_python session machinery until you've got it working. Adding 
> another layer of complexity won't help at this point.
> 
> As I mull this over I'm convinced you're problem lies with the way you 
> are using sessions, and not with psp templates.
> 
> Jim
> 

From ryan_gm at sbcglobal.net  Wed Jul 18 07:19:07 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Wed Jul 18 07:19:18 2007
Subject: [mod_python] (no subject)
In-Reply-To: <88e286470707180202p66aee3d4g1cb204f3b95f66e0@mail.gmail.com>
Message-ID: <854141.58569.qm@web80811.mail.mud.yahoo.com>

Now when i go to /mpinfo after making the changes in your message the mptest.py runs, and prints "Hello World" like it should

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: Since you have that Location test handler working, now change:


 SetHandler mod_python
 PythonHandler mod_python.testhandler
 

to:


 SetHandler mod_python
 PythonHandler C:/Scripts/mptest.py
 

Ie., change PythonHandler to be the full pathname to your Python code
file with your test handler in it. Then restart and access /mpinfo
again.

Using Location will avoid all the problems you seem to have with
getting Directory directive to work and at least give you something to
play with.

Graham

On 18/07/07, ryan luna  wrote:
> hmm yeah its late, /mpinfo does show alot of info.
> Your not seeing the full code in my replys but im seeing it in my emails
>
> Graham Dumpleton  wrote:
>  If you went to /mptest I wouldn't be surprised that it was not found
> as that isn't the URL I told you to use. I said to use /mpinfo and
> that should have been obvious from the configuration example.
>
> Also, whatever email program you are using keeps deleting parts of the
> examples I send you when they appear in your responses. Turn off your
> HTML editing/rendering in your email program. You may well find that
> if you read the original raw text of the messages that you will find
> other bits of configuration which you aren't even putting in your
> files. This may well account for why you can't get anything working.
>
> Anyway, when you can get that /mpinfo test handler example working and
> have read about Apache configuration then come back to the list. I
> though seem not be able to help you, so if you are lucky someone else
> with more patience than me will keep going.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > Alright ill read the link you sent,
> > But i did add that line to the config file and i went to /mptest and it
> was
> > not found.
> >
> > Graham Dumpleton wrote:
> > I told you to do something which was unrelated to the mptest.py file.
> > I asked you to add to your main Apache configuration file:
> >
> >
> > SetHandler mod_python
> > PythonHandler mod_python.testhandler
> >
> >
> > You should then have restarted Apache. When you access your web server
> > from a web browser using the URL /mpinfo, this should have the result
> > of triggering the special inbuilt mod_python handler called
> > mod_python.testhandler. The Location directive in this case has got
> > nothing to do with your files and directories that exists on disk, it
> > matches the URL directly. I wanted you to at least get this working so
> > I knew whether you knew enough about Apache configuration so that I
> > had some idea that my other instructions made any sense to you and
> > that you were following them correctly. This Location based test
> > handler check was a simple as I could get and wouldn't depend on other
> > things you could get wrong and not manage to correct such as file and
> > user permissions. If you weren't able to even get this going, then I'd
> > have to consider that I wasting my time until you went and actually
> > read the Apache documentation and learned how to configure and use
> > Apache, something which I still suggest you now go do.
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > /mpinfo is a .py file...meaning when i got to /mpinfo it shows the
> source
> > > code i thought iv made this clear -.-
> > >
> > > Graham Dumpleton wrote:
> > > If you don't understand what a Location directive is and that to
> > > access /mpinfo meant to access from it your web browser, I would very
> > > much suggest that before even trying to use mod_python that you learn
> > > something about Apache and configuring it first. I suggest starting
> > > with the following:
> > >
> > > http://httpd.apache.org/docs/2.2/
> > >
> > > Without you having some understanding of Apache configuration we could
> > > go on forever suggesting you try certain things, yet never even be
> > > certain that you are doing it correctly, and probably never find a
> > > solution either.
> > >
> > > Graham
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > You mean putting those lines to the httpd.conf and running the
> > mpinfo.py?
> > > > If so this is what i get
> > > > Traceback (most recent call last):
> > > > File "C:\Scripts\mptest.py", line 1, in
> > > > from mod_python import apache
> > > > File
> > > > "C:\Python25\Lib\site-packages\mod_python\apache.py",
> > > line
> > > > 30, in
> > > > import _apache
> > > > ImportError: No module named _apache
> > > >
> > > > Graham Dumpleton wrote:
> > > > What happens if you use add this configuration:
> > > >
> > > >
> > > > SetHandler mod_python
> > > > PythonHandler mod_python.testhandler
> > > >
> > > >
> > > > Then access '/mpinfo'.
> > > >
> > > > Do you get lots of mod_python debug info?
> > > >
> > > > Graham.
> > > >
> > > > On 18/07/07, ryan luna wrote:
> > > > > I just tried that and theres no change.
> > > > > The fact that im using WAMP instead of straight up Apache wouldn't
> > have
> > > > > anything to do with it would it?
> > > > >
> > > > > Graham Dumpleton wrote:
> > > > > Hmmm, you never mentioned you were on a Windows box.
> > > > >
> > > > > Did you try what was previously suggested of putting the mod_python
> > > > > configuration stuff in an appropriate Directory directive in your
> main
> > > > > Apache configuration file?
> > > > >
> > > > >
> > > > > PythonHandler mptest
> > > > > AddHandler mod_python .py
> > > > > PythonDebug On
> > > > >
> > > > >
> > > > > Graham
> > > > >
> > > > > On 18/07/07, ryan luna wrote:
> > > > > > Im running the latest python version, mod_python 3.3.1, and latest
> > > > Apache.
> > > > > > Heres my apache config file
> > > > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > > > Still having trouble figuring out why apache still shows the
> source
> > > code
> > > > > of
> > > > > > .py files instead of the code output.
> > > > > >
> > > > > > _______________________________________________
> > > > > > Mod_python mailing list
> > > > > > Mod_python@modpython.org
> > > > > >
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > >
> > > > > >
> > > > >
> > > > >
> > > >
> > > >
> > >
> > >
> >
> >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070718/fa555e09/attachment-0001.html
From madewulf at ulb.ac.be  Wed Jul 18 10:43:48 2007
From: madewulf at ulb.ac.be (Martin De Wulf)
Date: Wed Jul 18 10:43:10 2007
Subject: [mod_python] How to get the html code in a string when using psp ? 
Message-ID: <469E2724.7040207@ulb.ac.be>

Hello all,

I am new to the mod_python mailing list.

I just wrote a small code that uses  the  publisher  handler and  psp. 
The pages are correctly generated and published for the users of the
website. My only problem is that I would like to mail a copy of the page
to some email adress.

How could I get the html code of the generated pages in a string ? (if
possible, not using the obvious solution of reposting the data and
grabbing the code through for example wget).

Thanks a lot if you can help !

Martin

From dm at ling.ohio-state.edu  Wed Jul 18 14:19:15 2007
From: dm at ling.ohio-state.edu (Detmar Meurers)
Date: Wed Jul 18 14:19:24 2007
Subject: [mod_python] How to get the html code in a string when using psp ?
In-Reply-To: <469E2724.7040207@ulb.ac.be>
References: <469E2724.7040207@ulb.ac.be>
Message-ID: <20070718181915.GA14932@ling.ohio-state.edu>

Hi Martin,
    
    I am new to the mod_python mailing list.
    
welcome.

    I just wrote a small code that uses  the  publisher  handler and  psp. 
    The pages are correctly generated and published for the users of the
    website. My only problem is that I would like to mail a copy of the page
    to some email adress.
    
    How could I get the html code of the generated pages in a string ? (if
    possible, not using the obvious solution of reposting the data and
    grabbing the code through for example wget).
    
I asked this a while back and based on a pointer by Graham Dumpleton
to a posting by Jim Gallacher I wrote the code below which I think
does what you're looking for.

Best,
Detmar

# Example code for turning psp template into html string, based on
# http://www.modpython.org/pipermail/mod_python/2006-June/021292.html

from mod_python import _psp

def psp2html(filename,vars={}):
     req = FakeRequestObject()
     vars['req'] = req
     source = _psp.parse(filename)
     code = compile(source, filename, 'exec')
     global_scope = globals().copy()
     global_scope.update(vars)
     exec code in global_scope
     return req.html()

class FakeRequestObject(object):
     def __init__(self):
          self.htmlList = []

     def write(self, value, length):
         self.htmlList.append(value)

     def html(self):
	 return "".join(self.htmlList)

if __name__ == "__main__":
    print psp2html('template_file.psp',  {'var_in_psp1': 'some value' ,
                                          'var_in_psp2': 'another value'})

### end of python file

For completeness sake, the template_file.psp mentioned above looks as:

<html>
<head>
      <title>
      <%= var_in_psp1 %>
      </title>
</head>

<body>
      <%= var_in_psp2 %>
</body>
</html>
From jpg at jgassociates.ca  Wed Jul 18 15:31:50 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jul 18 15:31:29 2007
Subject: [Re: [mod_python] Using Templates]
In-Reply-To: <1184757191.27298.3.camel@245-73.202-68.tampabay.res.rr.com>
References: <1184757191.27298.3.camel@245-73.202-68.tampabay.res.rr.com>
Message-ID: <469E6AA6.4020808@jgassociates.ca>

ron banks wrote:
> Jim,
> 
> Any advice on this? Thanks again.

As I recall you are doing the AJAXy thing to update the calendar in the 
browser, correct? Are you rolling your own or using one of the toolkits 
like prototype, rico (which is built on top of prototype), dojo or whatever?

The AJAX toolkits can make this sort of thing really easy at the cost of 
making the initial page load a little slower while the toolkit is 
fetched. (And of course it'll mean you'll need to wade through another 
set of docs for the toolkit).

In any case you likely don't want to generate a completely new page for 
the update, and redirect really isn't what you want. Just have your 
javascript GET the html fragment (for example) and update the document 
element using innerHTML with whatever the url returns. Some toolkits 
handle this transparently. You just register the element id and send the 
request the the url. The toolkit updates the element with the returned html.

The html fragment (or perhaps json or xml data) would be generated by a 
new mod_python script or psp template, which only returns the 
information you require to update the html element in the browser. If 
you structure your code correctly this same template would be called to 
assist in creating the original page so that you don't duplicate the 
code in 2 places.

I hope this helps to get you going.

Jim


> 
> -------- Forwarded Message --------
> From: ron banks <rebcoair@cfl.rr.com>
> Reply-To: rebcoair@cfl.rr.com
> To: Jim Gallacher <jpg@jgassociates.ca>
> Cc: mod_python Mailing List <mod_python@modpython.org>
> Subject: Re: [mod_python] Using Templates
> Date: Sat, 14 Jul 2007 21:03:59 -0400
> 
> Jim,
> 
> Sorry Jim, our company had a series of hardware failures taking out our
> phone systems that required attention. Had to put this on hold for 24
> hrs. Got to make a living while experimenting on other things, right?
> 
> Ok, it certainly is easier to debug when you get running code. I'll
> claim ignorance on the dead lock in the session calls. After your tip
> and seeing that in the documentation it was easy to find and correct the
> offending code. The template calls are now working, thanks, and in the
> long run this will be a much cleaner method for what I am doing with the
> separation of code and content.
> 
> That leaves the one problem remaining with reloading or redirecting the
> new page with the new date information. The function that I am using to
> update the session works and yes I do a session.save() at the end. I
> have a page where I can check the session values and they are updated
> each time so that's not the problem. What is the best method in my
> situation to use to load the page again using the new session variable
> from mod_python?
> 
> On Thu, 2007-07-12 at 11:07 -0400, Jim Gallacher wrote: 
>> ron banks wrote:
>>> Graham,
>>>
>>> Thanks for the reply. I do realize that the '=' is wrong. When removed
>>> the browser just hangs without reporting errors.
>> It occurs to me that you may have a session deadlock. Do you use the 
>> "session" variable name anywhere in any of your psp templates, or is it 
>> just in setStrDate?
> 
>> The rule is that you should only create one session instance per 
>> request. When a session instance is created it is locked for the 
>> duration of the request to protect your data. If you attempt to create a 
>> second instance the request will appear to hang as the 2nd session waits 
>> for the lock to be released, which of course never happens.
>>
>> There is some "magic" in psp where it will create a session instance if 
>> it finds a variable named "session" anywhere in the template. It will 
>> check to see if it can find req.session first, so if you need to create 
>> a session outside of psp make sure you assign it to req.session. This is 
>> probably a good habit to get into even if you aren't using the psp handler.
>>
>>> What I am not getting
>>> is how to properly set the 'strDate' variable in:
>> Actually, I think you are setting it properly. ;)
>>
>>> ----------------Month.tmpl------------------
>>> <%=loadMonth(req, strDate)%>
>>>                   ^^^^^^^
>>>
>>> with this function:
>>> ---------------setStrDate-------------------
>>> def setStrDate(req):
>>> 	session = Session.Session(req)
>>> 	if session.is_new():
>>> 		strDate = ""
>>> 	else:
>>> 		strDate = getSessionVariable(session, 'currDate')
>>> 	req.content_type = 'text/html'
>>> 	tmpl = psp.PSP(req, filename='Month.tmpl')
>>> 	tmpl.run(vars = {'strDate': strDate})
>>> 	return ""
>>>
>>> called from:
>>> ----------------Month.psp------------------
>>> <%
>>> from mod_python import apache, psp
>>> from loadCalendar import setStrDate
>>> %>
>>> <%=setStrDate(req)%>
>>>
>>> How should this be done? This is a first experiment for me utilizing
>>> templates. What I am trying to do is to set a session variable
>>> 'currDate' with a new date through ajax methods and load a page with the
>>> same loadMonth function which builds a calendar populated with records
>>> from a database backend. I have worked out almost everything else and
>>> have only a couple of problems before I can move forward.
>> You're on the right track. I would suggest that you simplify 
>> setStrDate() so that it only does one thing. You might also consider 
>> renaming it to getStrDate as that seems to be it's function. Move the 
>> things not related to the date to another function. It'll make your 
>> program logic easier to understand. It might not see like a big deal 
>> right now, but if need to come back and modify the code 6 months from 
>> now you'll thank me. ;)
>>
>> Your code might look more like this:
>>
>> ---------------getStrDate-------------------
>> def getStrDate(req):
>> 	if not hasattr(req, 'session'):
>> 		req.session = Session.Session(req)
>> 	if req.session.is_new():
>>   		strDate = ""
>>   	else:
>>   		strDate = getSessionVariable(req.session, 'currDate')
>>   	return strDate
>>
>>
>> ----------------Month.tmpl------------------
>> <%
>> loadMonth(req, strDate)
>> %>
>>
>>
>> ----------------Month.psp------------------
>> <%
>> from mod_python import apache, psp
>> from loadCalendar import getStrDate
>>
>> strDate = getStrDate(req)
>>
>> tmpl = psp.PSP(req, filename='Month.tmpl')
>> tmpl.run(vars = {'strDate': strDate})
>>
>> %>
>>
>>> I either need to figure out how to utilize a template system as
>>> described which I think might be preferable in this situation or
>>> possibly reload the same page letting the loadMonth function pick up the
>>> changed session variable and building the page based on the new date.
>>> I'm not sure how to reload the page. Should I use some type of redirect
>>> from the server side or javascript from the client side? I have only
>>> started to experiment with these methods. I can't seem to get the
>>> redirect to do anything yet.  With the javascript reload the session
>>> variable seems to go away.
>> This may be related to the way you are using sessions. Once we've 
>> determined if you have a deadlock we can deal with this issue.
>>
>> Do you save the session anywhere, or are you depending on psp? Psp will 
>> only save the session if it finds the "session" variable name in your 
>> template. Otherwise you'll need to save it explicitly somewhere with 
>> session.save().
>>
>>> Is this because of the new request or
>>> something? Maybe a better method is to control session information in
>>> the database and just use javascript. I don't know what differences in
>>> speed would be. What do you think?
>> Use the mod_python session machinery until you've got it working. Adding 
>> another layer of complexity won't help at this point.
>>
>> As I mull this over I'm convinced you're problem lies with the way you 
>> are using sessions, and not with psp templates.
>>
>> Jim
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From ryan_gm at sbcglobal.net  Wed Jul 18 21:03:32 2007
From: ryan_gm at sbcglobal.net (ryan luna)
Date: Wed Jul 18 21:03:44 2007
Subject: [mod_python] (no subject)
In-Reply-To: <88e286470707180202p66aee3d4g1cb204f3b95f66e0@mail.gmail.com>
Message-ID: <953790.43188.qm@web80801.mail.mud.yahoo.com>

Opps i should have been more clear, it still doesn't read .py files but it works in /mpinfo

Graham Dumpleton <graham.dumpleton@gmail.com> wrote: Since you have that Location test handler working, now change:


 SetHandler mod_python
 PythonHandler mod_python.testhandler
 

to:


 SetHandler mod_python
 PythonHandler C:/Scripts/mptest.py
 

Ie., change PythonHandler to be the full pathname to your Python code
file with your test handler in it. Then restart and access /mpinfo
again.

Using Location will avoid all the problems you seem to have with
getting Directory directive to work and at least give you something to
play with.

Graham

On 18/07/07, ryan luna  wrote:
> hmm yeah its late, /mpinfo does show alot of info.
> Your not seeing the full code in my replys but im seeing it in my emails
>
> Graham Dumpleton  wrote:
>  If you went to /mptest I wouldn't be surprised that it was not found
> as that isn't the URL I told you to use. I said to use /mpinfo and
> that should have been obvious from the configuration example.
>
> Also, whatever email program you are using keeps deleting parts of the
> examples I send you when they appear in your responses. Turn off your
> HTML editing/rendering in your email program. You may well find that
> if you read the original raw text of the messages that you will find
> other bits of configuration which you aren't even putting in your
> files. This may well account for why you can't get anything working.
>
> Anyway, when you can get that /mpinfo test handler example working and
> have read about Apache configuration then come back to the list. I
> though seem not be able to help you, so if you are lucky someone else
> with more patience than me will keep going.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > Alright ill read the link you sent,
> > But i did add that line to the config file and i went to /mptest and it
> was
> > not found.
> >
> > Graham Dumpleton wrote:
> > I told you to do something which was unrelated to the mptest.py file.
> > I asked you to add to your main Apache configuration file:
> >
> >
> > SetHandler mod_python
> > PythonHandler mod_python.testhandler
> >
> >
> > You should then have restarted Apache. When you access your web server
> > from a web browser using the URL /mpinfo, this should have the result
> > of triggering the special inbuilt mod_python handler called
> > mod_python.testhandler. The Location directive in this case has got
> > nothing to do with your files and directories that exists on disk, it
> > matches the URL directly. I wanted you to at least get this working so
> > I knew whether you knew enough about Apache configuration so that I
> > had some idea that my other instructions made any sense to you and
> > that you were following them correctly. This Location based test
> > handler check was a simple as I could get and wouldn't depend on other
> > things you could get wrong and not manage to correct such as file and
> > user permissions. If you weren't able to even get this going, then I'd
> > have to consider that I wasting my time until you went and actually
> > read the Apache documentation and learned how to configure and use
> > Apache, something which I still suggest you now go do.
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > /mpinfo is a .py file...meaning when i got to /mpinfo it shows the
> source
> > > code i thought iv made this clear -.-
> > >
> > > Graham Dumpleton wrote:
> > > If you don't understand what a Location directive is and that to
> > > access /mpinfo meant to access from it your web browser, I would very
> > > much suggest that before even trying to use mod_python that you learn
> > > something about Apache and configuring it first. I suggest starting
> > > with the following:
> > >
> > > http://httpd.apache.org/docs/2.2/
> > >
> > > Without you having some understanding of Apache configuration we could
> > > go on forever suggesting you try certain things, yet never even be
> > > certain that you are doing it correctly, and probably never find a
> > > solution either.
> > >
> > > Graham
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > You mean putting those lines to the httpd.conf and running the
> > mpinfo.py?
> > > > If so this is what i get
> > > > Traceback (most recent call last):
> > > > File "C:\Scripts\mptest.py", line 1, in
> > > > from mod_python import apache
> > > > File
> > > > "C:\Python25\Lib\site-packages\mod_python\apache.py",
> > > line
> > > > 30, in
> > > > import _apache
> > > > ImportError: No module named _apache
> > > >
> > > > Graham Dumpleton wrote:
> > > > What happens if you use add this configuration:
> > > >
> > > >
> > > > SetHandler mod_python
> > > > PythonHandler mod_python.testhandler
> > > >
> > > >
> > > > Then access '/mpinfo'.
> > > >
> > > > Do you get lots of mod_python debug info?
> > > >
> > > > Graham.
> > > >
> > > > On 18/07/07, ryan luna wrote:
> > > > > I just tried that and theres no change.
> > > > > The fact that im using WAMP instead of straight up Apache wouldn't
> > have
> > > > > anything to do with it would it?
> > > > >
> > > > > Graham Dumpleton wrote:
> > > > > Hmmm, you never mentioned you were on a Windows box.
> > > > >
> > > > > Did you try what was previously suggested of putting the mod_python
> > > > > configuration stuff in an appropriate Directory directive in your
> main
> > > > > Apache configuration file?
> > > > >
> > > > >
> > > > > PythonHandler mptest
> > > > > AddHandler mod_python .py
> > > > > PythonDebug On
> > > > >
> > > > >
> > > > > Graham
> > > > >
> > > > > On 18/07/07, ryan luna wrote:
> > > > > > Im running the latest python version, mod_python 3.3.1, and latest
> > > > Apache.
> > > > > > Heres my apache config file
> > > > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > > > Still having trouble figuring out why apache still shows the
> source
> > > code
> > > > > of
> > > > > > .py files instead of the code output.
> > > > > >
> > > > > > _______________________________________________
> > > > > > Mod_python mailing list
> > > > > > Mod_python@modpython.org
> > > > > >
> > > >
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > >
> > > > > >
> > > > >
> > > > >
> > > >
> > > >
> > >
> > >
> >
> >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070718/5f173f33/attachment.html
From graham.dumpleton at gmail.com  Wed Jul 18 23:20:58 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Jul 18 23:21:07 2007
Subject: [mod_python] (no subject)
In-Reply-To: <953790.43188.qm@web80801.mail.mud.yahoo.com>
References: <88e286470707180202p66aee3d4g1cb204f3b95f66e0@mail.gmail.com>
	<953790.43188.qm@web80801.mail.mud.yahoo.com>
Message-ID: <88e286470707182020y157cb616u317f33d6b7b5fe3e@mail.gmail.com>

On 19/07/07, ryan luna <ryan_gm@sbcglobal.net> wrote:
> Opps i should have been more clear, it still doesn't read .py files but it
> works in /mpinfo

Well, it is reading your .py file, which considering how much problems
you have been having is a start.

If you are expecting to be able to stick multiple .py files in a
directory and that for different URLs to result in the different .py
files being executed, then you may be better off using
mod_python.publisher, otherwise you are going to have to write your
own handler dispatcher which is non trivial to do properly.

Before we get to that point, change your Location directive from:

<Location /mpinfo>
 SetHandler mod_python
 PythonHandler C:/Scripts/mptest.py
 </Location>

to:

<Directory C:/Scripts>
 AddHandler mod_python .py
 PythonHandler C:/Scripts/mptest.py
 </Directory>

Ie., change Location to Directory. Change URL location to physical
path. Change SetHandler to AddHandler and specific an extension.

Now, presuming that C:/Scripts is your document root, then using URL
with a .py extension should now trigger your handler file. Eg.

  /url1.py
  /url2.py
  /url3.py

The URL doesn't have to match the name of your code file, but it MUST
have the .py extension in it else the request will not be mapped to
your handler.

If you can get that working, then you have the basics required to go
off and experiment with some sort of dispatcher which would map the
request to one of many physical .py files. I'd probably suggest though
that you read up about mod_python.publisher and use it instead if you
need dispatching to files.

Graham

> Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
>  Since you have that Location test handler working, now change:
>
>
>  SetHandler mod_python
>  PythonHandler mod_python.testhandler
>
>
> to:
>
>
>  SetHandler mod_python
>  PythonHandler C:/Scripts/mptest.py
>
>
> Ie., change PythonHandler to be the full pathname to your Python code
> file with your test handler in it. Then restart and access /mpinfo
> again.
>
> Using Location will avoid all the problems you seem to have with
> getting Directory directive to work and at least give you something to
> play with.
>
> Graham
>
> On 18/07/07, ryan luna wrote:
> > hmm yeah its late, /mpinfo does show alot of info.
> > Your not seeing the full code in my replys but im seeing it in my emails
> >
> > Graham Dumpleton wrote:
> > If you went to /mptest I wouldn't be surprised that it was not found
> > as that isn't the URL I told you to use. I said to use /mpinfo and
> > that should have been obvious from the configuration example.
> >
> > Also, whatever email program you are using keeps deleting parts of the
> > examples I send you when they appear in your responses. Turn off your
> > HTML editing/rendering in your email program. You may well find that
> > if you read the original raw text of the messages that you will find
> > other bits of configuration which you aren't even putting in your
> > files. This may well account for why you can't get anything working.
> >
> > Anyway, when you can get that /mpinfo test handler example working and
> > have read about Apache configuration then come back to the list. I
> > though seem not be able to help you, so if you are lucky someone else
> > with more patience than me will keep going.
> >
> > Graham
> >
> > On 18/07/07, ryan luna wrote:
> > > Alright ill read the link you sent,
> > > But i did add that line to the config file and i went to /mptest and it
> > was
> > > not found.
> > >
> > > Graham Dumpleton wrote:
> > > I told you to do something which was unrelated to the mptest.py file.
> > > I asked you to add to your main Apache configuration file:
> > >
> > >
> > > SetHandler mod_python
> > > PythonHandler mod_python.testhandler
> > >
> > >
> > > You should then have restarted Apache. When you access your web server
> > > from a web browser using the URL /mpinfo, this should have the result
> > > of triggering the special inbuilt mod_python handler called
> > > mod_python.testhandler. The Location directive in this case has got
> > > nothing to do with your files and directories that exists on disk, it
> > > matches the URL directly. I wanted you to at least get this working so
> > > I knew whether you knew enough about Apache configuration so that I
> > > had some idea that my other instructions made any sense to you and
> > > that you were following them correctly. This Location based test
> > > handler check was a simple as I could get and wouldn't depend on other
> > > things you could get wrong and not manage to correct such as file and
> > > user permissions. If you weren't able to even get this going, then I'd
> > > have to consider that I wasting my time until you went and actually
> > > read the Apache documentation and learned how to configure and use
> > > Apache, something which I still suggest you now go do.
> > >
> > > Graham
> > >
> > > On 18/07/07, ryan luna wrote:
> > > > /mpinfo is a .py file...meaning when i got to /mpinfo it shows the
> > source
> > > > code i thought iv made this clear -.-
> > > >
> > > > Graham Dumpleton wrote:
> > > > If you don't understand what a Location directive is and that to
> > > > access /mpinfo meant to access from it your web browser, I would very
> > > > much suggest that before even trying to use mod_python that you learn
> > > > something about Apache and configuring it first. I suggest starting
> > > > with the following:
> > > >
> > > > http://httpd.apache.org/docs/2.2/
> > > >
> > > > Without you having some understanding of Apache configuration we could
> > > > go on forever suggesting you try certain things, yet never even be
> > > > certain that you are doing it correctly, and probably never find a
> > > > solution either.
> > > >
> > > > Graham
> > > >
> > > > On 18/07/07, ryan luna wrote:
> > > > > You mean putting those lines to the httpd.conf and running the
> > > mpinfo.py?
> > > > > If so this is what i get
> > > > > Traceback (most recent call last):
> > > > > File "C:\Scripts\mptest.py", line 1, in
> > > > > from mod_python import apache
> > > > > File
> > > > >
> "C:\Python25\Lib\site-packages\mod_python\apache.py",
> > > > line
> > > > > 30, in
> > > > > import _apache
> > > > > ImportError: No module named _apache
> > > > >
> > > > > Graham Dumpleton wrote:
> > > > > What happens if you use add this configuration:
> > > > >
> > > > >
> > > > > SetHandler mod_python
> > > > > PythonHandler mod_python.testhandler
> > > > >
> > > > >
> > > > > Then access '/mpinfo'.
> > > > >
> > > > > Do you get lots of mod_python debug info?
> > > > >
> > > > > Graham.
> > > > >
> > > > > On 18/07/07, ryan luna wrote:
> > > > > > I just tried that and theres no change.
> > > > > > The fact that im using WAMP instead of straight up Apache wouldn't
> > > have
> > > > > > anything to do with it would it?
> > > > > >
> > > > > > Graham Dumpleton wrote:
> > > > > > Hmmm, you never mentioned you were on a Windows box.
> > > > > >
> > > > > > Did you try what was previously suggested of putting the
> mod_python
> > > > > > configuration stuff in an appropriate Directory directive in your
> > main
> > > > > > Apache configuration file?
> > > > > >
> > > > > >
> > > > > > PythonHandler mptest
> > > > > > AddHandler mod_python .py
> > > > > > PythonDebug On
> > > > > >
> > > > > >
> > > > > > Graham
> > > > > >
> > > > > > On 18/07/07, ryan luna wrote:
> > > > > > > Im running the latest python version, mod_python 3.3.1, and
> latest
> > > > > Apache.
> > > > > > > Heres my apache config file
> > > > > > > http://www.megaupload.com/?d=OKNGKO7Q
> > > > > > > Still having trouble figuring out why apache still shows the
> > source
> > > > code
> > > > > > of
> > > > > > > .py files instead of the code output.
> > > > > > >
> > > > > > > _______________________________________________
> > > > > > > Mod_python mailing list
> > > > > > > Mod_python@modpython.org
> > > > > > >
> > > > >
> > >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > > > > > >
> > > > > > >
> > > > > >
> > > > > >
> > > > >
> > > > >
> > > >
> > > >
> > >
> > >
> >
> >
>
>
From andras at nic-nac-project.de  Thu Jul 19 06:31:13 2007
From: andras at nic-nac-project.de (andras@nic-nac-project.de)
Date: Thu Jul 19 06:32:34 2007
Subject: [mod_python] [emerg] No space left on device: Couldn't create
	accept lock
Message-ID: <20070719103111.GB4089@nic-nac-project.org>

hi all,
when i try to run mod_python on NetBSD-3.1 using the generic kernel my apache error-log says:

--
[emerg] (28)No space left on device: Couldn't create accept lock (/var/run/accept.lock.16040) (5)
--

of course there is enough space left on the device and all the permissions are correct.


i was only able to fix this by changing the kernel config:

GENERIC:
--
#options        SEMMNI=10       # number of semaphore identifiers
#options        SEMMNS=60       # number of semaphores in system
#options        SEMUME=10       # max number of undo entries per process
#options        SEMMNU=30       # number of undo structures in system
--

MODIFIED CONFIG:
--
options         SEMMNI=32       # number of semaphore identifiers
options         SEMMNS=60       # number of semaphores in system
options         SEMUME=10       # max number of undo entries per process
options         SEMMNU=30       # number of undo structures in system
--


this is valid for the ports on i386 and also on amd64.
NetBSD does not permit to change SEMMNI via sysctl.


my current setup:
NetBSD-3.1 amd64 (or i386)

apache-2.2.4nb6
python24-2.4.4
ap22-py24-python-3.2.10 


i hope this might be helpful to others.


regards,
andras
From graham.dumpleton at gmail.com  Thu Jul 19 18:20:40 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Jul 19 18:20:53 2007
Subject: [mod_python] [emerg] No space left on device: Couldn't create
	accept lock
In-Reply-To: <20070719103111.GB4089@nic-nac-project.org>
References: <20070719103111.GB4089@nic-nac-project.org>
Message-ID: <88e286470707191520x5a26a38al7379ed8a212b908a@mail.gmail.com>

You can also use:

  PythonOption mod_python.mutex_locks 4

at global scope in Apache configuration, ie., outside of VirtualHost
containers, to limit how many session mutex locks that mod_python
creates in the first place.

There is also a 'configure' option to override the value when
compiling mod_python itself.

Your system does though look like it was creating too few so good idea
to increase the system limit anyway as reducing it too much in
mod_python may cause issues if you rely on mod_python sessions
heavily.

Graham

On 19/07/07, andras@nic-nac-project.de <andras@nic-nac-project.de> wrote:
> hi all,
> when i try to run mod_python on NetBSD-3.1 using the generic kernel my apache error-log says:
>
> --
> [emerg] (28)No space left on device: Couldn't create accept lock (/var/run/accept.lock.16040) (5)
> --
>
> of course there is enough space left on the device and all the permissions are correct.
>
>
> i was only able to fix this by changing the kernel config:
>
> GENERIC:
> --
> #options        SEMMNI=10       # number of semaphore identifiers
> #options        SEMMNS=60       # number of semaphores in system
> #options        SEMUME=10       # max number of undo entries per process
> #options        SEMMNU=30       # number of undo structures in system
> --
>
> MODIFIED CONFIG:
> --
> options         SEMMNI=32       # number of semaphore identifiers
> options         SEMMNS=60       # number of semaphores in system
> options         SEMUME=10       # max number of undo entries per process
> options         SEMMNU=30       # number of undo structures in system
> --
>
>
> this is valid for the ports on i386 and also on amd64.
> NetBSD does not permit to change SEMMNI via sysctl.
>
>
> my current setup:
> NetBSD-3.1 amd64 (or i386)
>
> apache-2.2.4nb6
> python24-2.4.4
> ap22-py24-python-3.2.10
>
>
> i hope this might be helpful to others.
>
>
> regards,
> andras
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From brad at sankatygroup.com  Fri Jul 20 17:30:02 2007
From: brad at sankatygroup.com (Brad Anderson)
Date: Fri Jul 20 17:30:35 2007
Subject: [mod_python] PythonAuthenHandler issues
Message-ID: <46A1295A.3090001@sankatygroup.com>

Hi,

I'm trying to tie into Django's auth subsystem for http authn/authz in
front of Subversion, as seen here:
http://www.djangoproject.com/documentation/apache_auth/

So, my Apache 2.0.59 conf looks like this (with some mod_macro voodoo):

#####################################################################

<Macro ProjectClosed $PROJ>
 <Location /projects/$PROJ>
  DAV svn
  SVNPath /var/svn/$PROJ
  AuthType Basic
  AuthName "dsource-$PROJ"

  SetEnv DJANGO_SETTINGS_MODULE dsource.settings
  PythonOption DJANGO_SETTINGS_MODULE dsource.settings
  PythonOption PROJECT $PROJ
  PythonPath "['/home/brad/dev/python'] + sys.path"

  PythonAuthenHandler dsource.web.modpython
  AuthAuthoritative Off
  Require dsource-group project_admin developer
#  Require valid-user

  SetHandler None
 </Location>
</Macro>

#####################################################################



And the dsource.web.modpython handler function looks like this:

#####################################################################
from mod_python import apache
import os

def authenhandler(req, **kwargs):
    """
    Authentication handler that checks against Django's auth database.
    """

    # mod_python fakes the environ, and thus doesn't process SetEnv.
    # This fixes that so that the following import works
    os.environ.update(req.subprocess_env)

    # check for PythonOptions
    _str_to_bool = lambda s: s.lower() in ('1', 'true', 'on', 'yes')

    options = req.get_options()
    permission_name = options.get('DjangoPermissionName', None)
    staff_only = _str_to_bool(options.get('DjangoRequireStaffStatus', "on"))
    superuser_only =
_str_to_bool(options.get('DjangoRequireSuperuserStatus', "off"))
    settings_module = options.get('DJANGO_SETTINGS_MODULE', None)
    if settings_module:
        os.environ['DJANGO_SETTINGS_MODULE'] = settings_module

    from django.contrib.auth.models import User
    from django import db
    db.reset_queries()

    username = req.user
    password = req.get_basic_auth_pw()
    requires = req.requires()
    proj = options['PROJECT']

    # check that the username is valid
    kwargs = {'username': username, 'is_active': True}
    if staff_only:
        kwargs['is_staff'] = True
    if superuser_only:
        kwargs['is_superuser'] = True
    try:
        try:
            user = User.objects.get(**kwargs)
        except User.DoesNotExist:
            return apache.HTTP_UNAUTHORIZED

        # check the password and any permission given
        if user.check_password(password):

            if requires:
                # check dsource groups
                required_groups = _get_required_groups(req, requires)
                req.log_error("required_groups : %s" % required_groups)

                if required_groups:
                    from tracdsource.perm import get_groups
                    user_groups = get_groups(username, proj, db.connection)
                    req.log_error("user_groups     : %s" % user_groups)

                    for group in required_groups:
                        if group in user_groups:
                            req.log_error("w00t - match    : %s" % group)
                            return apache.OK  # WTF? working?
            else:
                req.log_error("no requires")
                return apache.OK

        else:
            # password check failed
            return apache.HTTP_UNAUTHORIZED

    finally:
        db.connection.close()


def _get_required_groups(req, requires):
    groups = []
    group_token = 'dsource-group '

    for require in requires:
        if require.startswith(group_token):
            try:
                group_list = require[len(group_token):].split(' ')
                for group in group_list:
                    groups.append(group)
#                    req.log_error("group: %s" % group)
            finally:
                pass
        else:
            try:
                user_list = require.split(' ')
                for user in user_list:
                    if user == "valid-user":
                        groups.append('registered_user')
#                    req.log_error("group: %s" % group)
            finally:
                pass

    return groups
#####################################################################

When I activate 'Require valid-user' things are fine (in error_log):

 required_groups : ['registered_user']
 user_groups     : ['anonymous', 'registered_user', 'project_admin']
 w00t - match    : registered_user


But when I activate 'Require dsource-group project_admin developer' I
get an error:

 required_groups : ['dsource', 'project_admin', 'developer']
 user_groups     : ['anonymous', 'registered_user', 'project_admin']
 w00t - match    : project_admin
 configuration error:  couldn't check access.  No groups file?:
/projects/test

I've been looking at
http://www.modpython.org/pipermail/mod_python/2006-April/020959.html and
it's caused me to add 'AuthAuthoritative Off' to httpd.conf, but it says
'group' and 'valid-user' are a no-no, but that's all I can get to work.
 Maybe this is an Apache 2.2.4 thing?

Search for WTF? in the Python handler code - that return apache.OK
doesn't seem to return 200 even though we found a match (in error_log).
 It's as if the handler function returns None or 0.

What bonehead thing am I doing?

Thanks,
BA





From syed.2736 at gmail.com  Sat Jul 21 14:31:19 2007
From: syed.2736 at gmail.com (syed rizvi)
Date: Sat Jul 21 14:31:34 2007
Subject: [mod_python] PythonAuthenHandler issues
In-Reply-To: <46A1295A.3090001@sankatygroup.com>
References: <46A1295A.3090001@sankatygroup.com>
Message-ID: <673a3ee20707211131y2f597e1w6b65841bf31d268b@mail.gmail.com>

Hello,

I seeking an easiest way to install/configure/integrate mod_python with
Apache. There is an Python-AddOns for the XAMPP package from
www.apachefriengs.org but there are no instructions on how to install it.
Apache.org also have instructions to install this module by first compiling
it. However, it is also complicated and gives error messages. Any help is
greatly appreciated.

Thanks


On 7/20/07, Brad Anderson <brad@sankatygroup.com> wrote:
>
> Hi,
>
> I'm trying to tie into Django's auth subsystem for http authn/authz in
> front of Subversion, as seen here:
> http://www.djangoproject.com/documentation/apache_auth/
>
> So, my Apache 2.0.59 conf looks like this (with some mod_macro voodoo):
>
> #####################################################################
>
> <Macro ProjectClosed $PROJ>
> <Location /projects/$PROJ>
> DAV svn
> SVNPath /var/svn/$PROJ
> AuthType Basic
> AuthName "dsource-$PROJ"
>
> SetEnv DJANGO_SETTINGS_MODULE dsource.settings
> PythonOption DJANGO_SETTINGS_MODULE dsource.settings
> PythonOption PROJECT $PROJ
> PythonPath "['/home/brad/dev/python'] + sys.path"
>
> PythonAuthenHandler dsource.web.modpython
> AuthAuthoritative Off
> Require dsource-group project_admin developer
> #  Require valid-user
>
> SetHandler None
> </Location>
> </Macro>
>
> #####################################################################
>
>
>
> And the dsource.web.modpython handler function looks like this:
>
> #####################################################################
> from mod_python import apache
> import os
>
> def authenhandler(req, **kwargs):
>    """
>    Authentication handler that checks against Django's auth database.
>    """
>
>    # mod_python fakes the environ, and thus doesn't process SetEnv.
>    # This fixes that so that the following import works
>    os.environ.update(req.subprocess_env)
>
>    # check for PythonOptions
>    _str_to_bool = lambda s: s.lower() in ('1', 'true', 'on', 'yes')
>
>    options = req.get_options()
>    permission_name = options.get('DjangoPermissionName', None)
>    staff_only = _str_to_bool(options.get('DjangoRequireStaffStatus',
> "on"))
>    superuser_only =
> _str_to_bool(options.get('DjangoRequireSuperuserStatus', "off"))
>    settings_module = options.get('DJANGO_SETTINGS_MODULE', None)
>    if settings_module:
>        os.environ['DJANGO_SETTINGS_MODULE'] = settings_module
>
>    from django.contrib.auth.models import User
>    from django import db
>    db.reset_queries()
>
>    username = req.user
>    password = req.get_basic_auth_pw()
>    requires = req.requires()
>    proj = options['PROJECT']
>
>    # check that the username is valid
>    kwargs = {'username': username, 'is_active': True}
>    if staff_only:
>        kwargs['is_staff'] = True
>    if superuser_only:
>        kwargs['is_superuser'] = True
>    try:
>        try:
>            user = User.objects.get(**kwargs)
>        except User.DoesNotExist:
>            return apache.HTTP_UNAUTHORIZED
>
>        # check the password and any permission given
>        if user.check_password(password):
>
>            if requires:
>                # check dsource groups
>                required_groups = _get_required_groups(req, requires)
>                req.log_error("required_groups : %s" % required_groups)
>
>                if required_groups:
>                    from tracdsource.perm import get_groups
>                    user_groups = get_groups(username, proj, db.connection)
>                    req.log_error("user_groups     : %s" % user_groups)
>
>                    for group in required_groups:
>                        if group in user_groups:
>                            req.log_error("w00t - match    : %s" % group)
>                            return apache.OK  # WTF? working?
>            else:
>                req.log_error("no requires")
>                return apache.OK
>
>        else:
>            # password check failed
>            return apache.HTTP_UNAUTHORIZED
>
>    finally:
>        db.connection.close()
>
>
> def _get_required_groups(req, requires):
>    groups = []
>    group_token = 'dsource-group '
>
>    for require in requires:
>        if require.startswith(group_token):
>            try:
>                group_list = require[len(group_token):].split(' ')
>                for group in group_list:
>                    groups.append(group)
> #                    req.log_error("group: %s" % group)
>            finally:
>                pass
>        else:
>            try:
>                user_list = require.split(' ')
>                for user in user_list:
>                    if user == "valid-user":
>                        groups.append('registered_user')
> #                    req.log_error("group: %s" % group)
>            finally:
>                pass
>
>    return groups
> #####################################################################
>
> When I activate 'Require valid-user' things are fine (in error_log):
>
> required_groups : ['registered_user']
> user_groups     : ['anonymous', 'registered_user', 'project_admin']
> w00t - match    : registered_user
>
>
> But when I activate 'Require dsource-group project_admin developer' I
> get an error:
>
> required_groups : ['dsource', 'project_admin', 'developer']
> user_groups     : ['anonymous', 'registered_user', 'project_admin']
> w00t - match    : project_admin
> configuration error:  couldn't check access.  No groups file?:
> /projects/test
>
> I've been looking at
> http://www.modpython.org/pipermail/mod_python/2006-April/020959.html and
> it's caused me to add 'AuthAuthoritative Off' to httpd.conf, but it says
> 'group' and 'valid-user' are a no-no, but that's all I can get to work.
> Maybe this is an Apache 2.2.4 thing?
>
> Search for WTF? in the Python handler code - that return apache.OK
> doesn't seem to return 200 even though we found a match (in error_log).
> It's as if the handler function returns None or 0.
>
> What bonehead thing am I doing?
>
> Thanks,
> BA
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070721/83a17aa7/attachment.html
From jpg at jgassociates.ca  Sat Jul 21 20:54:46 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Jul 21 20:54:28 2007
Subject: [mod_python] PythonAuthenHandler issues
In-Reply-To: <46A1295A.3090001@sankatygroup.com>
References: <46A1295A.3090001@sankatygroup.com>
Message-ID: <46A2AAD6.4020005@jgassociates.ca>

Hi Brad,

It's been awhile since I've messed with aaa, but I may have a spark of 
an idea.

Brad Anderson wrote:
> Hi,
> 
> I'm trying to tie into Django's auth subsystem for http authn/authz in
> front of Subversion, as seen here:
> http://www.djangoproject.com/documentation/apache_auth/
> 
> So, my Apache 2.0.59 conf looks like this (with some mod_macro voodoo):
> 
> #####################################################################
> 
> <Macro ProjectClosed $PROJ>
>  <Location /projects/$PROJ>
>   DAV svn
>   SVNPath /var/svn/$PROJ
>   AuthType Basic

Try changing your AuthType to something else. Heck, you could even use:

AuthType somethingelse

but you'll likely want something a little clearer - dsource-auth might 
be a good choice. You can retrieve this string in your handler with 
req.auth_type(). Likewise req.auth_name() will get you the AuthName setting.

As I recall the AuthType Basic will cause the default authentication 
mechanism to fire, and that's the thing that is generating the 
"couldn't check access.  No groups file?" verbiage in your log.

>   AuthName "dsource-$PROJ"
> 
>   SetEnv DJANGO_SETTINGS_MODULE dsource.settings
>   PythonOption DJANGO_SETTINGS_MODULE dsource.settings
>   PythonOption PROJECT $PROJ
>   PythonPath "['/home/brad/dev/python'] + sys.path"
> 
>   PythonAuthenHandler dsource.web.modpython
>   AuthAuthoritative Off
>   Require dsource-group project_admin developer
> #  Require valid-user
> 
>   SetHandler None
>  </Location>
> </Macro>
> 
> #####################################################################
> 
> 
> 
> And the dsource.web.modpython handler function looks like this:
> 
> #####################################################################
> from mod_python import apache
> import os
> 
> def authenhandler(req, **kwargs):
>     """
>     Authentication handler that checks against Django's auth database.
>     """
> 
>     # mod_python fakes the environ, and thus doesn't process SetEnv.
>     # This fixes that so that the following import works
>     os.environ.update(req.subprocess_env)
> 
>     # check for PythonOptions
>     _str_to_bool = lambda s: s.lower() in ('1', 'true', 'on', 'yes')
> 
>     options = req.get_options()
>     permission_name = options.get('DjangoPermissionName', None)
>     staff_only = _str_to_bool(options.get('DjangoRequireStaffStatus', "on"))
>     superuser_only =
> _str_to_bool(options.get('DjangoRequireSuperuserStatus', "off"))
>     settings_module = options.get('DJANGO_SETTINGS_MODULE', None)
>     if settings_module:
>         os.environ['DJANGO_SETTINGS_MODULE'] = settings_module
> 
>     from django.contrib.auth.models import User
>     from django import db
>     db.reset_queries()
> 
>     username = req.user
>     password = req.get_basic_auth_pw()
>     requires = req.requires()
>     proj = options['PROJECT']
> 
>     # check that the username is valid
>     kwargs = {'username': username, 'is_active': True}
>     if staff_only:
>         kwargs['is_staff'] = True
>     if superuser_only:
>         kwargs['is_superuser'] = True
>     try:
>         try:
>             user = User.objects.get(**kwargs)
>         except User.DoesNotExist:
>             return apache.HTTP_UNAUTHORIZED
> 
>         # check the password and any permission given
>         if user.check_password(password):
> 
>             if requires:
>                 # check dsource groups
>                 required_groups = _get_required_groups(req, requires)
>                 req.log_error("required_groups : %s" % required_groups)
> 
>                 if required_groups:
>                     from tracdsource.perm import get_groups
>                     user_groups = get_groups(username, proj, db.connection)
>                     req.log_error("user_groups     : %s" % user_groups)
> 
>                     for group in required_groups:
>                         if group in user_groups:
>                             req.log_error("w00t - match    : %s" % group)
>                             return apache.OK  # WTF? working?
>             else:
>                 req.log_error("no requires")
>                 return apache.OK
> 
>         else:
>             # password check failed
>             return apache.HTTP_UNAUTHORIZED
> 
>     finally:
>         db.connection.close()
> 
> 
> def _get_required_groups(req, requires):
>     groups = []
>     group_token = 'dsource-group '
> 
>     for require in requires:
>         if require.startswith(group_token):
>             try:
>                 group_list = require[len(group_token):].split(' ')
>                 for group in group_list:
>                     groups.append(group)
> #                    req.log_error("group: %s" % group)
>             finally:
>                 pass
>         else:
>             try:
>                 user_list = require.split(' ')
>                 for user in user_list:
>                     if user == "valid-user":
>                         groups.append('registered_user')
> #                    req.log_error("group: %s" % group)
>             finally:
>                 pass
> 
>     return groups
> #####################################################################
> 
> When I activate 'Require valid-user' things are fine (in error_log):
> 
>  required_groups : ['registered_user']
>  user_groups     : ['anonymous', 'registered_user', 'project_admin']
>  w00t - match    : registered_user
> 
> 
> But when I activate 'Require dsource-group project_admin developer' I
> get an error:
> 
>  required_groups : ['dsource', 'project_admin', 'developer']
>  user_groups     : ['anonymous', 'registered_user', 'project_admin']
>  w00t - match    : project_admin
>  configuration error:  couldn't check access.  No groups file?:
> /projects/test
> 
> I've been looking at
> http://www.modpython.org/pipermail/mod_python/2006-April/020959.html and
> it's caused me to add 'AuthAuthoritative Off' to httpd.conf, but it says
> 'group' and 'valid-user' are a no-no, but that's all I can get to work.
>  Maybe this is an Apache 2.2.4 thing?

Nope. AuthAuthoritative disappears in 2.2, along with mod_auth. There 
was a reorganization of the aaa stuff for 2.2 with a bunch of new 
modules being added such as mod_auth_basic and mod_auth_digest.

> Search for WTF? in the Python handler code - that return apache.OK
> doesn't seem to return 200 even though we found a match (in error_log).
>  It's as if the handler function returns None or 0.

For some reason I can't seem to parse that paragraph. Hopefully the 
change to AuthType I suggested will take care of the problem.

On the other hand the value of apache.OK *is* 0 and this is perfectly 
fine. Don't confuse the value your handler returns to apache with the 
status value that apache eventually sets in the response header. There 
is obviously a relationship but it's not a 1:1 mapping. For example your 
handler could return apache.DECLINED, which would cause the next 
authenhandler in the chain to be called.

> What bonehead thing am I doing?

You think you're boneheaded? I read the thread from April '06 you quoted 
and I don't remember any of it. The only way I know I participated is 
that I recognize the typos I typically mak. :)

Jim



From jpg at jgassociates.ca  Sat Jul 21 20:59:34 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Jul 21 20:59:13 2007
Subject: [mod_python] PythonAuthenHandler issues
In-Reply-To: <673a3ee20707211131y2f597e1w6b65841bf31d268b@mail.gmail.com>
References: <46A1295A.3090001@sankatygroup.com>
	<673a3ee20707211131y2f597e1w6b65841bf31d268b@mail.gmail.com>
Message-ID: <46A2ABF6.8040701@jgassociates.ca>

Please don't hijack an existing thread with a new topic. Create a new 
message and send it to the list.

Make sure you include:

Operating system
Apache version
mod_python version
python version

Some hint as to what the error messages are might be really helpful as 
well. :)

Jim

syed rizvi wrote:
> Hello,
> 
> I seeking an easiest way to install/configure/integrate mod_python with
> Apache. There is an Python-AddOns for the XAMPP package from
> www.apachefriengs.org but there are no instructions on how to install it.
> Apache.org also have instructions to install this module by first compiling
> it. However, it is also complicated and gives error messages. Any help is
> greatly appreciated.
> 
> Thanks
> 
> 
> On 7/20/07, Brad Anderson <brad@sankatygroup.com> wrote:
>> Hi,
>>
>> I'm trying to tie into Django's auth subsystem for http authn/authz in
>> front of Subversion, as seen here:
>> http://www.djangoproject.com/documentation/apache_auth/
>>
>> So, my Apache 2.0.59 conf looks like this (with some mod_macro voodoo):
>>
>> #####################################################################
>>
>> <Macro ProjectClosed $PROJ>
>> <Location /projects/$PROJ>
>> DAV svn
>> SVNPath /var/svn/$PROJ
>> AuthType Basic
>> AuthName "dsource-$PROJ"
>>
>> SetEnv DJANGO_SETTINGS_MODULE dsource.settings
>> PythonOption DJANGO_SETTINGS_MODULE dsource.settings
>> PythonOption PROJECT $PROJ
>> PythonPath "['/home/brad/dev/python'] + sys.path"
>>
>> PythonAuthenHandler dsource.web.modpython
>> AuthAuthoritative Off
>> Require dsource-group project_admin developer
>> #  Require valid-user
>>
>> SetHandler None
>> </Location>
>> </Macro>
>>
>> #####################################################################
>>
>>
>>
>> And the dsource.web.modpython handler function looks like this:
>>
>> #####################################################################
>> from mod_python import apache
>> import os
>>
>> def authenhandler(req, **kwargs):
>>    """
>>    Authentication handler that checks against Django's auth database.
>>    """
>>
>>    # mod_python fakes the environ, and thus doesn't process SetEnv.
>>    # This fixes that so that the following import works
>>    os.environ.update(req.subprocess_env)
>>
>>    # check for PythonOptions
>>    _str_to_bool = lambda s: s.lower() in ('1', 'true', 'on', 'yes')
>>
>>    options = req.get_options()
>>    permission_name = options.get('DjangoPermissionName', None)
>>    staff_only = _str_to_bool(options.get('DjangoRequireStaffStatus',
>> "on"))
>>    superuser_only =
>> _str_to_bool(options.get('DjangoRequireSuperuserStatus', "off"))
>>    settings_module = options.get('DJANGO_SETTINGS_MODULE', None)
>>    if settings_module:
>>        os.environ['DJANGO_SETTINGS_MODULE'] = settings_module
>>
>>    from django.contrib.auth.models import User
>>    from django import db
>>    db.reset_queries()
>>
>>    username = req.user
>>    password = req.get_basic_auth_pw()
>>    requires = req.requires()
>>    proj = options['PROJECT']
>>
>>    # check that the username is valid
>>    kwargs = {'username': username, 'is_active': True}
>>    if staff_only:
>>        kwargs['is_staff'] = True
>>    if superuser_only:
>>        kwargs['is_superuser'] = True
>>    try:
>>        try:
>>            user = User.objects.get(**kwargs)
>>        except User.DoesNotExist:
>>            return apache.HTTP_UNAUTHORIZED
>>
>>        # check the password and any permission given
>>        if user.check_password(password):
>>
>>            if requires:
>>                # check dsource groups
>>                required_groups = _get_required_groups(req, requires)
>>                req.log_error("required_groups : %s" % required_groups)
>>
>>                if required_groups:
>>                    from tracdsource.perm import get_groups
>>                    user_groups = get_groups(username, proj, db.connection)
>>                    req.log_error("user_groups     : %s" % user_groups)
>>
>>                    for group in required_groups:
>>                        if group in user_groups:
>>                            req.log_error("w00t - match    : %s" % group)
>>                            return apache.OK  # WTF? working?
>>            else:
>>                req.log_error("no requires")
>>                return apache.OK
>>
>>        else:
>>            # password check failed
>>            return apache.HTTP_UNAUTHORIZED
>>
>>    finally:
>>        db.connection.close()
>>
>>
>> def _get_required_groups(req, requires):
>>    groups = []
>>    group_token = 'dsource-group '
>>
>>    for require in requires:
>>        if require.startswith(group_token):
>>            try:
>>                group_list = require[len(group_token):].split(' ')
>>                for group in group_list:
>>                    groups.append(group)
>> #                    req.log_error("group: %s" % group)
>>            finally:
>>                pass
>>        else:
>>            try:
>>                user_list = require.split(' ')
>>                for user in user_list:
>>                    if user == "valid-user":
>>                        groups.append('registered_user')
>> #                    req.log_error("group: %s" % group)
>>            finally:
>>                pass
>>
>>    return groups
>> #####################################################################
>>
>> When I activate 'Require valid-user' things are fine (in error_log):
>>
>> required_groups : ['registered_user']
>> user_groups     : ['anonymous', 'registered_user', 'project_admin']
>> w00t - match    : registered_user
>>
>>
>> But when I activate 'Require dsource-group project_admin developer' I
>> get an error:
>>
>> required_groups : ['dsource', 'project_admin', 'developer']
>> user_groups     : ['anonymous', 'registered_user', 'project_admin']
>> w00t - match    : project_admin
>> configuration error:  couldn't check access.  No groups file?:
>> /projects/test
>>
>> I've been looking at
>> http://www.modpython.org/pipermail/mod_python/2006-April/020959.html and
>> it's caused me to add 'AuthAuthoritative Off' to httpd.conf, but it says
>> 'group' and 'valid-user' are a no-no, but that's all I can get to work.
>> Maybe this is an Apache 2.2.4 thing?
>>
>> Search for WTF? in the Python handler code - that return apache.OK
>> doesn't seem to return 200 even though we found a match (in error_log).
>> It's as if the handler function returns None or 0.
>>
>> What bonehead thing am I doing?
>>
>> Thanks,
>> BA
>>
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From brad at sankatygroup.com  Sun Jul 22 19:11:50 2007
From: brad at sankatygroup.com (Brad Anderson)
Date: Sun Jul 22 19:12:21 2007
Subject: [mod_python] PythonAuthenHandler issues
In-Reply-To: <46A2AAD6.4020005@jgassociates.ca>
References: <46A1295A.3090001@sankatygroup.com>
	<46A2AAD6.4020005@jgassociates.ca>
Message-ID: <46A3E436.708@sankatygroup.com>

Jim Gallacher wrote:
> Hi Brad,
> 
> It's been awhile since I've messed with aaa, but I may have a spark of
> an idea.
> 
> Brad Anderson wrote:
>> Hi,
>>
>> I'm trying to tie into Django's auth subsystem for http authn/authz in
>> front of Subversion, as seen here:
>> http://www.djangoproject.com/documentation/apache_auth/
>>
>> So, my Apache 2.0.59 conf looks like this (with some mod_macro voodoo):
>>
>> #####################################################################
>>
>> <Macro ProjectClosed $PROJ>
>>  <Location /projects/$PROJ>
>>   DAV svn
>>   SVNPath /var/svn/$PROJ
>>   AuthType Basic
> 
> Try changing your AuthType to something else. Heck, you could even use:
> 
> AuthType somethingelse
> 
> but you'll likely want something a little clearer - dsource-auth might
> be a good choice. You can retrieve this string in your handler with
> req.auth_type(). Likewise req.auth_name() will get you the AuthName
> setting.
> 
> As I recall the AuthType Basic will cause the default authentication
> mechanism to fire, and that's the thing that is generating the "couldn't
> check access.  No groups file?" verbiage in your log.

Changed AuthType to dsource-auth, and no dice.

I received this when trying 'svn up':
> svn up
svn: PROPFIND request failed on '/projects/test'
svn: PROPFIND of '/projects/test': 401 Authorization Required
(http://local.svn.dsource.org)

and nothing was written in error_log, making me think the handler was
bypassed completely.  :(

BA
From graham.dumpleton at gmail.com  Sun Jul 22 20:30:12 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 22 20:30:20 2007
Subject: [mod_python] PythonAuthenHandler issues
In-Reply-To: <46A3E436.708@sankatygroup.com>
References: <46A1295A.3090001@sankatygroup.com>
	<46A2AAD6.4020005@jgassociates.ca> <46A3E436.708@sankatygroup.com>
Message-ID: <88e286470707221730g22dd835fi747ed75f14c9bdb8@mail.gmail.com>

The reason it doesn't work is technically because the
authentication/authorisation phases have been pushed into a single
authentication handler when it should be split between a separate
authentication and authorisation handlers.

To be more specific, the authentication handler should only do
something if req.auth_type() returns the type of authentication type
it is meant to handle, it should then only be checking that the
login/password is correct and if it is setting req.user to be the
username and setting req.ap_auth_type to the authentication type
scheme. The latter can usually just be set to the value returned from
calling req.auth_type(). Setting req.user and req.ap_auth_type is
technically required to indicate to latter phases that authentication
was successful.

A separate authorisation handler should then process req.requires()
but if it doesn't find any requires values pertinent to it, it should
return apache.DECLINED. By returning apache.DECLINED it allows the
builting authorisation handler to still run and honour vaue such as
'valid-user'.

In short, it fails because you aren't supplying a authorisation
handler and as a result it is still running the default authorisation
handler which fails because there is no group file for it to run.

That it is all wrong is not your fault as the Django example is wrong
in the first place and technically it isn't possible to do it
completely correctly unless using mod_python 3.3 or later.

So, suggest you first split out authentication into its own handler
and get it working. Post that here and I will tell you the bits that
may be missing to make it completely correct. Then we can move onto
separate authorisation handler.

BTW, I assume you are using mod_python 3.3.1?

Graham

On 23/07/07, Brad Anderson <brad@sankatygroup.com> wrote:
> Jim Gallacher wrote:
> > Hi Brad,
> >
> > It's been awhile since I've messed with aaa, but I may have a spark of
> > an idea.
> >
> > Brad Anderson wrote:
> >> Hi,
> >>
> >> I'm trying to tie into Django's auth subsystem for http authn/authz in
> >> front of Subversion, as seen here:
> >> http://www.djangoproject.com/documentation/apache_auth/
> >>
> >> So, my Apache 2.0.59 conf looks like this (with some mod_macro voodoo):
> >>
> >> #####################################################################
> >>
> >> <Macro ProjectClosed $PROJ>
> >>  <Location /projects/$PROJ>
> >>   DAV svn
> >>   SVNPath /var/svn/$PROJ
> >>   AuthType Basic
> >
> > Try changing your AuthType to something else. Heck, you could even use:
> >
> > AuthType somethingelse
> >
> > but you'll likely want something a little clearer - dsource-auth might
> > be a good choice. You can retrieve this string in your handler with
> > req.auth_type(). Likewise req.auth_name() will get you the AuthName
> > setting.
> >
> > As I recall the AuthType Basic will cause the default authentication
> > mechanism to fire, and that's the thing that is generating the "couldn't
> > check access.  No groups file?" verbiage in your log.
>
> Changed AuthType to dsource-auth, and no dice.
>
> I received this when trying 'svn up':
> > svn up
> svn: PROPFIND request failed on '/projects/test'
> svn: PROPFIND of '/projects/test': 401 Authorization Required
> (http://local.svn.dsource.org)
>
> and nothing was written in error_log, making me think the handler was
> bypassed completely.  :(
>
> BA
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From brad at sankatygroup.com  Sun Jul 22 22:06:32 2007
From: brad at sankatygroup.com (Brad Anderson)
Date: Sun Jul 22 22:06:59 2007
Subject: [mod_python] PythonAuthenHandler issues
In-Reply-To: <88e286470707221730g22dd835fi747ed75f14c9bdb8@mail.gmail.com>
References: <46A1295A.3090001@sankatygroup.com>	
	<46A2AAD6.4020005@jgassociates.ca> <46A3E436.708@sankatygroup.com>
	<88e286470707221730g22dd835fi747ed75f14c9bdb8@mail.gmail.com>
Message-ID: <46A40D28.9000604@sankatygroup.com>

Graham Dumpleton wrote:
> The reason it doesn't work is technically because the
> authentication/authorisation phases have been pushed into a single
> authentication handler when it should be split between a separate
> authentication and authorisation handlers.

Okay... and that's the way I had it before reading somewhere (maybe that
April '06 thread) to stay away from PythonAuthzHandler or a separate
authzhandler.

In any case, going back to separate handlers with PythonHandlerModule is
now working :-D

> 
> To be more specific, the authentication handler should only do
> something if req.auth_type() returns the type of authentication type
> it is meant to handle, it should then only be checking that the
> login/password is correct and if it is setting req.user to be the
> username and setting req.ap_auth_type to the authentication type
> scheme. The latter can usually just be set to the value returned from
> calling req.auth_type(). Setting req.user and req.ap_auth_type is
> technically required to indicate to latter phases that authentication
> was successful.

I didn't (re)set either of these, but things seem to be working fine.

> 
> A separate authorisation handler should then process req.requires()
> but if it doesn't find any requires values pertinent to it, it should
> return apache.DECLINED. By returning apache.DECLINED it allows the
> builting authorisation handler to still run and honour vaue such as
> 'valid-user'.

This does *not* work.  I found the 'configuration error:  couldn't check
access.  No groups file?' came back using DECLINED, so I went back to
HTTP_UNAUTHORIZED

> 
> In short, it fails because you aren't supplying a authorisation
> handler and as a result it is still running the default authorisation
> handler which fails because there is no group file for it to run.
> 
> That it is all wrong is not your fault as the Django example is wrong
> in the first place and technically it isn't possible to do it
> completely correctly unless using mod_python 3.3 or later.

And I had found comments or mods that said it was wrong, and helped make
it work.  I must have gotten fairly close.  But I didn't get all the way
there before combining into one handler and bothering this list.

> 
> So, suggest you first split out authentication into its own handler
> and get it working. Post that here and I will tell you the bits that
> may be missing to make it completely correct. Then we can move onto
> separate authorisation handler.
> 
> BTW, I assume you are using mod_python 3.3.1?

Yep.

See: http://paste.dprogramming.com/dpc5aypn.php

for code and config.

Thanks for your help,
BA


From pete at shinners.org  Sun Jul 22 22:27:01 2007
From: pete at shinners.org (Peter Shinners)
Date: Sun Jul 22 22:27:15 2007
Subject: [mod_python] send file back to apache?
Message-ID: <46A411F5.5060606@shinners.org>

If I have the full path of a static file I want served, is there a way to 
let apache deal with it, after entering my mod_python handler?

I've written the Python code to try sending a static file. It deals with 
ETag, caching, and stuff. It still seems like this would be a better task 
for apache?

From graham.dumpleton at gmail.com  Sun Jul 22 22:37:18 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 22 22:37:25 2007
Subject: [mod_python] PythonAuthenHandler issues
In-Reply-To: <46A40D28.9000604@sankatygroup.com>
References: <46A1295A.3090001@sankatygroup.com>
	<46A2AAD6.4020005@jgassociates.ca> <46A3E436.708@sankatygroup.com>
	<88e286470707221730g22dd835fi747ed75f14c9bdb8@mail.gmail.com>
	<46A40D28.9000604@sankatygroup.com>
Message-ID: <88e286470707221937h48832a4fwc65635e91473cb8@mail.gmail.com>

On 23/07/07, Brad Anderson <brad@sankatygroup.com> wrote:
> Graham Dumpleton wrote:
> > The reason it doesn't work is technically because the
> > authentication/authorisation phases have been pushed into a single
> > authentication handler when it should be split between a separate
> > authentication and authorisation handlers.
>
> Okay... and that's the way I had it before reading somewhere (maybe that
> April '06 thread) to stay away from PythonAuthzHandler or a separate
> authzhandler.
>
> In any case, going back to separate handlers with PythonHandlerModule is
> now working :-D
>
> >
> > To be more specific, the authentication handler should only do
> > something if req.auth_type() returns the type of authentication type
> > it is meant to handle, it should then only be checking that the
> > login/password is correct and if it is setting req.user to be the
> > username and setting req.ap_auth_type to the authentication type
> > scheme. The latter can usually just be set to the value returned from
> > calling req.auth_type(). Setting req.user and req.ap_auth_type is
> > technically required to indicate to latter phases that authentication
> > was successful.
>
> I didn't (re)set either of these, but things seem to be working fine.

Checking req.auth_type() result and setting req.ap_auth_type()
technically only really matter when using authenhandler as intended
for Apache modules, although no one ever does it properly with
mod_python. :-)

All it means is that at the start of the handler you have:

  if req.auth_type() != 'Session':
    return apache.DECLINED

This would be the case for an authentication handler which processes
an AuthType of "Session". It simply means that one could register a
whole bunch of different authentication handlers with all being called
and those which didn't apply for the configured AuthType declining to
do anything.

Technically you shouldn't really be using AuthType of 'Basic' as it
conflicts with builting authentication handler, but perhaps instead
use something like:

  AuthType Django::Basic

and then using:

  if req.auth_type() != 'Django::Basic':
    return apache.DECLINED

Finally, if the authentication handler is returning apache.OK to allow
the user through, it would set:

  req.ap_auth_type = 'Django::Basic'

This is just so that a content handler could make some judgment later
based on the authentication mechanism used. Ie., more for completeness
than anything else.

Doing it like this probably has less value in Apache 2.0 than in
Apache 2.2 where the authentication handlers have been improved with
ability to disable authoritativeness for each handler type
individually.

Actually interesting that someone started to add concept of
authoritativeness to mod_python at one point and never finished it.
But then, mod_python possibly incorrectly calls
ap_note_basic_auth_failure(req) in the C code when this should be
accessible from Python and only appropriate authentication handlers
call it. So, a but broken in some ways.

For more stuff on doing things the Apache way see:

  http://issues.apache.org/jira/browse/MODPYTHON-124

> > A separate authorisation handler should then process req.requires()
> > but if it doesn't find any requires values pertinent to it, it should
> > return apache.DECLINED. By returning apache.DECLINED it allows the
> > builting authorisation handler to still run and honour vaue such as
> > 'valid-user'.
>
> This does *not* work.  I found the 'configuration error:  couldn't check
> access.  No groups file?' came back using DECLINED, so I went back to
> HTTP_UNAUTHORIZED

You should only be returning HTTP_UNAUTHORIZED when you find your
specific Requires token but it fails the test. Other times you should
return DECLINED By always returning HTTP_UNAUTHORIZED it goes against
the Apache way of registering multiple handlers and it only rejecting
things if the appropriate configuration was there to activate it.
Again, in mod_python users tend not to do things the Apache way. :-)

Anyway, by always returning HTTP_UNAUTHORIZED, can't now say:

  Require valid-user

and have it work. For this to work, would need to actually stop your
authorisation handler running altogether.

Graham
From greg at vig.co.nz  Sun Jul 22 22:46:51 2007
From: greg at vig.co.nz (Greg Fawcett)
Date: Sun Jul 22 22:47:01 2007
Subject: [mod_python] send file back to apache?
In-Reply-To: <46A411F5.5060606@shinners.org>
References: <46A411F5.5060606@shinners.org>
Message-ID: <928306280707221946x6341d172r48eadaa59f5ee7e2@mail.gmail.com>

request.sendfile() may be what you are looking for.


On 23/07/07, Peter Shinners <pete@shinners.org> wrote:
>
> If I have the full path of a static file I want served, is there a way to
> let apache deal with it, after entering my mod_python handler?
>
> I've written the Python code to try sending a static file. It deals with
> ETag, caching, and stuff. It still seems like this would be a better task
> for apache?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



-- 
Phone: +64 3 409 8165
Mobile: +64 21 333 291
Fax: +64 3 974 6810
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070723/b202d132/attachment.html
From graham.dumpleton at gmail.com  Sun Jul 22 22:47:58 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 22 22:48:05 2007
Subject: [mod_python] send file back to apache?
In-Reply-To: <46A411F5.5060606@shinners.org>
References: <46A411F5.5060606@shinners.org>
Message-ID: <88e286470707221947w285cec83mc33dcd25eda38425@mail.gmail.com>

What does the following do:

  req.filename = /some/path/to/file
  return apache.DECLINED

This should result in default-handler in Apache serving up the file.

Graham

On 23/07/07, Peter Shinners <pete@shinners.org> wrote:
> If I have the full path of a static file I want served, is there a way to
> let apache deal with it, after entering my mod_python handler?
>
> I've written the Python code to try sending a static file. It deals with
> ETag, caching, and stuff. It still seems like this would be a better task
> for apache?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Sun Jul 22 23:03:21 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 22 23:03:28 2007
Subject: [mod_python] send file back to apache?
In-Reply-To: <928306280707221946x6341d172r48eadaa59f5ee7e2@mail.gmail.com>
References: <46A411F5.5060606@shinners.org>
	<928306280707221946x6341d172r48eadaa59f5ee7e2@mail.gmail.com>
Message-ID: <88e286470707222003l3a4e29d5gb2c1599e27c3a229@mail.gmail.com>

When using req.sendfile() it is still mod_python that is sending the
file and so Apache doesn't necessarily get its opportunity to do its
other stuff like etag and caching etc.

BTW, I forgot in my suggestion and important thing. You need to have
mod_python 3.3 or later and must also update req.finfo. Ie.,

  req.filename = '/some/path'
  req.finfo = apache.stat(req.filename)
  return apache.DECLINED

Note, this is slightly theoretical and I haven't fully tested it. :-)

Graham

On 23/07/07, Greg Fawcett <greg@vig.co.nz> wrote:
> request.sendfile() may be what you are looking for.
>
>
> On 23/07/07, Peter Shinners <pete@shinners.org> wrote:
> > If I have the full path of a static file I want served, is there a way to
> > let apache deal with it, after entering my mod_python handler?
> >
> > I've written the Python code to try sending a static file. It deals with
> > ETag, caching, and stuff. It still seems like this would be a better task
> > for apache?
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
>
> --
> Phone: +64 3 409 8165
> Mobile: +64 21 333 291
> Fax: +64 3 974 6810
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From matthias.niederhausen at tu-dresden.de  Mon Jul 23 05:43:50 2007
From: matthias.niederhausen at tu-dresden.de (Matthias Niederhausen)
Date: Mon Jul 23 05:44:05 2007
Subject: [mod_python] Apache service won't start after module import
Message-ID: <01ac01c7cd0d$fcaf3c00$f60db400$@niederhausen@tu-dresden.de>

Hi!

I'm quite new to Python and integrating it into Apache, and wanted to
utilize TRAC on our Windows 2003 webserver. However, things are not as easy
as I thought: If I want to include mod_python as an Apache module, the
service won't start anymore (but loads forever till Windows kills it after
the timeout). Still, I got the very same configuration running on my WinXP
pc.

I have already done some checking to find the root of the problem, so I can
tell that the problem has nothing to do with any Python directives - just
only the module import brings Apache down. Another interesting thing is that
when I run Apache not as a service, but from the command line, the import
works and I can even get it to run the test handler(!). However, if I try
and run TRAC in this configuration, the request times out and I get a blank
page. 
Finally, the logs reveal nothing: there is no error message to be seen.
Also, the Windows event log offers no information.
Currently I use the CGI handler, but it's awfully slow. Running TRAC in its
own webserver works, but I want to configure security settings in one place.


Hoping someone here can help me,
Matthias
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 4931 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070723/6de7a07a/smime.bin
From graham.dumpleton at gmail.com  Mon Jul 23 06:32:53 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul 23 06:32:59 2007
Subject: [mod_python] Apache service won't start after module import
In-Reply-To: <-205561086663026872@unknownmsgid>
References: <-205561086663026872@unknownmsgid>
Message-ID: <88e286470707230332i3d3e66fdofdebc648d758768e@mail.gmail.com>

On 23/07/07, Matthias Niederhausen <matthias.niederhausen@tu-dresden.de> wrote:
> Hi!
>
> I'm quite new to Python and integrating it into Apache, and wanted to
> utilize TRAC on our Windows 2003 webserver. However, things are not as easy
> as I thought: If I want to include mod_python as an Apache module, the
> service won't start anymore (but loads forever till Windows kills it after
> the timeout). Still, I got the very same configuration running on my WinXP
> pc.
>
> I have already done some checking to find the root of the problem, so I can
> tell that the problem has nothing to do with any Python directives - just
> only the module import brings Apache down. Another interesting thing is that
> when I run Apache not as a service, but from the command line, the import
> works and I can even get it to run the test handler(!). However, if I try
> and run TRAC in this configuration, the request times out and I get a blank
> page.
> Finally, the logs reveal nothing: there is no error message to be seen.
> Also, the Windows event log offers no information.
> Currently I use the CGI handler, but it's awfully slow. Running TRAC in its
> own webserver works, but I want to configure security settings in one place.

Ensure that the mod_python module and the Microsoft C/C++ runtime
library used, plus the Python runtime library all have access rights
which would allow the user that the Apache service runs as to read and
use them. Also ensure that you install Python as an administrator so
that the Windows registry entries were setup for the whole machine and
not just you as a user.

Graham
From jedrury at cisco.com  Mon Jul 23 08:39:02 2007
From: jedrury at cisco.com (Jed Drury -X (jedrury - Manpower at Cisco))
Date: Mon Jul 23 08:39:13 2007
Subject: [mod_python] Newbie or not Newbie, that is the question!
Message-ID: <001501c7cd26$73227d80$b9ce6640@cisco.com>

I am having some issues configuring the Apache http.conf file on the most
recent versions of Apache (2.2), Python (2.5) and Mod_Python (3.3). Whenever
I add:
 
LoadModule python_module libexec/mod_python.so
 
beneath the other DSO's and then:
 
 <Directory /some/directory/htdocs/test> 
        AddHandler mod_python .py
        PythonHandler mptest 
        PythonDebug On 
    </Directory>

 And then try to restart Apache I am unable to do so, getting the message of
something like "Unable to perform requested application".  Upon checking
command line, it says:
 
LoadModule python_module libexec/mod_python.so not found 
 
I've been trying to figure this out for a long time but to no avail.  I
don't want to go to PHP.  Please help!
 
Jed


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070723/ca257224/attachment.html
From matthias.niederhausen at tu-dresden.de  Mon Jul 23 10:32:08 2007
From: matthias.niederhausen at tu-dresden.de (Matthias Niederhausen)
Date: Mon Jul 23 10:32:27 2007
Subject: AW: [mod_python] Apache service won't start after module import
In-Reply-To: <88e286470707230332i3d3e66fdofdebc648d758768e@mail.gmail.com>
References: <-205561086663026872@unknownmsgid>
	<88e286470707230332i3d3e66fdofdebc648d758768e@mail.gmail.com>
Message-ID: <002201c7cd36$42b2a340$c817e9c0$@niederhausen@tu-dresden.de>

Hi again,

I tried changing the access rights, but that didn't help. Also, Python was
installed as Administrator. For confidence, I also installed Python2.5
together with the current version of mod_python (to have a clean, new
install) - same result. The service currently runs as a system account.


Matthias


On 23/07/07, Matthias Niederhausen <matthias.niederhausen@tu-dresden.de>
wrote:
> Hi!
>
> I'm quite new to Python and integrating it into Apache, and wanted to
> utilize TRAC on our Windows 2003 webserver. However, things are not as
easy
> as I thought: If I want to include mod_python as an Apache module, the
> service won't start anymore (but loads forever till Windows kills it after
> the timeout). Still, I got the very same configuration running on my WinXP
> pc.
>
> I have already done some checking to find the root of the problem, so I
can
> tell that the problem has nothing to do with any Python directives - just
> only the module import brings Apache down. Another interesting thing is
that
> when I run Apache not as a service, but from the command line, the import
> works and I can even get it to run the test handler(!). However, if I try
> and run TRAC in this configuration, the request times out and I get a
blank
> page.
> Finally, the logs reveal nothing: there is no error message to be seen.
> Also, the Windows event log offers no information.
> Currently I use the CGI handler, but it's awfully slow. Running TRAC in
its
> own webserver works, but I want to configure security settings in one
place.

Ensure that the mod_python module and the Microsoft C/C++ runtime
library used, plus the Python runtime library all have access rights
which would allow the user that the Apache service runs as to read and
use them. Also ensure that you install Python as an administrator so
that the Windows registry entries were setup for the whole machine and
not just you as a user.

Graham
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 4931 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070723/030eb5c2/smime-0001.bin
From gambit at alpenjodel.de  Mon Jul 23 13:58:38 2007
From: gambit at alpenjodel.de (Gambit)
Date: Mon Jul 23 13:58:31 2007
Subject: [mod_python] QUERY_STRING and running a cgi script under mod_python
Message-ID: <f82q7f$4rs$1@sea.gmane.org>

Hi,

I'm having a hard time getting a CGI script to run under mod_python. 
Basically the problem seems to be get variables aren't accessible using 
cgi.FieldStorage() under mod_python the way they are under plain old cgi.

I seriously doubt I'm the first one with this problem but I haven't 
found any solution.

os.environ['QUERY_STRING'] contains the correct query string so they 
aren't been stripped.

Is this documented somewhere? Any known workarounds?

Thanks

From graham.dumpleton at gmail.com  Mon Jul 23 17:58:54 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul 23 17:59:02 2007
Subject: [mod_python] Newbie or not Newbie, that is the question!
In-Reply-To: <001501c7cd26$73227d80$b9ce6640@cisco.com>
References: <001501c7cd26$73227d80$b9ce6640@cisco.com>
Message-ID: <88e286470707231458j656de826o4e43be72ef79c3b9@mail.gmail.com>

Where is your mod_python.so installed?

Change:

  LoadModule python_module libexec/mod_python.so

to be:

  LoadModule python_module /some//path/modules/mod_python.so

Ie., list an absolute path to where the mod_python.so is installed as
you obviously aren't using a relative path which is correct for where
your modules are being installed relative to your Apache installation
root.

Post back what path you ended up using and we can tell you what your
relative path probably was meant to be.

Graham

On 23/07/07, Jed Drury -X (jedrury - Manpower at Cisco)
<jedrury@cisco.com> wrote:
>
>
> I am having some issues configuring the Apache http.conf file on the most
> recent versions of Apache (2.2), Python (2.5) and Mod_Python (3.3). Whenever
> I add:
>
> LoadModule python_module libexec/mod_python.so
>
> beneath the other DSO's and then:
>
>  <Directory /some/directory/htdocs/test>
>         AddHandler mod_python .py
>         PythonHandler mptest
>         PythonDebug On
>     </Directory>
>
>  And then try to restart Apache I am unable to do so, getting the message of
> something like "Unable to perform requested application".  Upon checking
> command line, it says:
>
> LoadModule python_module libexec/mod_python.so not found
>
> I've been trying to figure this out for a long time but to no avail.  I
> don't want to go to PHP.  Please help!
>
> Jed
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Mon Jul 23 18:18:49 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Jul 23 18:18:58 2007
Subject: [mod_python] QUERY_STRING and running a cgi script under
	mod_python
In-Reply-To: <f82q7f$4rs$1@sea.gmane.org>
References: <f82q7f$4rs$1@sea.gmane.org>
Message-ID: <88e286470707231518q630f3b1ap85ced9de60f3fa32@mail.gmail.com>

What is the mod_python configuration you are using in Apache
configuration file. Ie., PythonHandler/SetHandler/AddHandler etc? Just
want to confirm you are in fact using mod_python.

Is your CGI program small enough that you can post it as an example of
what you think isn't working rather than us having to guess as to
exactly what the script does? Preferably create a small as possible
example script which shows just the problem.

Have you ever considered changing your CGI script to be a WSGI
application? CGI script support in mod_python has various limitations
and rewriting it as a WSGI application would be a better outcome in
the long run.

Graham

On 24/07/07, Gambit <gambit@alpenjodel.de> wrote:
> Hi,
>
> I'm having a hard time getting a CGI script to run under mod_python.
> Basically the problem seems to be get variables aren't accessible using
> cgi.FieldStorage() under mod_python the way they are under plain old cgi.
>
> I seriously doubt I'm the first one with this problem but I haven't
> found any solution.
>
> os.environ['QUERY_STRING'] contains the correct query string so they
> aren't been stripped.
>
> Is this documented somewhere? Any known workarounds?
>
> Thanks
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From gambit at alpenjodel.de  Mon Jul 23 21:57:29 2007
From: gambit at alpenjodel.de (Gambit)
Date: Mon Jul 23 21:57:25 2007
Subject: [mod_python] Re: QUERY_STRING and running a cgi script under
	mod_python
In-Reply-To: <88e286470707231518q630f3b1ap85ced9de60f3fa32@mail.gmail.com>
References: <f82q7f$4rs$1@sea.gmane.org>
	<88e286470707231518q630f3b1ap85ced9de60f3fa32@mail.gmail.com>
Message-ID: <f83m9b$29m$1@sea.gmane.org>

Thanks for the reply.

It's an old cgi script someone else wrote. I rewrote it to use 
mod_python style req.form parameters and it works now, so this is mostly 
an academic discussion.

Yes, I'm pretty sure I'm under mod_python, I won't post the server 
configuration here as this server is managed trough the Plesk control 
panel which means the configuration is split in many complex files all 
over the place (I didn't modify anything in this server so this is its 
default mod_python configuration), but this works on the same file:

import mod_python

def index(req):
     req.content_type = "text/plain"
     return "Hello World!"

This is the kind of offending code I was talking about:

import cgi
import os

form = cgi.FieldStorage()
if form.has_key("dir"):
     root_dir = form["dir"].value
     if os.path.commonprefix([document_root, root_dir]) != document_root:
         print 'Invalid dir'
         sys.exit(1)
else:
     root_dir = document_root


Here the dir parameter comes from a get. Under plain old cgi 
form.has_key("dir") is true but not so under mod_python.

Another test:

import cgi
cgi.test()


If called as http://my.server/script.py?foo=bar I get an empty "Form 
Contents" section but the QUERY_STRING variable is foo=bar as expected.

Under CGI "Form Contents" is:

foo: <type 'instance'>
     MiniFieldStorage('foo', 'bar')

I found this to be weird. mod_python makes available both get and post 
variables from req.form and so does cgi.FieldStorage() unless the latter 
it's being run under mod_python in which case post variables are 
available but not get...

Of course one can rewrite the script to use req.form or 
util.FieldStorage() but an unmodified python cgi script won't work as 
expected... I always thought one of the goals of mod_python was to 
provide an upgrade path for cgi scripts but it seems many cgi scripts 
won't work out of the box with it.

Thanks,


From graham.dumpleton at gmail.com  Tue Jul 24 18:08:08 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Jul 24 18:08:19 2007
Subject: [mod_python] Newbie or not Newbie, that is the question!
In-Reply-To: <000801c7cdf2$cde38c10$b9ce6640@cisco.com>
References: <88e286470707231458j656de826o4e43be72ef79c3b9@mail.gmail.com>
	<000801c7cdf2$cde38c10$b9ce6640@cisco.com>
Message-ID: <88e286470707241508o7e202cc9k85063482eb50e309@mail.gmail.com>

On 24/07/07, Jed Drury -X (jedrury - Manpower at Cisco)
<jedrury@cisco.com> wrote:
> Hi,
> My mod_python.so was installed beneath the other "LoadModule" (ssl).
> It seems every time I write in the "mod_python.so", it gets rejected by
> Apache http.conf.  Help!!!!

That isn't what I asked you.

That is merely the configuration line which would load the
mod_python.so file when Apache is started up. What I asked you is
where the actual mod_python.so file is installed in the filesystem?
What is the absolute path to the location of this file?

If you don't know enough to even work this out, run the command:

  apxs -q LIBEXECDIR

where 'apxs' is from the version of Apache you are using.

This will output an absolute path to a directory. Go to that directory
and look in there to see if there is a file called mod_python.so. If
there isn't, then it is likely not even installed. If there is, then
list the absolute path to the file in the LoadModule line and restart
Apache. As I said before, then send the configuration line showing the
absolute path to the mailing list so we can then tell you what the
relative path you should have used in the first placed was, rather
than just assuming that what the documentation says is correct for
your system.

If you still cannot work this out, then perhaps you should go use PHP. :-)

BTW, please use reply-all to keep the discussion on the mailing list.
Do not send stuff to me directly.

Graham

> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Monday, July 23, 2007 5:59 PM
> To: jedrury@cisco.com
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Newbie or not Newbie, that is the question!
>
> Where is your  installed?
>
> Change:
>
>   LoadModule python_module libexec/mod_python.so
>
> to be:
>
>   LoadModule python_module /some//path/modules/mod_python.so
>
> Ie., list an absolute path to where the mod_python.so is installed as you
> obviously aren't using a relative path which is correct for where your
> modules are being installed relative to your Apache installation root.
>
> Post back what path you ended up using and we can tell you what your
> relative path probably was meant to be.
>
> Graham
>
> On 23/07/07, Jed Drury -X (jedrury - Manpower at Cisco) <jedrury@cisco.com>
> wrote:
> >
> >
> > I am having some issues configuring the Apache http.conf file on the
> > most recent versions of Apache (2.2), Python (2.5) and Mod_Python
> > (3.3). Whenever I add:
> >
> > LoadModule python_module libexec/mod_python.so
> >
> > beneath the other DSO's and then:
> >
> >  <Directory /some/directory/htdocs/test>
> >         AddHandler mod_python .py
> >         PythonHandler mptest
> >         PythonDebug On
> >     </Directory>
> >
> >  And then try to restart Apache I am unable to do so, getting the
> > message of something like "Unable to perform requested application".
> > Upon checking command line, it says:
> >
> > LoadModule python_module libexec/mod_python.so not found
> >
> > I've been trying to figure this out for a long time but to no avail.
> > I don't want to go to PHP.  Please help!
> >
> > Jed
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
From jedrury at cisco.com  Thu Jul 26 08:15:48 2007
From: jedrury at cisco.com (Jed Drury -X (jedrury - Manpower at Cisco))
Date: Thu Jul 26 08:16:05 2007
Subject: [mod_python] FW: Mod_Python
Message-ID: <000901c7cf7e$b39c1c90$e54f6640@cisco.com>

 

-----Original Message-----
From: jed drury [mailto:jeddrury@yahoo.com] 
Sent: Thursday, July 26, 2007 5:14 AM
To: jedrury@cisco.com
Subject: Mod_Python

Hello Graham,
Thanks for your assistance.  The absolute path to where my mod_python is
installed is c:\Python25 or C:\Apache Group\Apache2.2\modules.  From what
I've seen, it is installed on my system.  My main problems are just
configuring the httpd.conf file so that I don't always get the  


"Traceback (most recent call last):
  File "C:\Python25\mptest.py", line 1, in <module>
    from mod_python import apache
  File
"C:\Python25\Lib\site-packages\mod_python\apache.py",
line 30, in <module>
    import _apache
ImportError: No module named _apache"

errors every time I try to run the mptest.py.
I even tried to create the .htaccess file with "AddHandler python-program
.py PythonHandler mptest PythonDebug On" but to no avail. 

I appreciate your help! Thanks dude!
Jed



       
____________________________________________________________________________
________
Yahoo! oneSearch: Finally, mobile search that gives answers, not web links. 
http://mobile.yahoo.com/mobileweb/onesearch?refer=1ONXIC
-------------- next part --------------
A non-text attachment was scrubbed...
Name: error.log
Type: application/octet-stream
Size: 7137 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070726/c88b7b7a/error.obj
-------------- next part --------------
#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.2/> for detailed information.
# In particular, see 
# <URL:http://httpd.apache.org/docs/2.2/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "C:/Apache Group/Apache2.2" will be interpreted by the
# server as "C:/Apache Group/Apache2.2/logs/foo.log".
#
# NOTE: Where filenames are specified, you must use forward slashes
# instead of backslashes (e.g., "c:/apache" instead of "c:\apache").
# If a drive letter is omitted, the drive on which Apache.exe is located
# will be used by default.  It is recommended that you always supply
# an explicit drive letter in absolute paths, however, to avoid
# confusion.
#

# ThreadsPerChild: constant number of worker threads in the server process
# MaxRequestsPerChild: maximum  number of requests a server process serves
ThreadsPerChild 250
MaxRequestsPerChild  0

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to point the LockFile directive
# at a local disk.  If you wish to share the same ServerRoot for multiple
# httpd daemons, you will need to change at least LockFile and PidFile.
#
ServerRoot "C:/Apache Group/Apache2.2"

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses (0.0.0.0)
#
#Listen 12.34.56.78:80
Listen 80

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#
LoadModule actions_module modules/mod_actions.so
LoadModule alias_module modules/mod_alias.so
LoadModule asis_module modules/mod_asis.so
LoadModule auth_basic_module modules/mod_auth_basic.so
#LoadModule auth_digest_module modules/mod_auth_digest.so
#LoadModule authn_anon_module modules/mod_authn_anon.so
#LoadModule authn_dbm_module modules/mod_authn_dbm.so
LoadModule authn_default_module modules/mod_authn_default.so
LoadModule authn_file_module modules/mod_authn_file.so
#LoadModule authz_dbm_module modules/mod_authz_dbm.so
LoadModule authz_default_module modules/mod_authz_default.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule autoindex_module modules/mod_autoindex.so
#LoadModule cern_meta_module modules/mod_cern_meta.so
LoadModule cgi_module modules/mod_cgi.so
#LoadModule dav_module modules/mod_dav.so
#LoadModule dav_fs_module modules/mod_dav_fs.so
#LoadModule deflate_module modules/mod_deflate.so
LoadModule dir_module modules/mod_dir.so
LoadModule env_module modules/mod_env.so
#LoadModule expires_module modules/mod_expires.so
#LoadModule file_cache_module modules/mod_file_cache.so
#LoadModule headers_module modules/mod_headers.so
LoadModule imagemap_module modules/mod_imagemap.so
LoadModule include_module modules/mod_include.so
#LoadModule info_module modules/mod_info.so
LoadModule isapi_module modules/mod_isapi.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule mime_module modules/mod_mime.so
#LoadModule mime_magic_module modules/mod_mime_magic.so
#LoadModule proxy_module modules/mod_proxy.so
#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
#LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
#LoadModule proxy_connect_module modules/mod_proxy_connect.so
#LoadModule proxy_http_module modules/mod_proxy_http.so
#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
LoadModule negotiation_module modules/mod_negotiation.so
#LoadModule rewrite_module modules/mod_rewrite.so
LoadModule setenvif_module modules/mod_setenvif.so
#LoadModule speling_module modules/mod_speling.so
#LoadModule status_module modules/mod_status.so
#LoadModule unique_id_module modules/mod_unique_id.so
LoadModule userdir_module modules/mod_userdir.so
#LoadModule usertrack_module modules/mod_usertrack.so
#LoadModule vhost_alias_module modules/mod_vhost_alias.so
#LoadModule ssl_module modules/mod_ssl.so
LoadModule python_module modules/mod_python.so
# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin admin@nc.res.rr.com

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
ServerName cpe-075-177-176-247.nc.res.rr.com:80

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "C:/Apache Group/Apache2.2/htdocs"

#
# Each directory to which Apache has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories). 
#
# First, we configure the "default" to be a very restrictive set of 
# features.  
#
<Directory />
    Options FollowSymLinks
    AllowOverride None
    Order deny,allow
    Deny from all
    Satisfy all
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# This should be changed to whatever you set DocumentRoot to.
#
<Directory "C:/Apache Group/Apache2.2/htdocs">
    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.2/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be "All", "None", or any combination of the keywords:
    #   Options FileInfo AuthConfig Limit
    #
    AllowOverride None

    #
    # Controls who can get stuff from this server.
    #
    Order allow,deny
    Allow from all

</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
<FilesMatch "^\.ht">
    Order allow,deny
    Deny from all
</FilesMatch>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog logs/error.log

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog logs/access.log common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog logs/access.log combined
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server's namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://cpe-075-177-176-247.nc.res.rr.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ "C:/Apache Group/Apache2.2/cgi-bin/"

</IfModule>

#
# "C:/Apache Group/Apache2.2/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "C:/Apache Group/Apache2.2/htaccess">
    AllowOverride FileInfo
</Directory>

# 
# Apache parses all CGI scripts for the shebang line by default.
# This comment line, the first line of the script, consists of the symbols
# pound (#) and exclamation (!) followed by the path of the program that 
# can execute this specific script.  For a perl script, with perl.exe in
# the C:\Program Files\Perl directory, the shebang line should be:

   #!c:/program files/perl/perl

# Note you _must_not_ indent the actual shebang line, and it must be the
# first line of the file.  Of course, CGI processing must be enabled by 
# the appropriate ScriptAlias or Options ExecCGI directives for the files 
# or directory in question.
#
# However, Apache on Windows allows either the Unix behavior above, or can
# use the Registry to match files by extention.  The command to execute 
# a file of this type is retrieved from the registry by the same method as 
# the Windows Explorer would use to handle double-clicking on a file.
# These script actions can be configured from the Windows Explorer View menu, 
# 'Folder Options', and reviewing the 'File Types' tab.  Clicking the Edit
# button allows you to modify the Actions, of which Apache 1.3 attempts to
# perform the 'Open' Action, and failing that it will try the shebang line.
# This behavior is subject to change in Apache release 2.0.
#
# Each mechanism has it's own specific security weaknesses, from the means
# to run a program you didn't intend the website owner to invoke, and the
# best method is a matter of great debate.
#
# To enable the this Windows specific behavior (and therefore -disable- the
# equivilant Unix behavior), uncomment the following directive:
#
#ScriptInterpreterSource registry
#
# The directive above can be placed in individual <Directory> blocks or the
# .htaccess file, with either the 'registry' (Windows behavior) or 'script' 
# (Unix behavior) option, and will override this server default option.
#

#
# DefaultType: the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
#
DefaultType text/plain

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    #AddType text/html .shtml
    #AddOutputFilter INCLUDES .shtml
</IfModule>

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
#MIMEMagicFile conf/magic

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://cpe-075-177-176-247.nc.res.rr.com/subscription_info.html
#

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall is used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
#
#EnableMMAP off
#EnableSendfile off

# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
#Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>
From jpg at jgassociates.ca  Thu Jul 26 09:05:07 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Jul 26 09:04:57 2007
Subject: [mod_python] FW: Mod_Python
In-Reply-To: <000901c7cf7e$b39c1c90$e54f6640@cisco.com>
References: <000901c7cf7e$b39c1c90$e54f6640@cisco.com>
Message-ID: <46A89C03.8080005@jgassociates.ca>

Jed

According to your httpd error.log, mod_python is loading properly.


Jed Drury -X (jedrury - Manpower at Cisco) wrote:
>  
> 
> -----Original Message-----
> From: jed drury [mailto:jeddrury@yahoo.com] 
> Sent: Thursday, July 26, 2007 5:14 AM
> To: jedrury@cisco.com
> Subject: Mod_Python
> 
> Hello Graham,
> Thanks for your assistance.  The absolute path to where my mod_python is
> installed is c:\Python25 or C:\Apache Group\Apache2.2\modules.  From what
> I've seen, it is installed on my system.  My main problems are just
> configuring the httpd.conf file so that I don't always get the  
> 
> 
> "Traceback (most recent call last):
>   File "C:\Python25\mptest.py", line 1, in <module>
>     from mod_python import apache
>   File
> "C:\Python25\Lib\site-packages\mod_python\apache.py",
> line 30, in <module>
>     import _apache
> ImportError: No module named _apache"


I'll bet this is from a command line interpreter, right? You can't run 
mod_python from the command line, only from within the apache httpd server.

> errors every time I try to run the mptest.py.
> I even tried to create the .htaccess file with "AddHandler python-program
> .py PythonHandler mptest PythonDebug On" but to no avail. 

Is .htaccess even being read? Make sure you have something like the 
following in your httpd.conf:

<Directory /some/directory/htdocs/test>
    AllowOverride FileInfo
</Directory>

You could also stick:

AddHandler mod_python .py
PythonHandler mptest
PythonDebug On

in there as well, but while you're experimenting it's likely easier to 
put these directives in your .htaccess file.

Jim
From jedrury at cisco.com  Thu Jul 26 09:12:16 2007
From: jedrury at cisco.com (Jed Drury -X (jedrury - Manpower at Cisco))
Date: Thu Jul 26 09:12:32 2007
Subject: [mod_python] FW: Mod_Python
In-Reply-To: <46A89C03.8080005@jgassociates.ca>
Message-ID: <001301c7cf86$99b63150$e54f6640@cisco.com>

Hi Jim,
Thanks for getting back to me so promptly.  The problem is that when I try
to test mptest.py there is no identification of mod apache.  I know that I'm
close to solving this problem.  However, there is something that I'm
missing.  
Jed Drury 

-----Original Message-----
From: Jim Gallacher [mailto:jpg@jgassociates.ca] 
Sent: Thursday, July 26, 2007 9:05 AM
To: jedrury@cisco.com
Cc: mod_python@modpython.org
Subject: Re: [mod_python] FW: Mod_Python

Jed

According to your httpd error.log, mod_python is loading properly.


Jed Drury -X (jedrury - Manpower at Cisco) wrote:
>  
> 
> -----Original Message-----
> From: jed drury [mailto:jeddrury@yahoo.com]
> Sent: Thursday, July 26, 2007 5:14 AM
> To: jedrury@cisco.com
> Subject: Mod_Python
> 
> Hello Graham,
> Thanks for your assistance.  The absolute path to where my mod_python 
> is installed is c:\Python25 or C:\Apache Group\Apache2.2\modules.  
> From what I've seen, it is installed on my system.  My main problems 
> are just configuring the httpd.conf file so that I don't always get 
> the
> 
> 
> "Traceback (most recent call last):
>   File "C:\Python25\mptest.py", line 1, in <module>
>     from mod_python import apache
>   File
> "C:\Python25\Lib\site-packages\mod_python\apache.py",
> line 30, in <module>
>     import _apache
> ImportError: No module named _apache"


I'll bet this is from a command line interpreter, right? You can't run
mod_python from the command line, only from within the apache httpd server.

> errors every time I try to run the mptest.py.
> I even tried to create the .htaccess file with "AddHandler 
> python-program .py PythonHandler mptest PythonDebug On" but to no avail.

Is .htaccess even being read? Make sure you have something like the
following in your httpd.conf:

<Directory /some/directory/htdocs/test>
    AllowOverride FileInfo
</Directory>

You could also stick:

AddHandler mod_python .py
PythonHandler mptest
PythonDebug On

in there as well, but while you're experimenting it's likely easier to put
these directives in your .htaccess file.

Jim
From jpg at jgassociates.ca  Thu Jul 26 09:29:49 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Jul 26 09:29:27 2007
Subject: [mod_python] FW: Mod_Python
In-Reply-To: <001301c7cf86$99b63150$e54f6640@cisco.com>
References: <001301c7cf86$99b63150$e54f6640@cisco.com>
Message-ID: <46A8A1CD.8060703@jgassociates.ca>

Jed Drury -X (jedrury - Manpower at Cisco) wrote:
> Hi Jim,
> Thanks for getting back to me so promptly.  The problem is that when I try
> to test mptest.py there is no identification of mod apache. 

But you are calling mptest.py from your browser, right?

ie http://localhost/test/mptest.py

(Substituting the correct host for localhost, and assuming that 
mptest.py resides in the htdocs/test directory.)

The error log you posted previously indicates that mod_python is getting 
initialized.

Perhaps you could post the contents of your mptest.py file?

Jim

PS. I'm heading out the door shortly and won't be back until later this 
afternoon.


> I know that I'm
> close to solving this problem.  However, there is something that I'm
> missing.  
> Jed Drury 
> 
> -----Original Message-----
> From: Jim Gallacher [mailto:jpg@jgassociates.ca] 
> Sent: Thursday, July 26, 2007 9:05 AM
> To: jedrury@cisco.com
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] FW: Mod_Python
> 
> Jed
> 
> According to your httpd error.log, mod_python is loading properly.
> 
> 
> Jed Drury -X (jedrury - Manpower at Cisco) wrote:
>>  
>>
>> -----Original Message-----
>> From: jed drury [mailto:jeddrury@yahoo.com]
>> Sent: Thursday, July 26, 2007 5:14 AM
>> To: jedrury@cisco.com
>> Subject: Mod_Python
>>
>> Hello Graham,
>> Thanks for your assistance.  The absolute path to where my mod_python 
>> is installed is c:\Python25 or C:\Apache Group\Apache2.2\modules.  
>> From what I've seen, it is installed on my system.  My main problems 
>> are just configuring the httpd.conf file so that I don't always get 
>> the
>>
>>
>> "Traceback (most recent call last):
>>   File "C:\Python25\mptest.py", line 1, in <module>
>>     from mod_python import apache
>>   File
>> "C:\Python25\Lib\site-packages\mod_python\apache.py",
>> line 30, in <module>
>>     import _apache
>> ImportError: No module named _apache"
> 
> 
> I'll bet this is from a command line interpreter, right? You can't run
> mod_python from the command line, only from within the apache httpd server.
> 
>> errors every time I try to run the mptest.py.
>> I even tried to create the .htaccess file with "AddHandler 
>> python-program .py PythonHandler mptest PythonDebug On" but to no avail.
> 
> Is .htaccess even being read? Make sure you have something like the
> following in your httpd.conf:
> 
> <Directory /some/directory/htdocs/test>
>     AllowOverride FileInfo
> </Directory>
> 
> You could also stick:
> 
> AddHandler mod_python .py
> PythonHandler mptest
> PythonDebug On
> 
> in there as well, but while you're experimenting it's likely easier to put
> these directives in your .htaccess file.
> 
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jedrury at cisco.com  Thu Jul 26 09:54:08 2007
From: jedrury at cisco.com (Jed Drury -X (jedrury - Manpower at Cisco))
Date: Thu Jul 26 09:54:17 2007
Subject: [mod_python] FW: Mod_Python
In-Reply-To: <46A8A1CD.8060703@jgassociates.ca>
Message-ID: <001401c7cf8c$70140600$e54f6640@cisco.com>

Yes...wait, no I haven't.  I just tried it in the Interactive mode.  
 

-----Original Message-----
From: Jim Gallacher [mailto:jpg@jgassociates.ca] 
Sent: Thursday, July 26, 2007 9:30 AM
To: jedrury@cisco.com
Cc: mod_python@modpython.org
Subject: Re: [mod_python] FW: Mod_Python

Jed Drury -X (jedrury - Manpower at Cisco) wrote:
> Hi Jim,
> Thanks for getting back to me so promptly.  The problem is that when I 
> try to test mptest.py there is no identification of mod apache.

But you are calling mptest.py from your browser, right?

ie http://localhost/test/mptest.py

(Substituting the correct host for localhost, and assuming that mptest.py
resides in the htdocs/test directory.)

The error log you posted previously indicates that mod_python is getting
initialized.

Perhaps you could post the contents of your mptest.py file?

Jim

PS. I'm heading out the door shortly and won't be back until later this
afternoon.


> I know that I'm
> close to solving this problem.  However, there is something that I'm
> missing.  
> Jed Drury 
> 
> -----Original Message-----
> From: Jim Gallacher [mailto:jpg@jgassociates.ca] 
> Sent: Thursday, July 26, 2007 9:05 AM
> To: jedrury@cisco.com
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] FW: Mod_Python
> 
> Jed
> 
> According to your httpd error.log, mod_python is loading properly.
> 
> 
> Jed Drury -X (jedrury - Manpower at Cisco) wrote:
>>  
>>
>> -----Original Message-----
>> From: jed drury [mailto:jeddrury@yahoo.com]
>> Sent: Thursday, July 26, 2007 5:14 AM
>> To: jedrury@cisco.com
>> Subject: Mod_Python
>>
>> Hello Graham,
>> Thanks for your assistance.  The absolute path to where my mod_python 
>> is installed is c:\Python25 or C:\Apache Group\Apache2.2\modules.  
>> From what I've seen, it is installed on my system.  My main problems 
>> are just configuring the httpd.conf file so that I don't always get 
>> the
>>
>>
>> "Traceback (most recent call last):
>>   File "C:\Python25\mptest.py", line 1, in <module>
>>     from mod_python import apache
>>   File
>> "C:\Python25\Lib\site-packages\mod_python\apache.py",
>> line 30, in <module>
>>     import _apache
>> ImportError: No module named _apache"
> 
> 
> I'll bet this is from a command line interpreter, right? You can't run
> mod_python from the command line, only from within the apache httpd
server.
> 
>> errors every time I try to run the mptest.py.
>> I even tried to create the .htaccess file with "AddHandler 
>> python-program .py PythonHandler mptest PythonDebug On" but to no avail.
> 
> Is .htaccess even being read? Make sure you have something like the
> following in your httpd.conf:
> 
> <Directory /some/directory/htdocs/test>
>     AllowOverride FileInfo
> </Directory>
> 
> You could also stick:
> 
> AddHandler mod_python .py
> PythonHandler mptest
> PythonDebug On
> 
> in there as well, but while you're experimenting it's likely easier to put
> these directives in your .htaccess file.
> 
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From jedrury at cisco.com  Fri Jul 27 09:05:28 2007
From: jedrury at cisco.com (Jed Drury -X (jedrury - Manpower at Cisco))
Date: Fri Jul 27 09:05:50 2007
Subject: [mod_python] FW: 
Message-ID: <001301c7d04e$ce5e9500$e54f6640@cisco.com>

 

-----Original Message-----
From: jed drury [mailto:jeddrury@yahoo.com] 
Sent: Thursday, July 26, 2007 11:39 PM
To: jedrury@cisco.com
Subject: 

Hello All,
I am on the verge of configuring this correctly.  I just need a little bit
more info. in order to get it right.

First of all, my http.conf looks legit, at least Apache has allowed me to
restart when I added the necessary "LoadModule"/"Directory" lines per
Mod_Python.org. However, every time I try to run it through Mozilla using
the correct path file:

c:/ApacheGroup/Apache2.2/htdocs/mptest.py

I always get a "Firefox doesn't know how to open this address, because the
protocol isn't associated with any program"

When I tried:

http://localhost/mptest.py

The source code showed up on the Mozilla.

Also, when I tried IE, I got this same response when I
entered:

c:/ApacheGroup/Apache2.2/htdocs/mptest.py

Thanks
Jed
Pardon my inexperience and naivite regarding this matter.




       
____________________________________________________________________________
________
Choose the right car based on your needs.  Check out Yahoo! Autos new Car
Finder tool.
http://autos.yahoo.com/carfinder/
-------------- next part --------------
#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.2/> for detailed information.
# In particular, see 
# <URL:http://httpd.apache.org/docs/2.2/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "C:/Apache Group/Apache2.2" will be interpreted by the
# server as "C:/Apache Group/Apache2.2/logs/foo.log".
#
# NOTE: Where filenames are specified, you must use forward slashes
# instead of backslashes (e.g., "c:/apache" instead of "c:\apache").
# If a drive letter is omitted, the drive on which Apache.exe is located
# will be used by default.  It is recommended that you always supply
# an explicit drive letter in absolute paths, however, to avoid
# confusion.
#

# ThreadsPerChild: constant number of worker threads in the server process
# MaxRequestsPerChild: maximum  number of requests a server process serves
ThreadsPerChild 250
MaxRequestsPerChild  0

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to point the LockFile directive
# at a local disk.  If you wish to share the same ServerRoot for multiple
# httpd daemons, you will need to change at least LockFile and PidFile.
#
ServerRoot "C:/Apache Group/Apache2.2"

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses (0.0.0.0)
#
#Listen 12.34.56.78:80
Listen 80

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#
LoadModule actions_module modules/mod_actions.so
LoadModule alias_module modules/mod_alias.so
LoadModule asis_module modules/mod_asis.so
LoadModule auth_basic_module modules/mod_auth_basic.so
#LoadModule auth_digest_module modules/mod_auth_digest.so
#LoadModule authn_anon_module modules/mod_authn_anon.so
#LoadModule authn_dbm_module modules/mod_authn_dbm.so
LoadModule authn_default_module modules/mod_authn_default.so
LoadModule authn_file_module modules/mod_authn_file.so
#LoadModule authz_dbm_module modules/mod_authz_dbm.so
LoadModule authz_default_module modules/mod_authz_default.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule autoindex_module modules/mod_autoindex.so
#LoadModule cern_meta_module modules/mod_cern_meta.so
LoadModule cgi_module modules/mod_cgi.so
#LoadModule dav_module modules/mod_dav.so
#LoadModule dav_fs_module modules/mod_dav_fs.so
#LoadModule deflate_module modules/mod_deflate.so
LoadModule dir_module modules/mod_dir.so
LoadModule env_module modules/mod_env.so
#LoadModule expires_module modules/mod_expires.so
#LoadModule file_cache_module modules/mod_file_cache.so
#LoadModule headers_module modules/mod_headers.so
LoadModule imagemap_module modules/mod_imagemap.so
LoadModule include_module modules/mod_include.so
#LoadModule info_module modules/mod_info.so
LoadModule isapi_module modules/mod_isapi.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule mime_module modules/mod_mime.so
#LoadModule mime_magic_module modules/mod_mime_magic.so
#LoadModule proxy_module modules/mod_proxy.so
#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
#LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
#LoadModule proxy_connect_module modules/mod_proxy_connect.so
#LoadModule proxy_http_module modules/mod_proxy_http.so
#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
LoadModule negotiation_module modules/mod_negotiation.so
#LoadModule rewrite_module modules/mod_rewrite.so
LoadModule setenvif_module modules/mod_setenvif.so
#LoadModule speling_module modules/mod_speling.so
#LoadModule status_module modules/mod_status.so
#LoadModule unique_id_module modules/mod_unique_id.so
LoadModule userdir_module modules/mod_userdir.so
#LoadModule usertrack_module modules/mod_usertrack.so
#LoadModule vhost_alias_module modules/mod_vhost_alias.so
#LoadModule ssl_module modules/mod_ssl.so
LoadModule python_module modules/mod_python.so
# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin admin@nc.res.rr.com

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
ServerName cpe-075-177-176-247.nc.res.rr.com:80

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "C:/Apache Group/Apache2.2/htdocs/"

#
# Each directory to which Apache has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories). 
#
# First, we configure the "default" to be a very restrictive set of 
# features.  
#
<Directory />
    Options FollowSymLinks
    AllowOverride FileInfo
    Order deny,allow
    Deny from all
    Satisfy all
</Directory>
<Location /mpinfo>
      SetHandler mod_python
      PythonHandler mod_python.testhandler
    </Location>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# This should be changed to whatever you set DocumentRoot to.
#
<Directory "C:/Apache Group/Apache2.2/htdocs">
    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.2/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks


    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be "All", "None", or any combination of the keywords:
    #   Options FileInfo AuthConfig Limit
    #
    AllowOverride FileInfo

    #
    # Controls who can get stuff from this server.
    #
    Order allow,deny
    Allow from all

</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
<FilesMatch "^\.ht">
    Order allow,deny
    Deny from all
</FilesMatch>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog logs/error.log

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog logs/access.log common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog logs/access.log combined
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server's namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://cpe-075-177-176-247.nc.res.rr.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ "C:/Apache Group/Apache2.2/cgi-bin/"

</IfModule>

#
# "C:/Apache Group/Apache2.2/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory  "C:/Apache Group/Apache2.2/htdocs/mptest"> 
        AddHandler mod_python .py
        PythonHandler mptest 
        PythonDebug On 
</Directory>
# 
# Apache parses all CGI scripts for the shebang line by default.
# This comment line, the first line of the script, consists of the symbols
# pound (#) and exclamation (!) followed by the path of the program that 
# can execute this specific script.  For a perl script, with perl.exe in
# the C:\Program Files\Perl directory, the shebang line should be:

   #!c:/program files/perl/perl

# Note you _must_not_ indent the actual shebang line, and it must be the
# first line of the file.  Of course, CGI processing must be enabled by 
# the appropriate ScriptAlias or Options ExecCGI directives for the files 
# or directory in question.
#
# However, Apache on Windows allows either the Unix behavior above, or can
# use the Registry to match files by extention.  The command to execute 
# a file of this type is retrieved from the registry by the same method as 
# the Windows Explorer would use to handle double-clicking on a file.
# These script actions can be configured from the Windows Explorer View menu, 
# 'Folder Options', and reviewing the 'File Types' tab.  Clicking the Edit
# button allows you to modify the Actions, of which Apache 1.3 attempts to
# perform the 'Open' Action, and failing that it will try the shebang line.
# This behavior is subject to change in Apache release 2.0.
#
# Each mechanism has it's own specific security weaknesses, from the means
# to run a program you didn't intend the website owner to invoke, and the
# best method is a matter of great debate.
#
# To enable the this Windows specific behavior (and therefore -disable- the
# equivilant Unix behavior), uncomment the following directive:
#
#ScriptInterpreterSource registry
#
# The directive above can be placed in individual <Directory> blocks or the
# .htaccess file, with either the 'registry' (Windows behavior) or 'script' 
# (Unix behavior) option, and will override this server default option.
#

#
# DefaultType: the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
#
DefaultType text/plain

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    #AddType text/html .shtml
    #AddOutputFilter INCLUDES .shtml
</IfModule>

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
#MIMEMagicFile conf/magic

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://cpe-075-177-176-247.nc.res.rr.com/subscription_info.html
#

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall is used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
#
#EnableMMAP off
#EnableSendfile off

# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
#Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>
-------------- next part --------------
General information
Apache version	Apache/2.2.4 (Win32) mod_python/3.3.1 Python/2.5
Apache threaded MPM	Yes, maximum 250 threads / process
Apache forked MPM	No (single process MPM)
Apache server root	C:/Apache Group/Apache2.2
Apache document root	C:/Apache Group/Apache2.2/htdocs/
Apache error log	C:/Apache Group/Apache2.2\logs/error.log (view last 100 lines)
Python sys.version	2.5 (r25:51908, Sep 19 2006, 09:52:17) [MSC v.1310 32 bit (Intel)]
Python sys.path	

C:\WINNT\system32\python25.zip
C:\Python25\Lib
C:\Python25\DLLs
C:\Python25\Lib\lib-tk
C:\Apache Group\Apache2.2
C:\Apache Group\Apache2.2\bin
C:\Python25
C:\Python25\lib\site-packages

Python interpreter name	cpe-075-177-176-247.nc.res.rr.com
mod_python.publisher available	Yes
mod_python.psp available	Yes
Request input headers
Key	Value
Host	localhost
User-Agent	Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1.5) Gecko/20070713 Firefox/2.0.0.5
Accept	text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
Accept-Language	en-us,en;q=0.5
Accept-Encoding	gzip,deflate
Accept-Charset	ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive	300
Connection	keep-alive
Request environment
Key	Value
GATEWAY_INTERFACE	CGI/1.1
SERVER_PROTOCOL	HTTP/1.1
REQUEST_METHOD	GET
QUERY_STRING	
REQUEST_URI	/mpinfo
SCRIPT_NAME	/mpinfo
HTTP_HOST	localhost
HTTP_USER_AGENT	Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1.5) Gecko/20070713 Firefox/2.0.0.5
HTTP_ACCEPT	text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
HTTP_ACCEPT_LANGUAGE	en-us,en;q=0.5
HTTP_ACCEPT_ENCODING	gzip,deflate
HTTP_ACCEPT_CHARSET	ISO-8859-1,utf-8;q=0.7,*;q=0.7
HTTP_KEEP_ALIVE	300
HTTP_CONNECTION	keep-alive
PATH	C:\Program Files\PHP\;C:\WINNT\system32;C:\WINNT;C:\WINNT\System32\Wbem;"C:\Program Files\Zone Labs\ZoneAlarm\MailFrontier";C:\www\openssl\bin;C:\www\Apache22\bin;C:\www\php5;C:\www\mysql5\bin;C:\www\perl\bin;C:php
SystemRoot	C:\WINNT
COMSPEC	C:\WINNT\system32\cmd.exe
PATHEXT	.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH
WINDIR	C:\WINNT
SERVER_SIGNATURE	
SERVER_SOFTWARE	Apache/2.2.4 (Win32) mod_python/3.3.1 Python/2.5
SERVER_NAME	localhost
SERVER_ADDR	127.0.0.1
SERVER_PORT	80
REMOTE_ADDR	0.0.0.0
DOCUMENT_ROOT	C:/Apache Group/Apache2.2/htdocs/
SERVER_ADMIN	admin@nc.res.rr.com
SCRIPT_FILENAME	C:/Apache Group/Apache2.2/htdocs/mpinfo
REMOTE_PORT	0
Request configuration
Key	Value
Request options
Key	Value
Request notes
Key	Value
python_init_ran	1
Server configuration
Key	Value
Server options
Key	Value
Server configuration tree

ThreadsPerChild 250
MaxRequestsPerChild 0
Listen 80
ServerAdmin admin@nc.res.rr.com
ServerName cpe-075-177-176-247.nc.res.rr.com:80
DocumentRoot "C:/Apache Group/Apache2.2/htdocs/"

    Options FollowSymLinks
    AllowOverride FileInfo
    Order deny,allow
    Deny from all
    Satisfy all

    SetHandler mod_python
    PythonHandler mod_python.testhandler

    Options Indexes FollowSymLinks
    AllowOverride FileInfo
    Order allow,deny
    Allow from all
DirectoryIndex index.html

    Order allow,deny
    Deny from all
ErrorLog logs/error.log
LogLevel warn
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
CustomLog logs/access.log common
ScriptAlias /cgi-bin/ "C:/Apache Group/Apache2.2/cgi-bin/"

    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
DefaultType text/plain
TypesConfig conf/mime.types
AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz
From jpg at jgassociates.ca  Fri Jul 27 09:43:57 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Jul 27 09:43:51 2007
Subject: [mod_python] FW:
In-Reply-To: <001301c7d04e$ce5e9500$e54f6640@cisco.com>
References: <001301c7d04e$ce5e9500$e54f6640@cisco.com>
Message-ID: <46A9F69D.2050107@jgassociates.ca>

Jed Drury -X (jedrury - Manpower at Cisco) wrote:
>  
> 
> -----Original Message-----
> From: jed drury [mailto:jeddrury@yahoo.com] 
> Sent: Thursday, July 26, 2007 11:39 PM
> To: jedrury@cisco.com
> Subject: 
> 
> Hello All,
> I am on the verge of configuring this correctly.  I just need a little bit
> more info. in order to get it right.
> 
> First of all, my http.conf looks legit, at least Apache has allowed me to
> restart when I added the necessary "LoadModule"/"Directory" lines per
> Mod_Python.org. However, every time I try to run it through Mozilla using
> the correct path file:
> 
> c:/ApacheGroup/Apache2.2/htdocs/mptest.py
> 
> I always get a "Firefox doesn't know how to open this address, because the
> protocol isn't associated with any program"
> 
> When I tried:
> 
> http://localhost/mptest.py
> 
> The source code showed up on the Mozilla.
> 
> Also, when I tried IE, I got this same response when I
> entered:
> 
> c:/ApacheGroup/Apache2.2/htdocs/mptest.py
> 
> Thanks
> Jed
> Pardon my inexperience and naivite regarding this matter.
> 
> 


You configuration is wrong if your mptest.py file is "C:/Apache 
Group/Apache2.2/htdocs/mptest.py".

<Directory  "C:/Apache Group/Apache2.2/htdocs/mptest">
         AddHandler mod_python .py
         PythonHandler mptest
         PythonDebug On
</Directory>


Either create a directory C:/Apache Group/Apache2.2/htdocs/mptest and 
move mptest.py into it (which is the best plan), or if you want to set 
the handler for your complete htdocs tree use:

<Directory  "C:/Apache Group/Apache2.2/htdocs">
         AddHandler mod_python .py
         PythonHandler mptest
         PythonDebug On
</Directory>

For this config make sure your script "C:/Apache 
Group/Apache2.2/htdocs/mptest.py" exits.

Also, make sure you set the content type in your handler:

mptest.py
---------

from mod_python import apache

def handler(req):
     req.content_type = 'text/plain'
     req.write("Success!")
     return apache.OK

Jim

From evan at yelp.com  Fri Jul 27 14:07:39 2007
From: evan at yelp.com (Evan Klitzke)
Date: Fri Jul 27 14:07:56 2007
Subject: [mod_python] mod_python and mod_wsgi
Message-ID: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>

Hi everyone,

I saw the announcement for the latest mod_wsgi release on
python-announce today, and I'm curious to learn more about it,
especially as it compares to mod_python. From what I can tell, the
primary difference between the two is that while both can run in
"embedded mode", only mod_wsgi can run in so called "daemon" mode. Are
there any compelling reasons to use one over the other when using this
embedded mode? Are there any other significant differences?

-- 
Evan Klitzke <evan@yelp.com>
From steigert at gmail.com  Fri Jul 27 20:24:25 2007
From: steigert at gmail.com (Gustavo Steigert)
Date: Fri Jul 27 20:24:36 2007
Subject: [mod_python] undefined symbol: forkpty
Message-ID: <4bed4b960707271724h7f2c1fcdo121dfea4dd081085@mail.gmail.com>

Hi guys,

I installed Apache2 (from source) and it worked fine. Then I installed
mod_python (also from source) and no error was shown; after, I configured
the httpd.conf for loading mod_python, and now when I try to start apache,
it says:

httpd: Syntax error on line 54 of /usr/local/apache2/conf/httpd.conf: Cannot
load /usr/local/apache2/modules/mod_python.so into server:
/usr/local/apache2/modules/mod_python.so: undefined symbol: forkpty

Version information:

   - httpd 2.2.4
   - mod_python 3.3.1
   - fedora 7

Can anyone please help?
Thanks

-- Gustavo Steigert
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20070727/4de6e2be/attachment.html
From graham.dumpleton at gmail.com  Sat Jul 28 00:25:15 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Jul 28 00:25:25 2007
Subject: [mod_python] mod_python and mod_wsgi
In-Reply-To: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>
References: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>
Message-ID: <88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>

On 28/07/07, Evan Klitzke <evan@yelp.com> wrote:
> Hi everyone,
>
> I saw the announcement for the latest mod_wsgi release on
> python-announce today, and I'm curious to learn more about it,
> especially as it compares to mod_python. From what I can tell, the
> primary difference between the two is that while both can run in
> "embedded mode", only mod_wsgi can run in so called "daemon" mode. Are
> there any compelling reasons to use one over the other when using this
> embedded mode? Are there any other significant differences?

Reasons to use mod_wsgi in embedded mode in preference to mod_python.

* In mod_wsgi the SCRIPT_NAME variable required by WSGI applications
is able to be determined automatically, where as with the WSGI
adapters for mod_python you have to help them out and tell them what
SCRIPT_NAME is and they will adjust PATH_INFO correspondingly.

* There are various issues with mod_python documented at:

  https://issues.apache.org/jira/browse/MODPYTHON

which have still not been fixed, but which are down correctly in
mod_wsgi. These include things related to main interpreter simplified
GIL state API use, atexit processing, reading of request content,
request content size restrictions etc etc. I can't remember them all
off the top of my head.

* Because mod_wsgi is all in C code and doesn't use any Python code
for dispatching or implementing the WSGI interface, it has lower
runtime overhead. It also doesn't need to drag in lots of Python
modules like mod_python so any memory use from Python modules is only
from your own application.

* There is an interpreter reload feature in mod_wsgi which can allow
you to reload a whole application without restarting Apache. Although,
the usefulness of this is limited if your application uses certain
third party C extension modules which have not been written properly
so as to be able to handle interpreters being recycled.

* It is much simpler to configure mod_wsgi for WSGI applications and
no third party adapter is required.

* It works on Apache 1.3 exactly the same.

* Various other things I can't remember at the moment.

Reasons to still use mod_python instead of embedded mode of mod_python.

* It is possible to hook into other phases of Apache such as
authentication/authorisation. This might be needed for example where
you want to use Django user/passwd database to control access to non
Python aspects of the web server such as Subversion repository access.

Although mod_wsgi can't provided this functionality now, a future
companion module to mod_wsgi will however provide some means of
allowing Python code to be used to implement an authentication
provider and/or authorisation control.

* Only WSGI applications can be hosted by mod_wsgi whereas mod_python
is a platform for developing web applications in its own right, giving
access to various internals of Apache as well as providing support for
forms handling, sessions, page templating, URL dispatching etc. If
used correctly mod_python also provides a module reloading
functionality which can also help to avoid having to restart Apache.

Although any interaction between mod_wsgi and Apache is currently
limited to what you can do with Apache directives, for example, using
Apache directives to insert input or output filters, a companion
module to mod_wsgi will in the future optionally provide access to a
full SWIG binding for the Apache API, thus allowing a lot of what
mod_python can currently do to be done, plus a lot of new stuff.

* Various other things I can't remember at the moment.

All up, it really depends on what you are wanting to do. If you are
only wanting to host an existing WSGI application or framework, or the
application you are writing is WSGI compliant and you want to be able
to target it at different hosting platforms, then mod_wsgi will most
likely be a better choice because it is purpose built for that. If you
want to explore using mod_python to control Apache at a lower level,
then mod_python is currently the only way of doing it using the Python
language.

In time mod_wsgi will branch into other areas by way of providing
companion modules which will provide facilities which only mod_python
currently provides, but not sure how long before that occurs. One
thing that has to happen first is that the internal APIs of mod_wsgi
have to be exposed and formalised. Once that is done then these
companion modules can also be written and made available.

Because there will be an API for harnessing the mod_wsgi internals for
Python interpreter creation and management, and for injecting special
Python objects into the WSGI application environment, it may even end
up serving as a platform used by independent parties to develop their
own Apache modules which extend on mod_wsgi and Apache/Python support.
This will make it much easier to develop new Python related stuff for
Apache than currently exists with mod_python as in most cases with
mod_python there isn't a choice but for the new functionality to be
added to mod_python core itself. A person wanting extensions is
therefore dependent on the mod_python developers. The intention is
that this will not be the case with mod_wsgi but that it will have
this open internal interface which can be hooked into without needed
to modify mod_wsgi itself.

Note, I may be a bit biased. ;-)

Graham
From gert.cuykens at gmail.com  Sat Jul 28 19:57:07 2007
From: gert.cuykens at gmail.com (Gert Cuykens)
Date: Sat Jul 28 19:57:20 2007
Subject: [mod_python] mod_python and mod_wsgi
In-Reply-To: <88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>
References: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>
	<88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>
Message-ID: <ef60af090707281657v4efad02ahb278511af99b3a6f@mail.gmail.com>

How do you do this in wsgi :)

def handler(req):
    text = req.read()
    req.content_type = 'text/xml'
    req.write(text)
    return apache.OK
From graham.dumpleton at gmail.com  Sat Jul 28 20:08:33 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Jul 28 20:08:42 2007
Subject: [mod_python] mod_python and mod_wsgi
In-Reply-To: <ef60af090707281657v4efad02ahb278511af99b3a6f@mail.gmail.com>
References: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>
	<88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>
	<ef60af090707281657v4efad02ahb278511af99b3a6f@mail.gmail.com>
Message-ID: <88e286470707281708l351a397ek341b2be9d67291a2@mail.gmail.com>

On 29/07/07, Gert Cuykens <gert.cuykens@gmail.com> wrote:
> How do you do this in wsgi :)
>
> def handler(req):
>     text = req.read()
>     req.content_type = 'text/xml'
>     req.write(text)
>     return apache.OK

Try:

def application(environ, start_response):
    status = '200 OK'

    length = int(environ.get('CONTENT_LENGTH', '0'))
    output = environ['wsgi.input'].read(length)

    response_headers = [('Content-type', 'text/plain'),
                        ('Content-Length', str(len(output)))]
    start_response(status, response_headers)

    return [output]

I didn't use text/xml though so I could actually see posted input and
not have browser do something strange.

Graham
From gert.cuykens at gmail.com  Sat Jul 28 20:31:45 2007
From: gert.cuykens at gmail.com (Gert Cuykens)
Date: Sat Jul 28 20:31:53 2007
Subject: [mod_python] mod_python and mod_wsgi
In-Reply-To: <88e286470707281708l351a397ek341b2be9d67291a2@mail.gmail.com>
References: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>
	<88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>
	<ef60af090707281657v4efad02ahb278511af99b3a6f@mail.gmail.com>
	<88e286470707281708l351a397ek341b2be9d67291a2@mail.gmail.com>
Message-ID: <ef60af090707281731p6eec83pdfe20946f1216450@mail.gmail.com>

On 7/29/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> On 29/07/07, Gert Cuykens <gert.cuykens@gmail.com> wrote:
> > How do you do this in wsgi :)
> >
> > def handler(req):
> >     text = req.read()
> >     req.content_type = 'text/xml'
> >     req.write(text)
> >     return apache.OK
>
> Try:
>
> def application(environ, start_response):
>     status = '200 OK'
>
>     length = int(environ.get('CONTENT_LENGTH', '0'))
>     output = environ['wsgi.input'].read(length)
>
>     response_headers = [('Content-type', 'text/plain'),
>                         ('Content-Length', str(len(output)))]
>     start_response(status, response_headers)
>
>     return [output]
>
> I didn't use text/xml though so I could actually see posted input and
> not have browser do something strange.

Alrigdy mod_python is going to have to make some room for wsgi,
In fact my next question would be can my wsgi project be in your
example list when its done :)

I only need a new name for my project because dfo is taken in google
code ***** any suggestions ?
From rogerb at rogerbinns.com  Sun Jul 29 02:22:19 2007
From: rogerb at rogerbinns.com (Roger Binns)
Date: Sun Jul 29 02:22:26 2007
Subject: [mod_python] mod_python and mod_wsgi
In-Reply-To: <88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>
References: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>
	<88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>
Message-ID: <46AC321B.5030309@rogerbinns.com>

Graham Dumpleton wrote:
> These include things related to main interpreter simplified
> GIL state API use, .....  Although,
> the usefulness of this is limited if your application uses certain
> third party C extension modules which have not been written properly
> so as to be able to handle interpreters being recycled.

Can you document somewhere what extension authors are supposed to do?
Currently we all just follow the main CPython documentation.  Even
better would be to get the CPython implementation updated (so extension
authors don't have to change code) or at least updating the CPython
documentation.

Roger
From graham.dumpleton at gmail.com  Sun Jul 29 03:16:28 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 29 03:16:36 2007
Subject: [mod_python] mod_python and mod_wsgi
In-Reply-To: <46AC321B.5030309@rogerbinns.com>
References: <cfb58d850707271107rc25041dobeb3866d76348c91@mail.gmail.com>
	<88e286470707272125l7e3a02f9h8d87a8f24040f526@mail.gmail.com>
	<46AC321B.5030309@rogerbinns.com>
Message-ID: <88e286470707290016s2c385d3ala3fbae464dca114@mail.gmail.com>

On 29/07/07, Roger Binns <rogerb@rogerbinns.com> wrote:
> Graham Dumpleton wrote:
> > These include things related to main interpreter simplified
> > GIL state API use, .....  Although,
> > the usefulness of this is limited if your application uses certain
> > third party C extension modules which have not been written properly
> > so as to be able to handle interpreters being recycled.
>
> Can you document somewhere what extension authors are supposed to do?
> Currently we all just follow the main CPython documentation.  Even
> better would be to get the CPython implementation updated (so extension
> authors don't have to change code) or at least updating the CPython
> documentation.

There is nothing wrong with the CPython implementation that needs to
be changed, it is how module writers use it.

The two main issues are (affecting both mod_python and mod_wsgi):

1. Module writers using simplified GIL state API for thread
management. By doing this the module can only be used in the very
first interpreter created by Python. In mod_python this is in the
interpreter selectable by setting PythonInterpreter to
'main_interpreter'. In mod_wsgi one selects this first interpreter by
setting WSGIApplicationGroup to '%{GLOBAL}'. That simplified GIL state
API will only work with first interpreter is I believe documented in
Python documentation.

2. Module writers who do not realise that a C module is only
initialised once per process and cache data which is interpreter
specific from the module initialisation function and then use that
cached data in ways with secondary sub interpreters. In many cases
this will work okay, but in others it will not, such as using
'decimal.Decimal' from main interpreter to create object instances for
secondary sub interpreters. The 'decimal.Decimal' in the secondary sub
interpreters is different due to it being a Python object and not a
CPython object. Thus things like isinstance() fail when comparing
object types. This sort of thing may not be explicitly documented in
Python documentation and since module writers don't contemplate that
their module may be used in situation where there is multiple sub
interpreters may not think about it.

Only other real issue and one that only affects mod_wsgi interpreter
reloading is where an extension module caches references to Python
objects in global C variables but doesn't actually do an Py_INCREF on
it. If the sub interpreter is recycled, that cache Python object can
be destroyed. If new interpreter is created the extension module isn't
reinitialised and that C variable then contains a dangling pointer to
object that has since been destroyed.

I mention these issues to various degrees as being a cause of problems
when using mod_wsgi in the mod_wsgi documentation. If need be, when I
get a chance I'll a specific page on these issues with actual C code
examples.

Graham
From graham.dumpleton at gmail.com  Sun Jul 29 07:13:30 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 29 07:13:37 2007
Subject: [mod_python] undefined symbol: forkpty
In-Reply-To: <4bed4b960707271724h7f2c1fcdo121dfea4dd081085@mail.gmail.com>
References: <4bed4b960707271724h7f2c1fcdo121dfea4dd081085@mail.gmail.com>
Message-ID: <88e286470707290413j78e8a726i84ec5506cd14e1d9@mail.gmail.com>

On 28/07/07, Gustavo Steigert <steigert@gmail.com> wrote:
> Hi guys,
>
> I installed Apache2 (from source) and it worked fine. Then I installed
> mod_python (also from source) and no error was shown; after, I configured
> the httpd.conf for loading mod_python, and now when I try to start apache,
> it says:
>
>  httpd: Syntax error on line 54 of
> /usr/local/apache2/conf/httpd.conf: Cannot load
> /usr/local/apache2/modules/mod_python.so into server:
> /usr/local/apache2/modules/mod_python.so: undefined symbol:
> forkpty
>
> Version information:
>
> httpd 2.2.4
> mod_python 3.3.1
> fedora 7Can anyone please help?

The forkpty function isn't even used by mod_python, although it is
used in the Python 'posix' module which would probably be
automatically loaded by Python at startup.

What I would suggest is the problem is that whatever system library
defines that function isn't being linked into Apache when it is being
built.

First step would thus be to find out which system library contains
that function. To do this, run 'nm' on each of the system libraries in
/usr/lib until you find it. On Linux box I have access to the library
is libutil.

$ nm libutil.a | grep forkpty
forkpty.o:
00000000 T forkpty

Make sure this library is linked into Apache, preferably as a shared
library as Apache itself may not require the function and wouldn't
link it in if libutil is a static library.

Graham
From rhn at o2.pl  Sun Jul 29 13:35:04 2007
From: rhn at o2.pl (=?UTF-8?Q?rhn?=)
Date: Sun Jul 29 13:35:11 2007
Subject: [mod_python] req.write() in use by PSP
Message-ID: <4d13cbf4.112480a7.46accfc8.44b79@o2.pl>

Hi

I've run into a problem trying to embed long lasting functions in my .psp files.
As far as I know, the req.write() method sends data directly to the client, with no buffering.

I have the following code:



<html>
<body>
<%
import time
%>
for i in range(10):
    time.sleep(5)
%>
<p>Hello, my name is Joe</p>
<%

%>
</body>
</html>


I expect it to write the above paragraph in 5-second intervals, but it seems that mod_python waits until the last command executes, then sends the whole content.

Is there any way to reconfigure the psp handler to disable buffering or do I have to rewrite it?

My apache and mod-python config is quite default, handler configuration is exactly the same as in PSP tutorial.

I'm using:
Apache 2.2.4
mod_python 3.3.1
Python 2.5

Other Apache modules are:
mod_ssl
mod_php
mod_perl



From graham.dumpleton at gmail.com  Sun Jul 29 18:02:10 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sun Jul 29 18:02:22 2007
Subject: [mod_python] req.write() in use by PSP
In-Reply-To: <4d13cbf4.112480a7.46accfc8.44b79@o2.pl>
References: <4d13cbf4.112480a7.46accfc8.44b79@o2.pl>
Message-ID: <88e286470707291502u6fbe5c23u9c419961d276b56b@mail.gmail.com>

On 30/07/07, rhn <rhn@o2.pl> wrote:
> Hi
>
> I've run into a problem trying to embed long lasting functions in my .psp files.
> As far as I know, the req.write() method sends data directly to the client, with no buffering.
>
> I have the following code:
>
>
>
> <html>
> <body>
> <%
> import time
> %>
> for i in range(10):
>     time.sleep(5)
> %>
> <p>Hello, my name is Joe</p>
> <%
>
> %>
> </body>
> </html>
>
>
> I expect it to write the above paragraph in 5-second intervals, but it seems that mod_python waits until the last command executes, then sends the whole content.
>
> Is there any way to reconfigure the psp handler to disable buffering or do I have to rewrite it?

Have you tried inserting a call to:

  req.flush()

Graham
