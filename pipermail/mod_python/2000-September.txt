From Daniel.Plagge at tu-clausthal.de  Fri Sep  1 10:57:13 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] How can I easily terminate a apache task?
Message-ID: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>

Hello,

we have here a persistant database (Informix) connection for each apache 
task. One problem is that if the database goes down, the connection has
to be reinitiallized. I tried to achieve this by writing a wrapper class
around the informixdb class which reinitializes the connection if a
exception raises.

But this led to some strange errors, so I want to try another approach:
I want to alter "cgihandler" so that when a database exceptions raises
the task should be terminated. (This shouldn't happen very often, so
it's not a performance killer.)

So my question is: What is the preferred way to terminate a apache task?

Thank you,
Daniel


From L.A.Timochouk at ukc.ac.uk  Fri Sep  1 12:55:06 2000
From: L.A.Timochouk at ukc.ac.uk (Leonid Timochouk)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>

Hello Daniel,

The easiest thing to try would be to invoke sys.exit (...) from your
Python script -- my understanding is that the Python interpreter runs in
the same process as the Apache task which created it. This is certainly
true for a normal "handler"; I never tried a "cgi handler" but believe
that the mechanism should be the same.

If this does not work for any reason, try os._exit (...) instead. However,
there may be a problem if your Apache task is actually a thread rather
than an independent process (which OS are you using?) -- in that case you
may try thread.exit ().

These solutions (if any of them works) are not Apache-specific, and quite
"rude" in the sense that they terminate the Apache task without any
internal clean-up. So maybe someone else knows a better way?

Sincerely,
L.A. Timochouk


From grisha at ispol.com  Fri Sep  1 09:45:00 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com>

Apache provides an API for this - ap_child_terminate(). I'll see about
making it available to mod_python in the next release (which should happen
fairly soon).

Grisha

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 1 Sep 2000, Daniel Plagge wrote:

> Hello,
> 
> we have here a persistant database (Informix) connection for each apache 
> task. One problem is that if the database goes down, the connection has
> to be reinitiallized. I tried to achieve this by writing a wrapper class
> around the informixdb class which reinitializes the connection if a
> exception raises.
> 
> But this led to some strange errors, so I want to try another approach:
> I want to alter "cgihandler" so that when a database exceptions raises
> the task should be terminated. (This shouldn't happen very often, so
> it's not a performance killer.)
> 
> So my question is: What is the preferred way to terminate a apache task?
> 
> Thank you,
> Daniel
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From mhagger at alum.mit.edu  Fri Sep  1 17:30:54 2000
From: mhagger at alum.mit.edu (Michael Haggerty)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] ANNOUNCE: PyWX version 0.6
Message-ID: <14768.8206.590958.607388@freak.kaiserty.com>

[I hope people aren't offended that I post this announcement here.  I
figure that there is enough overlap that this might be interesting to
some mod_python subscribers.  Also there is some potential for
cross-pollination between our two projects. --MRH]

I am pleased to announce the release of PyWX version 0.6.  This is an
alpha release but is fairly stable and is being used in several
development environments.

PyWX can be retrieved from SourceForge,

        http://download.sourceforge.net/PyWX/PyWX-0.6.tar.gz

The PyWX homepage is

        http://pywx.idyll.org


What is PyWX?
-------------

PyWX is a Python module for AOLserver.

AOLserver is a free, open-source, enterprise-class, multi-threaded web
server whose performance on dynamic content is reputed to beat Apache.
It is used at many large web sites including AOL and ArsDigita.  It
includes an internal database API that allows persistent database
connections.

Python is a clean, object-oriented scripting language with excellent
support for complicated data structures and great libraries for web
programming.

PyWX embeds a Python interpreter into AOLserver, allowing threaded
execution of Python scripts--even CGI scripts--within the server
process.  It also allows the Python script to access almost all of
AOLserver's internal API via a C extension module.  PyWX supports many
other features, including

 + Full access to AOLserver's Tcl interpreter from Python, and vice versa.
 + Access to AOLserver's persistent database mechanism.
 + Optional compiled-script caching.
 + Threaded execution of CGI scripts within emulated CGI environment.
 + Cross-connection data-persistence.
 + An internal Webware adaptor.


What's new in version 0.6?
--------------------------

 + SWIG-assisted wrapping of AOLserver's C API functions.  Almost all
   of AOLserver's facilities are available to Python scripts, wrapped
   in an object-oriented fashion.
 + More of PyWX itself is written in Python.
 + Much-improved documentation.
 + Significant cleanup, bug fixes, and plugging of memory leaks.
 + Improved example scripts.

Version 0.6 is fairly stable and is being used in several development
environments, although there are still some problems under heavy
loads.  As a rough measure of the performance, PyWX can deliver a
trivial Python script at about 230 pages per second on a
single-processor Pentium 3/500MHz under Linux.

Please check out our home page at

        http://pywx.idyll.org

for more information on PyWX, including mailing lists, development
archives, and several example pages.  You may also be interested in:

        http://www.aolserver.com       -- AOLserver
        http://www.python.org          -- the Python programming language
        http://webware.sourceforge.net -- Webware toolkit

Yours,
Michael
--
Michael Haggerty
mhagger@alum.mit.edu


--
Michael Haggerty
mhagger@alum.mit.edu

From Daniel.Plagge at tu-clausthal.de  Sat Sep  2 09:29:09 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>; from L.A.Timochouk@ukc.ac.uk on Fre, Sep 01, 2000 at 12:55:06 +0100
References: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com> <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>
Message-ID: <20000902092909.A715@wintermute.esw-heim.tu-clausthal.de>

Hello Leonid and Gregory,

thank you for your answers. 
I tried sys.exit() and os._exit() and the latter worked.
But I'll wait for the next release, ap_child_terminate() seems
to be the right(TM) solution. :)

Daniel


From evaamo at loquesea.com  Sat Sep  2 15:36:17 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Internal Server Error- win32 ver
Message-ID: <000401c01515$10ee19b0$41dea8c0@wormhole>

Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E



From arhiv at freemail.org.mk  Sat Sep  2 22:41:00 2000
From: arhiv at freemail.org.mk (damjan)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Just a hint!
Message-ID: <Pine.LNX.4.21.0009022236530.345-100000@localhost.localdomain>

When you test if mod_python is working on your system DON'T make a
script named "test.py", because python already has a package named
"test". This may seem obvious and stupid, but I lost hours trying to
figure it out why mod_python is not working.

just my $0.02

-- 
damjan




From evaamo at loquesea.com  Sat Sep  2 18:13:20 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Internal Server Error- win32 ver
In-Reply-To: <000401c01515$10ee19b0$41dea8c0@wormhole>
Message-ID: <000101c0152b$015fb380$41dea8c0@wormhole>

Hey all,
I just got it working...I had unzipped the tarball
and the files landed where they shouldn't.
It didnt matter much to me anyway because I thought the dll
would suffice...wrong assumption tho'.
Thank you all...
-E



-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Enrique Vaamonde
Sent: Saturday, September 02, 2000 3:36 PM
To: mod_python@modpython.org
Subject: [mod_python] Internal Server Error- win32 ver


Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From walter at livinglogic.de  Mon Sep  4 11:55:19 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Doc Error: axps <-> apxs
Message-ID: <200009041155190953.0041FE68@mail.tmt.de>

Hello all!

There is a typo in the installation documentation 
(doc/installation.html):
The Apache extension tool is called apxs and *not* axps!
Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ?
www.livinglogic.de


From grisha at ispol.com  Tue Sep  5 09:13:03 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] 2.5 is out
Message-ID: <Pine.LNX.4.21.0009050903140.22535-100000@saturn.ispol.com>

Hello - 

You can now download the 2.5 version release. I will follow up on
comp.lang.python and on freshmeat about this once we have the Windows
version working and the RH RPM.

New in this release:

* PythonEnablePdb directive. Allows running handlers through the Python
  debugger.

* Dynamic handler registration (req.add_handler()). Allows additional
  handlers to be added dynamically.

* Table object now supports multiple keys via the add() method.

* req.read() function now returns all the data there is and obeys by the
  Apache Timout directive (as it should).

* New handler PythonInitHandler.

* New PythonInterpPerServer directive. This adds another sub-interpreter
  policy - a sub intepreter per virtual server.

* req.register_cleanup() and PythonCleanupHandler directives. Useful to
  make sure that all files and database connections are closed properly.

* many bugs fixed. (but perhaps many new introduced!)

Grisha



From arhiv at freemail.org.mk  Thu Sep  7 15:59:53 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Several questions
Message-ID: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>

Hi, I don't have that much experience with mod_python, and have some
questions:

What should I do if I want a persistent python object? Can I make a
persistent object to be shared between different apache processes (or
not until Apache 2.0).

Or am I supposed to do this by using a database? Which database would
have low latency, low memory footprint, low CPU usage, etc.. suitable
for object store? MySQL?



-- 
Thanks,

damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Thu Sep  7 13:58:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>

On Thu, 7 Sep 2000, Damjan wrote:

> Hi, I don't have that much experience with mod_python, and have some
> questions:
> 
> What should I do if I want a persistent python object? Can I make a
> persistent object to be shared between different apache processes (or
> not until Apache 2.0).

No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
only 2.0 running in multthreaded mode would allow something like this.

> Or am I supposed to do this by using a database? Which database would
> have low latency, low memory footprint, low CPU usage, etc.. suitable
> for object store? MySQL?

I don't know how easy it is to store actual Python objects in a database -
I suppose you could is cPickle or something, but if you just want to store
information (i.e. text or numbers as opposed to objects) - MySQL is very
very fast.

Grisha


From arhiv at freemail.org.mk  Thu Sep  7 22:05:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0009072159370.449-100000@localhost.localdomain>

> > What should I do if I want a persistent python object? Can I make a
> > persistent object to be shared between different apache processes (or
> > not until Apache 2.0).
> 
> No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
> only 2.0 running in multthreaded mode would allow something like this.

As I understand, Apache 2.0 will have support for shared memory, thus
allowing multiple child processes to share information (and the modules
could use this).
 
> > Or am I supposed to do this by using a database? Which database would
> > have low latency, low memory footprint, low CPU usage, etc.. suitable
> > for object store? MySQL?
> 
> I don't know how easy it is to store actual Python objects in a database -
> I suppose you could is cPickle or something, but if you just want to store
> information (i.e. text or numbers as opposed to objects) - MySQL is very
> very fast.

Yes, my idea was to cPickle the objects, but I have a feeling that an
SQL database might be just to bloat.

-- 
damjan

               I believe the technical term is "Oops!"


From seant at alum.mit.edu  Thu Sep  7 19:04:17 2000
From: seant at alum.mit.edu (Sean True)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Another authentication issue? Or am I missing something?
Message-ID: <MJEHLHJKGINLONDMMKNECEKHCGAA.seant@alum.mit.edu>

I've been having trouble getting PythonAuthenHandler-s to work properly. On
my Microsoft IE 5.5 browser,
the password dialog was not popping up. After some digging (Writing Apache
Modules in Perl and C is-your-friend), I found on page 284 the
reccomendation that one call req.note_basic_auth-failure, a perl method, to
force the WWW-Authenticate field in the HTTP headers to be set. This will
cause the browser to pop a password dialog.

Since that method is not exposed in Python (wouldn't Swig make this a lot
easier?), I added the following code to mod_python.c
and things worked much better, first try:

	    /* SDT If an AuthenHandler and we failed, note failure */
	    if (strcmp(handler, "PythonAuthenHandler") == 0) {
	      if ((result == HTTP_UNAUTHORIZED)){
		ap_note_basic_auth_failure(req);
	      }
	    /* Original code continues */
	    /* authen handlers need one more thing
	     * if authentication failed and this handler is not
	     * authoritative, let the others handle it
	     */
	      if (strcmp(handler, "PythonAuthenHandler") == 0) {
		if ((result == HTTP_UNAUTHORIZED) &&
		    (! conf->authoritative)) {
		  result = DECLINED;


Any comments? Other than the obvious proper factoring of the if expression
...

-- Sean
-------
Sean True
Webreply, Inc.


From rsalz at caveosystems.com  Fri Sep  8 15:00:36 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Passing data across handlers
Message-ID: <39B93754.989D4451@caveosystems.com>

What's the best way to create data in one handler (e.g., Authen) and
make it available to another?  Create a global? Stringify and use the
notes attr?

tnx.

From grisha at ispol.com  Fri Sep  8 16:47:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B93754.989D4451@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>

I think req->notes is the best for now. I'll think about some more
elegant way for future versions. A global is not so good because you may
accidently pass it to a different request alltogether, whereas notes is
guaranteed to get cleaned between requests.

Grisha


On Fri, 8 Sep 2000, Rich Salz wrote:

> What's the best way to create data in one handler (e.g., Authen) and
> make it available to another?  Create a global? Stringify and use the
> notes attr?
> 
> tnx.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From rsalz at caveosystems.com  Fri Sep  8 22:41:27 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:46:01 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>
Message-ID: <39B9A357.7536A46@caveosystems.com>

The problem with notes, of course, is that stringifying is too limiting.

Here's a suggestion.  Add a new method:
	req.get_state()
that returns a dictionary associated with this request, or None.
	req.create_state()
creates the dictionary.

The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
cleaned up
until the request is done.  How to attach it to the request_rec object? 
Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
hack.

Hope this helps.

Gregory Trubetskoy wrote:
> 
> I think req->notes is the best for now. I'll think about some more
> elegant way for future versions. A global is not so good because you may
> accidently pass it to a different request alltogether, whereas notes is
> guaranteed to get cleaned between requests.
> 
> Grisha
> 
> On Fri, 8 Sep 2000, Rich Salz wrote:
> 
> > What's the best way to create data in one handler (e.g., Authen) and
> > make it available to another?  Create a global? Stringify and use the
> > notes attr?
> >
> > tnx.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From peter at wl.vg  Mon Sep 11 01:28:36 2000
From: peter at wl.vg (peter@wl.vg)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] code question
Message-ID: <39BC6D84.A78F3692@wl.vg>

I am just learning Python and am trying to learn how to use it for
online applications.  Sorry for my ignorance, but I usually develop in
perl.  I can't find documentation that describes how to do this.  I have
pieced this together, but it doesn't work.

from mod_python import apache
import cgi


def handler(req):


	len = int(req.headers_in["content-length"])
	form_data = cgi.parse_qs(req.read(len))

	req.send_http_header()
	req.write("This is from the form: "+form_data['name']+"!")
	return apache.OK

-- 
Peter Halliday
Online Application Developer
Whetstone Logic, Inc.       http://www.whetstonelogic.com
icq#75769411           AIM screen name: hoaggelos

From miguel at yorku.ca  Mon Sep 11 07:55:33 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] code question
In-Reply-To: <39BC6D84.A78F3692@wl.vg>
References: <39BC6D84.A78F3692@wl.vg>
Message-ID: <20000911075533X.miguel@yorku.ca>

On Mon, 11 Sep 2000 01:28:36 -0400, peter@wl.vg wrote:
> I am just learning Python and am trying to learn how to use it for
> online applications.  Sorry for my ignorance, but I usually develop in
> perl.  I can't find documentation that describes how to do this.  I have
> pieced this together, but it doesn't work.
> 
> from mod_python import apache
> import cgi
> 
> 
> def handler(req):
> 
> 
> 	len = int(req.headers_in["content-length"])
> 	form_data = cgi.parse_qs(req.read(len))
> 
> 	req.send_http_header()
> 	req.write("This is from the form: "+form_data['name']+"!")
> 	return apache.OK
> 

Here's snippet of some test code I've used...

import cgi
from mod_python import apache

def handler(req):
    form = {}
    req.content_type = "text/plain"
    req.send_http_header()
    if req.headers_in.has_key("content-length"):
        len = int(req.headers_in["content-length"])
        if len > 0:
            data = req.read(len)
            form = cgi.parse_qs(data)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    else:
        if (req.args):
            form = cgi.parse_qs(req.args)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    return apache.OK

Hope it helps...

							Miguel

C. Miguel Marques, York University, Computing & Communications Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From grisha at ispol.com  Mon Sep 11 08:16:37 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B9A357.7536A46@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>

The problem with that is subinterpreters. 

A single request can go through several subinterpreters, and if you end up
with a dictionary created in one, but it has members created in another,
you run a risk of some weird errors.

If you stringify, then you can pass data across handlers as well as across
subinterpreters with no ill sideffects.

What I'd like to know is - how likely really is it that someone would be
passing anything more complex than a couple of flags between handlers? (I
can't think of a practical need for it, but then I haven't thought hard
enough... )

Grisha

On Fri, 8 Sep 2000, Rich Salz wrote:

> The problem with notes, of course, is that stringifying is too limiting.
> 
> Here's a suggestion.  Add a new method:
> 	req.get_state()
> that returns a dictionary associated with this request, or None.
> 	req.create_state()
> creates the dictionary.
> 
> The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
> cleaned up
> until the request is done.  How to attach it to the request_rec object? 
> Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
> hack.
> 
> Hope this helps.
> 
> Gregory Trubetskoy wrote:
> > 
> > I think req->notes is the best for now. I'll think about some more
> > elegant way for future versions. A global is not so good because you may
> > accidently pass it to a different request alltogether, whereas notes is
> > guaranteed to get cleaned between requests.
> > 
> > Grisha
> > 
> > On Fri, 8 Sep 2000, Rich Salz wrote:
> > 
> > > What's the best way to create data in one handler (e.g., Authen) and
> > > make it available to another?  Create a global? Stringify and use the
> > > notes attr?
> > >
> > > tnx.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> 


From rsalz at caveosystems.com  Mon Sep 11 09:39:22 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>
Message-ID: <39BCE08A.4758A8DC@caveosystems.com>

> What I'd like to know is - how likely really is it that someone would be
> passing anything more complex than a couple of flags between handlers?

Well, we need it. :)

All sorts of authen state, for example: client certificate, database
cursor for their account, etc.

Yes, we could stringify everything and put it in the request table, but
that's too inefficient (and sometimes not feasible or possible).  Should
I really have to call "pickle" every time I want to keep state within a
single request?

I don't fully understand how mod_python does sub-interpreters; I'll have
to reread the docs.  It never occured to me that there could/would be
different interps for each handler.  I suggest that the docs make it
more clear that the handlers are "stateless".

For us, the cleanest thing is one interp/request, with no state kept
across requests.  That seems most like the "classic" apache processing
model.
	/r$

From jeremy at beopen.com  Mon Sep 11 14:14:46 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] two installation issues w/ Python 2.0b1
Message-ID: <14781.8470.692645.381473@bitdiddle.concentric.net>

I installed mod_python for the first time this morning.  I'm just
learning how to use it.  I ran into a couple of configuration issues,
because I am using Python 2.0b1 on my system.

Issue #1 is that mod_python.c makes explicit reference to a Python
executable named python1.5.  This grabs an old version of Python on my
system and compilation fails because it can't find an include file.
If I replace "python1.5" with "python," it all works fine under Python
2.0.

-------------- next part --------------
*** src/modules/extra/mod_python.c	Mon Sep 11 13:01:20 2000
--- ../mod_python-2.0/src/mod_python.c	Mon May 22 08:14:39 2000
***************
*** 2526,2533 ****
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
--- 2526,2533 ----
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python1.5 -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python1.5 -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
-------------- next part --------------

Issue #2: The installation of modules in site-packages is
significantly easier under Python 2.0, because you can count on
distutils being installed.  Instead of using compileall.py, I wrote a
simple setup.py script that I would recommend for inclusion in the
next release.

-------------- next part --------------
#!/usr/bin/env python

from distutils.core import setup

setup(name = "mod_python",
      version = "2.0",
      author = "Gregory Trubetskoy",
      author_email = "grisha@ispol.com",
      packages = ["mod_python"],
      package_dir = {'': 'lib/python'},
      )
-------------- next part --------------

I also had a problem running the mptest.py script described in the
documentation; so I'm reporting it as recommended by the docs.  I
don't know if the problem results from my use of Python 2.0 or being
confused about how to configure things or something else entirely.

If I run the generic mod_python install, I get an error when I tried
to load http://localhost:8080/test/mptest.py.

    ERROR mod_python: "PythonHandler mptest"

    Traceback (most recent call last):

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 103, in Dispatch 
        module = import_module(module_name, req)

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 246, in import_module 
        exec "import " + module_name

      File "<string>", line 1, in ?

    ImportError: No module named mptest

The problem, near as I can tell, is that the mod_python.apache inserts
"." at the head of sys.path -- but the current working directory is
"/".  There's no way "." would work unless apache or mod_python
explicitly changed the cwd to the directory that contains mptest.py.

So I changed the relevant lines in apache.py to do that:

    # unless pythonpath is set explicitely
    if pythonpath is not None:
        sys.path = eval(pythonpath)
    else:
        dir, file = os.path.split(req.filename)
        sys.path.insert(0, dir)
##        # add '.' to sys.path 
##        if '.' not in sys.path:
##            sys.path[:0] = ['.']

Now it works.  The test script prints "Hello World!"

Any idea what went wrong?  Have I done something naive in my
configuration of Apache or mod_python?  What component is responsible
for making the chdir call?

-- Jeremy Hylton <http://www.python.org/~jeremy/>
From grisha at ispol.com  Mon Sep 11 14:37:25 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BCE08A.4758A8DC@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>

On Mon, 11 Sep 2000, Rich Salz wrote:

> I don't fully understand how mod_python does sub-interpreters; I'll have
> to reread the docs.

The things you should read are:

The top of
http://www.modpython.org/live/mod_python-2.5/doc/pythonapi.html

as well as
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpreter
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerDirectory
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerServer

> It never occured to me that there could/would be different interps for
> each handler.

This would happen for example if authentication is handled by an
application entirely different from the one creating content. If your
PyhtonAuthenHandler is in the httpd.conf file and the app is driven by a
PythonHandler in an .htaccess file, you'd have the same request, but
different handlers would have different suninterpreters.

> I suggest that the docs make it more clear that the handlers are
> "stateless".

...or make ways to retain state... :-)

Here is a suggestion - if I provided a way to store a pointer to a Python
object in notes - would that solve your problem? You create the object,
then call some function that returns a string that you can store in
notes. Then you can call another function that you pass that string
and it will return the Python object. That way mod_python does not need to
concern itself with the context in which the object is used, and you can
pass the object between handlers.

> For us, the cleanest thing is one interp/request, with no state kept
> across requests.  

In most cases there would be one interp per request, or you can ensure it
by using the PythonInterpreter directive. For example, sticking something
like "PythonInterpreter MyOnlyInterpreter" into httpd.conf would make the
whole server run under one interpreter.

> That seems most like the "classic" apache processing model.

Apache was designed with multiple users and multiple applications in mind.
That's why it supports .htaccess files. Mod_python's subinterpreters
extend that notion. You can have two different application with clashing
module names run on the same server with no problems because they could be
run in different subinterpreters. Or you can have two instances of the
same application run in separate subinterpreters. Try that with mod_perl.


Grisha



From rsalz at caveosystems.com  Tue Sep 12 10:49:18 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>
Message-ID: <39BE426E.153BC5C5@caveosystems.com>

> Here is a suggestion - if I provided a way to store a pointer to a Python
> object in notes - would that solve your problem? You create the object,
> then call some function that returns a string that you can store in
> notes.

Yes.  That's what I was thinking of in my first note (the "%p" being the
ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
what the inferences are for referencing counting -- will I explicitly
call "del" on what I get back?

(Wouldn't it have been nice if Py_INCREF returned its input param? :)

Is the request_rec notes field mapped to a python list?  Could/should it
be?

> Try that with mod_perl.

:)  First I have to understand it.

From grisha at ispol.com  Tue Sep 12 11:46:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121139291.28608-100000@saturn.ispol.com>

Yes, reference counting will be one problem with this.... I think a better
alternative would be to do it the way you suggested, but there would be
one dictionary per interpreter. So you won't be able to pass objects
between interpreters, *and* you don't have to worry about reference
counting.

On Tue, 12 Sep 2000, Rich Salz wrote:

> > Here is a suggestion - if I provided a way to store a pointer to a Python
> > object in notes - would that solve your problem? You create the object,
> > then call some function that returns a string that you can store in
> > notes.
> 
> Yes.  That's what I was thinking of in my first note (the "%p" being the
> ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
> what the inferences are for referencing counting -- will I explicitly
> call "del" on what I get back?
> 
> (Wouldn't it have been nice if Py_INCREF returned its input param? :)
> 
> Is the request_rec notes field mapped to a python list?  Could/should it
> be?
> 
> > Try that with mod_perl.
> 
> :)  First I have to understand it.
> 


From grisha at ispol.com  Tue Sep 12 11:48:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121146370.28608-100000@saturn.ispol.com>

On Tue, 12 Sep 2000, Rich Salz wrote:

> Is the request_rec notes field mapped to a python list?  Could/should it
> be?

req.notes is an mptable object. It's a Python mapping to an Apache
table. Apache tables are sort of like dictionaries, except they work only
with strings. The nice thing about them is that Apache manages the memory.

Grisha


From miguel at yorku.ca  Tue Sep 12 17:40:35 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Python 1.6...
Message-ID: <20000912174035B.miguel@yorku.ca>

Hi

Has anyone gotten 2.5 to work with Python 1.6?
TIA

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From jeremy at beopen.com  Wed Sep 13 08:01:07 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Python 1.6...
In-Reply-To: <20000912174035B.miguel@yorku.ca>
References: <20000912174035B.miguel@yorku.ca>
Message-ID: <14783.27779.744392.301326@bitdiddle.concentric.net>

I have gotten it to work with Python 2.0b1.  

Jeremy

PS I don't think there's much point to worrying about 1.6.

From walter at livinglogic.de  Thu Sep 14 19:06:04 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] mod_python 2.5 installation problems
Message-ID: <200009141906040375.00FD0EC6@mail.tmt.de>

Hello all!

I'm having trouble installing mod_python 2.5.
Starting apache gives me the following:

> /usr/sbin/httpd -X
Syntax error on line 20 of /usr/local/etc/httpd/httpd.conf:
Cannot load /usr/lib/apache/mod_python.so into server: /usr/lib/apache/mod_python.so: undefined symbol: openpty

The system is:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

Line 20 of /usr/local/etc/httpd/httpd.conf is:
	LoadModule python_module /usr/lib/apache/mod_python.so

Any help would be appreciated!

Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ? www.livinglogic.de


From whitaker at isharp.com  Wed Sep 20 13:45:41 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
Message-ID: <39C921F5.E912296F@isharp.com>

Hello all,

I have used this as my guide:
"http://www.modpython.org/live/mod_python-2.5/doc/installation.html"

My host o/s: SunOS 2.7 Generic_106542-04 i86pc

I statically linked mod_python into my apache 1.3.9 httpd
and moved it into place, then restarted the daemon.  Telnet
to port 80 shows:

Server: Apache/1.3.9 (Unix) mod_python/2.5 Python/1.5.2

I followed the instructions in bullet points 3-7 in section "3. Testing"
in installation.html, as my reading of points 1-2 indicates those
steps apply to the DSO option only.

I then created a file "mptest.py" as indicated in the instructions,
(bullet point 6) mode 755 in /usr/local/apache/cgi-bin/test, 
which is world readable (httpd runs as user "http").

My first .htaccess in the same directory contained the following,
as per the instructions:

AddHandler python-program .py
PythonHandler mptest
PythonDebug

I tried to call mptest.py via CGI, with this error_log output (attn
Gregory):

[Wed Sep 20 12:49:52 2000] [alert]
/usr/local/apache/cgi-bin/test/.htaccess: 
PythonDebug must be On or Off

...after which I modified .htaccess as follows ("On" switch):

AddHandler python-program .py
PythonHandler mptest
PythonDebug On

Trying again, I get the following error_log output:

make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Wed Sep 20 13:10:24 2000] [error] python_handler: make_obcallback
returned no obCallBack!

My httpd.conf contains the following:

<Directory "/usr/local/apache/cgi-bin">
    AllowOverride All
    Options ExecCGI
    Order allow,deny
    Allow from all
</Directory>

Insight, anyone?  I'm not sure if the contents of these archives
contain insight relevant to my problem:

"http://www.modpython.org/pipermail/mod_python/2000-June/000091.html"
"http://www.modpython.org/pipermail/mod_python/2000-June/000092.html"

Any help would be greatly appreciated,
Russell

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From grisha at ispol.com  Wed Sep 20 18:11:01 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
In-Reply-To: <39C921F5.E912296F@isharp.com>
Message-ID: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>


On Wed, 20 Sep 2000, Russell Whitaker wrote:

> [Wed Sep 20 12:49:52 2000] [alert]
> /usr/local/apache/cgi-bin/test/.htaccess: 
> PythonDebug must be On or Off

noted

> <Directory "/usr/local/apache/cgi-bin">
>     AllowOverride All
>     Options ExecCGI

You do not need CGI since mod_python has nothing to do with it whatsoever.

>     Order allow,deny
>     Allow from all
> </Directory>
> 
> Insight, anyone?  I'm not sure if the contents of these archives
> contain insight relevant to my problem:

I have a feeling it is a permissions problem with the mod_python package
that you were supposed to stick in yout python path. Check which userid
Apache runs as and if that user can read those files.

Grisha


From whitaker at isharp.com  Wed Sep 20 15:43:37 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
References: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>
Message-ID: <39C93D99.A14997FE@isharp.com>

Hello Gregory!

Gregory Trubetskoy wrote:
> 
> On Wed, 20 Sep 2000, Russell Whitaker wrote:
> 
> > [Wed Sep 20 12:49:52 2000] [alert]
> > /usr/local/apache/cgi-bin/test/.htaccess:
> > PythonDebug must be On or Off
> 
> noted

Cool.

> 
> > <Directory "/usr/local/apache/cgi-bin">
> >     AllowOverride All
> >     Options ExecCGI
> 
> You do not need CGI since mod_python has nothing to do with it whatsoever.

Ah, that ExecCGI applies to the entire $SERVERROOT/cgi-bin/ for the
Apache
server.  It was there in httpd.conf for all the other guys in my shop
who 
_don't_ yet do Python.  ;-)

It shouldn't have any adverse affect on the workings of mod_python, as
you point out.

> 
> >     Order allow,deny
> >     Allow from all
> > </Directory>
> >
> > Insight, anyone?  I'm not sure if the contents of these archives
> > contain insight relevant to my problem:
> 
> I have a feeling it is a permissions problem with the mod_python package
> that you were supposed to stick in yout python path. Check which userid
> Apache runs as and if that user can read those files.

Checked permissions, everything in in PATHONPATH is world readable, no
problem there.  However, you gave me the hint I needed.  See, this
is where mod_python installed:

/usr/local/lib/python1.5/site-packages/mod_python-2.5/lib/python/mod_python

...because (and I don't know why) I skipped (whoops) bullet point 2 in 
section 1.) "Installing Python Libraries".  Symlinking that directory
as 
/usr/local/lib/python1.5/site-packages/mod_python fixed the problem.

Hello World!

Thanks,
Russell

> 
> Grisha

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From rutt at chezrutt.com  Thu Sep 21 07:43:56 2000
From: rutt at chezrutt.com (John Ruttenberg)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Loading mod_python.so into apache-1.3.12 on redhat 6.2 segfaults
Message-ID: <200009211143.HAA16011@mojo.chezrutt.com>

I've using both the 2.4 rpm due to Mads Kiilerich and compiling 2.5 with apxs
and the results are the same -- 'httpd -X' segfaults.  The minimum change to
httpd.conf for this to happen is to add:

    LoadModule python_module modules/mod_python.so

before any of the other LoadModule lines.  (My httpd.conf is available from
http://chezrutt.com/~rutt/httpd.conf if you want to take a look.)

I've also tried statically compiling apache according to the instructions that
come with it, but then httpd complains about the first LoadModule statement:

    [root@mojo src]# httpd -X
    Syntax error on line 208 of /etc/httpd/conf/httpd.conf:
    Invalid command 'LoadModule', perhaps mis-spelled or defined by a module not in\
    cluded in the server configuration
    [root@mojo src]#

Perhaps I don't know how to configure it to allow loadable modules?

From okamoto at xfiles.intercon.hp.com  Wed Sep 27 15:07:25 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
Message-ID: <200009272207.PAA13041@xfiles.intercon.hp.com>

Hello,

I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
mod_python just fine, and have configured Apache and created an mptest.py
as the Installation documentation says.  However, when I try to access
it, I get the following error:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
    in Dispatch module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
    in import_module module = __import__(module_name)

ImportError: No module named mptest

I've checked the ML archives, and saw a message by Jeremy Hylton that was
almost exactly the problem I've encountered, but he was using mod_python
2.0, not 2.5.

Can someone give me some additional suggestions of what to try next?

Thanks,
Jeff

From benno at sesgroup.net  Thu Sep 28 10:51:18 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Wed, Sep 27, 2000 at 03:07:25PM -0700
References: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <20000928105118.A13402@bob.sesgroup.net>

Hi Jeff!

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?


I ran into this same problem, it means that mptest is not in the path correctly.

My httpd.conf has this in it:



<Directory /var/www>
AddHandler python-program .py
PythonHandler mptest
PythonDebug on
</Directory>


The trick is that whatever is specified as the directory will get added to the
sys.path when trying to find the module.

If your apache root is somewhere else like (/home/www or something) then add that
instead.


Cheers,

Ben


(oh and as my first post to the list I will add my congrats and thanks to the 
author for such a great program!)

From grisha at ispol.com  Thu Sep 28 09:08:58 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not
 playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <Pine.LNX.4.21.0009280907400.9717-100000@saturn.ispol.com>

Where is your PythonHandler directive? It needs to be either in an
.htaccess file or inside <Directory> tags matching the directory where
mptest.py resides, or you need to have a PythonPath directive with the
directory where mptest.py is.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?
> 
> Thanks,
> Jeff
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at yahoo.com  Thu Sep 28 06:47:22 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache request handler examples
Message-ID: <20000928134722.16597.qmail@web2203.mail.yahoo.com>

Hi

I have written some cgi apps based on mod_python and
am now having a go writing my own handler.  I seem to
be running into various difficulties (like how to
convince Netscrape that this is html and not
text/plain), most of which I have been able to sort
out but I am wondering whether there are there any
code examples/docs out there that could make this
easier.  Surely I am not the first to have had these
problems?

So far I have used the mod_python docs, the apache API
(which is not too informative) and the PERL docs on
the apache module (which are quite helpful).  

Have I missed a useful resource somewhere?  Is there a
site where I could start adding to a FAQ on the
subject?

Regards
Alexis

__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From grisha at ispol.com  Thu Sep 28 10:34:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache request handler examples
In-Reply-To: <20000928134722.16597.qmail@web2203.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0009281032510.9753-100000@saturn.ispol.com>

There is no resource like that that I know of, but if anyone wants to
contribute, they are more than welcome.

There is an O'Reilly book - "Writing Apache Modules with Perl and C". It
is, of course, C and Perl specific, but I think it's a great book to read
if you want to understand mod_python better.

Grisha


On Thu, 28 Sep 2000, Alexis Iglauer wrote:

> Hi
> 
> I have written some cgi apps based on mod_python and
> am now having a go writing my own handler.  I seem to
> be running into various difficulties (like how to
> convince Netscrape that this is html and not
> text/plain), most of which I have been able to sort
> out but I am wondering whether there are there any
> code examples/docs out there that could make this
> easier.  Surely I am not the first to have had these
> problems?
> 
> So far I have used the mod_python docs, the apache API
> (which is not too informative) and the PERL docs on
> the apache module (which are quite helpful).  
> 
> Have I missed a useful resource somewhere?  Is there a
> site where I could start adding to a FAQ on the
> subject?
> 
> Regards
> Alexis
> 
> __________________________________________________
> Do You Yahoo!?
> Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
> http://photos.yahoo.com/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From okamoto at xfiles.intercon.hp.com  Thu Sep 28 10:15:51 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000928105118.A13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 28, 100 10:51 am
Message-ID: <200009281715.KAA15395@xfiles.intercon.hp.com>

> My httpd.conf has this in it:
> 
> <Directory /var/www>
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug on
> </Directory>

The relevant section for me is:

<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Directory /opt/apache>
    AddHandler python-program .py
    PythonHandler mptest
    PythonDebug On
</Directory>

> The trick is that whatever is specified as the directory will get added to the
> sys.path when trying to find the module.
> 
> If your apache root is somewhere else like (/home/www or something) then add that
> instead.

Sadly, it's still not working.  It's quite sad that the install.html file
doesn't mention putting it inside a Directory directive and that there's
in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Sigh.

Jeff

From benno at sesgroup.net  Fri Sep 29 10:42:34 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009281715.KAA15395@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Thu, Sep 28, 2000 at 10:15:51AM -0700
References: <20000928105118.A13402@bob.sesgroup.net> <200009281715.KAA15395@xfiles.intercon.hp.com>
Message-ID: <20000929104234.F13402@bob.sesgroup.net>

On Thu, 28 Sep 2000, Jeff Okamoto wrote:

> > My httpd.conf has this in it:
> > 
> > <Directory /var/www>
> > AddHandler python-program .py
> > PythonHandler mptest
> > PythonDebug on
> > </Directory>
> 
> The relevant section for me is:
> 
> <Directory />
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Directory /opt/apache>
>     AddHandler python-program .py
>     PythonHandler mptest
>     PythonDebug On
> </Directory>

That seem correct to me.
 
> > The trick is that whatever is specified as the directory will get added to the
> > sys.path when trying to find the module.
> > 
> > If your apache root is somewhere else like (/home/www or something) then add that
> > instead.
 
> Sadly, it's still not working. 

Is it the same error message? What is in error.log. One thing that you 
might want to try is putting mptest.py into the same directory as apache.py,
this ensures that it is going to be in the correct path. That might help
narrow down the problem. Also you probably need to make sure that the file has
read and execute permission for the apache user.

> It's quite sad that the install.html file
> doesn't mention putting it inside a Directory directive and that there's
> in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Yeah well shit happens, guessing it is probably case of the code gaining features
faster than the docs can keep up with (though I'm just a new user, so I am merely
guessing).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Fri Sep 29 10:50:56 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache Segfault
Message-ID: <39D457F0.8DF53FC1@LivingLogic.de>

Hi everybody,

I'm having some severe trouble installing mod_python 2.5 with the
following environment:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

I compiled mod_python.so with the following command:

> apxs -I /usr/local/include/python2.0/ -c mod_python.c \ 
> /usr/local/src/Python-2.0b1/libpython2.0.a -lpthread -lutil -lm -lreadline -lncurses

The first LoadModule directive in my httpd.conf file is 

> LoadModule python_module /usr/local/src/mod_python-2.5/src/mod_python.so

Starting apache with the following command:

> httpd -t -f /etc/httpd/httpd.conf -D MODULES 

gives me:

> Syntax OK
> Segmentation fault   

Here is the stack backtrace, when I let the whole thing run in the
debugger:

> (gdb) file /usr/sbin/httpd
> Reading symbols from /usr/sbin/httpd...(no debugging symbols found)...done.
> (gdb) set args -t -f /etc/httpd/httpd.conf -D MODULES
> (gdb) run
> Starting program: /usr/sbin/httpd -t -f /etc/httpd/httpd.conf -D MODULES
> Syntax OK
> (no debugging symbols found)...Cannot access memory at address 0x404db434.
> (gdb) bt
> #0  0x4000ab11 in _dl_debug_state () at dl-debug.c:47
> #1  0x401834c1 in _dl_close () at dl-close.c:199
> #2  0x400b23eb in dlclose_doit (handle=0x80a76a8) at dlclose.c:26
> #3  0x4000a801 in _dl_catch_error () at dl-error.c:117
> #4  0x400b29c1 in _dlerror_run (operate=0x400b23d0 <dlclose_doit>, args=0x80a76a8)
>     at dlerror.c:125
> #5  0x400b2411 in dlclose () at dlclose.c:27
> #6  0x8069cb2 in ap_os_dso_unload ()
> #7  0x80502d9 in ap_get_server_built ()
> #8  0x8051d4b in ap_run_cleanup ()
> #9  0x80509cf in ap_clear_pool ()
> #10 0x8050a38 in ap_destroy_pool ()
> #11 0x80509a3 in ap_clear_pool ()
> #12 0x8050a38 in ap_destroy_pool ()
> #13 0x805ba18 in ap_exists_scoreboard_image ()
> #14 0x805e335 in main ()
> #15 0x400cea8e in __libc_start_main () at ../sysdeps/generic/libc-start.c:93    

Can anybody help me out or give any additional hints?

Thanks,

--- Matthias


------------------------------------------
  Matthias Bauer     -    LivingLogic AG
  Maximilianstr. 2   -    95444 Bayreuth
             www.livinglogic.de 
------------------------------------------

From okamoto at xfiles.intercon.hp.com  Fri Sep 29 12:49:46 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:46:02 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000929104234.F13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 29, 100 10:42 am
Message-ID: <200009291949.MAA06080@xfiles.intercon.hp.com>

> > <Directory />
> >     Options FollowSymLinks
> >     AllowOverride None
> > </Directory>
> > 
> > <Directory /opt/apache>
> >     AddHandler python-program .py
> >     PythonHandler mptest
> >     PythonDebug On
> > </Directory>

Some more info: if I change /opt/apache above to /test (and mptest.py is
in htdocs/test), then Apache returns the text of the file.

When it's /opt/apache, the browser returns:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)

ImportError: No module named mptest

and Apache's error log says:

[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: Traceback (most recent call last):
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: ImportError: No module named mptest

> One thing that you 
> might want to try is putting mptest.py into the same directory as apache.py,
> this ensures that it is going to be in the correct path. That might help
> narrow down the problem. Also you probably need to make sure that the file has
> read and execute permission for the apache user.

Tried all this, including setting execute permissions.  NFG.

Jeff

From Daniel.Plagge at tu-clausthal.de  Fri Sep  1 10:57:13 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] How can I easily terminate a apache task?
Message-ID: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>

Hello,

we have here a persistant database (Informix) connection for each apache 
task. One problem is that if the database goes down, the connection has
to be reinitiallized. I tried to achieve this by writing a wrapper class
around the informixdb class which reinitializes the connection if a
exception raises.

But this led to some strange errors, so I want to try another approach:
I want to alter "cgihandler" so that when a database exceptions raises
the task should be terminated. (This shouldn't happen very often, so
it's not a performance killer.)

So my question is: What is the preferred way to terminate a apache task?

Thank you,
Daniel


From L.A.Timochouk at ukc.ac.uk  Fri Sep  1 12:55:06 2000
From: L.A.Timochouk at ukc.ac.uk (Leonid Timochouk)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>

Hello Daniel,

The easiest thing to try would be to invoke sys.exit (...) from your
Python script -- my understanding is that the Python interpreter runs in
the same process as the Apache task which created it. This is certainly
true for a normal "handler"; I never tried a "cgi handler" but believe
that the mechanism should be the same.

If this does not work for any reason, try os._exit (...) instead. However,
there may be a problem if your Apache task is actually a thread rather
than an independent process (which OS are you using?) -- in that case you
may try thread.exit ().

These solutions (if any of them works) are not Apache-specific, and quite
"rude" in the sense that they terminate the Apache task without any
internal clean-up. So maybe someone else knows a better way?

Sincerely,
L.A. Timochouk


From grisha at ispol.com  Fri Sep  1 09:45:00 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com>

Apache provides an API for this - ap_child_terminate(). I'll see about
making it available to mod_python in the next release (which should happen
fairly soon).

Grisha

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 1 Sep 2000, Daniel Plagge wrote:

> Hello,
> 
> we have here a persistant database (Informix) connection for each apache 
> task. One problem is that if the database goes down, the connection has
> to be reinitiallized. I tried to achieve this by writing a wrapper class
> around the informixdb class which reinitializes the connection if a
> exception raises.
> 
> But this led to some strange errors, so I want to try another approach:
> I want to alter "cgihandler" so that when a database exceptions raises
> the task should be terminated. (This shouldn't happen very often, so
> it's not a performance killer.)
> 
> So my question is: What is the preferred way to terminate a apache task?
> 
> Thank you,
> Daniel
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From mhagger at alum.mit.edu  Fri Sep  1 17:30:54 2000
From: mhagger at alum.mit.edu (Michael Haggerty)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] ANNOUNCE: PyWX version 0.6
Message-ID: <14768.8206.590958.607388@freak.kaiserty.com>

[I hope people aren't offended that I post this announcement here.  I
figure that there is enough overlap that this might be interesting to
some mod_python subscribers.  Also there is some potential for
cross-pollination between our two projects. --MRH]

I am pleased to announce the release of PyWX version 0.6.  This is an
alpha release but is fairly stable and is being used in several
development environments.

PyWX can be retrieved from SourceForge,

        http://download.sourceforge.net/PyWX/PyWX-0.6.tar.gz

The PyWX homepage is

        http://pywx.idyll.org


What is PyWX?
-------------

PyWX is a Python module for AOLserver.

AOLserver is a free, open-source, enterprise-class, multi-threaded web
server whose performance on dynamic content is reputed to beat Apache.
It is used at many large web sites including AOL and ArsDigita.  It
includes an internal database API that allows persistent database
connections.

Python is a clean, object-oriented scripting language with excellent
support for complicated data structures and great libraries for web
programming.

PyWX embeds a Python interpreter into AOLserver, allowing threaded
execution of Python scripts--even CGI scripts--within the server
process.  It also allows the Python script to access almost all of
AOLserver's internal API via a C extension module.  PyWX supports many
other features, including

 + Full access to AOLserver's Tcl interpreter from Python, and vice versa.
 + Access to AOLserver's persistent database mechanism.
 + Optional compiled-script caching.
 + Threaded execution of CGI scripts within emulated CGI environment.
 + Cross-connection data-persistence.
 + An internal Webware adaptor.


What's new in version 0.6?
--------------------------

 + SWIG-assisted wrapping of AOLserver's C API functions.  Almost all
   of AOLserver's facilities are available to Python scripts, wrapped
   in an object-oriented fashion.
 + More of PyWX itself is written in Python.
 + Much-improved documentation.
 + Significant cleanup, bug fixes, and plugging of memory leaks.
 + Improved example scripts.

Version 0.6 is fairly stable and is being used in several development
environments, although there are still some problems under heavy
loads.  As a rough measure of the performance, PyWX can deliver a
trivial Python script at about 230 pages per second on a
single-processor Pentium 3/500MHz under Linux.

Please check out our home page at

        http://pywx.idyll.org

for more information on PyWX, including mailing lists, development
archives, and several example pages.  You may also be interested in:

        http://www.aolserver.com       -- AOLserver
        http://www.python.org          -- the Python programming language
        http://webware.sourceforge.net -- Webware toolkit

Yours,
Michael
--
Michael Haggerty
mhagger@alum.mit.edu


--
Michael Haggerty
mhagger@alum.mit.edu

From Daniel.Plagge at tu-clausthal.de  Sat Sep  2 09:29:09 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>; from L.A.Timochouk@ukc.ac.uk on Fre, Sep 01, 2000 at 12:55:06 +0100
References: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com> <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>
Message-ID: <20000902092909.A715@wintermute.esw-heim.tu-clausthal.de>

Hello Leonid and Gregory,

thank you for your answers. 
I tried sys.exit() and os._exit() and the latter worked.
But I'll wait for the next release, ap_child_terminate() seems
to be the right(TM) solution. :)

Daniel


From evaamo at loquesea.com  Sat Sep  2 15:36:17 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Internal Server Error- win32 ver
Message-ID: <000401c01515$10ee19b0$41dea8c0@wormhole>

Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E



From arhiv at freemail.org.mk  Sat Sep  2 22:41:00 2000
From: arhiv at freemail.org.mk (damjan)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Just a hint!
Message-ID: <Pine.LNX.4.21.0009022236530.345-100000@localhost.localdomain>

When you test if mod_python is working on your system DON'T make a
script named "test.py", because python already has a package named
"test". This may seem obvious and stupid, but I lost hours trying to
figure it out why mod_python is not working.

just my $0.02

-- 
damjan




From evaamo at loquesea.com  Sat Sep  2 18:13:20 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Internal Server Error- win32 ver
In-Reply-To: <000401c01515$10ee19b0$41dea8c0@wormhole>
Message-ID: <000101c0152b$015fb380$41dea8c0@wormhole>

Hey all,
I just got it working...I had unzipped the tarball
and the files landed where they shouldn't.
It didnt matter much to me anyway because I thought the dll
would suffice...wrong assumption tho'.
Thank you all...
-E



-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Enrique Vaamonde
Sent: Saturday, September 02, 2000 3:36 PM
To: mod_python@modpython.org
Subject: [mod_python] Internal Server Error- win32 ver


Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From walter at livinglogic.de  Mon Sep  4 11:55:19 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Doc Error: axps <-> apxs
Message-ID: <200009041155190953.0041FE68@mail.tmt.de>

Hello all!

There is a typo in the installation documentation 
(doc/installation.html):
The Apache extension tool is called apxs and *not* axps!
Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ?
www.livinglogic.de


From grisha at ispol.com  Tue Sep  5 09:13:03 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] 2.5 is out
Message-ID: <Pine.LNX.4.21.0009050903140.22535-100000@saturn.ispol.com>

Hello - 

You can now download the 2.5 version release. I will follow up on
comp.lang.python and on freshmeat about this once we have the Windows
version working and the RH RPM.

New in this release:

* PythonEnablePdb directive. Allows running handlers through the Python
  debugger.

* Dynamic handler registration (req.add_handler()). Allows additional
  handlers to be added dynamically.

* Table object now supports multiple keys via the add() method.

* req.read() function now returns all the data there is and obeys by the
  Apache Timout directive (as it should).

* New handler PythonInitHandler.

* New PythonInterpPerServer directive. This adds another sub-interpreter
  policy - a sub intepreter per virtual server.

* req.register_cleanup() and PythonCleanupHandler directives. Useful to
  make sure that all files and database connections are closed properly.

* many bugs fixed. (but perhaps many new introduced!)

Grisha



From arhiv at freemail.org.mk  Thu Sep  7 15:59:53 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Several questions
Message-ID: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>

Hi, I don't have that much experience with mod_python, and have some
questions:

What should I do if I want a persistent python object? Can I make a
persistent object to be shared between different apache processes (or
not until Apache 2.0).

Or am I supposed to do this by using a database? Which database would
have low latency, low memory footprint, low CPU usage, etc.. suitable
for object store? MySQL?



-- 
Thanks,

damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Thu Sep  7 13:58:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>

On Thu, 7 Sep 2000, Damjan wrote:

> Hi, I don't have that much experience with mod_python, and have some
> questions:
> 
> What should I do if I want a persistent python object? Can I make a
> persistent object to be shared between different apache processes (or
> not until Apache 2.0).

No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
only 2.0 running in multthreaded mode would allow something like this.

> Or am I supposed to do this by using a database? Which database would
> have low latency, low memory footprint, low CPU usage, etc.. suitable
> for object store? MySQL?

I don't know how easy it is to store actual Python objects in a database -
I suppose you could is cPickle or something, but if you just want to store
information (i.e. text or numbers as opposed to objects) - MySQL is very
very fast.

Grisha


From arhiv at freemail.org.mk  Thu Sep  7 22:05:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0009072159370.449-100000@localhost.localdomain>

> > What should I do if I want a persistent python object? Can I make a
> > persistent object to be shared between different apache processes (or
> > not until Apache 2.0).
> 
> No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
> only 2.0 running in multthreaded mode would allow something like this.

As I understand, Apache 2.0 will have support for shared memory, thus
allowing multiple child processes to share information (and the modules
could use this).
 
> > Or am I supposed to do this by using a database? Which database would
> > have low latency, low memory footprint, low CPU usage, etc.. suitable
> > for object store? MySQL?
> 
> I don't know how easy it is to store actual Python objects in a database -
> I suppose you could is cPickle or something, but if you just want to store
> information (i.e. text or numbers as opposed to objects) - MySQL is very
> very fast.

Yes, my idea was to cPickle the objects, but I have a feeling that an
SQL database might be just to bloat.

-- 
damjan

               I believe the technical term is "Oops!"


From seant at alum.mit.edu  Thu Sep  7 19:04:17 2000
From: seant at alum.mit.edu (Sean True)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Another authentication issue? Or am I missing something?
Message-ID: <MJEHLHJKGINLONDMMKNECEKHCGAA.seant@alum.mit.edu>

I've been having trouble getting PythonAuthenHandler-s to work properly. On
my Microsoft IE 5.5 browser,
the password dialog was not popping up. After some digging (Writing Apache
Modules in Perl and C is-your-friend), I found on page 284 the
reccomendation that one call req.note_basic_auth-failure, a perl method, to
force the WWW-Authenticate field in the HTTP headers to be set. This will
cause the browser to pop a password dialog.

Since that method is not exposed in Python (wouldn't Swig make this a lot
easier?), I added the following code to mod_python.c
and things worked much better, first try:

	    /* SDT If an AuthenHandler and we failed, note failure */
	    if (strcmp(handler, "PythonAuthenHandler") == 0) {
	      if ((result == HTTP_UNAUTHORIZED)){
		ap_note_basic_auth_failure(req);
	      }
	    /* Original code continues */
	    /* authen handlers need one more thing
	     * if authentication failed and this handler is not
	     * authoritative, let the others handle it
	     */
	      if (strcmp(handler, "PythonAuthenHandler") == 0) {
		if ((result == HTTP_UNAUTHORIZED) &&
		    (! conf->authoritative)) {
		  result = DECLINED;


Any comments? Other than the obvious proper factoring of the if expression
...

-- Sean
-------
Sean True
Webreply, Inc.


From rsalz at caveosystems.com  Fri Sep  8 15:00:36 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
Message-ID: <39B93754.989D4451@caveosystems.com>

What's the best way to create data in one handler (e.g., Authen) and
make it available to another?  Create a global? Stringify and use the
notes attr?

tnx.

From grisha at ispol.com  Fri Sep  8 16:47:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B93754.989D4451@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>

I think req->notes is the best for now. I'll think about some more
elegant way for future versions. A global is not so good because you may
accidently pass it to a different request alltogether, whereas notes is
guaranteed to get cleaned between requests.

Grisha


On Fri, 8 Sep 2000, Rich Salz wrote:

> What's the best way to create data in one handler (e.g., Authen) and
> make it available to another?  Create a global? Stringify and use the
> notes attr?
> 
> tnx.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From rsalz at caveosystems.com  Fri Sep  8 22:41:27 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>
Message-ID: <39B9A357.7536A46@caveosystems.com>

The problem with notes, of course, is that stringifying is too limiting.

Here's a suggestion.  Add a new method:
	req.get_state()
that returns a dictionary associated with this request, or None.
	req.create_state()
creates the dictionary.

The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
cleaned up
until the request is done.  How to attach it to the request_rec object? 
Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
hack.

Hope this helps.

Gregory Trubetskoy wrote:
> 
> I think req->notes is the best for now. I'll think about some more
> elegant way for future versions. A global is not so good because you may
> accidently pass it to a different request alltogether, whereas notes is
> guaranteed to get cleaned between requests.
> 
> Grisha
> 
> On Fri, 8 Sep 2000, Rich Salz wrote:
> 
> > What's the best way to create data in one handler (e.g., Authen) and
> > make it available to another?  Create a global? Stringify and use the
> > notes attr?
> >
> > tnx.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From peter at wl.vg  Mon Sep 11 01:28:36 2000
From: peter at wl.vg (peter@wl.vg)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] code question
Message-ID: <39BC6D84.A78F3692@wl.vg>

I am just learning Python and am trying to learn how to use it for
online applications.  Sorry for my ignorance, but I usually develop in
perl.  I can't find documentation that describes how to do this.  I have
pieced this together, but it doesn't work.

from mod_python import apache
import cgi


def handler(req):


	len = int(req.headers_in["content-length"])
	form_data = cgi.parse_qs(req.read(len))

	req.send_http_header()
	req.write("This is from the form: "+form_data['name']+"!")
	return apache.OK

-- 
Peter Halliday
Online Application Developer
Whetstone Logic, Inc.       http://www.whetstonelogic.com
icq#75769411           AIM screen name: hoaggelos

From miguel at yorku.ca  Mon Sep 11 07:55:33 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] code question
In-Reply-To: <39BC6D84.A78F3692@wl.vg>
References: <39BC6D84.A78F3692@wl.vg>
Message-ID: <20000911075533X.miguel@yorku.ca>

On Mon, 11 Sep 2000 01:28:36 -0400, peter@wl.vg wrote:
> I am just learning Python and am trying to learn how to use it for
> online applications.  Sorry for my ignorance, but I usually develop in
> perl.  I can't find documentation that describes how to do this.  I have
> pieced this together, but it doesn't work.
> 
> from mod_python import apache
> import cgi
> 
> 
> def handler(req):
> 
> 
> 	len = int(req.headers_in["content-length"])
> 	form_data = cgi.parse_qs(req.read(len))
> 
> 	req.send_http_header()
> 	req.write("This is from the form: "+form_data['name']+"!")
> 	return apache.OK
> 

Here's snippet of some test code I've used...

import cgi
from mod_python import apache

def handler(req):
    form = {}
    req.content_type = "text/plain"
    req.send_http_header()
    if req.headers_in.has_key("content-length"):
        len = int(req.headers_in["content-length"])
        if len > 0:
            data = req.read(len)
            form = cgi.parse_qs(data)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    else:
        if (req.args):
            form = cgi.parse_qs(req.args)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    return apache.OK

Hope it helps...

							Miguel

C. Miguel Marques, York University, Computing & Communications Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From grisha at ispol.com  Mon Sep 11 08:16:37 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B9A357.7536A46@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>

The problem with that is subinterpreters. 

A single request can go through several subinterpreters, and if you end up
with a dictionary created in one, but it has members created in another,
you run a risk of some weird errors.

If you stringify, then you can pass data across handlers as well as across
subinterpreters with no ill sideffects.

What I'd like to know is - how likely really is it that someone would be
passing anything more complex than a couple of flags between handlers? (I
can't think of a practical need for it, but then I haven't thought hard
enough... )

Grisha

On Fri, 8 Sep 2000, Rich Salz wrote:

> The problem with notes, of course, is that stringifying is too limiting.
> 
> Here's a suggestion.  Add a new method:
> 	req.get_state()
> that returns a dictionary associated with this request, or None.
> 	req.create_state()
> creates the dictionary.
> 
> The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
> cleaned up
> until the request is done.  How to attach it to the request_rec object? 
> Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
> hack.
> 
> Hope this helps.
> 
> Gregory Trubetskoy wrote:
> > 
> > I think req->notes is the best for now. I'll think about some more
> > elegant way for future versions. A global is not so good because you may
> > accidently pass it to a different request alltogether, whereas notes is
> > guaranteed to get cleaned between requests.
> > 
> > Grisha
> > 
> > On Fri, 8 Sep 2000, Rich Salz wrote:
> > 
> > > What's the best way to create data in one handler (e.g., Authen) and
> > > make it available to another?  Create a global? Stringify and use the
> > > notes attr?
> > >
> > > tnx.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> 


From rsalz at caveosystems.com  Mon Sep 11 09:39:22 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>
Message-ID: <39BCE08A.4758A8DC@caveosystems.com>

> What I'd like to know is - how likely really is it that someone would be
> passing anything more complex than a couple of flags between handlers?

Well, we need it. :)

All sorts of authen state, for example: client certificate, database
cursor for their account, etc.

Yes, we could stringify everything and put it in the request table, but
that's too inefficient (and sometimes not feasible or possible).  Should
I really have to call "pickle" every time I want to keep state within a
single request?

I don't fully understand how mod_python does sub-interpreters; I'll have
to reread the docs.  It never occured to me that there could/would be
different interps for each handler.  I suggest that the docs make it
more clear that the handlers are "stateless".

For us, the cleanest thing is one interp/request, with no state kept
across requests.  That seems most like the "classic" apache processing
model.
	/r$

From jeremy at beopen.com  Mon Sep 11 14:14:46 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] two installation issues w/ Python 2.0b1
Message-ID: <14781.8470.692645.381473@bitdiddle.concentric.net>

I installed mod_python for the first time this morning.  I'm just
learning how to use it.  I ran into a couple of configuration issues,
because I am using Python 2.0b1 on my system.

Issue #1 is that mod_python.c makes explicit reference to a Python
executable named python1.5.  This grabs an old version of Python on my
system and compilation fails because it can't find an include file.
If I replace "python1.5" with "python," it all works fine under Python
2.0.

-------------- next part --------------
*** src/modules/extra/mod_python.c	Mon Sep 11 13:01:20 2000
--- ../mod_python-2.0/src/mod_python.c	Mon May 22 08:14:39 2000
***************
*** 2526,2533 ****
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
--- 2526,2533 ----
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python1.5 -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python1.5 -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
-------------- next part --------------

Issue #2: The installation of modules in site-packages is
significantly easier under Python 2.0, because you can count on
distutils being installed.  Instead of using compileall.py, I wrote a
simple setup.py script that I would recommend for inclusion in the
next release.

-------------- next part --------------
#!/usr/bin/env python

from distutils.core import setup

setup(name = "mod_python",
      version = "2.0",
      author = "Gregory Trubetskoy",
      author_email = "grisha@ispol.com",
      packages = ["mod_python"],
      package_dir = {'': 'lib/python'},
      )
-------------- next part --------------

I also had a problem running the mptest.py script described in the
documentation; so I'm reporting it as recommended by the docs.  I
don't know if the problem results from my use of Python 2.0 or being
confused about how to configure things or something else entirely.

If I run the generic mod_python install, I get an error when I tried
to load http://localhost:8080/test/mptest.py.

    ERROR mod_python: "PythonHandler mptest"

    Traceback (most recent call last):

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 103, in Dispatch 
        module = import_module(module_name, req)

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 246, in import_module 
        exec "import " + module_name

      File "<string>", line 1, in ?

    ImportError: No module named mptest

The problem, near as I can tell, is that the mod_python.apache inserts
"." at the head of sys.path -- but the current working directory is
"/".  There's no way "." would work unless apache or mod_python
explicitly changed the cwd to the directory that contains mptest.py.

So I changed the relevant lines in apache.py to do that:

    # unless pythonpath is set explicitely
    if pythonpath is not None:
        sys.path = eval(pythonpath)
    else:
        dir, file = os.path.split(req.filename)
        sys.path.insert(0, dir)
##        # add '.' to sys.path 
##        if '.' not in sys.path:
##            sys.path[:0] = ['.']

Now it works.  The test script prints "Hello World!"

Any idea what went wrong?  Have I done something naive in my
configuration of Apache or mod_python?  What component is responsible
for making the chdir call?

-- Jeremy Hylton <http://www.python.org/~jeremy/>
From grisha at ispol.com  Mon Sep 11 14:37:25 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BCE08A.4758A8DC@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>

On Mon, 11 Sep 2000, Rich Salz wrote:

> I don't fully understand how mod_python does sub-interpreters; I'll have
> to reread the docs.

The things you should read are:

The top of
http://www.modpython.org/live/mod_python-2.5/doc/pythonapi.html

as well as
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpreter
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerDirectory
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerServer

> It never occured to me that there could/would be different interps for
> each handler.

This would happen for example if authentication is handled by an
application entirely different from the one creating content. If your
PyhtonAuthenHandler is in the httpd.conf file and the app is driven by a
PythonHandler in an .htaccess file, you'd have the same request, but
different handlers would have different suninterpreters.

> I suggest that the docs make it more clear that the handlers are
> "stateless".

...or make ways to retain state... :-)

Here is a suggestion - if I provided a way to store a pointer to a Python
object in notes - would that solve your problem? You create the object,
then call some function that returns a string that you can store in
notes. Then you can call another function that you pass that string
and it will return the Python object. That way mod_python does not need to
concern itself with the context in which the object is used, and you can
pass the object between handlers.

> For us, the cleanest thing is one interp/request, with no state kept
> across requests.  

In most cases there would be one interp per request, or you can ensure it
by using the PythonInterpreter directive. For example, sticking something
like "PythonInterpreter MyOnlyInterpreter" into httpd.conf would make the
whole server run under one interpreter.

> That seems most like the "classic" apache processing model.

Apache was designed with multiple users and multiple applications in mind.
That's why it supports .htaccess files. Mod_python's subinterpreters
extend that notion. You can have two different application with clashing
module names run on the same server with no problems because they could be
run in different subinterpreters. Or you can have two instances of the
same application run in separate subinterpreters. Try that with mod_perl.


Grisha



From rsalz at caveosystems.com  Tue Sep 12 10:49:18 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>
Message-ID: <39BE426E.153BC5C5@caveosystems.com>

> Here is a suggestion - if I provided a way to store a pointer to a Python
> object in notes - would that solve your problem? You create the object,
> then call some function that returns a string that you can store in
> notes.

Yes.  That's what I was thinking of in my first note (the "%p" being the
ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
what the inferences are for referencing counting -- will I explicitly
call "del" on what I get back?

(Wouldn't it have been nice if Py_INCREF returned its input param? :)

Is the request_rec notes field mapped to a python list?  Could/should it
be?

> Try that with mod_perl.

:)  First I have to understand it.

From grisha at ispol.com  Tue Sep 12 11:46:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121139291.28608-100000@saturn.ispol.com>

Yes, reference counting will be one problem with this.... I think a better
alternative would be to do it the way you suggested, but there would be
one dictionary per interpreter. So you won't be able to pass objects
between interpreters, *and* you don't have to worry about reference
counting.

On Tue, 12 Sep 2000, Rich Salz wrote:

> > Here is a suggestion - if I provided a way to store a pointer to a Python
> > object in notes - would that solve your problem? You create the object,
> > then call some function that returns a string that you can store in
> > notes.
> 
> Yes.  That's what I was thinking of in my first note (the "%p" being the
> ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
> what the inferences are for referencing counting -- will I explicitly
> call "del" on what I get back?
> 
> (Wouldn't it have been nice if Py_INCREF returned its input param? :)
> 
> Is the request_rec notes field mapped to a python list?  Could/should it
> be?
> 
> > Try that with mod_perl.
> 
> :)  First I have to understand it.
> 


From grisha at ispol.com  Tue Sep 12 11:48:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121146370.28608-100000@saturn.ispol.com>

On Tue, 12 Sep 2000, Rich Salz wrote:

> Is the request_rec notes field mapped to a python list?  Could/should it
> be?

req.notes is an mptable object. It's a Python mapping to an Apache
table. Apache tables are sort of like dictionaries, except they work only
with strings. The nice thing about them is that Apache manages the memory.

Grisha


From miguel at yorku.ca  Tue Sep 12 17:40:35 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:52:06 2004
Subject: [mod_python] Python 1.6...
Message-ID: <20000912174035B.miguel@yorku.ca>

Hi

Has anyone gotten 2.5 to work with Python 1.6?
TIA

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From jeremy at beopen.com  Wed Sep 13 08:01:07 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Python 1.6...
In-Reply-To: <20000912174035B.miguel@yorku.ca>
References: <20000912174035B.miguel@yorku.ca>
Message-ID: <14783.27779.744392.301326@bitdiddle.concentric.net>

I have gotten it to work with Python 2.0b1.  

Jeremy

PS I don't think there's much point to worrying about 1.6.

From walter at livinglogic.de  Thu Sep 14 19:06:04 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] mod_python 2.5 installation problems
Message-ID: <200009141906040375.00FD0EC6@mail.tmt.de>

Hello all!

I'm having trouble installing mod_python 2.5.
Starting apache gives me the following:

> /usr/sbin/httpd -X
Syntax error on line 20 of /usr/local/etc/httpd/httpd.conf:
Cannot load /usr/lib/apache/mod_python.so into server: /usr/lib/apache/mod_python.so: undefined symbol: openpty

The system is:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

Line 20 of /usr/local/etc/httpd/httpd.conf is:
	LoadModule python_module /usr/lib/apache/mod_python.so

Any help would be appreciated!

Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ? www.livinglogic.de


From whitaker at isharp.com  Wed Sep 20 13:45:41 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
Message-ID: <39C921F5.E912296F@isharp.com>

Hello all,

I have used this as my guide:
"http://www.modpython.org/live/mod_python-2.5/doc/installation.html"

My host o/s: SunOS 2.7 Generic_106542-04 i86pc

I statically linked mod_python into my apache 1.3.9 httpd
and moved it into place, then restarted the daemon.  Telnet
to port 80 shows:

Server: Apache/1.3.9 (Unix) mod_python/2.5 Python/1.5.2

I followed the instructions in bullet points 3-7 in section "3. Testing"
in installation.html, as my reading of points 1-2 indicates those
steps apply to the DSO option only.

I then created a file "mptest.py" as indicated in the instructions,
(bullet point 6) mode 755 in /usr/local/apache/cgi-bin/test, 
which is world readable (httpd runs as user "http").

My first .htaccess in the same directory contained the following,
as per the instructions:

AddHandler python-program .py
PythonHandler mptest
PythonDebug

I tried to call mptest.py via CGI, with this error_log output (attn
Gregory):

[Wed Sep 20 12:49:52 2000] [alert]
/usr/local/apache/cgi-bin/test/.htaccess: 
PythonDebug must be On or Off

...after which I modified .htaccess as follows ("On" switch):

AddHandler python-program .py
PythonHandler mptest
PythonDebug On

Trying again, I get the following error_log output:

make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Wed Sep 20 13:10:24 2000] [error] python_handler: make_obcallback
returned no obCallBack!

My httpd.conf contains the following:

<Directory "/usr/local/apache/cgi-bin">
    AllowOverride All
    Options ExecCGI
    Order allow,deny
    Allow from all
</Directory>

Insight, anyone?  I'm not sure if the contents of these archives
contain insight relevant to my problem:

"http://www.modpython.org/pipermail/mod_python/2000-June/000091.html"
"http://www.modpython.org/pipermail/mod_python/2000-June/000092.html"

Any help would be greatly appreciated,
Russell

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From grisha at ispol.com  Wed Sep 20 18:11:01 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
In-Reply-To: <39C921F5.E912296F@isharp.com>
Message-ID: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>


On Wed, 20 Sep 2000, Russell Whitaker wrote:

> [Wed Sep 20 12:49:52 2000] [alert]
> /usr/local/apache/cgi-bin/test/.htaccess: 
> PythonDebug must be On or Off

noted

> <Directory "/usr/local/apache/cgi-bin">
>     AllowOverride All
>     Options ExecCGI

You do not need CGI since mod_python has nothing to do with it whatsoever.

>     Order allow,deny
>     Allow from all
> </Directory>
> 
> Insight, anyone?  I'm not sure if the contents of these archives
> contain insight relevant to my problem:

I have a feeling it is a permissions problem with the mod_python package
that you were supposed to stick in yout python path. Check which userid
Apache runs as and if that user can read those files.

Grisha


From whitaker at isharp.com  Wed Sep 20 15:43:37 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
References: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>
Message-ID: <39C93D99.A14997FE@isharp.com>

Hello Gregory!

Gregory Trubetskoy wrote:
> 
> On Wed, 20 Sep 2000, Russell Whitaker wrote:
> 
> > [Wed Sep 20 12:49:52 2000] [alert]
> > /usr/local/apache/cgi-bin/test/.htaccess:
> > PythonDebug must be On or Off
> 
> noted

Cool.

> 
> > <Directory "/usr/local/apache/cgi-bin">
> >     AllowOverride All
> >     Options ExecCGI
> 
> You do not need CGI since mod_python has nothing to do with it whatsoever.

Ah, that ExecCGI applies to the entire $SERVERROOT/cgi-bin/ for the
Apache
server.  It was there in httpd.conf for all the other guys in my shop
who 
_don't_ yet do Python.  ;-)

It shouldn't have any adverse affect on the workings of mod_python, as
you point out.

> 
> >     Order allow,deny
> >     Allow from all
> > </Directory>
> >
> > Insight, anyone?  I'm not sure if the contents of these archives
> > contain insight relevant to my problem:
> 
> I have a feeling it is a permissions problem with the mod_python package
> that you were supposed to stick in yout python path. Check which userid
> Apache runs as and if that user can read those files.

Checked permissions, everything in in PATHONPATH is world readable, no
problem there.  However, you gave me the hint I needed.  See, this
is where mod_python installed:

/usr/local/lib/python1.5/site-packages/mod_python-2.5/lib/python/mod_python

...because (and I don't know why) I skipped (whoops) bullet point 2 in 
section 1.) "Installing Python Libraries".  Symlinking that directory
as 
/usr/local/lib/python1.5/site-packages/mod_python fixed the problem.

Hello World!

Thanks,
Russell

> 
> Grisha

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From rutt at chezrutt.com  Thu Sep 21 07:43:56 2000
From: rutt at chezrutt.com (John Ruttenberg)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Loading mod_python.so into apache-1.3.12 on redhat 6.2 segfaults
Message-ID: <200009211143.HAA16011@mojo.chezrutt.com>

I've using both the 2.4 rpm due to Mads Kiilerich and compiling 2.5 with apxs
and the results are the same -- 'httpd -X' segfaults.  The minimum change to
httpd.conf for this to happen is to add:

    LoadModule python_module modules/mod_python.so

before any of the other LoadModule lines.  (My httpd.conf is available from
http://chezrutt.com/~rutt/httpd.conf if you want to take a look.)

I've also tried statically compiling apache according to the instructions that
come with it, but then httpd complains about the first LoadModule statement:

    [root@mojo src]# httpd -X
    Syntax error on line 208 of /etc/httpd/conf/httpd.conf:
    Invalid command 'LoadModule', perhaps mis-spelled or defined by a module not in\
    cluded in the server configuration
    [root@mojo src]#

Perhaps I don't know how to configure it to allow loadable modules?

From okamoto at xfiles.intercon.hp.com  Wed Sep 27 15:07:25 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
Message-ID: <200009272207.PAA13041@xfiles.intercon.hp.com>

Hello,

I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
mod_python just fine, and have configured Apache and created an mptest.py
as the Installation documentation says.  However, when I try to access
it, I get the following error:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
    in Dispatch module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
    in import_module module = __import__(module_name)

ImportError: No module named mptest

I've checked the ML archives, and saw a message by Jeremy Hylton that was
almost exactly the problem I've encountered, but he was using mod_python
2.0, not 2.5.

Can someone give me some additional suggestions of what to try next?

Thanks,
Jeff

From benno at sesgroup.net  Thu Sep 28 10:51:18 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Wed, Sep 27, 2000 at 03:07:25PM -0700
References: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <20000928105118.A13402@bob.sesgroup.net>

Hi Jeff!

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?


I ran into this same problem, it means that mptest is not in the path correctly.

My httpd.conf has this in it:



<Directory /var/www>
AddHandler python-program .py
PythonHandler mptest
PythonDebug on
</Directory>


The trick is that whatever is specified as the directory will get added to the
sys.path when trying to find the module.

If your apache root is somewhere else like (/home/www or something) then add that
instead.


Cheers,

Ben


(oh and as my first post to the list I will add my congrats and thanks to the 
author for such a great program!)

From grisha at ispol.com  Thu Sep 28 09:08:58 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not
 playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <Pine.LNX.4.21.0009280907400.9717-100000@saturn.ispol.com>

Where is your PythonHandler directive? It needs to be either in an
.htaccess file or inside <Directory> tags matching the directory where
mptest.py resides, or you need to have a PythonPath directive with the
directory where mptest.py is.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?
> 
> Thanks,
> Jeff
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at yahoo.com  Thu Sep 28 06:47:22 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache request handler examples
Message-ID: <20000928134722.16597.qmail@web2203.mail.yahoo.com>

Hi

I have written some cgi apps based on mod_python and
am now having a go writing my own handler.  I seem to
be running into various difficulties (like how to
convince Netscrape that this is html and not
text/plain), most of which I have been able to sort
out but I am wondering whether there are there any
code examples/docs out there that could make this
easier.  Surely I am not the first to have had these
problems?

So far I have used the mod_python docs, the apache API
(which is not too informative) and the PERL docs on
the apache module (which are quite helpful).  

Have I missed a useful resource somewhere?  Is there a
site where I could start adding to a FAQ on the
subject?

Regards
Alexis

__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From grisha at ispol.com  Thu Sep 28 10:34:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache request handler examples
In-Reply-To: <20000928134722.16597.qmail@web2203.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0009281032510.9753-100000@saturn.ispol.com>

There is no resource like that that I know of, but if anyone wants to
contribute, they are more than welcome.

There is an O'Reilly book - "Writing Apache Modules with Perl and C". It
is, of course, C and Perl specific, but I think it's a great book to read
if you want to understand mod_python better.

Grisha


On Thu, 28 Sep 2000, Alexis Iglauer wrote:

> Hi
> 
> I have written some cgi apps based on mod_python and
> am now having a go writing my own handler.  I seem to
> be running into various difficulties (like how to
> convince Netscrape that this is html and not
> text/plain), most of which I have been able to sort
> out but I am wondering whether there are there any
> code examples/docs out there that could make this
> easier.  Surely I am not the first to have had these
> problems?
> 
> So far I have used the mod_python docs, the apache API
> (which is not too informative) and the PERL docs on
> the apache module (which are quite helpful).  
> 
> Have I missed a useful resource somewhere?  Is there a
> site where I could start adding to a FAQ on the
> subject?
> 
> Regards
> Alexis
> 
> __________________________________________________
> Do You Yahoo!?
> Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
> http://photos.yahoo.com/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From okamoto at xfiles.intercon.hp.com  Thu Sep 28 10:15:51 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000928105118.A13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 28, 100 10:51 am
Message-ID: <200009281715.KAA15395@xfiles.intercon.hp.com>

> My httpd.conf has this in it:
> 
> <Directory /var/www>
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug on
> </Directory>

The relevant section for me is:

<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Directory /opt/apache>
    AddHandler python-program .py
    PythonHandler mptest
    PythonDebug On
</Directory>

> The trick is that whatever is specified as the directory will get added to the
> sys.path when trying to find the module.
> 
> If your apache root is somewhere else like (/home/www or something) then add that
> instead.

Sadly, it's still not working.  It's quite sad that the install.html file
doesn't mention putting it inside a Directory directive and that there's
in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Sigh.

Jeff

From benno at sesgroup.net  Fri Sep 29 10:42:34 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009281715.KAA15395@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Thu, Sep 28, 2000 at 10:15:51AM -0700
References: <20000928105118.A13402@bob.sesgroup.net> <200009281715.KAA15395@xfiles.intercon.hp.com>
Message-ID: <20000929104234.F13402@bob.sesgroup.net>

On Thu, 28 Sep 2000, Jeff Okamoto wrote:

> > My httpd.conf has this in it:
> > 
> > <Directory /var/www>
> > AddHandler python-program .py
> > PythonHandler mptest
> > PythonDebug on
> > </Directory>
> 
> The relevant section for me is:
> 
> <Directory />
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Directory /opt/apache>
>     AddHandler python-program .py
>     PythonHandler mptest
>     PythonDebug On
> </Directory>

That seem correct to me.
 
> > The trick is that whatever is specified as the directory will get added to the
> > sys.path when trying to find the module.
> > 
> > If your apache root is somewhere else like (/home/www or something) then add that
> > instead.
 
> Sadly, it's still not working. 

Is it the same error message? What is in error.log. One thing that you 
might want to try is putting mptest.py into the same directory as apache.py,
this ensures that it is going to be in the correct path. That might help
narrow down the problem. Also you probably need to make sure that the file has
read and execute permission for the apache user.

> It's quite sad that the install.html file
> doesn't mention putting it inside a Directory directive and that there's
> in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Yeah well shit happens, guessing it is probably case of the code gaining features
faster than the docs can keep up with (though I'm just a new user, so I am merely
guessing).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Fri Sep 29 10:50:56 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache Segfault
Message-ID: <39D457F0.8DF53FC1@LivingLogic.de>

Hi everybody,

I'm having some severe trouble installing mod_python 2.5 with the
following environment:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

I compiled mod_python.so with the following command:

> apxs -I /usr/local/include/python2.0/ -c mod_python.c \ 
> /usr/local/src/Python-2.0b1/libpython2.0.a -lpthread -lutil -lm -lreadline -lncurses

The first LoadModule directive in my httpd.conf file is 

> LoadModule python_module /usr/local/src/mod_python-2.5/src/mod_python.so

Starting apache with the following command:

> httpd -t -f /etc/httpd/httpd.conf -D MODULES 

gives me:

> Syntax OK
> Segmentation fault   

Here is the stack backtrace, when I let the whole thing run in the
debugger:

> (gdb) file /usr/sbin/httpd
> Reading symbols from /usr/sbin/httpd...(no debugging symbols found)...done.
> (gdb) set args -t -f /etc/httpd/httpd.conf -D MODULES
> (gdb) run
> Starting program: /usr/sbin/httpd -t -f /etc/httpd/httpd.conf -D MODULES
> Syntax OK
> (no debugging symbols found)...Cannot access memory at address 0x404db434.
> (gdb) bt
> #0  0x4000ab11 in _dl_debug_state () at dl-debug.c:47
> #1  0x401834c1 in _dl_close () at dl-close.c:199
> #2  0x400b23eb in dlclose_doit (handle=0x80a76a8) at dlclose.c:26
> #3  0x4000a801 in _dl_catch_error () at dl-error.c:117
> #4  0x400b29c1 in _dlerror_run (operate=0x400b23d0 <dlclose_doit>, args=0x80a76a8)
>     at dlerror.c:125
> #5  0x400b2411 in dlclose () at dlclose.c:27
> #6  0x8069cb2 in ap_os_dso_unload ()
> #7  0x80502d9 in ap_get_server_built ()
> #8  0x8051d4b in ap_run_cleanup ()
> #9  0x80509cf in ap_clear_pool ()
> #10 0x8050a38 in ap_destroy_pool ()
> #11 0x80509a3 in ap_clear_pool ()
> #12 0x8050a38 in ap_destroy_pool ()
> #13 0x805ba18 in ap_exists_scoreboard_image ()
> #14 0x805e335 in main ()
> #15 0x400cea8e in __libc_start_main () at ../sysdeps/generic/libc-start.c:93    

Can anybody help me out or give any additional hints?

Thanks,

--- Matthias


------------------------------------------
  Matthias Bauer     -    LivingLogic AG
  Maximilianstr. 2   -    95444 Bayreuth
             www.livinglogic.de 
------------------------------------------

From okamoto at xfiles.intercon.hp.com  Fri Sep 29 12:49:46 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:52:07 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000929104234.F13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 29, 100 10:42 am
Message-ID: <200009291949.MAA06080@xfiles.intercon.hp.com>

> > <Directory />
> >     Options FollowSymLinks
> >     AllowOverride None
> > </Directory>
> > 
> > <Directory /opt/apache>
> >     AddHandler python-program .py
> >     PythonHandler mptest
> >     PythonDebug On
> > </Directory>

Some more info: if I change /opt/apache above to /test (and mptest.py is
in htdocs/test), then Apache returns the text of the file.

When it's /opt/apache, the browser returns:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)

ImportError: No module named mptest

and Apache's error log says:

[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: Traceback (most recent call last):
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: ImportError: No module named mptest

> One thing that you 
> might want to try is putting mptest.py into the same directory as apache.py,
> this ensures that it is going to be in the correct path. That might help
> narrow down the problem. Also you probably need to make sure that the file has
> read and execute permission for the apache user.

Tried all this, including setting execute permissions.  NFG.

Jeff

From Daniel.Plagge at tu-clausthal.de  Fri Sep  1 10:57:13 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] How can I easily terminate a apache task?
Message-ID: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>

Hello,

we have here a persistant database (Informix) connection for each apache 
task. One problem is that if the database goes down, the connection has
to be reinitiallized. I tried to achieve this by writing a wrapper class
around the informixdb class which reinitializes the connection if a
exception raises.

But this led to some strange errors, so I want to try another approach:
I want to alter "cgihandler" so that when a database exceptions raises
the task should be terminated. (This shouldn't happen very often, so
it's not a performance killer.)

So my question is: What is the preferred way to terminate a apache task?

Thank you,
Daniel


From L.A.Timochouk at ukc.ac.uk  Fri Sep  1 12:55:06 2000
From: L.A.Timochouk at ukc.ac.uk (Leonid Timochouk)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>

Hello Daniel,

The easiest thing to try would be to invoke sys.exit (...) from your
Python script -- my understanding is that the Python interpreter runs in
the same process as the Apache task which created it. This is certainly
true for a normal "handler"; I never tried a "cgi handler" but believe
that the mechanism should be the same.

If this does not work for any reason, try os._exit (...) instead. However,
there may be a problem if your Apache task is actually a thread rather
than an independent process (which OS are you using?) -- in that case you
may try thread.exit ().

These solutions (if any of them works) are not Apache-specific, and quite
"rude" in the sense that they terminate the Apache task without any
internal clean-up. So maybe someone else knows a better way?

Sincerely,
L.A. Timochouk


From grisha at ispol.com  Fri Sep  1 09:45:00 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com>

Apache provides an API for this - ap_child_terminate(). I'll see about
making it available to mod_python in the next release (which should happen
fairly soon).

Grisha

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 1 Sep 2000, Daniel Plagge wrote:

> Hello,
> 
> we have here a persistant database (Informix) connection for each apache 
> task. One problem is that if the database goes down, the connection has
> to be reinitiallized. I tried to achieve this by writing a wrapper class
> around the informixdb class which reinitializes the connection if a
> exception raises.
> 
> But this led to some strange errors, so I want to try another approach:
> I want to alter "cgihandler" so that when a database exceptions raises
> the task should be terminated. (This shouldn't happen very often, so
> it's not a performance killer.)
> 
> So my question is: What is the preferred way to terminate a apache task?
> 
> Thank you,
> Daniel
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From mhagger at alum.mit.edu  Fri Sep  1 17:30:54 2000
From: mhagger at alum.mit.edu (Michael Haggerty)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] ANNOUNCE: PyWX version 0.6
Message-ID: <14768.8206.590958.607388@freak.kaiserty.com>

[I hope people aren't offended that I post this announcement here.  I
figure that there is enough overlap that this might be interesting to
some mod_python subscribers.  Also there is some potential for
cross-pollination between our two projects. --MRH]

I am pleased to announce the release of PyWX version 0.6.  This is an
alpha release but is fairly stable and is being used in several
development environments.

PyWX can be retrieved from SourceForge,

        http://download.sourceforge.net/PyWX/PyWX-0.6.tar.gz

The PyWX homepage is

        http://pywx.idyll.org


What is PyWX?
-------------

PyWX is a Python module for AOLserver.

AOLserver is a free, open-source, enterprise-class, multi-threaded web
server whose performance on dynamic content is reputed to beat Apache.
It is used at many large web sites including AOL and ArsDigita.  It
includes an internal database API that allows persistent database
connections.

Python is a clean, object-oriented scripting language with excellent
support for complicated data structures and great libraries for web
programming.

PyWX embeds a Python interpreter into AOLserver, allowing threaded
execution of Python scripts--even CGI scripts--within the server
process.  It also allows the Python script to access almost all of
AOLserver's internal API via a C extension module.  PyWX supports many
other features, including

 + Full access to AOLserver's Tcl interpreter from Python, and vice versa.
 + Access to AOLserver's persistent database mechanism.
 + Optional compiled-script caching.
 + Threaded execution of CGI scripts within emulated CGI environment.
 + Cross-connection data-persistence.
 + An internal Webware adaptor.


What's new in version 0.6?
--------------------------

 + SWIG-assisted wrapping of AOLserver's C API functions.  Almost all
   of AOLserver's facilities are available to Python scripts, wrapped
   in an object-oriented fashion.
 + More of PyWX itself is written in Python.
 + Much-improved documentation.
 + Significant cleanup, bug fixes, and plugging of memory leaks.
 + Improved example scripts.

Version 0.6 is fairly stable and is being used in several development
environments, although there are still some problems under heavy
loads.  As a rough measure of the performance, PyWX can deliver a
trivial Python script at about 230 pages per second on a
single-processor Pentium 3/500MHz under Linux.

Please check out our home page at

        http://pywx.idyll.org

for more information on PyWX, including mailing lists, development
archives, and several example pages.  You may also be interested in:

        http://www.aolserver.com       -- AOLserver
        http://www.python.org          -- the Python programming language
        http://webware.sourceforge.net -- Webware toolkit

Yours,
Michael
--
Michael Haggerty
mhagger@alum.mit.edu


--
Michael Haggerty
mhagger@alum.mit.edu

From Daniel.Plagge at tu-clausthal.de  Sat Sep  2 09:29:09 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>; from L.A.Timochouk@ukc.ac.uk on Fre, Sep 01, 2000 at 12:55:06 +0100
References: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com> <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>
Message-ID: <20000902092909.A715@wintermute.esw-heim.tu-clausthal.de>

Hello Leonid and Gregory,

thank you for your answers. 
I tried sys.exit() and os._exit() and the latter worked.
But I'll wait for the next release, ap_child_terminate() seems
to be the right(TM) solution. :)

Daniel


From evaamo at loquesea.com  Sat Sep  2 15:36:17 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] Internal Server Error- win32 ver
Message-ID: <000401c01515$10ee19b0$41dea8c0@wormhole>

Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E



From arhiv at freemail.org.mk  Sat Sep  2 22:41:00 2000
From: arhiv at freemail.org.mk (damjan)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] Just a hint!
Message-ID: <Pine.LNX.4.21.0009022236530.345-100000@localhost.localdomain>

When you test if mod_python is working on your system DON'T make a
script named "test.py", because python already has a package named
"test". This may seem obvious and stupid, but I lost hours trying to
figure it out why mod_python is not working.

just my $0.02

-- 
damjan




From evaamo at loquesea.com  Sat Sep  2 18:13:20 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 21:58:37 2004
Subject: [mod_python] Internal Server Error- win32 ver
In-Reply-To: <000401c01515$10ee19b0$41dea8c0@wormhole>
Message-ID: <000101c0152b$015fb380$41dea8c0@wormhole>

Hey all,
I just got it working...I had unzipped the tarball
and the files landed where they shouldn't.
It didnt matter much to me anyway because I thought the dll
would suffice...wrong assumption tho'.
Thank you all...
-E



-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Enrique Vaamonde
Sent: Saturday, September 02, 2000 3:36 PM
To: mod_python@modpython.org
Subject: [mod_python] Internal Server Error- win32 ver


Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From walter at livinglogic.de  Mon Sep  4 11:55:19 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Doc Error: axps <-> apxs
Message-ID: <200009041155190953.0041FE68@mail.tmt.de>

Hello all!

There is a typo in the installation documentation 
(doc/installation.html):
The Apache extension tool is called apxs and *not* axps!
Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ?
www.livinglogic.de


From grisha at ispol.com  Tue Sep  5 09:13:03 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] 2.5 is out
Message-ID: <Pine.LNX.4.21.0009050903140.22535-100000@saturn.ispol.com>

Hello - 

You can now download the 2.5 version release. I will follow up on
comp.lang.python and on freshmeat about this once we have the Windows
version working and the RH RPM.

New in this release:

* PythonEnablePdb directive. Allows running handlers through the Python
  debugger.

* Dynamic handler registration (req.add_handler()). Allows additional
  handlers to be added dynamically.

* Table object now supports multiple keys via the add() method.

* req.read() function now returns all the data there is and obeys by the
  Apache Timout directive (as it should).

* New handler PythonInitHandler.

* New PythonInterpPerServer directive. This adds another sub-interpreter
  policy - a sub intepreter per virtual server.

* req.register_cleanup() and PythonCleanupHandler directives. Useful to
  make sure that all files and database connections are closed properly.

* many bugs fixed. (but perhaps many new introduced!)

Grisha



From arhiv at freemail.org.mk  Thu Sep  7 15:59:53 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Several questions
Message-ID: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>

Hi, I don't have that much experience with mod_python, and have some
questions:

What should I do if I want a persistent python object? Can I make a
persistent object to be shared between different apache processes (or
not until Apache 2.0).

Or am I supposed to do this by using a database? Which database would
have low latency, low memory footprint, low CPU usage, etc.. suitable
for object store? MySQL?



-- 
Thanks,

damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Thu Sep  7 13:58:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>

On Thu, 7 Sep 2000, Damjan wrote:

> Hi, I don't have that much experience with mod_python, and have some
> questions:
> 
> What should I do if I want a persistent python object? Can I make a
> persistent object to be shared between different apache processes (or
> not until Apache 2.0).

No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
only 2.0 running in multthreaded mode would allow something like this.

> Or am I supposed to do this by using a database? Which database would
> have low latency, low memory footprint, low CPU usage, etc.. suitable
> for object store? MySQL?

I don't know how easy it is to store actual Python objects in a database -
I suppose you could is cPickle or something, but if you just want to store
information (i.e. text or numbers as opposed to objects) - MySQL is very
very fast.

Grisha


From arhiv at freemail.org.mk  Thu Sep  7 22:05:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0009072159370.449-100000@localhost.localdomain>

> > What should I do if I want a persistent python object? Can I make a
> > persistent object to be shared between different apache processes (or
> > not until Apache 2.0).
> 
> No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
> only 2.0 running in multthreaded mode would allow something like this.

As I understand, Apache 2.0 will have support for shared memory, thus
allowing multiple child processes to share information (and the modules
could use this).
 
> > Or am I supposed to do this by using a database? Which database would
> > have low latency, low memory footprint, low CPU usage, etc.. suitable
> > for object store? MySQL?
> 
> I don't know how easy it is to store actual Python objects in a database -
> I suppose you could is cPickle or something, but if you just want to store
> information (i.e. text or numbers as opposed to objects) - MySQL is very
> very fast.

Yes, my idea was to cPickle the objects, but I have a feeling that an
SQL database might be just to bloat.

-- 
damjan

               I believe the technical term is "Oops!"


From seant at alum.mit.edu  Thu Sep  7 19:04:17 2000
From: seant at alum.mit.edu (Sean True)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Another authentication issue? Or am I missing something?
Message-ID: <MJEHLHJKGINLONDMMKNECEKHCGAA.seant@alum.mit.edu>

I've been having trouble getting PythonAuthenHandler-s to work properly. On
my Microsoft IE 5.5 browser,
the password dialog was not popping up. After some digging (Writing Apache
Modules in Perl and C is-your-friend), I found on page 284 the
reccomendation that one call req.note_basic_auth-failure, a perl method, to
force the WWW-Authenticate field in the HTTP headers to be set. This will
cause the browser to pop a password dialog.

Since that method is not exposed in Python (wouldn't Swig make this a lot
easier?), I added the following code to mod_python.c
and things worked much better, first try:

	    /* SDT If an AuthenHandler and we failed, note failure */
	    if (strcmp(handler, "PythonAuthenHandler") == 0) {
	      if ((result == HTTP_UNAUTHORIZED)){
		ap_note_basic_auth_failure(req);
	      }
	    /* Original code continues */
	    /* authen handlers need one more thing
	     * if authentication failed and this handler is not
	     * authoritative, let the others handle it
	     */
	      if (strcmp(handler, "PythonAuthenHandler") == 0) {
		if ((result == HTTP_UNAUTHORIZED) &&
		    (! conf->authoritative)) {
		  result = DECLINED;


Any comments? Other than the obvious proper factoring of the if expression
...

-- Sean
-------
Sean True
Webreply, Inc.


From rsalz at caveosystems.com  Fri Sep  8 15:00:36 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
Message-ID: <39B93754.989D4451@caveosystems.com>

What's the best way to create data in one handler (e.g., Authen) and
make it available to another?  Create a global? Stringify and use the
notes attr?

tnx.

From grisha at ispol.com  Fri Sep  8 16:47:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B93754.989D4451@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>

I think req->notes is the best for now. I'll think about some more
elegant way for future versions. A global is not so good because you may
accidently pass it to a different request alltogether, whereas notes is
guaranteed to get cleaned between requests.

Grisha


On Fri, 8 Sep 2000, Rich Salz wrote:

> What's the best way to create data in one handler (e.g., Authen) and
> make it available to another?  Create a global? Stringify and use the
> notes attr?
> 
> tnx.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From rsalz at caveosystems.com  Fri Sep  8 22:41:27 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>
Message-ID: <39B9A357.7536A46@caveosystems.com>

The problem with notes, of course, is that stringifying is too limiting.

Here's a suggestion.  Add a new method:
	req.get_state()
that returns a dictionary associated with this request, or None.
	req.create_state()
creates the dictionary.

The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
cleaned up
until the request is done.  How to attach it to the request_rec object? 
Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
hack.

Hope this helps.

Gregory Trubetskoy wrote:
> 
> I think req->notes is the best for now. I'll think about some more
> elegant way for future versions. A global is not so good because you may
> accidently pass it to a different request alltogether, whereas notes is
> guaranteed to get cleaned between requests.
> 
> Grisha
> 
> On Fri, 8 Sep 2000, Rich Salz wrote:
> 
> > What's the best way to create data in one handler (e.g., Authen) and
> > make it available to another?  Create a global? Stringify and use the
> > notes attr?
> >
> > tnx.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From peter at wl.vg  Mon Sep 11 01:28:36 2000
From: peter at wl.vg (peter@wl.vg)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] code question
Message-ID: <39BC6D84.A78F3692@wl.vg>

I am just learning Python and am trying to learn how to use it for
online applications.  Sorry for my ignorance, but I usually develop in
perl.  I can't find documentation that describes how to do this.  I have
pieced this together, but it doesn't work.

from mod_python import apache
import cgi


def handler(req):


	len = int(req.headers_in["content-length"])
	form_data = cgi.parse_qs(req.read(len))

	req.send_http_header()
	req.write("This is from the form: "+form_data['name']+"!")
	return apache.OK

-- 
Peter Halliday
Online Application Developer
Whetstone Logic, Inc.       http://www.whetstonelogic.com
icq#75769411           AIM screen name: hoaggelos

From miguel at yorku.ca  Mon Sep 11 07:55:33 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] code question
In-Reply-To: <39BC6D84.A78F3692@wl.vg>
References: <39BC6D84.A78F3692@wl.vg>
Message-ID: <20000911075533X.miguel@yorku.ca>

On Mon, 11 Sep 2000 01:28:36 -0400, peter@wl.vg wrote:
> I am just learning Python and am trying to learn how to use it for
> online applications.  Sorry for my ignorance, but I usually develop in
> perl.  I can't find documentation that describes how to do this.  I have
> pieced this together, but it doesn't work.
> 
> from mod_python import apache
> import cgi
> 
> 
> def handler(req):
> 
> 
> 	len = int(req.headers_in["content-length"])
> 	form_data = cgi.parse_qs(req.read(len))
> 
> 	req.send_http_header()
> 	req.write("This is from the form: "+form_data['name']+"!")
> 	return apache.OK
> 

Here's snippet of some test code I've used...

import cgi
from mod_python import apache

def handler(req):
    form = {}
    req.content_type = "text/plain"
    req.send_http_header()
    if req.headers_in.has_key("content-length"):
        len = int(req.headers_in["content-length"])
        if len > 0:
            data = req.read(len)
            form = cgi.parse_qs(data)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    else:
        if (req.args):
            form = cgi.parse_qs(req.args)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    return apache.OK

Hope it helps...

							Miguel

C. Miguel Marques, York University, Computing & Communications Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From grisha at ispol.com  Mon Sep 11 08:16:37 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B9A357.7536A46@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>

The problem with that is subinterpreters. 

A single request can go through several subinterpreters, and if you end up
with a dictionary created in one, but it has members created in another,
you run a risk of some weird errors.

If you stringify, then you can pass data across handlers as well as across
subinterpreters with no ill sideffects.

What I'd like to know is - how likely really is it that someone would be
passing anything more complex than a couple of flags between handlers? (I
can't think of a practical need for it, but then I haven't thought hard
enough... )

Grisha

On Fri, 8 Sep 2000, Rich Salz wrote:

> The problem with notes, of course, is that stringifying is too limiting.
> 
> Here's a suggestion.  Add a new method:
> 	req.get_state()
> that returns a dictionary associated with this request, or None.
> 	req.create_state()
> creates the dictionary.
> 
> The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
> cleaned up
> until the request is done.  How to attach it to the request_rec object? 
> Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
> hack.
> 
> Hope this helps.
> 
> Gregory Trubetskoy wrote:
> > 
> > I think req->notes is the best for now. I'll think about some more
> > elegant way for future versions. A global is not so good because you may
> > accidently pass it to a different request alltogether, whereas notes is
> > guaranteed to get cleaned between requests.
> > 
> > Grisha
> > 
> > On Fri, 8 Sep 2000, Rich Salz wrote:
> > 
> > > What's the best way to create data in one handler (e.g., Authen) and
> > > make it available to another?  Create a global? Stringify and use the
> > > notes attr?
> > >
> > > tnx.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> 


From rsalz at caveosystems.com  Mon Sep 11 09:39:22 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>
Message-ID: <39BCE08A.4758A8DC@caveosystems.com>

> What I'd like to know is - how likely really is it that someone would be
> passing anything more complex than a couple of flags between handlers?

Well, we need it. :)

All sorts of authen state, for example: client certificate, database
cursor for their account, etc.

Yes, we could stringify everything and put it in the request table, but
that's too inefficient (and sometimes not feasible or possible).  Should
I really have to call "pickle" every time I want to keep state within a
single request?

I don't fully understand how mod_python does sub-interpreters; I'll have
to reread the docs.  It never occured to me that there could/would be
different interps for each handler.  I suggest that the docs make it
more clear that the handlers are "stateless".

For us, the cleanest thing is one interp/request, with no state kept
across requests.  That seems most like the "classic" apache processing
model.
	/r$

From jeremy at beopen.com  Mon Sep 11 14:14:46 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] two installation issues w/ Python 2.0b1
Message-ID: <14781.8470.692645.381473@bitdiddle.concentric.net>

I installed mod_python for the first time this morning.  I'm just
learning how to use it.  I ran into a couple of configuration issues,
because I am using Python 2.0b1 on my system.

Issue #1 is that mod_python.c makes explicit reference to a Python
executable named python1.5.  This grabs an old version of Python on my
system and compilation fails because it can't find an include file.
If I replace "python1.5" with "python," it all works fine under Python
2.0.

-------------- next part --------------
*** src/modules/extra/mod_python.c	Mon Sep 11 13:01:20 2000
--- ../mod_python-2.0/src/mod_python.c	Mon May 22 08:14:39 2000
***************
*** 2526,2533 ****
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
--- 2526,2533 ----
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python1.5 -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python1.5 -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
-------------- next part --------------

Issue #2: The installation of modules in site-packages is
significantly easier under Python 2.0, because you can count on
distutils being installed.  Instead of using compileall.py, I wrote a
simple setup.py script that I would recommend for inclusion in the
next release.

-------------- next part --------------
#!/usr/bin/env python

from distutils.core import setup

setup(name = "mod_python",
      version = "2.0",
      author = "Gregory Trubetskoy",
      author_email = "grisha@ispol.com",
      packages = ["mod_python"],
      package_dir = {'': 'lib/python'},
      )
-------------- next part --------------

I also had a problem running the mptest.py script described in the
documentation; so I'm reporting it as recommended by the docs.  I
don't know if the problem results from my use of Python 2.0 or being
confused about how to configure things or something else entirely.

If I run the generic mod_python install, I get an error when I tried
to load http://localhost:8080/test/mptest.py.

    ERROR mod_python: "PythonHandler mptest"

    Traceback (most recent call last):

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 103, in Dispatch 
        module = import_module(module_name, req)

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 246, in import_module 
        exec "import " + module_name

      File "<string>", line 1, in ?

    ImportError: No module named mptest

The problem, near as I can tell, is that the mod_python.apache inserts
"." at the head of sys.path -- but the current working directory is
"/".  There's no way "." would work unless apache or mod_python
explicitly changed the cwd to the directory that contains mptest.py.

So I changed the relevant lines in apache.py to do that:

    # unless pythonpath is set explicitely
    if pythonpath is not None:
        sys.path = eval(pythonpath)
    else:
        dir, file = os.path.split(req.filename)
        sys.path.insert(0, dir)
##        # add '.' to sys.path 
##        if '.' not in sys.path:
##            sys.path[:0] = ['.']

Now it works.  The test script prints "Hello World!"

Any idea what went wrong?  Have I done something naive in my
configuration of Apache or mod_python?  What component is responsible
for making the chdir call?

-- Jeremy Hylton <http://www.python.org/~jeremy/>
From grisha at ispol.com  Mon Sep 11 14:37:25 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BCE08A.4758A8DC@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>

On Mon, 11 Sep 2000, Rich Salz wrote:

> I don't fully understand how mod_python does sub-interpreters; I'll have
> to reread the docs.

The things you should read are:

The top of
http://www.modpython.org/live/mod_python-2.5/doc/pythonapi.html

as well as
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpreter
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerDirectory
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerServer

> It never occured to me that there could/would be different interps for
> each handler.

This would happen for example if authentication is handled by an
application entirely different from the one creating content. If your
PyhtonAuthenHandler is in the httpd.conf file and the app is driven by a
PythonHandler in an .htaccess file, you'd have the same request, but
different handlers would have different suninterpreters.

> I suggest that the docs make it more clear that the handlers are
> "stateless".

...or make ways to retain state... :-)

Here is a suggestion - if I provided a way to store a pointer to a Python
object in notes - would that solve your problem? You create the object,
then call some function that returns a string that you can store in
notes. Then you can call another function that you pass that string
and it will return the Python object. That way mod_python does not need to
concern itself with the context in which the object is used, and you can
pass the object between handlers.

> For us, the cleanest thing is one interp/request, with no state kept
> across requests.  

In most cases there would be one interp per request, or you can ensure it
by using the PythonInterpreter directive. For example, sticking something
like "PythonInterpreter MyOnlyInterpreter" into httpd.conf would make the
whole server run under one interpreter.

> That seems most like the "classic" apache processing model.

Apache was designed with multiple users and multiple applications in mind.
That's why it supports .htaccess files. Mod_python's subinterpreters
extend that notion. You can have two different application with clashing
module names run on the same server with no problems because they could be
run in different subinterpreters. Or you can have two instances of the
same application run in separate subinterpreters. Try that with mod_perl.


Grisha



From rsalz at caveosystems.com  Tue Sep 12 10:49:18 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>
Message-ID: <39BE426E.153BC5C5@caveosystems.com>

> Here is a suggestion - if I provided a way to store a pointer to a Python
> object in notes - would that solve your problem? You create the object,
> then call some function that returns a string that you can store in
> notes.

Yes.  That's what I was thinking of in my first note (the "%p" being the
ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
what the inferences are for referencing counting -- will I explicitly
call "del" on what I get back?

(Wouldn't it have been nice if Py_INCREF returned its input param? :)

Is the request_rec notes field mapped to a python list?  Could/should it
be?

> Try that with mod_perl.

:)  First I have to understand it.

From grisha at ispol.com  Tue Sep 12 11:46:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121139291.28608-100000@saturn.ispol.com>

Yes, reference counting will be one problem with this.... I think a better
alternative would be to do it the way you suggested, but there would be
one dictionary per interpreter. So you won't be able to pass objects
between interpreters, *and* you don't have to worry about reference
counting.

On Tue, 12 Sep 2000, Rich Salz wrote:

> > Here is a suggestion - if I provided a way to store a pointer to a Python
> > object in notes - would that solve your problem? You create the object,
> > then call some function that returns a string that you can store in
> > notes.
> 
> Yes.  That's what I was thinking of in my first note (the "%p" being the
> ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
> what the inferences are for referencing counting -- will I explicitly
> call "del" on what I get back?
> 
> (Wouldn't it have been nice if Py_INCREF returned its input param? :)
> 
> Is the request_rec notes field mapped to a python list?  Could/should it
> be?
> 
> > Try that with mod_perl.
> 
> :)  First I have to understand it.
> 


From grisha at ispol.com  Tue Sep 12 11:48:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121146370.28608-100000@saturn.ispol.com>

On Tue, 12 Sep 2000, Rich Salz wrote:

> Is the request_rec notes field mapped to a python list?  Could/should it
> be?

req.notes is an mptable object. It's a Python mapping to an Apache
table. Apache tables are sort of like dictionaries, except they work only
with strings. The nice thing about them is that Apache manages the memory.

Grisha


From miguel at yorku.ca  Tue Sep 12 17:40:35 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Python 1.6...
Message-ID: <20000912174035B.miguel@yorku.ca>

Hi

Has anyone gotten 2.5 to work with Python 1.6?
TIA

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From jeremy at beopen.com  Wed Sep 13 08:01:07 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Python 1.6...
In-Reply-To: <20000912174035B.miguel@yorku.ca>
References: <20000912174035B.miguel@yorku.ca>
Message-ID: <14783.27779.744392.301326@bitdiddle.concentric.net>

I have gotten it to work with Python 2.0b1.  

Jeremy

PS I don't think there's much point to worrying about 1.6.

From walter at livinglogic.de  Thu Sep 14 19:06:04 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] mod_python 2.5 installation problems
Message-ID: <200009141906040375.00FD0EC6@mail.tmt.de>

Hello all!

I'm having trouble installing mod_python 2.5.
Starting apache gives me the following:

> /usr/sbin/httpd -X
Syntax error on line 20 of /usr/local/etc/httpd/httpd.conf:
Cannot load /usr/lib/apache/mod_python.so into server: /usr/lib/apache/mod_python.so: undefined symbol: openpty

The system is:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

Line 20 of /usr/local/etc/httpd/httpd.conf is:
	LoadModule python_module /usr/lib/apache/mod_python.so

Any help would be appreciated!

Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ? www.livinglogic.de


From whitaker at isharp.com  Wed Sep 20 13:45:41 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
Message-ID: <39C921F5.E912296F@isharp.com>

Hello all,

I have used this as my guide:
"http://www.modpython.org/live/mod_python-2.5/doc/installation.html"

My host o/s: SunOS 2.7 Generic_106542-04 i86pc

I statically linked mod_python into my apache 1.3.9 httpd
and moved it into place, then restarted the daemon.  Telnet
to port 80 shows:

Server: Apache/1.3.9 (Unix) mod_python/2.5 Python/1.5.2

I followed the instructions in bullet points 3-7 in section "3. Testing"
in installation.html, as my reading of points 1-2 indicates those
steps apply to the DSO option only.

I then created a file "mptest.py" as indicated in the instructions,
(bullet point 6) mode 755 in /usr/local/apache/cgi-bin/test, 
which is world readable (httpd runs as user "http").

My first .htaccess in the same directory contained the following,
as per the instructions:

AddHandler python-program .py
PythonHandler mptest
PythonDebug

I tried to call mptest.py via CGI, with this error_log output (attn
Gregory):

[Wed Sep 20 12:49:52 2000] [alert]
/usr/local/apache/cgi-bin/test/.htaccess: 
PythonDebug must be On or Off

...after which I modified .htaccess as follows ("On" switch):

AddHandler python-program .py
PythonHandler mptest
PythonDebug On

Trying again, I get the following error_log output:

make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Wed Sep 20 13:10:24 2000] [error] python_handler: make_obcallback
returned no obCallBack!

My httpd.conf contains the following:

<Directory "/usr/local/apache/cgi-bin">
    AllowOverride All
    Options ExecCGI
    Order allow,deny
    Allow from all
</Directory>

Insight, anyone?  I'm not sure if the contents of these archives
contain insight relevant to my problem:

"http://www.modpython.org/pipermail/mod_python/2000-June/000091.html"
"http://www.modpython.org/pipermail/mod_python/2000-June/000092.html"

Any help would be greatly appreciated,
Russell

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From grisha at ispol.com  Wed Sep 20 18:11:01 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
In-Reply-To: <39C921F5.E912296F@isharp.com>
Message-ID: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>


On Wed, 20 Sep 2000, Russell Whitaker wrote:

> [Wed Sep 20 12:49:52 2000] [alert]
> /usr/local/apache/cgi-bin/test/.htaccess: 
> PythonDebug must be On or Off

noted

> <Directory "/usr/local/apache/cgi-bin">
>     AllowOverride All
>     Options ExecCGI

You do not need CGI since mod_python has nothing to do with it whatsoever.

>     Order allow,deny
>     Allow from all
> </Directory>
> 
> Insight, anyone?  I'm not sure if the contents of these archives
> contain insight relevant to my problem:

I have a feeling it is a permissions problem with the mod_python package
that you were supposed to stick in yout python path. Check which userid
Apache runs as and if that user can read those files.

Grisha


From whitaker at isharp.com  Wed Sep 20 15:43:37 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
References: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>
Message-ID: <39C93D99.A14997FE@isharp.com>

Hello Gregory!

Gregory Trubetskoy wrote:
> 
> On Wed, 20 Sep 2000, Russell Whitaker wrote:
> 
> > [Wed Sep 20 12:49:52 2000] [alert]
> > /usr/local/apache/cgi-bin/test/.htaccess:
> > PythonDebug must be On or Off
> 
> noted

Cool.

> 
> > <Directory "/usr/local/apache/cgi-bin">
> >     AllowOverride All
> >     Options ExecCGI
> 
> You do not need CGI since mod_python has nothing to do with it whatsoever.

Ah, that ExecCGI applies to the entire $SERVERROOT/cgi-bin/ for the
Apache
server.  It was there in httpd.conf for all the other guys in my shop
who 
_don't_ yet do Python.  ;-)

It shouldn't have any adverse affect on the workings of mod_python, as
you point out.

> 
> >     Order allow,deny
> >     Allow from all
> > </Directory>
> >
> > Insight, anyone?  I'm not sure if the contents of these archives
> > contain insight relevant to my problem:
> 
> I have a feeling it is a permissions problem with the mod_python package
> that you were supposed to stick in yout python path. Check which userid
> Apache runs as and if that user can read those files.

Checked permissions, everything in in PATHONPATH is world readable, no
problem there.  However, you gave me the hint I needed.  See, this
is where mod_python installed:

/usr/local/lib/python1.5/site-packages/mod_python-2.5/lib/python/mod_python

...because (and I don't know why) I skipped (whoops) bullet point 2 in 
section 1.) "Installing Python Libraries".  Symlinking that directory
as 
/usr/local/lib/python1.5/site-packages/mod_python fixed the problem.

Hello World!

Thanks,
Russell

> 
> Grisha

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From rutt at chezrutt.com  Thu Sep 21 07:43:56 2000
From: rutt at chezrutt.com (John Ruttenberg)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Loading mod_python.so into apache-1.3.12 on redhat 6.2 segfaults
Message-ID: <200009211143.HAA16011@mojo.chezrutt.com>

I've using both the 2.4 rpm due to Mads Kiilerich and compiling 2.5 with apxs
and the results are the same -- 'httpd -X' segfaults.  The minimum change to
httpd.conf for this to happen is to add:

    LoadModule python_module modules/mod_python.so

before any of the other LoadModule lines.  (My httpd.conf is available from
http://chezrutt.com/~rutt/httpd.conf if you want to take a look.)

I've also tried statically compiling apache according to the instructions that
come with it, but then httpd complains about the first LoadModule statement:

    [root@mojo src]# httpd -X
    Syntax error on line 208 of /etc/httpd/conf/httpd.conf:
    Invalid command 'LoadModule', perhaps mis-spelled or defined by a module not in\
    cluded in the server configuration
    [root@mojo src]#

Perhaps I don't know how to configure it to allow loadable modules?

From okamoto at xfiles.intercon.hp.com  Wed Sep 27 15:07:25 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
Message-ID: <200009272207.PAA13041@xfiles.intercon.hp.com>

Hello,

I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
mod_python just fine, and have configured Apache and created an mptest.py
as the Installation documentation says.  However, when I try to access
it, I get the following error:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
    in Dispatch module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
    in import_module module = __import__(module_name)

ImportError: No module named mptest

I've checked the ML archives, and saw a message by Jeremy Hylton that was
almost exactly the problem I've encountered, but he was using mod_python
2.0, not 2.5.

Can someone give me some additional suggestions of what to try next?

Thanks,
Jeff

From benno at sesgroup.net  Thu Sep 28 10:51:18 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Wed, Sep 27, 2000 at 03:07:25PM -0700
References: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <20000928105118.A13402@bob.sesgroup.net>

Hi Jeff!

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?


I ran into this same problem, it means that mptest is not in the path correctly.

My httpd.conf has this in it:



<Directory /var/www>
AddHandler python-program .py
PythonHandler mptest
PythonDebug on
</Directory>


The trick is that whatever is specified as the directory will get added to the
sys.path when trying to find the module.

If your apache root is somewhere else like (/home/www or something) then add that
instead.


Cheers,

Ben


(oh and as my first post to the list I will add my congrats and thanks to the 
author for such a great program!)

From grisha at ispol.com  Thu Sep 28 09:08:58 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not
 playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <Pine.LNX.4.21.0009280907400.9717-100000@saturn.ispol.com>

Where is your PythonHandler directive? It needs to be either in an
.htaccess file or inside <Directory> tags matching the directory where
mptest.py resides, or you need to have a PythonPath directive with the
directory where mptest.py is.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?
> 
> Thanks,
> Jeff
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at yahoo.com  Thu Sep 28 06:47:22 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache request handler examples
Message-ID: <20000928134722.16597.qmail@web2203.mail.yahoo.com>

Hi

I have written some cgi apps based on mod_python and
am now having a go writing my own handler.  I seem to
be running into various difficulties (like how to
convince Netscrape that this is html and not
text/plain), most of which I have been able to sort
out but I am wondering whether there are there any
code examples/docs out there that could make this
easier.  Surely I am not the first to have had these
problems?

So far I have used the mod_python docs, the apache API
(which is not too informative) and the PERL docs on
the apache module (which are quite helpful).  

Have I missed a useful resource somewhere?  Is there a
site where I could start adding to a FAQ on the
subject?

Regards
Alexis

__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From grisha at ispol.com  Thu Sep 28 10:34:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache request handler examples
In-Reply-To: <20000928134722.16597.qmail@web2203.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0009281032510.9753-100000@saturn.ispol.com>

There is no resource like that that I know of, but if anyone wants to
contribute, they are more than welcome.

There is an O'Reilly book - "Writing Apache Modules with Perl and C". It
is, of course, C and Perl specific, but I think it's a great book to read
if you want to understand mod_python better.

Grisha


On Thu, 28 Sep 2000, Alexis Iglauer wrote:

> Hi
> 
> I have written some cgi apps based on mod_python and
> am now having a go writing my own handler.  I seem to
> be running into various difficulties (like how to
> convince Netscrape that this is html and not
> text/plain), most of which I have been able to sort
> out but I am wondering whether there are there any
> code examples/docs out there that could make this
> easier.  Surely I am not the first to have had these
> problems?
> 
> So far I have used the mod_python docs, the apache API
> (which is not too informative) and the PERL docs on
> the apache module (which are quite helpful).  
> 
> Have I missed a useful resource somewhere?  Is there a
> site where I could start adding to a FAQ on the
> subject?
> 
> Regards
> Alexis
> 
> __________________________________________________
> Do You Yahoo!?
> Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
> http://photos.yahoo.com/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From okamoto at xfiles.intercon.hp.com  Thu Sep 28 10:15:51 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000928105118.A13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 28, 100 10:51 am
Message-ID: <200009281715.KAA15395@xfiles.intercon.hp.com>

> My httpd.conf has this in it:
> 
> <Directory /var/www>
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug on
> </Directory>

The relevant section for me is:

<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Directory /opt/apache>
    AddHandler python-program .py
    PythonHandler mptest
    PythonDebug On
</Directory>

> The trick is that whatever is specified as the directory will get added to the
> sys.path when trying to find the module.
> 
> If your apache root is somewhere else like (/home/www or something) then add that
> instead.

Sadly, it's still not working.  It's quite sad that the install.html file
doesn't mention putting it inside a Directory directive and that there's
in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Sigh.

Jeff

From benno at sesgroup.net  Fri Sep 29 10:42:34 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009281715.KAA15395@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Thu, Sep 28, 2000 at 10:15:51AM -0700
References: <20000928105118.A13402@bob.sesgroup.net> <200009281715.KAA15395@xfiles.intercon.hp.com>
Message-ID: <20000929104234.F13402@bob.sesgroup.net>

On Thu, 28 Sep 2000, Jeff Okamoto wrote:

> > My httpd.conf has this in it:
> > 
> > <Directory /var/www>
> > AddHandler python-program .py
> > PythonHandler mptest
> > PythonDebug on
> > </Directory>
> 
> The relevant section for me is:
> 
> <Directory />
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Directory /opt/apache>
>     AddHandler python-program .py
>     PythonHandler mptest
>     PythonDebug On
> </Directory>

That seem correct to me.
 
> > The trick is that whatever is specified as the directory will get added to the
> > sys.path when trying to find the module.
> > 
> > If your apache root is somewhere else like (/home/www or something) then add that
> > instead.
 
> Sadly, it's still not working. 

Is it the same error message? What is in error.log. One thing that you 
might want to try is putting mptest.py into the same directory as apache.py,
this ensures that it is going to be in the correct path. That might help
narrow down the problem. Also you probably need to make sure that the file has
read and execute permission for the apache user.

> It's quite sad that the install.html file
> doesn't mention putting it inside a Directory directive and that there's
> in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Yeah well shit happens, guessing it is probably case of the code gaining features
faster than the docs can keep up with (though I'm just a new user, so I am merely
guessing).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Fri Sep 29 10:50:56 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache Segfault
Message-ID: <39D457F0.8DF53FC1@LivingLogic.de>

Hi everybody,

I'm having some severe trouble installing mod_python 2.5 with the
following environment:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

I compiled mod_python.so with the following command:

> apxs -I /usr/local/include/python2.0/ -c mod_python.c \ 
> /usr/local/src/Python-2.0b1/libpython2.0.a -lpthread -lutil -lm -lreadline -lncurses

The first LoadModule directive in my httpd.conf file is 

> LoadModule python_module /usr/local/src/mod_python-2.5/src/mod_python.so

Starting apache with the following command:

> httpd -t -f /etc/httpd/httpd.conf -D MODULES 

gives me:

> Syntax OK
> Segmentation fault   

Here is the stack backtrace, when I let the whole thing run in the
debugger:

> (gdb) file /usr/sbin/httpd
> Reading symbols from /usr/sbin/httpd...(no debugging symbols found)...done.
> (gdb) set args -t -f /etc/httpd/httpd.conf -D MODULES
> (gdb) run
> Starting program: /usr/sbin/httpd -t -f /etc/httpd/httpd.conf -D MODULES
> Syntax OK
> (no debugging symbols found)...Cannot access memory at address 0x404db434.
> (gdb) bt
> #0  0x4000ab11 in _dl_debug_state () at dl-debug.c:47
> #1  0x401834c1 in _dl_close () at dl-close.c:199
> #2  0x400b23eb in dlclose_doit (handle=0x80a76a8) at dlclose.c:26
> #3  0x4000a801 in _dl_catch_error () at dl-error.c:117
> #4  0x400b29c1 in _dlerror_run (operate=0x400b23d0 <dlclose_doit>, args=0x80a76a8)
>     at dlerror.c:125
> #5  0x400b2411 in dlclose () at dlclose.c:27
> #6  0x8069cb2 in ap_os_dso_unload ()
> #7  0x80502d9 in ap_get_server_built ()
> #8  0x8051d4b in ap_run_cleanup ()
> #9  0x80509cf in ap_clear_pool ()
> #10 0x8050a38 in ap_destroy_pool ()
> #11 0x80509a3 in ap_clear_pool ()
> #12 0x8050a38 in ap_destroy_pool ()
> #13 0x805ba18 in ap_exists_scoreboard_image ()
> #14 0x805e335 in main ()
> #15 0x400cea8e in __libc_start_main () at ../sysdeps/generic/libc-start.c:93    

Can anybody help me out or give any additional hints?

Thanks,

--- Matthias


------------------------------------------
  Matthias Bauer     -    LivingLogic AG
  Maximilianstr. 2   -    95444 Bayreuth
             www.livinglogic.de 
------------------------------------------

From okamoto at xfiles.intercon.hp.com  Fri Sep 29 12:49:46 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 21:58:38 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000929104234.F13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 29, 100 10:42 am
Message-ID: <200009291949.MAA06080@xfiles.intercon.hp.com>

> > <Directory />
> >     Options FollowSymLinks
> >     AllowOverride None
> > </Directory>
> > 
> > <Directory /opt/apache>
> >     AddHandler python-program .py
> >     PythonHandler mptest
> >     PythonDebug On
> > </Directory>

Some more info: if I change /opt/apache above to /test (and mptest.py is
in htdocs/test), then Apache returns the text of the file.

When it's /opt/apache, the browser returns:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)

ImportError: No module named mptest

and Apache's error log says:

[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: Traceback (most recent call last):
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: ImportError: No module named mptest

> One thing that you 
> might want to try is putting mptest.py into the same directory as apache.py,
> this ensures that it is going to be in the correct path. That might help
> narrow down the problem. Also you probably need to make sure that the file has
> read and execute permission for the apache user.

Tried all this, including setting execute permissions.  NFG.

Jeff

From Daniel.Plagge at tu-clausthal.de  Fri Sep  1 10:57:13 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] How can I easily terminate a apache task?
Message-ID: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>

Hello,

we have here a persistant database (Informix) connection for each apache 
task. One problem is that if the database goes down, the connection has
to be reinitiallized. I tried to achieve this by writing a wrapper class
around the informixdb class which reinitializes the connection if a
exception raises.

But this led to some strange errors, so I want to try another approach:
I want to alter "cgihandler" so that when a database exceptions raises
the task should be terminated. (This shouldn't happen very often, so
it's not a performance killer.)

So my question is: What is the preferred way to terminate a apache task?

Thank you,
Daniel


From L.A.Timochouk at ukc.ac.uk  Fri Sep  1 12:55:06 2000
From: L.A.Timochouk at ukc.ac.uk (Leonid Timochouk)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>

Hello Daniel,

The easiest thing to try would be to invoke sys.exit (...) from your
Python script -- my understanding is that the Python interpreter runs in
the same process as the Apache task which created it. This is certainly
true for a normal "handler"; I never tried a "cgi handler" but believe
that the mechanism should be the same.

If this does not work for any reason, try os._exit (...) instead. However,
there may be a problem if your Apache task is actually a thread rather
than an independent process (which OS are you using?) -- in that case you
may try thread.exit ().

These solutions (if any of them works) are not Apache-specific, and quite
"rude" in the sense that they terminate the Apache task without any
internal clean-up. So maybe someone else knows a better way?

Sincerely,
L.A. Timochouk


From grisha at ispol.com  Fri Sep  1 09:45:00 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de>
Message-ID: <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com>

Apache provides an API for this - ap_child_terminate(). I'll see about
making it available to mod_python in the next release (which should happen
fairly soon).

Grisha

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Fri, 1 Sep 2000, Daniel Plagge wrote:

> Hello,
> 
> we have here a persistant database (Informix) connection for each apache 
> task. One problem is that if the database goes down, the connection has
> to be reinitiallized. I tried to achieve this by writing a wrapper class
> around the informixdb class which reinitializes the connection if a
> exception raises.
> 
> But this led to some strange errors, so I want to try another approach:
> I want to alter "cgihandler" so that when a database exceptions raises
> the task should be terminated. (This shouldn't happen very often, so
> it's not a performance killer.)
> 
> So my question is: What is the preferred way to terminate a apache task?
> 
> Thank you,
> Daniel
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From mhagger at alum.mit.edu  Fri Sep  1 17:30:54 2000
From: mhagger at alum.mit.edu (Michael Haggerty)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] ANNOUNCE: PyWX version 0.6
Message-ID: <14768.8206.590958.607388@freak.kaiserty.com>

[I hope people aren't offended that I post this announcement here.  I
figure that there is enough overlap that this might be interesting to
some mod_python subscribers.  Also there is some potential for
cross-pollination between our two projects. --MRH]

I am pleased to announce the release of PyWX version 0.6.  This is an
alpha release but is fairly stable and is being used in several
development environments.

PyWX can be retrieved from SourceForge,

        http://download.sourceforge.net/PyWX/PyWX-0.6.tar.gz

The PyWX homepage is

        http://pywx.idyll.org


What is PyWX?
-------------

PyWX is a Python module for AOLserver.

AOLserver is a free, open-source, enterprise-class, multi-threaded web
server whose performance on dynamic content is reputed to beat Apache.
It is used at many large web sites including AOL and ArsDigita.  It
includes an internal database API that allows persistent database
connections.

Python is a clean, object-oriented scripting language with excellent
support for complicated data structures and great libraries for web
programming.

PyWX embeds a Python interpreter into AOLserver, allowing threaded
execution of Python scripts--even CGI scripts--within the server
process.  It also allows the Python script to access almost all of
AOLserver's internal API via a C extension module.  PyWX supports many
other features, including

 + Full access to AOLserver's Tcl interpreter from Python, and vice versa.
 + Access to AOLserver's persistent database mechanism.
 + Optional compiled-script caching.
 + Threaded execution of CGI scripts within emulated CGI environment.
 + Cross-connection data-persistence.
 + An internal Webware adaptor.


What's new in version 0.6?
--------------------------

 + SWIG-assisted wrapping of AOLserver's C API functions.  Almost all
   of AOLserver's facilities are available to Python scripts, wrapped
   in an object-oriented fashion.
 + More of PyWX itself is written in Python.
 + Much-improved documentation.
 + Significant cleanup, bug fixes, and plugging of memory leaks.
 + Improved example scripts.

Version 0.6 is fairly stable and is being used in several development
environments, although there are still some problems under heavy
loads.  As a rough measure of the performance, PyWX can deliver a
trivial Python script at about 230 pages per second on a
single-processor Pentium 3/500MHz under Linux.

Please check out our home page at

        http://pywx.idyll.org

for more information on PyWX, including mailing lists, development
archives, and several example pages.  You may also be interested in:

        http://www.aolserver.com       -- AOLserver
        http://www.python.org          -- the Python programming language
        http://webware.sourceforge.net -- Webware toolkit

Yours,
Michael
--
Michael Haggerty
mhagger@alum.mit.edu


--
Michael Haggerty
mhagger@alum.mit.edu

From Daniel.Plagge at tu-clausthal.de  Sat Sep  2 09:29:09 2000
From: Daniel.Plagge at tu-clausthal.de (Daniel Plagge)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] How can I easily terminate a apache task?
In-Reply-To: <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>; from L.A.Timochouk@ukc.ac.uk on Fre, Sep 01, 2000 at 12:55:06 +0100
References: <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.LNX.4.21.0009010944040.20923-100000@saturn.ispol.com> <20000901105713.A718@wintermute.esw-heim.tu-clausthal.de> <Pine.GSO.4.21.0009011240560.13830-100000@myrtle.ukc.ac.uk>
Message-ID: <20000902092909.A715@wintermute.esw-heim.tu-clausthal.de>

Hello Leonid and Gregory,

thank you for your answers. 
I tried sys.exit() and os._exit() and the latter worked.
But I'll wait for the next release, ap_child_terminate() seems
to be the right(TM) solution. :)

Daniel


From evaamo at loquesea.com  Sat Sep  2 15:36:17 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Internal Server Error- win32 ver
Message-ID: <000401c01515$10ee19b0$41dea8c0@wormhole>

Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E



From arhiv at freemail.org.mk  Sat Sep  2 22:41:00 2000
From: arhiv at freemail.org.mk (damjan)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Just a hint!
Message-ID: <Pine.LNX.4.21.0009022236530.345-100000@localhost.localdomain>

When you test if mod_python is working on your system DON'T make a
script named "test.py", because python already has a package named
"test". This may seem obvious and stupid, but I lost hours trying to
figure it out why mod_python is not working.

just my $0.02

-- 
damjan




From evaamo at loquesea.com  Sat Sep  2 18:13:20 2000
From: evaamo at loquesea.com (Enrique Vaamonde)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Internal Server Error- win32 ver
In-Reply-To: <000401c01515$10ee19b0$41dea8c0@wormhole>
Message-ID: <000101c0152b$015fb380$41dea8c0@wormhole>

Hey all,
I just got it working...I had unzipped the tarball
and the files landed where they shouldn't.
It didnt matter much to me anyway because I thought the dll
would suffice...wrong assumption tho'.
Thank you all...
-E



-----Original Message-----
From: mod_python-admin@modpython.org
[mailto:mod_python-admin@modpython.org]On Behalf Of Enrique Vaamonde
Sent: Saturday, September 02, 2000 3:36 PM
To: mod_python@modpython.org
Subject: [mod_python] Internal Server Error- win32 ver


Hey guys,
I'm new to Python/mod_python
and I've been trying to make it work with Apache (1.3.12)
in windows.
I have tried many of the different configurations posted to this list in the
past
but somehow I keep getting a 500 Internal Server Error.
I've been looking for instructions/tutorial on how to configure mod_python
and Apache
using win32 but no luck, so I'm recurring to you...
Please help !!
cheers
-E


_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://www.modpython.org/mailman/listinfo/mod_python


From walter at livinglogic.de  Mon Sep  4 11:55:19 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Doc Error: axps <-> apxs
Message-ID: <200009041155190953.0041FE68@mail.tmt.de>

Hello all!

There is a typo in the installation documentation 
(doc/installation.html):
The Apache extension tool is called apxs and *not* axps!
Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ?
www.livinglogic.de


From grisha at ispol.com  Tue Sep  5 09:13:03 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] 2.5 is out
Message-ID: <Pine.LNX.4.21.0009050903140.22535-100000@saturn.ispol.com>

Hello - 

You can now download the 2.5 version release. I will follow up on
comp.lang.python and on freshmeat about this once we have the Windows
version working and the RH RPM.

New in this release:

* PythonEnablePdb directive. Allows running handlers through the Python
  debugger.

* Dynamic handler registration (req.add_handler()). Allows additional
  handlers to be added dynamically.

* Table object now supports multiple keys via the add() method.

* req.read() function now returns all the data there is and obeys by the
  Apache Timout directive (as it should).

* New handler PythonInitHandler.

* New PythonInterpPerServer directive. This adds another sub-interpreter
  policy - a sub intepreter per virtual server.

* req.register_cleanup() and PythonCleanupHandler directives. Useful to
  make sure that all files and database connections are closed properly.

* many bugs fixed. (but perhaps many new introduced!)

Grisha



From arhiv at freemail.org.mk  Thu Sep  7 15:59:53 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Several questions
Message-ID: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>

Hi, I don't have that much experience with mod_python, and have some
questions:

What should I do if I want a persistent python object? Can I make a
persistent object to be shared between different apache processes (or
not until Apache 2.0).

Or am I supposed to do this by using a database? Which database would
have low latency, low memory footprint, low CPU usage, etc.. suitable
for object store? MySQL?



-- 
Thanks,

damjan

    Linux is like a vigwam, no windows, no gates, just apache inside.


From grisha at ispol.com  Thu Sep  7 13:58:28 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071554170.323-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>

On Thu, 7 Sep 2000, Damjan wrote:

> Hi, I don't have that much experience with mod_python, and have some
> questions:
> 
> What should I do if I want a persistent python object? Can I make a
> persistent object to be shared between different apache processes (or
> not until Apache 2.0).

No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
only 2.0 running in multthreaded mode would allow something like this.

> Or am I supposed to do this by using a database? Which database would
> have low latency, low memory footprint, low CPU usage, etc.. suitable
> for object store? MySQL?

I don't know how easy it is to store actual Python objects in a database -
I suppose you could is cPickle or something, but if you just want to store
information (i.e. text or numbers as opposed to objects) - MySQL is very
very fast.

Grisha


From arhiv at freemail.org.mk  Thu Sep  7 22:05:06 2000
From: arhiv at freemail.org.mk (Damjan)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Several questions
In-Reply-To: <Pine.LNX.4.21.0009071354480.24215-100000@saturn.ispol.com>
Message-ID: <Pine.LNX.4.21.0009072159370.449-100000@localhost.localdomain>

> > What should I do if I want a persistent python object? Can I make a
> > persistent object to be shared between different apache processes (or
> > not until Apache 2.0).
> 
> No. On windows you could since 1.3 runs mulithreaded, but on unix, I think
> only 2.0 running in multthreaded mode would allow something like this.

As I understand, Apache 2.0 will have support for shared memory, thus
allowing multiple child processes to share information (and the modules
could use this).
 
> > Or am I supposed to do this by using a database? Which database would
> > have low latency, low memory footprint, low CPU usage, etc.. suitable
> > for object store? MySQL?
> 
> I don't know how easy it is to store actual Python objects in a database -
> I suppose you could is cPickle or something, but if you just want to store
> information (i.e. text or numbers as opposed to objects) - MySQL is very
> very fast.

Yes, my idea was to cPickle the objects, but I have a feeling that an
SQL database might be just to bloat.

-- 
damjan

               I believe the technical term is "Oops!"


From seant at alum.mit.edu  Thu Sep  7 19:04:17 2000
From: seant at alum.mit.edu (Sean True)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Another authentication issue? Or am I missing something?
Message-ID: <MJEHLHJKGINLONDMMKNECEKHCGAA.seant@alum.mit.edu>

I've been having trouble getting PythonAuthenHandler-s to work properly. On
my Microsoft IE 5.5 browser,
the password dialog was not popping up. After some digging (Writing Apache
Modules in Perl and C is-your-friend), I found on page 284 the
reccomendation that one call req.note_basic_auth-failure, a perl method, to
force the WWW-Authenticate field in the HTTP headers to be set. This will
cause the browser to pop a password dialog.

Since that method is not exposed in Python (wouldn't Swig make this a lot
easier?), I added the following code to mod_python.c
and things worked much better, first try:

	    /* SDT If an AuthenHandler and we failed, note failure */
	    if (strcmp(handler, "PythonAuthenHandler") == 0) {
	      if ((result == HTTP_UNAUTHORIZED)){
		ap_note_basic_auth_failure(req);
	      }
	    /* Original code continues */
	    /* authen handlers need one more thing
	     * if authentication failed and this handler is not
	     * authoritative, let the others handle it
	     */
	      if (strcmp(handler, "PythonAuthenHandler") == 0) {
		if ((result == HTTP_UNAUTHORIZED) &&
		    (! conf->authoritative)) {
		  result = DECLINED;


Any comments? Other than the obvious proper factoring of the if expression
...

-- Sean
-------
Sean True
Webreply, Inc.


From rsalz at caveosystems.com  Fri Sep  8 15:00:36 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
Message-ID: <39B93754.989D4451@caveosystems.com>

What's the best way to create data in one handler (e.g., Authen) and
make it available to another?  Create a global? Stringify and use the
notes attr?

tnx.

From grisha at ispol.com  Fri Sep  8 16:47:47 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B93754.989D4451@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>

I think req->notes is the best for now. I'll think about some more
elegant way for future versions. A global is not so good because you may
accidently pass it to a different request alltogether, whereas notes is
guaranteed to get cleaned between requests.

Grisha


On Fri, 8 Sep 2000, Rich Salz wrote:

> What's the best way to create data in one handler (e.g., Authen) and
> make it available to another?  Create a global? Stringify and use the
> notes attr?
> 
> tnx.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From rsalz at caveosystems.com  Fri Sep  8 22:41:27 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009081645460.25303-100000@saturn.ispol.com>
Message-ID: <39B9A357.7536A46@caveosystems.com>

The problem with notes, of course, is that stringifying is too limiting.

Here's a suggestion.  Add a new method:
	req.get_state()
that returns a dictionary associated with this request, or None.
	req.create_state()
creates the dictionary.

The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
cleaned up
until the request is done.  How to attach it to the request_rec object? 
Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
hack.

Hope this helps.

Gregory Trubetskoy wrote:
> 
> I think req->notes is the best for now. I'll think about some more
> elegant way for future versions. A global is not so good because you may
> accidently pass it to a different request alltogether, whereas notes is
> guaranteed to get cleaned between requests.
> 
> Grisha
> 
> On Fri, 8 Sep 2000, Rich Salz wrote:
> 
> > What's the best way to create data in one handler (e.g., Authen) and
> > make it available to another?  Create a global? Stringify and use the
> > notes attr?
> >
> > tnx.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >

From peter at wl.vg  Mon Sep 11 01:28:36 2000
From: peter at wl.vg (peter@wl.vg)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] code question
Message-ID: <39BC6D84.A78F3692@wl.vg>

I am just learning Python and am trying to learn how to use it for
online applications.  Sorry for my ignorance, but I usually develop in
perl.  I can't find documentation that describes how to do this.  I have
pieced this together, but it doesn't work.

from mod_python import apache
import cgi


def handler(req):


	len = int(req.headers_in["content-length"])
	form_data = cgi.parse_qs(req.read(len))

	req.send_http_header()
	req.write("This is from the form: "+form_data['name']+"!")
	return apache.OK

-- 
Peter Halliday
Online Application Developer
Whetstone Logic, Inc.       http://www.whetstonelogic.com
icq#75769411           AIM screen name: hoaggelos

From miguel at yorku.ca  Mon Sep 11 07:55:33 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] code question
In-Reply-To: <39BC6D84.A78F3692@wl.vg>
References: <39BC6D84.A78F3692@wl.vg>
Message-ID: <20000911075533X.miguel@yorku.ca>

On Mon, 11 Sep 2000 01:28:36 -0400, peter@wl.vg wrote:
> I am just learning Python and am trying to learn how to use it for
> online applications.  Sorry for my ignorance, but I usually develop in
> perl.  I can't find documentation that describes how to do this.  I have
> pieced this together, but it doesn't work.
> 
> from mod_python import apache
> import cgi
> 
> 
> def handler(req):
> 
> 
> 	len = int(req.headers_in["content-length"])
> 	form_data = cgi.parse_qs(req.read(len))
> 
> 	req.send_http_header()
> 	req.write("This is from the form: "+form_data['name']+"!")
> 	return apache.OK
> 

Here's snippet of some test code I've used...

import cgi
from mod_python import apache

def handler(req):
    form = {}
    req.content_type = "text/plain"
    req.send_http_header()
    if req.headers_in.has_key("content-length"):
        len = int(req.headers_in["content-length"])
        if len > 0:
            data = req.read(len)
            form = cgi.parse_qs(data)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    else:
        if (req.args):
            form = cgi.parse_qs(req.args)
            for l,y in form.items():
                req.write(l + ": " + y[0] + "\n")
    return apache.OK

Hope it helps...

							Miguel

C. Miguel Marques, York University, Computing & Communications Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From grisha at ispol.com  Mon Sep 11 08:16:37 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39B9A357.7536A46@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>

The problem with that is subinterpreters. 

A single request can go through several subinterpreters, and if you end up
with a dictionary created in one, but it has members created in another,
you run a risk of some weird errors.

If you stringify, then you can pass data across handlers as well as across
subinterpreters with no ill sideffects.

What I'd like to know is - how likely really is it that someone would be
passing anything more complex than a couple of flags between handlers? (I
can't think of a practical need for it, but then I haven't thought hard
enough... )

Grisha

On Fri, 8 Sep 2000, Rich Salz wrote:

> The problem with notes, of course, is that stringifying is too limiting.
> 
> Here's a suggestion.  Add a new method:
> 	req.get_state()
> that returns a dictionary associated with this request, or None.
> 	req.create_state()
> creates the dictionary.
> 
> The C code creates a PyDict object.  Fiddle the refcounting so it doesn't get
> cleaned up
> until the request is done.  How to attach it to the request_rec object? 
> Either "stringify" the pointer (using the ANSI-C %p format) or some kind of
> hack.
> 
> Hope this helps.
> 
> Gregory Trubetskoy wrote:
> > 
> > I think req->notes is the best for now. I'll think about some more
> > elegant way for future versions. A global is not so good because you may
> > accidently pass it to a different request alltogether, whereas notes is
> > guaranteed to get cleaned between requests.
> > 
> > Grisha
> > 
> > On Fri, 8 Sep 2000, Rich Salz wrote:
> > 
> > > What's the best way to create data in one handler (e.g., Authen) and
> > > make it available to another?  Create a global? Stringify and use the
> > > notes attr?
> > >
> > > tnx.
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://www.modpython.org/mailman/listinfo/mod_python
> > >
> 


From rsalz at caveosystems.com  Mon Sep 11 09:39:22 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009110810170.25431-100000@saturn.ispol.com>
Message-ID: <39BCE08A.4758A8DC@caveosystems.com>

> What I'd like to know is - how likely really is it that someone would be
> passing anything more complex than a couple of flags between handlers?

Well, we need it. :)

All sorts of authen state, for example: client certificate, database
cursor for their account, etc.

Yes, we could stringify everything and put it in the request table, but
that's too inefficient (and sometimes not feasible or possible).  Should
I really have to call "pickle" every time I want to keep state within a
single request?

I don't fully understand how mod_python does sub-interpreters; I'll have
to reread the docs.  It never occured to me that there could/would be
different interps for each handler.  I suggest that the docs make it
more clear that the handlers are "stateless".

For us, the cleanest thing is one interp/request, with no state kept
across requests.  That seems most like the "classic" apache processing
model.
	/r$

From jeremy at beopen.com  Mon Sep 11 14:14:46 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] two installation issues w/ Python 2.0b1
Message-ID: <14781.8470.692645.381473@bitdiddle.concentric.net>

I installed mod_python for the first time this morning.  I'm just
learning how to use it.  I ran into a couple of configuration issues,
because I am using Python 2.0b1 on my system.

Issue #1 is that mod_python.c makes explicit reference to a Python
executable named python1.5.  This grabs an old version of Python on my
system and compilation fails because it can't find an include file.
If I replace "python1.5" with "python," it all works fine under Python
2.0.

-------------- next part --------------
*** src/modules/extra/mod_python.c	Mon Sep 11 13:01:20 2000
--- ../mod_python-2.0/src/mod_python.c	Mon May 22 08:14:39 2000
***************
*** 2526,2533 ****
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
--- 2526,2533 ----
   * MODULE-DEFINITION-START
   * Name: python_module
   * ConfigStart
!  PyVERSION=`python1.5 -c "import sys; print sys.version[:3]"`
!  PyEXEC_INSTALLDIR=`python1.5 -c "import sys; print sys.exec_prefix"`
   PyLIBP=${PyEXEC_INSTALLDIR}/lib/python${PyVERSION}
   PyLIBPL=${PyLIBP}/config
   PyLIBS=`grep "^LIB[SMC]=" ${PyLIBPL}/Makefile | cut -f2 -d= | tr '\011\012\015' '   '`
-------------- next part --------------

Issue #2: The installation of modules in site-packages is
significantly easier under Python 2.0, because you can count on
distutils being installed.  Instead of using compileall.py, I wrote a
simple setup.py script that I would recommend for inclusion in the
next release.

-------------- next part --------------
#!/usr/bin/env python

from distutils.core import setup

setup(name = "mod_python",
      version = "2.0",
      author = "Gregory Trubetskoy",
      author_email = "grisha@ispol.com",
      packages = ["mod_python"],
      package_dir = {'': 'lib/python'},
      )
-------------- next part --------------

I also had a problem running the mptest.py script described in the
documentation; so I'm reporting it as recommended by the docs.  I
don't know if the problem results from my use of Python 2.0 or being
confused about how to configure things or something else entirely.

If I run the generic mod_python install, I get an error when I tried
to load http://localhost:8080/test/mptest.py.

    ERROR mod_python: "PythonHandler mptest"

    Traceback (most recent call last):

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 103, in Dispatch 
        module = import_module(module_name, req)

      File
      "/usr/local/lib/python2.0/site-packages/mod_python/apache.py",
      line 246, in import_module 
        exec "import " + module_name

      File "<string>", line 1, in ?

    ImportError: No module named mptest

The problem, near as I can tell, is that the mod_python.apache inserts
"." at the head of sys.path -- but the current working directory is
"/".  There's no way "." would work unless apache or mod_python
explicitly changed the cwd to the directory that contains mptest.py.

So I changed the relevant lines in apache.py to do that:

    # unless pythonpath is set explicitely
    if pythonpath is not None:
        sys.path = eval(pythonpath)
    else:
        dir, file = os.path.split(req.filename)
        sys.path.insert(0, dir)
##        # add '.' to sys.path 
##        if '.' not in sys.path:
##            sys.path[:0] = ['.']

Now it works.  The test script prints "Hello World!"

Any idea what went wrong?  Have I done something naive in my
configuration of Apache or mod_python?  What component is responsible
for making the chdir call?

-- Jeremy Hylton <http://www.python.org/~jeremy/>
From grisha at ispol.com  Mon Sep 11 14:37:25 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BCE08A.4758A8DC@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>

On Mon, 11 Sep 2000, Rich Salz wrote:

> I don't fully understand how mod_python does sub-interpreters; I'll have
> to reread the docs.

The things you should read are:

The top of
http://www.modpython.org/live/mod_python-2.5/doc/pythonapi.html

as well as
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpreter
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerDirectory
http://www.modpython.org/live/mod_python-2.5/doc/directives.html#PythonInterpPerServer

> It never occured to me that there could/would be different interps for
> each handler.

This would happen for example if authentication is handled by an
application entirely different from the one creating content. If your
PyhtonAuthenHandler is in the httpd.conf file and the app is driven by a
PythonHandler in an .htaccess file, you'd have the same request, but
different handlers would have different suninterpreters.

> I suggest that the docs make it more clear that the handlers are
> "stateless".

...or make ways to retain state... :-)

Here is a suggestion - if I provided a way to store a pointer to a Python
object in notes - would that solve your problem? You create the object,
then call some function that returns a string that you can store in
notes. Then you can call another function that you pass that string
and it will return the Python object. That way mod_python does not need to
concern itself with the context in which the object is used, and you can
pass the object between handlers.

> For us, the cleanest thing is one interp/request, with no state kept
> across requests.  

In most cases there would be one interp per request, or you can ensure it
by using the PythonInterpreter directive. For example, sticking something
like "PythonInterpreter MyOnlyInterpreter" into httpd.conf would make the
whole server run under one interpreter.

> That seems most like the "classic" apache processing model.

Apache was designed with multiple users and multiple applications in mind.
That's why it supports .htaccess files. Mod_python's subinterpreters
extend that notion. You can have two different application with clashing
module names run on the same server with no problems because they could be
run in different subinterpreters. Or you can have two instances of the
same application run in separate subinterpreters. Try that with mod_perl.


Grisha



From rsalz at caveosystems.com  Tue Sep 12 10:49:18 2000
From: rsalz at caveosystems.com (Rich Salz)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
References: <Pine.LNX.4.21.0009111136240.27645-100000@saturn.ispol.com>
Message-ID: <39BE426E.153BC5C5@caveosystems.com>

> Here is a suggestion - if I provided a way to store a pointer to a Python
> object in notes - would that solve your problem? You create the object,
> then call some function that returns a string that you can store in
> notes.

Yes.  That's what I was thinking of in my first note (the "%p" being the
ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
what the inferences are for referencing counting -- will I explicitly
call "del" on what I get back?

(Wouldn't it have been nice if Py_INCREF returned its input param? :)

Is the request_rec notes field mapped to a python list?  Could/should it
be?

> Try that with mod_perl.

:)  First I have to understand it.

From grisha at ispol.com  Tue Sep 12 11:46:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121139291.28608-100000@saturn.ispol.com>

Yes, reference counting will be one problem with this.... I think a better
alternative would be to do it the way you suggested, but there would be
one dictionary per interpreter. So you won't be able to pass objects
between interpreters, *and* you don't have to worry about reference
counting.

On Tue, 12 Sep 2000, Rich Salz wrote:

> > Here is a suggestion - if I provided a way to store a pointer to a Python
> > object in notes - would that solve your problem? You create the object,
> > then call some function that returns a string that you can store in
> > notes.
> 
> Yes.  That's what I was thinking of in my first note (the "%p" being the
> ANSI C way to make stringify a pointer -- atol is a hack).   Not sure
> what the inferences are for referencing counting -- will I explicitly
> call "del" on what I get back?
> 
> (Wouldn't it have been nice if Py_INCREF returned its input param? :)
> 
> Is the request_rec notes field mapped to a python list?  Could/should it
> be?
> 
> > Try that with mod_perl.
> 
> :)  First I have to understand it.
> 


From grisha at ispol.com  Tue Sep 12 11:48:10 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:27 2004
Subject: [mod_python] Passing data across handlers
In-Reply-To: <39BE426E.153BC5C5@caveosystems.com>
Message-ID: <Pine.LNX.4.21.0009121146370.28608-100000@saturn.ispol.com>

On Tue, 12 Sep 2000, Rich Salz wrote:

> Is the request_rec notes field mapped to a python list?  Could/should it
> be?

req.notes is an mptable object. It's a Python mapping to an Apache
table. Apache tables are sort of like dictionaries, except they work only
with strings. The nice thing about them is that Apache manages the memory.

Grisha


From miguel at yorku.ca  Tue Sep 12 17:40:35 2000
From: miguel at yorku.ca (Miguel Marques)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Python 1.6...
Message-ID: <20000912174035B.miguel@yorku.ca>

Hi

Has anyone gotten 2.5 to work with Python 1.6?
TIA

						Miguel

C. Miguel Marques, York University, Computing & Network Services
e-mail: miguel@yorku.ca, voice: (416)736-2100x22684, fax: (416)736-5830

From jeremy at beopen.com  Wed Sep 13 08:01:07 2000
From: jeremy at beopen.com (Jeremy Hylton)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Python 1.6...
In-Reply-To: <20000912174035B.miguel@yorku.ca>
References: <20000912174035B.miguel@yorku.ca>
Message-ID: <14783.27779.744392.301326@bitdiddle.concentric.net>

I have gotten it to work with Python 2.0b1.  

Jeremy

PS I don't think there's much point to worrying about 1.6.

From walter at livinglogic.de  Thu Sep 14 19:06:04 2000
From: walter at livinglogic.de (Walter Doerwald)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] mod_python 2.5 installation problems
Message-ID: <200009141906040375.00FD0EC6@mail.tmt.de>

Hello all!

I'm having trouble installing mod_python 2.5.
Starting apache gives me the following:

> /usr/sbin/httpd -X
Syntax error on line 20 of /usr/local/etc/httpd/httpd.conf:
Cannot load /usr/lib/apache/mod_python.so into server: /usr/lib/apache/mod_python.so: undefined symbol: openpty

The system is:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

Line 20 of /usr/local/etc/httpd/httpd.conf is:
	LoadModule python_module /usr/lib/apache/mod_python.so

Any help would be appreciated!

Bye,
   Walter D?rwald

-- 
Walter D?rwald ? LivingLogic AG ? Bayreuth, Germany ? www.livinglogic.de


From whitaker at isharp.com  Wed Sep 20 13:45:41 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
Message-ID: <39C921F5.E912296F@isharp.com>

Hello all,

I have used this as my guide:
"http://www.modpython.org/live/mod_python-2.5/doc/installation.html"

My host o/s: SunOS 2.7 Generic_106542-04 i86pc

I statically linked mod_python into my apache 1.3.9 httpd
and moved it into place, then restarted the daemon.  Telnet
to port 80 shows:

Server: Apache/1.3.9 (Unix) mod_python/2.5 Python/1.5.2

I followed the instructions in bullet points 3-7 in section "3. Testing"
in installation.html, as my reading of points 1-2 indicates those
steps apply to the DSO option only.

I then created a file "mptest.py" as indicated in the instructions,
(bullet point 6) mode 755 in /usr/local/apache/cgi-bin/test, 
which is world readable (httpd runs as user "http").

My first .htaccess in the same directory contained the following,
as per the instructions:

AddHandler python-program .py
PythonHandler mptest
PythonDebug

I tried to call mptest.py via CGI, with this error_log output (attn
Gregory):

[Wed Sep 20 12:49:52 2000] [alert]
/usr/local/apache/cgi-bin/test/.htaccess: 
PythonDebug must be On or Off

...after which I modified .htaccess as follows ("On" switch):

AddHandler python-program .py
PythonHandler mptest
PythonDebug On

Trying again, I get the following error_log output:

make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Wed Sep 20 13:10:24 2000] [error] python_handler: make_obcallback
returned no obCallBack!

My httpd.conf contains the following:

<Directory "/usr/local/apache/cgi-bin">
    AllowOverride All
    Options ExecCGI
    Order allow,deny
    Allow from all
</Directory>

Insight, anyone?  I'm not sure if the contents of these archives
contain insight relevant to my problem:

"http://www.modpython.org/pipermail/mod_python/2000-June/000091.html"
"http://www.modpython.org/pipermail/mod_python/2000-June/000092.html"

Any help would be greatly appreciated,
Russell

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From grisha at ispol.com  Wed Sep 20 18:11:01 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
In-Reply-To: <39C921F5.E912296F@isharp.com>
Message-ID: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>


On Wed, 20 Sep 2000, Russell Whitaker wrote:

> [Wed Sep 20 12:49:52 2000] [alert]
> /usr/local/apache/cgi-bin/test/.htaccess: 
> PythonDebug must be On or Off

noted

> <Directory "/usr/local/apache/cgi-bin">
>     AllowOverride All
>     Options ExecCGI

You do not need CGI since mod_python has nothing to do with it whatsoever.

>     Order allow,deny
>     Allow from all
> </Directory>
> 
> Insight, anyone?  I'm not sure if the contents of these archives
> contain insight relevant to my problem:

I have a feeling it is a permissions problem with the mod_python package
that you were supposed to stick in yout python path. Check which userid
Apache runs as and if that user can read those files.

Grisha


From whitaker at isharp.com  Wed Sep 20 15:43:37 2000
From: whitaker at isharp.com (Russell Whitaker)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Re: [PROBLEM] "python_handler: make_obcallback returned no obCallBack"
References: <Pine.LNX.4.21.0009201808370.3822-100000@saturn.ispol.com>
Message-ID: <39C93D99.A14997FE@isharp.com>

Hello Gregory!

Gregory Trubetskoy wrote:
> 
> On Wed, 20 Sep 2000, Russell Whitaker wrote:
> 
> > [Wed Sep 20 12:49:52 2000] [alert]
> > /usr/local/apache/cgi-bin/test/.htaccess:
> > PythonDebug must be On or Off
> 
> noted

Cool.

> 
> > <Directory "/usr/local/apache/cgi-bin">
> >     AllowOverride All
> >     Options ExecCGI
> 
> You do not need CGI since mod_python has nothing to do with it whatsoever.

Ah, that ExecCGI applies to the entire $SERVERROOT/cgi-bin/ for the
Apache
server.  It was there in httpd.conf for all the other guys in my shop
who 
_don't_ yet do Python.  ;-)

It shouldn't have any adverse affect on the workings of mod_python, as
you point out.

> 
> >     Order allow,deny
> >     Allow from all
> > </Directory>
> >
> > Insight, anyone?  I'm not sure if the contents of these archives
> > contain insight relevant to my problem:
> 
> I have a feeling it is a permissions problem with the mod_python package
> that you were supposed to stick in yout python path. Check which userid
> Apache runs as and if that user can read those files.

Checked permissions, everything in in PATHONPATH is world readable, no
problem there.  However, you gave me the hint I needed.  See, this
is where mod_python installed:

/usr/local/lib/python1.5/site-packages/mod_python-2.5/lib/python/mod_python

...because (and I don't know why) I skipped (whoops) bullet point 2 in 
section 1.) "Installing Python Libraries".  Symlinking that directory
as 
/usr/local/lib/python1.5/site-packages/mod_python fixed the problem.

Hello World!

Thanks,
Russell

> 
> Grisha

-- 
Russell Whitaker
whitaker@NOSPAM.best.com

From rutt at chezrutt.com  Thu Sep 21 07:43:56 2000
From: rutt at chezrutt.com (John Ruttenberg)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Loading mod_python.so into apache-1.3.12 on redhat 6.2 segfaults
Message-ID: <200009211143.HAA16011@mojo.chezrutt.com>

I've using both the 2.4 rpm due to Mads Kiilerich and compiling 2.5 with apxs
and the results are the same -- 'httpd -X' segfaults.  The minimum change to
httpd.conf for this to happen is to add:

    LoadModule python_module modules/mod_python.so

before any of the other LoadModule lines.  (My httpd.conf is available from
http://chezrutt.com/~rutt/httpd.conf if you want to take a look.)

I've also tried statically compiling apache according to the instructions that
come with it, but then httpd complains about the first LoadModule statement:

    [root@mojo src]# httpd -X
    Syntax error on line 208 of /etc/httpd/conf/httpd.conf:
    Invalid command 'LoadModule', perhaps mis-spelled or defined by a module not in\
    cluded in the server configuration
    [root@mojo src]#

Perhaps I don't know how to configure it to allow loadable modules?

From okamoto at xfiles.intercon.hp.com  Wed Sep 27 15:07:25 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
Message-ID: <200009272207.PAA13041@xfiles.intercon.hp.com>

Hello,

I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
mod_python just fine, and have configured Apache and created an mptest.py
as the Installation documentation says.  However, when I try to access
it, I get the following error:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
    in Dispatch module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
    in import_module module = __import__(module_name)

ImportError: No module named mptest

I've checked the ML archives, and saw a message by Jeremy Hylton that was
almost exactly the problem I've encountered, but he was using mod_python
2.0, not 2.5.

Can someone give me some additional suggestions of what to try next?

Thanks,
Jeff

From benno at sesgroup.net  Thu Sep 28 10:51:18 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Wed, Sep 27, 2000 at 03:07:25PM -0700
References: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <20000928105118.A13402@bob.sesgroup.net>

Hi Jeff!

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?


I ran into this same problem, it means that mptest is not in the path correctly.

My httpd.conf has this in it:



<Directory /var/www>
AddHandler python-program .py
PythonHandler mptest
PythonDebug on
</Directory>


The trick is that whatever is specified as the directory will get added to the
sys.path when trying to find the module.

If your apache root is somewhere else like (/home/www or something) then add that
instead.


Cheers,

Ben


(oh and as my first post to the list I will add my congrats and thanks to the 
author for such a great program!)

From grisha at ispol.com  Thu Sep 28 09:08:58 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not
 playing well together
In-Reply-To: <200009272207.PAA13041@xfiles.intercon.hp.com>
Message-ID: <Pine.LNX.4.21.0009280907400.9717-100000@saturn.ispol.com>

Where is your PythonHandler directive? It needs to be either in an
.htaccess file or inside <Directory> tags matching the directory where
mptest.py resides, or you need to have a PythonPath directive with the
directory where mptest.py is.

--
  Gregory (Grisha) Trubetskoy
       grisha@ispol.com

On Wed, 27 Sep 2000, Jeff Okamoto wrote:

> Hello,
> 
> I've got Apache 1.3.12, Python 1.6, and mod_python 2.5.  I can compile
> mod_python just fine, and have configured Apache and created an mptest.py
> as the Installation documentation says.  However, when I try to access
> it, I get the following error:
> 
> Mod_python error: "PythonHandler mptest"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135,
>     in Dispatch module = import_module(module_name, req)
> 
>   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276,
>     in import_module module = __import__(module_name)
> 
> ImportError: No module named mptest
> 
> I've checked the ML archives, and saw a message by Jeremy Hylton that was
> almost exactly the problem I've encountered, but he was using mod_python
> 2.0, not 2.5.
> 
> Can someone give me some additional suggestions of what to try next?
> 
> Thanks,
> Jeff
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From aiglauer at yahoo.com  Thu Sep 28 06:47:22 2000
From: aiglauer at yahoo.com (Alexis Iglauer)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache request handler examples
Message-ID: <20000928134722.16597.qmail@web2203.mail.yahoo.com>

Hi

I have written some cgi apps based on mod_python and
am now having a go writing my own handler.  I seem to
be running into various difficulties (like how to
convince Netscrape that this is html and not
text/plain), most of which I have been able to sort
out but I am wondering whether there are there any
code examples/docs out there that could make this
easier.  Surely I am not the first to have had these
problems?

So far I have used the mod_python docs, the apache API
(which is not too informative) and the PERL docs on
the apache module (which are quite helpful).  

Have I missed a useful resource somewhere?  Is there a
site where I could start adding to a FAQ on the
subject?

Regards
Alexis

__________________________________________________
Do You Yahoo!?
Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
http://photos.yahoo.com/

From grisha at ispol.com  Thu Sep 28 10:34:43 2000
From: grisha at ispol.com (Gregory Trubetskoy)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache request handler examples
In-Reply-To: <20000928134722.16597.qmail@web2203.mail.yahoo.com>
Message-ID: <Pine.LNX.4.21.0009281032510.9753-100000@saturn.ispol.com>

There is no resource like that that I know of, but if anyone wants to
contribute, they are more than welcome.

There is an O'Reilly book - "Writing Apache Modules with Perl and C". It
is, of course, C and Perl specific, but I think it's a great book to read
if you want to understand mod_python better.

Grisha


On Thu, 28 Sep 2000, Alexis Iglauer wrote:

> Hi
> 
> I have written some cgi apps based on mod_python and
> am now having a go writing my own handler.  I seem to
> be running into various difficulties (like how to
> convince Netscrape that this is html and not
> text/plain), most of which I have been able to sort
> out but I am wondering whether there are there any
> code examples/docs out there that could make this
> easier.  Surely I am not the first to have had these
> problems?
> 
> So far I have used the mod_python docs, the apache API
> (which is not too informative) and the PERL docs on
> the apache module (which are quite helpful).  
> 
> Have I missed a useful resource somewhere?  Is there a
> site where I could start adding to a FAQ on the
> subject?
> 
> Regards
> Alexis
> 
> __________________________________________________
> Do You Yahoo!?
> Yahoo! Photos - 35mm Quality Prints, Now Get 15 Free!
> http://photos.yahoo.com/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 


From okamoto at xfiles.intercon.hp.com  Thu Sep 28 10:15:51 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000928105118.A13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 28, 100 10:51 am
Message-ID: <200009281715.KAA15395@xfiles.intercon.hp.com>

> My httpd.conf has this in it:
> 
> <Directory /var/www>
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug on
> </Directory>

The relevant section for me is:

<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>

<Directory /opt/apache>
    AddHandler python-program .py
    PythonHandler mptest
    PythonDebug On
</Directory>

> The trick is that whatever is specified as the directory will get added to the
> sys.path when trying to find the module.
> 
> If your apache root is somewhere else like (/home/www or something) then add that
> instead.

Sadly, it's still not working.  It's quite sad that the install.html file
doesn't mention putting it inside a Directory directive and that there's
in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Sigh.

Jeff

From benno at sesgroup.net  Fri Sep 29 10:42:34 2000
From: benno at sesgroup.net (Ben Leslie)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <200009281715.KAA15395@xfiles.intercon.hp.com>; from okamoto@xfiles.intercon.hp.com on Thu, Sep 28, 2000 at 10:15:51AM -0700
References: <20000928105118.A13402@bob.sesgroup.net> <200009281715.KAA15395@xfiles.intercon.hp.com>
Message-ID: <20000929104234.F13402@bob.sesgroup.net>

On Thu, 28 Sep 2000, Jeff Okamoto wrote:

> > My httpd.conf has this in it:
> > 
> > <Directory /var/www>
> > AddHandler python-program .py
> > PythonHandler mptest
> > PythonDebug on
> > </Directory>
> 
> The relevant section for me is:
> 
> <Directory />
>     Options FollowSymLinks
>     AllowOverride None
> </Directory>
> 
> <Directory /opt/apache>
>     AddHandler python-program .py
>     PythonHandler mptest
>     PythonDebug On
> </Directory>

That seem correct to me.
 
> > The trick is that whatever is specified as the directory will get added to the
> > sys.path when trying to find the module.
> > 
> > If your apache root is somewhere else like (/home/www or something) then add that
> > instead.
 
> Sadly, it's still not working. 

Is it the same error message? What is in error.log. One thing that you 
might want to try is putting mptest.py into the same directory as apache.py,
this ensures that it is going to be in the correct path. That might help
narrow down the problem. Also you probably need to make sure that the file has
read and execute permission for the apache user.

> It's quite sad that the install.html file
> doesn't mention putting it inside a Directory directive and that there's
> in fact a syntax error in it (PythonDebug *ON*, not PythonDebug).

Yeah well shit happens, guessing it is probably case of the code gaining features
faster than the docs can keep up with (though I'm just a new user, so I am merely
guessing).

Cheers,

Benno

From Matthias.Bauer at LivingLogic.de  Fri Sep 29 10:50:56 2000
From: Matthias.Bauer at LivingLogic.de (Matthias Bauer)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache Segfault
Message-ID: <39D457F0.8DF53FC1@LivingLogic.de>

Hi everybody,

I'm having some severe trouble installing mod_python 2.5 with the
following environment:
	SuSE Linux 7.0
	Python 2.0b1 with threads
	Apache 1.3.12 

I compiled mod_python.so with the following command:

> apxs -I /usr/local/include/python2.0/ -c mod_python.c \ 
> /usr/local/src/Python-2.0b1/libpython2.0.a -lpthread -lutil -lm -lreadline -lncurses

The first LoadModule directive in my httpd.conf file is 

> LoadModule python_module /usr/local/src/mod_python-2.5/src/mod_python.so

Starting apache with the following command:

> httpd -t -f /etc/httpd/httpd.conf -D MODULES 

gives me:

> Syntax OK
> Segmentation fault   

Here is the stack backtrace, when I let the whole thing run in the
debugger:

> (gdb) file /usr/sbin/httpd
> Reading symbols from /usr/sbin/httpd...(no debugging symbols found)...done.
> (gdb) set args -t -f /etc/httpd/httpd.conf -D MODULES
> (gdb) run
> Starting program: /usr/sbin/httpd -t -f /etc/httpd/httpd.conf -D MODULES
> Syntax OK
> (no debugging symbols found)...Cannot access memory at address 0x404db434.
> (gdb) bt
> #0  0x4000ab11 in _dl_debug_state () at dl-debug.c:47
> #1  0x401834c1 in _dl_close () at dl-close.c:199
> #2  0x400b23eb in dlclose_doit (handle=0x80a76a8) at dlclose.c:26
> #3  0x4000a801 in _dl_catch_error () at dl-error.c:117
> #4  0x400b29c1 in _dlerror_run (operate=0x400b23d0 <dlclose_doit>, args=0x80a76a8)
>     at dlerror.c:125
> #5  0x400b2411 in dlclose () at dlclose.c:27
> #6  0x8069cb2 in ap_os_dso_unload ()
> #7  0x80502d9 in ap_get_server_built ()
> #8  0x8051d4b in ap_run_cleanup ()
> #9  0x80509cf in ap_clear_pool ()
> #10 0x8050a38 in ap_destroy_pool ()
> #11 0x80509a3 in ap_clear_pool ()
> #12 0x8050a38 in ap_destroy_pool ()
> #13 0x805ba18 in ap_exists_scoreboard_image ()
> #14 0x805e335 in main ()
> #15 0x400cea8e in __libc_start_main () at ../sysdeps/generic/libc-start.c:93    

Can anybody help me out or give any additional hints?

Thanks,

--- Matthias


------------------------------------------
  Matthias Bauer     -    LivingLogic AG
  Maximilianstr. 2   -    95444 Bayreuth
             www.livinglogic.de 
------------------------------------------

From okamoto at xfiles.intercon.hp.com  Fri Sep 29 12:49:46 2000
From: okamoto at xfiles.intercon.hp.com (Jeff Okamoto)
Date: Fri Jan  9 22:02:28 2004
Subject: [mod_python] Apache 1.3.12, Python 1.6, mod_python 2.5 not playing well together
In-Reply-To: <20000929104234.F13402@bob.sesgroup.net>; from "Ben Leslie" at Sep 29, 100 10:42 am
Message-ID: <200009291949.MAA06080@xfiles.intercon.hp.com>

> > <Directory />
> >     Options FollowSymLinks
> >     AllowOverride None
> > </Directory>
> > 
> > <Directory /opt/apache>
> >     AddHandler python-program .py
> >     PythonHandler mptest
> >     PythonDebug On
> > </Directory>

Some more info: if I change /opt/apache above to /test (and mptest.py is
in htdocs/test), then Apache returns the text of the file.

When it's /opt/apache, the browser returns:

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)

  File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)

ImportError: No module named mptest

and Apache's error log says:

[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: Traceback (most recent call last):
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 135, in Dispatch
    module = import_module(module_name, req)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest:   File "/usr/local/lib/python1.6/site-packages/mod_python/apache.py", line 276, in import_module
    module = __import__(module_name)
[Fri Sep 29 12:46:29 2000] [error] PythonHandler mptest: ImportError: No module named mptest

> One thing that you 
> might want to try is putting mptest.py into the same directory as apache.py,
> this ensures that it is going to be in the correct path. That might help
> narrow down the problem. Also you probably need to make sure that the file has
> read and execute permission for the apache user.

Tried all this, including setting execute permissions.  NFG.

Jeff

