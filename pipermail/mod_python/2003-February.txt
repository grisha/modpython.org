From jdavis-mod-python at empires.org  Sat Feb  1 03:50:58 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] Execution limtis
Message-ID: <200302010350.58418.jdavis-mod-python@empires.org>

Is it possible ot control the max execution time for a single request? I'd 
like to install mod_python in a virtualhosting environment, and I think I can 
control the RAM with an auto-imported setrlimit module, but I don't want to 
control execution time with that because it would kill the process in the 
middle of a request (right?).

If it's not available currently, is it even possible to implement a timeout 
without changing python itself? I would be interested in implementing it if 
someone can help me think of an idea how to do it. I know many other system 
admins would install mod_python if it could be controlled in a way similar to 
php4.

As a convenience, I think it might be helpful to provide config directives to 
setrlimit() the apache process on startup to certain values. Would the 
developers be interested if I were to implement that (I've made 1.3 apache 
modules before, so I figure I could handle some changes to a 2.0 module).

Regards,
	Jeff Davis

From smcnutt at monmouth.com  Sat Feb  1 07:14:29 2003
From: smcnutt at monmouth.com (Scott McNutt)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] Adding an object to connection
Message-ID: <001d01c2c9eb$79196480$232fbfd1@pavilion>

It would be very convenient for my app to know when a
connection is dropped (keepalive timeout or max requests
event occurs on a client connection).

The connection notes are for str types only ... and
req.connection is readonly ... so I'm basically looking for some
way to add an object attribute to the connection ... so I can at
least know when the connection is dropped.

I'd appreciate any ideas, suggestions, comments.

Thank,
--Scott




From LBerezhny at DevIS.com  Sun Feb  2 17:27:34 2003
From: LBerezhny at DevIS.com (Lex Berezhny)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] test.py fails on RH7.2
Message-ID: <1044224854.2178.7.camel@buddha>

Hi,

  I am trying to use the unit testing framework provided with mod_python
for building my own applications. But I was getting a User error when
running the bundled test.py. Below is a patch to test.py that fixes the
issue on my box:

243a244,245
> 			Directive("User", "nobody"),
> 			Directive("Group", "#-1"),

  Not sure if this is an issue only on my box, but thought I'd be a good
user and report it :-)

My setup:

RedHat 7.2
Apache 2.0.44
mod_python 3.0.1
Pyhton 2.2.2

-- 
Lex Berezhny <LBerezhny@DevIS.com>


From grisha at modpython.org  Sun Feb  2 19:51:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <3E3ADAA6.2010707@cs.uchicago.edu>
Message-ID: <20030202194957.W51473-100000@eden.ispol.com>

Someone else reported this "import site" problem, and as far as I can
remember it is actually a bug in Python, not mod_python - perhaps someone
can fill in the details?

Grisha

On Fri, 31 Jan 2003, ganapathy murali krishnan wrote:

>
> I just installed Python-2.3a1 + apache 2.0.44 + mod_python 3.0.1.
> I have one vhost (say vhost) in addition to the main one (say mainhost).
> The vhost has a python program as the main handler (using SetHandler).
> This setup works correctly without any problems on another machine
> (Python 1.5+ apache 1.3 + mod_python something), so the problem is not
> in the handler code itself.
>
> When I run the httpd binary, all is fine. The mainhost serves up html
> files without any problems. The vhost is supposed to serve up .py files.
> When I go to "http://vhost" I get the following error.
>
> ----
> [Fri Jan 31 13:53:00 2003] [error] make_obcallback: could not import
> mod_python.apache.
>
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> ----
>
> The apache.py is in
> /opt/python/default/lib/python2.3/site-packages/mod_python/apache.py.
>
> I tried many of the suggested workarounds, I couldn't get any of them
> to work. The content of my httpd.conf inside the <VirtualHost> and
> </VirtualHost> is enclosed below.
>
> ------------
>    SetHandler python-program
>    PythonDebug on
>    # All handlers are stored in a different directory, for security
>    PythonPath "sys.path+['/stage/w3serv/vhost.cs.uchicago.edu']"
>
>    # This module handles reloading modules on demand
>    PythonInitHandler handlers.init
>
>    # Fire up the first Python handler
>    PythonTransHandler handlers.translate
>
>    # Logging configuration
>    # PythonOption Log off
>    PythonOption Log /stage/w3serv/vhost/logs/debug.log
>    # Tell the Python site to ignore these paths,
>
>    PythonOption DontHandle /icons:/images:/~:/i/:/files/:/pipermail
>
>    # Tell the Python handler to ignore these extensions
>
>    PythonOption DontHandleExt html:htm:php:php3:phps:php4:cgi
>
>
>
>    # Then tell Apache how to handle them.
>
>    Alias /icons /stage/w3serv/common/docs/icons
>
>    Alias /images /stage/w3serv/common/docs/images
>
>    UserDir disable
>
> -----
>
> Any help would be appreciated.
>
> - Murali
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Sun Feb  2 19:54:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] Adding an object to connection
In-Reply-To: <001d01c2c9eb$79196480$232fbfd1@pavilion>
Message-ID: <20030202195328.J51473-100000@eden.ispol.com>

The connection object is still the old-style python object, and thus you
cannot add attributes to it. I plan to rewrite it (as well as the server
object), but it won't be in 3.0.2 - perhaps 3.0.3?

Grisha

On Sat, 1 Feb 2003, Scott McNutt wrote:

> It would be very convenient for my app to know when a
> connection is dropped (keepalive timeout or max requests
> event occurs on a client connection).
>
> The connection notes are for str types only ... and
> req.connection is readonly ... so I'm basically looking for some
> way to add an object attribute to the connection ... so I can at
> least know when the connection is dropped.
>
> I'd appreciate any ideas, suggestions, comments.
>
> Thank,
> --Scott
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mateusz at ant.gliwice.pl  Mon Feb  3 16:03:59 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
Message-ID: <200302031603.59186.mateusz@ant.gliwice.pl>

shell interpreter is able use that encoding:
>>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
g\xc4\x99\xc5\x9bl'
while mod_python's interpreter refuses ...

Any ideas why ?
TIA

-- 
Mateusz Korniak
easy.com  easy.go


From Mongryong at sympatico.ca  Mon Feb  3 11:49:57 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
In-Reply-To: <200302031603.59186.mateusz@ant.gliwice.pl>
References: <200302031603.59186.mateusz@ant.gliwice.pl>
Message-ID: <1044290998.3112.4.camel@refugeeMedia>

On Mon, 2003-02-03 at 10:03, Mateusz Korniak wrote:
> shell interpreter is able use that encoding:
> >>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
> 'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
> g\xc4\x99\xc5\x9bl'
> while mod_python's interpreter refuses ...
> 
> Any ideas why ?
> TIA
> 
Hmmm...coincidentally, there are encoding in issues with
mod_python/Apache and XML libraries such as 4Suite's.  Up to this point,
the problem is unresolved.  It appears the encoding library is not being
properly started by mod_python. 



From agenkin-lst-mod_python at thpoon.com  Mon Feb  3 21:46:03 2003
From: agenkin-lst-mod_python at thpoon.com (Arcady Genkin)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] cannot import mod_python.apache error
References: <20030202194957.W51473-100000@eden.ispol.com>
Message-ID: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>

"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:

> Someone else reported this "import site" problem, and as far as I can
> remember it is actually a bug in Python, not mod_python - perhaps someone
> can fill in the details?

When installing Python from sources, "make install" installs the files
in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
permissions for everything else are fine).  I have to manually fix
them every time I (re)compile Python.  When I forget to fix them, the
error message that I am seeing is exactly:

      [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
      import mod_python.apache.

Perhaps this is what was causing the grief for the original poster,
since it looks awfully similar to the subject line of this thread.
-- 
Arcady Genkin : CDF Systems Administrator
http://www.cdf.toronto.edu/~agenkin/contact.html

guilt is the cause of more disauders
than history's most obscene marorders (E.E. Cummings)

From Mongryong at sympatico.ca  Mon Feb  3 22:13:01 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> 
	<uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <1044328382.3116.249.camel@refugeeMedia>

On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I can
> > remember it is actually a bug in Python, not mod_python - perhaps someone
> > can fill in the details?
> 
> When installing Python from sources, "make install" installs the files
> in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
> permissions for everything else are fine).  I have to manually fix
> them every time I (re)compile Python.  When I forget to fix them, the
> error message that I am seeing is exactly:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  He's been quiet ever since, so I'm assuming that solved his
problem.



From dustin at ywlcs.org  Mon Feb  3 21:46:41 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <20030204034640.GH14728@eleanor.internal.ywlcs.org>

On Mon, Feb 03, 2003 at 09:46:03PM -0500, Arcady Genkin wrote:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

This seems to be a very common error, and the result of an enormous variety
of problems.  Would it be possible to, in circumstances that normally trigger
this log message, initiate some series of checks for common problems, and
produce more specific messages?  This wouldn't impact normal operational
efficiency (since the extra checks would only be triggered when this message
is produced), but would probably significantly reduce messages about
installation problems.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

From gmurali at cs.uchicago.edu  Mon Feb  3 23:23:45 2003
From: gmurali at cs.uchicago.edu (Murali krishnan Ganapathy)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <1044328382.3116.249.camel@refugeeMedia>
Message-ID: <000001c2cc0d$972b8c90$e8e38780@triangle>

[Original Poster] I thought I replied to the list about this problem
before. May be I forgot to CC the list. I tried installing Python 2.2.2,
I still got the same error. For the 2.3a1 installation, I had checked
all 
the permissions and all the usual pit falls, they were not the cause.
Before I checked the permissions and the usual stuff for the 2.2.2
installation,
another person had identified it as a bug in Python 2.3a1 (It did not
try to 
import the modules under some circumstances) and suggested a one line
patch. 
That solved the problem. I think you needed to add one line 
'_PyImportHooks()' (or something like that) to the file pythonrun.c some
where near
line 350 (I am quoting all this from memory).

So right now, I have Python 2.3a1 + mod_python 3.0.1 + Apache 2.0.44 +
PHP 4.3 + ...
working together. However, I am getting a different kind of error. The
apache processes
are catching a SIGNAL 11 and terminating. However, it is not
mod_python's fault.
The python based dispatcher code, which works with Python 1.5, no longer
works with 2.3a1.
I haven't got around to finding the exact problem. Once I do, I will
tell you guys the 
exact problem, and you guys can tell me if this is another bug in Python
2.3a1 or my code 
has to be rewritten.

Thanks for the solution. And sorry for forgetting to CC to the list.

- Murali

PS: When I reply to any of the mailing messages, neither the To field,
nor the CC field
has the list address. I guess in my previous posting I forgot to add in
the list address
by hand.

-----Original Message-----
From: Mongryong [mailto:Mongryong@sympatico.ca] 
Sent: Monday, February 03, 2003 9:13 PM
To: Arcady Genkin
Cc: Gregory (Grisha) Trubetskoy; ganapathy murali krishnan;
mod_python@modpython.org
Subject: Re: [mod_python] cannot import mod_python.apache error


On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I 
> > can remember it is actually a bug in Python, not mod_python - 
> > perhaps someone can fill in the details?
> 

> I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  
> He's been quiet ever since, so I'm assuming that solved his problem.






From gmurali at cs.uchicago.edu  Tue Feb  4 18:23:56 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] mp 3.0.1 + Python 2.3: child pid nnnnn exit signal Segmentation fault
 (11)
References: <3E3ADAA6.2010707@cs.uchicago.edu>	<1044049878.13789.42.camel@refugeeMedia>	 <3E3AFAB4.8070205@cs.uchicago.edu> <1044053589.1599.59.camel@refugeeMedia>	 <3E3B03A6.60009@cs.uchicago.edu> <1044058560.27207.3.camel@rye>
Message-ID: <3E40599C.4000705@cs.uchicago.edu>

I have a Apache 2.0.44 + mp 3.0.1 (Python 2.3a1) installed.
If I use a simple PythonHandler directive as specified in the
mod_python tutorial things work fine. However when I start using
PythonInitHandler and PythonTransHandler directives the apache child
processes start dying with a Signal 11. By inserting "print" statements
I have learnt the following.

The PythonInitHandler is being called and successfully completes.
The PythonTransHandler is being called and sucessfully completes.
Just before the "return apache.OK", it (transhandler) calls

req.add_handler("PythonHandler", "handlers.dispatch")

The file $SERVERROOT/handlers/dispatch.py is readable by all.
The first line of the handler function in dispatch.py never
gets executed!

The browser tries the same URL about 6 times before giving up with a
"Document contains no data" error. On the server side, the error_log of
apache, contains

----------
[Tue Feb 04 17:46:05 2003] [notice] mod_python: (Re)importing module 
'handlers.translate'
[Tue Feb 04 17:46:06 2003] [notice] child pid 17086 exit signal 
Segmentation fault (11)
----------

about once for each time the browser requests for the page.

The main apache process doesnt seem to be affected, in that after all 
this happens, it continues to wait to service other requests. So in 
effect html, php and cgi's all work fine but .py files dont.

Can anyone shed some light on this?

- Murali


From dmitry at deluxoft.com  Sat Feb  8 14:03:30 2003
From: dmitry at deluxoft.com (Dmitry Dembinsky)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] mod_python 2.7 documentation inconsistency
Message-ID: <001301c2cf6a$18918c30$1400a8c0@LAPTOP>

Hello,

I'm using mod_python 2.7.8 with Apache 1.3.27 running on RH7.3

When I was trying to use mod_python.publisher module
I've encountered the following inconsistency in a documentation:

Section 3.4 ("Publisher Handler Makes it Easy") contains a sample HTML
form.
The line specifying form handler is the following:

  <form action="form/email" method="POST">

While it should be:

  <form action="form.py/email" method="POST">

to make an example working.

(Or, probably "AddHandler python-program .py" should be replace with
"SetHandler python-program" ?)

As I've seen, the latest doc for mod_python 3.0.1 doesn't have this
inconsistency.

Regards,
Dmitry Dembinsky <dmitry@deluxoft.com>


From chip at cyan.com  Mon Feb 10 16:03:58 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 21:47:15 2004
Subject: [mod_python] layering mod_auth_digest and mod_python authentication in apache2
Message-ID: <20030211000358.M11624@cyan.com>

I am trying to setup mod_auth_digest to work with a mod_python script.

What I want is AuthDigest to decode the username, and password, and then to
pass this onto my mod_python authenticationn scripts, without having to
re-write the entire mod_auth_digest in Python.

I have been tyying to use the mod_python's PythonAuthenHandler[1] and AuthType
Digest in my httpd.conf, but AuthDigest is always rejecting the
users/passwords, because I am not using a localfile at all.

I thought mod_auth_digest would have somthing simular to mod_auth_ldap's
AuthLDAPAuthoritative[2], which can pass authentication onto the next handler,
but I don't think that exists for mod_auth_digest

Here is the basic plan, the HTTP client, uses Digest authentication to apache,
which passes it onto mod_auth_digest, who will NOT find it in a local text
file, but instead will pass on the request with the decoded username and
password to mod_python's PythonAuthenHandler where i will use my own python
scripts to validate the user information.

Is what I am trying todo even possible, and if it is, what do i need todo?

Thanks,
-chip

[1] http://www.modpython.org/live/mod_python-3.0.1/doc-html/node54.html
[2] http://httpd.apache.org/docs-2.0/mod/mod_auth_ldap.html#authldapauthoritative

From skremer at q.cis.uoguelph.ca  Wed Feb 12 14:49:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Date persistence accross connections.
Message-ID: <Pine.LNX.4.44.0302121437360.7578-100000@q.cis.uoguelph.ca>

Hi,

I would like to store information in a variable and be able to access it 
with subsequent http requests.

It is my understanding that each virtual server name has its own namespace 
(which is no problem since all my information is specific to the 
namespace), and that httpd is now threaded instead of multiple processes.  
So should I be able to just store a variable in my local namespace and 
then return to it the next time I make an http connection?  Or might my 
next connect be executing python in a different namespace for some 
reason?!?

Sorry if I'm way off base here.  Any advice much appreciated.

	-SK

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.8913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From gnb at itga.com.au  Thu Feb 13 08:21:18 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: Your message of Wed, 12 Feb 2003 14:49:03 -0500.
Message-ID: <200302122121.IAA02700@lightning.itga.com.au>

skremer@q.cis.uoguelph.ca said:
> So should I be able to just store a variable in my local namespace and
>  then return to it the next time I make an http connection?  Or might
> my  next connect be executing python in a different namespace for some
>  reason?!? 

It might work in certain restricted circumstances, but it's likely to be 
unreliable.  You can't know when Apache will decide it's time for a new 
process.  You can't know when the apache process gets re-configured or 
restarted.  You can't know when another unrelated session to the same 
application will begin. 

You would be much better off to look at some of the session management tools
that work with mod_python and handle the problem properly.  I use Albatross
(http://www.object-craft.com.au/projects/albatross/) but that does a whole 
heap more than just session management.  Others have recommended PSO 
(http://www.scriptfoundry.com/modules/pso/).

Greg.




From thanos at 0x01.com  Wed Feb 12 18:28:45 2003
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Re: pso and mod_python
In-Reply-To: <20030212145018.GA1414@mico>
References: <20030211202535.GI2050@mico>
            <20030211224116.73074.qmail@0x01.com>
            <20030212145018.GA1414@mico>
Message-ID: <20030212232845.79816.qmail@0x01.com>

yes I forgot to mention the following: 

mod_python by default looks for a method in your module called "handler"
so given this line in your .htaccess:
PythonHandler test 

your should add
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border'
handler = TestHandler().handle 

On the other hand with mod_python you can stipulate which handler to use:
PythonHandler test:TestHandler.handle 

But your handler class muts take a request object as an argument to the 
constructor. pso's TemplateHandler does not have a CTOR defined (Opps)
so you will have to add your own:
class TestHandler(TemplateHandler):
   def __init__(self, req):
        TemplateHandler.__init__(self) 

I hope this helps 

thanos 

 

 

 


Jeffrey Clement writes: 

> Thank you for your help.  I think I'm still missing something.  What is
> test.py? 
> 
> If I wanted: 
> 
> from pso.service import ServiceHandler
> from pso.handlers import TemplateHandler
> from dbsession import CookieDBImpl 
> 
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border' 
> 
> if __name__=='__main__':
>     ServiceHandler().run(TestHandler().handle, CookieDBImpl) 
> 
> How do I make this get run by mod_python.  It needs a handle method
> right?  And that takes a requestInfo parameter.  I assume the
> pso.modpython::fixup adds the pso() method to the request handler but
> how do I use this with my templateHandler? 
> 
> Thank you for all your help.  I'm finding PSO to be awesome for thhe
> current project I'm working on only just getting hung up once in a
> while. 
> 
> Jeff 
> 
> 
> On Tue, Feb 11, 2003 at 05:41:16PM -0500, thanos@0x01.com wrote:
>> Jeffrey,  
>> 
>> You are right: the problem lies with your .htaccess file. It should be:  
>> 
>>  
>> 
>> 
>> AddHandler python-program .py
>> PythonHandler test
>> PythonFixupHandler pso.modpython::fixup
>> PythonLogHandler pso.modpython::cleanup  
>> 
>> You have to set the PythonFixupHandler and PythonLogHandler so pso can set 
>> thing up such as the session handling.  
>> 
>> A look through the pso guide 
>> [http://sourceforge.net/docman/display_doc.php?docid=11314&group_id=49265] 
>> shows me that this information is missing. It is
>> metioned in the "Easy mod_python Session Handling with pso.session" how-to
>> [http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html] so I 
>> guess I am not completly guilty!  
>> 
>> Also trying out the sample mod_python code in the guide, i find things are 
>> broken. So I will post two bug reports to fix these problems.  
>> 
>> 
>> thanos  
>> 
>>  
>> 
>>  
>> 
>> 
>> Jeffrey Clement writes:  
>> 
>> >Hi there, 
>> >
>> >I'm trying to use PSO with mod_python and having some difficulties that
>> >I hope you can assist me with. 
>> >
>> >I have my appliaction: (test.py)
>> >=====================================================================
>> >from pso.service import ServiceHandler
>> >from pso.handlers import TemplateHandler
>> >from dbsession import CookieDBImpl 
>> >
>> >class TestHandler(TemplateHandler):
>> >    DEFAULT_TEMPLATE='cat_border' 
>> >
>> >if __name__ == '__main__':
>> >    ServiceHandler().run(TestHandler().handle, CookieDBImpl)
>> >===================================================================== 
>> >
>> >This above script runs fine as a CGI script.  However I have no idea how
>> >to make it run as a mod_python script. 
>> >
>> >I've got modpython installed and tested (I know it's OK) but It won't
>> >run my scripts.  I suspect the problem is I'm not understanding what
>> >exactly goes in .htaccess 
>> >
>> >I currently have:
>> >  AddHandler python-program .py
>> >  PythonHandler test.py
>> >  PythonDebug On 
>> >
>> >I know mod_python looks for a method handle.  Is there a mod_python
>> >wrapper that does I'm supposed to set as my PythonHandler?
>> >Thank you, Jeff 
>> > 
>> 
>>  
>> 
>> >-- 
>> >Jeff Clement 

>>  
>> 
>> 

From gashalot at gashalot.com  Thu Feb 13 11:36:50 2003
From: gashalot at gashalot.com (Robert Gash)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
Message-ID: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>

I recently snagged the binary packages for apache-2.0.44 and
mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
package repository.  The system I'm installing on is a 4.7-RELEASE box,
and I'm getting the following error from Apache:

root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"

I have attempted to compile mod_python myself and I have attempted to
install the binary package, does anyone know how to correct this error?

-R

-- 
Robert Gash, gashalot@gashalot.com
(Web) http://gashalot.com/
(PGP) http://gashalot.com/pgpkeys.txt

From grisha at modpython.org  Thu Feb 13 12:01:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
In-Reply-To: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>
Message-ID: <20030213115857.I7394-100000@eden.ispol.com>

If you're using precompiled packages, I don't think you'll be able to get
it going. Try compiling apache2 from ports, but make sure to edit the
Makefile in the ports first to add --enable-threads to the options. It's
mentioned in the mod_python README file, but I don't rember whether was
added there before or after 3.0.1 was released.

Grisha

On Thu, 13 Feb 2003, Robert Gash wrote:

> I recently snagged the binary packages for apache-2.0.44 and
> mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
> package repository.  The system I'm installing on is a 4.7-RELEASE box,
> and I'm getting the following error from Apache:
>
> root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
> "pthread_create"
>
> I have attempted to compile mod_python myself and I have attempted to
> install the binary package, does anyone know how to correct this error?
>
> -R
>
> --
> Robert Gash, gashalot@gashalot.com
> (Web) http://gashalot.com/
> (PGP) http://gashalot.com/pgpkeys.txt
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jwm-modpython at sentinelchicken.net  Thu Feb 13 13:39:25 2003
From: jwm-modpython at sentinelchicken.net (Jason Morgan)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Fatal Python error: PyThreadState_Delete:
Message-ID: <20030213183925.GB88059@sentinelchicken.net>

OK, I moved from mod_python 2.7 and Apache 1.3 to 3.0 and 2.0,
respectively, about two weeks ago. All of a sudden, in the last two
days, I start getting these arror messages.

First I get this:

Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:04 2003] [notice] child pid 86935 exit signal Abort
trap (6)
[Thu Feb 13 09:11:04 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] child pid 86967 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] child pid 86936 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:06 2003] [notice] mod_python: (Re)importing module 
'index'

Then lots and lots of this:

[Thu Feb 13 09:11:31 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:32 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:33 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:34 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:35 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:36 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:37 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:38 2003] [warn] (13)Permission denied: connect to
listener

My site isn't doing anything - just posting an under-construction
message.

I'm running FreeBSD 4.7 and I installed both Apache and mod_python from
ports.


Thanks,

Jason

----- End forwarded message -----

From matthew at yak.org  Thu Feb 13 19:43:01 2003
From: matthew at yak.org (Matthew J. Probst)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Documentation inconsistency in 3.0.1 docs
In-Reply-To: <20030214013301.12832.73000.Mailman@eden.ispol.com>
Message-ID: <5.2.0.9.0.20030213193321.00b31810@192.168.0.253>

Since I'm a complete newbie at mod_python, I thought I'd share the results 
of my head-banging against the documentation.

In Section 3.4 (Now something More Complicated) the sample code says

..
..
def authenhandler(req):
   user = req.user
   pw = req.get_basic_auth_pw()
..
..

This snip of code failed to authenticate because req.get_basic_auth_pw() 
needs to be called -before_ doing anything with the user.  I found this out 
by looking in section 5.1.7, which clearly states this.  However, section 
5.1.7 incorrectly states that you get user from req.connection.user instead 
of req.user.

This stuff might be obvious to someone who moved from mod_python 2.x to 3.x 
but since I'm new it didn't make sense for a while.  So section 3.4 and 
5.1.7 need changing,  _or_ (less likely) there's a lurking bug somewhere.


From skremer at q.cis.uoguelph.ca  Thu Feb 13 21:14:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: <200302122121.IAA02700@lightning.itga.com.au>
Message-ID: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>

Thanks for the reply Greg.  Actually I'm in the process of writing my own
session management tool (I looked at a few others and none of them really
suited my needs; plus I wanted to do it myself for the learning
experience).  So now I'm trying to figure out what my options are for
implementing persistent data.  Right now I'm identifying my session by
means of a cookie, so that part's not a problem.  My challenge now is, how
to associate more data with the cookie (session) in a way that persists
accross http requests.

The three options I'm working with right now are:

(1) just store in the info in the global namespace, keyed on the cookie.  
This seems to me to be the simplest, and fastest solution.  The drawbacks
are that queries that go to a different process won't have access to my
data.  Now that httpd is threaded, this happens much less often. In fact,
it seems to only occur when I explicitly restart apache or reboot my 
machine (which is basically never since I don't run Windows and have a 
UPS).

(2) Save it to a file.  This is slow, but otherwise would work fine if I 
implement appropriate file locking.

(3) Send it via a socket to another process which all mod_python processes 
share.

(4) Some combination of (1) with (2 or 3), which writes the data away and 
only retrieves it from (2,3) if its not in the local namespace.  I'm not 
sure how much I will gain from not retrieving data from (2,3) most of the 
time.

Are there any good options which I have overlooked?  Does my evaluation of
the alternatives seem sound?  Any suggestions or comments.

Thanks for any advice anyone wants to pass my way.

	-SK

 On Thu, 13 Feb 2003, Gregory Bond wrote:

> 
> skremer@q.cis.uoguelph.ca said:
> > So should I be able to just store a variable in my local namespace and
> >  then return to it the next time I make an http connection?  Or might
> > my  next connect be executing python in a different namespace for some
> >  reason?!? 
> 
> It might work in certain restricted circumstances, but it's likely to be 
> unreliable.  You can't know when Apache will decide it's time for a new 
> process.  You can't know when the apache process gets re-configured or 
> restarted.  You can't know when another unrelated session to the same 
> application will begin. 
> 
> You would be much better off to look at some of the session management tools
> that work with mod_python and handle the problem properly.  I use Albatross
> (http://www.object-craft.com.au/projects/albatross/) but that does a whole 
> heap more than just session management.  Others have recommended PSO 
> (http://www.scriptfoundry.com/modules/pso/).
> 
> Greg.
> 
> 
> 

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From drh9296 at ritvax.rit.edu  Thu Feb 13 22:20:30 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Date persistence accross connections.
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <3E4C607E.5050608@rit.edu>

Stefan C. Kremer wrote:
 > Thanks for the reply Greg.  Actually I'm in the process of writing my own
 > session management tool (I looked at a few others and none of them really
 > suited my needs; plus I wanted to do it myself for the learning
 > experience).  So now I'm trying to figure out what my options are for
 > implementing persistent data.  Right now I'm identifying my session by
 > means of a cookie, so that part's not a problem.  My challenge now 
is, how
 > to associate more data with the cookie (session) in a way that persists
 > accross http requests.
 >
 > The three options I'm working with right now are:
 >
 > (1) just store in the info in the global namespace, keyed on the 
cookie.
 > This seems to me to be the simplest, and fastest solution.  The drawbacks
 > are that queries that go to a different process won't have access to my
 > data.  Now that httpd is threaded, this happens much less often. In fact,
 > it seems to only occur when I explicitly restart apache or reboot my
 > machine (which is basically never since I don't run Windows and have a
 > UPS).
 >
 > (2) Save it to a file.  This is slow, but otherwise would work fine if I
 > implement appropriate file locking.
 >
 > (3) Send it via a socket to another process which all mod_python 
processes
 > share.
 >
 > (4) Some combination of (1) with (2 or 3), which writes the data away 
and
 > only retrieves it from (2,3) if its not in the local namespace.  I'm not
 > sure how much I will gain from not retrieving data from (2,3) most of 
the
 > time.
 >
 > Are there any good options which I have overlooked?  Does my 
evaluation of
 > the alternatives seem sound?  Any suggestions or comments.
 >
 > Thanks for any advice anyone wants to pass my way.
 >
 > 	-SK

How about storing stuff in a database?

MySQL (and many other DBs) have very usable python interfaces; getting 
and adding them to your build should be pretty simple.

You'll get all the persistence of storing to a file, but with added 
data-gathering functionality and no need to worry about locking (the DB 
should handle this for you).

The only difficulty is that you will probably want to store data in a 
DB-useable format - aka not by storing pickled objects.

--david


From Mongryong at sympatico.ca  Fri Feb 14 00:37:59 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Date persistence accross connections.
In-Reply-To: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <1045201079.3096.263.camel@refugeeMedia>

On Thu, 2003-02-13 at 21:14, Stefan C. Kremer wrote:
> Are there any good options which I have overlooked?  Does my evaluation of
> the alternatives seem sound?  Any suggestions or comments.

Have you looked at using an 'object oriented database' such as ZODB? 
ZODB is used by Zope for most of its session management.  However, it
should work in any Python application include mod_python.

I believe ZODB has drivers for files, databases, and even networked
capabilities.  ZODB also session garbage collection.




From mike.looijmans at asml.com  Fri Feb 14 09:46:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, and warnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d405$802aaa80$926a1e6e@wsasd464>

System & software:

SUN Ultra-10 (called wsasd464)
Solaris 2.6 installed (SunOS 5.6)
GCC version 2.8.1 (Please don't tell me to use 2.9.5 - It's company politics
prohibiting me from using that - I had no problems compiling apache and
python)
Apache 2.0.44 compiled, installed, up and running (/usr/local/apache/...)
Python 2.2.2 compiled, installed (/usr/local)

(Also MySQL and Python-to-MySQL 0.91 but this seems irrelevant)

Problem:

wsasd464:/scratch/download/apache/mod_python-3.0.1 %
./configure --with-apxs=/usr/local/apache/bin/apxs --with-python=/usr/local/bi
n/python

[== lots of OK's here, no problems ==]

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake
ar -x `gcc -print-libgcc-file-name` _eprintf.o
ar -x `gcc -print-libgcc-file-name` _floatdidf.o

Compiling for DSO. For static, do "make static"

/usr/local/apache/bin/apxs -I/usr/local/asm/download/apache/mod_python-3.0.1/s
rc/include -I/usr/local/apache/include -I/usr/local/include/python2.2 -c
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
serverobject.c connobject.c filterobject.c hlist.c
hlistobject.c -L/usr/local/lib/python2.2/config -lm  -lpython2.2   -lsocket -l
nsl -ldl  -lpthread -lthread   -lm _eprintf.o _floatdidf.o
/usr/local/apache/build/libtool --silent --mode=compile
cc -prefer-pic  -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=6 -D_POSIX_PTHREAD
_SEMANTICS -D_REENTRANT -g -O2 -I/usr/local/apache/include -I/usr/local/asm/do
wnload/apache/mod_python-3.0.1/src/include -I/usr/local/apache/include -I/usr/
local/include/python2.2  -c -o mod_python.lo mod_python.c && touch
mod_python.slo
In file included from /usr/local/include/python2.2/Python.h:24,
                 from
/usr/local/asm/download/apache/mod_python-3.0.1/src/include/mod_python.h:92,
                 from mod_python.c:67:
/usr/local/include/python2.2/pyconfig.h:104: warning: `_FILE_OFFSET_BITS'
redefined
/usr/include/sys/feature_tests.h:80: warning: this is the location of the
previous definition


[==this warning appears a dozen times repeatedly==]

[===Then I get this near the end ===]

*** Warning: Linking the shared library mod_python.la against the non-libtool
*** objects  _eprintf.o _floatdidf.o is not portable!
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- L
grep: illegal option -- /
grep: illegal option -- u
grep: illegal option -- r
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- a
grep: illegal option -- /
grep: illegal option -- /
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- f
grep: illegal option -- g
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- o
grep: illegal option -- k
grep: illegal option -- e
grep: illegal option -- t
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- m
Usage: grep -hblcnsviw pattern file . . .

Now su and make install
  (or, if you only want to perform a partial install,
   you can use make install_dso and make install_py_lib)

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake install

[== stuff here appears OK ==]

Took a gamble and installed it anyway. Investigating the Makefiles leaded me
to conclude that the "grep" errors seem to come from the 'apxs' program in
Apache, which unfortunately appears to have been written in Perl so I couldn't
understand much of it.

Now, I configured apache to load the module, and created 'mptest.py' as
suggested in the manual. Attempting to access it will yield an empty document
(no data at all, no headers).

Looking in the error_log of apache yields:

[Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal Segmentation
fault (11)






From Christian.Ferrari at primeur.com  Fri Feb 14 10:23:27 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
Message-ID: <3E4CB58F.50408@primeur.com>

Hardware/software specs:

# uname -a
HP-UX apollo B.11.11 U 9000/800 816839621 unlimited-user license

# gcc -v
Reading specs from /opt/gccs/lib/gcc-lib/hppa2.0w-hp-hpux11.11/3.2.1/specs
Configured with: ../gcc-3.2.1/configure --prefix=/opt/gccs 
--enable-languages=c,
c++ --with-as=/opt/gccs/bin/as
Thread model: single
gcc version 3.2.1

# /opt/Python-2.2/bin/python -V
Python 2.2.2
*** Install steps:
./configure --prefix=/opt/Python-2.2
make
make install

# /opt/apache2/bin/httpd -v
Server version: Apache/2.0.44
Server built:   Feb 13 2003 16:53:25
*** Install steps:
./configure --prefix=/opt/apache2
make
make install

# /opt/apache2/build/libtool --version
ltmain.sh (GNU libtool) 1.4.3 (1.922.2.110 2002/10/23 01:39:54)

*** ISSUE POINT: ***

mod_python package: mod_python-3.0.1
*** Install steps:
./configure --with-apxs=/opt/apache2/bin/apxs 
--with-python=/opt/Python-2.2/bin/python
# make

Compiling for DSO. For static, do "make static"

         /opt/apache2/bin/apxs 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-L/opt/Python-2.2/lib/python2.2/config  -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
      -lm  -lpython2.2   -lnsl -ldld  -lpthread   -lm

[...]
Some OK compile steps...
[...]

/opt/apache2/build/libtool --silent --mode=link gcc -o mod_python.la 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2  -rpath 
/opt/apache2/modules -module -avoid-version  hlistobject.lo hlist.lo 
filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo 
requestobject.lo _apachemodule.lo mod_python.lo 
-L/opt/Python-2.2/lib/python2.2/config -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
-lm -lpython2.2 -lnsl -ldld -lpthread -lm

*** Warning: linker path does not have real file for library lpython2.2.
*** I have the capability to make that library automatically link in when
*** you link to this library.  But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because I did check the linker path looking for a file starting
*** with libpython2.2 and none of the candidates passed a file format test
*** using a file magic. Last file checked: 
/opt/Python-2.2/lib/python2.2/config/libpython2.2.a

*** Warning: libtool could not satisfy all declared inter-library
*** dependencies of module mod_python.  Therefore, libtool will create
*** a static module, that should work as long as the dlopening
*** application is linked with the -dlopen flag.
Usage: ln [-f] [-i] [-s] f1 f2
        ln [-f] [-i] [-s] f1 ... fn d1
*** Error exit code 2

Stop.
*** Error exit code 1

Stop.



Why libtool is complaining for a "libpython" shared object while no 
"libpython.sl" should be produced in UNIX envs?
Does anyone know where the error is?

Thanks
Christian



-- 
______________________________________

Christian Ferrari
c/o PRIMEUR ITALIA
Via E. Mattei, 1/106 A
30020 Marcon (VE) - ITALY

Tel.:    +39 041 5950998
Fax:     +39 041 5951024
Mobile:  +39 348 8960572
E-mail:  Christian.Ferrari@primeur.com
Web:     http://www.primeur.com/


From grisha at modpython.org  Fri Feb 14 09:45:43 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
In-Reply-To: <3E4CB58F.50408@primeur.com>
Message-ID: <20030214093919.S20286-100000@eden.ispol.com>

On Fri, 14 Feb 2003, Christian Ferrari wrote:

> # /opt/apache2/bin/httpd -v
> Server version: Apache/2.0.44
> Server built:   Feb 13 2003 16:53:25
> *** Install steps:
> ./configure --prefix=/opt/apache2

Here you also need --enable-so

> *** Warning: linker path does not have real file for library lpython2.2.
> *** I have the capability to make that library automatically link in when
> *** you link to this library.  But I can only do this if you have a
> *** shared version of the library, which you do not appear to have
> *** because I did check the linker path looking for a file starting
> *** with libpython2.2 and none of the candidates passed a file format test
> *** using a file magic. Last file checked:
> /opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>

I do not have any experience with HP-UX, but on other systems a similar
message indicates an old version of libtool, which wouldn't allow linking
shared and static libs together. So I'd first see if upgrading libtool
would help. After you upgrade, rebuild apache by first running
./buildconf like this:

./buildconf
./configure --prefix=/opt/apache2 --enable-so
make clean
make

Then for mod_python, do make clean; make

Grisha


From Christian.Ferrari at primeur.com  Mon Feb 17 11:01:39 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
References: <20030214093919.S20286-100000@eden.ispol.com>
Message-ID: <3E50B302.6030809@primeur.com>


Gregory (Grisha) Trubetskoy wrote:

> On Fri, 14 Feb 2003, Christian Ferrari wrote:
> 
> 
>># /opt/apache2/bin/httpd -v
>>Server version: Apache/2.0.44
>>Server built:   Feb 13 2003 16:53:25
>>*** Install steps:
>>./configure --prefix=/opt/apache2
>>
> 
> Here you also need --enable-so
> 
> 
>>*** Warning: linker path does not have real file for library lpython2.2.
>>*** I have the capability to make that library automatically link in when
>>*** you link to this library.  But I can only do this if you have a
>>*** shared version of the library, which you do not appear to have
>>*** because I did check the linker path looking for a file starting
>>*** with libpython2.2 and none of the candidates passed a file format test
>>*** using a file magic. Last file checked:
>>/opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>>
>>
> 
> I do not have any experience with HP-UX, but on other systems a similar
> message indicates an old version of libtool, which wouldn't allow linking
> shared and static libs together. So I'd first see if upgrading libtool
> would help. After you upgrade, rebuild apache by first running
> ./buildconf like this:
> 
> ./buildconf
> ./configure --prefix=/opt/apache2 --enable-so
> make clean
> make
> 
> Then for mod_python, do make clean; make
> 
> Grisha
> 
> 

Libtool supplied with Apache 2.0.44 is 1.4.3; last libtool available on 
GNU site is 1.4.3.
Anywhere, I installed a fresh-stand-alone libtool-1.4.3 package, but 
Apache didn't use it, so I tryed to force Apache build:

./configure --prefix=/opt/apache2 --enable-so 
--with-libtool=/usr/local/bin/libtool

Apache did NOT like "my standard" libtool; this is the Apache build error:

[... some working stuff ...]

Making all in dso/unix
         gcc -g -O2   -DHAVE_CONFIG_H -DHPUX11 -D_REENTRANT 
-D_XOPEN_SOURCE_EXTENDED   -I../../include -I../../include/arch 
-I../../include/arch/unix  -c dso.ccr libapr-0.la strings/apr_cpystrn.o 
strings/apr_fnmatch.o strings/apr_snprintf.o strings/apr_strings.o 
strings/apr_strnatcmp.o strings/apr_strtok.o passwd/apr_getpass.o 
tables/apr_hash.o tables/apr_tables.o file_io/unix/copy.o 
file_io/unix/dir.o file_io/unix/fileacc.o file_io/unix/filedup.o 
file_io/unix/filepath.o file_io/unix/filestat.o file_io/unix/flock.o 
file_io/unix/fullrw.o file_io/unix/mktemp.o file_io/unix/open.o 
file_io/unix/pipe.o file_io/unix/readwrite.o file_io/unix/seek.o 
network_io/unix/inet_ntop.o network_io/unix/inet_pton.o 
network_io/unix/sendrecv.o network_io/unix/sockaddr.o 
network_io/unix/sockets.o network_io/unix/sockopt.o 
threadproc/unix/proc.o threadproc/unix/procsup.o 
threadproc/unix/signals.o threadproc/unix/thread.o 
threadproc/unix/threadpriv.o misc/unix/charset.o misc/unix/errorcodes.o 
misc/unix/getopt.o misc/unix/otherchild.o misc/unix/rand.o 
misc/unix/start.o misc/unix/version.o locks/unix/global_mutex.o 
locks/unix/proc_mutex.o locks/unix/thread_cond.o 
locks/unix/thread_mutex.o locks/unix/thread_rwlock.o time/unix/time.o 
time/unix/timestr.o mmap/unix/common.o mmap/unix/mmap.o shmem/unix/shm.o 
user/unix/groupinfo.o user/unix/userinfo.o memory/unix/apr_pools.o 
atomic/unix/apr_atomic.o poll/unix/poll.o poll/unix/pollacc.o 
support/unix/waitio.o dso/unix/*.o; libapr-0.la
sh[4]: cr:  not found.
*** Error exit code 127

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.



I'm going to post the link issue on "libtool" mailing list.
Thanks
Christian


From mike.looijmans at asml.com  Wed Feb 19 10:52:19 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d7fc$974e0b80$926a1e6e@wsasd464>

After using a 2x4 and a kind word, I managed to compile it with gcc version
2.95
Guess what, now it works (sort of... see next post...)

--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Gregory (Grisha) Trubetskoy <grisha@modpython.org>
To: Mike Looijmans <mike.looijmans@asml.nl>
Date: Friday, February 14, 2003 3:38 PM
Subject: Re: [mod_python] Newbie needs help: Compile errors, segfault,
andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1


>
>Most likely you have an outdated libtool.
>
>Grisha
>
>On Fri, 14 Feb 2003, Mike Looijmans wrote:


[snip]

>> [Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal
Segmentation
>> fault (11)




From mike.looijmans at asml.com  Wed Feb 19 11:03:04 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] cgihandler repeats the whole response for each print command
Message-ID: <01c2d7fe$17c13c00$926a1e6e@wsasd464>

To allow a quick migration of thousands of CGI code lines, I intended to use
the cgihandler.py handler to run existing CGI script.

However, if I setup things that way, and use a small CGI script like this one:


print 'status: 200 OK'
print 'content-type: text/html'
print
print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
print '<BODY><P>Hello Mod_Python world!</P></BODY>'
print '</HTML>'

This would yield a simple 'hello world' page, but the output that is sent to
the browser is as follows:

HTTP/1.1 200 OK
Date: Wed, 19 Feb 2003 09:58:12 GMT
Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
Content-Type: text/html; charset=ISO-8859-1
Connection: close

<HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML>



It seems that (except for the headers) the "sys.stdout" from the cgihandler
sends the whole output history again on each "print" command, like this class
would:

class FaultyIO:
    def __init__(self, req)
        self.msg = ''
        self.req = req
    def write(self, s):
        self.msg += s
        req.send(self.msg)






From mike.looijmans at asml.com  Wed Feb 19 11:56:07 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Solution (bug): cgihandler repeats the whole response for each print command
Message-ID: <01c2d805$80f87d80$926a1e6e@wsasd464>

Found the cause, the problem is in "apache.py" (installed as
/usr/local/lib/python2.2/site-packages/mod_python/apache.py on my system).

Line # 693 says (in function write() of CGIStdout:

        if not self.headers_sent:

But in the code, it NEVER sets 'self.headers_sent' to "1", thus it will never
execute the "else" part of this if.

To fix it, I inserted the following at line # 724 (the last two lines were
already there):

                ## BUG FIX: Send out duplicates....
                self.headers_sent = 1
                # write the body if any at this point
                self.req.write(ss[1])


--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Mike Looijmans <mike.looijmans@asml.com>
To: mod_python list <mod_python@modpython.org>
Date: Wednesday, February 19, 2003 11:08 AM
Subject: [mod_python] cgihandler repeats the whole response for each print
command


>To allow a quick migration of thousands of CGI code lines, I intended to use
>the cgihandler.py handler to run existing CGI script.
>
>However, if I setup things that way, and use a small CGI script like this
one:
>
>
>print 'status: 200 OK'
>print 'content-type: text/html'
>print
>print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
>print '<BODY><P>Hello Mod_Python world!</P></BODY>'
>print '</HTML>'
>
>This would yield a simple 'hello world' page, but the output that is sent to
>the browser is as follows:
>
>HTTP/1.1 200 OK
>Date: Wed, 19 Feb 2003 09:58:12 GMT
>Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
>Content-Type: text/html; charset=ISO-8859-1
>Connection: close
>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML>
>
>
>
>It seems that (except for the headers) the "sys.stdout" from the cgihandler
>sends the whole output history again on each "print" command, like this class
>would:
>
>class FaultyIO:
>    def __init__(self, req)
>        self.msg = ''
>        self.req = req
>    def write(self, s):
>        self.msg += s
>        req.send(self.msg)
>
>
>
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://www.modpython.org/mailman/listinfo/mod_python
>
>



From grisha at modpython.org  Wed Feb 19 11:40:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] cgihandler repeats the whole response for each
 print command
In-Reply-To: <01c2d7fe$17c13c00$926a1e6e@wsasd464>
Message-ID: <20030219114000.P87550-100000@eden.ispol.com>

It's known bug, it has been fixed for the next release.

Grisha

On Wed, 19 Feb 2003, Mike Looijmans wrote:

> To allow a quick migration of thousands of CGI code lines, I intended to use
> the cgihandler.py handler to run existing CGI script.
>
> However, if I setup things that way, and use a small CGI script like this one:
>
>
> print 'status: 200 OK'
> print 'content-type: text/html'
> print
> print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
> print '<BODY><P>Hello Mod_Python world!</P></BODY>'
> print '</HTML>'
>
> This would yield a simple 'hello world' page, but the output that is sent to
> the browser is as follows:
>
> HTTP/1.1 200 OK
> Date: Wed, 19 Feb 2003 09:58:12 GMT
> Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
> Content-Type: text/html; charset=ISO-8859-1
> Connection: close
>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML>
>
>
>
> It seems that (except for the headers) the "sys.stdout" from the cgihandler
> sends the whole output history again on each "print" command, like this class
> would:
>
> class FaultyIO:
>     def __init__(self, req)
>         self.msg = ''
>         self.req = req
>     def write(self, s):
>         self.msg += s
>         req.send(self.msg)
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From Jaco.Smuts at za.didata.com  Tue Feb 25 23:42:05 2003
From: Jaco.Smuts at za.didata.com (Jaco Smuts (ZA))
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] pso examples using mod_python not cgi
Message-ID: <862D79D0DADB244E8563C6F9277C02FF022C10A7@zabrysvcl01ex01.af.didata.local>

Hello there

Started plyaing with mod_python yesterday (great) and discovered pso today.
It seems to cater for my needs (seperation of code and presentation).

I'm looking for a howto or tutorial on building a site using mod_python with
pso and not cgi, or any other suggestions of frameworks to use instead of
pso.

thank you
jaco








ps I've got no control over my companies disclaimer



***************************************************************************************

This message contains information intended solely for the addressee,
which is confidential or private in nature and subject to legal privilege.
If you are not the intended recipient, you may not peruse, use,
disseminate, distribute or copy this message or any file attached to this
message. Any such unauthorised use is prohibited and may be unlawful. If
you have received this message in error, please notify the sender
immediately by e-mail, facsimile or telephone and thereafter delete the
original message from your machine. 
 
Furthermore, the information contained in this message, and any
attachments thereto, is for information purposes only and may contain the
personal views and opinions of the author, which are not necessarily the
views and opinions of Dimension Data (South Africa) (Proprietary) Limited
or its subsidiaries and associated companies ("Dimension Data"). Dimension
Data therefore does not accept liability for any claims, loss or damages
of whatsoever nature, arising as a result of the reliance on such
information by anyone. 
 
Whilst all reasonable steps are taken to ensure the accuracy and
integrity of information transmitted electronically and to preserve the
confidentiality thereof, Dimension Data accepts no liability or
responsibility whatsoever if information or data is, for whatsoever
reason, incorrect, corrupted or does not reach its intended destination. 

*************************************************************************************
 	


From mort at bork.org  Tue Feb 25 20:50:36 2003
From: mort at bork.org (Martin Hicks)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226015036.GA9764@bork.org>

Hello,

I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.

The problem that I'm having is that for my script, which I'm running using the 
publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
suggest a reason why this might happen?

127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"


TIA,
mh

-- 
Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
Beer: So much more than just a breakfast drink.

From frank at fejes.net  Tue Feb 25 21:23:39 2003
From: frank at fejes.net (Frank S. Fejes III)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <20030225212339.24710d04.frank@fejes.net>

Curious!  I've noticed this, too (frequently, like you), but only on my
NetBSD 1.5.2/x86 production server...my Debian Sparc Linux backup server and
Debian x86 Linux development machine have never produced such an error.  I
had thought it was simply a NetBSD/Apache issue and I was very nearly close
to changing operating systems as my last resort.

I am currently running Apache 1.3.27 / mod_python 2.7.8 on all servers and
I've already experimented with mod_python as both a static and dynamic
module.  I've also changed PythonDebug options, *Handler settings, and
anything else I could find.  This problem is so bad at times that I've
considered avoiding the Publisher handler altogether and simply using the
CGI handler (in case it's not a problem with all of mod_python) or even
straight CGI.

I've never found anything through google about this issue and I wonder if
others are seeing the same issues that we are.

--frank

On Tue, 25 Feb 2003 20:50:36 -0500
Martin Hicks <mort@bork.org> wrote:

> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using
> the publisher handler.  I seem to get a 404 every 8th or so attempt.  Can
> anyone suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

From jack_diederich at email.com  Tue Feb 25 23:15:38 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226041538.16673.qmail@email.com>

>----- Original Message -----
>From: "Frank S. Fejes III" <frank@fejes.net>
>Subject: Re: [mod_python] Trouble with scripts giving 404

Is the frequency of 404s pretty steady or very random and
just averaging out to 1/8?
Does the frequency of 404s change when you change the
number of apache processes?

You could also try setting the number of processes low
and running strace on each, saving the output.  Then
post the diff of the bad vs good hits to the list.

I can't say I know what is wrong, but hopefully we can
narrow it down with more info.
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

Meet Singles
http://corp.mail.com/lavalife


From frank at fejes.net  Wed Feb 26 11:25:32 2003
From: frank at fejes.net (Frank Fejes)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <200302261725.h1QHPWe00744@texas.pop3now.com>

It's not as consistent now that I've provided a SetHandler for the entire
directory structure AND an AddHandler for .py...for example it has not
happened today yet.  When it does start, though, it seems to give the 404
error 40-50% of the time.  Restarting apache does NOT provide relief for
any amount of time...I've stopped/started apache and had the error show up
after 2-3 hits.

I can lower the number of processes and will get ktruss (this is a NetBSD
system) output if I see the problem occur again.  Thanks.

--frank

> >----- Original Message -----
> >From: "Frank S. Fejes III" <frank@fejes.net>
> >Subject: Re: [mod_python] Trouble with scripts giving 404
>
> Is the frequency of 404s pretty steady or very random and
> just averaging out to 1/8?
> Does the frequency of 404s change when you change the
> number of apache processes?
>
> You could also try setting the number of processes low
> and running strace on each, saving the output.  Then
> post the diff of the bad vs good hits to the list.
>
> I can't say I know what is wrong, but hopefully we can
> narrow it down with more info.
> --
> _______________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>
> Meet Singles
> http://corp.mail.com/lavalife
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From thm at duke.edu  Wed Feb 26 17:03:15 2003
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <1046296996.1977.8.camel@jade.biology.duke.edu>

Nothing that I know of in particular, but we've found that 3.0.0 is
buggy in general, and switching to 3.0.1 fixed most issues.

If anyone wants it, I've built and signed (with my key, not Red Hats of
course) the 3.0.1 package from the last Red Hat beta for RHL 8.0. Its at
ftp://ftp.biology.duke.edu/pub/admin/current



On Tue, 2003-02-25 at 20:50, Martin Hicks wrote:
> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using the 
> publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
> suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From cjackson at spsu.edu  Wed Feb 26 20:17:21 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] mod_python on win32
Message-ID: <005c01c2ddfd$fa495710$5f05010a@moxie>

I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get 
mod_python to work in Windows under Apache.  I'm running Windows XP on 
Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so 
file from mod_python.org and copied and pasted the file in my modules/ 
directory under Apache.  Then I added the following to my httpd.conf
file:
 
AddModule python_module mod_python.so
 
If the above line is left uncommented Apache fails to restart.
 
Am I doing something wrong?
 
Chris Jackson
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/f8c62939/attachment.htm
From cjackson at spsu.edu  Wed Feb 26 20:38:15 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] mod_python on win32 solved
Message-ID: <006d01c2de00$e5e8f110$5f05010a@moxie>

Nevermind everyone, after some hunting through the archives' I've
figured out that I needed msvcr70.dll.
 
Thanks anyway
 
Chris Jackson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/3684fe1f/attachment.htm
From jermnsar at hotmail.com  Wed Feb 26 19:37:10 2003
From: jermnsar at hotmail.com (Jeremy Lowery)
Date: Fri Jan  9 21:47:16 2004
Subject: [mod_python] mod_python on win32
Message-ID: <F170BMyiqCl4JDIPHfW000470fa@hotmail.com>

>From: "Chris Jackson" <cjackson@spsu.edu>
>I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get
>mod_python to work in Windows under Apache.  I'm running Windows XP on
>Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so
>file from mod_python.org and copied and pasted the file in my modules/
>directory under Apache.  Then I added the following to my httpd.conf
>file:
>
>AddModule python_module mod_python.so
>
>If the above line is left uncommented Apache fails to restart.
>
>Am I doing something wrong?
>
>Chris Jackson

Try
LoadModule python_module modules/mod_python.so

Jeremy S Lowery



_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail


From mike.looijmans at asml.com  Thu Feb 27 08:26:38 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:17 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple sys.stdout objects?
Message-ID: <01c2de31$90914b00$926a1e6e@wsasd464>

mod_python has a nice "cgihandler", that allows me to run out old CGI code in
mod_python 'mode'. However, I have some problems with that, that some of you
may know a solution to.

The cgihandler will lock until the request is complete. This is OK, but it
restrains the number of simultaneous Python requests to just 1. In practice,
this means that the system gets a lot slower with mod_python, because there
are a few requests that send a few megabytes of data to the client, and this
can take a few minutes. The performance hit is unacceptable.

I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.

A workaround is to compile apache with the "pre-fork" system. This however
yields another problem. The child processes all fire up their own interpreter,
and the memory load is about 10MB for each child (in 'worker' mode, only one
interpreter for 20 childs!). This quickly eats up all resources on the
machine. It also virtually eliminates the possibility to "recycle" the
database connection and similar objects. The net effect is that this setup is
also slower than the plain CGI implementation which just starts (runs and
kills) an interpreter for each CGI request.

I tried removing the thread lock in the cgihandler. All CGI scripts I have
don't care about the directory they are in (they get all they need from the
MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
themselves. This left only one single problem: The "print" command.

Python's print command is being used to send the data to the client. The
cgihandler replaces sys.stdout and redirects it to the Request object, which
is ok. But there is only one "sys" module shared by all threads, so all the
print commands from all threads end up in the same request. In practice, if a
"long" request is running, and a shorter request interferes, the short one
will kill sys.stdout and the long one will abort with an exception because
sys.stdout had suddenly died.

One workaround would be to create a cgihandler 'clone' that passes an "output"
object to each script (which defaults to sys.stdout for "plain" CGI mode), and
let the scripts all write() to that object. Drawback is that I will have to
replace all "print" statements in about 10k+ lines of code. Also, I want the
scripts to remain CGI compatible for a few more weeks because a few shadow
systems cannot be upgraded to mod_python yet.

Is there a way that I can let the threads each "print" to their own output,
for example by having a seperate "sys" module in each thread? (could I delete
the sys module and re-import it or something similar?)

--
Mike Looijmans


From grisha at modpython.org  Thu Feb 27 15:34:07 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:17 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
In-Reply-To: <01c2de31$90914b00$926a1e6e@wsasd464>
Message-ID: <20030227152549.S3048-100000@eden.ispol.com>

Your best bet is the prefork MPM. Remember that the 10M per child is
actually a lot less because pages for executables are shared between
processes on (most) UNIXes, certainly on Solaris they are. I find it hard
to believe that it is slower than regular CGI - it should be at least
several times faster, though not nearly as efficient as using the
publisher or a native handler.

The ultimate solution is not use CGI of course :-)

Grisha

On Thu, 27 Feb 2003, Mike Looijmans wrote:

> mod_python has a nice "cgihandler", that allows me to run out old CGI code in
> mod_python 'mode'. However, I have some problems with that, that some of you
> may know a solution to.
>
> The cgihandler will lock until the request is complete. This is OK, but it
> restrains the number of simultaneous Python requests to just 1. In practice,
> this means that the system gets a lot slower with mod_python, because there
> are a few requests that send a few megabytes of data to the client, and this
> can take a few minutes. The performance hit is unacceptable.
>
> I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.
>
> A workaround is to compile apache with the "pre-fork" system. This however
> yields another problem. The child processes all fire up their own interpreter,
> and the memory load is about 10MB for each child (in 'worker' mode, only one
> interpreter for 20 childs!). This quickly eats up all resources on the
> machine. It also virtually eliminates the possibility to "recycle" the
> database connection and similar objects. The net effect is that this setup is
> also slower than the plain CGI implementation which just starts (runs and
> kills) an interpreter for each CGI request.
>
> I tried removing the thread lock in the cgihandler. All CGI scripts I have
> don't care about the directory they are in (they get all they need from the
> MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
> themselves. This left only one single problem: The "print" command.
>
> Python's print command is being used to send the data to the client. The
> cgihandler replaces sys.stdout and redirects it to the Request object, which
> is ok. But there is only one "sys" module shared by all threads, so all the
> print commands from all threads end up in the same request. In practice, if a
> "long" request is running, and a shorter request interferes, the short one
> will kill sys.stdout and the long one will abort with an exception because
> sys.stdout had suddenly died.
>
> One workaround would be to create a cgihandler 'clone' that passes an "output"
> object to each script (which defaults to sys.stdout for "plain" CGI mode), and
> let the scripts all write() to that object. Drawback is that I will have to
> replace all "print" statements in about 10k+ lines of code. Also, I want the
> scripts to remain CGI compatible for a few more weeks because a few shadow
> systems cannot be upgraded to mod_python yet.
>
> Is there a way that I can let the threads each "print" to their own output,
> for example by having a seperate "sys" module in each thread? (could I delete
> the sys module and re-import it or something similar?)
>
> --
> Mike Looijmans
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From drh9296 at ritvax.rit.edu  Thu Feb 27 17:59:54 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:47:17 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
References: <20030227152549.S3048-100000@eden.ispol.com>
Message-ID: <3E5E986A.5010206@rit.edu>

Gregory (Grisha) Trubetskoy wrote:
> Your best bet is the prefork MPM. Remember that the 10M per child is
> actually a lot less because pages for executables are shared between
> processes on (most) UNIXes, certainly on Solaris they are. I find it hard
> to believe that it is slower than regular CGI - it should be at least
> several times faster, though not nearly as efficient as using the
> publisher or a native handler.
> 
> The ultimate solution is not use CGI of course :-)
> 
> Grisha

I haven't investigated things in 3.x.x yet, so I don't know if this 
applies.  If this were for mod_python 2.x.x, I'd suggest writing a small 
custom handler.  Just do a bit of error checking, setup a couple local 
variables, and an execfile().  I have an example below.

Your CGIs would need to be modified to use req.write() which is somewhat 
annoying.  For maximum compatibility, you could write a custom write() 
function to detect between outputting via req.write() or via stdout.  On 
a side note, do any mod_python request objects support variable argument 
outputs?

# httpd.conf example
<Location /cgi/>
     SetHandler python-program
     PythonHandler your_handler
</Location>

# your_handler.py example
# called by any request in this directory
def handler( req ) :
     from mod_python import apache

     cur_dir = "/directory/of/this/handler/"
     filename = req.filename[ len( cur_dir ): ]

     # setup any local variables

     try :
         # all my scripts are extension-less, so
         # I can easily test for ".."-style hacking
         if filename.find( "." ) != -1 :
             raise IOError
         execfile( "/directory/of/your/scripts/" + filename )
     except IOError :
         # handle error condition

     return apache.OK


From mike.looijmans at asml.com  Fri Feb 28 08:38:54 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:17 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
Message-ID: <01c2defc$71abbb00$926a1e6e@wsasd464>

>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.

>The ultimate solution is not use CGI of course :-)


That is the intention, ultimately...

I think I have to dive into the code and start working. Probably, the best way
for me to set things up is to modify all the scripts to write to a "file like"
object and get their data from a FieldStorage instance. So they'd all have a
'main' like:

handlercode(output, form, database):
    ....
    output.write('<P>Hello world</P>')
    ....

And then call it from either a CGI wrapper:

    module = __import__(scriptname)
    module.handlercode(sys.stdout, cgi.FieldStorage(), db_connect())


Or cal it from a mod python handler:

    module = __import__(scriptname)
    module.handlercode(req, utils.FieldStorage(), recycle_db_connection())


And weed out all the CGI environment calls (e.g. SERVER_NAME) and replace them
with some object to handle that transparently too.



From scott_list at mischko.com  Fri Feb 28 10:17:29 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:47:17 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
In-Reply-To: <01c2defc$71abbb00$926a1e6e@wsasd464>
References: <01c2defc$71abbb00$926a1e6e@wsasd464>
Message-ID: <200302281017.29699.scott_list@mischko.com>

In the meantime, you might set up a cron job at 7:45am that accesses the web 
pages before the rush starts so the stuff is "preloaded" and not swapped.

On Thursday 27 February 2003 11:38 pm, Mike Looijmans wrote:
>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.



From jdavis-mod-python at empires.org  Sat Feb  1 03:50:58 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:22 2004
Subject: [mod_python] Execution limtis
Message-ID: <200302010350.58418.jdavis-mod-python@empires.org>

Is it possible ot control the max execution time for a single request? I'd 
like to install mod_python in a virtualhosting environment, and I think I can 
control the RAM with an auto-imported setrlimit module, but I don't want to 
control execution time with that because it would kill the process in the 
middle of a request (right?).

If it's not available currently, is it even possible to implement a timeout 
without changing python itself? I would be interested in implementing it if 
someone can help me think of an idea how to do it. I know many other system 
admins would install mod_python if it could be controlled in a way similar to 
php4.

As a convenience, I think it might be helpful to provide config directives to 
setrlimit() the apache process on startup to certain values. Would the 
developers be interested if I were to implement that (I've made 1.3 apache 
modules before, so I figure I could handle some changes to a 2.0 module).

Regards,
	Jeff Davis

From smcnutt at monmouth.com  Sat Feb  1 07:14:29 2003
From: smcnutt at monmouth.com (Scott McNutt)
Date: Fri Jan  9 21:53:22 2004
Subject: [mod_python] Adding an object to connection
Message-ID: <001d01c2c9eb$79196480$232fbfd1@pavilion>

It would be very convenient for my app to know when a
connection is dropped (keepalive timeout or max requests
event occurs on a client connection).

The connection notes are for str types only ... and
req.connection is readonly ... so I'm basically looking for some
way to add an object attribute to the connection ... so I can at
least know when the connection is dropped.

I'd appreciate any ideas, suggestions, comments.

Thank,
--Scott




From LBerezhny at DevIS.com  Sun Feb  2 17:27:34 2003
From: LBerezhny at DevIS.com (Lex Berezhny)
Date: Fri Jan  9 21:53:22 2004
Subject: [mod_python] test.py fails on RH7.2
Message-ID: <1044224854.2178.7.camel@buddha>

Hi,

  I am trying to use the unit testing framework provided with mod_python
for building my own applications. But I was getting a User error when
running the bundled test.py. Below is a patch to test.py that fixes the
issue on my box:

243a244,245
> 			Directive("User", "nobody"),
> 			Directive("Group", "#-1"),

  Not sure if this is an issue only on my box, but thought I'd be a good
user and report it :-)

My setup:

RedHat 7.2
Apache 2.0.44
mod_python 3.0.1
Pyhton 2.2.2

-- 
Lex Berezhny <LBerezhny@DevIS.com>


From grisha at modpython.org  Sun Feb  2 19:51:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:22 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <3E3ADAA6.2010707@cs.uchicago.edu>
Message-ID: <20030202194957.W51473-100000@eden.ispol.com>

Someone else reported this "import site" problem, and as far as I can
remember it is actually a bug in Python, not mod_python - perhaps someone
can fill in the details?

Grisha

On Fri, 31 Jan 2003, ganapathy murali krishnan wrote:

>
> I just installed Python-2.3a1 + apache 2.0.44 + mod_python 3.0.1.
> I have one vhost (say vhost) in addition to the main one (say mainhost).
> The vhost has a python program as the main handler (using SetHandler).
> This setup works correctly without any problems on another machine
> (Python 1.5+ apache 1.3 + mod_python something), so the problem is not
> in the handler code itself.
>
> When I run the httpd binary, all is fine. The mainhost serves up html
> files without any problems. The vhost is supposed to serve up .py files.
> When I go to "http://vhost" I get the following error.
>
> ----
> [Fri Jan 31 13:53:00 2003] [error] make_obcallback: could not import
> mod_python.apache.
>
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> ----
>
> The apache.py is in
> /opt/python/default/lib/python2.3/site-packages/mod_python/apache.py.
>
> I tried many of the suggested workarounds, I couldn't get any of them
> to work. The content of my httpd.conf inside the <VirtualHost> and
> </VirtualHost> is enclosed below.
>
> ------------
>    SetHandler python-program
>    PythonDebug on
>    # All handlers are stored in a different directory, for security
>    PythonPath "sys.path+['/stage/w3serv/vhost.cs.uchicago.edu']"
>
>    # This module handles reloading modules on demand
>    PythonInitHandler handlers.init
>
>    # Fire up the first Python handler
>    PythonTransHandler handlers.translate
>
>    # Logging configuration
>    # PythonOption Log off
>    PythonOption Log /stage/w3serv/vhost/logs/debug.log
>    # Tell the Python site to ignore these paths,
>
>    PythonOption DontHandle /icons:/images:/~:/i/:/files/:/pipermail
>
>    # Tell the Python handler to ignore these extensions
>
>    PythonOption DontHandleExt html:htm:php:php3:phps:php4:cgi
>
>
>
>    # Then tell Apache how to handle them.
>
>    Alias /icons /stage/w3serv/common/docs/icons
>
>    Alias /images /stage/w3serv/common/docs/images
>
>    UserDir disable
>
> -----
>
> Any help would be appreciated.
>
> - Murali
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Sun Feb  2 19:54:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:22 2004
Subject: [mod_python] Adding an object to connection
In-Reply-To: <001d01c2c9eb$79196480$232fbfd1@pavilion>
Message-ID: <20030202195328.J51473-100000@eden.ispol.com>

The connection object is still the old-style python object, and thus you
cannot add attributes to it. I plan to rewrite it (as well as the server
object), but it won't be in 3.0.2 - perhaps 3.0.3?

Grisha

On Sat, 1 Feb 2003, Scott McNutt wrote:

> It would be very convenient for my app to know when a
> connection is dropped (keepalive timeout or max requests
> event occurs on a client connection).
>
> The connection notes are for str types only ... and
> req.connection is readonly ... so I'm basically looking for some
> way to add an object attribute to the connection ... so I can at
> least know when the connection is dropped.
>
> I'd appreciate any ideas, suggestions, comments.
>
> Thank,
> --Scott
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mateusz at ant.gliwice.pl  Mon Feb  3 16:03:59 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:53:22 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
Message-ID: <200302031603.59186.mateusz@ant.gliwice.pl>

shell interpreter is able use that encoding:
>>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
g\xc4\x99\xc5\x9bl'
while mod_python's interpreter refuses ...

Any ideas why ?
TIA

-- 
Mateusz Korniak
easy.com  easy.go


From Mongryong at sympatico.ca  Mon Feb  3 11:49:57 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:53:22 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
In-Reply-To: <200302031603.59186.mateusz@ant.gliwice.pl>
References: <200302031603.59186.mateusz@ant.gliwice.pl>
Message-ID: <1044290998.3112.4.camel@refugeeMedia>

On Mon, 2003-02-03 at 10:03, Mateusz Korniak wrote:
> shell interpreter is able use that encoding:
> >>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
> 'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
> g\xc4\x99\xc5\x9bl'
> while mod_python's interpreter refuses ...
> 
> Any ideas why ?
> TIA
> 
Hmmm...coincidentally, there are encoding in issues with
mod_python/Apache and XML libraries such as 4Suite's.  Up to this point,
the problem is unresolved.  It appears the encoding library is not being
properly started by mod_python. 



From agenkin-lst-mod_python at thpoon.com  Mon Feb  3 21:46:03 2003
From: agenkin-lst-mod_python at thpoon.com (Arcady Genkin)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] cannot import mod_python.apache error
References: <20030202194957.W51473-100000@eden.ispol.com>
Message-ID: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>

"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:

> Someone else reported this "import site" problem, and as far as I can
> remember it is actually a bug in Python, not mod_python - perhaps someone
> can fill in the details?

When installing Python from sources, "make install" installs the files
in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
permissions for everything else are fine).  I have to manually fix
them every time I (re)compile Python.  When I forget to fix them, the
error message that I am seeing is exactly:

      [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
      import mod_python.apache.

Perhaps this is what was causing the grief for the original poster,
since it looks awfully similar to the subject line of this thread.
-- 
Arcady Genkin : CDF Systems Administrator
http://www.cdf.toronto.edu/~agenkin/contact.html

guilt is the cause of more disauders
than history's most obscene marorders (E.E. Cummings)

From Mongryong at sympatico.ca  Mon Feb  3 22:13:01 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> 
	<uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <1044328382.3116.249.camel@refugeeMedia>

On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I can
> > remember it is actually a bug in Python, not mod_python - perhaps someone
> > can fill in the details?
> 
> When installing Python from sources, "make install" installs the files
> in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
> permissions for everything else are fine).  I have to manually fix
> them every time I (re)compile Python.  When I forget to fix them, the
> error message that I am seeing is exactly:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  He's been quiet ever since, so I'm assuming that solved his
problem.



From dustin at ywlcs.org  Mon Feb  3 21:46:41 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <20030204034640.GH14728@eleanor.internal.ywlcs.org>

On Mon, Feb 03, 2003 at 09:46:03PM -0500, Arcady Genkin wrote:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

This seems to be a very common error, and the result of an enormous variety
of problems.  Would it be possible to, in circumstances that normally trigger
this log message, initiate some series of checks for common problems, and
produce more specific messages?  This wouldn't impact normal operational
efficiency (since the extra checks would only be triggered when this message
is produced), but would probably significantly reduce messages about
installation problems.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

From gmurali at cs.uchicago.edu  Mon Feb  3 23:23:45 2003
From: gmurali at cs.uchicago.edu (Murali krishnan Ganapathy)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <1044328382.3116.249.camel@refugeeMedia>
Message-ID: <000001c2cc0d$972b8c90$e8e38780@triangle>

[Original Poster] I thought I replied to the list about this problem
before. May be I forgot to CC the list. I tried installing Python 2.2.2,
I still got the same error. For the 2.3a1 installation, I had checked
all 
the permissions and all the usual pit falls, they were not the cause.
Before I checked the permissions and the usual stuff for the 2.2.2
installation,
another person had identified it as a bug in Python 2.3a1 (It did not
try to 
import the modules under some circumstances) and suggested a one line
patch. 
That solved the problem. I think you needed to add one line 
'_PyImportHooks()' (or something like that) to the file pythonrun.c some
where near
line 350 (I am quoting all this from memory).

So right now, I have Python 2.3a1 + mod_python 3.0.1 + Apache 2.0.44 +
PHP 4.3 + ...
working together. However, I am getting a different kind of error. The
apache processes
are catching a SIGNAL 11 and terminating. However, it is not
mod_python's fault.
The python based dispatcher code, which works with Python 1.5, no longer
works with 2.3a1.
I haven't got around to finding the exact problem. Once I do, I will
tell you guys the 
exact problem, and you guys can tell me if this is another bug in Python
2.3a1 or my code 
has to be rewritten.

Thanks for the solution. And sorry for forgetting to CC to the list.

- Murali

PS: When I reply to any of the mailing messages, neither the To field,
nor the CC field
has the list address. I guess in my previous posting I forgot to add in
the list address
by hand.

-----Original Message-----
From: Mongryong [mailto:Mongryong@sympatico.ca] 
Sent: Monday, February 03, 2003 9:13 PM
To: Arcady Genkin
Cc: Gregory (Grisha) Trubetskoy; ganapathy murali krishnan;
mod_python@modpython.org
Subject: Re: [mod_python] cannot import mod_python.apache error


On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I 
> > can remember it is actually a bug in Python, not mod_python - 
> > perhaps someone can fill in the details?
> 

> I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  
> He's been quiet ever since, so I'm assuming that solved his problem.






From gmurali at cs.uchicago.edu  Tue Feb  4 18:23:56 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] mp 3.0.1 + Python 2.3: child pid nnnnn exit signal Segmentation fault
 (11)
References: <3E3ADAA6.2010707@cs.uchicago.edu>	<1044049878.13789.42.camel@refugeeMedia>	 <3E3AFAB4.8070205@cs.uchicago.edu> <1044053589.1599.59.camel@refugeeMedia>	 <3E3B03A6.60009@cs.uchicago.edu> <1044058560.27207.3.camel@rye>
Message-ID: <3E40599C.4000705@cs.uchicago.edu>

I have a Apache 2.0.44 + mp 3.0.1 (Python 2.3a1) installed.
If I use a simple PythonHandler directive as specified in the
mod_python tutorial things work fine. However when I start using
PythonInitHandler and PythonTransHandler directives the apache child
processes start dying with a Signal 11. By inserting "print" statements
I have learnt the following.

The PythonInitHandler is being called and successfully completes.
The PythonTransHandler is being called and sucessfully completes.
Just before the "return apache.OK", it (transhandler) calls

req.add_handler("PythonHandler", "handlers.dispatch")

The file $SERVERROOT/handlers/dispatch.py is readable by all.
The first line of the handler function in dispatch.py never
gets executed!

The browser tries the same URL about 6 times before giving up with a
"Document contains no data" error. On the server side, the error_log of
apache, contains

----------
[Tue Feb 04 17:46:05 2003] [notice] mod_python: (Re)importing module 
'handlers.translate'
[Tue Feb 04 17:46:06 2003] [notice] child pid 17086 exit signal 
Segmentation fault (11)
----------

about once for each time the browser requests for the page.

The main apache process doesnt seem to be affected, in that after all 
this happens, it continues to wait to service other requests. So in 
effect html, php and cgi's all work fine but .py files dont.

Can anyone shed some light on this?

- Murali


From dmitry at deluxoft.com  Sat Feb  8 14:03:30 2003
From: dmitry at deluxoft.com (Dmitry Dembinsky)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] mod_python 2.7 documentation inconsistency
Message-ID: <001301c2cf6a$18918c30$1400a8c0@LAPTOP>

Hello,

I'm using mod_python 2.7.8 with Apache 1.3.27 running on RH7.3

When I was trying to use mod_python.publisher module
I've encountered the following inconsistency in a documentation:

Section 3.4 ("Publisher Handler Makes it Easy") contains a sample HTML
form.
The line specifying form handler is the following:

  <form action="form/email" method="POST">

While it should be:

  <form action="form.py/email" method="POST">

to make an example working.

(Or, probably "AddHandler python-program .py" should be replace with
"SetHandler python-program" ?)

As I've seen, the latest doc for mod_python 3.0.1 doesn't have this
inconsistency.

Regards,
Dmitry Dembinsky <dmitry@deluxoft.com>


From chip at cyan.com  Mon Feb 10 16:03:58 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] layering mod_auth_digest and mod_python authentication in apache2
Message-ID: <20030211000358.M11624@cyan.com>

I am trying to setup mod_auth_digest to work with a mod_python script.

What I want is AuthDigest to decode the username, and password, and then to
pass this onto my mod_python authenticationn scripts, without having to
re-write the entire mod_auth_digest in Python.

I have been tyying to use the mod_python's PythonAuthenHandler[1] and AuthType
Digest in my httpd.conf, but AuthDigest is always rejecting the
users/passwords, because I am not using a localfile at all.

I thought mod_auth_digest would have somthing simular to mod_auth_ldap's
AuthLDAPAuthoritative[2], which can pass authentication onto the next handler,
but I don't think that exists for mod_auth_digest

Here is the basic plan, the HTTP client, uses Digest authentication to apache,
which passes it onto mod_auth_digest, who will NOT find it in a local text
file, but instead will pass on the request with the decoded username and
password to mod_python's PythonAuthenHandler where i will use my own python
scripts to validate the user information.

Is what I am trying todo even possible, and if it is, what do i need todo?

Thanks,
-chip

[1] http://www.modpython.org/live/mod_python-3.0.1/doc-html/node54.html
[2] http://httpd.apache.org/docs-2.0/mod/mod_auth_ldap.html#authldapauthoritative

From skremer at q.cis.uoguelph.ca  Wed Feb 12 14:49:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Date persistence accross connections.
Message-ID: <Pine.LNX.4.44.0302121437360.7578-100000@q.cis.uoguelph.ca>

Hi,

I would like to store information in a variable and be able to access it 
with subsequent http requests.

It is my understanding that each virtual server name has its own namespace 
(which is no problem since all my information is specific to the 
namespace), and that httpd is now threaded instead of multiple processes.  
So should I be able to just store a variable in my local namespace and 
then return to it the next time I make an http connection?  Or might my 
next connect be executing python in a different namespace for some 
reason?!?

Sorry if I'm way off base here.  Any advice much appreciated.

	-SK

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.8913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From gnb at itga.com.au  Thu Feb 13 08:21:18 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: Your message of Wed, 12 Feb 2003 14:49:03 -0500.
Message-ID: <200302122121.IAA02700@lightning.itga.com.au>

skremer@q.cis.uoguelph.ca said:
> So should I be able to just store a variable in my local namespace and
>  then return to it the next time I make an http connection?  Or might
> my  next connect be executing python in a different namespace for some
>  reason?!? 

It might work in certain restricted circumstances, but it's likely to be 
unreliable.  You can't know when Apache will decide it's time for a new 
process.  You can't know when the apache process gets re-configured or 
restarted.  You can't know when another unrelated session to the same 
application will begin. 

You would be much better off to look at some of the session management tools
that work with mod_python and handle the problem properly.  I use Albatross
(http://www.object-craft.com.au/projects/albatross/) but that does a whole 
heap more than just session management.  Others have recommended PSO 
(http://www.scriptfoundry.com/modules/pso/).

Greg.




From thanos at 0x01.com  Wed Feb 12 18:28:45 2003
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Re: pso and mod_python
In-Reply-To: <20030212145018.GA1414@mico>
References: <20030211202535.GI2050@mico>
            <20030211224116.73074.qmail@0x01.com>
            <20030212145018.GA1414@mico>
Message-ID: <20030212232845.79816.qmail@0x01.com>

yes I forgot to mention the following: 

mod_python by default looks for a method in your module called "handler"
so given this line in your .htaccess:
PythonHandler test 

your should add
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border'
handler = TestHandler().handle 

On the other hand with mod_python you can stipulate which handler to use:
PythonHandler test:TestHandler.handle 

But your handler class muts take a request object as an argument to the 
constructor. pso's TemplateHandler does not have a CTOR defined (Opps)
so you will have to add your own:
class TestHandler(TemplateHandler):
   def __init__(self, req):
        TemplateHandler.__init__(self) 

I hope this helps 

thanos 

 

 

 


Jeffrey Clement writes: 

> Thank you for your help.  I think I'm still missing something.  What is
> test.py? 
> 
> If I wanted: 
> 
> from pso.service import ServiceHandler
> from pso.handlers import TemplateHandler
> from dbsession import CookieDBImpl 
> 
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border' 
> 
> if __name__=='__main__':
>     ServiceHandler().run(TestHandler().handle, CookieDBImpl) 
> 
> How do I make this get run by mod_python.  It needs a handle method
> right?  And that takes a requestInfo parameter.  I assume the
> pso.modpython::fixup adds the pso() method to the request handler but
> how do I use this with my templateHandler? 
> 
> Thank you for all your help.  I'm finding PSO to be awesome for thhe
> current project I'm working on only just getting hung up once in a
> while. 
> 
> Jeff 
> 
> 
> On Tue, Feb 11, 2003 at 05:41:16PM -0500, thanos@0x01.com wrote:
>> Jeffrey,  
>> 
>> You are right: the problem lies with your .htaccess file. It should be:  
>> 
>>  
>> 
>> 
>> AddHandler python-program .py
>> PythonHandler test
>> PythonFixupHandler pso.modpython::fixup
>> PythonLogHandler pso.modpython::cleanup  
>> 
>> You have to set the PythonFixupHandler and PythonLogHandler so pso can set 
>> thing up such as the session handling.  
>> 
>> A look through the pso guide 
>> [http://sourceforge.net/docman/display_doc.php?docid=11314&group_id=49265] 
>> shows me that this information is missing. It is
>> metioned in the "Easy mod_python Session Handling with pso.session" how-to
>> [http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html] so I 
>> guess I am not completly guilty!  
>> 
>> Also trying out the sample mod_python code in the guide, i find things are 
>> broken. So I will post two bug reports to fix these problems.  
>> 
>> 
>> thanos  
>> 
>>  
>> 
>>  
>> 
>> 
>> Jeffrey Clement writes:  
>> 
>> >Hi there, 
>> >
>> >I'm trying to use PSO with mod_python and having some difficulties that
>> >I hope you can assist me with. 
>> >
>> >I have my appliaction: (test.py)
>> >=====================================================================
>> >from pso.service import ServiceHandler
>> >from pso.handlers import TemplateHandler
>> >from dbsession import CookieDBImpl 
>> >
>> >class TestHandler(TemplateHandler):
>> >    DEFAULT_TEMPLATE='cat_border' 
>> >
>> >if __name__ == '__main__':
>> >    ServiceHandler().run(TestHandler().handle, CookieDBImpl)
>> >===================================================================== 
>> >
>> >This above script runs fine as a CGI script.  However I have no idea how
>> >to make it run as a mod_python script. 
>> >
>> >I've got modpython installed and tested (I know it's OK) but It won't
>> >run my scripts.  I suspect the problem is I'm not understanding what
>> >exactly goes in .htaccess 
>> >
>> >I currently have:
>> >  AddHandler python-program .py
>> >  PythonHandler test.py
>> >  PythonDebug On 
>> >
>> >I know mod_python looks for a method handle.  Is there a mod_python
>> >wrapper that does I'm supposed to set as my PythonHandler?
>> >Thank you, Jeff 
>> > 
>> 
>>  
>> 
>> >-- 
>> >Jeff Clement 

>>  
>> 
>> 

From gashalot at gashalot.com  Thu Feb 13 11:36:50 2003
From: gashalot at gashalot.com (Robert Gash)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
Message-ID: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>

I recently snagged the binary packages for apache-2.0.44 and
mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
package repository.  The system I'm installing on is a 4.7-RELEASE box,
and I'm getting the following error from Apache:

root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"

I have attempted to compile mod_python myself and I have attempted to
install the binary package, does anyone know how to correct this error?

-R

-- 
Robert Gash, gashalot@gashalot.com
(Web) http://gashalot.com/
(PGP) http://gashalot.com/pgpkeys.txt

From grisha at modpython.org  Thu Feb 13 12:01:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
In-Reply-To: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>
Message-ID: <20030213115857.I7394-100000@eden.ispol.com>

If you're using precompiled packages, I don't think you'll be able to get
it going. Try compiling apache2 from ports, but make sure to edit the
Makefile in the ports first to add --enable-threads to the options. It's
mentioned in the mod_python README file, but I don't rember whether was
added there before or after 3.0.1 was released.

Grisha

On Thu, 13 Feb 2003, Robert Gash wrote:

> I recently snagged the binary packages for apache-2.0.44 and
> mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
> package repository.  The system I'm installing on is a 4.7-RELEASE box,
> and I'm getting the following error from Apache:
>
> root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
> "pthread_create"
>
> I have attempted to compile mod_python myself and I have attempted to
> install the binary package, does anyone know how to correct this error?
>
> -R
>
> --
> Robert Gash, gashalot@gashalot.com
> (Web) http://gashalot.com/
> (PGP) http://gashalot.com/pgpkeys.txt
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jwm-modpython at sentinelchicken.net  Thu Feb 13 13:39:25 2003
From: jwm-modpython at sentinelchicken.net (Jason Morgan)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Fatal Python error: PyThreadState_Delete:
Message-ID: <20030213183925.GB88059@sentinelchicken.net>

OK, I moved from mod_python 2.7 and Apache 1.3 to 3.0 and 2.0,
respectively, about two weeks ago. All of a sudden, in the last two
days, I start getting these arror messages.

First I get this:

Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:04 2003] [notice] child pid 86935 exit signal Abort
trap (6)
[Thu Feb 13 09:11:04 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] child pid 86967 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] child pid 86936 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:06 2003] [notice] mod_python: (Re)importing module 
'index'

Then lots and lots of this:

[Thu Feb 13 09:11:31 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:32 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:33 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:34 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:35 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:36 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:37 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:38 2003] [warn] (13)Permission denied: connect to
listener

My site isn't doing anything - just posting an under-construction
message.

I'm running FreeBSD 4.7 and I installed both Apache and mod_python from
ports.


Thanks,

Jason

----- End forwarded message -----

From matthew at yak.org  Thu Feb 13 19:43:01 2003
From: matthew at yak.org (Matthew J. Probst)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Documentation inconsistency in 3.0.1 docs
In-Reply-To: <20030214013301.12832.73000.Mailman@eden.ispol.com>
Message-ID: <5.2.0.9.0.20030213193321.00b31810@192.168.0.253>

Since I'm a complete newbie at mod_python, I thought I'd share the results 
of my head-banging against the documentation.

In Section 3.4 (Now something More Complicated) the sample code says

..
..
def authenhandler(req):
   user = req.user
   pw = req.get_basic_auth_pw()
..
..

This snip of code failed to authenticate because req.get_basic_auth_pw() 
needs to be called -before_ doing anything with the user.  I found this out 
by looking in section 5.1.7, which clearly states this.  However, section 
5.1.7 incorrectly states that you get user from req.connection.user instead 
of req.user.

This stuff might be obvious to someone who moved from mod_python 2.x to 3.x 
but since I'm new it didn't make sense for a while.  So section 3.4 and 
5.1.7 need changing,  _or_ (less likely) there's a lurking bug somewhere.


From skremer at q.cis.uoguelph.ca  Thu Feb 13 21:14:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: <200302122121.IAA02700@lightning.itga.com.au>
Message-ID: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>

Thanks for the reply Greg.  Actually I'm in the process of writing my own
session management tool (I looked at a few others and none of them really
suited my needs; plus I wanted to do it myself for the learning
experience).  So now I'm trying to figure out what my options are for
implementing persistent data.  Right now I'm identifying my session by
means of a cookie, so that part's not a problem.  My challenge now is, how
to associate more data with the cookie (session) in a way that persists
accross http requests.

The three options I'm working with right now are:

(1) just store in the info in the global namespace, keyed on the cookie.  
This seems to me to be the simplest, and fastest solution.  The drawbacks
are that queries that go to a different process won't have access to my
data.  Now that httpd is threaded, this happens much less often. In fact,
it seems to only occur when I explicitly restart apache or reboot my 
machine (which is basically never since I don't run Windows and have a 
UPS).

(2) Save it to a file.  This is slow, but otherwise would work fine if I 
implement appropriate file locking.

(3) Send it via a socket to another process which all mod_python processes 
share.

(4) Some combination of (1) with (2 or 3), which writes the data away and 
only retrieves it from (2,3) if its not in the local namespace.  I'm not 
sure how much I will gain from not retrieving data from (2,3) most of the 
time.

Are there any good options which I have overlooked?  Does my evaluation of
the alternatives seem sound?  Any suggestions or comments.

Thanks for any advice anyone wants to pass my way.

	-SK

 On Thu, 13 Feb 2003, Gregory Bond wrote:

> 
> skremer@q.cis.uoguelph.ca said:
> > So should I be able to just store a variable in my local namespace and
> >  then return to it the next time I make an http connection?  Or might
> > my  next connect be executing python in a different namespace for some
> >  reason?!? 
> 
> It might work in certain restricted circumstances, but it's likely to be 
> unreliable.  You can't know when Apache will decide it's time for a new 
> process.  You can't know when the apache process gets re-configured or 
> restarted.  You can't know when another unrelated session to the same 
> application will begin. 
> 
> You would be much better off to look at some of the session management tools
> that work with mod_python and handle the problem properly.  I use Albatross
> (http://www.object-craft.com.au/projects/albatross/) but that does a whole 
> heap more than just session management.  Others have recommended PSO 
> (http://www.scriptfoundry.com/modules/pso/).
> 
> Greg.
> 
> 
> 

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From drh9296 at ritvax.rit.edu  Thu Feb 13 22:20:30 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Date persistence accross connections.
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <3E4C607E.5050608@rit.edu>

Stefan C. Kremer wrote:
 > Thanks for the reply Greg.  Actually I'm in the process of writing my own
 > session management tool (I looked at a few others and none of them really
 > suited my needs; plus I wanted to do it myself for the learning
 > experience).  So now I'm trying to figure out what my options are for
 > implementing persistent data.  Right now I'm identifying my session by
 > means of a cookie, so that part's not a problem.  My challenge now 
is, how
 > to associate more data with the cookie (session) in a way that persists
 > accross http requests.
 >
 > The three options I'm working with right now are:
 >
 > (1) just store in the info in the global namespace, keyed on the 
cookie.
 > This seems to me to be the simplest, and fastest solution.  The drawbacks
 > are that queries that go to a different process won't have access to my
 > data.  Now that httpd is threaded, this happens much less often. In fact,
 > it seems to only occur when I explicitly restart apache or reboot my
 > machine (which is basically never since I don't run Windows and have a
 > UPS).
 >
 > (2) Save it to a file.  This is slow, but otherwise would work fine if I
 > implement appropriate file locking.
 >
 > (3) Send it via a socket to another process which all mod_python 
processes
 > share.
 >
 > (4) Some combination of (1) with (2 or 3), which writes the data away 
and
 > only retrieves it from (2,3) if its not in the local namespace.  I'm not
 > sure how much I will gain from not retrieving data from (2,3) most of 
the
 > time.
 >
 > Are there any good options which I have overlooked?  Does my 
evaluation of
 > the alternatives seem sound?  Any suggestions or comments.
 >
 > Thanks for any advice anyone wants to pass my way.
 >
 > 	-SK

How about storing stuff in a database?

MySQL (and many other DBs) have very usable python interfaces; getting 
and adding them to your build should be pretty simple.

You'll get all the persistence of storing to a file, but with added 
data-gathering functionality and no need to worry about locking (the DB 
should handle this for you).

The only difficulty is that you will probably want to store data in a 
DB-useable format - aka not by storing pickled objects.

--david


From Mongryong at sympatico.ca  Fri Feb 14 00:37:59 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Date persistence accross connections.
In-Reply-To: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <1045201079.3096.263.camel@refugeeMedia>

On Thu, 2003-02-13 at 21:14, Stefan C. Kremer wrote:
> Are there any good options which I have overlooked?  Does my evaluation of
> the alternatives seem sound?  Any suggestions or comments.

Have you looked at using an 'object oriented database' such as ZODB? 
ZODB is used by Zope for most of its session management.  However, it
should work in any Python application include mod_python.

I believe ZODB has drivers for files, databases, and even networked
capabilities.  ZODB also session garbage collection.




From mike.looijmans at asml.com  Fri Feb 14 09:46:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, and warnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d405$802aaa80$926a1e6e@wsasd464>

System & software:

SUN Ultra-10 (called wsasd464)
Solaris 2.6 installed (SunOS 5.6)
GCC version 2.8.1 (Please don't tell me to use 2.9.5 - It's company politics
prohibiting me from using that - I had no problems compiling apache and
python)
Apache 2.0.44 compiled, installed, up and running (/usr/local/apache/...)
Python 2.2.2 compiled, installed (/usr/local)

(Also MySQL and Python-to-MySQL 0.91 but this seems irrelevant)

Problem:

wsasd464:/scratch/download/apache/mod_python-3.0.1 %
./configure --with-apxs=/usr/local/apache/bin/apxs --with-python=/usr/local/bi
n/python

[== lots of OK's here, no problems ==]

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake
ar -x `gcc -print-libgcc-file-name` _eprintf.o
ar -x `gcc -print-libgcc-file-name` _floatdidf.o

Compiling for DSO. For static, do "make static"

/usr/local/apache/bin/apxs -I/usr/local/asm/download/apache/mod_python-3.0.1/s
rc/include -I/usr/local/apache/include -I/usr/local/include/python2.2 -c
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
serverobject.c connobject.c filterobject.c hlist.c
hlistobject.c -L/usr/local/lib/python2.2/config -lm  -lpython2.2   -lsocket -l
nsl -ldl  -lpthread -lthread   -lm _eprintf.o _floatdidf.o
/usr/local/apache/build/libtool --silent --mode=compile
cc -prefer-pic  -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=6 -D_POSIX_PTHREAD
_SEMANTICS -D_REENTRANT -g -O2 -I/usr/local/apache/include -I/usr/local/asm/do
wnload/apache/mod_python-3.0.1/src/include -I/usr/local/apache/include -I/usr/
local/include/python2.2  -c -o mod_python.lo mod_python.c && touch
mod_python.slo
In file included from /usr/local/include/python2.2/Python.h:24,
                 from
/usr/local/asm/download/apache/mod_python-3.0.1/src/include/mod_python.h:92,
                 from mod_python.c:67:
/usr/local/include/python2.2/pyconfig.h:104: warning: `_FILE_OFFSET_BITS'
redefined
/usr/include/sys/feature_tests.h:80: warning: this is the location of the
previous definition


[==this warning appears a dozen times repeatedly==]

[===Then I get this near the end ===]

*** Warning: Linking the shared library mod_python.la against the non-libtool
*** objects  _eprintf.o _floatdidf.o is not portable!
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- L
grep: illegal option -- /
grep: illegal option -- u
grep: illegal option -- r
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- a
grep: illegal option -- /
grep: illegal option -- /
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- f
grep: illegal option -- g
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- o
grep: illegal option -- k
grep: illegal option -- e
grep: illegal option -- t
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- m
Usage: grep -hblcnsviw pattern file . . .

Now su and make install
  (or, if you only want to perform a partial install,
   you can use make install_dso and make install_py_lib)

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake install

[== stuff here appears OK ==]

Took a gamble and installed it anyway. Investigating the Makefiles leaded me
to conclude that the "grep" errors seem to come from the 'apxs' program in
Apache, which unfortunately appears to have been written in Perl so I couldn't
understand much of it.

Now, I configured apache to load the module, and created 'mptest.py' as
suggested in the manual. Attempting to access it will yield an empty document
(no data at all, no headers).

Looking in the error_log of apache yields:

[Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal Segmentation
fault (11)






From Christian.Ferrari at primeur.com  Fri Feb 14 10:23:27 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
Message-ID: <3E4CB58F.50408@primeur.com>

Hardware/software specs:

# uname -a
HP-UX apollo B.11.11 U 9000/800 816839621 unlimited-user license

# gcc -v
Reading specs from /opt/gccs/lib/gcc-lib/hppa2.0w-hp-hpux11.11/3.2.1/specs
Configured with: ../gcc-3.2.1/configure --prefix=/opt/gccs 
--enable-languages=c,
c++ --with-as=/opt/gccs/bin/as
Thread model: single
gcc version 3.2.1

# /opt/Python-2.2/bin/python -V
Python 2.2.2
*** Install steps:
./configure --prefix=/opt/Python-2.2
make
make install

# /opt/apache2/bin/httpd -v
Server version: Apache/2.0.44
Server built:   Feb 13 2003 16:53:25
*** Install steps:
./configure --prefix=/opt/apache2
make
make install

# /opt/apache2/build/libtool --version
ltmain.sh (GNU libtool) 1.4.3 (1.922.2.110 2002/10/23 01:39:54)

*** ISSUE POINT: ***

mod_python package: mod_python-3.0.1
*** Install steps:
./configure --with-apxs=/opt/apache2/bin/apxs 
--with-python=/opt/Python-2.2/bin/python
# make

Compiling for DSO. For static, do "make static"

         /opt/apache2/bin/apxs 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-L/opt/Python-2.2/lib/python2.2/config  -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
      -lm  -lpython2.2   -lnsl -ldld  -lpthread   -lm

[...]
Some OK compile steps...
[...]

/opt/apache2/build/libtool --silent --mode=link gcc -o mod_python.la 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2  -rpath 
/opt/apache2/modules -module -avoid-version  hlistobject.lo hlist.lo 
filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo 
requestobject.lo _apachemodule.lo mod_python.lo 
-L/opt/Python-2.2/lib/python2.2/config -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
-lm -lpython2.2 -lnsl -ldld -lpthread -lm

*** Warning: linker path does not have real file for library lpython2.2.
*** I have the capability to make that library automatically link in when
*** you link to this library.  But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because I did check the linker path looking for a file starting
*** with libpython2.2 and none of the candidates passed a file format test
*** using a file magic. Last file checked: 
/opt/Python-2.2/lib/python2.2/config/libpython2.2.a

*** Warning: libtool could not satisfy all declared inter-library
*** dependencies of module mod_python.  Therefore, libtool will create
*** a static module, that should work as long as the dlopening
*** application is linked with the -dlopen flag.
Usage: ln [-f] [-i] [-s] f1 f2
        ln [-f] [-i] [-s] f1 ... fn d1
*** Error exit code 2

Stop.
*** Error exit code 1

Stop.



Why libtool is complaining for a "libpython" shared object while no 
"libpython.sl" should be produced in UNIX envs?
Does anyone know where the error is?

Thanks
Christian



-- 
______________________________________

Christian Ferrari
c/o PRIMEUR ITALIA
Via E. Mattei, 1/106 A
30020 Marcon (VE) - ITALY

Tel.:    +39 041 5950998
Fax:     +39 041 5951024
Mobile:  +39 348 8960572
E-mail:  Christian.Ferrari@primeur.com
Web:     http://www.primeur.com/


From grisha at modpython.org  Fri Feb 14 09:45:43 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
In-Reply-To: <3E4CB58F.50408@primeur.com>
Message-ID: <20030214093919.S20286-100000@eden.ispol.com>

On Fri, 14 Feb 2003, Christian Ferrari wrote:

> # /opt/apache2/bin/httpd -v
> Server version: Apache/2.0.44
> Server built:   Feb 13 2003 16:53:25
> *** Install steps:
> ./configure --prefix=/opt/apache2

Here you also need --enable-so

> *** Warning: linker path does not have real file for library lpython2.2.
> *** I have the capability to make that library automatically link in when
> *** you link to this library.  But I can only do this if you have a
> *** shared version of the library, which you do not appear to have
> *** because I did check the linker path looking for a file starting
> *** with libpython2.2 and none of the candidates passed a file format test
> *** using a file magic. Last file checked:
> /opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>

I do not have any experience with HP-UX, but on other systems a similar
message indicates an old version of libtool, which wouldn't allow linking
shared and static libs together. So I'd first see if upgrading libtool
would help. After you upgrade, rebuild apache by first running
./buildconf like this:

./buildconf
./configure --prefix=/opt/apache2 --enable-so
make clean
make

Then for mod_python, do make clean; make

Grisha


From Christian.Ferrari at primeur.com  Mon Feb 17 11:01:39 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
References: <20030214093919.S20286-100000@eden.ispol.com>
Message-ID: <3E50B302.6030809@primeur.com>


Gregory (Grisha) Trubetskoy wrote:

> On Fri, 14 Feb 2003, Christian Ferrari wrote:
> 
> 
>># /opt/apache2/bin/httpd -v
>>Server version: Apache/2.0.44
>>Server built:   Feb 13 2003 16:53:25
>>*** Install steps:
>>./configure --prefix=/opt/apache2
>>
> 
> Here you also need --enable-so
> 
> 
>>*** Warning: linker path does not have real file for library lpython2.2.
>>*** I have the capability to make that library automatically link in when
>>*** you link to this library.  But I can only do this if you have a
>>*** shared version of the library, which you do not appear to have
>>*** because I did check the linker path looking for a file starting
>>*** with libpython2.2 and none of the candidates passed a file format test
>>*** using a file magic. Last file checked:
>>/opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>>
>>
> 
> I do not have any experience with HP-UX, but on other systems a similar
> message indicates an old version of libtool, which wouldn't allow linking
> shared and static libs together. So I'd first see if upgrading libtool
> would help. After you upgrade, rebuild apache by first running
> ./buildconf like this:
> 
> ./buildconf
> ./configure --prefix=/opt/apache2 --enable-so
> make clean
> make
> 
> Then for mod_python, do make clean; make
> 
> Grisha
> 
> 

Libtool supplied with Apache 2.0.44 is 1.4.3; last libtool available on 
GNU site is 1.4.3.
Anywhere, I installed a fresh-stand-alone libtool-1.4.3 package, but 
Apache didn't use it, so I tryed to force Apache build:

./configure --prefix=/opt/apache2 --enable-so 
--with-libtool=/usr/local/bin/libtool

Apache did NOT like "my standard" libtool; this is the Apache build error:

[... some working stuff ...]

Making all in dso/unix
         gcc -g -O2   -DHAVE_CONFIG_H -DHPUX11 -D_REENTRANT 
-D_XOPEN_SOURCE_EXTENDED   -I../../include -I../../include/arch 
-I../../include/arch/unix  -c dso.ccr libapr-0.la strings/apr_cpystrn.o 
strings/apr_fnmatch.o strings/apr_snprintf.o strings/apr_strings.o 
strings/apr_strnatcmp.o strings/apr_strtok.o passwd/apr_getpass.o 
tables/apr_hash.o tables/apr_tables.o file_io/unix/copy.o 
file_io/unix/dir.o file_io/unix/fileacc.o file_io/unix/filedup.o 
file_io/unix/filepath.o file_io/unix/filestat.o file_io/unix/flock.o 
file_io/unix/fullrw.o file_io/unix/mktemp.o file_io/unix/open.o 
file_io/unix/pipe.o file_io/unix/readwrite.o file_io/unix/seek.o 
network_io/unix/inet_ntop.o network_io/unix/inet_pton.o 
network_io/unix/sendrecv.o network_io/unix/sockaddr.o 
network_io/unix/sockets.o network_io/unix/sockopt.o 
threadproc/unix/proc.o threadproc/unix/procsup.o 
threadproc/unix/signals.o threadproc/unix/thread.o 
threadproc/unix/threadpriv.o misc/unix/charset.o misc/unix/errorcodes.o 
misc/unix/getopt.o misc/unix/otherchild.o misc/unix/rand.o 
misc/unix/start.o misc/unix/version.o locks/unix/global_mutex.o 
locks/unix/proc_mutex.o locks/unix/thread_cond.o 
locks/unix/thread_mutex.o locks/unix/thread_rwlock.o time/unix/time.o 
time/unix/timestr.o mmap/unix/common.o mmap/unix/mmap.o shmem/unix/shm.o 
user/unix/groupinfo.o user/unix/userinfo.o memory/unix/apr_pools.o 
atomic/unix/apr_atomic.o poll/unix/poll.o poll/unix/pollacc.o 
support/unix/waitio.o dso/unix/*.o; libapr-0.la
sh[4]: cr:  not found.
*** Error exit code 127

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.



I'm going to post the link issue on "libtool" mailing list.
Thanks
Christian


From mike.looijmans at asml.com  Wed Feb 19 10:52:19 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d7fc$974e0b80$926a1e6e@wsasd464>

After using a 2x4 and a kind word, I managed to compile it with gcc version
2.95
Guess what, now it works (sort of... see next post...)

--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Gregory (Grisha) Trubetskoy <grisha@modpython.org>
To: Mike Looijmans <mike.looijmans@asml.nl>
Date: Friday, February 14, 2003 3:38 PM
Subject: Re: [mod_python] Newbie needs help: Compile errors, segfault,
andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1


>
>Most likely you have an outdated libtool.
>
>Grisha
>
>On Fri, 14 Feb 2003, Mike Looijmans wrote:


[snip]

>> [Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal
Segmentation
>> fault (11)




From mike.looijmans at asml.com  Wed Feb 19 11:03:04 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] cgihandler repeats the whole response for each print command
Message-ID: <01c2d7fe$17c13c00$926a1e6e@wsasd464>

To allow a quick migration of thousands of CGI code lines, I intended to use
the cgihandler.py handler to run existing CGI script.

However, if I setup things that way, and use a small CGI script like this one:


print 'status: 200 OK'
print 'content-type: text/html'
print
print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
print '<BODY><P>Hello Mod_Python world!</P></BODY>'
print '</HTML>'

This would yield a simple 'hello world' page, but the output that is sent to
the browser is as follows:

HTTP/1.1 200 OK
Date: Wed, 19 Feb 2003 09:58:12 GMT
Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
Content-Type: text/html; charset=ISO-8859-1
Connection: close

<HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML>



It seems that (except for the headers) the "sys.stdout" from the cgihandler
sends the whole output history again on each "print" command, like this class
would:

class FaultyIO:
    def __init__(self, req)
        self.msg = ''
        self.req = req
    def write(self, s):
        self.msg += s
        req.send(self.msg)






From mike.looijmans at asml.com  Wed Feb 19 11:56:07 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Solution (bug): cgihandler repeats the whole response for each print command
Message-ID: <01c2d805$80f87d80$926a1e6e@wsasd464>

Found the cause, the problem is in "apache.py" (installed as
/usr/local/lib/python2.2/site-packages/mod_python/apache.py on my system).

Line # 693 says (in function write() of CGIStdout:

        if not self.headers_sent:

But in the code, it NEVER sets 'self.headers_sent' to "1", thus it will never
execute the "else" part of this if.

To fix it, I inserted the following at line # 724 (the last two lines were
already there):

                ## BUG FIX: Send out duplicates....
                self.headers_sent = 1
                # write the body if any at this point
                self.req.write(ss[1])


--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Mike Looijmans <mike.looijmans@asml.com>
To: mod_python list <mod_python@modpython.org>
Date: Wednesday, February 19, 2003 11:08 AM
Subject: [mod_python] cgihandler repeats the whole response for each print
command


>To allow a quick migration of thousands of CGI code lines, I intended to use
>the cgihandler.py handler to run existing CGI script.
>
>However, if I setup things that way, and use a small CGI script like this
one:
>
>
>print 'status: 200 OK'
>print 'content-type: text/html'
>print
>print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
>print '<BODY><P>Hello Mod_Python world!</P></BODY>'
>print '</HTML>'
>
>This would yield a simple 'hello world' page, but the output that is sent to
>the browser is as follows:
>
>HTTP/1.1 200 OK
>Date: Wed, 19 Feb 2003 09:58:12 GMT
>Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
>Content-Type: text/html; charset=ISO-8859-1
>Connection: close
>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML>
>
>
>
>It seems that (except for the headers) the "sys.stdout" from the cgihandler
>sends the whole output history again on each "print" command, like this class
>would:
>
>class FaultyIO:
>    def __init__(self, req)
>        self.msg = ''
>        self.req = req
>    def write(self, s):
>        self.msg += s
>        req.send(self.msg)
>
>
>
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://www.modpython.org/mailman/listinfo/mod_python
>
>



From grisha at modpython.org  Wed Feb 19 11:40:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] cgihandler repeats the whole response for each
 print command
In-Reply-To: <01c2d7fe$17c13c00$926a1e6e@wsasd464>
Message-ID: <20030219114000.P87550-100000@eden.ispol.com>

It's known bug, it has been fixed for the next release.

Grisha

On Wed, 19 Feb 2003, Mike Looijmans wrote:

> To allow a quick migration of thousands of CGI code lines, I intended to use
> the cgihandler.py handler to run existing CGI script.
>
> However, if I setup things that way, and use a small CGI script like this one:
>
>
> print 'status: 200 OK'
> print 'content-type: text/html'
> print
> print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
> print '<BODY><P>Hello Mod_Python world!</P></BODY>'
> print '</HTML>'
>
> This would yield a simple 'hello world' page, but the output that is sent to
> the browser is as follows:
>
> HTTP/1.1 200 OK
> Date: Wed, 19 Feb 2003 09:58:12 GMT
> Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
> Content-Type: text/html; charset=ISO-8859-1
> Connection: close
>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML>
>
>
>
> It seems that (except for the headers) the "sys.stdout" from the cgihandler
> sends the whole output history again on each "print" command, like this class
> would:
>
> class FaultyIO:
>     def __init__(self, req)
>         self.msg = ''
>         self.req = req
>     def write(self, s):
>         self.msg += s
>         req.send(self.msg)
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From Jaco.Smuts at za.didata.com  Tue Feb 25 23:42:05 2003
From: Jaco.Smuts at za.didata.com (Jaco Smuts (ZA))
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] pso examples using mod_python not cgi
Message-ID: <862D79D0DADB244E8563C6F9277C02FF022C10A7@zabrysvcl01ex01.af.didata.local>

Hello there

Started plyaing with mod_python yesterday (great) and discovered pso today.
It seems to cater for my needs (seperation of code and presentation).

I'm looking for a howto or tutorial on building a site using mod_python with
pso and not cgi, or any other suggestions of frameworks to use instead of
pso.

thank you
jaco








ps I've got no control over my companies disclaimer



***************************************************************************************

This message contains information intended solely for the addressee,
which is confidential or private in nature and subject to legal privilege.
If you are not the intended recipient, you may not peruse, use,
disseminate, distribute or copy this message or any file attached to this
message. Any such unauthorised use is prohibited and may be unlawful. If
you have received this message in error, please notify the sender
immediately by e-mail, facsimile or telephone and thereafter delete the
original message from your machine. 
 
Furthermore, the information contained in this message, and any
attachments thereto, is for information purposes only and may contain the
personal views and opinions of the author, which are not necessarily the
views and opinions of Dimension Data (South Africa) (Proprietary) Limited
or its subsidiaries and associated companies ("Dimension Data"). Dimension
Data therefore does not accept liability for any claims, loss or damages
of whatsoever nature, arising as a result of the reliance on such
information by anyone. 
 
Whilst all reasonable steps are taken to ensure the accuracy and
integrity of information transmitted electronically and to preserve the
confidentiality thereof, Dimension Data accepts no liability or
responsibility whatsoever if information or data is, for whatsoever
reason, incorrect, corrupted or does not reach its intended destination. 

*************************************************************************************
 	


From mort at bork.org  Tue Feb 25 20:50:36 2003
From: mort at bork.org (Martin Hicks)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226015036.GA9764@bork.org>

Hello,

I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.

The problem that I'm having is that for my script, which I'm running using the 
publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
suggest a reason why this might happen?

127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"


TIA,
mh

-- 
Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
Beer: So much more than just a breakfast drink.

From frank at fejes.net  Tue Feb 25 21:23:39 2003
From: frank at fejes.net (Frank S. Fejes III)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <20030225212339.24710d04.frank@fejes.net>

Curious!  I've noticed this, too (frequently, like you), but only on my
NetBSD 1.5.2/x86 production server...my Debian Sparc Linux backup server and
Debian x86 Linux development machine have never produced such an error.  I
had thought it was simply a NetBSD/Apache issue and I was very nearly close
to changing operating systems as my last resort.

I am currently running Apache 1.3.27 / mod_python 2.7.8 on all servers and
I've already experimented with mod_python as both a static and dynamic
module.  I've also changed PythonDebug options, *Handler settings, and
anything else I could find.  This problem is so bad at times that I've
considered avoiding the Publisher handler altogether and simply using the
CGI handler (in case it's not a problem with all of mod_python) or even
straight CGI.

I've never found anything through google about this issue and I wonder if
others are seeing the same issues that we are.

--frank

On Tue, 25 Feb 2003 20:50:36 -0500
Martin Hicks <mort@bork.org> wrote:

> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using
> the publisher handler.  I seem to get a 404 every 8th or so attempt.  Can
> anyone suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

From jack_diederich at email.com  Tue Feb 25 23:15:38 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:23 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226041538.16673.qmail@email.com>

>----- Original Message -----
>From: "Frank S. Fejes III" <frank@fejes.net>
>Subject: Re: [mod_python] Trouble with scripts giving 404

Is the frequency of 404s pretty steady or very random and
just averaging out to 1/8?
Does the frequency of 404s change when you change the
number of apache processes?

You could also try setting the number of processes low
and running strace on each, saving the output.  Then
post the diff of the bad vs good hits to the list.

I can't say I know what is wrong, but hopefully we can
narrow it down with more info.
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

Meet Singles
http://corp.mail.com/lavalife


From frank at fejes.net  Wed Feb 26 11:25:32 2003
From: frank at fejes.net (Frank Fejes)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <200302261725.h1QHPWe00744@texas.pop3now.com>

It's not as consistent now that I've provided a SetHandler for the entire
directory structure AND an AddHandler for .py...for example it has not
happened today yet.  When it does start, though, it seems to give the 404
error 40-50% of the time.  Restarting apache does NOT provide relief for
any amount of time...I've stopped/started apache and had the error show up
after 2-3 hits.

I can lower the number of processes and will get ktruss (this is a NetBSD
system) output if I see the problem occur again.  Thanks.

--frank

> >----- Original Message -----
> >From: "Frank S. Fejes III" <frank@fejes.net>
> >Subject: Re: [mod_python] Trouble with scripts giving 404
>
> Is the frequency of 404s pretty steady or very random and
> just averaging out to 1/8?
> Does the frequency of 404s change when you change the
> number of apache processes?
>
> You could also try setting the number of processes low
> and running strace on each, saving the output.  Then
> post the diff of the bad vs good hits to the list.
>
> I can't say I know what is wrong, but hopefully we can
> narrow it down with more info.
> --
> _______________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>
> Meet Singles
> http://corp.mail.com/lavalife
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From thm at duke.edu  Wed Feb 26 17:03:15 2003
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <1046296996.1977.8.camel@jade.biology.duke.edu>

Nothing that I know of in particular, but we've found that 3.0.0 is
buggy in general, and switching to 3.0.1 fixed most issues.

If anyone wants it, I've built and signed (with my key, not Red Hats of
course) the 3.0.1 package from the last Red Hat beta for RHL 8.0. Its at
ftp://ftp.biology.duke.edu/pub/admin/current



On Tue, 2003-02-25 at 20:50, Martin Hicks wrote:
> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using the 
> publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
> suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From cjackson at spsu.edu  Wed Feb 26 20:17:21 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] mod_python on win32
Message-ID: <005c01c2ddfd$fa495710$5f05010a@moxie>

I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get 
mod_python to work in Windows under Apache.  I'm running Windows XP on 
Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so 
file from mod_python.org and copied and pasted the file in my modules/ 
directory under Apache.  Then I added the following to my httpd.conf
file:
 
AddModule python_module mod_python.so
 
If the above line is left uncommented Apache fails to restart.
 
Am I doing something wrong?
 
Chris Jackson
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/f8c62939/attachment-0001.htm
From cjackson at spsu.edu  Wed Feb 26 20:38:15 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] mod_python on win32 solved
Message-ID: <006d01c2de00$e5e8f110$5f05010a@moxie>

Nevermind everyone, after some hunting through the archives' I've
figured out that I needed msvcr70.dll.
 
Thanks anyway
 
Chris Jackson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/3684fe1f/attachment-0001.htm
From jermnsar at hotmail.com  Wed Feb 26 19:37:10 2003
From: jermnsar at hotmail.com (Jeremy Lowery)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] mod_python on win32
Message-ID: <F170BMyiqCl4JDIPHfW000470fa@hotmail.com>

>From: "Chris Jackson" <cjackson@spsu.edu>
>I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get
>mod_python to work in Windows under Apache.  I'm running Windows XP on
>Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so
>file from mod_python.org and copied and pasted the file in my modules/
>directory under Apache.  Then I added the following to my httpd.conf
>file:
>
>AddModule python_module mod_python.so
>
>If the above line is left uncommented Apache fails to restart.
>
>Am I doing something wrong?
>
>Chris Jackson

Try
LoadModule python_module modules/mod_python.so

Jeremy S Lowery



_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail


From mike.looijmans at asml.com  Thu Feb 27 08:26:38 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple sys.stdout objects?
Message-ID: <01c2de31$90914b00$926a1e6e@wsasd464>

mod_python has a nice "cgihandler", that allows me to run out old CGI code in
mod_python 'mode'. However, I have some problems with that, that some of you
may know a solution to.

The cgihandler will lock until the request is complete. This is OK, but it
restrains the number of simultaneous Python requests to just 1. In practice,
this means that the system gets a lot slower with mod_python, because there
are a few requests that send a few megabytes of data to the client, and this
can take a few minutes. The performance hit is unacceptable.

I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.

A workaround is to compile apache with the "pre-fork" system. This however
yields another problem. The child processes all fire up their own interpreter,
and the memory load is about 10MB for each child (in 'worker' mode, only one
interpreter for 20 childs!). This quickly eats up all resources on the
machine. It also virtually eliminates the possibility to "recycle" the
database connection and similar objects. The net effect is that this setup is
also slower than the plain CGI implementation which just starts (runs and
kills) an interpreter for each CGI request.

I tried removing the thread lock in the cgihandler. All CGI scripts I have
don't care about the directory they are in (they get all they need from the
MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
themselves. This left only one single problem: The "print" command.

Python's print command is being used to send the data to the client. The
cgihandler replaces sys.stdout and redirects it to the Request object, which
is ok. But there is only one "sys" module shared by all threads, so all the
print commands from all threads end up in the same request. In practice, if a
"long" request is running, and a shorter request interferes, the short one
will kill sys.stdout and the long one will abort with an exception because
sys.stdout had suddenly died.

One workaround would be to create a cgihandler 'clone' that passes an "output"
object to each script (which defaults to sys.stdout for "plain" CGI mode), and
let the scripts all write() to that object. Drawback is that I will have to
replace all "print" statements in about 10k+ lines of code. Also, I want the
scripts to remain CGI compatible for a few more weeks because a few shadow
systems cannot be upgraded to mod_python yet.

Is there a way that I can let the threads each "print" to their own output,
for example by having a seperate "sys" module in each thread? (could I delete
the sys module and re-import it or something similar?)

--
Mike Looijmans


From grisha at modpython.org  Thu Feb 27 15:34:07 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
In-Reply-To: <01c2de31$90914b00$926a1e6e@wsasd464>
Message-ID: <20030227152549.S3048-100000@eden.ispol.com>

Your best bet is the prefork MPM. Remember that the 10M per child is
actually a lot less because pages for executables are shared between
processes on (most) UNIXes, certainly on Solaris they are. I find it hard
to believe that it is slower than regular CGI - it should be at least
several times faster, though not nearly as efficient as using the
publisher or a native handler.

The ultimate solution is not use CGI of course :-)

Grisha

On Thu, 27 Feb 2003, Mike Looijmans wrote:

> mod_python has a nice "cgihandler", that allows me to run out old CGI code in
> mod_python 'mode'. However, I have some problems with that, that some of you
> may know a solution to.
>
> The cgihandler will lock until the request is complete. This is OK, but it
> restrains the number of simultaneous Python requests to just 1. In practice,
> this means that the system gets a lot slower with mod_python, because there
> are a few requests that send a few megabytes of data to the client, and this
> can take a few minutes. The performance hit is unacceptable.
>
> I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.
>
> A workaround is to compile apache with the "pre-fork" system. This however
> yields another problem. The child processes all fire up their own interpreter,
> and the memory load is about 10MB for each child (in 'worker' mode, only one
> interpreter for 20 childs!). This quickly eats up all resources on the
> machine. It also virtually eliminates the possibility to "recycle" the
> database connection and similar objects. The net effect is that this setup is
> also slower than the plain CGI implementation which just starts (runs and
> kills) an interpreter for each CGI request.
>
> I tried removing the thread lock in the cgihandler. All CGI scripts I have
> don't care about the directory they are in (they get all they need from the
> MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
> themselves. This left only one single problem: The "print" command.
>
> Python's print command is being used to send the data to the client. The
> cgihandler replaces sys.stdout and redirects it to the Request object, which
> is ok. But there is only one "sys" module shared by all threads, so all the
> print commands from all threads end up in the same request. In practice, if a
> "long" request is running, and a shorter request interferes, the short one
> will kill sys.stdout and the long one will abort with an exception because
> sys.stdout had suddenly died.
>
> One workaround would be to create a cgihandler 'clone' that passes an "output"
> object to each script (which defaults to sys.stdout for "plain" CGI mode), and
> let the scripts all write() to that object. Drawback is that I will have to
> replace all "print" statements in about 10k+ lines of code. Also, I want the
> scripts to remain CGI compatible for a few more weeks because a few shadow
> systems cannot be upgraded to mod_python yet.
>
> Is there a way that I can let the threads each "print" to their own output,
> for example by having a seperate "sys" module in each thread? (could I delete
> the sys module and re-import it or something similar?)
>
> --
> Mike Looijmans
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From drh9296 at ritvax.rit.edu  Thu Feb 27 17:59:54 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
References: <20030227152549.S3048-100000@eden.ispol.com>
Message-ID: <3E5E986A.5010206@rit.edu>

Gregory (Grisha) Trubetskoy wrote:
> Your best bet is the prefork MPM. Remember that the 10M per child is
> actually a lot less because pages for executables are shared between
> processes on (most) UNIXes, certainly on Solaris they are. I find it hard
> to believe that it is slower than regular CGI - it should be at least
> several times faster, though not nearly as efficient as using the
> publisher or a native handler.
> 
> The ultimate solution is not use CGI of course :-)
> 
> Grisha

I haven't investigated things in 3.x.x yet, so I don't know if this 
applies.  If this were for mod_python 2.x.x, I'd suggest writing a small 
custom handler.  Just do a bit of error checking, setup a couple local 
variables, and an execfile().  I have an example below.

Your CGIs would need to be modified to use req.write() which is somewhat 
annoying.  For maximum compatibility, you could write a custom write() 
function to detect between outputting via req.write() or via stdout.  On 
a side note, do any mod_python request objects support variable argument 
outputs?

# httpd.conf example
<Location /cgi/>
     SetHandler python-program
     PythonHandler your_handler
</Location>

# your_handler.py example
# called by any request in this directory
def handler( req ) :
     from mod_python import apache

     cur_dir = "/directory/of/this/handler/"
     filename = req.filename[ len( cur_dir ): ]

     # setup any local variables

     try :
         # all my scripts are extension-less, so
         # I can easily test for ".."-style hacking
         if filename.find( "." ) != -1 :
             raise IOError
         execfile( "/directory/of/your/scripts/" + filename )
     except IOError :
         # handle error condition

     return apache.OK


From mike.looijmans at asml.com  Fri Feb 28 08:38:54 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
Message-ID: <01c2defc$71abbb00$926a1e6e@wsasd464>

>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.

>The ultimate solution is not use CGI of course :-)


That is the intention, ultimately...

I think I have to dive into the code and start working. Probably, the best way
for me to set things up is to modify all the scripts to write to a "file like"
object and get their data from a FieldStorage instance. So they'd all have a
'main' like:

handlercode(output, form, database):
    ....
    output.write('<P>Hello world</P>')
    ....

And then call it from either a CGI wrapper:

    module = __import__(scriptname)
    module.handlercode(sys.stdout, cgi.FieldStorage(), db_connect())


Or cal it from a mod python handler:

    module = __import__(scriptname)
    module.handlercode(req, utils.FieldStorage(), recycle_db_connection())


And weed out all the CGI environment calls (e.g. SERVER_NAME) and replace them
with some object to handle that transparently too.



From scott_list at mischko.com  Fri Feb 28 10:17:29 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:53:24 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
In-Reply-To: <01c2defc$71abbb00$926a1e6e@wsasd464>
References: <01c2defc$71abbb00$926a1e6e@wsasd464>
Message-ID: <200302281017.29699.scott_list@mischko.com>

In the meantime, you might set up a cron job at 7:45am that accesses the web 
pages before the rush starts so the stuff is "preloaded" and not swapped.

On Thursday 27 February 2003 11:38 pm, Mike Looijmans wrote:
>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.



From jdavis-mod-python at empires.org  Sat Feb  1 03:50:58 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:59:53 2004
Subject: [mod_python] Execution limtis
Message-ID: <200302010350.58418.jdavis-mod-python@empires.org>

Is it possible ot control the max execution time for a single request? I'd 
like to install mod_python in a virtualhosting environment, and I think I can 
control the RAM with an auto-imported setrlimit module, but I don't want to 
control execution time with that because it would kill the process in the 
middle of a request (right?).

If it's not available currently, is it even possible to implement a timeout 
without changing python itself? I would be interested in implementing it if 
someone can help me think of an idea how to do it. I know many other system 
admins would install mod_python if it could be controlled in a way similar to 
php4.

As a convenience, I think it might be helpful to provide config directives to 
setrlimit() the apache process on startup to certain values. Would the 
developers be interested if I were to implement that (I've made 1.3 apache 
modules before, so I figure I could handle some changes to a 2.0 module).

Regards,
	Jeff Davis

From smcnutt at monmouth.com  Sat Feb  1 07:14:29 2003
From: smcnutt at monmouth.com (Scott McNutt)
Date: Fri Jan  9 21:59:53 2004
Subject: [mod_python] Adding an object to connection
Message-ID: <001d01c2c9eb$79196480$232fbfd1@pavilion>

It would be very convenient for my app to know when a
connection is dropped (keepalive timeout or max requests
event occurs on a client connection).

The connection notes are for str types only ... and
req.connection is readonly ... so I'm basically looking for some
way to add an object attribute to the connection ... so I can at
least know when the connection is dropped.

I'd appreciate any ideas, suggestions, comments.

Thank,
--Scott




From LBerezhny at DevIS.com  Sun Feb  2 17:27:34 2003
From: LBerezhny at DevIS.com (Lex Berezhny)
Date: Fri Jan  9 21:59:53 2004
Subject: [mod_python] test.py fails on RH7.2
Message-ID: <1044224854.2178.7.camel@buddha>

Hi,

  I am trying to use the unit testing framework provided with mod_python
for building my own applications. But I was getting a User error when
running the bundled test.py. Below is a patch to test.py that fixes the
issue on my box:

243a244,245
> 			Directive("User", "nobody"),
> 			Directive("Group", "#-1"),

  Not sure if this is an issue only on my box, but thought I'd be a good
user and report it :-)

My setup:

RedHat 7.2
Apache 2.0.44
mod_python 3.0.1
Pyhton 2.2.2

-- 
Lex Berezhny <LBerezhny@DevIS.com>


From grisha at modpython.org  Sun Feb  2 19:51:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:53 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <3E3ADAA6.2010707@cs.uchicago.edu>
Message-ID: <20030202194957.W51473-100000@eden.ispol.com>

Someone else reported this "import site" problem, and as far as I can
remember it is actually a bug in Python, not mod_python - perhaps someone
can fill in the details?

Grisha

On Fri, 31 Jan 2003, ganapathy murali krishnan wrote:

>
> I just installed Python-2.3a1 + apache 2.0.44 + mod_python 3.0.1.
> I have one vhost (say vhost) in addition to the main one (say mainhost).
> The vhost has a python program as the main handler (using SetHandler).
> This setup works correctly without any problems on another machine
> (Python 1.5+ apache 1.3 + mod_python something), so the problem is not
> in the handler code itself.
>
> When I run the httpd binary, all is fine. The mainhost serves up html
> files without any problems. The vhost is supposed to serve up .py files.
> When I go to "http://vhost" I get the following error.
>
> ----
> [Fri Jan 31 13:53:00 2003] [error] make_obcallback: could not import
> mod_python.apache.
>
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> ----
>
> The apache.py is in
> /opt/python/default/lib/python2.3/site-packages/mod_python/apache.py.
>
> I tried many of the suggested workarounds, I couldn't get any of them
> to work. The content of my httpd.conf inside the <VirtualHost> and
> </VirtualHost> is enclosed below.
>
> ------------
>    SetHandler python-program
>    PythonDebug on
>    # All handlers are stored in a different directory, for security
>    PythonPath "sys.path+['/stage/w3serv/vhost.cs.uchicago.edu']"
>
>    # This module handles reloading modules on demand
>    PythonInitHandler handlers.init
>
>    # Fire up the first Python handler
>    PythonTransHandler handlers.translate
>
>    # Logging configuration
>    # PythonOption Log off
>    PythonOption Log /stage/w3serv/vhost/logs/debug.log
>    # Tell the Python site to ignore these paths,
>
>    PythonOption DontHandle /icons:/images:/~:/i/:/files/:/pipermail
>
>    # Tell the Python handler to ignore these extensions
>
>    PythonOption DontHandleExt html:htm:php:php3:phps:php4:cgi
>
>
>
>    # Then tell Apache how to handle them.
>
>    Alias /icons /stage/w3serv/common/docs/icons
>
>    Alias /images /stage/w3serv/common/docs/images
>
>    UserDir disable
>
> -----
>
> Any help would be appreciated.
>
> - Murali
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Sun Feb  2 19:54:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:53 2004
Subject: [mod_python] Adding an object to connection
In-Reply-To: <001d01c2c9eb$79196480$232fbfd1@pavilion>
Message-ID: <20030202195328.J51473-100000@eden.ispol.com>

The connection object is still the old-style python object, and thus you
cannot add attributes to it. I plan to rewrite it (as well as the server
object), but it won't be in 3.0.2 - perhaps 3.0.3?

Grisha

On Sat, 1 Feb 2003, Scott McNutt wrote:

> It would be very convenient for my app to know when a
> connection is dropped (keepalive timeout or max requests
> event occurs on a client connection).
>
> The connection notes are for str types only ... and
> req.connection is readonly ... so I'm basically looking for some
> way to add an object attribute to the connection ... so I can at
> least know when the connection is dropped.
>
> I'd appreciate any ideas, suggestions, comments.
>
> Thank,
> --Scott
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mateusz at ant.gliwice.pl  Mon Feb  3 16:03:59 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
Message-ID: <200302031603.59186.mateusz@ant.gliwice.pl>

shell interpreter is able use that encoding:
>>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
g\xc4\x99\xc5\x9bl'
while mod_python's interpreter refuses ...

Any ideas why ?
TIA

-- 
Mateusz Korniak
easy.com  easy.go


From Mongryong at sympatico.ca  Mon Feb  3 11:49:57 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
In-Reply-To: <200302031603.59186.mateusz@ant.gliwice.pl>
References: <200302031603.59186.mateusz@ant.gliwice.pl>
Message-ID: <1044290998.3112.4.camel@refugeeMedia>

On Mon, 2003-02-03 at 10:03, Mateusz Korniak wrote:
> shell interpreter is able use that encoding:
> >>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
> 'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
> g\xc4\x99\xc5\x9bl'
> while mod_python's interpreter refuses ...
> 
> Any ideas why ?
> TIA
> 
Hmmm...coincidentally, there are encoding in issues with
mod_python/Apache and XML libraries such as 4Suite's.  Up to this point,
the problem is unresolved.  It appears the encoding library is not being
properly started by mod_python. 



From agenkin-lst-mod_python at thpoon.com  Mon Feb  3 21:46:03 2003
From: agenkin-lst-mod_python at thpoon.com (Arcady Genkin)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] cannot import mod_python.apache error
References: <20030202194957.W51473-100000@eden.ispol.com>
Message-ID: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>

"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:

> Someone else reported this "import site" problem, and as far as I can
> remember it is actually a bug in Python, not mod_python - perhaps someone
> can fill in the details?

When installing Python from sources, "make install" installs the files
in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
permissions for everything else are fine).  I have to manually fix
them every time I (re)compile Python.  When I forget to fix them, the
error message that I am seeing is exactly:

      [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
      import mod_python.apache.

Perhaps this is what was causing the grief for the original poster,
since it looks awfully similar to the subject line of this thread.
-- 
Arcady Genkin : CDF Systems Administrator
http://www.cdf.toronto.edu/~agenkin/contact.html

guilt is the cause of more disauders
than history's most obscene marorders (E.E. Cummings)

From Mongryong at sympatico.ca  Mon Feb  3 22:13:01 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> 
	<uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <1044328382.3116.249.camel@refugeeMedia>

On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I can
> > remember it is actually a bug in Python, not mod_python - perhaps someone
> > can fill in the details?
> 
> When installing Python from sources, "make install" installs the files
> in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
> permissions for everything else are fine).  I have to manually fix
> them every time I (re)compile Python.  When I forget to fix them, the
> error message that I am seeing is exactly:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  He's been quiet ever since, so I'm assuming that solved his
problem.



From dustin at ywlcs.org  Mon Feb  3 21:46:41 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <20030204034640.GH14728@eleanor.internal.ywlcs.org>

On Mon, Feb 03, 2003 at 09:46:03PM -0500, Arcady Genkin wrote:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

This seems to be a very common error, and the result of an enormous variety
of problems.  Would it be possible to, in circumstances that normally trigger
this log message, initiate some series of checks for common problems, and
produce more specific messages?  This wouldn't impact normal operational
efficiency (since the extra checks would only be triggered when this message
is produced), but would probably significantly reduce messages about
installation problems.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

From gmurali at cs.uchicago.edu  Mon Feb  3 23:23:45 2003
From: gmurali at cs.uchicago.edu (Murali krishnan Ganapathy)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <1044328382.3116.249.camel@refugeeMedia>
Message-ID: <000001c2cc0d$972b8c90$e8e38780@triangle>

[Original Poster] I thought I replied to the list about this problem
before. May be I forgot to CC the list. I tried installing Python 2.2.2,
I still got the same error. For the 2.3a1 installation, I had checked
all 
the permissions and all the usual pit falls, they were not the cause.
Before I checked the permissions and the usual stuff for the 2.2.2
installation,
another person had identified it as a bug in Python 2.3a1 (It did not
try to 
import the modules under some circumstances) and suggested a one line
patch. 
That solved the problem. I think you needed to add one line 
'_PyImportHooks()' (or something like that) to the file pythonrun.c some
where near
line 350 (I am quoting all this from memory).

So right now, I have Python 2.3a1 + mod_python 3.0.1 + Apache 2.0.44 +
PHP 4.3 + ...
working together. However, I am getting a different kind of error. The
apache processes
are catching a SIGNAL 11 and terminating. However, it is not
mod_python's fault.
The python based dispatcher code, which works with Python 1.5, no longer
works with 2.3a1.
I haven't got around to finding the exact problem. Once I do, I will
tell you guys the 
exact problem, and you guys can tell me if this is another bug in Python
2.3a1 or my code 
has to be rewritten.

Thanks for the solution. And sorry for forgetting to CC to the list.

- Murali

PS: When I reply to any of the mailing messages, neither the To field,
nor the CC field
has the list address. I guess in my previous posting I forgot to add in
the list address
by hand.

-----Original Message-----
From: Mongryong [mailto:Mongryong@sympatico.ca] 
Sent: Monday, February 03, 2003 9:13 PM
To: Arcady Genkin
Cc: Gregory (Grisha) Trubetskoy; ganapathy murali krishnan;
mod_python@modpython.org
Subject: Re: [mod_python] cannot import mod_python.apache error


On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I 
> > can remember it is actually a bug in Python, not mod_python - 
> > perhaps someone can fill in the details?
> 

> I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  
> He's been quiet ever since, so I'm assuming that solved his problem.






From gmurali at cs.uchicago.edu  Tue Feb  4 18:23:56 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] mp 3.0.1 + Python 2.3: child pid nnnnn exit signal Segmentation fault
 (11)
References: <3E3ADAA6.2010707@cs.uchicago.edu>	<1044049878.13789.42.camel@refugeeMedia>	 <3E3AFAB4.8070205@cs.uchicago.edu> <1044053589.1599.59.camel@refugeeMedia>	 <3E3B03A6.60009@cs.uchicago.edu> <1044058560.27207.3.camel@rye>
Message-ID: <3E40599C.4000705@cs.uchicago.edu>

I have a Apache 2.0.44 + mp 3.0.1 (Python 2.3a1) installed.
If I use a simple PythonHandler directive as specified in the
mod_python tutorial things work fine. However when I start using
PythonInitHandler and PythonTransHandler directives the apache child
processes start dying with a Signal 11. By inserting "print" statements
I have learnt the following.

The PythonInitHandler is being called and successfully completes.
The PythonTransHandler is being called and sucessfully completes.
Just before the "return apache.OK", it (transhandler) calls

req.add_handler("PythonHandler", "handlers.dispatch")

The file $SERVERROOT/handlers/dispatch.py is readable by all.
The first line of the handler function in dispatch.py never
gets executed!

The browser tries the same URL about 6 times before giving up with a
"Document contains no data" error. On the server side, the error_log of
apache, contains

----------
[Tue Feb 04 17:46:05 2003] [notice] mod_python: (Re)importing module 
'handlers.translate'
[Tue Feb 04 17:46:06 2003] [notice] child pid 17086 exit signal 
Segmentation fault (11)
----------

about once for each time the browser requests for the page.

The main apache process doesnt seem to be affected, in that after all 
this happens, it continues to wait to service other requests. So in 
effect html, php and cgi's all work fine but .py files dont.

Can anyone shed some light on this?

- Murali


From dmitry at deluxoft.com  Sat Feb  8 14:03:30 2003
From: dmitry at deluxoft.com (Dmitry Dembinsky)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] mod_python 2.7 documentation inconsistency
Message-ID: <001301c2cf6a$18918c30$1400a8c0@LAPTOP>

Hello,

I'm using mod_python 2.7.8 with Apache 1.3.27 running on RH7.3

When I was trying to use mod_python.publisher module
I've encountered the following inconsistency in a documentation:

Section 3.4 ("Publisher Handler Makes it Easy") contains a sample HTML
form.
The line specifying form handler is the following:

  <form action="form/email" method="POST">

While it should be:

  <form action="form.py/email" method="POST">

to make an example working.

(Or, probably "AddHandler python-program .py" should be replace with
"SetHandler python-program" ?)

As I've seen, the latest doc for mod_python 3.0.1 doesn't have this
inconsistency.

Regards,
Dmitry Dembinsky <dmitry@deluxoft.com>


From chip at cyan.com  Mon Feb 10 16:03:58 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] layering mod_auth_digest and mod_python authentication in apache2
Message-ID: <20030211000358.M11624@cyan.com>

I am trying to setup mod_auth_digest to work with a mod_python script.

What I want is AuthDigest to decode the username, and password, and then to
pass this onto my mod_python authenticationn scripts, without having to
re-write the entire mod_auth_digest in Python.

I have been tyying to use the mod_python's PythonAuthenHandler[1] and AuthType
Digest in my httpd.conf, but AuthDigest is always rejecting the
users/passwords, because I am not using a localfile at all.

I thought mod_auth_digest would have somthing simular to mod_auth_ldap's
AuthLDAPAuthoritative[2], which can pass authentication onto the next handler,
but I don't think that exists for mod_auth_digest

Here is the basic plan, the HTTP client, uses Digest authentication to apache,
which passes it onto mod_auth_digest, who will NOT find it in a local text
file, but instead will pass on the request with the decoded username and
password to mod_python's PythonAuthenHandler where i will use my own python
scripts to validate the user information.

Is what I am trying todo even possible, and if it is, what do i need todo?

Thanks,
-chip

[1] http://www.modpython.org/live/mod_python-3.0.1/doc-html/node54.html
[2] http://httpd.apache.org/docs-2.0/mod/mod_auth_ldap.html#authldapauthoritative

From skremer at q.cis.uoguelph.ca  Wed Feb 12 14:49:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Date persistence accross connections.
Message-ID: <Pine.LNX.4.44.0302121437360.7578-100000@q.cis.uoguelph.ca>

Hi,

I would like to store information in a variable and be able to access it 
with subsequent http requests.

It is my understanding that each virtual server name has its own namespace 
(which is no problem since all my information is specific to the 
namespace), and that httpd is now threaded instead of multiple processes.  
So should I be able to just store a variable in my local namespace and 
then return to it the next time I make an http connection?  Or might my 
next connect be executing python in a different namespace for some 
reason?!?

Sorry if I'm way off base here.  Any advice much appreciated.

	-SK

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.8913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From gnb at itga.com.au  Thu Feb 13 08:21:18 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: Your message of Wed, 12 Feb 2003 14:49:03 -0500.
Message-ID: <200302122121.IAA02700@lightning.itga.com.au>

skremer@q.cis.uoguelph.ca said:
> So should I be able to just store a variable in my local namespace and
>  then return to it the next time I make an http connection?  Or might
> my  next connect be executing python in a different namespace for some
>  reason?!? 

It might work in certain restricted circumstances, but it's likely to be 
unreliable.  You can't know when Apache will decide it's time for a new 
process.  You can't know when the apache process gets re-configured or 
restarted.  You can't know when another unrelated session to the same 
application will begin. 

You would be much better off to look at some of the session management tools
that work with mod_python and handle the problem properly.  I use Albatross
(http://www.object-craft.com.au/projects/albatross/) but that does a whole 
heap more than just session management.  Others have recommended PSO 
(http://www.scriptfoundry.com/modules/pso/).

Greg.




From thanos at 0x01.com  Wed Feb 12 18:28:45 2003
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Re: pso and mod_python
In-Reply-To: <20030212145018.GA1414@mico>
References: <20030211202535.GI2050@mico>
            <20030211224116.73074.qmail@0x01.com>
            <20030212145018.GA1414@mico>
Message-ID: <20030212232845.79816.qmail@0x01.com>

yes I forgot to mention the following: 

mod_python by default looks for a method in your module called "handler"
so given this line in your .htaccess:
PythonHandler test 

your should add
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border'
handler = TestHandler().handle 

On the other hand with mod_python you can stipulate which handler to use:
PythonHandler test:TestHandler.handle 

But your handler class muts take a request object as an argument to the 
constructor. pso's TemplateHandler does not have a CTOR defined (Opps)
so you will have to add your own:
class TestHandler(TemplateHandler):
   def __init__(self, req):
        TemplateHandler.__init__(self) 

I hope this helps 

thanos 

 

 

 


Jeffrey Clement writes: 

> Thank you for your help.  I think I'm still missing something.  What is
> test.py? 
> 
> If I wanted: 
> 
> from pso.service import ServiceHandler
> from pso.handlers import TemplateHandler
> from dbsession import CookieDBImpl 
> 
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border' 
> 
> if __name__=='__main__':
>     ServiceHandler().run(TestHandler().handle, CookieDBImpl) 
> 
> How do I make this get run by mod_python.  It needs a handle method
> right?  And that takes a requestInfo parameter.  I assume the
> pso.modpython::fixup adds the pso() method to the request handler but
> how do I use this with my templateHandler? 
> 
> Thank you for all your help.  I'm finding PSO to be awesome for thhe
> current project I'm working on only just getting hung up once in a
> while. 
> 
> Jeff 
> 
> 
> On Tue, Feb 11, 2003 at 05:41:16PM -0500, thanos@0x01.com wrote:
>> Jeffrey,  
>> 
>> You are right: the problem lies with your .htaccess file. It should be:  
>> 
>>  
>> 
>> 
>> AddHandler python-program .py
>> PythonHandler test
>> PythonFixupHandler pso.modpython::fixup
>> PythonLogHandler pso.modpython::cleanup  
>> 
>> You have to set the PythonFixupHandler and PythonLogHandler so pso can set 
>> thing up such as the session handling.  
>> 
>> A look through the pso guide 
>> [http://sourceforge.net/docman/display_doc.php?docid=11314&group_id=49265] 
>> shows me that this information is missing. It is
>> metioned in the "Easy mod_python Session Handling with pso.session" how-to
>> [http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html] so I 
>> guess I am not completly guilty!  
>> 
>> Also trying out the sample mod_python code in the guide, i find things are 
>> broken. So I will post two bug reports to fix these problems.  
>> 
>> 
>> thanos  
>> 
>>  
>> 
>>  
>> 
>> 
>> Jeffrey Clement writes:  
>> 
>> >Hi there, 
>> >
>> >I'm trying to use PSO with mod_python and having some difficulties that
>> >I hope you can assist me with. 
>> >
>> >I have my appliaction: (test.py)
>> >=====================================================================
>> >from pso.service import ServiceHandler
>> >from pso.handlers import TemplateHandler
>> >from dbsession import CookieDBImpl 
>> >
>> >class TestHandler(TemplateHandler):
>> >    DEFAULT_TEMPLATE='cat_border' 
>> >
>> >if __name__ == '__main__':
>> >    ServiceHandler().run(TestHandler().handle, CookieDBImpl)
>> >===================================================================== 
>> >
>> >This above script runs fine as a CGI script.  However I have no idea how
>> >to make it run as a mod_python script. 
>> >
>> >I've got modpython installed and tested (I know it's OK) but It won't
>> >run my scripts.  I suspect the problem is I'm not understanding what
>> >exactly goes in .htaccess 
>> >
>> >I currently have:
>> >  AddHandler python-program .py
>> >  PythonHandler test.py
>> >  PythonDebug On 
>> >
>> >I know mod_python looks for a method handle.  Is there a mod_python
>> >wrapper that does I'm supposed to set as my PythonHandler?
>> >Thank you, Jeff 
>> > 
>> 
>>  
>> 
>> >-- 
>> >Jeff Clement 

>>  
>> 
>> 

From gashalot at gashalot.com  Thu Feb 13 11:36:50 2003
From: gashalot at gashalot.com (Robert Gash)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
Message-ID: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>

I recently snagged the binary packages for apache-2.0.44 and
mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
package repository.  The system I'm installing on is a 4.7-RELEASE box,
and I'm getting the following error from Apache:

root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"

I have attempted to compile mod_python myself and I have attempted to
install the binary package, does anyone know how to correct this error?

-R

-- 
Robert Gash, gashalot@gashalot.com
(Web) http://gashalot.com/
(PGP) http://gashalot.com/pgpkeys.txt

From grisha at modpython.org  Thu Feb 13 12:01:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
In-Reply-To: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>
Message-ID: <20030213115857.I7394-100000@eden.ispol.com>

If you're using precompiled packages, I don't think you'll be able to get
it going. Try compiling apache2 from ports, but make sure to edit the
Makefile in the ports first to add --enable-threads to the options. It's
mentioned in the mod_python README file, but I don't rember whether was
added there before or after 3.0.1 was released.

Grisha

On Thu, 13 Feb 2003, Robert Gash wrote:

> I recently snagged the binary packages for apache-2.0.44 and
> mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
> package repository.  The system I'm installing on is a 4.7-RELEASE box,
> and I'm getting the following error from Apache:
>
> root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
> "pthread_create"
>
> I have attempted to compile mod_python myself and I have attempted to
> install the binary package, does anyone know how to correct this error?
>
> -R
>
> --
> Robert Gash, gashalot@gashalot.com
> (Web) http://gashalot.com/
> (PGP) http://gashalot.com/pgpkeys.txt
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jwm-modpython at sentinelchicken.net  Thu Feb 13 13:39:25 2003
From: jwm-modpython at sentinelchicken.net (Jason Morgan)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Fatal Python error: PyThreadState_Delete:
Message-ID: <20030213183925.GB88059@sentinelchicken.net>

OK, I moved from mod_python 2.7 and Apache 1.3 to 3.0 and 2.0,
respectively, about two weeks ago. All of a sudden, in the last two
days, I start getting these arror messages.

First I get this:

Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:04 2003] [notice] child pid 86935 exit signal Abort
trap (6)
[Thu Feb 13 09:11:04 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] child pid 86967 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] child pid 86936 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:06 2003] [notice] mod_python: (Re)importing module 
'index'

Then lots and lots of this:

[Thu Feb 13 09:11:31 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:32 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:33 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:34 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:35 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:36 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:37 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:38 2003] [warn] (13)Permission denied: connect to
listener

My site isn't doing anything - just posting an under-construction
message.

I'm running FreeBSD 4.7 and I installed both Apache and mod_python from
ports.


Thanks,

Jason

----- End forwarded message -----

From matthew at yak.org  Thu Feb 13 19:43:01 2003
From: matthew at yak.org (Matthew J. Probst)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Documentation inconsistency in 3.0.1 docs
In-Reply-To: <20030214013301.12832.73000.Mailman@eden.ispol.com>
Message-ID: <5.2.0.9.0.20030213193321.00b31810@192.168.0.253>

Since I'm a complete newbie at mod_python, I thought I'd share the results 
of my head-banging against the documentation.

In Section 3.4 (Now something More Complicated) the sample code says

..
..
def authenhandler(req):
   user = req.user
   pw = req.get_basic_auth_pw()
..
..

This snip of code failed to authenticate because req.get_basic_auth_pw() 
needs to be called -before_ doing anything with the user.  I found this out 
by looking in section 5.1.7, which clearly states this.  However, section 
5.1.7 incorrectly states that you get user from req.connection.user instead 
of req.user.

This stuff might be obvious to someone who moved from mod_python 2.x to 3.x 
but since I'm new it didn't make sense for a while.  So section 3.4 and 
5.1.7 need changing,  _or_ (less likely) there's a lurking bug somewhere.


From skremer at q.cis.uoguelph.ca  Thu Feb 13 21:14:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: <200302122121.IAA02700@lightning.itga.com.au>
Message-ID: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>

Thanks for the reply Greg.  Actually I'm in the process of writing my own
session management tool (I looked at a few others and none of them really
suited my needs; plus I wanted to do it myself for the learning
experience).  So now I'm trying to figure out what my options are for
implementing persistent data.  Right now I'm identifying my session by
means of a cookie, so that part's not a problem.  My challenge now is, how
to associate more data with the cookie (session) in a way that persists
accross http requests.

The three options I'm working with right now are:

(1) just store in the info in the global namespace, keyed on the cookie.  
This seems to me to be the simplest, and fastest solution.  The drawbacks
are that queries that go to a different process won't have access to my
data.  Now that httpd is threaded, this happens much less often. In fact,
it seems to only occur when I explicitly restart apache or reboot my 
machine (which is basically never since I don't run Windows and have a 
UPS).

(2) Save it to a file.  This is slow, but otherwise would work fine if I 
implement appropriate file locking.

(3) Send it via a socket to another process which all mod_python processes 
share.

(4) Some combination of (1) with (2 or 3), which writes the data away and 
only retrieves it from (2,3) if its not in the local namespace.  I'm not 
sure how much I will gain from not retrieving data from (2,3) most of the 
time.

Are there any good options which I have overlooked?  Does my evaluation of
the alternatives seem sound?  Any suggestions or comments.

Thanks for any advice anyone wants to pass my way.

	-SK

 On Thu, 13 Feb 2003, Gregory Bond wrote:

> 
> skremer@q.cis.uoguelph.ca said:
> > So should I be able to just store a variable in my local namespace and
> >  then return to it the next time I make an http connection?  Or might
> > my  next connect be executing python in a different namespace for some
> >  reason?!? 
> 
> It might work in certain restricted circumstances, but it's likely to be 
> unreliable.  You can't know when Apache will decide it's time for a new 
> process.  You can't know when the apache process gets re-configured or 
> restarted.  You can't know when another unrelated session to the same 
> application will begin. 
> 
> You would be much better off to look at some of the session management tools
> that work with mod_python and handle the problem properly.  I use Albatross
> (http://www.object-craft.com.au/projects/albatross/) but that does a whole 
> heap more than just session management.  Others have recommended PSO 
> (http://www.scriptfoundry.com/modules/pso/).
> 
> Greg.
> 
> 
> 

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From drh9296 at ritvax.rit.edu  Thu Feb 13 22:20:30 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Date persistence accross connections.
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <3E4C607E.5050608@rit.edu>

Stefan C. Kremer wrote:
 > Thanks for the reply Greg.  Actually I'm in the process of writing my own
 > session management tool (I looked at a few others and none of them really
 > suited my needs; plus I wanted to do it myself for the learning
 > experience).  So now I'm trying to figure out what my options are for
 > implementing persistent data.  Right now I'm identifying my session by
 > means of a cookie, so that part's not a problem.  My challenge now 
is, how
 > to associate more data with the cookie (session) in a way that persists
 > accross http requests.
 >
 > The three options I'm working with right now are:
 >
 > (1) just store in the info in the global namespace, keyed on the 
cookie.
 > This seems to me to be the simplest, and fastest solution.  The drawbacks
 > are that queries that go to a different process won't have access to my
 > data.  Now that httpd is threaded, this happens much less often. In fact,
 > it seems to only occur when I explicitly restart apache or reboot my
 > machine (which is basically never since I don't run Windows and have a
 > UPS).
 >
 > (2) Save it to a file.  This is slow, but otherwise would work fine if I
 > implement appropriate file locking.
 >
 > (3) Send it via a socket to another process which all mod_python 
processes
 > share.
 >
 > (4) Some combination of (1) with (2 or 3), which writes the data away 
and
 > only retrieves it from (2,3) if its not in the local namespace.  I'm not
 > sure how much I will gain from not retrieving data from (2,3) most of 
the
 > time.
 >
 > Are there any good options which I have overlooked?  Does my 
evaluation of
 > the alternatives seem sound?  Any suggestions or comments.
 >
 > Thanks for any advice anyone wants to pass my way.
 >
 > 	-SK

How about storing stuff in a database?

MySQL (and many other DBs) have very usable python interfaces; getting 
and adding them to your build should be pretty simple.

You'll get all the persistence of storing to a file, but with added 
data-gathering functionality and no need to worry about locking (the DB 
should handle this for you).

The only difficulty is that you will probably want to store data in a 
DB-useable format - aka not by storing pickled objects.

--david


From Mongryong at sympatico.ca  Fri Feb 14 00:37:59 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Date persistence accross connections.
In-Reply-To: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <1045201079.3096.263.camel@refugeeMedia>

On Thu, 2003-02-13 at 21:14, Stefan C. Kremer wrote:
> Are there any good options which I have overlooked?  Does my evaluation of
> the alternatives seem sound?  Any suggestions or comments.

Have you looked at using an 'object oriented database' such as ZODB? 
ZODB is used by Zope for most of its session management.  However, it
should work in any Python application include mod_python.

I believe ZODB has drivers for files, databases, and even networked
capabilities.  ZODB also session garbage collection.




From mike.looijmans at asml.com  Fri Feb 14 09:46:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, and warnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d405$802aaa80$926a1e6e@wsasd464>

System & software:

SUN Ultra-10 (called wsasd464)
Solaris 2.6 installed (SunOS 5.6)
GCC version 2.8.1 (Please don't tell me to use 2.9.5 - It's company politics
prohibiting me from using that - I had no problems compiling apache and
python)
Apache 2.0.44 compiled, installed, up and running (/usr/local/apache/...)
Python 2.2.2 compiled, installed (/usr/local)

(Also MySQL and Python-to-MySQL 0.91 but this seems irrelevant)

Problem:

wsasd464:/scratch/download/apache/mod_python-3.0.1 %
./configure --with-apxs=/usr/local/apache/bin/apxs --with-python=/usr/local/bi
n/python

[== lots of OK's here, no problems ==]

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake
ar -x `gcc -print-libgcc-file-name` _eprintf.o
ar -x `gcc -print-libgcc-file-name` _floatdidf.o

Compiling for DSO. For static, do "make static"

/usr/local/apache/bin/apxs -I/usr/local/asm/download/apache/mod_python-3.0.1/s
rc/include -I/usr/local/apache/include -I/usr/local/include/python2.2 -c
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
serverobject.c connobject.c filterobject.c hlist.c
hlistobject.c -L/usr/local/lib/python2.2/config -lm  -lpython2.2   -lsocket -l
nsl -ldl  -lpthread -lthread   -lm _eprintf.o _floatdidf.o
/usr/local/apache/build/libtool --silent --mode=compile
cc -prefer-pic  -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=6 -D_POSIX_PTHREAD
_SEMANTICS -D_REENTRANT -g -O2 -I/usr/local/apache/include -I/usr/local/asm/do
wnload/apache/mod_python-3.0.1/src/include -I/usr/local/apache/include -I/usr/
local/include/python2.2  -c -o mod_python.lo mod_python.c && touch
mod_python.slo
In file included from /usr/local/include/python2.2/Python.h:24,
                 from
/usr/local/asm/download/apache/mod_python-3.0.1/src/include/mod_python.h:92,
                 from mod_python.c:67:
/usr/local/include/python2.2/pyconfig.h:104: warning: `_FILE_OFFSET_BITS'
redefined
/usr/include/sys/feature_tests.h:80: warning: this is the location of the
previous definition


[==this warning appears a dozen times repeatedly==]

[===Then I get this near the end ===]

*** Warning: Linking the shared library mod_python.la against the non-libtool
*** objects  _eprintf.o _floatdidf.o is not portable!
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- L
grep: illegal option -- /
grep: illegal option -- u
grep: illegal option -- r
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- a
grep: illegal option -- /
grep: illegal option -- /
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- f
grep: illegal option -- g
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- o
grep: illegal option -- k
grep: illegal option -- e
grep: illegal option -- t
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- m
Usage: grep -hblcnsviw pattern file . . .

Now su and make install
  (or, if you only want to perform a partial install,
   you can use make install_dso and make install_py_lib)

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake install

[== stuff here appears OK ==]

Took a gamble and installed it anyway. Investigating the Makefiles leaded me
to conclude that the "grep" errors seem to come from the 'apxs' program in
Apache, which unfortunately appears to have been written in Perl so I couldn't
understand much of it.

Now, I configured apache to load the module, and created 'mptest.py' as
suggested in the manual. Attempting to access it will yield an empty document
(no data at all, no headers).

Looking in the error_log of apache yields:

[Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal Segmentation
fault (11)






From Christian.Ferrari at primeur.com  Fri Feb 14 10:23:27 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
Message-ID: <3E4CB58F.50408@primeur.com>

Hardware/software specs:

# uname -a
HP-UX apollo B.11.11 U 9000/800 816839621 unlimited-user license

# gcc -v
Reading specs from /opt/gccs/lib/gcc-lib/hppa2.0w-hp-hpux11.11/3.2.1/specs
Configured with: ../gcc-3.2.1/configure --prefix=/opt/gccs 
--enable-languages=c,
c++ --with-as=/opt/gccs/bin/as
Thread model: single
gcc version 3.2.1

# /opt/Python-2.2/bin/python -V
Python 2.2.2
*** Install steps:
./configure --prefix=/opt/Python-2.2
make
make install

# /opt/apache2/bin/httpd -v
Server version: Apache/2.0.44
Server built:   Feb 13 2003 16:53:25
*** Install steps:
./configure --prefix=/opt/apache2
make
make install

# /opt/apache2/build/libtool --version
ltmain.sh (GNU libtool) 1.4.3 (1.922.2.110 2002/10/23 01:39:54)

*** ISSUE POINT: ***

mod_python package: mod_python-3.0.1
*** Install steps:
./configure --with-apxs=/opt/apache2/bin/apxs 
--with-python=/opt/Python-2.2/bin/python
# make

Compiling for DSO. For static, do "make static"

         /opt/apache2/bin/apxs 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-L/opt/Python-2.2/lib/python2.2/config  -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
      -lm  -lpython2.2   -lnsl -ldld  -lpthread   -lm

[...]
Some OK compile steps...
[...]

/opt/apache2/build/libtool --silent --mode=link gcc -o mod_python.la 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2  -rpath 
/opt/apache2/modules -module -avoid-version  hlistobject.lo hlist.lo 
filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo 
requestobject.lo _apachemodule.lo mod_python.lo 
-L/opt/Python-2.2/lib/python2.2/config -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
-lm -lpython2.2 -lnsl -ldld -lpthread -lm

*** Warning: linker path does not have real file for library lpython2.2.
*** I have the capability to make that library automatically link in when
*** you link to this library.  But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because I did check the linker path looking for a file starting
*** with libpython2.2 and none of the candidates passed a file format test
*** using a file magic. Last file checked: 
/opt/Python-2.2/lib/python2.2/config/libpython2.2.a

*** Warning: libtool could not satisfy all declared inter-library
*** dependencies of module mod_python.  Therefore, libtool will create
*** a static module, that should work as long as the dlopening
*** application is linked with the -dlopen flag.
Usage: ln [-f] [-i] [-s] f1 f2
        ln [-f] [-i] [-s] f1 ... fn d1
*** Error exit code 2

Stop.
*** Error exit code 1

Stop.



Why libtool is complaining for a "libpython" shared object while no 
"libpython.sl" should be produced in UNIX envs?
Does anyone know where the error is?

Thanks
Christian



-- 
______________________________________

Christian Ferrari
c/o PRIMEUR ITALIA
Via E. Mattei, 1/106 A
30020 Marcon (VE) - ITALY

Tel.:    +39 041 5950998
Fax:     +39 041 5951024
Mobile:  +39 348 8960572
E-mail:  Christian.Ferrari@primeur.com
Web:     http://www.primeur.com/


From grisha at modpython.org  Fri Feb 14 09:45:43 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
In-Reply-To: <3E4CB58F.50408@primeur.com>
Message-ID: <20030214093919.S20286-100000@eden.ispol.com>

On Fri, 14 Feb 2003, Christian Ferrari wrote:

> # /opt/apache2/bin/httpd -v
> Server version: Apache/2.0.44
> Server built:   Feb 13 2003 16:53:25
> *** Install steps:
> ./configure --prefix=/opt/apache2

Here you also need --enable-so

> *** Warning: linker path does not have real file for library lpython2.2.
> *** I have the capability to make that library automatically link in when
> *** you link to this library.  But I can only do this if you have a
> *** shared version of the library, which you do not appear to have
> *** because I did check the linker path looking for a file starting
> *** with libpython2.2 and none of the candidates passed a file format test
> *** using a file magic. Last file checked:
> /opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>

I do not have any experience with HP-UX, but on other systems a similar
message indicates an old version of libtool, which wouldn't allow linking
shared and static libs together. So I'd first see if upgrading libtool
would help. After you upgrade, rebuild apache by first running
./buildconf like this:

./buildconf
./configure --prefix=/opt/apache2 --enable-so
make clean
make

Then for mod_python, do make clean; make

Grisha


From Christian.Ferrari at primeur.com  Mon Feb 17 11:01:39 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
References: <20030214093919.S20286-100000@eden.ispol.com>
Message-ID: <3E50B302.6030809@primeur.com>


Gregory (Grisha) Trubetskoy wrote:

> On Fri, 14 Feb 2003, Christian Ferrari wrote:
> 
> 
>># /opt/apache2/bin/httpd -v
>>Server version: Apache/2.0.44
>>Server built:   Feb 13 2003 16:53:25
>>*** Install steps:
>>./configure --prefix=/opt/apache2
>>
> 
> Here you also need --enable-so
> 
> 
>>*** Warning: linker path does not have real file for library lpython2.2.
>>*** I have the capability to make that library automatically link in when
>>*** you link to this library.  But I can only do this if you have a
>>*** shared version of the library, which you do not appear to have
>>*** because I did check the linker path looking for a file starting
>>*** with libpython2.2 and none of the candidates passed a file format test
>>*** using a file magic. Last file checked:
>>/opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>>
>>
> 
> I do not have any experience with HP-UX, but on other systems a similar
> message indicates an old version of libtool, which wouldn't allow linking
> shared and static libs together. So I'd first see if upgrading libtool
> would help. After you upgrade, rebuild apache by first running
> ./buildconf like this:
> 
> ./buildconf
> ./configure --prefix=/opt/apache2 --enable-so
> make clean
> make
> 
> Then for mod_python, do make clean; make
> 
> Grisha
> 
> 

Libtool supplied with Apache 2.0.44 is 1.4.3; last libtool available on 
GNU site is 1.4.3.
Anywhere, I installed a fresh-stand-alone libtool-1.4.3 package, but 
Apache didn't use it, so I tryed to force Apache build:

./configure --prefix=/opt/apache2 --enable-so 
--with-libtool=/usr/local/bin/libtool

Apache did NOT like "my standard" libtool; this is the Apache build error:

[... some working stuff ...]

Making all in dso/unix
         gcc -g -O2   -DHAVE_CONFIG_H -DHPUX11 -D_REENTRANT 
-D_XOPEN_SOURCE_EXTENDED   -I../../include -I../../include/arch 
-I../../include/arch/unix  -c dso.ccr libapr-0.la strings/apr_cpystrn.o 
strings/apr_fnmatch.o strings/apr_snprintf.o strings/apr_strings.o 
strings/apr_strnatcmp.o strings/apr_strtok.o passwd/apr_getpass.o 
tables/apr_hash.o tables/apr_tables.o file_io/unix/copy.o 
file_io/unix/dir.o file_io/unix/fileacc.o file_io/unix/filedup.o 
file_io/unix/filepath.o file_io/unix/filestat.o file_io/unix/flock.o 
file_io/unix/fullrw.o file_io/unix/mktemp.o file_io/unix/open.o 
file_io/unix/pipe.o file_io/unix/readwrite.o file_io/unix/seek.o 
network_io/unix/inet_ntop.o network_io/unix/inet_pton.o 
network_io/unix/sendrecv.o network_io/unix/sockaddr.o 
network_io/unix/sockets.o network_io/unix/sockopt.o 
threadproc/unix/proc.o threadproc/unix/procsup.o 
threadproc/unix/signals.o threadproc/unix/thread.o 
threadproc/unix/threadpriv.o misc/unix/charset.o misc/unix/errorcodes.o 
misc/unix/getopt.o misc/unix/otherchild.o misc/unix/rand.o 
misc/unix/start.o misc/unix/version.o locks/unix/global_mutex.o 
locks/unix/proc_mutex.o locks/unix/thread_cond.o 
locks/unix/thread_mutex.o locks/unix/thread_rwlock.o time/unix/time.o 
time/unix/timestr.o mmap/unix/common.o mmap/unix/mmap.o shmem/unix/shm.o 
user/unix/groupinfo.o user/unix/userinfo.o memory/unix/apr_pools.o 
atomic/unix/apr_atomic.o poll/unix/poll.o poll/unix/pollacc.o 
support/unix/waitio.o dso/unix/*.o; libapr-0.la
sh[4]: cr:  not found.
*** Error exit code 127

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.



I'm going to post the link issue on "libtool" mailing list.
Thanks
Christian


From mike.looijmans at asml.com  Wed Feb 19 10:52:19 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d7fc$974e0b80$926a1e6e@wsasd464>

After using a 2x4 and a kind word, I managed to compile it with gcc version
2.95
Guess what, now it works (sort of... see next post...)

--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Gregory (Grisha) Trubetskoy <grisha@modpython.org>
To: Mike Looijmans <mike.looijmans@asml.nl>
Date: Friday, February 14, 2003 3:38 PM
Subject: Re: [mod_python] Newbie needs help: Compile errors, segfault,
andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1


>
>Most likely you have an outdated libtool.
>
>Grisha
>
>On Fri, 14 Feb 2003, Mike Looijmans wrote:


[snip]

>> [Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal
Segmentation
>> fault (11)




From mike.looijmans at asml.com  Wed Feb 19 11:03:04 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] cgihandler repeats the whole response for each print command
Message-ID: <01c2d7fe$17c13c00$926a1e6e@wsasd464>

To allow a quick migration of thousands of CGI code lines, I intended to use
the cgihandler.py handler to run existing CGI script.

However, if I setup things that way, and use a small CGI script like this one:


print 'status: 200 OK'
print 'content-type: text/html'
print
print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
print '<BODY><P>Hello Mod_Python world!</P></BODY>'
print '</HTML>'

This would yield a simple 'hello world' page, but the output that is sent to
the browser is as follows:

HTTP/1.1 200 OK
Date: Wed, 19 Feb 2003 09:58:12 GMT
Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
Content-Type: text/html; charset=ISO-8859-1
Connection: close

<HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML>



It seems that (except for the headers) the "sys.stdout" from the cgihandler
sends the whole output history again on each "print" command, like this class
would:

class FaultyIO:
    def __init__(self, req)
        self.msg = ''
        self.req = req
    def write(self, s):
        self.msg += s
        req.send(self.msg)






From mike.looijmans at asml.com  Wed Feb 19 11:56:07 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Solution (bug): cgihandler repeats the whole response for each print command
Message-ID: <01c2d805$80f87d80$926a1e6e@wsasd464>

Found the cause, the problem is in "apache.py" (installed as
/usr/local/lib/python2.2/site-packages/mod_python/apache.py on my system).

Line # 693 says (in function write() of CGIStdout:

        if not self.headers_sent:

But in the code, it NEVER sets 'self.headers_sent' to "1", thus it will never
execute the "else" part of this if.

To fix it, I inserted the following at line # 724 (the last two lines were
already there):

                ## BUG FIX: Send out duplicates....
                self.headers_sent = 1
                # write the body if any at this point
                self.req.write(ss[1])


--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Mike Looijmans <mike.looijmans@asml.com>
To: mod_python list <mod_python@modpython.org>
Date: Wednesday, February 19, 2003 11:08 AM
Subject: [mod_python] cgihandler repeats the whole response for each print
command


>To allow a quick migration of thousands of CGI code lines, I intended to use
>the cgihandler.py handler to run existing CGI script.
>
>However, if I setup things that way, and use a small CGI script like this
one:
>
>
>print 'status: 200 OK'
>print 'content-type: text/html'
>print
>print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
>print '<BODY><P>Hello Mod_Python world!</P></BODY>'
>print '</HTML>'
>
>This would yield a simple 'hello world' page, but the output that is sent to
>the browser is as follows:
>
>HTTP/1.1 200 OK
>Date: Wed, 19 Feb 2003 09:58:12 GMT
>Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
>Content-Type: text/html; charset=ISO-8859-1
>Connection: close
>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML>
>
>
>
>It seems that (except for the headers) the "sys.stdout" from the cgihandler
>sends the whole output history again on each "print" command, like this class
>would:
>
>class FaultyIO:
>    def __init__(self, req)
>        self.msg = ''
>        self.req = req
>    def write(self, s):
>        self.msg += s
>        req.send(self.msg)
>
>
>
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://www.modpython.org/mailman/listinfo/mod_python
>
>



From grisha at modpython.org  Wed Feb 19 11:40:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] cgihandler repeats the whole response for each
 print command
In-Reply-To: <01c2d7fe$17c13c00$926a1e6e@wsasd464>
Message-ID: <20030219114000.P87550-100000@eden.ispol.com>

It's known bug, it has been fixed for the next release.

Grisha

On Wed, 19 Feb 2003, Mike Looijmans wrote:

> To allow a quick migration of thousands of CGI code lines, I intended to use
> the cgihandler.py handler to run existing CGI script.
>
> However, if I setup things that way, and use a small CGI script like this one:
>
>
> print 'status: 200 OK'
> print 'content-type: text/html'
> print
> print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
> print '<BODY><P>Hello Mod_Python world!</P></BODY>'
> print '</HTML>'
>
> This would yield a simple 'hello world' page, but the output that is sent to
> the browser is as follows:
>
> HTTP/1.1 200 OK
> Date: Wed, 19 Feb 2003 09:58:12 GMT
> Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
> Content-Type: text/html; charset=ISO-8859-1
> Connection: close
>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML>
>
>
>
> It seems that (except for the headers) the "sys.stdout" from the cgihandler
> sends the whole output history again on each "print" command, like this class
> would:
>
> class FaultyIO:
>     def __init__(self, req)
>         self.msg = ''
>         self.req = req
>     def write(self, s):
>         self.msg += s
>         req.send(self.msg)
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From Jaco.Smuts at za.didata.com  Tue Feb 25 23:42:05 2003
From: Jaco.Smuts at za.didata.com (Jaco Smuts (ZA))
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] pso examples using mod_python not cgi
Message-ID: <862D79D0DADB244E8563C6F9277C02FF022C10A7@zabrysvcl01ex01.af.didata.local>

Hello there

Started plyaing with mod_python yesterday (great) and discovered pso today.
It seems to cater for my needs (seperation of code and presentation).

I'm looking for a howto or tutorial on building a site using mod_python with
pso and not cgi, or any other suggestions of frameworks to use instead of
pso.

thank you
jaco








ps I've got no control over my companies disclaimer



***************************************************************************************

This message contains information intended solely for the addressee,
which is confidential or private in nature and subject to legal privilege.
If you are not the intended recipient, you may not peruse, use,
disseminate, distribute or copy this message or any file attached to this
message. Any such unauthorised use is prohibited and may be unlawful. If
you have received this message in error, please notify the sender
immediately by e-mail, facsimile or telephone and thereafter delete the
original message from your machine. 
 
Furthermore, the information contained in this message, and any
attachments thereto, is for information purposes only and may contain the
personal views and opinions of the author, which are not necessarily the
views and opinions of Dimension Data (South Africa) (Proprietary) Limited
or its subsidiaries and associated companies ("Dimension Data"). Dimension
Data therefore does not accept liability for any claims, loss or damages
of whatsoever nature, arising as a result of the reliance on such
information by anyone. 
 
Whilst all reasonable steps are taken to ensure the accuracy and
integrity of information transmitted electronically and to preserve the
confidentiality thereof, Dimension Data accepts no liability or
responsibility whatsoever if information or data is, for whatsoever
reason, incorrect, corrupted or does not reach its intended destination. 

*************************************************************************************
 	


From mort at bork.org  Tue Feb 25 20:50:36 2003
From: mort at bork.org (Martin Hicks)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226015036.GA9764@bork.org>

Hello,

I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.

The problem that I'm having is that for my script, which I'm running using the 
publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
suggest a reason why this might happen?

127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"


TIA,
mh

-- 
Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
Beer: So much more than just a breakfast drink.

From frank at fejes.net  Tue Feb 25 21:23:39 2003
From: frank at fejes.net (Frank S. Fejes III)
Date: Fri Jan  9 21:59:54 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <20030225212339.24710d04.frank@fejes.net>

Curious!  I've noticed this, too (frequently, like you), but only on my
NetBSD 1.5.2/x86 production server...my Debian Sparc Linux backup server and
Debian x86 Linux development machine have never produced such an error.  I
had thought it was simply a NetBSD/Apache issue and I was very nearly close
to changing operating systems as my last resort.

I am currently running Apache 1.3.27 / mod_python 2.7.8 on all servers and
I've already experimented with mod_python as both a static and dynamic
module.  I've also changed PythonDebug options, *Handler settings, and
anything else I could find.  This problem is so bad at times that I've
considered avoiding the Publisher handler altogether and simply using the
CGI handler (in case it's not a problem with all of mod_python) or even
straight CGI.

I've never found anything through google about this issue and I wonder if
others are seeing the same issues that we are.

--frank

On Tue, 25 Feb 2003 20:50:36 -0500
Martin Hicks <mort@bork.org> wrote:

> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using
> the publisher handler.  I seem to get a 404 every 8th or so attempt.  Can
> anyone suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

From jack_diederich at email.com  Tue Feb 25 23:15:38 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226041538.16673.qmail@email.com>

>----- Original Message -----
>From: "Frank S. Fejes III" <frank@fejes.net>
>Subject: Re: [mod_python] Trouble with scripts giving 404

Is the frequency of 404s pretty steady or very random and
just averaging out to 1/8?
Does the frequency of 404s change when you change the
number of apache processes?

You could also try setting the number of processes low
and running strace on each, saving the output.  Then
post the diff of the bad vs good hits to the list.

I can't say I know what is wrong, but hopefully we can
narrow it down with more info.
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

Meet Singles
http://corp.mail.com/lavalife


From frank at fejes.net  Wed Feb 26 11:25:32 2003
From: frank at fejes.net (Frank Fejes)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <200302261725.h1QHPWe00744@texas.pop3now.com>

It's not as consistent now that I've provided a SetHandler for the entire
directory structure AND an AddHandler for .py...for example it has not
happened today yet.  When it does start, though, it seems to give the 404
error 40-50% of the time.  Restarting apache does NOT provide relief for
any amount of time...I've stopped/started apache and had the error show up
after 2-3 hits.

I can lower the number of processes and will get ktruss (this is a NetBSD
system) output if I see the problem occur again.  Thanks.

--frank

> >----- Original Message -----
> >From: "Frank S. Fejes III" <frank@fejes.net>
> >Subject: Re: [mod_python] Trouble with scripts giving 404
>
> Is the frequency of 404s pretty steady or very random and
> just averaging out to 1/8?
> Does the frequency of 404s change when you change the
> number of apache processes?
>
> You could also try setting the number of processes low
> and running strace on each, saving the output.  Then
> post the diff of the bad vs good hits to the list.
>
> I can't say I know what is wrong, but hopefully we can
> narrow it down with more info.
> --
> _______________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>
> Meet Singles
> http://corp.mail.com/lavalife
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From thm at duke.edu  Wed Feb 26 17:03:15 2003
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <1046296996.1977.8.camel@jade.biology.duke.edu>

Nothing that I know of in particular, but we've found that 3.0.0 is
buggy in general, and switching to 3.0.1 fixed most issues.

If anyone wants it, I've built and signed (with my key, not Red Hats of
course) the 3.0.1 package from the last Red Hat beta for RHL 8.0. Its at
ftp://ftp.biology.duke.edu/pub/admin/current



On Tue, 2003-02-25 at 20:50, Martin Hicks wrote:
> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using the 
> publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
> suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From cjackson at spsu.edu  Wed Feb 26 20:17:21 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] mod_python on win32
Message-ID: <005c01c2ddfd$fa495710$5f05010a@moxie>

I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get 
mod_python to work in Windows under Apache.  I'm running Windows XP on 
Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so 
file from mod_python.org and copied and pasted the file in my modules/ 
directory under Apache.  Then I added the following to my httpd.conf
file:
 
AddModule python_module mod_python.so
 
If the above line is left uncommented Apache fails to restart.
 
Am I doing something wrong?
 
Chris Jackson
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/f8c62939/attachment-0002.htm
From cjackson at spsu.edu  Wed Feb 26 20:38:15 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] mod_python on win32 solved
Message-ID: <006d01c2de00$e5e8f110$5f05010a@moxie>

Nevermind everyone, after some hunting through the archives' I've
figured out that I needed msvcr70.dll.
 
Thanks anyway
 
Chris Jackson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/3684fe1f/attachment-0002.htm
From jermnsar at hotmail.com  Wed Feb 26 19:37:10 2003
From: jermnsar at hotmail.com (Jeremy Lowery)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] mod_python on win32
Message-ID: <F170BMyiqCl4JDIPHfW000470fa@hotmail.com>

>From: "Chris Jackson" <cjackson@spsu.edu>
>I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get
>mod_python to work in Windows under Apache.  I'm running Windows XP on
>Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so
>file from mod_python.org and copied and pasted the file in my modules/
>directory under Apache.  Then I added the following to my httpd.conf
>file:
>
>AddModule python_module mod_python.so
>
>If the above line is left uncommented Apache fails to restart.
>
>Am I doing something wrong?
>
>Chris Jackson

Try
LoadModule python_module modules/mod_python.so

Jeremy S Lowery



_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail


From mike.looijmans at asml.com  Thu Feb 27 08:26:38 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple sys.stdout objects?
Message-ID: <01c2de31$90914b00$926a1e6e@wsasd464>

mod_python has a nice "cgihandler", that allows me to run out old CGI code in
mod_python 'mode'. However, I have some problems with that, that some of you
may know a solution to.

The cgihandler will lock until the request is complete. This is OK, but it
restrains the number of simultaneous Python requests to just 1. In practice,
this means that the system gets a lot slower with mod_python, because there
are a few requests that send a few megabytes of data to the client, and this
can take a few minutes. The performance hit is unacceptable.

I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.

A workaround is to compile apache with the "pre-fork" system. This however
yields another problem. The child processes all fire up their own interpreter,
and the memory load is about 10MB for each child (in 'worker' mode, only one
interpreter for 20 childs!). This quickly eats up all resources on the
machine. It also virtually eliminates the possibility to "recycle" the
database connection and similar objects. The net effect is that this setup is
also slower than the plain CGI implementation which just starts (runs and
kills) an interpreter for each CGI request.

I tried removing the thread lock in the cgihandler. All CGI scripts I have
don't care about the directory they are in (they get all they need from the
MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
themselves. This left only one single problem: The "print" command.

Python's print command is being used to send the data to the client. The
cgihandler replaces sys.stdout and redirects it to the Request object, which
is ok. But there is only one "sys" module shared by all threads, so all the
print commands from all threads end up in the same request. In practice, if a
"long" request is running, and a shorter request interferes, the short one
will kill sys.stdout and the long one will abort with an exception because
sys.stdout had suddenly died.

One workaround would be to create a cgihandler 'clone' that passes an "output"
object to each script (which defaults to sys.stdout for "plain" CGI mode), and
let the scripts all write() to that object. Drawback is that I will have to
replace all "print" statements in about 10k+ lines of code. Also, I want the
scripts to remain CGI compatible for a few more weeks because a few shadow
systems cannot be upgraded to mod_python yet.

Is there a way that I can let the threads each "print" to their own output,
for example by having a seperate "sys" module in each thread? (could I delete
the sys module and re-import it or something similar?)

--
Mike Looijmans


From grisha at modpython.org  Thu Feb 27 15:34:07 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
In-Reply-To: <01c2de31$90914b00$926a1e6e@wsasd464>
Message-ID: <20030227152549.S3048-100000@eden.ispol.com>

Your best bet is the prefork MPM. Remember that the 10M per child is
actually a lot less because pages for executables are shared between
processes on (most) UNIXes, certainly on Solaris they are. I find it hard
to believe that it is slower than regular CGI - it should be at least
several times faster, though not nearly as efficient as using the
publisher or a native handler.

The ultimate solution is not use CGI of course :-)

Grisha

On Thu, 27 Feb 2003, Mike Looijmans wrote:

> mod_python has a nice "cgihandler", that allows me to run out old CGI code in
> mod_python 'mode'. However, I have some problems with that, that some of you
> may know a solution to.
>
> The cgihandler will lock until the request is complete. This is OK, but it
> restrains the number of simultaneous Python requests to just 1. In practice,
> this means that the system gets a lot slower with mod_python, because there
> are a few requests that send a few megabytes of data to the client, and this
> can take a few minutes. The performance hit is unacceptable.
>
> I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.
>
> A workaround is to compile apache with the "pre-fork" system. This however
> yields another problem. The child processes all fire up their own interpreter,
> and the memory load is about 10MB for each child (in 'worker' mode, only one
> interpreter for 20 childs!). This quickly eats up all resources on the
> machine. It also virtually eliminates the possibility to "recycle" the
> database connection and similar objects. The net effect is that this setup is
> also slower than the plain CGI implementation which just starts (runs and
> kills) an interpreter for each CGI request.
>
> I tried removing the thread lock in the cgihandler. All CGI scripts I have
> don't care about the directory they are in (they get all they need from the
> MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
> themselves. This left only one single problem: The "print" command.
>
> Python's print command is being used to send the data to the client. The
> cgihandler replaces sys.stdout and redirects it to the Request object, which
> is ok. But there is only one "sys" module shared by all threads, so all the
> print commands from all threads end up in the same request. In practice, if a
> "long" request is running, and a shorter request interferes, the short one
> will kill sys.stdout and the long one will abort with an exception because
> sys.stdout had suddenly died.
>
> One workaround would be to create a cgihandler 'clone' that passes an "output"
> object to each script (which defaults to sys.stdout for "plain" CGI mode), and
> let the scripts all write() to that object. Drawback is that I will have to
> replace all "print" statements in about 10k+ lines of code. Also, I want the
> scripts to remain CGI compatible for a few more weeks because a few shadow
> systems cannot be upgraded to mod_python yet.
>
> Is there a way that I can let the threads each "print" to their own output,
> for example by having a seperate "sys" module in each thread? (could I delete
> the sys module and re-import it or something similar?)
>
> --
> Mike Looijmans
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From drh9296 at ritvax.rit.edu  Thu Feb 27 17:59:54 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
References: <20030227152549.S3048-100000@eden.ispol.com>
Message-ID: <3E5E986A.5010206@rit.edu>

Gregory (Grisha) Trubetskoy wrote:
> Your best bet is the prefork MPM. Remember that the 10M per child is
> actually a lot less because pages for executables are shared between
> processes on (most) UNIXes, certainly on Solaris they are. I find it hard
> to believe that it is slower than regular CGI - it should be at least
> several times faster, though not nearly as efficient as using the
> publisher or a native handler.
> 
> The ultimate solution is not use CGI of course :-)
> 
> Grisha

I haven't investigated things in 3.x.x yet, so I don't know if this 
applies.  If this were for mod_python 2.x.x, I'd suggest writing a small 
custom handler.  Just do a bit of error checking, setup a couple local 
variables, and an execfile().  I have an example below.

Your CGIs would need to be modified to use req.write() which is somewhat 
annoying.  For maximum compatibility, you could write a custom write() 
function to detect between outputting via req.write() or via stdout.  On 
a side note, do any mod_python request objects support variable argument 
outputs?

# httpd.conf example
<Location /cgi/>
     SetHandler python-program
     PythonHandler your_handler
</Location>

# your_handler.py example
# called by any request in this directory
def handler( req ) :
     from mod_python import apache

     cur_dir = "/directory/of/this/handler/"
     filename = req.filename[ len( cur_dir ): ]

     # setup any local variables

     try :
         # all my scripts are extension-less, so
         # I can easily test for ".."-style hacking
         if filename.find( "." ) != -1 :
             raise IOError
         execfile( "/directory/of/your/scripts/" + filename )
     except IOError :
         # handle error condition

     return apache.OK


From mike.looijmans at asml.com  Fri Feb 28 08:38:54 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
Message-ID: <01c2defc$71abbb00$926a1e6e@wsasd464>

>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.

>The ultimate solution is not use CGI of course :-)


That is the intention, ultimately...

I think I have to dive into the code and start working. Probably, the best way
for me to set things up is to modify all the scripts to write to a "file like"
object and get their data from a FieldStorage instance. So they'd all have a
'main' like:

handlercode(output, form, database):
    ....
    output.write('<P>Hello world</P>')
    ....

And then call it from either a CGI wrapper:

    module = __import__(scriptname)
    module.handlercode(sys.stdout, cgi.FieldStorage(), db_connect())


Or cal it from a mod python handler:

    module = __import__(scriptname)
    module.handlercode(req, utils.FieldStorage(), recycle_db_connection())


And weed out all the CGI environment calls (e.g. SERVER_NAME) and replace them
with some object to handle that transparently too.



From scott_list at mischko.com  Fri Feb 28 10:17:29 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 21:59:55 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
In-Reply-To: <01c2defc$71abbb00$926a1e6e@wsasd464>
References: <01c2defc$71abbb00$926a1e6e@wsasd464>
Message-ID: <200302281017.29699.scott_list@mischko.com>

In the meantime, you might set up a cron job at 7:45am that accesses the web 
pages before the rush starts so the stuff is "preloaded" and not swapped.

On Thursday 27 February 2003 11:38 pm, Mike Looijmans wrote:
>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.



From jdavis-mod-python at empires.org  Sat Feb  1 03:50:58 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] Execution limtis
Message-ID: <200302010350.58418.jdavis-mod-python@empires.org>

Is it possible ot control the max execution time for a single request? I'd 
like to install mod_python in a virtualhosting environment, and I think I can 
control the RAM with an auto-imported setrlimit module, but I don't want to 
control execution time with that because it would kill the process in the 
middle of a request (right?).

If it's not available currently, is it even possible to implement a timeout 
without changing python itself? I would be interested in implementing it if 
someone can help me think of an idea how to do it. I know many other system 
admins would install mod_python if it could be controlled in a way similar to 
php4.

As a convenience, I think it might be helpful to provide config directives to 
setrlimit() the apache process on startup to certain values. Would the 
developers be interested if I were to implement that (I've made 1.3 apache 
modules before, so I figure I could handle some changes to a 2.0 module).

Regards,
	Jeff Davis

From smcnutt at monmouth.com  Sat Feb  1 07:14:29 2003
From: smcnutt at monmouth.com (Scott McNutt)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] Adding an object to connection
Message-ID: <001d01c2c9eb$79196480$232fbfd1@pavilion>

It would be very convenient for my app to know when a
connection is dropped (keepalive timeout or max requests
event occurs on a client connection).

The connection notes are for str types only ... and
req.connection is readonly ... so I'm basically looking for some
way to add an object attribute to the connection ... so I can at
least know when the connection is dropped.

I'd appreciate any ideas, suggestions, comments.

Thank,
--Scott




From LBerezhny at DevIS.com  Sun Feb  2 17:27:34 2003
From: LBerezhny at DevIS.com (Lex Berezhny)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] test.py fails on RH7.2
Message-ID: <1044224854.2178.7.camel@buddha>

Hi,

  I am trying to use the unit testing framework provided with mod_python
for building my own applications. But I was getting a User error when
running the bundled test.py. Below is a patch to test.py that fixes the
issue on my box:

243a244,245
> 			Directive("User", "nobody"),
> 			Directive("Group", "#-1"),

  Not sure if this is an issue only on my box, but thought I'd be a good
user and report it :-)

My setup:

RedHat 7.2
Apache 2.0.44
mod_python 3.0.1
Pyhton 2.2.2

-- 
Lex Berezhny <LBerezhny@DevIS.com>


From grisha at modpython.org  Sun Feb  2 19:51:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <3E3ADAA6.2010707@cs.uchicago.edu>
Message-ID: <20030202194957.W51473-100000@eden.ispol.com>

Someone else reported this "import site" problem, and as far as I can
remember it is actually a bug in Python, not mod_python - perhaps someone
can fill in the details?

Grisha

On Fri, 31 Jan 2003, ganapathy murali krishnan wrote:

>
> I just installed Python-2.3a1 + apache 2.0.44 + mod_python 3.0.1.
> I have one vhost (say vhost) in addition to the main one (say mainhost).
> The vhost has a python program as the main handler (using SetHandler).
> This setup works correctly without any problems on another machine
> (Python 1.5+ apache 1.3 + mod_python something), so the problem is not
> in the handler code itself.
>
> When I run the httpd binary, all is fine. The mainhost serves up html
> files without any problems. The vhost is supposed to serve up .py files.
> When I go to "http://vhost" I get the following error.
>
> ----
> [Fri Jan 31 13:53:00 2003] [error] make_obcallback: could not import
> mod_python.apache.
>
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> ----
>
> The apache.py is in
> /opt/python/default/lib/python2.3/site-packages/mod_python/apache.py.
>
> I tried many of the suggested workarounds, I couldn't get any of them
> to work. The content of my httpd.conf inside the <VirtualHost> and
> </VirtualHost> is enclosed below.
>
> ------------
>    SetHandler python-program
>    PythonDebug on
>    # All handlers are stored in a different directory, for security
>    PythonPath "sys.path+['/stage/w3serv/vhost.cs.uchicago.edu']"
>
>    # This module handles reloading modules on demand
>    PythonInitHandler handlers.init
>
>    # Fire up the first Python handler
>    PythonTransHandler handlers.translate
>
>    # Logging configuration
>    # PythonOption Log off
>    PythonOption Log /stage/w3serv/vhost/logs/debug.log
>    # Tell the Python site to ignore these paths,
>
>    PythonOption DontHandle /icons:/images:/~:/i/:/files/:/pipermail
>
>    # Tell the Python handler to ignore these extensions
>
>    PythonOption DontHandleExt html:htm:php:php3:phps:php4:cgi
>
>
>
>    # Then tell Apache how to handle them.
>
>    Alias /icons /stage/w3serv/common/docs/icons
>
>    Alias /images /stage/w3serv/common/docs/images
>
>    UserDir disable
>
> -----
>
> Any help would be appreciated.
>
> - Murali
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From grisha at modpython.org  Sun Feb  2 19:54:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] Adding an object to connection
In-Reply-To: <001d01c2c9eb$79196480$232fbfd1@pavilion>
Message-ID: <20030202195328.J51473-100000@eden.ispol.com>

The connection object is still the old-style python object, and thus you
cannot add attributes to it. I plan to rewrite it (as well as the server
object), but it won't be in 3.0.2 - perhaps 3.0.3?

Grisha

On Sat, 1 Feb 2003, Scott McNutt wrote:

> It would be very convenient for my app to know when a
> connection is dropped (keepalive timeout or max requests
> event occurs on a client connection).
>
> The connection notes are for str types only ... and
> req.connection is readonly ... so I'm basically looking for some
> way to add an object attribute to the connection ... so I can at
> least know when the connection is dropped.
>
> I'd appreciate any ideas, suggestions, comments.
>
> Thank,
> --Scott
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mateusz at ant.gliwice.pl  Mon Feb  3 16:03:59 2003
From: mateusz at ant.gliwice.pl (Mateusz Korniak)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
Message-ID: <200302031603.59186.mateusz@ant.gliwice.pl>

shell interpreter is able use that encoding:
>>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
g\xc4\x99\xc5\x9bl'
while mod_python's interpreter refuses ...

Any ideas why ?
TIA

-- 
Mateusz Korniak
easy.com  easy.go


From Mongryong at sympatico.ca  Mon Feb  3 11:49:57 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] Why unknown encoding: iso-8859-2 using mod_python ?
In-Reply-To: <200302031603.59186.mateusz@ant.gliwice.pl>
References: <200302031603.59186.mateusz@ant.gliwice.pl>
Message-ID: <1044290998.3112.4.camel@refugeeMedia>

On Mon, 2003-02-03 at 10:03, Mateusz Korniak wrote:
> shell interpreter is able use that encoding:
> >>> "Za???? ???t? g??l".decode("iso-8859-2").encode("utf-8")
> 'Za\xc5\xbc\xc3\xb3\xc5\x82\xc4\x87 \xc5\xbc\xc3\xb3\xc5\x82t\xc4\x85 
> g\xc4\x99\xc5\x9bl'
> while mod_python's interpreter refuses ...
> 
> Any ideas why ?
> TIA
> 
Hmmm...coincidentally, there are encoding in issues with
mod_python/Apache and XML libraries such as 4Suite's.  Up to this point,
the problem is unresolved.  It appears the encoding library is not being
properly started by mod_python. 



From agenkin-lst-mod_python at thpoon.com  Mon Feb  3 21:46:03 2003
From: agenkin-lst-mod_python at thpoon.com (Arcady Genkin)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] cannot import mod_python.apache error
References: <20030202194957.W51473-100000@eden.ispol.com>
Message-ID: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>

"Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:

> Someone else reported this "import site" problem, and as far as I can
> remember it is actually a bug in Python, not mod_python - perhaps someone
> can fill in the details?

When installing Python from sources, "make install" installs the files
in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
permissions for everything else are fine).  I have to manually fix
them every time I (re)compile Python.  When I forget to fix them, the
error message that I am seeing is exactly:

      [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
      import mod_python.apache.

Perhaps this is what was causing the grief for the original poster,
since it looks awfully similar to the subject line of this thread.
-- 
Arcady Genkin : CDF Systems Administrator
http://www.cdf.toronto.edu/~agenkin/contact.html

guilt is the cause of more disauders
than history's most obscene marorders (E.E. Cummings)

From Mongryong at sympatico.ca  Mon Feb  3 22:13:01 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> 
	<uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <1044328382.3116.249.camel@refugeeMedia>

On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I can
> > remember it is actually a bug in Python, not mod_python - perhaps someone
> > can fill in the details?
> 
> When installing Python from sources, "make install" installs the files
> in $prefix/lib/python2.2/lib-dynload/ with bad permissions (even though
> permissions for everything else are fine).  I have to manually fix
> them every time I (re)compile Python.  When I forget to fix them, the
> error message that I am seeing is exactly:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  He's been quiet ever since, so I'm assuming that solved his
problem.



From dustin at ywlcs.org  Mon Feb  3 21:46:41 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
References: <20030202194957.W51473-100000@eden.ispol.com> <uo4r7ku5jo.fsf@bashful.cdf.toronto.edu>
Message-ID: <20030204034640.GH14728@eleanor.internal.ywlcs.org>

On Mon, Feb 03, 2003 at 09:46:03PM -0500, Arcady Genkin wrote:
> 
>       [Mon Feb 03 21:34:15 2003] [error] make_obcallback: could not
>       import mod_python.apache.
> 
> Perhaps this is what was causing the grief for the original poster,
> since it looks awfully similar to the subject line of this thread.

This seems to be a very common error, and the result of an enormous variety
of problems.  Would it be possible to, in circumstances that normally trigger
this log message, initiate some series of checks for common problems, and
produce more specific messages?  This wouldn't impact normal operational
efficiency (since the extra checks would only be triggered when this message
is produced), but would probably significantly reduce messages about
installation problems.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

From gmurali at cs.uchicago.edu  Mon Feb  3 23:23:45 2003
From: gmurali at cs.uchicago.edu (Murali krishnan Ganapathy)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] cannot import mod_python.apache error
In-Reply-To: <1044328382.3116.249.camel@refugeeMedia>
Message-ID: <000001c2cc0d$972b8c90$e8e38780@triangle>

[Original Poster] I thought I replied to the list about this problem
before. May be I forgot to CC the list. I tried installing Python 2.2.2,
I still got the same error. For the 2.3a1 installation, I had checked
all 
the permissions and all the usual pit falls, they were not the cause.
Before I checked the permissions and the usual stuff for the 2.2.2
installation,
another person had identified it as a bug in Python 2.3a1 (It did not
try to 
import the modules under some circumstances) and suggested a one line
patch. 
That solved the problem. I think you needed to add one line 
'_PyImportHooks()' (or something like that) to the file pythonrun.c some
where near
line 350 (I am quoting all this from memory).

So right now, I have Python 2.3a1 + mod_python 3.0.1 + Apache 2.0.44 +
PHP 4.3 + ...
working together. However, I am getting a different kind of error. The
apache processes
are catching a SIGNAL 11 and terminating. However, it is not
mod_python's fault.
The python based dispatcher code, which works with Python 1.5, no longer
works with 2.3a1.
I haven't got around to finding the exact problem. Once I do, I will
tell you guys the 
exact problem, and you guys can tell me if this is another bug in Python
2.3a1 or my code 
has to be rewritten.

Thanks for the solution. And sorry for forgetting to CC to the list.

- Murali

PS: When I reply to any of the mailing messages, neither the To field,
nor the CC field
has the list address. I guess in my previous posting I forgot to add in
the list address
by hand.

-----Original Message-----
From: Mongryong [mailto:Mongryong@sympatico.ca] 
Sent: Monday, February 03, 2003 9:13 PM
To: Arcady Genkin
Cc: Gregory (Grisha) Trubetskoy; ganapathy murali krishnan;
mod_python@modpython.org
Subject: Re: [mod_python] cannot import mod_python.apache error


On Mon, 2003-02-03 at 21:46, Arcady Genkin wrote:
> "Gregory (Grisha) Trubetskoy" <grisha@modpython.org> writes:
> 
> > Someone else reported this "import site" problem, and as far as I 
> > can remember it is actually a bug in Python, not mod_python - 
> > perhaps someone can fill in the details?
> 

> I suggested to the original poster to use Python2.2.2 instead of
Python2.3a.  
> He's been quiet ever since, so I'm assuming that solved his problem.






From gmurali at cs.uchicago.edu  Tue Feb  4 18:23:56 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] mp 3.0.1 + Python 2.3: child pid nnnnn exit signal Segmentation fault
 (11)
References: <3E3ADAA6.2010707@cs.uchicago.edu>	<1044049878.13789.42.camel@refugeeMedia>	 <3E3AFAB4.8070205@cs.uchicago.edu> <1044053589.1599.59.camel@refugeeMedia>	 <3E3B03A6.60009@cs.uchicago.edu> <1044058560.27207.3.camel@rye>
Message-ID: <3E40599C.4000705@cs.uchicago.edu>

I have a Apache 2.0.44 + mp 3.0.1 (Python 2.3a1) installed.
If I use a simple PythonHandler directive as specified in the
mod_python tutorial things work fine. However when I start using
PythonInitHandler and PythonTransHandler directives the apache child
processes start dying with a Signal 11. By inserting "print" statements
I have learnt the following.

The PythonInitHandler is being called and successfully completes.
The PythonTransHandler is being called and sucessfully completes.
Just before the "return apache.OK", it (transhandler) calls

req.add_handler("PythonHandler", "handlers.dispatch")

The file $SERVERROOT/handlers/dispatch.py is readable by all.
The first line of the handler function in dispatch.py never
gets executed!

The browser tries the same URL about 6 times before giving up with a
"Document contains no data" error. On the server side, the error_log of
apache, contains

----------
[Tue Feb 04 17:46:05 2003] [notice] mod_python: (Re)importing module 
'handlers.translate'
[Tue Feb 04 17:46:06 2003] [notice] child pid 17086 exit signal 
Segmentation fault (11)
----------

about once for each time the browser requests for the page.

The main apache process doesnt seem to be affected, in that after all 
this happens, it continues to wait to service other requests. So in 
effect html, php and cgi's all work fine but .py files dont.

Can anyone shed some light on this?

- Murali


From dmitry at deluxoft.com  Sat Feb  8 14:03:30 2003
From: dmitry at deluxoft.com (Dmitry Dembinsky)
Date: Fri Jan  9 22:03:43 2004
Subject: [mod_python] mod_python 2.7 documentation inconsistency
Message-ID: <001301c2cf6a$18918c30$1400a8c0@LAPTOP>

Hello,

I'm using mod_python 2.7.8 with Apache 1.3.27 running on RH7.3

When I was trying to use mod_python.publisher module
I've encountered the following inconsistency in a documentation:

Section 3.4 ("Publisher Handler Makes it Easy") contains a sample HTML
form.
The line specifying form handler is the following:

  <form action="form/email" method="POST">

While it should be:

  <form action="form.py/email" method="POST">

to make an example working.

(Or, probably "AddHandler python-program .py" should be replace with
"SetHandler python-program" ?)

As I've seen, the latest doc for mod_python 3.0.1 doesn't have this
inconsistency.

Regards,
Dmitry Dembinsky <dmitry@deluxoft.com>


From chip at cyan.com  Mon Feb 10 16:03:58 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] layering mod_auth_digest and mod_python authentication in apache2
Message-ID: <20030211000358.M11624@cyan.com>

I am trying to setup mod_auth_digest to work with a mod_python script.

What I want is AuthDigest to decode the username, and password, and then to
pass this onto my mod_python authenticationn scripts, without having to
re-write the entire mod_auth_digest in Python.

I have been tyying to use the mod_python's PythonAuthenHandler[1] and AuthType
Digest in my httpd.conf, but AuthDigest is always rejecting the
users/passwords, because I am not using a localfile at all.

I thought mod_auth_digest would have somthing simular to mod_auth_ldap's
AuthLDAPAuthoritative[2], which can pass authentication onto the next handler,
but I don't think that exists for mod_auth_digest

Here is the basic plan, the HTTP client, uses Digest authentication to apache,
which passes it onto mod_auth_digest, who will NOT find it in a local text
file, but instead will pass on the request with the decoded username and
password to mod_python's PythonAuthenHandler where i will use my own python
scripts to validate the user information.

Is what I am trying todo even possible, and if it is, what do i need todo?

Thanks,
-chip

[1] http://www.modpython.org/live/mod_python-3.0.1/doc-html/node54.html
[2] http://httpd.apache.org/docs-2.0/mod/mod_auth_ldap.html#authldapauthoritative

From skremer at q.cis.uoguelph.ca  Wed Feb 12 14:49:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Date persistence accross connections.
Message-ID: <Pine.LNX.4.44.0302121437360.7578-100000@q.cis.uoguelph.ca>

Hi,

I would like to store information in a variable and be able to access it 
with subsequent http requests.

It is my understanding that each virtual server name has its own namespace 
(which is no problem since all my information is specific to the 
namespace), and that httpd is now threaded instead of multiple processes.  
So should I be able to just store a variable in my local namespace and 
then return to it the next time I make an http connection?  Or might my 
next connect be executing python in a different namespace for some 
reason?!?

Sorry if I'm way off base here.  Any advice much appreciated.

	-SK

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.8913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From gnb at itga.com.au  Thu Feb 13 08:21:18 2003
From: gnb at itga.com.au (Gregory Bond)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: Your message of Wed, 12 Feb 2003 14:49:03 -0500.
Message-ID: <200302122121.IAA02700@lightning.itga.com.au>

skremer@q.cis.uoguelph.ca said:
> So should I be able to just store a variable in my local namespace and
>  then return to it the next time I make an http connection?  Or might
> my  next connect be executing python in a different namespace for some
>  reason?!? 

It might work in certain restricted circumstances, but it's likely to be 
unreliable.  You can't know when Apache will decide it's time for a new 
process.  You can't know when the apache process gets re-configured or 
restarted.  You can't know when another unrelated session to the same 
application will begin. 

You would be much better off to look at some of the session management tools
that work with mod_python and handle the problem properly.  I use Albatross
(http://www.object-craft.com.au/projects/albatross/) but that does a whole 
heap more than just session management.  Others have recommended PSO 
(http://www.scriptfoundry.com/modules/pso/).

Greg.




From thanos at 0x01.com  Wed Feb 12 18:28:45 2003
From: thanos at 0x01.com (thanos@0x01.com)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Re: pso and mod_python
In-Reply-To: <20030212145018.GA1414@mico>
References: <20030211202535.GI2050@mico>
            <20030211224116.73074.qmail@0x01.com>
            <20030212145018.GA1414@mico>
Message-ID: <20030212232845.79816.qmail@0x01.com>

yes I forgot to mention the following: 

mod_python by default looks for a method in your module called "handler"
so given this line in your .htaccess:
PythonHandler test 

your should add
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border'
handler = TestHandler().handle 

On the other hand with mod_python you can stipulate which handler to use:
PythonHandler test:TestHandler.handle 

But your handler class muts take a request object as an argument to the 
constructor. pso's TemplateHandler does not have a CTOR defined (Opps)
so you will have to add your own:
class TestHandler(TemplateHandler):
   def __init__(self, req):
        TemplateHandler.__init__(self) 

I hope this helps 

thanos 

 

 

 


Jeffrey Clement writes: 

> Thank you for your help.  I think I'm still missing something.  What is
> test.py? 
> 
> If I wanted: 
> 
> from pso.service import ServiceHandler
> from pso.handlers import TemplateHandler
> from dbsession import CookieDBImpl 
> 
> class TestHandler(TemplateHandler):
>     DEFAULT_TEMPLATE='cat_border' 
> 
> if __name__=='__main__':
>     ServiceHandler().run(TestHandler().handle, CookieDBImpl) 
> 
> How do I make this get run by mod_python.  It needs a handle method
> right?  And that takes a requestInfo parameter.  I assume the
> pso.modpython::fixup adds the pso() method to the request handler but
> how do I use this with my templateHandler? 
> 
> Thank you for all your help.  I'm finding PSO to be awesome for thhe
> current project I'm working on only just getting hung up once in a
> while. 
> 
> Jeff 
> 
> 
> On Tue, Feb 11, 2003 at 05:41:16PM -0500, thanos@0x01.com wrote:
>> Jeffrey,  
>> 
>> You are right: the problem lies with your .htaccess file. It should be:  
>> 
>>  
>> 
>> 
>> AddHandler python-program .py
>> PythonHandler test
>> PythonFixupHandler pso.modpython::fixup
>> PythonLogHandler pso.modpython::cleanup  
>> 
>> You have to set the PythonFixupHandler and PythonLogHandler so pso can set 
>> thing up such as the session handling.  
>> 
>> A look through the pso guide 
>> [http://sourceforge.net/docman/display_doc.php?docid=11314&group_id=49265] 
>> shows me that this information is missing. It is
>> metioned in the "Easy mod_python Session Handling with pso.session" how-to
>> [http://www.scriptfoundry.com/modules/pso/doc/session-modpython.html] so I 
>> guess I am not completly guilty!  
>> 
>> Also trying out the sample mod_python code in the guide, i find things are 
>> broken. So I will post two bug reports to fix these problems.  
>> 
>> 
>> thanos  
>> 
>>  
>> 
>>  
>> 
>> 
>> Jeffrey Clement writes:  
>> 
>> >Hi there, 
>> >
>> >I'm trying to use PSO with mod_python and having some difficulties that
>> >I hope you can assist me with. 
>> >
>> >I have my appliaction: (test.py)
>> >=====================================================================
>> >from pso.service import ServiceHandler
>> >from pso.handlers import TemplateHandler
>> >from dbsession import CookieDBImpl 
>> >
>> >class TestHandler(TemplateHandler):
>> >    DEFAULT_TEMPLATE='cat_border' 
>> >
>> >if __name__ == '__main__':
>> >    ServiceHandler().run(TestHandler().handle, CookieDBImpl)
>> >===================================================================== 
>> >
>> >This above script runs fine as a CGI script.  However I have no idea how
>> >to make it run as a mod_python script. 
>> >
>> >I've got modpython installed and tested (I know it's OK) but It won't
>> >run my scripts.  I suspect the problem is I'm not understanding what
>> >exactly goes in .htaccess 
>> >
>> >I currently have:
>> >  AddHandler python-program .py
>> >  PythonHandler test.py
>> >  PythonDebug On 
>> >
>> >I know mod_python looks for a method handle.  Is there a mod_python
>> >wrapper that does I'm supposed to set as my PythonHandler?
>> >Thank you, Jeff 
>> > 
>> 
>>  
>> 
>> >-- 
>> >Jeff Clement 

>>  
>> 
>> 

From gashalot at gashalot.com  Thu Feb 13 11:36:50 2003
From: gashalot at gashalot.com (Robert Gash)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
Message-ID: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>

I recently snagged the binary packages for apache-2.0.44 and
mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
package repository.  The system I'm installing on is a 4.7-RELEASE box,
and I'm getting the following error from Apache:

root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"

I have attempted to compile mod_python myself and I have attempted to
install the binary package, does anyone know how to correct this error?

-R

-- 
Robert Gash, gashalot@gashalot.com
(Web) http://gashalot.com/
(PGP) http://gashalot.com/pgpkeys.txt

From grisha at modpython.org  Thu Feb 13 12:01:38 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Apache2 + mod_python 3.0.1 on FreeBSD 4.7-RELEASE
In-Reply-To: <Pine.BSF.4.53.0302131135430.6912@galileo.gashalot.com>
Message-ID: <20030213115857.I7394-100000@eden.ispol.com>

If you're using precompiled packages, I don't think you'll be able to get
it going. Try compiling apache2 from ports, but make sure to edit the
Makefile in the ports first to add --enable-threads to the options. It's
mentioned in the mod_python README file, but I don't rember whether was
added there before or after 3.0.1 was released.

Grisha

On Thu, 13 Feb 2003, Robert Gash wrote:

> I recently snagged the binary packages for apache-2.0.44 and
> mod_python-3.0.1 available from the FreeBSD ports/i386/ports-4-stable
> package repository.  The system I'm installing on is a 4.7-RELEASE box,
> and I'm getting the following error from Apache:
>
> root@galileo(ttyp2):/usr/local/etc/apache2# apachectl start
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
> "pthread_create"
>
> I have attempted to compile mod_python myself and I have attempted to
> install the binary package, does anyone know how to correct this error?
>
> -R
>
> --
> Robert Gash, gashalot@gashalot.com
> (Web) http://gashalot.com/
> (PGP) http://gashalot.com/pgpkeys.txt
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From jwm-modpython at sentinelchicken.net  Thu Feb 13 13:39:25 2003
From: jwm-modpython at sentinelchicken.net (Jason Morgan)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Fatal Python error: PyThreadState_Delete:
Message-ID: <20030213183925.GB88059@sentinelchicken.net>

OK, I moved from mod_python 2.7 and Apache 1.3 to 3.0 and 2.0,
respectively, about two weeks ago. All of a sudden, in the last two
days, I start getting these arror messages.

First I get this:

Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:04 2003] [notice] child pid 86935 exit signal Abort
trap (6)
[Thu Feb 13 09:11:04 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:05 2003] [notice] child pid 86967 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] child pid 86936 exit signal Abort
trap (6)
[Thu Feb 13 09:11:05 2003] [notice] mod_python: (Re)importing module
'index'
Fatal Python error: PyThreadState_Delete: tstate is still current
[Thu Feb 13 09:11:06 2003] [notice] mod_python: (Re)importing module 
'index'

Then lots and lots of this:

[Thu Feb 13 09:11:31 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:32 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:33 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:34 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:35 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:36 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:37 2003] [warn] (13)Permission denied: connect to
listener
[Thu Feb 13 09:11:38 2003] [warn] (13)Permission denied: connect to
listener

My site isn't doing anything - just posting an under-construction
message.

I'm running FreeBSD 4.7 and I installed both Apache and mod_python from
ports.


Thanks,

Jason

----- End forwarded message -----

From matthew at yak.org  Thu Feb 13 19:43:01 2003
From: matthew at yak.org (Matthew J. Probst)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Documentation inconsistency in 3.0.1 docs
In-Reply-To: <20030214013301.12832.73000.Mailman@eden.ispol.com>
Message-ID: <5.2.0.9.0.20030213193321.00b31810@192.168.0.253>

Since I'm a complete newbie at mod_python, I thought I'd share the results 
of my head-banging against the documentation.

In Section 3.4 (Now something More Complicated) the sample code says

..
..
def authenhandler(req):
   user = req.user
   pw = req.get_basic_auth_pw()
..
..

This snip of code failed to authenticate because req.get_basic_auth_pw() 
needs to be called -before_ doing anything with the user.  I found this out 
by looking in section 5.1.7, which clearly states this.  However, section 
5.1.7 incorrectly states that you get user from req.connection.user instead 
of req.user.

This stuff might be obvious to someone who moved from mod_python 2.x to 3.x 
but since I'm new it didn't make sense for a while.  So section 3.4 and 
5.1.7 need changing,  _or_ (less likely) there's a lurking bug somewhere.


From skremer at q.cis.uoguelph.ca  Thu Feb 13 21:14:03 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Date persistence accross connections. 
In-Reply-To: <200302122121.IAA02700@lightning.itga.com.au>
Message-ID: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>

Thanks for the reply Greg.  Actually I'm in the process of writing my own
session management tool (I looked at a few others and none of them really
suited my needs; plus I wanted to do it myself for the learning
experience).  So now I'm trying to figure out what my options are for
implementing persistent data.  Right now I'm identifying my session by
means of a cookie, so that part's not a problem.  My challenge now is, how
to associate more data with the cookie (session) in a way that persists
accross http requests.

The three options I'm working with right now are:

(1) just store in the info in the global namespace, keyed on the cookie.  
This seems to me to be the simplest, and fastest solution.  The drawbacks
are that queries that go to a different process won't have access to my
data.  Now that httpd is threaded, this happens much less often. In fact,
it seems to only occur when I explicitly restart apache or reboot my 
machine (which is basically never since I don't run Windows and have a 
UPS).

(2) Save it to a file.  This is slow, but otherwise would work fine if I 
implement appropriate file locking.

(3) Send it via a socket to another process which all mod_python processes 
share.

(4) Some combination of (1) with (2 or 3), which writes the data away and 
only retrieves it from (2,3) if its not in the local namespace.  I'm not 
sure how much I will gain from not retrieving data from (2,3) most of the 
time.

Are there any good options which I have overlooked?  Does my evaluation of
the alternatives seem sound?  Any suggestions or comments.

Thanks for any advice anyone wants to pass my way.

	-SK

 On Thu, 13 Feb 2003, Gregory Bond wrote:

> 
> skremer@q.cis.uoguelph.ca said:
> > So should I be able to just store a variable in my local namespace and
> >  then return to it the next time I make an http connection?  Or might
> > my  next connect be executing python in a different namespace for some
> >  reason?!? 
> 
> It might work in certain restricted circumstances, but it's likely to be 
> unreliable.  You can't know when Apache will decide it's time for a new 
> process.  You can't know when the apache process gets re-configured or 
> restarted.  You can't know when another unrelated session to the same 
> application will begin. 
> 
> You would be much better off to look at some of the session management tools
> that work with mod_python and handle the problem properly.  I use Albatross
> (http://www.object-craft.com.au/projects/albatross/) but that does a whole 
> heap more than just session management.  Others have recommended PSO 
> (http://www.scriptfoundry.com/modules/pso/).
> 
> Greg.
> 
> 
> 

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca


From drh9296 at ritvax.rit.edu  Thu Feb 13 22:20:30 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Date persistence accross connections.
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <3E4C607E.5050608@rit.edu>

Stefan C. Kremer wrote:
 > Thanks for the reply Greg.  Actually I'm in the process of writing my own
 > session management tool (I looked at a few others and none of them really
 > suited my needs; plus I wanted to do it myself for the learning
 > experience).  So now I'm trying to figure out what my options are for
 > implementing persistent data.  Right now I'm identifying my session by
 > means of a cookie, so that part's not a problem.  My challenge now 
is, how
 > to associate more data with the cookie (session) in a way that persists
 > accross http requests.
 >
 > The three options I'm working with right now are:
 >
 > (1) just store in the info in the global namespace, keyed on the 
cookie.
 > This seems to me to be the simplest, and fastest solution.  The drawbacks
 > are that queries that go to a different process won't have access to my
 > data.  Now that httpd is threaded, this happens much less often. In fact,
 > it seems to only occur when I explicitly restart apache or reboot my
 > machine (which is basically never since I don't run Windows and have a
 > UPS).
 >
 > (2) Save it to a file.  This is slow, but otherwise would work fine if I
 > implement appropriate file locking.
 >
 > (3) Send it via a socket to another process which all mod_python 
processes
 > share.
 >
 > (4) Some combination of (1) with (2 or 3), which writes the data away 
and
 > only retrieves it from (2,3) if its not in the local namespace.  I'm not
 > sure how much I will gain from not retrieving data from (2,3) most of 
the
 > time.
 >
 > Are there any good options which I have overlooked?  Does my 
evaluation of
 > the alternatives seem sound?  Any suggestions or comments.
 >
 > Thanks for any advice anyone wants to pass my way.
 >
 > 	-SK

How about storing stuff in a database?

MySQL (and many other DBs) have very usable python interfaces; getting 
and adding them to your build should be pretty simple.

You'll get all the persistence of storing to a file, but with added 
data-gathering functionality and no need to worry about locking (the DB 
should handle this for you).

The only difficulty is that you will probably want to store data in a 
DB-useable format - aka not by storing pickled objects.

--david


From Mongryong at sympatico.ca  Fri Feb 14 00:37:59 2003
From: Mongryong at sympatico.ca (Mongryong)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Date persistence accross connections.
In-Reply-To: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
References: <Pine.LNX.4.44.0302132059090.5648-100000@q.cis.uoguelph.ca>
Message-ID: <1045201079.3096.263.camel@refugeeMedia>

On Thu, 2003-02-13 at 21:14, Stefan C. Kremer wrote:
> Are there any good options which I have overlooked?  Does my evaluation of
> the alternatives seem sound?  Any suggestions or comments.

Have you looked at using an 'object oriented database' such as ZODB? 
ZODB is used by Zope for most of its session management.  However, it
should work in any Python application include mod_python.

I believe ZODB has drivers for files, databases, and even networked
capabilities.  ZODB also session garbage collection.




From mike.looijmans at asml.com  Fri Feb 14 09:46:01 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, and warnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d405$802aaa80$926a1e6e@wsasd464>

System & software:

SUN Ultra-10 (called wsasd464)
Solaris 2.6 installed (SunOS 5.6)
GCC version 2.8.1 (Please don't tell me to use 2.9.5 - It's company politics
prohibiting me from using that - I had no problems compiling apache and
python)
Apache 2.0.44 compiled, installed, up and running (/usr/local/apache/...)
Python 2.2.2 compiled, installed (/usr/local)

(Also MySQL and Python-to-MySQL 0.91 but this seems irrelevant)

Problem:

wsasd464:/scratch/download/apache/mod_python-3.0.1 %
./configure --with-apxs=/usr/local/apache/bin/apxs --with-python=/usr/local/bi
n/python

[== lots of OK's here, no problems ==]

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake
ar -x `gcc -print-libgcc-file-name` _eprintf.o
ar -x `gcc -print-libgcc-file-name` _floatdidf.o

Compiling for DSO. For static, do "make static"

/usr/local/apache/bin/apxs -I/usr/local/asm/download/apache/mod_python-3.0.1/s
rc/include -I/usr/local/apache/include -I/usr/local/include/python2.2 -c
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c
serverobject.c connobject.c filterobject.c hlist.c
hlistobject.c -L/usr/local/lib/python2.2/config -lm  -lpython2.2   -lsocket -l
nsl -ldl  -lpthread -lthread   -lm _eprintf.o _floatdidf.o
/usr/local/apache/build/libtool --silent --mode=compile
cc -prefer-pic  -DAP_HAVE_DESIGNATED_INITIALIZER -DSOLARIS2=6 -D_POSIX_PTHREAD
_SEMANTICS -D_REENTRANT -g -O2 -I/usr/local/apache/include -I/usr/local/asm/do
wnload/apache/mod_python-3.0.1/src/include -I/usr/local/apache/include -I/usr/
local/include/python2.2  -c -o mod_python.lo mod_python.c && touch
mod_python.slo
In file included from /usr/local/include/python2.2/Python.h:24,
                 from
/usr/local/asm/download/apache/mod_python-3.0.1/src/include/mod_python.h:92,
                 from mod_python.c:67:
/usr/local/include/python2.2/pyconfig.h:104: warning: `_FILE_OFFSET_BITS'
redefined
/usr/include/sys/feature_tests.h:80: warning: this is the location of the
previous definition


[==this warning appears a dozen times repeatedly==]

[===Then I get this near the end ===]

*** Warning: Linking the shared library mod_python.la against the non-libtool
*** objects  _eprintf.o _floatdidf.o is not portable!
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- L
grep: illegal option -- /
grep: illegal option -- u
grep: illegal option -- r
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- a
grep: illegal option -- /
grep: illegal option -- /
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
grep: illegal option -- /
grep: illegal option -- o
grep: illegal option -- f
grep: illegal option -- g
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- o
grep: illegal option -- 2
grep: illegal option -- .
grep: illegal option -- 2
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- o
grep: illegal option -- k
grep: illegal option -- e
grep: illegal option -- t
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- p
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- t
grep: illegal option -- r
grep: illegal option -- e
grep: illegal option -- a
grep: illegal option -- d
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
Usage: grep -hblcnsviw pattern file . . .
grep: illegal option -- e
grep: illegal option -- m
Usage: grep -hblcnsviw pattern file . . .

Now su and make install
  (or, if you only want to perform a partial install,
   you can use make install_dso and make install_py_lib)

wsasd464:/scratch/download/apache/mod_python-3.0.1 % smake install

[== stuff here appears OK ==]

Took a gamble and installed it anyway. Investigating the Makefiles leaded me
to conclude that the "grep" errors seem to come from the 'apxs' program in
Apache, which unfortunately appears to have been written in Perl so I couldn't
understand much of it.

Now, I configured apache to load the module, and created 'mptest.py' as
suggested in the manual. Attempting to access it will yield an empty document
(no data at all, no headers).

Looking in the error_log of apache yields:

[Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal Segmentation
fault (11)






From Christian.Ferrari at primeur.com  Fri Feb 14 10:23:27 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
Message-ID: <3E4CB58F.50408@primeur.com>

Hardware/software specs:

# uname -a
HP-UX apollo B.11.11 U 9000/800 816839621 unlimited-user license

# gcc -v
Reading specs from /opt/gccs/lib/gcc-lib/hppa2.0w-hp-hpux11.11/3.2.1/specs
Configured with: ../gcc-3.2.1/configure --prefix=/opt/gccs 
--enable-languages=c,
c++ --with-as=/opt/gccs/bin/as
Thread model: single
gcc version 3.2.1

# /opt/Python-2.2/bin/python -V
Python 2.2.2
*** Install steps:
./configure --prefix=/opt/Python-2.2
make
make install

# /opt/apache2/bin/httpd -v
Server version: Apache/2.0.44
Server built:   Feb 13 2003 16:53:25
*** Install steps:
./configure --prefix=/opt/apache2
make
make install

# /opt/apache2/build/libtool --version
ltmain.sh (GNU libtool) 1.4.3 (1.922.2.110 2002/10/23 01:39:54)

*** ISSUE POINT: ***

mod_python package: mod_python-3.0.1
*** Install steps:
./configure --with-apxs=/opt/apache2/bin/apxs 
--with-python=/opt/Python-2.2/bin/python
# make

Compiling for DSO. For static, do "make static"

         /opt/apache2/bin/apxs 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2 -c 
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c 
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c 
-L/opt/Python-2.2/lib/python2.2/config  -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
      -lm  -lpython2.2   -lnsl -ldld  -lpthread   -lm

[...]
Some OK compile steps...
[...]

/opt/apache2/build/libtool --silent --mode=link gcc -o mod_python.la 
-I/usr/local/installed/mod_python-3.0.1/src/include 
-I/opt/apache2/include -I/opt/Python-2.2/include/python2.2  -rpath 
/opt/apache2/modules -module -avoid-version  hlistobject.lo hlist.lo 
filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo 
requestobject.lo _apachemodule.lo mod_python.lo 
-L/opt/Python-2.2/lib/python2.2/config -Wl,-E -Wl,+s -Wl,+b/lib-dynload 
-lm -lpython2.2 -lnsl -ldld -lpthread -lm

*** Warning: linker path does not have real file for library lpython2.2.
*** I have the capability to make that library automatically link in when
*** you link to this library.  But I can only do this if you have a
*** shared version of the library, which you do not appear to have
*** because I did check the linker path looking for a file starting
*** with libpython2.2 and none of the candidates passed a file format test
*** using a file magic. Last file checked: 
/opt/Python-2.2/lib/python2.2/config/libpython2.2.a

*** Warning: libtool could not satisfy all declared inter-library
*** dependencies of module mod_python.  Therefore, libtool will create
*** a static module, that should work as long as the dlopening
*** application is linked with the -dlopen flag.
Usage: ln [-f] [-i] [-s] f1 f2
        ln [-f] [-i] [-s] f1 ... fn d1
*** Error exit code 2

Stop.
*** Error exit code 1

Stop.



Why libtool is complaining for a "libpython" shared object while no 
"libpython.sl" should be produced in UNIX envs?
Does anyone know where the error is?

Thanks
Christian



-- 
______________________________________

Christian Ferrari
c/o PRIMEUR ITALIA
Via E. Mattei, 1/106 A
30020 Marcon (VE) - ITALY

Tel.:    +39 041 5950998
Fax:     +39 041 5951024
Mobile:  +39 348 8960572
E-mail:  Christian.Ferrari@primeur.com
Web:     http://www.primeur.com/


From grisha at modpython.org  Fri Feb 14 09:45:43 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
In-Reply-To: <3E4CB58F.50408@primeur.com>
Message-ID: <20030214093919.S20286-100000@eden.ispol.com>

On Fri, 14 Feb 2003, Christian Ferrari wrote:

> # /opt/apache2/bin/httpd -v
> Server version: Apache/2.0.44
> Server built:   Feb 13 2003 16:53:25
> *** Install steps:
> ./configure --prefix=/opt/apache2

Here you also need --enable-so

> *** Warning: linker path does not have real file for library lpython2.2.
> *** I have the capability to make that library automatically link in when
> *** you link to this library.  But I can only do this if you have a
> *** shared version of the library, which you do not appear to have
> *** because I did check the linker path looking for a file starting
> *** with libpython2.2 and none of the candidates passed a file format test
> *** using a file magic. Last file checked:
> /opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>

I do not have any experience with HP-UX, but on other systems a similar
message indicates an old version of libtool, which wouldn't allow linking
shared and static libs together. So I'd first see if upgrading libtool
would help. After you upgrade, rebuild apache by first running
./buildconf like this:

./buildconf
./configure --prefix=/opt/apache2 --enable-so
make clean
make

Then for mod_python, do make clean; make

Grisha


From Christian.Ferrari at primeur.com  Mon Feb 17 11:01:39 2003
From: Christian.Ferrari at primeur.com (Christian Ferrari)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] HP-UX llibpython2.2.a link issue
References: <20030214093919.S20286-100000@eden.ispol.com>
Message-ID: <3E50B302.6030809@primeur.com>


Gregory (Grisha) Trubetskoy wrote:

> On Fri, 14 Feb 2003, Christian Ferrari wrote:
> 
> 
>># /opt/apache2/bin/httpd -v
>>Server version: Apache/2.0.44
>>Server built:   Feb 13 2003 16:53:25
>>*** Install steps:
>>./configure --prefix=/opt/apache2
>>
> 
> Here you also need --enable-so
> 
> 
>>*** Warning: linker path does not have real file for library lpython2.2.
>>*** I have the capability to make that library automatically link in when
>>*** you link to this library.  But I can only do this if you have a
>>*** shared version of the library, which you do not appear to have
>>*** because I did check the linker path looking for a file starting
>>*** with libpython2.2 and none of the candidates passed a file format test
>>*** using a file magic. Last file checked:
>>/opt/Python-2.2/lib/python2.2/config/libpython2.2.a
>>
>>
> 
> I do not have any experience with HP-UX, but on other systems a similar
> message indicates an old version of libtool, which wouldn't allow linking
> shared and static libs together. So I'd first see if upgrading libtool
> would help. After you upgrade, rebuild apache by first running
> ./buildconf like this:
> 
> ./buildconf
> ./configure --prefix=/opt/apache2 --enable-so
> make clean
> make
> 
> Then for mod_python, do make clean; make
> 
> Grisha
> 
> 

Libtool supplied with Apache 2.0.44 is 1.4.3; last libtool available on 
GNU site is 1.4.3.
Anywhere, I installed a fresh-stand-alone libtool-1.4.3 package, but 
Apache didn't use it, so I tryed to force Apache build:

./configure --prefix=/opt/apache2 --enable-so 
--with-libtool=/usr/local/bin/libtool

Apache did NOT like "my standard" libtool; this is the Apache build error:

[... some working stuff ...]

Making all in dso/unix
         gcc -g -O2   -DHAVE_CONFIG_H -DHPUX11 -D_REENTRANT 
-D_XOPEN_SOURCE_EXTENDED   -I../../include -I../../include/arch 
-I../../include/arch/unix  -c dso.ccr libapr-0.la strings/apr_cpystrn.o 
strings/apr_fnmatch.o strings/apr_snprintf.o strings/apr_strings.o 
strings/apr_strnatcmp.o strings/apr_strtok.o passwd/apr_getpass.o 
tables/apr_hash.o tables/apr_tables.o file_io/unix/copy.o 
file_io/unix/dir.o file_io/unix/fileacc.o file_io/unix/filedup.o 
file_io/unix/filepath.o file_io/unix/filestat.o file_io/unix/flock.o 
file_io/unix/fullrw.o file_io/unix/mktemp.o file_io/unix/open.o 
file_io/unix/pipe.o file_io/unix/readwrite.o file_io/unix/seek.o 
network_io/unix/inet_ntop.o network_io/unix/inet_pton.o 
network_io/unix/sendrecv.o network_io/unix/sockaddr.o 
network_io/unix/sockets.o network_io/unix/sockopt.o 
threadproc/unix/proc.o threadproc/unix/procsup.o 
threadproc/unix/signals.o threadproc/unix/thread.o 
threadproc/unix/threadpriv.o misc/unix/charset.o misc/unix/errorcodes.o 
misc/unix/getopt.o misc/unix/otherchild.o misc/unix/rand.o 
misc/unix/start.o misc/unix/version.o locks/unix/global_mutex.o 
locks/unix/proc_mutex.o locks/unix/thread_cond.o 
locks/unix/thread_mutex.o locks/unix/thread_rwlock.o time/unix/time.o 
time/unix/timestr.o mmap/unix/common.o mmap/unix/mmap.o shmem/unix/shm.o 
user/unix/groupinfo.o user/unix/userinfo.o memory/unix/apr_pools.o 
atomic/unix/apr_atomic.o poll/unix/poll.o poll/unix/pollacc.o 
support/unix/waitio.o dso/unix/*.o; libapr-0.la
sh[4]: cr:  not found.
*** Error exit code 127

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.
*** Error exit code 1

Stop.



I'm going to post the link issue on "libtool" mailing list.
Thanks
Christian


From mike.looijmans at asml.com  Wed Feb 19 10:52:19 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Newbie needs help: Compile errors, segfault, andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1
Message-ID: <01c2d7fc$974e0b80$926a1e6e@wsasd464>

After using a 2x4 and a kind word, I managed to compile it with gcc version
2.95
Guess what, now it works (sort of... see next post...)

--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Gregory (Grisha) Trubetskoy <grisha@modpython.org>
To: Mike Looijmans <mike.looijmans@asml.nl>
Date: Friday, February 14, 2003 3:38 PM
Subject: Re: [mod_python] Newbie needs help: Compile errors, segfault,
andwarnings on Solaris 2.6 w/ apache 2.0.44 and mod_python 3.0.1


>
>Most likely you have an outdated libtool.
>
>Grisha
>
>On Fri, 14 Feb 2003, Mike Looijmans wrote:


[snip]

>> [Fri Feb 14 09:06:46 2003] [notice] child pid 10171 exit signal
Segmentation
>> fault (11)




From mike.looijmans at asml.com  Wed Feb 19 11:03:04 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] cgihandler repeats the whole response for each print command
Message-ID: <01c2d7fe$17c13c00$926a1e6e@wsasd464>

To allow a quick migration of thousands of CGI code lines, I intended to use
the cgihandler.py handler to run existing CGI script.

However, if I setup things that way, and use a small CGI script like this one:


print 'status: 200 OK'
print 'content-type: text/html'
print
print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
print '<BODY><P>Hello Mod_Python world!</P></BODY>'
print '</HTML>'

This would yield a simple 'hello world' page, but the output that is sent to
the browser is as follows:

HTTP/1.1 200 OK
Date: Wed, 19 Feb 2003 09:58:12 GMT
Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
Content-Type: text/html; charset=ISO-8859-1
Connection: close

<HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
<BODY><P>Hello Mod_Python world!</P></BODY>
</HTML>



It seems that (except for the headers) the "sys.stdout" from the cgihandler
sends the whole output history again on each "print" command, like this class
would:

class FaultyIO:
    def __init__(self, req)
        self.msg = ''
        self.req = req
    def write(self, s):
        self.msg += s
        req.send(self.msg)






From mike.looijmans at asml.com  Wed Feb 19 11:56:07 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Solution (bug): cgihandler repeats the whole response for each print command
Message-ID: <01c2d805$80f87d80$926a1e6e@wsasd464>

Found the cause, the problem is in "apache.py" (installed as
/usr/local/lib/python2.2/site-packages/mod_python/apache.py on my system).

Line # 693 says (in function write() of CGIStdout:

        if not self.headers_sent:

But in the code, it NEVER sets 'self.headers_sent' to "1", thus it will never
execute the "else" part of this if.

To fix it, I inserted the following at line # 724 (the last two lines were
already there):

                ## BUG FIX: Send out duplicates....
                self.headers_sent = 1
                # write the body if any at this point
                self.req.write(ss[1])


--
Mike Looijmans
ASML: http://www5nl.asml.nl/~mlooijma
Private: http://www.milosoftware.com

-----Original Message-----
From: Mike Looijmans <mike.looijmans@asml.com>
To: mod_python list <mod_python@modpython.org>
Date: Wednesday, February 19, 2003 11:08 AM
Subject: [mod_python] cgihandler repeats the whole response for each print
command


>To allow a quick migration of thousands of CGI code lines, I intended to use
>the cgihandler.py handler to run existing CGI script.
>
>However, if I setup things that way, and use a small CGI script like this
one:
>
>
>print 'status: 200 OK'
>print 'content-type: text/html'
>print
>print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
>print '<BODY><P>Hello Mod_Python world!</P></BODY>'
>print '</HTML>'
>
>This would yield a simple 'hello world' page, but the output that is sent to
>the browser is as follows:
>
>HTTP/1.1 200 OK
>Date: Wed, 19 Feb 2003 09:58:12 GMT
>Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
>Content-Type: text/html; charset=ISO-8859-1
>Connection: close
>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
>world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
><BODY><P>Hello Mod_Python world!</P></BODY>
></HTML>
>
>
>
>It seems that (except for the headers) the "sys.stdout" from the cgihandler
>sends the whole output history again on each "print" command, like this class
>would:
>
>class FaultyIO:
>    def __init__(self, req)
>        self.msg = ''
>        self.req = req
>    def write(self, s):
>        self.msg += s
>        req.send(self.msg)
>
>
>
>
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://www.modpython.org/mailman/listinfo/mod_python
>
>



From grisha at modpython.org  Wed Feb 19 11:40:21 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] cgihandler repeats the whole response for each
 print command
In-Reply-To: <01c2d7fe$17c13c00$926a1e6e@wsasd464>
Message-ID: <20030219114000.P87550-100000@eden.ispol.com>

It's known bug, it has been fixed for the next release.

Grisha

On Wed, 19 Feb 2003, Mike Looijmans wrote:

> To allow a quick migration of thousands of CGI code lines, I intended to use
> the cgihandler.py handler to run existing CGI script.
>
> However, if I setup things that way, and use a small CGI script like this one:
>
>
> print 'status: 200 OK'
> print 'content-type: text/html'
> print
> print '<HTML><HEAD><TITLE>Hello world</TITLE></HEAD>'
> print '<BODY><P>Hello Mod_Python world!</P></BODY>'
> print '</HTML>'
>
> This would yield a simple 'hello world' page, but the output that is sent to
> the browser is as follows:
>
> HTTP/1.1 200 OK
> Date: Wed, 19 Feb 2003 09:58:12 GMT
> Server: Apache/2.0.44 (Unix) mod_python/3.0.1 Python/2.2.2
> Content-Type: text/html; charset=ISO-8859-1
> Connection: close
>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY><HTML><HEAD><TITLE>Hello
> world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> <HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML><HTML><HEAD><TITLE>Hello world</TITLE></HEAD>
> <BODY><P>Hello Mod_Python world!</P></BODY>
> </HTML>
>
>
>
> It seems that (except for the headers) the "sys.stdout" from the cgihandler
> sends the whole output history again on each "print" command, like this class
> would:
>
> class FaultyIO:
>     def __init__(self, req)
>         self.msg = ''
>         self.req = req
>     def write(self, s):
>         self.msg += s
>         req.send(self.msg)
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From Jaco.Smuts at za.didata.com  Tue Feb 25 23:42:05 2003
From: Jaco.Smuts at za.didata.com (Jaco Smuts (ZA))
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] pso examples using mod_python not cgi
Message-ID: <862D79D0DADB244E8563C6F9277C02FF022C10A7@zabrysvcl01ex01.af.didata.local>

Hello there

Started plyaing with mod_python yesterday (great) and discovered pso today.
It seems to cater for my needs (seperation of code and presentation).

I'm looking for a howto or tutorial on building a site using mod_python with
pso and not cgi, or any other suggestions of frameworks to use instead of
pso.

thank you
jaco








ps I've got no control over my companies disclaimer



***************************************************************************************

This message contains information intended solely for the addressee,
which is confidential or private in nature and subject to legal privilege.
If you are not the intended recipient, you may not peruse, use,
disseminate, distribute or copy this message or any file attached to this
message. Any such unauthorised use is prohibited and may be unlawful. If
you have received this message in error, please notify the sender
immediately by e-mail, facsimile or telephone and thereafter delete the
original message from your machine. 
 
Furthermore, the information contained in this message, and any
attachments thereto, is for information purposes only and may contain the
personal views and opinions of the author, which are not necessarily the
views and opinions of Dimension Data (South Africa) (Proprietary) Limited
or its subsidiaries and associated companies ("Dimension Data"). Dimension
Data therefore does not accept liability for any claims, loss or damages
of whatsoever nature, arising as a result of the reliance on such
information by anyone. 
 
Whilst all reasonable steps are taken to ensure the accuracy and
integrity of information transmitted electronically and to preserve the
confidentiality thereof, Dimension Data accepts no liability or
responsibility whatsoever if information or data is, for whatsoever
reason, incorrect, corrupted or does not reach its intended destination. 

*************************************************************************************
 	


From mort at bork.org  Tue Feb 25 20:50:36 2003
From: mort at bork.org (Martin Hicks)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226015036.GA9764@bork.org>

Hello,

I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.

The problem that I'm having is that for my script, which I'm running using the 
publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
suggest a reason why this might happen?

127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
/~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
"-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"


TIA,
mh

-- 
Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
Beer: So much more than just a breakfast drink.

From frank at fejes.net  Tue Feb 25 21:23:39 2003
From: frank at fejes.net (Frank S. Fejes III)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <20030225212339.24710d04.frank@fejes.net>

Curious!  I've noticed this, too (frequently, like you), but only on my
NetBSD 1.5.2/x86 production server...my Debian Sparc Linux backup server and
Debian x86 Linux development machine have never produced such an error.  I
had thought it was simply a NetBSD/Apache issue and I was very nearly close
to changing operating systems as my last resort.

I am currently running Apache 1.3.27 / mod_python 2.7.8 on all servers and
I've already experimented with mod_python as both a static and dynamic
module.  I've also changed PythonDebug options, *Handler settings, and
anything else I could find.  This problem is so bad at times that I've
considered avoiding the Publisher handler altogether and simply using the
CGI handler (in case it's not a problem with all of mod_python) or even
straight CGI.

I've never found anything through google about this issue and I wonder if
others are seeing the same issues that we are.

--frank

On Tue, 25 Feb 2003 20:50:36 -0500
Martin Hicks <mort@bork.org> wrote:

> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using
> the publisher handler.  I seem to get a 404 every 8th or so attempt.  Can
> anyone suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 200 17 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003" 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1"
> 404 1039 "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1)
> Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 

From jack_diederich at email.com  Tue Feb 25 23:15:38 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <20030226041538.16673.qmail@email.com>

>----- Original Message -----
>From: "Frank S. Fejes III" <frank@fejes.net>
>Subject: Re: [mod_python] Trouble with scripts giving 404

Is the frequency of 404s pretty steady or very random and
just averaging out to 1/8?
Does the frequency of 404s change when you change the
number of apache processes?

You could also try setting the number of processes low
and running strace on each, saving the output.  Then
post the diff of the bad vs good hits to the list.

I can't say I know what is wrong, but hopefully we can
narrow it down with more info.
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

Meet Singles
http://corp.mail.com/lavalife


From frank at fejes.net  Wed Feb 26 11:25:32 2003
From: frank at fejes.net (Frank Fejes)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Trouble with scripts giving 404
Message-ID: <200302261725.h1QHPWe00744@texas.pop3now.com>

It's not as consistent now that I've provided a SetHandler for the entire
directory structure AND an AddHandler for .py...for example it has not
happened today yet.  When it does start, though, it seems to give the 404
error 40-50% of the time.  Restarting apache does NOT provide relief for
any amount of time...I've stopped/started apache and had the error show up
after 2-3 hits.

I can lower the number of processes and will get ktruss (this is a NetBSD
system) output if I see the problem occur again.  Thanks.

--frank

> >----- Original Message -----
> >From: "Frank S. Fejes III" <frank@fejes.net>
> >Subject: Re: [mod_python] Trouble with scripts giving 404
>
> Is the frequency of 404s pretty steady or very random and
> just averaging out to 1/8?
> Does the frequency of 404s change when you change the
> number of apache processes?
>
> You could also try setting the number of processes low
> and running strace on each, saving the output.  Then
> post the diff of the bad vs good hits to the list.
>
> I can't say I know what is wrong, but hopefully we can
> narrow it down with more info.
> --
> _______________________________________________
> Sign-up for your own FREE Personalized E-mail at Mail.com
> http://www.mail.com/?sr=signup
>
> Meet Singles
> http://corp.mail.com/lavalife
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>



From thm at duke.edu  Wed Feb 26 17:03:15 2003
From: thm at duke.edu (Hunter Matthews)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] Trouble with scripts giving 404
In-Reply-To: <20030226015036.GA9764@bork.org>
References: <20030226015036.GA9764@bork.org>
Message-ID: <1046296996.1977.8.camel@jade.biology.duke.edu>

Nothing that I know of in particular, but we've found that 3.0.0 is
buggy in general, and switching to 3.0.1 fixed most issues.

If anyone wants it, I've built and signed (with my key, not Red Hats of
course) the 3.0.1 package from the last Red Hat beta for RHL 8.0. Its at
ftp://ftp.biology.duke.edu/pub/admin/current



On Tue, 2003-02-25 at 20:50, Martin Hicks wrote:
> 
> Hello,
> 
> I'm running modpython 3.0 on Redhat 8.0.  All updates have been applied.
> 
> The problem that I'm having is that for my script, which I'm running using the 
> publisher handler.  I seem to get a 404 every 8th or so attempt.  Can anyone 
> suggest a reason why this might happen?
> 
> 127.0.0.1 - - [25/Feb/2003:20:49:20 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:22 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:24 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:27 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:33 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:34 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:35 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:36 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:37 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:38 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 200 17 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 127.0.0.1 - - [25/Feb/2003:20:49:40 -0500] "GET 
> /~mort/xpresence/pycgi/user.py/list_active?confid=1&user=mort HTTP/1.1" 404 1039 
> "-" "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003"
> 
> 
> TIA,
> mh
> 
> -- 
> Martin Hicks  ||  mort@bork.org  || PGP/GnuPG: 0x4C7F2BEE
> plato up 11 days,  5:26, 18 users,  load average: 0.05, 0.06, 0.01
> Beer: So much more than just a breakfast drink.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
> 
-- 
Hunter Matthews                          Unix / Network Administrator
Office: BioScience 145/244               Duke Univ. Biology Department
Key: F0F88438 / FFB5 34C0 B350 99A4 BB02  9779 A5DB 8B09 F0F8 8438
Never take candy from strangers. Especially on the internet.


From cjackson at spsu.edu  Wed Feb 26 20:17:21 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] mod_python on win32
Message-ID: <005c01c2ddfd$fa495710$5f05010a@moxie>

I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get 
mod_python to work in Windows under Apache.  I'm running Windows XP on 
Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so 
file from mod_python.org and copied and pasted the file in my modules/ 
directory under Apache.  Then I added the following to my httpd.conf
file:
 
AddModule python_module mod_python.so
 
If the above line is left uncommented Apache fails to restart.
 
Am I doing something wrong?
 
Chris Jackson
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/f8c62939/attachment-0003.htm
From cjackson at spsu.edu  Wed Feb 26 20:38:15 2003
From: cjackson at spsu.edu (Chris Jackson)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] mod_python on win32 solved
Message-ID: <006d01c2de00$e5e8f110$5f05010a@moxie>

Nevermind everyone, after some hunting through the archives' I've
figured out that I needed msvcr70.dll.
 
Thanks anyway
 
Chris Jackson
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030226/3684fe1f/attachment-0003.htm
From jermnsar at hotmail.com  Wed Feb 26 19:37:10 2003
From: jermnsar at hotmail.com (Jeremy Lowery)
Date: Fri Jan  9 22:03:44 2004
Subject: [mod_python] mod_python on win32
Message-ID: <F170BMyiqCl4JDIPHfW000470fa@hotmail.com>

>From: "Chris Jackson" <cjackson@spsu.edu>
>I'm new to mod_python, but a long-time Pythonatic.  I'm trying to get
>mod_python to work in Windows under Apache.  I'm running Windows XP on
>Apache 2.0.44 with Python 2.2.2.  I just downloaded the mod_python.so
>file from mod_python.org and copied and pasted the file in my modules/
>directory under Apache.  Then I added the following to my httpd.conf
>file:
>
>AddModule python_module mod_python.so
>
>If the above line is left uncommented Apache fails to restart.
>
>Am I doing something wrong?
>
>Chris Jackson

Try
LoadModule python_module modules/mod_python.so

Jeremy S Lowery



_________________________________________________________________
The new MSN 8: advanced junk mail protection and 2 months FREE*  
http://join.msn.com/?page=features/junkmail


From mike.looijmans at asml.com  Thu Feb 27 08:26:38 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:45 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple sys.stdout objects?
Message-ID: <01c2de31$90914b00$926a1e6e@wsasd464>

mod_python has a nice "cgihandler", that allows me to run out old CGI code in
mod_python 'mode'. However, I have some problems with that, that some of you
may know a solution to.

The cgihandler will lock until the request is complete. This is OK, but it
restrains the number of simultaneous Python requests to just 1. In practice,
this means that the system gets a lot slower with mod_python, because there
are a few requests that send a few megabytes of data to the client, and this
can take a few minutes. The performance hit is unacceptable.

I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.

A workaround is to compile apache with the "pre-fork" system. This however
yields another problem. The child processes all fire up their own interpreter,
and the memory load is about 10MB for each child (in 'worker' mode, only one
interpreter for 20 childs!). This quickly eats up all resources on the
machine. It also virtually eliminates the possibility to "recycle" the
database connection and similar objects. The net effect is that this setup is
also slower than the plain CGI implementation which just starts (runs and
kills) an interpreter for each CGI request.

I tried removing the thread lock in the cgihandler. All CGI scripts I have
don't care about the directory they are in (they get all they need from the
MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
themselves. This left only one single problem: The "print" command.

Python's print command is being used to send the data to the client. The
cgihandler replaces sys.stdout and redirects it to the Request object, which
is ok. But there is only one "sys" module shared by all threads, so all the
print commands from all threads end up in the same request. In practice, if a
"long" request is running, and a shorter request interferes, the short one
will kill sys.stdout and the long one will abort with an exception because
sys.stdout had suddenly died.

One workaround would be to create a cgihandler 'clone' that passes an "output"
object to each script (which defaults to sys.stdout for "plain" CGI mode), and
let the scripts all write() to that object. Drawback is that I will have to
replace all "print" statements in about 10k+ lines of code. Also, I want the
scripts to remain CGI compatible for a few more weeks because a few shadow
systems cannot be upgraded to mod_python yet.

Is there a way that I can let the threads each "print" to their own output,
for example by having a seperate "sys" module in each thread? (could I delete
the sys module and re-import it or something similar?)

--
Mike Looijmans


From grisha at modpython.org  Thu Feb 27 15:34:07 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:45 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
In-Reply-To: <01c2de31$90914b00$926a1e6e@wsasd464>
Message-ID: <20030227152549.S3048-100000@eden.ispol.com>

Your best bet is the prefork MPM. Remember that the 10M per child is
actually a lot less because pages for executables are shared between
processes on (most) UNIXes, certainly on Solaris they are. I find it hard
to believe that it is slower than regular CGI - it should be at least
several times faster, though not nearly as efficient as using the
publisher or a native handler.

The ultimate solution is not use CGI of course :-)

Grisha

On Thu, 27 Feb 2003, Mike Looijmans wrote:

> mod_python has a nice "cgihandler", that allows me to run out old CGI code in
> mod_python 'mode'. However, I have some problems with that, that some of you
> may know a solution to.
>
> The cgihandler will lock until the request is complete. This is OK, but it
> restrains the number of simultaneous Python requests to just 1. In practice,
> this means that the system gets a lot slower with mod_python, because there
> are a few requests that send a few megabytes of data to the client, and this
> can take a few minutes. The performance hit is unacceptable.
>
> I'm running Apache 2.0.44 in "worker" thread mode on a Solaris 2.6 system.
>
> A workaround is to compile apache with the "pre-fork" system. This however
> yields another problem. The child processes all fire up their own interpreter,
> and the memory load is about 10MB for each child (in 'worker' mode, only one
> interpreter for 20 childs!). This quickly eats up all resources on the
> machine. It also virtually eliminates the possibility to "recycle" the
> database connection and similar objects. The net effect is that this setup is
> also slower than the plain CGI implementation which just starts (runs and
> kills) an interpreter for each CGI request.
>
> I tried removing the thread lock in the cgihandler. All CGI scripts I have
> don't care about the directory they are in (they get all they need from the
> MySQL DB), and all scripts they import are fully re-entrant (or MT safe)
> themselves. This left only one single problem: The "print" command.
>
> Python's print command is being used to send the data to the client. The
> cgihandler replaces sys.stdout and redirects it to the Request object, which
> is ok. But there is only one "sys" module shared by all threads, so all the
> print commands from all threads end up in the same request. In practice, if a
> "long" request is running, and a shorter request interferes, the short one
> will kill sys.stdout and the long one will abort with an exception because
> sys.stdout had suddenly died.
>
> One workaround would be to create a cgihandler 'clone' that passes an "output"
> object to each script (which defaults to sys.stdout for "plain" CGI mode), and
> let the scripts all write() to that object. Drawback is that I will have to
> replace all "print" statements in about 10k+ lines of code. Also, I want the
> scripts to remain CGI compatible for a few more weeks because a few shadow
> systems cannot be upgraded to mod_python yet.
>
> Is there a way that I can let the threads each "print" to their own output,
> for example by having a seperate "sys" module in each thread? (could I delete
> the sys module and re-import it or something similar?)
>
> --
> Mike Looijmans
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From drh9296 at ritvax.rit.edu  Thu Feb 27 17:59:54 2003
From: drh9296 at ritvax.rit.edu (David Higgs)
Date: Fri Jan  9 22:03:45 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiple
 sys.stdout objects?
References: <20030227152549.S3048-100000@eden.ispol.com>
Message-ID: <3E5E986A.5010206@rit.edu>

Gregory (Grisha) Trubetskoy wrote:
> Your best bet is the prefork MPM. Remember that the 10M per child is
> actually a lot less because pages for executables are shared between
> processes on (most) UNIXes, certainly on Solaris they are. I find it hard
> to believe that it is slower than regular CGI - it should be at least
> several times faster, though not nearly as efficient as using the
> publisher or a native handler.
> 
> The ultimate solution is not use CGI of course :-)
> 
> Grisha

I haven't investigated things in 3.x.x yet, so I don't know if this 
applies.  If this were for mod_python 2.x.x, I'd suggest writing a small 
custom handler.  Just do a bit of error checking, setup a couple local 
variables, and an execfile().  I have an example below.

Your CGIs would need to be modified to use req.write() which is somewhat 
annoying.  For maximum compatibility, you could write a custom write() 
function to detect between outputting via req.write() or via stdout.  On 
a side note, do any mod_python request objects support variable argument 
outputs?

# httpd.conf example
<Location /cgi/>
     SetHandler python-program
     PythonHandler your_handler
</Location>

# your_handler.py example
# called by any request in this directory
def handler( req ) :
     from mod_python import apache

     cur_dir = "/directory/of/this/handler/"
     filename = req.filename[ len( cur_dir ): ]

     # setup any local variables

     try :
         # all my scripts are extension-less, so
         # I can easily test for ".."-style hacking
         if filename.find( "." ) != -1 :
             raise IOError
         execfile( "/directory/of/your/scripts/" + filename )
     except IOError :
         # handle error condition

     return apache.OK


From mike.looijmans at asml.com  Fri Feb 28 08:38:54 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:45 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
Message-ID: <01c2defc$71abbb00$926a1e6e@wsasd464>

>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.

>The ultimate solution is not use CGI of course :-)


That is the intention, ultimately...

I think I have to dive into the code and start working. Probably, the best way
for me to set things up is to modify all the scripts to write to a "file like"
object and get their data from a FieldStorage instance. So they'd all have a
'main' like:

handlercode(output, form, database):
    ....
    output.write('<P>Hello world</P>')
    ....

And then call it from either a CGI wrapper:

    module = __import__(scriptname)
    module.handlercode(sys.stdout, cgi.FieldStorage(), db_connect())


Or cal it from a mod python handler:

    module = __import__(scriptname)
    module.handlercode(req, utils.FieldStorage(), recycle_db_connection())


And weed out all the CGI environment calls (e.g. SERVER_NAME) and replace them
with some object to handle that transparently too.



From scott_list at mischko.com  Fri Feb 28 10:17:29 2003
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Jan  9 22:03:45 2004
Subject: [mod_python] CGI handler and multithreading: Can i have multiplesys.stdout objects?
In-Reply-To: <01c2defc$71abbb00$926a1e6e@wsasd464>
References: <01c2defc$71abbb00$926a1e6e@wsasd464>
Message-ID: <200302281017.29699.scott_list@mischko.com>

In the meantime, you might set up a cron job at 7:45am that accesses the web 
pages before the rush starts so the stuff is "preloaded" and not swapped.

On Thursday 27 February 2003 11:38 pm, Mike Looijmans wrote:
>Your best bet is the prefork MPM. Remember that the 10M per child is
>actually a lot less because pages for executables are shared between
>processes on (most) UNIXes, certainly on Solaris they are. I find it hard
>to believe that it is slower than regular CGI - it should be at least
>several times faster, though not nearly as efficient as using the
>publisher or a native handler.


The trouble with performance is in our clients' access patterns. Basically, at
8:00 the whole world comes falling dowon on the machine and everybody wants to
use it, accessing it many times each second. The rest of the day it's rather
quiet. What appears to happen is that the apache child processes get their
data segments swapped out during the quiet day to make room for other stuff
that is running on the same machine. Then in the morning, that must all be
swapped back and the first requests are incredibly slow. I noticed that the
'startup' effect almost vanished when i migrated from apache 1.3 to 2.0
(worker mpm). I think that's because the worker system can keep 20 child
threads ready for action whereas the preforked processes tend to fall into
coma. Also, the CGI scripts are run in a separate process by the server, which
seems to reduce the overhead compared to the prefork way of starting the CGI.
Apache 2.0 with prefork behaved similar to that.



