From nlv11281 at natlab.research.philips.com  Tue Nov  1 02:33:38 2005
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Nov  1 02:33:46 2005
Subject: [mod_python] Re: mod_python 3.2.3b available for testing (util.py
	and file uploads)
In-Reply-To: <435F8A59.5090101@dd.revealed.net>
References: <435C0A23.3010303@apache.org> <435E4B8D.1060106@dd.revealed.net>
	<435E52B6.3060902@dd.revealed.net> <435E5BE8.4000007@sympatico.ca>
	<435E5FD7.7020508@joreybump.com> <435EA249.1000504@sympatico.ca>
	<435EF2F6.7090706@dd.revealed.net>
	<435F1474.6020607@natlab.research.philips.com>
	<435F83D0.2080302@dd.revealed.net>
	<435F89C2.209@natlab.research.philips.com>
	<435F8A59.5090101@dd.revealed.net>
Message-ID: <43671A52.2050805@natlab.research.philips.com>

Nick wrote:
> Mike Looijmans wrote:
> 
>> Nick wrote:
>>
>>> Mike Looijmans wrote:
>>>
>>>> Nick wrote:
>>>>
>>>>> So that's my problem, or at least that's where the conversation has 
>>>>> led me.  Is there an easy way to figure out what you've got other 
>>>>> than process of elimination?
>>>>
>>>>
>>>>
>>>>
>>>> Why not use:
>>>>
>>>> if hasattr(file, 'filename'):
>>>>     ...
>>>>
>>>> The FieldStorage only adds the filename attribute to the file object 
>>>> if the 'filename' header was present in the corresponding POST 
>>>> chunk. This is also the trigger used internally to determine whether 
>>>> it's a file.
>>>
>>>
>>>
>>>
>>> That will always evaluate to True.  filename is set to the file name 
>>> provided in the content-disposition IF the browser set one, which is 
>>> not required by the protocol.  Otherwise it gets set to None.  A 
>>> filename of None does not necessarily mean that it's not a file, just 
>>> that none was given in the content-disposition.
>>
>>
>>
>> You're totally right - I forgot how enthusiastically I hacked the 
>> util.py file, and removed the filename attr.
>>
>> A check on "filename is not None" should be OK. If the browser did not 
>> send a filename, the tempfile routine will also not be triggered, so 
>> that the test we currently use ("typeof(Filetype)" and derivatives) 
>> also fails to recognize it as a file.
>>
>> What strikes me as weird is that the module parses the request, draws 
>> the right conclusions, but somewhere along the way forgets about it 
>> and then has to go back to figure things out.
>>
>> I think it would be more logical (from an OO perspective), to make the 
>> StringField resemble Field in ALL aspects (add the 'name', 'file' and 
>> other attributes to it), and add it to the internal item list of 
>> FieldStorage. The __getitem__ method(s) can then simply return the 
>> item, and don't need to create the StringField object.
>>
>> I'll hack some more, see how it turns out.
> 
> 
> I agree with you on that, although it is possible to get a file upload 
> without a filename -- that's not against spec.  So if the code does 
> indeed ignore the content if no filename is set, that would be wrong.

I've been ill for a few days, so it took a while to get back.

I've attached a util.py for mod_python  that allows me to upload files 
many times larger than the system memory, but apache only consumes a few 
MB RAM when posting a few GB as file uploads.

As far as I can see, this does not break compatibility with existing 
scripts.

The code is simpler, and probably faster too (especially if a 
StringField is referred multiple times in a script).

Calling req.readline() without a limit seems to cause Apache (2.0.55 on 
Windows) to read the whole POST request into system RAM. This even 
happens during header parsing, so i supplied a 10kB limit there as wel 
(a Content-Type header of 10kB in size sounds more like an attack than a 
sane request to me).

I'm looking for some volunteers to see if this util.py breaks their scripts.

-- 
Mike Looijmans
Philips Natlab / Topic Automation
-------------- next part --------------
 #
 # Copyright 2004 Apache Software Foundation 
 # 
 # Licensed under the Apache License, Version 2.0 (the "License"); you
 # may not use this file except in compliance with the License.  You
 # may obtain a copy of the License at
 #
 #      http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 # implied.  See the License for the specific language governing
 # permissions and limitations under the License.
 #
 # Originally developed by Gregory Trubetskoy.
 #
 # $Id: util.py 102649 2004-02-16 19:47:28Z grisha $

import _apache
from mod_python import apache
import cStringIO
import tempfile

from types import *
from exceptions import *

parse_qs = _apache.parse_qs
parse_qsl = _apache.parse_qsl

""" The classes below are a (almost) a drop-in replacement for the
    standard cgi.py FieldStorage class. They should have pretty much the
    same functionality.

    These classes differ in that unlike cgi.FieldStorage, they are not
    recursive. The class FieldStorage contains a list of instances of
    Field class. Field class is incapable of storing anything in it.

    These objects should be considerably faster than the ones in cgi.py
    because they do not expect CGI environment, and are
    optimized specifically for Apache and mod_python.
"""

class Field:

    filename = None
    headers = {}

    def __init__(self, name):
        self.name = name

    def __repr__(self):
        """Return printable representation."""
        return "Field(%s, %s)" % (`self.name`, `self.value`)

    def __getattr__(self, name):
        if name != 'value':
            raise AttributeError, name
        if self.file:
            self.file.seek(0)
            self.value = self.file.read()
            self.file.seek(0)
        else:
            self.value = None
        return self.value

    def __del__(self):
        self.file.close()

class StringField(str):
    """ This class is basically a string with
    added attributes for compatibility with std lib cgi.py. Basically, this
    works the opposite of Field, as it stores its data in a string, but creates
    a file on demand. Field creates a value on demand and stores data in a file.
    """
    filename = None
    headers = {}
    ctype = "text/plain"
    type_options = {}
    disposition = None
    disp_options = None
    
    # I wanted __init__(name, value) but that does not work (apparently, you
    # cannot subclass str with a constructor that takes >1 argument)
    def __init__(self, value):
        '''Create StringField instance. You'll have to set name yourself.'''
        str.__init__(self, value)
        self.value = value

    def __getattr__(self, name):
        if name != 'file':
            raise AttributeError, name
        self.file = cStringIO.StringIO(self.value)
        return self.file

class FieldStorage:
    def __init__(self, req, keep_blank_values=0, strict_parsing=0):

        self.list = []

        # always process GET-style parameters
        if req.args:
            pairs = parse_qsl(req.args, keep_blank_values)
            for pair in pairs:
                self.add_field(pair[0], pair[1])

        if req.method == "POST":

            try:
                clen = int(req.headers_in["content-length"])
            except (KeyError, ValueError):
                # absent content-length is not acceptable
                raise apache.SERVER_RETURN, apache.HTTP_LENGTH_REQUIRED

            if not req.headers_in.has_key("content-type"):
                ctype = "application/x-www-form-urlencoded"
            else:
                ctype = req.headers_in["content-type"]

            if ctype == "application/x-www-form-urlencoded":
                
                pairs = parse_qsl(req.read(clen), keep_blank_values)
                for pair in pairs:
                    self.add_field(pair[0], pair[1])

            elif ctype[:10] == "multipart/":

                # figure out boundary
                try:
                    i = ctype.lower().rindex("boundary=")
                    boundary = ctype[i+9:]
                    if len(boundary) >= 2 and boundary[0] == boundary[-1] == '"':
                        boundary = boundary[1:-1]
                    boundary = "--" + boundary
                except ValueError:
                    raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST

                #read until boundary
                # ML: req.readline without any limit seems to let my
                # apache 2.0.55 comsume the whole request at once, and
                # may fail with a memory error
                line = req.readline(10240)
                while line and not line.startswith(boundary):
                    line = req.readline(10240)

                while 1:

                    ## parse headers
                    ctype, type_options = "text/plain", {}
                    disp, disp_options = None, {}
                    headers = apache.make_table()

                    line = req.readline(10240)
                    if len(line) == 10240:
                        raise "Too big", "bad header in multipart post?"
                    sline = line.strip()
                    if not line or sline == (boundary + "--"):
                        break
                    
                    while line and line not in ["\n", "\r\n"]:
                        h, v = line.split(":", 1)
                        headers.add(h, v)
                        h = h.lower()
                        if h == "content-disposition":
                            disp, disp_options = parse_header(v)
                        elif h == "content-type":
                            ctype, type_options = parse_header(v)
                        line = req.readline(10240)
                        if len(line) == 10240:
                            raise "Too big", "bad header in multipart post?"
                        sline = line.strip()

                    if disp_options.has_key("name"):
                        name = disp_options["name"]
                    else:
                        name = None

                    # create a file object
                    file = self.make_file(disp_options)

                    # read it in
                    self.read_to_boundary(req, boundary, file)
                    file.seek(0)

                    # make a Field
                    if disp_options.has_key("filename"):
                        field = Field(name)
                        field.filename = disp_options["filename"]
                    else:
                        field = StringField(file.read())
                        field.name = name
                    field.file = file
                    field.type = ctype
                    field.type_options = type_options
                    field.disposition = disp
                    field.disposition_options = disp_options
                    field.headers = headers

                    self.list.append(field)

            else:
                # we don't understand this content-type
                raise apache.SERVER_RETURN, apache.HTTP_NOT_IMPLEMENTED

    def add_field(self, key, value):
        """Insert a field as key/value pair"""
        item = StringField(value)
        item.name = key
        self.list.append(item)

    def make_file(self, disp_options):
        """Create a file obejct for the given disp_options. You can override
        this method to avoid temp file creation and stream directly. The
        returned file must at least support write(data) and seek(0)."""
        if disp_options.has_key("filename"):
            return tempfile.TemporaryFile("w+b")
        else:
            return cStringIO.StringIO()

    def skip_to_boundary(self, req, boundary):
        line = req.readline(10240)
        while line and not line.startswith(boundary):
            line = req.readline(10240)

    def read_to_boundary(self, req, boundary, file):
        delim = ""
        line = req.readline(10240)
        while line and not line.startswith(boundary):
            odelim = delim
            if line[-2:] == "\r\n":
                delim = "\r\n"
                line = line[:-2]
            elif line[-1:] == "\n":
                delim = "\n"
                line = line[:-1]
            else:
                delim = ""
            file.write(odelim + line)
            line = req.readline(10240)

    def __getitem__(self, key):
        """Dictionary style indexing."""
        if self.list is None:
            raise TypeError, "not indexable"
        found = []
        for item in self.list:
            if item.name == key:
                found.append(item)
        if not found:
            raise KeyError, key
        if len(found) == 1:
            return found[0]
        else:
            return found

    def get(self, key, default):
        try:
            return self.__getitem__(key)
        except KeyError:
            return default

    def keys(self):
        """Dictionary style keys() method."""
        if self.list is None:
            raise TypeError, "not indexable"
        keys = []
        for item in self.list:
            if item.name not in keys: keys.append(item.name)
        return keys

    def has_key(self, key):
        """Dictionary style has_key() method."""
        if self.list is None:
            raise TypeError, "not indexable"
        for item in self.list:
            if item.name == key: return 1
        return 0

    __contains__ = has_key

    def __len__(self):
        """Dictionary style len(x) support."""
        return len(self.keys())

    def getfirst(self, key, default=None):
        """ return the first value received """
        for item in self.list:
            if item.name == key:
                return item
        return default
                                                                    
    def getlist(self, key):
        """ return a list of received values """
        if self.list is None:
            raise TypeError, "not indexable"
        found = []
        for item in self.list:
            if item.name == key:
                found.append(item)
        return found

def parse_header(line):
    """Parse a Content-type like header.

    Return the main content-type and a dictionary of options.

    """
    
    plist = map(lambda a: a.strip(), line.split(';'))
    key = plist[0].lower()
    del plist[0]
    pdict = {}
    for p in plist:
        i = p.find('=')
        if i >= 0:
            name = p[:i].strip().lower()
            value = p[i+1:].strip()
            if len(value) >= 2 and value[0] == value[-1] == '"':
                value = value[1:-1]
            pdict[name] = value
    return key, pdict

def apply_fs_data(object, fs, **args):
    """
    Apply FieldStorage data to an object - the object must be
    callable. Examine the args, and match then with fs data,
    then call the object, return the result.
    """

    # add form data to args
    for field in fs.list:
        if field.filename:
            val = field
        else:
            val = field.value
        args.setdefault(field.name, []).append(val)

    # replace lists with single values
    for arg in args:
        if ((type(args[arg]) is ListType) and
            (len(args[arg]) == 1)):
            args[arg] = args[arg][0]

    # we need to weed out unexpected keyword arguments
    # and for that we need to get a list of them. There
    # are a few options for callable objects here:

    if type(object) is InstanceType:
        # instances are callable when they have __call__()
        object = object.__call__

    expected = []
    if hasattr(object, "func_code"):
        # function
        fc = object.func_code
        expected = fc.co_varnames[0:fc.co_argcount]
    elif hasattr(object, 'im_func'):
        # method
        fc = object.im_func.func_code
        expected = fc.co_varnames[1:fc.co_argcount]
    elif type(object) is ClassType:
        # class
        fc = object.__init__.im_func.func_code
        expected = fc.co_varnames[1:fc.co_argcount]

    # remove unexpected args unless co_flags & 0x08,
    # meaning function accepts **kw syntax
    if not (fc.co_flags & 0x08):
        for name in args.keys():
            if name not in expected:
                del args[name]

    return object(**args)

def redirect(req, location, permanent=0, text=None):
    """
    A convenience function to provide redirection
    """

    if req.sent_bodyct:
        raise IOError, "Cannot redirect after headers have already been sent."

    req.err_headers_out["Location"] = location
    if permanent:
        req.status = apache.HTTP_MOVED_PERMANENTLY
    else:
        req.status = apache.HTTP_MOVED_TEMPORARILY

    if text is None:
        req.write('<p>The document has moved' 
                  ' <a href="%s">here</a></p>\n'
                  % location)
    else:
        req.write(text)

    raise apache.SERVER_RETURN, apache.OK

From oduzlevski at intechjanus.com  Wed Nov  2 10:11:00 2005
From: oduzlevski at intechjanus.com (Ognen Duzlevski)
Date: Wed Nov  2 10:11:05 2005
Subject: [mod_python] Session management
Message-ID: <4368D704.8030100@intechjanus.com>

Hi all,

I read this paragraph from the BaseSession docs:

"id is an optional session id; if provided, such a session must already 
exist, otherwise it is ignored and a new session with a new sid is 
created. If sid is not provided, the object will attempt to look at 
cookies for session id. If a sid is found in cookies, but it is not 
previously known or the session has expired, then a new sid is created. 
Whether a session is ``new'' can be determined by calling the is_new() 
method."

Does this imply that I can do the following:

create a Session() object and it will somehow decide where to go (say 
dbm or memory)
on the next visit to the same page I should be able to do ms = 
Session.Session(req) and ms.is_new() will tell me that this session is 
not new because it was looked up (through the cookie pysid I am 
assuming) and found in the persistant storage (like for dbm or memory, 
either way)?

Thanks,
Ognen
From petersanchez at gmail.com  Wed Nov  2 11:02:16 2005
From: petersanchez at gmail.com (Peter Sanchez)
Date: Wed Nov  2 11:02:20 2005
Subject: [mod_python] Session management
In-Reply-To: <4368D704.8030100@intechjanus.com>
References: <4368D704.8030100@intechjanus.com>
Message-ID: <bb84149f0511020802v1770d1b4k275821efb425813f@mail.gmail.com>

Remember to .save() the session, then upon return, it won't be is_new()..

sess = Session.Session(req)
if sess.is_new():
  sess['foo'] = 'bar'
  sess.save()
else:
  print 'Hello %s' % sess['foo']

Hope this helps.

Peter

On 11/2/05, Ognen Duzlevski <oduzlevski@intechjanus.com> wrote:
> Hi all,
>
> I read this paragraph from the BaseSession docs:
>
> "id is an optional session id; if provided, such a session must already
> exist, otherwise it is ignored and a new session with a new sid is
> created. If sid is not provided, the object will attempt to look at
> cookies for session id. If a sid is found in cookies, but it is not
> previously known or the session has expired, then a new sid is created.
> Whether a session is ``new'' can be determined by calling the is_new()
> method."
>
> Does this imply that I can do the following:
>
> create a Session() object and it will somehow decide where to go (say
> dbm or memory)
> on the next visit to the same page I should be able to do ms =
> Session.Session(req) and ms.is_new() will tell me that this session is
> not new because it was looked up (through the cookie pysid I am
> assuming) and found in the persistant storage (like for dbm or memory,
> either way)?
>
> Thanks,
> Ognen
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From jg.lists at sympatico.ca  Wed Nov  2 11:06:02 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Nov  2 11:05:30 2005
Subject: [mod_python] Session management
In-Reply-To: <4368D704.8030100@intechjanus.com>
References: <4368D704.8030100@intechjanus.com>
Message-ID: <4368E3EA.1010004@sympatico.ca>

Ognen Duzlevski wrote:
> Hi all,
> 
> I read this paragraph from the BaseSession docs:
> 
> "id is an optional session id; if provided, such a session must already 
> exist, otherwise it is ignored and a new session with a new sid is 
> created. If sid is not provided, the object will attempt to look at 
> cookies for session id. If a sid is found in cookies, but it is not 
> previously known or the session has expired, then a new sid is created. 
> Whether a session is ``new'' can be determined by calling the is_new() 
> method."
> 
> Does this imply that I can do the following:
> 
> create a Session() object and it will somehow decide where to go (say 
> dbm or memory)
> on the next visit to the same page I should be able to do ms = 
> Session.Session(req) and ms.is_new() will tell me that this session is 
> not new because it was looked up (through the cookie pysid I am 
> assuming) and found in the persistant storage (like for dbm or memory, 
> either way)?

That's pretty much it. The important thing is that you *must* call 
ms.save() to save your session data to the persistent store. Otherwise 
each visit to the same page will generate a new sid.

The default store is platform dependant depending on which apache-mpm 
you are using. In 3.2 you can specify the default using the 
"PythonOption session session_class_name" directive where 
session_class_name is one of MemorySession, DbmSession or FileSession.

Jim

From oduzlevski at intechjanus.com  Wed Nov  2 11:09:27 2005
From: oduzlevski at intechjanus.com (Ognen Duzlevski)
Date: Wed Nov  2 11:09:31 2005
Subject: [mod_python] Session management
In-Reply-To: <4368E3EA.1010004@sympatico.ca>
References: <4368D704.8030100@intechjanus.com> <4368E3EA.1010004@sympatico.ca>
Message-ID: <4368E4B7.3050409@intechjanus.com>

Jim Gallacher wrote:

> Ognen Duzlevski wrote:
>
>> Hi all,
>>
>> I read this paragraph from the BaseSession docs:
>>
>> "id is an optional session id; if provided, such a session must 
>> already exist, otherwise it is ignored and a new session with a new 
>> sid is created. If sid is not provided, the object will attempt to 
>> look at cookies for session id. If a sid is found in cookies, but it 
>> is not previously known or the session has expired, then a new sid is 
>> created. Whether a session is ``new'' can be determined by calling 
>> the is_new() method."
>>
>> Does this imply that I can do the following:
>>
>> create a Session() object and it will somehow decide where to go (say 
>> dbm or memory)
>> on the next visit to the same page I should be able to do ms = 
>> Session.Session(req) and ms.is_new() will tell me that this session 
>> is not new because it was looked up (through the cookie pysid I am 
>> assuming) and found in the persistant storage (like for dbm or 
>> memory, either way)?
>
>
> That's pretty much it. The important thing is that you *must* call 
> ms.save() to save your session data to the persistent store. Otherwise 
> each visit to the same page will generate a new sid.
>
> The default store is platform dependant depending on which apache-mpm 
> you are using. In 3.2 you can specify the default using the 
> "PythonOption session session_class_name" directive where 
> session_class_name is one of MemorySession, DbmSession or FileSession.
>
> Jim
>
Thanks.

I wanted to make sure I understood this since I kept getting a new sid 
every time. This was because I did not do the .save() call. Is this in 
the documentation (and I just missed it)? Or should we make it obvious 
for chumps like me?

Ognen
From lists at julius-net.net  Wed Nov  2 12:16:06 2005
From: lists at julius-net.net (Matthias Julius)
Date: Wed Nov  2 12:16:17 2005
Subject: [mod_python] Session problem
Message-ID: <87acgnq8bt.fsf@julius-net.net>

Hi,

I just started to use mod_python and I would like to use
mod_mython.Session.

The minimal script

,----
| from mod_python import Session
| 
| def index(req):
|     s = Session.Session(req)
`----

results in

,----
| Mod_python error: "PythonHandler mod_python.publisher"
| 
| Traceback (most recent call last):
| 
|   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
|   299, in HandlerDispatch
|     result = object(req)
| 
|   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py",
|   line 136, in handler
|     result = util.apply_fs_data(object, req.form, req=req)
| 
|   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line
|   361, in apply_fs_data
|     return object(**args)
| 
|   File "/var/www/pythontest/index.py", line 8, in index
|     s = Session.Session(req)
| 
|   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
|   389, in Session
|     timeout=timeout, lock=lock)
| 
|   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
|   294, in __init__
|     timeout=timeout, lock=lock)
| 
|   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
|   132, in __init__
|     Cookie.add_cookie(self._req, self.make_cookie())
| 
|   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
|   160, in make_cookie
|     c.path = dirpath[len(docroot):]
| 
| TypeError: unsubscriptable object
`----

This is mod_python 3.1.3 with python 2.3.5 on apache 2.0.54 - all
Debian packages.

What am I missing?

Matthias

From grahamd at dscpl.com.au  Wed Nov  2 14:54:22 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov  2 14:54:39 2005
Subject: [mod_python] Session problem
In-Reply-To: <87acgnq8bt.fsf@julius-net.net>
References: <87acgnq8bt.fsf@julius-net.net>
Message-ID: <5c023bf74cb13b7e792c27d603c13ade@dscpl.com.au>

Known issue, see:

   http://issues.apache.org/jira/browse/MODPYTHON-50

Either ensure that your use of AddHandler for .py extension
is inside a Directory directive or explicitly set ApplicationPath
option.

You could also start using 3.2 beta, as is fixed there.

Graham

On 03/11/2005, at 4:16 AM, Matthias Julius wrote:

> Hi,
>
> I just started to use mod_python and I would like to use
> mod_mython.Session.
>
> The minimal script
>
> ,----
> | from mod_python import Session
> |
> | def index(req):
> |     s = Session.Session(req)
> `----
>
> results in
>
> ,----
> | Mod_python error: "PythonHandler mod_python.publisher"
> |
> | Traceback (most recent call last):
> |
> |   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> |   299, in HandlerDispatch
> |     result = object(req)
> |
> |   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py",
> |   line 136, in handler
> |     result = util.apply_fs_data(object, req.form, req=req)
> |
> |   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line
> |   361, in apply_fs_data
> |     return object(**args)
> |
> |   File "/var/www/pythontest/index.py", line 8, in index
> |     s = Session.Session(req)
> |
> |   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> |   389, in Session
> |     timeout=timeout, lock=lock)
> |
> |   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> |   294, in __init__
> |     timeout=timeout, lock=lock)
> |
> |   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> |   132, in __init__
> |     Cookie.add_cookie(self._req, self.make_cookie())
> |
> |   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> |   160, in make_cookie
> |     c.path = dirpath[len(docroot):]
> |
> | TypeError: unsubscriptable object
> `----
>
> This is mod_python 3.1.3 with python 2.3.5 on apache 2.0.54 - all
> Debian packages.
>
> What am I missing?
>
> Matthias
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From lists at julius-net.net  Wed Nov  2 15:53:12 2005
From: lists at julius-net.net (Matthias Julius)
Date: Wed Nov  2 15:53:30 2005
Subject: [mod_python] Session problem
In-Reply-To: <OF40EAF1E8.4BA053F3-ON872570AD.006C9A5A-862570AD.006C838B@us.ibm.com>
	(Ken Bradshaw's message of "Wed, 2 Nov 2005 13:48:08 -0600")
References: <OF40EAF1E8.4BA053F3-ON872570AD.006C9A5A-862570AD.006C838B@us.ibm.com>
Message-ID: <87r79ypy9z.fsf@julius-net.net>

Ken Bradshaw <bradshak@us.ibm.com> writes:

>       My email is a little slow so my apologies if this has already been
> resolved.  It appears the most minimal handler you can have in your
> environment is more like this:
>
> from mod_python import apache, Session
>
> def index(req):
>         req.content_type = 'text/html'
>         s = Session.Session(req)
>         req.write(' ')
>         return apache.OK

My actual script is longer than what I wrote.  But, everything else
seems to be not relevant.

>From Session.py out of make_cookie()
,----
| docroot = self._req.document_root()
| # the path where *Handler directive was specified
| dirpath = self._req.hlist.directory
This returns None.  And req.hlist.directory is not mentioned in the
documentation for the Request Object.

| c.path = dirpath[len(docroot):]
And this fails because None is not subscriptable.

| 
| # XXX Not sure why, but on Win32 hlist.directory
| # may contain a trailing \ - need to investigate,
| # this value is given to us directly by httpd
| if os.name == 'nt' and c.path[-1] == '\\':
|     c.path = c.path[:-1]
| 
| # Sometimes there is no path, e.g. when Location
| # is used. When Alias or UserDir are used, then
| # the path wouldn't match the URI. In those cases
| # just default to '/'
| if not c.path or not self._req.uri.startswith(c.path):
|     c.path = '/'
`----

Is this a bug in Session.py?

Matthias

From lists at julius-net.net  Wed Nov  2 16:00:03 2005
From: lists at julius-net.net (Matthias Julius)
Date: Wed Nov  2 16:00:17 2005
Subject: [mod_python] Session problem
In-Reply-To: <5c023bf74cb13b7e792c27d603c13ade@dscpl.com.au> (Graham
	Dumpleton's message of "Thu, 3 Nov 2005 06:54:22 +1100")
References: <87acgnq8bt.fsf@julius-net.net>
	<5c023bf74cb13b7e792c27d603c13ade@dscpl.com.au>
Message-ID: <87irvapxyk.fsf@julius-net.net>

Graham Dumpleton <grahamd@dscpl.com.au> writes:

> Known issue, see:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-50

OK.  Ignore the email I just wrote.

>
> Either ensure that your use of AddHandler for .py extension
> is inside a Directory directive or explicitly set ApplicationPath
> option.
>
> You could also start using 3.2 beta, as is fixed there.

Thanks

Matthias

From amarrero at mitre.org  Thu Nov  3 11:34:57 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Thu Nov  3 11:37:41 2005
Subject: [mod_python] Due to design of code util.FieldStorage causes
	MemoryError on V.Large files
Message-ID: <6E1AC21E-94AB-4DC5-BC1A-B46E156AF65D@mitre.org>

Barry,

I'm also having a MemoryError on line:

   File "/Library/Frameworks/Python.framework/Versions/2.4/lib/ 
python2.4/site-packages/mod_python/util.py", line 175, in __init__
     self.read_to_boundary(req, boundary, file)

   File "/Library/Frameworks/Python.framework/Versions/2.4/lib/ 
python2.4/site-packages/mod_python/util.py", line 206, in  
read_to_boundary
     sline = line.strip()

MemoryError


The file that is uploaded is 550MB.

BTW, the Content-Disposition header has a filename attribute.

What is the status with the changes that you mention on doing?

My web application must be able to support attachments of arbitrary  
size.

Any comments?

/amn
From amarrero at mitre.org  Thu Nov  3 11:57:21 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Thu Nov  3 12:00:03 2005
Subject: [mod_python] Due to design of code util.FieldStorage causes
	MemoryError on V.Large files
In-Reply-To: <6E1AC21E-94AB-4DC5-BC1A-B46E156AF65D@mitre.org>
References: <6E1AC21E-94AB-4DC5-BC1A-B46E156AF65D@mitre.org>
Message-ID: <2C807C77-9D03-43DB-9E6E-7BA908DC4AE7@mitre.org>

Just to through some information out there...

This is the function that reads the "uploaded" file and writes to disk.

     def read_to_boundary(self, req, boundary, file):
         delim = ""
         line = req.readline()
         sline = line.strip()
         last_bound = boundary + "--"
         while line and sline != boundary and sline != last_bound:
             odelim = delim
             if line[-2:] == "\r\n":
                 delim = "\r\n"
                 line = line[:-2]
             elif line[-1:] == "\n":
                 delim = "\n"
                 line = line[:-1]
             file.write(odelim + line)
             line = req.readline()
             sline = line.strip()

What about if there are no "\n" delimiters in the file and the file  
is 512MB?

I know that someone already suggested instead of readline() to do  
sized read(MAX_SIZE) ... Is this already implemented in mod_python 3.2?


/amn

On Nov 3, 2005, at 11:34 AM, Alexis Marrero wrote:

> Barry,
>
> I'm also having a MemoryError on line:
>
>   File "/Library/Frameworks/Python.framework/Versions/2.4/lib/ 
> python2.4/site-packages/mod_python/util.py", line 175, in __init__
>     self.read_to_boundary(req, boundary, file)
>
>   File "/Library/Frameworks/Python.framework/Versions/2.4/lib/ 
> python2.4/site-packages/mod_python/util.py", line 206, in  
> read_to_boundary
>     sline = line.strip()
>
> MemoryError
>
>
> The file that is uploaded is 550MB.
>
> BTW, the Content-Disposition header has a filename attribute.
>
> What is the status with the changes that you mention on doing?
>
> My web application must be able to support attachments of arbitrary  
> size.
>
> Any comments?
>
> /amn
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From fumanchu at amor.org  Thu Nov  3 13:14:07 2005
From: fumanchu at amor.org (Robert Brewer)
Date: Thu Nov  3 13:14:59 2005
Subject: [mod_python] Due to design of code util.FieldStorage
	causesMemoryError on V.Large files
Message-ID: <A77618B80CDD2543B705C82B7665D9F90259F8CF@ex9.hostedexchange.local>

Alexis Marrero wrote:
> This is the function that reads the "uploaded" file and 
> writes to disk.
> 
>      def read_to_boundary(self, req, boundary, file):
>          delim = ""
>          line = req.readline()
>          sline = line.strip()
>          last_bound = boundary + "--"
>          while line and sline != boundary and sline != last_bound:
>              odelim = delim
>              if line[-2:] == "\r\n":
>                  delim = "\r\n"
>                  line = line[:-2]
>              elif line[-1:] == "\n":
>                  delim = "\n"
>                  line = line[:-1]
>              file.write(odelim + line)
>              line = req.readline()
>              sline = line.strip()
> 
> What about if there are no "\n" delimiters in the file and the file  
> is 512MB?
> 
> I know that someone already suggested instead of readline() to do  
> sized read(MAX_SIZE) ... Is this already implemented in 
> mod_python 3.2?

I'm not sure if it's been implemented in 3.2 or not, but just to prove
you're not imagining things, this is a known bug in Python's cgi module,
as well:
http://sourceforge.net/tracker/?func=detail&aid=1112549&group_id=5470&at
id=105470. See CherryPy's _cpcgifs module for a sample fix:
http://www.cherrypy.org/file/trunk/cherrypy/_cpcgifs.py. The same
changes (provide a sizehint to the readline call) could probably be done
to mod_python.util. 


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org

From jpg at jgassociates.ca  Thu Nov  3 17:22:01 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Nov  3 17:19:42 2005
Subject: [mod_python] Due to design of code util.FieldStorage
	causes	MemoryError on V.Large files
In-Reply-To: <2C807C77-9D03-43DB-9E6E-7BA908DC4AE7@mitre.org>
References: <6E1AC21E-94AB-4DC5-BC1A-B46E156AF65D@mitre.org>
	<2C807C77-9D03-43DB-9E6E-7BA908DC4AE7@mitre.org>
Message-ID: <436A8D89.6020501@jgassociates.ca>

Fixed in 3.2. See http://issues.apache.org/jira/browse/MODPYTHON-40

Jim

Alexis Marrero wrote:
> Just to through some information out there...
> 
> This is the function that reads the "uploaded" file and writes to disk.
> 
>     def read_to_boundary(self, req, boundary, file):
>         delim = ""
>         line = req.readline()
>         sline = line.strip()
>         last_bound = boundary + "--"
>         while line and sline != boundary and sline != last_bound:
>             odelim = delim
>             if line[-2:] == "\r\n":
>                 delim = "\r\n"
>                 line = line[:-2]
>             elif line[-1:] == "\n":
>                 delim = "\n"
>                 line = line[:-1]
>             file.write(odelim + line)
>             line = req.readline()
>             sline = line.strip()
> 
> What about if there are no "\n" delimiters in the file and the file  is 
> 512MB?
> 
> I know that someone already suggested instead of readline() to do  sized 
> read(MAX_SIZE) ... Is this already implemented in mod_python 3.2?
> 
> 
> /amn
> 
> On Nov 3, 2005, at 11:34 AM, Alexis Marrero wrote:
> 
>> Barry,
>>
>> I'm also having a MemoryError on line:
>>
>>   File "/Library/Frameworks/Python.framework/Versions/2.4/lib/ 
>> python2.4/site-packages/mod_python/util.py", line 175, in __init__
>>     self.read_to_boundary(req, boundary, file)
>>
>>   File "/Library/Frameworks/Python.framework/Versions/2.4/lib/ 
>> python2.4/site-packages/mod_python/util.py", line 206, in  
>> read_to_boundary
>>     sline = line.strip()
>>
>> MemoryError
>>
>>
>> The file that is uploaded is 550MB.
>>
>> BTW, the Content-Disposition header has a filename attribute.
>>
>> What is the status with the changes that you mention on doing?
>>
>> My web application must be able to support attachments of arbitrary  
>> size.
>>
>> Any comments?
>>
>> /amn
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From python.pan at gmail.com  Fri Nov  4 12:12:19 2005
From: python.pan at gmail.com (py pan)
Date: Fri Nov  4 12:12:23 2005
Subject: [mod_python] socket.error connection refused
Message-ID: <5af1b8bc0511040912p2ea01a50v691215c3a885a12b@mail.gmail.com>

Hi there,

I am setting up a database that is built upon a mod_python. When I accessed
the database with a browser, it reported an error:

===========================================[ start ]
Mod_python error: "PythonAuthenHandler access"

Traceback (most recent call last):

File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in
HandlerDispatch
result = object(req)

File "/home/emen2/public_html/emen2/access.py", line 20, in authenhandler
ctxid=db.login(req.user,req.get_basic_auth_pw())

File "/home/emen2/DBProxy.py", line 28, in
return lambda *x: self(name,*x)

File "/home/emen2/DBProxy.py", line 33, in __call__
return load(self.iso[1])

EOFError
=============================================[ end ]

I believed it's due to an imcomplete installation of mod_python so I went
ahead
to run the test.py came with mod_python. It reported many errors, mostly due
to
a socket.error like:

=============================================[ start ]
ERROR: test_req_document_root (__main__.PerRequestTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
File "test.py", line 306, in test_req_document_root
rsp = self.vhost_get("test_req_document_root")
File "test.py", line 282, in vhost_get
conn.endheaders()
File "/usr/lib/python2.3/httplib.py", line 712, in endheaders
self._send_output()
File "/usr/lib/python2.3/httplib.py", line 597, in _send_output
self.send(msg)
File "/usr/lib/python2.3/httplib.py", line 564, in send
self.connect()
File "/usr/lib/python2.3/httplib.py", line 548, in connect
raise socket.error, msg
error: (111, 'Connection refused')
============================================= [ end ]

How can I solve this problem?
Thx in advance;.

pan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051104/315d302f/attachment.html
From python.pan at gmail.com  Fri Nov  4 15:07:19 2005
From: python.pan at gmail.com (py pan)
Date: Fri Nov  4 15:07:24 2005
Subject: [mod_python] Re: socket.error connection refused
In-Reply-To: <5af1b8bc0511040912p2ea01a50v691215c3a885a12b@mail.gmail.com>
References: <5af1b8bc0511040912p2ea01a50v691215c3a885a12b@mail.gmail.com>
Message-ID: <5af1b8bc0511041207n5afb8e49tde164f623a61cb96@mail.gmail.com>

I ran an "apachectl extendedstatus" and saw the following :

=========================================================[ begin ]
Server Version: Apache-AdvancedExtranetServer/2.0.50
(Mandrakelinux/7mdk) mod_perl/1.99_16 Perl/v5.8.5
mod_python/3.1.4 Python/2.3.4 mod_auth_external/2.2.7
auth_mysql/1.11 mod_layout/4.0.1a mod_ssl/2.0.50 OpenSSL/0.9.7d
DAV/2 PHP/4.3.8
=========================================================[ end ]

In which a mod_python is listed. With this, is it fair to say that
mod_python was
installed correctly?

pan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051104/09288288/attachment.html
From grahamd at dscpl.com.au  Fri Nov  4 15:33:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Nov  4 15:33:33 2005
Subject: [mod_python] socket.error connection refused
In-Reply-To: <5af1b8bc0511040912p2ea01a50v691215c3a885a12b@mail.gmail.com>
References: <5af1b8bc0511040912p2ea01a50v691215c3a885a12b@mail.gmail.com>
Message-ID: <5d108a68bb2199e28fa57b52d90b5fb7@dscpl.com.au>

If you follow through exactly the simple mptest example at:

   http://www.dscpl.com.au/articles/modpython-001.html

does it work? If not, how far do you get and what problems
are shown by following that procedure?

It will help if you follow that example as it will provide a
known baseline of code and take out of the equation your own
code of which we know nothing about.

Graham

On 05/11/2005, at 4:12 AM, py pan wrote:

> Hi there,
>
>  I am setting up a database that is built upon a mod_python. When I 
> accessed
>  the database with a browser, it reported an error:
>
>  ===========================================[ start ]
>  Mod_python error: "PythonAuthenHandler access"
>
>  Traceback (most recent call last):
>
>  ? File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
> 299, in HandlerDispatch
>  ??? result = object(req)
>
>  ? File "/home/emen2/public_html/emen2/access.py", line 20, in 
> authenhandler
>  ??? ctxid=db.login(req.user,req.get_basic_auth_pw())
>
>  ? File "/home/emen2/DBProxy.py", line 28, in
>  ??? return lambda *x: self(name,*x)
>
>  ? File "/home/emen2/DBProxy.py", line 33, in __call__
>  ??? return load(self.iso[1])
>
>  EOFError
>  =============================================[ end ]
>
>  I believed it's due to an imcomplete installation of mod_python so I 
> went ahead
>  to run the test.py came with mod_python. It reported many errors, 
> mostly due to
>  a socket.error like:
>
>  =============================================[ start ]
>  ERROR: test_req_document_root (__main__.PerRequestTestCase)
>  ----------------------------------------------------------------------
>  Traceback (most recent call last):
>  ? File "test.py", line 306, in test_req_document_root
>  ??? rsp = self.vhost_get("test_req_document_root")
>  ? File "test.py", line 282, in vhost_get
>  ??? conn.endheaders()
>  ? File "/usr/lib/python2.3/httplib.py", line 712, in endheaders
>  ??? self._send_output()
>  ? File "/usr/lib/python2.3/httplib.py", line 597, in _send_output
>  ??? self.send(msg)
>  ? File "/usr/lib/python2.3/httplib.py", line 564, in send
>  ??? self.connect()
>  ? File "/usr/lib/python2.3/httplib.py", line 548, in connect
>  ??? raise socket.error, msg
>  error: (111, 'Connection refused')
>  ============================================= [ end ]
>
>  How can I solve this problem?
>  Thx in advance;.
>
>  pan
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From ilzogoiby at gmail.com  Sat Nov  5 09:50:03 2005
From: ilzogoiby at gmail.com (Pedro Ferreira)
Date: Sat Nov  5 09:49:52 2005
Subject: [mod_python] Problems with PSP
Message-ID: <436CC69B.2030906@gmail.com>

Hello all.
I started using PSP some days ago, and decided to build some classes to 
simplify the creation of webforms. Unfortunately I'm having some 
problems with a "random" error. Sometimes the same page works ok, but 
sometimes it fails.
Since it works ok through the python interpreter (using the commented at 
the end of forms.py), i thought it might be a mod_python issue.
Any help would be appreciated.
Here is the code:

#------------
#index.psp
#............
<% page_title = "xpto" %>
<%@ include file="header.psp"%>
<div id="text">
<%
from forms import *

frm = Form('test','test.py')
fld = TextField('name','Full Name','Bill')
frm.addField(fld)
%>

<%=frm.getHTML()%>

</div>
<%@ include file="footer.psp"%>

#------------
#forms.py
#............

class Field:
    def __init__(self,name,label,defaultValue):
        self.name = name
        self.label = label
        self.defaultValue = defaultValue

class TextField(Field):        
    
    def __init__(self,name,label,defaultValue,size=0):
        Field.__init__(self,name,label,defaultValue)
        self.size = size

    def getHTML(self):
        ret = self.label+': <input name="'+self.name+'" value="'+self.defaultValue+'"';
        if (self.size != 0):
            ret += ' size="%d"' % (self.size);
        ret += ' />\n'
        return ret

class Form:
    def __init__(self,name,action):
        self.action = action
        self.name = name
        self.fields = []
    
    def addField(self, field):
        self.fields.append(field)
        
    def getHTML(self):
        ret = '<form name="'+self.name+'" method="POST" action="'+self.action+'">\n'
        for field in self.fields:
            ret += field.getHTML()
        ret += '</form>\n'
        return ret
        
#frm = Form('test','test.py')
#fld = TextField('name','Full Name','Bill',10)
#frm.addField(fld)

#print frm.getHTML()

.........................
SOMETIMES WORKS, SOMETIMES RESULTS IN THE FOLLOWING ERROR:

Mod_python error: "PythonHandler mod_python.psp"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 297, in handler
    p.run()

  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 208, in run
    exec code in global_scope

  File "/home/mahound/public_html/santuario/index.psp", line 26, in ?

  File "/home/mahound/public_html/santuario/forms.py", line 32, in getHTML
    ret += field.getHTML()

TypeError: cannot concatenate 'str' and 'NoneType' objects


....................

Thanks in advance,

Pedro
From amarrero at mitre.org  Sat Nov  5 11:14:45 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Sat Nov  5 11:14:29 2005
Subject: [mod_python] mod_python.util.StorageField.read_to_boundary has
	problems in 3.1 and 3.2
Message-ID: <7753113F-D046-4C3F-8D47-E059389B91AF@mitre.org>

All,

I don't think this is the right mailing list to send this but here it  
goes. (Let me know if there is a developers list).

The current 3.1 mod_python implementation of  
mod_python.util.StorageField.read_to_boudary reads as follows:

    203      def read_to_boundary(self, req, boundary, file):
    204          delim = ""
    205          line = req.readline()
    206          sline = line.strip()
    207          last_bound = boundary + "--"
    208          while line and sline != boundary and sline !=  
last_bound:
    209              odelim = delim
    210              if line[-2:] == "\r\n":
    211                  delim = "\r\n"
    212                  line = line[:-2]
    213              elif line[-1:] == "\n":
    214                  delim = "\n"
    215                  line = line[:-1]
    216              file.write(odelim + line)
    217              line = req.readline()
    218              sline = line.strip()

As we have discussed previously:
http://www.modpython.org/pipermail/mod_python/2005-March/017754.html
http://www.modpython.org/pipermail/mod_python/2005-March/017756.html
http://www.modpython.org/pipermail/mod_python/2005-November/019460.html

This triggered couple of changes in mod_python 3.2 Beta which reads  
as follows:
     33  # Fixes memory error when upload large files such as 700+MB  
ISOs.
     34  readBlockSize = 65368
     35
...
    225     def read_to_boundary(self, req, boundary, file):
...
    234         delim = ''
    235         lastCharCarried = False
    236         last_bound = boundary + '--'
    237         roughBoundaryLength = len(last_bound) + 128
    238         line = req.readline(readBlockSize)
    239         lineLength = len(line)
    240         if lineLength < roughBoundaryLength:
    241             sline = line.strip()
    242         else:
    243             sline = ''
    244         while lineLength > 0 and sline != boundary and sline ! 
= last_bound:
    245             if not lastCharCarried:
    246                 file.write(delim)
    247                 delim = ''
    248             else:
    249                 lastCharCarried = False
    250             cutLength = 0
    251             if lineLength == readBlockSize:
    252                 if line[-1:] == '\r':
    253                     delim = '\r'
    254                     cutLength = -1
    255                     lastCharCarried = True
    256             if line[-2:] == '\r\n':
    257                 delim += '\r\n'
    258                 cutLength = -2
    259             elif line[-1:] == '\n':
    260                 delim += '\n'
    261                 cutLength = -1
    262             if cutLength != 0:
    263                 file.write(line[:cutLength])
    264             else:
    265                 file.write(line)
    266             line = req.readline(readBlockSize)
    267             lineLength = len(line)
    268             if lineLength < roughBoundaryLength:
    269                 sline = line.strip()
    270             else:
    271                 sline = ''

This function has a mysterious bug in it... For some files which I  
could disclose (one of them been the PDF file for Apple Pages User  
Manual in Italian) the uploaded file in the server ends up with the  
same length but different sha512 (the only digest that I'm using).   
The problem is a '\r' in the middle of a chunk of data that is much  
larger than readBlockSize.

Anyhow, I wrote a new function, which I believe is much simpler, and  
test it with thousands and thousands of different files and so far it  
seems to work fine.  It reads as follows:

def read_to_boundary(self, req, boundary, file):
     ''' read from the request object line by line with a maximum size,
         until the new line starts with boundary
     '''
     previous_delimiter = ''
     while 1:
         line = req.readline(1<<16)
         if line.startswith(boundary):
             break

         if line.endswith('\r\n'):
             file.write(previous_delimiter + line[:-2])
             previous_delimiter = '\r\n'

         elif line.endswith('\r') or line.endswith('\n'):
             file.write(previous_delimiter + line[:-1])
             previous_delimiter = line[-1:]

         else:
             file.write(previous_delimiter + line)
             previous_delimiter = ''

Mod_python developers, let me know any comments on it and if you test  
it and fails please also let me know.
/amn

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051105/4f6b17b3/attachment-0001.html
From jpg at jgassociates.ca  Sat Nov  5 11:41:35 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Nov  5 11:41:18 2005
Subject: Developer FAQ (was Re: [mod_python]
	mod_python.util.StorageField.read_to_boundary
	has	problems in 3.1 and 3.2)
In-Reply-To: <7753113F-D046-4C3F-8D47-E059389B91AF@mitre.org>
References: <7753113F-D046-4C3F-8D47-E059389B91AF@mitre.org>
Message-ID: <436CE0BF.4000800@jgassociates.ca>

Alexis Marrero wrote:
> All, 
> 
> I don't think this is the right mailing list to send this but here it 
> goes. (Let me know if there is a developers list).

Subscribe to the python-dev@httpd.apache.org list by mailing 
python-dev-subscribe@httpd.apache.org.

python-dev mailing list archives:
   http://dir.gmane.org/gmane.comp.apache.mod-python.devel

Issue tracking:
   http://issues.apache.org/jira/browse/MODPYTHON

Subversion Repository:
    http://svn.apache.org/repos/asf/httpd/mod_python/

Regards,
Jim
From amarrero at mitre.org  Sun Nov  6 16:54:45 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Sun Nov  6 16:54:26 2005
Subject: [mod_python] Re: mod_python.util.StorageField.read_to_boundary has
	problems in 3.1 and 3.2
In-Reply-To: <c298f2d70511061320p60109613u@mail.gmail.com>
References: <7753113F-D046-4C3F-8D47-E059389B91AF@mitre.org>
	<86DD71EE-8B74-40D5-A6A7-96814D2BE657@mitre.org>
	<436E3628.8050807@jgassociates.ca>
	<DC131C73-FD11-4FAE-9997-53800CE6C3EE@mitre.org>
	<c298f2d70511061311g280f616ds@mail.gmail.com>
	<c298f2d70511061320p60109613u@mail.gmail.com>
Message-ID: <45E0ED33-B574-4E24-9E7B-EC48F067A66D@mitre.org>

Nicolas,

Not that I'm the one to give permission whether to integrate things  
or not, but just to let you know I don't even have svn installed so I  
won't do it. At least not for a while...

BTW, if there are some cherrypy developers in this mailing list, the  
CherryPy function that handles file uploads DOES also has the same  
issue.

I'm not subscribe to CherryPy dev group thus the cross posting.

 From http://svn.cherrypy.org/trunk/cherrypy/_cpcgifs.py

     24      def read_lines_to_outerboundary(self):
     25          """Internal: read lines until outerboundary."""
     26          next = "--" + self.outerboundary
     27          last = next + "--"
     28          delim = ""
     29          last_line_lfend = True
     30          while 1:
     31              line = self.fp.readline(1<<16)
     32              if not line:
     33                  self.done = -1
     34                  break
     35              if line[:2] == "--" and last_line_lfend:
     36                  strippedline = line.strip()
     37                  if strippedline == next:
     38                      break
     39                  if strippedline == last:
     40                      self.done = 1
     41                      break
     42              odelim = delim
     43              if line[-2:] == "\r\n":
     44                  delim = "\r\n"
     45                  line = line[:-2]
     46                  last_line_lfend = True
     47              elif line[-1] == "\n":
     48                  delim = "\n"
     49                  line = line[:-1]
     50                  last_line_lfend = True
     51              else:
     52                  delim = ""
     53                  last_line_lfend = False
     54              self.__write(odelim + line)

/amn

On Nov 6, 2005, at 4:20 PM, Nicolas Lehuen wrote:

> OK, it looks like Alexis' fix solves the problem with ugh.pdf  
> without breaking the other unit tests. So I think we can safely  
> integrate his patch. Shall I do it ?
>
> Regards,
> Nicolas
>
> 2005/11/6, Nicolas Lehuen <nicolas.lehuen@gmail.com>:
> Hi guys,
>
> In the pure "if it ain't tested, it ain't fixed" fashion, I've  
> added a unit test for file upload to the test suite. It uploads a  
> randomly generated 1 MB file to the server, and check that the MD5  
> digest returned by the server is correct. I could not reproduce  
> Alexis' bug report this way, however. But I then I added a test  
> with the UNIX-HATERS handbook file ugh.pdf, and bang, here comes  
> the bug.
>
> I've checked in both unit tests into subversion, so that you can  
> play with them. I'm now going to test Alexis' fix.
>
> Regards,
> Nicolas
>
> 2005/11/6, Alexis Marrero <amarrero@mitre.org>:
> I don't have a function that creates the files but the I can point
> you to a file that has the problem, ironically is "Unix Haters
> Handbook" :) Well, at least is not the Python HH....
>
> http://research.microsoft.com/~daniel/uhh-download.html
>
> It's MD5 is 9e8c42be55aac825e7a34d448044d0fe. I don't know what it
> ends up been after upload with read_to_boundary().
>
> When you use the function to copy the file you will see that the
> digest will be e45979254297b0ece9c182a789d7966e.
>
> I have other 5 files out of 78546 files that I'm testing it against
> that have the same issues, coincidentally there are all PDF files.
> Here is the script that I was testing it with.
>
> def read_to_boundary(self, req, boundary, file):
>      ''' read from the request object line by line with a maximum  
> size,
>          until the new line starts with boundary
>      '''
>      previous_delimiter = ''
>      while 1:
>          line = req.readline(1<<16)
>          if line.startswith(boundary):
>              break
>
>          if line.endswith('\r\n'):
>              file.write(previous_delimiter + line[:-2])
>              previous_delimiter = '\r\n'
>
>          elif line.endswith('\r') or line.endswith('\n'):
>              file.write(previous_delimiter + line[:-1])
>              previous_delimiter = line[-1:]
>
>          else:
>              file.write(previous_delimiter + line)
>              previous_delimiter = ''
>
> #f = file('Perl Bookshelf [4th Ed]/mre/final/ch06.pdf.new', 'a+')
> #f = file('Pages User Guide.app/Contents/Resources/Italian.lproj/
> Pages Manuale Utente.pdf', 'a+')
> f = file('ugh.pdf.new', 'a+')
> f.write('\r\n--myboundary--\r\n')
> f.seek(0)
> o = file('test.bin', 'wb')
> read_to_boundary(None, f, '--myboundary', o)
> o.close()
>
> /amn
>
>
> On Nov 6, 2005, at 11:58 AM, Jim Gallacher wrote:
>
> > Alexis,
> >
> > I wanted to add that I'm testing your code.
> >
> > Alexis Marrero wrote:
> >
> >> Let me know any comments on it and if you test it and fails please
> >> also let me know. I don't have subversion account neither I don't
> >> know how to use it thus this email.
> >>
> >
> > You don't need an account to use subversion anonymously. Just
> > install subversion and grab a mod_python working copy.
> >
> > $ svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk  
> trunk
> >
> > This will checkout a working copy into a new directory called
> > "trunk" on  your machine. All of the following commands assume you
> > are working in trunk/.
> >
> > Make your changes in your working copy, and then create a diff with:
> >
> > $ svn diff lib/python/mod_python/util.py > your-patch.diff
> >
> > The other commands which you'll find immediately useful are:
> >
> > svn update    - update your working copy from the repository
> > svn status    - shows status of changes in your working copy
> > svn -u status    - shows status of your copy against the repository
> >
> > I've found "Version Control with Subverion" is an excellent
> > resource and is available online.
> > http://svnbook.red-bean.com/en/1.1/index.html
> >
> > Jim
> >
>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051106/0623c096/attachment.html
From anthony at ataribaby.org  Mon Nov  7 03:14:50 2005
From: anthony at ataribaby.org (Anthony L.)
Date: Mon Nov  7 03:14:44 2005
Subject: [mod_python] [SPAM] Is mod_python 3.1 good in commercial
	blogging/CMS programming?
In-Reply-To: <mailman.4172.1131074481.14006.mod_python@modpython.org>
References: <mailman.4172.1131074481.14006.mod_python@modpython.org>
Message-ID: <8306587B-AD89-4817-B549-D9CE01F03513@ataribaby.org>

I am writing a web application that is comparable to a content  
management system used in blogging. I really want to use Python after  
having done some evaluation coding using Python 2.3.5 with mod_python  
3.1.4 running on Apache 2.0 with the Publisher handler.

However, I am still very hesitant to settle on Python. All my  
research brings up the same collection of scant articles and old  
mailing list messages that reference each other. I am not interested  
in using frameworks, partly because I am confused by them, but mostly  
because I don't want to add another layer of software complexity on  
top of my code since I already am expecting a hard time finding low- 
cost dedicated hosting with Apache 2 and mod_python 3 support.

I have made a few assumptions regarding Python and mod_python's  
value. Hopefully the experts here can help correct any of my  
assumptions and give me some more comfort in committing to Python.

1. I want to use CGI through Publisher handler, instead of CGI  
handler or PSP. Despite the speed increase mod_python gives me, there  
is a problem of persistence that can be a problem when dealing with a  
site that will hosts potentially hundreds of simultaneous users.

2. I have found nothing to quantify the stability and reliability of  
mod_python 3, and in the absence of a list of major commercial sites  
that use mod_python, I am left feeling as is there might be technical  
(read as stability/security) reasons to favor mod_perl over mod_python.

3. I am not very attracted to PSP because I want to separate the  
logic from the presentation as completely as possible, and PHP and  
other template languages including PSP seem difficult to do that in.  
Learning template systems like PyMeld is an unattractive option for  
me since I don't understand their benefit. Why can't I just use  
req.write() to output my markup, relying completely on external CSS  
after the fact? My thought is that HTML templates provide a minimum  
set of static code that doesn't require extra processing, thus  
keeping performance up. However, if I minimize my use of req.write()  
will it make a difference?

4 A final question, is mod_python 2.7 suitable for use in a  
commercial production system? All I'm doing is text processing,  
string manipulation, database calls, and some very minor mathematics.  
If the Apache 1.3 series mod works fine, can I relieve myself of some  
stress and go with that combo?

I'd appreciate some practical advise on this. I am funding this  
myself on a small budget with no hard deadline, so it is critical to  
me that I choose a language that will minimize my costs. Are my  
assumptions correct, or am I falling prey to FUD?

Anthony

*Note, I am posting this message to comp.lang.python

From bortzmeyer at nic.fr  Mon Nov  7 08:49:08 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Mon Nov  7 08:49:41 2005
Subject: [mod_python] [Vampire] ".vampire" not loaded but I do not see why
Message-ID: <20051107134908.GA22662@nic.fr>

I have a Vampire 1.7 + mod_python 3.1.3 installation where the
".vampire" file is apparently not loaded (for instance, the "handler
=" option seems ignored). The problem is that I do not find why!

* The Apache Virtual Host has a "PythonOption VampireDefaultHandlers
On"

* .vampire exists and is world-readable

On another machine, with the same OS (Debian "sarge"), everything is
fine.

So, what could I do to investigate? Is there a way to be absolutely
certain that ".vampire" is found and loaded?
From list at joreybump.com  Mon Nov  7 09:03:00 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Nov  7 09:03:27 2005
Subject: [SPAM] [mod_python] [SPAM] Is mod_python 3.1 good in commercial
	blogging/CMS programming?
In-Reply-To: <8306587B-AD89-4817-B549-D9CE01F03513@ataribaby.org>
References: <mailman.4172.1131074481.14006.mod_python@modpython.org>
	<8306587B-AD89-4817-B549-D9CE01F03513@ataribaby.org>
Message-ID: <436F5E94.8030908@joreybump.com>

Anthony L. wrote:

> code since I already am expecting a hard time finding low- cost 
> dedicated hosting with Apache 2 and mod_python 3 support.

You'll really need to know how to configure and administer your own 
server to get the most out of mod_python. The most you could expect from 
a hosting provider is a good colocation or virtual server environment. I 
doubt if I'd be happy with any preconfigured mod_python setup.

> 1. I want to use CGI through Publisher handler, instead of CGI  handler 
> or PSP. Despite the speed increase mod_python gives me, there  is a 
> problem of persistence that can be a problem when dealing with a  site 
> that will hosts potentially hundreds of simultaneous users.

Not sure what you mean. mod_python isn't CGI. Since it embeds the 
interpreter, it's *more* persistent. Could you be more specific?

> 2. I have found nothing to quantify the stability and reliability of  
> mod_python 3, and in the absence of a list of major commercial sites  
> that use mod_python, I am left feeling as is there might be technical  
> (read as stability/security) reasons to favor mod_perl over mod_python.

mod_perl shares many similarities with mod_python, and really big sites 
that use mod_perl encounter the same issues that are often discussed on 
this list. The difference is that mod_perl beginners typically use the 
mode where a script is run once then unloaded, like CGI, but without the 
overhead of starting an interpreter every time (this may be what 
mod_python's CGI handler does, but I've never used it). Since there are 
many, many CGI scripts already written in perl, it's easy to run these 
under mod_perl without modification. But I don't see any stability or 
security advantages to mod_perl at all.

> 3. I am not very attracted to PSP because I want to separate the  logic 
> from the presentation as completely as possible, and PHP and  other 
> template languages including PSP seem difficult to do that in.  Learning 

This is the main reason I use mod_python.publisher.

> template systems like PyMeld is an unattractive option for  me since I 
> don't understand their benefit. Why can't I just use  req.write() to 
> output my markup, relying completely on external CSS  after the fact? My 
> thought is that HTML templates provide a minimum  set of static code 
> that doesn't require extra processing, thus  keeping performance up. 
> However, if I minimize my use of req.write()  will it make a difference?

I never use req.write() with Publisher, I return the final page as a 
string (Publisher adds the headers). Arguably, req.write() can reduce 
memory overhead if you're generating huge pages for a large number of 
connections, but I haven't needed to deal with that, yet.

> 4 A final question, is mod_python 2.7 suitable for use in a  commercial 
> production system? All I'm doing is text processing,  string 
> manipulation, database calls, and some very minor mathematics.  If the 
> Apache 1.3 series mod works fine, can I relieve myself of some  stress 
> and go with that combo?

I use it in production, but I don't recommend it. It's not developed 
anymore, and you need to take some additional precautions. There are 
enough advantages to using Apache 2/mod_python 3 that it's well worth 
moving on to recent versions. Fortunately, they are both fairly easy to 
compile and install if your platform only packages the old versions.

> I'd appreciate some practical advise on this. I am funding this  myself 
> on a small budget with no hard deadline, so it is critical to  me that I 
> choose a language that will minimize my costs. Are my  assumptions 
> correct, or am I falling prey to FUD?

Language choice is personal, so you'll have to determine that yourself. 
I find that I'm more productive using Python, but I also need a lot more 
control over the environment than I do with PHP, which has fewer 
portability issues. Short of making a recommendation, I agree with many 
of your points and use mod_python for most of my projects, so it might 
also be a good choice for you.
From anthony at ataribaby.org  Mon Nov  7 16:37:41 2005
From: anthony at ataribaby.org (Anthony L.)
Date: Mon Nov  7 16:37:41 2005
Subject: [SPAM] [mod_python] [SPAM] Is mod_python 3.1 good in commercial
	blogging/CMS programming?
In-Reply-To: <436F5E94.8030908@joreybump.com>
References: <mailman.4172.1131074481.14006.mod_python@modpython.org>
	<8306587B-AD89-4817-B549-D9CE01F03513@ataribaby.org>
	<436F5E94.8030908@joreybump.com>
Message-ID: <E51E4B88-BFE0-4318-A36B-2FCB59DA31DF@ataribaby.org>


On Nov 7, 2005, at 8:03 AM, Jorey Bump wrote:

> You'll really need to know how to configure and administer your own  
> server to get the most out of mod_python. The most you could expect  
> from a hosting provider is a good colocation or virtual server  
> environment. I doubt if I'd be happy with any preconfigured  
> mod_python setup.

Hi Jorey, thanks for the reply. Since I am doing this project on my  
own with no support, I must go with a web host. I am hoping to find  
one that supports Apache 2, Python 2.3, and mod_python 3. I expect to  
get a dedicated server, and I'm learning about UML (User Mode Linux)  
hosting options. My own shared host (like most) still uses Apache 1.3  
with no upgrade plans. Why wouldn't you be happy with a pre- 
configured mod_python setup? I compiled and installed mod_python  
myself, and the only configuring I did was in setting up the module  
directive and Publisher handler in httpd.conf. Is there more I can  
(and should) do?

> Not sure what you mean. mod_python isn't CGI. Since it embeds the  
> interpreter, it's *more* persistent. Could you be more specific?

Actually, you just answered me. I was under the impression that  
mod_python.publisher is stilll CGI, only with some extra voodoo under  
the hood that makes the CGI code not fork a new process for each and  
every use. I am new to this persistence issue. I feel kinda out of my  
element, moving away from CGI and desktop app programming. I just  
read that hosts/admins do not like persistent long-running processes.  
I assume this has to do with server load and stability and not security?

> I never use req.write() with Publisher, I return the final page as  
> a string (Publisher adds the headers). Arguably, req.write() can  
> reduce memory overhead if you're generating huge pages for a large  
> number of connections, but I haven't needed to deal with that, yet.

I didn't know if there would be any advantage to using req.write(). I  
figured that every call to req.write() would impose some overhead on  
a busy server, so the less use of the function the better.

> I find that I'm more productive using Python, but I also need a lot  
> more control over the environment than I do with PHP, which has  
> fewer portability issues. Short of making a recommendation, I agree  
> with many of your points and use mod_python for most of my  
> projects, so it might also be a good choice for you.

I have quickly found myself to be very productive with Python, more  
so than with any other language I've ever used. I would say that it's  
right for me. I know it will do what I need it to do. So my only real  
concerns now are its acceptability in a hosted environment. Had I my  
own server, I'd happily use it. Thanks again.
From list at joreybump.com  Mon Nov  7 17:54:45 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Nov  7 17:54:55 2005
Subject: [SPAM] [mod_python] [SPAM] Is mod_python 3.1 good in commercial
	blogging/CMS programming?
In-Reply-To: <E51E4B88-BFE0-4318-A36B-2FCB59DA31DF@ataribaby.org>
References: <mailman.4172.1131074481.14006.mod_python@modpython.org>
	<8306587B-AD89-4817-B549-D9CE01F03513@ataribaby.org>
	<436F5E94.8030908@joreybump.com>
	<E51E4B88-BFE0-4318-A36B-2FCB59DA31DF@ataribaby.org>
Message-ID: <436FDB35.8060907@joreybump.com>

Anthony L. wrote:

> Hi Jorey, thanks for the reply. Since I am doing this project on my  own 
> with no support, I must go with a web host. I am hoping to find  one 
> that supports Apache 2, Python 2.3, and mod_python 3. I expect to  get a 
> dedicated server, and I'm learning about UML (User Mode Linux)  hosting 
> options. My own shared host (like most) still uses Apache 1.3  with no 
> upgrade plans. Why wouldn't you be happy with a pre- configured 
> mod_python setup? I compiled and installed mod_python  myself, and the 
> only configuring I did was in setting up the module  directive and 
> Publisher handler in httpd.conf. Is there more I can  (and should) do?

I don't think there is any kind of standardized mod_python configuration 
that has turned out to be one-size-fits-all. I rely on tweaking 
httpd.conf a lot (and restarting apache), which is not an option in most 
shared hosting environments. Running your own server (real or virtual) 
is a different case entirely. You control what's installed, so what your 
provider supports is irrelevant.

> I just  read
> that hosts/admins do not like persistent long-running processes.  I 
> assume this has to do with server load and stability and not security?

All admins expect apache to be a long running process. And, again, if 
you have a dedicated server, you're the admin, so you can do what you 
want. But you should be aware that mod_python doesn't necessarily create 
a single persistent interpreter that's shared by all applications. There 
may be a few interpreters running at a time, with their own set of 
cached modules, and they will die and be replaced after a while (I use 
the apache prefork MPM, where this is the norm, I'm not sure how much 
things change under a threaded MPM, which also has issues).

> I have quickly found myself to be very productive with Python, more  so 
> than with any other language I've ever used. I would say that it's  
> right for me. I know it will do what I need it to do. So my only real  
> concerns now are its acceptability in a hosted environment. Had I my  
> own server, I'd happily use it. Thanks again.

If you are comfortable administering your own server, look for a colo or 
virtual server account. Then you can do whatever you want. I doubt if 
you'll have any luck in a shared hosting environment, although there are 
some that give each user their own instance of apache and proxy it 
behind a main apache web server. No matter what you do, it's well worth 
digging an old machine out of the trash and installing Linux on it as a 
learning platform for both administration and development. A modest 
machine will easily support apache and mod_python.

From grahamd at dscpl.com.au  Tue Nov  8 04:04:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov  8 04:05:04 2005
Subject: [mod_python] [Vampire] ".vampire" not loaded but I do not see why
In-Reply-To: <20051107134908.GA22662@nic.fr>
References: <20051107134908.GA22662@nic.fr>
Message-ID: <89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>


On 08/11/2005, at 12:49 AM, Stephane Bortzmeyer wrote:

> I have a Vampire 1.7 + mod_python 3.1.3 installation where the
> ".vampire" file is apparently not loaded (for instance, the "handler
> =" option seems ignored). The problem is that I do not find why!
>
> * The Apache Virtual Host has a "PythonOption VampireDefaultHandlers
> On"
>
> * .vampire exists and is world-readable
>
> On another machine, with the same OS (Debian "sarge"), everything is
> fine.
>
> So, what could I do to investigate? Is there a way to be absolutely
> certain that ".vampire" is found and loaded?

To confirm that the config file is being loaded at any point, introduce
a syntax error into it. For example, add a first line to the  
configuration
file of the form:

   [XXX

If the config file is loaded at any point, you should get an error such  
as
that include below.

Mod_python error: "PythonHandler vampire"

Traceback (most recent call last):

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/mod_python/apache.py", line 299, in  
HandlerDispatch
     result = object(req)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/vampire/lookup.py", line 735, in _handler
     config = _configCache.loadConfig(req,file)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/site-packages/vampire/config.py", line 246, in loadConfig
     config.read(file)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/ConfigParser.py", line 263, in read
     self._read(fp, filename)

   File  
"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
python2.3/ConfigParser.py", line 456, in _read
     raise MissingSectionHeaderError(fpname, lineno, `line`)

MissingSectionHeaderError: File contains no section headers.
file: /Users/grahamd/Sites/vampire/.vampire, line: 1
'[XXX\n'

If the file isn't even loaded, then could possibly be a file permission
or ownership issue. Ie., the user that Apache runs as can't read the
file. It is probably unlikely that Apache can't read the directory
itself as would imagine that would cause other more obvious problems as
Apache wouldn't be able to derive what the target of the URL should be
matched to and would return 404.

Next thing to realise is that if "handler" is what you intend to be
used, then there is an expectation that there is no extension on the URL
being used. You have been using Vampire long enough probably to know
that though.

Next thing is to delve into what is in the config which is being found.
To do that, stick the following .py file in directory where .vampire
file is located, or some subdirectory which you expect to inherit the
.vampire file from the parent directory.

from mod_python import apache
import vampire

def handler(req,raw=None):
   req.content_type = 'text/plain'
   for option in req.get_options().keys():
     req.write('%s = %s\n'%(option,req.get_options().get(option)))
   req.write('\n')
   config = vampire.loadConfig(req,'.vampire')
   for option in config.defaults():
     req.write('%s = %s\n'%(option,config.defaults().get(option)))
   req.write('\n')
   for section in config.sections():
     req.write('[%s]\n'%section)
     for option in config.options(section):
       req.write('  %s =  
%s\n'%(option,config.get(section,option,raw=raw)))
     req.write('\n')
   return apache.OK

If this is called "config.py" accessing as URL ".../config" using the
.vampire file with Vampire itself as an example, expect to see:

VampireDefaultHandlers = On
VampireDirectoryIndex = index.html

__config_root__ = /Users/grahamd/Sites/vampire
__handler_root__ = /Users/grahamd/Sites/vampire
__baseurl_abs__ = /~grahamd/vampire
__config_file__ = /Users/grahamd/Sites/vampire/.vampire
__config_mtime__ = 1131438786
__baseurl_rel__ = .

[Handlers]
   handler_html = /Users/grahamd/Sites/vampire/layouts/skidoo.py
   layouts_root = /Users/grahamd/Sites/vampire/layouts

[Settings]
   website_home = ./../..
   document_root = /Users/grahamd/Sites/vampire
   vampire_home = .
   styles_home = ./styles

Using instead the URL ".../config?raw=1", expect to see:

VampireDefaultHandlers = On
VampireDirectoryIndex = index.html

__config_root__ = /Users/grahamd/Sites/vampire
__handler_root__ = /Users/grahamd/Sites/vampire
__baseurl_abs__ = /~grahamd/vampire
__config_file__ = /Users/grahamd/Sites/vampire/.vampire
__config_mtime__ = 1131438786
__baseurl_rel__ = .

[Handlers]
   handler_html = %(layouts_root)s/skidoo.py
   layouts_root = %(__config_root__)s/layouts

[Settings]
   website_home = %(__baseurl_rel__)s/../..
   document_root = %(__config_root__)s
   vampire_home = %(__baseurl_rel__)s
   styles_home = %(__baseurl_rel__)s/styles

If you don't see the config file you expect then only next step I can
think of would be to modify vampire/config.py source code in Vampire
package itself to log messages about what file it is looking for and in
what locations.

See what you come up with with that first. If all that looks okay and
URL being used is correct, ie., no extension and "handler" in "Handlers"
section isn't being used let me know and I will see what else I can
suggest. Will probably need to see what configuration you are using at
that point and how directories are structured and what URL is targeting.

Graham

From bortzmeyer at nic.fr  Tue Nov  8 04:10:48 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Tue Nov  8 04:11:05 2005
Subject: [mod_python] Re: [Vampire] ".vampire" not loaded but I do not see
	why
In-Reply-To: <89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
References: <20051107134908.GA22662@nic.fr>
	<89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
Message-ID: <20051108091048.GA31411@nic.fr>

On Tue, Nov 08, 2005 at 08:04:35PM +1100,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 157 lines which said:

> To confirm that the config file is being loaded at any point, introduce
> a syntax error into it.

I tried it and there is no error and no stack trace.

> If the file isn't even loaded, then could possibly be a file permission
> or ownership issue. Ie., the user that Apache runs as can't read the
> file. 

The file is world-readable and the directory also (Apache can read the
Python files).

I'll try the rest soon, thanks.
From grahamd at dscpl.com.au  Tue Nov  8 04:32:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov  8 04:33:14 2005
Subject: [mod_python] Re: [Vampire] ".vampire" not loaded but I do not see
	why
In-Reply-To: <20051108091048.GA31411@nic.fr>
References: <20051107134908.GA22662@nic.fr>
	<89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
	<20051108091048.GA31411@nic.fr>
Message-ID: <aa0a027eb648bcda5f2fd224d6f7993b@dscpl.com.au>


On 08/11/2005, at 8:10 PM, Stephane Bortzmeyer wrote:

> On Tue, Nov 08, 2005 at 08:04:35PM +1100,
>  Graham Dumpleton <grahamd@dscpl.com.au> wrote
>  a message of 157 lines which said:
>
>> To confirm that the config file is being loaded at any point, 
>> introduce
>> a syntax error into it.
>
> I tried it and there is no error and no stack trace.
>
>> If the file isn't even loaded, then could possibly be a file 
>> permission
>> or ownership issue. Ie., the user that Apache runs as can't read the
>> file.
>
> The file is world-readable and the directory also (Apache can read the
> Python files).
>
> I'll try the rest soon, thanks.

Apply the following patch to Vampire and reinstall. You can then track
through log messages in Apache error log file and see if where it is
looking makes sense.

Index: software/vampire/config.py
===================================================================
--- software/vampire/config.py  (revision 238)
+++ software/vampire/config.py  (working copy)
@@ -74,6 +74,8 @@

    def _search(self,req,name):

+    req.log_error("name = %s"%name)
+
      result = {
        "__handler_root__" : "",
        "__config_root__" : "",
@@ -99,6 +101,8 @@

      # Couldn't determine upper bounds of search.

+    req.log_error("handler_root [1] = %s"%handler_root)
+
      if handler_root is None:
        return result

@@ -119,6 +123,8 @@

      handler_root = posixpath.normpath(handler_root)

+    req.log_error("handler_root [2] = %s"%handler_root)
+
      # Now search back up directories for file.

      result["__handler_root__"] = handler_root
@@ -135,6 +141,8 @@
      else:
        config_root = posixpath.dirname(req.filename)

+    req.log_error("config_root = %s"%config_root)
+
      offset = ""

      if req.path_info and req.path_info != '/':
@@ -151,6 +159,8 @@

        config_file = posixpath.join(config_root,name)

+      req.log_error("config_file = %s"%config_file)
+
        if os.path.exists(config_file):
          config_root = posixpath.normpath(config_root)
          baseurl_abs = posixpath.normpath(baseurl_abs)


Example output where URL is against same directory .vampire file
is held:

[Tue Nov 08 20:25:23 2005] [error] [client 127.0.0.1] name = .vampire
[Tue Nov 08 20:25:23 2005] [error] [client 127.0.0.1] handler_root [1] 
= /Users/grahamd/Sites/vampire/
[Tue Nov 08 20:25:23 2005] [error] [client 127.0.0.1] handler_root [2] 
= /Users/grahamd/Sites/vampire
[Tue Nov 08 20:25:23 2005] [error] [client 127.0.0.1] config_root = 
/Users/grahamd/Sites/vampire
[Tue Nov 08 20:25:23 2005] [error] [client 127.0.0.1] config_file = 
/Users/grahamd/Sites/vampire/.vampire

Where it is in a subdirectory:

[Tue Nov 08 20:29:13 2005] [error] [client 127.0.0.1] name = .vampire
[Tue Nov 08 20:29:13 2005] [error] [client 127.0.0.1] handler_root [1] 
= /Users/grahamd/Sites/vampire/
[Tue Nov 08 20:29:13 2005] [error] [client 127.0.0.1] handler_root [2] 
= /Users/grahamd/Sites/vampire
[Tue Nov 08 20:29:13 2005] [error] [client 127.0.0.1] config_root = 
/Users/grahamd/Sites/vampire/articles
[Tue Nov 08 20:29:13 2005] [error] [client 127.0.0.1] config_file = 
/Users/grahamd/Sites/vampire/articles/.vampire
[Tue Nov 08 20:29:13 2005] [error] [client 127.0.0.1] config_file = 
/Users/grahamd/Sites/vampire/.vampire

You can see how it tracks back up the directory hierarchy looking for 
the
config file, stopping when it gets to handler_root.

Especially make sure that handler_root is even correct. There is code in
their already to work around a mod_python bug, but maybe there are still
some cases it doesn't work correctly.

Graham

From ilzogoiby at gmail.com  Tue Nov  8 13:28:54 2005
From: ilzogoiby at gmail.com (Pedro Ferreira)
Date: Tue Nov  8 13:28:40 2005
Subject: [mod_python] mod_python module path
Message-ID: <4370EE66.1080901@gmail.com>

Hello all.
I'm starting with mod_python, and I'm thinnking about developing a web 
application using it. However, I have some python packages of my own, 
that i wanted to use, and don't know how to add them to the module path. 
I made a symlink in site-packages, to my module directory, and it works. 
However, I'll need to do it without administrator privileges. How is it 
possible? Is there any variable I should change?

Thanks in advance,

Pedro
From list at joreybump.com  Tue Nov  8 13:42:46 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov  8 13:42:58 2005
Subject: [mod_python] mod_python module path
In-Reply-To: <4370EE66.1080901@gmail.com>
References: <4370EE66.1080901@gmail.com>
Message-ID: <4370F1A6.9000908@joreybump.com>

Pedro Ferreira wrote:
> Hello all.
> I'm starting with mod_python, and I'm thinnking about developing a web 
> application using it. However, I have some python packages of my own, 
> that i wanted to use, and don't know how to add them to the module path. 
> I made a symlink in site-packages, to my module directory, and it works. 
> However, I'll need to do it without administrator privileges. How is it 
> possible? Is there any variable I should change?

I use the PythonPath directive in my virtual host configuration:

  PythonPath "['/var/www/vhosts/www.example.com/python'] + sys.path"

For more info, see:

  http://www.modpython.org/live/current/doc-html/dir-other-pp.html
From mhowsden at gmail.com  Tue Nov  8 13:57:56 2005
From: mhowsden at gmail.com (Mike Howsden)
Date: Tue Nov  8 13:58:01 2005
Subject: [mod_python] short term contract position
Message-ID: <68bee7ae0511081057r7dc32d92ua076935e5c0d9f99@mail.gmail.com>

I recently started building a web application that I need the assistance of
a highly experienced python developer to complete the basic app in a short
period of time. I thought i may be able to find someone by posting here. I
hope this is an appropriate use of this list.

----
Searching for a contractor to assist with development of an online fitness
application.

A successful applicant will have strong Python programming experience and
have previously developed N-Tier applications. Applicant should also have a
working knowledge of relational database concepts and RDBMS systems such as
MySQL and PostgreSQL.

Location: Open
Contract length: 2-3 months (full time)
----

Mike Howsden
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051108/e41aff98/attachment.html
From selecter at gmail.com  Tue Nov  8 15:23:16 2005
From: selecter at gmail.com (Anton)
Date: Tue Nov  8 15:23:19 2005
Subject: [mod_python] Bugreport: mod_python replaces "\n" on \n
Message-ID: <39f0215a0511081223ja307799r@mail.gmail.com>

Here is a result of @including:
http://anton.lihost.org/c.py?page=01-getopt
"\n"s inside printf function were replaced by new lines

Here is the source:
http://anton.lihost.org/c/01-getopt.c.html

$ cat templates/c/01-getopt.tmpl
...
<%@ include file="../../c/01-getopt.c.html" %>
...

mod_python/3.2.0b Python/2.3.5

From ngower at dkp.com  Tue Nov  8 16:47:59 2005
From: ngower at dkp.com (Neil Gower)
Date: Tue Nov  8 16:49:48 2005
Subject: [mod_python] handlers and globals
Message-ID: <43711D0F.5050107@dkp.com>

Hello,

I'm having some trouble trying to run my PSP pages through the standard 
Python profiler.  The problem appears to be that the python globals don't 
behave as the profiler expects when it is run through mod_python.

The test handler (below) works okay with the profiler when invoked from a 
regular command line Python interpreter, but it raises a "NameError: name 
'processPsp' is not defined" exception when run through mod_python.  I'm 
taking that to mean that the profiler can't find the processPsp() method to 
invoke.

Can anyone offer any suggestions?  I'm stumped at this point.

Thanks!


Neil.


Details of my setup:
=============================================================================
Mod_python error: "PythonHandler profiler-handler"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in 
HandlerDispatch
     result = object(req)

   File "/var/profiler-test/profiler-handler.py", line 36, in handler
     rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )

   File "/usr/lib/python2.3/profile.py", line 71, in run
     prof = prof.run(statement)

   File "/usr/lib/python2.3/profile.py", line 403, in run
     return self.runctx(cmd, dict, dict)

   File "/usr/lib/python2.3/profile.py", line 409, in runctx
     exec cmd in globals, locals

   File "", line 1, in ?

NameError: name 'processPsp' is not defined
=============================================================================
Apache:

<Directory "/var/profiler-test">
     Options Indexes MultiViews
     AllowOverride None
     Order allow,deny
     Allow from all

     AddHandler mod_python .psp
     PythonHandler profiler-handler
     PythonDebug On
</Directory>

=============================================================================
/var/profiler-test/ProfilerTest.psp:

<p>This is a test!

<%
req.write( "<p>So is this!" )
%>

=============================================================================
/var/profiler-test/profiler-handler.py:

# we have to wrap these imports in a try block to be able to run the
# code outside of mod_python, where they will fail.
try:
     from mod_python import apache, psp
except:
     pass

import profile


def processPsp():
     """
     A plain old method that uses global variables for the PSP
     parameters, which makes it easy to use with the profiler.
     """
     theRequest.content_type = "text/html"
     template = psp.PSP( theRequest, theTemplateFile )
     template.run()
     return apache.OK
# end processPsp()


def handler( req ):
     """
     The mod_python hook for handling a page request.
     """
     global theRequest
     global theTemplateFile
     theRequest = req
     theTemplateFile = 'ProfilerTest.psp'

     # This works...
     #rc = processPsp()

     # but this doesn't...
     rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )

     return rc
# end handler()


if __name__ == '__main__':
     try:
         handler( None )
     except AttributeError, e:
         # if we actually make it into processPsp(), the null request
         # object will cause an AttributeError.
         print "A not unexpected error: %s" % str(e)
# end main.
=============================================================================
From jpg at jgassociates.ca  Tue Nov  8 17:14:19 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Nov  8 17:11:49 2005
Subject: [mod_python] Bugreport: mod_python replaces "\n" on \n
In-Reply-To: <39f0215a0511081223ja307799r@mail.gmail.com>
References: <39f0215a0511081223ja307799r@mail.gmail.com>
Message-ID: <4371233B.8080500@jgassociates.ca>

Anton wrote:
> Here is a result of @including:
> http://anton.lihost.org/c.py?page=01-getopt
> "\n"s inside printf function were replaced by new lines
> 
> Here is the source:
> http://anton.lihost.org/c/01-getopt.c.html
> 
> $ cat templates/c/01-getopt.tmpl
> ...
> <%@ include file="../../c/01-getopt.c.html" %>
> ...

This looks like a bug in the psp_parser itself, rather than in the 
include mechanism. The backslash-LF character pair is being parsed as a 
LF character. I've attached a small test which illustrates the behaviour.

Could you file a bug report on JIRA, Anton?
http://issues.apache.org/jira/browse/MODPYTHON

Thanks,
Jim

-------------- next part --------------
A non-text attachment was scrubbed...
Name: psp_parse_error_test.tgz
Type: application/x-compressed-tar
Size: 346 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051108/63ccb4d9/psp_parse_error_test.bin
From grahamd at dscpl.com.au  Tue Nov  8 17:16:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov  8 17:16:44 2005
Subject: [mod_python] Bugreport: mod_python replaces "\n" on \n
Message-ID: <1131488198.4701@dscpl.user.openhosting.com>

Anton wrote ..
> Here is a result of @including:
> http://anton.lihost.org/c.py?page=01-getopt
> "\n"s inside printf function were replaced by new lines
> 
> Here is the source:
> http://anton.lihost.org/c/01-getopt.c.html
> 
> $ cat templates/c/01-getopt.tmpl
> ...
> <%@ include file="../../c/01-getopt.c.html" %>
> ...
> 
> mod_python/3.2.0b Python/2.3.5

To save people digging through this stuff to work out what it is about,
here is a more succinct example. The module being used is PSP.

# .htaccess

AddHandler mod_python .psp
PythonHandler mod_python.psp

# hello.psp

<html>
<body>
<%@ include file="part.psp" %>
</body>
</html>

# part.psp

<p>
1
2
3\n4
</p>

The '\n' is literally converted into a newline. And thus perhaps
where one would expect to see:

1 2 3\n4

One sees:

1 2 3 4

Now to work out what is going on and what is reasonable.

Graham
From selecter at gmail.com  Tue Nov  8 17:20:47 2005
From: selecter at gmail.com (Anton)
Date: Tue Nov  8 17:20:51 2005
Subject: [mod_python] Bugreport: mod_python replaces "\n" on \n
In-Reply-To: <4371233B.8080500@jgassociates.ca>
References: <39f0215a0511081223ja307799r@mail.gmail.com>
	<4371233B.8080500@jgassociates.ca>
Message-ID: <39f0215a0511081420k4f9a6334k@mail.gmail.com>

You were right!
Test has given an output:
BEGIN TEST
( )
END TEST

Sure I will file a bug there

2005/11/9, Jim Gallacher <jpg@jgassociates.ca>:
> Anton wrote:
> > Here is a result of @including:
> > http://anton.lihost.org/c.py?page=01-getopt
> > "\n"s inside printf function were replaced by new lines
> >
> > Here is the source:
> > http://anton.lihost.org/c/01-getopt.c.html
> >
> > $ cat templates/c/01-getopt.tmpl
> > ...
> > <%@ include file="../../c/01-getopt.c.html" %>
> > ...
>
> This looks like a bug in the psp_parser itself, rather than in the
> include mechanism. The backslash-LF character pair is being parsed as a
> LF character. I've attached a small test which illustrates the behaviour.
>
> Could you file a bug report on JIRA, Anton?
> http://issues.apache.org/jira/browse/MODPYTHON
>
> Thanks,
> Jim
>
>
>
>

From selecter at gmail.com  Tue Nov  8 17:29:40 2005
From: selecter at gmail.com (Anton)
Date: Tue Nov  8 17:29:44 2005
Subject: [mod_python] Bugreport: mod_python replaces "\n" on \n
In-Reply-To: <39f0215a0511081420k4f9a6334k@mail.gmail.com>
References: <39f0215a0511081223ja307799r@mail.gmail.com>
	<4371233B.8080500@jgassociates.ca>
	<39f0215a0511081420k4f9a6334k@mail.gmail.com>
Message-ID: <39f0215a0511081429y4d5f1aeel@mail.gmail.com>

http://issues.apache.org/jira/browse/MODPYTHON-87

From jellej at pacbell.net  Tue Nov  8 17:35:00 2005
From: jellej at pacbell.net (jelle)
Date: Tue Nov  8 17:39:16 2005
Subject: [mod_python] mod_python module path
In-Reply-To: <4370F1A6.9000908@joreybump.com>
References: <4370EE66.1080901@gmail.com> <4370F1A6.9000908@joreybump.com>
Message-ID: <Pine.LNX.4.61.0511081416410.19418@localhost.localdomain>



What works for me in the python file and prevents redundant path entries:

PYPATH = '/home/somegroovypath/my/py'
import sys
try: sys.path.index(PYPATH)
except: sys.path.append(PYPATH)


On Tue, 8 Nov 2005, Jorey Bump wrote:

> Pedro Ferreira wrote:
>> Hello all.
>> I'm starting with mod_python, and I'm thinnking about developing a web 
>> application using it. However, I have some python packages of my own, that 
>> i wanted to use, and don't know how to add them to the module path. I made 
>> a symlink in site-packages, to my module directory, and it works. However, 
>> I'll need to do it without administrator privileges. How is it possible? Is 
>> there any variable I should change?
>
> I use the PythonPath directive in my virtual host configuration:
>
> PythonPath "['/var/www/vhosts/www.example.com/python'] + sys.path"
>
> For more info, see:
>
> http://www.modpython.org/live/current/doc-html/dir-other-pp.html
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jpg at jgassociates.ca  Tue Nov  8 17:44:05 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Nov  8 17:41:26 2005
Subject: [mod_python] Bugreport: mod_python replaces "\n" on \n
In-Reply-To: <39f0215a0511081429y4d5f1aeel@mail.gmail.com>
References: <39f0215a0511081223ja307799r@mail.gmail.com>	<4371233B.8080500@jgassociates.ca>	<39f0215a0511081420k4f9a6334k@mail.gmail.com>
	<39f0215a0511081429y4d5f1aeel@mail.gmail.com>
Message-ID: <43712A35.3080108@jgassociates.ca>

Anton wrote:
> http://issues.apache.org/jira/browse/MODPYTHON-87
> 

Wonderful. At this point we should shift the discussion to the 
python-dev mailing list. Any lex experts out there? Please follow along.

Jim
From nick at dd.revealed.net  Tue Nov  8 17:51:06 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Nov  8 17:51:19 2005
Subject: [mod_python] mod_python module path
In-Reply-To: <Pine.LNX.4.61.0511081416410.19418@localhost.localdomain>
References: <4370EE66.1080901@gmail.com> <4370F1A6.9000908@joreybump.com>
	<Pine.LNX.4.61.0511081416410.19418@localhost.localdomain>
Message-ID: <43712BDA.1090606@dd.revealed.net>

For performance reasons, it's always faster to do

if PYPATH not in sys.path: sys.path.append(PYPATH)

rather than to raise and handle an exception.

Nick

jelle wrote:
> 
> 
> What works for me in the python file and prevents redundant path entries:
> 
> PYPATH = '/home/somegroovypath/my/py'
> import sys
> try: sys.path.index(PYPATH)
> except: sys.path.append(PYPATH)
> 
> 
> On Tue, 8 Nov 2005, Jorey Bump wrote:
> 
>> Pedro Ferreira wrote:
>>
>>> Hello all.
>>> I'm starting with mod_python, and I'm thinnking about developing a 
>>> web application using it. However, I have some python packages of my 
>>> own, that i wanted to use, and don't know how to add them to the 
>>> module path. I made a symlink in site-packages, to my module 
>>> directory, and it works. However, I'll need to do it without 
>>> administrator privileges. How is it possible? Is there any variable I 
>>> should change?
>>
>>
>> I use the PythonPath directive in my virtual host configuration:
>>
>> PythonPath "['/var/www/vhosts/www.example.com/python'] + sys.path"
>>
>> For more info, see:
>>
>> http://www.modpython.org/live/current/doc-html/dir-other-pp.html
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Tue Nov  8 18:40:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov  8 18:40:57 2005
Subject: [mod_python] mod_python module path
Message-ID: <1131493253.22362@dscpl.user.openhosting.com>

In terms of what might be considered preferred practice, especially when
using a multithreaded Apache MPM, if you feel that you must set sys.path
in your actual Python code, do it from a module imported using the
PythonImport directive. These imports only happen once and before
multiple threads for handling requests come into play. Thus no need
to check if it is already in sys.path.

If the Python modules you want to use are really a part of your web
application, as opposed to some generic modules, you might also consider
instead using apache.import_module(). This will allow you to specify
exactly where to load modules from at the time the call is made thereby
avoiding the issue of setting sys.path altogether.

If using apache.import_module() or PythonHandler on your own
modules in the document tree, always be aware though of the problems
that exist in mod_python in the area of module loading/reloading. See:

  http://www.dscpl.com.au/articles/modpython-002.html
  http://www.dscpl.com.au/articles/modpython-003.html

Graham


Nick wrote ..
> For performance reasons, it's always faster to do
> 
> if PYPATH not in sys.path: sys.path.append(PYPATH)
> 
> rather than to raise and handle an exception.
> 
> Nick
> 
> jelle wrote:
> > 
> > 
> > What works for me in the python file and prevents redundant path entries:
> > 
> > PYPATH = '/home/somegroovypath/my/py'
> > import sys
> > try: sys.path.index(PYPATH)
> > except: sys.path.append(PYPATH)
> > 
> > 
> > On Tue, 8 Nov 2005, Jorey Bump wrote:
> > 
> >> Pedro Ferreira wrote:
> >>
> >>> Hello all.
> >>> I'm starting with mod_python, and I'm thinnking about developing a
> >>> web application using it. However, I have some python packages of my
> >>> own, that i wanted to use, and don't know how to add them to the 
> >>> module path. I made a symlink in site-packages, to my module 
> >>> directory, and it works. However, I'll need to do it without 
> >>> administrator privileges. How is it possible? Is there any variable
> I 
> >>> should change?
> >>
> >>
> >> I use the PythonPath directive in my virtual host configuration:
> >>
> >> PythonPath "['/var/www/vhosts/www.example.com/python'] + sys.path"
> >>
> >> For more info, see:
> >>
> >> http://www.modpython.org/live/current/doc-html/dir-other-pp.html
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From bortzmeyer at nic.fr  Wed Nov  9 03:40:08 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Nov  9 03:40:14 2005
Subject: [mod_python] Re: [Vampire] ".vampire" not loaded but I do not see
	why
In-Reply-To: <89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
References: <20051107134908.GA22662@nic.fr>
	<89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
Message-ID: <20051109084008.GA27347@nic.fr>

On Tue, Nov 08, 2005 at 08:04:35PM +1100,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 157 lines which said:

> Next thing to realise is that if "handler" is what you intend to be
> used, then there is an expectation that there is no extension on the URL
> being used. You have been using Vampire long enough probably to know
> that though.

Yes and, anyway,adding ".html" at the end of the URL changes nothing.
 
> Next thing is to delve into what is in the config which is being found.
> To do that, stick the following .py file in directory where .vampire
> file is located,

I get:

VampireDirectoryIndex = index

__config_root__ =

__handler_root__ =

__baseurl_abs__ =

__config_file__ =

__config_mtime__ =

__baseurl_rel__ =

VampireDefaultHandlers = On

__config_root__ =

__handler_root__ =

__baseurl_abs__ =

__config_file__ =

__config_mtime__ =

__baseurl_rel__ =

From bortzmeyer at nic.fr  Wed Nov  9 03:54:37 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Nov  9 03:54:42 2005
Subject: [mod_python] Re: [Vampire] ".vampire" not loaded but I do not see
	why
In-Reply-To: <aa0a027eb648bcda5f2fd224d6f7993b@dscpl.com.au>
References: <20051107134908.GA22662@nic.fr>
	<89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
	<20051108091048.GA31411@nic.fr>
	<aa0a027eb648bcda5f2fd224d6f7993b@dscpl.com.au>
Message-ID: <20051109085437.GA28591@nic.fr>

On Tue, Nov 08, 2005 at 08:32:19PM +1100,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 114 lines which said:

> Apply the following patch to Vampire and reinstall. 

[Wed Nov 09 09:52:19 2005] [notice] mod_python: (Re)importing module 'vampire'
[Wed Nov 09 09:52:19 2005] [notice] vampire: Importing module '/var/www/demo/python_config.py'
[Wed Nov 09 09:52:19 2005] [error] [client 192.134.7.249] name = .vampire
[Wed Nov 09 09:52:19 2005] [error] [client 192.134.7.249] handler_root [1] = None
[Wed Nov 09 09:52:19 2005] [notice] vampire: Importing module '/var/www/demo/_layout.py'
[Wed Nov 09 09:52:19 2005] [error] [client 192.134.7.249] File does not exist: /var/www/demo/python_config

So, apparently, it does not find my file. But it is there:

% ls -al /var/www/demo/.vampire
-rw-r--r--  1 bortzmeyer bortzmeyer 63 Nov  7 14:41 /var/www/demo/.vampire
From bortzmeyer at nic.fr  Wed Nov  9 03:57:33 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Nov  9 03:57:38 2005
Subject: [mod_python] Re: [Vampire] ".vampire" not loaded but I do not see
	why
In-Reply-To: <20051109085437.GA28591@nic.fr>
References: <20051107134908.GA22662@nic.fr>
	<89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
	<20051108091048.GA31411@nic.fr>
	<aa0a027eb648bcda5f2fd224d6f7993b@dscpl.com.au>
	<20051109085437.GA28591@nic.fr>
Message-ID: <20051109085733.GA29016@nic.fr>

On Wed, Nov 09, 2005 at 09:54:37AM +0100,
 Stephane Bortzmeyer <bortzmeyer@nic.fr> wrote 
 a message of 17 lines which said:

> So, apparently, it does not find my file. But it is there:

On the machine where things work:

[Wed Nov 09 09:56:09 2005] [notice] mod_python: (Re)importing module
'vampire'
[Wed Nov 09 09:56:09 2005] [notice] vampire: Importing module
'/var/www/python_config.py'
[Wed Nov 09 09:56:09 2005] [error] [client 192.134.4.69] name =
.vampire
[Wed Nov 09 09:56:09 2005] [error] [client 192.134.4.69] handler_root
[1] = /var/www/
[Wed Nov 09 09:56:09 2005] [error] [client 192.134.4.69] handler_root
[2] = /var/www
[Wed Nov 09 09:56:09 2005] [error] [client 192.134.4.69] config_root =
/var/www
[Wed Nov 09 09:56:09 2005] [error] [client 192.134.4.69] config_file =
/var/www/.vampire
[Wed Nov 09 09:56:09 2005] [notice] vampire: Importing module
'/usr/local/lib/python2.3/site-packages/cheetah-vampire-handler.py'

From bortzmeyer at nic.fr  Wed Nov  9 04:05:56 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Nov  9 04:06:22 2005
Subject: [mod_python] [SOLVED] [Vampire] ".vampire" not loaded but I do not
	see why
In-Reply-To: <20051109085437.GA28591@nic.fr>
References: <20051107134908.GA22662@nic.fr>
	<89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
	<20051108091048.GA31411@nic.fr>
	<aa0a027eb648bcda5f2fd224d6f7993b@dscpl.com.au>
	<20051109085437.GA28591@nic.fr>
Message-ID: <20051109090556.GA29242@nic.fr>

On Wed, Nov 09, 2005 at 09:54:37AM +0100,
 Stephane Bortzmeyer <bortzmeyer@nic.fr> wrote 
 a message of 17 lines which said:

> [Wed Nov 09 09:52:19 2005] [error] [client 192.134.7.249] handler_root [1] = None

OK, reading Vampire source code, I found the problem. There was a
small difference between my Apache configuration files.

On the machines which work:

<VirtualHost *:80>
    <Directory /var/www/demo>
      PythonHandler vampire
    
On the machine which does not:

<VirtualHost *:80>
      PythonHandler vampire

Putting PythonHandler directly in the virtual host is legal in
mod_python
(http://www.modpython.org/live/current/doc-html/dir-handlers-ph.html)
so it does not raise errors (and it works fine with "normal"
mod_python scripts). But it prevents Vampire to find the handler root.

http://www.dscpl.com.au/projects/vampire/articles/vampire-002.html
gives an example with <Directory> but does not say that it is
*mandatory* for Vampire.
From bortzmeyer at nic.fr  Wed Nov  9 04:21:00 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Wed Nov  9 04:21:19 2005
Subject: [mod_python] Re: [Vampire] ".vampire" not loaded but I do not see
	why
In-Reply-To: <aa0a027eb648bcda5f2fd224d6f7993b@dscpl.com.au>
References: <20051107134908.GA22662@nic.fr>
	<89cc0b390ce9f65d26b6d17cc5e01a33@dscpl.com.au>
	<20051108091048.GA31411@nic.fr>
	<aa0a027eb648bcda5f2fd224d6f7993b@dscpl.com.au>
Message-ID: <20051109092100.GB31640@nic.fr>

On Tue, Nov 08, 2005 at 08:32:19PM +1100,
 Graham Dumpleton <grahamd@dscpl.com.au> wrote 
 a message of 114 lines which said:

> Apply the following patch to Vampire and reinstall. 

IWBNI this code were permanently in Vampire and could be activated on
demand (an environment variable?). We really need more debugging
tools.


From johan at stromnet.org  Wed Nov  9 07:46:37 2005
From: johan at stromnet.org (=?ISO-8859-1?Q?Johan_Str=F6m?=)
Date: Wed Nov  9 07:48:08 2005
Subject: [mod_python] Apache2, mod_python and nss_ldap: Coredump
Message-ID: <9093411A-DB4E-4ECF-8503-D55E9CA760D5@stromnet.org>

Hi

I got a new FreeBSD 6 box. Rebuilt kernel and world 2 hours ago  
(against RELENG_6), so it should be pretty new.

Im trying to have apache 2.0.55, mod_python 3.1.4 and nss_ldap 239,  
all the latest from ports.
The problem I have is this: If i have LoadModule python_module       
libexec/apache2/mod_python.so in my httpd.conf, and at the same time  
have either
"group: files ldap" and/or "passwd: files ldap" in my nsswitch.conf,  
i get Segfaults. Example:

root@elfi2:~$ apachectl configtest
Syntax OK
Segmentation fault (core dumped)
root@elfi2:~$

However, apache itself is running fine, even using mod_python.
If i remove either the LoadModule or both the ldap-entrys in  
nsswitch, the segfaults dissappear. I've compiled httpd with debug  
symbols, and this is what I found with gdb (httpd -t is same as  
apachectl configtest):

root@elfi2:~$ gdb httpd
GNU gdb 6.1.1 [FreeBSD]
Copyright 2004 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and  
you are
welcome to change it and/or distribute copies of it under certain  
conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for  
details.
This GDB was configured as "i386-marcel-freebsd"...
(gdb) run -t
Starting program: /usr/local/sbin/httpd -t
warning: Unable to get location for thread creation breakpoint:  
generic error
[New LWP 100104]
[New Thread 0x80ab000 (LWP 100104)]
Warning: DocumentRoot [/usr/local/nagios/share] does not exist
Syntax OK

Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x80ab000 (LWP 100104)]
0x00000000 in ?? ()
(gdb) where
#0  0x00000000 in ?? ()
#1  0x28be6744 in ?? () from /usr/local/lib/nss_ldap.so.1
#2  0x28bf2200 in ?? () from /usr/local/lib/nss_ldap.so.1
#3  0x280ba3d8 in ?? () from /libexec/ld-elf.so.1
#4  0xbfbfe618 in ?? ()
#5  0x280a0b26 in _rtld_error () from /libexec/ld-elf.so.1
#6  0x28bef998 in _fini () from /usr/local/lib/nss_ldap.so.1
#7  0x280b9018 in tls_dtv_generation () from /libexec/ld-elf.so.1
#8  0x280ba3d8 in ?? () from /libexec/ld-elf.so.1
#9  0xbfbfe628 in ?? ()
#10 0x280a1076 in elf_hash () from /libexec/ld-elf.so.1
#11 0x280a3958 in dlclose () from /libexec/ld-elf.so.1
#12 0x284de64c in _nsdbtaddsrc () from /lib/libc.so.6
#13 0x284de20f in endhostent () from /lib/libc.so.6
#14 0x284de6cc in _nsdbtaddsrc () from /lib/libc.so.6
#15 0x284fd35f in __cxa_finalize () from /lib/libc.so.6
#16 0x284fcf9a in exit () from /lib/libc.so.6
#17 0x0806f0ee in destroy_and_exit_process (process=0x80b6098,  
process_exit_value=0) at main.c:216
#18 0x0806faa6 in main (argc=2, argv=0xbfbfe838) at main.c:565
(gdb)

So, seems the segfault appears when apache calls exit(), explains why  
it seems to work good otherwise...
Googling gave me some similar problem (bug 65220), however that bug  
seemd to affect other programs, so far I've only encountered this  
problem with apache.
Currently I've compiled apache with the following:

portinstall apache-2.0.55 -M "WITH_DBM=bdb WITH_BERKELEYDB=db4  
WITH_LDAP=1 WITH_MPM=prefork WITH_THREADS=yes  
WITH_THREADS_MODULES=yes WITH_DEBUG=1"

The threads stuff was added after some suspect gdb'ing around a  
pthread function (can't remember exact name now.. something  
pthread_cancel.. the symptoms where the same, segfault just before  
exit).
mod_python is installed without any special options, there isnt realy  
any (ie no option to turn of threads).

I've also tried compiling python without threads, then apache without  
threads, then modpython.. same problem.

Does anyone have any clue about whats going on here?
Don't realy know where the problem lies, so I've sent this here , to  
apache-user and to freebsd-stable (http://lists.freebsd.org/pipermail/ 
freebsd-stable/2005-November/019476.html).

Thanks!
Johan


---------------------------------------------------------------------
The official User-To-User support forum of the Apache HTTP Server  
Project.
See <URL:http://httpd.apache.org/userslist.html> for more info.
To unsubscribe, e-mail: users-unsubscribe@httpd.apache.org
   "   from the digest: users-digest-unsubscribe@httpd.apache.org
For additional commands, e-mail: users-help@httpd.apache.org

From jd at commandprompt.com  Wed Nov  9 15:12:32 2005
From: jd at commandprompt.com (Joshua D. Drake)
Date: Wed Nov  9 15:12:08 2005
Subject: [mod_python] mod_python article
Message-ID: <43725830.6010901@commandprompt.com>

Hello,

I wrote a brief introduction to mod_python/psp over at DevX about a 
month ago. I am by no means an expert Python guy but I thought it may be
useful for people new to mod_python. The article can be found here and I 
hope it is helpful.

http://www.devx.com/webdev/Article/29357

Sincerely,

Joshua D. Drake

-- 
The PostgreSQL Company - Command Prompt, Inc. 1.503.667.4564
PostgreSQL Replication, Consulting, Custom Development, 24x7 support
Managed Services, Shared and Dedicated Hosting
Co-Authors: plPHP, plPerlNG - http://www.commandprompt.com/

From list at joreybump.com  Wed Nov  9 15:55:47 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Nov  9 15:55:57 2005
Subject: [mod_python] mod_python article
In-Reply-To: <43725830.6010901@commandprompt.com>
References: <43725830.6010901@commandprompt.com>
Message-ID: <43726253.4030301@joreybump.com>

Joshua D. Drake wrote:
> Hello,
> 
> I wrote a brief introduction to mod_python/psp over at DevX about a 
> month ago. I am by no means an expert Python guy but I thought it may be
> useful for people new to mod_python. The article can be found here and I 
> hope it is helpful.
> 
> http://www.devx.com/webdev/Article/29357

I see a few problems with your Publisher example:

1. Replace AddHandler with SetHandler in your example configuration.

2. Provide the name of your published module.

3. Use a return statement instead of req.write().
From grahamd at dscpl.com.au  Wed Nov  9 17:01:29 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov  9 17:01:40 2005
Subject: [mod_python] mod_python article
Message-ID: <1131573688.29628@dscpl.user.openhosting.com>

A few comments of my own to expand on what Jorey as already
pointed out.

Jorey Bump wrote ..
> Joshua D. Drake wrote:
> > Hello,
> > 
> > I wrote a brief introduction to mod_python/psp over at DevX about a 
> > month ago. I am by no means an expert Python guy but I thought it may
> be
> > useful for people new to mod_python. The article can be found here and
> I 
> > hope it is helpful.
> > 
> > http://www.devx.com/webdev/Article/29357
> 
> I see a few problems with your Publisher example:
> 
> 1. Replace AddHandler with SetHandler in your example configuration.

Even if SetHandler is used, with the action specified in the form, the
mod_python code would need to be saved as "python/index.py".

If the name of the mod_python code file were "python/getmonth.py" then
your action would need to be "python/getmonth.py/getMonth".

It isn't clear what the name of the mod_python code file is supposed to
be, so anyone following the article may get confused.

One could still use AddHandler if it were corrected to:

  AddHandler mod_python.py

but, presuming that the mod_python code is in "python/getmonth.py"
you would also still need to change the action of the form to be
"python/getmonth.py/getMonth".

If you want to not be able to use ".py" in the URL, then you have extra
work to do to ensure that MultiViews matching in Apache is properly
configured.

> 2. Provide the name of your published module.

Is this what I described further above as far as the name of the mod_python
code file, or do you mean something else???

> 3. Use a return statement instead of req.write().

Reason for this is that if req.write() is used, your "Authors Note"
about not needing to send content type is wrong. If you use req.write()
you must set the content type. A content type is only set for you when
using mod_python.publisher when the content is returned from the
function as the result and no use of req.write() has occurred.

Even if content type were set appropriately and req.write() were used
there is an issue in mod_python.publisher <= 3.1.4 whereby not
returning anything from the function (ie., None), or even an empty
string is going to result in a HTTP 500 error being raised. As a hack
return a string with a newline in it, ie., "\n".

Thus you mod_python code becomes:

   import calendar
   def getMonth(req,month):
      req.content_type = 'text/plain'
      req.write(calendar.month(2005, int(month),2,3))
      return "\n"

or if returned as result:

  import calendar
  def getMonth(req,month):
      return calendar.month(2005, int(month),2,3)

Suggest you drop the "#!/usr/bin/python" from the mod_python'd
example as not necessary.

Graham
From list at joreybump.com  Wed Nov  9 17:36:36 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Nov  9 17:36:45 2005
Subject: [mod_python] mod_python article
In-Reply-To: <1131573688.29628@dscpl.user.openhosting.com>
References: <1131573688.29628@dscpl.user.openhosting.com>
Message-ID: <437279F4.1020506@joreybump.com>

Graham Dumpleton wrote:
> A few comments of my own to expand on what Jorey as already
> pointed out.
> 
> Jorey Bump wrote ..
> 
>>1. Replace AddHandler with SetHandler in your example configuration.
> 
> Even if SetHandler is used, with the action specified in the form, the
> mod_python code would need to be saved as "python/index.py".

Natch. I don't recommend starting off with this in a tutorial, though, 
as it's an advanced topic. Well, it's pretty simple, actually, but not 
when compared to the notion of other index.* files (index.html, 
index.php, index.pl,...). Furthermore, it's not standardized across 
versions of mod_python still in use.

> If the name of the mod_python code file were "python/getmonth.py" then
> your action would need to be "python/getmonth.py/getMonth".

Or "python/getmonth/getMonth", when using SetHandler, requiring some 
further explanation of the differences between AddHandler & SetHandler...

> It isn't clear what the name of the mod_python code file is supposed to
> be, so anyone following the article may get confused.
> 
> One could still use AddHandler if it were corrected to:
> 
>   AddHandler mod_python.py

Corrected correction:

  AddHandler mod_python .py

But the context of the article suggests he wants SetHandler:

"This means that all files under the directory will be processed by the 
mod_python handler."

> If you want to not be able to use ".py" in the URL, then you have extra
> work to do to ensure that MultiViews matching in Apache is properly
> configured.

Or just use SetHandler, of course.

>>2. Provide the name of your published module.
> 
> Is this what I described further above as far as the name of the mod_python
> code file, or do you mean something else???

Yes. I was intentionally terse, to help emphasize the karmic 
implications of each point. Using SetHandler goes a long way towards 
fixing the article, but only if the published module is named index.py. 
As you suggest, it's better to use a different file name for 
demonstration purposes.

>>3. Use a return statement instead of req.write().
> 
> Thus you mod_python code becomes:
> 
>    import calendar
>    def getMonth(req,month):
>       req.content_type = 'text/plain'
>       req.write(calendar.month(2005, int(month),2,3))
>       return "\n"
> 
> or if returned as result:
> 
>   import calendar
>   def getMonth(req,month):
>       return calendar.month(2005, int(month),2,3)

The second example is best for an introduction to Publisher. I think a 
simple Publisher tutorial is possible without exploring all of the 
pitfalls in detail, but their existence should be noted.

Joshua, are you able to revise the article? I don't think a beginner 
could get mod_python.publisher working as described. I won't comment on 
the PSP part, as I don't use it. But, your overall presentation is quite 
nice, if you can fix the errors.


From jd at commandprompt.com  Wed Nov  9 19:36:34 2005
From: jd at commandprompt.com (Joshua D. Drake)
Date: Wed Nov  9 19:32:02 2005
Subject: [mod_python] mod_python article
In-Reply-To: <437279F4.1020506@joreybump.com>
References: <1131573688.29628@dscpl.user.openhosting.com>
	<437279F4.1020506@joreybump.com>
Message-ID: <1131582994.24322.0.camel@jd.commandprompt.com>


> Joshua, are you able to revise the article? I don't think a beginner 
> could get mod_python.publisher working as described. I won't comment on 
> the PSP part, as I don't use it. But, your overall presentation is quite 
> nice, if you can fix the errors.

I could probably get it revised. I have a really good relationship with
the editor. I will review your comments and see what I can do.

Sincerely,

Joshua D. Drake


> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
The PostgreSQL Company - Command Prompt, Inc. 1.503.667.4564
PostgreSQL Replication, Consulting, Custom Development, 24x7 support
Managed Services, Shared and Dedicated Hosting
Co-Authors: plPHP, plPerlNG - http://www.commandprompt.com/

From grahamd at dscpl.com.au  Wed Nov  9 22:39:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov  9 22:39:58 2005
Subject: [mod_python] Re: [SOLVED] [Vampire] ".vampire" not loaded but I do
	not see why
Message-ID: <1131593994.24874@dscpl.user.openhosting.com>

Stephane Bortzmeyer wrote ..
> http://www.dscpl.com.au/projects/vampire/articles/vampire-002.html
> gives an example with <Directory> but does not say that it is
> *mandatory* for Vampire.

In "http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html"
it says:

  Apache can be configured to use Vampire from within a ".htaccess" file
  or the main Apache configuration file. You should first use the "SetHandler"
  directive to enable use of mod_python and then the "PythonHandler"
  directive to specify use of Vampire. The configuration settings should be
  included within a "Directory" directive if being placed in the main Apache
  configuration file.

    SetHandler python-program
    PythonHandler vampire
    PythonPath 'sys.path'

Thus it does say that the "Directory" directive should enclose its use.

In practice, the only thing that probably doesn't work if this isn't done is
the configuration file mechanism, which would thus rule out default
handlers, but other things should work.

Graham
From trepca at gmail.com  Thu Nov 10 06:11:54 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Thu Nov 10 06:11:58 2005
Subject: [mod_python] Cookie problems with mobile phones
Message-ID: <cd329af80511100311v3679fdb3w@mail.gmail.com>

Hi,

we have a problem when users access our site with mobile devices, it
seems that Cookie class has some problems with them...

Apache access log:
213.229.249.42 - - [10/Nov/2005:11:50:32 +0100] "GET / HTTP/1.1" 500
601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
Configuration/CLDC-1.1"
213.229.249.42 - - [10/Nov/2005:11:50:45 +0100] "GET / HTTP/1.1" 500
601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
Configuration/CLDC-1.1"
213.229.249.42 - - [10/Nov/2005:11:51:44 +0100] "GET / HTTP/1.1" 500
601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
Configuration/CLDC-1.1"

Apache error log:
[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
PythonHandler test.portal.handler:   File
"/usr/lib64/python2.4/site-packages/mod_python/Session.py", line 114,
in __init__\n    cookies = Cookie.get_cookies(req)
[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
PythonHandler test.portal.handler:   File
"/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 369,
in get_cookies\n    return Class.parse(cookies, **kw)
[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
PythonHandler test.portal.handler:   File
"/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 115,
in parse\n    dict = _parse_cookie(str, Class)
[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
PythonHandler test.portal.handler:   File
"/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 329,
in _parse_cookie\n    setattr(c, l_key, val)
[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
PythonHandler test.portal.handler: AttributeError: 'Cookie' object has
no attribute '$version'

Sebastjan

From bortzmeyer at nic.fr  Thu Nov 10 07:55:50 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Thu Nov 10 07:59:09 2005
Subject: [mod_python] Re: Apache2, mod_python and nss_ldap: Coredump
In-Reply-To: <9093411A-DB4E-4ECF-8503-D55E9CA760D5@stromnet.org>
References: <9093411A-DB4E-4ECF-8503-D55E9CA760D5@stromnet.org>
Message-ID: <20051110125550.GA12858@nic.fr>

On Wed, Nov 09, 2005 at 01:46:37PM +0100,
 Johan Str?m <johan@stromnet.org> wrote 
 a message of 112 lines which said:

> Im trying to have apache 2.0.55, mod_python 3.1.4 and nss_ldap 239,  
> all the latest from ports.
> The problem I have is this: If i have LoadModule python_module       
> libexec/apache2/mod_python.so in my httpd.conf, and at the same time  
> have either
> "group: files ldap" and/or "passwd: files ldap" in my nsswitch.conf,  
> i get Segfaults. Example:

The only thing I can say is that I have the same problem on
FreeBSD 5.4-RELEASE.
 
From johan at stromnet.org  Thu Nov 10 08:27:41 2005
From: johan at stromnet.org (=?ISO-8859-1?Q?Johan_Str=F6m?=)
Date: Thu Nov 10 08:27:15 2005
Subject: [mod_python] Re: Apache2, mod_python and nss_ldap: Coredump
In-Reply-To: <20051110125550.GA12858@nic.fr>
References: <9093411A-DB4E-4ECF-8503-D55E9CA760D5@stromnet.org>
	<20051110125550.GA12858@nic.fr>
Message-ID: <9525EED4-2912-41FE-9CBE-BF25E3AA4FB9@stromnet.org>

On 10 nov 2005, at 13.55, Stephane Bortzmeyer wrote:

> On Wed, Nov 09, 2005 at 01:46:37PM +0100,
>  Johan Str?m <johan@stromnet.org> wrote
>  a message of 112 lines which said:
>
>> Im trying to have apache 2.0.55, mod_python 3.1.4 and nss_ldap 239,
>> all the latest from ports.
>> The problem I have is this: If i have LoadModule python_module
>> libexec/apache2/mod_python.so in my httpd.conf, and at the same time
>> have either
>> "group: files ldap" and/or "passwd: files ldap" in my nsswitch.conf,
>> i get Segfaults. Example:
>
> The only thing I can say is that I have the same problem on
> FreeBSD 5.4-RELEASE.
>
>

Intresting... So it seems im not the only one with problems then.

CC'ing this to the freebsd-stable-list (and the correct mod_python  
mail-address.. had it wrong in the first mail to apache-users)..


From johan at stromnet.org  Thu Nov 10 08:51:23 2005
From: johan at stromnet.org (=?ISO-8859-1?Q?Johan_Str=F6m?=)
Date: Thu Nov 10 08:50:44 2005
Subject: [mod_python] Re: Apache2, mod_python and nss_ldap: Coredump...
In-Reply-To: <DF6C784E-375E-46C9-91C1-809FF7F8F2DF@stromnet.org>
References: <89E441A8-CC50-4F11-BE3E-AE6C384F5305@stromnet.org>
	<20051109232546.GP37350@green.homeunix.org>
	<DF6C784E-375E-46C9-91C1-809FF7F8F2DF@stromnet.org>
Message-ID: <EE6B4C9A-8759-4646-A97F-72E946A2FF8D@stromnet.org>

On 10 nov 2005, at 12.54, Johan Str?m wrote:

> On 10 nov 2005, at 00.25, Brian Fundakowski Feldman wrote:
>
>> On Wed, Nov 09, 2005 at 10:20:26AM +0100, Johan Str?m wrote:
>>> Hi
>>>
>>> I got a new 6.0-STABLE box. Rebuilt kernel and world 2 hours ago
>>> (against RELENG_6), so it should be pretty new.
>>>
>>> Im trying to have apache 2.0.55, mod_python 3.1.4 and nss_ldap 239,
>>> all the latest from ports.
>>> The problem I have is this: If i have LoadModule python_module
>>> libexec/apache2/mod_python.so in my httpd.conf, and at the same time
>>> have either
>>> "group: files ldap" and/or "passwd: files ldap" in my nsswitch.conf,
>>> i get Segfaults. Example:
>>>
>>> root@elfi2:~$ apachectl configtest
>>> Syntax OK
>>> Segmentation fault (core dumped)
>>> root@elfi2:~$
>>>
>>> However, apache itself is running fine, even using mod_python.
>>> If i remove either the LoadModule or both the ldap-entrys in
>>> nsswitch, the segfaults dissappear. I've compiled httpd with debug
>>> symbols, and this is what I found with gdb (httpd -t is same as
>>> apachectl configtest):
>>> [...]
>>> (gdb) where
>>> #0  0x00000000 in ?? ()
>>> #1  0x28be6744 in ?? () from /usr/local/lib/nss_ldap.so.1
>>> #2  0x28bf2200 in ?? () from /usr/local/lib/nss_ldap.so.1
>>
>> Can you try making sure that nss_ldap gets built and linked with -g,
>> and is not stripped, so that all symbols and debug info are preserved
>> as well?  Looks to be atexit(3)-related, from here, but the symbols
>> should clear things up.
>
> Hi, thanks for the answer!
> I *think* i got the nss_ldap.so to not be strip'd, at least I cant  
> find any call in the port Makefile or the sources makefile/ 
> configure stuff that would strip it. Same result as before, no new  
> symbols.. Strange? I'm compiling with -g and -O0..
>
> However, I've noticed one thing, if I run gdb httpd and then run - 
> t, I get this:
>
> root@elfi2:~$ gdb httpd
> GNU gdb 6.1.1 [FreeBSD]
> Copyright 2004 Free Software Foundation, Inc.
> GDB is free software, covered by the GNU General Public License,  
> and you are
> welcome to change it and/or distribute copies of it under certain  
> conditions.
> Type "show copying" to see the conditions.
> There is absolutely no warranty for GDB.  Type "show warranty" for  
> details.
> This GDB was configured as "i386-marcel-freebsd"...
> (gdb) run -t
> Starting program: /usr/local/sbin/httpd -t
> warning: Unable to get location for thread creation breakpoint:  
> generic error
> [New LWP 100128]
> [New Thread 0x80fa000 (LWP 100128)]
> wWarning: DocumentRoot [/usr/local/nagios/share] does not exist
> Syntax OK
> [New LWP 100128]
>
> Program received signal SIGTRAP, Trace/breakpoint trap.
> [Switching to LWP 100128]
> 0x28bce277 in pthread_testcancel () from /usr/lib/libpthread.so.2
> (gdb) where
> #0  0x28bce277 in pthread_testcancel () from /usr/lib/libpthread.so.2
> Error accessing memory address 0x28bcd7a8: Bad address.
> (gdb)
>
>
> Thats the pthread_cancel thing I was talking about before...
> However, if I do run httpd -t and then check the dump with gdb  
> httpd -c httpd.core, I get the same as first posted.
>
> Did the test over and over again, got the same pthread_cancel  
> error, reading the same memory address, re-ran httpd -t a couple of  
> times and seems I only get these pthread_cancel calls...
>
> Is there any way to check if a lib is strip'd/got debug symbols or  
> not?
>
> Thanks
> Johan

Okay, some news here then.. Thanks to David Adam I used file to  
determine if it was striped or not, seems it was.. So now I've fixed  
it, not striped anymore (the install command striped it, i missed  
that)..
New debug output then:

(gdb) where
#0  0x00000000 in ?? ()
#1  0x28bd9730 in __do_global_dtors_aux () from /usr/local/lib/ 
nss_ldap.so.1
#2  0x28be2984 in _fini () from /usr/local/lib/nss_ldap.so.1
#3  0x280b5018 in tls_dtv_generation () from /libexec/ld-elf.so.1
#4  0x280b63d8 in ?? () from /libexec/ld-elf.so.1
#5  0xbfbfe628 in ?? ()
#6  0x2809d076 in elf_hash () from /libexec/ld-elf.so.1
#7  0x2809f958 in dlclose () from /libexec/ld-elf.so.1
#8  0x284b064c in _nsdbtaddsrc () from /lib/libc.so.6
#9  0x284b020f in endhostent () from /lib/libc.so.6
#10 0x284b06cc in _nsdbtaddsrc () from /lib/libc.so.6
#11 0x284cf35f in __cxa_finalize () from /lib/libc.so.6
#12 0x284cef9a in exit () from /lib/libc.so.6
#13 0x0806b746 in destroy_and_exit_process (process=0x80a4090,  
process_exit_value=0) at main.c:216
#14 0x0806c0fe in main (argc=2, argv=0xbfbfe838) at main.c:565


(Also sent this to the other lists this thread is discussed in).

Johan


From kodixos at gmail.com  Thu Nov 10 12:30:32 2005
From: kodixos at gmail.com (Robert Wallner)
Date: Thu Nov 10 12:30:35 2005
Subject: [mod_python] Re: Cookie problems with mobile phones
In-Reply-To: <cd329af80511100311v3679fdb3w@mail.gmail.com>
References: <cd329af80511100311v3679fdb3w@mail.gmail.com>
Message-ID: <250ed040511100930t6fdd7fcp37afc0f35c9a730@mail.gmail.com>

On 11/10/05, Sebastjan Trepca <trepca@gmail.com> wrote:
> Hi,
>
> we have a problem when users access our site with mobile devices, it
> seems that Cookie class has some problems with them...
>
> Apache access log:
> 213.229.249.42 - - [10/Nov/2005:11:50:32 +0100] "GET / HTTP/1.1" 500
> 601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
> Configuration/CLDC-1.1"
> 213.229.249.42 - - [10/Nov/2005:11:50:45 +0100] "GET / HTTP/1.1" 500
> 601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
> Configuration/CLDC-1.1"
> 213.229.249.42 - - [10/Nov/2005:11:51:44 +0100] "GET / HTTP/1.1" 500
> 601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
> Configuration/CLDC-1.1"
>
> Apache error log:
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Session.py", line 114,
> in __init__\n    cookies = Cookie.get_cookies(req)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 369,
> in get_cookies\n    return Class.parse(cookies, **kw)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 115,
> in parse\n    dict = _parse_cookie(str, Class)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 329,
> in _parse_cookie\n    setattr(c, l_key, val)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler: AttributeError: 'Cookie' object has
> no attribute '$version'
>
> Sebastjan
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Hi

I have the same problem with mobile devices. Changing line 329 in
/usr/lib/python2.4/site-packages/mod_python/Cookie.py from:

if (l_key in valid or key[0] == '$'):

to:

if (l_key in valid):

seems to resolve the problem for mobile devices, while not affecting
other browsers. Still, I don't know what other side effects may this
change have, as I didn't find anything about this problem on the net.

--
Robert Wallner

From sundberg.bjorn at gmail.com  Thu Nov 10 20:01:43 2005
From: sundberg.bjorn at gmail.com (Bjorn Sundberg)
Date: Thu Nov 10 20:01:46 2005
Subject: [mod_python] multipart/x-mixed-replace
Message-ID: <a380ef360511101701s40ec6ee6w4b9ba0bfd7587844@mail.gmail.com>

Hello. I am a newcomer to both mod_python and python.
I am trying to get the multipart/x-mixed-replace to work with mod_python.
But when i am running it it will not display any text in my firefox browser.
But when looking in the "display page source" i can see the text.

Do you out there know what i am doing wrong?

Regards Bj?rn.

----Code---
#!/usr/bin/env python
import time
from mod_python import psp

def index(req):
req.content_type='multipart/x-mixed-replace;boundary=test'
req.write("---test\n")
for i in range(5):
req.content_type='text/plain'
req.write("Hello Browser")
req.write("\n--test\n")
time.sleep(1)
---End---
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051111/aa7c9c38/attachment.html
From jstubbs at work-at.co.jp  Thu Nov 10 20:07:20 2005
From: jstubbs at work-at.co.jp (Jason Stubbs)
Date: Thu Nov 10 20:07:07 2005
Subject: [mod_python] Re: Cookie problems with mobile phones
In-Reply-To: <250ed040511100930t6fdd7fcp37afc0f35c9a730@mail.gmail.com>
References: <cd329af80511100311v3679fdb3w@mail.gmail.com>
	<250ed040511100930t6fdd7fcp37afc0f35c9a730@mail.gmail.com>
Message-ID: <4373EEC8.5000805@work-at.co.jp>

Robert Wallner wrote:
> On 11/10/05, Sebastjan Trepca <trepca@gmail.com> wrote:
>>we have a problem when users access our site with mobile devices, it
>>seems that Cookie class has some problems with them...
>>
>>Apache access log:
>>213.229.249.42 - - [10/Nov/2005:11:50:32 +0100] "GET / HTTP/1.1" 500
>>601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
>>Configuration/CLDC-1.1"
>>213.229.249.42 - - [10/Nov/2005:11:50:45 +0100] "GET / HTTP/1.1" 500
>>601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
>>Configuration/CLDC-1.1"
>>213.229.249.42 - - [10/Nov/2005:11:51:44 +0100] "GET / HTTP/1.1" 500
>>601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
>>Configuration/CLDC-1.1"
>>
>>Apache error log:
>>[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
>>PythonHandler test.portal.handler:   File
>>"/usr/lib64/python2.4/site-packages/mod_python/Session.py", line 114,
>>in __init__\n    cookies = Cookie.get_cookies(req)
>>[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
>>PythonHandler test.portal.handler:   File
>>"/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 369,
>>in get_cookies\n    return Class.parse(cookies, **kw)
>>[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
>>PythonHandler test.portal.handler:   File
>>"/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 115,
>>in parse\n    dict = _parse_cookie(str, Class)
>>[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
>>PythonHandler test.portal.handler:   File
>>"/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 329,
>>in _parse_cookie\n    setattr(c, l_key, val)
>>[Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
>>PythonHandler test.portal.handler: AttributeError: 'Cookie' object has
>>no attribute '$version'
 >
> I have the same problem with mobile devices. Changing line 329 in
> /usr/lib/python2.4/site-packages/mod_python/Cookie.py from:
> 
> if (l_key in valid or key[0] == '$'):
> 
> to:
> 
> if (l_key in valid):
> 
> seems to resolve the problem for mobile devices, while not affecting
> other browsers. Still, I don't know what other side effects may this
> change have, as I didn't find anything about this problem on the net.

Not sure if it's the same in your countr(y/ies) as it is in Japan, but 
the current
available mobile phones do not support client-side cookies at all. Try 
disabling
cookies in your PC's browser and see if the same issue arises. Can't 
offer any
help other than that, but lack of support for client-side cookies is 
probably
what is triggering the bug.

--
Jason Stubbs
From grahamd at dscpl.com.au  Thu Nov 10 20:55:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Nov 10 20:55:39 2005
Subject: [mod_python] multipart/x-mixed-replace
Message-ID: <1131674133.24973@dscpl.user.openhosting.com>

You can't set req.content_type in the middle of output like that.
Use:

import time

def index(req):
  req.content_type="multipart/x-mixed-replace;boundary=test"
  req.write("--test\n")
  for i in range(5):
    req.write("Content-Type: text/plain\n")
    req.write("\n")
    req.write("Hello Browser %d\n"%i)
    req.write("--test\n")
    time.sleep(1)
  return "\n"


Note that not all browser support this form of server push. Only
Netscape derived browsers may do so. IE didn't used to and I can't
get Safari to understand it either.

Graham

Bjorn Sundberg wrote ..
> Hello. I am a newcomer to both mod_python and python.
> I am trying to get the multipart/x-mixed-replace to work with mod_python.
> But when i am running it it will not display any text in my firefox browser.
> But when looking in the "display page source" i can see the text.
> 
> Do you out there know what i am doing wrong?
> 
> Regards Bj?rn.
> 
> ----Code---
> #!/usr/bin/env python
> import time
> from mod_python import psp
> 
> def index(req):
> req.content_type='multipart/x-mixed-replace;boundary=test'
> req.write("---test\n")
> for i in range(5):
> req.content_type='text/plain'
> req.write("Hello Browser")
> req.write("\n--test\n")
> time.sleep(1)
> ---End---
From grahamd at dscpl.com.au  Thu Nov 10 21:54:39 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Nov 10 21:54:44 2005
Subject: [mod_python] Cookie problems with mobile phones
Message-ID: <1131677679.15755@dscpl.user.openhosting.com>

What version of mod_python are you using?

This issues is perhaps fixed in 3.2 beta releases. See:

  http://issues.apache.org/jira/browse/MODPYTHON-3

Can you try 3.2 beta release and see if the problem goes away?

Graham

Sebastjan Trepca wrote ..
> Hi,
> 
> we have a problem when users access our site with mobile devices, it
> seems that Cookie class has some problems with them...
> 
> Apache access log:
> 213.229.249.42 - - [10/Nov/2005:11:50:32 +0100] "GET / HTTP/1.1" 500
> 601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
> Configuration/CLDC-1.1"
> 213.229.249.42 - - [10/Nov/2005:11:50:45 +0100] "GET / HTTP/1.1" 500
> 601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
> Configuration/CLDC-1.1"
> 213.229.249.42 - - [10/Nov/2005:11:51:44 +0100] "GET / HTTP/1.1" 500
> 601 "-" "SonyEricssonZ1010/R1H SEMC-Browser/4.0.2 Profile/MIDP-2.0
> Configuration/CLDC-1.1"
> 
> Apache error log:
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Session.py", line 114,
> in __init__\n    cookies = Cookie.get_cookies(req)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 369,
> in get_cookies\n    return Class.parse(cookies, **kw)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 115,
> in parse\n    dict = _parse_cookie(str, Class)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 329,
> in _parse_cookie\n    setattr(c, l_key, val)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler: AttributeError: 'Cookie' object has
> no attribute '$version'
> 
> Sebastjan
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Thu Nov 10 22:58:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Nov 10 22:58:24 2005
Subject: [mod_python] handlers and globals
Message-ID: <1131681490.11760@dscpl.user.openhosting.com>

Use this:

     # but this doesn't...
     #rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )
     #return rc
     
     pobject = profile.Profile()
     presult = pobject.runctx('processPsp()',globals(),locals())
     presult.dump_stats("/tmp/ProfilerTest.psp.prof")

The default run() method uses globals from __main__ module and
thus why it can't find symbol.

Also need to specify absolute path for where stats are being saved
as no gaurantee as to what current working directory is when run
in the context of mod_python.

To print out stats do the following, although a single call doesn't
give you enough data for meaningful time values unless there is
something I missed.

/tmp [504]$ python
Python 2.3 (#1, Sep 13 2003, 00:49:11) 
[GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import pstats
>>> stats = pstats.Stats("/tmp/ProfilerTest.psp.prof")
>>> stats.print_stats()
Fri Nov 11 14:14:46 2005    /tmp/stats.dat

         19 function calls in 0.000 CPU seconds

   Random listing order was used

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:123(cache_get)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:60(__init__)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:74(split)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:91(__init__)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:47(isabs)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:197(isfile)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:144(getmtime)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:139(cache_store)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:403(store)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:56(join)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/stat.py:29(S_IFMT)
        1    0.000    0.000    0.000    0.000 /Users/grahamd/Sites/profiler/ProfilerTest.psp:1(?)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:186(run)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/stat.py:54(S_ISREG)
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:408(get)
        1    0.000    0.000    0.000    0.000 /Users/grahamd/Sites/profiler/profiler-handler.py:11(processPsp)
        0    0.000             0.000          profile:0(profiler)
        1    0.000    0.000    0.000    0.000 profile:0(processPsp())
        1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:159(load_from_file)
        1    0.000    0.000    0.000    0.000 <string>:1(?)


<pstats.Stats instance at 0x41d78>


Graham


Neil Gower wrote ..
> Hello,
> 
> I'm having some trouble trying to run my PSP pages through the standard
> Python profiler.  The problem appears to be that the python globals don't
> behave as the profiler expects when it is run through mod_python.
> 
> The test handler (below) works okay with the profiler when invoked from
> a 
> regular command line Python interpreter, but it raises a "NameError: name
> 'processPsp' is not defined" exception when run through mod_python.  I'm
> taking that to mean that the profiler can't find the processPsp() method
> to 
> invoke.
> 
> Can anyone offer any suggestions?  I'm stumped at this point.
> 
> Thanks!
> 
> 
> Neil.
> 
> 
> Details of my setup:
> =============================================================================
> Mod_python error: "PythonHandler profiler-handler"
> 
> Traceback (most recent call last):
> 
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299,
> in 
> HandlerDispatch
>      result = object(req)
> 
>    File "/var/profiler-test/profiler-handler.py", line 36, in handler
>      rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )
> 
>    File "/usr/lib/python2.3/profile.py", line 71, in run
>      prof = prof.run(statement)
> 
>    File "/usr/lib/python2.3/profile.py", line 403, in run
>      return self.runctx(cmd, dict, dict)
> 
>    File "/usr/lib/python2.3/profile.py", line 409, in runctx
>      exec cmd in globals, locals
> 
>    File "", line 1, in ?
> 
> NameError: name 'processPsp' is not defined
> =============================================================================
> Apache:
> 
> <Directory "/var/profiler-test">
>      Options Indexes MultiViews
>      AllowOverride None
>      Order allow,deny
>      Allow from all
> 
>      AddHandler mod_python .psp
>      PythonHandler profiler-handler
>      PythonDebug On
> </Directory>
> 
> =============================================================================
> /var/profiler-test/ProfilerTest.psp:
> 
> <p>This is a test!
> 
> <%
> req.write( "<p>So is this!" )
> %>
> 
> =============================================================================
> /var/profiler-test/profiler-handler.py:
> 
> # we have to wrap these imports in a try block to be able to run the
> # code outside of mod_python, where they will fail.
> try:
>      from mod_python import apache, psp
> except:
>      pass
> 
> import profile
> 
> 
> def processPsp():
>      """
>      A plain old method that uses global variables for the PSP
>      parameters, which makes it easy to use with the profiler.
>      """
>      theRequest.content_type = "text/html"
>      template = psp.PSP( theRequest, theTemplateFile )
>      template.run()
>      return apache.OK
> # end processPsp()
> 
> 
> def handler( req ):
>      """
>      The mod_python hook for handling a page request.
>      """
>      global theRequest
>      global theTemplateFile
>      theRequest = req
>      theTemplateFile = 'ProfilerTest.psp'
> 
>      # This works...
>      #rc = processPsp()
> 
>      # but this doesn't...
>      rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )
> 
>      return rc
> # end handler()
> 
> 
> if __name__ == '__main__':
>      try:
>          handler( None )
>      except AttributeError, e:
>          # if we actually make it into processPsp(), the null request
>          # object will cause an AttributeError.
>          print "A not unexpected error: %s" % str(e)
> # end main.
> =============================================================================
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grisha at modpython.org  Thu Nov 10 23:04:49 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Nov 10 23:04:53 2005
Subject: [mod_python] Cookie problems with mobile phones
In-Reply-To: <cd329af80511100311v3679fdb3w@mail.gmail.com>
References: <cd329af80511100311v3679fdb3w@mail.gmail.com>
Message-ID: <20051110230402.N26256@grisha.dyndns.org>


I think this was noted earlier and should be fixed in the next release.

See http://www.modpython.org/pipermail/mod_python/2005-January/017094.html

Grisha

On Thu, 10 Nov 2005, Sebastjan Trepca wrote:

> PythonHandler test.portal.handler:   File
> "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 329,
> in _parse_cookie\n    setattr(c, l_key, val)
> [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> PythonHandler test.portal.handler: AttributeError: 'Cookie' object has
> no attribute '$version'
From trepca at gmail.com  Fri Nov 11 02:59:10 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Fri Nov 11 02:59:14 2005
Subject: [mod_python] Cookie problems with mobile phones
In-Reply-To: <20051110230402.N26256@grisha.dyndns.org>
References: <cd329af80511100311v3679fdb3w@mail.gmail.com>
	<20051110230402.N26256@grisha.dyndns.org>
Message-ID: <cd329af80511102359n7cec3f46q@mail.gmail.com>

Oh, I see, missed that. Ok, will try mod_python beta.

Thanks for help

Sebastjan
On 11/11/05, Gregory (Grisha) Trubetskoy <grisha@modpython.org> wrote:
>
> I think this was noted earlier and should be fixed in the next release.
>
> See http://www.modpython.org/pipermail/mod_python/2005-January/017094.html
>
> Grisha
>
> On Thu, 10 Nov 2005, Sebastjan Trepca wrote:
>
> > PythonHandler test.portal.handler:   File
> > "/usr/lib64/python2.4/site-packages/mod_python/Cookie.py", line 329,
> > in _parse_cookie\n    setattr(c, l_key, val)
> > [Thu Nov 10 11:51:44 2005] [error] [client 213.229.249.42]
> > PythonHandler test.portal.handler: AttributeError: 'Cookie' object has
> > no attribute '$version'
>

From mmokrejs at ribosome.natur.cuni.cz  Fri Nov 11 05:45:42 2005
From: mmokrejs at ribosome.natur.cuni.cz (=?ISO-8859-2?Q?Martin_MOKREJ=A9?=)
Date: Fri Nov 11 05:45:48 2005
Subject: [mod_python] mod_python claims it cannot find a module
In-Reply-To: <1120521905.24685@dscpl.user.openhosting.com>
References: <1120521905.24685@dscpl.user.openhosting.com>
Message-ID: <43747656.3030303@ribosome.natur.cuni.cz>

Graham,
  how can I improt just a single funtion from a module (3.2.2b)?
I used to have:

import os
# from cElementTree import parse
from elementtree.ElementTree import parse
import helper_functions 
from sql_io import cField


I'd like to have:

try:
    from mod_python import apache

    _directory = os.path.dirname(__file__)
    for _my_modulename in ['helper_functions']:
        __dict__[_my_modulename] = apache.import_module(_my_modulename, path=[_directory])
except: # without raise
    import helper_functions
    from sql_io import cField # is this possible? I do not want to import the whole file.


TIA
Martin

Graham Dumpleton wrote:
> =?windows-1252?Q?Martin_MOKREJ=8A?= wrote ..
> 
>>>Because of problems with mixing "import" with the mod_python module
>>>loader, you are actually better of using:
>>>
>>>  from mod_python import apache
>>>  import os
>>>
>>>  directory = os.path.dirname(__file__)
>>>
>>>  web_settings = apache.import_module("web_settings",path=[directory])
>>>
>>>Here you are explicitly telling it which directory to get the module
>>>from and avoid all problems with things not being found in the Python
>>>module search path. You should only use this for loading in your own
>>>modules though, not standard Python modules.
>>
>>Graham, how can I fork the code so that for normal "console" use it would
>>do
>>normal import and that when running under mod_apache it would run this
>>trick?
>>I use the modules also for command-line tests and some utilities.
>>What variable should I look for in __dict__.keys()? ;-)
> 
> 
> You could use:
> 
>   try:
>     from mod_python import apache
>     directory = os.path.dirname(__file__)
>     web_settings = apache.import_module("web_settings",path=[directory])
>   except:
>     import web_settings
> 
> The import of "apache" from a command line script will fail and thus
> it will fall through to normal "import" statement for importing web_settings.
> 
> There are cleaner ways, but it gets quite complicated and the mod_python
> module importing system as implemented by apache.import_module() has
> some problems at  the moment which makes it even worse. This all might
> get solved in a future version of mod_python and at that point the cleaner
> way may be available.
> 
> Graham
> 
> 

-- 
Martin Mokrejs
Email: 'bW9rcmVqc21Acmlib3NvbWUubmF0dXIuY3VuaS5jeg==\n'.decode('base64')
GPG key is at http://www.natur.cuni.cz/~mmokrejs
From grahamd at dscpl.com.au  Fri Nov 11 06:43:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Nov 11 06:43:23 2005
Subject: [mod_python] mod_python claims it cannot find a module
In-Reply-To: <43747656.3030303@ribosome.natur.cuni.cz>
References: <1120521905.24685@dscpl.user.openhosting.com>
	<43747656.3030303@ribosome.natur.cuni.cz>
Message-ID: <A3A9E56E-3097-4656-9951-84D337F2AA71@dscpl.com.au>


On 11/11/2005, at 9:45 PM, Martin MOKREJ? wrote:

> Graham,
>   how can I improt just a single funtion from a module (3.2.2b)?
> I used to have:
>
> import os
> # from cElementTree import parse
> from elementtree.ElementTree import parse
> import helper_functions
> from sql_io import cField
>
>
> I'd like to have:
>
> try:
>     from mod_python import apache
>
>     _directory = os.path.dirname(__file__)
>     for _my_modulename in ['helper_functions']:
>         __dict__[_my_modulename] = apache.import_module 
> (_my_modulename, path=[_directory])
> except: # without raise
>     import helper_functions
>     from sql_io import cField # is this possible? I do not want to  
> import the whole file.

When using:

   from sql_io import cField

the whole file is still imported. The only difference is that references
are added into the globals of the caller only for the items listed.

Thus, presuming the sql_io module is in that same directory, the
following is equivalent:

   sql_io = apache.import_module("sql_io",path=[_directory])
   cField = sql_io.cField

Graham

> Graham Dumpleton wrote:
>
>> =?windows-1252?Q?Martin_MOKREJ=8A?= wrote ..
>>
>>
>>>> Because of problems with mixing "import" with the mod_python module
>>>> loader, you are actually better of using:
>>>>
>>>>  from mod_python import apache
>>>>  import os
>>>>
>>>>  directory = os.path.dirname(__file__)
>>>>
>>>>  web_settings = apache.import_module("web_settings",path= 
>>>> [directory])
>>>>
>>>> Here you are explicitly telling it which directory to get the  
>>>> module
>>>> from and avoid all problems with things not being found in the  
>>>> Python
>>>> module search path. You should only use this for loading in your  
>>>> own
>>>> modules though, not standard Python modules.
>>>>
>>>
>>> Graham, how can I fork the code so that for normal "console" use  
>>> it would
>>> do
>>> normal import and that when running under mod_apache it would run  
>>> this
>>> trick?
>>> I use the modules also for command-line tests and some utilities.
>>> What variable should I look for in __dict__.keys()? ;-)
>>>
>>
>>
>> You could use:
>>
>>   try:
>>     from mod_python import apache
>>     directory = os.path.dirname(__file__)
>>     web_settings = apache.import_module("web_settings",path= 
>> [directory])
>>   except:
>>     import web_settings
>>
>> The import of "apache" from a command line script will fail and thus
>> it will fall through to normal "import" statement for importing  
>> web_settings.
>>
>> There are cleaner ways, but it gets quite complicated and the  
>> mod_python
>> module importing system as implemented by apache.import_module() has
>> some problems at  the moment which makes it even worse. This all  
>> might
>> get solved in a future version of mod_python and at that point the  
>> cleaner
>> way may be available.
>>
>> Graham
>>
>>
>>
>
> -- 
> Martin Mokrejs
> Email: 'bW9rcmVqc21Acmlib3NvbWUubmF0dXIuY3VuaS5jeg==\n'.decode 
> ('base64')
> GPG key is at http://www.natur.cuni.cz/~mmokrejs
>


From ngower at dkp.com  Fri Nov 11 12:15:44 2005
From: ngower at dkp.com (Neil Gower)
Date: Fri Nov 11 12:15:51 2005
Subject: [mod_python] handlers and globals
In-Reply-To: <1131681490.11760@dscpl.user.openhosting.com>
References: <1131681490.11760@dscpl.user.openhosting.com>
Message-ID: <4374D1C0.9010700@dkp.com>

Thanks Graham!  It works like a charm.  I had totally forgotten about the 
Profile class... the downside to convenience methods I guess.  :-)

I'll see how it goes re: meaningful timing data... I expect that for slow 
enough pages the profiler will yield some useable stats, which is really what 
I'm worried about.  I think I've got some PSP pages doing some pretty heavy 
processing, hopefully now I'll have the stats to prove it.

Cheers,


Neil


Graham Dumpleton wrote:
> Use this:
> 
>      # but this doesn't...
>      #rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )
>      #return rc
>      
>      pobject = profile.Profile()
>      presult = pobject.runctx('processPsp()',globals(),locals())
>      presult.dump_stats("/tmp/ProfilerTest.psp.prof")
> 
> The default run() method uses globals from __main__ module and
> thus why it can't find symbol.
> 
> Also need to specify absolute path for where stats are being saved
> as no gaurantee as to what current working directory is when run
> in the context of mod_python.
> 
> To print out stats do the following, although a single call doesn't
> give you enough data for meaningful time values unless there is
> something I missed.
> 
> /tmp [504]$ python
> Python 2.3 (#1, Sep 13 2003, 00:49:11) 
> [GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
> Type "help", "copyright", "credits" or "license" for more information.
> 
>>>>import pstats
>>>>stats = pstats.Stats("/tmp/ProfilerTest.psp.prof")
>>>>stats.print_stats()
> 
> Fri Nov 11 14:14:46 2005    /tmp/stats.dat
> 
>          19 function calls in 0.000 CPU seconds
> 
>    Random listing order was used
> 
>    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:123(cache_get)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:60(__init__)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:74(split)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:91(__init__)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:47(isabs)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:197(isfile)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:144(getmtime)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:139(cache_store)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:403(store)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/posixpath.py:56(join)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/stat.py:29(S_IFMT)
>         1    0.000    0.000    0.000    0.000 /Users/grahamd/Sites/profiler/ProfilerTest.psp:1(?)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:186(run)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/stat.py:54(S_ISREG)
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:408(get)
>         1    0.000    0.000    0.000    0.000 /Users/grahamd/Sites/profiler/profiler-handler.py:11(processPsp)
>         0    0.000             0.000          profile:0(profiler)
>         1    0.000    0.000    0.000    0.000 profile:0(processPsp())
>         1    0.000    0.000    0.000    0.000 /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/psp.py:159(load_from_file)
>         1    0.000    0.000    0.000    0.000 <string>:1(?)
> 
> 
> <pstats.Stats instance at 0x41d78>
> 
> 
> Graham
> 
> 
> Neil Gower wrote ..
> 
>>Hello,
>>
>>I'm having some trouble trying to run my PSP pages through the standard
>>Python profiler.  The problem appears to be that the python globals don't
>>behave as the profiler expects when it is run through mod_python.
>>
>>The test handler (below) works okay with the profiler when invoked from
>>a 
>>regular command line Python interpreter, but it raises a "NameError: name
>>'processPsp' is not defined" exception when run through mod_python.  I'm
>>taking that to mean that the profiler can't find the processPsp() method
>>to 
>>invoke.
>>
>>Can anyone offer any suggestions?  I'm stumped at this point.
>>
>>Thanks!
>>
>>
>>Neil.
>>
>>
>>Details of my setup:
>>=============================================================================
>>Mod_python error: "PythonHandler profiler-handler"
>>
>>Traceback (most recent call last):
>>
>>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299,
>>in 
>>HandlerDispatch
>>     result = object(req)
>>
>>   File "/var/profiler-test/profiler-handler.py", line 36, in handler
>>     rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )
>>
>>   File "/usr/lib/python2.3/profile.py", line 71, in run
>>     prof = prof.run(statement)
>>
>>   File "/usr/lib/python2.3/profile.py", line 403, in run
>>     return self.runctx(cmd, dict, dict)
>>
>>   File "/usr/lib/python2.3/profile.py", line 409, in runctx
>>     exec cmd in globals, locals
>>
>>   File "", line 1, in ?
>>
>>NameError: name 'processPsp' is not defined
>>=============================================================================
>>Apache:
>>
>><Directory "/var/profiler-test">
>>     Options Indexes MultiViews
>>     AllowOverride None
>>     Order allow,deny
>>     Allow from all
>>
>>     AddHandler mod_python .psp
>>     PythonHandler profiler-handler
>>     PythonDebug On
>></Directory>
>>
>>=============================================================================
>>/var/profiler-test/ProfilerTest.psp:
>>
>><p>This is a test!
>>
>><%
>>req.write( "<p>So is this!" )
>>%>
>>
>>=============================================================================
>>/var/profiler-test/profiler-handler.py:
>>
>># we have to wrap these imports in a try block to be able to run the
>># code outside of mod_python, where they will fail.
>>try:
>>     from mod_python import apache, psp
>>except:
>>     pass
>>
>>import profile
>>
>>
>>def processPsp():
>>     """
>>     A plain old method that uses global variables for the PSP
>>     parameters, which makes it easy to use with the profiler.
>>     """
>>     theRequest.content_type = "text/html"
>>     template = psp.PSP( theRequest, theTemplateFile )
>>     template.run()
>>     return apache.OK
>># end processPsp()
>>
>>
>>def handler( req ):
>>     """
>>     The mod_python hook for handling a page request.
>>     """
>>     global theRequest
>>     global theTemplateFile
>>     theRequest = req
>>     theTemplateFile = 'ProfilerTest.psp'
>>
>>     # This works...
>>     #rc = processPsp()
>>
>>     # but this doesn't...
>>     rc = profile.run( 'processPsp()', 'ProfilerTest.psp.prof' )
>>
>>     return rc
>># end handler()
>>
>>
>>if __name__ == '__main__':
>>     try:
>>         handler( None )
>>     except AttributeError, e:
>>         # if we actually make it into processPsp(), the null request
>>         # object will cause an AttributeError.
>>         print "A not unexpected error: %s" % str(e)
>># end main.
>>=============================================================================
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
From woodsman at gmail.com  Fri Nov 11 16:29:14 2005
From: woodsman at gmail.com (Brandon N)
Date: Fri Nov 11 16:29:17 2005
Subject: [mod_python] Vampire ErrorDocument
Message-ID: <e3a291250511111329j1e3c0970v526aa4dc3924fd6@mail.gmail.com>

Ive had some good luck coming to terms with Apache/mod_python/Vampire but
I've run into a snag.

How does one setup an "ErrorDocument 404 /404.py" with a Vampire/mod_python
file? All my attempts (basically the first tutorial handler_html etc) are
met with:

The requested URL /something.html was not found on this server.

Additionally, a 403 Forbidden error was encountered while trying to use an
ErrorDocument to handle the request.

Any ideas?

Thanks in advance,
Brandon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051111/694622d0/attachment.html
From grahamd at dscpl.com.au  Fri Nov 11 22:47:39 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Nov 11 22:48:04 2005
Subject: [mod_python] Vampire ErrorDocument
In-Reply-To: <e3a291250511111329j1e3c0970v526aa4dc3924fd6@mail.gmail.com>
References: <e3a291250511111329j1e3c0970v526aa4dc3924fd6@mail.gmail.com>
Message-ID: <B3839B05-2F0A-4F21-8905-B20D3DBEA6FA@dscpl.com.au>


On 12/11/2005, at 8:29 AM, Brandon N wrote:

> Ive had some good luck coming to terms with Apache/mod_python/ 
> Vampire but I've run into a snag.
>
> How does one setup an "ErrorDocument 404 /404.py" with a Vampire/ 
> mod_python file? All my attempts (basically the first tutorial  
> handler_html etc) are met with:
> The requested URL /something.html was not found on this server.
>
> Additionally, a 403 Forbidden error was encountered while trying to  
> use an ErrorDocument to handle the request.
>
> Any ideas?
Vampire imposes the ideal that URLs should never use a .py extension,  
thereby
ensuring that the fact that Python is being used isn't obvious. This  
extends to
internally redirected URLs such as that specified for ErrorDocument.  
Thus, for
starters don't specify "/404.py" as the target URL for ErrorDocument.

For an error document call "404.py" containing:

   from mod_python import apache

   def handler(req):
     req.status = apache.HTTP_NOT_FOUND
     req.content_type = 'text/html'
     req.write("<html><body><p>NOT FOUND</p></body></html>")
     return apache.DONE

Use an Apache configuration of:

   Options -MultiViews
   ErrorDocument 404 /~grahamd/vampire/404

Ie., no extension on ErrorDocument URL, so handler function is called  
"handler()".
Adjust actual location component of URL as appropriate.

Note that in this case it is extra important that the Apache  
MultiViews options is
disabled. It is recommended that this be disabled whenever using  
Vampire anyway,
or at least when you want URLs with no extension.

Alternatively, instead of calling it "handler()", call it  
"handler_html()" and use:

   ErrorDocument 404 /~grahamd/vampire/404.html

Presuming that is that it returns HTML, else it wouldn't really make  
sense to use that
extension.

BTW, have explicitly set req.status, but this is probably not  
actually required as
Apache knows it is a 404 error already and has therefore set it. I  
have returned
apache.DONE instead of apache.OK just to ensure no extra phases are  
somehow
executed after the handler is executed to serve up the error document.

Anyway, see how that goes.

Graham

From jumadaru at gmail.com  Sat Nov 12 16:14:23 2005
From: jumadaru at gmail.com (Juan Manuel Dato)
Date: Sat Nov 12 16:14:27 2005
Subject: [mod_python] a novice problem
Message-ID: <26690f500511121314p76f0edd3u36a6c89656076654@mail.gmail.com>

Hello, I'm a Spanish user and I had done an innovation with Python.
I'm not so good in the manage of the nets, so I have some troubles:
 1. When I install Apache I cannot attach it with my domain name, but yes
with localhost; do I need install a Java Virtual Machine for my PC to get a
ficticial net?
2. If I have only one PC, can I init a session from itself (variables
session for web)? I cannot do it, is my Apache configuration bad?
3. If I make an innovation (in informatic) that can save lifes, how I can
ensure nobody will steal the method hiding the only one way to program it?
 Apologies if it is too easy to respond, but whoever I know... I need help.
Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051112/376a6ae6/attachment.html
From jd at commandprompt.com  Sun Nov 13 14:01:52 2005
From: jd at commandprompt.com (Joshua D. Drake)
Date: Sun Nov 13 14:02:07 2005
Subject: [mod_python] a novice problem
In-Reply-To: <26690f500511121314p76f0edd3u36a6c89656076654@mail.gmail.com>
References: <26690f500511121314p76f0edd3u36a6c89656076654@mail.gmail.com>
Message-ID: <43778DA0.9010506@commandprompt.com>

Juan Manuel Dato wrote:

> Hello, I'm a Spanish user and I had done an innovation with Python.
> I'm not so good in the manage of the nets, so I have some troubles:
>  
> 1. When I install Apache I cannot attach it with my domain name, but 
> yes with localhost; do I need install a Java Virtual Machine for my PC 
> to get a ficticial net?

You do not need Java to run Python or Apache. I would strongly suggest 
reviewing the Apache Documentation. Specifically:

http://httpd.apache.org/docs/2.0/vhosts/

> 2. If I have only one PC, can I init a session from itself (variables 
> session for web)? I cannot do it, is my Apache configuration bad?

I am not sure what you mean here. Do you mean can you use a single 
machine for testing? Then yes.

> 3. If I make an innovation (in informatic) that can save lifes, how 
> I can ensure nobody will steal the method hiding the only one way to 
> program it?

You can't. You can make it harder, but not impossible by any means. I 
would suggest looking at:

http://www.lysator.liu.se/~astrand/projects/pyobfuscate/

Sincerely,

Joshua D. Drake


>  
> Apologies if it is too easy to respond, but whoever I know... I need help.
> Thanks.
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>


-- 
The PostgreSQL Company - Command Prompt, Inc. 1.503.667.4564
PostgreSQL Replication, Consulting, Custom Development, 24x7 support
Managed Services, Shared and Dedicated Hosting
Co-Authors: plPHP, plPerlNG - http://www.commandprompt.com/

From jpg at jgassociates.ca  Mon Nov 14 08:34:45 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Nov 14 08:34:54 2005
Subject: [mod_python] next beta
Message-ID: <43789275.7060008@jgassociates.ca>

It looks like Nicolas was very busy on the weekend cleaning up remaining 
issues.  Has Alexis had a chance to test the new upload code?

Are there any objections to creating a 3.2.5 beta today?

Jim
From amarrero at mitre.org  Mon Nov 14 09:02:08 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Mon Nov 14 09:02:14 2005
Subject: [mod_python] Re: next beta
In-Reply-To: <43789275.7060008@jgassociates.ca>
References: <43789275.7060008@jgassociates.ca>
Message-ID: <1CFED96A-0963-40CB-B8FE-ADBFAD8DDDDA@mitre.org>

I did try the code and worked fine for my test file set (~55000 files).

Like I stated in a previous email I made some changes based on Mike's  
concern about performance.

So my last version of the function was, I tested it tih my file set  
and it passed all my tests.

def read_to_boundary_new(self, req, boundary, file):
     previous_delimiter = ''
     bound_length = len(boundary)
     while 1:
         line = req.readline(readBlockSize)
         if line[:bound_length] == boundary:
             break

         if line[-2:] == '\r\n':
             file.write(previous_delimiter + line[:-2])
             previous_delimiter = '\r\n'

         elif line[-1:] == '\r':
             file.write(previous_delimiter + line[:-1])
             previous_delimiter = '\r'

         elif line[-1:] == '\n':
             if len(line[:-1]) > 0:
                 file.write(previous_delimiter + line[:-1])
                 previous_delimiter = '\n'

             else:
                 previous_delimiter += '\n'

         else:
             file.write(previous_delimiter + line)
             previous_delimiter = ''

/amn
On Nov 14, 2005, at 8:34 AM, Jim Gallacher wrote:

> It looks like Nicolas was very busy on the weekend cleaning up  
> remaining issues.  Has Alexis had a chance to test the new upload  
> code?
>
> Are there any objections to creating a 3.2.5 beta today?
>
> Jim

From nicolas.lehuen at gmail.com  Mon Nov 14 10:08:31 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon Nov 14 10:08:35 2005
Subject: [mod_python] Re: next beta
In-Reply-To: <1CFED96A-0963-40CB-B8FE-ADBFAD8DDDDA@mitre.org>
References: <43789275.7060008@jgassociates.ca>
	<1CFED96A-0963-40CB-B8FE-ADBFAD8DDDDA@mitre.org>
Message-ID: <c298f2d70511140708t314aab99s@mail.gmail.com>

Alexis, sorry but this is not the latest version. I've made some
changes to your version with the hope of simplifying the source code
and documenting it. Could you please try the version you'll find at :

http://svn.apache.org/viewcvs.cgi/httpd/mod_python/trunk/lib/python/mod_python/util.py?rev=332779&view=markup

Be sure to use the whole file, and not just read_to_boundary. Indeed,
I've introduced some changes in FieldStorage.__init__ that will be
required by read_to_boundary.

Thanks,
Nicolas

2005/11/14, Alexis Marrero <amarrero@mitre.org>:
> I did try the code and worked fine for my test file set (~55000 files).
>
> Like I stated in a previous email I made some changes based on Mike's
> concern about performance.
>
> So my last version of the function was, I tested it tih my file set
> and it passed all my tests.
>
> def read_to_boundary_new(self, req, boundary, file):
>      previous_delimiter = ''
>      bound_length = len(boundary)
>      while 1:
>          line = req.readline(readBlockSize)
>          if line[:bound_length] == boundary:
>              break
>
>          if line[-2:] == '\r\n':
>              file.write(previous_delimiter + line[:-2])
>              previous_delimiter = '\r\n'
>
>          elif line[-1:] == '\r':
>              file.write(previous_delimiter + line[:-1])
>              previous_delimiter = '\r'
>
>          elif line[-1:] == '\n':
>              if len(line[:-1]) > 0:
>                  file.write(previous_delimiter + line[:-1])
>                  previous_delimiter = '\n'
>
>              else:
>                  previous_delimiter += '\n'
>
>          else:
>              file.write(previous_delimiter + line)
>              previous_delimiter = ''
>
> /amn
> On Nov 14, 2005, at 8:34 AM, Jim Gallacher wrote:
>
> > It looks like Nicolas was very busy on the weekend cleaning up
> > remaining issues.  Has Alexis had a chance to test the new upload
> > code?
> >
> > Are there any objections to creating a 3.2.5 beta today?
> >
> > Jim
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From amarrero at mitre.org  Mon Nov 14 12:07:18 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Mon Nov 14 12:07:23 2005
Subject: [mod_python] Re: next beta
In-Reply-To: <c298f2d70511140708t314aab99s@mail.gmail.com>
References: <43789275.7060008@jgassociates.ca>
	<1CFED96A-0963-40CB-B8FE-ADBFAD8DDDDA@mitre.org>
	<c298f2d70511140708t314aab99s@mail.gmail.com>
Message-ID: <D5B87760-5913-489C-8570-B6AD656EA199@mitre.org>

Nicholas,

Just finish testing with couple of hundred files and is working "AS  
SEEN ON TV".  Thanks for commenting the code.

/amn
On Nov 14, 2005, at 10:08 AM, Nicolas Lehuen wrote:

> Alexis, sorry but this is not the latest version. I've made some
> changes to your version with the hope of simplifying the source code
> and documenting it. Could you please try the version you'll find at :
>
> http://svn.apache.org/viewcvs.cgi/httpd/mod_python/trunk/lib/python/ 
> mod_python/util.py?rev=332779&view=markup
>
> Be sure to use the whole file, and not just read_to_boundary. Indeed,
> I've introduced some changes in FieldStorage.__init__ that will be
> required by read_to_boundary.
>
> Thanks,
> Nicolas
>
> 2005/11/14, Alexis Marrero <amarrero@mitre.org>:
>> I did try the code and worked fine for my test file set (~55000  
>> files).
>>
>> Like I stated in a previous email I made some changes based on Mike's
>> concern about performance.
>>
>> So my last version of the function was, I tested it tih my file set
>> and it passed all my tests.
>>
>> def read_to_boundary_new(self, req, boundary, file):
>>      previous_delimiter = ''
>>      bound_length = len(boundary)
>>      while 1:
>>          line = req.readline(readBlockSize)
>>          if line[:bound_length] == boundary:
>>              break
>>
>>          if line[-2:] == '\r\n':
>>              file.write(previous_delimiter + line[:-2])
>>              previous_delimiter = '\r\n'
>>
>>          elif line[-1:] == '\r':
>>              file.write(previous_delimiter + line[:-1])
>>              previous_delimiter = '\r'
>>
>>          elif line[-1:] == '\n':
>>              if len(line[:-1]) > 0:
>>                  file.write(previous_delimiter + line[:-1])
>>                  previous_delimiter = '\n'
>>
>>              else:
>>                  previous_delimiter += '\n'
>>
>>          else:
>>              file.write(previous_delimiter + line)
>>              previous_delimiter = ''
>>
>> /amn
>> On Nov 14, 2005, at 8:34 AM, Jim Gallacher wrote:
>>
>>> It looks like Nicolas was very busy on the weekend cleaning up
>>> remaining issues.  Has Alexis had a chance to test the new upload
>>> code?
>>>
>>> Are there any objections to creating a 3.2.5 beta today?
>>>
>>> Jim
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From waitman at waitman.net  Mon Nov 14 12:30:56 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 12:30:58 2005
Subject: [mod_python] capturing and handling python errors in mod_python
Message-ID: <4681.69.181.250.18.1131989456.squirrel@mail.emkhost.com>


Hello,

I am new to mod_python and am interested in catching python errors with a
default error handler.

For example, http://pyblog.com/index/causeanerror


def causeanerror(req):
    asdlkfj



would not barf on the user, it would send the error to my error function
or something.


<Directory "/home/wwweb/pyblog/htdocs">
    SetHandler mod_python
    PythonHandler mod_python.publisher
    PythonDebug On
    Options none
    AllowOverride none
    Order allow,deny
    Allow from all
    <Files ~ "\.(gif|jpe?g|png|html?|css|js)$">
        SetHandler None
    </Files>
    <Files *.pyc>
        Deny from all
    </Files>
</Directory>



Interestingly, if I do a

# HEAD http://pyblog.com/

I receive:

405 Method Not Allowed
Connection: close
Date: Mon, 14 Nov 2005 17:23:42 GMT
Server: Apache/2.0.55 (Unix) mod_ssl/2.0.55 OpenSSL/0.9.8a PHP/4.4.1
mod_python/3.1.4 Python/2.4.2
Allow: GET,HEAD,POST,TRACE
Content-Type: text/html; charset=iso-8859-1
Client-Date: Mon, 14 Nov 2005 17:23:42 GMT
Client-Peer: 6.13.7.17.5:80
Client-Response-Num: 1

<?> Why does a HEAD request return a 405 but "Allow:" says "HEAD" is cool?


If I do a

# GET -s http://pyblog.com/

that works returning a 200


if I do a

# GET -s http://pyblog.com/index/causeanerror

it ALSO returns a status code of 200 OK with the python error. So catching
it in apache (presuming that mod_python would return a 500 error -
wouldn't that be nice?) with ErrorDocument doesn't seem likely to function
properly.


I appreciate your comments and suggestions.

Bye,

Waitman




-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From waitman at waitman.net  Mon Nov 14 14:00:44 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 14:00:50 2005
Subject: [mod_python] capturing and handling python errors in mod_python
In-Reply-To: <4681.69.181.250.18.1131989456.squirrel@mail.emkhost.com>
References: <4681.69.181.250.18.1131989456.squirrel@mail.emkhost.com>
Message-ID: <1185.69.181.250.18.1131994844.squirrel@mail.emkhost.com>


A few more comments.

If I use PythonDebug Off then the errors still go to the client anyhow.
Reading the doc leads me to believe that this isn't what should be
expected.

If I Use PythonLogHandler (conf example below) then I might be able to
catch uncaught exceptions, but I can't figure out how to obliterate
anything outgoing located in the request object. Writing to it appends, is
there a way to totally empty or replace the buffer?

I tried something like

http://pyblog.com/doit/good

def good(req):
    req.proposed_output="THIS IS IT"
    return ""

and
http://pyblog.com/doit/naughty

def naughty(req):
    awelkfjawlkefjaklwejf


then my logging function in log.py

def logger(req):
    the_content="ERROR!"
    try:
        if (req.proposed_content!=""):
            the_content=req.proposed_content
        else:
            the_content="It can't happen here"
    finally:
        req.write(the_content)
    return apache.OK



<?> one thing I've noticed is that ALL requests go to PythonLogHandler
regardless of my "Files SetHandler None" directive."

If I put
    file = open("/home/wwweb/pyblog/log/output.txt", "at")
    file.write(str(req.the_request)+"\t"+str(req.status)+"\n");
    file.close()

in my index.py then I get this in output.txt

GET / HTTP/1.1  200
GET / HTTP/1.1  200
GET / HTTP/1.1  200



if I put the same thing in log.py then I get this stuff:

GET / HTTP/1.1  200
GET /css/548xAF.css HTTP/1.1    304
GET /images/pyblog.png HTTP/1.1 304

Why are the requests for PNG, CSS etc going to log.py???


        <Directory "/home/wwweb/pyblog/htdocs">
            SetHandler mod_python
            PythonHandler mod_python.publisher
            PythonDebug Off
            PythonLogHandler log::logger
            Options none
            AllowOverride none
            Allow from all
                <Files ~ "\.(gif|jpe?g|png|html?|css|js)$">
                        SetHandler None
                </Files>
                <Files *.pyc>
                        Deny from all
                </Files>
        </Directory>

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From waitman at waitman.net  Mon Nov 14 14:23:27 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 14:23:30 2005
Subject: [mod_python] capturing and handling python errors in mod_python
In-Reply-To: <1185.69.181.250.18.1131994844.squirrel@mail.emkhost.com>
References: <4681.69.181.250.18.1131989456.squirrel@mail.emkhost.com>
	<1185.69.181.250.18.1131994844.squirrel@mail.emkhost.com>
Message-ID: <3656.69.181.250.18.1131996207.squirrel@mail.emkhost.com>



Ok, I think I get the gist of the 405 thing a little.

When I do "PythonHandler mod_python.publisher" in httpd.conf I am telling
it to use the publisher.py (in the lib of the source download). At least
this is my guess :-)

I am new to this, so I suppose I didn't understand before. But it looks
like I really shouldn't be writing to the request object (*if*) I am going
to use the mod_python.publisher. All I should do is return something
interesting from my functions. I am beginning to understand how
publisher.py works a bit better now.

from publisher.py

def handler(req):

    req.allow_methods(["GET", "POST"])
    if req.method not in ["GET", "POST"]:
        raise apache.SERVER_RETURN, apache.HTTP_METHOD_NOT_ALLOWED


So that is why I am getting a 405 on HEAD requests. I really like to do
HEAD requests and I have a feeling that search engine spiders like that
sort of activity as well.  Maybe publisher.py should allow it? Does anyone
know why this method was forbidden?



-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From waitman at waitman.net  Mon Nov 14 14:30:08 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 14:30:13 2005
Subject: [mod_python] capturing and handling python errors in mod_python
In-Reply-To: <3656.69.181.250.18.1131996207.squirrel@mail.emkhost.com>
References: <4681.69.181.250.18.1131989456.squirrel@mail.emkhost.com>   
	<1185.69.181.250.18.1131994844.squirrel@mail.emkhost.com>
	<3656.69.181.250.18.1131996207.squirrel@mail.emkhost.com>
Message-ID: <2197.69.181.250.18.1131996608.squirrel@mail.emkhost.com>


Changing publisher.py as follows:

def handler(req):

    req.allow_methods(["GET", "POST","HEAD"])
    if req.method not in ["GET", "POST", "HEAD"]:
        raise apache.SERVER_RETURN, apache.HTTP_METHOD_NOT_ALLOWED

(added "HEAD" to two lines)

seems to allow proper HEAD requests:

# HEAD http://pyblog.com/index/d
404 Not Found

# HEAD http://pyblog.com/doit/naughty
200 OK

# HEAD http://pyblog.com/doit/good
500 Internal Server Error

If you know why HEAD should be forbidden, let me know.

I'd still like to catch uncaught exceptions somehow.

Thank you,

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From audiotap77004 at hotmail.com  Mon Nov 14 14:31:16 2005
From: audiotap77004 at hotmail.com (Justin Olmanson)
Date: Mon Nov 14 14:31:20 2005
Subject: [mod_python] Trying to greet the world -trouble getting the .py
	&/or .psp files to function
Message-ID: <BAY104-F20F61DADFF07ED3FD2FBD0E85A0@phx.gbl>

Hi,

I've just started work on a new project and thought that python might be 
better for it than php... to that end I've started reading up on it and 
mod_python. In the spirit of learning by doing I've attempted to try out 
Gregory Trubetskoy's example scripts in his Introduction to Mod_Python...

I'm having some difficulty getting the .py &/or .psp files to function from 
the browser.

I've added the User defined handlers (via my host's control panel):

.psp     mod_python
.py      mod_python

but I'm not able to get the pages served correctly.
My internet host provider assures me that mod_python is setup correctly.

Here's the test page URL (with code snippets):

http://test.audiotap.com/

the mod_python links test the following:
try 1 - the file
try 2 - the file plus the function
try 3 - the file plus the function plus a value

the python server pages test the following:
try 1 - the file
try 2 - the file plus the function
try 3 - the file plus the function plus a value


thoughts?



thanks,

justin




Takk for naa, og hils til alle :)

          Justin Olmanson


From waitman at waitman.net  Mon Nov 14 14:50:21 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 14:50:25 2005
Subject: [mod_python] Trying to greet the world -trouble getting the 
	.py &/or .psp files to function
In-Reply-To: <BAY104-F20F61DADFF07ED3FD2FBD0E85A0@phx.gbl>
References: <BAY104-F20F61DADFF07ED3FD2FBD0E85A0@phx.gbl>
Message-ID: <4509.69.181.250.18.1131997821.squirrel@mail.emkhost.com>


Hello

the hi.py example is likely meant to be used with mod_python.publisher. my
guess.

http://test.audiotap.com/hi.py

otherwise you need to play with the request object.


(with mod_python.publisher)

def hello():
    return "howdy"


(without mod_python.publisher)

from mod_python import apache

def handler(req):

    req.content_type = "text/html"
    req.write("I am Alive")
    return apache.OK




your hi.py script doesn't seem to be going through mod_python. not sure
what you are doing in your control panel thingy.

Here is an example mod_python setup that seems to function:

        <Directory "/home/wwweb/pyblog/htdocs">
            SetHandler mod_python
            PythonHandler mod_python.publisher
            Options none
            AllowOverride none
            Allow from all
            <Files ~ "\.(gif|jpe?g|png|html?|css|js)$">
                SetHandler None
            </Files>
            <Files *.pyc>
                Deny from all
            </Files>
        </Directory>


But if you wanted to just send everything to your python script without
using mod_python.publisher:

Change PythonHandler to "myscript" (*myscript.py*)

If you want to associate .py files to "python" you would do something
_like_ this

AddHandler cgi-script .py
Options +ExecCGI


(first line of your cgi script would be the shebang)










> but I'm not able to get the pages served correctly.
> My internet host provider assures me that mod_python is setup correctly.
>
> thoughts?

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From waitman at waitman.net  Mon Nov 14 15:36:25 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 15:36:29 2005
Subject: [mod_python] capturing and handling python errors in mod_python
In-Reply-To: <1185.69.181.250.18.1131994844.squirrel@mail.emkhost.com>
References: <4681.69.181.250.18.1131989456.squirrel@mail.emkhost.com>
	<1185.69.181.250.18.1131994844.squirrel@mail.emkhost.com>
Message-ID: <1252.69.181.250.18.1132000585.squirrel@mail.emkhost.com>


Ok, tracked this issue down. If "PythonDebug On" is outside of a
<VirtualHost>, ie it is global then "PythonDebug Off" doesn't work inside
the VirtualHost. Apparently I put that bit in httpd.conf back when I was
trying to get mod_python to work. :-)


> If I use PythonDebug Off then the errors still go to the client anyhow.
> Reading the doc leads me to believe that this isn't what should be
> expected.


-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From grahamd at dscpl.com.au  Mon Nov 14 16:35:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Nov 14 16:35:35 2005
Subject: [mod_python] capturing and handling python errors in mod_python
Message-ID: <1132004133.14679@dscpl.user.openhosting.com>

FYI, support of HEAD has already been incorporated into upcoming
mod_python 3.2 release.

Waitman Gobble wrote ..
> 
> Changing publisher.py as follows:
> 
> def handler(req):
> 
>     req.allow_methods(["GET", "POST","HEAD"])
>     if req.method not in ["GET", "POST", "HEAD"]:
>         raise apache.SERVER_RETURN, apache.HTTP_METHOD_NOT_ALLOWED
> 
> (added "HEAD" to two lines)
> 
> seems to allow proper HEAD requests:
> 
> # HEAD http://pyblog.com/index/d
> 404 Not Found
> 
> # HEAD http://pyblog.com/doit/naughty
> 200 OK
> 
> # HEAD http://pyblog.com/doit/good
> 500 Internal Server Error
> 
> If you know why HEAD should be forbidden, let me know.
> 
> I'd still like to catch uncaught exceptions somehow.
> 
> Thank you,
> 
> -- 
> Waitman Gobble
> http://waitman.net/
> (707) 237-6921
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From waitman at waitman.net  Mon Nov 14 16:48:27 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 16:48:31 2005
Subject: [mod_python] capturing and handling python errors in mod_python
In-Reply-To: <1132004133.14679@dscpl.user.openhosting.com>
References: <1132004133.14679@dscpl.user.openhosting.com>
Message-ID: <1679.4.243.176.234.1132004907.squirrel@mail.emkhost.com>


Thank you.

I am guessing that the stuff returned by the server (when you just add
HEAD to the list of allowable requests like I did) isn't very accurate.
Content-length, etc. Haven't dug into it yet. Looking forward to the next
release. Maybe I should run a CVS install of mod_python somewhere for
tinkering.





> FYI, support of HEAD has already been incorporated into upcoming
> mod_python 3.2 release.
>
>

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From grahamd at dscpl.com.au  Mon Nov 14 16:52:23 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Nov 14 16:52:26 2005
Subject: [mod_python] capturing and handling python errors in mod_python
Message-ID: <1132005143.25570@dscpl.user.openhosting.com>

Waitman Gobble wrote ..
> <?> one thing I've noticed is that ALL requests go to PythonLogHandler
> regardless of my "Files SetHandler None" directive."
> 
> If I put
>     file = open("/home/wwweb/pyblog/log/output.txt", "at")
>     file.write(str(req.the_request)+"\t"+str(req.status)+"\n");
>     file.close()
> 
> in my index.py then I get this in output.txt
> 
> GET / HTTP/1.1  200
> GET / HTTP/1.1  200
> GET / HTTP/1.1  200
> 
> 
> 
> if I put the same thing in log.py then I get this stuff:
> 
> GET / HTTP/1.1  200
> GET /css/548xAF.css HTTP/1.1    304
> GET /images/pyblog.png HTTP/1.1 304
> 
> Why are the requests for PNG, CSS etc going to log.py???
> 
> 
>         <Directory "/home/wwweb/pyblog/htdocs">
>             SetHandler mod_python
>             PythonHandler mod_python.publisher
>             PythonDebug Off
>             PythonLogHandler log::logger
>             Options none
>             AllowOverride none
>             Allow from all
>                 <Files ~ "\.(gif|jpe?g|png|html?|css|js)$">
>                         SetHandler None
>                 </Files>
>                 <Files *.pyc>
>                         Deny from all
>                 </Files>
>         </Directory>

The SetHandler/AddHandler directives only control for what situations
the handler specified by the PythonHandler directive is called. If
SetHandler/AddHandler are not used then PythonHandler will not be
called at all.

At the same time though, even if SetHandler/AddHandler isn't defined,
all other handlers which can be specified using the Python*Handler
directives are still called.

Thus, even if mod_python is not used to produce the actual content for
a response, any specified authentication, access, log handlers etc, will
still be called.

Graham
From grahamd at dscpl.com.au  Mon Nov 14 16:56:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Nov 14 16:56:55 2005
Subject: [mod_python] capturing and handling python errors in mod_python
Message-ID: <1132005414.28302@dscpl.user.openhosting.com>

The CVS version of mod_python is old and shouldn't be used. Source code
is now kept in subversion. The next beta tar ball of mod_python is being
produced as we speak. It is 3.2.5b and can be picked up from:

  http://www.modpython.org/dist/

Graham

Waitman Gobble wrote ..
> 
> Thank you.
> 
> I am guessing that the stuff returned by the server (when you just add
> HEAD to the list of allowable requests like I did) isn't very accurate.
> Content-length, etc. Haven't dug into it yet. Looking forward to the next
> release. Maybe I should run a CVS install of mod_python somewhere for
> tinkering.
> 
> 
> 
> 
> 
> > FYI, support of HEAD has already been incorporated into upcoming
> > mod_python 3.2 release.
> >
> >
> 
> -- 
> Waitman Gobble
> http://waitman.net/
> (707) 237-6921
From waitman at waitman.net  Mon Nov 14 16:59:39 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 16:59:41 2005
Subject: [mod_python] capturing and handling python errors in mod_python
In-Reply-To: <1132005143.25570@dscpl.user.openhosting.com>
References: <1132005143.25570@dscpl.user.openhosting.com>
Message-ID: <1690.4.243.176.234.1132005579.squirrel@mail.emkhost.com>


Hey Graham,

Thanks for the reply.

I think I figured out most of my issues. I had some mod_python config
directives in a global context in httpd.conf. The first time I tried to
get it going I put some stuff outside my VirtualHost directive. Apparently
this can cause wierd and unexpected, or maybe even normal and expected,
things to happen inside the VirtualHost config. In my case it was an
*oops*

I don't think that every request should go through the Logging thingy with
the (files exclusion) in my example. It looks like I created that
behaviour with the global defines. After the Global config stuff was
removed then it stopped logging the image, css requests in my log.py
script. at least it looks that way at the moment :-)



-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From waitman at waitman.net  Mon Nov 14 17:02:15 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Mon Nov 14 17:02:18 2005
Subject: [mod_python] capturing and handling python errors in mod_python
In-Reply-To: <1132005414.28302@dscpl.user.openhosting.com>
References: <1132005414.28302@dscpl.user.openhosting.com>
Message-ID: <1692.4.243.176.234.1132005735.squirrel@mail.emkhost.com>


Thanks! I spoke hmmm typed too soon. Don't you love hate it when somebody
hops right into the middle of a project and starts pushing all the
buttons.


> The CVS version of mod_python is old and shouldn't be used. Source code
> is now kept in subversion.

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From sundberg.bjorn at gmail.com  Mon Nov 14 19:48:33 2005
From: sundberg.bjorn at gmail.com (Bjorn Sundberg)
Date: Mon Nov 14 19:48:40 2005
Subject: [mod_python] psp templates problem
Message-ID: <a380ef360511141648k69ad4538o108b3387a0acc5f2@mail.gmail.com>

Hello i'm quite new to mod_python. I've read the documents on the net and i
found that the templating system is quite interesting. My problem is that
i'm trying to load dynamic data in a template. And when the program runs it
loads and repeat the template file and the variables that i want to change.
So far so good, but i'm only intrested in changing the psp variables in the
file. It seem's that i is not possible to use the <%# Stop %> to prevent the
<p> to repeat. Any body that have any ideas? Thanks in advance.

Regards
Bj?rn S
--Code--
#!/usr/bin/env python
from mod_python import psp

def index(req):
req.add_common_vars()
req.content_type='text/html;charset=utf-8'
tmpl = psp.PSP(req, filename='3-2.html')
for key in req.subprocess_env.keys():
tmpl.run(vars = {'key': key, 'env': req.subprocess_env[key]})
--end--
---template---
<html>
<head>
<title>
3-2.py
</title>
</head>
<body>
<table >
<td><%=key %></td>
<td><%=env %></td>
</tr>
</table>
<p>test</p>
</body>
</html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051115/21799ff8/attachment.html
From grahamd at dscpl.com.au  Mon Nov 14 20:58:29 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Nov 14 20:58:35 2005
Subject: [mod_python] psp templates problem
Message-ID: <1132019909.26026@dscpl.user.openhosting.com>

Bjorn Sundberg wrote ..
> Hello i'm quite new to mod_python. I've read the documents on the net and
> i
> found that the templating system is quite interesting. My problem is that
> i'm trying to load dynamic data in a template. And when the program runs
> it
> loads and repeat the template file and the variables that i want to change.
> So far so good, but i'm only intrested in changing the psp variables in
> the
> file. It seem's that i is not possible to use the <%# Stop %> to prevent
> the
> <p> to repeat. Any body that have any ideas? Thanks in advance.
> 
> Regards
> Bj?rn S
> --Code--
> #!/usr/bin/env python
> from mod_python import psp
> 
> def index(req):
> req.add_common_vars()
> req.content_type='text/html;charset=utf-8'
> tmpl = psp.PSP(req, filename='3-2.html')
> for key in req.subprocess_env.keys():
> tmpl.run(vars = {'key': key, 'env': req.subprocess_env[key]})

This is going to render the template multiple times, you probably just want:

from mod_python import psp

def index(req):
  req.add_common_vars()
  req.content_type='text/html;charset=utf-8'
  tmpl = psp.PSP(req, filename='3-2.html')
  #for key in req.subprocess_env.keys():
  #  tmpl.run(vars = {'key': key, 'env': req.subprocess_env[key]})
  tmpl.run()


> --end--
> ---template---
> <html>
> <head>
> <title>
> 3-2.py
> </title>
> </head>
> <body>
> <table >
> <td><%=key %></td>
> <td><%=env %></td>
> </tr>
> </table>
> <p>test</p>
> </body>
> </html>

Then in your template use:

<html>
  <head>
    <title>
      3-2.py
    </title>
  </head>
  <body>
    <table >
<%
for key in req.subprocess_env.keys():
      # indent
%>  
      <tr>
        <td><%=key%></td>
        <td><%=req.subprocess_env[key]%></td>
      </tr>
<%
# end for
%>
    </table>
  <p>test</p>
</body>
</html>

Watch out for indenting issues.

Graham
From rpinder at usc.edu  Tue Nov 15 16:06:19 2005
From: rpinder at usc.edu (Rich Pinder)
Date: Tue Nov 15 16:06:26 2005
Subject: [mod_python] Mod_python error...
Message-ID: <437A4DCB.6020708@usc.edu>

Dont ya hate it... something that USED to work fine......

Long ago I got a script working with Apache 1.x, Firebird (via 
kinterbasdb module)......
And today, although my script actually succeeds updating my database, 
instead of seeing the nice little 'thank you' message I get the 
following error message.
Its one of those  'DAMN... I dont think I've changed anything'  
moments...  and I've pretty much forgotten the in's and out's of why and 
how this little scripting works !

Could you help me decipher where I should start looking here ??    (mail 
/ postfix seem to be working from this machine just fine)

Thanks
Rich Pinder
USC School of Medicine

The error:

>Mod_python error: "PythonHandler mod_python.publisher"
>
>Traceback (most recent call last):
>
>  File "/usr/lib/apache/lib/python2.2/site-packages/mod_python/apache.py", line 193, in Dispatch
>    result = object(req)
>
>  File "/usr/lib/apache/lib/python2.2/site-packages/mod_python/publisher.py", line 171, in handler
>    result = apply(object, (), args)
>
>  File "/home/httpd/htdocs/ctspython/ctsform.py", line 54, in sendinfo
>    conn = smtplib.SMTP("email.usc.edu")
>
>  File "/usr/lib/python2.2/smtplib.py", line 234, in __init__
>    (code, msg) = self.connect(host, port)
>
>  File "/usr/lib/python2.2/smtplib.py", line 269, in connect
>    for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):
>
>gaierror: (-2, 'Name or service not known')
>

The module:

> import smtplib, kinterbasdb, string
> def sendinfo(frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
> frm_Phone, frm_Text):
>
>  TABLE_NAME = 'xxxxx'
>
>
>  con = kinterbasdb.connect(
>          dsn="/home/xxx/xxx.gdb",
>          user="xxx",
>          password="xxxpw"
>                 )
>
>
>  cur = con.cursor()
>
>  frm_Text = frm_Text[0:1000]
>
>  newContact = (
>           (frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
> frm_Phone, frm_Text))
>
>
>
>  cur.execute("insert into ctscontact(fn, ln, resptype, id, email, 
> phone, sugg) values (?, ?, ?, ?, ?, ?, ?)", newContact)
>
>  con.commit()
>
>
>
>     # create the message text
>
>  msg = """\
> From: %s
> Subject: feedback
> To: webmaster
>
> I have the following comment:
>
> %s
>
> Thank You,

>
> %s
>
> """ % (frm_Email, frm_Text, frm_First)
>
>     # send it out
>  conn = smtplib.SMTP("email.xxx.com")
>  conn.sendmail("xxx@xxx.com", "xxx@xxx.com", "Subject : Email recieved")
>  conn.quit()
>
>     # provide feedback to the user
>  s = """\
>  <html>
>
> <BODY BGCOLOR=#DBE7F3></BODY>
> <META HTTP-EQUIV="Refresh" 
> CONTENT="2;URL=https://www.calteachersstudy.org">
>
>  Dear %s,<br>
>
>  Thank You for your comments, we
>  will get back to you shortly.<br><br>
>
>  Returning to home page....
>
>  </html>""" %frm_First
>
>  return s




From nick at dd.revealed.net  Tue Nov 15 16:12:42 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Nov 15 16:12:47 2005
Subject: [mod_python] Mod_python error...
In-Reply-To: <437A4DCB.6020708@usc.edu>
References: <437A4DCB.6020708@usc.edu>
Message-ID: <437A4F4A.802@dd.revealed.net>

Looks like a simple DNS failure for your host email.usc.edu:

conn = smtplib.SMTP("email.usc.edu")

Local DNS may not be working correctly, or the host name may have changed.

Nick

Rich Pinder wrote:
> Dont ya hate it... something that USED to work fine......
> 
> Long ago I got a script working with Apache 1.x, Firebird (via 
> kinterbasdb module)......
> And today, although my script actually succeeds updating my database, 
> instead of seeing the nice little 'thank you' message I get the 
> following error message.
> Its one of those  'DAMN... I dont think I've changed anything'  
> moments...  and I've pretty much forgotten the in's and out's of why and 
> how this little scripting works !
> 
> Could you help me decipher where I should start looking here ??    (mail 
> / postfix seem to be working from this machine just fine)
> 
> Thanks
> Rich Pinder
> USC School of Medicine
> 
> The error:
> 
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>  File 
>> "/usr/lib/apache/lib/python2.2/site-packages/mod_python/apache.py", 
>> line 193, in Dispatch
>>    result = object(req)
>>
>>  File 
>> "/usr/lib/apache/lib/python2.2/site-packages/mod_python/publisher.py", 
>> line 171, in handler
>>    result = apply(object, (), args)
>>
>>  File "/home/httpd/htdocs/ctspython/ctsform.py", line 54, in sendinfo
>>    conn = smtplib.SMTP("email.usc.edu")
>>
>>  File "/usr/lib/python2.2/smtplib.py", line 234, in __init__
>>    (code, msg) = self.connect(host, port)
>>
>>  File "/usr/lib/python2.2/smtplib.py", line 269, in connect
>>    for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):
>>
>> gaierror: (-2, 'Name or service not known')
>>
> 
> The module:
> 
>> import smtplib, kinterbasdb, string
>> def sendinfo(frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
>> frm_Phone, frm_Text):
>>
>>  TABLE_NAME = 'xxxxx'
>>
>>
>>  con = kinterbasdb.connect(
>>          dsn="/home/xxx/xxx.gdb",
>>          user="xxx",
>>          password="xxxpw"
>>                 )
>>
>>
>>  cur = con.cursor()
>>
>>  frm_Text = frm_Text[0:1000]
>>
>>  newContact = (
>>           (frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
>> frm_Phone, frm_Text))
>>
>>
>>
>>  cur.execute("insert into ctscontact(fn, ln, resptype, id, email, 
>> phone, sugg) values (?, ?, ?, ?, ?, ?, ?)", newContact)
>>
>>  con.commit()
>>
>>
>>
>>     # create the message text
>>
>>  msg = """\
>> From: %s
>> Subject: feedback
>> To: webmaster
>>
>> I have the following comment:
>>
>> %s
>>
>> Thank You,
> 
> 
>>
>> %s
>>
>> """ % (frm_Email, frm_Text, frm_First)
>>
>>     # send it out
>>  conn = smtplib.SMTP("email.xxx.com")
>>  conn.sendmail("xxx@xxx.com", "xxx@xxx.com", "Subject : Email recieved")
>>  conn.quit()
>>
>>     # provide feedback to the user
>>  s = """\
>>  <html>
>>
>> <BODY BGCOLOR=#DBE7F3></BODY>
>> <META HTTP-EQUIV="Refresh" 
>> CONTENT="2;URL=https://www.calteachersstudy.org">
>>
>>  Dear %s,<br>
>>
>>  Thank You for your comments, we
>>  will get back to you shortly.<br><br>
>>
>>  Returning to home page....
>>
>>  </html>""" %frm_First
>>
>>  return s
> 
> 
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From dokter at icg.tu-graz.ac.at  Tue Nov 15 19:18:18 2005
From: dokter at icg.tu-graz.ac.at (Mark Dokter)
Date: Tue Nov 15 19:18:21 2005
Subject: [mod_python] mod_python.so: undefined symbol: ap_loaded_modules
Message-ID: <200511160118.18578.dokter@icg.tu-graz.ac.at>

Hello!

I have a messed up python/mod_python installation. First, the apache log gave 
me: [error] make_obcallback: could not import mod_python.apache.\n

Then I tried to import mod_python from the python interpreter. I noticed 
that /usr/lib/apache2/modules was not in sys.path, so I added it, then I got 
the following error: 
ImportError: ./mod_python.so: undefined symbol: ap_loaded_modules

Does somebody have a clue, because I don't :(

My setup:
Debian testing, kernel 2.6.12
python/testing 2.3.5-3
libapache2-mod-python/testing 3.1.3-3
apache2/testing 2.0.54-5
sys.path:
['', '/usr/local/lib/python23.zip', '/usr/local/lib/python2.3', 
'/usr/local/lib/python2.3/plat-linux2', '/usr/local/lib/python2.3/lib-tk', 
'/usr/local/lib/python2.3/lib-dynload', 
'/usr/local/lib/python2.3/site-packages', '/usr/lib/apache2/modules', 
'/usr/lib', '/usr/lib/python2.3', '/usr/lib/python2.3/site-packages']

Thanks in advance,

Mark
From jpg at jgassociates.ca  Tue Nov 15 20:52:14 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Nov 15 20:48:47 2005
Subject: [mod_python] mod_python.so: undefined symbol: ap_loaded_modules
In-Reply-To: <200511160118.18578.dokter@icg.tu-graz.ac.at>
References: <200511160118.18578.dokter@icg.tu-graz.ac.at>
Message-ID: <437A90CE.2000609@jgassociates.ca>

Mark Dokter wrote:
> Hello!
> 
> I have a messed up python/mod_python installation. First, the apache log gave 
> me: [error] make_obcallback: could not import mod_python.apache.\n

This indicates that apache was able to load the mod_python.so apache 
module, but can't find the mod_python python modules.

To test this try the following from a commond line interpeter:

 >>> from mod_python import apache

If you see mention of  "ImportError: No module named _apache" then you 
are in good shape. If you see something else then it means python can't 
find the mod_python modules. Let us know what you get.

The standard location for the mod_python python modules on Debian is 
/usr/lib/python2.3/site-packages/mod_python/. If they are not there then 
your installation is truly messed up.

> Then I tried to import mod_python from the python interpreter. I noticed 
> that /usr/lib/apache2/modules was not in sys.path, so I added it, then I got 
> the following error: 
> ImportError: ./mod_python.so: undefined symbol: ap_loaded_modules

mod_python.so is an apache module, not a python module, so it makes no 
sense to put /usr/lib/apache2/modules in your sys.path.

Check the following FAQs:

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.002.htp
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp

Graham has a nice article which you may also find useful.

http://www.dscpl.com.au/articles/modpython-001.html

Regards,
Jim

> Does somebody have a clue, because I don't :(
> 
> My setup:
> Debian testing, kernel 2.6.12
> python/testing 2.3.5-3
> libapache2-mod-python/testing 3.1.3-3
> apache2/testing 2.0.54-5
> sys.path:
> ['', '/usr/local/lib/python23.zip', '/usr/local/lib/python2.3', 
> '/usr/local/lib/python2.3/plat-linux2', '/usr/local/lib/python2.3/lib-tk', 
> '/usr/local/lib/python2.3/lib-dynload', 
> '/usr/local/lib/python2.3/site-packages', '/usr/lib/apache2/modules', 
> '/usr/lib', '/usr/lib/python2.3', '/usr/lib/python2.3/site-packages']
> 
> Thanks in advance,
> 
> Mark
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From rpinder at usc.edu  Tue Nov 15 20:56:59 2005
From: rpinder at usc.edu (Rich Pinder)
Date: Tue Nov 15 20:57:06 2005
Subject: [mod_python] Mod_python error...
In-Reply-To: <437A4F4A.802@dd.revealed.net>
References: <437A4DCB.6020708@usc.edu> <437A4F4A.802@dd.revealed.net>
Message-ID: <437A91EB.3040003@usc.edu>

DANG.  Ya _had_ to rub it in ! 
"simple" is indeed the watchword !!!
(Our University changed DNS servers, and as this linux machine doesnt 
rely on them, I just forgot to update it !)

Thanks SO much

Rich

Nick wrote:

> Looks like a simple DNS failure for your host email.usc.edu:
>
> conn = smtplib.SMTP("email.usc.edu")
>
> Local DNS may not be working correctly, or the host name may have 
> changed.
>
> Nick
>
> Rich Pinder wrote:
>
>> Dont ya hate it... something that USED to work fine......
>>
>> Long ago I got a script working with Apache 1.x, Firebird (via 
>> kinterbasdb module)......
>> And today, although my script actually succeeds updating my database, 
>> instead of seeing the nice little 'thank you' message I get the 
>> following error message.
>> Its one of those  'DAMN... I dont think I've changed anything'  
>> moments...  and I've pretty much forgotten the in's and out's of why 
>> and how this little scripting works !
>>
>> Could you help me decipher where I should start looking here ??    
>> (mail / postfix seem to be working from this machine just fine)
>>
>> Thanks
>> Rich Pinder
>> USC School of Medicine
>>
>> The error:
>>
>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>
>>> Traceback (most recent call last):
>>>
>>>  File 
>>> "/usr/lib/apache/lib/python2.2/site-packages/mod_python/apache.py", 
>>> line 193, in Dispatch
>>>    result = object(req)
>>>
>>>  File 
>>> "/usr/lib/apache/lib/python2.2/site-packages/mod_python/publisher.py", 
>>> line 171, in handler
>>>    result = apply(object, (), args)
>>>
>>>  File "/home/httpd/htdocs/ctspython/ctsform.py", line 54, in sendinfo
>>>    conn = smtplib.SMTP("email.usc.edu")
>>>
>>>  File "/usr/lib/python2.2/smtplib.py", line 234, in __init__
>>>    (code, msg) = self.connect(host, port)
>>>
>>>  File "/usr/lib/python2.2/smtplib.py", line 269, in connect
>>>    for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):
>>>
>>> gaierror: (-2, 'Name or service not known')
>>>
>>
>> The module:
>>
>>> import smtplib, kinterbasdb, string
>>> def sendinfo(frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
>>> frm_Phone, frm_Text):
>>>
>>>  TABLE_NAME = 'xxxxx'
>>>
>>>
>>>  con = kinterbasdb.connect(
>>>          dsn="/home/xxx/xxx.gdb",
>>>          user="xxx",
>>>          password="xxxpw"
>>>                 )
>>>
>>>
>>>  cur = con.cursor()
>>>
>>>  frm_Text = frm_Text[0:1000]
>>>
>>>  newContact = (
>>>           (frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
>>> frm_Phone, frm_Text))
>>>
>>>
>>>
>>>  cur.execute("insert into ctscontact(fn, ln, resptype, id, email, 
>>> phone, sugg) values (?, ?, ?, ?, ?, ?, ?)", newContact)
>>>
>>>  con.commit()
>>>
>>>
>>>
>>>     # create the message text
>>>
>>>  msg = """\
>>> From: %s
>>> Subject: feedback
>>> To: webmaster
>>>
>>> I have the following comment:
>>>
>>> %s
>>>
>>> Thank You,
>>
>>
>>
>>>
>>> %s
>>>
>>> """ % (frm_Email, frm_Text, frm_First)
>>>
>>>     # send it out
>>>  conn = smtplib.SMTP("email.xxx.com")
>>>  conn.sendmail("xxx@xxx.com", "xxx@xxx.com", "Subject : Email 
>>> recieved")
>>>  conn.quit()
>>>
>>>     # provide feedback to the user
>>>  s = """\
>>>  <html>
>>>
>>> <BODY BGCOLOR=#DBE7F3></BODY>
>>> <META HTTP-EQUIV="Refresh" 
>>> CONTENT="2;URL=https://www.calteachersstudy.org">
>>>
>>>  Dear %s,<br>
>>>
>>>  Thank You for your comments, we
>>>  will get back to you shortly.<br><br>
>>>
>>>  Returning to home page....
>>>
>>>  </html>""" %frm_First
>>>
>>>  return s
>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From grahamd at dscpl.com.au  Tue Nov 15 23:25:46 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 15 23:26:08 2005
Subject: [mod_python] mod_python.so: undefined symbol: ap_loaded_modules
Message-ID: <1132115146.7655@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> Mark Dokter wrote:
> > Hello!
> > 
> > I have a messed up python/mod_python installation. First, the apache
> log gave 
> > me: [error] make_obcallback: could not import mod_python.apache.\n
> 
> This indicates that apache was able to load the mod_python.so apache 
> module, but can't find the mod_python python modules.
> 
> To test this try the following from a commond line interpeter:
> 
>  >>> from mod_python import apache
> 
> If you see mention of  "ImportError: No module named _apache" then you
> are in good shape. If you see something else then it means python can't
> find the mod_python modules. Let us know what you get.
> 
> The standard location for the mod_python python modules on Debian is 
> /usr/lib/python2.3/site-packages/mod_python/. If they are not there then
> your installation is truly messed up.

A random bit of information that may not be relevant, but if you have
multiple versions of Python installed and the one which is first in your
PATH is not the same one as mod_python was built for, and you run
"apachectl restart" or "apachectl start" explicitly, mod_python can fail
because it will use the one found in PATH and not the one it was built
for.

The reason for failure can be because the one found doesn't have the
mod_python Python code components installed for it, or it has a
different version mod_python Python code components which are
incompatible.

You may get a better indication of what the problem is if you were using
mod_python 3.2 (BETA) as older versions didn't always write out or flush
out error messages properly which gave an indication of the true reason
for the error. You may also only find error messages in the Apache log
file appearing when you later shut Apache down. Ie., they don't end up
in the log at time of startup when the problem occurs, but when buffers
flushed on shutdown.

Graham

From jgentil at sebistar.net  Wed Nov 16 00:58:02 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Wed Nov 16 00:58:10 2005
Subject: [mod_python] Debian
Message-ID: <200511152358.02416.jgentil@sebistar.net>

Hello!

It seems that the debian maintainer of mod_python no longer has sufficient 
time to recompile and keep mod_python updated in Debian.  I spoke to him 
and he stated that he'll likely set the packages up for adoption.

I am unfortunately not a debian developer and wouldn't have a clue where 
to begin.  Is anyone interested in picking up the package?

Thanks!


-- 
_________________________________________________________

  Jon-Pierre Gentil     KC9CAF    PGP: 0x7E1CBA17
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
From nick at dd.revealed.net  Wed Nov 16 09:24:46 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Nov 16 09:24:54 2005
Subject: [mod_python] Mod_python error...
In-Reply-To: <437A91EB.3040003@usc.edu>
References: <437A4DCB.6020708@usc.edu> <437A4F4A.802@dd.revealed.net>
	<437A91EB.3040003@usc.edu>
Message-ID: <437B412E.2030907@dd.revealed.net>

Well, simple doesn't necessarily mean obvious.  Sometimes it's hard to 
tell what's going on in the underlying modules.  Glad I could help!

Nick

Rich Pinder wrote:
> DANG.  Ya _had_ to rub it in ! "simple" is indeed the watchword !!!
> (Our University changed DNS servers, and as this linux machine doesnt 
> rely on them, I just forgot to update it !)
> 
> Thanks SO much
> 
> Rich
> 
> Nick wrote:
> 
>> Looks like a simple DNS failure for your host email.usc.edu:
>>
>> conn = smtplib.SMTP("email.usc.edu")
>>
>> Local DNS may not be working correctly, or the host name may have 
>> changed.
>>
>> Nick
>>
>> Rich Pinder wrote:
>>
>>> Dont ya hate it... something that USED to work fine......
>>>
>>> Long ago I got a script working with Apache 1.x, Firebird (via 
>>> kinterbasdb module)......
>>> And today, although my script actually succeeds updating my database, 
>>> instead of seeing the nice little 'thank you' message I get the 
>>> following error message.
>>> Its one of those  'DAMN... I dont think I've changed anything'  
>>> moments...  and I've pretty much forgotten the in's and out's of why 
>>> and how this little scripting works !
>>>
>>> Could you help me decipher where I should start looking here ??    
>>> (mail / postfix seem to be working from this machine just fine)
>>>
>>> Thanks
>>> Rich Pinder
>>> USC School of Medicine
>>>
>>> The error:
>>>
>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>>
>>>> Traceback (most recent call last):
>>>>
>>>>  File 
>>>> "/usr/lib/apache/lib/python2.2/site-packages/mod_python/apache.py", 
>>>> line 193, in Dispatch
>>>>    result = object(req)
>>>>
>>>>  File 
>>>> "/usr/lib/apache/lib/python2.2/site-packages/mod_python/publisher.py", 
>>>> line 171, in handler
>>>>    result = apply(object, (), args)
>>>>
>>>>  File "/home/httpd/htdocs/ctspython/ctsform.py", line 54, in sendinfo
>>>>    conn = smtplib.SMTP("email.usc.edu")
>>>>
>>>>  File "/usr/lib/python2.2/smtplib.py", line 234, in __init__
>>>>    (code, msg) = self.connect(host, port)
>>>>
>>>>  File "/usr/lib/python2.2/smtplib.py", line 269, in connect
>>>>    for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):
>>>>
>>>> gaierror: (-2, 'Name or service not known')
>>>>
>>>
>>> The module:
>>>
>>>> import smtplib, kinterbasdb, string
>>>> def sendinfo(frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
>>>> frm_Phone, frm_Text):
>>>>
>>>>  TABLE_NAME = 'xxxxx'
>>>>
>>>>
>>>>  con = kinterbasdb.connect(
>>>>          dsn="/home/xxx/xxx.gdb",
>>>>          user="xxx",
>>>>          password="xxxpw"
>>>>                 )
>>>>
>>>>
>>>>  cur = con.cursor()
>>>>
>>>>  frm_Text = frm_Text[0:1000]
>>>>
>>>>  newContact = (
>>>>           (frm_First, frm_Last, frm_RespType, frm_Id, frm_Email, 
>>>> frm_Phone, frm_Text))
>>>>
>>>>
>>>>
>>>>  cur.execute("insert into ctscontact(fn, ln, resptype, id, email, 
>>>> phone, sugg) values (?, ?, ?, ?, ?, ?, ?)", newContact)
>>>>
>>>>  con.commit()
>>>>
>>>>
>>>>
>>>>     # create the message text
>>>>
>>>>  msg = """\
>>>> From: %s
>>>> Subject: feedback
>>>> To: webmaster
>>>>
>>>> I have the following comment:
>>>>
>>>> %s
>>>>
>>>> Thank You,
>>>
>>>
>>>
>>>
>>>>
>>>> %s
>>>>
>>>> """ % (frm_Email, frm_Text, frm_First)
>>>>
>>>>     # send it out
>>>>  conn = smtplib.SMTP("email.xxx.com")
>>>>  conn.sendmail("xxx@xxx.com", "xxx@xxx.com", "Subject : Email 
>>>> recieved")
>>>>  conn.quit()
>>>>
>>>>     # provide feedback to the user
>>>>  s = """\
>>>>  <html>
>>>>
>>>> <BODY BGCOLOR=#DBE7F3></BODY>
>>>> <META HTTP-EQUIV="Refresh" 
>>>> CONTENT="2;URL=https://www.calteachersstudy.org">
>>>>
>>>>  Dear %s,<br>
>>>>
>>>>  Thank You for your comments, we
>>>>  will get back to you shortly.<br><br>
>>>>
>>>>  Returning to home page....
>>>>
>>>>  </html>""" %frm_First
>>>>
>>>>  return s
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
>>
From dpopowich at comcast.net  Wed Nov 16 09:52:02 2005
From: dpopowich at comcast.net (Daniel J. Popowich)
Date: Wed Nov 16 09:51:59 2005
Subject: [mod_python] Debian
In-Reply-To: <200511152358.02416.jgentil@sebistar.net>
References: <200511152358.02416.jgentil@sebistar.net>
Message-ID: <17275.18322.926446.881937@localhost.astro.umass.edu>


Jon-Pierre Gentil writes:
> Hello!
> 
> It seems that the debian maintainer of mod_python no longer has sufficient 
> time to recompile and keep mod_python updated in Debian.  I spoke to him 
> and he stated that he'll likely set the packages up for adoption.
> 
> I am unfortunately not a debian developer and wouldn't have a clue where 
> to begin.  Is anyone interested in picking up the package?

Yes, I would be willing to do this!  I'm a regular Debian user
(supporting Debian machines is the day job).  What are the adoption
procedures?  God, I hope it doesn't include blood work.  :-)

Daniel Popowich
---------------
http://home.comcast.net/~d.popowich/mpservlets/

From dokter at icg.tu-graz.ac.at  Wed Nov 16 10:20:29 2005
From: dokter at icg.tu-graz.ac.at (Mark Dokter)
Date: Wed Nov 16 10:20:17 2005
Subject: [mod_python] mod_python.so: undefined symbol: ap_loaded_modules
In-Reply-To: <1132115146.7655@dscpl.user.openhosting.com>
References: <1132115146.7655@dscpl.user.openhosting.com>
Message-ID: <200511161620.30125.dokter@icg.tu-graz.ac.at>

On Wednesday 16 November 2005 05:25, Graham Dumpleton wrote:

> A random bit of information that may not be relevant, but if you have
> multiple versions of Python installed and the one which is first in your
> PATH is not the same one as mod_python was built for, and you run
> "apachectl restart" or "apachectl start" explicitly, mod_python can fail
> because it will use the one found in PATH and not the one it was built
> for.
>

I followed the FAQ to check the mod_python version:
Set sys.path to 
>>> sys.path
['/usr/lib/python2.3/site-packages', '/usr/lib/python2.3', ...]

When importing mod_python.psp this gabe me:
>>> import mod_python.psp
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 20, in ?
    import apache, Session, util, _psp
  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 28, in ?
    import _apache
ImportError: No module named _apache

According to the FAQ this should be version 3.1 (as apt already told me)

I set the PythonPath variable in /etc/apache2/mods-enabled/mod_python.conf 
like this:

PythonPath "['/usr/lib/python2.3','/usr/lib/python2.3/site-packages',
[/usr/lib/apache2/modules']"

But I still get this in the log file:
[Wed Nov 16 16:06:42 2005] [error] make_obcallback: could not import 
mod_python.apache.\n


> The reason for failure can be because the one found doesn't have the
> mod_python Python code components installed for it, or it has a
> different version mod_python Python code components which are
> incompatible.
>

I have the same package versions installed on another Debian system where it 
works. So there must be something wrong with the configuration. The faulty 
system was set up by someone else a while ago. There is 
a /usr/lib/python2.2, /usr/lib/python2.4 and a /usr/local/python2.3. But 
according to my PATH settings only /usr/lib/python2.3 is used. mod_python is 
installed in /usr/lib/python2.3/site-packages/mod_python.


> You may get a better indication of what the problem is if you were using
> mod_python 3.2 (BETA) as older versions didn't always write out or flush
> out error messages properly which gave an indication of the true reason
> for the error. You may also only find error messages in the Apache log
> file appearing when you later shut Apache down. Ie., they don't end up
> in the log at time of startup when the problem occurs, but when buffers
> flushed on shutdown.
>

3.2 is not available in the testing and unstable tree and I don't want to 
create a deb for it (never done that before - I actually prefer Gentoo, but 
here at work I have to use Debian).
I'll consider this as the last option.

> Graham

thx for suggestions,

Mark
From jpg at jgassociates.ca  Wed Nov 16 12:46:31 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Nov 16 12:45:21 2005
Subject: [mod_python] mod_python.so: undefined symbol: ap_loaded_modules
In-Reply-To: <200511161620.30125.dokter@icg.tu-graz.ac.at>
References: <1132115146.7655@dscpl.user.openhosting.com>
	<200511161620.30125.dokter@icg.tu-graz.ac.at>
Message-ID: <437B7077.40706@jgassociates.ca>

Mark Dokter wrote:
> On Wednesday 16 November 2005 05:25, Graham Dumpleton wrote:
> 
> 
>>A random bit of information that may not be relevant, but if you have
>>multiple versions of Python installed and the one which is first in your
>>PATH is not the same one as mod_python was built for, and you run
>>"apachectl restart" or "apachectl start" explicitly, mod_python can fail
>>because it will use the one found in PATH and not the one it was built
>>for.
>>
> 
> 
> I followed the FAQ to check the mod_python version:
> Set sys.path to 
> 
>>>>sys.path
> 
> ['/usr/lib/python2.3/site-packages', '/usr/lib/python2.3', ...]
> 
> When importing mod_python.psp this gabe me:
> 
>>>>import mod_python.psp
> 
> Traceback (most recent call last):
>   File "<stdin>", line 1, in ?
>   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 20, in ?
>     import apache, Session, util, _psp
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 28, in ?
>     import _apache
> ImportError: No module named _apache

That's good and it's what we expect. That means *python* can find the 
mod_python modules. The _apache module is only available in a python 
interpreter running in the Apache server module so we expect that import 
to fail from the command line. If the python command line interpreter 
couldn't find the mod_python modules you'd see "ImportError: No module 
named mod_python".

> According to the FAQ this should be version 3.1 (as apt already told me)
> 
> I set the PythonPath variable in /etc/apache2/mods-enabled/mod_python.conf 
> like this:
> 
> PythonPath "['/usr/lib/python2.3','/usr/lib/python2.3/site-packages',
> [/usr/lib/apache2/modules']"

Wrong. /etc/apache2/mods-enabled contains symbolic links to 
/etc/apache2/mods-available which in turn contains Apache configuration 
files. These files hold directives for loading *Apache* modules. This 
has nothing to do with the python modules in site-packages/mod_python. 
/usr/lib/apache2/modules does *NOT* belong on your PythonPath.

On Debian:

/etc/apache2/mods-enabled/mod_python.conf should be a symbolic link to
/etc/apache2/mods-available/mod_python.conf.

/etc/apache2/mods-available/mod_python.conf should contain:

LoadModule python_module /usr/lib/apache2/modules/mod_python.so

This tells the server to load the *Apache* module mod_python.so. *Do 
not* confuse this Apache module with the stuff in 
site-packages/mod_python. It is not the same thing. mod_python.so 
contains the magic that embeds the python interpreter into apache.

> But I still get this in the log file:
> [Wed Nov 16 16:06:42 2005] [error] make_obcallback: could not import 
> mod_python.apache.\n
> 
> 
> 
>>The reason for failure can be because the one found doesn't have the
>>mod_python Python code components installed for it, or it has a
>>different version mod_python Python code components which are
>>incompatible.
>>
> 
> 
> I have the same package versions installed on another Debian system where it 
> works. So there must be something wrong with the configuration. The faulty 
> system was set up by someone else a while ago. There is 
> a /usr/lib/python2.2, /usr/lib/python2.4 and a /usr/local/python2.3. But 
> according to my PATH settings only /usr/lib/python2.3 is used. mod_python is 
> installed in /usr/lib/python2.3/site-packages/mod_python.

What do the first 2 lines of /var/log/apache2/error.log show after an 
Apache restart? They should look something like this:

[Wed Nov 16 12:24:07 2005] [notice] mod_python: Creating 8 session 
mutexes based on 50 max processes and 0 max threads.
[Wed Nov 16 12:24:07 2005] [notice] Apache/2.0.54 (Debian GNU/Linux) 
DAV/2 SVN/1.2.0 mod_python/3.2.5-dev-20051112 Python/2.3.5 PHP/4.4.0-1 
configured -- resuming normal operations

Also check the output of the following command:
   ldd /usr/lib/apache2/modules/mod_python.so |grep python

Which on my system yields:
   libpython2.3.so.1.0 => /usr/lib/libpython2.3.so.1.0 (0xb7e61000)

Jim
From jpg at jgassociates.ca  Wed Nov 16 13:03:24 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Nov 16 13:02:10 2005
Subject: [mod_python] Debian
In-Reply-To: <17275.18322.926446.881937@localhost.astro.umass.edu>
References: <200511152358.02416.jgentil@sebistar.net>
	<17275.18322.926446.881937@localhost.astro.umass.edu>
Message-ID: <437B746C.8040504@jgassociates.ca>

Daniel J. Popowich wrote:
> Jon-Pierre Gentil writes:
> 
>>Hello!
>>
>>It seems that the debian maintainer of mod_python no longer has sufficient 
>>time to recompile and keep mod_python updated in Debian. 

This guy must be *really* busy. It's not like mod_python has been a 
fast-moving train! ;)

Seriously though, I'd like to thank the debian maintainer (Peter 
Hawkins?) for his work on mod_python deb packages. Perhaps Jon-Pierre 
could pass along my thanks next time they speak.

> I spoke to him 
>>and he stated that he'll likely set the packages up for adoption.
>>
>>I am unfortunately not a debian developer and wouldn't have a clue where 
>>to begin.  Is anyone interested in picking up the package?
> 
> 
> Yes, I would be willing to do this!  I'm a regular Debian user
> (supporting Debian machines is the day job).  What are the adoption
> procedures?  God, I hope it doesn't include blood work.  :-)

Also being a Debian fanboy, I'll help any way I can - except for the 
blood work part. Daniel is on his own there.

Jim
From trepca at gmail.com  Fri Nov 18 04:14:42 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Fri Nov 18 04:14:50 2005
Subject: [mod_python] "Cannot import name *" error
Message-ID: <cd329af80511180114m76b5eab8n@mail.gmail.com>

Hi ho!

I get this weird import error which doesn't include mod_python
internal importing system but pythons. The bizzare thing that it
mostly occours after application is running for a while, day or two.

[error][client 212.235.140.36] PythonHandler portal.handler:   File
"/usr/lib64/python2.4/site-packages/portal/handler.py", line 8, in ?\n
   from app.modules import golf
[error] [client 212.235.140.36] PythonHandler portal.handler:
ImportError: cannot import name golf

After "apache2ctl restart" it starts working again. Any clues?

Thanks, Sebastjan

From grahamd at dscpl.com.au  Fri Nov 18 05:16:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Nov 18 05:16:29 2005
Subject: [mod_python] "Cannot import name *" error
In-Reply-To: <cd329af80511180114m76b5eab8n@mail.gmail.com>
References: <cd329af80511180114m76b5eab8n@mail.gmail.com>
Message-ID: <53A33B1C-FE07-44EA-AF53-453246D4E021@dscpl.com.au>


On 18/11/2005, at 8:14 PM, Sebastjan Trepca wrote:

> Hi ho!
>
> I get this weird import error which doesn't include mod_python
> internal importing system but pythons. The bizzare thing that it
> mostly occours after application is running for a while, day or two.
>
> [error][client 212.235.140.36] PythonHandler portal.handler:   File
> "/usr/lib64/python2.4/site-packages/portal/handler.py", line 8, in ?\n
>    from app.modules import golf
> [error] [client 212.235.140.36] PythonHandler portal.handler:
> ImportError: cannot import name golf
>
> After "apache2ctl restart" it starts working again. Any clues?

There are numerous issues with mod_python module importing. Read:

   http://www.dscpl.com.au/articles/modpython-002.html
   http://www.dscpl.com.au/articles/modpython-003.html

Also refer to the mod_python bug reports the second article references.

Depending on what the issue is, it may be addressed in mod_python 3.2,
which looks likely to be released quite soon. This new version still  
leaves
quite a number of things broken though and module loading/reloading
issues will probably not be properly fixed until mod_python 3.3.

Graham
From alexmdac at gmail.com  Sun Nov 20 02:39:19 2005
From: alexmdac at gmail.com (Alex Mendes da Costa)
Date: Sun Nov 20 02:39:24 2005
Subject: [mod_python] Problem installing apache2/mod_python.
Message-ID: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com>

Hi folks,

I'm trying to set up apache2/mod_python on OSX.3.9.  I'm using
http-2.0.55 and mod_python-2.7.11.

I used

  ./configure --enable-so

for apache2, and

  './configure --with-python=../Python-2.4.2
--with-apxs=/usr/local/apache2/bin/apxs'

for mod_python.  I added

  'LoadModule python_module modules/mod_python.so'

to line 234 of the default httpd.conf in /usr/local/apache2/conf/. 
Now I get the following error when I try to start apache:

$ sudo /usr/local/apache2/bin/apachectl start
Syntax error on line 234 of /usr/local/apache2/conf/httpd.conf:
Cannot load /usr/local/apache2/modules/mod_python.so into server:
dyld: /usr/local/apache2/bin/httpd Undefined
symbols:\n_ap_make_table\n_ap_null_cleanup\n_ap_pcalloc\n_ap_pstrcat\n_ap_pstrdup\n_ap_register_cleanup\n_ap_table_add\n_ap_table_get\n_ap_table_set\n_ap_table_unset\n_ap_child_terminate\n_ap_copy_table\n_ap_kill_timeout\n_ap_palloc\n_ap_psprintf\n_ap_reset_timeout\n_ap_send_http_header\n_ap_soft_timeout\n_ap_destroy_pool\n_ap_make_sub_pool\n

Any help would be appreciated!

Alex

From waitman at waitman.net  Sun Nov 20 02:52:16 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Sun Nov 20 02:52:21 2005
Subject: [mod_python] Problem installing apache2/mod_python.
In-Reply-To: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com>
References: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com>
Message-ID: <3795.69.181.250.18.1132473136.squirrel@mail.emkhost.com>


> I'm trying to set up apache2/mod_python on OSX.3.9.  I'm using
> http-2.0.55 and mod_python-2.7.11.
>
> I used
>
>   ./configure --enable-so
>
> for apache2, and
>
>   './configure --with-python=../Python-2.4.2
> --with-apxs=/usr/local/apache2/bin/apxs'
>
> for mod_python.  I added


Hello Alex,

One thing I noticed at first glance is your --with-python does not appear
to be correct.

--with-python=DIR       Path to specific Python binary

I understand that to be something like /usr/local/bin/python instead of
the path to the source code.

Hope that helps,

Waitman

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From alexmdac at gmail.com  Sun Nov 20 03:18:52 2005
From: alexmdac at gmail.com (Alex Mendes da Costa)
Date: Sun Nov 20 03:18:55 2005
Subject: [mod_python] Problem installing apache2/mod_python.
In-Reply-To: <3795.69.181.250.18.1132473136.squirrel@mail.emkhost.com>
References: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com>
	<3795.69.181.250.18.1132473136.squirrel@mail.emkhost.com>
Message-ID: <2eeb88480511200018l10ba5a6duf18875946bbac1c2@mail.gmail.com>

On 11/19/05, Waitman Gobble <waitman@waitman.net> wrote:
> One thing I noticed at first glance is your --with-python does not appear
> to be correct.
>
> --with-python=DIR       Path to specific Python binary
>
> I understand that to be something like /usr/local/bin/python instead of
> the path to the source code.

Hi Waitman,

My configure seems to be different to yours:

$ ./configure --help | grep with-python
--with-python=DIR       Path to Python sources

Alex

From waitman at waitman.net  Sun Nov 20 03:30:07 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Sun Nov 20 03:30:11 2005
Subject: [mod_python] Problem installing apache2/mod_python.
In-Reply-To: <2eeb88480511200018l10ba5a6duf18875946bbac1c2@mail.gmail.com>
References: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com> 
	<3795.69.181.250.18.1132473136.squirrel@mail.emkhost.com>
	<2eeb88480511200018l10ba5a6duf18875946bbac1c2@mail.gmail.com>
Message-ID: <3988.69.181.250.18.1132475407.squirrel@mail.emkhost.com>


>
> My configure seems to be different to yours:
>
> $ ./configure --help | grep with-python
> --with-python=DIR       Path to Python sources

Oops. That is correct. I am using mod_python-3.1.4, and now I remember
reading that changed. Back to the drawing board, I suppose.

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From alexmdac at gmail.com  Sun Nov 20 05:16:39 2005
From: alexmdac at gmail.com (Alex Mendes da Costa)
Date: Sun Nov 20 05:16:43 2005
Subject: [mod_python] Problem installing apache2/mod_python.
In-Reply-To: <3988.69.181.250.18.1132475407.squirrel@mail.emkhost.com>
References: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com>
	<3795.69.181.250.18.1132473136.squirrel@mail.emkhost.com>
	<2eeb88480511200018l10ba5a6duf18875946bbac1c2@mail.gmail.com>
	<3988.69.181.250.18.1132475407.squirrel@mail.emkhost.com>
Message-ID: <2eeb88480511200216n6b2fabf1ja31a1c250aaad06a@mail.gmail.com>

Turns out I was using the wrong version of mod_python for my version
of apache.  Doh!  The correct version requires a path to the python
binary, as you said.

Thanks!
Alex

On 11/20/05, Waitman Gobble <waitman@waitman.net> wrote:
>
> >
> > My configure seems to be different to yours:
> >
> > $ ./configure --help | grep with-python
> > --with-python=DIR       Path to Python sources
>
> Oops. That is correct. I am using mod_python-3.1.4, and now I remember
> reading that changed. Back to the drawing board, I suppose.
>
> --
> Waitman Gobble
> http://waitman.net/
> (707) 237-6921
>
>

From grahamd at dscpl.com.au  Sun Nov 20 05:30:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Nov 20 05:30:48 2005
Subject: [mod_python] Problem installing apache2/mod_python.
In-Reply-To: <2eeb88480511200216n6b2fabf1ja31a1c250aaad06a@mail.gmail.com>
References: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com>
	<3795.69.181.250.18.1132473136.squirrel@mail.emkhost.com>
	<2eeb88480511200018l10ba5a6duf18875946bbac1c2@mail.gmail.com>
	<3988.69.181.250.18.1132475407.squirrel@mail.emkhost.com>
	<2eeb88480511200216n6b2fabf1ja31a1c250aaad06a@mail.gmail.com>
Message-ID: <0BE11D08-843E-4655-A5F0-87EF54C6CD4C@dscpl.com.au>

I would suggest you use mod_python 3.2.5b (soon to be official 3.2  
release
hopefully). It is available from:

   http://www.modpython.org/dist/

Reason is that 3.1.4 and earlier versions of mod_python can have  
problems
on Mac OS X if you use the version of Python supplied by Apple.  
Patches are
available for 3.1.4, but you might simpler be better of using  the  
newer version.

Some patches for 3.1.4 which incorporate the Mac OS X specific patch  
can be
found at:

   http://www.dscpl.com.au/projects/vampire/patches.html

If you try your current installed version as is first, you'll know  
you have hit this
Mac OS X particular problem if Apache crashes on startup or restart.

Graham

On 20/11/2005, at 9:16 PM, Alex Mendes da Costa wrote:

> Turns out I was using the wrong version of mod_python for my version
> of apache.  Doh!  The correct version requires a path to the python
> binary, as you said.
>
> Thanks!
> Alex
>
> On 11/20/05, Waitman Gobble <waitman@waitman.net> wrote:
>
>>
>>
>>>
>>> My configure seems to be different to yours:
>>>
>>> $ ./configure --help | grep with-python
>>> --with-python=DIR       Path to Python sources
>>>
>>
>> Oops. That is correct. I am using mod_python-3.1.4, and now I  
>> remember
>> reading that changed. Back to the drawing board, I suppose.
>>
>> --
>> Waitman Gobble
>> http://waitman.net/
>> (707) 237-6921
>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From alexmdac at gmail.com  Sun Nov 20 06:54:43 2005
From: alexmdac at gmail.com (Alex Mendes da Costa)
Date: Sun Nov 20 06:54:48 2005
Subject: [mod_python] Problem installing apache2/mod_python.
In-Reply-To: <0BE11D08-843E-4655-A5F0-87EF54C6CD4C@dscpl.com.au>
References: <2eeb88480511192339u5b32b6b4t8e56cc37e2d9ca75@mail.gmail.com>
	<3795.69.181.250.18.1132473136.squirrel@mail.emkhost.com>
	<2eeb88480511200018l10ba5a6duf18875946bbac1c2@mail.gmail.com>
	<3988.69.181.250.18.1132475407.squirrel@mail.emkhost.com>
	<2eeb88480511200216n6b2fabf1ja31a1c250aaad06a@mail.gmail.com>
	<0BE11D08-843E-4655-A5F0-87EF54C6CD4C@dscpl.com.au>
Message-ID: <2eeb88480511200354o2ab8d990x6896fdb993417185@mail.gmail.com>

On 11/20/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 3.1.4 and earlier versions of mod_python can have
> problems
> on Mac OS X if you use the version of Python supplied by Apple.

Hi Graham,

Thanks for the suggestion.  I'm not using the version of Python
supplied by Apple; I installed 2.4 after tiring of the former's lack
of readline support.  Mod_python 3.1.4 seems to be working fine now :)
 I'll bear in mind what you say in case it breaks in future, though.

Alex

From sruiz at redreddesign.com  Mon Nov 21 09:12:42 2005
From: sruiz at redreddesign.com (sergio)
Date: Mon Nov 21 09:12:43 2005
Subject: [mod_python] tutorial..
Message-ID: <4381D5DA.3020106@redreddesign.com>


i am thinking really seriously about moving my development to mod_python..

i have been using php for web development for a few years, and have 
started using python for app development.

i would really like to make the switch, but i have been having trouble 
figuring out exactly how to make the switch cleanly (the work i do is 
production work, so i can't afford a lapse in deadlines..)

can anyone suggest a good tutorial or text that covers mod_python?

the things that i cannot live without are:

database (mysql) interaction..
sessions
file uploads

i think that's it so far..

-- 
___
sergio t. ruiz
red red design
419.207.3927
www.redreddesign.com
From mmokrejs at ribosome.natur.cuni.cz  Mon Nov 21 09:50:31 2005
From: mmokrejs at ribosome.natur.cuni.cz (=?ISO-8859-2?Q?Martin_MOKREJ=A9?=)
Date: Mon Nov 21 09:50:54 2005
Subject: [mod_python] NEWS file contents
Message-ID: <4381DEB7.3030406@ribosome.natur.cuni.cz>

Hi,
  I has a look into the 3.2.5b/NEWS file and there's:

Nov 15 2005 -   3.2.5b is being tagged

Oct 28 2005 -   3.2.4b is being tagged

Oct 22 2005 -   3.2.3b is being tagged

Sep 13 2005 -   3.2.2b is being tagged

Sep  6 2005 -   3.2.1b is being tagged

Aug 16 2005 -   3.2.0b is being tagged

Feb 17 2004 -   3.1.3 is being tagged

Oct 14 2003 -   3.1.1b is tagged

Aug 29 2003 -   3.1.0a (Alpha) is out

Mar 17 2003 -   3.0.3 is released 

                This file will no longer have details, since those
                are in CVS anyway.

[cut]

What's the point to have such a file? I'd suggest either to remove it
or put the cvs comments into the file. I understand you have no time
to summarize the cvs changes into a brief paragraph per released
version, but something should happen with this.

Just put in the cvs comments. (Sorry for my ignorance, but I'm probably
never going to check the cvs comments through cvs interface myself, so
that's why I'd happily browse through the NEWS file. I think I'm not the
only one.)

Martin
From jgentil at sebistar.net  Mon Nov 21 09:59:26 2005
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Mon Nov 21 09:59:58 2005
Subject: [mod_python] tutorial..
In-Reply-To: <4381D5DA.3020106@redreddesign.com>
References: <4381D5DA.3020106@redreddesign.com>
Message-ID: <200511210859.36377.jgentil@sebistar.net>

On Monday 21 November 2005 08:12 am, sergio wrote:

> can anyone suggest a good tutorial or text that covers mod_python?

The documentation for mod_python is not overly long or complex.  Heh, I 
printed it out and had it for a bathroom reader for a while.  :-)

> the things that i cannot live without are:
> database (mysql) interaction..

That really has not much at all to do with Python.  There is a very well 
known module called MySQLdb that implements a DBAPI-2 compatable 
interface for database access.  You'll find it's documentation here:

http://sourceforge.net/docman/display_doc.php?docid=26238&group_id=22307

> sessions

Sessions are pretty straightforward.  
http://www.modpython.org/live/current/doc-html/pyapi-sess-classes.html

> file uploads

File uploads are handled by the FieldStorage class.  
http://www.modpython.org/live/current/doc-html/pyapi-util-fstor.html


-- 
_________________________________________________________

  Jon-Pierre Gentil     KC9CAF    PGP: 0x7E1CBA17
  jabber: jgentil@sebistar.net    web: www.sebistar.net
  "If you think education is expensive, try ignorance."
_________________________________________________________ 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 835 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051121/fb37136d/attachment.bin
From arnarb at oddi.is  Mon Nov 21 10:23:45 2005
From: arnarb at oddi.is (Arnar Birgisson)
Date: Mon Nov 21 10:24:17 2005
Subject: [mod_python] tutorial..
Message-ID: <s381e69c.015@Lime.oddi.is>

Hello there,

>> database (mysql) interaction..
>
> That really has not much at all to do with Python.  There is a very well 
> known module called MySQLdb that implements a DBAPI-2 compatable 
> interface for database access.  You'll find it's documentation here:
> 
> http://sourceforge.net/docman/display_doc.php?docid=26238&group_id=22307 

I found the MySQLdb documentation to be much more useful after studying the PEP for DB-API 2.0
http://www.python.org/peps/pep-0249.html 

Arnar




From jpg at jgassociates.ca  Mon Nov 21 10:45:53 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Nov 21 10:45:39 2005
Subject: [mod_python] NEWS file contents
In-Reply-To: <4381DEB7.3030406@ribosome.natur.cuni.cz>
References: <4381DEB7.3030406@ribosome.natur.cuni.cz>
Message-ID: <4381EBB1.3030809@jgassociates.ca>

Martin MOKREJ? wrote:
> Hi,
>   I has a look into the 3.2.5b/NEWS file and there's:
> 
> Nov 15 2005 -   3.2.5b is being tagged
> 
> Oct 28 2005 -   3.2.4b is being tagged
> 
> Oct 22 2005 -   3.2.3b is being tagged
> 
> Sep 13 2005 -   3.2.2b is being tagged
> 
> Sep  6 2005 -   3.2.1b is being tagged
> 
> Aug 16 2005 -   3.2.0b is being tagged
> 
> Feb 17 2004 -   3.1.3 is being tagged
> 
> Oct 14 2003 -   3.1.1b is tagged
> 
> Aug 29 2003 -   3.1.0a (Alpha) is out
> 
> Mar 17 2003 -   3.0.3 is released 
> 
>                 This file will no longer have details, since those
>                 are in CVS anyway.
> 
> [cut]
> 
> What's the point to have such a file? I'd suggest either to remove it
> or put the cvs comments into the file. I understand you have no time
> to summarize the cvs changes into a brief paragraph per released
> version, but something should happen with this.
> 
> Just put in the cvs comments. (Sorry for my ignorance, but I'm probably
> never going to check the cvs comments through cvs interface myself, so
> that's why I'd happily browse through the NEWS file. I think I'm not the
> only one.)

I get your point, but how may people are going to wade through the svn 
logs to dig out relevant information either? Just to give a bit a 
perspective I took a look at the svn logs from 2000-05 to the present.

Total log entries:       704
Total lines of text:    4022

For the period between 3.2.4b and 3.2.5b (21 days):
Number of log entries:    36
Lines of text:           196

Plus you get such useful bits of information such as:
-----------------------------------------------------------------------
r329311 | jgallacher | 2005-10-28 17:44:16 -0400 (Fri, 28 Oct 2005) | 2 
lines
Fixed a bit of garbled text in the docs.
-----------------------------------------------------------------------

If people really do need that level of detail they *should* grab the svn 
log.

Personally, I think the NEWS file should be reserved for information 
about the mod_python project, and the information you want - about the 
mod_python code - should go in a separate CHANGES file. Currently this 
information is in the changes section of the html docs: 
doc-html/node97.html. I had proposed a CHANGES file on the python-dev 
list, but Grisha was not enthusiatic since it adds another file that 
would need to be maintained. I may sneak it in anyway when his back is 
turned. *Oh look, A BEAR!!* svn add CHANGES; svn ci CHANGES :)

Jim


From mmokrejs at ribosome.natur.cuni.cz  Mon Nov 21 10:50:34 2005
From: mmokrejs at ribosome.natur.cuni.cz (=?windows-1252?Q?Martin_MOKREJ=8A?=)
Date: Mon Nov 21 10:50:37 2005
Subject: [mod_python] NEWS file contents
In-Reply-To: <4381EBB1.3030809@jgassociates.ca>
References: <4381DEB7.3030406@ribosome.natur.cuni.cz>
	<4381EBB1.3030809@jgassociates.ca>
Message-ID: <4381ECCA.7000000@ribosome.natur.cuni.cz>

Hi Jim,
  I got you point as well. I agree there should be a just brief info what has
changed ... in that case provide concise overview of changes between 3.2.2b
and 3.2.3b, etc. That would be excellent. ;)
  I just wanted to bring it to your attention. Something _should_ happen,
and I wouldn';t cry if Grisha drops the NEWS file then. ;)
M.

Jim Gallacher wrote:
> Martin MOKREJ? wrote:
> 
>> Hi,
>>   I has a look into the 3.2.5b/NEWS file and there's:
>>
>> Nov 15 2005 -   3.2.5b is being tagged
>>
>> Oct 28 2005 -   3.2.4b is being tagged
>>
>> Oct 22 2005 -   3.2.3b is being tagged
>>
>> Sep 13 2005 -   3.2.2b is being tagged
>>
>> Sep  6 2005 -   3.2.1b is being tagged
>>
>> Aug 16 2005 -   3.2.0b is being tagged
>>
>> Feb 17 2004 -   3.1.3 is being tagged
>>
>> Oct 14 2003 -   3.1.1b is tagged
>>
>> Aug 29 2003 -   3.1.0a (Alpha) is out
>>
>> Mar 17 2003 -   3.0.3 is released
>>                 This file will no longer have details, since those
>>                 are in CVS anyway.
>>
>> [cut]
>>
>> What's the point to have such a file? I'd suggest either to remove it
>> or put the cvs comments into the file. I understand you have no time
>> to summarize the cvs changes into a brief paragraph per released
>> version, but something should happen with this.
>>
>> Just put in the cvs comments. (Sorry for my ignorance, but I'm probably
>> never going to check the cvs comments through cvs interface myself, so
>> that's why I'd happily browse through the NEWS file. I think I'm not the
>> only one.)
> 
> 
> I get your point, but how may people are going to wade through the svn
> logs to dig out relevant information either? Just to give a bit a
> perspective I took a look at the svn logs from 2000-05 to the present.
> 
> Total log entries:       704
> Total lines of text:    4022
> 
> For the period between 3.2.4b and 3.2.5b (21 days):
> Number of log entries:    36
> Lines of text:           196
> 
> Plus you get such useful bits of information such as:
> -----------------------------------------------------------------------
> r329311 | jgallacher | 2005-10-28 17:44:16 -0400 (Fri, 28 Oct 2005) | 2
> lines
> Fixed a bit of garbled text in the docs.
> -----------------------------------------------------------------------
> 
> If people really do need that level of detail they *should* grab the svn
> log.
> 
> Personally, I think the NEWS file should be reserved for information
> about the mod_python project, and the information you want - about the
> mod_python code - should go in a separate CHANGES file. Currently this
> information is in the changes section of the html docs:
> doc-html/node97.html. I had proposed a CHANGES file on the python-dev
> list, but Grisha was not enthusiatic since it adds another file that
> would need to be maintained. I may sneak it in anyway when his back is
> turned. *Oh look, A BEAR!!* svn add CHANGES; svn ci CHANGES :)
> 
> Jim
> 
> 
> 
> 

-- 
Martin Mokrejs
Email: 'bW9rcmVqc21Acmlib3NvbWUubmF0dXIuY3VuaS5jeg==\n'.decode('base64')
GPG key is at http://www.natur.cuni.cz/~mmokrejs
From matt.shaw at elanit.co.uk  Tue Nov 22 06:08:52 2005
From: matt.shaw at elanit.co.uk (Matt Shaw)
Date: Tue Nov 22 06:11:14 2005
Subject: [mod_python] PSP Templating printing in plain text
Message-ID: <B14E4A8CC748314FAC77E52B1B4538F507D3D1C8@ukflhqe001>

I have been playing with Python for making a web project, mainly to learn
the Python language and realised that the most painful part of it all was
not the Python at all but the CGI, so found MOD_PYTHON and am going to use
this as seems perfect.  However when following the example below, it outputs
to the browser as plain text with all the tags shown and not as tho its
HTML, I'm using the Ubuntu 5.10.  Oddly enough it does actually swap out the
variable, so it is kinda working :-) Any help would be appreciated.
 
Here is a snippet of the relevant Apache configuration for using the
Publisher:

<Directory /your/document/root>

SetHandler mod_python

PythonHandler mod_python.publisher

PythonDebug On

</Directory>

Since we're using PSP as a templating mechanism, we need a template. Let's
assume it is in a file named /your/document/root/hello.tmpl:

<html>

   <h1><%= greet %></h2>

</html>

Here is the Python script. Let's assume it is in a file called
/your/document/root/pubpsp.py.

from mod_python import psp



def hello(req, name=''):

   s = 'Hello, there!'

   if name:

       s = 'Hello, %s!' % name.capitalize()



   tmpl = psp.PSP(req, filename='hello.tmpl')

   tmpl.run(vars = { 'greet': s })

   return


- ---------------------------------------------------------------------
Elan is the world's leading IT&T recruitment company. For more information go to www.ElanIT.com.

- ---------------------------------------------------------------------
The contents of this email and any attachment are confidential to the addressee and are intended solely for the addressee's use.  If you are not the addressee, you have received this email in error.  If so, you must not disclose, copy or take any action in reliance on this email and any attachment.  If you received this in error, please contact the sender and delete the material from your computer.  

Although this email and any attachment have been checked for viruses, no liability is accepted by Elan in this regard.  The recipient should carry out virus and other checks as it deems necessary to ensure that this email and any attachments will not adversely affect its systems or data.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051122/5b5516fe/attachment.html
From nicolas.lehuen at gmail.com  Tue Nov 22 08:19:49 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Nov 22 08:19:52 2005
Subject: [mod_python] PSP Templating printing in plain text
In-Reply-To: <B14E4A8CC748314FAC77E52B1B4538F507D3D1C8@ukflhqe001>
References: <B14E4A8CC748314FAC77E52B1B4538F507D3D1C8@ukflhqe001>
Message-ID: <c298f2d70511220519u48d5e984j@mail.gmail.com>

Hi Matt,

Looks like your browser doesn't recognize the document as HTML. Try to
set the Content-Type header of the response :

def hello(req, name=''):
   s = 'Hello, there!'
   if name:
       s = 'Hello, %s!' % name.capitalize()

   # Here it is
   req.content_type = 'text/html'

   tmpl = psp.PSP(req, filename='hello.tmpl')
   tmpl.run(vars = { 'greet': s })
   return

Regards,
Nicolas


2005/11/22, Matt Shaw <matt.shaw@elanit.co.uk>:
>
> I have been playing with Python for making a web project, mainly to learn
> the Python language and realised that the most painful part of it all was
> not the Python at all but the CGI, so found MOD_PYTHON and am going to use
> this as seems perfect.  However when following the example below, it outputs
> to the browser as plain text with all the tags shown and not as tho its
> HTML, I'm using the Ubuntu 5.10.  Oddly enough it does actually swap out the
> variable, so it is kinda working :-) Any help would be appreciated.
>
>
>
> Here is a snippet of the relevant Apache configuration for using the
> Publisher:<Directory /your/document/root>
> SetHandler mod_python
> PythonHandler mod_python.publisher
> PythonDebug On
> </Directory>
>
>
> Since we're using PSP as a templating mechanism, we need a template. Let's
> assume it is in a file named /your/document/root/hello.tmpl:<html>
>  <h1><%= greet %></h2>
> </html>
>
>
> Here is the Python script. Let's assume it is in a file called
> /your/document/root/pubpsp.py.from mod_python import psp
>
> def hello(req, name=''):
>  s = 'Hello, there!'
>  if name:
>  s = 'Hello, %s!' % name.capitalize()
>
>  tmpl = psp.PSP(req, filename='hello.tmpl')
>  tmpl.run(vars = { 'greet': s })
>  return
>
>  -
> ---------------------------------------------------------------------
>  Elan is the world's leading IT&T recruitment company. For more information
> go to www.ElanIT.com.
>
>  -
> ---------------------------------------------------------------------
>  The contents of this email and any attachment are confidential to the
> addressee and are intended solely for the addressee's use. If you are not
> the addressee, you have received this email in error. If so, you must not
> disclose, copy or take any action in reliance on this email and any
> attachment. If you received this in error, please contact the sender and
> delete the material from your computer.
>
>  Although this email and any attachment have been checked for viruses, no
> liability is accepted by Elan in this regard. The recipient should carry out
> virus and other checks as it deems necessary to ensure that this email and
> any attachments will not adversely affect its systems or data.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

From anthony at ataribaby.org  Tue Nov 22 12:30:44 2005
From: anthony at ataribaby.org (Anthony L.)
Date: Tue Nov 22 12:30:52 2005
Subject: [mod_python] Sanitizing user input... but not totally.
Message-ID: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>

Does mod_python or even Python have a function for sanitizing user  
input? I wrote the following code which does the trick, but it only  
allows alphanumeric characters:

	s = '#/A%(.n=t$h^&o@n*":;<.?/-_+=!y)'
         return filter(lambda c:c.isalnum(), s)

This does a great job of cleaning up the string, but I would like to  
extend it to allow certain extra characters as I desire. For example,  
in certain inputs I want to allow underscores, tildes, periods, and  
spaces.

Am I better off using regular expressions? It's my understanding that  
the above code is better performance and load wise versus regular  
expressions where there are many simultaneous user inputs.

I'd like to remain positive by building a whitelist of acceptable  
characters rather than to blacklist every possible bad character, but  
I would like to code unicode support as well, so I am nervous about  
scanning each and every character in a user input to see if it is not  
on the allowable list... seems inefficient.

Anthony
From jpg at jgassociates.ca  Tue Nov 22 13:00:26 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Nov 22 12:59:18 2005
Subject: [mod_python] Sanitizing user input... but not totally.
In-Reply-To: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
References: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
Message-ID: <43835CBA.2060506@jgassociates.ca>

Anthony L. wrote:
> Does mod_python or even Python have a function for sanitizing user  
> input? I wrote the following code which does the trick, but it only  
> allows alphanumeric characters:
> 
>     s = '#/A%(.n=t$h^&o@n*":;<.?/-_+=!y)'
>         return filter(lambda c:c.isalnum(), s)
> 
> This does a great job of cleaning up the string, but I would like to  
> extend it to allow certain extra characters as I desire. For example,  
> in certain inputs I want to allow underscores, tildes, periods, and  
> spaces.
> 
> Am I better off using regular expressions? It's my understanding that  
> the above code is better performance and load wise versus regular  
> expressions where there are many simultaneous user inputs.
> 
> I'd like to remain positive by building a whitelist of acceptable  
> characters rather than to blacklist every possible bad character, but  I 
> would like to code unicode support as well, so I am nervous about  
> scanning each and every character in a user input to see if it is not  
> on the allowable list... seems inefficient.


Have you taken a look at escape in the xml.sax.saxutils python module?

Jim
From deron.meranda at gmail.com  Tue Nov 22 12:59:54 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Nov 22 12:59:59 2005
Subject: [mod_python] Sanitizing user input... but not totally.
In-Reply-To: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
References: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
Message-ID: <5c06fa770511220959n135befa6k122dcc056e38a626@mail.gmail.com>

On 11/22/05, Anthony L. <anthony@ataribaby.org> wrote:
> Does mod_python or even Python have a function for sanitizing user
> input?

Santizing is usually very application specific.  Both in what
patterns of characters are acceptible, as well as what to do
if the rules aren't met (simply remove the offending characters,
replace them with something else, show an error page, etc.)

So it's usually best for each application to provide it's own
functions to do this.

However, you should be aware of some common mechanisms
in the libraries you may import.  For instance,

In myghty:
  m.apply_escapes()

In cgi:
  cgi.escape()

In urllib, urllib2:
  urllib.quote(), urllib2.quote_plus()

In DBI (most python database interfaces):
  db.escape()   % use for embedding values in SQL statements

For Unix shell commands (if you're invoking external apps):
  shlex.escape()

Also if you're wanting to make sure filenames are "safe" you
may also want to apply this test:
  import os
  def is_filename_safe( f ):
     if not f or f.startswith('.') or f.find(os.path.sep)>=0:
        return false
     return true

> Am I better off using regular expressions? It's my understanding that
> the above code is better performance and load wise versus regular
> expressions where there are many simultaneous user inputs.

Performance depends on what kind of filtering you are doing.
If using regular expressions though, you should try to use
compiled regular expression objects.  That eliminates most of
the expensive part of using re's for the second and subsequent
use.

Also look at the standard function string.translate().  It may do
much of what you want.

--
Deron Meranda

From list at joreybump.com  Tue Nov 22 13:20:49 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov 22 13:20:58 2005
Subject: [mod_python] Sanitizing user input... but not totally.
In-Reply-To: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
References: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
Message-ID: <43836181.9050708@joreybump.com>

Anthony L. wrote:
> Does mod_python or even Python have a function for sanitizing user  
> input? 

This depends on the context. For database storage, use placeholders. 
This will protect from SQL injection and support intuitive queries (no 
need to escape your query terms). But you will still need to use 
something like cgi.escape() when pulling strings from the db and 
printing them to a browser.
From eltuza at gmail.com  Tue Nov 22 14:02:31 2005
From: eltuza at gmail.com (El TuZa)
Date: Tue Nov 22 14:02:36 2005
Subject: [mod_python] Database error and files problem
Message-ID: <1005e9c00511221102v4812a820te8930197737c00ce@mail.gmail.com>

Hi, I'm having 2 different problems. First the most important. I am
using publisher (modpython 2 and apache 1.3.33) and when i want to
open a file it jumps with  "IOError: [Errno 2] No such file or
directory:" no matter the path (i've tried  ./template, ../template,
../../template, with template located in the same folder as the .py).
Secondly, sometimes (and i can not tell when or why) it gives:

 File "/usr/lib/python2.4/site-packages/MySQLdb/__init__.py", line 66,
in Connect
    return Connection(*args, **kwargs)

  File "/usr/lib/python2.4/site-packages/MySQLdb/connections.py", line
134, in __init__
    super(Connection, self).__init__(*args, **kwargs2)

InternalError: (-1, 'server not initialized')
and the code is always the same. So, sometimes the database works, and
some times i get this.
Could someone please tell me what could be going on here?
If you need more information just ask for it.
Thanks
tuza

--
Fui a hacer el ITV y me dieron la oblea. Junto a ella un paquete de
Operas y un CD de Pavarotti. Todo encaja a la perfecci?n. Todo, menos
la marcha atr?s.

From grahamd at dscpl.com.au  Tue Nov 22 16:54:48 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 22 16:54:52 2005
Subject: [mod_python] Database error and files problem
Message-ID: <1132696488.2785@dscpl.user.openhosting.com>

El TuZa wrote ..
> Hi, I'm having 2 different problems. First the most important. I am
> using publisher (modpython 2 and apache 1.3.33) and when i want to
> open a file it jumps with  "IOError: [Errno 2] No such file or
> directory:" no matter the path (i've tried  ./template, ../template,
> ../../template, with template located in the same folder as the .py).

The current working directory could be anything when using mod_python.
Therefore you cannot use relative pathnames. Instead use something like:

  import os

  __here__ = os.path.dirname(__file__)
  filename = os.path.join(__here__,"template")

This finds the directory the .py file is contained in and then appends your
relative path to it to yield an absolute path.

In other contexts, you may want to use req.filename or req.hlist.directory
instead of __file__. It depends on what you want to use as the anchor point
for your relative paths.

Graham
From deron.meranda at gmail.com  Tue Nov 22 17:07:29 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Nov 22 17:07:33 2005
Subject: [mod_python] Sanitizing user input... but not totally.
In-Reply-To: <43836181.9050708@joreybump.com>
References: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
	<43836181.9050708@joreybump.com>
Message-ID: <5c06fa770511221407l5d9d22ackdf35e6a49c06c9fb@mail.gmail.com>

On 11/22/05, Jorey Bump <list@joreybump.com> wrote:
> But you will still need to use
> something like cgi.escape() when pulling strings from the db and
> printing them to a browser.

Remember when using cgi.escape that if you're writing something
to an element attribute (anything inside a tag, between < and >)
you should call it via cgi.escape(string,True), not just cgi.escape(string).

If you use Myghty's m.apply_escape(), it is already always safe
whether in an attribute or just normal content.

Also remember the Myghty escape type 'x' can be used for
any XML document, whereas 'h' should only be used for HTML.
--
Deron Meranda

From sundberg.bjorn at gmail.com  Tue Nov 22 18:34:49 2005
From: sundberg.bjorn at gmail.com (Bjorn Sundberg)
Date: Tue Nov 22 18:34:53 2005
Subject: [mod_python] mod_python authentication
Message-ID: <a380ef360511221534n132ed994q713d807ae0a48007@mail.gmail.com>

Hello i'm still a newcomer to mod_python and i have some questions about
authentication in mod_python.I'm using the publisher with psp templates.

First of all, i'm trying to get the basic http authentication to work with
limited success. Some times the promt for the username and password shows
and some other times it does not. Second thong is that i have creat success
with the publisher handler authentication "__auth__(), __access__()". My
questions are, is the publisher handler authentication a basic http
authentication and whats the difference between the PythonAuthenHandler and
the publisher authentication?

Is there a way do use http digest authentication?

Thanks in advance.
Regards

Bj?rn S

Here is my apache mod_python.conf file for basic http authentication.

---------mod_python.conf-------------

<Directory /home/httpd/html/py/ip/ip2/5.1.1>
SetHandler mod_python
PythonHandler mod_python.publisher
PythonAuthenHandler 5-1-1
PythonDebug On
AuthType Basic
AuthName "Restricted Area"
require valid-user
</Directory>

-------python code-------------------

#!/usr/bin/env python
# -*- coding: ISO-8859-1 -*-

from mod_python import psp, apache


def authenhandler(req):

pw = req.get_basic_auth_pw()
user = req.user

if user == "spam" and pw == "eggs":
return apache.OK
else:
return apache.HTTP_UNAUTHORIZED
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051123/aa211dfe/attachment.html
From grahamd at dscpl.com.au  Tue Nov 22 19:01:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 22 19:01:16 2005
Subject: [mod_python] mod_python authentication
Message-ID: <1132704069.10863@dscpl.user.openhosting.com>

Bjorn Sundberg wrote ..
> Hello i'm still a newcomer to mod_python and i have some questions about
> authentication in mod_python.I'm using the publisher with psp templates.
> 
> First of all, i'm trying to get the basic http authentication to work with
> limited success. Some times the promt for the username and password shows
> and some other times it does not. Second thong is that i have creat success
> with the publisher handler authentication "__auth__(), __access__()". My
> questions are, is the publisher handler authentication a basic http
> authentication

Yes.

> and whats the difference between the PythonAuthenHandler
> and the publisher authentication?

They are two different mechanisms for achieving the same end. In one
case all configuration is done within the mod_python publisher code and
mod_python.publisher handles the authentication handshake as necessary.
When you use the mod_python.publisher approach, it can only impose the
authentication on your mod_python.publisher published methods. That is,
if there are other static files in the same directory that Apache is
serving up, they will not fall under the authentication mechanism.

To impose authentication on a whole directory, you will need to do it using
the Apache configuration mechanism. That is, the AuthType/AuthName
directives etc. You should be able to either specify a password database
of some form for Apache to use, or use an authenhandler() for performing
the actual password validation.

> Is there a way do use http digest authentication?

No. HTTP digest authentication and mod_python.publisher are currently
incompatible. See:

  http://issues.apache.org/jira/browse/MODPYTHON-47

It is actually a simple fix, but wasn't done for mod_python 3.2.

Even if fixed, the HTTP digest authentication has to be done by Apache,
it cannot be done by mod_python.publisher when using __auth__ etc.
The fix is merely to stop mod_python.publisher barfing when it is being
done by Apache.
 
Graham
From grahamd at dscpl.com.au  Tue Nov 22 19:29:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 22 19:30:21 2005
Subject: [mod_python] mod_python authentication
Message-ID: <1132705799.18235@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Bjorn Sundberg wrote ..
> > Is there a way do use http digest authentication?
> 
> No. HTTP digest authentication and mod_python.publisher are currently
> incompatible. See:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-47
> 
> It is actually a simple fix, but wasn't done for mod_python 3.2.
> 
> Even if fixed, the HTTP digest authentication has to be done by Apache,
> it cannot be done by mod_python.publisher when using __auth__ etc.
> The fix is merely to stop mod_python.publisher barfing when it is being
> done by Apache.

Actually, as usual there is nearly always a way to fudge things. You could
still use Apache HTTP digest authentication (managed by Apache) and
still use mod_python.publisher by having an authenhandler() which
deleted the "Authorization" header so that mod_python.publisher didn't
find it and therefore didn't barf.

  def authenhandler(req):

    if req.headers_in.has_key("Authorization"):
       del req.headers_in["Authorization"]

    ... etc.

I haven't tried this, but it should work.

Graham
From vallo at gmx.ch  Tue Nov 22 20:01:32 2005
From: vallo at gmx.ch (Valentin D.)
Date: Tue Nov 22 20:01:50 2005
Subject: [mod_python] [SPAM] apache + python
Message-ID: <op.s0n44uea8almoq@matou>

Hi Guys,

does somebody know how to chagne my apache2 config. on Debian
in order to execute python cgi programs.

I basically need to enable a directory with python files
e.g.
/var/www/my_python_stuff/*

or

/var/www/cgi/*

to be executed from my browser using apache2.
e.g.
http://localhost/cgi/*

thanks in advance.
Cheers
Valentin
From grahamd at dscpl.com.au  Tue Nov 22 20:11:36 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 22 20:11:41 2005
Subject: [SPAM] [mod_python] [SPAM] apache + python
Message-ID: <1132708296.6433@dscpl.user.openhosting.com>

You don't need mod_python to execute standard CGI scripts, even if
written in Python. See Apache documentation for how to setup CGI.

  http://httpd.apache.org/docs/2.0/howto/cgi.html

Valentin D. wrote ..
> Hi Guys,
> 
> does somebody know how to chagne my apache2 config. on Debian
> in order to execute python cgi programs.
> 
> I basically need to enable a directory with python files
> e.g.
> /var/www/my_python_stuff/*
> 
> or
> 
> /var/www/cgi/*
> 
> to be executed from my browser using apache2.
> e.g.
> http://localhost/cgi/*
> 
> thanks in advance.
> Cheers
> Valentin
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Tue Nov 22 20:29:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 22 20:29:45 2005
Subject: [mod_python] mod_python authentication
Message-ID: <1132709380.14365@dscpl.user.openhosting.com>

Bjorn Sundberg wrote ..
> Thanks Graham for your quick response. Its 2 am and my head is abit slow.
> But is the idea to let apache do the digest authentication, that is apache
> takes care of matching username against the password supplied in the
> authenhandler()?

If you use AuthDigestFile to specify a user/password file that Apache can
itself use, the authenhandler() isn't even required. As you probably know,
you can find more details of how to set up Apache at:

  http://httpd.apache.org/docs/2.0/mod/mod_auth_digest.html

Given that Apache will handle all aspects of authorisation, all that needs
to be done now is to work around the problem in mod_python.publisher
that prevents it being used in a directory authenticated using digest
authentication.

I was putting that workaround in authenhandler(), but probably shouldn't
have suggested it as it has probably confused the issue. What has to be
done though is to hook in a bit of code somehow before the handler
for mod_python.publisher. This could be done in an earlier processing
phase or as a content handler just prior to mod_python.publisher is
triggered. I would suggest the latter.

To do that, where you currently have:

  PythonHandler mod_python.publisher

change it to:

  PythonHandler my_digest_workaround::_delete_authorization_header
  PythonHandler mod_python.publisher

When you specify two handlers like this, mod_python will execute each in
turn. Thus, by adding a _delete_authorization_header() method to a module
my_digest_workaround we can hook in some code to run before
mod_python.publisher. The content of my_digest_workaround would thus be:

   from mod_python import apache
   def _delete_authorization_header(req):
     if req.headers_in.has_key("Authorization"):
        del req.headers_in["Authorization"]
     return apache.OK

The my_digest_workaround module could be put in the same directory as
.htaccess file, or if using global Apache configuration in root directory of
where your published files are kept. I explicitly called the handler
_delete_authorization_header(), with a leading underscore so that it
will not be found if some addressed a URL for publisher at it directly.

End result is that the workaround gets called first and it removes the
problem header and then publisher gets executed and your function
called.

Graham

> Bj?rn S
> 
> On 11/23/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Graham Dumpleton wrote ..
> > > Bjorn Sundberg wrote ..
> > > > Is there a way do use http digest authentication?
> > >
> > > No. HTTP digest authentication and mod_python.publisher are currently
> > > incompatible. See:
> > >
> > >   http://issues.apache.org/jira/browse/MODPYTHON-47
> > >
> > > It is actually a simple fix, but wasn't done for mod_python 3.2.
> > >
> > > Even if fixed, the HTTP digest authentication has to be done by Apache,
> > > it cannot be done by mod_python.publisher when using __auth__ etc.
> > > The fix is merely to stop mod_python.publisher barfing when it is being
> > > done by Apache.
> >
> > Actually, as usual there is nearly always a way to fudge things. You
> could
> > still use Apache HTTP digest authentication (managed by Apache) and
> > still use mod_python.publisher by having an authenhandler() which
> > deleted the "Authorization" header so that mod_python.publisher didn't
> > find it and therefore didn't barf.
> >
> >   def authenhandler(req):
> >
> >     if req.headers_in.has_key("Authorization"):
> >        del req.headers_in["Authorization"]
> >
> >     ... etc.
> >
> > I haven't tried this, but it should work.
> >
> > Graham
> >
From hoopoh at gmail.com  Wed Nov 23 03:41:04 2005
From: hoopoh at gmail.com (=?EUC-KR?B?sce/wMDP?=)
Date: Wed Nov 23 03:41:07 2005
Subject: [mod_python] apache aborted when SOAPpy function called
Message-ID: <6e0879b20511230041v91b72b7u@mail.gmail.com>

 installed apache and mod_python .
and test SOAPpy but WSDL.Proxy() made apache aborted.

OS : linux red hat AS4.
apache version: 2.0.55
python version : 2.3.4
SOAPpy version : 0.11.6

apache setting
setHandler python-program
AddHandler mod_python .py
PythonHandler mod_python.publisher


=====================search.py =======
from SOAPpy import WSDL
import SOAPpy

WSDLFILE =' http://pub.paran.com/mercurie/GoogleSearch.wsdl'
APIKEY= 'mfk8FmpQFHKPXhHG/6oHamYZNGO8doAD'

_server =WSDL.Proxy(WSDLFILE,config=SOAPpy.SOAPConfig(debug=1))

def search(r,q='test'):
""" Search Google and return list of (title, link, description)"""
results = _server.doGoogleSearch(
APIKEY,q,0,10,False, "",False,"", "utf-8", "utf-8")
return 'ok'

=========================================

i called http://testsvr. root/search/search?q=someword.

but apache aborted , loggig like this

httpd: Objects/stringobject.c:110: PyString_FromString: Assertion `str !=
((void *)0)' failed.
[Thu Nov 10 16:08:46 2005] [notice] child pid 26359 exit signal Aborted (6)


How can I solve it ?...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051123/fc17b9c8/attachment.html
From azaroth at liverpool.ac.uk  Wed Nov 23 04:50:45 2005
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Wed Nov 23 04:50:49 2005
Subject: [mod_python] apache aborted when SOAPpy function called
In-Reply-To: <6e0879b20511230041v91b72b7u@mail.gmail.com>
References: <6e0879b20511230041v91b72b7u@mail.gmail.com>
Message-ID: <Pine.GSO.4.58.0511230949410.10503@uxa.liv.ac.uk>


Try installing expat-1.95.8 somewhere apache will see it.
And try switching python up to 2.4.2

(I have this problem using ZSI)

Rob


On Wed, 23 Nov 2005, [EUC-KR] ?????? wrote:

> installed apache and mod_python .
>and test SOAPpy but WSDL.Proxy() made apache aborted.
>
>OS : linux red hat AS4.
>apache version: 2.0.55
>python version : 2.3.4
>SOAPpy version : 0.11.6
>
>apache setting
>setHandler python-program
>AddHandler mod_python .py
>PythonHandler mod_python.publisher
>
>
>=====================search.py =======
>from SOAPpy import WSDL
>import SOAPpy
>
>WSDLFILE =' http://pub.paran.com/mercurie/GoogleSearch.wsdl'
>APIKEY= 'mfk8FmpQFHKPXhHG/6oHamYZNGO8doAD'
>
>_server =WSDL.Proxy(WSDLFILE,config=SOAPpy.SOAPConfig(debug=1))
>
>def search(r,q='test'):
>""" Search Google and return list of (title, link, description)"""
>results = _server.doGoogleSearch(
>APIKEY,q,0,10,False, "",False,"", "utf-8", "utf-8")
>return 'ok'
>
>=========================================
>
>i called http://testsvr. root/search/search?q=someword.
>
>but apache aborted , loggig like this
>
>httpd: Objects/stringobject.c:110: PyString_FromString: Assertion `str !=
>((void *)0)' failed.
>[Thu Nov 10 16:08:46 2005] [notice] child pid 26359 exit signal Aborted (6)
>
>
>How can I solve it ?...
>

From eltuza at gmail.com  Wed Nov 23 07:53:06 2005
From: eltuza at gmail.com (El TuZa)
Date: Wed Nov 23 07:53:10 2005
Subject: [mod_python] Database error and files problem
In-Reply-To: <1132696488.2785@dscpl.user.openhosting.com>
References: <1132696488.2785@dscpl.user.openhosting.com>
Message-ID: <1005e9c00511230453g76e10125weafc4f97f745cbae@mail.gmail.com>

thanks Graham, that path issue is solved now. But i still get the
'Server not initialized' message from my database. Of course, i know
the database is up. I also tried with different users and databases
and it's the same, some times it works and some times it does not.
Any clue?
Thanks
Tuza

From grisha at apache.org  Wed Nov 23 10:30:23 2005
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Wed Nov 23 10:30:33 2005
Subject: [mod_python] ANNOUNCE: Mod_python 3.2.5 Beta
Message-ID: <20051123102324.A63699@grisha.dyndns.org>


The Apache Software Foundation and The Apache HTTP Server Project are 
pleased to announce the 3.2.5 Beta release mod_python.

Version 3.2.5b of mod_python features several new functions and attributes 
providing better access to apache internals, file-based sessions and other 
session improvements, as well as many bug fixes and various performance 
and security improvements. A detailed description of the changes is 
available in Appendix A of the mod_python manual, also available here:

http://www.modpython.org/live/mod_python-3.2.5b/doc-html/node97.html

Beta releases are NOT considered stable and usually contain bugs.

This release is intended to solicit widespread testing of the code. We 
strongly recommend that you try out your existing applications and 
experiment with new features in a non-production environment using this 
version and report any problems you may encounter so that they can be 
addressed before the final release.

Preferred method of reporting problems is the mod_python user list 
mod_python@modpython.org.

Mod_python 3.2.5b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit http://www.modpython.org/

Regards,

Grisha Trubetskoy and the Apache mod_python team.
From sruiz at redreddesign.com  Wed Nov 23 10:52:13 2005
From: sruiz at redreddesign.com (sergio)
Date: Wed Nov 23 10:52:07 2005
Subject: [mod_python] leap of faith..
Message-ID: <4384902D.5080301@redreddesign.com>


okay, here i go.. i have a project due in the next week and a half..

it's a basic ad campaign management system, but with a few specialized 
twists.. nothing super intense.. but something that has to be branded to 
  our company and able to read our databases and lock into some of our 
in house design issues..

like i said, i have done everything php for the past few years.. (before 
that, i was programming non web things)..

i have taken a liking to developing a page class in php that defines the 
page, and anything that differs between pages is just overwritten in 
another php file. i am hoping to use a model like this on this project, 
too..

anyway.. it will need:

a page class with functions to generate the html entities..
smtp
mysql access
authentication using usernames/passwords in a mysql database..
session control to keep track of the user's status.

i am starting this project as we speak, so don't be surprised if you see 
a ton of emails from me that resemble crying..

thanks!

-- 
___
sergio t. ruiz
red red design
419.207.3927
www.redreddesign.com
From grisha at apache.org  Wed Nov 23 10:30:23 2005
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Wed Nov 23 10:53:37 2005
Subject: [mod_python] [SPAM] ANNOUNCE: Mod_python 3.2.5 Beta
Message-ID: <20051123102324.A63699@grisha.dyndns.org>

The Apache Software Foundation and The Apache HTTP Server Project are 
pleased to announce the 3.2.5 Beta release mod_python.

Version 3.2.5b of mod_python features several new functions and attributes 
providing better access to apache internals, file-based sessions and other 
session improvements, as well as many bug fixes and various performance 
and security improvements. A detailed description of the changes is 
available in Appendix A of the mod_python manual, also available here:

http://www.modpython.org/live/mod_python-3.2.5b/doc-html/node97.html

Beta releases are NOT considered stable and usually contain bugs.

This release is intended to solicit widespread testing of the code. We 
strongly recommend that you try out your existing applications and 
experiment with new features in a non-production environment using this 
version and report any problems you may encounter so that they can be 
addressed before the final release.

Preferred method of reporting problems is the mod_python user list 
mod_python@modpython.org.

Mod_python 3.2.5b is available for download from:

http://httpd.apache.org/modules/python-download.cgi

For more information about mod_python visit http://www.modpython.org/

Regards,

Grisha Trubetskoy and the Apache mod_python team.

From sruiz at redreddesign.com  Wed Nov 23 10:55:49 2005
From: sruiz at redreddesign.com (sergio)
Date: Wed Nov 23 10:55:42 2005
Subject: [mod_python] mod_python usage..
Message-ID: <43849105.10508@redreddesign.com>


quick question..

how prevalent is mod_python on rental servers?

we have a server that hosts our web stuff, but i host some stuff 
personally on rental sites that i would like to start scripting in 
mod_perl..

one of the reasons i ask this is that alot of the stuff we develop here 
at rrd, we do not host, but clients are willing to take our 
recommendations on hosting.

for php, this is not a problem, since everyone can run php..

i am not sure if this is the case with mod_python..

thanks!

-- 
___
sergio t. ruiz
red red design
419.207.3927
www.redreddesign.com
From sruiz at redreddesign.com  Wed Nov 23 11:28:49 2005
From: sruiz at redreddesign.com (sergio)
Date: Wed Nov 23 11:28:54 2005
Subject: [mod_python] ide's people are using..
Message-ID: <438498C1.5050509@redreddesign.com>


wondering what ide's people are using for developing in mod_perl..

i have been using dreamweaver for a long time, and there are some things 
i really like about it.

i like being able to see all the files on the web server in a directory 
tree, and open whatever i need at will..

i like how it handles php.. no biggie, just syntax help and text 
highlighting.. i find that highlighting is the only real useful thing here..

i would like to use an ide that maybe i could use for php maintenance at 
the same time..

i would like something that interfaces cleanly to subversion..

i am currently checking out komodo, but i am really missing having a 
live file tree (since i end up editing alot of xml or css or config 
files at the same time..)

anyone have any recommendations?

-- 
___
sergio t. ruiz
red red design
419.207.3927
www.redreddesign.com
From azaroth at liverpool.ac.uk  Wed Nov 23 12:27:23 2005
From: azaroth at liverpool.ac.uk (Rob Sanderson)
Date: Wed Nov 23 11:42:20 2005
Subject: [mod_python] ide's people are using..
In-Reply-To: <438498C1.5050509@redreddesign.com>
References: <438498C1.5050509@redreddesign.com>
Message-ID: <1132766843.16250.64.camel@helmsdeep>

On Wed, 2005-11-23 at 11:28 -0500, sergio wrote:
> wondering what ide's people are using for developing in mod_perl..

No offence, but are you sure you have the right list?

This is specifically for mod_python, not general web development topics.

Rob

-- 
Dr Robert Sanderson
Dept of Computer Science, University of Liverpool
Home:     http://www.csc.liv.ac.uk/~azaroth/
Cheshire: http://www.cheshire3.org/

From nicolas.lehuen at gmail.com  Wed Nov 23 11:47:39 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Nov 23 11:47:43 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <43849105.10508@redreddesign.com>
References: <43849105.10508@redreddesign.com>
Message-ID: <c298f2d70511230847s71f1667w@mail.gmail.com>

Hi Sergio,

This is a global answer to all your mails.

Given the facts that you have about 8 days to learn a new development
environment, a new templating system, (maybe a new language ?),
implement your project, and that mod_python support is VERY slim on
rented server (even if you hosting provider supports mod_python, it
will support a very old and buggy version), do yourself a favor and
forget about it.

Just implement it quick and dirtily using PHP.

That's right, that's me telling you NOT to use mod_python and use PHP
instead. This way you'll manage your deadline and buy some more time
to do it correctly in mod_python.

Be aware however that your requirement for shared hosting providers is
almost surely a show-stopper for mod_python, at least for now. Maybe
when we'll have a more stable version will we be in position to lobby
the hosting providers to support it.

Best wishes for your project,
Nicolas

2005/11/23, sergio <sruiz@redreddesign.com>:
>
> quick question..
>
> how prevalent is mod_python on rental servers?
>
> we have a server that hosts our web stuff, but i host some stuff
> personally on rental sites that i would like to start scripting in
> mod_perl..
>
> one of the reasons i ask this is that alot of the stuff we develop here
> at rrd, we do not host, but clients are willing to take our
> recommendations on hosting.
>
> for php, this is not a problem, since everyone can run php..
>
> i am not sure if this is the case with mod_python..
>
> thanks!
>
> --
> ___
> sergio t. ruiz
> red red design
> 419.207.3927
> www.redreddesign.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From nicolas.lehuen at gmail.com  Wed Nov 23 11:56:15 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Nov 23 11:56:18 2005
Subject: [mod_python] ide's people are using..
In-Reply-To: <1132766843.16250.64.camel@helmsdeep>
References: <438498C1.5050509@redreddesign.com>
	<1132766843.16250.64.camel@helmsdeep>
Message-ID: <c298f2d70511230856r592c4ad3o@mail.gmail.com>

Yeah, sergio, you might get better results from the mailing list if
you don't mix up mod_perl and mod_python :).

My favorite development environment is a text editor... But please
let's not launch a thread about this editor being better than that
other one !

Regards,
Nicolas

2005/11/23, Rob Sanderson <azaroth@liverpool.ac.uk>:
> On Wed, 2005-11-23 at 11:28 -0500, sergio wrote:
> > wondering what ide's people are using for developing in mod_perl..
>
> No offence, but are you sure you have the right list?
>
> This is specifically for mod_python, not general web development topics.
>
> Rob
>
> --
> Dr Robert Sanderson
> Dept of Computer Science, University of Liverpool
> Home:     http://www.csc.liv.ac.uk/~azaroth/
> Cheshire: http://www.cheshire3.org/
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From waitman at waitman.net  Wed Nov 23 11:57:11 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Wed Nov 23 11:57:14 2005
Subject: [mod_python] ide's people are using..
In-Reply-To: <438498C1.5050509@redreddesign.com>
References: <438498C1.5050509@redreddesign.com>
Message-ID: <4668.69.181.250.18.1132765031.squirrel@mail.emkhost.com>




>
> wondering what ide's people are using for developing in mod_perl..
> anyone have any recommendations?
>

Hello Sergio,

Are we talking mod_perl or mod_python here?

Anyhow, I have used HomeSite on a daily basis for years. *Not the
half-baked version in DW, the stand-alone that was originally developed by
Nick Bradbury. I actually wish his release of TopStyle behaved a little
more like HomeSite but there are a couple of things that kill it for me.

The downside of HomeSite is that it does not seem to want to do Python
syntax highlighting. There might be a way to train the thing, but I
haven't looked too far into it.

Another editor I use often is Quanta Gold from theKompany. It is a pretty
good cross platform editor, but there are a few things I don't like about
the way it functions.


Take care,

Waitman


-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From deron.meranda at gmail.com  Wed Nov 23 13:17:26 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Nov 23 13:17:30 2005
Subject: [mod_python] Calling APR optional functions provided by modules
Message-ID: <5c06fa770511231017r3f19187ay463e745901b1ca3c@mail.gmail.com>

Has anyone given any thought about how to allow mod_python
to lookup and call optional functions from other modules?

This could be important for instance when writing an authentication
or authorization handler which needs to determine SSL properties (even if
to just answer the simple question: is the connection SSL encrypted).  The
normal way of looking in the subprocess_env for SSL_* variables does not
work in those early phases because those variables are not set until the
main handler phase.

The mod_ssl module though does provide both a ssl_is_https() and
ssl_var_lookup() optional functions which can be used in earlier
phases.  For example look at how mod_rewrite calls those; using
the APR_DECLARE_OPTIONAL_FN and APR_RETRIEVE_OPTIONAL_FN
macros.

I can see how it might be very hard to support optional functions in
general because of the C type linkage issue, but perhaps a select few
could be coded directly into mod_python.
--
Deron Meranda

From jpg at jgassociates.ca  Wed Nov 23 13:38:14 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Nov 23 13:36:56 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <c298f2d70511230847s71f1667w@mail.gmail.com>
References: <43849105.10508@redreddesign.com>
	<c298f2d70511230847s71f1667w@mail.gmail.com>
Message-ID: <4384B716.6070304@jgassociates.ca>

Hi Sergio,

I hate to turn anyone away from mod_python, but I have to agree with 
everything Nicolas says. If you can switch to a new development 
environment and code your application in less that 2 weeks... well you 
are a better man than I, Sergio. Granted we aren't talking about Zope 
here, but still...

Even if you can deliver your app on time, there is still the hosting 
issue. My personal feeling is that mod_python is not suitable for a 
shared hosting environment at this time. It's too hard, or even 
impossible, to isolate each virtual host. Consider session locking as an 
example. Session locking makes use of global mutexes which are a limited 
resource. One bad application (coding error or otherwise) could consume 
all the locks on the server, effectively starving every other virtual 
host which is using sessions so that they are all hosed. I'd certainly 
like to see mod_python reach the point where it's suitable for use in a 
shared hosting environment, and is as ubiquitous as php. There are 
changes that can be made to make it better, but there may be some 
fundamental issues which cannot be resolved.

I think mod_python fits in a niche where the developer has a much 
greater degree of control over the apache server. The ideal situation is 
where you have your own apache server process, such as your own server 
or a virtual host setup. Somebody like openhosting.com comes to mind. 
(I'm not affiliated - just putting a plug in for our BDFL ;) )

Good luck with your project, be it in mod_python or otherwise.

Regards,
Jim

PS. my development environment: gvim, subversion, ssh, rsync - who could 
ask for anything more?


Nicolas Lehuen wrote:
> Hi Sergio,
> 
> This is a global answer to all your mails.
> 
> Given the facts that you have about 8 days to learn a new development
> environment, a new templating system, (maybe a new language ?),
> implement your project, and that mod_python support is VERY slim on
> rented server (even if you hosting provider supports mod_python, it
> will support a very old and buggy version), do yourself a favor and
> forget about it.
> 
> Just implement it quick and dirtily using PHP.
> 
> That's right, that's me telling you NOT to use mod_python and use PHP
> instead. This way you'll manage your deadline and buy some more time
> to do it correctly in mod_python.
> 
> Be aware however that your requirement for shared hosting providers is
> almost surely a show-stopper for mod_python, at least for now. Maybe
> when we'll have a more stable version will we be in position to lobby
> the hosting providers to support it.
> 
> Best wishes for your project,
> Nicolas
> 
> 2005/11/23, sergio <sruiz@redreddesign.com>:
> 
>>quick question..
>>
>>how prevalent is mod_python on rental servers?
>>
>>we have a server that hosts our web stuff, but i host some stuff
>>personally on rental sites that i would like to start scripting in
>>mod_perl..
>>
>>one of the reasons i ask this is that alot of the stuff we develop here
>>at rrd, we do not host, but clients are willing to take our
>>recommendations on hosting.
>>
>>for php, this is not a problem, since everyone can run php..
>>
>>i am not sure if this is the case with mod_python..
>>
>>thanks!
>>
>>--
>>___
>>sergio t. ruiz
>>red red design
>>419.207.3927
>>www.redreddesign.com
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From nick at dd.revealed.net  Wed Nov 23 13:43:31 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Nov 23 13:43:40 2005
Subject: [mod_python] ide's people are using..
In-Reply-To: <438498C1.5050509@redreddesign.com>
References: <438498C1.5050509@redreddesign.com>
Message-ID: <4384B853.7050702@dd.revealed.net>

Eclipse + pydev + subclipse

Nick

sergio wrote:
> 
> wondering what ide's people are using for developing in mod_perl..
> 
> i have been using dreamweaver for a long time, and there are some things 
> i really like about it.
> 
> i like being able to see all the files on the web server in a directory 
> tree, and open whatever i need at will..
> 
> i like how it handles php.. no biggie, just syntax help and text 
> highlighting.. i find that highlighting is the only real useful thing 
> here..
> 
> i would like to use an ide that maybe i could use for php maintenance at 
> the same time..
> 
> i would like something that interfaces cleanly to subversion..
> 
> i am currently checking out komodo, but i am really missing having a 
> live file tree (since i end up editing alot of xml or css or config 
> files at the same time..)
> 
> anyone have any recommendations?
> 

From sruiz at redreddesign.com  Wed Nov 23 13:57:49 2005
From: sruiz at redreddesign.com (sergio)
Date: Wed Nov 23 13:57:45 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <4384B716.6070304@jgassociates.ca>
References: <43849105.10508@redreddesign.com>
	<c298f2d70511230847s71f1667w@mail.gmail.com>
	<4384B716.6070304@jgassociates.ca>
Message-ID: <4384BBAD.8020907@redreddesign.com>


> everything Nicolas says. If you can switch to a new development 
> environment and code your application in less that 2 weeks... well you 
> are a better man than I, Sergio. Granted we aren't talking about Zope 

well, i was maybe a little misleading.. i have been using python for a 
good deal of time for other programs we use/develop (mostly gui stuff) 
in house.. so, its' not too bad.. i am just a little entrenched in being 
able to see my files all the time..

the main reason i want to switch is that the handling of complex arrays 
is much more straightforward than what i am doing now...


> issue. My personal feeling is that mod_python is not suitable for a 
> shared hosting environment at this time. It's too hard, or even 
> impossible, to isolate each virtual host. Consider session locking as an 

this is a real show stopper..

i need to produce code that i can hand over, and let someone else host, 
with no issues at all..

> 
> I think mod_python fits in a niche where the developer has a much 
> greater degree of control over the apache server. The ideal situation is 
> where you have your own apache server process, such as your own server 

this makes sense.. i think i will end up doing some in house projects 
this way first, then see what happens..

thanks all for the info...

this is exactly what i needed to hear..

-- 
___
sergio t. ruiz
red red design
419.207.3927
www.redreddesign.com
From grisha at modpython.org  Wed Nov 23 14:47:07 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Nov 23 14:47:20 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <4384B716.6070304@jgassociates.ca>
References: <43849105.10508@redreddesign.com>
	<c298f2d70511230847s71f1667w@mail.gmail.com>
	<4384B716.6070304@jgassociates.ca>
Message-ID: <20051123144248.E63699@grisha.dyndns.org>


On Wed, 23 Nov 2005, Jim Gallacher wrote:

> Even if you can deliver your app on time, there is still the hosting issue.

There is no hosting issue if you get yourself a VPS (Virtual Private 
Server). Shared hosting for weenies, anyway. :-)

Grisha
From waitman at waitman.net  Wed Nov 23 14:54:51 2005
From: waitman at waitman.net (Waitman Gobble)
Date: Wed Nov 23 14:54:54 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <20051123144248.E63699@grisha.dyndns.org>
References: <43849105.10508@redreddesign.com>
	<c298f2d70511230847s71f1667w@mail.gmail.com>
	<4384B716.6070304@jgassociates.ca>
	<20051123144248.E63699@grisha.dyndns.org>
Message-ID: <3206.69.181.250.18.1132775691.squirrel@mail.emkhost.com>

:-)

i was thinking of a $150 box and a $20 internet connection.

> There is no hosting issue if you get yourself a VPS (Virtual Private
> Server). Shared hosting for weenies, anyway. :-)
>
> Grisha

-- 
Waitman Gobble
http://waitman.net/
(707) 237-6921

From jpg at jgassociates.ca  Wed Nov 23 15:02:10 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Nov 23 15:00:24 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <20051123144248.E63699@grisha.dyndns.org>
References: <43849105.10508@redreddesign.com>	<c298f2d70511230847s71f1667w@mail.gmail.com>	<4384B716.6070304@jgassociates.ca>
	<20051123144248.E63699@grisha.dyndns.org>
Message-ID: <4384CAC2.5090202@jgassociates.ca>

Gregory (Grisha) Trubetskoy wrote:
> 
> On Wed, 23 Nov 2005, Jim Gallacher wrote:
> 
>> Even if you can deliver your app on time, there is still the hosting 
>> issue.
> 
> 
> There is no hosting issue if you get yourself a VPS (Virtual Private 
> Server). Shared hosting for weenies, anyway. :-)

Shouldn't you be working on your ApacheCon presentation instead of 
coming in here and stirring up trouble? ;)

Jim



From sruiz at redreddesign.com  Wed Nov 23 15:02:51 2005
From: sruiz at redreddesign.com (sergio)
Date: Wed Nov 23 15:02:59 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <20051123144248.E63699@grisha.dyndns.org>
References: <43849105.10508@redreddesign.com>	<c298f2d70511230847s71f1667w@mail.gmail.com>	<4384B716.6070304@jgassociates.ca>
	<20051123144248.E63699@grisha.dyndns.org>
Message-ID: <4384CAEB.9010102@redreddesign.com>


> There is no hosting issue if you get yourself a VPS (Virtual Private 
> Server). Shared hosting for weenies, anyway. :-)
> 

this brings up another question...

i am THIS close to grabbing a server from VPS..

my question is..

can i run mod_python on that site if i have it hosting a few different 
sites?

i have about four that i run through a reseller, but i would really like 
to move them to a real server.. i never had any luck with reseller 
accounts..

vps sounds like a great deal..

can someone vouch for them?


-- 
___
sergio t. ruiz
red red design
419.207.3927
www.redreddesign.com
From jpg at jgassociates.ca  Wed Nov 23 15:20:20 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Nov 23 15:18:27 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <4384CAEB.9010102@redreddesign.com>
References: <43849105.10508@redreddesign.com>	<c298f2d70511230847s71f1667w@mail.gmail.com>	<4384B716.6070304@jgassociates.ca>	<20051123144248.E63699@grisha.dyndns.org>
	<4384CAEB.9010102@redreddesign.com>
Message-ID: <4384CF04.8080608@jgassociates.ca>

sergio wrote:
> 
>> There is no hosting issue if you get yourself a VPS (Virtual Private 
>> Server). Shared hosting for weenies, anyway. :-)
>>
> 
> this brings up another question...
> 
> i am THIS close to grabbing a server from VPS..
> 
> my question is..
> 
> can i run mod_python on that site if i have it hosting a few different 
> sites?
> 
> i have about four that i run through a reseller, but i would really like 
> to move them to a real server.. i never had any luck with reseller 
> accounts..
> 
> vps sounds like a great deal..
> 
> can someone vouch for them?

Well, Grisha is one of the openhosting.com founders, as well as the 
creator of mod_python, so I would think they'd be mod_python friendly. :)

Jim



From deron.meranda at gmail.com  Wed Nov 23 16:04:50 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Nov 23 16:04:55 2005
Subject: [mod_python] Re: Calling APR optional functions provided by modules
In-Reply-To: <5c06fa770511231017r3f19187ay463e745901b1ca3c@mail.gmail.com>
References: <5c06fa770511231017r3f19187ay463e745901b1ca3c@mail.gmail.com>
Message-ID: <5c06fa770511231304r2325fdffke4b718404704c0b5@mail.gmail.com>

I went ahead and coded and tested patches to mod_python 3.2.5b
which allow access to many mod_ssl parameters in early request
phases.

I don't know how contributed enhancements like this are normally
handled, so I'm attaching the patch files to this email.  If they
should instead go someplace else please let me know.

Basically I added two new methods to the request object.

  req.is_https()
  req.ssl_var()

which will invoke the mod_ssl optional functions ssl_is_https()
and ssl_var_lookup().  They safely handle the case where
mod_ssl is not loaded or not available.

They also work perfectly fine from say the PythonAccessHandler
phase, whereas using subprocess_env does not.
--
Deron Meranda
-------------- next part --------------
A non-text attachment was scrubbed...
Name: requestobject.c.patch
Type: text/x-patch
Size: 3354 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051123/8566c34a/requestobject.c-0001.bin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: modpython4.tex.patch
Type: text/x-patch
Size: 2585 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051123/8566c34a/modpython4.tex-0001.bin
From anthony at ataribaby.org  Wed Nov 23 16:33:25 2005
From: anthony at ataribaby.org (Anthony L.)
Date: Wed Nov 23 16:33:34 2005
Subject: [SPAM] Re: [mod_python] Sanitizing user input... but not totally.
In-Reply-To: <43836181.9050708@joreybump.com>
References: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>
	<43836181.9050708@joreybump.com>
Message-ID: <D4E67B76-A03D-4015-864A-E4CFB8F3EC9F@ataribaby.org>

Thanks for the suggestions. I am looking into the xml.sax.saxutils  
modules Jim mentioned as well as Python's HTML parsing module.

I recalled an earlier technique I used for blocking undesirable  
characters using JavaScript, and came up with the following:

	x = 'U@s%er#_N$a^m!e%-<'
	
	set = '0123456789 _- 
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.'

	print ''.join( [c for c in x if c in set] )

This is very simple, easily extensible by customizing the set  
variable. It allows me to keep in all my allowable characters  
including underscores and dashes. If I wanted to use this to sanitize  
a user input for an email address, I could add the period and amphora  
to the set variable. This feels pretty fast, though I can't quantify  
speed, and I'm tempted to use it everywhere I don't need to be  
conscious of markup code and SQL injection. But is this a good  
Pythonic way of doing things?

Also, unicode. I'd like to allow input using characters from the  
Latin-1 set, but I can't figure out how. I did the following:

	x = u'?sern?m?'

	set = u'????abcdefghijklmnopqrstuvwxyz'
	
	print ''.join( [c for c in x if c in set] )

But it's not enough and will return a UnicodeEncodeError. Of course,  
it's probably not even proper to include the actual decoded  
characters within the variable. Can someone point me to an exhaustive  
source for unicode on python that has many examples?

Anthony


From mmokrejs at ribosome.natur.cuni.cz  Wed Nov 23 17:26:15 2005
From: mmokrejs at ribosome.natur.cuni.cz (=?windows-1252?Q?Martin_MOKREJ=8A?=)
Date: Wed Nov 23 17:26:15 2005
Subject: [SPAM] Re: [mod_python] Sanitizing user input... but not totally.
In-Reply-To: <D4E67B76-A03D-4015-864A-E4CFB8F3EC9F@ataribaby.org>
References: <F0DE25E7-F6ED-4264-98AD-77B4195B320C@ataribaby.org>	<43836181.9050708@joreybump.com>
	<D4E67B76-A03D-4015-864A-E4CFB8F3EC9F@ataribaby.org>
Message-ID: <4384EC87.4020904@ribosome.natur.cuni.cz>

I have read somewhere the string.maketrans() is most effective.
With the following I:
1) convert 'U' or 'u' into 'T' or 't'
2) while also zap any numbers and space

_sequence = _sequence.translate(string.maketrans('Uu', 'Tt'),' 0123456789')

benchmark yourself.
Martin


Anthony L. wrote:
> Thanks for the suggestions. I am looking into the xml.sax.saxutils 
> modules Jim mentioned as well as Python's HTML parsing module.
> 
> I recalled an earlier technique I used for blocking undesirable 
> characters using JavaScript, and came up with the following:
> 
>     x = 'U@s%er#_N$a^m!e%-<'
>     
>     set = '0123456789 
> _-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.'
> 
>     print ''.join( [c for c in x if c in set] )
> 
> This is very simple, easily extensible by customizing the set variable. 
> It allows me to keep in all my allowable characters including 
> underscores and dashes. If I wanted to use this to sanitize a user input 
> for an email address, I could add the period and amphora to the set 
> variable. This feels pretty fast, though I can't quantify speed, and I'm 
> tempted to use it everywhere I don't need to be conscious of markup code 
> and SQL injection. But is this a good Pythonic way of doing things?
> 
> Also, unicode. I'd like to allow input using characters from the Latin-1 
> set, but I can't figure out how. I did the following:
> 
>     x = u'?sern?m?'
> 
>     set = u'????abcdefghijklmnopqrstuvwxyz'
>     
>     print ''.join( [c for c in x if c in set] )
> 
> But it's not enough and will return a UnicodeEncodeError. Of course, 
> it's probably not even proper to include the actual decoded characters 
> within the variable. Can someone point me to an exhaustive source for 
> unicode on python that has many examples?
> 
> Anthony
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 
Martin Mokrejs
Email: 'bW9rcmVqc21Acmlib3NvbWUubmF0dXIuY3VuaS5jeg==\n'.decode('base64')
GPG key is at http://www.natur.cuni.cz/~mmokrejs
From jpg at jgassociates.ca  Wed Nov 23 18:08:08 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Nov 23 18:05:25 2005
Subject: [mod_python] Re: Calling APR optional functions provided by
	modules
In-Reply-To: <5c06fa770511231304r2325fdffke4b718404704c0b5@mail.gmail.com>
References: <5c06fa770511231017r3f19187ay463e745901b1ca3c@mail.gmail.com>
	<5c06fa770511231304r2325fdffke4b718404704c0b5@mail.gmail.com>
Message-ID: <4384F658.9010006@jgassociates.ca>

Deron Meranda wrote:
> I went ahead and coded and tested patches to mod_python 3.2.5b

With documentation. Yeah!

> I don't know how contributed enhancements like this are normally
> handled, so I'm attaching the patch files to this email.  If they
> should instead go someplace else please let me know.

Create a JIRA issue and attach your files:
http://issues.apache.org/jira/browse/MODPYTHON

Discussion will most likely occur on the developer mailing list.
Subscribe to the python-dev@httpd.apache.org list by mailing 
python-dev-subscribe@httpd.apache.org or access through gmane.org:
http://dir.gmane.org/gmane.comp.apache.mod-python.devel

I think the larger issue that will need to be discussed is summed up 
nicely in your original email:

 > I can see how it might be very hard to support optional functions in
 > general because of the C type linkage issue, but perhaps a select few
 > could be coded directly into mod_python.

The discussion then becomes which "select few" and how do we decide? You 
just know that everyone will have their own favourites, and they'll all 
be different. :)

Regards,
Jim
From grahamd at dscpl.com.au  Wed Nov 23 18:42:55 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 23 18:43:41 2005
Subject: [mod_python] Re: Calling APR optional functions provided by
	modules
In-Reply-To: <5c06fa770511231304r2325fdffke4b718404704c0b5@mail.gmail.com>
References: <5c06fa770511231017r3f19187ay463e745901b1ca3c@mail.gmail.com>
	<5c06fa770511231304r2325fdffke4b718404704c0b5@mail.gmail.com>
Message-ID: <EB855A9F-5B47-4BE0-8D78-1A5DCB4B1A86@dscpl.com.au>

Sorry, quick answer as have practically no time for the next week to
read email. Already gotten in trouble for sending this. :-)

The issue has been discussed previously and I posted some
sample code which might be able to be adapted to create a loadable
module for Python usable in context of mod_python to achieve
some of what you want.

See mailing list archive:

   http://www.modpython.org/pipermail/mod_python/2005-May/018164.html
   http://www.modpython.org/pipermail/mod_python/attachments/ 
20050523/9fa0275b/_mp_mod_ssl.obj
   http://www.modpython.org/pipermail/mod_python/attachments/ 
20050523/9fa0275b/setup.obj

This way of doing things means that there is no changes needed to  
mod_python,
however, it can be a bit tricky to build the module in the first place.

You'll just need to go back and forth through mailing list archive  
thread, as will
not necessarily have more time to discuss it further.

Graham


On 24/11/2005, at 8:04 AM, Deron Meranda wrote:

> I went ahead and coded and tested patches to mod_python 3.2.5b
> which allow access to many mod_ssl parameters in early request
> phases.
>
> I don't know how contributed enhancements like this are normally
> handled, so I'm attaching the patch files to this email.  If they
> should instead go someplace else please let me know.
>
> Basically I added two new methods to the request object.
>
>   req.is_https()
>   req.ssl_var()
>
> which will invoke the mod_ssl optional functions ssl_is_https()
> and ssl_var_lookup().  They safely handle the case where
> mod_ssl is not loaded or not available.
>
> They also work perfectly fine from say the PythonAccessHandler
> phase, whereas using subprocess_env does not.
> --
> Deron Meranda
>
> <requestobject.c.patch>
> <modpython4.tex.patch>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From terry.macdonald at dsl.pipex.com  Thu Nov 24 05:43:59 2005
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Thu Nov 24 05:45:47 2005
Subject: [mod_python] mod_python usage..
In-Reply-To: <4384B716.6070304@jgassociates.ca>
References: <43849105.10508@redreddesign.com>	<c298f2d70511230847s71f1667w@mail.gmail.com>
	<4384B716.6070304@jgassociates.ca>
Message-ID: <4385996F.4000205@dsl.pipex.com>

Jim Gallacher wrote:

>
> PS. my development environment: gvim, subversion, ssh, rsync - who 
> could ask for anything more?
>
Couldn't agree more!
From nlv11281 at natlab.research.philips.com  Thu Nov 24 05:55:15 2005
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Nov 24 05:55:21 2005
Subject: [mod_python] ide's people are using..
In-Reply-To: <438498C1.5050509@redreddesign.com>
References: <438498C1.5050509@redreddesign.com>
Message-ID: <43859C13.3020808@natlab.research.philips.com>

sergio wrote:

 > wondering what ide's people are using for developing in mod_perl..

Eh, that'd be mod_python?

Anyway, I use PSPAD, a freeware editor for Windows that supports many 
languages, works great on mixed linux/unix and windows systems, and very 
nicely syntax-highlights PSP pages.

Comes with a ton of features, including lots of HTML tools, FTP, projects.

For CSS editing, I use the CSSEdit plugin on Firefox. I also use a 
plugin called "tamper data" on Firefox which allows you to see (and 
modify!) exactly what the browser is sending and receiving.

And of course, subversion and cvs (with Tortoise on Windows).

-- 
Mike Looijmans
Philips Natlab / Topic Automation

From bluszcz at jabberpl.org  Sat Nov 26 03:36:17 2005
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Sat Nov 26 03:36:34 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
Message-ID: <200511260936.17927.bluszcz@jabberpl.org>

Hi. I am using modpython+psp. Let's take a short psp example:



<%
if form.has_key('testkey'):
????????req.write(str(form['testkey']))
%>
<form action="dupa.psp" method="get" enctype="multipart/form-data">
<input type="checkbox" name="testkey" value="1">
<input type="checkbox" name="testkey" value="2">
<input type="submit">
</form>

When i set one checkbox, form['testkey'] result is key. When I set two or 
more, this is a list. IMVHO it is a BIG bug. I patched my modpython to give 
always a list:


bluszcz@idoru:$ diff util.py util.py.orig
234c234
<?????????????return?found
---
>?????????????return?found[0]
bluszcz@idoru:$


but i understand why it was like that. Anyone got an idea?

Thanks,

-- 
 __     __   Rafa? Zawadzki [jid/mail: bluszcz@jabberpl.org, skype: blvszcz]
|  |--.|  |.--.--.-----.-----.----.-----. [www: http://bluszcz.jabberpl.org]
|  _  ||  ||  |  |__ --|-- __|  __|-- __| [ http://pyrss.jabberstudio.org/ ]
|_____||__||_____|_____|_____|____|_____|                 ?? 

From nferrier at tapsellferrier.co.uk  Sat Nov 26 08:55:18 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Sat Nov 26 09:12:45 2005
Subject: [mod_python] returning errors from python handler and ErrorDocument
In-Reply-To: <87smaiol5y.fsf@tapsellferrier.co.uk> (Nic Ferrier's message of
	"19 Aug 2004 22:47:05 +0100")
References: <41250784.8020002@krap.dk> <87vffeoob5.fsf@tapsellferrier.co.uk>
	<412518A0.1040300@krap.dk> <87smaiol5y.fsf@tapsellferrier.co.uk>
Message-ID: <87lkzb7buh.fsf_-_@kanga.tapsellferrier.co.uk>

I've got a python handler that does this:

   # something.py

   def handler(http):
      http.status = apache.UNAUTHORIZED
      return apache.OK


And in the apache config I've got something like:

   <Location /something>
   SetHandler python-program
   PythonHandler something
   </Location>

   ErrorDocument 401 /somepage.html


But the error document is not being served for requests to my
handler. I think it should because I'm returning 401.

Can someone enlighten me? Does the request processing just not work
like that?



Nic
From jpg at jgassociates.ca  Sat Nov 26 11:47:55 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Nov 26 11:47:16 2005
Subject: [mod_python] returning errors from python handler and
	ErrorDocument
In-Reply-To: <87lkzb7buh.fsf_-_@kanga.tapsellferrier.co.uk>
References: <41250784.8020002@krap.dk>
	<87vffeoob5.fsf@tapsellferrier.co.uk>	<412518A0.1040300@krap.dk>
	<87smaiol5y.fsf@tapsellferrier.co.uk>
	<87lkzb7buh.fsf_-_@kanga.tapsellferrier.co.uk>
Message-ID: <438891BB.4050804@jgassociates.ca>

Nic Ferrier wrote:
> I've got a python handler that does this:
> 
>    # something.py
> 
>    def handler(http):
>       http.status = apache.UNAUTHORIZED
>       return apache.OK
> 
> 
> And in the apache config I've got something like:
> 
>    <Location /something>
>    SetHandler python-program
>    PythonHandler something
>    </Location>
> 
>    ErrorDocument 401 /somepage.html
> 
> 
> But the error document is not being served for requests to my
> handler. I think it should because I'm returning 401.
> 
> Can someone enlighten me? Does the request processing just not work
> like that?

You would think that just setting the status would suffice but this does 
not seem to be the way it works. Without actually checking I imagine 
that the client will still see the req.status you set, plus whatever 
content your handler dishes out, but you have not told apache that you 
want to interupt processing have sling some different content. You do 
this by raising an exception.

from mod_python import apache

def handler(req):
     if unknown_user(req):
         raise apache.SERVER_RETURN, apache.HTTP_UNAUTHORIZED

     if  user_is_naughty(req):
         raise apache.SERVER_RETURN, apache.HTTP_FORBIDDEN

     if user_is_asking_for_something_silly(req):
         raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND

     req.write("It's all good")
     return apache.OK

Jim



From jpg at jgassociates.ca  Sat Nov 26 13:45:24 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Nov 26 13:44:07 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <200511260936.17927.bluszcz@jabberpl.org>
References: <200511260936.17927.bluszcz@jabberpl.org>
Message-ID: <4388AD44.8050505@jgassociates.ca>

Rafal Zawadzki wrote:
> Hi. I am using modpython+psp. Let's take a short psp example:
> 
> 
> 
> <%
> if form.has_key('testkey'):
>         req.write(str(form['testkey']))
> %>
> <form action="dupa.psp" method="get" enctype="multipart/form-data">
> <input type="checkbox" name="testkey" value="1">
> <input type="checkbox" name="testkey" value="2">
> <input type="submit">
> </form>
> 
> When i set one checkbox, form['testkey'] result is key. When I set two or 
> more, this is a list. IMVHO it is a BIG bug. I patched my modpython to give 
> always a list:
> 
> 
> bluszcz@idoru:$ diff util.py util.py.orig
> 234c234
> <             return found
> ---
> 
>>             return found[0]
> 
> bluszcz@idoru:$
> 
> 
> but i understand why it was like that. Anyone got an idea?

The problem with your patch is that it will likely break every piece of 
form processing code ever written, *except* for the use case you've 
given. :) With this patch, *every* form field will be returned as a 
list. I'm pretty sure that was not your intent. ;)

I don't think this is a BIG bug, more of little implentation quirk. If 
you want a list you can always use the getlist method.
http://www.modpython.org/live/current/doc-html/pyapi-util-fstor.html

I could personally support changes to FieldStorage such that form fields 
are coerced to a particular python type, similar to zope. Zope example:

<input type="checkbox" name="testkey:list" value="1" />
<input type="checkbox" name="testkey:list" value="2" />
<input type="text" name="hits:int" />
<input type="text" name="employee.first_name:records" />
<input type="text" name="employee.last_name:records" />
<input type="text" name="employee.wage:records" />

I do find the current implementation of FieldStorage.__getitem__ a 
little odd from a performance perspective. Each __getitem__ call loops 
through the entire field list resulting in O(n^2) behaviour if you need 
to process all the fields in a form. Ouch. I can't see why we can't 
creat a dict when the form data is initally processed. I think this is 
worthwhile investigating for version 3.3.

On another note, it's helpful when submitting a patch to give some 
additional context. At a minimum please give the mod_python version and 
use diff -u.

Regards,
Jim



From deron.meranda at gmail.com  Sat Nov 26 13:45:08 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Sat Nov 26 13:45:10 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <200511260936.17927.bluszcz@jabberpl.org>
References: <200511260936.17927.bluszcz@jabberpl.org>
Message-ID: <5c06fa770511261045r29a02476s11cce5cbf3f29ebd@mail.gmail.com>

On 11/26/05, Rafal Zawadzki <bluszcz@jabberpl.org> wrote:
> When i set one checkbox, form['testkey'] result is key. When I set two or
> more, this is a list. IMVHO it is a BIG bug.

When the submitted form is being processed there is no way for it to
know how the form variables were created, whether by checkboxes, or
whatever.  So unless it sees a particular named variable more than
once, there is no way to anticipate you want a list rather than a
single value.  For most other input types other than checkboxes you
will almost always want a single value anyway, and not a list.

Also there is a lot of prior tradition that this is how python HTML
form processors should work.  For instance the standard cgi module
also does it this way.

What you can/should do instead is to just change it to a list in your
template if you want rather than patching mod_python.  You can easily
write a helper function as so:

  def force_as_list( v ):
     if type(v) is not type([]):
        return [v]
     return v
--
Deron Meranda

From bluszcz at jabberpl.org  Sat Nov 26 13:55:05 2005
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Sat Nov 26 13:55:21 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <5c06fa770511261045r29a02476s11cce5cbf3f29ebd@mail.gmail.com>
References: <200511260936.17927.bluszcz@jabberpl.org>
	<5c06fa770511261045r29a02476s11cce5cbf3f29ebd@mail.gmail.com>
Message-ID: <200511261955.05196.bluszcz@jabberpl.org>

Dnia sobota 26 listopad 2005 19:45, napisa?e?:

> When the submitted form is being processed there is no way for it to
> know how the form variables were created, whether by checkboxes, or
> whatever.  So unless it sees a particular named variable more than
> once, there is no way to anticipate you want a list rather than a
> single value.  

In my opinion this is not proper way. For example db api always returns list, 
even with single result. 

> Also there is a lot of prior tradition that this is how python HTML
> form processors should work.  For instance the standard cgi module
> also does it this way.

I don't like "tradition" like solutions. I like smart, proper way solutions.

> What you can/should do instead is to just change it to a list in your
> template if you want rather than patching mod_python.  You can easily
> write a helper function as so:

>   def force_as_list( v ):
>      if type(v) is not type([]):
>         return [v]
>      return v

This is not python style, and it breaks duck typing. Check the types? Every 
time? It is not optimal.

Please, give me better reasons than tradition.

Best regards,

-- 
 __     __   Rafa? Zawadzki [jid/mail: bluszcz@jabberpl.org, skype: blvszcz]
|  |--.|  |.--.--.-----.-----.----.-----. [www: http://bluszcz.jabberpl.org]
|  _  ||  ||  |  |__ --|-- __|  __|-- __| [ http://pyrss.jabberstudio.org/ ]
|_____||__||_____|_____|_____|____|_____|                 ?? 

From jpg at jgassociates.ca  Sat Nov 26 14:06:10 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Nov 26 14:04:43 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <5c06fa770511261045r29a02476s11cce5cbf3f29ebd@mail.gmail.com>
References: <200511260936.17927.bluszcz@jabberpl.org>
	<5c06fa770511261045r29a02476s11cce5cbf3f29ebd@mail.gmail.com>
Message-ID: <4388B222.7010903@jgassociates.ca>

Deron Meranda wrote:
> On 11/26/05, Rafal Zawadzki <bluszcz@jabberpl.org> wrote:
> 
>>When i set one checkbox, form['testkey'] result is key. When I set two or
>>more, this is a list. IMVHO it is a BIG bug.
> 
> 
> When the submitted form is being processed there is no way for it to
> know how the form variables were created, whether by checkboxes, or
> whatever.  So unless it sees a particular named variable more than
> once, there is no way to anticipate you want a list rather than a
> single value.  For most other input types other than checkboxes you
> will almost always want a single value anyway, and not a list.
> 
> Also there is a lot of prior tradition that this is how python HTML
> form processors should work.  For instance the standard cgi module
> also does it this way.
> 
> What you can/should do instead is to just change it to a list in your
> template if you want rather than patching mod_python.  You can easily
> write a helper function as so:
> 
>   def force_as_list( v ):
>      if type(v) is not type([]):
>         return [v]
>      return v


Or use form.getlist('testkey')

;)

Jim

From bluszcz at jabberpl.org  Sat Nov 26 14:09:42 2005
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Sat Nov 26 14:09:53 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <4388B222.7010903@jgassociates.ca>
References: <200511260936.17927.bluszcz@jabberpl.org>
	<5c06fa770511261045r29a02476s11cce5cbf3f29ebd@mail.gmail.com>
	<4388B222.7010903@jgassociates.ca>
Message-ID: <200511262009.42041.bluszcz@jabberpl.org>

Dnia sobota 26 listopad 2005 20:06, Jim Gallacher napisa?:

> >   def force_as_list( v ):
> >      if type(v) is not type([]):
> >         return [v]
> >      return v
>
> Or use form.getlist('testkey')
>
> ;)
>
> Jim

I will. 

Cheers,

-- 
 __     __   Rafa? Zawadzki [jid/mail: bluszcz@jabberpl.org, skype: blvszcz]
|  |--.|  |.--.--.-----.-----.----.-----. [www: http://bluszcz.jabberpl.org]
|  _  ||  ||  |  |__ --|-- __|  __|-- __| [ http://pyrss.jabberstudio.org/ ]
|_____||__||_____|_____|_____|____|_____|                 ?? 

From grisha at modpython.org  Sat Nov 26 15:16:24 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Sat Nov 26 15:16:31 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <200511260936.17927.bluszcz@jabberpl.org>
References: <200511260936.17927.bluszcz@jabberpl.org>
Message-ID: <20051126151448.H27062@grisha.dyndns.org>


Rafal -

Before, declaring a BIG bug, RTFM :-)

http://www.modpython.org/live/current/doc-html/pyapi-util-fstor.html

What you're looking for is getfirst() and getlist(), which will 
consistently return either an string or a list.

Grisha

On Sat, 26 Nov 2005, Rafal Zawadzki wrote:

> When i set one checkbox, form['testkey'] result is key. When I set two or
> more, this is a list. IMVHO it is a BIG bug. I patched my modpython to give
> always a list:
From grisha at modpython.org  Sat Nov 26 15:25:37 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Sat Nov 26 15:25:41 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <4388AD44.8050505@jgassociates.ca>
References: <200511260936.17927.bluszcz@jabberpl.org>
	<4388AD44.8050505@jgassociates.ca>
Message-ID: <20051126151635.U27062@grisha.dyndns.org>


On Sat, 26 Nov 2005, Jim Gallacher wrote:

> I could personally support changes to FieldStorage such that form fields are 
> coerced to a particular python type, similar to zope. Zope example:
>
> <input type="checkbox" name="testkey:list" value="1" />

IMO that's more functionality than necessary, you can always do such 
conversion in user code and there is no need for mod_python to dictate how 
it's done and introduce new syntax - this is something that'd be 
appropriate for a mod_python-based framework of some kind, but not in mp 
itself.

> I do find the current implementation of FieldStorage.__getitem__ a little odd 
> from a performance perspective. Each __getitem__ call loops through the 
> entire field list resulting in O(n^2) behaviour if you need to process all 
> the fields in a form. Ouch. I can't see why we can't creat a dict when the 
> form data is initally processed. I think this is worthwhile investigating for 
> version 3.3.

I'm pretty sure there was a reason why it had to be a list, I just can't 
remember what it was. It may be that order of fields is significant.

Grisha
From jpg at jgassociates.ca  Sat Nov 26 16:33:04 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Nov 26 16:30:56 2005
Subject: [mod_python] strange behavior of form + patch for mod_python
In-Reply-To: <20051126151635.U27062@grisha.dyndns.org>
References: <200511260936.17927.bluszcz@jabberpl.org>	<4388AD44.8050505@jgassociates.ca>
	<20051126151635.U27062@grisha.dyndns.org>
Message-ID: <4388D490.9020901@jgassociates.ca>

Gregory (Grisha) Trubetskoy wrote:
> 
> On Sat, 26 Nov 2005, Jim Gallacher wrote:
> 
>> I could personally support changes to FieldStorage such that form 
>> fields are coerced to a particular python type, similar to zope. Zope 
>> example:
>>
>> <input type="checkbox" name="testkey:list" value="1" />
> 
> 
> IMO that's more functionality than necessary, you can always do such 
> conversion in user code and there is no need for mod_python to dictate 
> how it's done and introduce new syntax - this is something that'd be 
> appropriate for a mod_python-based framework of some kind, but not in mp 
> itself.

Fair enough.

> 
>> I do find the current implementation of FieldStorage.__getitem__ a 
>> little odd from a performance perspective. Each __getitem__ call loops 
>> through the entire field list resulting in O(n^2) behaviour if you 
>> need to process all the fields in a form. Ouch. I can't see why we 
>> can't creat a dict when the form data is initally processed. I think 
>> this is worthwhile investigating for version 3.3.
> 
> 
> I'm pretty sure there was a reason why it had to be a list, I just can't 
> remember what it was. It may be that order of fields is significant.

That may be so, but I would think that the most common use case would be 
to use FieldStorage as a dict. It could be a simple as creating and 
dictionary to use as an index. eg.

class FieldStorage:

     def __init__():
         self.index = {}
         self.list = []

         ... blah blah blah ...
         ... create the field and get it's name ...

         self.list.append(field)
         if name in self.index:
             self.index[name].append(field)
         else:
             self.index[name] = [field,]


     def __getitem__(self, key):
         if key not in self.index:
             raise KeyError, key

        found = self.index[key]
        if len(found) == 1:
            return found[0]
        else:
            return found

The FieldStorage methods get, getitems, has_key, __len__, getfirst and 
getlist *all* iterate over the complete list each time they are called. 
For any given field, the order will still be preserved since our dict is 
using a list to hold the field references for each field's key.

I can't see any problems in using this implementation as the users 
application code will still get the same results.

If created a JIRA issue for this, and I'll copy this message there so 
Nicolas won't get mad at me. ;)
http://issues.apache.org/jira/browse/MODPYTHON-93

This discussion should likely move to python-dev at this point anyway.

Regards,
Jim




From grahamd at dscpl.com.au  Sun Nov 27 16:44:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Nov 27 16:44:54 2005
Subject: [mod_python] returning errors from python handler and
	ErrorDocument
In-Reply-To: <438891BB.4050804@jgassociates.ca>
References: <41250784.8020002@krap.dk>
	<87vffeoob5.fsf@tapsellferrier.co.uk>	<412518A0.1040300@krap.dk>
	<87smaiol5y.fsf@tapsellferrier.co.uk>
	<87lkzb7buh.fsf_-_@kanga.tapsellferrier.co.uk>
	<438891BB.4050804@jgassociates.ca>
Message-ID: <F958C8CC-F4C9-4DE8-A003-630173AC4620@dscpl.com.au>

AFAIK, the distinction is that using:

   req.status = apache.HTTP_UNAUTHORIZED
   ...
   return apache.OK

is for when you want to formulate your own response content. Ie.,  
override in the
handler what the error message displayed to the browser is, where  
"..." is replaced
by assignment to req.content_type and req.write() calls. Although, in  
practice, it
possibly should return apache.DONE and not apache.OK so as to avoid  
any later
handlers within the phase or later phases being run. Thus:

   req.status = apache.HTTP_UNAUTHORIZED
   req.content_type = 'text/plain'
   req.write('my error message')
   return apache.DONE

Raise an exception using apache.SERVER_RETURN should be used when you
want to again abort latter handlers in same phase or later phase but  
otherwise
want Apache to then deal with the error response further by  
formatting a precanned
error message or triggering any handler associated with a  
ErrorDocument directive
or delivering back a static file associated with an ErrorDocument  
directive.

Graham

On 27/11/2005, at 3:47 AM, Jim Gallacher wrote:

> Nic Ferrier wrote:
>
>> I've got a python handler that does this:
>>    # something.py
>>    def handler(http):
>>       http.status = apache.UNAUTHORIZED
>>       return apache.OK
>> And in the apache config I've got something like:
>>    <Location /something>
>>    SetHandler python-program
>>    PythonHandler something
>>    </Location>
>>    ErrorDocument 401 /somepage.html
>> But the error document is not being served for requests to my
>> handler. I think it should because I'm returning 401.
>> Can someone enlighten me? Does the request processing just not work
>> like that?
>>
>
> You would think that just setting the status would suffice but this  
> does not seem to be the way it works. Without actually checking I  
> imagine that the client will still see the req.status you set, plus  
> whatever content your handler dishes out, but you have not told  
> apache that you want to interupt processing have sling some  
> different content. You do this by raising an exception.
>
> from mod_python import apache
>
> def handler(req):
>     if unknown_user(req):
>         raise apache.SERVER_RETURN, apache.HTTP_UNAUTHORIZED
>
>     if  user_is_naughty(req):
>         raise apache.SERVER_RETURN, apache.HTTP_FORBIDDEN
>
>     if user_is_asking_for_something_silly(req):
>         raise apache.SERVER_RETURN, apache.HTTP_NOT_FOUND
>
>     req.write("It's all good")
>     return apache.OK
>
> Jim
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From gzlist at googlemail.com  Sun Nov 27 17:27:15 2005
From: gzlist at googlemail.com (Martin _)
Date: Sun Nov 27 17:27:18 2005
Subject: [mod_python] returning errors from python handler and
	ErrorDocument
Message-ID: <d80792120511271427v5506a3f5x8fe29373ac213dca@mail.gmail.com>

In a related query to this one, is it possible to undo a raised http error?
I've not had much luck in sending 404s to a script that then creates the
resource asked for and bounces apache back to try again from the start, the
404 sticks despite my best attempts to overwrite it with a 200:

# httpd.conf
<Directory "D:/website/search">
        ErrorDocument 404 /py/404.xml
</Directory>

<Directory "D:/website/py">
        AddHandler mod_python .xml
        PythonHandler index
</Directory>

# D:/website/py/index.py
def handler(req):
        if not req.prev:
                return apache.HTTP_FORBIDDEN

        ## create relevant resource here ##

        # doesn't help # req.prev.state = apache.HTTP_OK
        # doesn't help # req.state = apache.HTTP_OK
        req.internal_redirect(req.prev.unparsed_uri)
        # doesn't help # req.next.state = apache.HTTP_OK
        # doesn't help # raise apache.SERVER_RETURN, apache.HTTP_OK
        return apache.OK

I'm open to complete rethinks here, this doesn't strike me as optimal, as
the few requests that don't want existing resources will go through three
independant handlers, but for requirements:
-I want to serve static content, even if it's generated because of that
request, as static content, not mod_python created chunked output
-I want to keep all python stuff in that /py/ dir, rather than scattering
scripts all over the tree

Any wise thoughts gratefully received,

Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051127/4c60dba5/attachment.html
From dokter at icg.tu-graz.ac.at  Mon Nov 28 11:30:13 2005
From: dokter at icg.tu-graz.ac.at (Mark Dokter)
Date: Mon Nov 28 11:29:49 2005
Subject: [mod_python] mod_python.so: undefined symbol: ap_loaded_modules
In-Reply-To: <437B7077.40706@jgassociates.ca>
References: <1132115146.7655@dscpl.user.openhosting.com>
	<200511161620.30125.dokter@icg.tu-graz.ac.at>
	<437B7077.40706@jgassociates.ca>
Message-ID: <200511281730.13695.dokter@icg.tu-graz.ac.at>

After a week off (had to study for two exams) I got back to work and to my 
problem loading mod_python. Thank you for all your suggestions, but I still 
have no clue what's wrong.


On Wednesday 16 November 2005 18:46, Jim Gallacher wrote:

>
> Wrong. /etc/apache2/mods-enabled contains symbolic links to
> /etc/apache2/mods-available which in turn contains Apache configuration
> files. These files hold directives for loading *Apache* modules. This
> has nothing to do with the python modules in site-packages/mod_python.
> /usr/lib/apache2/modules does *NOT* belong on your PythonPath.
>
> On Debian:
>
> /etc/apache2/mods-enabled/mod_python.conf should be a symbolic link to
> /etc/apache2/mods-available/mod_python.conf.
>

It is a symbolic link.

> /etc/apache2/mods-available/mod_python.conf should contain:
>
> LoadModule python_module /usr/lib/apache2/modules/mod_python.so
>

On my machine this LoadModule statement is 
in /etc/apache2/mods-available/mod_python.load

>
> What do the first 2 lines of /var/log/apache2/error.log show after an
> Apache restart? They should look something like this:
>
> [Wed Nov 16 12:24:07 2005] [notice] mod_python: Creating 8 session
> mutexes based on 50 max processes and 0 max threads.
> [Wed Nov 16 12:24:07 2005] [notice] Apache/2.0.54 (Debian GNU/Linux)
> DAV/2 SVN/1.2.0 mod_python/3.2.5-dev-20051112 Python/2.3.5 PHP/4.4.0-1
> configured -- resuming normal operations

This is what my log says:

[Sun Nov 27 06:26:46 2005] [notice] mod_python: Creating 20 session mutexes 
based on 20 max processes and 0 max threads.
[Sun Nov 27 06:26:47 2005] [notice] Apache/2.0.54 (Debian GNU/Linux) DAV/2 
SVN/1.2.3 mod_python/3.1.3 Python/2.3.5 PHP/4.3.10-16 mod_ssl/2.0.54 
OpenSSL/0.9.
7g mod_perl/2.0.1 Perl/v5.8.7 configured -- resuming normal operations



>
> Also check the output of the following command:
>    ldd /usr/lib/apache2/modules/mod_python.so |grep python
>
> Which on my system yields:
>    libpython2.3.so.1.0 => /usr/lib/libpython2.3.so.1.0 (0xb7e61000)

Same thing here:

# ldd /usr/lib/apache2/modules/mod_python.so |grep python

libpython2.3.so.1.0 => /usr/lib/libpython2.3.so.1.0 (0xb7e27000)

>
> Jim


Mark
From deron.meranda at gmail.com  Mon Nov 28 13:46:58 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Nov 28 13:47:06 2005
Subject: [mod_python] Re: Calling APR optional functions provided by
	modules
In-Reply-To: <4384F658.9010006@jgassociates.ca>
References: <5c06fa770511231017r3f19187ay463e745901b1ca3c@mail.gmail.com>
	<5c06fa770511231304r2325fdffke4b718404704c0b5@mail.gmail.com>
	<4384F658.9010006@jgassociates.ca>
Message-ID: <5c06fa770511281046n270fc58eid96a9edf5609549c@mail.gmail.com>

On 11/23/05, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Deron Meranda wrote:
> > I went ahead and coded and tested patches to mod_python 3.2.5b
>
> With documentation. Yeah!
>
> > I don't know how contributed enhancements like this are normally
> > handled, so I'm attaching the patch files to this email.  If they
> > should instead go someplace else please let me know.
>
> Create a JIRA issue and attach your files:

Okay, I've submitted this to Jara as issue 94...
http://issues.apache.org/jira/browse/MODPYTHON-94

Feel free to discuss or do whatever with the attached patches.
I'm aware that this isn't a general solution to optional functions,
but it at least lets me get to the important mod_ssl one's, and
may serve as a useful demonstration of how this could be done
on a case-by-case basis for other optional functions.
--
Deron Meranda

From grahamd at dscpl.com.au  Mon Nov 28 16:40:45 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Nov 28 16:40:56 2005
Subject: [mod_python] returning errors from python handler and
	ErrorDocument
In-Reply-To: <d80792120511271427v5506a3f5x8fe29373ac213dca@mail.gmail.com>
References: <d80792120511271427v5506a3f5x8fe29373ac213dca@mail.gmail.com>
Message-ID: <0F56EF57-484A-45E5-AC25-3B8339401661@dscpl.com.au>

My guess is that once the content handler phase has been executed,
or logically passed, that you have no chance of changing what the return
status is. Thus, since for an ErrorDocument directive it is only applied
after the content handler phase of the first attempt has been passed,
whether that is for a mod_python content handler or an inbuilt static
Apache handler for serving static files, you will not be able to do it.

What you instead need to do is to try and detect the condition of a  
missing
file before the content handler phase is executed. To do that, setup a
PythonFixupHandler. Eg:

   <Directory "D:/website/search">
   PythonFixupHandler check_for_missing_target
   </Directory>

This should be done for the search directory. You DO NOT not need to
specify any corresponding SetHandler/AddHandler directive as they
are only relevant to PythonHandler directive and not the other phase
directives.

What will happen now is that for any request received, it will be routed
through the function "fixuphandler" within the specified module. In that
module, you could check for the existance of the target. If it doesn't
exist, then create it:

   # check_for_missing_target.py (module)

   def fixuphandler(req):
     if target is missing:
       create target of request
     return apache.OK

With the target now existing, the content handler phase when applied  
will
possibly be able to find it. I say possibly, as I don't know what you  
are
serving up and other issues such as Apache's URL matching algorithms
may come into play. You may need to actually adjust req.filename to
undo some of what Apache has done.

Anyway, hope that gives you some ideas to play with.

Graham

On 28/11/2005, at 9:27 AM, Martin _ wrote:

> In a related query to this one, is it possible to undo a raised  
> http error? I've not had much luck in sending 404s to a script that  
> then creates the resource asked for and bounces apache back to try  
> again from the start, the 404 sticks despite my best attempts to  
> overwrite it with a 200:
>
> # httpd.conf
> <Directory "D:/website/search">
>         ErrorDocument 404 /py/404.xml
> </Directory>
>
> <Directory "D:/website/py">
>         AddHandler mod_python .xml
>         PythonHandler index
> </Directory>
>
> # D:/website/py/index.py
> def handler(req):
>         if not req.prev:
>                 return apache.HTTP_FORBIDDEN
>
>         ## create relevant resource here ##
>
>         # doesn't help # req.prev.state = apache.HTTP_OK
>         # doesn't help # req.state = apache.HTTP_OK
>         req.internal_redirect(req.prev.unparsed_uri)
>         # doesn't help # req.next.state = apache.HTTP_OK
>         # doesn't help # raise apache.SERVER_RETURN, apache.HTTP_OK
>         return apache.OK
>
> I'm open to complete rethinks here, this doesn't strike me as  
> optimal, as the few requests that don't want existing resources  
> will go through three independant handlers, but for requirements:
> -I want to serve static content, even if it's generated because of  
> that request, as static content, not mod_python created chunked output
> -I want to keep all python stuff in that /py/ dir, rather than  
> scattering scripts all over the tree
>
> Any wise thoughts gratefully received,
>
> Martin
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From woodsman at gmail.com  Tue Nov 29 14:38:40 2005
From: woodsman at gmail.com (Brandon N)
Date: Tue Nov 29 14:38:44 2005
Subject: [mod_python] Vampire/mod_python determining type of argument -
	GET/POST
Message-ID: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>

I've been wondering, when using Vampire/mod_python, how one determines
whether a form argument came over GET or POST.
I'm using:
self._args = vampire.processForm( req )
to get the argument dictionary, and I'm not certain that there are
complementary functions or alternate ones to find this out.

I ask because, as I understand it, the "rule" about GET not being able to
change state means I have to be wary of GETs for various tasks (where a user
might embed certain information in a link and share it with unsuspecting
others).

Thanks in advance for any insight,
Brandon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051129/f0066f2f/attachment.html
From grahamd at dscpl.com.au  Tue Nov 29 14:48:26 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 29 14:48:42 2005
Subject: [mod_python] Vampire/mod_python determining type of argument -
	GET/POST
In-Reply-To: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>
Message-ID: <04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>

Regardless of whether Vampire is used or not, whether GET or POST is  
used
can be determined using "req.method". See request object  
documentation on
mod_python site.

On 30/11/2005, at 6:38 AM, Brandon N wrote:

> I've been wondering, when using Vampire/mod_python, how one  
> determines whether a form argument came over GET or POST.
> I'm using:
> self._args = vampire.processForm( req )
> to get the argument dictionary, and I'm not certain that there are  
> complementary functions or alternate ones to find this out.
>
> I ask because, as I understand it, the "rule" about GET not being  
> able to change state means I have to be wary of GETs for various  
> tasks (where a user might embed certain information in a link and  
> share it with unsuspecting others).
>
> Thanks in advance for any insight,
> Brandon
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From woodsman at gmail.com  Tue Nov 29 14:54:14 2005
From: woodsman at gmail.com (Brandon N)
Date: Tue Nov 29 14:54:17 2005
Subject: [mod_python] Vampire/mod_python determining type of argument -
	GET/POST
In-Reply-To: <04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>
	<04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>
Message-ID: <e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>

I didn't realize it had to be either get or post, but I suppose that makes
sense.

Thanks a lot.

On 11/29/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Regardless of whether Vampire is used or not, whether GET or POST is
> used
> can be determined using "req.method". See request object
> documentation on
> mod_python site.
>
> On 30/11/2005, at 6:38 AM, Brandon N wrote:
>
> > I've been wondering, when using Vampire/mod_python, how one
> > determines whether a form argument came over GET or POST.
> > I'm using:
> > self._args = vampire.processForm( req )
> > to get the argument dictionary, and I'm not certain that there are
> > complementary functions or alternate ones to find this out.
> >
> > I ask because, as I understand it, the "rule" about GET not being
> > able to change state means I have to be wary of GETs for various
> > tasks (where a user might embed certain information in a link and
> > share it with unsuspecting others).
> >
> > Thanks in advance for any insight,
> > Brandon
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051129/4ace9c11/attachment.html
From deron.meranda at gmail.com  Tue Nov 29 15:01:13 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Nov 29 15:01:18 2005
Subject: [mod_python] Vampire/mod_python determining type of argument -
	GET/POST
In-Reply-To: <e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>
	<04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>
	<e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>
Message-ID: <5c06fa770511291201pd447e1fy2fd4038b84c2da7b@mail.gmail.com>

On 11/29/05, Brandon N <woodsman@gmail.com> wrote:
> I didn't realize it had to be either get or post, but I suppose that makes
> sense.

It can be other things too.  In fact I'm using mod_python to process
PUT requests as well.

But in general you should always check the req.method to make
sure you keep with the intended semantics of the operation.

Read up on the HTTP 1.1 RFC.
--
Deron Meranda

From grahamd at dscpl.com.au  Tue Nov 29 15:08:18 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov 29 15:08:31 2005
Subject: [mod_python] Vampire/mod_python determining type of argument -
	GET/POST
In-Reply-To: <e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>
	<04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>
	<e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>
Message-ID: <195FE682-0328-4D3E-9C5A-114DE9F94A1A@dscpl.com.au>

Strictly speaking, GET style form parameters, ie., those provided as  
part of the
query string appended to the URL are processed for any type of HTTP  
request
method type. A form supplied through the request content is only  
possible for
the POST request method type.

For the case of a POST request method type, some parameters could be  
part
of request content and others part of the query string appended to  
the URL, ie.,
there could be a mix of both. I don't believe one can distinguish  
between the
two in this case, except by parsing req.args explictly a second time  
using
parse_qsl from the mod_python.util module.

Graham

On 30/11/2005, at 6:54 AM, Brandon N wrote:

> I didn't realize it had to be either get or post, but I suppose  
> that makes sense.
>
> Thanks a lot.
>
> On 11/29/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:  
> Regardless of whether Vampire is used or not, whether GET or POST is
> used
> can be determined using "req.method". See request object
> documentation on
> mod_python site.
>
> On 30/11/2005, at 6:38 AM, Brandon N wrote:
>
> > I've been wondering, when using Vampire/mod_python, how one
> > determines whether a form argument came over GET or POST.
> > I'm using:
> > self._args = vampire.processForm( req )
> > to get the argument dictionary, and I'm not certain that there are
> > complementary functions or alternate ones to find this out.
> >
> > I ask because, as I understand it, the "rule" about GET not being
> > able to change state means I have to be wary of GETs for various
> > tasks (where a user might embed certain information in a link and
> > share it with unsuspecting others).
> >
> > Thanks in advance for any insight,
> > Brandon
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>

From jpg at jgassociates.ca  Tue Nov 29 15:27:41 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Nov 29 15:27:36 2005
Subject: [mod_python] Vampire/mod_python determining type of argument
	-	GET/POST
In-Reply-To: <5c06fa770511291201pd447e1fy2fd4038b84c2da7b@mail.gmail.com>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>	<04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>	<e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>
	<5c06fa770511291201pd447e1fy2fd4038b84c2da7b@mail.gmail.com>
Message-ID: <438CB9BD.6010208@jgassociates.ca>

Deron Meranda wrote:
> On 11/29/05, Brandon N <woodsman@gmail.com> wrote:
> 
>>I didn't realize it had to be either get or post, but I suppose that makes
>>sense.
> 
> 
> It can be other things too.  In fact I'm using mod_python to process
> PUT requests as well.

However, most browsers IIRC will only submit a form using POST or GET. 
If you use <form method="PUT">, the browser will still use a POST. Same 
goes for urllib2. It would be nice if more clients supported PUT, but 
there you go.

As Deron says there is no problem on the mod_python server side.

Jim
From jpg at jgassociates.ca  Tue Nov 29 15:41:41 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Nov 29 15:41:30 2005
Subject: [mod_python] Vampire/mod_python determining type of argument
	-	GET/POST
In-Reply-To: <438CB9BD.6010208@jgassociates.ca>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>	<04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>	<e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>	<5c06fa770511291201pd447e1fy2fd4038b84c2da7b@mail.gmail.com>
	<438CB9BD.6010208@jgassociates.ca>
Message-ID: <438CBD05.5050408@jgassociates.ca>

Jim Gallacher wrote:
> Deron Meranda wrote:
> 
>> On 11/29/05, Brandon N <woodsman@gmail.com> wrote:
>>
>>> I didn't realize it had to be either get or post, but I suppose that 
>>> makes
>>> sense.
>>
>>
>>
>> It can be other things too.  In fact I'm using mod_python to process
>> PUT requests as well.
> 
> 
> However, most browsers IIRC will only submit a form using POST or GET. 
> If you use <form method="PUT">, the browser will still use a POST. Same 
> goes for urllib2. It would be nice if more clients supported PUT, but 
> there you go.
> 
> As Deron says there is no problem on the mod_python server side.

I take that back. If you are using FieldStorage to get the form data 
then there is a problem with PUT. FieldStorage will only process POST 
requests. That is something I'd like to see changed.

Jim
From jpg at jgassociates.ca  Tue Nov 29 16:24:03 2005
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Nov 29 16:23:39 2005
Subject: [mod_python] Vampire/mod_python determining type of argument
	-	GET/POST
In-Reply-To: <438CBD05.5050408@jgassociates.ca>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>	<04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>	<e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>	<5c06fa770511291201pd447e1fy2fd4038b84c2da7b@mail.gmail.com>	<438CB9BD.6010208@jgassociates.ca>
	<438CBD05.5050408@jgassociates.ca>
Message-ID: <438CC6F3.6040002@jgassociates.ca>

Jim Gallacher wrote:
> Jim Gallacher wrote:
> 
>> Deron Meranda wrote:
>>
>>> On 11/29/05, Brandon N <woodsman@gmail.com> wrote:
>>>
>>>> I didn't realize it had to be either get or post, but I suppose that 
>>>> makes
>>>> sense.
>>>
>>>
>>>
>>>
>>> It can be other things too.  In fact I'm using mod_python to process
>>> PUT requests as well.
>>
>>
>>
>> However, most browsers IIRC will only submit a form using POST or GET. 
>> If you use <form method="PUT">, the browser will still use a POST. 
>> Same goes for urllib2. It would be nice if more clients supported PUT, 
>> but there you go.


You should just ignore me here. That's not the way PUT should be used 
anyway.

Jim

From deron.meranda at gmail.com  Tue Nov 29 17:06:17 2005
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Nov 29 17:06:24 2005
Subject: [mod_python] Vampire/mod_python determining type of argument -
	GET/POST
In-Reply-To: <438CB9BD.6010208@jgassociates.ca>
References: <e3a291250511291138s94e6edbvc3c110908a347b0a@mail.gmail.com>
	<04F1E0B8-41AD-4FC5-A2EC-8F473A1C3572@dscpl.com.au>
	<e3a291250511291154m7b98d36dg69c74853279e0b16@mail.gmail.com>
	<5c06fa770511291201pd447e1fy2fd4038b84c2da7b@mail.gmail.com>
	<438CB9BD.6010208@jgassociates.ca>
Message-ID: <5c06fa770511291406x44fdcdb6s234254f4b27a35dd@mail.gmail.com>

On 11/29/05, Jim Gallacher <jpg@jgassociates.ca> wrote:
> However, most browsers IIRC will only submit a form using POST or GET.

Yes, if it's a browser, and if it's a <form>.  But the server doesn't
know for sure where it came from, it might not be a browser.
You should still always check if you want to be safe.


Anyway, looking at things closer.  You determine the type of request
via the req.method which can be about anything "GET","POST","PUT",
"DELETE",...

"Arguments" can be decoded anyway you want.  There are
expected conventions though, and this is what mod_python's
FieldStorage class attempts to do (you don't have to use
FieldStorage though, which I don't for example when I handle
PUT requests).

In mod_python the rules seem to be:

  1. Regardless of method, decode arguments from the request URL (the ?-part)
  AND
  2. If method is POST:
     2a. If Content-Type is 'application/x-www.form-urlencoded':
           URL-decode *additional* arguments from request body
     2b. If Content-Type is 'multipart/form-data':
           decode one-level of the multipart mime message and
           each part becomes an *additional* argument

The standard cgi module's rules are little different though--
from what I can tell:

   1. If the method is either GET or HEAD, decode arguments from
       the request URL, if any.
   OR
   2. For any other method:
      2a.If Content-Type is 'application/x-www-form-urlencode':
           URL-decode arguments from the request body
      2b. If Content-Type is any 'multpart/*':
            docode the multipart mime message and each part
            becomes an argument.

So with the standard cgi, you can never get a combination
of arguments that come from both the URL and the content
body.  But with mod_python, you can.


> If you use <form method="PUT">, the browser will still use a POST.

This is IMHO a browser bug.  If it doesn't support the method then
it should not submit anything.  But from what I can tell most browsers
will treat anything other than GET or POST as if it were a GET
(at least Firefox).  urllib2 likewise not useful for anything other
than gets or posts.

But if you use Python's httplib, you can specify any method you
want.  Other "tools" such as wget and curl also allow you to
specify other methods.


Anyway, if it is important to tell where arguments came from,
perhaps the FieldStorage and related classes could be updated
to track an additional attribute, perhaps called "source"?  And
it could either be "url" or "content".  This wouldn't be a very
challenging patch.

But, off course, this would be adding functionality that's not in the
standard cgi module's FieldStorage classes, so I don't know if
that's where we want mod_python to go.  But the standard cgi
module don't mix sources anyway, so it's not an issue for them.
--
Deron Meranda

From gavin at sz.net.cn  Wed Nov 30 03:31:04 2005
From: gavin at sz.net.cn (Gavin)
Date: Wed Nov 30 03:31:27 2005
Subject: [mod_python] mod_python3.2.2b problem with session
Message-ID: <05be01c5f588$67343800$aa1ea8c0@frank>

Hello all,

I am using mod_python3.2.2b(python2.4.1,apache2.0.55), I write a test program as 
following to test Session,but Failed. I have attached the Error message as following. 
This code works correctly in mod_python3.1.14(python2.3.5),I don't kown its why?

<%
from mod_python import apache,Session

sid='1223'
secret="Abstfgsd"
S=Session.Session(req,sid,secret,1800)
sid=S.id()
if S.is_new():
    #S.save()
    req.write(sid)
else:
   S.load()
   req.write(sid)
%>

<%
%>

The Error message in apache is as following:

[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp: Traceback (most recent call last):
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/apache.py", line 299, in HandlerDispatch\n    result = object(req)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/psp.py", line 302, in handler\n    p.run()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/psp.py", line 213, in run\n    exec code in global_scope
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/data/HTTPD/htdocs/FeedBack/sid.m"
, line 9, in ?\n    S.save()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/Session.py", line 209, in save\n    self.do_save(dict)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/Session.py", line 335, in do_save\n    dbm = self._get_dbm()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/Session.py", line 310, in _get_dbm\n    result = self._dbmtype.open(self._dbmfile, 'c')
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/anydbm.py
", line 83, in open\n    return mod.open(file, flag, mode)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/dbhash.py
", line 16, in open\n    return bsddb.hashopen(file, flag, mode)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/bsddb/__i
nit__.py", line 285, in hashopen\n    e = _openDBEnv()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/bsddb/__i
nit__.py", line 339, in _openDBEnv\n    e.open('.', db.DB_PRIVATE | db.DB_CREATE | db.DB_THREAD | db.DB_INIT_LOCK | db.DB_INIT_MPOO
L)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp: DBError: (159940408, 'Unknown error 159940
408')





From scott_list at mischko.com  Wed Nov 30 22:04:32 2005
From: scott_list at mischko.com (Scott Chapman)
Date: Wed Nov 30 22:04:42 2005
Subject: [mod_python] ANNOUNCE: Mod_python 3.2.5 Beta
In-Reply-To: <20051123102324.A63699@grisha.dyndns.org>
References: <20051123102324.A63699@grisha.dyndns.org>
Message-ID: <438E6840.1040902@mischko.com>

Does anyone have this available binary for Windows and Python 2.4.2?

Gregory (Grisha) Trubetskoy wrote:
> 
> The Apache Software Foundation and The Apache HTTP Server Project are 
> pleased to announce the 3.2.5 Beta release mod_python.
> 
> Version 3.2.5b of mod_python features several new functions and 
> attributes providing better access to apache internals, file-based 
> sessions and other session improvements, as well as many bug fixes and 
> various performance and security improvements. A detailed description of 
> the changes is available in Appendix A of the mod_python manual, also 
> available here:
> 
> http://www.modpython.org/live/mod_python-3.2.5b/doc-html/node97.html
> 
> Beta releases are NOT considered stable and usually contain bugs.
> 
> This release is intended to solicit widespread testing of the code. We 
> strongly recommend that you try out your existing applications and 
> experiment with new features in a non-production environment using this 
> version and report any problems you may encounter so that they can be 
> addressed before the final release.
> 
> Preferred method of reporting problems is the mod_python user list 
> mod_python@modpython.org.
> 
> Mod_python 3.2.5b is available for download from:
> 
> http://httpd.apache.org/modules/python-download.cgi
> 
> For more information about mod_python visit http://www.modpython.org/
> 
> Regards,
> 
> Grisha Trubetskoy and the Apache mod_python team.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From gavin at sz.net.cn  Wed Nov 30 23:00:56 2005
From: gavin at sz.net.cn (Gavin)
Date: Wed Nov 30 23:01:15 2005
Subject: [mod_python] ANNOUNCE: Mod_python 3.2.5 Beta
References: <20051123102324.A63699@grisha.dyndns.org>
	<438E6840.1040902@mischko.com>
Message-ID: <032e01c5f62b$d52ab660$aa1ea8c0@frank>

Dear Scott,

The 3.2.5 Beta still have problem with Session, I tested it yestoday.

I am using mod_python3.2.5b(python2.4.1,apache2.0.55), I write a test program as 
following to test Session,but Failed. I have attached the Error message as following. 
This code works correctly in mod_python3.1.14(python2.3.5),I don't kown its why?


<%
from mod_python import apache,Session

sid='1223'
secret="Abstfgsd"
S=Session.Session(req,sid,secret,1800)
sid=S.id()
if S.is_new():
    S.save()
    req.write(sid)
else:
   S.load()
   req.write(sid)
%>

<%
%>

The Error message in apache is as following:

[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp: Traceback (most recent call last):
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/apache.py", line 299, in HandlerDispatch\n    result = object(req)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/psp.py", line 302, in handler\n    p.run()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/psp.py", line 213, in run\n    exec code in global_scope
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/data/HTTPD/htdocs/FeedBack/sid.m"
, line 9, in ?\n    S.save()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/Session.py", line 209, in save\n    self.do_save(dict)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/Session.py", line 335, in do_save\n    dbm = self._get_dbm()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/site-pack
ages/mod_python/Session.py", line 310, in _get_dbm\n    result = self._dbmtype.open(self._dbmfile, 'c')
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/anydbm.py
", line 83, in open\n    return mod.open(file, flag, mode)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/dbhash.py
", line 16, in open\n    return bsddb.hashopen(file, flag, mode)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/bsddb/__i
nit__.py", line 285, in hashopen\n    e = _openDBEnv()
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp:   File "/usr/local/lib/python2.4/bsddb/__i
nit__.py", line 339, in _openDBEnv\n    e.open('.', db.DB_PRIVATE | db.DB_CREATE | db.DB_THREAD | db.DB_INIT_LOCK | db.DB_INIT_MPOO
L)
[Wed Nov 30 16:18:19 2005] [error] [client 202.104.96.163] PythonHandler mod_python.psp: DBError: (159940408, 'Unknown error 159940
408')


Sincerely,

Frank Ning



----- Original Message ----- 
From: "Scott Chapman" <scott_list@mischko.com>
To: <mod_python@modpython.org>
Sent: Thursday, December 01, 2005 11:04 AM
Subject: Re: [mod_python] ANNOUNCE: Mod_python 3.2.5 Beta


Does anyone have this available binary for Windows and Python 2.4.2?

Gregory (Grisha) Trubetskoy wrote:
> 
> The Apache Software Foundation and The Apache HTTP Server Project are 
> pleased to announce the 3.2.5 Beta release mod_python.
> 
> Version 3.2.5b of mod_python features several new functions and 
> attributes providing better access to apache internals, file-based 
> sessions and other session improvements, as well as many bug fixes and 
> various performance and security improvements. A detailed description of 
> the changes is available in Appendix A of the mod_python manual, also 
> available here:
> 
> http://www.modpython.org/live/mod_python-3.2.5b/doc-html/node97.html
> 
> Beta releases are NOT considered stable and usually contain bugs.
> 
> This release is intended to solicit widespread testing of the code. We 
> strongly recommend that you try out your existing applications and 
> experiment with new features in a non-production environment using this 
> version and report any problems you may encounter so that they can be 
> addressed before the final release.
> 
> Preferred method of reporting problems is the mod_python user list 
> mod_python@modpython.org.
> 
> Mod_python 3.2.5b is available for download from:
> 
> http://httpd.apache.org/modules/python-download.cgi
> 
> For more information about mod_python visit http://www.modpython.org/
> 
> Regards,
> 
> Grisha Trubetskoy and the Apache mod_python team.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

