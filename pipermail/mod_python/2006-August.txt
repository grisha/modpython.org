From jadacyrus at gmail.com  Tue Aug  1 00:36:00 2006
From: jadacyrus at gmail.com (jadacyrus)
Date: Tue Aug  1 00:36:07 2006
Subject: [mod_python] Upload Progressbar for site.
Message-ID: <44CEDA30.3060709@gmail.com>

Hi, I've got a working upload script on my website using the following 
method:

fileData = req.form['filename'].file.read()

and then writing fileData to the disk.

I was wondering if there is anyway to show an interactive progress bar 
or show how many bytes have been transferred. Anything to get me started 
on the right path towards a solution would be appreciated. I assume 
there may be more than just python needed to solve this.

Thanks for your time.
From grahamd at dscpl.com.au  Tue Aug  1 01:12:02 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug  1 01:12:10 2006
Subject: [mod_python] Upload Progressbar for site.
Message-ID: <1154409122.19032@dscpl.user.openhosting.com>

jadacyrus wrote ..
> Hi, I've got a working upload script on my website using the following
> method:
> 
> fileData = req.form['filename'].file.read()
> 
> and then writing fileData to the disk.
> 
> I was wondering if there is anyway to show an interactive progress bar
> or show how many bytes have been transferred. Anything to get me started
> on the right path towards a solution would be appreciated. I assume 
> there may be more than just python needed to solve this.

I would suggest you go to 'www.modpython.org' and put in the search box
the terms 'upload progress'. This issue has been covered a number of times
before and you can read all the old posts about it in the mailing list archives.

Other similar search terms will probably yield you other posts on same topic
as well.

Graham
From nlv11281 at natlab.research.philips.com  Tue Aug  1 01:33:08 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Aug  1 01:33:16 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <44CE23F6.8080708@gmail.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<44CDCFDF.9040504@natlab.research.philips.com>
	<44CDED72.5080601@gmail.com>
	<44CE1A68.4080604@natlab.research.philips.com>
	<44CE23F6.8080708@gmail.com>
Message-ID: <44CEE794.7030503@natlab.research.philips.com>

> There is lots of needs for this in an Ajax world. For example Jetty 
> (http://www.mortbay.com/MB/log/gregw/?permalink=ScalingConnections.html), 
> Apache 2.2, and IIS a few years can do asynchronous processing. There 
> are two ways to do asynchronous processing. The first is to lock onto 
> the request and hold it and move it into a "secondary" processing area. 
> The second is to start a task and then ask if any data has been 
> generated. The running task will store in a cache that is then picked up 
> by another request at another time.

And you have to ask yourself whether a WEB application is really what you want. Ajax is a framework 
for building non-web applications in browsers.

>> When Apache is using multiple processes, it will terminate child 
>> processes for various reasons (for example, when 
>> max_requests_per_child has been reached). That will also terminate any 
>> thread you created in that process.
>>
> Yeah I was looking at this and it is pain. On Windows Apache does not do 
> this. They use only two processes and use threads within those processes.

Even more painful, there is no telling to which process your next request will go. So if you start a 
thread, and even if it survives, it will be an impossible task to reach it on the server, because 
your requests might end up at other processes.

> I would not say "job". I would say long running tasks generating data. 
> For example I like to read real-time feeds, and want to generate the 
> data. But the client is in control of the task using parameters that are 
> sent to server.

So, why not just let the client wait for the data? Neither server nor client have any objection 
keeping a connection open for an hour or longer. Some proxies will appreciate it if you send some 
data every now and then.

>> A web service used within a web server is not redundant, it's just a 
>> way to delegate tasks to other machines or processes. This is 
>> typically done for security reasons.
>>
> I don't really buy this argument. Let's say I do what you recommend and 
> that is call an XML-RPC service. Why, do I need Apache in the first 
> place? While I might get security I don't get any added value. If I am 
> using web services then Apache is pretty well useless anyways because 
> most web services don't use HTTP security. Most web service 
> infrastructures use the WS-* specs, or some home-backed tokens that are 
> added to the XML package.

There's more to security than authentication.

In a simple order database for example one might want to restrict access so that customers can only 
view their own orders. In DBMS level, this restriction is impossible to enforce (you cannot put 
access restrictions on rows), but when using an inbetween layer it is easy to implement.

Further, by restricting access to the DB so that only the "business layer" web service can access 
it, it is impossible to retrieve sensitive information from the system, even if the web server is 
compromised.

From deron.meranda at gmail.com  Tue Aug  1 01:45:38 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Aug  1 01:45:44 2006
Subject: [mod_python] Setting req->user for mod_dav_svn
In-Reply-To: <1154385180.32375@dscpl.user.openhosting.com>
References: <1154385180.32375@dscpl.user.openhosting.com>
Message-ID: <5c06fa770607312245q3e2a2743n11dd85ae7543c66d@mail.gmail.com>

On 7/31/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Deron Meranda wrote ..
> > I am using a PythonAccessHandler for all my authentication and
> > authorization needs; ...
>
> Are you using PythonAccessHandler at same time as PythonHandler?
> Aren't you seeing the hideously bad memory leak finally uncovered
> in the past day?

Yes, I use both, but I haven't really investigated if the leak bug is
hitting me yet.  I will look.  All of my requests go through a
PythonAccessHandler, and probably about 80% of them also go through
PythonHandler.  For some URLs I also use a multiple chained handler,
something like

  PythonAccessHandler one::accesshandler
  PythonHandler one::handler two::handler

The two phases communicate by pushing extra custom members into the
mod_python req object.  I also have a mix of different
PythonInterpreters too.

> > But I'm now trying to set up a subversion mod_dav_svn module...
> >
> > Can I set the req->user member from within mod_python (the docs
> > say it is read-only),
>
> In 3.2.8+ it is writable, the documentation is wrong. The documentation
> in 3.3 is correct.

Yes, after looking through the code I noticed it was a writable
member.  But I still had some doubt that I was overlooking something
because of the docs.  I should be able to verify tomorrow if this is
enough for mod_dav_svn.

> Using 3.2.10, you will have to continue to use an PythonAccessHandler to do
> what you want anyway, as it is impossible with mod_python prior to 3.3 to write
> a correct authentication handler in the style that they are supposed to be
> written when using Apache.

Yes, I am aware of the many missing features and am glad you've been
working so hard adding those in.  Of course I'll also want to
eventually migrate up to Apache 2.2 as well.  The more modular auth
stuff, and its provider hooks, look quite useful.

> Anyway, the only place I can think you might have problems is if subversion
> expects req.ap_auth_type to be set correctly as you will not have that ability
> when using mod_python 3.2.10.

I don't think svn cares about the auth_type, but I'll find out soon enough.

There's a second, optional, subversion module mod_authz_svn which
provides fine grained access control for different branches, etc.  I
don't know how mod_python may interact with it (especially since it
runs during the authz phase too).  But at least in my case that's not
too important; because my own mod_python handler can do all the access
control decisions I need.

Thanks Graham.
-- 
Deron Meranda
From grahamd at dscpl.com.au  Tue Aug  1 02:04:57 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug  1 02:05:01 2006
Subject: [mod_python] Setting req->user for mod_dav_svn
Message-ID: <1154412297.14527@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> On 7/31/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > Deron Meranda wrote ..
> > > I am using a PythonAccessHandler for all my authentication and
> > > authorization needs; ...
> >
> > Are you using PythonAccessHandler at same time as PythonHandler?
> > Aren't you seeing the hideously bad memory leak finally uncovered
> > in the past day?
> 
> Yes, I use both, but I haven't really investigated if the leak bug is
> hitting me yet.  I will look.  All of my requests go through a
> PythonAccessHandler, and probably about 80% of them also go through
> PythonHandler.

You should see the memory leak occur for any which make it through to
the PythonHandler. From memory you are on dev list as well, but bug report
URL with change is at:

  https://issues.apache.org/jira/browse/MODPYTHON-181

For about 5000 requests I would see memory use balloon from 5MB to 10MB
so leak was pretty severe.

> For some URLs I also use a multiple chained handler,
> something like
> 
>   PythonAccessHandler one::accesshandler
>   PythonHandler one::handler two::handler

The chained/stacked handlers within a single phase don't provide any
additional problems.

> > Using 3.2.10, you will have to continue to use an PythonAccessHandler
> to do
> > what you want anyway, as it is impossible with mod_python prior to 3.3
> to write
> > a correct authentication handler in the style that they are supposed
> to be
> > written when using Apache.
> 
> Yes, I am aware of the many missing features and am glad you've been
> working so hard adding those in.  Of course I'll also want to
> eventually migrate up to Apache 2.2 as well.  The more modular auth
> stuff, and its provider hooks, look quite useful.

Hmmm, in the interests of getting out 3.3 sooner rather than later I was
probably going to defer trying to work in any support for auth providers,
although it is still very tempting cause they look quite useful as you say.

If I try to implement anything, I'd probably tackle first the ability for a
Python authentication handler to use a distinct auth provider. That way
you can easily use an existing mod_auth_ldap module within a Python
implemented form/session based login mechanism. This seems more
useful to me first up than making it possible to implement an auth
provider in Python and may encourage Python users to use some of
the existing and proven auth providers available for Apache and not
roll their own.

> There's a second, optional, subversion module mod_authz_svn which
> provides fine grained access control for different branches, etc.  I
> don't know how mod_python may interact with it (especially since it
> runs during the authz phase too).  But at least in my case that's not
> too important; because my own mod_python handler can do all the access
> control decisions I need.

My understanding is that mod_authz_svn would base everything off the
req.user when matching up to stuff in the svnserve.conf file you point it
at. Thus see no problems with using mod_authz_svn.

Graham
From deron.meranda at gmail.com  Tue Aug  1 02:20:31 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Aug  1 02:20:34 2006
Subject: [mod_python] Background threads in mod_python
In-Reply-To: <44CEE794.7030503@natlab.research.philips.com>
References: <ae4ef4460607281508qf3d449es8d96a222200792c9@mail.gmail.com>
	<44CDCFDF.9040504@natlab.research.philips.com>
	<44CDED72.5080601@gmail.com>
	<44CE1A68.4080604@natlab.research.philips.com>
	<44CE23F6.8080708@gmail.com>
	<44CEE794.7030503@natlab.research.philips.com>
Message-ID: <5c06fa770607312320o3d825697gd980bf6730e414bd@mail.gmail.com>

> So, why not just let the client wait for the data? Neither server nor client have any objection
> keeping a connection open for an hour or longer. Some proxies will appreciate it if you send some
> data every now and then.

Of course if the connection is just sitting idle you'll be wasting a
lot of expensive resources too (namely the open socket and Apache
process/thread slot).  If you find yourself in this situation, then it
is really when you're departing from the native semantics of HTTP
(which doesn't mean its wrong, just that you may need something
different from HTTP).

The way to cobble this onto HTTP of course is to use one request to
initiate a background task, and subsequent request(s) to poll for the
result.  (This is where Ajax techniques can hide this cobbled approach
from the user so it appears seamless even though it's not).  It's not
perfect and far from the most efficient way, but it can be made to
work.  When mixing with the pure Apache architecture though, you're
best served if that background task is done in an independent process
than Apache itself.

Of course if you are really doing this sort of complex communications
a lot, perhaps HTTP just isn't the best fit.  Perhaps it might be just
enough to use something a little less HTTP-pure than Apache; such as a
standalone Twisted server or similar.  Or even something more serious
like CORBA (or any of the newer re-inventions of it) may be worth
investigating.  Those technologies often provide much better
asynchronous service models--which anything layered on top of HTTP
(including "web services") can never do as well.

> There's more to security than authentication.
> ...
> Further, by restricting access to the DB so that only the "business
> layer" web service can access it, it is impossible to retrieve
> sensitive information from the system, even if the web server is
> compromised.

Sometimes this separation is even necessary.  For instance I run with
a rather strict SELinux environment (which is the Linux version of
Mandatory Access Control (MAC)).  The OS kernel actually prevents my
Apache process (and hence my mod_python handlers) from accessing most
of the system's resources.  Apache can't for instance actually touch
the database, except through a very narrow (security-wise) IPC
channel.  Likewise for many other resources like filesystems.  So I'm
actually forced to put background tasks (synchronous or not) into a
separate process.
-- 
Deron Meranda
From deron.meranda at gmail.com  Tue Aug  1 11:39:26 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Aug  1 11:40:37 2006
Subject: [mod_python] Setting req->user for mod_dav_svn
In-Reply-To: <1154385180.32375@dscpl.user.openhosting.com>
References: <1154385180.32375@dscpl.user.openhosting.com>
Message-ID: <5c06fa770608010839mbd29907u12efad2ca5e28810@mail.gmail.com>

On 7/31/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Deron Meranda wrote ..
> > Can I set the req->user member from within mod_python (the docs
> > say it is read-only),
>
> In 3.2.8+ it is writable, the documentation is wrong. The documentation
> in 3.3 is correct.

Well, I'm not having so much luck with this.  Again I'm at
   Apache 2.0.52
   mod_python 3.2.10
   mod_dav_svn (subversion) 1.3.2

When you say req.user is writable, is that just for the member of the
Python "req" object, or does a write also modify the underlying
Apache C structure's request_rec->user  (char*) member?

I have a PythonAccessHandler which is just forcing a

   req.user = "foobar"

I can verify it is getting called, yet when I commit changes via
subversion the resulting change logs still just say "(no author)".

I know that the request_rec->ap_auth_type member is not getting
set (because of said limitations in mod_python), but that member
is never referenced in the mod_dav_svn module.  It only uses the
"user" member from what I can tell.
-- 
Deron Meranda
From jpg at jgassociates.ca  Tue Aug  1 12:19:05 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Aug  1 12:19:07 2006
Subject: [mod_python] Setting req->user for mod_dav_svn
In-Reply-To: <5c06fa770608010839mbd29907u12efad2ca5e28810@mail.gmail.com>
References: <1154385180.32375@dscpl.user.openhosting.com>
	<5c06fa770608010839mbd29907u12efad2ca5e28810@mail.gmail.com>
Message-ID: <44CF7EF9.1020208@jgassociates.ca>

Deron Meranda wrote:
> On 7/31/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> Deron Meranda wrote ..
>> > Can I set the req->user member from within mod_python (the docs
>> > say it is read-only),
>>
>> In 3.2.8+ it is writable, the documentation is wrong. The documentation
>> in 3.3 is correct.
> 
> Well, I'm not having so much luck with this.  Again I'm at
>   Apache 2.0.52
>   mod_python 3.2.10
>   mod_dav_svn (subversion) 1.3.2
> 
> When you say req.user is writable, is that just for the member of the
> Python "req" object, or does a write also modify the underlying
> Apache C structure's request_rec->user  (char*) member?

request_rec->user is set.

Here is the relavent bit from requestobject.c (3.2.10) in the
setreq_recmbr function (line 1279):
    ...
    ...

    else if (strcmp(name, "user") == 0) {
        if (! PyString_Check(val)) {
            PyErr_SetString(PyExc_TypeError, "user must be a string");
            return -1;
        }
        self->request_rec->user =
            apr_pstrdup(self->request_rec->pool, PyString_AsString(val));
        return 0;

Jim
From deron.meranda at gmail.com  Tue Aug  1 13:11:19 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Aug  1 13:11:23 2006
Subject: [mod_python] Setting req->user for mod_dav_svn
In-Reply-To: <44CF7EF9.1020208@jgassociates.ca>
References: <1154385180.32375@dscpl.user.openhosting.com>
	<5c06fa770608010839mbd29907u12efad2ca5e28810@mail.gmail.com>
	<44CF7EF9.1020208@jgassociates.ca>
Message-ID: <5c06fa770608011011g50030c9dqb2843485be020a9@mail.gmail.com>

On 8/1/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Deron Meranda wrote:
> > When you say req.user is writable, is that just for the member of the
> > Python "req" object, or does a write also modify the underlying
> > Apache C structure's request_rec->user  (char*) member?
>
> request_rec->user is set.
>
> Here is the relavent bit from requestobject.c (3.2.10) in the
> setreq_recmbr function (line 1279):
>     ...
>     ...
>
>     else if (strcmp(name, "user") == 0) {
>         if (! PyString_Check(val)) {
>             PyErr_SetString(PyExc_TypeError, "user must be a string");
>             return -1;
>         }
>         self->request_rec->user =
>             apr_pstrdup(self->request_rec->pool, PyString_AsString(val));
>         return 0;
>
> Jim

Thanks Jim.  That's what I was hoping it did.

I'm now down to thinking this must be a DAV or SVN thing.  I can use
the builtin CGI handler along with my mod_python access handler and
can see that the request_rec->user is getting set (which shows up
as the REMOTE_USER environment variable in the CGI script).

   # .htaccess
   PythonAccessHandler setmyuser::accesshandler
   SetHandler cgi-script

   # setmyuser.py
   from mod_python import apache
   def accesshandler(req):
       req.user = 'foobar'
       return apache.OK

   #!/bin/sh
   # dump.cgi
   echo "Content-Type: text/plain"
   echo
   echo "User is" $REMOTE_USER
   exit 0

   $ wget -O - http:..../dump.cgi
   User is foobar

So somehow either mod_dav or mod_dav_svn must not be getting
this or need something more.  More code diving....
-- 
Deron Meranda
From deron.meranda at gmail.com  Tue Aug  1 15:15:15 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Aug  1 15:15:19 2006
Subject: [mod_python] Setting req->user for mod_dav_svn (SOLVED)
Message-ID: <5c06fa770608011215v67584903v7a3e11c0e6dfcc14@mail.gmail.com>

I finally got it working!  (Thanks Graham and Jim)

I apparently had a logic error in my complex access handler.  After
simplifying things to the bare minimum I can now use mod_python to set
the subversion user.

For those who are potentially interested, here's a simple illustrative
example of how to use mod_python along with subversion, whereby the
python handler *simulates* a BASIC auth (username and password), but
without using any of the built-in Apache Auth*, Satisfy*, Limit*, or
Requires* directives.

# In Apache config
<Location /svn>
  DAV svn
  SVNPath /path/to/svn/repo
  PythonAccessHandler myauth::setuser
</Location>

# File myauth.py
def decode_basic_auth(req):
    try:
        autype, auparm = req.headers_in['Authorization'].split()
        if autype.upper() != 'BASIC':
            return None
        import base64
        auparm = base64.decodestring( auparm )
        auuser, aupass = auparm.split( ':', 1 )
        return auuser, aupass
    except:
        return None

def setuser(req):
    basicauth = decode_basic_auth(req)
    if req.method in ('GET','PROPFIND','OPTIONS','REPORT','HEAD'):
        pass  # Allow anonymous read-only access
    else:
        # A non-read-only method requires authentication
        okay = False
        if basicauth:
            ba_user, ba_pass = basicauth
            if ba_user == ba_pass:  # Replace with real pw validate later
                req.user = ba_user   # Set the username as appears in
subversion logs
                okay = True
        if not okay:
            # Force UA to send authentication
            req.err_headers_out['WWW-Authenticate'] = 'BASIC realm="Subversion"'
            raise apache.SERVER_RETURN, apache.HTTP_UNAUTHORIZED
    return apache.OK

In actuality setting the req.user seems to work as long as you do it
in any phase all the way through the PythonFixupHandler.

For the curious, a typical subversion commit of changes to a single
file results in a flurry of HTTP requests with different methods, such
as follows.  Obviously if you do this for real you'll want to keep
your authentication phase quick.  You do not need to set req.user for
the read-only methods (if you allow anonymous read-only access), but
it is important that for any of the other methods you always set
req.user to the SAME string (otherwise you'll get a 501 error from
mod_dav_svn complaining it can't do multi-user commits).

  OPTIONS
  MKACTIVITY
  PROPFIND
  PROPFIND
  CHECKOUT
  PROPPATCH
  PROPFIND
  CHECKOUT
  PUT
  GET
  MERGE
  MERGE
  DELETE
  PROPFIND
  PROPFIND
  REPORT
  GET
  ... lots more GETS ...

-- 
Deron Meranda
From jadacyrus at gmail.com  Tue Aug  1 19:14:06 2006
From: jadacyrus at gmail.com (jadacyrus)
Date: Tue Aug  1 19:14:16 2006
Subject: [mod_python] Upload progress indicator shows after upload?
Message-ID: <44CFE03E.40604@gmail.com>

Essentially this is what I have setup for my upload script:

[code]

#HTML Stuff here
#Declare variables etc...

    while bytes_left >= 0:
            fileData = req.form['filename'].file.read(1024)
            filebuffer = filebuffer + fileData
            bytes_left = bytes_left - 1024
            bytes_read = bytes_read + 1024
            percent = bytes_read/int(length) * 100

#Some nested IF statements to display a progress indicator using images 
based on the percent variable.

[/code]

This is contained in my upload.py in the function upFile which is called 
from the POST method. However, It seems that the file uploads completely 
first and then it will show the progress indications afterwards. However 
this doesn't seem to be logically what my code should be doing. I'm 
somewhat new to mod_python but not python in general, any suggestions?
From deron.meranda at gmail.com  Wed Aug  2 10:28:25 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Aug  2 10:28:34 2006
Subject: [mod_python] Setting req->user for mod_dav_svn (concerning leaks)
Message-ID: <5c06fa770608020728l5cf8d53ey752d894709f03736@mail.gmail.com>

On 7/31/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Are you using PythonAccessHandler at same time as PythonHandler?
> Aren't you seeing the hideously bad memory leak finally uncovered
> in the past day?

Yes I am.  With 3.2.10 I am seeing about 750 kB leaked per
about 10,000 requests (on an IA32 arch).  I don't know if this
is more or less of a leak than expected.  I see you've got it
fixed on the trunk though.
-- 
Deron Meranda
From zope at 2012.vi  Wed Aug  2 13:47:16 2006
From: zope at 2012.vi (beno)
Date: Wed Aug  2 13:47:35 2006
Subject: [mod_python] Installation Problem
Message-ID: <44D0E524.2070600@2012.vi>

Hi;
Got shot down right from the start. You'd think I could google this, but 
no luck! Error:

Sorry, --with-apache (static compilation) is not supported at this time!

I tried apxs, but apparently that only supports Apache 2.0. and I have 
Apache 1.3.34 (on FreeBSD 5.3). I pointed to the correct dir:

./configure --with-apache=/root/src/apache_1.3.34

 So...what did I do wrong?
TIA,
beno
From deron.meranda at gmail.com  Wed Aug  2 14:10:48 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Aug  2 14:10:52 2006
Subject: [mod_python] Installation Problem
In-Reply-To: <44D0E524.2070600@2012.vi>
References: <44D0E524.2070600@2012.vi>
Message-ID: <5c06fa770608021110h5ad5a728ibf8aaa8ad6b46cd9@mail.gmail.com>

On 8/2/06, beno <zope@2012.vi> wrote:
> Sorry, --with-apache (static compilation) is not supported at this time!
> ...
> ./configure --with-apache=/root/src/apache_1.3.34
>
>  So...what did I do wrong?

mod_python is an Apache module.  In a typical Apache installation
modules are usually shared or loadable object files, separate from
the main apache "httpd" executable file.

I'm taking a guess here, but the error message indicates that your
Apache was compiled statically, which means it is unable to
dynamically load any new modules which were not originally
compiled into your Apache binary.

You will probably will need to re-build your Apache first.
-- 
Deron Meranda
From ccbean at gmail.com  Wed Aug  2 14:43:45 2006
From: ccbean at gmail.com (Colin Bean)
Date: Wed Aug  2 14:43:51 2006
Subject: [mod_python] Upload progress indicator shows after upload?
In-Reply-To: <44CFE03E.40604@gmail.com>
References: <44CFE03E.40604@gmail.com>
Message-ID: <29a6ca010608021143o62e8ed49t3369ff21d19f54b3@mail.gmail.com>

Unfortunately, what you're trying to do is more complicated than this.
 First of all, by the time your handler is called, the file has
already been sent over the network, and your handler is only reading
it from a tempfile on disk.  Also, a handler only sends one response
back after running to completion, so your code is behaving as
expected.  It finishes processing the file upload (including doing
everything in your loop), and when it's finished it sends a response
back to the client.

Sorry I can't provide more constructive feedback having never actually
implemented something like this.  To take a guess at it, you'd need to
use an InputFilter to examine the upload request as it is read (I
believe this phase happens before the tempfile is written to disk),
and this would need to somehow communicate with another mod_python
handler which would return the current upload progress.  The client
page wold have to keep polling this handler (with an XMLHttpRequest,
perhaps) and display the results it gets with each poll.  Yeah, it's
pretty ugly...

HTH,
Colin


On 8/1/06, jadacyrus <jadacyrus@gmail.com> wrote:
> Essentially this is what I have setup for my upload script:
>
> [code]
>
> #HTML Stuff here
> #Declare variables etc...
>
>     while bytes_left >= 0:
>             fileData = req.form['filename'].file.read(1024)
>             filebuffer = filebuffer + fileData
>             bytes_left = bytes_left - 1024
>             bytes_read = bytes_read + 1024
>             percent = bytes_read/int(length) * 100
>
> #Some nested IF statements to display a progress indicator using images
> based on the percent variable.
>
> [/code]
>
> This is contained in my upload.py in the function upFile which is called
> from the POST method. However, It seems that the file uploads completely
> first and then it will show the progress indications afterwards. However
> this doesn't seem to be logically what my code should be doing. I'm
> somewhat new to mod_python but not python in general, any suggestions?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Wed Aug  2 19:14:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  2 19:14:29 2006
Subject: [mod_python] Installation Problem
Message-ID: <1154560461.3858@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> On 8/2/06, beno <zope@2012.vi> wrote:
> > Sorry, --with-apache (static compilation) is not supported at this time!
> > ...
> > ./configure --with-apache=/root/src/apache_1.3.34
> >
> >  So...what did I do wrong?
> 
> mod_python is an Apache module.  In a typical Apache installation
> modules are usually shared or loadable object files, separate from
> the main apache "httpd" executable file.
> 
> I'm taking a guess here, but the error message indicates that your
> Apache was compiled statically, which means it is unable to
> dynamically load any new modules which were not originally
> compiled into your Apache binary.
> 
> You will probably will need to re-build your Apache first.

At which point you are better off moving to Apache 2.0 as Apache 1.3
can't be used with most recent mod_python versions.

I presume you are actually trying to compile mod_python 2.7.X and
not the newer versions which will not work with your version of Apache.

Graham
From grahamd at dscpl.com.au  Wed Aug  2 19:20:45 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  2 19:20:54 2006
Subject: [mod_python] Upload progress indicator shows after upload?
Message-ID: <1154560845.10027@dscpl.user.openhosting.com>

Colin Bean wrote ..
> Unfortunately, what you're trying to do is more complicated than this.
>  First of all, by the time your handler is called, the file has
> already been sent over the network, and your handler is only reading
> it from a tempfile on disk.  Also, a handler only sends one response
> back after running to completion, so your code is behaving as
> expected.  It finishes processing the file upload (including doing
> everything in your loop), and when it's finished it sends a response
> back to the client.
> 
> Sorry I can't provide more constructive feedback having never actually
> implemented something like this.  To take a guess at it, you'd need to
> use an InputFilter to examine the upload request as it is read (I
> believe this phase happens before the tempfile is written to disk),
> and this would need to somehow communicate with another mod_python
> handler which would return the current upload progress.  The client
> page wold have to keep polling this handler (with an XMLHttpRequest,
> perhaps) and display the results it gets with each poll.  Yeah, it's
> pretty ugly...

Except that a subsequent request to try and monitor progress may in a multi
process version of Apache end up at a different process and will not have
access to where the original request is up to.

In short, there are many reasons why a progress meter is hard to implement and
may not even give a correct indication of what is happening anyway.

Personally, I am not sure what the fascination is with them besides the eye
candy value of it.

Graham

> HTH,
> Colin
> 
> 
> On 8/1/06, jadacyrus <jadacyrus@gmail.com> wrote:
> > Essentially this is what I have setup for my upload script:
> >
> > [code]
> >
> > #HTML Stuff here
> > #Declare variables etc...
> >
> >     while bytes_left >= 0:
> >             fileData = req.form['filename'].file.read(1024)
> >             filebuffer = filebuffer + fileData
> >             bytes_left = bytes_left - 1024
> >             bytes_read = bytes_read + 1024
> >             percent = bytes_read/int(length) * 100
> >
> > #Some nested IF statements to display a progress indicator using images
> > based on the percent variable.
> >
> > [/code]
> >
> > This is contained in my upload.py in the function upFile which is called
> > from the POST method. However, It seems that the file uploads completely
> > first and then it will show the progress indications afterwards. However
> > this doesn't seem to be logically what my code should be doing. I'm
> > somewhat new to mod_python but not python in general, any suggestions?
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From adsldieg at tpg.com.au  Wed Aug  2 19:53:15 2006
From: adsldieg at tpg.com.au (Diego Guillen)
Date: Wed Aug  2 19:53:32 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
In-Reply-To: <mailman.22683.1154507565.13431.mod_python@modpython.org>
References: <mailman.22683.1154507565.13431.mod_python@modpython.org>
Message-ID: <1154562795.5163.56.camel@localhost>

Hi all,

BACKGROUND
I just started using mod_python 3.1.4 with Apache2 on Ubuntu 6.06 Linux.
[it embeds Python 2.4] I'm translating a small application from PHP5, as
an exercise. It uses classes, simple inheritance, and xslt processing.

I'm looking into /var/log/apache2/error.log, as well as on the Firefox
1.5 browser, for error messages.

COMMENTS
My first impression is that mod_python's error reporting system is not
as pleasant to use. I don't seem to get enough feedback when something
goes wrong, and the error messages don't seem to point to the right
version of the files, nor to the right line numbers.

[It seems that the line numbers are shifted when you use logging, or
when a statement spans over several lines]

When I move the application into another folder, and remove the
references to the mod_python module [simulating the requests], it seems
to be easier to debug directly with the Python 2.4 interpreter.

QUESTIONS
My questions are: 
* is it possible to access the libxml2, libxslt libraries in mod_python?
* is there an alternative better way for doing xslt in Python?
* is there any good Python-based documentation on the use of these
libraries without recurring to the C description (http://xmlsoft.org/)?
* and this may sound heretical on this mailing list: is there a way
better than mod_python to write web applications with Python?

Thanks,
   Diego




From grahamd at dscpl.com.au  Wed Aug  2 20:05:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  2 20:05:20 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
Message-ID: <1154563517.17355@dscpl.user.openhosting.com>

Diego Guillen wrote ..
> My first impression is that mod_python's error reporting system is not
> as pleasant to use. I don't seem to get enough feedback when something
> goes wrong, and the error messages don't seem to point to the right
> version of the files, nor to the right line numbers.
> 
> [It seems that the line numbers are shifted when you use logging, or
> when a statement spans over several lines]

Are you making changes to the files while Apache is running and not
actually restarting Apache?

If you are, then the line numbers being wrong and other related issues
may be accounted for by issues related to the module importing system.
This can result in different Apache child processes having different
versions of the module loaded and thus depending on which Apache
child process services the request, you may see reference to line numbers
within the file from what was actually an old copy of the file rather than
the most recent. This can be confusing and may give the impression
that it is shifting things around.

For a run down on a whole host of issues related to the module
importing system, read:

  http://www.dscpl.com.au/articles/modpython-003.html

Graham

From adsldieg at tpg.com.au  Wed Aug  2 20:21:21 2006
From: adsldieg at tpg.com.au (Diego Guillen)
Date: Wed Aug  2 20:21:50 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
In-Reply-To: <1154563517.17355@dscpl.user.openhosting.com>
References: <1154563517.17355@dscpl.user.openhosting.com>
Message-ID: <1154564482.5163.74.camel@localhost>

Thanks Graham, for pointing to the answer. 
Yes, I was not restarting Apache. [I didn't consider it necessary,
because normally in PHP5 I don't need to do this]
I'll read what you suggest.
Thanks again,
   Diego

On Wed, 2006-08-02 at 20:05 -0400, Graham Dumpleton wrote:
> Diego Guillen wrote ..
> > My first impression is that mod_python's error reporting system is not
> > as pleasant to use. I don't seem to get enough feedback when something
> > goes wrong, and the error messages don't seem to point to the right
> > version of the files, nor to the right line numbers.
> > 
> > [It seems that the line numbers are shifted when you use logging, or
> > when a statement spans over several lines]
> 
> Are you making changes to the files while Apache is running and not
> actually restarting Apache?
> 
> If you are, then the line numbers being wrong and other related issues
> may be accounted for by issues related to the module importing system.
> This can result in different Apache child processes having different
> versions of the module loaded and thus depending on which Apache
> child process services the request, you may see reference to line numbers
> within the file from what was actually an old copy of the file rather than
> the most recent. This can be confusing and may give the impression
> that it is shifting things around.
> 
> For a run down on a whole host of issues related to the module
> importing system, read:
> 
>   http://www.dscpl.com.au/articles/modpython-003.html
> 
> Graham
> 
> 

From grahamd at dscpl.com.au  Wed Aug  2 20:35:58 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  2 20:36:07 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
Message-ID: <1154565358.1122@dscpl.user.openhosting.com>

Diego Guillen wrote ..
> Thanks Graham, for pointing to the answer. 
> Yes, I was not restarting Apache. [I didn't consider it necessary,
> because normally in PHP5 I don't need to do this]
> I'll read what you suggest.

There will be an optionally enabled (for now) new module importing
system in mod_python 3.3 which will address the bulk of the module
importing issues so that modifying files on the fly should work as
expected. Still recommended to turn off automatic reloading in a
production system though and always restart Apache with the freshly
installed versions, rather than modifying it on the go.

Graham

> On Wed, 2006-08-02 at 20:05 -0400, Graham Dumpleton wrote:
> > Diego Guillen wrote ..
> > > My first impression is that mod_python's error reporting system is
> not
> > > as pleasant to use. I don't seem to get enough feedback when something
> > > goes wrong, and the error messages don't seem to point to the right
> > > version of the files, nor to the right line numbers.
> > > 
> > > [It seems that the line numbers are shifted when you use logging, or
> > > when a statement spans over several lines]
> > 
> > Are you making changes to the files while Apache is running and not
> > actually restarting Apache?
> > 
> > If you are, then the line numbers being wrong and other related issues
> > may be accounted for by issues related to the module importing system.
> > This can result in different Apache child processes having different
> > versions of the module loaded and thus depending on which Apache
> > child process services the request, you may see reference to line numbers
> > within the file from what was actually an old copy of the file rather
> than
> > the most recent. This can be confusing and may give the impression
> > that it is shifting things around.
> > 
> > For a run down on a whole host of issues related to the module
> > importing system, read:
> > 
> >   http://www.dscpl.com.au/articles/modpython-003.html
> > 
> > Graham
> > 
> > 
From rsynnott at gmail.com  Wed Aug  2 20:36:58 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Wed Aug  2 20:37:04 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
In-Reply-To: <1154564482.5163.74.camel@localhost>
References: <1154563517.17355@dscpl.user.openhosting.com>
	<1154564482.5163.74.camel@localhost>
Message-ID: <24f203480608021736v41a28ca0oe524c39e9c29a163@mail.gmail.com>

On 8/3/06, Diego Guillen <adsldieg@tpg.com.au> wrote:
> Thanks Graham, for pointing to the answer.
> Yes, I was not restarting Apache. [I didn't consider it necessary,
> because normally in PHP5 I don't need to do this]
> I'll read what you suggest.
> Thanks again,
>    Diego

You still probably shouldn't NEED to restart it; there are other ways.
Your handler will be reloaded anyway. If you have an arrangement like:
if DEBUG:
    reload(mymodule1)
    reload(mymodule2)

in it, and similar for any of your own modules only imported from
those modules, you should be okay; when the handler is reloaded
everything else will be. You can force handler reload by doing 'touch
myhandler.py'.

Actually, this or something better is probably covered in Graham's document.
Rob
From jadacyrus at gmail.com  Wed Aug  2 20:51:37 2006
From: jadacyrus at gmail.com (jadacyrus)
Date: Wed Aug  2 20:51:46 2006
Subject: [mod_python] Upload progress indicator shows after upload?
In-Reply-To: <1154560845.10027@dscpl.user.openhosting.com>
References: <1154560845.10027@dscpl.user.openhosting.com>
Message-ID: <44D14899.40304@gmail.com>

Graham Dumpleton wrote:
> Colin Bean wrote ..
>   
>> Unfortunately, what you're trying to do is more complicated than this.
>>  First of all, by the time your handler is called, the file has
>> already been sent over the network, and your handler is only reading
>> it from a tempfile on disk.  Also, a handler only sends one response
>> back after running to completion, so your code is behaving as
>> expected.  It finishes processing the file upload (including doing
>> everything in your loop), and when it's finished it sends a response
>> back to the client.
>>
>> Sorry I can't provide more constructive feedback having never actually
>> implemented something like this.  To take a guess at it, you'd need to
>> use an InputFilter to examine the upload request as it is read (I
>> believe this phase happens before the tempfile is written to disk),
>> and this would need to somehow communicate with another mod_python
>> handler which would return the current upload progress.  The client
>> page wold have to keep polling this handler (with an XMLHttpRequest,
>> perhaps) and display the results it gets with each poll.  Yeah, it's
>> pretty ugly...
>>     
>
> Except that a subsequent request to try and monitor progress may in a multi
> process version of Apache end up at a different process and will not have
> access to where the original request is up to.
>
> In short, there are many reasons why a progress meter is hard to implement and
> may not even give a correct indication of what is happening anyway.
>
> Personally, I am not sure what the fascination is with them besides the eye
> candy value of it.
>
> Graham
>
>   
>> HTH,
>> Colin
>>
>>
>> On 8/1/06, jadacyrus <jadacyrus@gmail.com> wrote:
>>     
>>> Essentially this is what I have setup for my upload script:
>>>
>>> [code]
>>>
>>> #HTML Stuff here
>>> #Declare variables etc...
>>>
>>>     while bytes_left >= 0:
>>>             fileData = req.form['filename'].file.read(1024)
>>>             filebuffer = filebuffer + fileData
>>>             bytes_left = bytes_left - 1024
>>>             bytes_read = bytes_read + 1024
>>>             percent = bytes_read/int(length) * 100
>>>
>>> #Some nested IF statements to display a progress indicator using images
>>> based on the percent variable.
>>>
>>> [/code]
>>>
>>> This is contained in my upload.py in the function upFile which is called
>>> from the POST method. However, It seems that the file uploads completely
>>> first and then it will show the progress indications afterwards. However
>>> this doesn't seem to be logically what my code should be doing. I'm
>>> somewhat new to mod_python but not python in general, any suggestions?
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>       
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>     
>
>   
Hmm, well it was more of a thing just to let people who are using my 
site know that the file is actually being uploaded. I guess it really 
isnt that necessary however. Thanks for all the responses and information.
From blaise at laflamme.org  Wed Aug  2 20:56:51 2006
From: blaise at laflamme.org (Laflamme Blaise)
Date: Wed Aug  2 20:56:58 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
In-Reply-To: <200608030037.k730b9GC002184@modpython.org>
References: <200608030037.k730b9GC002184@modpython.org>
Message-ID: <9572BD7B-2DF9-457C-968B-30E1EB8FA5C7@laflamme.org>

> QUESTIONS
> My questions are:
> * is it possible to access the libxml2, libxslt libraries in  
> mod_python?

Yes. But the API is a bit unpythonic.

> * is there an alternative better way for doing xslt in Python?

lxml - http://codespeak.net/lxml/

> * is there any good Python-based documentation on the use of these
> libraries without recurring to the C description (http:// 
> xmlsoft.org/)?

If you are using lxml it follows the excellent ElementTree API

http://effbot.org/zone/element-index.htm

> * and this may sound heretical on this mailing list: is there a way
> better than mod_python to write web applications with Python?

Better or not... You have the choice! There is a lot of good python  
librairies and frameworks ready to use out there and since most of  
them use the WSGI ref you can benefit a large code base.

Blaise Laflamme
blaise@laflamme.org

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060802/0e8468ef/attachment.html
From adsldieg at tpg.com.au  Wed Aug  2 21:02:47 2006
From: adsldieg at tpg.com.au (Diego Guillen)
Date: Wed Aug  2 21:03:07 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
In-Reply-To: <24f203480608021736v41a28ca0oe524c39e9c29a163@mail.gmail.com>
References: <1154563517.17355@dscpl.user.openhosting.com>
	<1154564482.5163.74.camel@localhost>
	<24f203480608021736v41a28ca0oe524c39e9c29a163@mail.gmail.com>
Message-ID: <1154566967.5163.93.camel@localhost>

Thanks Rob, I'll look into using this too. Diego

On Thu, 2006-08-03 at 01:36 +0100, Robert Synnott wrote:
> On 8/3/06, Diego Guillen <adsldieg@tpg.com.au> wrote:
> > Thanks Graham, for pointing to the answer.
> > Yes, I was not restarting Apache. [I didn't consider it necessary,
> > because normally in PHP5 I don't need to do this]
> > I'll read what you suggest.
> > Thanks again,
> >    Diego
> 
> You still probably shouldn't NEED to restart it; there are other ways.
> Your handler will be reloaded anyway. If you have an arrangement like:
> if DEBUG:
>     reload(mymodule1)
>     reload(mymodule2)
> 
> in it, and similar for any of your own modules only imported from
> those modules, you should be okay; when the handler is reloaded
> everything else will be. You can force handler reload by doing 'touch
> myhandler.py'.
> 
> Actually, this or something better is probably covered in Graham's document.
> Rob
> 
> 

From grahamd at dscpl.com.au  Wed Aug  2 21:05:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  2 21:05:40 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
Message-ID: <1154567131.17500@dscpl.user.openhosting.com>

Robert Synnott wrote ..
> On 8/3/06, Diego Guillen <adsldieg@tpg.com.au> wrote:
> > Thanks Graham, for pointing to the answer.
> > Yes, I was not restarting Apache. [I didn't consider it necessary,
> > because normally in PHP5 I don't need to do this]
> > I'll read what you suggest.
> > Thanks again,
> >    Diego
> 
> You still probably shouldn't NEED to restart it; there are other ways.
> Your handler will be reloaded anyway. If you have an arrangement like:
> if DEBUG:
>     reload(mymodule1)
>     reload(mymodule2)

In general you should not use "reload" as it has similar problems to
the current module loader. Namely, it will reload in top of an existing
module as far as I know, which means potential loss of access to
resources and subsequent resource leaks, deleted items in the module
may not actually disappear, plus in a multithreaded MPM you might
reload on top of existing stuff while another handler is accessing
code or data in that module.

> in it, and similar for any of your own modules only imported from
> those modules, you should be okay; when the handler is reloaded
> everything else will be. You can force handler reload by doing 'touch
> myhandler.py'.

Sorry, that isn't always going to be sufficient, especially if that module
imports other modules and it is those other modules that you have
also changed.

Graham

From ccbean at gmail.com  Wed Aug  2 21:05:44 2006
From: ccbean at gmail.com (Colin Bean)
Date: Wed Aug  2 21:05:48 2006
Subject: [mod_python] Upload progress indicator shows after upload?
In-Reply-To: <1154560845.10027@dscpl.user.openhosting.com>
References: <1154560845.10027@dscpl.user.openhosting.com>
Message-ID: <29a6ca010608021805o5f695cdex3aabddaf58c00d57@mail.gmail.com>

Definitely, I should have mentioned that the communication between the
filter and the handler would be a significant problem in itself.
Hopefully my initial description was scary enough that nobody tried it
:P

I can see how an impatient user would think that a file upload wasn't
"working" if the browser didn't give them any feedback, but hopefully
anybody uploading very large files to your server can be trusted
understand the delay, or at least read some instructions that you
provide for them.

Enough veering off topic; but I think part of the point here is that
any kind of progress bar like this is limited by the way HTTP file
uploads work, so this isn't really specific to mod_python. If a
framework somewhere provides an upload bar (using HTTP / HTML, at
least), it seems like it would have to use a kludge similar to what I
described above.  Correct me if I'm wrong...

-Colin


On 8/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Colin Bean wrote ..
> > Unfortunately, what you're trying to do is more complicated than this.
> >  First of all, by the time your handler is called, the file has
> > already been sent over the network, and your handler is only reading
> > it from a tempfile on disk.  Also, a handler only sends one response
> > back after running to completion, so your code is behaving as
> > expected.  It finishes processing the file upload (including doing
> > everything in your loop), and when it's finished it sends a response
> > back to the client.
> >
> > Sorry I can't provide more constructive feedback having never actually
> > implemented something like this.  To take a guess at it, you'd need to
> > use an InputFilter to examine the upload request as it is read (I
> > believe this phase happens before the tempfile is written to disk),
> > and this would need to somehow communicate with another mod_python
> > handler which would return the current upload progress.  The client
> > page wold have to keep polling this handler (with an XMLHttpRequest,
> > perhaps) and display the results it gets with each poll.  Yeah, it's
> > pretty ugly...
>
> Except that a subsequent request to try and monitor progress may in a multi
> process version of Apache end up at a different process and will not have
> access to where the original request is up to.
>
> In short, there are many reasons why a progress meter is hard to implement and
> may not even give a correct indication of what is happening anyway.
>
> Personally, I am not sure what the fascination is with them besides the eye
> candy value of it.
>
> Graham
>
> > HTH,
> > Colin
> >
> >
> > On 8/1/06, jadacyrus <jadacyrus@gmail.com> wrote:
> > > Essentially this is what I have setup for my upload script:
> > >
> > > [code]
> > >
> > > #HTML Stuff here
> > > #Declare variables etc...
> > >
> > >     while bytes_left >= 0:
> > >             fileData = req.form['filename'].file.read(1024)
> > >             filebuffer = filebuffer + fileData
> > >             bytes_left = bytes_left - 1024
> > >             bytes_read = bytes_read + 1024
> > >             percent = bytes_read/int(length) * 100
> > >
> > > #Some nested IF statements to display a progress indicator using images
> > > based on the percent variable.
> > >
> > > [/code]
> > >
> > > This is contained in my upload.py in the function upFile which is called
> > > from the POST method. However, It seems that the file uploads completely
> > > first and then it will show the progress indications afterwards. However
> > > this doesn't seem to be logically what my code should be doing. I'm
> > > somewhat new to mod_python but not python in general, any suggestions?
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
From adsldieg at tpg.com.au  Wed Aug  2 21:19:53 2006
From: adsldieg at tpg.com.au (Diego Guillen)
Date: Wed Aug  2 21:20:12 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
In-Reply-To: <9572BD7B-2DF9-457C-968B-30E1EB8FA5C7@laflamme.org>
References: <200608030037.k730b9GC002184@modpython.org>
	<9572BD7B-2DF9-457C-968B-30E1EB8FA5C7@laflamme.org>
Message-ID: <1154567994.5163.103.camel@localhost>

Hi Blaise, 
   Thanks for your response. 
   I'll examine the links you suggested.
Thanks,
   Diego


On Wed, 2006-08-02 at 20:56 -0400, Laflamme Blaise wrote:
> 
> > QUESTIONS
> > 
> > My questions are: 
> > 
> > * is it possible to access the libxml2, libxslt libraries in
> > mod_python?
> > 
> 
> 
> Yes. But the API is a bit unpythonic.
> 
> > * is there an alternative better way for doing xslt in Python?
> > 
> 
> 
> lxml - http://codespeak.net/lxml/
> 
> > * is there any good Python-based documentation on the use of these
> > 
> > libraries without recurring to the C description
> > (http://xmlsoft.org/)?
> > 
> 
> 
> If you are using lxml it follows the excellent ElementTree API
> 
> 
> http://effbot.org/zone/element-index.htm
> 
> > * and this may sound heretical on this mailing list: is there a way
> > 
> > better than mod_python to write web applications with Python?
> > 
> 
> 
> Better or not... You have the choice! There is a lot of good python
> librairies and frameworks ready to use out there and since most of
> them use the WSGI ref you can benefit a large code base.
> 
> Blaise Laflamme
> blaise@laflamme.org
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From huanghao.c at gmail.com  Wed Aug  2 21:43:02 2006
From: huanghao.c at gmail.com (IQDoctor)
Date: Wed Aug  2 21:43:06 2006
Subject: [mod_python] Dear all, about virtual host security
Message-ID: <2f2201ef0608021843t1ea099b2rcccc17885e12edeb@mail.gmail.com>

Dear all,

How to secure use mod_python in different virtual host?
without suexec and perchild mpm

thanks.

--
Best regrads,
IQDoctor


-- 
Best regrads,
IQDoctor
From nlv11281 at natlab.research.philips.com  Thu Aug  3 05:14:28 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Aug  3 05:14:46 2006
Subject: [mod_python] Upload progress indicator shows after upload?
In-Reply-To: <29a6ca010608021805o5f695cdex3aabddaf58c00d57@mail.gmail.com>
References: <1154560845.10027@dscpl.user.openhosting.com>
	<29a6ca010608021805o5f695cdex3aabddaf58c00d57@mail.gmail.com>
Message-ID: <44D1BE74.1050905@natlab.research.philips.com>

Most browsers already display a progress bar for uploads. That is the correct place for these things 
anyway.

But don't underestimate the value that the marketing department attaches to "eye candy" features.


Mike Looijmans
Philips Natlab / Topic Automation


Colin Bean wrote:
> Definitely, I should have mentioned that the communication between the
> filter and the handler would be a significant problem in itself.
> Hopefully my initial description was scary enough that nobody tried it
> :P
> 
> I can see how an impatient user would think that a file upload wasn't
> "working" if the browser didn't give them any feedback, but hopefully
> anybody uploading very large files to your server can be trusted
> understand the delay, or at least read some instructions that you
> provide for them.
> 
> Enough veering off topic; but I think part of the point here is that
> any kind of progress bar like this is limited by the way HTTP file
> uploads work, so this isn't really specific to mod_python. If a
> framework somewhere provides an upload bar (using HTTP / HTML, at
> least), it seems like it would have to use a kludge similar to what I
> described above.  Correct me if I'm wrong...
> 
> -Colin
> 
> 
> On 8/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
>> Colin Bean wrote ..
>> > Unfortunately, what you're trying to do is more complicated than this.
>> >  First of all, by the time your handler is called, the file has
>> > already been sent over the network, and your handler is only reading
>> > it from a tempfile on disk.  Also, a handler only sends one response
>> > back after running to completion, so your code is behaving as
>> > expected.  It finishes processing the file upload (including doing
>> > everything in your loop), and when it's finished it sends a response
>> > back to the client.
>> >
>> > Sorry I can't provide more constructive feedback having never actually
>> > implemented something like this.  To take a guess at it, you'd need to
>> > use an InputFilter to examine the upload request as it is read (I
>> > believe this phase happens before the tempfile is written to disk),
>> > and this would need to somehow communicate with another mod_python
>> > handler which would return the current upload progress.  The client
>> > page wold have to keep polling this handler (with an XMLHttpRequest,
>> > perhaps) and display the results it gets with each poll.  Yeah, it's
>> > pretty ugly...
>>
>> Except that a subsequent request to try and monitor progress may in a 
>> multi
>> process version of Apache end up at a different process and will not have
>> access to where the original request is up to.
>>
>> In short, there are many reasons why a progress meter is hard to 
>> implement and
>> may not even give a correct indication of what is happening anyway.
>>
>> Personally, I am not sure what the fascination is with them besides 
>> the eye
>> candy value of it.
>>
>> Graham
>>
>> > HTH,
>> > Colin
>> >
>> >
>> > On 8/1/06, jadacyrus <jadacyrus@gmail.com> wrote:
>> > > Essentially this is what I have setup for my upload script:
>> > >
>> > > [code]
>> > >
>> > > #HTML Stuff here
>> > > #Declare variables etc...
>> > >
>> > >     while bytes_left >= 0:
>> > >             fileData = req.form['filename'].file.read(1024)
>> > >             filebuffer = filebuffer + fileData
>> > >             bytes_left = bytes_left - 1024
>> > >             bytes_read = bytes_read + 1024
>> > >             percent = bytes_read/int(length) * 100
>> > >
>> > > #Some nested IF statements to display a progress indicator using 
>> images
>> > > based on the percent variable.
>> > >
>> > > [/code]
>> > >
>> > > This is contained in my upload.py in the function upFile which is 
>> called
>> > > from the POST method. However, It seems that the file uploads 
>> completely
>> > > first and then it will show the progress indications afterwards. 
>> However
>> > > this doesn't seem to be logically what my code should be doing. I'm
>> > > somewhat new to mod_python but not python in general, any 
>> suggestions?
>> > > _______________________________________________
>> > > Mod_python mailing list
>> > > Mod_python@modpython.org
>> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>> > >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From john.keyes at secantus.com  Thu Aug  3 05:51:29 2006
From: john.keyes at secantus.com (John Keyes)
Date: Thu Aug  3 05:51:32 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
In-Reply-To: <6D8DE5A0-AA52-449A-BEA4-5C38EF3687B9@dscpl.com.au>
References: <6D8DE5A0-AA52-449A-BEA4-5C38EF3687B9@dscpl.com.au>
Message-ID: <e37997d0608030251x7cb7e437t94d93d322aa6b0a9@mail.gmail.com>

Hi Graham,

Are the notes or slides available for these talks?

Thanks,
-John K

On 7/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Some may think it a bit premature, but I have offered to do a short talk
> on what is coming in mod_python 3.3 at our local Python group. On the
> off chance that anyone on this list is located in Sydney Australia,
> or will
> be there next week, you might like to drop in. The announcement is
> included below, although I do question whether the venue is 1km from
> both Central and Redfern stations. I could understand it if they meant
> Redfern and Newtown stations. I think I'll catch the bus though, Redfern
> isn't exactly the safest place to walk at night. :-)
>
>
>
> The Sydney Python group is having its first meeting for the year on
> Thursday July 27.
>
> Usual time and new place:
>
> Thursday, July 27, 2006  (6:30 PM - 8:30 PM)
>
> The "new" University of Sydney School of IT Building.
>
> Thanks to Bob Kummerfeld for arranging this.
>
> The venue is approx 1 km from both Central and Redfern stations.
>
> Use the entrance from the University side, not the Cleveland St side.
> If you come from City Rd, enter the Seymour Centre forecourt and
> follow the curve of the new building down to the foyer entrance.
>
> http://www.cs.usyd.edu.au/~dasymond/index.cgi?p=Map
>
> Please reply to this message (or click the appropriate radio button on
> http://upcoming.org/event/89388) if you will be coming.
>
> Talks:
>
> Graham Dumpeton on what is coming in the next major version of
> mod_python (3.3). This version of mod_python should represent a
> significant improvement over previous versions in certain areas with
> ramifications on stability. New features have also been added which
> make mod_python a bit more flexible than it is now and more useable
> in the way that Apache modules should be able to be used. Result
> is that mod_python can truly be used for more than just a jumping off
> point for stuff like WSGI and all those Python web frameworks that
> keep popping up every day.
>
> Mark Rees on his experiences in using IronPython with .NET and Mono.
>
> The talks will be 15-20 minutes in length with plenty of time for
> questions.
>
> See you there.
>
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Thu Aug  3 06:19:01 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug  3 06:19:17 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
In-Reply-To: <e37997d0608030251x7cb7e437t94d93d322aa6b0a9@mail.gmail.com>
References: <6D8DE5A0-AA52-449A-BEA4-5C38EF3687B9@dscpl.com.au>
	<e37997d0608030251x7cb7e437t94d93d322aa6b0a9@mail.gmail.com>
Message-ID: <2A7E6573-4ECE-40C4-933B-2B1AECF9F942@dscpl.com.au>

Temporarily available at:

   http://www.dscpl.com.au/~grahamd/ModPython33.pdf

Couldn't send it as attachment as mailing list wanted to quarantine it
for moderator approval which might have taken a while as Grisha is
quite busy these days.

In respect of the talk, at least you guys might understand what I was
going on about, not sure that the talk when down too well on the  
day. :-)

Graham

On 03/08/2006, at 7:51 PM, John Keyes wrote:

> Hi Graham,
>
> Are the notes or slides available for these talks?
>
> Thanks,
> -John K
>
> On 7/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> Some may think it a bit premature, but I have offered to do a  
>> short talk
>> on what is coming in mod_python 3.3 at our local Python group. On the
>> off chance that anyone on this list is located in Sydney Australia,
>> or will
>> be there next week, you might like to drop in. The announcement is
>> included below, although I do question whether the venue is 1km from
>> both Central and Redfern stations. I could understand it if they  
>> meant
>> Redfern and Newtown stations. I think I'll catch the bus though,  
>> Redfern
>> isn't exactly the safest place to walk at night. :-)
>>
>>
>>
>> The Sydney Python group is having its first meeting for the year on
>> Thursday July 27.
>>
>> Usual time and new place:
>>
>> Thursday, July 27, 2006  (6:30 PM - 8:30 PM)
>>
>> The "new" University of Sydney School of IT Building.
>>
>> Thanks to Bob Kummerfeld for arranging this.
>>
>> The venue is approx 1 km from both Central and Redfern stations.
>>
>> Use the entrance from the University side, not the Cleveland St side.
>> If you come from City Rd, enter the Seymour Centre forecourt and
>> follow the curve of the new building down to the foyer entrance.
>>
>> http://www.cs.usyd.edu.au/~dasymond/index.cgi?p=Map
>>
>> Please reply to this message (or click the appropriate radio  
>> button on
>> http://upcoming.org/event/89388) if you will be coming.
>>
>> Talks:
>>
>> Graham Dumpeton on what is coming in the next major version of
>> mod_python (3.3). This version of mod_python should represent a
>> significant improvement over previous versions in certain areas with
>> ramifications on stability. New features have also been added which
>> make mod_python a bit more flexible than it is now and more useable
>> in the way that Apache modules should be able to be used. Result
>> is that mod_python can truly be used for more than just a jumping off
>> point for stuff like WSGI and all those Python web frameworks that
>> keep popping up every day.
>>
>> Mark Rees on his experiences in using IronPython with .NET and Mono.
>>
>> The talks will be 15-20 minutes in length with plenty of time for
>> questions.
>>
>> See you there.
>>
>>
>> Graham
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From jpg at jgassociates.ca  Thu Aug  3 08:25:41 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Aug  3 08:27:08 2006
Subject: [mod_python] Dear all, about virtual host security
In-Reply-To: <2f2201ef0608021843t1ea099b2rcccc17885e12edeb@mail.gmail.com>
References: <2f2201ef0608021843t1ea099b2rcccc17885e12edeb@mail.gmail.com>
Message-ID: <44D1EB45.4060500@jgassociates.ca>

IQDoctor wrote:
> Dear all,
> 
> How to secure use mod_python in different virtual host?
> without suexec and perchild mpm

In short, you can't.

Mod_python simply embeds a python interpreter, so your code can do
whatever a command line interpreter could do if it was run with the same
privileges as the Apache user. Since python does not provide any kind of
restricted environment, neither does mod_python.

For this reason I don't personally feel mod_python is suitable for mass
virtual host environments. If you can't trust or control the code being
used in the virtual hosts then mod_python may not be suitable for you.

Jim

From nicolas at lehuen.com  Thu Aug  3 11:35:44 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Aug  3 11:36:36 2006
Subject: [mod_python] Upload progress indicator shows after upload?
In-Reply-To: <44D1BE74.1050905@natlab.research.philips.com>
References: <1154560845.10027@dscpl.user.openhosting.com>
	<29a6ca010608021805o5f695cdex3aabddaf58c00d57@mail.gmail.com>
	<44D1BE74.1050905@natlab.research.philips.com>
Message-ID: <c298f2d70608030835l3ddd1d95q67e9dcd389afc28f@mail.gmail.com>

Alas, the progress bar is very small and un-noticeable, and it doesn't tell
the user how much bytes remain to be transferred nor a ETA.

This is the reason why so many people want to roll their own upload progress
bar. If only the people developing browsers could take a cue about this
problem... Well, I guess it's time to file a bug report for Mozilla /
Firefox, at least.

Nicolas Lehuen

2006/8/3, Mike Looijmans <nlv11281@natlab.research.philips.com>:
>
> Most browsers already display a progress bar for uploads. That is the
> correct place for these things
> anyway.
>
> But don't underestimate the value that the marketing department attaches
> to "eye candy" features.
>
>
> Mike Looijmans
> Philips Natlab / Topic Automation
>
>
> Colin Bean wrote:
> > Definitely, I should have mentioned that the communication between the
> > filter and the handler would be a significant problem in itself.
> > Hopefully my initial description was scary enough that nobody tried it
> > :P
> >
> > I can see how an impatient user would think that a file upload wasn't
> > "working" if the browser didn't give them any feedback, but hopefully
> > anybody uploading very large files to your server can be trusted
> > understand the delay, or at least read some instructions that you
> > provide for them.
> >
> > Enough veering off topic; but I think part of the point here is that
> > any kind of progress bar like this is limited by the way HTTP file
> > uploads work, so this isn't really specific to mod_python. If a
> > framework somewhere provides an upload bar (using HTTP / HTML, at
> > least), it seems like it would have to use a kludge similar to what I
> > described above.  Correct me if I'm wrong...
> >
> > -Colin
> >
> >
> > On 8/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> >> Colin Bean wrote ..
> >> > Unfortunately, what you're trying to do is more complicated than
> this.
> >> >  First of all, by the time your handler is called, the file has
> >> > already been sent over the network, and your handler is only reading
> >> > it from a tempfile on disk.  Also, a handler only sends one response
> >> > back after running to completion, so your code is behaving as
> >> > expected.  It finishes processing the file upload (including doing
> >> > everything in your loop), and when it's finished it sends a response
> >> > back to the client.
> >> >
> >> > Sorry I can't provide more constructive feedback having never
> actually
> >> > implemented something like this.  To take a guess at it, you'd need
> to
> >> > use an InputFilter to examine the upload request as it is read (I
> >> > believe this phase happens before the tempfile is written to disk),
> >> > and this would need to somehow communicate with another mod_python
> >> > handler which would return the current upload progress.  The client
> >> > page wold have to keep polling this handler (with an XMLHttpRequest,
> >> > perhaps) and display the results it gets with each poll.  Yeah, it's
> >> > pretty ugly...
> >>
> >> Except that a subsequent request to try and monitor progress may in a
> >> multi
> >> process version of Apache end up at a different process and will not
> have
> >> access to where the original request is up to.
> >>
> >> In short, there are many reasons why a progress meter is hard to
> >> implement and
> >> may not even give a correct indication of what is happening anyway.
> >>
> >> Personally, I am not sure what the fascination is with them besides
> >> the eye
> >> candy value of it.
> >>
> >> Graham
> >>
> >> > HTH,
> >> > Colin
> >> >
> >> >
> >> > On 8/1/06, jadacyrus <jadacyrus@gmail.com> wrote:
> >> > > Essentially this is what I have setup for my upload script:
> >> > >
> >> > > [code]
> >> > >
> >> > > #HTML Stuff here
> >> > > #Declare variables etc...
> >> > >
> >> > >     while bytes_left >= 0:
> >> > >             fileData = req.form['filename'].file.read(1024)
> >> > >             filebuffer = filebuffer + fileData
> >> > >             bytes_left = bytes_left - 1024
> >> > >             bytes_read = bytes_read + 1024
> >> > >             percent = bytes_read/int(length) * 100
> >> > >
> >> > > #Some nested IF statements to display a progress indicator using
> >> images
> >> > > based on the percent variable.
> >> > >
> >> > > [/code]
> >> > >
> >> > > This is contained in my upload.py in the function upFile which is
> >> called
> >> > > from the POST method. However, It seems that the file uploads
> >> completely
> >> > > first and then it will show the progress indications afterwards.
> >> However
> >> > > this doesn't seem to be logically what my code should be doing. I'm
> >> > > somewhat new to mod_python but not python in general, any
> >> suggestions?
> >> > > _______________________________________________
> >> > > Mod_python mailing list
> >> > > Mod_python@modpython.org
> >> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> >> > >
> >> > _______________________________________________
> >> > Mod_python mailing list
> >> > Mod_python@modpython.org
> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060803/673c3b98/attachment.html
From David.Bear at asu.edu  Thu Aug  3 13:53:06 2006
From: David.Bear at asu.edu (David Bear)
Date: Thu Aug  3 13:53:11 2006
Subject: [mod_python] import failure
Message-ID: <20060803175306.GC11291@asu.edu>

does modpython support the syntax

import somemodulename as s

and then using 

s.somefunc()


-- 
David Bear
phone: 	602-496-0424
fax: 	602-496-0955
College of Public Programs/ASU
University Center Rm 622
411 N Central
Phoenix, AZ 85007-0685
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From jpg at jgassociates.ca  Thu Aug  3 14:51:06 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Aug  3 14:50:24 2006
Subject: [mod_python] import failure
In-Reply-To: <20060803175306.GC11291@asu.edu>
References: <20060803175306.GC11291@asu.edu>
Message-ID: <44D2459A.6010205@jgassociates.ca>

David Bear wrote:
> does modpython support the syntax
> 
> import somemodulename as s
> 
> and then using 
> 
> s.somefunc()

yes

From grahamd at dscpl.com.au  Thu Aug  3 18:24:03 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug  3 18:27:02 2006
Subject: [mod_python] import failure
Message-ID: <1154643843.21788@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> David Bear wrote:
> > does modpython support the syntax
> > 
> > import somemodulename as s
> > 
> > and then using 
> > 
> > s.somefunc()
> 
> yes

Of course, the reason being that if your version of Python that you are using
supports it, then it will also be supported. Use an old enough version which
does not support it, then it will not work. Presuming that is that those old
versions of Python even work with mod_python.

Anyway, the point of this email is to say that the above even works when the
new module importer in mod_python 3.3 is used. What this means is that if
'somemodulename' module was able to be imported as a reloadable module,
modifying that module will still automatically cause a parent module it is
imported in to be automatically reloaded even though the parent may not have
changed. This is despite that the module name has been aliases to something
else with the parent.

Are you having a specific problem which would make you ask this, as it would
have been quite easy to write a test to see if it does or doesn't work?

Graham
From David.Bear at asu.edu  Thu Aug  3 18:55:40 2006
From: David.Bear at asu.edu (David Bear)
Date: Thu Aug  3 18:55:48 2006
Subject: [mod_python] import failure
In-Reply-To: <1154643843.21788@dscpl.user.openhosting.com>
References: <1154643843.21788@dscpl.user.openhosting.com>
Message-ID: <20060803225540.GI11291@asu.edu>

On Thu, Aug 03, 2006 at 06:24:03PM -0400, Graham Dumpleton wrote:
> Jim Gallacher wrote ..
> > David Bear wrote:
> > > does modpython support the syntax
> > > 
> > > import somemodulename as s
> > > 
> > > and then using 
> > > 
> > > s.somefunc()
> > 
> > yes
> 
> Of course, the reason being that if your version of Python that you are using
> supports it, then it will also be supported. Use an old enough version which
> does not support it, then it will not work. Presuming that is that those old
> versions of Python even work with mod_python.
> 
> Anyway, the point of this email is to say that the above even works when the
> new module importer in mod_python 3.3 is used. What this means is that if
> 'somemodulename' module was able to be imported as a reloadable module,
> modifying that module will still automatically cause a parent module it is
> imported in to be automatically reloaded even though the parent may not have
> changed. This is despite that the module name has been aliases to something
> else with the parent.
> 
> Are you having a specific problem which would make you ask this, as it would
> have been quite easy to write a test to see if it does or doesn't work?

I was attempting to do something that wasn't documented. I was hoping
to be able to

import somelongmodulename_version_1_2_3 as s
from s import *

but that doesn't work;-)


> 
> Graham

-- 
David Bear
phone: 	602-496-0424
fax: 	602-496-0955
College of Public Programs/ASU
University Center Rm 622
411 N Central
Phoenix, AZ 85007-0685
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From grahamd at dscpl.com.au  Thu Aug  3 19:45:06 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug  3 19:45:09 2006
Subject: [mod_python] New mod_python/PSP article popped up.
Message-ID: <1154648706.375@dscpl.user.openhosting.com>

FYI.

A new mod_python/PSP article has popped up at:

 http://www.pythonthreads.com/news/latest/web-development-environment-for-python-server-pages-and-oracle.html

The things I have an issue with so far are:

1. It claims that the 'session' and 'form' variables in PSP are "standard
Python dictionaries" when technically they aren't. For most things they may
appear to work the same, but at other times the difference needs to be taken
into consideration.

2. They don't over emphasise enough the dangers of exposing the .psp_
extension for PSP source code. Especially since their own example has the
login and password embedded within the PSP file itself and therefore it
would be exposed if someone didn't turn off PythonDebug.

I also find the following comment amusing as I am sure that lots of people
would disagree:

  There are several application frameworks available for Python currently. They
  are not refined enough to be used in enterprise-grade environments, although
  I recommend you give them a try. Apache with mod_python itself is powerful
  enough to handle most of the development scenarios.

Anyway, though others might find the article interesting to read.

Graham
From ml at dasir.net  Fri Aug  4 07:52:47 2006
From: ml at dasir.net (David Siroky)
Date: Fri Aug  4 07:53:01 2006
Subject: [mod_python] import failure
In-Reply-To: <20060803175306.GC11291@asu.edu>
References: <20060803175306.GC11291@asu.edu>
Message-ID: <1154692367.22013.7.camel@localhost>

David Bear p??e v ?t 03. 08. 2006 v 10:53 -0700:
> does modpython support the syntax
> 
> import somemodulename as s
> 
> and then using 
> 
> s.somefunc()
> 
> 

mod_python is not a special derivative of standard Python, it is a
"stub" between Apache and regular Python interpreter. So what Python can
do you can do in mod_python as well.

David

From alex.greif at gmail.com  Fri Aug  4 08:11:17 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Fri Aug  4 08:11:21 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
Message-ID: <778770d80608040511p54ec18f8xc6cea0c79a1113f@mail.gmail.com>

are there plans when 3.3. will be released?

Alex.
From jpg at jgassociates.ca  Fri Aug  4 09:23:00 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug  4 09:22:30 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
In-Reply-To: <778770d80608040511p54ec18f8xc6cea0c79a1113f@mail.gmail.com>
References: <778770d80608040511p54ec18f8xc6cea0c79a1113f@mail.gmail.com>
Message-ID: <44D34A34.8020904@jgassociates.ca>

Alex Greif wrote:
> are there plans when 3.3. will be released?

I'd suggested a while ago that we aim for an October or November
release. At this point I can't see any reason that it would be delayed
beyond that point, but November is more realistic.

If there are features in 3.3. that you need for your application, I'd
suggest grabbing a copy from subversion and start doing some testing
with your app. The earlier we can identify problems the better. The
3.2.x beta cycle was a long one, and we really want to avoid that this
time. Actually, we want to avoid that every time. ;)

In the interim, 3.2.10 is now available for download, with the official
announcement  imminent. Depending on how things play out with 3.3-dev,
we may have one more 3.2.x bugfix release.

Jim




From ke1g.nh at gmail.com  Fri Aug  4 10:54:20 2006
From: ke1g.nh at gmail.com (Bill Freeman)
Date: Fri Aug  4 10:54:26 2006
Subject: [mod_python] mod_python, native windows python and apache2,
	ntfs acls, and files created under cygwin
Message-ID: <28c74f290608040754v51baf2c9h3ad1a11066b9b2de@mail.gmail.com>

I have discovered that using mod_python (3.2.8) with native windows versions
of
python (2.4.2) and apache (2.0.58) on ntfs (XP home) makes acl settings
important.

Specifically, files created under Cygwin (I'm a *nix guy, so when I'm forced
to use
windows, I use Cygwin) seem to have acls that prevent publisher (at least)
from
loading them.  I have two files with identical content (yes, the line
endings are
\r\n in both), and all the attributes visible in windows explorer, dir in
cmd.exe,
and ls under Cygwin, are the same.  Publisher works happily with one
version,
but not with the other.

The difference appears to the the acls.  Files created by windows tools have
a suitable set, those created by cygwin (ok, I've only tested editing with
emacs
and using cp, but it's a good bet) have acls that apache and/or python fail
to
read.  (I think that a problem I had where ApacheMonitor couldn't start
Apache
is related to the acl for httpd.conf, but that's for another list.)  I
suspect that
there are other ways to edit python source that produces bad acls too, but
I don't know about them.

The good news is that such files can be "fixed" by copying them with copy
under cmd.exe (and probably other ways).

Note that I'm NOT saying that anyone has a bug here.  It's clearly a good
thing that Apache/python are fussy about acls, and Cygwin is making the
best of a tough situation in mapping *nix file permissions onto ntfs.

It's just that googling around and browsing FAQs didn't help me, even when
I began to suspect the infamous acls (nicely hidden under XP home).  If this
is a well known and documented problem, then please hit me with a clue
stick, and I'm sorry for the wasted bandwidth.  Otherwise, perhaps an
additional FAQ entry would save other publisher newbies some time and
frustration.  (Even if this is known, perhaps the suitable FAQ entries need
a few more keywords in their titles.)

If this isn't a well known problem, I'm happy to collect better details as
to
what is happening, and how to recognize it (since I currently have such a
configuration at my fingertips).

Bill
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060804/b921f0af/attachment.html
From tommys at eden.rutgers.edu  Fri Aug  4 11:49:23 2006
From: tommys at eden.rutgers.edu (Thomas J. Schirripa)
Date: Fri Aug  4 11:49:31 2006
Subject: [mod_python] newbie question - using multiple handlers
Message-ID: <2746905.378701154706563281.JavaMail.tomcat@aurora>

Sorry I never got back to you on this issue. I just wanted to say thanks for the suggestion, but in the process of toying around with this, I solved the problem by avoiding the use of <File> directives and using <Directory> instead. Basically, I have a directory under my document root for every handler I have. The PythonHandler then exists by itself in the directory. So far I have had no problems with it. If I actually have some more time after finishing my project I'll try and look more into the Vampire. Thanks again.
-Tom



-----Original Message-----

> Date: Tue Jul 25 18:11:51 EDT 2006
> From: "Graham Dumpleton" <grahamd@dscpl.com.au>
> Subject: Re: [mod_python] newbie question - using multiple handlers
> To: "Thomas J. Schirripa" <tommys@eden.rutgers.edu>
>
> Thomas J. Schirripa wrote ..
> > I'm pretty new to both mod_python and apache. I have just written multiple
> > handlers to deal with different webpages I have written. My problem is
> > that if I use PythonHandler for each of my handlers in the conf. file,
> > whenever I run a webpage, it tries to use ALL my handlers. Basically, I
> > want only one handler to be used per webpage. The "action" in my forms
> > only specify one handler, but based on the errors I am getting, it is also
> > running the other handlers. Is there a way that I can set directives such
> > as PythonHandler for particular html files? Or do I need to separate my
> > files into different directories? I would hate to have to make a switch
> > handler that determined what methods to call from my handler files so that
> > the conf file only had one handler in it.
> 
> Post what Apache configuration you are using for your PythonHandler
> and SetHandler/AddHandler directives related to mod_python. Is this
> being set in a .htaccess file or in main Apache configuration within a
> Directory/Location directive?
> 
> If the PythonHandler directives at present refer sto your own handlers, use
> of a switch or dispatch handler may be your only choice when using mod_python
> 3.2.X or earlier versions. This is because the logical thing to do of:
> 
>   <Files page1.html>
>   PythonHandler handlers::page1_html
>   </Files>
> 
>   <Files page2.html>
>   PythonHandler handlers::page2_html
>   </Files>
> 
> doesn't necessarily work, although it is fixed in development version of
> mod_python 3.3.
> 
> The problem with using <Files> is that mod_python sets up Python path
> wrongly and if handlers.py is in the directory for the .htaccess or Directory
> directive it will not find it. Will be okay if handler.py is elsewhere and the
> PythonPath directive is used to refer to the directory where it is located.
> 
> Rather than try and hack up a solution you may want to look at Vampire
> which already provides a basic switch or dispatch handler which maps
> to basic mod_python handlers. This way you can have separate handler
> files for each resource and if necessary distinct handlers for different
> views of a resource as well. See:
> 
>   http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html
> 
> for a quick overview of Vampire.
> 
> Graham
> 
> 
>   


From tommys at eden.rutgers.edu  Fri Aug  4 12:15:06 2006
From: tommys at eden.rutgers.edu (Thomas J. Schirripa)
Date: Fri Aug  4 12:15:11 2006
Subject: [mod_python] req.sendfile() problem
Message-ID: <10890432.379101154708106680.JavaMail.tomcat@aurora>

Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.

Basically I have a webpage where the client uploads a file and some scripts/programs run on the server and produce output files. Some of this output is spit out onto another webpage, but I want to give the client the option to download the output files. Since I am using multiple webpages, I had to figure out a way to transfer data from one page to another. The only sensible solution that I could figure out was to use psp to feed variables from my handlers into hidden form inputs in my template. From the output html page, the client can click a submit button next to the output filename that says "download". The hidden form inputs have the information as to where the file is located on the server, and the action on the form refers to my sendFile handler. That handler looks like this:

def handler(req):
	fields = util.FieldStorage(req)
        #Note: the filename is an absolute path, so I am going to split that up into directory and filename for clarity
	filename = os.path.basename(fields["filename"])
	path = os.path.dirname(fields["filename"])
	req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename
	req.content_type = "text/plain"
	req.sendfile("%s/%s" % (directory, filename))
	return apache.OK

I am not sure if I am using req.header_out or req.content-type correctly or how critical those lines are (I found it in another post), but my problem is that I am getting a file to download with the proper filename, BUT the file has a mod_python error message in it that reads:

IOError: Could not stat file for reading

and the error points to the line with req.sendfile(). Can anyone tell me what's going on and how to correct this?
Thanks,
Tom
From joeb at mit.edu  Fri Aug  4 12:29:13 2006
From: joeb at mit.edu (Joseph Barillari)
Date: Fri Aug  4 12:29:18 2006
Subject: [mod_python] req.sendfile() problem
In-Reply-To: <10890432.379101154708106680.JavaMail.tomcat@aurora>
References: <10890432.379101154708106680.JavaMail.tomcat@aurora>
Message-ID: <20060804162912.GA13310@barillari.org>

On Fri, Aug 04, 2006 at 12:15:06PM -0400, Thomas J. Schirripa wrote:
> Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.
> 
> Basically I have a webpage where the client uploads a file and some scripts/programs run on the server and produce output files. Some of this output is spit out onto another webpage, but I want to give the client the option to download the output files. Since I am using multiple webpages, I had to figure out a way to transfer data from one page to another. The only sensible solution that I could figure out was to use psp to feed variables from my handlers into hidden form inputs in my template. From the output html page, the client can click a submit button next to the output filename that says "download". The hidden form inputs have the information as to where the file is located on the server, and the action on the form refers to my sendFile handler. That handler looks like this:
> 
> def handler(req):
> 	fields = util.FieldStorage(req)
>         #Note: the filename is an absolute path, so I am going to split that up into directory and filename for clarity
> 	filename = os.path.basename(fields["filename"])
> 	path = os.path.dirname(fields["filename"])
> 	req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename
> 	req.content_type = "text/plain"
> 	req.sendfile("%s/%s" % (directory, filename))
> 	return apache.OK
> 
> I am not sure if I am using req.header_out or req.content-type correctly or how critical those lines are (I found it in another post), but my problem is that I am getting a file to download with the proper filename, BUT the file has a mod_python error message in it that reads:
> 
> IOError: Could not stat file for reading
> 
> and the error points to the line with req.sendfile(). Can anyone tell me what's going on and how to correct this?
> Thanks,
> Tom


Have you tried adding a 
req.log_error("%s/%s" % (directory, filename))  
above the sendfile line to see if the server is looking in the right place?

Joe

-- 
Joseph Barillari
joeb@mit.edu
107 Ave. Louis Pasteur, Vandy Box 346, Boston, MA 02115
617-519-9250 (mobile)
From john.keyes at secantus.com  Fri Aug  4 12:33:33 2006
From: john.keyes at secantus.com (John Keyes)
Date: Fri Aug  4 12:33:37 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
In-Reply-To: <1DF676BE-F1DA-4752-8D38-3D2B39490231@dscpl.com.au>
References: <6D8DE5A0-AA52-449A-BEA4-5C38EF3687B9@dscpl.com.au>
	<e37997d0608030251x7cb7e437t94d93d322aa6b0a9@mail.gmail.com>
	<1DF676BE-F1DA-4752-8D38-3D2B39490231@dscpl.com.au>
Message-ID: <e37997d0608040933g3c66daa4j59c568b9e3b74651@mail.gmail.com>

On 8/3/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> See attached PDF. At least you guys might understand what I was going
> on about, not sure that the talk when down too well on the day. :-)

Haha, well I wouldn't go so far as to say I'll understand!  I'll have a peek at
this now thanks for sending it on.

-John K
From jpg at jgassociates.ca  Fri Aug  4 12:42:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug  4 12:41:16 2006
Subject: [mod_python] req.sendfile() problem
In-Reply-To: <10890432.379101154708106680.JavaMail.tomcat@aurora>
References: <10890432.379101154708106680.JavaMail.tomcat@aurora>
Message-ID: <44D378FD.1070102@jgassociates.ca>

Thomas J. Schirripa wrote:
> Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.
> 
> Basically I have a webpage where the client uploads a file and some scripts/programs run on the server and produce output files. Some of this output is spit out onto another webpage, but I want to give the client the option to download the output files. Since I am using multiple webpages, I had to figure out a way to transfer data from one page to another. The only sensible solution that I could figure out was to use psp to feed variables from my handlers into hidden form inputs in my template. From the output html page, the client can click a submit button next to the output filename that says "download". The hidden form inputs have the information as to where the file is located on the server, and the action on the form refers to my sendFile handler. That handler looks like this:
> 
> def handler(req):
> 	fields = util.FieldStorage(req)
>         #Note: the filename is an absolute path, so I am going to split that up into directory and filename for clarity
> 	filename = os.path.basename(fields["filename"])
> 	path = os.path.dirname(fields["filename"])
> 	req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename
> 	req.content_type = "text/plain"
> 	req.sendfile("%s/%s" % (directory, filename))
> 	return apache.OK
> 
> I am not sure if I am using req.header_out or req.content-type correctly or how critical those lines are (I found it in another post), but my problem is that I am getting a file to download with the proper filename, BUT the file has a mod_python error message in it that reads:
> 
> IOError: Could not stat file for reading
> 
> and the error points to the line with req.sendfile(). Can anyone tell me what's going on and how to correct this?

An exception is being raised and mod_python is dumping the traceback in
the response. You should wrap req.sendfile() in a try/except block, and
if and exception is raised send a proper error message to the browser.

sendfile() needs to stat the file so it can set the content length
header. You are getting the IOError because the file does not exist or
there is a permission problem. Make sure you are using absolute paths
for sendfile(). Also, it goes without saying that the filename provided
by in the request should not be trusted. Do some checking to ensure it
is valid value.

Jim
From tommys at eden.rutgers.edu  Fri Aug  4 13:49:56 2006
From: tommys at eden.rutgers.edu (Thomas J. Schirripa)
Date: Fri Aug  4 13:50:00 2006
Subject: [mod_python] req.sendfile() problem
Message-ID: <18452913.379731154713795822.JavaMail.tomcat@aurora>


Thanks a lot guys, the problem is fixed. I feel so stupid because it ended up being a naming problem - I thought the path looked okay, and I automatically assumed the name wasn't a problem because I would have thought the IOError message would have said something along the lines of "cannot find file". Anyways, I actually had a question about handling the exception because I did try doing that.

I had req.sendfile() in a try/except block, but in order to to send the error message to the browser....
Here's what I did...

def handler(req):
	fields = util.FieldStorage(req)
	filename = os.path.basename(fields["filename"])
	directory = os.path.dirname(fields["filename"])
	req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename
	req.content_type = "text/plain"
	try:
		req.sendfile("%s/%s" % (directory, filename))
	except IOError, e:
		req.content_type = "text/html"
		req.write("Raised exception reads:\n<br>%s" % str(e))
		return apache.OK
	return apache.OK

Here's what happened:
instead of the IOError displaying in the browser, the file downloaded and had the req.write() message in it:
"Raised exception reads:
<br>Could not stat file for reading"

I thought I read somewhere you can't change the content type after it has been set (a limitation of http -  in fact, this is why I have a seperate sendFile handler... so I can set the content type properly), but I didn't think this would be a problem. Is there a way to get the message to display in the browser instead of sending over an html file with the message?

Thanks again, I don't know what I would do without this mailing list sometimes.
Tom


-----Original Message-----

> Date: Fri Aug 04 12:42:37 EDT 2006
> From: "Jim Gallacher" <jpg@jgassociates.ca>
> Subject: Re: [mod_python] req.sendfile() problem
> To: "Thomas J. Schirripa" <tommys@eden.rutgers.edu>
>
> Thomas J. Schirripa wrote:
> > Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.
> > 
> > Basically I have a webpage where the client uploads a file and some scripts/programs run on the server and produce output files. Some of this output is spit out onto another webpage, but I want to give the client the option to download the output files. Since I am using multiple webpages, I had to figure out a way to transfer data from one page to another. The only sensible solution that I could figure out was to use psp to feed variables from my handlers into hidden form inputs in my template. From the output html page, the client can click a submit button next to the output filename that says "download". The hidden form inputs have the information as to where the file is located on the server, and the action on the form refers to my sendFile handler. That handler looks like this:
> > 
> > def handler(req):
> > 	fields = util.FieldStorage(req)
> >         #Note: the filename is an absolute path, so I am going to split that up into directory and filename for clarity
> > 	filename = os.path.basename(fields["filename"])
> > 	path = os.path.dirname(fields["filename"])
> > 	req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename
> > 	req.content_type = "text/plain"
> > 	req.sendfile("%s/%s" % (directory, filename))
> > 	return apache.OK
> > 
> > I am not sure if I am using req.header_out or req.content-type correctly or how critical those lines are (I found it in another post), but my problem is that I am getting a file to download with the proper filename, BUT the file has a mod_python error message in it that reads:
> > 
> > IOError: Could not stat file for reading
> > 
> > and the error points to the line with req.sendfile(). Can anyone tell me what's going on and how to correct this?
> 
> An exception is being raised and mod_python is dumping the traceback in
> the response. You should wrap req.sendfile() in a try/except block, and
> if and exception is raised send a proper error message to the browser.
> 
> sendfile() needs to stat the file so it can set the content length
> header. You are getting the IOError because the file does not exist or
> there is a permission problem. Make sure you are using absolute paths
> for sendfile(). Also, it goes without saying that the filename provided
> by in the request should not be trusted. Do some checking to ensure it
> is valid value.
> 
> Jim


From alex.greif at gmail.com  Fri Aug  4 16:56:12 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Fri Aug  4 16:56:16 2006
Subject: [mod_python] "0" added after content, magically
Message-ID: <778770d80608041356g53e0e544rb8e270474ee54e0c@mail.gmail.com>

Hi,
I am using mod_python 3.2.8 wit apache 2.0.58

the strange phenomenon is that something appends a "0" after my html
output. This happens on Unix and also on Windows.

Any Ideas ?
thanks,
ALex.


Here is my handler:

from mod_python import apache

def index(req):
    req.content_type = 'text/html'
    req.write("<html><body><h1>Hello</h1></body></html>")
    return apache.OK


here is my config:

<Directory /home/agreif/......../scripts>
    SetHandler mod_python
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>


here is the returned html code to the browser:

<html><body><h1>Hello</h1></body></html>0
From fumanchu at amor.org  Fri Aug  4 17:30:19 2006
From: fumanchu at amor.org (Robert Brewer)
Date: Fri Aug  4 17:28:30 2006
Subject: [mod_python] "0" added after content, magically
References: <778770d80608041356g53e0e544rb8e270474ee54e0c@mail.gmail.com>
Message-ID: <435DF58A933BA74397B42CDEB8145A86224C16@ex9.hostedexchange.local>

Alex Greif wrote:
> the strange phenomenon is that something appends a "0"
> after my html output. This happens on Unix and also on
> Windows. Any Ideas ?

One idea: apache.OK == 0. Perhaps you're supposed to return data instead of writing data and then returning a status?


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060804/abaf7247/attachment.html
From alex.greif at gmail.com  Fri Aug  4 17:39:14 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Fri Aug  4 17:39:18 2006
Subject: [mod_python] "0" added after content, magically
In-Reply-To: <435DF58A933BA74397B42CDEB8145A86224C16@ex9.hostedexchange.local>
References: <778770d80608041356g53e0e544rb8e270474ee54e0c@mail.gmail.com>
	<435DF58A933BA74397B42CDEB8145A86224C16@ex9.hostedexchange.local>
Message-ID: <778770d80608041439y484cbf94yce9d6a4eddbf723c@mail.gmail.com>

you are right, if I write:
return "some html code"
then the "0" does not appear.

But I am a confused, in the mod_python manual there are many samples like:
from mod_python import apache
  def handler(req):
    req.content_type = 'text/plain'
    req.write("Hello World!")
    return apache.OK


When do I return apache.OK and when do I return a string?
What is needed in which situation?

Alex.

On 8/4/06, Robert Brewer <fumanchu@amor.org> wrote:
>
>
>
> Alex Greif wrote:
>  > the strange phenomenon is that something appends a "0"
>  > after my html output. This happens on Unix and also on
>  > Windows. Any Ideas ?
>
>  One idea: apache.OK == 0. Perhaps you're supposed to return data instead of
> writing data and then returning a status?
>
>
>  Robert Brewer
>  System Architect
>  Amor Ministries
>  fumanchu@amor.org
>
>
From deron.meranda at gmail.com  Fri Aug  4 18:12:39 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Aug  4 18:12:43 2006
Subject: [mod_python] req.sendfile() problem
In-Reply-To: <18452913.379731154713795822.JavaMail.tomcat@aurora>
References: <18452913.379731154713795822.JavaMail.tomcat@aurora>
Message-ID: <5c06fa770608041512x7859323axaecf5d8cea39063@mail.gmail.com>

On 8/4/06, Thomas J. Schirripa <tommys@eden.rutgers.edu> wrote:
> Thanks a lot guys, the problem is fixed.

Just for the record, as I noticed you're using RHEL 4 (Linux), there is
another thing that can cause the same stat error.

If your Linux is configured with SELinux enabled, then you need to
make sure that the file you're trying to send has an appropriate
security context type set; as apache (and hence mod_python) usually
runs with a very restrictive security context.

With the Red Hat policies, this usually means you'll want to do the
following:

   chcon -t httpd_sys_content_t  /path/to/your/file

If you set that on a directory, then any new files created under it
will inherit that context type.
-- 
Deron Meranda
From grahamd at dscpl.com.au  Fri Aug  4 18:46:57 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug  4 18:46:55 2006
Subject: [mod_python] "0" added after content, magically
In-Reply-To: <778770d80608041439y484cbf94yce9d6a4eddbf723c@mail.gmail.com>
References: <778770d80608041356g53e0e544rb8e270474ee54e0c@mail.gmail.com>
	<435DF58A933BA74397B42CDEB8145A86224C16@ex9.hostedexchange.local>
	<778770d80608041439y484cbf94yce9d6a4eddbf723c@mail.gmail.com>
Message-ID: <8F18EBBB-3E62-4B03-A1A2-123954EA881F@dscpl.com.au>

When you use mod_python.publisher, the return value is regarded as
content. When you are using your own custom handler, the return value
is the status.

In effect, mod_python.publisher is a custom handler on top of mod_python
which works differently. That it has 'mod_python' in the package name is
confusing to many, because it should be seen as being distinct to basic
mod_python handlers and how they work.

Graham

On 05/08/2006, at 7:39 AM, Alex Greif wrote:

> you are right, if I write:
> return "some html code"
> then the "0" does not appear.
>
> But I am a confused, in the mod_python manual there are many  
> samples like:
> from mod_python import apache
>  def handler(req):
>    req.content_type = 'text/plain'
>    req.write("Hello World!")
>    return apache.OK
>
>
> When do I return apache.OK and when do I return a string?
> What is needed in which situation?
>
> Alex.
>
> On 8/4/06, Robert Brewer <fumanchu@amor.org> wrote:
>>
>>
>>
>> Alex Greif wrote:
>>  > the strange phenomenon is that something appends a "0"
>>  > after my html output. This happens on Unix and also on
>>  > Windows. Any Ideas ?
>>
>>  One idea: apache.OK == 0. Perhaps you're supposed to return data  
>> instead of
>> writing data and then returning a status?
>>
>>
>>  Robert Brewer
>>  System Architect
>>  Amor Ministries
>>  fumanchu@amor.org
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From faizantayyab at yahoo.com  Fri Aug  4 21:15:16 2006
From: faizantayyab at yahoo.com (Faizan Tayyab)
Date: Fri Aug  4 21:15:22 2006
Subject: [mod_python] Windows Installation
Message-ID: <20060805011516.40997.qmail@web60017.mail.yahoo.com>

Hi All,

 I have installed Apache HTTP Server 2.2.3 on my local
machine running windows XP. It is working fine. Then i
have installed mod_python 3.2.10 for windows
installation from
http://www.lehuen.com/nicolas/download. 

After that i altered the apache config file adding
LoadModule python_module modules/mod_python.so

i can see the mod_python module in the Apache2.2
/module, but when i try to run the Apache services
again it says it cannot locate (find) the mod_python
module.

If i remove the above added LoadModule line in the
config the Apache web services run as normal.

What am i doing wrong???



__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From grahamd at dscpl.com.au  Fri Aug  4 22:51:01 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug  4 22:51:19 2006
Subject: [mod_python] req.sendfile() problem
In-Reply-To: <44D378FD.1070102@jgassociates.ca>
References: <10890432.379101154708106680.JavaMail.tomcat@aurora>
	<44D378FD.1070102@jgassociates.ca>
Message-ID: <AE0F1864-2A62-436B-92EC-54D89AB0F8FA@dscpl.com.au>


On 05/08/2006, at 2:42 AM, Jim Gallacher wrote:

> Thomas J. Schirripa wrote:
>> def handler(req):
>> 	fields = util.FieldStorage(req)
>>         #Note: the filename is an absolute path, so I am going to  
>> split that up into directory and filename for clarity
>> 	filename = os.path.basename(fields["filename"])
>> 	path = os.path.dirname(fields["filename"])
>> 	req.headers_out["Content-Disposition"] = "attachment; filename=% 
>> s" % filename
>> 	req.content_type = "text/plain"
>> 	req.sendfile("%s/%s" % (directory, filename))
>> 	return apache.OK
>
> Also, it goes without saying that the filename provided
> by in the request should not be trusted. Do some checking to ensure it
> is valid value.

What Jim has pointed out can't be overemphasised enough. The way your  
script
is written I could potentially steal you /etc/passwd file and much more.

What you should at least do is something like the following:

ALLOWED_PREFIX = '/some/path/to/fetchable/files'

def handler(req):
     ...

     fullpath = os.path.normpath(fields['filename'])
     if not fullpath.startswith(ALLOWED_PREFIX):
         return apache.HTTP_BAD_REQUEST

The os.path.normpath() eliminates any '.' and '..' directory  
references. You then
check to ensure the path then actually begins with the path prefix  
for where your
files actually live.

Better still, do not use an absolute path, instead only ever send  
back a relative
path. You should still use os.path.normpath() to eliminate '.' and  
'..' references.
Then, you add the relative path to a path prefix which is only  
defined within
your script. In other words, you never send the path prefix back to  
the client.

Graham
From grahamd at dscpl.com.au  Fri Aug  4 22:57:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug  4 22:57:11 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
In-Reply-To: <44D34A34.8020904@jgassociates.ca>
References: <778770d80608040511p54ec18f8xc6cea0c79a1113f@mail.gmail.com>
	<44D34A34.8020904@jgassociates.ca>
Message-ID: <049AFDB2-2F39-42A1-B5E2-B14B75295AEA@dscpl.com.au>


On 04/08/2006, at 11:23 PM, Jim Gallacher wrote:

> Alex Greif wrote:
>> are there plans when 3.3. will be released?
>
> I'd suggested a while ago that we aim for an October or November
> release. At this point I can't see any reason that it would be delayed
> beyond that point, but November is more realistic.
>
> If there are features in 3.3. that you need for your application, I'd
> suggest grabbing a copy from subversion and start doing some testing
> with your app. The earlier we can identify problems the better. The
> 3.2.x beta cycle was a long one, and we really want to avoid that this
> time. Actually, we want to avoid that every time. ;)

I am actually keen on creating a beta snapshot for early testing  
soon. I still
have a few features to finish before I can do that, and some are  
dependent
on getting some feedback from users so a decision can be made as to
exactly how something should be done or whether a change should even
be made. These sorts of discussions happen over on the mod_python dev
mailing list, so if you are interested in providing some input into  
3.3, you
are more than welcome to get involved in that list, even if it is  
only to provide
some feedback.

To subscribe to the mod_python dev list, send a message to:

    <python-dev-subscribe@httpd.apache.org>


Graham
From nicolas at lehuen.com  Sat Aug  5 06:26:00 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Sat Aug  5 06:26:08 2006
Subject: [mod_python] Windows Installation
In-Reply-To: <20060805011516.40997.qmail@web60017.mail.yahoo.com>
References: <20060805011516.40997.qmail@web60017.mail.yahoo.com>
Message-ID: <c298f2d70608050326oe2bda90sb59abbcd1c0b4015@mail.gmail.com>

Hi Faizan,

Here is an answer I gave a few month ago about a similar problem.

"""
One of the possible cause of your problem is that Apache does find
mod_python.so but not one of the DLL it relies on. Unfortunately the
error reporting in this case is quite scarce and misguiding.

The candidates missing DLLs are python24.dll and the Microsoft Runtime
DLLS (normally msvcr71.dll and msvcp71.dll).

Make sure that your Python directory and the runtime DLLs can be found
on your PATH. The runtime DLLs are normaly copied in your Python
directory, so putting the Python directory on your PATH variable should
do the trick.

Also, make sure that the user which is running Apache has its PATH
variable properly set. The best way to do this is to define it at the
system-wide level, but logging it under the user and defining the
variable at the user level is also possible.
"""

Hopefully we'll get the mod_python Wiki up and running real soon now, so
we'll be able to add a bit of documentation on the subject.

Regards,
Nicolas

2006/8/5, Faizan Tayyab <faizantayyab@yahoo.com>:
>
> Hi All,
>
> I have installed Apache HTTP Server 2.2.3 on my local
> machine running windows XP. It is working fine. Then i
> have installed mod_python 3.2.10 for windows
> installation from
> http://www.lehuen.com/nicolas/download.
>
> After that i altered the apache config file adding
> LoadModule python_module modules/mod_python.so
>
> i can see the mod_python module in the Apache2.2
> /module, but when i try to run the Apache services
> again it says it cannot locate (find) the mod_python
> module.
>
> If i remove the above added LoadModule line in the
> config the Apache web services run as normal.
>
> What am i doing wrong???
>
>
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060805/bb80be8f/attachment.html
From administrator at leebrown.org  Sat Aug  5 14:45:25 2006
From: administrator at leebrown.org (Lee Brown)
Date: Sat Aug  5 14:46:09 2006
Subject: [mod_python] libxml2 and libxslt in mod_python
In-Reply-To: <1154562795.5163.56.camel@localhost>
Message-ID: <001501c6b8bf$50ef1d30$0301a8c0@uberbox>

Greetings!

In addition to lxml, here are a few other xslt solutions for python (along
with my personal opinions of them):

Pyana:

A wrapper on Apache's Xalan processor.  Simple API, reasonably fast, but no
support for xlst 2.0 or xinclude.

FourSuite:

An incredibly comprehensive suite of xml/xslt tools in 100% python - no
external dependencies.  Full support for xinclude, xpath, xquery, yada,
yada, yada.  Also has incredibly complicated (but thorough) documentation
and is rather slow.  Probably way to slow for per-request xslt
transformations, but O.K. for a Content Management System operating
independently of the web server.

MSXML (Microsoft XML COM object library)

Can be called up from Python as a COM object using pywin32.  Very fast, but
also very frustrating due to well-hidden (or non-existent) documentation.
Not available for non-windows platforms.

Misc. External Processes:

Of course, you can always call another process using Python's os.popen,
os.spawn, or sys.command functions.  In that case, you can use almost any
xslt engine that has a command-line interface.  Candidates include Apache's
Xerces/Xalan, libxml2/libxslt, Altova's XMLSpy run-time engine.  Way too
slow for per-request processing, but that's more to do with OS overhead than
the libraries themselves.

I used to use Pyana with Mod Python and I liked it a lot until I ran up
against the need to do xinclude processing.  Now I use lxml and I also like
it a lot, though I'm not really fond of the Element Tree API.  (But then I'm
unusual in that regard.)

Just for grins and giggles, here is a code sample for performing xslt
transformations as an Apache output filter using Mod Python and lxml:

### xsltfilter.py ###

from mod_python import apache
from cStringIO import StringIO
import lxml.etree

xsltfile = open('c:/webdev/sites/crashtest/templates/template.xslt', 'rU')
styledoc = lxml.etree.parse(StringIO(xsltfile.read()))
transformer = lxml.etree.XSLT(styledoc)
xsltfile.close()

def outputfilter (filter):

    streamlet = filter.read()

    try:
        streambuffer = filter.req.streambuffer
    except AttributeError:
        filter.req.streambuffer = StringIO()
        streambuffer = filter.req.streambuffer
        
    while streamlet:
        streambuffer.write(streamlet)
        streamlet = filter.read()

    if streamlet is None:
        doc = lxml.etree.parse(streambuffer)
        doc.xinclude()
        result = str(transformer(doc))
        filter.req.headers_out["Content-Length"] = str(len(output))
        filter.write(result)
        filter.close()

###

Note that this filter loads the xslt template once on startup and then just
keeps re-using it over and over to maximize efficiency.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Diego Guillen
Sent: Wednesday, August 02, 2006 7:53 PM
To: mod_python@modpython.org
Subject: [mod_python] libxml2 and libxslt in mod_python

Hi all,

BACKGROUND
I just started using mod_python 3.1.4 with Apache2 on Ubuntu 6.06 Linux.
[it embeds Python 2.4] I'm translating a small application from PHP5, as an
exercise. It uses classes, simple inheritance, and xslt processing.

I'm looking into /var/log/apache2/error.log, as well as on the Firefox
1.5 browser, for error messages.

COMMENTS
My first impression is that mod_python's error reporting system is not as
pleasant to use. I don't seem to get enough feedback when something goes
wrong, and the error messages don't seem to point to the right version of
the files, nor to the right line numbers.

[It seems that the line numbers are shifted when you use logging, or when a
statement spans over several lines]

When I move the application into another folder, and remove the references
to the mod_python module [simulating the requests], it seems to be easier to
debug directly with the Python 2.4 interpreter.

QUESTIONS
My questions are: 
* is it possible to access the libxml2, libxslt libraries in mod_python?
* is there an alternative better way for doing xslt in Python?
* is there any good Python-based documentation on the use of these libraries
without recurring to the C description (http://xmlsoft.org/)?
* and this may sound heretical on this mailing list: is there a way better
than mod_python to write web applications with Python?

Thanks,
   Diego




_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Sat Aug  5 17:27:40 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Aug  5 17:27:51 2006
Subject: [mod_python] Talk on what is coming in mod_python 3.3.
In-Reply-To: <049AFDB2-2F39-42A1-B5E2-B14B75295AEA@dscpl.com.au>
References: <778770d80608040511p54ec18f8xc6cea0c79a1113f@mail.gmail.com>	<44D34A34.8020904@jgassociates.ca>
	<049AFDB2-2F39-42A1-B5E2-B14B75295AEA@dscpl.com.au>
Message-ID: <44D50D4C.6060406@jgassociates.ca>

Graham Dumpleton wrote:
> 
> On 04/08/2006, at 11:23 PM, Jim Gallacher wrote:
> 
>> Alex Greif wrote:
>>> are there plans when 3.3. will be released?
>>
>> I'd suggested a while ago that we aim for an October or November
>> release. At this point I can't see any reason that it would be delayed
>> beyond that point, but November is more realistic.
>>
>> If there are features in 3.3. that you need for your application, I'd
>> suggest grabbing a copy from subversion and start doing some testing
>> with your app. The earlier we can identify problems the better. The
>> 3.2.x beta cycle was a long one, and we really want to avoid that this
>> time. Actually, we want to avoid that every time. ;)
> 
> I am actually keen on creating a beta snapshot for early testing soon. 

It's my turn to be on a slow dialup for a few days, but we can look at 
this next week.

Jim
From ml at dasir.net  Mon Aug  7 06:54:22 2006
From: ml at dasir.net (David Siroky)
Date: Mon Aug  7 06:54:39 2006
Subject: [mod_python] Windows Installation
In-Reply-To: <20060805011516.40997.qmail@web60017.mail.yahoo.com>
References: <20060805011516.40997.qmail@web60017.mail.yahoo.com>
Message-ID: <1154948062.7953.9.camel@localhost>

Do you have you Python instalation included in system variable PATH?
(path of the python.exe is good enough)


Faizan Tayyab p??e v P? 04. 08. 2006 v 18:15 -0700:
> Hi All,
> 
>  I have installed Apache HTTP Server 2.2.3 on my local
> machine running windows XP. It is working fine. Then i
> have installed mod_python 3.2.10 for windows
> installation from
> http://www.lehuen.com/nicolas/download. 
> 
> After that i altered the apache config file adding
> LoadModule python_module modules/mod_python.so
> 
> i can see the mod_python module in the Apache2.2
> /module, but when i try to run the Apache services
> again it says it cannot locate (find) the mod_python
> module.
> 
> If i remove the above added LoadModule line in the
> config the Apache web services run as normal.
> 
> What am i doing wrong???
> 
> 
> 
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around 
> http://mail.yahoo.com 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grisha at apache.org  Mon Aug  7 12:35:35 2006
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Mon Aug  7 12:35:44 2006
Subject: [mod_python] ANNOUNCE: Mod_python 3.2.10
Message-ID: <20060807122954.C16306@grisha.dyndns.org>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.2.10 release of mod_python. Mod_python
3.2.10 is considered a stable release, suitable for production use.

Mod_python is an Apache HTTP Server module that embeds the Python
language interpreter within the server. With mod_python you can write
web-based applications in Python that will run many times faster than
traditional CGI and will have access to advanced features such as
ability to maintain objects between requests, access to httpd
internals, content filters and connection handlers.

The 3.2.10 release has many new features, feature enhancements, fixed
bugs and other improvements over the previous version. 3.2.10 now
works with Apache HTTP Server 2.2. See Appendix A of mod_python
documentation for a complete list.

Mod_python 3.2.10 is released under Apache License version 2.0.

Mod_python 3.2.10 is available for download from:

http://httpd.apache.org/modules/python-download.cgi

More information about mod_python is available at:

http://httpd.apache.org/modules/

Many thanks to Jim Gallacher, Graham Dumpleton, Nicolas Lehuen and
everyone else who contributed to and helped test this release, without
your help it would not be possible!

Regards,

Grisha Trubetskoy
From yeqiwei001 at gmail.com  Tue Aug  8 03:24:30 2006
From: yeqiwei001 at gmail.com (yeqiwei)
Date: Tue Aug  8 03:24:40 2006
Subject: [mod_python] In ubuntu 6.06! make_obcallback(): could not import
	mod_python.apache
Message-ID: <44d83c30.70147d31.72b7.0962@mx.gmail.com>

My os is Ubuntu 6.06.
Apache is 1.3.34
mod_python is 2.7.10
python 2.4.1a0
I install these software using the apt-get install command.

apache documentroot is /var/www. And I make a dir test.

in http.conf, I write this:
<Directory /var/www/test>
		AddHandler python-program  .py
		PythonHandler mptest
        PYtohnDebug On
</Directory>

and in the modules.conf 
LoadModule  python_module /usr/lib/apache/1.3/mod_python

in /var/www/test, I put a mptest.py file the content is
from mod_python import apache

def handler(req):
    req.send_http_header()
    req.write("Hello World!")
    return apache.OK

when I point to http://127.0.0.l/test/mptest.py,  get the 500 Internal Server Error
And I check the apache error.log,fount that

make_obcallback():could not import mod_python.apache
make_obcallback():could not call init
........python_handler: make_obcallback returned no obCallBack!


I have install python2.3 and python 2.4,but the /usr/bin/python is linked to 
the /usr/bin/python2.4.
And I run mptest.py in shell, the error information is that:

Traceback (most recent call last)
 File "/var/www/test/mptest.py",line 1, in ?
   from mod_python import apache
 File "/usr/lib/python2.4/site-packages/mod_python/apache.py",line 55 in ?
   import _apache
ImportError: No module named _apache


How can I solve this problem? 



From jcigar at ulb.ac.be  Tue Aug  8 06:07:25 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Aug  8 06:52:08 2006
Subject: [mod_python] sharing stuff between multiple apache processes
Message-ID: <44D8625D.4060603@ulb.ac.be>

Hello list,

I'm using SQLAlchemy with apache/mod_python (prefork) and a custom 
mod_python handler. I was looking for a solution to share the SQLAlchemy session 
object between the apache processes.

The SQLAlchemy session is almost the same as a session in Hibernate.

At the moment I have a session object per process (which work fine), but 
I have to close / reopen the session object for each request which is 
not optimal ... and can cause a lot of problems if I forget to close the 
session at the end of a request, for example if I modify an object in 
the session of a process which is still persistent (cached) in the 
session of another process, etc ...

I plan to use either shared memory (no experience with this at the 
moment) or memcached which look nice. Do you have any suggestion or 
another solution for this ? 
Is there something in mod_python to share an object between processes ?

Thanks,
Julien


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From jpg at jgassociates.ca  Tue Aug  8 10:35:32 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Aug  8 10:33:48 2006
Subject: [mod_python] req.sendfile() problem
In-Reply-To: <18452913.379731154713795822.JavaMail.tomcat@aurora>
References: <18452913.379731154713795822.JavaMail.tomcat@aurora>
Message-ID: <44D8A134.7010209@jgassociates.ca>

Thomas J. Schirripa wrote:
> Thanks a lot guys, the problem is fixed. I feel so stupid because it ended up being a naming problem - I thought the path looked okay, and I automatically assumed the name wasn't a problem because I would have thought the IOError message would have said something along the lines of "cannot find file". Anyways, I actually had a question about handling the exception because I did try doing that.
> 
> I had req.sendfile() in a try/except block, but in order to to send the error message to the browser....
> Here's what I did...
> 
> def handler(req):
> 	fields = util.FieldStorage(req)
> 	filename = os.path.basename(fields["filename"])
> 	directory = os.path.dirname(fields["filename"])
> 	req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename
> 	req.content_type = "text/plain"
> 	try:
> 		req.sendfile("%s/%s" % (directory, filename))
> 	except IOError, e:
> 		req.content_type = "text/html"
> 		req.write("Raised exception reads:\n<br>%s" % str(e))
> 		return apache.OK
> 	return apache.OK
> 
> Here's what happened:
> instead of the IOError displaying in the browser, the file downloaded and had the req.write() message in it:
> "Raised exception reads:
> <br>Could not stat file for reading"
> 
> I thought I read somewhere you can't change the content type after it has been set (a limitation of http -  in fact, this is why I have a seperate sendFile handler... so I can set the content type properly), but I didn't think this would be a problem. Is there a way to get the message to display in the browser instead of sending over an html file with the message?

You can change the content-type, or any other response headers anytime
you want, up to the first call to req.write or req.sendfile. That first
call will cause the headers to be sent before the response body, so
changing the headers from that point on will have no effect. This is a
restriction imposed by HTTP, just as you surmise.

Jim

From listspam at flowtheory.net  Tue Aug  8 12:37:43 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Tue Aug  8 12:38:00 2006
Subject: [mod_python] sharing stuff between multiple apache processes
In-Reply-To: <44D8625D.4060603@ulb.ac.be>
References: <44D8625D.4060603@ulb.ac.be>
Message-ID: <1155055065.18645.11.camel@localhost.localdomain>

To talk between processes you need some sort of IPC mechanism. It would
suck if arbitrary processes could share data memory space -- not only
security-wise but locking wise. So no, there is no built-in facility for
this. But you're welcome to try to use some sort of IPC mechanism for
this. Somehow I'm thinking that the overhead of the IPC might be greater
than opening/closing connections.

-jag

On Tue, 2006-08-08 at 12:07 +0200, Julien Cigar wrote:
> Hello list,
> 
> I'm using SQLAlchemy with apache/mod_python (prefork) and a custom 
> mod_python handler. I was looking for a solution to share the SQLAlchemy session 
> object between the apache processes.
> 
> The SQLAlchemy session is almost the same as a session in Hibernate.
> 
> At the moment I have a session object per process (which work fine), but 
> I have to close / reopen the session object for each request which is 
> not optimal ... and can cause a lot of problems if I forget to close the 
> session at the end of a request, for example if I modify an object in 
> the session of a process which is still persistent (cached) in the 
> session of another process, etc ...
> 
> I plan to use either shared memory (no experience with this at the 
> moment) or memcached which look nice. Do you have any suggestion or 
> another solution for this ? 
> Is there something in mod_python to share an object between processes ?
> 
> Thanks,
> Julien
> 
> 

From grisha at apache.org  Mon Aug  7 12:35:35 2006
From: grisha at apache.org (Gregory (Grisha) Trubetskoy)
Date: Wed Aug  9 01:39:12 2006
Subject: [mod_python] ANNOUNCE: Mod_python 3.2.10
Message-ID: <20060807122954.C16306@grisha.dyndns.org>


The Apache Software Foundation and The Apache HTTP Server Project are
pleased to announce the 3.2.10 release of mod_python. Mod_python
3.2.10 is considered a stable release, suitable for production use.

Mod_python is an Apache HTTP Server module that embeds the Python
language interpreter within the server. With mod_python you can write
web-based applications in Python that will run many times faster than
traditional CGI and will have access to advanced features such as
ability to maintain objects between requests, access to httpd
internals, content filters and connection handlers.

The 3.2.10 release has many new features, feature enhancements, fixed
bugs and other improvements over the previous version. 3.2.10 now
works with Apache HTTP Server 2.2. See Appendix A of mod_python
documentation for a complete list.

Mod_python 3.2.10 is released under Apache License version 2.0.

Mod_python 3.2.10 is available for download from:

http://httpd.apache.org/modules/python-download.cgi

More information about mod_python is available at:

http://httpd.apache.org/modules/

Many thanks to Jim Gallacher, Graham Dumpleton, Nicolas Lehuen and
everyone else who contributed to and helped test this release, without
your help it would not be possible!

Regards,

Grisha Trubetskoy
From alex.greif at gmail.com  Wed Aug  9 03:28:25 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Wed Aug  9 03:28:50 2006
Subject: [mod_python] get_options() in apache module
Message-ID: <778770d80608090028p11a71852x7aede95f6900144b@mail.gmail.com>

Hi,
in the docs I only find req.get_options()

But I need access to the options before the first request.
Is there a similar method in the  apache object? Unfortunately I did
not find one

<Directory ...>
  SetHandler mod_python
  PythonHandler mod_python.publisher
  PythonOption key "value"                       <---- this one
</Directory>

The workaround I use now is to start apache with a -D and then call
apache.exists_config_define()
But for my needs this is a smelling workaround :((

So a apache.get_options() would be the best because the options are
global anyway, so I dont understand why access to them is only
possible through the request object

Alex.
From grahamd at dscpl.com.au  Wed Aug  9 05:42:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  9 05:42:18 2006
Subject: [mod_python] get_options() in apache module
In-Reply-To: <778770d80608090028p11a71852x7aede95f6900144b@mail.gmail.com>
References: <778770d80608090028p11a71852x7aede95f6900144b@mail.gmail.com>
Message-ID: <E7C78EF8-EFE7-4A34-9DD9-393FE34A73F1@dscpl.com.au>


On 09/08/2006, at 5:28 PM, Alex Greif wrote:

> Hi,
> in the docs I only find req.get_options()
>
> But I need access to the options before the first request.
> Is there a similar method in the  apache object? Unfortunately I did
> not find one
>
> <Directory ...>
>  SetHandler mod_python
>  PythonHandler mod_python.publisher
>  PythonOption key "value"                       <---- this one
> </Directory>
>
> The workaround I use now is to start apache with a -D and then call
> apache.exists_config_define()
> But for my needs this is a smelling workaround :((
>
> So a apache.get_options() would be the best because the options are
> global anyway, so I dont understand why access to them is only
> possible through the request object

When you use req.get_options() the result is the combination of all  
options
from global scope, through VirtualHost, Directory/Location/Files  
and .htaccess
files which are relevant to the target of the request.

Thus req.get_options() would already return the specific PythonOption  
your
mail points at when executed from within a handler.

There is also req.connection.base_server.get_options() which equates to
the combination of options down to VirtualHost level. This will not  
contain
any overrides for specific options inside of Directory/Location/Files  
directives
or .htaccess file relevant to the specific request.

In mod_python 3.2.10, there is also req.server.get_options(). This is
similar to req.get_options(), but returns only the options defined at  
global
scope within the Apache configuration. That is, outside of the  
context of
any VirtualHost, Location, Directory or Files directives.

In mod_python 3.3, one will also be able to access the main server  
object
through apache.main_server. Thus apache.main_server.get_options() will
return the same as req.server.get_options() except that since it is  
in the apache
module it can be used at global scope within modules at the time they  
are
being imported.

The apache.main_server object in mod_python 3.3 did exist in mod_python
3.2.10, but was called apache._server and wasn't officially part of  
the public
API at that point.

Thus apache.main_server may be what you want if you mean to be able to
access it outside of any handler (before a request arrives), but your  
PythonOption
must be at global scope, not within the Directory directive as you  
have it.

Graham
From grahamd at dscpl.com.au  Wed Aug  9 05:50:26 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  9 05:50:12 2006
Subject: [mod_python] In ubuntu 6.06! make_obcallback(): could not import
	mod_python.apache
In-Reply-To: <44d83c30.70147d31.72b7.0962@mx.gmail.com>
References: <44d83c30.70147d31.72b7.0962@mx.gmail.com>
Message-ID: <03160060-B4ED-4207-BA45-A5C3E1517BF9@dscpl.com.au>

These problems are always hard to debug when using mod_python 2.7.X.
Some extra debug was added in mod_python 3.2.10 to make it easier to
work out, but that requires Apache 2.0/2.2 and you can't use Apache 1.3.

Anyway, all I can think of is that the user that Apache runs as is  
finding a
different version of the python executable on its PATH or it is  
getting confused
by you having multiple versions installed. Do you have any other  
versions
of Python installed, such as in /usr/local/bin, even perhaps a  
symlink there
pointing to python2.3.

Any chance of upgrading to Apache 2.2 and mod_python 3.2.10?

Graham

On 08/08/2006, at 5:24 PM, yeqiwei wrote:

> My os is Ubuntu 6.06.
> Apache is 1.3.34
> mod_python is 2.7.10
> python 2.4.1a0
> I install these software using the apt-get install command.
>
> apache documentroot is /var/www. And I make a dir test.
>
> in http.conf, I write this:
> <Directory /var/www/test>
> 		AddHandler python-program  .py
> 		PythonHandler mptest
>         PYtohnDebug On
> </Directory>
>
> and in the modules.conf
> LoadModule  python_module /usr/lib/apache/1.3/mod_python
>
> in /var/www/test, I put a mptest.py file the content is
> from mod_python import apache
>
> def handler(req):
>     req.send_http_header()
>     req.write("Hello World!")
>     return apache.OK
>
> when I point to http://127.0.0.l/test/mptest.py,  get the 500  
> Internal Server Error
> And I check the apache error.log,fount that
>
> make_obcallback():could not import mod_python.apache
> make_obcallback():could not call init
> ........python_handler: make_obcallback returned no obCallBack!
>
>
> I have install python2.3 and python 2.4,but the /usr/bin/python is  
> linked to
> the /usr/bin/python2.4.
> And I run mptest.py in shell, the error information is that:
>
> Traceback (most recent call last)
>  File "/var/www/test/mptest.py",line 1, in ?
>    from mod_python import apache
>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",line  
> 55 in ?
>    import _apache
> ImportError: No module named _apache
>
>
> How can I solve this problem?
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From alex.greif at gmail.com  Wed Aug  9 05:53:34 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Wed Aug  9 05:53:39 2006
Subject: [mod_python] get_options() in apache module
In-Reply-To: <E7C78EF8-EFE7-4A34-9DD9-393FE34A73F1@dscpl.com.au>
References: <778770d80608090028p11a71852x7aede95f6900144b@mail.gmail.com>
	<E7C78EF8-EFE7-4A34-9DD9-393FE34A73F1@dscpl.com.au>
Message-ID: <778770d80608090253p2c87d7d5q68b752b189b489d2@mail.gmail.com>

the apache._server.get_config() works fine

Thanks,
Alex.

On 8/9/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 09/08/2006, at 5:28 PM, Alex Greif wrote:
>
> > Hi,
> > in the docs I only find req.get_options()
> >
> > But I need access to the options before the first request.
> > Is there a similar method in the  apache object? Unfortunately I did
> > not find one
> >
> > <Directory ...>
> >  SetHandler mod_python
> >  PythonHandler mod_python.publisher
> >  PythonOption key "value"                       <---- this one
> > </Directory>
> >
> > The workaround I use now is to start apache with a -D and then call
> > apache.exists_config_define()
> > But for my needs this is a smelling workaround :((
> >
> > So a apache.get_options() would be the best because the options are
> > global anyway, so I dont understand why access to them is only
> > possible through the request object
>
> When you use req.get_options() the result is the combination of all
> options
> from global scope, through VirtualHost, Directory/Location/Files
> and .htaccess
> files which are relevant to the target of the request.
>
> Thus req.get_options() would already return the specific PythonOption
> your
> mail points at when executed from within a handler.
>
> There is also req.connection.base_server.get_options() which equates to
> the combination of options down to VirtualHost level. This will not
> contain
> any overrides for specific options inside of Directory/Location/Files
> directives
> or .htaccess file relevant to the specific request.
>
> In mod_python 3.2.10, there is also req.server.get_options(). This is
> similar to req.get_options(), but returns only the options defined at
> global
> scope within the Apache configuration. That is, outside of the
> context of
> any VirtualHost, Location, Directory or Files directives.
>
> In mod_python 3.3, one will also be able to access the main server
> object
> through apache.main_server. Thus apache.main_server.get_options() will
> return the same as req.server.get_options() except that since it is
> in the apache
> module it can be used at global scope within modules at the time they
> are
> being imported.
>
> The apache.main_server object in mod_python 3.3 did exist in mod_python
> 3.2.10, but was called apache._server and wasn't officially part of
> the public
> API at that point.
>
> Thus apache.main_server may be what you want if you mean to be able to
> access it outside of any handler (before a request arrives), but your
> PythonOption
> must be at global scope, not within the Directory directive as you
> have it.
>
> Graham
>
From grahamd at dscpl.com.au  Wed Aug  9 06:14:20 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  9 06:14:25 2006
Subject: [mod_python] get_options() in apache module
In-Reply-To: <778770d80608090253p2c87d7d5q68b752b189b489d2@mail.gmail.com>
References: <778770d80608090028p11a71852x7aede95f6900144b@mail.gmail.com>
	<E7C78EF8-EFE7-4A34-9DD9-393FE34A73F1@dscpl.com.au>
	<778770d80608090253p2c87d7d5q68b752b189b489d2@mail.gmail.com>
Message-ID: <B55FFF42-68A8-4276-A923-98FB8C7B640C@dscpl.com.au>

Note though that apache._server in mod_python 3.2.10 possibly has a bug
in it, in that it may use the server object for the first virtual  
host accessed and not
the main server object. This was fixed in 3.3 as is mentioned under:

  http://issues.apache.org/jira/browse/MODPYTHON-144

If you are going to rely on this, you might consider backporting the  
patches
from mod_python 3.3.

Graham

On 09/08/2006, at 7:53 PM, Alex Greif wrote:

> the apache._server.get_config() works fine
>
> Thanks,
> Alex.
>
> On 8/9/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>
>> On 09/08/2006, at 5:28 PM, Alex Greif wrote:
>>
>> > Hi,
>> > in the docs I only find req.get_options()
>> >
>> > But I need access to the options before the first request.
>> > Is there a similar method in the  apache object? Unfortunately I  
>> did
>> > not find one
>> >
>> > <Directory ...>
>> >  SetHandler mod_python
>> >  PythonHandler mod_python.publisher
>> >  PythonOption key "value"                       <---- this one
>> > </Directory>
>> >
>> > The workaround I use now is to start apache with a -D and then call
>> > apache.exists_config_define()
>> > But for my needs this is a smelling workaround :((
>> >
>> > So a apache.get_options() would be the best because the options are
>> > global anyway, so I dont understand why access to them is only
>> > possible through the request object
>>
>> When you use req.get_options() the result is the combination of all
>> options
>> from global scope, through VirtualHost, Directory/Location/Files
>> and .htaccess
>> files which are relevant to the target of the request.
>>
>> Thus req.get_options() would already return the specific PythonOption
>> your
>> mail points at when executed from within a handler.
>>
>> There is also req.connection.base_server.get_options() which  
>> equates to
>> the combination of options down to VirtualHost level. This will not
>> contain
>> any overrides for specific options inside of Directory/Location/Files
>> directives
>> or .htaccess file relevant to the specific request.
>>
>> In mod_python 3.2.10, there is also req.server.get_options(). This is
>> similar to req.get_options(), but returns only the options defined at
>> global
>> scope within the Apache configuration. That is, outside of the
>> context of
>> any VirtualHost, Location, Directory or Files directives.
>>
>> In mod_python 3.3, one will also be able to access the main server
>> object
>> through apache.main_server. Thus apache.main_server.get_options()  
>> will
>> return the same as req.server.get_options() except that since it is
>> in the apache
>> module it can be used at global scope within modules at the time they
>> are
>> being imported.
>>
>> The apache.main_server object in mod_python 3.3 did exist in  
>> mod_python
>> 3.2.10, but was called apache._server and wasn't officially part of
>> the public
>> API at that point.
>>
>> Thus apache.main_server may be what you want if you mean to be  
>> able to
>> access it outside of any handler (before a request arrives), but your
>> PythonOption
>> must be at global scope, not within the Directory directive as you
>> have it.
>>
>> Graham
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From alex.greif at gmail.com  Wed Aug  9 06:16:38 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Wed Aug  9 06:16:52 2006
Subject: [mod_python] get_options() in apache module
In-Reply-To: <B55FFF42-68A8-4276-A923-98FB8C7B640C@dscpl.com.au>
References: <778770d80608090028p11a71852x7aede95f6900144b@mail.gmail.com>
	<E7C78EF8-EFE7-4A34-9DD9-393FE34A73F1@dscpl.com.au>
	<778770d80608090253p2c87d7d5q68b752b189b489d2@mail.gmail.com>
	<B55FFF42-68A8-4276-A923-98FB8C7B640C@dscpl.com.au>
Message-ID: <778770d80608090316h1dfd8231xbbb12526e90521ef@mail.gmail.com>

will mod_python 3.3 also support apache 2.0.x or only 2.2?

ALex.

On 8/9/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Note though that apache._server in mod_python 3.2.10 possibly has a bug
> in it, in that it may use the server object for the first virtual
> host accessed and not
> the main server object. This was fixed in 3.3 as is mentioned under:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-144
>
> If you are going to rely on this, you might consider backporting the
> patches
> from mod_python 3.3.
>
> Graham
>
> On 09/08/2006, at 7:53 PM, Alex Greif wrote:
>
> > the apache._server.get_config() works fine
> >
> > Thanks,
> > Alex.
> >
> > On 8/9/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >>
> >> On 09/08/2006, at 5:28 PM, Alex Greif wrote:
> >>
> >> > Hi,
> >> > in the docs I only find req.get_options()
> >> >
> >> > But I need access to the options before the first request.
> >> > Is there a similar method in the  apache object? Unfortunately I
> >> did
> >> > not find one
> >> >
> >> > <Directory ...>
> >> >  SetHandler mod_python
> >> >  PythonHandler mod_python.publisher
> >> >  PythonOption key "value"                       <---- this one
> >> > </Directory>
> >> >
> >> > The workaround I use now is to start apache with a -D and then call
> >> > apache.exists_config_define()
> >> > But for my needs this is a smelling workaround :((
> >> >
> >> > So a apache.get_options() would be the best because the options are
> >> > global anyway, so I dont understand why access to them is only
> >> > possible through the request object
> >>
> >> When you use req.get_options() the result is the combination of all
> >> options
> >> from global scope, through VirtualHost, Directory/Location/Files
> >> and .htaccess
> >> files which are relevant to the target of the request.
> >>
> >> Thus req.get_options() would already return the specific PythonOption
> >> your
> >> mail points at when executed from within a handler.
> >>
> >> There is also req.connection.base_server.get_options() which
> >> equates to
> >> the combination of options down to VirtualHost level. This will not
> >> contain
> >> any overrides for specific options inside of Directory/Location/Files
> >> directives
> >> or .htaccess file relevant to the specific request.
> >>
> >> In mod_python 3.2.10, there is also req.server.get_options(). This is
> >> similar to req.get_options(), but returns only the options defined at
> >> global
> >> scope within the Apache configuration. That is, outside of the
> >> context of
> >> any VirtualHost, Location, Directory or Files directives.
> >>
> >> In mod_python 3.3, one will also be able to access the main server
> >> object
> >> through apache.main_server. Thus apache.main_server.get_options()
> >> will
> >> return the same as req.server.get_options() except that since it is
> >> in the apache
> >> module it can be used at global scope within modules at the time they
> >> are
> >> being imported.
> >>
> >> The apache.main_server object in mod_python 3.3 did exist in
> >> mod_python
> >> 3.2.10, but was called apache._server and wasn't officially part of
> >> the public
> >> API at that point.
> >>
> >> Thus apache.main_server may be what you want if you mean to be
> >> able to
> >> access it outside of any handler (before a request arrives), but your
> >> PythonOption
> >> must be at global scope, not within the Directory directive as you
> >> have it.
> >>
> >> Graham
> >>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From grahamd at dscpl.com.au  Wed Aug  9 06:40:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  9 06:40:10 2006
Subject: [mod_python] get_options() in apache module
In-Reply-To: <778770d80608090316h1dfd8231xbbb12526e90521ef@mail.gmail.com>
References: <778770d80608090028p11a71852x7aede95f6900144b@mail.gmail.com>
	<E7C78EF8-EFE7-4A34-9DD9-393FE34A73F1@dscpl.com.au>
	<778770d80608090253p2c87d7d5q68b752b189b489d2@mail.gmail.com>
	<B55FFF42-68A8-4276-A923-98FB8C7B640C@dscpl.com.au>
	<778770d80608090316h1dfd8231xbbb12526e90521ef@mail.gmail.com>
Message-ID: <688AE46E-D504-4C1C-BD6C-39316BAE0444@dscpl.com.au>

Will support Apache 2.0.47+ and 2.2+.

On 09/08/2006, at 8:16 PM, Alex Greif wrote:

> will mod_python 3.3 also support apache 2.0.x or only 2.2?
>
> ALex.
>
> On 8/9/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> Note though that apache._server in mod_python 3.2.10 possibly has  
>> a bug
>> in it, in that it may use the server object for the first virtual
>> host accessed and not
>> the main server object. This was fixed in 3.3 as is mentioned under:
>>
>>   http://issues.apache.org/jira/browse/MODPYTHON-144
>>
>> If you are going to rely on this, you might consider backporting the
>> patches
>> from mod_python 3.3.
>>
>> Graham
>>
>> On 09/08/2006, at 7:53 PM, Alex Greif wrote:
>>
>> > the apache._server.get_config() works fine
>> >
>> > Thanks,
>> > Alex.
>> >
>> > On 8/9/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> >>
>> >> On 09/08/2006, at 5:28 PM, Alex Greif wrote:
>> >>
>> >> > Hi,
>> >> > in the docs I only find req.get_options()
>> >> >
>> >> > But I need access to the options before the first request.
>> >> > Is there a similar method in the  apache object? Unfortunately I
>> >> did
>> >> > not find one
>> >> >
>> >> > <Directory ...>
>> >> >  SetHandler mod_python
>> >> >  PythonHandler mod_python.publisher
>> >> >  PythonOption key "value"                       <---- this one
>> >> > </Directory>
>> >> >
>> >> > The workaround I use now is to start apache with a -D and  
>> then call
>> >> > apache.exists_config_define()
>> >> > But for my needs this is a smelling workaround :((
>> >> >
>> >> > So a apache.get_options() would be the best because the  
>> options are
>> >> > global anyway, so I dont understand why access to them is only
>> >> > possible through the request object
>> >>
>> >> When you use req.get_options() the result is the combination of  
>> all
>> >> options
>> >> from global scope, through VirtualHost, Directory/Location/Files
>> >> and .htaccess
>> >> files which are relevant to the target of the request.
>> >>
>> >> Thus req.get_options() would already return the specific  
>> PythonOption
>> >> your
>> >> mail points at when executed from within a handler.
>> >>
>> >> There is also req.connection.base_server.get_options() which
>> >> equates to
>> >> the combination of options down to VirtualHost level. This will  
>> not
>> >> contain
>> >> any overrides for specific options inside of Directory/Location/ 
>> Files
>> >> directives
>> >> or .htaccess file relevant to the specific request.
>> >>
>> >> In mod_python 3.2.10, there is also req.server.get_options().  
>> This is
>> >> similar to req.get_options(), but returns only the options  
>> defined at
>> >> global
>> >> scope within the Apache configuration. That is, outside of the
>> >> context of
>> >> any VirtualHost, Location, Directory or Files directives.
>> >>
>> >> In mod_python 3.3, one will also be able to access the main server
>> >> object
>> >> through apache.main_server. Thus apache.main_server.get_options()
>> >> will
>> >> return the same as req.server.get_options() except that since  
>> it is
>> >> in the apache
>> >> module it can be used at global scope within modules at the  
>> time they
>> >> are
>> >> being imported.
>> >>
>> >> The apache.main_server object in mod_python 3.3 did exist in
>> >> mod_python
>> >> 3.2.10, but was called apache._server and wasn't officially  
>> part of
>> >> the public
>> >> API at that point.
>> >>
>> >> Thus apache.main_server may be what you want if you mean to be
>> >> able to
>> >> access it outside of any handler (before a request arrives),  
>> but your
>> >> PythonOption
>> >> must be at global scope, not within the Directory directive as you
>> >> have it.
>> >>
>> >> Graham
>> >>
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Wed Aug  9 06:46:52 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  9 06:46:47 2006
Subject: [mod_python] Re: \[mod_python\] In ubuntu 6\.06\!
	make_obcallback\(\): could not import mod_python\.apache
In-Reply-To: <44d9baae.39c8e69f.127f.ffffda62@mx.gmail.com>
References: <44d9baae.39c8e69f.127f.ffffda62@mx.gmail.com>
Message-ID: <CA61DB5C-6B71-4F64-888B-3445263EC1E3@dscpl.com.au>

Looks like your Python 2.4 installation has been stuffed up, or you have
Python 2.4.1a0 installed somewhere else on your box as well and that
is what is being found. One possibility is that Python 2.4 package is  
split
into main and dev and you have main from Python 2.4.3 but dev from the
older Python 2.4.1a0 and that is stuffing things up.

Graham

On 09/08/2006, at 8:36 PM, yeqiwei wrote:

> Thanks!
> In my os,the /usr/bin/python is linking to /usr/bin/python2.4.
>
> I solved this problem by replacing libapache-mod-python2.4 with  
> libapache-mod-python2.3,
> And using python2.3 instead of python2.4
>
> the python2.4 version in ubuntu is python 2.4.3,
> in apache log, I find that "mod_python/2.7.10 Python/2.4.1a0"
> does this matter? 2.4.1a0 or  2.4.3
>
>> These problems are always hard to debug when using mod_python 2.7.X.
>> Some extra debug was added in mod_python 3.2.10 to make it easier to
>> work out, but that requires Apache 2.0/2.2 and you can't use  
>> Apache 1.3.
>>
>> Anyway, all I can think of is that the user that Apache runs as is
>> finding a
>> different version of the python executable on its PATH or it is
>> getting confused
>> by you having multiple versions installed. Do you have any other
>> versions
>> of Python installed, such as in /usr/local/bin, even perhaps a
>> symlink there
>> pointing to python2.3.
>>
>> Any chance of upgrading to Apache 2.2 and mod_python 3.2.10?
>>
>> Graham
>>
>> On 08/08/2006, at 5:24 PM, yeqiwei wrote:
>>
>>> My os is Ubuntu 6.06.
>>> Apache is 1.3.34
>>> mod_python is 2.7.10
>>> python 2.4.1a0
>>> I install these software using the apt-get install command.
>>>
>>> apache documentroot is /var/www. And I make a dir test.
>>>
>>> in http.conf, I write this:
>>> <Directory /var/www/test>
>>> 		AddHandler python-program  .py
>>> 		PythonHandler mptest
>>>         PYtohnDebug On
>>> </Directory>
>>>
>>> and in the modules.conf
>>> LoadModule  python_module /usr/lib/apache/1.3/mod_python
>>>
>>> in /var/www/test, I put a mptest.py file the content is
>>> from mod_python import apache
>>>
>>> def handler(req):
>>>     req.send_http_header()
>>>     req.write("Hello World!")
>>>     return apache.OK
>>>
>>> when I point to http://127.0.0.l/test/mptest.py,  get the 500
>>> Internal Server Error
>>> And I check the apache error.log,fount that
>>>
>>> make_obcallback():could not import mod_python.apache
>>> make_obcallback():could not call init
>>> ........python_handler: make_obcallback returned no obCallBack!
>>>
>>>
>>> I have install python2.3 and python 2.4,but the /usr/bin/python is
>>> linked to
>>> the /usr/bin/python2.4.
>>> And I run mptest.py in shell, the error information is that:
>>>
>>> Traceback (most recent call last)
>>>  File "/var/www/test/mptest.py",line 1, in ?
>>>    from mod_python import apache
>>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",line
>>> 55 in ?
>>>    import _apache
>>> ImportError: No module named _apache
>>>
>>>
>>> How can I solve this problem?
>>>
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From grahamd at dscpl.com.au  Wed Aug  9 07:33:14 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  9 07:33:25 2006
Subject: [mod_python] Re: \\[mod_python\\] In ubuntu 6\\.06\\!
	make_obcallback\\(\\): could not import mod_python\\.apache
In-Reply-To: <44d9c4bc.6972c991.38f9.36f2@mx.gmail.com>
References: <44d9c4bc.6972c991.38f9.36f2@mx.gmail.com>
Message-ID: <DA54572C-E4B6-4489-9472-FA5A515A8923@dscpl.com.au>

Please use reply-all so responses go back to the mailing list.

On 09/08/2006, at 9:19 PM, yeqiwei wrote:

> I can't understand.
> In my ubuntu ,I install  python2.4 & python2.4-dev. Does this cause  
> such error?

Shouldn't, you need to have both. What I was thinking what that the
python2.4-dev didn't correspond to the exact same version of Python
that main python2.4 package was. Ie., python2.4 was Python 2.4.3
and python2.4-dev was 2.4.1a0. If you updated both at the same time
though, this should be unlikely though.

At this point, not sure what is really going on. If you got it working
with Python 2.3 versions of packages then just go with that.

Graham

> #dpkg -L python2.4-dev,
> I can't find any python file in /usr/bin or else dir in $PATH
>
>> Looks like your Python 2.4 installation has been stuffed up, or  
>> you have
>> Python 2.4.1a0 installed somewhere else on your box as well and that
>> is what is being found. One possibility is that Python 2.4 package is
>> split
>> into main and dev and you have main from Python 2.4.3 but dev from  
>> the
>> older Python 2.4.1a0 and that is stuffing things up.
>>
>> Graham
>>
>> On 09/08/2006, at 8:36 PM, yeqiwei wrote:
>>
>>> Thanks!
>>> In my os,the /usr/bin/python is linking to /usr/bin/python2.4.
>>>
>>> I solved this problem by replacing libapache-mod-python2.4 with
>>> libapache-mod-python2.3,
>>> And using python2.3 instead of python2.4
>>>
>>> the python2.4 version in ubuntu is python 2.4.3,
>>> in apache log, I find that "mod_python/2.7.10 Python/2.4.1a0"
>>> does this matter? 2.4.1a0 or  2.4.3
>>>
>>>> These problems are always hard to debug when using mod_python  
>>>> 2.7.X.
>>>> Some extra debug was added in mod_python 3.2.10 to make it  
>>>> easier to
>>>> work out, but that requires Apache 2.0/2.2 and you can't use
>>>> Apache 1.3.
>>>>
>>>> Anyway, all I can think of is that the user that Apache runs as is
>>>> finding a
>>>> different version of the python executable on its PATH or it is
>>>> getting confused
>>>> by you having multiple versions installed. Do you have any other
>>>> versions
>>>> of Python installed, such as in /usr/local/bin, even perhaps a
>>>> symlink there
>>>> pointing to python2.3.
>>>>
>>>> Any chance of upgrading to Apache 2.2 and mod_python 3.2.10?
>>>>
>>>> Graham
>>>>
>>>> On 08/08/2006, at 5:24 PM, yeqiwei wrote:
>>>>
>>>>> My os is Ubuntu 6.06.
>>>>> Apache is 1.3.34
>>>>> mod_python is 2.7.10
>>>>> python 2.4.1a0
>>>>> I install these software using the apt-get install command.
>>>>>
>>>>> apache documentroot is /var/www. And I make a dir test.
>>>>>
>>>>> in http.conf, I write this:
>>>>> <Directory /var/www/test>
>>>>> 		AddHandler python-program  .py
>>>>> 		PythonHandler mptest
>>>>>         PYtohnDebug On
>>>>> </Directory>
>>>>>
>>>>> and in the modules.conf
>>>>> LoadModule  python_module /usr/lib/apache/1.3/mod_python
>>>>>
>>>>> in /var/www/test, I put a mptest.py file the content is
>>>>> from mod_python import apache
>>>>>
>>>>> def handler(req):
>>>>>     req.send_http_header()
>>>>>     req.write("Hello World!")
>>>>>     return apache.OK
>>>>>
>>>>> when I point to http://127.0.0.l/test/mptest.py,  get the 500
>>>>> Internal Server Error
>>>>> And I check the apache error.log,fount that
>>>>>
>>>>> make_obcallback():could not import mod_python.apache
>>>>> make_obcallback():could not call init
>>>>> ........python_handler: make_obcallback returned no obCallBack!
>>>>>
>>>>>
>>>>> I have install python2.3 and python 2.4,but the /usr/bin/python is
>>>>> linked to
>>>>> the /usr/bin/python2.4.
>>>>> And I run mptest.py in shell, the error information is that:
>>>>>
>>>>> Traceback (most recent call last)
>>>>>  File "/var/www/test/mptest.py",line 1, in ?
>>>>>    from mod_python import apache
>>>>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",line
>>>>> 55 in ?
>>>>>    import _apache
>>>>> ImportError: No module named _apache
>>>>>
>>>>>
>>>>> How can I solve this problem?
>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>

From azaroth at liverpool.ac.uk  Wed Aug  9 08:40:33 2006
From: azaroth at liverpool.ac.uk (Rob Sanderson)
Date: Wed Aug  9 07:44:02 2006
Subject: [mod_python] Re: \\[mod_python\\] In ubuntu 6\\.06\\!
	make_obcallback\\(\\): could not import mod_python\\.apache
In-Reply-To: <DA54572C-E4B6-4489-9472-FA5A515A8923@dscpl.com.au>
References: <44d9c4bc.6972c991.38f9.36f2@mx.gmail.com>
	<DA54572C-E4B6-4489-9472-FA5A515A8923@dscpl.com.au>
Message-ID: <1155127233.5777.51.camel@helmsdeep>


Check that the path for whichever user (probably root) starts up the web
server has the right environment set.

For example, if I compile apache, python and mod_python as UserA and
install to a local directory, then start the web server as root (in
order to bind port 80), it uses the wrong python (system, not newly
installed).

If I instead write a script to export PATH, LD_LIBRARY_PATH and
LD_RUN_PATH before calling httpd, then it uses the right installation.
Setting the variables in envvars and envvars-std isn't sufficient (in my
experience)

Rob

On Wed, 2006-08-09 at 21:33 +1000, Graham Dumpleton wrote:
> Please use reply-all so responses go back to the mailing list.
> 
> On 09/08/2006, at 9:19 PM, yeqiwei wrote:
> 
> > I can't understand.
> > In my ubuntu ,I install  python2.4 & python2.4-dev. Does this cause  
> > such error?
> 
> Shouldn't, you need to have both. What I was thinking what that the
> python2.4-dev didn't correspond to the exact same version of Python
> that main python2.4 package was. Ie., python2.4 was Python 2.4.3
> and python2.4-dev was 2.4.1a0. If you updated both at the same time
> though, this should be unlikely though.
> 
> At this point, not sure what is really going on. If you got it working
> with Python 2.3 versions of packages then just go with that.
> 
> Graham
> 
> > #dpkg -L python2.4-dev,
> > I can't find any python file in /usr/bin or else dir in $PATH
> >
> >> Looks like your Python 2.4 installation has been stuffed up, or  
> >> you have
> >> Python 2.4.1a0 installed somewhere else on your box as well and that
> >> is what is being found. One possibility is that Python 2.4 package is
> >> split
> >> into main and dev and you have main from Python 2.4.3 but dev from  
> >> the
> >> older Python 2.4.1a0 and that is stuffing things up.
> >>
> >> Graham
> >>
> >> On 09/08/2006, at 8:36 PM, yeqiwei wrote:
> >>
> >>> Thanks!
> >>> In my os,the /usr/bin/python is linking to /usr/bin/python2.4.
> >>>
> >>> I solved this problem by replacing libapache-mod-python2.4 with
> >>> libapache-mod-python2.3,
> >>> And using python2.3 instead of python2.4
> >>>
> >>> the python2.4 version in ubuntu is python 2.4.3,
> >>> in apache log, I find that "mod_python/2.7.10 Python/2.4.1a0"
> >>> does this matter? 2.4.1a0 or  2.4.3
> >>>
> >>>> These problems are always hard to debug when using mod_python  
> >>>> 2.7.X.
> >>>> Some extra debug was added in mod_python 3.2.10 to make it  
> >>>> easier to
> >>>> work out, but that requires Apache 2.0/2.2 and you can't use
> >>>> Apache 1.3.
> >>>>
> >>>> Anyway, all I can think of is that the user that Apache runs as is
> >>>> finding a
> >>>> different version of the python executable on its PATH or it is
> >>>> getting confused
> >>>> by you having multiple versions installed. Do you have any other
> >>>> versions
> >>>> of Python installed, such as in /usr/local/bin, even perhaps a
> >>>> symlink there
> >>>> pointing to python2.3.
> >>>>
> >>>> Any chance of upgrading to Apache 2.2 and mod_python 3.2.10?
> >>>>
> >>>> Graham
> >>>>
> >>>> On 08/08/2006, at 5:24 PM, yeqiwei wrote:
> >>>>
> >>>>> My os is Ubuntu 6.06.
> >>>>> Apache is 1.3.34
> >>>>> mod_python is 2.7.10
> >>>>> python 2.4.1a0
> >>>>> I install these software using the apt-get install command.
> >>>>>
> >>>>> apache documentroot is /var/www. And I make a dir test.
> >>>>>
> >>>>> in http.conf, I write this:
> >>>>> <Directory /var/www/test>
> >>>>> 		AddHandler python-program  .py
> >>>>> 		PythonHandler mptest
> >>>>>         PYtohnDebug On
> >>>>> </Directory>
> >>>>>
> >>>>> and in the modules.conf
> >>>>> LoadModule  python_module /usr/lib/apache/1.3/mod_python
> >>>>>
> >>>>> in /var/www/test, I put a mptest.py file the content is
> >>>>> from mod_python import apache
> >>>>>
> >>>>> def handler(req):
> >>>>>     req.send_http_header()
> >>>>>     req.write("Hello World!")
> >>>>>     return apache.OK
> >>>>>
> >>>>> when I point to http://127.0.0.l/test/mptest.py,  get the 500
> >>>>> Internal Server Error
> >>>>> And I check the apache error.log,fount that
> >>>>>
> >>>>> make_obcallback():could not import mod_python.apache
> >>>>> make_obcallback():could not call init
> >>>>> ........python_handler: make_obcallback returned no obCallBack!
> >>>>>
> >>>>>
> >>>>> I have install python2.3 and python 2.4,but the /usr/bin/python is
> >>>>> linked to
> >>>>> the /usr/bin/python2.4.
> >>>>> And I run mptest.py in shell, the error information is that:
> >>>>>
> >>>>> Traceback (most recent call last)
> >>>>>  File "/var/www/test/mptest.py",line 1, in ?
> >>>>>    from mod_python import apache
> >>>>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",line
> >>>>> 55 in ?
> >>>>>    import _apache
> >>>>> ImportError: No module named _apache
> >>>>>
> >>>>>
> >>>>> How can I solve this problem?
> >>>>>
> >>>>>
> >>>>>
> >>>>> _______________________________________________
> >>>>> Mod_python mailing list
> >>>>> Mod_python@modpython.org
> >>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>
> >>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Dr Robert Sanderson
Dept of Computer Science, University of Liverpool
Home:     http://www.csc.liv.ac.uk/~azaroth/
Cheshire: http://www.cheshire3.org/

From alex.greif at gmail.com  Wed Aug  9 15:24:41 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Wed Aug  9 15:26:37 2006
Subject: [mod_python] update from 3.2.8 to 3.2.10
Message-ID: <778770d80608091224h6b7e49c7u41a72102a9b66ec6@mail.gmail.com>

Hi
I run apache2.0.55 with mod_python 3.2.8 currently and want to upgrade
to 3.2.10.

is it ok to install 3.2.10 with configure make make install and
override the old files, or do I have to first remove the 3.2.8
installation somehow?

Alex.
From deron.meranda at gmail.com  Wed Aug  9 15:46:51 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Aug  9 15:46:57 2006
Subject: [mod_python] update from 3.2.8 to 3.2.10
In-Reply-To: <778770d80608091224h6b7e49c7u41a72102a9b66ec6@mail.gmail.com>
References: <778770d80608091224h6b7e49c7u41a72102a9b66ec6@mail.gmail.com>
Message-ID: <5c06fa770608091246s66ba4afakca2814b7356a1f03@mail.gmail.com>

On 8/9/06, Alex Greif <alex.greif@gmail.com> wrote:
> I run apache2.0.55 with mod_python 3.2.8 currently and want to upgrade
> to 3.2.10.
>
> is it ok to install 3.2.10 with configure make make install and
> override the old files, or do I have to first remove the 3.2.8
> installation somehow?

That depends on your operating system and how your 3.2.8 version
was installed.

Generally 3.2.10 is backwards compatible with 3.2.8, so you should
be able to just substitute (overwrite) during the install.  However
do be sure to read the release notes and changes carefully (which
you can find on the modpython.org website).  Also follow best
practices for any sort of software update (do backups, etc).

You will probably need to restart your apache webserver regardless
of operating system.

If you are using an RPM-based Linux system, for example, and
your 3.2.8 mod_python was installed from an RPM package, but
now you are compiling 3.2.10 directly from source; you'll probably
want to remove the RPM package first so it no longer tries to
manage the files or any updates/patches to then.  Such as

   rpm --erase mod_python

Of course you're best if you completely shut down apache httpd
while you do this whole process.

-- 
Deron Meranda
From grahamd at dscpl.com.au  Wed Aug  9 18:02:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug  9 18:02:28 2006
Subject: [mod_python] update from 3.2.8 to 3.2.10
Message-ID: <1155160943.11022@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> On 8/9/06, Alex Greif <alex.greif@gmail.com> wrote:
> > I run apache2.0.55 with mod_python 3.2.8 currently and want to upgrade
> > to 3.2.10.
> >
> > is it ok to install 3.2.10 with configure make make install and
> > override the old files, or do I have to first remove the 3.2.8
> > installation somehow?
> 
> ...
> 
> You will probably need to restart your apache webserver regardless
> of operating system.

To be specific, you are best to run:

  apachectl stop
  apachectl start

Do not simply use 'restart' as on some versions of OS on some platforms,
eg. Mac OS X, Apache is unable to properly unload the mod_python.so
from the running Apache parent process and reload it. As a consequence
you end up with newer Python code files being used by child Apache
processes when they are started anew, but they will still have the older
mod_python.so in memory.

Graham
From alex.greif at gmail.com  Thu Aug 10 03:32:32 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Thu Aug 10 03:34:16 2006
Subject: [mod_python] __init__ not called
Message-ID: <778770d80608100032y39cdd3fbr79f45d30b1703045@mail.gmail.com>

Hi,

Inside of the apache installation folder I have a directory "scripts"
where all my handler modules reside.
I placed a __init__.py in the this folder, but my tests showed that
the __init__.py is never processed, and a pyc file is not generated
either. But Why?
in subpackages all the __init__ files are processed as expected.

Is my "scripts" folder not a regular python package, despite it is
added to the sys.path?

ALex.
From NormanTindall at zdisk.net  Thu Aug 10 06:23:03 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Thu Aug 10 04:20:15 2006
Subject: [mod_python] For what session locking is? Do i need it while using
	MySQL?
Message-ID: <125279903375.20060810142303@zdisk.net>

Hello,
   Hmm. i can`t get session model in mod_python
Is it something like a pool of session or a shared object? Is potentialy any thread can
access any session and they locked in a time while thread handles
request?

   I am writing a simple MySQL session module,
in MySQL i can set SESS_ID solumn as UNIQUE and do something like this

try:
         c.execute("insert into sessions ...")
except MySQLdb.IntegrityError:
       #  here i catch duplicate entries

Speed is a factor so.. what would be faster.. locking
with _apache._global_lock(self._req.server, self._sid) OR
MySQLdb.IntegrityError ??

documentation has only one row about locking
"When locking is on, only one session object with a particular session id can be instantiated at a time."

Could anyone give me a simple Entity Diagramm showing relations
between  Session -  Apache threads - Random generators used in
Sessions.py (they are also pooled for the numbers of MPM?)
and also more detailed info of what happens when session lock aquired

Sorry i am a newbie in multi-thread and this mutex crap :)
Would be nice if anyone give me a link or a name of a good books in
this theme.

-- 
Best regards,
 Norman                          mailto:NormanTindall@zdisk.net

From grahamd at dscpl.com.au  Thu Aug 10 05:51:30 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug 10 05:51:17 2006
Subject: [mod_python] __init__ not called
In-Reply-To: <778770d80608100032y39cdd3fbr79f45d30b1703045@mail.gmail.com>
References: <778770d80608100032y39cdd3fbr79f45d30b1703045@mail.gmail.com>
Message-ID: <3920344D-567E-464A-8E58-20EFB983452B@dscpl.com.au>


On 10/08/2006, at 5:32 PM, Alex Greif wrote:

> Hi,
>
> Inside of the apache installation folder I have a directory "scripts"
> where all my handler modules reside.
> I placed a __init__.py in the this folder, but my tests showed that
> the __init__.py is never processed, and a pyc file is not generated
> either. But Why?
> in subpackages all the __init__ files are processed as expected.
>
> Is my "scripts" folder not a regular python package, despite it is
> added to the sys.path?

Which version of mod_python are you using and are you using the
mod_python.publisher handler?

Graham
From grahamd at dscpl.com.au  Thu Aug 10 06:07:06 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug 10 06:07:00 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <125279903375.20060810142303@zdisk.net>
References: <125279903375.20060810142303@zdisk.net>
Message-ID: <8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>

There has been discussion on MySQL implementation of Session  
functionality
on developers list recently. Go to:

   http://mail-archives.apache.org/mod_mbox/httpd-python-dev/ 
200608.mbox/thread

and read the posts about MySQLSession.

This probably will not answer all your questions, but then what you  
are actually
wanting to know isn't particularly clear.

Graham

On 10/08/2006, at 8:23 PM, Norman Tindall wrote:

> Hello,
>    Hmm. i can`t get session model in mod_python
> Is it something like a pool of session or a shared object? Is  
> potentialy any thread can
> access any session and they locked in a time while thread handles
> request?
>
>    I am writing a simple MySQL session module,
> in MySQL i can set SESS_ID solumn as UNIQUE and do something like this
>
> try:
>          c.execute("insert into sessions ...")
> except MySQLdb.IntegrityError:
>        #  here i catch duplicate entries
>
> Speed is a factor so.. what would be faster.. locking
> with _apache._global_lock(self._req.server, self._sid) OR
> MySQLdb.IntegrityError ??
>
> documentation has only one row about locking
> "When locking is on, only one session object with a particular  
> session id can be instantiated at a time."
>
> Could anyone give me a simple Entity Diagramm showing relations
> between  Session -  Apache threads - Random generators used in
> Sessions.py (they are also pooled for the numbers of MPM?)
> and also more detailed info of what happens when session lock aquired
>
> Sorry i am a newbie in multi-thread and this mutex crap :)
> Would be nice if anyone give me a link or a name of a good books in
> this theme.
>
> -- 
> Best regards,
>  Norman                          mailto:NormanTindall@zdisk.net
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Thu Aug 10 06:12:25 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug 10 06:12:14 2006
Subject: [mod_python] __init__ not called
In-Reply-To: <3920344D-567E-464A-8E58-20EFB983452B@dscpl.com.au>
References: <778770d80608100032y39cdd3fbr79f45d30b1703045@mail.gmail.com>
	<3920344D-567E-464A-8E58-20EFB983452B@dscpl.com.au>
Message-ID: <A0F5052B-36EA-46CA-A9D6-3C536EF5BC6C@dscpl.com.au>


On 10/08/2006, at 7:51 PM, Graham Dumpleton wrote:

>
> On 10/08/2006, at 5:32 PM, Alex Greif wrote:
>
>> Hi,
>>
>> Inside of the apache installation folder I have a directory "scripts"
>> where all my handler modules reside.
>> I placed a __init__.py in the this folder, but my tests showed that
>> the __init__.py is never processed, and a pyc file is not generated
>> either. But Why?
>> in subpackages all the __init__ files are processed as expected.
>>
>> Is my "scripts" folder not a regular python package, despite it is
>> added to the sys.path?
>
> Which version of mod_python are you using and are you using the
> mod_python.publisher handler?

Having thought more about what you are asking, first thing is that  
you aren't
getting .pyc files as Apache runs as a user which most likely doesn't  
have
write permission on the directories. Second is that even when using  
Python
outside of mod_python, it will not read an __init__.py file which is  
immediately
in the directory specified in sys.path, it will only do it for  
packages residing
in subdirectories. You might want to review how Python works in that
respect.

Graham
From alex.greif at gmail.com  Thu Aug 10 07:58:43 2006
From: alex.greif at gmail.com (Alex Greif)
Date: Thu Aug 10 07:59:16 2006
Subject: [mod_python] __init__ not called
In-Reply-To: <A0F5052B-36EA-46CA-A9D6-3C536EF5BC6C@dscpl.com.au>
References: <778770d80608100032y39cdd3fbr79f45d30b1703045@mail.gmail.com>
	<3920344D-567E-464A-8E58-20EFB983452B@dscpl.com.au>
	<A0F5052B-36EA-46CA-A9D6-3C536EF5BC6C@dscpl.com.au>
Message-ID: <778770d80608100458p73931d04s7234d509a8609d01@mail.gmail.com>

concerning the .pyc files I was wrong,
I forgot to mention that I run standalone unittests which create those
pyc files.

I am using 3.2.8 with the mod_python.publisher

Thanks for your Answer!

Alex.

On 8/10/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 10/08/2006, at 7:51 PM, Graham Dumpleton wrote:
>
> >
> > On 10/08/2006, at 5:32 PM, Alex Greif wrote:
> >
> >> Hi,
> >>
> >> Inside of the apache installation folder I have a directory "scripts"
> >> where all my handler modules reside.
> >> I placed a __init__.py in the this folder, but my tests showed that
> >> the __init__.py is never processed, and a pyc file is not generated
> >> either. But Why?
> >> in subpackages all the __init__ files are processed as expected.
> >>
> >> Is my "scripts" folder not a regular python package, despite it is
> >> added to the sys.path?
> >
> > Which version of mod_python are you using and are you using the
> > mod_python.publisher handler?
>
> Having thought more about what you are asking, first thing is that
> you aren't
> getting .pyc files as Apache runs as a user which most likely doesn't
> have
> write permission on the directories. Second is that even when using
> Python
> outside of mod_python, it will not read an __init__.py file which is
> immediately
> in the directory specified in sys.path, it will only do it for
> packages residing
> in subdirectories. You might want to review how Python works in that
> respect.
>
> Graham
>
From NormanTindall at zdisk.net  Thu Aug 10 10:56:55 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Thu Aug 10 08:53:59 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
References: <125279903375.20060810142303@zdisk.net>
	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
Message-ID: <57296335375.20060810185655@zdisk.net>

Hello Graham,

Thursday, August 10, 2006, 2:07:06 PM, you wrote:

GD> There has been discussion on MySQL implementation of Session
GD> functionality
GD> on developers list recently. Go to:
GD>    http://mail-archives.apache.org/mod_mbox/httpd-python-dev/
GD> 200608.mbox/thread
GD> and read the posts about MySQLSession.
GD> This probably will not answer all your questions, but then what you
GD> are actually
GD> wanting to know isn't particularly clear.
GD> Graham

   Nah, that module in mail-archives.apache.org won`t suit my needs,
   besides i dont need standard BaseSession behavior ( dict like
   structure and also to create new sess if none).

   Explain me please why session has to be locked?
   What Session lock is?

   The main thing i can`t understand by now.. - is session object
   shared between thread?

-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From jpg at jgassociates.ca  Thu Aug 10 09:01:06 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Aug 10 09:00:47 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using	MySQL?
In-Reply-To: <125279903375.20060810142303@zdisk.net>
References: <125279903375.20060810142303@zdisk.net>
Message-ID: <44DB2E12.4080000@jgassociates.ca>

Norman Tindall wrote:
> Hello,
>    Hmm. i can`t get session model in mod_python
> Is it something like a pool of session or a shared object? Is potentialy any thread can
> access any session and they locked in a time while thread handles
> request?

Basically it's a shared object. Depending on which session class you are
using, the actual object may be a dictionary in memory (MemorySession),
a row in a dbm file (DbmSession) or a file on the file system
(FileSession). A request for a particular session id (which may be in a
thread or a separate process, depending on your apache mpm), must
acquire a lock for that session before it can proceed. This ensures that
only one request can read or write data for that session at time.

>    I am writing a simple MySQL session module,
> in MySQL i can set SESS_ID solumn as UNIQUE and do something like this
> 
> try:
>          c.execute("insert into sessions ...")
> except MySQLdb.IntegrityError:
>        #  here i catch duplicate entries
> 
> Speed is a factor so.. what would be faster.. locking
> with _apache._global_lock(self._req.server, self._sid) OR
> MySQLdb.IntegrityError ??

My guess is acquiring the lock will be faster, but it doesn't really
matter as using MySQLdb.IntegrityError does not do what you want. It
only makes sure that you don't have duplicate session ids in your table.
It does *not* protect your session data from simultaneous access by
different requests.

> documentation has only one row about locking
> "When locking is on, only one session object with a particular session id can be instantiated at a time."

Well, that's pretty much all there is to it. :)

> Could anyone give me a simple Entity Diagramm showing relations
> between  Session -  Apache threads - Random generators used in
> Sessions.py (they are also pooled for the numbers of MPM?)
> and also more detailed info of what happens when session lock aquired

Sorry, no pictures, but I can give you words.

Here is a use case that may help clarify what is going on. Each morning
I visit my favourite news site which can be a little slow at times. I
like to scan the headlines and when I find something interesting I open
that link in a separate browser tab. While that story is loading I
continue perusing the headlines, opening stories as I go. As as result I
might have 5 or 6 pages loading simultaneously.

Now let's suppose the news site whats to keep track of the number of
stories I've read in a simple hit counter, which is stored in a session
for my visit. The code snippet might look like this:

def handler(req):
    session = Session.Session(req, lock=whatever)
    try:
        session['hits'] += 1
    except KeyError:
        session['hits'] = 1

    ... generate the page, do some processing, whatever ...

    session.save()
    return apache.OK

First, consider the possible behaviour if we don't lock the session
(lock=0). The first page (A) is complicated and it takes a while to
reach the session.save() code, while the second page (B) is quite simple
and so returns quickly.

1. Request 'A' arrives and 'hits' is incremented to 1.
   'A' starts to render the page, but it's complicated and takes
   some time.
2. context switch
3. Request 'B' arrives and 'hits' is incremented to 1.
   'B' renders the page and runs session.save().
   The request is complete.
   The 'hits' stored in the session data store is 1.
4. context switch
5. 'A' finishes rendering the page, and runs session.save().
   The hits stored in the session data store is 1.

Oops. I've visited 2 pages, but the hit counter says I've only visited
1. This is called a race condition (whichever request saves first wins)
and is one of the things mutexes are meant to fix.

Now consider the above with lock=1 (the default for Session).

1. Request 'A' arrives and tries to acquire the session lock.
   It succeeds, so processing continues.
   'hits' is incremented to 1.
   'A' starts to render the page, but it's complicated and takes
   some time.
2. context switch
3. Request 'B' arrives and tries to acquire the session lock.
   It fails to get the lock, so it can't proceed. (ie, it blocks).
4. 'A' finishes rendering the page, and runs session.save().
   The request is complete and the session machinery automatically
   unlocks the session.
   The hits stored in the session data store is 1.
5. context switch
6. 'B' now acquires the session lock.
   It renders the page and runs session.save().
   The request is complete and the session is unlocked.
   The 'hits' stored in the session data store is 2.

The saved number of hits is now 2, which is correct. Notice that I
didn't mention anything about mutexes. That's really an implementation
detail hidden from view in Session.py. We choose to use mutexes for
session locking, but there are other possible mechanisms. The point is
to avoid the race condition described above, which is handled for you.

If you want to create your own session subclass, all you need to do is
override the following methods (none of which touch the locking mechanism).

  __init__()
  do_load()
  do_save()
  do_delete()
  do_cleanup()

do_cleanup will just register a callback function which does the actual
cleanup of expired sessions. If you are not careful you can introduce a
race condition there which could delete a valid session. It's not
difficult, but you do need to be careful. See the discussion in
developer's archive that Graham mentioned.

> Sorry i am a newbie in multi-thread and this mutex crap :)
> Would be nice if anyone give me a link or a name of a good books in
> this theme.

Friend, thy name is Google. :)

Jim
From NormanTindall at zdisk.net  Thu Aug 10 11:43:13 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Thu Aug 10 09:40:14 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <44DB2E12.4080000@jgassociates.ca>
References: <125279903375.20060810142303@zdisk.net>
	<44DB2E12.4080000@jgassociates.ca>
Message-ID: <135299113437.20060810194313@zdisk.net>

Hello Jim,
   I got your point.

   But i don`t like BaseSession class in many cases (especially to
   behave as dict )
   rewriting it for my needs would be easy.

   But will _apache._global_lock(self._req.server, self._sid)
   work with the object of my class ( not based on BaseSession ) ?

   i see first arg is server , sec - sid ,
   well this i can provide.


-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From jpg at jgassociates.ca  Thu Aug 10 09:40:45 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Aug 10 09:40:15 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <57296335375.20060810185655@zdisk.net>
References: <125279903375.20060810142303@zdisk.net>	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
	<57296335375.20060810185655@zdisk.net>
Message-ID: <44DB375D.3080008@jgassociates.ca>

Norman Tindall wrote:
> Hello Graham,
> 
> Thursday, August 10, 2006, 2:07:06 PM, you wrote:
> 
> GD> There has been discussion on MySQL implementation of Session
> GD> functionality
> GD> on developers list recently. Go to:
> GD>    http://mail-archives.apache.org/mod_mbox/httpd-python-dev/
> GD> 200608.mbox/thread
> GD> and read the posts about MySQLSession.
> GD> This probably will not answer all your questions, but then what you
> GD> are actually
> GD> wanting to know isn't particularly clear.
> GD> Graham
> 
>    Nah, that module in mail-archives.apache.org won`t suit my needs,
>    besides i dont need standard BaseSession behavior ( dict like
>    structure and also to create new sess if none).
> 
>    Explain me please why session has to be locked?
>    What Session lock is?
> 
>    The main thing i can`t understand by now.. - is session object
>    shared between thread?

Hopefully my previous reply made things a little clearer.

If you want to create your own session handling from scratch but don't
understand session locking and haven't done any programming using
threads or multiple processes, all I can say is....  good luck.

I can just about guarantee you'll get it wrong, just because *everybody*
gets it wrong the first time (and probably many times after that as
well). It seems simple but the problems are subtle.

Problems with race conditions are tricky because they are seemingly
random. You might see something odd once in 1000 requests or maybe once
in 100000, or maybe never. All you'll know is that at some point in time
your data will be corrupted and you'll be tearing your hair out trying
to figure out why.

Race conditions are bad, deadlocks are worse but at least easy to
diagnose, since in the worst case Apache will stop responding.

Jim




From NormanTindall at zdisk.net  Thu Aug 10 14:26:38 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Thu Aug 10 12:23:42 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <44DB375D.3080008@jgassociates.ca>
References: <125279903375.20060810142303@zdisk.net>
	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
	<57296335375.20060810185655@zdisk.net>
	<44DB375D.3080008@jgassociates.ca>
Message-ID: <126308918187.20060810222638@zdisk.net>

Hello Jim,
   So far by now i already wrote raw working code,
   I know that it can invalidate a valid session, i have read this
   about 2 thread A and B.. for now i can stand with this..
   Will make something like transactions in future..

   The question is: Is Session based on this class realy locked?

##############################################
class MySQLSession(object):

    def __init__(self, req, sid=0, secret=None, timeout=0, create_new = 0 ):
        self._lock = 1
        self._locked = 0
        self.cursors = req.cursors
        self._req, self._sid  = req, sid
        if self._sid: 
            self._create_new = 1
        else:
            self._create_new = create_new
        self._new = 0
        self._created = 0
        self._accessed = 0
        self._timeout = 1000000
        self._invalid = 0

        self.data = {}

        if secret: self._secret = secret
        else: self._secret = "secret007"
        self.session_cookie_name = "OxSess"


        if not self._sid:
            cookies = Cookie.get_cookies(req, Class=Cookie.SignedCookie, secret=self._secret)
            if cookies.has_key(self.session_cookie_name):
                self._sid = cookies[ self.session_cookie_name ].value
        
        if self._sid:
            if not _check_sid(self._sid):
                self._req.log_error("mod_python.Session warning: The session id contains invalid characters",
                        apache.APLOG_WARNING)
                raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR

        ############ CLEANUP ##############
        if random.randint(1, CLEANUP_CHANCE) == 1:
            self.cleanup()
        ###################################

        if self._create_new:
            if self._sid:
                self.delete() # del old one
                self.unlock() # unlock old one
                self.create_new_sess()
            else:
                self.create_new_sess()

        else:
            if self._sid:
                # attempt to load ourselves
                self.lock()
                if self.load():
                    self._new = 0
            else:
                # no sid no session
                return None
                
        

    def create_new_sess(self):
        self._sid = _new_sid(self._req)
        self.lock()  # lock new sid
        Cookie.add_cookie(self._req, self.make_cookie())
        self._created = time.time()
        self._accessed = self._created
        self._new = 1

# LOCK

    def lock(self):
        if self._lock:
            _apache._global_lock(self._req.server, self._sid)
            self._locked = 1
            self._req.register_cleanup(unlock_session_cleanup, self)

# UNLOCK

    def unlock(self):
        if self._lock and self._locked:
            _apache._global_unlock(self._req.server, self._sid)
            self._locked = 0


    def load(self):
        # selecting only alive sessions
        self.cursors['c'].execute(
        """select UNIX_TIMESTAMP() as ACCESS_TIME,TIMEOUT,CREATE_DATE,DATA from sessions where SESS_MD = %s and 
        DATE_ADD(ACCESS_TIME, INTERVAL TIMEOUT SECOND) > CURRENT_TIMESTAMP()""", (self._sid,) )
        row = self.cursors['c'].fetchone()

        if row is not None:
            # assigning attributes    
            self._accessed = row[0]
            self._timeout = row[1]
            self._created = row[2]
            self.data = cPickle.loads(row[3])
            return 1
        else:
            return 0

    def save(self):
        if not self._invalid:

            self.cursors['c'].execute("""replace into sessions 
            (SESS_MD,ACCESS_TIME,TIMEOUT,CREATE_DATE,DATA) values (%s,NULL,%s,FROM_UNIXTIME(%s),%s)""",
            (self._sid,self._timeout,self._created, cPickle.dumps(self.data) ))


    def invalidate(self):
        c = self.make_cookie()
        c.expires = 0
        Cookie.add_cookie(self._req, c)
        self.delete()
        self._invalid = 1

    def make_cookie(self):
        c = Cookie.SignedCookie(self.session_cookie_name, self._sid, secret=self._secret)
        c.path = '/'
        return c

    def cleanup(self):
        self.cursors['c'].execute("delete from sessions where DATE_ADD(ACCESS_TIME, INTERVAL TIMEOUT SECOND) < CURRENT_TIMESTAMP()")

    def delete(self):
        self.cursors['c'].execute("delete from sessions where SESS_MD=%s", (self._sid,))
        # erasing attributes !

#######
    def is_new(self):
        return not not self._new

    def id(self):
        return self._sid

    def created(self):
        return self._created

    def last_accessed(self):
        return self._accessed

    def timeout(self):
        return self._timeout

    def set_timeout(self, secs):
        self._timeout = secs

    def __del__(self):
        self.unlock()


def unlock_session_cleanup(sess):
    sess.unlock()





-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From NormanTindall at zdisk.net  Thu Aug 10 15:57:54 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Thu Aug 10 13:54:57 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <44DB375D.3080008@jgassociates.ca>
References: <125279903375.20060810142303@zdisk.net>
	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
	<57296335375.20060810185655@zdisk.net>
	<44DB375D.3080008@jgassociates.ca>
Message-ID: <151314394203.20060810235754@zdisk.net>

Hello Jim,

      I describe you the session locking mechanizm as i see,
      correct me if i am wrong.

      As to lock subroutine in _apache we passing:
      1 - server object
      2 - session_id
      From this i can tell that in fact locked session_ids (session
      data locked indirect)

      +----------------------------------------------+---------------------+
      |  session_id                       |  status  | serv that aq  lock  |
      +----------------------------------------------+---------------------+
      |  5540fda192a40b4acd084decdb6f66ed |  locked  | thread 1 server id
      |  9ec0c48867bff638b7a790c314ed52ff |  locked  | thread 4 server id
      |  .. .. .. .. .. .. .. .. .. .. .. .. .... .... .... .... ..
      +-------------------------------------------------------------------
          ^     |            ^           |                 ^      |
   1)Lock |     |            | 4)Lock    |         7)Lock  |      |
          | 3)release        |           |                 |  9) release
          |     |            |    6)release                |      |
      +-----------+    +--------------------+        +----------------
      | thread 1  |    | thread 2           |        | thread 3 also
      +-----------+    +-----------                   trying to aquire
      | aquired lock   | trying to
        on 5540fd..      aquire lock on                          |
        sess_id          5540fd.. but blocked                    |
                         until thread 1 releases lock            | 8) write
               |                \   5) Write                     |
     2) Write  |     +--------------------------------------+    |
               ----->|  session data (in file or mysql)     | <---
                     +--------------------------------------+

       Thread 1 locking sess_id, making manipulation with session
       data, writing it to file (or DBD or MySQL), release lock,
       then thread 2 locking that sess_id and so on..
       So in fact locked session_id, while session locked indirect,
       because no manipulation can be made before lock aquire and so
       manipulation with same sess_id data is quened across threads.

       And if i right, my module from previous letter will work with
       lock.

       Am i right?

-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From justind at ussonet.net  Thu Aug 10 15:08:38 2006
From: justind at ussonet.net (justind)
Date: Thu Aug 10 15:08:45 2006
Subject: [mod_python] Shared global variables among apache children?
Message-ID: <44DB8436.3020601@ussonet.net>

It feels like I'm missing either one configuration option or this may 
not even be possible.

I have this little bit of code. I expected, that every 4 seconds that x 
would increment by 1 on the returned page. It does. However I think that 
this same code is loaded into each child process (correct me if I'm 
wrong) of apache.
Depending on which child I get, and when they were launched (hitting 
refresh rapidly on Firefox seems to demonstrate this too me) I get a 
different page back. One will show 4 then a refresh will show 3, another 
will show 3, another will show 4 and so on and so forth.

I guess my question is, how can I share the global variable of x among 
all the apache child processes, or is this really my problem)?

Any help would be very appreciated.

Code follows below:

from mod_python import apache
import time
import thread

x = 1

def handler(req):
    global x
    req.content_type = 'text/plain'
    req.write("Hello World! " + str(x))
    return apache.OK

def do_me():
    global x
    while True:
        time.sleep(4)
        x += 1               
               
thread.start_new(do_me,())   
From listspam at flowtheory.net  Thu Aug 10 15:25:36 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Aug 10 15:25:52 2006
Subject: [mod_python] Shared global variables among apache children?
In-Reply-To: <44DB8436.3020601@ussonet.net>
References: <44DB8436.3020601@ussonet.net>
Message-ID: <1155237937.12942.5.camel@localhost.localdomain>

Geez, there are a lot of questions about IPC this week... :-/

Justin --

Let's say you open two terminals, and in each you run a python
interpreter. In the first, you tell it:

>>> x = 3

And in the second you tell it:

>>> x = 3

And then back in the first you tell it:

>>> x += 1

And then in the second you tell it:

>>> print x

What are you going to get? 3 of course -- not 4. Duh! That's because
they're separate processes. Separate memory spaces. Totally independent.
It's the same thing with Apache. Each Apache process runs with its own
unique memory space and its own unique Python instance.

So solve this problem the same way you'd solve it with two separate
Python interpreter processes. Examples:

1) Use files and locks.
2) Use something like SQL that has locking built in.
3) Use some IPC protocol -- XMLRPC or (hehe) D-BUS

But if you want a purely multithreaded web server that has one big
shared memory space, use AOLServer or something like that. Apache was
originally designed to do forking and lots of it. It's only recently
that it has been developing MPM models that have multiple connections
handled by a process with multiple threads, and this doesn't happen the
same way in all MPMs or on all platforms.

-jag

On Thu, 2006-08-10 at 14:08 -0500, justind wrote:
> It feels like I'm missing either one configuration option or this may 
> not even be possible.
> 
> I have this little bit of code. I expected, that every 4 seconds that x 
> would increment by 1 on the returned page. It does. However I think that 
> this same code is loaded into each child process (correct me if I'm 
> wrong) of apache.
> Depending on which child I get, and when they were launched (hitting 
> refresh rapidly on Firefox seems to demonstrate this too me) I get a 
> different page back. One will show 4 then a refresh will show 3, another 
> will show 3, another will show 4 and so on and so forth.
> 
> I guess my question is, how can I share the global variable of x among 
> all the apache child processes, or is this really my problem)?
> 
> Any help would be very appreciated.
> 
> Code follows below:
> 
> from mod_python import apache
> import time
> import thread
> 
> x = 1
> 
> def handler(req):
>     global x
>     req.content_type = 'text/plain'
>     req.write("Hello World! " + str(x))
>     return apache.OK
> 
> def do_me():
>     global x
>     while True:
>         time.sleep(4)
>         x += 1               
>                
> thread.start_new(do_me,())   
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nandogringo at gmail.com  Thu Aug 10 16:03:39 2006
From: nandogringo at gmail.com (Nando Drabik)
Date: Thu Aug 10 16:03:44 2006
Subject: [mod_python] XMLHttpRequest + CGI + mod_python
Message-ID: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>

Hi all,

I would like some help fixing the problem I am stuck in. To make this as
short and simple as possible, it has mostly to do with the
cgi.FieldStorage class. I have:

1) mod_python installed correctly on apache2
2) File test.py (resides under cgi-bin):
3) HTML file that sends out XMLHttpRequest from js

test.py ===============================
#!/usr/bin/env python

import sys, re, cgi
import cgitb; cgitb.enable(display=0,logdir=".")
sys.path.insert(0,'/opt/atlas/lib/python')
from jsonutils import jsonrpc

htmlTemplate = """Content-Type: text/html

<html>
<head><title>%(title)s</title></head>
<body>
%(body)s
</body></html>
"""
fields = cgi.FieldStorage()
req = fields.getvalue("myVar") ##  THIS IS WHERE THE WHOLE THING CRAHSES

print htmlTemplate % { 'title': "Result", 'body': req}
=====================================

When I access /server/cgi-bin/test.py?myVar='content', by directly
typing the URL on firefox, I do receive back "content", no problem.

However, from an html file, if I send and XMLHttpRequest in javascript
like this:
HTML/JS snippet ===========================
var req = new XMLHttpRequest();
rep.open("post", "http://server/cgi-bin/test.py")
req.send("myVar=10"):
=====================================

The script crashes when the request is sent. After debugging, I've
realized that the problem is in the FieldStorage class. Here's the
output from the error log:

error log ===============================
 problem occurred in a Python script. Here is the sequence of function
calls leading up to the error, in the order they occurred.
 /srv/www/cgi-bin/atlas/test.py

   28         fields = cgi.FieldStorage()
   29         req = fields.getvalue("myVar")

req undefined, fields = FieldStorage(None, None, 'myVar=10'),
fields.getvalue = <bound method FieldStorage.getvalue of
FieldStorage(None, None, 'myVar=10')>
 /usr/lib/python2.4/cgi.py in getvalue(self=FieldStorage(None, None,
'myVar=10'), key='myVar', default=None)
  565     def getvalue(self, key, default=None):
  566         """Dictionary style get() method, including 'value' lookup."""
  567         if key in self:
  568             value = self[key]
  569             if type(value) is type([]):
key = 'myVar', self = FieldStorage(None, None, 'myVar=10')
 /usr/lib/python2.4/cgi.py in __contains__(self=FieldStorage(None, None,
'myVar=10'), key='myVar')
  616         """Dictionary style __contains__ method."""
  617         if self.list is None:
  618             raise TypeError, "not indexable"
  619         for item in self.list:
  620             if item.name == key: return True
builtin TypeError = <class exceptions.TypeError>

TypeError: not indexable
      args = ('not indexable',)
====================================================

I am new to python, so I'm a bit confused. If I print the variable
'fields' in test.py, it displays the list (FieldStorage(None, None,
'myVar=10')) just fine, but the methods getvalue, getfirst, etc raise
TYPE exceptions(not indexable). Interestingly, the has_key method works.

So, I have been unable to retrieve the post data from the
XMLHttpRequest. Can anyone help me figure out how to access the post
variables from mod_python residing under a cgi-bin directory?

Thank you very much in advance!
Fernando

	
Fernando Drabik <fernando.drabik@noaa.gov>
OceanEye Web Application Developer
Coral Reef Ecosystem Division
NOAA Fisheries
From lubyliao at gmail.com  Thu Aug 10 16:15:39 2006
From: lubyliao at gmail.com (luby liao)
Date: Thu Aug 10 16:15:42 2006
Subject: [mod_python] sys.path
Message-ID: <edb8963c0608101315j490b6702j1af7e68ed609783b@mail.gmail.com>

After I installed mod_python and tested it, it did not work.  I got a
'Internal Server' error.  The cause was that sys.path was incorrect.  I used
/usr/local/bin/python2.3 to build, but sys.path did not include
/usr/local/lib/python2.3..., instead, it included sub-directories of
/usr/lib/python2.3.  This problem is easily fixed by setting up soft links.
But I am curious as to how the build process determines the sys.path.  Any
enlightenment is appreciated.  cheers, Luby Liao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060810/60ed19b3/attachment.html
From listspam at flowtheory.net  Thu Aug 10 16:16:10 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Aug 10 16:16:21 2006
Subject: [mod_python] XMLHttpRequest + CGI + mod_python
In-Reply-To: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>
References: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>
Message-ID: <1155240971.12942.16.camel@localhost.localdomain>

A major point of confusion on your part:

The mod_python library is not CGI. It's an integrated extension to
Apache. So use of the CGI modules from python-lib is entirely
inappropriate here. CGI pulls things like form data from environment
variables set by the gateway to the CGI script -- mod_python is part of
Apache, so it gets its information from itself.

If you want to use the mod_python facilities to run your script, read
the mod_python documentation about what it is and how to use it. If you
want to use old-fashioned CGI for your script, then this is not the
appropriate forum for your question.

-jag

On Thu, 2006-08-10 at 10:03 -1000, Nando Drabik wrote:
> Hi all,
> 
> I would like some help fixing the problem I am stuck in. To make this as
> short and simple as possible, it has mostly to do with the
> cgi.FieldStorage class. I have:
> 
> 1) mod_python installed correctly on apache2
> 2) File test.py (resides under cgi-bin):
> 3) HTML file that sends out XMLHttpRequest from js
> 
> test.py ===============================
> #!/usr/bin/env python
> 
> import sys, re, cgi
> import cgitb; cgitb.enable(display=0,logdir=".")
> sys.path.insert(0,'/opt/atlas/lib/python')
> from jsonutils import jsonrpc
> 
> htmlTemplate = """Content-Type: text/html
> 
> <html>
> <head><title>%(title)s</title></head>
> <body>
> %(body)s
> </body></html>
> """
> fields = cgi.FieldStorage()
> req = fields.getvalue("myVar") ##  THIS IS WHERE THE WHOLE THING CRAHSES
> 
> print htmlTemplate % { 'title': "Result", 'body': req}
> =====================================
> 
> When I access /server/cgi-bin/test.py?myVar='content', by directly
> typing the URL on firefox, I do receive back "content", no problem.
> 
> However, from an html file, if I send and XMLHttpRequest in javascript
> like this:
> HTML/JS snippet ===========================
> var req = new XMLHttpRequest();
> rep.open("post", "http://server/cgi-bin/test.py")
> req.send("myVar=10"):
> =====================================
> 
> The script crashes when the request is sent. After debugging, I've
> realized that the problem is in the FieldStorage class. Here's the
> output from the error log:
> 
> error log ===============================
>  problem occurred in a Python script. Here is the sequence of function
> calls leading up to the error, in the order they occurred.
>  /srv/www/cgi-bin/atlas/test.py
> 
>    28         fields = cgi.FieldStorage()
>    29         req = fields.getvalue("myVar")
> 
> req undefined, fields = FieldStorage(None, None, 'myVar=10'),
> fields.getvalue = <bound method FieldStorage.getvalue of
> FieldStorage(None, None, 'myVar=10')>
>  /usr/lib/python2.4/cgi.py in getvalue(self=FieldStorage(None, None,
> 'myVar=10'), key='myVar', default=None)
>   565     def getvalue(self, key, default=None):
>   566         """Dictionary style get() method, including 'value' lookup."""
>   567         if key in self:
>   568             value = self[key]
>   569             if type(value) is type([]):
> key = 'myVar', self = FieldStorage(None, None, 'myVar=10')
>  /usr/lib/python2.4/cgi.py in __contains__(self=FieldStorage(None, None,
> 'myVar=10'), key='myVar')
>   616         """Dictionary style __contains__ method."""
>   617         if self.list is None:
>   618             raise TypeError, "not indexable"
>   619         for item in self.list:
>   620             if item.name == key: return True
> builtin TypeError = <class exceptions.TypeError>
> 
> TypeError: not indexable
>       args = ('not indexable',)
> ====================================================
> 
> I am new to python, so I'm a bit confused. If I print the variable
> 'fields' in test.py, it displays the list (FieldStorage(None, None,
> 'myVar=10')) just fine, but the methods getvalue, getfirst, etc raise
> TYPE exceptions(not indexable). Interestingly, the has_key method works.
> 
> So, I have been unable to retrieve the post data from the
> XMLHttpRequest. Can anyone help me figure out how to access the post
> variables from mod_python residing under a cgi-bin directory?
> 
> Thank you very much in advance!
> Fernando
> 
> 	
> Fernando Drabik <fernando.drabik@noaa.gov>
> OceanEye Web Application Developer
> Coral Reef Ecosystem Division
> NOAA Fisheries
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From deron.meranda at gmail.com  Thu Aug 10 16:22:35 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Thu Aug 10 16:22:39 2006
Subject: [mod_python] XMLHttpRequest + CGI + mod_python
In-Reply-To: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>
References: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>
Message-ID: <5c06fa770608101322y3327dda9h5994260bdaf6197@mail.gmail.com>

On 8/10/06, Nando Drabik <nandogringo@gmail.com> wrote:
> I would like some help fixing the problem I am stuck in. To make this as
> short and simple as possible, it has mostly to do with the
> cgi.FieldStorage class. I have:
>
> 1) mod_python installed correctly on apache2
> 2) File test.py (resides under cgi-bin):
> 3) HTML file that sends out XMLHttpRequest from js
>
> test.py ===============================
> #!/usr/bin/env python
>
> import sys, re, cgi
> ...
> fields = cgi.FieldStorage()
> req = fields.getvalue("myVar") ##  THIS IS WHERE THE WHOLE THING CRAHSES

Do you realize that you are NOT using mod_python here?
What you have is a standard CGI script, not a mod_python
handler, and are using the standard Python "cgi" module.

On the surface realize when you type it on the Firefox URL bar,
it results in a GET request with the parameters URL-encoded
into the URL itself.

But your XMLHttpRequest is doing a POST.  However you
are just sending the data "myVar=10".  Normally posted
data should have the content type multipart/form-data.  Or
you need to set the content-type header appropriately.

The CGI FieldStorage can only handle multipart/form-data
and application/x-www-form-urlencoded.  If you're sending
raw JSON formatted text, then you can't expect to use the
FieldStorage classes.  You need to read and decode the
request body directly.
-- 
Deron Meranda
From nandogringo at gmail.com  Thu Aug 10 17:00:19 2006
From: nandogringo at gmail.com (Nando Drabik)
Date: Thu Aug 10 17:00:26 2006
Subject: [mod_python] XMLHttpRequest + CGI + mod_python
In-Reply-To: <1155240971.12942.16.camel@localhost.localdomain>
References: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>
	<1155240971.12942.16.camel@localhost.localdomain>
Message-ID: <96691b0f0608101400p138784e9o9322f118342d78f@mail.gmail.com>

Thank you all for your answers. Things are much, much clearer now. I
appreciate you all taking the time to help me out.
Fernando
From nandogringo at gmail.com  Thu Aug 10 17:00:19 2006
From: nandogringo at gmail.com (Nando Drabik)
Date: Thu Aug 10 17:00:28 2006
Subject: [mod_python] XMLHttpRequest + CGI + mod_python
In-Reply-To: <1155240971.12942.16.camel@localhost.localdomain>
References: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>
	<1155240971.12942.16.camel@localhost.localdomain>
Message-ID: <96691b0f0608101400p138784e9o9322f118342d78f@mail.gmail.com>

Thank you all for your answers. Things are much, much clearer now. I
appreciate you all taking the time to help me out.
Fernando
From deron.meranda at gmail.com  Thu Aug 10 17:37:27 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Thu Aug 10 17:37:31 2006
Subject: [mod_python] XMLHttpRequest + CGI + mod_python
In-Reply-To: <96691b0f0608101355k6899b2adhc564a8de00e6ae99@mail.gmail.com>
References: <96691b0f0608101303gbf7a2f7g801279f7cbb26fc5@mail.gmail.com>
	<5c06fa770608101322y3327dda9h5994260bdaf6197@mail.gmail.com>
	<96691b0f0608101355k6899b2adhc564a8de00e6ae99@mail.gmail.com>
Message-ID: <5c06fa770608101437t7107e28fg255aa991c33f6ebb@mail.gmail.com>

[Re-forwarding back on the list ... this may be useful to others too]

On 8/10/06, Nando Drabik <nandogringo@gmail.com> wrote:
> Many, many thanks ...
>
> So, I can run python scripts from the webserver in 2 different ways,
> one way is to use CGI and the other is to use mod_python right? I was
> confused because I thought the only way to run python code was by
> using mod_python.

There may be more ways too, but either CGI or mod_python are
by far the two most common ways to call python from Apache.

> You hit it on the spot, Deron. My goal is to send a serialized json
> object with XMLHttpRequest in the background of the html page and have
> a python script process it, fetch some data and send it back to the
> html for rendering.

You can't use FieldStorage for JSON; but that certainly doesn't
mean you can't or shouldn't use JSON.  You just need to parse
the JSON encoded data directly, rather than letting the FieldStorage
class attempt to do it.  Easy enough.  And it's always best to put
the complexity on the Python side if necessary and keep the
Javascript side as simple as possible; so JSON is perfect for that.

> If it's not asking too much, I'd like to ask your opinion. From what I
> understand, after reading some more, mod_python is more efficient than
> CGI modules and it seems that I can accomplish my goals with
> mod_python alone. Would there be any advantage of using CGI *and*
> python then? Sorry if this is a newbie question, but hey.. when it
> comes to cgi and python, I am one.

Whether to use CGI or mod_python is really a call you have to make.

CGI is perhaps quite a bit simpler and fool-proof, and so certainly
something that a "beginner" should not regret using.  mod_python
does have a lot more power than CGI (as it is more tightly integrated
into the internal hooks in Apache); but for simple request/response
processing you don't really need that.

Perhaps the biggest advantage of CGI is that it almost always works
out-of-the box.  mod_python is an add-on to Apache and thus has to
be compiled and configured into your Apache runtime.  This could
require no work (such as with most Linux distributions), or could
even be impossible for you to do yourself if you're not an administrator
(say with an ISP hosting facility).

mod_python can have a lot better performance, but the trade off
is complexity, or at least more to learn.  If you don't need performance
now, just continue using CGI until you get things completely working.
You can always convert over to mod_python after you've gained a bit
of experience (and time).

However that being said, I don't think mod_python is that hard
to use; so don't let this scare you off if you're interested and
willing to learn.
-- 
Deron Meranda
From grahamd at dscpl.com.au  Thu Aug 10 18:34:08 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug 10 18:34:17 2006
Subject: [mod_python] Shared global variables among apache children?
Message-ID: <1155249248.19756@dscpl.user.openhosting.com>

Read:

  http://www.dscpl.com.au/articles/modpython-004.html

It gives a bit of background about different MPM models and mod_python.

Also, be aware that the global variable you are using as counter will be
reset back to 1 in a process if that module gets automatically reloaded.
This is because new module gets reloaded on top of the old. You might
also therefore read about some of the issues with module reloading.

  http://www.dscpl.com.au/articles/modpython-003.html

Graham

Joshua Ginsberg wrote ..
> Geez, there are a lot of questions about IPC this week... :-/
> 
> Justin --
> 
> Let's say you open two terminals, and in each you run a python
> interpreter. In the first, you tell it:
> 
> >>> x = 3
> 
> And in the second you tell it:
> 
> >>> x = 3
> 
> And then back in the first you tell it:
> 
> >>> x += 1
> 
> And then in the second you tell it:
> 
> >>> print x
> 
> What are you going to get? 3 of course -- not 4. Duh! That's because
> they're separate processes. Separate memory spaces. Totally independent.
> It's the same thing with Apache. Each Apache process runs with its own
> unique memory space and its own unique Python instance.
> 
> So solve this problem the same way you'd solve it with two separate
> Python interpreter processes. Examples:
> 
> 1) Use files and locks.
> 2) Use something like SQL that has locking built in.
> 3) Use some IPC protocol -- XMLRPC or (hehe) D-BUS
> 
> But if you want a purely multithreaded web server that has one big
> shared memory space, use AOLServer or something like that. Apache was
> originally designed to do forking and lots of it. It's only recently
> that it has been developing MPM models that have multiple connections
> handled by a process with multiple threads, and this doesn't happen the
> same way in all MPMs or on all platforms.
> 
> -jag
> 
> On Thu, 2006-08-10 at 14:08 -0500, justind wrote:
> > It feels like I'm missing either one configuration option or this may
> > not even be possible.
> > 
> > I have this little bit of code. I expected, that every 4 seconds that
> x 
> > would increment by 1 on the returned page. It does. However I think that
> > this same code is loaded into each child process (correct me if I'm 
> > wrong) of apache.
> > Depending on which child I get, and when they were launched (hitting
> > refresh rapidly on Firefox seems to demonstrate this too me) I get a
> > different page back. One will show 4 then a refresh will show 3, another
> > will show 3, another will show 4 and so on and so forth.
> > 
> > I guess my question is, how can I share the global variable of x among
> > all the apache child processes, or is this really my problem)?
> > 
> > Any help would be very appreciated.
> > 
> > Code follows below:
> > 
> > from mod_python import apache
> > import time
> > import thread
> > 
> > x = 1
> > 
> > def handler(req):
> >     global x
> >     req.content_type = 'text/plain'
> >     req.write("Hello World! " + str(x))
> >     return apache.OK
> > 
> > def do_me():
> >     global x
> >     while True:
> >         time.sleep(4)
> >         x += 1               
> >                
> > thread.start_new(do_me,())   
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Thu Aug 10 18:41:38 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug 10 18:41:41 2006
Subject: [mod_python] sys.path
Message-ID: <1155249698.23553@dscpl.user.openhosting.com>

luby liao wrote ..
> After I installed mod_python and tested it, it did not work.  I got a
> 'Internal Server' error.  The cause was that sys.path was incorrect.  I
> used
> /usr/local/bin/python2.3 to build, but sys.path did not include
> /usr/local/lib/python2.3..., instead, it included sub-directories of
> /usr/lib/python2.3.  This problem is easily fixed by setting up soft links.
> But I am curious as to how the build process determines the sys.path. 

By some strange magic that I don't even fully understand.

In short, when Python is initialised by mod_python at run time, Python does
various checks to try and work out where everything is installed and from
that setup sys.path. One of the prime ways it uses to determine this is to
look at which 'python' executable is found in the PATH of the user which
Apache is executed as. If it can't find one, it possibly falls back to some
standard defaults (not sure).

End result is that it appears that the PATH of the user that Apache runs as
does not include '/usr/local/bin' towards the head and thus doesn't find the
version of Python you actually used to build mod_python. Thus, add that
bin directory to the start of PATH for user Apache runs as or in the Apache
startup scripts, whatever may be appropriate for your platform.


Graham
From NormanTindall at zdisk.net  Fri Aug 11 03:23:36 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Fri Aug 11 01:20:36 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <44DB375D.3080008@jgassociates.ca>
References: <125279903375.20060810142303@zdisk.net>
	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
	<57296335375.20060810185655@zdisk.net>
	<44DB375D.3080008@jgassociates.ca>
Message-ID: <5039497640.20060811112336@zdisk.net>

Hello Jim,

      Yesterday i realized what i saw in BaseSession class and i
      think it is terrible.

def lock(self):
     if self._lock:
         _apache._global_lock(self._req.server, self._sid)
         self._locked = 1
         self._req.register_cleanup(unlock_session_cleanup, self)

  Attention to last line of fuction "self._req.register_cleanup(unlock_session_cleanup, self)"
  so the unlock of session happens when last byte of a request sent to
  client and reqest object is to be destroyed.

  And what if i write in handler something like this:

  for x in range(100):
       time.sleep(1)
       req.write(str(x) +" "+ str(sess._locked)  + "<BR>",1)

  Session will be locked for a 100 seconds!
  Well there may be a blocking timeout but i don`n know how
  How parallel thread handle this situation with 100 sec session
  blocking.

  I think it SHOULD be added to documentation that after all
  manipulation with session data is made you MUST unlock it
  explicit.

  For example in my handler i can unlock even before headers is sent
  to client - and it is much more faster than 100 sec.




-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From mauchi at assembleco.com  Fri Aug 11 01:35:30 2006
From: mauchi at assembleco.com (mauchi)
Date: Fri Aug 11 01:35:09 2006
Subject: [mod_python] ldap woes
Message-ID: <1155274530.6319.22.camel@totoro.assembleco.x>

I am able to authenticate users under MoinMoin with python ldap as well
as command line on the same server using the following mechanism:

##

import ldap

ldapServer = '192.168.1.100'
ldapConfig = 'uid=%s,ou=people,dc=assembleco,dc=x'

l = ldap.open(ldapServer)

if password == "":
	password = "wrong"

try:
	l.simple_bind_s(ldapConfig % ('%s'%username), ('%s'%password))
	
except ldap.LDAPError, e:
	print e

#

Under mod_python, it fails with the following error:

{'desc': 'Encoding error'}


any ideas as to why it would act this way just with mod_python? 

Thanks!


-- 
assemble
(o) 510.524.8255 x801
(c) 510.435.9145

text page to 5104359145@vtext.com

From grahamd at dscpl.com.au  Fri Aug 11 02:32:07 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 11 02:32:11 2006
Subject: [mod_python] For what session locking is? Do i need it
	whileusing MySQL?
Message-ID: <1155277927.29648@dscpl.user.openhosting.com>

Norman Tindall wrote ..
>   I think it SHOULD be added to documentation that after all
>   manipulation with session data is made you MUST unlock it
>   explicit.
> 
>   For example in my handler i can unlock even before headers is sent
>   to client - and it is much more faster than 100 sec.

You do not have to unlock the session if you don't want to, so adding
that 'you MUST unlock' the session to the documentation would be
plain wrong. This doesn't mean though that you can't unlock the
session earlier if you want to in situations like your own.

What you really want is to say something to the effect that the session
by default will only be unlocked once all data has been flushed and
able to be sent to the client, but if you want to unlock it earlier you can
so long as you don't access the session object after that point.

Graham
From grahamd at dscpl.com.au  Fri Aug 11 02:35:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 11 02:35:25 2006
Subject: [mod_python] ldap woes
Message-ID: <1155278122.438@dscpl.user.openhosting.com>

mauchi wrote ..
> I am able to authenticate users under MoinMoin with python ldap as well
> as command line on the same server using the following mechanism:
> 
> ...
> 
> Under mod_python, it fails with the following error:
> 
> {'desc': 'Encoding error'}
> 
> any ideas as to why it would act this way just with mod_python? 

Is that under mod_python with your own custom handler, or do you mean
when MoinMoin is used with the mod_python adaptor handler for mod_python
as opposed to MoinMoin through CGI?

Graham
From grahamd at dscpl.com.au  Fri Aug 11 02:56:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 11 02:56:19 2006
Subject: [mod_python] For what session locking is? Do i need it
	whileusing MySQL?
Message-ID: <1155279377.22014@dscpl.user.openhosting.com>

Norman Tindall wrote ..
> Hello Graham,
>     Could you please answer (if you know answer) on
>     http://modpython.org/pipermail/mod_python/2006-August/021787.html
>     http://modpython.org/pipermail/mod_python/2006-August/021788.html
> 
>     There are few error in logic in module i posted there but it does`nt
> matter
>     I realy need to know if sessions based on MySQLSession class
>     locked.
>     Till this time noone answered.
>     
> -- 
> Best regards,
>  Norman                            mailto:NormanTindall@zdisk.net

Please keep discussions on the mailing list and just be patient. I am not
intimate with the details of the session classes and others would be better
able to answer. The person who might be able to best help is possibly still on
a bit of a trip away from home and only has occasional slow modem access. All
of the main developers have also been quite busy of late as well and so we
can't always give detailed answers.

Personally I still believe you would perhaps have been better of using the
work of others on MySQLSession class and not writing your own from scratch.
If you don't like the dict style interface, then simply embed the session class
in your own as a data member and provide an alternate wrapper to your
own liking which hides the dict style access. This way you benefit from the
existing session infrastructure and other existing code done by others for
MySQL and which has already been debugged.

Graham

From mvanaswegen at gmail.com  Fri Aug 11 04:46:53 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Fri Aug 11 04:46:58 2006
Subject: [mod_python] off topic: thread handling
Message-ID: <ffa39deb0608110146n70b437cbta13df846be3f5e36@mail.gmail.com>

Hi All

This is slightly off topic, I have a program that supports my
mod_python app that spawns
x nr of threads to go and fetch data from a remote site using urllib2,
rather than doing it from the mod_python req. If there's a comms
problem I tell the thread to sleep. In the past this worked I have
reworked the code a bit so that a comms problem now raise an
exception. The sleep now happes in the exception code block. It
appears that when a thread has raised an exception and the sleep is
invoked that all the threads get stuck. I'm using standard threads and
I'm not locking my calls just yet.

Marinus
From listspam at flowtheory.net  Fri Aug 11 10:24:23 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Fri Aug 11 10:24:34 2006
Subject: [mod_python] ldap woes
In-Reply-To: <1155274530.6319.22.camel@totoro.assembleco.x>
References: <1155274530.6319.22.camel@totoro.assembleco.x>
Message-ID: <1155306264.9748.2.camel@localhost.localdomain>

It sounds like your error message is encoded in a different character
set than you're returning to the client, and that your error message
can't be re-encoded in the character set you're returning to the client.

-jag

On Thu, 2006-08-10 at 22:35 -0700, mauchi wrote:
> I am able to authenticate users under MoinMoin with python ldap as well
> as command line on the same server using the following mechanism:
> 
> ##
> 
> import ldap
> 
> ldapServer = '192.168.1.100'
> ldapConfig = 'uid=%s,ou=people,dc=assembleco,dc=x'
> 
> l = ldap.open(ldapServer)
> 
> if password == "":
> 	password = "wrong"
> 
> try:
> 	l.simple_bind_s(ldapConfig % ('%s'%username), ('%s'%password))
> 	
> except ldap.LDAPError, e:
> 	print e
> 
> #
> 
> Under mod_python, it fails with the following error:
> 
> {'desc': 'Encoding error'}
> 
> 
> any ideas as to why it would act this way just with mod_python? 
> 
> Thanks!
> 
> 

From deron.meranda at gmail.com  Fri Aug 11 11:48:23 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Aug 11 11:48:27 2006
Subject: [mod_python] sys.path
In-Reply-To: <1155249698.23553@dscpl.user.openhosting.com>
References: <1155249698.23553@dscpl.user.openhosting.com>
Message-ID: <5c06fa770608110848i4cc1a744ya01c93d262d31b57@mail.gmail.com>

On 8/10/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> luby liao wrote ..
> > After I installed mod_python and tested it, it did not work.  I got a
> > 'Internal Server' error.  The cause was that sys.path was incorrect.  I
> > used
> > /usr/local/bin/python2.3 to build, but sys.path did not include
> > /usr/local/lib/python2.3..., instead, it included sub-directories of
> > /usr/lib/python2.3.  This problem is easily fixed by setting up soft links.
> > But I am curious as to how the build process determines the sys.path.
>
> By some strange magic that I don't even fully understand.
>
> In short, when Python is initialised by mod_python at run time, Python does
> various checks to try and work out where everything is installed and from
> that setup sys.path. One of the prime ways it uses to determine this is to
> look at which 'python' executable is found in the PATH of the user which
> Apache is executed as. If it can't find one, it possibly falls back to some
> standard defaults (not sure).
>
> End result is that it appears that the PATH of the user that Apache runs as
> does not include '/usr/local/bin' towards the head and thus doesn't find the
> version of Python you actually used to build mod_python. Thus, add that
> bin directory to the start of PATH for user Apache runs as or in the Apache
> startup scripts, whatever may be appropriate for your platform.

Yes, it is a lot of strange magic!

Rather than alter PATH, you may be able to just set the PYTHONPATH
variable instead.  That way you won't affect any non-python stuff.

If you configured your python with just --prefix, then just set PYTHONPATH
to that directory.  If you however separated the platform-specific files
by using --exec-prefix as well, then PYTHONPATH should consist of
the prefix path, a colon, and the exec-prefix path.

I'm not sure myself why it is picking up the wrong python.  Perhaps
there is something that the mod_python configure process should
be doing???  However all mod_python users should be aware that it
is not possible to use Apache + mod_python with more than one
python version at the same time.  Although you can certainly use
multiple interpreters, they are all the same python.

If you're curious to dive deeper (perhaps Graham?) and have the python
source code, the initial paths for loading modules is determined by the
Py_GetPath() function in the source file Modules/getpath.c.  There's
lots of comments in that file that try to explain how things work.  This
path setting is done very early in the Py_Initialize() function, and
is what is used before the sys module itself is loaded and/or any of
the sys.path or importer hooks can even be changed.
-- 
Deron Meranda
From jpg at jgassociates.ca  Fri Aug 11 12:17:50 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug 11 12:16:46 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <5039497640.20060811112336@zdisk.net>
References: <125279903375.20060810142303@zdisk.net>	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>	<57296335375.20060810185655@zdisk.net>	<44DB375D.3080008@jgassociates.ca>
	<5039497640.20060811112336@zdisk.net>
Message-ID: <44DCADAE.60106@jgassociates.ca>

Norman Tindall wrote:
> Hello Jim,
> 
>       Yesterday i realized what i saw in BaseSession class and i
>       think it is terrible.
> 
> def lock(self):
>      if self._lock:
>          _apache._global_lock(self._req.server, self._sid)
>          self._locked = 1
>          self._req.register_cleanup(unlock_session_cleanup, self)
> 
>   Attention to last line of fuction "self._req.register_cleanup(unlock_session_cleanup, self)"
>   so the unlock of session happens when last byte of a request sent to
>   client and reqest object is to be destroyed.
> 
>   And what if i write in handler something like this:
> 
>   for x in range(100):
>        time.sleep(1)
>        req.write(str(x) +" "+ str(sess._locked)  + "<BR>",1)
> 
>   Session will be locked for a 100 seconds!
>   Well there may be a blocking timeout but i don`n know how
>   How parallel thread handle this situation with 100 sec session
>   blocking.
> 
>   I think it SHOULD be added to documentation that after all
>   manipulation with session data is made you MUST unlock it
>   explicit.
> 
>   For example in my handler i can unlock even before headers is sent
>   to client - and it is much more faster than 100 sec.
> 

On the contrary, BaseSession.lock() does *exactly* the right thing. The
giveaway is the fact that it is registering a *cleanup*. The point of
the cleanup is to make sure the session is unlocked. Without that a
small coding error, such as forgetting to unlock the session, would very
quickly deadlock the server as the mutexes used for locking are a
limited system resource. The cleanup code makes sure the application
writer does  not shoot themselves in the foot, and take down their
server at the same time.

lock() and unlock() are public methods and the app developer is free to
call them anytime they want. Not every use case can be anticipated it
would be wrong to dictate when session unlocking should occur, beyond
ensuring that it *does* occur. It's the app developer's responsibility
to understand their own code, and adjust accordingly. Personally I think
that for the majority of cases using implicit unlocking in the request
cleanup works just fine. Are there times when I would explicitly unlock
a session? Absolutely, but I'm happy that I don't normally need to worry
about it.

Jim



From jpg at jgassociates.ca  Fri Aug 11 12:27:55 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug 11 12:26:51 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <151314394203.20060810235754@zdisk.net>
References: <125279903375.20060810142303@zdisk.net>
	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
	<57296335375.20060810185655@zdisk.net>
	<44DB375D.3080008@jgassociates.ca>
	<151314394203.20060810235754@zdisk.net>
Message-ID: <44DCB00B.6060302@jgassociates.ca>

Norman Tindall wrote:
> Hello Jim,
> 
>       I describe you the session locking mechanizm as i see,
>       correct me if i am wrong.
> 
>       As to lock subroutine in _apache we passing:
>       1 - server object
>       2 - session_id
>       From this i can tell that in fact locked session_ids (session
>       data locked indirect)
> 
>       +----------------------------------------------+---------------------+
>       |  session_id                       |  status  | serv that aq  lock  |
>       +----------------------------------------------+---------------------+
>       |  5540fda192a40b4acd084decdb6f66ed |  locked  | thread 1 server id
>       |  9ec0c48867bff638b7a790c314ed52ff |  locked  | thread 4 server id
>       |  .. .. .. .. .. .. .. .. .. .. .. .. .... .... .... .... ..
>       +-------------------------------------------------------------------
>           ^     |            ^           |                 ^      |
>    1)Lock |     |            | 4)Lock    |         7)Lock  |      |
>           | 3)release        |           |                 |  9) release
>           |     |            |    6)release                |      |
>       +-----------+    +--------------------+        +----------------
>       | thread 1  |    | thread 2           |        | thread 3 also
>       +-----------+    +-----------                   trying to aquire
>       | aquired lock   | trying to
>         on 5540fd..      aquire lock on                          |
>         sess_id          5540fd.. but blocked                    |
>                          until thread 1 releases lock            | 8) write
>                |                \   5) Write                     |
>      2) Write  |     +--------------------------------------+    |
>                ----->|  session data (in file or mysql)     | <---
>                      +--------------------------------------+
> 
>        Thread 1 locking sess_id, making manipulation with session
>        data, writing it to file (or DBD or MySQL), release lock,
>        then thread 2 locking that sess_id and so on..
>        So in fact locked session_id, while session locked indirect,
>        because no manipulation can be made before lock aquire and so
>        manipulation with same sess_id data is quened across threads.
> 
>        And if i right, my module from previous letter will work with
>        lock.
> 
>        Am i right?


Yes, although there may be some additional locking going on for the
actual data store.

For example the current implementation of of DbmSession serializes
access to the dbm file using a global lock so there are actually 2 locks
involved - one for the session (represented by the session id) and one
for the dbm file. The global lock for the file ensures the integrity of
the data store, so even if the user elects to turn off session locking
the dbm file will not be corrupted, even if the data for individual
sessions is not valid. FileSession uses a similar trick.

Jim

From jpg at jgassociates.ca  Fri Aug 11 12:29:59 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug 11 12:28:52 2006
Subject: [mod_python] For what session locking is? Do i need it while
	using MySQL?
In-Reply-To: <126308918187.20060810222638@zdisk.net>
References: <125279903375.20060810142303@zdisk.net>
	<8C5C0EA6-3193-4052-B6E7-3C120ABE2B7C@dscpl.com.au>
	<57296335375.20060810185655@zdisk.net>
	<44DB375D.3080008@jgassociates.ca>
	<126308918187.20060810222638@zdisk.net>
Message-ID: <44DCB087.7040302@jgassociates.ca>

It mostly looks ok, but I really don't have a lot of spare time to audit
a new  session handling implementation. That's one of the disadvantages
of writing things from scratch I guess.

Jim


Norman Tindall wrote:
> Hello Jim,
>    So far by now i already wrote raw working code,
>    I know that it can invalidate a valid session, i have read this
>    about 2 thread A and B.. for now i can stand with this..
>    Will make something like transactions in future..
> 
>    The question is: Is Session based on this class realy locked?
> 
> ##############################################
> class MySQLSession(object):
> 
>     def __init__(self, req, sid=0, secret=None, timeout=0, create_new = 0 ):
>         self._lock = 1
>         self._locked = 0
>         self.cursors = req.cursors
>         self._req, self._sid  = req, sid
>         if self._sid: 
>             self._create_new = 1
>         else:
>             self._create_new = create_new
>         self._new = 0
>         self._created = 0
>         self._accessed = 0
>         self._timeout = 1000000
>         self._invalid = 0
> 
>         self.data = {}
> 
>         if secret: self._secret = secret
>         else: self._secret = "secret007"
>         self.session_cookie_name = "OxSess"
> 
> 
>         if not self._sid:
>             cookies = Cookie.get_cookies(req, Class=Cookie.SignedCookie, secret=self._secret)
>             if cookies.has_key(self.session_cookie_name):
>                 self._sid = cookies[ self.session_cookie_name ].value
>         
>         if self._sid:
>             if not _check_sid(self._sid):
>                 self._req.log_error("mod_python.Session warning: The session id contains invalid characters",
>                         apache.APLOG_WARNING)
>                 raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR
> 
>         ############ CLEANUP ##############
>         if random.randint(1, CLEANUP_CHANCE) == 1:
>             self.cleanup()
>         ###################################
> 
>         if self._create_new:
>             if self._sid:
>                 self.delete() # del old one
>                 self.unlock() # unlock old one
>                 self.create_new_sess()
>             else:
>                 self.create_new_sess()
> 
>         else:
>             if self._sid:
>                 # attempt to load ourselves
>                 self.lock()
>                 if self.load():
>                     self._new = 0
>             else:
>                 # no sid no session
>                 return None
>                 
>         
> 
>     def create_new_sess(self):
>         self._sid = _new_sid(self._req)
>         self.lock()  # lock new sid
>         Cookie.add_cookie(self._req, self.make_cookie())
>         self._created = time.time()
>         self._accessed = self._created
>         self._new = 1
> 
> # LOCK
> 
>     def lock(self):
>         if self._lock:
>             _apache._global_lock(self._req.server, self._sid)
>             self._locked = 1
>             self._req.register_cleanup(unlock_session_cleanup, self)
> 
> # UNLOCK
> 
>     def unlock(self):
>         if self._lock and self._locked:
>             _apache._global_unlock(self._req.server, self._sid)
>             self._locked = 0
> 
> 
>     def load(self):
>         # selecting only alive sessions
>         self.cursors['c'].execute(
>         """select UNIX_TIMESTAMP() as ACCESS_TIME,TIMEOUT,CREATE_DATE,DATA from sessions where SESS_MD = %s and 
>         DATE_ADD(ACCESS_TIME, INTERVAL TIMEOUT SECOND) > CURRENT_TIMESTAMP()""", (self._sid,) )
>         row = self.cursors['c'].fetchone()
> 
>         if row is not None:
>             # assigning attributes    
>             self._accessed = row[0]
>             self._timeout = row[1]
>             self._created = row[2]
>             self.data = cPickle.loads(row[3])
>             return 1
>         else:
>             return 0
> 
>     def save(self):
>         if not self._invalid:
> 
>             self.cursors['c'].execute("""replace into sessions 
>             (SESS_MD,ACCESS_TIME,TIMEOUT,CREATE_DATE,DATA) values (%s,NULL,%s,FROM_UNIXTIME(%s),%s)""",
>             (self._sid,self._timeout,self._created, cPickle.dumps(self.data) ))
> 
> 
>     def invalidate(self):
>         c = self.make_cookie()
>         c.expires = 0
>         Cookie.add_cookie(self._req, c)
>         self.delete()
>         self._invalid = 1
> 
>     def make_cookie(self):
>         c = Cookie.SignedCookie(self.session_cookie_name, self._sid, secret=self._secret)
>         c.path = '/'
>         return c
> 
>     def cleanup(self):
>         self.cursors['c'].execute("delete from sessions where DATE_ADD(ACCESS_TIME, INTERVAL TIMEOUT SECOND) < CURRENT_TIMESTAMP()")
> 
>     def delete(self):
>         self.cursors['c'].execute("delete from sessions where SESS_MD=%s", (self._sid,))
>         # erasing attributes !
> 
> #######
>     def is_new(self):
>         return not not self._new
> 
>     def id(self):
>         return self._sid
> 
>     def created(self):
>         return self._created
> 
>     def last_accessed(self):
>         return self._accessed
> 
>     def timeout(self):
>         return self._timeout
> 
>     def set_timeout(self, secs):
>         self._timeout = secs
> 
>     def __del__(self):
>         self.unlock()
> 
> 
> def unlock_session_cleanup(sess):
>     sess.unlock()
> 
> 
> 
> 
> 

From mauchi at assembleco.com  Fri Aug 11 14:00:46 2006
From: mauchi at assembleco.com (mauchi)
Date: Fri Aug 11 14:00:59 2006
Subject: [mod_python] ldap woes
In-Reply-To: <1155278122.438@dscpl.user.openhosting.com>
References: <1155278122.438@dscpl.user.openhosting.com>
Message-ID: <1155319246.6319.32.camel@totoro.assembleco.x>

Hello,

it's under mod_python in my own handler. I believe MoinMoin is running
under cgi on the server.

Mchi

On Fri, 2006-08-11 at 02:35 -0400, Graham Dumpleton wrote:
> mauchi wrote ..
> > I am able to authenticate users under MoinMoin with python ldap as well
> > as command line on the same server using the following mechanism:
> > 
> > ...
> > 
> > Under mod_python, it fails with the following error:
> > 
> > {'desc': 'Encoding error'}
> > 
> > any ideas as to why it would act this way just with mod_python? 
> 
> Is that under mod_python with your own custom handler, or do you mean
> when MoinMoin is used with the mod_python adaptor handler for mod_python
> as opposed to MoinMoin through CGI?
> 
> Graham
-- 
assemble
(o) 510.524.8255 x801
(c) 510.435.9145

text page to 5104359145@vtext.com

From listspam at flowtheory.net  Fri Aug 11 15:08:41 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Fri Aug 11 15:08:54 2006
Subject: [mod_python] ldap woes
In-Reply-To: <1155274530.6319.22.camel@totoro.assembleco.x>
References: <1155274530.6319.22.camel@totoro.assembleco.x>
Message-ID: <1155323321.26234.7.camel@localhost.localdomain>

Well, and further thoughts....

> import ldap
> 
> ldapServer = '192.168.1.100'
> ldapConfig = 'uid=%s,ou=people,dc=assembleco,dc=x'
> 
> l = ldap.open(ldapServer)
> 
> if password == "":
> 	password = "wrong"

That is just awful -- what if somebody chooses (FSM forbid) the a
password of "wrong"?

> try:
> 	l.simple_bind_s(ldapConfig % ('%s'%username), ('%s'%password))

What's with the extra string formatting? Just use:

l.simple_bind_s(ldapConfig % username, password)

And where are the values of username and password coming from?

> except ldap.LDAPError, e:
> 	print e

In this case "e" is an instance of the Exception class. It's not
necessarily predictable how this will get rendered as a string. And
under mod_python printing to stdout won't do anything -- you're not
running this under CGI, are you?

> #
> 
> Under mod_python, it fails with the following error:
> 
> {'desc': 'Encoding error'}
> 

How about giving a more complete stack trace?

-jag

From justind at ussonet.net  Fri Aug 11 16:45:35 2006
From: justind at ussonet.net (justind)
Date: Fri Aug 11 16:45:41 2006
Subject: [mod_python] ZSI and mod_python
Message-ID: <44DCEC6F.90300@ussonet.net>

I posted on the ZSI board to, thought I better here just to cover all 
the bases.

Has anyone used ZSI with mod_python? If so, there is an example of how 
to use ZSI with mod_python in ZSI's documentation.

This feels  like a "I'm being stupid and forgetting/overlooking 
something obvious" type of problem.

 From the example below, there is a module called MyHandler that has 3 
functions (hello,echo and average). You expose these functions through 
the dispatch.AsHandler() function in the mod_python code.
Suppose that I only wanted to expose the hello and echo functions, but 
not the average function. I want to keep the average function in the 
module because some other function(s) I will make later will use it.

(Section 2.1.3).

The following is a complete example of a simple handler. The soap 
operations are implemented in the MyHandler module:

def hello():
    return "Hello, world"

def echo(*args):
    return args

def average(*args):
    sum = 0
    for i in args: sum += i
    return sum / len(args)

Dispatching from within mod_python is achieved by passing the 
aforementined MyHandler module to |dispatch.AsHandler()|. The following 
code exposes the operations defined in MyHandler via SOAP:

from ZSI import dispatch
from mod_python import apache

import MyHandler
mod = __import__('encodings.utf_8', globals(), locals(), '*')
mod = __import__('encodings.utf_16_be', globals(), locals(), '*')

def handler(req):
    dispatch.AsHandler(modules=(MyHandler,), request=req)
    return apache.OK




From grahamd at dscpl.com.au  Fri Aug 11 17:56:59 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 11 17:56:47 2006
Subject: [mod_python] sys.path
In-Reply-To: <5c06fa770608110848i4cc1a744ya01c93d262d31b57@mail.gmail.com>
References: <1155249698.23553@dscpl.user.openhosting.com>
	<5c06fa770608110848i4cc1a744ya01c93d262d31b57@mail.gmail.com>
Message-ID: <2DA57DE6-C2C3-4E95-99E8-69DCF9532DA7@dscpl.com.au>


On 12/08/2006, at 1:48 AM, Deron Meranda wrote:

> If you're curious to dive deeper (perhaps Graham?) and have the python
> source code, the initial paths for loading modules is determined by  
> the
> Py_GetPath() function in the source file Modules/getpath.c.

Oh, I have looked numerous times and that is why I say it is magic.
I have contemplated whether we should implement a PythonHome
directive, which sets PYTHONHOME environment variable before
calling Py_Initialize(), to try and influence where it looks for those
hard cases, but the incidence of them is at the moment low enough
not to seem to warrant the effort.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060812/e47b0a7f/attachment.html
From mauchi at assembleco.com  Fri Aug 11 19:29:59 2006
From: mauchi at assembleco.com (mauchi)
Date: Fri Aug 11 19:29:42 2006
Subject: [mod_python] ldap woes
In-Reply-To: <1155323321.26234.7.camel@localhost.localdomain>
References: <1155274530.6319.22.camel@totoro.assembleco.x>
	<1155323321.26234.7.camel@localhost.localdomain>
Message-ID: <1155338999.6319.63.camel@totoro.assembleco.x>

Hi Joshua,

> if password == "":
> > 	password = "wrong"
> 

this came out of one of the ldap examples I found with google, yeah probably not so hot

> try:
> > 	l.simple_bind_s(ldapConfig % ('%s'%username), ('%s'%password))
> 
> What's with the extra string formatting? Just use:

The extra formatting I put in there just to make sure I wasn't tripping myself up with non-strings when I was trying to debug it


> And where are the values of username and password coming from?
> 
> > except ldap.LDAPError, e:
> > 	print e

once again, the code I posted was cut some from the handler, some from
the command line test script, thus the print thing. not a complete piece
but enough to paint the picture

on the stack trace, how do I enable that and where does it get logged
with mod_python?

As a test, I wrapped the ldap code as a command line tool, something
like:

validate.py -u test -p 12345

which was called from inside the handler as a system call. Not great,
not terribly smart, but the ldap authentication did work that time

Cheers,

Mchi


On Fri, 2006-08-11 at 15:08 -0400, Joshua Ginsberg wrote:
> Well, and further thoughts....
> 
> > import ldap
> > 
> > ldapServer = '192.168.1.100'
> > ldapConfig = 'uid=%s,ou=people,dc=assembleco,dc=x'
> > 
> > l = ldap.open(ldapServer)
> > 
> > if password == "":
> > 	password = "wrong"
> 
> That is just awful -- what if somebody chooses (FSM forbid) the a
> password of "wrong"?
> 
> > try:
> > 	l.simple_bind_s(ldapConfig % ('%s'%username), ('%s'%password))
> 
> What's with the extra string formatting? Just use:
> 
> l.simple_bind_s(ldapConfig % username, password)

> 
> In this case "e" is an instance of the Exception class. It's not
> necessarily predictable how this will get rendered as a string. And
> under mod_python printing to stdout won't do anything -- you're not
> running this under CGI, are you?
> 
> > #
> > 
> > Under mod_python, it fails with the following error:
> > 
> > {'desc': 'Encoding error'}
> > 
> 
> How about giving a more complete stack trace?
> 
> -jag
> 
-- 
assemble
(o) 510.524.8255 x801
(c) 510.435.9145

text page to 5104359145@vtext.com

From linux at qbox.es  Sat Aug 12 05:22:55 2006
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Sat Aug 12 05:23:25 2006
Subject: [mod_python] Server Side Printing
Message-ID: <1155374576.28902.24.camel@localhost>

Hi all,

I'm considering solutions to print HTML pages served by some Linux OS
with Apache and  Mod_Python.

I am looking a server side approach, that is: I want the server send the
HTML output when required to one of varios network printers installed in
the server.

I have not idea about linux printing , I would need an orientation about
what have to know. 
Are any python module for printing? 
Must I execute some shell command to print inside python? 
Must I generate a PostScript document from the HTML document to print
it ?


More details: 

Web Clients (Windows probably) will print some documents received. But
the documents have diferent formats (size, orientation, duplex option)
so it's desiderable the automatic printer/configuration selection ( that
is: witout a printer selection dialog in IE or Firefox and the default
printer isn't valid for all documents)

As I found in client window Javascript it's not capable of select
printers in client side, I have to investigate with VBscript, and
another possibility would be install an ActiveX control to do that
(restricting possible client options).

So I think the server approach, would be better because it eliminates
printer management in client, and assures the same HTML render
configuration for all printings, independent of client configuration /
browser.


Thank You very much.

From grahamd at dscpl.com.au  Sat Aug 12 06:24:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Aug 12 06:24:31 2006
Subject: [mod_python] Server Side Printing
In-Reply-To: <1155374576.28902.24.camel@localhost>
References: <1155374576.28902.24.camel@localhost>
Message-ID: <D6CFDF57-72B4-4219-8114-DA0BA5288E7D@dscpl.com.au>


On 12/08/2006, at 7:22 PM, S.R.Pard? wrote:

> Hi all,
>
> I'm considering solutions to print HTML pages served by some Linux OS
> with Apache and  Mod_Python.
>
> I am looking a server side approach, that is: I want the server  
> send the
> HTML output when required to one of varios network printers  
> installed in
> the server.
>
> I have not idea about linux printing , I would need an orientation  
> about
> what have to know.
> Are any python module for printing?
> Must I execute some shell command to print inside python?
> Must I generate a PostScript document from the HTML document to print
> it ?
>
>
> More details:
>
> Web Clients (Windows probably) will print some documents received. But
> the documents have diferent formats (size, orientation, duplex option)
> so it's desiderable the automatic printer/configuration selection  
> ( that
> is: witout a printer selection dialog in IE or Firefox and the default
> printer isn't valid for all documents)
>
> As I found in client window Javascript it's not capable of select
> printers in client side, I have to investigate with VBscript, and
> another possibility would be install an ActiveX control to do that
> (restricting possible client options).
>
> So I think the server approach, would be better because it eliminates
> printer management in client, and assures the same HTML render
> configuration for all printings, independent of client configuration /
> browser.

Not sure I really understand what you are trying to do, but if your  
target
is a printer, not sure why you would want to try and render to HTML
and then print that. Your better option would be target PDF as your
display format and then print the PDF file.

Suggest you have a look at the following sites:

   http://www.openreport.org
   http://www.reportlab.org
   http://www.reportlab.com

With these solutions, one option is to describe documents as RML. This
can be filled out with data from some source and then translated into  
PDF
or HTML. Thus HTML becomes a screen representation but PDF what
is used for printing.

If you already have the document generation side worked out, and are
only really after solution for printing, not sure how Apache and  
mod_python
comes in to it all.

Anyway, hope the sites I reference might be of some help.

Graham



From grahamd at dscpl.com.au  Sat Aug 12 07:39:27 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Aug 12 07:39:16 2006
Subject: [mod_python] Server Side Printing
In-Reply-To: <1155381485.28902.52.camel@localhost>
References: <1155374576.28902.24.camel@localhost>
	<D6CFDF57-72B4-4219-8114-DA0BA5288E7D@dscpl.com.au>
	<1155381485.28902.52.camel@localhost>
Message-ID: <6F86781C-5B64-4846-B161-A679CCB410A8@dscpl.com.au>

Please keep discussion on the mailing list. I have forwarded your
response back there.

On 12/08/2006, at 9:18 PM, S.R.Pard? wrote:

> Ok, I will try to explain it better.
>
> I have now in the server a PDF (or HTML) that I can open with eVince.
>
> How I send that document to a network printer from ModPython's
> interpreted code when client user press PRINT button in one page.
>
> So server receive a HTTP request for:
>
> 	http://server/printBill.psp?doc=bill0248.pdf
>
> So I want to code a printBill.psp page that prints like:
> <%
> PrinterName = "HP-4100"		#Thats the name of the printer for bills
> DocumentToPrint = form('doc')   #The Document the user want to print
> SendToPrint (PrinterName, DocumentToPrint)
> %>
>
> Now , how I code SendToPrint.
>
> Do I need to use some library ?
> Can I execute evince from shell indicating some parameter to print  
> on a
> specified printer?
>
>
>
> The principal problem is not be able to print from client if we can't
> select the printer from the server , because user can't select every
> time a printer for every kind of document he prints.
>
>
>
> El s?b, 12-08-2006 a las 20:24 +1000, Graham Dumpleton escribi?:
>> On 12/08/2006, at 7:22 PM, S.R.Pard? wrote:
>>
>>> Hi all,
>>>
>>> I'm considering solutions to print HTML pages served by some  
>>> Linux OS
>>> with Apache and  Mod_Python.
>>>
>>> I am looking a server side approach, that is: I want the server
>>> send the
>>> HTML output when required to one of varios network printers
>>> installed in
>>> the server.
>>>
>>> I have not idea about linux printing , I would need an orientation
>>> about
>>> what have to know.
>>> Are any python module for printing?
>>> Must I execute some shell command to print inside python?
>>> Must I generate a PostScript document from the HTML document to  
>>> print
>>> it ?
>>>
>>>
>>> More details:
>>>
>>> Web Clients (Windows probably) will print some documents  
>>> received. But
>>> the documents have diferent formats (size, orientation, duplex  
>>> option)
>>> so it's desiderable the automatic printer/configuration selection
>>> ( that
>>> is: witout a printer selection dialog in IE or Firefox and the  
>>> default
>>> printer isn't valid for all documents)
>>>
>>> As I found in client window Javascript it's not capable of select
>>> printers in client side, I have to investigate with VBscript, and
>>> another possibility would be install an ActiveX control to do that
>>> (restricting possible client options).
>>>
>>> So I think the server approach, would be better because it  
>>> eliminates
>>> printer management in client, and assures the same HTML render
>>> configuration for all printings, independent of client  
>>> configuration /
>>> browser.
>>
>> Not sure I really understand what you are trying to do, but if your
>> target
>> is a printer, not sure why you would want to try and render to HTML
>> and then print that. Your better option would be target PDF as your
>> display format and then print the PDF file.
>>
>> Suggest you have a look at the following sites:
>>
>>    http://www.openreport.org
>>    http://www.reportlab.org
>>    http://www.reportlab.com
>>
>> With these solutions, one option is to describe documents as RML.  
>> This
>> can be filled out with data from some source and then translated into
>> PDF
>> or HTML. Thus HTML becomes a screen representation but PDF what
>> is used for printing.
>>
>> If you already have the document generation side worked out, and are
>> only really after solution for printing, not sure how Apache and
>> mod_python
>> comes in to it all.
>>
>> Anyway, hope the sites I reference might be of some help.
>>
>> Graham
>>
>>


From grahamd at dscpl.com.au  Sat Aug 12 07:47:41 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Aug 12 07:47:32 2006
Subject: [mod_python] Server Side Printing
In-Reply-To: <6F86781C-5B64-4846-B161-A679CCB410A8@dscpl.com.au>
References: <1155374576.28902.24.camel@localhost>
	<D6CFDF57-72B4-4219-8114-DA0BA5288E7D@dscpl.com.au>
	<1155381485.28902.52.camel@localhost>
	<6F86781C-5B64-4846-B161-A679CCB410A8@dscpl.com.au>
Message-ID: <75E2CF5B-33F5-4E27-A903-389852DF250F@dscpl.com.au>


On 12/08/2006, at 9:39 PM, Graham Dumpleton wrote:

> Please keep discussion on the mailing list. I have forwarded your
> response back there.
>
> On 12/08/2006, at 9:18 PM, S.R.Pard? wrote:
>
>> Ok, I will try to explain it better.
>>
>> I have now in the server a PDF (or HTML) that I can open with eVince.
>>
>> How I send that document to a network printer from ModPython's
>> interpreted code when client user press PRINT button in one page.
>>
>> So server receive a HTTP request for:
>>
>> 	http://server/printBill.psp?doc=bill0248.pdf
>>
>> So I want to code a printBill.psp page that prints like:
>> <%
>> PrinterName = "HP-4100"		#Thats the name of the printer for bills
>> DocumentToPrint = form('doc')   #The Document the user want to print
>> SendToPrint (PrinterName, DocumentToPrint)
>> %>
>>
>> Now , how I code SendToPrint.
>>
>> Do I need to use some library ?
>> Can I execute evince from shell indicating some parameter to print  
>> on a
>> specified printer?

If the PDF were a file stored in the file system, in UNIX the command
to print it would be:

   pdf2ps somefile.pdf | lp -s -d HP-4100

In other words, convert to postscript and use 'lp' to spool to desired
printer. The '-s' option (may depend on platform), just tells lp to not
output status string about job number it was queued at.

This command could be invoked from Python using 'os.system()'.
Alternatively, if PDF content generated by Python code on the fly,
the you might want to use the 'popen2' module to create the command
as a pipe you can send data into in which case the command would
just be:

   pdf2ps | lp -s -d HP-4100

If you can't find pdf2ps, then get a copy of 'ghostscript' package for
your system and install that.

Graham

>> The principal problem is not be able to print from client if we can't
>> select the printer from the server , because user can't select every
>> time a printer for every kind of document he prints.
>>
>>
>>
>> El s?b, 12-08-2006 a las 20:24 +1000, Graham Dumpleton escribi?:
>>> On 12/08/2006, at 7:22 PM, S.R.Pard? wrote:
>>>
>>>> Hi all,
>>>>
>>>> I'm considering solutions to print HTML pages served by some  
>>>> Linux OS
>>>> with Apache and  Mod_Python.
>>>>
>>>> I am looking a server side approach, that is: I want the server
>>>> send the
>>>> HTML output when required to one of varios network printers
>>>> installed in
>>>> the server.
>>>>
>>>> I have not idea about linux printing , I would need an orientation
>>>> about
>>>> what have to know.
>>>> Are any python module for printing?
>>>> Must I execute some shell command to print inside python?
>>>> Must I generate a PostScript document from the HTML document to  
>>>> print
>>>> it ?
>>>>
>>>>
>>>> More details:
>>>>
>>>> Web Clients (Windows probably) will print some documents  
>>>> received. But
>>>> the documents have diferent formats (size, orientation, duplex  
>>>> option)
>>>> so it's desiderable the automatic printer/configuration selection
>>>> ( that
>>>> is: witout a printer selection dialog in IE or Firefox and the  
>>>> default
>>>> printer isn't valid for all documents)
>>>>
>>>> As I found in client window Javascript it's not capable of select
>>>> printers in client side, I have to investigate with VBscript, and
>>>> another possibility would be install an ActiveX control to do that
>>>> (restricting possible client options).
>>>>
>>>> So I think the server approach, would be better because it  
>>>> eliminates
>>>> printer management in client, and assures the same HTML render
>>>> configuration for all printings, independent of client  
>>>> configuration /
>>>> browser.
>>>
>>> Not sure I really understand what you are trying to do, but if your
>>> target
>>> is a printer, not sure why you would want to try and render to HTML
>>> and then print that. Your better option would be target PDF as your
>>> display format and then print the PDF file.
>>>
>>> Suggest you have a look at the following sites:
>>>
>>>    http://www.openreport.org
>>>    http://www.reportlab.org
>>>    http://www.reportlab.com
>>>
>>> With these solutions, one option is to describe documents as RML.  
>>> This
>>> can be filled out with data from some source and then translated  
>>> into
>>> PDF
>>> or HTML. Thus HTML becomes a screen representation but PDF what
>>> is used for printing.
>>>
>>> If you already have the document generation side worked out, and are
>>> only really after solution for printing, not sure how Apache and
>>> mod_python
>>> comes in to it all.
>>>
>>> Anyway, hope the sites I reference might be of some help.
>>>
>>> Graham
>>>
>>>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From linux at qbox.es  Sat Aug 12 08:29:29 2006
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Sat Aug 12 08:29:35 2006
Subject: [mod_python] Server Side Printing
In-Reply-To: <75E2CF5B-33F5-4E27-A903-389852DF250F@dscpl.com.au>
References: <1155374576.28902.24.camel@localhost>
	<D6CFDF57-72B4-4219-8114-DA0BA5288E7D@dscpl.com.au>
	<1155381485.28902.52.camel@localhost>
	<6F86781C-5B64-4846-B161-A679CCB410A8@dscpl.com.au>
	<75E2CF5B-33F5-4E27-A903-389852DF250F@dscpl.com.au>
Message-ID: <1155385769.28902.67.camel@localhost>

Ok, 

Thank You Very Much, Graham.

That looks a way to the solution. 

You understand me, and like you pointed, the idea is to print content on
the fly.

And now you will understand I want to use HTML because at this moment I
would prefer not to get inside on another Page Description language to
generate the documents. 
I know HTML itsn't WYSIWYG but in a Server Side printing environment I
can have it controled, and I can change later to another document format
if needed with more time to develop it. So I will try html2ps first
before pdf2ps.

I will investigate further. 
I wonder if mod_python can get the own page as the onthefly source after
send the request. 
Or if the file can be something like:
"http://server/printableBill.psp?num=0248;"


Thank You again.

	S.R.Parda

El s?b, 12-08-2006 a las 21:47 +1000, Graham Dumpleton escribi?:
> On 12/08/2006, at 9:39 PM, Graham Dumpleton wrote:
> 
> > Please keep discussion on the mailing list. I have forwarded your
> > response back there.
> >
> > On 12/08/2006, at 9:18 PM, S.R.Pard? wrote:
> >
> >> Ok, I will try to explain it better.
> >>
> >> I have now in the server a PDF (or HTML) that I can open with eVince.
> >>
> >> How I send that document to a network printer from ModPython's
> >> interpreted code when client user press PRINT button in one page.
> >>
> >> So server receive a HTTP request for:
> >>
> >> 	http://server/printBill.psp?doc=bill0248.pdf
> >>
> >> So I want to code a printBill.psp page that prints like:
> >> <%
> >> PrinterName = "HP-4100"		#Thats the name of the printer for bills
> >> DocumentToPrint = form('doc')   #The Document the user want to print
> >> SendToPrint (PrinterName, DocumentToPrint)
> >> %>
> >>
> >> Now , how I code SendToPrint.
> >>
> >> Do I need to use some library ?
> >> Can I execute evince from shell indicating some parameter to print  
> >> on a
> >> specified printer?
> 
> If the PDF were a file stored in the file system, in UNIX the command
> to print it would be:
> 
>    pdf2ps somefile.pdf | lp -s -d HP-4100
> 
> In other words, convert to postscript and use 'lp' to spool to desired
> printer. The '-s' option (may depend on platform), just tells lp to not
> output status string about job number it was queued at.
> 
> This command could be invoked from Python using 'os.system()'.
> Alternatively, if PDF content generated by Python code on the fly,
> the you might want to use the 'popen2' module to create the command
> as a pipe you can send data into in which case the command would
> just be:
> 
>    pdf2ps | lp -s -d HP-4100
> 
> If you can't find pdf2ps, then get a copy of 'ghostscript' package for
> your system and install that.
> 
> Graham
> 
> >> The principal problem is not be able to print from client if we can't
> >> select the printer from the server , because user can't select every
> >> time a printer for every kind of document he prints.
> >>
> >>
> >>
> >> El s?b, 12-08-2006 a las 20:24 +1000, Graham Dumpleton escribi?:
> >>> On 12/08/2006, at 7:22 PM, S.R.Pard? wrote:
> >>>
> >>>> Hi all,
> >>>>
> >>>> I'm considering solutions to print HTML pages served by some  
> >>>> Linux OS
> >>>> with Apache and  Mod_Python.
> >>>>
> >>>> I am looking a server side approach, that is: I want the server
> >>>> send the
> >>>> HTML output when required to one of varios network printers
> >>>> installed in
> >>>> the server.
> >>>>
> >>>> I have not idea about linux printing , I would need an orientation
> >>>> about
> >>>> what have to know.
> >>>> Are any python module for printing?
> >>>> Must I execute some shell command to print inside python?
> >>>> Must I generate a PostScript document from the HTML document to  
> >>>> print
> >>>> it ?
> >>>>
> >>>>
> >>>> More details:
> >>>>
> >>>> Web Clients (Windows probably) will print some documents  
> >>>> received. But
> >>>> the documents have diferent formats (size, orientation, duplex  
> >>>> option)
> >>>> so it's desiderable the automatic printer/configuration selection
> >>>> ( that
> >>>> is: witout a printer selection dialog in IE or Firefox and the  
> >>>> default
> >>>> printer isn't valid for all documents)
> >>>>
> >>>> As I found in client window Javascript it's not capable of select
> >>>> printers in client side, I have to investigate with VBscript, and
> >>>> another possibility would be install an ActiveX control to do that
> >>>> (restricting possible client options).
> >>>>
> >>>> So I think the server approach, would be better because it  
> >>>> eliminates
> >>>> printer management in client, and assures the same HTML render
> >>>> configuration for all printings, independent of client  
> >>>> configuration /
> >>>> browser.
> >>>
> >>> Not sure I really understand what you are trying to do, but if your
> >>> target
> >>> is a printer, not sure why you would want to try and render to HTML
> >>> and then print that. Your better option would be target PDF as your
> >>> display format and then print the PDF file.
> >>>
> >>> Suggest you have a look at the following sites:
> >>>
> >>>    http://www.openreport.org
> >>>    http://www.reportlab.org
> >>>    http://www.reportlab.com
> >>>
> >>> With these solutions, one option is to describe documents as RML.  
> >>> This
> >>> can be filled out with data from some source and then translated  
> >>> into
> >>> PDF
> >>> or HTML. Thus HTML becomes a screen representation but PDF what
> >>> is used for printing.
> >>>
> >>> If you already have the document generation side worked out, and are
> >>> only really after solution for printing, not sure how Apache and
> >>> mod_python
> >>> comes in to it all.
> >>>
> >>> Anyway, hope the sites I reference might be of some help.
> >>>
> >>> Graham
> >>>
> >>>
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Sat Aug 12 10:42:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Aug 12 10:42:31 2006
Subject: [mod_python] Server Side Printing
In-Reply-To: <1155385769.28902.67.camel@localhost>
References: <1155374576.28902.24.camel@localhost>	<D6CFDF57-72B4-4219-8114-DA0BA5288E7D@dscpl.com.au>	<1155381485.28902.52.camel@localhost>	<6F86781C-5B64-4846-B161-A679CCB410A8@dscpl.com.au>	<75E2CF5B-33F5-4E27-A903-389852DF250F@dscpl.com.au>
	<1155385769.28902.67.camel@localhost>
Message-ID: <44DDE8DD.2030602@jgassociates.ca>

There is also html2ps. I'm not sure how it handles css links, but take a
look at it as well.

Jim

S.R.Pard? wrote:
> Ok, 
> 
> Thank You Very Much, Graham.
> 
> That looks a way to the solution. 
> 
> You understand me, and like you pointed, the idea is to print content on
> the fly.
> 
> And now you will understand I want to use HTML because at this moment I
> would prefer not to get inside on another Page Description language to
> generate the documents. 
> I know HTML itsn't WYSIWYG but in a Server Side printing environment I
> can have it controled, and I can change later to another document format
> if needed with more time to develop it. So I will try html2ps first
> before pdf2ps.
> 
> I will investigate further. 
> I wonder if mod_python can get the own page as the onthefly source after
> send the request. 
> Or if the file can be something like:
> "http://server/printableBill.psp?num=0248;"
> 
> 
> Thank You again.
> 
> 	S.R.Parda
> 
> El s??b, 12-08-2006 a las 21:47 +1000, Graham Dumpleton escribi??:
>> On 12/08/2006, at 9:39 PM, Graham Dumpleton wrote:
>>
>>> Please keep discussion on the mailing list. I have forwarded your
>>> response back there.
>>>
>>> On 12/08/2006, at 9:18 PM, S.R.Pard?? wrote:
>>>
>>>> Ok, I will try to explain it better.
>>>>
>>>> I have now in the server a PDF (or HTML) that I can open with eVince.
>>>>
>>>> How I send that document to a network printer from ModPython's
>>>> interpreted code when client user press PRINT button in one page.
>>>>
>>>> So server receive a HTTP request for:
>>>>
>>>> 	http://server/printBill.psp?doc=bill0248.pdf
>>>>
>>>> So I want to code a printBill.psp page that prints like:
>>>> <%
>>>> PrinterName = "HP-4100"		#Thats the name of the printer for bills
>>>> DocumentToPrint = form('doc')   #The Document the user want to print
>>>> SendToPrint (PrinterName, DocumentToPrint)
>>>> %>
>>>>
>>>> Now , how I code SendToPrint.
>>>>
>>>> Do I need to use some library ?
>>>> Can I execute evince from shell indicating some parameter to print  
>>>> on a
>>>> specified printer?
>> If the PDF were a file stored in the file system, in UNIX the command
>> to print it would be:
>>
>>    pdf2ps somefile.pdf | lp -s -d HP-4100
>>
>> In other words, convert to postscript and use 'lp' to spool to desired
>> printer. The '-s' option (may depend on platform), just tells lp to not
>> output status string about job number it was queued at.
>>
>> This command could be invoked from Python using 'os.system()'.
>> Alternatively, if PDF content generated by Python code on the fly,
>> the you might want to use the 'popen2' module to create the command
>> as a pipe you can send data into in which case the command would
>> just be:
>>
>>    pdf2ps | lp -s -d HP-4100
>>
>> If you can't find pdf2ps, then get a copy of 'ghostscript' package for
>> your system and install that.
>>
>> Graham
>>
>>>> The principal problem is not be able to print from client if we can't
>>>> select the printer from the server , because user can't select every
>>>> time a printer for every kind of document he prints.
>>>>
>>>>
>>>>
>>>> El s??b, 12-08-2006 a las 20:24 +1000, Graham Dumpleton escribi??:
>>>>> On 12/08/2006, at 7:22 PM, S.R.Pard?? wrote:
>>>>>
>>>>>> Hi all,
>>>>>>
>>>>>> I'm considering solutions to print HTML pages served by some  
>>>>>> Linux OS
>>>>>> with Apache and  Mod_Python.
>>>>>>
>>>>>> I am looking a server side approach, that is: I want the server
>>>>>> send the
>>>>>> HTML output when required to one of varios network printers
>>>>>> installed in
>>>>>> the server.
>>>>>>
>>>>>> I have not idea about linux printing , I would need an orientation
>>>>>> about
>>>>>> what have to know.
>>>>>> Are any python module for printing?
>>>>>> Must I execute some shell command to print inside python?
>>>>>> Must I generate a PostScript document from the HTML document to  
>>>>>> print
>>>>>> it ?
>>>>>>
>>>>>>
>>>>>> More details:
>>>>>>
>>>>>> Web Clients (Windows probably) will print some documents  
>>>>>> received. But
>>>>>> the documents have diferent formats (size, orientation, duplex  
>>>>>> option)
>>>>>> so it's desiderable the automatic printer/configuration selection
>>>>>> ( that
>>>>>> is: witout a printer selection dialog in IE or Firefox and the  
>>>>>> default
>>>>>> printer isn't valid for all documents)
>>>>>>
>>>>>> As I found in client window Javascript it's not capable of select
>>>>>> printers in client side, I have to investigate with VBscript, and
>>>>>> another possibility would be install an ActiveX control to do that
>>>>>> (restricting possible client options).
>>>>>>
>>>>>> So I think the server approach, would be better because it  
>>>>>> eliminates
>>>>>> printer management in client, and assures the same HTML render
>>>>>> configuration for all printings, independent of client  
>>>>>> configuration /
>>>>>> browser.
>>>>> Not sure I really understand what you are trying to do, but if your
>>>>> target
>>>>> is a printer, not sure why you would want to try and render to HTML
>>>>> and then print that. Your better option would be target PDF as your
>>>>> display format and then print the PDF file.
>>>>>
>>>>> Suggest you have a look at the following sites:
>>>>>
>>>>>    http://www.openreport.org
>>>>>    http://www.reportlab.org
>>>>>    http://www.reportlab.com
>>>>>
>>>>> With these solutions, one option is to describe documents as RML.  
>>>>> This
>>>>> can be filled out with data from some source and then translated  
>>>>> into
>>>>> PDF
>>>>> or HTML. Thus HTML becomes a screen representation but PDF what
>>>>> is used for printing.
>>>>>
>>>>> If you already have the document generation side worked out, and are
>>>>> only really after solution for printing, not sure how Apache and
>>>>> mod_python
>>>>> comes in to it all.
>>>>>
>>>>> Anyway, hope the sites I reference might be of some help.
>>>>>
>>>>> Graham
>>>>>
>>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Sat Aug 12 10:51:21 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Aug 12 10:51:19 2006
Subject: [mod_python] ZSI and mod_python
In-Reply-To: <44DCEC6F.90300@ussonet.net>
References: <44DCEC6F.90300@ussonet.net>
Message-ID: <44DDEAE9.7040101@jgassociates.ca>

Without knowing *anything* beyond a quick google to find out what the
heck ZSI is, is it possible that prepending the private functions with
an underscore might do the trick? eg def _average()?

No need to respond to this message on the mod_python list, because I
really have no clue about ZSI. :)

Jim

justind wrote:
> I posted on the ZSI board to, thought I better here just to cover all
> the bases.
> 
> Has anyone used ZSI with mod_python? If so, there is an example of how
> to use ZSI with mod_python in ZSI's documentation.
> 
> This feels  like a "I'm being stupid and forgetting/overlooking
> something obvious" type of problem.
> 
> From the example below, there is a module called MyHandler that has 3
> functions (hello,echo and average). You expose these functions through
> the dispatch.AsHandler() function in the mod_python code.
> Suppose that I only wanted to expose the hello and echo functions, but
> not the average function. I want to keep the average function in the
> module because some other function(s) I will make later will use it.
> 
> (Section 2.1.3).
> 
> The following is a complete example of a simple handler. The soap
> operations are implemented in the MyHandler module:
> 
> def hello():
>    return "Hello, world"
> 
> def echo(*args):
>    return args
> 
> def average(*args):
>    sum = 0
>    for i in args: sum += i
>    return sum / len(args)
> 
> Dispatching from within mod_python is achieved by passing the
> aforementined MyHandler module to |dispatch.AsHandler()|. The following
> code exposes the operations defined in MyHandler via SOAP:
> 
> from ZSI import dispatch
> from mod_python import apache
> 
> import MyHandler
> mod = __import__('encodings.utf_8', globals(), locals(), '*')
> mod = __import__('encodings.utf_16_be', globals(), locals(), '*')
> 
> def handler(req):
>    dispatch.AsHandler(modules=(MyHandler,), request=req)
>    return apache.OK
> 
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From linux at qbox.es  Sat Aug 12 11:04:00 2006
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Sat Aug 12 11:04:06 2006
Subject: [mod_python] Server Side Printing
In-Reply-To: <1155385769.28902.67.camel@localhost>
References: <1155374576.28902.24.camel@localhost>
	<D6CFDF57-72B4-4219-8114-DA0BA5288E7D@dscpl.com.au>
	<1155381485.28902.52.camel@localhost>
	<6F86781C-5B64-4846-B161-A679CCB410A8@dscpl.com.au>
	<75E2CF5B-33F5-4E27-A903-389852DF250F@dscpl.com.au>
	<1155385769.28902.67.camel@localhost>
Message-ID: <1155395041.13984.24.camel@localhost>

Yeah, I was trying html2ps. 

Now I can start wdrking in the document printing system.

wget -O - http://localhost/printDocument.psp?idDoc=0248; | html2ps
--colour | lp -d LaserJet-4100

With that line, We can print a dinamically generated .html document from
the server shell, so now, like Graham exposed,  I will execute it from
Apache-ModPython server in a page that receive the order to print
requested by the user.

We must run then with quiet options in all programs , like lp -s that
said Graham.

I don't know if it will support CSS well, but the documents are required
only for printing, so they can be designed with the limits of html2ps in
mind, and they are not complex documents. And with HTML file I can use
my knowledge of the format to design it fast, and can use a  WYSIWYG
designer. In the future some preprinted forms will be easy to be filled
and adjusted.

I'm happy too, with the centralized printer system, so the clients will
be configured at instant when conencted to server, don't worring by
printers installations. 
I will need to retrieve the server's list of installed printer, so the
application admin will be able to select printers from a list. I think I
will have to look at the devices section in the filesystem.

Thank You to All,







El s?b, 12-08-2006 a las 14:29 +0200, S.R.Pard? escribi?:
> Ok, 
> 
> Thank You Very Much, Graham.
> 
> That looks a way to the solution. 
> 
> You understand me, and like you pointed, the idea is to print content on
> the fly.
> 
> And now you will understand I want to use HTML because at this moment I
> would prefer not to get inside on another Page Description language to
> generate the documents. 
> I know HTML itsn't WYSIWYG but in a Server Side printing environment I
> can have it controled, and I can change later to another document format
> if needed with more time to develop it. So I will try html2ps first
> before pdf2ps.
> 
> I will investigate further. 
> I wonder if mod_python can get the own page as the onthefly source after
> send the request. 
> Or if the file can be something like:
> "http://server/printableBill.psp?num=0248;"
> 
> 
> Thank You again.
> 
> 	S.R.Parda
> 
> El s?b, 12-08-2006 a las 21:47 +1000, Graham Dumpleton escribi?:
> > On 12/08/2006, at 9:39 PM, Graham Dumpleton wrote:
> > 
> > > Please keep discussion on the mailing list. I have forwarded your
> > > response back there.
> > >
> > > On 12/08/2006, at 9:18 PM, S.R.Pard? wrote:
> > >
> > >> Ok, I will try to explain it better.
> > >>
> > >> I have now in the server a PDF (or HTML) that I can open with eVince.
> > >>
> > >> How I send that document to a network printer from ModPython's
> > >> interpreted code when client user press PRINT button in one page.
> > >>
> > >> So server receive a HTTP request for:
> > >>
> > >> 	http://server/printBill.psp?doc=bill0248.pdf
> > >>
> > >> So I want to code a printBill.psp page that prints like:
> > >> <%
> > >> PrinterName = "HP-4100"		#Thats the name of the printer for bills
> > >> DocumentToPrint = form('doc')   #The Document the user want to print
> > >> SendToPrint (PrinterName, DocumentToPrint)
> > >> %>
> > >>
> > >> Now , how I code SendToPrint.
> > >>
> > >> Do I need to use some library ?
> > >> Can I execute evince from shell indicating some parameter to print  
> > >> on a
> > >> specified printer?
> > 
> > If the PDF were a file stored in the file system, in UNIX the command
> > to print it would be:
> > 
> >    pdf2ps somefile.pdf | lp -s -d HP-4100
> > 
> > In other words, convert to postscript and use 'lp' to spool to desired
> > printer. The '-s' option (may depend on platform), just tells lp to not
> > output status string about job number it was queued at.
> > 
> > This command could be invoked from Python using 'os.system()'.
> > Alternatively, if PDF content generated by Python code on the fly,
> > the you might want to use the 'popen2' module to create the command
> > as a pipe you can send data into in which case the command would
> > just be:
> > 
> >    pdf2ps | lp -s -d HP-4100
> > 
> > If you can't find pdf2ps, then get a copy of 'ghostscript' package for
> > your system and install that.
> > 
> > Graham
> > 
> > >> The principal problem is not be able to print from client if we can't
> > >> select the printer from the server , because user can't select every
> > >> time a printer for every kind of document he prints.
> > >>
> > >>
> > >>
> > >> El s?b, 12-08-2006 a las 20:24 +1000, Graham Dumpleton escribi?:
> > >>> On 12/08/2006, at 7:22 PM, S.R.Pard? wrote:
> > >>>
> > >>>> Hi all,
> > >>>>
> > >>>> I'm considering solutions to print HTML pages served by some  
> > >>>> Linux OS
> > >>>> with Apache and  Mod_Python.
> > >>>>
> > >>>> I am looking a server side approach, that is: I want the server
> > >>>> send the
> > >>>> HTML output when required to one of varios network printers
> > >>>> installed in
> > >>>> the server.
> > >>>>
> > >>>> I have not idea about linux printing , I would need an orientation
> > >>>> about
> > >>>> what have to know.
> > >>>> Are any python module for printing?
> > >>>> Must I execute some shell command to print inside python?
> > >>>> Must I generate a PostScript document from the HTML document to  
> > >>>> print
> > >>>> it ?
> > >>>>
> > >>>>
> > >>>> More details:
> > >>>>
> > >>>> Web Clients (Windows probably) will print some documents  
> > >>>> received. But
> > >>>> the documents have diferent formats (size, orientation, duplex  
> > >>>> option)
> > >>>> so it's desiderable the automatic printer/configuration selection
> > >>>> ( that
> > >>>> is: witout a printer selection dialog in IE or Firefox and the  
> > >>>> default
> > >>>> printer isn't valid for all documents)
> > >>>>
> > >>>> As I found in client window Javascript it's not capable of select
> > >>>> printers in client side, I have to investigate with VBscript, and
> > >>>> another possibility would be install an ActiveX control to do that
> > >>>> (restricting possible client options).
> > >>>>
> > >>>> So I think the server approach, would be better because it  
> > >>>> eliminates
> > >>>> printer management in client, and assures the same HTML render
> > >>>> configuration for all printings, independent of client  
> > >>>> configuration /
> > >>>> browser.
> > >>>
> > >>> Not sure I really understand what you are trying to do, but if your
> > >>> target
> > >>> is a printer, not sure why you would want to try and render to HTML
> > >>> and then print that. Your better option would be target PDF as your
> > >>> display format and then print the PDF file.
> > >>>
> > >>> Suggest you have a look at the following sites:
> > >>>
> > >>>    http://www.openreport.org
> > >>>    http://www.reportlab.org
> > >>>    http://www.reportlab.com
> > >>>
> > >>> With these solutions, one option is to describe documents as RML.  
> > >>> This
> > >>> can be filled out with data from some source and then translated  
> > >>> into
> > >>> PDF
> > >>> or HTML. Thus HTML becomes a screen representation but PDF what
> > >>> is used for printing.
> > >>>
> > >>> If you already have the document generation side worked out, and are
> > >>> only really after solution for printing, not sure how Apache and
> > >>> mod_python
> > >>> comes in to it all.
> > >>>
> > >>> Anyway, hope the sites I reference might be of some help.
> > >>>
> > >>> Graham
> > >>>
> > >>>
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Sat Aug 12 17:45:45 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Aug 12 17:45:31 2006
Subject: [mod_python] Server Side Printing
In-Reply-To: <1155385769.28902.67.camel@localhost>
References: <1155374576.28902.24.camel@localhost>
	<D6CFDF57-72B4-4219-8114-DA0BA5288E7D@dscpl.com.au>
	<1155381485.28902.52.camel@localhost>
	<6F86781C-5B64-4846-B161-A679CCB410A8@dscpl.com.au>
	<75E2CF5B-33F5-4E27-A903-389852DF250F@dscpl.com.au>
	<1155385769.28902.67.camel@localhost>
Message-ID: <7AF1632A-AF37-4BDA-8348-588CAAB0139C@dscpl.com.au>


On 12/08/2006, at 10:29 PM, S.R.Pard? wrote:

> Ok,
>
> Thank You Very Much, Graham.
>
> That looks a way to the solution.
>
> You understand me, and like you pointed, the idea is to print  
> content on
> the fly.
>
> And now you will understand I want to use HTML because at this  
> moment I
> would prefer not to get inside on another Page Description language to
> generate the documents.
> I know HTML itsn't WYSIWYG but in a Server Side printing environment I
> can have it controled, and I can change later to another document  
> format
> if needed with more time to develop it. So I will try html2ps first
> before pdf2ps.
>
> I will investigate further.
> I wonder if mod_python can get the own page as the onthefly source  
> after
> send the request.
> Or if the file can be something like:
> "http://server/printableBill.psp?num=0248;"

It is a more advanced area of mod_python but what you could do is  
install
an output filter to capture the HTML which is actually being sent  
back to
the client.

What you would do is in the request handler, you would set some special
header in the output, for example 'X-Printer'. The output filter when  
called
the first time could look for this header. If it doesn't see it, it  
would simply
call filter.pass_on() and thus it would ignore the response content.  
If the
header is there, it could take the value of the header as the printer  
name,
save that away and then accumulate the content of the response until  
it is
complete. When it has the whole content, it could send it through  
html2ps
and then also write it back to the client.

Thus have a look at output filters. Ensure you search back through the
mailing list archive as they have been good boiler plate examples posted
before for how to use it.

Graham

> Thank You again.
>
> 	S.R.Parda
>
> El s?b, 12-08-2006 a las 21:47 +1000, Graham Dumpleton escribi?:
>> On 12/08/2006, at 9:39 PM, Graham Dumpleton wrote:
>>
>>> Please keep discussion on the mailing list. I have forwarded your
>>> response back there.
>>>
>>> On 12/08/2006, at 9:18 PM, S.R.Pard? wrote:
>>>
>>>> Ok, I will try to explain it better.
>>>>
>>>> I have now in the server a PDF (or HTML) that I can open with  
>>>> eVince.
>>>>
>>>> How I send that document to a network printer from ModPython's
>>>> interpreted code when client user press PRINT button in one page.
>>>>
>>>> So server receive a HTTP request for:
>>>>
>>>> 	http://server/printBill.psp?doc=bill0248.pdf
>>>>
>>>> So I want to code a printBill.psp page that prints like:
>>>> <%
>>>> PrinterName = "HP-4100"		#Thats the name of the printer for bills
>>>> DocumentToPrint = form('doc')   #The Document the user want to  
>>>> print
>>>> SendToPrint (PrinterName, DocumentToPrint)
>>>> %>
>>>>
>>>> Now , how I code SendToPrint.
>>>>
>>>> Do I need to use some library ?
>>>> Can I execute evince from shell indicating some parameter to print
>>>> on a
>>>> specified printer?
>>
>> If the PDF were a file stored in the file system, in UNIX the command
>> to print it would be:
>>
>>    pdf2ps somefile.pdf | lp -s -d HP-4100
>>
>> In other words, convert to postscript and use 'lp' to spool to  
>> desired
>> printer. The '-s' option (may depend on platform), just tells lp  
>> to not
>> output status string about job number it was queued at.
>>
>> This command could be invoked from Python using 'os.system()'.
>> Alternatively, if PDF content generated by Python code on the fly,
>> the you might want to use the 'popen2' module to create the command
>> as a pipe you can send data into in which case the command would
>> just be:
>>
>>    pdf2ps | lp -s -d HP-4100
>>
>> If you can't find pdf2ps, then get a copy of 'ghostscript' package  
>> for
>> your system and install that.
>>
>> Graham
>>
>>>> The principal problem is not be able to print from client if we  
>>>> can't
>>>> select the printer from the server , because user can't select  
>>>> every
>>>> time a printer for every kind of document he prints.
>>>>
>>>>
>>>>
>>>> El s?b, 12-08-2006 a las 20:24 +1000, Graham Dumpleton escribi?:
>>>>> On 12/08/2006, at 7:22 PM, S.R.Pard? wrote:
>>>>>
>>>>>> Hi all,
>>>>>>
>>>>>> I'm considering solutions to print HTML pages served by some
>>>>>> Linux OS
>>>>>> with Apache and  Mod_Python.
>>>>>>
>>>>>> I am looking a server side approach, that is: I want the server
>>>>>> send the
>>>>>> HTML output when required to one of varios network printers
>>>>>> installed in
>>>>>> the server.
>>>>>>
>>>>>> I have not idea about linux printing , I would need an  
>>>>>> orientation
>>>>>> about
>>>>>> what have to know.
>>>>>> Are any python module for printing?
>>>>>> Must I execute some shell command to print inside python?
>>>>>> Must I generate a PostScript document from the HTML document to
>>>>>> print
>>>>>> it ?
>>>>>>
>>>>>>
>>>>>> More details:
>>>>>>
>>>>>> Web Clients (Windows probably) will print some documents
>>>>>> received. But
>>>>>> the documents have diferent formats (size, orientation, duplex
>>>>>> option)
>>>>>> so it's desiderable the automatic printer/configuration selection
>>>>>> ( that
>>>>>> is: witout a printer selection dialog in IE or Firefox and the
>>>>>> default
>>>>>> printer isn't valid for all documents)
>>>>>>
>>>>>> As I found in client window Javascript it's not capable of select
>>>>>> printers in client side, I have to investigate with VBscript, and
>>>>>> another possibility would be install an ActiveX control to do  
>>>>>> that
>>>>>> (restricting possible client options).
>>>>>>
>>>>>> So I think the server approach, would be better because it
>>>>>> eliminates
>>>>>> printer management in client, and assures the same HTML render
>>>>>> configuration for all printings, independent of client
>>>>>> configuration /
>>>>>> browser.
>>>>>
>>>>> Not sure I really understand what you are trying to do, but if  
>>>>> your
>>>>> target
>>>>> is a printer, not sure why you would want to try and render to  
>>>>> HTML
>>>>> and then print that. Your better option would be target PDF as  
>>>>> your
>>>>> display format and then print the PDF file.
>>>>>
>>>>> Suggest you have a look at the following sites:
>>>>>
>>>>>    http://www.openreport.org
>>>>>    http://www.reportlab.org
>>>>>    http://www.reportlab.com
>>>>>
>>>>> With these solutions, one option is to describe documents as RML.
>>>>> This
>>>>> can be filled out with data from some source and then translated
>>>>> into
>>>>> PDF
>>>>> or HTML. Thus HTML becomes a screen representation but PDF what
>>>>> is used for printing.
>>>>>
>>>>> If you already have the document generation side worked out,  
>>>>> and are
>>>>> only really after solution for printing, not sure how Apache and
>>>>> mod_python
>>>>> comes in to it all.
>>>>>
>>>>> Anyway, hope the sites I reference might be of some help.
>>>>>
>>>>> Graham
>>>>>
>>>>>
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>


From zyloch at gmail.com  Sun Aug 13 06:45:23 2006
From: zyloch at gmail.com (Ted)
Date: Sun Aug 13 06:45:28 2006
Subject: [mod_python] mod_python with Apache2.2?
Message-ID: <44DF02C3.10105@gmail.com>

Hi everyone,

I've been trying to install mod_python with Apache 2.2 all night with 
little success (actually, Apache 2.2.3 to be precise). First of all, I'm 
wondering if it is even possible. I downloaded the Windows version of 
v3.2.10 (mod_python-3.2.10.win32-py2.4-apache2.2.exe), and I also have 
Python 2.4 installed (the latest since I just downloaded it onto my 
laptop last night).

Judging by the name, it should work. I ran the binary and installed it. 
The files all seem to have appeared in my mod_python folder somewhere 
inside c:\Python24 and mod_python.so is in the modules folder inside my 
Apache2.2 folder as it should be. I've added the statement: "LoadModule 
python_module modules/mod_python.so" but upon doing so, Apache will not 
restart (nor start again).

Once in awhile, the error log will show an error OS 995 having to do 
with AcceptEx or something (I don't have the exact error anymore), and 
when I Googled it, suggestions seemed to be to try and add extra 
directives including Win32DisableAcceptEx. I did this and it didn't seem 
to do anything, except now there aren't any error messages at all, 
whether I take it out or put it in. If I comment out the mod_python 
module, everything loads fine.

Now, I had also rolled back to Apache 2.0.x as well and downloaded 
mod_python 3.2.8 to try it out and the same situation occurred.

I probably should also point out that I have installed other modules 
with success, such as PHP so I don't know why it won't work with Python.

Any help would be great, and gently if possible. I'm no good with 
servers or the like. Thanks in advance for any help you guys can give :-)

Ted
<http://www.uniontransit.com/apache/httpd/modpython/win/3.2.10/mod_python-3.2.10.win32-py2.4-apache2.2.exe> 

From grahamd at dscpl.com.au  Sun Aug 13 08:14:08 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Aug 13 08:14:01 2006
Subject: [mod_python] mod_python with Apache2.2?
In-Reply-To: <44DF02C3.10105@gmail.com>
References: <44DF02C3.10105@gmail.com>
Message-ID: <3B9D1D90-B348-4302-81AA-1BE600CCE173@dscpl.com.au>

Start by reading this prior post about Win32 setup issues in case  
there is
something in there which is relevant and helps.

   http://www.modpython.org/pipermail/mod_python/2006-June/021392.html

Graham

On 13/08/2006, at 8:45 PM, Ted wrote:

> Hi everyone,
>
> I've been trying to install mod_python with Apache 2.2 all night  
> with little success (actually, Apache 2.2.3 to be precise). First  
> of all, I'm wondering if it is even possible. I downloaded the  
> Windows version of v3.2.10 (mod_python-3.2.10.win32-py2.4- 
> apache2.2.exe), and I also have Python 2.4 installed (the latest  
> since I just downloaded it onto my laptop last night).
>
> Judging by the name, it should work. I ran the binary and installed  
> it. The files all seem to have appeared in my mod_python folder  
> somewhere inside c:\Python24 and mod_python.so is in the modules  
> folder inside my Apache2.2 folder as it should be. I've added the  
> statement: "LoadModule python_module modules/mod_python.so" but  
> upon doing so, Apache will not restart (nor start again).
>
> Once in awhile, the error log will show an error OS 995 having to  
> do with AcceptEx or something (I don't have the exact error  
> anymore), and when I Googled it, suggestions seemed to be to try  
> and add extra directives including Win32DisableAcceptEx. I did this  
> and it didn't seem to do anything, except now there aren't any  
> error messages at all, whether I take it out or put it in. If I  
> comment out the mod_python module, everything loads fine.
>
> Now, I had also rolled back to Apache 2.0.x as well and downloaded  
> mod_python 3.2.8 to try it out and the same situation occurred.
>
> I probably should also point out that I have installed other  
> modules with success, such as PHP so I don't know why it won't work  
> with Python.
>
> Any help would be great, and gently if possible. I'm no good with  
> servers or the like. Thanks in advance for any help you guys can  
> give :-)
>
> Ted
> <http://www.uniontransit.com/apache/httpd/modpython/win/3.2.10/ 
> mod_python-3.2.10.win32-py2.4-apache2.2.exe>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Sun Aug 13 08:24:58 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Aug 13 08:24:55 2006
Subject: [mod_python] mod_python with Apache2.2?
In-Reply-To: <44DF18E7.6020807@gmail.com>
References: <44DF02C3.10105@gmail.com>
	<3B9D1D90-B348-4302-81AA-1BE600CCE173@dscpl.com.au>
	<44DF18E7.6020807@gmail.com>
Message-ID: <6CDCC7B2-25A8-40A5-8B4E-25BFFD6C8ADB@dscpl.com.au>


On 13/08/2006, at 10:19 PM, Ted wrote:

> Aha! Thank you very much! I hadn't chanced upon that particular  
> page, but it sure did wonders. In particular, I was missing  
> msvcp71.dll. Any reason why it's not packaged along with the rest  
> (purely out of curiousity)?
>
> In any case, thanks again :-) Now I can finally get something done.

I can't answer the question about msvc71.dll, but maybe others can. I  
have sent
your mail back onto the mailing list. It is always a good idea to  
keep your
responses on the mailing list as then other people know your problem has
been solved and they might also be able to assist with any followup  
questions
you have. I actually know very little about Win32 platform so am  
definitely not
the person to be asking.

Graham

> Graham Dumpleton wrote:
>> Start by reading this prior post about Win32 setup issues in case  
>> there is
>> something in there which is relevant and helps.
>>
>>   http://www.modpython.org/pipermail/mod_python/2006-June/021392.html
>>
>> Graham
>>
>> On 13/08/2006, at 8:45 PM, Ted wrote:
>>
>>> Hi everyone,
>>>
>>> I've been trying to install mod_python with Apache 2.2 all night  
>>> with little success (actually, Apache 2.2.3 to be precise). First  
>>> of all, I'm wondering if it is even possible. I downloaded the  
>>> Windows version of v3.2.10 (mod_python-3.2.10.win32-py2.4- 
>>> apache2.2.exe), and I also have Python 2.4 installed (the latest  
>>> since I just downloaded it onto my laptop last night).
>>>
>>> Judging by the name, it should work. I ran the binary and  
>>> installed it. The files all seem to have appeared in my  
>>> mod_python folder somewhere inside c:\Python24 and mod_python.so  
>>> is in the modules folder inside my Apache2.2 folder as it should  
>>> be. I've added the statement: "LoadModule python_module modules/ 
>>> mod_python.so" but upon doing so, Apache will not restart (nor  
>>> start again).
>>>
>>> Once in awhile, the error log will show an error OS 995 having to  
>>> do with AcceptEx or something (I don't have the exact error  
>>> anymore), and when I Googled it, suggestions seemed to be to try  
>>> and add extra directives including Win32DisableAcceptEx. I did  
>>> this and it didn't seem to do anything, except now there aren't  
>>> any error messages at all, whether I take it out or put it in. If  
>>> I comment out the mod_python module, everything loads fine.
>>>
>>> Now, I had also rolled back to Apache 2.0.x as well and  
>>> downloaded mod_python 3.2.8 to try it out and the same situation  
>>> occurred.
>>>
>>> I probably should also point out that I have installed other  
>>> modules with success, such as PHP so I don't know why it won't  
>>> work with Python.
>>>
>>> Any help would be great, and gently if possible. I'm no good with  
>>> servers or the like. Thanks in advance for any help you guys can  
>>> give :-)
>>>
>>> Ted
>>> <http://www.uniontransit.com/apache/httpd/modpython/win/3.2.10/ 
>>> mod_python-3.2.10.win32-py2.4-apache2.2.exe>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>

From mike at utgard.net  Sun Aug 13 13:50:27 2006
From: mike at utgard.net (Michael Spang)
Date: Sun Aug 13 13:49:58 2006
Subject: [mod_python] mod_python sessions, locking, and PSP
Message-ID: <44DF6663.5090904@utgard.net>

I recently ran into deadlocks using sessions in both my mod_python
handler and in psp. I've read through the thread at
http://www.modpython.org/pipermail/mod_python/2005-May/018035.html and
understand that this occurs because both my handler and PSP create their
own session instance and attempt to lock the session.

My question is: why doesn't the mod_python sessions module keep a
reference to each constructed session object and the thread that has it
locked? It should be possible for PSP to find and use the session object
created by the handler.

To work around this, you need to either:
    1. manually unlock the session, or
    2. pass the session to the PSP template in a different way (e.g., as
an attribute of the request object), or
    3. move everything that uses the session from the handler into the
template.

None of these are particularly appealing. Support for the session
facility is a great feature in PSP, but it is hindered by its inability
to coexist with use of sessions outside of the template. It is quite
confusing when merely referencing the 'session' variable in a template
causes a deadlock. I was unaware of PSP's session support when I
encountered this problem; I had passed my handler's session object in
via the 'vars' argument of PSP.run().
From rsynnott at gmail.com  Sun Aug 13 14:37:25 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Sun Aug 13 14:37:28 2006
Subject: [mod_python] ZSI and mod_python
In-Reply-To: <44DCEC6F.90300@ussonet.net>
References: <44DCEC6F.90300@ussonet.net>
Message-ID: <24f203480608131137g4ce71ed9l5e49cb0d2c832557@mail.gmail.com>

On 8/11/06, justind <justind@ussonet.net> wrote:
> I posted on the ZSI board to, thought I better here just to cover all
> the bases.
>
> Has anyone used ZSI with mod_python? If so, there is an example of how
> to use ZSI with mod_python in ZSI's documentation.
>
> This feels  like a "I'm being stupid and forgetting/overlooking
> something obvious" type of problem.
>
>  From the example below, there is a module called MyHandler that has 3
> functions (hello,echo and average). You expose these functions through
> the dispatch.AsHandler() function in the mod_python code.
> Suppose that I only wanted to expose the hello and echo functions, but
> not the average function. I want to keep the average function in the
> module because some other function(s) I will make later will use it.
>
> (Section 2.1.3).
>
> The following is a complete example of a simple handler. The soap
> operations are implemented in the MyHandler module:
>
> def hello():
>     return "Hello, world"
>
> def echo(*args):
>     return args
>
> def average(*args):
>     sum = 0
>     for i in args: sum += i
>     return sum / len(args)
>
> Dispatching from within mod_python is achieved by passing the
> aforementined MyHandler module to |dispatch.AsHandler()|. The following
> code exposes the operations defined in MyHandler via SOAP:
>
> from ZSI import dispatch
> from mod_python import apache
>
> import MyHandler
> mod = __import__('encodings.utf_8', globals(), locals(), '*')
> mod = __import__('encodings.utf_16_be', globals(), locals(), '*')
>
> def handler(req):
>     dispatch.AsHandler(modules=(MyHandler,), request=req)
>     return apache.OK
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

I don't THINK the underscore trick works for mod_python. You really
have two options; you could put the offending functions in a separate
module, or you could write your own handler (if you want to do the
whole wsdl2py, wsdl2dispatch thing you'll have to do that anyway,
currently).
Rob
From jpg at jgassociates.ca  Sun Aug 13 15:02:19 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Aug 13 14:58:11 2006
Subject: [mod_python] ZSI and mod_python
In-Reply-To: <24f203480608131137g4ce71ed9l5e49cb0d2c832557@mail.gmail.com>
References: <44DCEC6F.90300@ussonet.net>
	<24f203480608131137g4ce71ed9l5e49cb0d2c832557@mail.gmail.com>
Message-ID: <44DF773B.6090100@jgassociates.ca>

Robert Synnott wrote:
> On 8/11/06, justind <justind@ussonet.net> wrote:
>> I posted on the ZSI board to, thought I better here just to cover all
>> the bases.
>>
>> Has anyone used ZSI with mod_python? If so, there is an example of how
>> to use ZSI with mod_python in ZSI's documentation.
>>
>> This feels  like a "I'm being stupid and forgetting/overlooking
>> something obvious" type of problem.
>>
>>  From the example below, there is a module called MyHandler that has 3
>> functions (hello,echo and average). You expose these functions through
>> the dispatch.AsHandler() function in the mod_python code.
>> Suppose that I only wanted to expose the hello and echo functions, but
>> not the average function. I want to keep the average function in the
>> module because some other function(s) I will make later will use it.
>>
>> (Section 2.1.3).
>>
>> The following is a complete example of a simple handler. The soap
>> operations are implemented in the MyHandler module:
>>
>> def hello():
>>     return "Hello, world"
>>
>> def echo(*args):
>>     return args
>>
>> def average(*args):
>>     sum = 0
>>     for i in args: sum += i
>>     return sum / len(args)
>>
>> Dispatching from within mod_python is achieved by passing the
>> aforementined MyHandler module to |dispatch.AsHandler()|. The following
>> code exposes the operations defined in MyHandler via SOAP:
>>
>> from ZSI import dispatch
>> from mod_python import apache
>>
>> import MyHandler
>> mod = __import__('encodings.utf_8', globals(), locals(), '*')
>> mod = __import__('encodings.utf_16_be', globals(), locals(), '*')
>>
>> def handler(req):
>>     dispatch.AsHandler(modules=(MyHandler,), request=req)
>>     return apache.OK
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> I don't THINK the underscore trick works for mod_python. You really
> have two options; you could put the offending functions in a separate
> module, or you could write your own handler (if you want to do the
> whole wsdl2py, wsdl2dispatch thing you'll have to do that anyway,
> currently).
> Rob

I was actually suggesting that it was a ZSI trick, as it certainly is
not a mod_python trick (except when using publisher). What I was
suggesting was that ZSI seems to be doing some introspection of
MyHandler, and *it* might be choosing to treat methods prepended with an
underscore as private. But then, I know absolutely nothing about ZSI. :)

Jim
From jpg at jgassociates.ca  Sun Aug 13 15:09:50 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Aug 13 15:05:40 2006
Subject: [mod_python] mod_python sessions, locking, and PSP
In-Reply-To: <44DF6663.5090904@utgard.net>
References: <44DF6663.5090904@utgard.net>
Message-ID: <44DF78FE.1050603@jgassociates.ca>

Michael Spang wrote:
> I recently ran into deadlocks using sessions in both my mod_python
> handler and in psp. I've read through the thread at
> http://www.modpython.org/pipermail/mod_python/2005-May/018035.html and
> understand that this occurs because both my handler and PSP create their
> own session instance and attempt to lock the session.
> 
> My question is: why doesn't the mod_python sessions module keep a
> reference to each constructed session object and the thread that has it
> locked? 

Easier said than done in mpm-prefork or mpm-worker. It's possible to
keep track of the session object within a single request, but difficult
(as in nearly impossible) to do it across requests in these 2 mpms.

> It should be possible for PSP to find and use the session object
> created by the handler.
> 
> To work around this, you need to either:
>     1. manually unlock the session, or
>     2. pass the session to the PSP template in a different way (e.g., as
> an attribute of the request object), or

This is the preferred (although not ideal) method. In version 3.3 if psp
creates a new session it saves a reference in req.session. It's also a
little smarter about unlocking. It'll only unlock a session that has
been created within psp.

>     3. move everything that uses the session from the handler into the
> template.
> 
> None of these are particularly appealing. Support for the session
> facility is a great feature in PSP, but it is hindered by its inability
> to coexist with use of sessions outside of the template. It is quite
> confusing when merely referencing the 'session' variable in a template
> causes a deadlock. I was unaware of PSP's session support when I
> encountered this problem; I had passed my handler's session object in
> via the 'vars' argument of PSP.run().

You'll get no argument from me there. It's less than ideal, but it's not
entirely true that a session in psp can't co-exist with session use
outside of psp. You just need to know the magic incantation. (And yes,
the documentation on this is insufficient).

So there are 2 approaches:

1. In your handler use req.session = Session.Session(req).
   Don't pass the session object in vars arg of PSP.run().
   Use the 'session' variable name in your psp template and depend on
it's magic.

2. In your handler use sess = Session.Session(req)
   Pass 'sess' in with your psp vars.
   *Don't* use the 'session' variable name in your psp template, and
avoid the magic. Use something else like 'sess' or 'my_sess'.

At one point I was working on a req.get_session() method to fix some of
these issues, but the attempt was abandoned for a number of reasons -
one being that it would introduce even more magic. There is still a code
stub in svn trunk, but it'll likely be expunged before a 3.3 release.
Any such feature will have to wait until 3.4.

I've been thinking about some ideas for a session locking tutorial, as
it is one of the more confusing aspects of mod_python - until you
understand the magic. ;)

Jim
From mike at utgard.net  Sun Aug 13 16:16:36 2006
From: mike at utgard.net (Michael Spang)
Date: Sun Aug 13 16:15:47 2006
Subject: [mod_python] mod_python sessions, locking, and PSP
In-Reply-To: <44DF78FE.1050603@jgassociates.ca>
References: <44DF6663.5090904@utgard.net> <44DF78FE.1050603@jgassociates.ca>
Message-ID: <44DF88A4.1010307@utgard.net>

Jim Gallacher wrote:
> So there are 2 approaches:
>
> 1. In your handler use req.session = Session.Session(req).
>    Don't pass the session object in vars arg of PSP.run().
>    Use the 'session' variable name in your psp template and depend on
> it's magic.
>   
Ah, I didn't realize that PSP would adopt any session in req.session. I
had thought it would always create a new session object if 'session' was
referenced in the template.  The idea of passing the session object in
manually and being barred from using the variable name 'session' was
unappealing to me. Since that's not the case, I have no remaining
objections. Thanks for sharing the magic.

Thanks!
Michael Spang
From jpg at jgassociates.ca  Sun Aug 13 16:57:00 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Aug 13 16:56:49 2006
Subject: [mod_python] mod_python sessions, locking, and PSP
In-Reply-To: <44DF88A4.1010307@utgard.net>
References: <44DF6663.5090904@utgard.net> <44DF78FE.1050603@jgassociates.ca>
	<44DF88A4.1010307@utgard.net>
Message-ID: <44DF921C.2080508@jgassociates.ca>

Michael Spang wrote:
> Jim Gallacher wrote:
>> So there are 2 approaches:
>>
>> 1. In your handler use req.session = Session.Session(req).
>>    Don't pass the session object in vars arg of PSP.run().
>>    Use the 'session' variable name in your psp template and depend on
>> it's magic.
>>   
> Ah, I didn't realize that PSP would adopt any session in req.session. I
> had thought it would always create a new session object if 'session' was
> referenced in the template.  The idea of passing the session object in
> manually and being barred from using the variable name 'session' was
> unappealing to me. Since that's not the case, I have no remaining
> objections. Thanks for sharing the magic.

I think I forgot to mention that this a new feature of 3.2, so hopefully
 you are using a version > 3.1.4.

Jim
From rsynnott at gmail.com  Sun Aug 13 17:05:57 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Sun Aug 13 17:06:01 2006
Subject: [mod_python] ZSI and mod_python
In-Reply-To: <44DF773B.6090100@jgassociates.ca>
References: <44DCEC6F.90300@ussonet.net>
	<24f203480608131137g4ce71ed9l5e49cb0d2c832557@mail.gmail.com>
	<44DF773B.6090100@jgassociates.ca>
Message-ID: <24f203480608131405m1f7507dan3bb78d31400229ea@mail.gmail.com>

Oops, yep, that should have read "I don't THINK the underscore trick
work's for ZSI's dispatch mechanism". Sorry about that :)
From nferrier at tapsellferrier.co.uk  Sun Aug 13 18:28:31 2006
From: nferrier at tapsellferrier.co.uk (Nic James Ferrier)
Date: Sun Aug 13 18:36:53 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
Message-ID: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>

My version of mod_python (Debian package 3.1.3-3) says this in
util.py:

        # always process GET-style parameters
        if req.args:
            pairs = parse_qsl(req.args, keep_blank_values)
            for pair in pairs:
                file = cStringIO.StringIO(pair[1])
                self.list.append(Field(pair[0], file, "text/plain", {},
                                       None, {}))

        if req.method == "POST" or req.method == "PUT":

            try:
                clen = int(req.headers_in["content-length"])
            except (KeyError, ValueError):
                # absent content-length is not acceptable
                raise apache.SERVER_RETURN, apache.HTTP_LENGTH_REQUIRED

The current version says something similar.

This is wrong. Or at least restictive.

I noticed this because I am PUTting the representation of a resource
as application/x-www-form-urlencoded and I wasn't allowed to do that
using FieldStorage.

Here's a patch:

--- /usr/lib/python2.3/site-packages/mod_python/util.py~
+++ /usr/lib/python2.3/site-packages/mod_python/util.py
@@ -96,7 +96,7 @@
                 self.list.append(Field(pair[0], file, "text/plain", {},
                                        None, {}))
 
-        if req.method == "POST":
+        if req.method == "POST" or req.method == "PUT":
 
             try:
                 clen = int(req.headers_in["content-length"])



-- 
Nic Ferrier
http://www.tapsellferrier.co.uk   for all your tapsell ferrier needs
From mike at utgard.net  Sun Aug 13 18:50:18 2006
From: mike at utgard.net (Michael Spang)
Date: Sun Aug 13 18:49:27 2006
Subject: [mod_python] mod_python sessions, locking, and PSP
In-Reply-To: <44DF921C.2080508@jgassociates.ca>
References: <44DF6663.5090904@utgard.net> <44DF78FE.1050603@jgassociates.ca>
	<44DF88A4.1010307@utgard.net> <44DF921C.2080508@jgassociates.ca>
Message-ID: <44DFACAA.6020305@utgard.net>

Jim Gallacher wrote:
> Michael Spang wrote:
>   
>
> I think I forgot to mention that this a new feature of 3.2, so hopefully
>  you are using a version > 3.1.4.
>
> Jim
>
>   
I'm using 3.2.10. It's working, of course.

Thanks again!
Michael Spang

From grahamd at dscpl.com.au  Sun Aug 13 18:49:59 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Aug 13 18:50:05 2006
Subject: [mod_python] mod_python sessions, locking, and PSP
Message-ID: <1155509399.10299@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> Michael Spang wrote:
> > I recently ran into deadlocks using sessions in both my mod_python
> > handler and in psp. I've read through the thread at
> > http://www.modpython.org/pipermail/mod_python/2005-May/018035.html and
> > understand that this occurs because both my handler and PSP create their
> > own session instance and attempt to lock the session.
> > 
> > My question is: why doesn't the mod_python sessions module keep a
> > reference to each constructed session object and the thread that has
> it
> > locked? 
> 
> Easier said than done in mpm-prefork or mpm-worker. It's possible to
> keep track of the session object within a single request, but difficult
> (as in nearly impossible) to do it across requests in these 2 mpms.

Hmmm, what do you mean by across requests here? The only thing I can think of
that even makes sense doesn't even relate to which MPM is used. This is the
problem in 3.2 whereby if an internal redirect occurs and the parent handler
had acquired the session and not unlocked it, that an attempt by the handler
for the sub request to also acquire the session object will result in a
deadlock.

I have demonstrated code before which can be used to make this work provided
that both parent and sub request are in the same interpreter. In short it would
stash the session object in a global area where the thread was the key. It
would be up to any handler to first check in the cache for the session object
before deciding to create its own and in turn store that in the cache. The
request handler would also need to register a cleanup handler to ensure that
any reference was removed at the end of the request. This could be done as part
of the implementation of the cache though.

Now, having said that, in mod_python 3.3 there is a change that may make all
this simpler to do and which may also allow sharing of the session object
between handlers executed within the context of different interpreters. The
change is that req.main now provides access to the actual request object of
a parent request whereas previously the Python part of the object was a new
wrapper around the request_rec structure for the parent request.

What this means is that the following may actually work in a handler of a
sub request.

  def handler(req):
    if req.main and hasattr(req.main, 'session'):
      req.session = req.main.session
    else:
      req.session = Session(req)
      if req.main:
        req.main.session = req.session

I can't remember how thoroughly I tested this and whether it does work
across interpreters. It should for simple data and whether a session object
is too complicated I don't know.

Graham


From grahamd at dscpl.com.au  Mon Aug 14 06:33:06 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Aug 14 06:32:54 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
Message-ID: <49545A8B-823C-40E9-A028-EC1BE28E7E60@dscpl.com.au>


On 14/08/2006, at 8:28 AM, Nic James Ferrier wrote:

> My version of mod_python (Debian package 3.1.3-3) says this in
> util.py:
>
>         # always process GET-style parameters
>         if req.args:
>             pairs = parse_qsl(req.args, keep_blank_values)
>             for pair in pairs:
>                 file = cStringIO.StringIO(pair[1])
>                 self.list.append(Field(pair[0], file, "text/plain",  
> {},
>                                        None, {}))
>
>         if req.method == "POST" or req.method == "PUT":
>
>             try:
>                 clen = int(req.headers_in["content-length"])
>             except (KeyError, ValueError):
>                 # absent content-length is not acceptable
>                 raise apache.SERVER_RETURN,  
> apache.HTTP_LENGTH_REQUIRED
>
> The current version says something similar.
>
> This is wrong. Or at least restictive.

It may be restrictive but the cgi.FieldStorage class in the main Python
distribution also only supports POST. Unless you can show some sort
of precedent in the way of some other equivalent forms processing  
library
that supports PUT, I can't see any convincing reason to change it. Some
sort of documentation as to what can be provided in a PUT request as
content would also help.

> I noticed this because I am PUTting the representation of a resource
> as application/x-www-form-urlencoded and I wasn't allowed to do that
> using FieldStorage.

You can do it, you just need to use an intermediate wrapper for the
request object to make it think that the POST method was used. Ie.,
something like:

   class _Request:
     def __init__(self, req):
       self.__req = req
     def __getattr__(self, name):
       if name == 'method':
         return 'POST'
       return getattr(self.__req, name)

   form = util.FieldStorage(_Request(req))

This technique can also be used where processing of query string and
body POST parameters must be done separately so as to distinguish
parameters defined by both means, or where it is necessary to ignore
the query string parameters for a POST.

Graham
From jpg at jgassociates.ca  Mon Aug 14 06:47:02 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Aug 14 06:47:08 2006
Subject: [mod_python] mod_python sessions, locking, and PSP
In-Reply-To: <1155509399.10299@dscpl.user.openhosting.com>
References: <1155509399.10299@dscpl.user.openhosting.com>
Message-ID: <44E054A6.8010905@jgassociates.ca>

Graham Dumpleton wrote:
> Jim Gallacher wrote ..
>> Michael Spang wrote:
>>> I recently ran into deadlocks using sessions in both my mod_python
>>> handler and in psp. I've read through the thread at
>>> http://www.modpython.org/pipermail/mod_python/2005-May/018035.html and
>>> understand that this occurs because both my handler and PSP create their
>>> own session instance and attempt to lock the session.
>>>
>>> My question is: why doesn't the mod_python sessions module keep a
>>> reference to each constructed session object and the thread that has
>> it
>>> locked? 
>> Easier said than done in mpm-prefork or mpm-worker. It's possible to
>> keep track of the session object within a single request, but difficult
>> (as in nearly impossible) to do it across requests in these 2 mpms.
> 
> Hmmm, what do you mean by across requests here? The only thing I can think of
> that even makes sense doesn't even relate to which MPM is used.

Bit of a brain fart actually. I was thinking of something unrelated.

Jim
From nlv11281 at natlab.research.philips.com  Mon Aug 14 07:03:34 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Aug 14 07:03:43 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <49545A8B-823C-40E9-A028-EC1BE28E7E60@dscpl.com.au>
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
	<49545A8B-823C-40E9-A028-EC1BE28E7E60@dscpl.com.au>
Message-ID: <44E05886.2020204@natlab.research.philips.com>

...
>>         if req.method == "POST" or req.method == "PUT":
...
>> The current version says something similar.
>>
>> This is wrong. Or at least restictive.
> 
> It may be restrictive but the cgi.FieldStorage class in the main Python
> distribution also only supports POST. Unless you can show some sort
> of precedent in the way of some other equivalent forms processing  library
> that supports PUT, I can't see any convincing reason to change it. Some
> sort of documentation as to what can be provided in a PUT request as
> content would also help.

The HTTP RFC 2068 (there's a later version too), as far as I can recall it, explains that only POST 
requests can be expected to have a body that contains FORM data. All other requests, like GET, PUT, 
OPTION and so on have entity bodies with different meaning.

For a PUT request, the standard expects the body to contain full (or partial since HTTP/1.1) 
contents of the entity refered to in the URL. A subsequent GET request for the same URL is expected 
to retrieve the contents as sent by the last PUT request.

For that reason, I would strongly object to implementing this patch in the FieldStorage class. It 
goes against the standards, and because of that, you're on your own here.

>> I noticed this because I am PUTting the representation of a resource
>> as application/x-www-form-urlencoded and I wasn't allowed to do that
>> using FieldStorage.

As explained, FieldStorage is correct in not allowing that. Either modify your application to adhere 
to the standard and use a POST request, or implement your own workaround that will make it work in 
your specific environment, for example using Graham's solution.

Mike.

From jpg at jgassociates.ca  Mon Aug 14 07:07:28 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Aug 14 07:07:28 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
Message-ID: <44E05970.2030506@jgassociates.ca>

It's my understanding that PUT is used for uploading binary objects such
as files, without creating the MIME message usually associated with
POST. FieldStorage really doesn't make sense in that context.

I might be wrong though.

Jim

Nic James Ferrier wrote:
> My version of mod_python (Debian package 3.1.3-3) says this in
> util.py:
> 
>         # always process GET-style parameters
>         if req.args:
>             pairs = parse_qsl(req.args, keep_blank_values)
>             for pair in pairs:
>                 file = cStringIO.StringIO(pair[1])
>                 self.list.append(Field(pair[0], file, "text/plain", {},
>                                        None, {}))
> 
>         if req.method == "POST" or req.method == "PUT":
> 
>             try:
>                 clen = int(req.headers_in["content-length"])
>             except (KeyError, ValueError):
>                 # absent content-length is not acceptable
>                 raise apache.SERVER_RETURN, apache.HTTP_LENGTH_REQUIRED
> 
> The current version says something similar.
> 
> This is wrong. Or at least restictive.
> 
> I noticed this because I am PUTting the representation of a resource
> as application/x-www-form-urlencoded and I wasn't allowed to do that
> using FieldStorage.
> 
> Here's a patch:
> 
> --- /usr/lib/python2.3/site-packages/mod_python/util.py~
> +++ /usr/lib/python2.3/site-packages/mod_python/util.py
> @@ -96,7 +96,7 @@
>                  self.list.append(Field(pair[0], file, "text/plain", {},
>                                         None, {}))
>  
> -        if req.method == "POST":
> +        if req.method == "POST" or req.method == "PUT":
>  
>              try:
>                  clen = int(req.headers_in["content-length"])
> 
> 
> 

From nferrier at tapsellferrier.co.uk  Mon Aug 14 07:30:50 2006
From: nferrier at tapsellferrier.co.uk (Nic James Ferrier)
Date: Mon Aug 14 07:36:58 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <44E05970.2030506@jgassociates.ca> (Jim Gallacher's message of
	"Mon, 14 Aug 2006 07:07:28 -0400")
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
	<44E05970.2030506@jgassociates.ca>
Message-ID: <87irkvy2ol.fsf@nicferrier.tapsellferrier.co.uk>

Jim Gallacher <jpg@jgassociates.ca> writes:

> It's my understanding that PUT is used for uploading binary objects such
> as files, without creating the MIME message usually associated with
> POST. FieldStorage really doesn't make sense in that context.
>
> I might be wrong though.

PUT is used for changing the entity pointed at by the URI.

But the entity could be represented as an XML document, a binary
object or as a list of fields.

Here is RFC2616, section 9.6, Page 55:

   The fundamental difference between the POST and PUT requests is
   reflected in the different meaning of the Request-URI. The URI in a
   POST request identifies the resource that will handle the enclosed
   entity. That resource might be a data-accepting process, a gateway to
   some other protocol, or a separate entity that accepts annotations.
   In contrast, the URI in a PUT request identifies the entity enclosed
   with the request -- the user agent knows what URI is intended and the
   server MUST NOT attempt to apply the request to some other
   resource.

Really that is the only difference. Which is why both cgi.FieldStorage
and util.FieldStorage should allow PUT as well as POST.

Still, mod_python's wants to behave like cgi's. So I'll go talk to the
cgi people about changing their's first.

Sigh.


-- 
Nic Ferrier
http://www.tapsellferrier.co.uk   for all your tapsell ferrier needs
From nlv11281 at natlab.research.philips.com  Mon Aug 14 08:16:14 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Aug 14 08:16:33 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <87irkvy2ol.fsf@nicferrier.tapsellferrier.co.uk>
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>	<44E05970.2030506@jgassociates.ca>
	<87irkvy2ol.fsf@nicferrier.tapsellferrier.co.uk>
Message-ID: <44E0698E.7030104@natlab.research.philips.com>

> Really that is the only difference. Which is why both cgi.FieldStorage
> and util.FieldStorage should allow PUT as well as POST.

Your patch will also break any existing code that uses PUT to upload files to the server in any 
form. By assuming that the body contains form data, the FieldStorage object will consume the body 
and it is lost for the request.

The fact that it breaks existing code is enough reason not to change it, i think. Even if the 
current handling were not according to the RFC.

Mike.

From nferrier at tapsellferrier.co.uk  Mon Aug 14 09:13:00 2006
From: nferrier at tapsellferrier.co.uk (Nic James Ferrier)
Date: Mon Aug 14 09:16:59 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <44E0698E.7030104@natlab.research.philips.com> (Mike Looijmans's
	message of "Mon, 14 Aug 2006 14:16:14 +0200")
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
	<44E05970.2030506@jgassociates.ca>
	<87irkvy2ol.fsf@nicferrier.tapsellferrier.co.uk>
	<44E0698E.7030104@natlab.research.philips.com>
Message-ID: <87fyfzxxyb.fsf@nicferrier.tapsellferrier.co.uk>

Mike Looijmans <nlv11281@natlab.research.philips.com> writes:

>> Really that is the only difference. Which is why both cgi.FieldStorage
>> and util.FieldStorage should allow PUT as well as POST.
>
> Your patch will also break any existing code that uses PUT to upload files to the server in any 
> form. By assuming that the body contains form data, the FieldStorage object will consume the body 
> and it is lost for the request.

Will it?

util.FieldStorage tests the content type before doing anything. 

Also, why would you use util.FieldStorage to retrieve a submitted
file? Surely you'd just read it?


-- 
Nic Ferrier
http://www.tapsellferrier.co.uk   for all your tapsell ferrier needs
From nlv11281 at natlab.research.philips.com  Mon Aug 14 09:24:04 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Aug 14 09:24:12 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <87fyfzxxyb.fsf@nicferrier.tapsellferrier.co.uk>
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>	<44E05970.2030506@jgassociates.ca>	<87irkvy2ol.fsf@nicferrier.tapsellferrier.co.uk>	<44E0698E.7030104@natlab.research.philips.com>
	<87fyfzxxyb.fsf@nicferrier.tapsellferrier.co.uk>
Message-ID: <44E07974.8020605@natlab.research.philips.com>


>>>Really that is the only difference. Which is why both cgi.FieldStorage
>>>and util.FieldStorage should allow PUT as well as POST.
>>
>>Your patch will also break any existing code that uses PUT to upload files to the server in any 
>>form. By assuming that the body contains form data, the FieldStorage object will consume the body 
>>and it is lost for the request.
> 
> Will it?
> util.FieldStorage tests the content type before doing anything.

You never know what a client might provide as content-type.

> Also, why would you use util.FieldStorage to retrieve a submitted
> file? Surely you'd just read it?

One might want to allow something like:
http://my.server/upload/filename?access=755&sendmail=true
and use a fieldstorage to parse the URL.


Mike.

From nferrier at tapsellferrier.co.uk  Mon Aug 14 10:06:35 2006
From: nferrier at tapsellferrier.co.uk (Nic James Ferrier)
Date: Mon Aug 14 10:17:03 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
In-Reply-To: <44E07974.8020605@natlab.research.philips.com> (Mike Looijmans's
	message of "Mon, 14 Aug 2006 15:24:04 +0200")
References: <8764gwp8xc.fsf@nicferrier.tapsellferrier.co.uk>
	<44E05970.2030506@jgassociates.ca>
	<87irkvy2ol.fsf@nicferrier.tapsellferrier.co.uk>
	<44E0698E.7030104@natlab.research.philips.com>
	<87fyfzxxyb.fsf@nicferrier.tapsellferrier.co.uk>
	<44E07974.8020605@natlab.research.philips.com>
Message-ID: <87d5b3xvh0.fsf@nicferrier.tapsellferrier.co.uk>

Mike Looijmans <nlv11281@natlab.research.philips.com> writes:

>>>>Really that is the only difference. Which is why both cgi.FieldStorage
>>>>and util.FieldStorage should allow PUT as well as POST.
>>>
>>>Your patch will also break any existing code that uses PUT to upload files to the server in any 
>>>form. By assuming that the body contains form data, the FieldStorage object will consume the body 
>>>and it is lost for the request.
>> 
>> Will it?
>> util.FieldStorage tests the content type before doing anything.
>
> You never know what a client might provide as content-type.

So someone is going to send a file to me with content type
"application/x-www-form-urlencoded" but it won't really be that as
content type?


>> Also, why would you use util.FieldStorage to retrieve a submitted
>> file? Surely you'd just read it?
>
> One might want to allow something like:
> http://my.server/upload/filename?access=755&sendmail=true
> and use a fieldstorage to parse the URL.

Gotcha. That does make sense.

This would work with my patch, as long as they didn't pass a file and
give it the application/x-www-form-urlencoded content type (if they
did they would be silly IMHO).

-- 
Nic Ferrier
http://www.tapsellferrier.co.uk   for all your tapsell ferrier needs
From grahamd at dscpl.com.au  Mon Aug 14 19:17:05 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Aug 14 19:17:10 2006
Subject: [mod_python] util.FieldStorage wrong about method restrictions
Message-ID: <1155597425.29674@dscpl.user.openhosting.com>

Nic James Ferrier wrote ..
> Jim Gallacher <jpg@jgassociates.ca> writes:
> 
> > It's my understanding that PUT is used for uploading binary objects such
> > as files, without creating the MIME message usually associated with
> > POST. FieldStorage really doesn't make sense in that context.
> >
> > I might be wrong though.
> 
> PUT is used for changing the entity pointed at by the URI.
> 
> But the entity could be represented as an XML document, a binary
> object or as a list of fields.
> 
> Here is RFC2616, section 9.6, Page 55:
> 
>    The fundamental difference between the POST and PUT requests is
>    reflected in the different meaning of the Request-URI. The URI in a
>    POST request identifies the resource that will handle the enclosed
>    entity. That resource might be a data-accepting process, a gateway to
>    some other protocol, or a separate entity that accepts annotations.
>    In contrast, the URI in a PUT request identifies the entity enclosed
>    with the request -- the user agent knows what URI is intended and the
>    server MUST NOT attempt to apply the request to some other
>    resource.
> 
> Really that is the only difference. Which is why both cgi.FieldStorage
> and util.FieldStorage should allow PUT as well as POST.
> 
> Still, mod_python's wants to behave like cgi's. So I'll go talk to the
> cgi people about changing their's first.

Just because I referenced cgi.FieldStorage does not mean we are simply
following what they have done, it was just one indicator I used for trying
to work out what is regarded as common/good practice in regard to use
of POST/PUT and multipart/form data.

I also did other searching on the Internet and of the few pages of search
results I checked, I couldn't find one example of where someone was using
multipart/form data in conjunction with a PUT request. Where PUT was
used, the target of the update was included in its raw form as the content
and where content type was specified, it was an adjunct to the data just
to indicate what format the data was. For example, image/jpeg, text/xml
etc. That is, it was used in the same way that the content type of the file
would be returned as if it were a GET request for that file.

In other words, you seem to want to do something that is out of the
ordinary and not commonly accepted practice. Besides pointing at the
RFC and saying that it may allow it, can you instead point at some instances
where this is actually done in practice. If you can show that this is a
commonly accepted technique, then we might consider it a worthwhile
change. In the mean time, you can use the bit of wrapper code I posted
in the first place to make it work.

Graham
From guotie.9 at gmail.com  Tue Aug 15 00:35:43 2006
From: guotie.9 at gmail.com (guo tie)
Date: Tue Aug 15 00:35:46 2006
Subject: [mod_python] i beg the developers to make mod_python can be import
	in python command line.
Message-ID: <79b73f2b0608142135w3ab9e5dq897b3e182cc0cfe2@mail.gmail.com>

hi,
   All

   These days i was work with mod_python, i found it is difficult to debug
it , if you can made it be debuged in python command line mode ,

i think it is a great thing

   Thank
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060815/206c4f38/attachment.html
From grahamd at dscpl.com.au  Tue Aug 15 01:14:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug 15 01:14:37 2006
Subject: [mod_python] i beg the developers to make mod_python can be
	importin python command line.
Message-ID: <1155618871.6110@dscpl.user.openhosting.com>

guo tie wrote ..
> hi,
>    All
> 
>    These days i was work with mod_python, i found it is difficult to debug
> it , if you can made it be debuged in python command line mode ,
> 
> i think it is a great thing

The closest you will get is to enable the 'PythonEnablePdb' option. See:

  http://www.modpython.org/live/current/doc-html/dir-other-epd.html

Ie., in your Apache configuration pertinent to where your handlers are have:

  PythonEnablePdb On

You then need to run Apache 'httpd' explicitly with the '-DONE_PROCESS'
option.

  /usr/local/apache-2.0/bin/httpd -DONE_PROCESS

This runs Apache in single process mode.

Because Apache will try and use its regular listener port, you will need to
have shutdown your regular Apache instance first to do this.

With this option on, when a request comes in that triggers your request,
you will be thrown into a Python debugger environment. You can then
interact with your running request handler. For example:

~ grahamd$ /usr/local/apache-2.0/bin/httpd -DONE_PROCESS
> /Users/grahamd/public_html/filters/handlers.py(24)handler()
-> req.add_handler('PythonHandler', handler1)
where
  /System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/importer.py(960)_execute_target()
-> result = object(arg)
> /Users/grahamd/public_html/filters/handlers.py(24)handler()
-> req.add_handler('PythonHandler', handler1)

print req.filename
/Users/grahamd/public_html/filters/xxx.py

print req.get_options()
{'mod_python.future.importer': 'testing'}

For details on the Python debugger and what it can do, see:

  http://docs.python.org/lib/module-pdb.html

The only other option is to do what some users do, which is to construct
a mini framework which fakes up a request object which emulates the
minimum of what they required for their code to run. This allows them
to do some testing from the command line or using automated test scripts.

Hope this helps.

Graham
From richardlewis at fastmail.co.uk  Tue Aug 15 04:53:57 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Aug 15 04:50:26 2006
Subject: [mod_python] i beg the developers to make mod_python can be
	import in python command line.
In-Reply-To: <79b73f2b0608142135w3ab9e5dq897b3e182cc0cfe2@mail.gmail.com>
References: <79b73f2b0608142135w3ab9e5dq897b3e182cc0cfe2@mail.gmail.com>
Message-ID: <200608150953.57213.richardlewis@fastmail.co.uk>

On Tuesday 15 August 2006 05:35, guo tie wrote:
> hi,
>    All
>
>    These days i was work with mod_python, i found it is difficult to debug
> it , if you can made it be debuged in python command line mode ,
>
I do this:

In my module that I'm working on I start with this code:

======
try:
    from mod_python import apache
except:
    # if we're not running inside Apache (i.e. command line testing)
    # create a fake apache module
    class fake_apache:
        def __init__(self):
            self.HTTP_INTERNAL_SERVER_ERROR = 500
            self.HTTP_NOT_FOUND = 404
            self.OK = 200
            self.SERVER_RETURN = Exception
        def import_module(self, name):
            return __import__(name, globals(), locals())
        def server_root(self):
            return ""
    apache = fake_apache()
======

and then in a testing script I have something like this:
======
import my_module

class server:
    def __init__(self):
        self.cleanup_func = None
        self.server_hostname = ""

    def register_cleanup(self, req, func):
        self.cleanup_func = func

class request:
    def __init__(self, uri):
        self.uri = uri
        self.unparsed_uri = uri
        self._content_type = ""
        self.subprocess_env = 
{"SERVER_NAME": "localhost","DOCUMENT_ROOT": "/var/www"}
        self.server = server()
        self.server.server_hostname = self.subprocess_env['SERVER_NAME']

    def document_root(self):
        return self.subprocess_env['DOCUMENT_ROOT']
    
    def set_content_type(self, c):
        print >> sys.stderr, "Content-type: %s" % s
        self._content_type = c

    def get_content_type(self): return self._content_type

    content_type = property(fget=get_content_type, fset=set_content_type)
    
    def write(self, *args):
        for a in args:
            print a

    def sendfile(self, fn):
        f = open(fn, "r")
        print f.read()
        f.close()

    def set_content_length(self, l):
        print >> sys.stderr, "Content-length: %d" % l

    def add_common_vars(self):
        pass

r = request(sys.argv[1])

my_module.handler(r)

r.server.cleanup_func(r)
======

Which I run with a request URI as a parameter.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From grahamd at dscpl.com.au  Tue Aug 15 06:01:03 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug 15 06:00:52 2006
Subject: [mod_python] i beg the developers to make mod_python can be
	import in python command line.
In-Reply-To: <200608150953.57213.richardlewis@fastmail.co.uk>
References: <79b73f2b0608142135w3ab9e5dq897b3e182cc0cfe2@mail.gmail.com>
	<200608150953.57213.richardlewis@fastmail.co.uk>
Message-ID: <270CA7CE-4F6F-4C20-91FE-D831F23BD5AF@dscpl.com.au>


On 15/08/2006, at 6:53 PM, Richard Lewis wrote:

> class server:
>     def __init__(self):
>         self.cleanup_func = None
>         self.server_hostname = ""
>
>     def register_cleanup(self, req, func):
>         self.cleanup_func = func

Be aware that req.server.register_cleanup() doesn't really work  
properly and
is going to be disabled in mod_python 3.3 such that it doesn't do  
anything.
A stub will still be there so your code at least still runs, but no  
special actions
will performed on server shutdown.

What were you trying to do at server shutdown?

BTW, details about problems with server cleanups can be found at:

   https://issues.apache.org/jira/browse/MODPYTHON-109

Graham
From richardlewis at fastmail.co.uk  Tue Aug 15 18:00:51 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Aug 15 17:57:14 2006
Subject: [mod_python] i beg the developers to make mod_python can be
	import in python command line.
In-Reply-To: <270CA7CE-4F6F-4C20-91FE-D831F23BD5AF@dscpl.com.au>
References: <79b73f2b0608142135w3ab9e5dq897b3e182cc0cfe2@mail.gmail.com>
	<200608150953.57213.richardlewis@fastmail.co.uk>
	<270CA7CE-4F6F-4C20-91FE-D831F23BD5AF@dscpl.com.au>
Message-ID: <200608152300.51674.richardlewis@fastmail.co.uk>

On Tuesday 15 August 2006 11:01, you wrote:
> On 15/08/2006, at 6:53 PM, Richard Lewis wrote:
> > class server:
> >     def __init__(self):
> >         self.cleanup_func = None
> >         self.server_hostname = ""
> >
> >     def register_cleanup(self, req, func):
> >         self.cleanup_func = func
>
> Be aware that req.server.register_cleanup() doesn't really work
> properly and
> is going to be disabled in mod_python 3.3 such that it doesn't do
> anything.
> A stub will still be there so your code at least still runs, but no
> special actions
> will performed on server shutdown.
>
Do you mean that there will be no opportunity to have code run at server 
shutdown?

> What were you trying to do at server shutdown?

Huh? Well, you know, just make sure that database connections are closed, and 
stuff....

Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From grahamd at dscpl.com.au  Tue Aug 15 18:31:40 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug 15 18:31:43 2006
Subject: [mod_python] i beg the developers to make mod_python can beimport
	in python command line.
Message-ID: <1155681100.18799@dscpl.user.openhosting.com>

Richard Lewis wrote ..
> On Tuesday 15 August 2006 11:01, you wrote:
> > On 15/08/2006, at 6:53 PM, Richard Lewis wrote:
> > > class server:
> > >     def __init__(self):
> > >         self.cleanup_func = None
> > >         self.server_hostname = ""
> > >
> > >     def register_cleanup(self, req, func):
> > >         self.cleanup_func = func
> >
> > Be aware that req.server.register_cleanup() doesn't really work
> > properly and
> > is going to be disabled in mod_python 3.3 such that it doesn't do
> > anything.
> > A stub will still be there so your code at least still runs, but no
> > special actions
> > will performed on server shutdown.
> >
> Do you mean that there will be no opportunity to have code run at server
> shutdown?

Correct. Reason being that it doesn't actually work most of the time anyway.

The basic problem is that those server cleanups are being run from inside of a
signal handler. If there is any active request occurring which is being handled
by mod_python at the time that shutdown occurs, or if the code has created
separate Python threads which are running at the time, then the cleanup code
actually deadlocks as the Python code which was already running is holding the
interpreter lock and the cleanup code can't acquire it.

The end result is that the whole child process hangs and the parent process
noticing this, keeps trying to send more SIGTERM's and after that still does
not work, it sends a SIGKILL and simply kills the process. In the worst cases
the child processes don't even hang, they simply crash, because Python code
is in no way signal safe anyway.

Thus, although you might see it working okay if your server is lightly loaded,
and you are lucky, if it handles any amount of traffic, this features tends not
to work at all and simply causes problems/delays on trying to do timely
restarts of Apache.

Because of how Apache is implemented, there is no reliable/safe way of
implementing this feature. If one can't do it properly, it seems better not
to attempt it at all.

Graham
From gavin at premolo.com  Wed Aug 16 16:19:31 2006
From: gavin at premolo.com (Gavin Panella)
Date: Wed Aug 16 16:19:38 2006
Subject: [mod_python] Using threading.local with Worker MPM
Message-ID: <200608162219.31550.gavin@premolo.com>

Hi,

I was using a PythonInitHandler to set up various objects for the rest of my 
request. I set up a shared 'space' object which is based on threading.local 
because this code needs to run in several different scenarios, not just under 
mod_python, or even in a web context. However, any object I put into 
the 'space' in the PythonInitHandler was disappearing by the time the main 
PythonHandler started.

I traced it down to the fact that threading.local was presenting a different 
__dict__ to the PythonInitHandler from the PythonHandler. However, they're 
both running in the same thread, one after the other. Somewhere between the 
PythonInitHandler and the rest of the code, the threading.local object 
decides to switch the __dict__. It doesn't clear the __dict__, it is a 
different instance (the id changes).

Does anyone know of a reason when the this might happen? Does mod_python do 
something under the bonnet to confuse threading.local? I have a workaround 
(do everything in the PythonHandler), but I'd still like to know the root 
cause.

It took hours to track down this behaviour, and today I've also been having 
lots of fun with PythonAuthzHandler (which I eventually abandoned) so it's 
been a very frustrating and non-productive kind of day :-) Please, someone 
help me!

I'm running Python 2.4.3, Apache 2.0.58, and mod_python 3.1.4 on Gentoo.

Thanks!

Gavin Panella.


-- 
Premolo S?rl
Web: http://www.premolo.com/ ; Tel: +352 26687161 ; GSM: +352 091739359
42 rue du Kiem, L-1857 Luxembourg, Grand-Duch? du Luxembourg

From grahamd at dscpl.com.au  Wed Aug 16 18:40:09 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug 16 18:40:12 2006
Subject: [mod_python] Using threading.local with Worker MPM
Message-ID: <1155768009.9131@dscpl.user.openhosting.com>

Gavin Panella wrote ..
> I was using a PythonInitHandler to set up various objects for the rest
> of my 
> request. I set up a shared 'space' object which is based on threading.local
> because this code needs to run in several different scenarios, not just
> under 
> mod_python, or even in a web context.

Just setting data as attributes of the mod_python request object is generally
preferred, but if all code doesn't get passed the request object, then what
you have done is probably reasonable.

> However, any object I put into 
> the 'space' in the PythonInitHandler was disappearing by the time the main
> PythonHandler started.

I presumed you added calls to apache.log_error() to confirm your inithandler()
was actually being called?

Anyway, first off is that there are bugs in mod_python 3.1.4 related to the
creation of the Python interpreters and thread locking. I am not sure how
this would affect use of thread local storage, perhaps not depending on
where the data is held, but would definitely suggest you upgrade to 3.2.10.
This doesn't eliminate all module reloading problems, but gets rid of a few
nasty ones.

Second is that your success may be determined by what directives you are
using related to the Python interpreters. If you are using either of the directives
PythonInterpPerDirective or PythonInterPerDirectory then you can have
problems. Some of these are related to bugs in 3.1.4, some of which are
fixed in 3.2.10.

The basic problem with interpreters here is that if you are using these
directives, or even if you are using PythonInterpreter directive explicitly, is
that the inithandler() could be executed within the context of a different
interpreter to your handler(). To check, out messages to the Apache error
log in both which show the value of req.interpreter.

If they are different post the results back to the mailing list along with how
you are using the above directives, showing what the enclosing Directory
and or Location directives are that enclose your handler directives.

> It took hours to track down this behaviour, and today I've also been having
> lots of fun with PythonAuthzHandler (which I eventually abandoned) so it's
> been a very frustrating and non-productive kind of day :-) Please, someone
> help me!

You need to know the correct set of directives to use in order to get the
authhandler() and authzhandler() to trigger. This includes use of the Require
directive but possible also AuthType and AuthName. Problem is that in 3.1.4
even if you can get it to trigger you still may have problems if you have
multiple stacked auth[z]?handler() functions as mod_python doesn't interpreter
return status codes properly. This is fixed in 3.3.

Suggest you post to the mailing list what directives you were using to try and
attempt to trigger the authzhandler().

Graham
From gavin at premolo.com  Thu Aug 17 01:30:25 2006
From: gavin at premolo.com (Gavin Panella)
Date: Thu Aug 17 01:30:32 2006
Subject: [mod_python] Using threading.local with Worker MPM
In-Reply-To: <1155768009.9131@dscpl.user.openhosting.com>
References: <1155768009.9131@dscpl.user.openhosting.com>
Message-ID: <200608170730.25885.gavin@premolo.com>

> I presumed you added calls to apache.log_error() to confirm your
> inithandler() was actually being called?

I added logs to the init handler and the main handler, and I also logged every 
__(get|set|del)(attr|item)__ and clear of instances of my shared space class. 
At every point I recorded the id()s of relevant objects, the current thread 
id, and the current contents of the space.

News just in: I've tried using the non-C version of threading.local, to be 
found in _threading_local.py, and it works fine. There is a performance hit 
apparently, but I'm not bashing it hard enough to notice any difference. This 
might point to some late night under-the-covers C shenanigans.

> Anyway, first off is that there are bugs in mod_python 3.1.4 related to the
> creation of the Python interpreters and thread locking. I am not sure how
> this would affect use of thread local storage, perhaps not depending on
> where the data is held, but would definitely suggest you upgrade to 3.2.10.

There are no 3.2 ebuilds in Gentoo yet, so I'll hang on for the moment. I 
could upgrade by hand, but I have to be able to repeat this easily on other 
machines and I'm short on time. Sorry about that. I'll have a look at the 
change log and try not to whine too much about things that are fixed :-)

> This doesn't eliminate all module reloading problems, but gets rid of a few
> nasty ones.

As a side note, the setting of PythonAutoReload did not make any difference.

> Second is that your success may be determined by what directives you are
> using related to the Python interpreters. If you are using either of the
> directives PythonInterpPerDirective or PythonInterPerDirectory then you can
> have problems. Some of these are related to bugs in 3.1.4, some of which
> are fixed in 3.2.10.
>
> The basic problem with interpreters here is that if you are using these
> directives, or even if you are using PythonInterpreter directive
> explicitly, is that the inithandler() could be executed within the context
> of a different interpreter to your handler(). To check, out messages to the
> Apache error log in both which show the value of req.interpreter.

I'm not using any of those directives, and the req.interpreter stayed the same 
(the name of the virtual host).

> You need to know the correct set of directives to use in order to get the
> authhandler() and authzhandler() to trigger. This includes use of the
> Require directive but possible also AuthType and AuthName. Problem is that
> in 3.1.4 even if you can get it to trigger you still may have problems if
> you have multiple stacked auth[z]?handler() functions as mod_python doesn't
> interpreter return status codes properly. This is fixed in 3.3.
>
> Suggest you post to the mailing list what directives you were using to try
> and attempt to trigger the authzhandler().

I saw a thread about this where you gave some advice, but I couldn't get 
things to work. And I can't remember the set of directives now. Is it Apache 
that needs to be induced into the auth/authz phases, or is it mod_python?

Thanks for the reply Graham!

Cheerio, Gavin.

-- 
Premolo S?rl
Web: http://www.premolo.com/ ; Tel: +352 26687161 ; GSM: +352 091739359
42 rue du Kiem, L-1857 Luxembourg, Grand-Duch? du Luxembourg

From grahamd at dscpl.com.au  Thu Aug 17 01:52:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug 17 01:52:34 2006
Subject: [mod_python] Using threading.local with Worker MPM
Message-ID: <1155793951.8971@dscpl.user.openhosting.com>

Gavin Panella wrote ..
> > I presumed you added calls to apache.log_error() to confirm your
> > inithandler() was actually being called?
> 
> I added logs to the init handler and the main handler, and I also logged
> every 
> __(get|set|del)(attr|item)__ and clear of instances of my shared space
> class. 
> At every point I recorded the id()s of relevant objects, the current thread
> id, and the current contents of the space.
> 
> News just in: I've tried using the non-C version of threading.local, to
> be 
> found in _threading_local.py, and it works fine. There is a performance
> hit 
> apparently, but I'm not bashing it hard enough to notice any difference.
> This 
> might point to some late night under-the-covers C shenanigans.

Not that it will matter, but where are you storing the thread local variable?
Is that in a module that can be reloaded automatically by mod_python?

Maybe someone else who has Python with native thread local storage can
try it. I only have 2.3.5 which I believe can't do it.

> > Anyway, first off is that there are bugs in mod_python 3.1.4 related
> to the
> > creation of the Python interpreters and thread locking. I am not sure
> how
> > this would affect use of thread local storage, perhaps not depending
> on
> > where the data is held, but would definitely suggest you upgrade to 3.2.10.
> 
> There are no 3.2 ebuilds in Gentoo yet, so I'll hang on for the moment.
> I 
> could upgrade by hand, but I have to be able to repeat this easily on other
> machines and I'm short on time. Sorry about that. I'll have a look at the
> change log and try not to whine too much about things that are fixed :-)
> 
> > This doesn't eliminate all module reloading problems, but gets rid of
> a few
> > nasty ones.
> 
> As a side note, the setting of PythonAutoReload did not make any difference.

Was fixed in 3.2.8.

> > You need to know the correct set of directives to use in order to get
> the
> > authhandler() and authzhandler() to trigger. This includes use of the
> > Require directive but possible also AuthType and AuthName. Problem is
> that
> > in 3.1.4 even if you can get it to trigger you still may have problems
> if
> > you have multiple stacked auth[z]?handler() functions as mod_python doesn't
> > interpreter return status codes properly. This is fixed in 3.3.
> >
> > Suggest you post to the mailing list what directives you were using to
> try
> > and attempt to trigger the authzhandler().
> 
> I saw a thread about this where you gave some advice, but I couldn't get
> things to work. And I can't remember the set of directives now. Is it Apache
> that needs to be induced into the auth/authz phases, or is it mod_python?

It is Apache that has to be prodded into running the auth/authz handler
phases.

Graham
From gavin at premolo.com  Thu Aug 17 02:39:52 2006
From: gavin at premolo.com (Gavin Panella)
Date: Thu Aug 17 02:40:02 2006
Subject: [mod_python] Using threading.local with Worker MPM
In-Reply-To: <1155793951.8971@dscpl.user.openhosting.com>
References: <1155793951.8971@dscpl.user.openhosting.com>
Message-ID: <200608170839.52621.gavin@premolo.com>

> Not that it will matter, but where are you storing the thread local
> variable? Is that in a module that can be reloaded automatically by
> mod_python?

I create the shared space object at module level, but that module is not 
loaded directly by mod_python, so I don't think it would be reloaded.

The space object is a wrapper around a dict-like object, LocalData, which is a 
subclass of threading.local. This intercepts __(get|set|del)item__ calls, 
which are then directed straight at self.__dict__ (so that I can have keys 
that are not valid identifiers).

Thing is, during a request, the id of the space object remains constant, as 
does the id of the LocalData instance (the space object holds a reference to 
it). The only thing that I have seen change so far is the id of the __dict__ 
on the LocalData instance.

I'll try and get up-to-date with mod_python and see if that helps.

Cheerio, Gavin.

-- 
Premolo S?rl
Web: http://www.premolo.com/ ; Tel: +352 26687161 ; GSM: +352 091739359
42 rue du Kiem, L-1857 Luxembourg, Grand-Duch? du Luxembourg

From dan.eloff at gmail.com  Thu Aug 17 09:42:26 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Aug 17 09:43:00 2006
Subject: [mod_python] How do you know if the current request is an internal
	redirect?
Message-ID: <4817b6fc0608170642i34f237c2i653324e8df4a58af@mail.gmail.com>

How do you know in your handler if this is an internal redirect?
req.prev is set to a req object even if there was no internal
redirect.

Thanks,
-Dan
From gavin at premolo.com  Thu Aug 17 10:04:05 2006
From: gavin at premolo.com (Gavin Panella)
Date: Thu Aug 17 10:04:16 2006
Subject: [mod_python] How do you know if the current request is an
	internal redirect?
In-Reply-To: <4817b6fc0608170642i34f237c2i653324e8df4a58af@mail.gmail.com>
References: <4817b6fc0608170642i34f237c2i653324e8df4a58af@mail.gmail.com>
Message-ID: <200608171604.05525.gavin@premolo.com>

On Thu 17 Aug 2006 15:42, Dan Eloff wrote:
> How do you know in your handler if this is an internal redirect?
> req.prev is set to a req object even if there was no internal
> redirect.

In the main request req.main is None, and in a subrequest it points back to 
the main request, so just test if it's not None.

Gavin.

-- 
Premolo S?rl
Web: http://www.premolo.com/ ; Tel: +352 26687161 ; GSM: +352 091739359
42 rue du Kiem, L-1857 Luxembourg, Grand-Duch? du Luxembourg

From dan.eloff at gmail.com  Thu Aug 17 16:37:44 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Aug 17 16:37:48 2006
Subject: [mod_python] How do you know if the current request is an
	internal redirect?
In-Reply-To: <200608171604.05525.gavin@premolo.com>
References: <4817b6fc0608170642i34f237c2i653324e8df4a58af@mail.gmail.com>
	<200608171604.05525.gavin@premolo.com>
Message-ID: <4817b6fc0608171337w10f4e016sfb5e4fb8bcf0b753@mail.gmail.com>

Hey Thanks!

-Dan

On 8/17/06, Gavin Panella <gavin@premolo.com> wrote:
> On Thu 17 Aug 2006 15:42, Dan Eloff wrote:
> > How do you know in your handler if this is an internal redirect?
> > req.prev is set to a req object even if there was no internal
> > redirect.
>
> In the main request req.main is None, and in a subrequest it points back to
> the main request, so just test if it's not None.
>
> Gavin.
>
> --
> Premolo S?rl
> Web: http://www.premolo.com/ ; Tel: +352 26687161 ; GSM: +352 091739359
> 42 rue du Kiem, L-1857 Luxembourg, Grand-Duch? du Luxembourg
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From karl.kobata at syncira.com  Fri Aug 18 03:33:11 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Aug 18 03:33:21 2006
Subject: [mod_python] wxPython
Message-ID: <20060818073316.CVAI1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>

Does any know if wxPython is supported in mod_python?

Has anyone used it to create a GUI or graphical application in a mod_python
environment?

Please let me know.

 

Thanks

karl

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060818/03c8d923/attachment.html
From NormanTindall at zdisk.net  Fri Aug 18 06:07:15 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Fri Aug 18 04:04:20 2006
Subject: [mod_python] How isolate class attributes across requests?
Message-ID: <4415742515.20060818140715@zdisk.net>

Hello,
    As i understand mod_python one interpreter per site
    default policy, if i import somemodule
    and then change attribute of class (
    for example from
            @classmethod
                  def someclass_method(cls,arg):
                  cls.atrib = arg
    or with
             setattr(class,'atrib_name',value) ).

    Then in all other requests to this site i will have this attribute
    of class changed (as they will run within same interpreter).

    Is there any methods to isolate class attributes across requests
    EXCEPT running interpreter per request, defining class within
    handler, writing code without class attributes?
    I mean elegant and high-speed solution.

    I bear in mind only one way out: to create instance of one (first)
    class, store desired attributes as an instance attributes,
    then spawn instances of other (second) class and they will have
    needed attrubutes not as class attributes but as instance of first
    class attributes.
    But i dont like it, isolating class attributes across request
    would be more elegant.
    

    By the way what is the avarage speed-drop down when using
    interpreter per request in compare with interpreter per
    directory/site?

-- 
Best regards,
 Norman                          mailto:NormanTindall@zdisk.net

From jcigar at ulb.ac.be  Fri Aug 18 04:17:09 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Fri Aug 18 04:09:24 2006
Subject: [mod_python] wxPython
In-Reply-To: <20060818073316.CVAI1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>
References: <20060818073316.CVAI1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>
Message-ID: <44E57785.5000308@ulb.ac.be>

mod_python is nothing more than a Python interpreter embedded in an 
Apache process. What do you mean by "supported" ?
Also, I wonder why you would use a GUI toolkit with mod_python .. ?

Karl Kobata wrote:
>
> Does any know if wxPython is supported in mod_python?
>
> Has anyone used it to create a GUI or graphical application in a 
> mod_python environment?
>
> Please let me know.
>
>  
>
> Thanks
>
> karl
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>   


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From NormanTindall at zdisk.net  Fri Aug 18 06:14:20 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Fri Aug 18 04:11:22 2006
Subject: [mod_python] How isolate class attributes across requests?
Message-ID: <9416168359.20060818141420@zdisk.net>

Hello,
   I mean maybe there is a way to load class or module into
   that part of interpreter that do not share with other thread,
   to load class into the thread part?

   
   
-- 
Best regards,
 Norman                          mailto:NormanTindall@zdisk.net

From richardlewis at fastmail.co.uk  Fri Aug 18 04:36:17 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Fri Aug 18 04:37:06 2006
Subject: [mod_python] wxPython
In-Reply-To: <20060818073316.CVAI1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>
References: <20060818073316.CVAI1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>
Message-ID: <200608180936.18033.richardlewis@fastmail.co.uk>

On Friday 18 August 2006 08:33, Karl Kobata wrote:
> Does any know if wxPython is supported in mod_python?
>
> Has anyone used it to create a GUI or graphical application in a mod_python
> environment?
>
> Please let me know.
>
If you try to execute wxPython code from a mod_python handler using X Windows, 
it'll just tell you that it can't create any widgets because it can't access 
the display. You probably don't mean working with wxPython on the 
server-side?

You could (and people often do) create your application logic in one set of 
modules, create an HTTP interface to the application logic using mod_python, 
and create a client GUI using wxPython. You would use urllib2 (or similar) 
from your client (wxPython) code to call the functions provided by the 
mod_python layer.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From grahamd at dscpl.com.au  Fri Aug 18 04:37:58 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 18 04:38:48 2006
Subject: [mod_python] How isolate class attributes across requests?
In-Reply-To: <4415742515.20060818140715@zdisk.net>
References: <4415742515.20060818140715@zdisk.net>
Message-ID: <95B0497E-0E58-482B-82BB-DDCA05C7CDC6@dscpl.com.au>


On 18/08/2006, at 8:07 PM, Norman Tindall wrote:

> Hello,
>     As i understand mod_python one interpreter per site
>     default policy, if i import somemodule
>     and then change attribute of class (
>     for example from
>             @classmethod
>                   def someclass_method(cls,arg):
>                   cls.atrib = arg
>     or with
>              setattr(class,'atrib_name',value) ).
>
>     Then in all other requests to this site i will have this attribute
>     of class changed (as they will run within same interpreter).

Correct. Do be aware that this would have to be done at time of
module import otherwise multiple requests in distinct threads
could fight to do it at the same time if there is not adequate thread
locking.

>     Is there any methods to isolate class attributes across requests
>     EXCEPT running interpreter per request, defining class within
>     handler, writing code without class attributes?
>     I mean elegant and high-speed solution.

You might be able to use thread local storage if your version of
Python supports it, or simply resort to a data structure which is
indexed by the thread identifier, ie., threading.currentThread().

Am not sure that would really be what you want though as
subsequent requests can reuse the same thread. Another
alternative is to use the value of 'req.connection.id'. This is a
unique ID which Apache allocates on a per process basis (I
think) to identify individual connections handled by that process.

In either case, you may need to register a request cleanup handler
to delete any temporary data which was created related to the request.

>     I bear in mind only one way out: to create instance of one (first)
>     class, store desired attributes as an instance attributes,
>     then spawn instances of other (second) class and they will have
>     needed attrubutes not as class attributes but as instance of first
>     class attributes.
>     But i dont like it, isolating class attributes across request
>     would be more elegant.

Not quite sure what you mean here, but the most common way of
having per request data is simply to store it as an attribute in the
request object itself as most of the time that will be passed around
to handlers fulfilling the request anyway. Thus:

   class RequestData:
     ...

   req.my_request_data = RequestData()

Because the request object gets destroyed at the end of the request
your request specific data will also be destroyed.

>     By the way what is the avarage speed-drop down when using
>     interpreter per request in compare with interpreter per
>     directory/site?

You can't have a distinct interpreter for each distinct request  
unless you
use prefork MPM (UNIX only) and set maximum requests per child to 1.
This would be very slow and only recommended during development
for debugging.

Maybe you can provide a better more complete example of what you
want to do.

Graham
From richardlewis at fastmail.co.uk  Fri Aug 18 05:48:52 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Fri Aug 18 05:49:00 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <1155681100.18799@dscpl.user.openhosting.com>
References: <1155681100.18799@dscpl.user.openhosting.com>
Message-ID: <200608181048.54038.richardlewis@fastmail.co.uk>

On Tuesday 15 August 2006 23:31, Graham Dumpleton wrote:
> Richard Lewis wrote ..
> >
> > Do you mean that there will be no opportunity to have code run at server
> > shutdown?
>
> Correct. Reason being that it doesn't actually work most of the time
> anyway.
>
>
> Because of how Apache is implemented, there is no reliable/safe way of
> implementing this feature. If one can't do it properly, it seems better not
> to attempt it at all.
>
Goodness! So, in my mod_python applications I often acquire database handles 
and store them in objects outside of the handler() function so that they 
persist between requests. (This is to avoid the expense of acquiring a new 
handle for every request). I then use a cleanup() function to release those 
database handles.

The implication of this is that I will no longer be able to release the 
handles at server shutdown, yes? Can anyone suggest an alternative method of 
doing this? Are there any Python tricks where you can execute code when the 
interpreter itself is about to stop? Or could I have a Python script running 
in another process which "looks in" to the mod_python process and 
periodically cleanly releases database handles?

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From grahamd at dscpl.com.au  Fri Aug 18 06:08:19 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 18 06:07:59 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <200608181048.54038.richardlewis@fastmail.co.uk>
References: <1155681100.18799@dscpl.user.openhosting.com>
	<200608181048.54038.richardlewis@fastmail.co.uk>
Message-ID: <DB03AC04-3385-4AB2-A199-0EAD40203137@dscpl.com.au>


On 18/08/2006, at 7:48 PM, Richard Lewis wrote:

> On Tuesday 15 August 2006 23:31, Graham Dumpleton wrote:
>> Richard Lewis wrote ..
>>>
>>> Do you mean that there will be no opportunity to have code run at  
>>> server
>>> shutdown?
>>
>> Correct. Reason being that it doesn't actually work most of the time
>> anyway.
>>
>>
>> Because of how Apache is implemented, there is no reliable/safe  
>> way of
>> implementing this feature. If one can't do it properly, it seems  
>> better not
>> to attempt it at all.
>>
> Goodness! So, in my mod_python applications I often acquire  
> database handles
> and store them in objects outside of the handler() function so that  
> they
> persist between requests. (This is to avoid the expense of  
> acquiring a new
> handle for every request).

And you can still do that.

> I then use a cleanup() function to release those
> database handles.
>
> The implication of this is that I will no longer be able to release  
> the
> handles at server shutdown, yes?

I think you miss what I have been saying. That it doesn't work now.  
If you
were to put calls to apache.log_error() in your cleanup handler and  
shutdown
Apache when it is handling a decent amount of traffic, you will probably
find your cleanup functions aren't actually being called, or if they  
do, they
might not exit and will hang at some point. What you are more likely  
to see
in the Apache log is a series of SIGTERM signals being sent and then a
SIGKILL signal which is forcibly killing off the process.

> Can anyone suggest an alternative method of
> doing this? Are there any Python tricks where you can execute code  
> when the
> interpreter itself is about to stop?

Python does have means of calling code on application shutdown, but
because of how Apache uses signals to shutdown processes and how
the Apache main loop works, with the main loop being managed
by Apache and not Python they can't be used either.

> Or could I have a Python script running
> in another process which "looks in" to the mod_python process and
> periodically cleanly releases database handles?

No.

In the greater scheme of things it shouldn't ultimately matter. This  
is because
your database server is going to notice that the connections to it  
have been
dropped and will cleanup the resources on its side anyway. It has to  
do this
as there is nothing to say that Apache or any client process connecting
to it will not simply crash without cleanly disconnecting. In other  
words, you
will not get resource leaks. That things didn't get cleanup in the  
Apache child
process doesn't matter as it has been killed anyway, with all its  
memory being
released back to operating system.

Graham



From nlv11281 at natlab.research.philips.com  Fri Aug 18 06:15:01 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Fri Aug 18 06:15:10 2006
Subject: [Fwd: Re: [mod_python] server shutdown [was] i beg...]
Message-ID: <44E59325.1030605@natlab.research.philips.com>

Richard Lewis wrote:
>>Richard Lewis wrote ..
...
> The implication of this is that I will no longer be able to release the 
> handles at server shutdown, yes?...

When apache shuts down, your process ends. Any system handle in use by
your program will be released. If your database uses a socket or similar
mechanism (pipe, shared memory) for cummunications (I have yet to see a
database that doesn't), that connection will shut down as well. Result:
You will not leak database connections. Ever. So don't bother attempting
to clean that which would be cleaned up anyway.

-- 
Mike Looijmans
Philips Natlab / Topic Automation

From richardlewis at fastmail.co.uk  Fri Aug 18 06:26:27 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Fri Aug 18 06:41:42 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <DB03AC04-3385-4AB2-A199-0EAD40203137@dscpl.com.au>
References: <1155681100.18799@dscpl.user.openhosting.com>
	<200608181048.54038.richardlewis@fastmail.co.uk>
	<DB03AC04-3385-4AB2-A199-0EAD40203137@dscpl.com.au>
Message-ID: <200608181126.28840.richardlewis@fastmail.co.uk>

On Friday 18 August 2006 11:08, you wrote:
> On 18/08/2006, at 7:48 PM, Richard Lewis wrote:
> > I then use a cleanup() function to release those
> > database handles.
> >
> > The implication of this is that I will no longer be able to release
> > the
> > handles at server shutdown, yes?
>
> I think you miss what I have been saying. That it doesn't work now.
> If you
> were to put calls to apache.log_error() in your cleanup handler and
> shutdown
> Apache when it is handling a decent amount of traffic, you will probably
> find your cleanup functions aren't actually being called, or if they
> do, they
> might not exit and will hang at some point. What you are more likely
> to see
> in the Apache log is a series of SIGTERM signals being sent and then a
> SIGKILL signal which is forcibly killing off the process.
>
Yes, sorry. I did get that, and, yes, I have sometimes noticed SIGKILLs in my 
Apache error log and, yes, I had worked out from your last message that this 
was the cause of them. Really, I should have asked in the present, not future 
tense!

> In the greater scheme of things it shouldn't ultimately matter. This
> is because
> your database server is going to notice that the connections to it
> have been
> dropped and will cleanup the resources on its side anyway. It has to
> do this
> as there is nothing to say that Apache or any client process connecting
> to it will not simply crash without cleanly disconnecting. In other
> words, you
> will not get resource leaks. That things didn't get cleanup in the
> Apache child
> process doesn't matter as it has been killed anyway, with all its
> memory being
> released back to operating system.
>
So I suppose I'm worrying unnecessarily. I know MySQL doesn't care whether you 
call the Python bindings' close() function or not. But the Berkeley DB XML 
Python bindings /say/ that you should make sure that the close() function 
gets called before the connection object is destroyed. But, as you say, it 
won't cause connection leaks, so I suppose I should just not worry about it.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From ibr at radix50.net  Fri Aug 18 09:36:28 2006
From: ibr at radix50.net (Baurzhan Ismagulov)
Date: Fri Aug 18 09:36:34 2006
Subject: [mod_python] advice for a multilingual app
Message-ID: <20060818133628.GF21354@radix50.net>

Hello,

I'm going to create a web site that will have the same content in
several languages and some additional services for registered users.
User preferences (like the UI language) should be preserved within a
session, also with cookies disabled. Additional services may require
cookies.

Long-term goals are:

* Minimalism. Anything not explicitly enabled is disabled. A framework,
  if any, is preferably a set of libraries rather than a run-time with
  hooks.

* Developer efficiency and maintainability through the optimal program
  and data organization, concise expressions and avoidance of
  unnecessary manual work (like updating the same code in five pages, or
  not using available free frameworks). E.g., pages in different
  languages could be organized like sources using gettext: single master
  page with the text in the primary language inline (and not as a macro
  defined in the language-specific file), pages in other languages are
  generated using other files.

* Performance through caching and minimum dynamism. E.g., pages in
  different languages could be generated once (either via make before
  deployment, or on the first page access).

I'm going to use mod_python with the PSP handler. All texts and links
seem to have to be generated. I'm going to develop new code for that.
mod_python seems to handle sessions using cookies.

Now, the question. The last time I developed web apps was 2000, at that
time I was using PHP for a small intranet. I don't know whether the
above concerns are of any importance for a busy web site. So I would be
happy if you could share your experience regarding what to pay attention
at. A secure Python programming guide and framework recommendations
would be welcome. E.g., I couldn't find any standalone input sanitizing
functions for SQL or HTML. I've looked at WebFrameworks on the wiki and
read a little about AHTS, Albatross, and markup. However, they don't
seem to do exactly what I want.

Thanks in advance,
Baurzhan.
From gavin at premolo.com  Fri Aug 18 09:49:47 2006
From: gavin at premolo.com (Gavin Panella)
Date: Fri Aug 18 09:49:59 2006
Subject: [mod_python] How do you know if the current request is an
	internal redirect?
In-Reply-To: <200608171604.05525.gavin@premolo.com>
References: <4817b6fc0608170642i34f237c2i653324e8df4a58af@mail.gmail.com>
	<200608171604.05525.gavin@premolo.com>
Message-ID: <200608181549.47440.gavin@premolo.com>

> > How do you know in your handler if this is an internal redirect?
> > req.prev is set to a req object even if there was no internal
> > redirect.
>
> In the main request req.main is None, and in a subrequest it points back to
> the main request, so just test if it's not None.

Actually, this isn't true, for me at least. I've been doing internal 
redirections with mod_python 3.1.4 and Apache 2.0.58 on Linux and getting the 
following:

Main request:
	req.main is None
	req.prev is None

Subrequest:
	req.main is None
	req.prev is not None

Perhaps that's fixed in a later version, or I have misunderstood something. 
Additionally, when issuing req.internal_redirect(...), mod_rewrite does not 
think it is a subrequest either ("RewriteCond %{IS_SUBREQ} true" does not 
match).

Cheerio, Gavin.

-- 
Premolo S?rl
Web: http://www.premolo.com/ ; Tel: +352 26687161 ; GSM: +352 091739359
42 rue du Kiem, L-1857 Luxembourg, Grand-Duch? du Luxembourg

From karl.kobata at syncira.com  Fri Aug 18 10:03:31 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Aug 18 10:03:44 2006
Subject: [mod_python] wxPython
In-Reply-To: <44E57785.5000308@ulb.ac.be>
Message-ID: <20060818140338.FJHO1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>

Hi Julien,

The hope for my application was to develop and maintain a single source of
gui that could be applied either as a server-side application if used over
the web, and a client application if used on a workstation/desktop.  This
also provides the added benefit of familiar look and feel for the
application.

Thanks
karl

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Julien Cigar
Sent: Friday, August 18, 2006 1:17 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] wxPython

mod_python is nothing more than a Python interpreter embedded in an 
Apache process. What do you mean by "supported" ?
Also, I wonder why you would use a GUI toolkit with mod_python .. ?

Karl Kobata wrote:
>
> Does any know if wxPython is supported in mod_python?
>
> Has anyone used it to create a GUI or graphical application in a 
> mod_python environment?
>
> Please let me know.
>
>  
>
> Thanks
>
> karl
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>   


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From karl.kobata at syncira.com  Fri Aug 18 10:05:11 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Aug 18 10:05:33 2006
Subject: [mod_python] wxPython
In-Reply-To: <200608180936.18033.richardlewis@fastmail.co.uk>
Message-ID: <20060818140517.FJOM1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>


Hi Richard,

Understand.  I am not familiar with urllib2.  where can I find information
about it.

Thanks
karl
-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Richard Lewis
Sent: Friday, August 18, 2006 1:36 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] wxPython

On Friday 18 August 2006 08:33, Karl Kobata wrote:
> Does any know if wxPython is supported in mod_python?
>
> Has anyone used it to create a GUI or graphical application in a
mod_python
> environment?
>
> Please let me know.
>
If you try to execute wxPython code from a mod_python handler using X
Windows, 
it'll just tell you that it can't create any widgets because it can't access

the display. You probably don't mean working with wxPython on the 
server-side?

You could (and people often do) create your application logic in one set of 
modules, create an HTTP interface to the application logic using mod_python,

and create a client GUI using wxPython. You would use urllib2 (or similar) 
from your client (wxPython) code to call the functions provided by the 
mod_python layer.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From richardlewis at fastmail.co.uk  Fri Aug 18 10:14:24 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Fri Aug 18 10:14:37 2006
Subject: [mod_python] wxPython
In-Reply-To: <20060818140517.FJOM1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>
References: <20060818140517.FJOM1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>
Message-ID: <200608181514.26223.richardlewis@fastmail.co.uk>

On Friday 18 August 2006 15:05, you wrote:
>
> Understand.  I am not familiar with urllib2.  where can I find information
> about it.
>
Its a standard library module:
http://docs.python.org/lib/module-urllib2.html

R.
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From dbizier at gecko-electronic.com  Fri Aug 18 10:45:08 2006
From: dbizier at gecko-electronic.com (David Bizier)
Date: Fri Aug 18 10:45:11 2006
Subject: [mod_python] Problem with mod_python and send data with a form
Message-ID: <C10B4AB4.5CA2%dbizier@gecko-electronic.com>

Hi,

I'm a beginner with mod_python and Python (also with english langage,
sorry). I tried some exemple code and all works fine!

Unfortunately, I have a problem to send data with a form (POST ou GET) to a
.py script file. When I try to send data to my .py file, with Firefox, I see
a blank page, without text or error message.

Here is my form (export.php):

------------------
<html>
   <body>
  <FORM name="frm1" action="scripts/python/toto.py/say" method="POST">
    <TABLE>
      <TR>
        <TD>First Name: </TD>
        <TD><INPUT type="text" name="firstname" value="Bob"></TD>
      </TR>
      <TR>
        <TD colspan="2" align="center"><INPUT type="submit" value="Go"></TD>
      </TR>
    </TABLE>
  </FORM>
   </body>
</html>
--------------------

And here is my python page (toto.py):

-------------------
from mod_python import apache
from mod_python import util

def say(req, firstname="NOTHING"):
     req.content_type = "text/html"
     return "I am saying %s" % firstname
-------------------

I have found a apache config file, on my server, with these lines:

        "...
        <IfModule mod_python.c>
        <Files ~ (\.py$)>
                SetHandler python-program
                PythonHandler   mod_python.cgihandler
        </Files>
        </IfModule>

        "...'

        </Directory>

        <Directory /var/www/vhosts/monSiteWeb.com/httpdocs/scripts/python>
                Options -Indexes FollowSymLinks MultiViews
                AllowOverride All
                AddHandler mod_python .py
                PythonHandler mod_python.publisher
                PythonDebug On
        </Directory>

Thanks for your help! I would like to find an answer shortly to continue my
project!

Regards,
David

 

From davidf at sjsoft.com  Fri Aug 18 10:52:17 2006
From: davidf at sjsoft.com (David Fraser)
Date: Fri Aug 18 11:16:21 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <DB03AC04-3385-4AB2-A199-0EAD40203137@dscpl.com.au>
References: <1155681100.18799@dscpl.user.openhosting.com>	<200608181048.54038.richardlewis@fastmail.co.uk>
	<DB03AC04-3385-4AB2-A199-0EAD40203137@dscpl.com.au>
Message-ID: <44E5D421.9020105@sjsoft.com>

Graham Dumpleton wrote:
>
> On 18/08/2006, at 7:48 PM, Richard Lewis wrote:
>
>> On Tuesday 15 August 2006 23:31, Graham Dumpleton wrote:
>>> Richard Lewis wrote ..
>>>>
>>>> Do you mean that there will be no opportunity to have code run at 
>>>> server
>>>> shutdown?
>>>
>>> Correct. Reason being that it doesn't actually work most of the time
>>> anyway.
>>>
>>>
>>> Because of how Apache is implemented, there is no reliable/safe way of
>>> implementing this feature. If one can't do it properly, it seems 
>>> better not
>>> to attempt it at all.
>>>
>> Goodness! So, in my mod_python applications I often acquire database 
>> handles
>> and store them in objects outside of the handler() function so that they
>> persist between requests. (This is to avoid the expense of acquiring 
>> a new
>> handle for every request).
>
> And you can still do that.
>
>> I then use a cleanup() function to release those
>> database handles.
>>
>> The implication of this is that I will no longer be able to release the
>> handles at server shutdown, yes?
>
> I think you miss what I have been saying. That it doesn't work now. If 
> you
> were to put calls to apache.log_error() in your cleanup handler and 
> shutdown
> Apache when it is handling a decent amount of traffic, you will probably
> find your cleanup functions aren't actually being called, or if they 
> do, they
> might not exit and will hang at some point. What you are more likely 
> to see
> in the Apache log is a series of SIGTERM signals being sent and then a
> SIGKILL signal which is forcibly killing off the process.
>
>> Can anyone suggest an alternative method of
>> doing this? Are there any Python tricks where you can execute code 
>> when the
>> interpreter itself is about to stop?
>
> Python does have means of calling code on application shutdown, but
> because of how Apache uses signals to shutdown processes and how
> the Apache main loop works, with the main loop being managed
> by Apache and not Python they can't be used either.
>
>> Or could I have a Python script running
>> in another process which "looks in" to the mod_python process and
>> periodically cleanly releases database handles?
>
> No.
>
> In the greater scheme of things it shouldn't ultimately matter. This 
> is because
> your database server is going to notice that the connections to it 
> have been
> dropped and will cleanup the resources on its side anyway. It has to 
> do this
> as there is nothing to say that Apache or any client process connecting
> to it will not simply crash without cleanly disconnecting. In other 
> words, you
> will not get resource leaks. That things didn't get cleanup in the 
> Apache child
> process doesn't matter as it has been killed anyway, with all its 
> memory being
> released back to operating system. 
So you are saying:
1) There is a mechanism for cleaning up code
2) This mechanism is not reliable
3) Since databases have to assume clients are not reliable, they clean 
up for them anyway
4) Therefore we should not even try to clean up

I'm with you on points 1, 2, and 3, but I think point 4 is taking it a 
bit too far...
Surely there must be *some* value in trying to clean up behind yourself, 
sometimes?

David
From NormanTindall at zdisk.net  Fri Aug 18 14:26:21 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Fri Aug 18 12:23:16 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <44E5D421.9020105@sjsoft.com>
References: <1155681100.18799@dscpl.user.openhosting.com>
	<200608181048.54038.richardlewis@fastmail.co.uk>
	<DB03AC04-3385-4AB2-A199-0EAD40203137@dscpl.com.au>
	<44E5D421.9020105@sjsoft.com>
Message-ID: <10645688796.20060818222621@zdisk.net>

Hello,

DF> So you are saying:
DF> 1) There is a mechanism for cleaning up code
DF> 2) This mechanism is not reliable
DF> 3) Since databases have to assume clients are not reliable, they clean 
DF> up for them anyway
DF> 4) Therefore we should not even try to clean up

DF> I'm with you on points 1, 2, and 3, but I think point 4 is taking it a 
DF> bit too far...
DF> Surely there must be *some* value in trying to clean up behind yourself, 
DF> sometimes?
    I am not sure if i understand right,
    but as i see the problem is to close connection or to
    return it to pool.

    Don`t know how about publisher and PSP, but in handler
    you always can at the end of processing, just before
    return apache.OK close connection , more better thing is to
    use 'try finnaly' and process all the stuff you need
    (selects,insert,..) in 'try' while conn.close() (or return to pool)
    if 'finnaly'.

    As i know 'finnaly' happens before 'return' statement even if
    'return' in 'try'.

    I think the same can be easily done with Publisher and PSP.

    Am i right Graham?



-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From karl.kobata at syncira.com  Fri Aug 18 12:23:09 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Aug 18 12:23:24 2006
Subject: [mod_python] wxPython
In-Reply-To: <200608181514.26223.richardlewis@fastmail.co.uk>
Message-ID: <20060818162315.GVEB1346.rrcs-fep-11.hrndva.rr.com@syncirakklap>


Thanks Richard

karl

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Richard Lewis
Sent: Friday, August 18, 2006 7:14 AM
To: mod_python@modpython.org
Subject: Re: [mod_python] wxPython

On Friday 18 August 2006 15:05, you wrote:
>
> Understand.  I am not familiar with urllib2.  where can I find information
> about it.
>
Its a standard library module:
http://docs.python.org/lib/module-urllib2.html

R.
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From richardlewis at fastmail.co.uk  Fri Aug 18 13:19:41 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Fri Aug 18 13:19:49 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <10645688796.20060818222621@zdisk.net>
References: <1155681100.18799@dscpl.user.openhosting.com>
	<44E5D421.9020105@sjsoft.com>
	<10645688796.20060818222621@zdisk.net>
Message-ID: <200608181819.42452.richardlewis@fastmail.co.uk>

On Friday 18 August 2006 19:26, Norman Tindall wrote:
>     Don`t know how about publisher and PSP, but in handler
>     you always can at the end of processing, just before
>     return apache.OK close connection
Yes, but I want to avoid opening and closing the connection to Berkeley DB XML 
for /every/ request as its quite slow to connect. Thats why I open it when 
the server starts and wanted to be able to close it when the server shuts 
down.

R.
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From David.Bear at asu.edu  Fri Aug 18 13:45:55 2006
From: David.Bear at asu.edu (David Bear)
Date: Fri Aug 18 13:45:59 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <200608181819.42452.richardlewis@fastmail.co.uk>
References: <1155681100.18799@dscpl.user.openhosting.com>
	<44E5D421.9020105@sjsoft.com>
	<10645688796.20060818222621@zdisk.net>
	<200608181819.42452.richardlewis@fastmail.co.uk>
Message-ID: <20060818174555.GA15867@asu.edu>

On Fri, Aug 18, 2006 at 06:19:41PM +0100, Richard Lewis wrote:
> On Friday 18 August 2006 19:26, Norman Tindall wrote:
> >     Don`t know how about publisher and PSP, but in handler
> >     you always can at the end of processing, just before
> >     return apache.OK close connection
> Yes, but I want to avoid opening and closing the connection to Berkeley DB XML 
> for /every/ request as its quite slow to connect. Thats why I open it when 
> the server starts and wanted to be able to close it when the server shuts 
> down.

I've thought about these issues and was wondering if it would be
better to pre-create the data base connection, and maybe even the
cursor in a completely separate process. Then have modpython
communicate to it via a simple local socket. I assume there still is
overhead when create a local socket -- but it might be less then a
data base connection.

It might be tempting to want to layer a whole new light protocol on
top of that when sending data to the socket -- but maybe sending a
simple python pickle would be enough.

As a side, is there any difference in communicating via a socket and a
unix pipe?
-- 
David Bear
phone: 	602-496-0424
fax: 	602-496-0955
College of Public Programs/ASU
University Center Rm 622
411 N Central
Phoenix, AZ 85007-0685
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From nferrier at tapsellferrier.co.uk  Fri Aug 18 14:38:14 2006
From: nferrier at tapsellferrier.co.uk (Nic James Ferrier)
Date: Fri Aug 18 14:47:07 2006
Subject: [mod_python] server shutdown
In-Reply-To: <20060818174555.GA15867@asu.edu> (David Bear's message of "Fri,
	18 Aug 2006 10:45:55 -0700")
References: <1155681100.18799@dscpl.user.openhosting.com>
	<44E5D421.9020105@sjsoft.com> <10645688796.20060818222621@zdisk.net>
	<200608181819.42452.richardlewis@fastmail.co.uk>
	<20060818174555.GA15867@asu.edu>
Message-ID: <87u04928kp.fsf@nicferrier.tapsellferrier.co.uk>

David Bear <David.Bear@asu.edu> writes:

> I've thought about these issues and was wondering if it would be
> better to pre-create the data base connection, and maybe even the
> cursor in a completely separate process. Then have modpython
> communicate to it via a simple local socket. I assume there still is
> overhead when create a local socket -- but it might be less then a
> data base connection.
>
> It might be tempting to want to layer a whole new light protocol on
> top of that when sending data to the socket -- but maybe sending a
> simple python pickle would be enough.

Check out sqlrelay:

  http://sqlrelay.sourceforge.net/sqlrelay/

it is based on exactly this idea.


> As a side, is there any difference in communicating via a socket and a
> unix pipe?

Sockets are more expensive to establish.

But after that it's just writes and reads.

Of course, latency on a unix socket is lower because there is no
protocol encoding/decoding.


-- 
Nic Ferrier
http://www.tapsellferrier.co.uk   for all your tapsell ferrier needs
From NormanTindall at zdisk.net  Fri Aug 18 17:30:46 2006
From: NormanTindall at zdisk.net (Norman Tindall)
Date: Fri Aug 18 15:27:43 2006
Subject: [mod_python] server shutdown [was] i beg...
In-Reply-To: <200608181819.42452.richardlewis@fastmail.co.uk>
References: <1155681100.18799@dscpl.user.openhosting.com>
	<44E5D421.9020105@sjsoft.com> <10645688796.20060818222621@zdisk.net>
	<200608181819.42452.richardlewis@fastmail.co.uk>
Message-ID: <13556753578.20060819013046@zdisk.net>

Hello Richard,

RL> On Friday 18 August 2006 19:26, Norman Tindall wrote:
>>     Don`t know how about publisher and PSP, but in handler
>>     you always can at the end of processing, just before
>>     return apache.OK close connection
RL> Yes, but I want to avoid opening and closing the connection to Berkeley DB XML 
RL> for /every/ request as its quite slow to connect. Thats why I open it when 
RL> the server starts and wanted to be able to close it when the server shuts 
RL> down.
    Hmm.. why dont you use a connection pooling?
    Here is some examples of code, i never tested them,(because i need
    a more complicated pool that will connect to different
    databases  and select db according to a virtual host, and also
    conn in it will be created balanced to the avarage virtual host load)
    but it seems have to work.

    Dont remember from where i draged this examples, sorry if any
    copyrights :)
    http://zdisk.net/pool/conn_pool.txt
    http://zdisk.net/pool/conn_pool_eng.txt
    http://zdisk.net/pool/conn_sharing.txt
    http://zdisk.net/pool/dustman_pool.txt

    You can also search mod_python mail list for a conn pooling theme.
    And Google.

1) I suppose.
   If you use one db connection:
    I think conn pooling would give you more gain.
    At the end of request conn return back to pool.
    If there is no connections on pool they created.
    If you try to return to pool conn when it is full -> conn droped.

2) About the server shutdown.
   Anyway of you are using pool or not, in my opinion server sutdown
   do not have to be more frequient than once a week.
   So i can get why you are in so worry about connection close at
   shutdown. I can be ignored. Database will close the connection by
   timeout anyway, i think that`s not a kind of thing when you know
   you are opening 100 connections in a second and say 5-10 not
   closed - this is real bad.
   Onse a week or say 2 days one connection wont be closed.. so what`s
   a big deal?

   The thing that is matter - is a database integrity.

   


I am novice in python and programming :)
Sorry for my english :)
-- 
Best regards,
 Norman                            mailto:NormanTindall@zdisk.net

From grahamd at dscpl.com.au  Fri Aug 18 19:03:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 18 19:02:47 2006
Subject: [mod_python] advice for a multilingual app
In-Reply-To: <20060818133628.GF21354@radix50.net>
References: <20060818133628.GF21354@radix50.net>
Message-ID: <64D29DE0-671B-4DF8-92A4-62DB1553A970@dscpl.com.au>

PSP has some issues with Unicode and you would have to build your
framework for supporting multiple languages.

What you might be better of doing is using something like Django which
has actual framework support for internationalisation and multiple
languages. You can still run Django on top of mod_python to get
some of the benefits that come from using Apache as a base.

For details see:

   http://www.djangoproject.com

Graham

On 18/08/2006, at 11:36 PM, Baurzhan Ismagulov wrote:

> Hello,
>
> I'm going to create a web site that will have the same content in
> several languages and some additional services for registered users.
> User preferences (like the UI language) should be preserved within a
> session, also with cookies disabled. Additional services may require
> cookies.
>
> Long-term goals are:
>
> * Minimalism. Anything not explicitly enabled is disabled. A  
> framework,
>   if any, is preferably a set of libraries rather than a run-time with
>   hooks.
>
> * Developer efficiency and maintainability through the optimal program
>   and data organization, concise expressions and avoidance of
>   unnecessary manual work (like updating the same code in five  
> pages, or
>   not using available free frameworks). E.g., pages in different
>   languages could be organized like sources using gettext: single  
> master
>   page with the text in the primary language inline (and not as a  
> macro
>   defined in the language-specific file), pages in other languages are
>   generated using other files.
>
> * Performance through caching and minimum dynamism. E.g., pages in
>   different languages could be generated once (either via make before
>   deployment, or on the first page access).
>
> I'm going to use mod_python with the PSP handler. All texts and links
> seem to have to be generated. I'm going to develop new code for that.
> mod_python seems to handle sessions using cookies.
>
> Now, the question. The last time I developed web apps was 2000, at  
> that
> time I was using PHP for a small intranet. I don't know whether the
> above concerns are of any importance for a busy web site. So I  
> would be
> happy if you could share your experience regarding what to pay  
> attention
> at. A secure Python programming guide and framework recommendations
> would be welcome. E.g., I couldn't find any standalone input  
> sanitizing
> functions for SQL or HTML. I've looked at WebFrameworks on the wiki  
> and
> read a little about AHTS, Albatross, and markup. However, they don't
> seem to do exactly what I want.
>
> Thanks in advance,
> Baurzhan.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Aug 18 20:00:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 18 19:59:58 2006
Subject: [mod_python] Problem with mod_python and send data with a form
In-Reply-To: <C10B4AB4.5CA2%dbizier@gecko-electronic.com>
References: <C10B4AB4.5CA2%dbizier@gecko-electronic.com>
Message-ID: <BD212FEE-78DE-4B30-B7D1-721605622D55@dscpl.com.au>

On visual examination, I can't see anything specifically that looks  
wrong.

There is a potential conflict due to .py files being setup as both  
cgihandler
and publisher. I think that that in the Directory directive should take
precedence but I am not totally sure, as the Files one is at global  
scope
and may actually get merged with the other to create a scenario where
it might want to call both cgihandler and publisher in turn. If this  
were the
case it would fail as your file is not setup as a cgihandler.

If you can, see if you can get hold of any error messages from the  
Apache
error log related to your attempt to make the request. Can you also  
use a
command line program such as curl or wget to make a request against
the URL so you can see the actual error code that comes back and any
raw content in the response. You may be able to do this if you have  
certain
debug plugins for Firefox (don't know what they are called).

Finally, have you tried a straight GET request from your browser against
that URL, ie., don't use a POST form. Does it return anything in that  
situation.
Also, where is your export.php page. Based on action it would have to be
in root directory of site, is that the case?

Anyone else spot anything obvious I am missing?

Graham

On 19/08/2006, at 12:45 AM, David Bizier wrote:

> Hi,
>
> I'm a beginner with mod_python and Python (also with english langage,
> sorry). I tried some exemple code and all works fine!
>
> Unfortunately, I have a problem to send data with a form (POST ou  
> GET) to a
> .py script file. When I try to send data to my .py file, with  
> Firefox, I see
> a blank page, without text or error message.
>
> Here is my form (export.php):
>
> ------------------
> <html>
>    <body>
>   <FORM name="frm1" action="scripts/python/toto.py/say" method="POST">
>     <TABLE>
>       <TR>
>         <TD>First Name: </TD>
>         <TD><INPUT type="text" name="firstname" value="Bob"></TD>
>       </TR>
>       <TR>
>         <TD colspan="2" align="center"><INPUT type="submit"  
> value="Go"></TD>
>       </TR>
>     </TABLE>
>   </FORM>
>    </body>
> </html>
> --------------------
>
> And here is my python page (toto.py):
>
> -------------------
> from mod_python import apache
> from mod_python import util
>
> def say(req, firstname="NOTHING"):
>      req.content_type = "text/html"
>      return "I am saying %s" % firstname
> -------------------
>
> I have found a apache config file, on my server, with these lines:
>
>         "...
>         <IfModule mod_python.c>
>         <Files ~ (\.py$)>
>                 SetHandler python-program
>                 PythonHandler   mod_python.cgihandler
>         </Files>
>         </IfModule>
>
>         "...'
>
>         </Directory>
>
>         <Directory /var/www/vhosts/monSiteWeb.com/httpdocs/scripts/ 
> python>
>                 Options -Indexes FollowSymLinks MultiViews
>                 AllowOverride All
>                 AddHandler mod_python .py
>                 PythonHandler mod_python.publisher
>                 PythonDebug On
>         </Directory>
>
> Thanks for your help! I would like to find an answer shortly to  
> continue my
> project!
>
> Regards,
> David
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From webograph at eml.cc  Fri Aug 18 20:06:13 2006
From: webograph at eml.cc (webograph)
Date: Fri Aug 18 20:06:19 2006
Subject: [mod_python] Re: Enhancements for better content negotiation
Message-ID: <44E655F5.70602@eml.cc>

hi deron,

from my understanding, this mod_python would be the preferrable place to 
put such functions (even better, mod_python could use apache 
functionality for this, but i don't know enough about the interaction 
btwn apache and mod_python to say whether this is feasible or not)

 > * Is this something that seems useful to others?
absolutely yes! could you post it?

regards
webograph

On Thu, 02 Feb 2006 22:30:52 GMT, Deron Meranda wrote:

> Essentially I have functions that:
> 
>  1. Parse and sort any Accept-* header according to the RFC's BNF
>  2. Negotiate the best content type
>  3. Negotiate the best language
>  4. Negotiate the best encoding
>  5. Negotiate the best charset
> 
> It also knows how to handle wildcards, hierarchical language tags,
> charset name aliases, etc.  And you can tell it to ignore the "super"
> wildcards like */* too.
> 
> As a quick example you can do something like
> 
>   acc = req.headers_in['Accept']
>   ct = acceptable_content_type( acc, ['text/html','application/xhtml+xml'] )
> 
> and it will tell you which of the two formats the browser supports/prefers,
> if either, according to all the complex rules in the RFC.
> 
> I have some preliminary questions:
> 
> * Is this something that seems useful to others?
> * Is mod_python util a preferable place to consider putting these,
> or maybe this should perhaps go to something larger like
> WSGI or some other Web-SIG project?


(sorry for faking this reply -- i found the original mail in the http 
archive)
From max.luebbe at gmail.com  Sat Aug 19 03:45:46 2006
From: max.luebbe at gmail.com (Max Luebbe)
Date: Sat Aug 19 03:45:50 2006
Subject: [mod_python] Adding the current directory to the import path
Message-ID: <1155973546.13630.8.camel@localhost>

I've been having a problem in mod_python with importing modules that I
have written that aren't in the standard python libraries.

If i test my code in a normal python environment, everything works great
- however when I try it out in mod_python i get import errors, and it
does not want to locate my custom modules. What makes it weirder is that
my folder with authentication set up as an apache directive, lets me
import custom modules from the folder, but my regular folder for holding
my scripts wont.

How do I add the current directory to the import search path?
Is this what I should be doing?

I'm trying to take advantage of some code reuse, and it would be great
if somebody has any ideas on what has been a huge annoyance to me.

-Max

From tandrews at grok.co.za  Sat Aug 19 03:54:36 2006
From: tandrews at grok.co.za (Thomas Andrews)
Date: Sat Aug 19 03:54:51 2006
Subject: [mod_python] templates in stead of PSP
Message-ID: <20060819075436.GA15919@grok.co.za>

Hi,

I would like to use a templating 'language' like cheetah/kid/markup/spyce(?)
instead of straight PSP. I don't want to run webware/turbogears/... in
addition - I just want apache on it's own. Has anyone done this?

I don't really mind at present which templating app I have to use, so
long as I can get a working recipe, (though I'd *really* rather not use
cgi to do it.)

I tried to get kid going using the apache config below, but no matter
what I try I get errors from apache:

>From syslog:

    "Invalid URI in request GET /kid/sysinfo.kid HTTP/1.1, referer:
    http://localhost/kid/"

The error reported in the browser is:

    Bad Request
    Your browser sent a request that this server could not understand.
    Apache/2.0.55 (Debian) mod_python/3.1.3 Python/2.3.5 PHP/4.4.2-1.1
    Server at localhost Port 80

Here's my Apache config:

    # ++++++++++++++++++++++++++++++++++
    Alias /kid/ /var/www/kid/

    <Directory /var/www/kid/>
        Options +ExecCGI
        Action kid-file kid_handler.cgi
        AddHandler kid-file .kid
    </Directory>
    # ++++++++++++++++++++++++++++++++++

What can I be doing wrong in the "Action" line above?

Can anyone provide me with a basic working setup for any of the above
apps? (It doesn't have to be Kid.)

Many thanks,
Thomas

From grahamd at dscpl.com.au  Sat Aug 19 03:58:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Aug 19 03:58:00 2006
Subject: [mod_python] Adding the current directory to the import path
In-Reply-To: <1155973546.13630.8.camel@localhost>
References: <1155973546.13630.8.camel@localhost>
Message-ID: <69079E30-32E6-4879-8F79-A2C58F48012E@dscpl.com.au>


On 19/08/2006, at 5:45 PM, Max Luebbe wrote:

> I've been having a problem in mod_python with importing modules that I
> have written that aren't in the standard python libraries.
>
> If i test my code in a normal python environment, everything works  
> great
> - however when I try it out in mod_python i get import errors, and it
> does not want to locate my custom modules. What makes it weirder is  
> that
> my folder with authentication set up as an apache directive, lets me
> import custom modules from the folder, but my regular folder for  
> holding
> my scripts wont.
>
> How do I add the current directory to the import search path?
> Is this what I should be doing?
>
> I'm trying to take advantage of some code reuse, and it would be great
> if somebody has any ideas on what has been a huge annoyance to me.

There are various problems with module import in currently available  
versions
of mod_python. See:

   http://www.dscpl.com.au/articles/modpython-003.html

for further details.

Most of the issues will be addressed in mod_python 3.3.

There are two ways you can get around the problem. Not sure which is  
most
appropriate given your circumstances.

First is to use PythonPath directive to specify extra directories to  
search. This
is the same as setting PYTHON_PATH environment variable for command
line Python.

Second is to use the apache.import_module() function to import modules,
specifying a path argument of directories to search. Ie.,

   module = apache.import_module("name", path=['/some/path'])

Check the mod_python documentation.

Sorry for brief reply, in a rush.


Graham
From ibr at radix50.net  Sat Aug 19 06:52:36 2006
From: ibr at radix50.net (Baurzhan Ismagulov)
Date: Sat Aug 19 06:52:42 2006
Subject: [mod_python] advice for a multilingual app
In-Reply-To: <64D29DE0-671B-4DF8-92A4-62DB1553A970@dscpl.com.au>
References: <20060818133628.GF21354@radix50.net>
	<64D29DE0-671B-4DF8-92A4-62DB1553A970@dscpl.com.au>
Message-ID: <20060819105236.GA7270@radix50.net>

Hello Graham,

On Sat, Aug 19, 2006 at 09:03:04AM +1000, Graham Dumpleton wrote:
> PSP has some issues with Unicode

Oh, thanks for the alert! If I understand
http://www.mail-archive.com/dev@httpd.apache.org/msg33443.html
correctly, Publisher handler is the only way to get Unicode working with
mod_python. If I have to use Publisher, it makes sense to look at
Django. It's a pity I don't have time to add Unicode support to flex :) .


> and you would have to build your framework for supporting multiple
> languages.

Well, the framework is as simple as following ('ru' is embedded anywhere
in the request):

<%
import gettext
dir = req.hlist.directory
gettext.install('i18n', dir, unicode=True)
gettext.translation('i18n', dir, languages=['ru']).install()
%>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title><%=_('abc')%></title>
...

I did ab -c 100 -n 10000 http://medeu/~ibr/test/02-gettext.html vs.
02-static.html, the difference is 510 to 718 RPS. So a little script
replacing <%_('.*')%> with the actual text in the chosen language would
be all I wanted. Can I pre-generate and reference pages in different
languages with Django?


With kind regards,
Baurzhan.
From jcigar at ulb.ac.be  Sat Aug 19 07:09:42 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Sat Aug 19 07:10:06 2006
Subject: [mod_python] templates in stead of PSP
In-Reply-To: <20060819075436.GA15919@grok.co.za>
References: <20060819075436.GA15919@grok.co.za>
Message-ID: <44E6F176.7090208@ulb.ac.be>

Hi,

I suggest simpleTAL, it's a port or ZPT which doesn't require Zope.
It's quite fast (especially compared to Kid), and much more powerful 
than Kid. Despite the fact that I don't like Zope, I must admit that 
their template language is interesting. I especially like the concept of 
"slots", which allow to split up and reuse templates in a very elegant 
manner.
I haven't looked at the i18n support yet, but I *think* that simpleTAL 
supports the i18n tags ..

Regards,
Julien

Thomas Andrews wrote:
> Hi,
>
> I would like to use a templating 'language' like cheetah/kid/markup/spyce(?)
> instead of straight PSP. I don't want to run webware/turbogears/... in
> addition - I just want apache on it's own. Has anyone done this?
>
> I don't really mind at present which templating app I have to use, so
> long as I can get a working recipe, (though I'd *really* rather not use
> cgi to do it.)
>
> I tried to get kid going using the apache config below, but no matter
> what I try I get errors from apache:
>
> >From syslog:
>
>     "Invalid URI in request GET /kid/sysinfo.kid HTTP/1.1, referer:
>     http://localhost/kid/"
>
> The error reported in the browser is:
>
>     Bad Request
>     Your browser sent a request that this server could not understand.
>     Apache/2.0.55 (Debian) mod_python/3.1.3 Python/2.3.5 PHP/4.4.2-1.1
>     Server at localhost Port 80
>
> Here's my Apache config:
>
>     # ++++++++++++++++++++++++++++++++++
>     Alias /kid/ /var/www/kid/
>
>     <Directory /var/www/kid/>
>         Options +ExecCGI
>         Action kid-file kid_handler.cgi
>         AddHandler kid-file .kid
>     </Directory>
>     # ++++++++++++++++++++++++++++++++++
>
> What can I be doing wrong in the "Action" line above?
>
> Can anyone provide me with a basic working setup for any of the above
> apps? (It doesn't have to be Kid.)
>
> Many thanks,
> Thomas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>   

From jpg at jgassociates.ca  Sat Aug 19 08:34:44 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Aug 19 08:34:42 2006
Subject: [mod_python] advice for a multilingual app
In-Reply-To: <20060819105236.GA7270@radix50.net>
References: <20060818133628.GF21354@radix50.net>	<64D29DE0-671B-4DF8-92A4-62DB1553A970@dscpl.com.au>
	<20060819105236.GA7270@radix50.net>
Message-ID: <44E70564.2010907@jgassociates.ca>

Baurzhan Ismagulov wrote:
> Hello Graham,
> 
> On Sat, Aug 19, 2006 at 09:03:04AM +1000, Graham Dumpleton wrote:
>> PSP has some issues with Unicode
> 
> Oh, thanks for the alert! If I understand
> http://www.mail-archive.com/dev@httpd.apache.org/msg33443.html
> correctly, Publisher handler is the only way to get Unicode working with
> mod_python.

This is not correct. Mod_python's Unicode abilities should be the same
as the python being used. The Unicode problem is a psp problem. People
are free to write their own mod_python handler which fully supports
Unicode. I'm sure you understand this, but I just want to make sure we
don't start a false "mod_python does not support Unicode" meme.

Jim
From jpg at jgassociates.ca  Sat Aug 19 08:42:29 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Aug 19 08:42:26 2006
Subject: [mod_python] templates in stead of PSP
In-Reply-To: <44E6F176.7090208@ulb.ac.be>
References: <20060819075436.GA15919@grok.co.za> <44E6F176.7090208@ulb.ac.be>
Message-ID: <44E70735.3050402@jgassociates.ca>

Julien Cigar wrote:
> Hi,
> 
> I suggest simpleTAL, it's a port or ZPT which doesn't require Zope.
> It's quite fast (especially compared to Kid), and much more powerful
> than Kid. Despite the fact that I don't like Zope, I must admit that
> their template language is interesting. I especially like the concept of
> "slots", which allow to split up and reuse templates in a very elegant
> manner.
> I haven't looked at the i18n support yet, but I *think* that simpleTAL
> supports the i18n tags ..

It is also possible to use the ZPT from Zope3 separately from Zope as
well. I haven't done much beyond a little experimentation and that was
some time ago. You'll need to google to find more information. I did
find it to be  much slower than PSP (by a factor of 10??? - fuzzy memory).

As much as I like ZPT (and simpleTAL) I decided that the extra
dependency and loss of performance was not worth the effort, but then I
don't need Unicode stuff. ;) I do miss some of the ZPT features though.

Jim
From belred at gmail.com  Sat Aug 19 13:02:31 2006
From: belred at gmail.com (Bryan)
Date: Sat Aug 19 13:35:18 2006
Subject: [mod_python] PyThreadState_Swap(NULL)
Message-ID: <ec7g3d$6k2$1@sea.gmane.org>

hi,


i've written a program that uses python c api code that lives in a shared 
library that is loaded by a custom apache module (mod_xxx).  this python c api 
code all works correctly under our test server and under apache but only if 
mod_python isn't loaded.  when apache loads mod_python as shown in the http.conf 
snippet below, PyThreadState_Swap(NULL) in mod_xxx returns NULL.  when the 
snippet of code in http.conf is commented out, it works again.  what do i have 
to do to have mod_xxx code work correctly when apache loads mod_python?

i put our module after mod_python, commented out Py_Initialize(), and 
Py_IsInitialized() returned True, but PyThreadState_Swap() failed.

i put our module before mod_python, called Py_Initialize(), and 
Py_IsInitialized() returned True, but PyThreadState_Swap() failed.

i removed mod_python and our module succeeded.

i even tested combinations of calling and PyEval_InitThreads() but didn't work 
either.


any help to get our custom module co-existing with mod_python would be very 
appreciated.

thanks,

bryan

From grahamd at dscpl.com.au  Sat Aug 19 18:05:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Aug 19 18:05:02 2006
Subject: [mod_python] PyThreadState_Swap(NULL)
In-Reply-To: <ec7g3d$6k2$1@sea.gmane.org>
References: <ec7g3d$6k2$1@sea.gmane.org>
Message-ID: <5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>


On 20/08/2006, at 3:02 AM, Bryan wrote:

> i've written a program that uses python c api code that lives in a  
> shared library that is loaded by a custom apache module (mod_xxx).   
> this python c api code all works correctly under our test server  
> and under apache but only if mod_python isn't loaded.  when apache  
> loads mod_python as shown in the http.conf snippet below,  
> PyThreadState_Swap(NULL) in mod_xxx returns NULL.  when the snippet  
> of code in http.conf is commented out, it works again.  what do i  
> have to do to have mod_xxx code work correctly when apache loads  
> mod_python?
>
> i put our module after mod_python, commented out Py_Initialize(),  
> and Py_IsInitialized() returned True, but PyThreadState_Swap() failed.
>
> i put our module before mod_python, called Py_Initialize(), and  
> Py_IsInitialized() returned True, but PyThreadState_Swap() failed.
>
> i removed mod_python and our module succeeded.
>
> i even tested combinations of calling and PyEval_InitThreads() but  
> didn't work either.
>
> any help to get our custom module co-existing with mod_python would  
> be very appreciated.

For a start, which version of mod_python are you using? There were some
important changes in mod_python 3.2.8 to allow third party modules for
Python to work properly where those third party modules used the simple
GIL API for thread management. See:

   https://issues.apache.org/jira/browse/MODPYTHON-77

Whether this would help is debatable though, as by the sound of it you
are doing a full embedding of Python in your own library much like  
mod_python
does and that may still conflict.

It is possible that you might have to wait until a new API is added  
to mod_python
as discussed in:

   https://issues.apache.org/jira/browse/MODPYTHON-165

The intent with this API was to allow other Apache modules to access the
framework used by mod_python for the construction and access to Python
interpreter instances and to a wrapper for request object etc. That  
way a
third party module doesn't need to do it and no risk of there being a  
conflict
in the way each managed it.

This new API hasn't been added yet as no one had stepped up to say they
were interested enough to want to use it. If you are prepared and  
able to use
latest development builds of mod_python from subversion repository, I  
could
add the minimal functions required and you could start experimenting.

Other than that, can only suggest you post up the most minimal skeleton
possible showing what you are doing, preferably something that could be
compiled and tested.

Graham
From grahamd at dscpl.com.au  Sat Aug 19 18:13:58 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Aug 19 18:13:37 2006
Subject: [mod_python] PyThreadState_Swap(NULL)
In-Reply-To: <5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
References: <ec7g3d$6k2$1@sea.gmane.org>
	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
Message-ID: <902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>


> For a start, which version of mod_python are you using? There were  
> some
> important changes in mod_python 3.2.8 to allow third party modules for
> Python to work properly where those third party modules used the  
> simple
> GIL API for thread management.

Whoops, that should be mod_python 3.2.10. Not 3.2.8.

Graham
From belred at gmail.com  Sat Aug 19 23:21:35 2006
From: belred at gmail.com (Bryan)
Date: Sat Aug 19 23:22:25 2006
Subject: [mod_python] Re: PyThreadState_Swap(NULL)
In-Reply-To: <902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
References: <ec7g3d$6k2$1@sea.gmane.org>	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
	<902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
Message-ID: <44E7D53F.1080603@gmail.com>

Graham Dumpleton wrote:
> 
>> For a start, which version of mod_python are you using? There were some
>> important changes in mod_python 3.2.8 to allow third party modules for
>> Python to work properly where those third party modules used the simple
>> GIL API for thread management.
> 
> Whoops, that should be mod_python 3.2.10. Not 3.2.8.
> 
> Graham


hi graham,

we are using mod_python 3.2.10.  you are right that we are doing something 
similar to mod_python in that we fully embed python to process requests using 
our protocol.  the difference is that our main protocol and message dispatcher 
has nothing to do with apache and can plug into our own proprietary server as 
well as 3rd party servers. our mod_xxx module is really just an adapter to let 
our dispatcher plug into apache.  and our python adapter is a plug into our 
dispatcher along with other language adapters.  this is a snippet of our code 
and shows you where the failure is.  the failure occurs in the start function 
and g_py_main_interpreter returned by PyThreadState_Swap(NULL) is NULL.  i 
wouldn't mind grabbing your latest code from svn and looking at your new API, 
except that i'm not sure using experimental code at this phase of development 
process would be wise.  also, if i read what you wrote correctly, i would need 
to tie our code to use the mod_python framework and i'm not willing to do that 
since our python adapter has no knowledge of apache.  unless i'm wrong, i 
believe the only real solution at this point is to use two apache processes. 
one that includes mod_python which we use for cgi gui apps, and the other with 
our dispatcher so there would be no conflicts.  this wouldn't be an optimal 
solution, but it's doable.


this is an example of our python adapter code and http.conf

--- mod_xxx ---

// this is an example of start


if (!Py_IsInitialized()) {
     Py_Initialize();
}

PyEval_InitThreads();
g_py_main_interpreter = PyThreadState_Swap(NULL);
PyThreadState_Swap(g_py_main_interpreter);
PyEval_ReleaseLock();
if (g_py_main_interpreter) {
      log("PyThreadState_Swap(NULL) succeeded");
}
else {
      log("PyThreadState_Swap(NULL) failed");
}


// this is an example of the main processing

PyEval_AquireLock();
py_interp = Py_NewInterpreter();
PyThreadState_Swap(py_interp);
... do normal python stuff here including executing python scripts
PyThreadState_Swap(NULL);
PyEval_ReleaseLock();



// this is an example of stop

PyThreadState_Swap(g_py_main_interpreter);
Py_Finalize();
g_py_main_interpreter = NULL



---- apache's http.conf ----

LoadFile  "c:/Program Files/Common Files/Company/python/python24/python24.dll
LoadModule python_module  "../apache/bin/mod_python.so"
LoadModule mod_xxx        "bin/mod_xxx.dll


Listen 4119
<VirtualHost _default_:4119>
      <Directory "C:/Program Files/company/htdocs/xxx">
          SetHandler    mod_python
          PythonHandler mod_python.publisher
          PythonDebug   Off
      </Directory>
</VirtualHost>



bryan

From belred at gmail.com  Sun Aug 20 00:07:29 2006
From: belred at gmail.com (Bryan)
Date: Sun Aug 20 00:08:28 2006
Subject: [mod_python] Re: PyThreadState_Swap(NULL)
In-Reply-To: <902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
References: <ec7g3d$6k2$1@sea.gmane.org>	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
	<902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
Message-ID: <44E7E001.6070707@gmail.com>

Graham Dumpleton wrote:
> 
>> For a start, which version of mod_python are you using? There were some
>> important changes in mod_python 3.2.8 to allow third party modules for
>> Python to work properly where those third party modules used the simple
>> GIL API for thread management.
> 
> Whoops, that should be mod_python 3.2.10. Not 3.2.8.
> 
> Graham


graham,

i guess i just don't understand something.  i thought the following code could 
never fail.  wouldn't PyThreadState_Swap(NULL) return either a new python 
interpreter or the one in the current process if it already exists?  what 
interaction with mod_python could there be to cause a conflict with this code? 
i've also commented out the PyEval_InitThreads() function just in case, but it 
still fails.


if (!Py_IsInitialized()) {
     Py_Initialize();
}

PyEval_InitThreads();
g_py_main_interpreter = PyThreadState_Swap(NULL);
PyThreadState_Swap(g_py_main_interpreter);
PyEval_ReleaseLock();
if (g_py_main_interpreter) {
      log("PyThreadState_Swap(NULL) succeeded");
}
else {
      log("PyThreadState_Swap(NULL) failed");
}


bryan

From belred at gmail.com  Sun Aug 20 01:20:11 2006
From: belred at gmail.com (Bryan)
Date: Sun Aug 20 01:21:15 2006
Subject: [mod_python] Re: PyThreadState_Swap(NULL)
In-Reply-To: <44E7D53F.1080603@gmail.com>
References: <ec7g3d$6k2$1@sea.gmane.org>	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>	<902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
	<44E7D53F.1080603@gmail.com>
Message-ID: <ec8rfq$59f$1@sea.gmane.org>

Bryan wrote:
> Graham Dumpleton wrote:
>>
>>> For a start, which version of mod_python are you using? There were some
>>> important changes in mod_python 3.2.8 to allow third party modules for
>>> Python to work properly where those third party modules used the simple
>>> GIL API for thread management.
>>
>> Whoops, that should be mod_python 3.2.10. Not 3.2.8.
>>
>> Graham
> 
> 
> hi graham,
> 
> we are using mod_python 3.2.10.  


my mistake, we are using 3.2.8.  i'll try 3.2.10 and see if fixes our problem.

bryan

From grahamd at dscpl.com.au  Sun Aug 20 01:43:30 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Aug 20 01:43:07 2006
Subject: [mod_python] Re: PyThreadState_Swap(NULL)
In-Reply-To: <44E7D53F.1080603@gmail.com>
References: <ec7g3d$6k2$1@sea.gmane.org>	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
	<902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
	<44E7D53F.1080603@gmail.com>
Message-ID: <807BD4D4-1217-4BF0-847C-59FFFC6DFB47@dscpl.com.au>


On 20/08/2006, at 1:21 PM, Bryan wrote:

> Graham Dumpleton wrote:
>>> For a start, which version of mod_python are you using? There  
>>> were some
>>> important changes in mod_python 3.2.8 to allow third party  
>>> modules for
>>> Python to work properly where those third party modules used the  
>>> simple
>>> GIL API for thread management.
>> Whoops, that should be mod_python 3.2.10. Not 3.2.8.
>> Graham
>
>
> hi graham,
>
> we are using mod_python 3.2.10.  you are right that we are doing  
> something similar to mod_python in that we fully embed python to  
> process requests using our protocol.  the difference is that our  
> main protocol and message dispatcher has nothing to do with apache  
> and can plug into our own proprietary server as well as 3rd party  
> servers. our mod_xxx module is really just an adapter to let our  
> dispatcher plug into apache.  and our python adapter is a plug into  
> our dispatcher along with other language adapters.  this is a  
> snippet of our code and shows you where the failure is.  the  
> failure occurs in the start function and g_py_main_interpreter  
> returned by PyThreadState_Swap(NULL) is NULL.  i wouldn't mind  
> grabbing your latest code from svn and looking at your new API,  
> except that i'm not sure using experimental code at this phase of  
> development process would be wise.  also, if i read what you wrote  
> correctly, i would need to tie our code to use the mod_python  
> framework and i'm not willing to do that since our python adapter  
> has no knowledge of apache.  unless i'm wrong, i believe the only  
> real solution at this point is to use two apache processes. one  
> that includes mod_python which we use for cgi gui apps, and the  
> other with our dispatcher so there would be no conflicts.  this  
> wouldn't be an optimal solution, but it's doable.

I'd have to look over your code and try and get my head around all this
stuff again, but I really think you will be fighting an uphill battle  
to get
something going which doesn't try and work in co-operation with
mod_python some how.

One of the first problems is that mod_python is the one to create the
first interpreter and this first interpreter is special. If a Python  
module
has a C code component and it isn't written in just the right way so as
to work with interpreters other than the first, then it will have  
problems.
Usually this manifests as Python code running in a restricted  
environment
and not able to access various stuff, but other things could also  
happen,
including lock ups and crashes.

The other problem you will have is that Apache on Win32 and also
worker MPM on UNIX is multithreaded and even more work is required
to get that to work properly. I don't see anything in your code that
suggests that it takes multithreading and multiple interpreters into
consideration.

In the short term, using a separate Apache instance as you suggest
will probably be your only quick solution. In the long term, I still  
think
using the proposed API for mod_python is the only way it is going to
work.

You shouldn't have a problem with this if your code is sufficiently  
layered.
That is, the real part of the code which does the work should be written
just like a normal Python extension module which could be loaded into
any command line Python. You would then have two other distinct bits of
code for embedding. Both of these merely setup the interpreter  
environment
and then import your normal Python module and execute it. One of these
bits of code would be for embedding in a standalone application and
the other variant one that works in conjunction with mod_python to allow
embedding when Apache is used and mod_python is also used. If
necessary you can have a variant of Apache module which works when
mod_python is not present.

As I said, if your code is correctly layered and componentised, this  
should
not result in all your code being dependent on mod_python.

Oh, one final possibility that may be possible, especially if your code
were properly layered and your core code is loadable as a Python
module, is simply to import that code Python module from a module
imported in mod_python using PythonImport and trigger it from that.
If necessary, the Apache handlers your have written in mod_xxx could
be written as mod_python handlers instead. Since you don't really
say what mod_xxx does though, I can't really comment on whether
this would be practical.

Graham
From grahamd at dscpl.com.au  Sun Aug 20 04:08:25 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Aug 20 04:08:05 2006
Subject: [mod_python] Re: PyThreadState_Swap(NULL)
In-Reply-To: <807BD4D4-1217-4BF0-847C-59FFFC6DFB47@dscpl.com.au>
References: <ec7g3d$6k2$1@sea.gmane.org>	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
	<902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
	<44E7D53F.1080603@gmail.com>
	<807BD4D4-1217-4BF0-847C-59FFFC6DFB47@dscpl.com.au>
Message-ID: <0F10F26C-0CB4-4D75-91BA-79F1C0C054B8@dscpl.com.au>


On 20/08/2006, at 3:43 PM, Graham Dumpleton wrote:

> I'd have to look over your code and try and get my head around all  
> this
> stuff again, but I really think you will be fighting an uphill  
> battle to get
> something going which doesn't try and work in co-operation with
> mod_python some how.
>
> One of the first problems is that mod_python is the one to create the
> first interpreter and this first interpreter is special. If a  
> Python module
> has a C code component and it isn't written in just the right way  
> so as
> to work with interpreters other than the first, then it will have  
> problems.
> Usually this manifests as Python code running in a restricted  
> environment
> and not able to access various stuff, but other things could also  
> happen,
> including lock ups and crashes.
>
> The other problem you will have is that Apache on Win32 and also
> worker MPM on UNIX is multithreaded and even more work is required
> to get that to work properly. I don't see anything in your code that
> suggests that it takes multithreading and multiple interpreters into
> consideration.
>
> In the short term, using a separate Apache instance as you suggest
> will probably be your only quick solution. In the long term, I  
> still think
> using the proposed API for mod_python is the only way it is going to
> work.

Have been busy and have added minimal set of functions to mod_python
and exporting them for use in other modules. This code is now checked
into subversion trunk for 3.3.

As an example, here is how it could be used:

         PyObject *m = NULL;
         PyObject *o = NULL;
         PyObject *d = NULL;

         optfn_mp_acquire_interpreter("main_interpreter");

         request_obj = optfn_mp_get_request_object(r);

         m = PyImport_ImportModule("mod_python.testhandler");
         if (m) {
             d = PyModule_GetDict(m);
             o = PyDict_GetItemString(d, "handler");

             if (o) {
                 PyObject *a = NULL;
                 PyObject *r = NULL;

                 a = Py_BuildValue("(O)", request_obj);
                 r = PyEval_CallObject(o, a);
                 Py_DECREF(a);
                 if (r == NULL)
                     return HTTP_INTERNAL_SERVER_ERROR;

                 if (!PyInt_Check(r))
                     return HTTP_INTERNAL_SERVER_ERROR;

                 result = PyInt_AsLong(r);

                 Py_DECREF(r);
             }
             else {
                 ap_rputs("ERROR 2", r);
             }
         }
         else {
             ap_rputs("ERROR 1", r);
         }

         Py_XDECREF(request_obj);

         optfn_mp_release_interpreter();

Some proper logging could be performed for error cases, but general idea
here was to call mod_python.testhandler.handler from a response handler
registered from a C module distinct from mod_python.

The full code for this including Makefile's is attached to:

   http://issues.apache.org/jira/browse/MODPYTHON-165

You will need to modify the appropriate Makefile to specify where the  
Python
includes are though. By rights it should be a bit smarter and get  
includes and
defines etc by running Python to find them out. Will work out what  
needs to
be done to make the correct later.

In respect of your code, if it is layered properly and core module is  
distinct
and loadable from Python command line, all you need to do is import like
above and then call appropriate entry point.

Graham
From grahamd at dscpl.com.au  Sun Aug 20 04:25:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Aug 20 04:24:44 2006
Subject: [mod_python] Re: PyThreadState_Swap(NULL)
In-Reply-To: <0F10F26C-0CB4-4D75-91BA-79F1C0C054B8@dscpl.com.au>
References: <ec7g3d$6k2$1@sea.gmane.org>	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
	<902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
	<44E7D53F.1080603@gmail.com>
	<807BD4D4-1217-4BF0-847C-59FFFC6DFB47@dscpl.com.au>
	<0F10F26C-0CB4-4D75-91BA-79F1C0C054B8@dscpl.com.au>
Message-ID: <F0939F89-843E-43F4-8AD4-49C9821458EE@dscpl.com.au>


On 20/08/2006, at 6:08 PM, Graham Dumpleton wrote:

> Have been busy and have added minimal set of functions to mod_python
> and exporting them for use in other modules. This code is now checked
> into subversion trunk for 3.3.
>
> As an example, here is how it could be used:

And here is a replacement example that fixes up some stupid mistakes
with cleaning up data.

     optfn_mp_acquire_interpreter("main_interpreter");

     request_obj = optfn_mp_get_request_object(r);

     m = PyImport_ImportModule("mod_python.testhandler");
     if (m) {
         d = PyModule_GetDict(m);
         o = PyDict_GetItemString(d, "handler");

         if (o) {
             PyObject *a = NULL;
             PyObject *r = NULL;

             a = Py_BuildValue("(O)", request_obj);
             r = PyEval_CallObject(o, a);

             Py_DECREF(a);

             if (r == NULL)
                 result = HTTP_INTERNAL_SERVER_ERROR;
             else if (!PyInt_Check(r))
                 result = HTTP_INTERNAL_SERVER_ERROR;
             else
                 result = PyInt_AsLong(r);

             Py_XDECREF(r);
         }
         else {
             result = HTTP_INTERNAL_SERVER_ERROR;
         }
     }
     else {
         result = HTTP_INTERNAL_SERVER_ERROR;
     }

     Py_XDECREF(m);
     Py_XDECREF(o);

     Py_XDECREF(request_obj);

     optfn_mp_release_interpreter();

     return result;

I ended up replacing the attachment to the JIRA issue a couple of times,
so watch out for moving targets. :-)

Graham
From grahamd at dscpl.com.au  Sun Aug 20 05:44:53 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Aug 20 05:44:30 2006
Subject: [mod_python] Re: PyThreadState_Swap(NULL)
In-Reply-To: <F0939F89-843E-43F4-8AD4-49C9821458EE@dscpl.com.au>
References: <ec7g3d$6k2$1@sea.gmane.org>	<5909588B-AB93-429C-BC7C-286B0E047FDD@dscpl.com.au>
	<902F597E-399A-4A84-92DD-A67BB22DABE3@dscpl.com.au>
	<44E7D53F.1080603@gmail.com>
	<807BD4D4-1217-4BF0-847C-59FFFC6DFB47@dscpl.com.au>
	<0F10F26C-0CB4-4D75-91BA-79F1C0C054B8@dscpl.com.au>
	<F0939F89-843E-43F4-8AD4-49C9821458EE@dscpl.com.au>
Message-ID: <D6D0CB02-838F-4CDB-8A8E-619F18C7F783@dscpl.com.au>


On 20/08/2006, at 6:25 PM, Graham Dumpleton wrote:

>
> On 20/08/2006, at 6:08 PM, Graham Dumpleton wrote:
>
>> Have been busy and have added minimal set of functions to mod_python
>> and exporting them for use in other modules. This code is now checked
>> into subversion trunk for 3.3.
>>
>> As an example, here is how it could be used:
>
> And here is a replacement example that fixes up some stupid mistakes
> with cleaning up data.
>
>     optfn_mp_acquire_interpreter("main_interpreter");
>
>     request_obj = optfn_mp_get_request_object(r);
>
>     m = PyImport_ImportModule("mod_python.testhandler");
>     if (m) {
>         d = PyModule_GetDict(m);
>         o = PyDict_GetItemString(d, "handler");
>
>         if (o) {
>             PyObject *a = NULL;
>             PyObject *r = NULL;
>
>             a = Py_BuildValue("(O)", request_obj);
>             r = PyEval_CallObject(o, a);
>
>             Py_DECREF(a);
>
>             if (r == NULL)
>                 result = HTTP_INTERNAL_SERVER_ERROR;
>             else if (!PyInt_Check(r))
>                 result = HTTP_INTERNAL_SERVER_ERROR;
>             else
>                 result = PyInt_AsLong(r);
>
>             Py_XDECREF(r);
>         }
>         else {
>             result = HTTP_INTERNAL_SERVER_ERROR;
>         }
>     }
>     else {
>         result = HTTP_INTERNAL_SERVER_ERROR;
>     }
>
>     Py_XDECREF(m);
>     Py_XDECREF(o);
>
>     Py_XDECREF(request_obj);

Whoops (AGAIN).

Neither 'o' or 'request_obj' should be DECREF'd. This is because 'o' is
a borrowed reference, and 'request_obj' is destroyed automatically when
the cleanup handler runs.

I'll fix attachment to issue after a bit more testing. Works like a  
charm now,
problem only showed up when mixing requests against this code with
requests against standard mod_python handlers. :-(

>     optfn_mp_release_interpreter();
>
>     return result;
>
> I ended up replacing the attachment to the JIRA issue a couple of  
> times,
> so watch out for moving targets. :-)
>
> Graham

From jcigar at ulb.ac.be  Sun Aug 20 05:55:18 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Sun Aug 20 05:55:21 2006
Subject: [mod_python] templates in stead of PSP
In-Reply-To: <44E70735.3050402@jgassociates.ca>
References: <20060819075436.GA15919@grok.co.za> <44E6F176.7090208@ulb.ac.be>
	<44E70735.3050402@jgassociates.ca>
Message-ID: <44E83186.6080705@ulb.ac.be>

Jim Gallacher wrote:
> Julien Cigar wrote:
>   
>> Hi,
>>
>> I suggest simpleTAL, it's a port or ZPT which doesn't require Zope.
>> It's quite fast (especially compared to Kid), and much more powerful
>> than Kid. Despite the fact that I don't like Zope, I must admit that
>> their template language is interesting. I especially like the concept of
>> "slots", which allow to split up and reuse templates in a very elegant
>> manner.
>> I haven't looked at the i18n support yet, but I *think* that simpleTAL
>> supports the i18n tags ..
>>     
>
> It is also possible to use the ZPT from Zope3 separately from Zope as
> well. I haven't done much beyond a little experimentation and that was
>   

Yep it can be found here http://svn.zope.org/zope.pagetemplate/trunk/
I should take a look at that ...

> some time ago. You'll need to google to find more information. I did
> find it to be  much slower than PSP (by a factor of 10??? - fuzzy memory).
>
>   

Yes it's slower ... first because it's written in Python and not in C 
(flex) as the PSP parser, seconde because it's an "XML-based" engine, 
where PSP, Clearsilver, ... are "text-based" engines (which are always 
faster).
But it doesn't take seconds to render the template, it's just ~0,3 ms vs 
~3 ms (there are some benchmarks here 
http://markup.edgewall.org/wiki/MarkupPerformance).

> As much as I like ZPT (and simpleTAL) I decided that the extra
> dependency and loss of performance was not worth the effort, but then I
> don't need Unicode stuff. ;) I do miss some of the ZPT features though.
>
>   

It's one of the things I didn't like in Zope: tons of dependencies (a 
true nightmare when you have to upgrade).

> Jim
>
>   

Julien

From terry.macdonald at dsl.pipex.com  Sun Aug 20 18:59:11 2006
From: terry.macdonald at dsl.pipex.com (Terry Macdonald)
Date: Sun Aug 20 18:59:28 2006
Subject: [mod_python] templates in stead of PSP
In-Reply-To: <44E83186.6080705@ulb.ac.be>
References: <20060819075436.GA15919@grok.co.za>
	<44E6F176.7090208@ulb.ac.be>	<44E70735.3050402@jgassociates.ca>
	<44E83186.6080705@ulb.ac.be>
Message-ID: <44E8E93F.7010109@dsl.pipex.com>

Julien Cigar wrote:
> Jim Gallacher wrote:
>> Julien Cigar wrote:
>>  
>>> Hi,
>>>
>>> I suggest simpleTAL, it's a port or ZPT which doesn't require Zope.
>>> It's quite fast (especially compared to Kid), and much more powerful
>>> than Kid. Despite the fact that I don't like Zope, I must admit that
>>> their template language is interesting. I especially like the 
>>> concept of
>>> "slots", which allow to split up and reuse templates in a very elegant
>>> manner.
>>> I haven't looked at the i18n support yet, but I *think* that simpleTAL
>>> supports the i18n tags ..
>>>     
>>
>> It is also possible to use the ZPT from Zope3 separately from Zope as
>> well. I haven't done much beyond a little experimentation and that was
>>   
>
> Yep it can be found here http://svn.zope.org/zope.pagetemplate/trunk/
> I should take a look at that ...
>
>> some time ago. You'll need to google to find more information. I did
>> find it to be  much slower than PSP (by a factor of 10??? - fuzzy 
>> memory).
>>
>>   
>
> Yes it's slower ... first because it's written in Python and not in C 
> (flex) as the PSP parser, seconde because it's an "XML-based" engine, 
> where PSP, Clearsilver, ... are "text-based" engines (which are always 
> faster).
> But it doesn't take seconds to render the template, it's just ~0,3 ms 
> vs ~3 ms (there are some benchmarks here 
> http://markup.edgewall.org/wiki/MarkupPerformance).
>
>> As much as I like ZPT (and simpleTAL) I decided that the extra
>> dependency and loss of performance was not worth the effort, but then I
>> don't need Unicode stuff. ;) I do miss some of the ZPT features though.
>>
>>   
>
> It's one of the things I didn't like in Zope: tons of dependencies (a 
> true nightmare when you have to upgrade).
>
>> Jim
>>
>>   
What's wrong with cheetah? its standalone and so simple and powerful to use
From sandipm at talentica.com  Mon Aug 21 00:41:49 2006
From: sandipm at talentica.com (sandip)
Date: Mon Aug 21 00:42:03 2006
Subject: [mod_python] templates in stead of PSP
References: <20060819075436.GA15919@grok.co.za>
Message-ID: <007501c6c4dc$1fc71db0$c7010a0a@talentica.com>

psp templating is great!! its is simple to use also..

what is the problem with using PSP templates?

thanks
sandip

----- Original Message ----- 
From: "Thomas Andrews" <tandrews@grok.co.za>
To: <mod_python@modpython.org>
Sent: Saturday, August 19, 2006 1:24 PM
Subject: [mod_python] templates in stead of PSP


> Hi,
>
> I would like to use a templating 'language' like 
> cheetah/kid/markup/spyce(?)
> instead of straight PSP. I don't want to run webware/turbogears/... in
> addition - I just want apache on it's own. Has anyone done this?
>
> I don't really mind at present which templating app I have to use, so
> long as I can get a working recipe, (though I'd *really* rather not use
> cgi to do it.)
>
> I tried to get kid going using the apache config below, but no matter
> what I try I get errors from apache:
>
>>From syslog:
>
>    "Invalid URI in request GET /kid/sysinfo.kid HTTP/1.1, referer:
>    http://localhost/kid/"
>
> The error reported in the browser is:
>
>    Bad Request
>    Your browser sent a request that this server could not understand.
>    Apache/2.0.55 (Debian) mod_python/3.1.3 Python/2.3.5 PHP/4.4.2-1.1
>    Server at localhost Port 80
>
> Here's my Apache config:
>
>    # ++++++++++++++++++++++++++++++++++
>    Alias /kid/ /var/www/kid/
>
>    <Directory /var/www/kid/>
>        Options +ExecCGI
>        Action kid-file kid_handler.cgi
>        AddHandler kid-file .kid
>    </Directory>
>    # ++++++++++++++++++++++++++++++++++
>
> What can I be doing wrong in the "Action" line above?
>
> Can anyone provide me with a basic working setup for any of the above
> apps? (It doesn't have to be Kid.)
>
> Many thanks,
> Thomas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python 

From tandrews at grok.co.za  Mon Aug 21 03:36:02 2006
From: tandrews at grok.co.za (Thomas Andrews)
Date: Mon Aug 21 03:36:18 2006
Subject: [mod_python] templates in stead of PSP
In-Reply-To: <007501c6c4dc$1fc71db0$c7010a0a@talentica.com>
References: <20060819075436.GA15919@grok.co.za>
	<007501c6c4dc$1fc71db0$c7010a0a@talentica.com>
Message-ID: <20060821073602.GB15919@grok.co.za>

On Mon, Aug 21, 2006 at 10:11:49AM +0530, sandip wrote:

> psp templating is great!! its is simple to use also..
> 
> what is the problem with using PSP templates?

Nothing, but using something like Kid or Markup evidently gives you a
much better chance of producing well formed XML consistently.
From jcigar at ulb.ac.be  Mon Aug 21 04:02:29 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Mon Aug 21 03:54:25 2006
Subject: [mod_python] templates in stead of PSP
In-Reply-To: <007501c6c4dc$1fc71db0$c7010a0a@talentica.com>
References: <20060819075436.GA15919@grok.co.za>
	<007501c6c4dc$1fc71db0$c7010a0a@talentica.com>
Message-ID: <44E96895.3080408@ulb.ac.be>

- templates are unreadable
- templates are not valid xhtml
- content is not properly escaped
- indentation is painful in a template
- text based templates generate a lot of blank space
- text-based templates don't work all that well for many text formats
- ...

sandip wrote:
> psp templating is great!! its is simple to use also..
>
> what is the problem with using PSP templates?
>
> thanks
> sandip
>
> ----- Original Message ----- From: "Thomas Andrews" <tandrews@grok.co.za>
> To: <mod_python@modpython.org>
> Sent: Saturday, August 19, 2006 1:24 PM
> Subject: [mod_python] templates in stead of PSP
>
>
>> Hi,
>>
>> I would like to use a templating 'language' like 
>> cheetah/kid/markup/spyce(?)
>> instead of straight PSP. I don't want to run webware/turbogears/... in
>> addition - I just want apache on it's own. Has anyone done this?
>>
>> I don't really mind at present which templating app I have to use, so
>> long as I can get a working recipe, (though I'd *really* rather not use
>> cgi to do it.)
>>
>> I tried to get kid going using the apache config below, but no matter
>> what I try I get errors from apache:
>>
>>> From syslog:
>>
>>    "Invalid URI in request GET /kid/sysinfo.kid HTTP/1.1, referer:
>>    http://localhost/kid/"
>>
>> The error reported in the browser is:
>>
>>    Bad Request
>>    Your browser sent a request that this server could not understand.
>>    Apache/2.0.55 (Debian) mod_python/3.1.3 Python/2.3.5 PHP/4.4.2-1.1
>>    Server at localhost Port 80
>>
>> Here's my Apache config:
>>
>>    # ++++++++++++++++++++++++++++++++++
>>    Alias /kid/ /var/www/kid/
>>
>>    <Directory /var/www/kid/>
>>        Options +ExecCGI
>>        Action kid-file kid_handler.cgi
>>        AddHandler kid-file .kid
>>    </Directory>
>>    # ++++++++++++++++++++++++++++++++++
>>
>> What can I be doing wrong in the "Action" line above?
>>
>> Can anyone provide me with a basic working setup for any of the above
>> apps? (It doesn't have to be Kid.)
>>
>> Many thanks,
>> Thomas
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python 
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From rsynnott at gmail.com  Mon Aug 21 06:46:45 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Mon Aug 21 06:46:48 2006
Subject: [mod_python] Emacs multi-mode/mmm-mode for PSPs
Message-ID: <24f203480608210346q2347b81j2d4b6738fca98e7f@mail.gmail.com>

Has anyone written an emacs multi-mode or mmm-mode spec for psp files?
Thanks
Rob
From davidf at sjsoft.com  Mon Aug 21 08:31:04 2006
From: davidf at sjsoft.com (David Fraser)
Date: Mon Aug 21 08:32:28 2006
Subject: [mod_python] templates in stead of PSP
In-Reply-To: <20060819075436.GA15919@grok.co.za>
References: <20060819075436.GA15919@grok.co.za>
Message-ID: <44E9A788.2040503@sjsoft.com>

Thomas Andrews wrote:
> Hi,
>
> I would like to use a templating 'language' like cheetah/kid/markup/spyce(?)
> instead of straight PSP. I don't want to run webware/turbogears/... in
> addition - I just want apache on it's own. Has anyone done this?
>
> I don't really mind at present which templating app I have to use, so
> long as I can get a working recipe, (though I'd *really* rather not use
> cgi to do it.)
>
> I tried to get kid going using the apache config below, but no matter
> what I try I get errors from apache:
>
> >From syslog:
>
>     "Invalid URI in request GET /kid/sysinfo.kid HTTP/1.1, referer:
>     http://localhost/kid/"
>
> The error reported in the browser is:
>
>     Bad Request
>     Your browser sent a request that this server could not understand.
>     Apache/2.0.55 (Debian) mod_python/3.1.3 Python/2.3.5 PHP/4.4.2-1.1
>     Server at localhost Port 80
>
> Here's my Apache config:
>
>     # ++++++++++++++++++++++++++++++++++
>     Alias /kid/ /var/www/kid/
>
>     <Directory /var/www/kid/>
>         Options +ExecCGI
>         Action kid-file kid_handler.cgi
>         AddHandler kid-file .kid
>     </Directory>
>     # ++++++++++++++++++++++++++++++++++
>
> What can I be doing wrong in the "Action" line above?
>
> Can anyone provide me with a basic working setup for any of the above
> apps? (It doesn't have to be Kid.)
>   
OK, Seeing as you're on the mod_python list - why are you using CGI?

I would recommend either writing your own handler using mod_python,
which calls Kid internally and returns the results, or using one of the
existing web frameworks that support Kid (Django, etc, etc)
Since you usually end up writing a bit of Python code outside the
template anyway, this bootstrapping often ends up being worth it - and
you'll get performance gains by using mod_python rather than cgi ...

David
From deron.meranda at gmail.com  Mon Aug 21 14:27:18 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Aug 21 14:27:25 2006
Subject: [mod_python] Re: Enhancements for better content negotiation
In-Reply-To: <44E655F5.70602@eml.cc>
References: <44E655F5.70602@eml.cc>
Message-ID: <5c06fa770608211127u426ea676x876d836a9f0d1de3@mail.gmail.com>

On 8/18/06, webograph <webograph@eml.cc> wrote:
> from my understanding, this mod_python would be the preferrable place to
> put such functions (even better, mod_python could use apache
> functionality for this, but i don't know enough about the interaction
> btwn apache and mod_python to say whether this is feasible or not)
>
>  > * Is this something that seems useful to others?
> absolutely yes! could you post it?

Sorry for the delay, I've been on vacation.

I had decided that all that code I wrote was best to be a standalone
python module (which I've called "httpheader.py") as it had more
appeal than just mod_python users.  I haven't touched it much since
the beginning of the year, but it is pretty well complete and tested, and
it is being used on some of my production systems daily.  You can
currently find a copy and documentation at

   http://deron.meranda.us/python/

Note that it may seem quite complex at first, mainly because I've
attempted to make it 100% conforming to all the applicable RFCs,
and so it very strictly implements all the crazy BNF and other
syntax rules and rarely traveled corners of the HTTP protocol spec.

Also in addition to all the content negotiation stuff I had mentioned,
it also has a lot of support for HTTP byte range requests.  I
use that for example to serve up very large "files" directly from
database tables, while fully supporting resumed downloads, and even
random access as occurs with Acrobat for PDF documents for
example.

I do think that perhaps at least some of this might be useful to
put into the mod_python utilities classes.  If anybody thinks so,
let me know and I'll help donate/integrate the changes (we'll probably
move discussions over to the mod_python dev mailing list if that
occurs).

Feedback on my module would be appreciated.

(All this reminds me I've been neglecting my own website)
-- 
Deron Meranda
From paul at zeapartners.org  Mon Aug 21 09:36:19 2006
From: paul at zeapartners.org (Paul Everitt)
Date: Mon Aug 21 14:30:23 2006
Subject: [mod_python] Re: templates in stead of PSP
In-Reply-To: <44E70735.3050402@jgassociates.ca>
References: <20060819075436.GA15919@grok.co.za> <44E6F176.7090208@ulb.ac.be>
	<44E70735.3050402@jgassociates.ca>
Message-ID: <44E9B6D3.8090707@zeapartners.org>

Jim Gallacher wrote:
> Julien Cigar wrote:
>> Hi,
>>
>> I suggest simpleTAL, it's a port or ZPT which doesn't require Zope.
>> It's quite fast (especially compared to Kid), and much more powerful
>> than Kid. Despite the fact that I don't like Zope, I must admit that
>> their template language is interesting. I especially like the concept of
>> "slots", which allow to split up and reuse templates in a very elegant
>> manner.
>> I haven't looked at the i18n support yet, but I *think* that simpleTAL
>> supports the i18n tags ..
> 
> It is also possible to use the ZPT from Zope3 separately from Zope as
> well. I haven't done much beyond a little experimentation and that was
> some time ago. You'll need to google to find more information. I did
> find it to be  much slower than PSP (by a factor of 10??? - fuzzy memory).

Note: this is only for those interested in using ZPT "standalone".

Shane Hathaway has a nice article describing how to use ZPT outside of 
Zope 3 (and thus, all the dependencies):

   http://hathawaymix.org/Weblog/2004-10-05-01

I used this to freeze ZPT into a PyObjC py2app application.  Worked 
really well.

--Paul

From ricardo.rocha at cern.ch  Tue Aug 22 03:25:30 2006
From: ricardo.rocha at cern.ch (Ricardo Rocha)
Date: Tue Aug 22 03:23:33 2006
Subject: [mod_python] http response code
Message-ID: <44EAB16A.2090800@cern.ch>

Hi all.

I'm not really sure if this is a mod_python or apache question, but i'll 
give it a try anyway. My setup is Apache 2.0.55 with mod_python 3.2.

I've been looking for a way to send additional error messages along with 
the HTTP error codes. The first thing i did was to remove the default 
apache error messages by adding the following directives to the apache 
config:
ErrorDocument 400 " "
ErrorDocument 401 " "
ErrorDocument 404 " "
ErrorDocument 406 " "
ErrorDocument 409 " "
ErrorDocument 500 " "
ErrorDocument 501 " "

Then i was hoping that returning the proper HTTP code from the handler 
would do it... and it does, as long as i haven't written anything back 
to the client before.

If i do write something back inside the handler, if i try to return 
apache.HTTP_BAD_REQUEST (for example), it will always give a 200 HTTP_OK 
code back to the client, along with the response text.

Is there a way to overcome this and have both a response being written 
back and a specific HTTP code being returned?

Thanks in advance,
   Ricardo
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2678 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060822/f63c3b91/smime.bin
From grahamd at dscpl.com.au  Tue Aug 22 04:27:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug 22 04:27:36 2006
Subject: [mod_python] http response code
In-Reply-To: <44EAB16A.2090800@cern.ch>
References: <44EAB16A.2090800@cern.ch>
Message-ID: <A9C323F1-1A44-457C-A949-E3976E14162C@dscpl.com.au>


On 22/08/2006, at 5:25 PM, Ricardo Rocha wrote:

> Hi all.
>
> I'm not really sure if this is a mod_python or apache question, but  
> i'll give it a try anyway. My setup is Apache 2.0.55 with  
> mod_python 3.2.
>
> I've been looking for a way to send additional error messages along  
> with the HTTP error codes. The first thing i did was to remove the  
> default apache error messages by adding the following directives to  
> the apache config:
> ErrorDocument 400 " "
> ErrorDocument 401 " "
> ErrorDocument 404 " "
> ErrorDocument 406 " "
> ErrorDocument 409 " "
> ErrorDocument 500 " "
> ErrorDocument 501 " "
>
> Then i was hoping that returning the proper HTTP code from the  
> handler would do it... and it does, as long as i haven't written  
> anything back to the client before.
>
> If i do write something back inside the handler, if i try to return  
> apache.HTTP_BAD_REQUEST (for example), it will always give a 200  
> HTTP_OK code back to the client, along with the response text.
>
> Is there a way to overcome this and have both a response being  
> written back and a specific HTTP code being returned?

Use:

   def handler(req):
     req.status = apache.HTTP_BAD_REQUEST
     req.content_type = 'text/html'
     req.write(....)
     return apache.DONE

Setting req.status and req.content_type must be done before first  
write as
you found at.

Setting req.status and returning apache.DONE is key as that is what  
tells
Apache not to format its own error response.

Graham
From richardlewis at fastmail.co.uk  Tue Aug 22 04:31:21 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Aug 22 04:31:31 2006
Subject: [mod_python] http response code
In-Reply-To: <44EAB16A.2090800@cern.ch>
References: <44EAB16A.2090800@cern.ch>
Message-ID: <200608220931.22227.richardlewis@fastmail.co.uk>

On Tuesday 22 August 2006 08:25, Ricardo Rocha wrote:
>
> Is there a way to overcome this and have both a response being written
> back and a specific HTTP code being returned?
>
Have you tried using the req.status member? If you're returning a status other 
than 200 and you also want to write content to the response stream, I think 
you're supposed to set the status before writing the content and then return 
the same status code after writing the content:

def handler(req):
  if req.unparsed_uri not in VALID_URIS:
    req.status = apache.HTTP_NOT_FOUND
    req.write(NOT_FOUND_ERROR_ESSAGE)
    return apache.HTTP_NOT_FOUND

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
JID: ironchicken@jabber.earth.li
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
From ricardo.rocha at cern.ch  Tue Aug 22 06:28:29 2006
From: ricardo.rocha at cern.ch (Ricardo Rocha)
Date: Tue Aug 22 06:26:36 2006
Subject: [mod_python] http response code
In-Reply-To: <A9C323F1-1A44-457C-A949-E3976E14162C@dscpl.com.au>
References: <44EAB16A.2090800@cern.ch>
	<A9C323F1-1A44-457C-A949-E3976E14162C@dscpl.com.au>
Message-ID: <44EADC4D.4020802@cern.ch>

Thanks (Graham and Richard). This works fine.

I've removed the ErrorDocument from the apache2 config too.

Ricardo

Graham Dumpleton wrote:
> 
> On 22/08/2006, at 5:25 PM, Ricardo Rocha wrote:
> 
>> Hi all.
>>
>> I'm not really sure if this is a mod_python or apache question, but 
>> i'll give it a try anyway. My setup is Apache 2.0.55 with mod_python 3.2.
>>
>> I've been looking for a way to send additional error messages along 
>> with the HTTP error codes. The first thing i did was to remove the 
>> default apache error messages by adding the following directives to 
>> the apache config:
>> ErrorDocument 400 " "
>> ErrorDocument 401 " "
>> ErrorDocument 404 " "
>> ErrorDocument 406 " "
>> ErrorDocument 409 " "
>> ErrorDocument 500 " "
>> ErrorDocument 501 " "
>>
>> Then i was hoping that returning the proper HTTP code from the handler 
>> would do it... and it does, as long as i haven't written anything back 
>> to the client before.
>>
>> If i do write something back inside the handler, if i try to return 
>> apache.HTTP_BAD_REQUEST (for example), it will always give a 200 
>> HTTP_OK code back to the client, along with the response text.
>>
>> Is there a way to overcome this and have both a response being written 
>> back and a specific HTTP code being returned?
> 
> Use:
> 
>   def handler(req):
>     req.status = apache.HTTP_BAD_REQUEST
>     req.content_type = 'text/html'
>     req.write(....)
>     return apache.DONE
> 
> Setting req.status and req.content_type must be done before first write as
> you found at.
> 
> Setting req.status and returning apache.DONE is key as that is what tells
> Apache not to format its own error response.
> 
> Graham
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 2678 bytes
Desc: S/MIME Cryptographic Signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060822/05121f4c/smime.bin
From tyctor at post.cz  Tue Aug 22 18:53:40 2006
From: tyctor at post.cz (=?us-ascii?Q?viktor=20vraniak?=)
Date: Tue Aug 22 18:53:47 2006
Subject: [mod_python] PythonAutoReload problem?
Message-ID: <901.4279-10130-917295890-1156287220@post.cz>

hallo

i am using mod_python, for a short time.
i found out that if i made some changes in script sometimes changes doesn't
show, i see only old version of script...

is there any problem with PythonAutoReload directive?
in my httpd.conf i have it explicitly set to "On"

my httpd.conf:
SetHandler mod_python
PythonHandler mod_python.publisher
PythonEnablePdb Off
PythonDebug On
PythonOption session "DbmSession"
PythonAutoReload On

mod_python version 3.2.10
apache version 2.0.58

thanks for any answer
From grahamd at dscpl.com.au  Tue Aug 22 19:13:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug 22 19:13:50 2006
Subject: [mod_python] PythonAutoReload problem?
Message-ID: <1156288424.4023@dscpl.user.openhosting.com>

=?us-ascii?Q?viktor=20vraniak?= wrote ..
> hallo
> 
> i am using mod_python, for a short time.
> i found out that if i made some changes in script sometimes changes doesn't
> show, i see only old version of script...
> 
> is there any problem with PythonAutoReload directive?
> in my httpd.conf i have it explicitly set to "On"
> 
> my httpd.conf:
> SetHandler mod_python
> PythonHandler mod_python.publisher
> PythonEnablePdb Off
> PythonDebug On
> PythonOption session "DbmSession"
> PythonAutoReload On
> 
> mod_python version 3.2.10
> apache version 2.0.58
> 
> thanks for any answer

There are known issues with module importing in the version you are using.
See:

  http://www.dscpl.com.au/articles/modpython-003.html

The bulk of the problems are addressed in 3.3, which at this point you can
only get by using the development version of 3.3 out of the subversion
repository.

Graham
From luismg at gmx.net  Thu Aug 24 17:07:19 2006
From: luismg at gmx.net (=?iso-8859-1?Q?Luis_M._Gonz=E1lez?=)
Date: Thu Aug 24 17:07:01 2006
Subject: [mod_python] Python Web Frameworks
Message-ID: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>

I wonder if anyone can tell me what's exactly the benefit of using Django or TurgoGears
compared to working with just plain mod_python.

I've been playing with mod_python for awhile (with publisher, psp or both combined), and frankly speaking, 
it feels very powerful, easy and fun (once I got all the installation and configurations correctly done),
and I don't know what else I could get in terms of ease of use and power from these frameworks.

Do I really need a framework on top of mod_python? 
Is there anything easier or better with these frameworks than with the standard mp handlers?

As far as I could see, these frameworks offer more solutions such as template languages, ORMs, etc...
but I can also use them with plain mod_python, and I'm not forced to use whatever it comes bundled with 
the package. For example, I like very much Cheetah, which plays very well with the publisher handle.
And although I don't feel much need for an ORM, I can use SqlObject or any other if I want.

I see that there are other handy things like automatic admin generation, which looks cool, 
but is this a reason enough for adding yet another abstraction layer to my production setup?
It seems to me that all these frameworks do is simply offering all the components bundled together.

Aside from the admin tools or Ajax facilities, what do I really get from using a framework? 
Is there any detail I'm not aware of?


Luis
I wonder if anyone can tell me what's exactly the benefit of using Django or TurgoGears
compared to working with just plain mod_python.

I've been playing with mod_python for awhile (with publisher, psp or both combined), and frankly speaking, 
it feels very powerful, easy and fun (once I got all the installation and configurations correctly done),
and I don't know what else I could get in terms of ease of use and power from these frameworks.

Do I really need a framework on top of mod_python? 
Is there anything easier or better with these frameworks than with the standard mp handlers?

As far as I could see, these frameworks offer more solutions such as template languages, ORMs, etc...
but I can also use them with plain mod_python, and I'm not forced to use whatever it comes bundled with 
the package. For example, I like very much Cheetah, which plays very well with the publisher handle.
And although I don't feel much need for an ORM, I can use SqlObject or any other if I want.

I see that there are other handy things like automatic admin generation, which looks cool, 
but is this a reason enough for adding yet another abstraction layer to my production setup?
It seems to me that all these frameworks do is simply offering all the components bundled together.

Is there any detail I'm not aware of?


Luis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060824/67e1e1f0/attachment.html
From tyctor at post.cz  Fri Aug 25 05:08:25 2006
From: tyctor at post.cz (=?us-ascii?Q?viktor=20vraniak?=)
Date: Fri Aug 25 05:25:21 2006
Subject: [mod_python] Re: PythonAutoReload problem?
Message-ID: <1892.4113-19591-1252825953-1156496905@post.cz>

>> hallo
>>
>> i am using mod_python, for a short time.
>> i found out that if i made some changes in script sometimes changes doesn't
>> show, i see only old version of script...
>>
>> is there any problem with PythonAutoReload directive?
>> in my httpd.conf i have it explicitly set to "On"
>>
>> my httpd.conf:
>> SetHandler mod_python
>> PythonHandler mod_python.publisher
>> PythonEnablePdb Off
>> PythonDebug On
>> PythonOption session "DbmSession"
>> PythonAutoReload On
>>
>> mod_python version 3.2.10
>> apache version 2.0.58
>>
>> thanks for any answer

>There are known issues with module importing in the version you are using.
>See:

>  http://www.dscpl.com.au/articles/modpython-003.html

>The bulk of the problems are addressed in 3.3, which at this point you can
>only get by using the development version of 3.3 out of the subversion
>repository.

>Graham

thaks very much for answer.
i'd ask how stable is CVS version?

viktor
From jpg at jgassociates.ca  Fri Aug 25 07:25:54 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug 25 07:25:58 2006
Subject: [mod_python] Re: PythonAutoReload problem?
In-Reply-To: <1892.4113-19591-1252825953-1156496905@post.cz>
References: <1892.4113-19591-1252825953-1156496905@post.cz>
Message-ID: <44EEDE42.4000300@jgassociates.ca>

viktor vraniak wrote:
>>> hallo
>>>
>>> i am using mod_python, for a short time.
>>> i found out that if i made some changes in script sometimes changes doesn't
>>> show, i see only old version of script...
>>>
>>> is there any problem with PythonAutoReload directive?
>>> in my httpd.conf i have it explicitly set to "On"
>>>
>>> my httpd.conf:
>>> SetHandler mod_python
>>> PythonHandler mod_python.publisher
>>> PythonEnablePdb Off
>>> PythonDebug On
>>> PythonOption session "DbmSession"
>>> PythonAutoReload On
>>>
>>> mod_python version 3.2.10
>>> apache version 2.0.58
>>>
>>> thanks for any answer
> 
>> There are known issues with module importing in the version you are using.
>> See:
> 
>>  http://www.dscpl.com.au/articles/modpython-003.html
> 
>> The bulk of the problems are addressed in 3.3, which at this point you can
>> only get by using the development version of 3.3 out of the subversion
>> repository.
> 
>> Graham
> 
> thaks very much for answer.
> i'd ask how stable is CVS version?

Personally I think it's pretty stable. We are not that far away from a 
release as I believe there are no major issues outstanding.

Jim


From rsynnott at gmail.com  Fri Aug 25 07:49:01 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Fri Aug 25 07:49:05 2006
Subject: [mod_python] Python Web Frameworks
In-Reply-To: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>
References: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>
Message-ID: <24f203480608250449x288cadc3j3da1280bb5e6a91f@mail.gmail.com>

On 8/24/06, Luis M. Gonz?lez <luismg@gmx.net> wrote:
>
>
>
> I wonder if anyone can tell me what's exactly the benefit of using Django or
> TurgoGears
> compared to working with just plain mod_python.
>

Django at least strongly encourages a pseudo-MVC design; of course,
you can do this with plain mod_python as well if you like.
Rob.

From fredrik.sandin at ltu.se  Fri Aug 25 09:16:28 2006
From: fredrik.sandin at ltu.se (Fredrik Sandin)
Date: Fri Aug 25 09:32:27 2006
Subject: [mod_python] Object persistence?
Message-ID: <op.teuchqvu9etm87@avari254.mt.ltu.se>


Hello!

I am new to mod_python and could need some advice. I want to create an
online GUI with mod_python for an existing application written in Python.

The Python application organizes distributed computations and therefore
maintains network connections to a number of computers. Users post jobs,
which are sent somewhere for execution and then the result is sent back
by a callback function. Illustration of principle:

class MyComputerCluster:
	def __init__(self, callback):
		self.callback = callback
		...
	def post_job(self, description):
		...

def mycallback(userid, result):
	print 'User %d requested: %s' % (userid, result)

mycluster = MyComputerCluster(mycallback)
mycluster.post_job('compute the meaning of 42')
...

Now, there is one major issue - Is it possible to create an object of type
MyComputerCluster for each user of the online GUI and keep it in memory
between calls, without spoiling the network connections maintained by the
object? Session variables can be used as reference for a persistent object,
but how to create it?

A solution would be to write an independent service that creates the
objects and listens for requests (post_job, get_result), but that takes
time...

Cheers,
Fredrik
From bburns at synset.net  Fri Aug 25 12:36:25 2006
From: bburns at synset.net (Barry Burns)
Date: Fri Aug 25 12:35:11 2006
Subject: [mod_python] mpcp
Message-ID: <44EF2709.7000800@synset.net>

Hello all,

I'm using (or attempting to use) mpcp to embed CherryPy apps with 
mod_python. I'm getting this message, however, when I try this:

Mod_python error: "PythonHandler mpcp"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
    log=debug)

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 454, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named mpcp


When I launch a command-line interpreter, mpcp exists (it won't import 
because of missing _apache, but it finds mpcp). I tried Googling the 
error and it only returned another server with the same error... :)

I'm using Apache 2.0.55-r1, mod_python 3.1.4-r1, and mpcp-1.5 on a 
Gentoo system. Apache and mod_python were installed via Portage and mpcp 
was installed via EasyInstall, if any of that matters.

-b


From fumanchu at amor.org  Fri Aug 25 12:48:00 2006
From: fumanchu at amor.org (Robert Brewer)
Date: Fri Aug 25 12:44:10 2006
Subject: [mod_python] mpcp
Message-ID: <435DF58A933BA74397B42CDEB8145A86047EF0C5@ex9.hostedexchange.local>

Barry Burns wrote:
> I'm using (or attempting to use) mpcp to embed CherryPy apps with 
> mod_python. I'm getting this message, however, when I try this:
> ...
> ImportError: No module named mpcp
> ...
> When I launch a command-line interpreter, mpcp exists

Best guess: the command-line user has permission to locate/access the
mpcp module, but the Apache user does not.


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org

From bburns at synset.net  Fri Aug 25 12:55:18 2006
From: bburns at synset.net (Barry Burns)
Date: Fri Aug 25 12:54:02 2006
Subject: [mod_python] mpcp
In-Reply-To: <435DF58A933BA74397B42CDEB8145A86047EF0C5@ex9.hostedexchange.local>
References: <435DF58A933BA74397B42CDEB8145A86047EF0C5@ex9.hostedexchange.local>
Message-ID: <44EF2B76.3030605@synset.net>

Robert Brewer wrote:
> Barry Burns wrote:
>   
>> I'm using (or attempting to use) mpcp to embed CherryPy apps with 
>> mod_python. I'm getting this message, however, when I try this:
>> ...
>> ImportError: No module named mpcp
>> ...
>> When I launch a command-line interpreter, mpcp exists
>>     
>
> Best guess: the command-line user has permission to locate/access the
> mpcp module, but the Apache user does not.
>
>
> Robert Brewer
> System Architect
> Amor Ministries
> fumanchu@amor.org
>   

I looked at the permissions, and everyone should have access... so I 
temporarily changed the apache user's shell to sh and ran Python, which 
allows me to get as far as missing _apache (i.e., it finds mpcp).

-b
From jpg at jgassociates.ca  Fri Aug 25 15:21:19 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug 25 15:21:24 2006
Subject: [mod_python] mpcp
In-Reply-To: <44EF2B76.3030605@synset.net>
References: <435DF58A933BA74397B42CDEB8145A86047EF0C5@ex9.hostedexchange.local>
	<44EF2B76.3030605@synset.net>
Message-ID: <44EF4DAF.4020606@jgassociates.ca>

Barry Burns wrote:
> Robert Brewer wrote:
>> Barry Burns wrote:
>>  
>>> I'm using (or attempting to use) mpcp to embed CherryPy apps with 
>>> mod_python. I'm getting this message, however, when I try this:
>>> ...
>>> ImportError: No module named mpcp
>>> ...
>>> When I launch a command-line interpreter, mpcp exists
>>>     
>>
>> Best guess: the command-line user has permission to locate/access the
>> mpcp module, but the Apache user does not.
>>
>>
>> Robert Brewer
>> System Architect
>> Amor Ministries
>> fumanchu@amor.org
>>   
> 
> I looked at the permissions, and everyone should have access... so I 
> temporarily changed the apache user's shell to sh and ran Python, which 
> allows me to get as far as missing _apache (i.e., it finds mpcp).

Robert's was a good guess. Can you provide a link to mpcp? Google 
doesn't turn up anything obvious.

Jim


From hockeysk8 at gmail.com  Fri Aug 25 15:24:55 2006
From: hockeysk8 at gmail.com (Kevin J. Smith)
Date: Fri Aug 25 15:25:00 2006
Subject: [mod_python] Python Web Frameworks
In-Reply-To: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>
References: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>
Message-ID: <1ee0630e0608251224m2d128939ubffcb7bfb36c5c5d@mail.gmail.com>

You have asked and answered your own question.  A framework usually provides
components that make up a "best practices" architecture of a web application
such as an MVC skeleton to work within, templating, and ORM.  You are
correct that most frameworks choose one particular implementation of each of
those components and if it is not to your liking then you should choose
another framework or roll-your-own (or join the development team of the
framework and code a plugin or extension.)  What frameworks do is encourage
code re-use.  Instead of rolling-your-own you get the plumbing for free.  If
you are going to choose to use straight-up mod_python I can guarantee that
after working on a project or two you will spend time slowly developing your
own framework so that for each request you will not have to cut and paste
mundane code that generically handles the request and does often repeated
tasks.

Cheers

On 8/24/06, Luis M. Gonz?lez <luismg@gmx.net> wrote:
>
>  I wonder if anyone can tell me what's exactly the benefit of using Django
> or TurgoGears
> compared to working with just plain mod_python.
>
> I've been playing with mod_python for awhile (with publisher, psp or both
> combined), and frankly speaking,
> it feels very powerful, easy and fun (once I got all the installation and
> configurations correctly done),
> and I don't know what else I could get in terms of ease of use and power
> from these frameworks.
>
> Do I really need a framework on top of mod_python?
> Is there anything easier or better with these frameworks than with the
> standard mp handlers?
>
> As far as I could see, these frameworks offer more solutions such as
> template languages, ORMs, etc...
> but I can also use them with plain mod_python, and I'm not forced to use
> whatever it comes bundled with
> the package. For example, I like very much Cheetah, which plays very well
> with the publisher handle.
> And although I don't feel much need for an ORM, I can use SqlObject or any
> other if I want.
>
> I see that there are other handy things like automatic admin generation,
> which looks cool,
> but is this a reason enough for adding yet another abstraction layer to my
> production setup?
> It seems to me that all these frameworks do is simply offering all the
> components bundled together.
>
> Aside from the admin tools or Ajax facilities, what do I really get from
> using a framework?
> Is there any detail I'm not aware of?
>
> Luis I wonder if anyone can tell me what's exactly the benefit of using
> Django or TurgoGears
> compared to working with just plain mod_python.
>
> I've been playing with mod_python for awhile (with publisher, psp or both
> combined), and frankly speaking,
> it feels very powerful, easy and fun (once I got all the installation and
> configurations correctly done),
> and I don't know what else I could get in terms of ease of use and power
> from these frameworks.
>
> Do I really need a framework on top of mod_python?
> Is there anything easier or better with these frameworks than with the
> standard mp handlers?
>
> As far as I could see, these frameworks offer more solutions such as
> template languages, ORMs, etc...
> but I can also use them with plain mod_python, and I'm not forced to use
> whatever it comes bundled with
> the package. For example, I like very much Cheetah, which plays very well
> with the publisher handle.
> And although I don't feel much need for an ORM, I can use SqlObject or any
> other if I want.
>
> I see that there are other handy things like automatic admin generation,
> which looks cool,
> but is this a reason enough for adding yet another abstraction layer to my
> production setup?
> It seems to me that all these frameworks do is simply offering all the
> components bundled together.
>
> Is there any detail I'm not aware of?
>
> Luis
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060825/fdcd3c77/attachment.html
From fumanchu at amor.org  Fri Aug 25 15:57:28 2006
From: fumanchu at amor.org (Robert Brewer)
Date: Fri Aug 25 15:53:37 2006
Subject: [mod_python] mpcp
Message-ID: <435DF58A933BA74397B42CDEB8145A86047EF52E@ex9.hostedexchange.local>

Jim Gallacher wrote:
> Can you provide a link to mpcp? Google doesn't turn up anything
obvious.

mpcp can be found at http://jamwt.com/

[Aside: it will be distributed as cherrypy._cpmodpy when version 3 comes
out.]


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org

From jpg at jgassociates.ca  Fri Aug 25 16:38:07 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Aug 25 16:38:08 2006
Subject: [mod_python] mpcp
In-Reply-To: <435DF58A933BA74397B42CDEB8145A86047EF52E@ex9.hostedexchange.local>
References: <435DF58A933BA74397B42CDEB8145A86047EF52E@ex9.hostedexchange.local>
Message-ID: <44EF5FAF.8090502@jgassociates.ca>

Robert Brewer wrote:
> Jim Gallacher wrote:
>> Can you provide a link to mpcp? Google doesn't turn up anything
> obvious.
> 
> mpcp can be found at http://jamwt.com/
> 
> [Aside: it will be distributed as cherrypy._cpmodpy when version 3 comes
> out.]

There is certainly nothing fancy in mpcp.py. Any chance you have 2 
python versions installed, and apache/mod_python is finding a different 
one from the cmd line interpreter?

You might want to try dumping the python version in a simple handler.

from mod_python import apache
import sys

def handler(req):
     req.content_type = 'text/plain'
     req.write(str(sys.version))
     # dump the sys. path for good measure
     req.write('\n'.join(sys.path))
     return apache.OK

But I guess you could check the server startup log as well. :)

Jim
From luismg at gmx.net  Fri Aug 25 16:28:53 2006
From: luismg at gmx.net (=?iso-8859-1?Q?Luis_M._Gonz=E1lez?=)
Date: Fri Aug 25 16:38:13 2006
Subject: [mod_python] Python Web Frameworks
References: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>
	<1ee0630e0608251224m2d128939ubffcb7bfb36c5c5d@mail.gmail.com>
Message-ID: <006201c6c886$73b76710$6c00a8c0@averatecdda041>

Yes, I guess I already answered my own question...
I shouldn't try to compare mod_python with a framework. 
Instead, I should compare mod_python (or better yet, its standard handlers) with the main components of these frameworks.

My question should have been:
How does mod python's publisher compare to CherryPy (main component of TurboGears)? Or to Django's MVC programing model?
I'm referring to aspects such as session handling, forms, dispatching, etc... not to the other components that can be replaced.

I got the impression that many people ignore mod_python includes tools such as publisher or PSP for web development.
And I also got the impression that many believe that they "need" a framework on top of mod_python in order to develop a web site.

Is that true?
Or it's just that the tools included into mod_python are not enough to compete with CheeryPy or other solutions?


Luis
  ----- Original Message ----- 
  From: Kevin J. Smith 
  To: Luis M. Gonz?lez 
  Cc: mod_python@modpython.org 
  Sent: Friday, August 25, 2006 4:24 PM
  Subject: Re: [mod_python] Python Web Frameworks


  You have asked and answered your own question.  A framework usually provides components that make up a "best practices" architecture of a web application such as an MVC skeleton to work within, templating, and ORM.  You are correct that most frameworks choose one particular implementation of each of those components and if it is not to your liking then you should choose another framework or roll-your-own (or join the development team of the framework and code a plugin or extension.)  What frameworks do is encourage code re-use.  Instead of rolling-your-own you get the plumbing for free.  If you are going to choose to use straight-up mod_python I can guarantee that after working on a project or two you will spend time slowly developing your own framework so that for each request you will not have to cut and paste mundane code that generically handles the request and does often repeated tasks. 

  Cheers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060825/61e84ae3/attachment-0001.html
From earle at bluelavatech.com  Fri Aug 25 20:10:00 2006
From: earle at bluelavatech.com (Earle Ady)
Date: Fri Aug 25 20:12:19 2006
Subject: [mod_python] Python Web Frameworks
In-Reply-To: <006201c6c886$73b76710$6c00a8c0@averatecdda041>
References: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>
	<1ee0630e0608251224m2d128939ubffcb7bfb36c5c5d@mail.gmail.com>
	<006201c6c886$73b76710$6c00a8c0@averatecdda041>
Message-ID: <A2EB84D9-BE19-4A7C-8563-244576FA7EE7@bluelavatech.com>

Personally I've been using Django for some time now, and am very  
happy with it as a framework.

As for actual usability items such as form processing, session  
handling, authentication wrappers and classes, etc, it is certainly a  
top candidate.  Django also has a very active and growing community.   
CherryPy is a fine templating engine as well, and TurboGears has some  
excellent qualities.

Using strictly mod_python, you will be doing a significant amount of  
things "manually", which certainly has its merits.

It will come down to what you're most comfortable using, and/or most  
familiar with.

Mahalo,
earle.

On Aug 25, 2006, at 10:28 AM, Luis M. Gonz?lez wrote:

> Yes, I guess I already answered my own question...
> I shouldn't try to compare mod_python with a framework.
> Instead, I should compare mod_python (or better yet, its standard  
> handlers) with the main components of these frameworks.
>
> My question should have been:
> How does mod python's publisher compare to CherryPy (main component  
> of TurboGears)? Or to Django's MVC programing model?
> I'm referring to aspects such as session handling, forms,  
> dispatching, etc... not to the other components that can be replaced.
>
> I got the impression that many people ignore mod_python includes  
> tools such as publisher or PSP for web development.
> And I also got the impression that many believe that they "need" a  
> framework on top of mod_python in order to develop a web site.
>
> Is that true?
> Or it's just that the tools included into mod_python are not enough  
> to compete with CheeryPy or other solutions?
>
>
> Luis
> ----- Original Message -----
> From: Kevin J. Smith
> To: Luis M. Gonz?lez
> Cc: mod_python@modpython.org
> Sent: Friday, August 25, 2006 4:24 PM
> Subject: Re: [mod_python] Python Web Frameworks
>
> You have asked and answered your own question.  A framework usually  
> provides components that make up a "best practices" architecture of  
> a web application such as an MVC skeleton to work within,  
> templating, and ORM.  You are correct that most frameworks choose  
> one particular implementation of each of those components and if it  
> is not to your liking then you should choose another framework or  
> roll-your-own (or join the development team of the framework and  
> code a plugin or extension.)  What frameworks do is encourage code  
> re-use.  Instead of rolling-your-own you get the plumbing for  
> free.  If you are going to choose to use straight-up mod_python I  
> can guarantee that after working on a project or two you will spend  
> time slowly developing your own framework so that for each request  
> you will not have to cut and paste mundane code that generically  
> handles the request and does often repeated tasks.
>
> Cheers
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From jd at commandprompt.com  Fri Aug 25 22:11:33 2006
From: jd at commandprompt.com (Joshua D. Drake)
Date: Fri Aug 25 22:11:41 2006
Subject: [mod_python] Python Web Frameworks
In-Reply-To: <A2EB84D9-BE19-4A7C-8563-244576FA7EE7@bluelavatech.com>
References: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041>	<1ee0630e0608251224m2d128939ubffcb7bfb36c5c5d@mail.gmail.com>	<006201c6c886$73b76710$6c00a8c0@averatecdda041>
	<A2EB84D9-BE19-4A7C-8563-244576FA7EE7@bluelavatech.com>
Message-ID: <44EFADD5.9020506@commandprompt.com>

Earle Ady wrote:
> Personally I've been using Django for some time now, and am very happy 
> with it as a framework.

Django is quite nice as long as you don't want to do any Dbfoo. The ORM 
is fairly limited.

We have had to modify the ORM a couple of times to make it reasonable 
with some of the PostgreSQL advanced features.

Joshua D. Drake

-- 

    === The PostgreSQL Company: Command Prompt, Inc. ===
Sales/Support: +1.503.667.4564 || 24x7/Emergency: +1.800.492.2240
    Providing the most comprehensive  PostgreSQL solutions since 1997
              http://www.commandprompt.com/


From grahamd at dscpl.com.au  Fri Aug 25 23:36:14 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Aug 25 23:35:59 2006
Subject: [mod_python] Object persistence?
In-Reply-To: <op.teuchqvu9etm87@avari254.mt.ltu.se>
References: <op.teuchqvu9etm87@avari254.mt.ltu.se>
Message-ID: <0AFB1E81-EEB3-4201-BA94-D8A5867B51A0@dscpl.com.au>


On 25/08/2006, at 11:16 PM, Fredrik Sandin wrote:

>
> Hello!
>
> I am new to mod_python and could need some advice. I want to create an
> online GUI with mod_python for an existing application written in  
> Python.
>
> The Python application organizes distributed computations and  
> therefore
> maintains network connections to a number of computers. Users post  
> jobs,
> which are sent somewhere for execution and then the result is sent  
> back
> by a callback function. Illustration of principle:
>
> class MyComputerCluster:
> 	def __init__(self, callback):
> 		self.callback = callback
> 		...
> 	def post_job(self, description):
> 		...
>
> def mycallback(userid, result):
> 	print 'User %d requested: %s' % (userid, result)
>
> mycluster = MyComputerCluster(mycallback)
> mycluster.post_job('compute the meaning of 42')
> ...
>
> Now, there is one major issue - Is it possible to create an object  
> of type
> MyComputerCluster for each user of the online GUI and keep it in  
> memory
> between calls, without spoiling the network connections maintained  
> by the
> object? Session variables can be used as reference for a persistent  
> object,
> but how to create it?
>
> A solution would be to write an independent service that creates the
> objects and listens for requests (post_job, get_result), but that  
> takes
> time...

Does the code above you give as an example already exist and a part of
your existing Python application? What framework is your application for
performing the distributed jobs written in, or is it some home grown  
custom
framework?

I have a sense of what you want to do, but because no real  
information is
provided about the existing application or what framework it uses, it  
is hard
to give any advice.

Anyway, if the issue is more about how handlers in mod_python might
communicate with your application, you might look at XML-RPC using the
xmlrpclib module in Python. Depending on the framework the application
uses though, it may not be possible to embed an XML-RPC server in the
application which could respond to the handlers run under mod_python.

Can you perhaps be clearer about the separation between your mod_python
handlers and your application and how you intend communicating between
the two.

Graham
From fumanchu at amor.org  Sat Aug 26 01:11:57 2006
From: fumanchu at amor.org (Robert Brewer)
Date: Sat Aug 26 01:08:07 2006
Subject: [mod_python] Python Web Frameworks
References: <000801c6c7c1$4bf74670$6c00a8c0@averatecdda041><1ee0630e0608251224m2d128939ubffcb7bfb36c5c5d@mail.gmail.com><006201c6c886$73b76710$6c00a8c0@averatecdda041>
	<A2EB84D9-BE19-4A7C-8563-244576FA7EE7@bluelavatech.com>
Message-ID: <435DF58A933BA74397B42CDEB8145A86224C36@ex9.hostedexchange.local>

Earle Ady wrote:
> CherryPy is a fine templating engine as well...

Thanks for the compliment! It must be damning praise, however, since CherryPy is not a (and has no) templating engine. Hope you like some of its other features... <winkety-wink>


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060825/704fad89/attachment.html
From fredrik.sandin at ltu.se  Mon Aug 28 06:34:18 2006
From: fredrik.sandin at ltu.se (Fredrik Sandin)
Date: Mon Aug 28 06:50:20 2006
Subject: [mod_python] Object persistence?
In-Reply-To: <0AFB1E81-EEB3-4201-BA94-D8A5867B51A0@dscpl.com.au>
References: <op.teuchqvu9etm87@avari254.mt.ltu.se>
	<0AFB1E81-EEB3-4201-BA94-D8A5867B51A0@dscpl.com.au>
Message-ID: <op.tezozgwe9etm87@avari254.mt.ltu.se>

On Sat, 26 Aug 2006 05:36:14 +0200, Graham Dumpleton  
<grahamd@dscpl.com.au> wrote:
>
> On 25/08/2006, at 11:16 PM, Fredrik Sandin wrote:
>
>>
>> Hello!
>>
>> I am new to mod_python and could need some advice. I want to create an
>> online GUI with mod_python for an existing application written in  
>> Python.
>>
>> The Python application organizes distributed computations and therefore
>> maintains network connections to a number of computers. Users post jobs,
>> which are sent somewhere for execution and then the result is sent back
>> by a callback function. Illustration of principle:
>>
>> class MyComputerCluster:
>> 	def __init__(self, callback):
>> 		self.callback = callback
>> 		...
>> 	def post_job(self, description):
>> 		...
>>
>> def mycallback(userid, result):
>> 	print 'User %d requested: %s' % (userid, result)
>>
>> mycluster = MyComputerCluster(mycallback)
>> mycluster.post_job('compute the meaning of 42')
>> ...
>>
>> Now, there is one major issue - Is it possible to create an object of  
>> type
>> MyComputerCluster for each user of the online GUI and keep it in memory
>> between calls, without spoiling the network connections maintained by  
>> the
>> object? Session variables can be used as reference for a persistent  
>> object,
>> but how to create it?
>>
>> A solution would be to write an independent service that creates the
>> objects and listens for requests (post_job, get_result), but that takes
>> time...
>
> Does the code above you give as an example already exist and a part of
> your existing Python application? What framework is your application for
> performing the distributed jobs written in, or is it some home grown  
> custom
> framework?
>
> I have a sense of what you want to do, but because no real information is
> provided about the existing application or what framework it uses, it is  
> hard
> to give any advice.
>
> Anyway, if the issue is more about how handlers in mod_python might
> communicate with your application, you might look at XML-RPC using the
> xmlrpclib module in Python. Depending on the framework the application
> uses though, it may not be possible to embed an XML-RPC server in the
> application which could respond to the handlers run under mod_python.
>
> Can you perhaps be clearer about the separation between your mod_python
> handlers and your application and how you intend communicating between
> the two.
>
> Graham


Dear Graham,

yes, the code I gave as an example represents an existing Python
application. It is home-gown, so your suggestion to embed an XML-RPC
server could do the trick, will have a closer look at it. Thanks!

By the way, why is it so difficult to support persistent objects,
a "state", from one call to the next? The mod_php application itself
has a state, and each user can be associated with a sessid, so the
problem must be that a user could be served by different mod_php
processes from one call to the next?

In that case, would it not be possible to use the sessid to make
sure that a user is served by the same mod_php process as long
as the session is valid?

Cheers,
Fredrik
From grahamd at dscpl.com.au  Mon Aug 28 07:48:05 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Aug 28 07:49:10 2006
Subject: [mod_python] Object persistence?
In-Reply-To: <op.tezozgwe9etm87@avari254.mt.ltu.se>
References: <op.teuchqvu9etm87@avari254.mt.ltu.se>
	<0AFB1E81-EEB3-4201-BA94-D8A5867B51A0@dscpl.com.au>
	<op.tezozgwe9etm87@avari254.mt.ltu.se>
Message-ID: <B95C87A7-E59E-4346-AE6C-8653C15617FD@dscpl.com.au>


On 28/08/2006, at 8:34 PM, Fredrik Sandin wrote:

> Dear Graham,
>
> yes, the code I gave as an example represents an existing Python
> application. It is home-gown, so your suggestion to embed an XML-RPC
> server could do the trick, will have a closer look at it. Thanks!
>
> By the way, why is it so difficult to support persistent objects,
> a "state", from one call to the next? The mod_php application itself
> has a state, and each user can be associated with a sessid, so the
> problem must be that a user could be served by different mod_php
> processes from one call to the next?
>
> In that case, would it not be possible to use the sessid to make
> sure that a user is served by the same mod_php process as long
> as the session is valid?

You can't control to which Apache child process subsequent requests
get directed.

In terms of what you are trying to do, a mod_python Session object can
at least be used to hold a handle of some sort used to identify  
something
in your backend application.

Take for example recipe at:

   http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/81613

In this example the backend framework creates a unique cursor instance
identified by an ID. This ID is used by the XML-RPC client to  
construct a
new URL which addresses the cursor instance. The client can then
interact with the cursor, with any cursor state maintained until the  
client
says it no longer needs the cursor or the inactivity timer expires at  
which
point the cursor instance self destructs.

Now, if mod_python were the client, the ID used to identify the  
cursor isn't
something which you would want to be pushing all the way back to the
user web browser in a cookie, as someone else could fake it up and
access someone else's cursor. Thus, the ID for the cursor could be  
stored
in the mod_python Session object with it then being available for  
mod_python
handlers to access on each request, no matter which child process  
handles
the request, and mod_python handler acts as XML-RPC client to access
backend using ID as identifier in URL.

Hope you can follow what I am talking about.

Graham
From jpg at jgassociates.ca  Mon Aug 28 07:49:56 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Aug 28 07:49:56 2006
Subject: [mod_python] Object persistence?
In-Reply-To: <op.tezozgwe9etm87@avari254.mt.ltu.se>
References: <op.teuchqvu9etm87@avari254.mt.ltu.se>	<0AFB1E81-EEB3-4201-BA94-D8A5867B51A0@dscpl.com.au>
	<op.tezozgwe9etm87@avari254.mt.ltu.se>
Message-ID: <44F2D864.4070304@jgassociates.ca>

Fredrik Sandin wrote:
> On Sat, 26 Aug 2006 05:36:14 +0200, Graham Dumpleton 
> <grahamd@dscpl.com.au> wrote:
>>
>> On 25/08/2006, at 11:16 PM, Fredrik Sandin wrote:
>>
>>>
>>> Hello!
>>>
>>> I am new to mod_python and could need some advice. I want to create an
>>> online GUI with mod_python for an existing application written in 
>>> Python.
>>>
>>> The Python application organizes distributed computations and therefore
>>> maintains network connections to a number of computers. Users post jobs,
>>> which are sent somewhere for execution and then the result is sent back
>>> by a callback function. Illustration of principle:
>>>
>>> class MyComputerCluster:
>>>     def __init__(self, callback):
>>>         self.callback = callback
>>>         ...
>>>     def post_job(self, description):
>>>         ...
>>>
>>> def mycallback(userid, result):
>>>     print 'User %d requested: %s' % (userid, result)
>>>
>>> mycluster = MyComputerCluster(mycallback)
>>> mycluster.post_job('compute the meaning of 42')
>>> ...
>>>
>>> Now, there is one major issue - Is it possible to create an object of 
>>> type
>>> MyComputerCluster for each user of the online GUI and keep it in memory
>>> between calls, without spoiling the network connections maintained by 
>>> the
>>> object? Session variables can be used as reference for a persistent 
>>> object,
>>> but how to create it?
>>>
>>> A solution would be to write an independent service that creates the
>>> objects and listens for requests (post_job, get_result), but that takes
>>> time...
>>
>> Does the code above you give as an example already exist and a part of
>> your existing Python application? What framework is your application for
>> performing the distributed jobs written in, or is it some home grown 
>> custom
>> framework?
>>
>> I have a sense of what you want to do, but because no real information is
>> provided about the existing application or what framework it uses, it 
>> is hard
>> to give any advice.
>>
>> Anyway, if the issue is more about how handlers in mod_python might
>> communicate with your application, you might look at XML-RPC using the
>> xmlrpclib module in Python. Depending on the framework the application
>> uses though, it may not be possible to embed an XML-RPC server in the
>> application which could respond to the handlers run under mod_python.
>>
>> Can you perhaps be clearer about the separation between your mod_python
>> handlers and your application and how you intend communicating between
>> the two.
>>
>> Graham
> 
> 
> Dear Graham,
> 
> yes, the code I gave as an example represents an existing Python
> application. It is home-gown, so your suggestion to embed an XML-RPC
> server could do the trick, will have a closer look at it. Thanks!
> 
> By the way, why is it so difficult to support persistent objects,
> a "state", from one call to the next? The mod_php application itself
> has a state, and each user can be associated with a sessid, so the
> problem must be that a user could be served by different mod_php
> processes from one call to the next?

Correct, assuming you s/mod_php/mod_python/. :) Each process gets its 
own interpreter with a separate copy of all your objects. It's exactly 
the same as launching multiple python interpreters from the command 
line. Each one is completely independent, and I'm sure that you wouldn't 
expect a change to some object in one interpreter to change a 
corresponding object in another interpreter? In mod_python it all comes 
down to the mpm you are using. The only one where that has a single 
process where objects could easily be shared across threads is 
mpm-winnt, but this obviously limited to Windows. There is no generic 
mod_python solution that will work with all of the Apache mpm's.

> In that case, would it not be possible to use the sessid to make
> sure that a user is served by the same mod_php process as long
> as the session is valid?

No. Apache selects an available process to handle a request pretty much 
at random. (It may be the same process if there is a KeepAlive, but you 
shouldn't count on it). Apache itself has no knowledge (or interest) in 
the internal workings of your application, such as a session cookie, so 
there is no way associate a process with a session. It works the other 
way around, with the mod_python handler associating a session cookie 
with some data in a persistent store.

Jim
From jcigar at ulb.ac.be  Mon Aug 28 11:12:21 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Mon Aug 28 11:03:41 2006
Subject: [mod_python] encoding
Message-ID: <44F307D5.9040203@ulb.ac.be>

Hello,

I have a little question about encodings.
On the project I'm currently working on, everything is in unicode :
- locales on the server (LANG=en_US.UTF-8)
- the PostgreSQL database
- ...

I'm using the Psycopg2 module to interact with PostgreSQL, and SimpleTAL 
for the template engine.
Those two libraries requires type unicode instead of type str, otherwise 
I get errors (ContextContentException: Found non-unicode string in 
Context! for SimpleTal, and a "Can't adapt ...." error with psycopg2). 
It's still a little obscure for me why it doesn't work with type str ...

The solution I found (which works) was to .decode('utf-8') or 
unicode(mystr, 'utf-8') the POSTed data, but I wondered if it's not 
dangerous or incorrect to do like that ? To my knowledge, Apache does 
not make conversion of encoding, so it should be done at the mod_python 
level, right ?

Is there a cleaner solution, which works in all cases ?

In advance thanks, and sorry for my English

-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From listspam at flowtheory.net  Mon Aug 28 15:30:02 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Mon Aug 28 15:30:15 2006
Subject: [mod_python] encoding
In-Reply-To: <44F307D5.9040203@ulb.ac.be>
References: <44F307D5.9040203@ulb.ac.be>
Message-ID: <1156793403.23895.7.camel@localhost.localdomain>

Grr. Sorry -- you hit on a pet peeve of mine.

UTF-8 IS NOT UNICODE!!!!!!!!!! GAH!!!!!!!!!

UTF-8 is a character encoding. UTF-16 is a character encoding. Latin1 is
a character encoding. Big5 is a character encoding.

Unicode is ***NOT*** a character encoding. Think of it as the Rosetta
stone for character encodings.

So when you .decode('utf8') a string encoded in UTF-8 you are taking a
oython string in the UTF-8 encoding and replacing the characters with
the values of their corresponding Unicode codepages -- this changes it
to the Python type "unicode". Then you can .encode(some_other_charenc)
and it will render those codepages in that particular character
encoding.

-jag

On Mon, 2006-08-28 at 17:12 +0200, Julien Cigar wrote:
> Hello,
> 
> I have a little question about encodings.
> On the project I'm currently working on, everything is in unicode :
> - locales on the server (LANG=en_US.UTF-8)
> - the PostgreSQL database
> - ...
> 
> I'm using the Psycopg2 module to interact with PostgreSQL, and SimpleTAL 
> for the template engine.
> Those two libraries requires type unicode instead of type str, otherwise 
> I get errors (ContextContentException: Found non-unicode string in 
> Context! for SimpleTal, and a "Can't adapt ...." error with psycopg2). 
> It's still a little obscure for me why it doesn't work with type str ...
> 
> The solution I found (which works) was to .decode('utf-8') or 
> unicode(mystr, 'utf-8') the POSTed data, but I wondered if it's not 
> dangerous or incorrect to do like that ? To my knowledge, Apache does 
> not make conversion of encoding, so it should be done at the mod_python 
> level, right ?
> 
> Is there a cleaner solution, which works in all cases ?
> 
> In advance thanks, and sorry for my English
> 

From deron.meranda at gmail.com  Mon Aug 28 15:54:39 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Aug 28 15:54:43 2006
Subject: [mod_python] encoding
In-Reply-To: <44F307D5.9040203@ulb.ac.be>
References: <44F307D5.9040203@ulb.ac.be>
Message-ID: <5c06fa770608281254w4ff83675g9f8cb75756b816b4@mail.gmail.com>

On 8/28/06, Julien Cigar <jcigar@ulb.ac.be> wrote:
> On the project I'm currently working on, everything is in unicode :
> - locales on the server (LANG=en_US.UTF-8)
> - the PostgreSQL database

Always remember that a Unicode string is an abstract concept.
A UTF-8 encoded byte stream is one (among many) possible
concrete representations of a Unicode string.

In the Python language, the 'unicode' type is also abstract.
You have to (currently) convert it to a 'str' type to be able
to do any I/O on it.

> I'm using the Psycopg2 module to interact with PostgreSQL, and SimpleTAL
> for the template engine.
> Those two libraries requires type unicode instead of type str, otherwise
> I get errors (ContextContentException: Found non-unicode string in
> Context! for SimpleTal, and a "Can't adapt ...." error with psycopg2).
> It's still a little obscure for me why it doesn't work with type str ...

I'm not familiar with SimpleTal, but I suspect that it is trying to
prevent the caller from making dumb mistakes.  By only accepting
'unicode' strings it is in full control over any encoding representation
it needs to do internally to talk to PostgreSQL.  If you pass it just a
'str' it has to assume that the caller has already performed some
sort of encoding, which could be a rather unsafe assumption.

> The solution I found (which works) was to .decode('utf-8') or
> unicode(mystr, 'utf-8') the POSTed data, but I wondered if it's not
> dangerous or incorrect to do like that ?

Encoding unicode into a UTF-8 str is always safe:

   u'\u2022'.encode('utf8')  -> '\xe2\x80\xa2'

Decoding a UTF-8 str back into unicode is sometimes safe:

   '\xe2\x80\xa2'.decode('utf8') -> u'\u2022'

but

   '\xf2\x81\x88'.decode('utf8')  -> UnicodeDecodeError

Also, depending on how your Python was compiled, it may
only be able to represent the BMP portion of the Unicode
defined characters (the first 65536 characters).  So this
may or may not work:

  '\xf4\x8f\xbf\xbf'.decode('utf8')  -> u'\U0010ffff'

Doing the decode the way you are doing it is probably the
best thing to do.  But do be aware that it is possible for a malicious
UA to intentionally send you bogus data which would cause the
decode to fail.  Either just let the UnicodeDecodeError bubble
up, or catch it and send back an HTTP 400 error (or something
else).

Another thing you need to consider is trying to make sure
that the POSTed data is in fact UTF-8 encoded to begin
with.  Unfortunately although HTTP provides a way to
explicitly send the encoding to the browser (via the
Content-Type encoding parameter), there is not a very good
way for the reverse direction.  Actually it could have been
done, but in practice it's not.

Usually the best insurance is to just always send all HTML
or XML pages to the browser already in UTF-8 whether they
need to be or not.  Do this and you'll rarely get bit.  Browsers
will always encode POSTed text data in the same character
encoding as the page it received which contains the <form>
element.  Although there is also the accept-charset attribute
of <form>, it's best not to try to use it.


> To my knowledge, Apache does not make conversion of encoding,
> so it should be done at the mod_python level, right ?

Conversion should actually be at the application layer.  The content
is really just a sequence of bytes.  The interpretation of those into
characters is something that Apache should not do, and it is
questionable even if mod_python should do it (except perhaps for
the PSP template part of mod_python rather than the core part).

As far as Apache or mod_python are concerned the content could
even be something other than text, so character conversion may
not even be a defined operation.

If your byte streams are UTF-8 encoded (which you can control
via the Content-Type header, etc.) then using the .decode() and
.encode() methods is perhaps the best way convert them to/from
python unicode objects.

If you're using a web framework on top of mod_python, then any
such conversion may be done or simplified by that layer.

IMHO, the real source of confusion is that Python's str type is
quite ill-defined.  Really there should only be one character string
type (basically the same as the unicode type) and a byte string type,
which is not mapped to characters in any way at all.  There has
been periodic discussion on the python dev list, but for now we
have to live with the str type.

> Is there a cleaner solution, which works in all cases ?

Not really.  At least not without being quite risky and prone to
subtle errors.

Of course being Python, you can write your own simplifying
wrappers or decorators since you know your application's needs.
-- 
Deron Meranda
From jcigar at ulb.ac.be  Mon Aug 28 16:17:18 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Mon Aug 28 16:17:32 2006
Subject: [mod_python] encoding
In-Reply-To: <1156793403.23895.7.camel@localhost.localdomain>
References: <44F307D5.9040203@ulb.ac.be>
	<1156793403.23895.7.camel@localhost.localdomain>
Message-ID: <44F34F4E.6020602@ulb.ac.be>

Joshua Ginsberg wrote:
> Grr. Sorry -- you hit on a pet peeve of mine.
>
> UTF-8 IS NOT UNICODE!!!!!!!!!! GAH!!!!!!!!!
>
>   

Yep I know that :-) I understand that an Unicode is just a 21 bits 
string ... (an unique number between 1 and 2097152) ...

> UTF-8 is a character encoding. UTF-16 is a character encoding. Latin1 is
> a character encoding. Big5 is a character encoding.
>
> Unicode is ***NOT*** a character encoding. Think of it as the Rosetta
> stone for character encodings.
>
> So when you .decode('utf8') a string encoded in UTF-8 you are taking a
>   

That was my question, how can be sure that a string is always encoded in 
UTF-8 when the user submit the form ?

> oython string in the UTF-8 encoding and replacing the characters with
> the values of their corresponding Unicode codepages -- this changes it
> to the Python type "unicode". Then you can .encode(some_other_charenc)
> and it will render those codepages in that particular character
> encoding.
>
> -jag
>
> On Mon, 2006-08-28 at 17:12 +0200, Julien Cigar wrote:
>   
>> Hello,
>>
>> I have a little question about encodings.
>> On the project I'm currently working on, everything is in unicode :
>> - locales on the server (LANG=en_US.UTF-8)
>> - the PostgreSQL database
>> - ...
>>
>> I'm using the Psycopg2 module to interact with PostgreSQL, and SimpleTAL 
>> for the template engine.
>> Those two libraries requires type unicode instead of type str, otherwise 
>> I get errors (ContextContentException: Found non-unicode string in 
>> Context! for SimpleTal, and a "Can't adapt ...." error with psycopg2). 
>> It's still a little obscure for me why it doesn't work with type str ...
>>
>> The solution I found (which works) was to .decode('utf-8') or 
>> unicode(mystr, 'utf-8') the POSTed data, but I wondered if it's not 
>> dangerous or incorrect to do like that ? To my knowledge, Apache does 
>> not make conversion of encoding, so it should be done at the mod_python 
>> level, right ?
>>
>> Is there a cleaner solution, which works in all cases ?
>>
>> In advance thanks, and sorry for my English
>>
>>     
>
>   

From akhtet at gmail.com  Tue Aug 29 09:01:31 2006
From: akhtet at gmail.com (Aung Kyaw Htet)
Date: Tue Aug 29 09:01:40 2006
Subject: [mod_python] Cannot install , Need help
Message-ID: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>

Hi,

I was just trying to install Mod Python, but couldn't get it working.

Mod Python 3.2.8 Win32 for python 2.4
Python 2.4.3
Apache HTTP Server 2.2.2
Windows XP Service Pack 2

I changed the Apache configuration file as instructed
LoadModule python_module modules/mod_python.so

But then I tested my apache configuration, and got error message
Cannot load C:/.../modules/mod_python.so into server. The specificed
procedure could not be found.

I tried reinstalling it, but still had the same error.
I checked the mod_python.so .. it is really there.
Other apache modules are also loaded form the same directory, but didn't
raise any error.

I hope someone can help me with this issue. Thanks!

Aung
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060829/6080f309/attachment.html
From nicolas at lehuen.com  Tue Aug 29 09:14:07 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Aug 29 09:14:13 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
Message-ID: <c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>

Hi,

Make sure that the Python and MSVCRT DLLs are in the PATH variable, either
the system one or the one of the user the Apache server runs in.

Regards,
Nicolas

2006/8/29, Aung Kyaw Htet <akhtet@gmail.com>:
>
> Hi,
>
> I was just trying to install Mod Python, but couldn't get it working.
>
> Mod Python 3.2.8 Win32 for python 2.4
> Python 2.4.3
> Apache HTTP Server 2.2.2
> Windows XP Service Pack 2
>
> I changed the Apache configuration file as instructed
> LoadModule python_module modules/mod_python.so
>
> But then I tested my apache configuration, and got error message
> Cannot load C:/.../modules/mod_python.so into server. The specificed
> procedure could not be found.
>
> I tried reinstalling it, but still had the same error.
> I checked the mod_python.so .. it is really there.
> Other apache modules are also loaded form the same directory, but didn't
> raise any error.
>
> I hope someone can help me with this issue. Thanks!
>
> Aung
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060829/984e101d/attachment.html
From listspam at flowtheory.net  Tue Aug 29 10:40:54 2006
From: listspam at flowtheory.net (Joshua "Jag" Ginsberg)
Date: Tue Aug 29 10:41:33 2006
Subject: [mod_python] encoding
In-Reply-To: <44F34F4E.6020602@ulb.ac.be>
References: <44F307D5.9040203@ulb.ac.be>
	<1156793403.23895.7.camel@localhost.localdomain>
	<44F34F4E.6020602@ulb.ac.be>
Message-ID: <1156862455.5147.6.camel@halyard>


> >
> > So when you .decode('utf8') a string encoded in UTF-8 you are taking a
> >   
> 
> That was my question, how can be sure that a string is always encoded in 
> UTF-8 when the user submit the form ?

>From (shameless plug) http://starboard.flowtheory.net/blog/?q=node/206 :

"... So it all originates to the question: what character set did the
member's web browser encode the form data in?

You may be unaware of the fact that your browser can be configured to
use different character set encodings. But it makes a big difference. By
default, most browsers will use the UTF-8 character set encoding, in
which case form data that includes the character "?" will submit it as
"%C3%A9". However, if your browser uses the Latin1 encoding, it will
submit the same letter as "%E9". So how do we tell which character set
your browser was using?

The HTTP 1.1 standard requires that when providing posted form data to a
web server, the request must specify the character set used as a part of
the "Content-Type" header. However, none of the major browsers on the
market do this because too many i18n-unaware programmers have made
server-side scripts that don't understand the syntax used. So Microsoft
employed a quite clever hack: if you add a hidden form variable named
_charset_ to your form, it will automatically populate the value of this
form variable with the character set encoding the client is using. And
in fact, Mozilla followed suit. But other browsers, such as Konqueror,
have not.

So effectively, to handle all cases properly, you may have to put some
UTF-8 encoded characters into a hidden form field and wait for the user
to submit the form. If the UTF-8 encoded characters come back the same,
then they submitted the form as UTF-8. If not, you can use
trial-and-error to attempt to elucidate what encoding they used.

..."

-jag


From akhtet at gmail.com  Tue Aug 29 10:42:39 2006
From: akhtet at gmail.com (Aung Kyaw Htet)
Date: Tue Aug 29 10:43:50 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
Message-ID: <166141960608290742l77ad4469n9f91ba34b231ec5d@mail.gmail.com>

Hi Nicolas,
Thank you for your reply. Yes,I checked my PATH variable. Both Python and
Windows\system32 directory is already there.
Do you have any other idea?

Regards,
Aung


On 8/29/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>
> Hi,
>
> Make sure that the Python and MSVCRT DLLs are in the PATH variable, either
> the system one or the one of the user the Apache server runs in.
>
> Regards,
> Nicolas
>
> 2006/8/29, Aung Kyaw Htet < akhtet@gmail.com>:
> >
> > Hi,
>
> I was just trying to install Mod Python, but couldn't get it working.
>
> Mod Python 3.2.8 Win32 for python 2.4
> Python 2.4.3
> Apache HTTP Server 2.2.2
> Windows XP Service Pack 2
>
> I changed the Apache configuration file as instructed
> LoadModule python_module modules/mod_python.so
>
> But then I tested my apache configuration, and got error message
> Cannot load C:/.../modules/mod_python.so into server. The specificed
> procedure could not be found.
>
> I tried reinstalling it, but still had the same error.
> I checked the mod_python.so .. it is really there.
> Other apache modules are also loaded form the same directory, but didn't
> raise any error.
>
> I hope someone can help me with this issue. Thanks!
>
> Aung
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060830/980a4fa8/attachment-0001.html
From akhtet at gmail.com  Tue Aug 29 11:42:23 2006
From: akhtet at gmail.com (Aung Kyaw Htet)
Date: Tue Aug 29 11:42:26 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
Message-ID: <166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>

Hello Nicolas,

I've also looked at the message archives and found that this is a common
problem.

- I've checked my C:\Windows\system32 folder and msvcp71.dll and
mscr71.dllare there.

- I've checked and set my PATH variable from MyComputer so that the entries
C:\Python24
C:\Python24\DLLs
C:\Windows\system32, are there.

But i still can't run Apache yet. Am I still missing something else?

Regards,
Aung


On 8/29/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>
> Hi,
>
> Make sure that the Python and MSVCRT DLLs are in the PATH variable, either
> the system one or the one of the user the Apache server runs in.
>
> Regards,
> Nicolas
>
> 2006/8/29, Aung Kyaw Htet < akhtet@gmail.com>:
> >
> > Hi,
>
> I was just trying to install Mod Python, but couldn't get it working.
>
> Mod Python 3.2.8 Win32 for python 2.4
> Python 2.4.3
> Apache HTTP Server 2.2.2
> Windows XP Service Pack 2
>
> I changed the Apache configuration file as instructed
> LoadModule python_module modules/mod_python.so
>
> But then I tested my apache configuration, and got error message
> Cannot load C:/.../modules/mod_python.so into server. The specificed
> procedure could not be found.
>
> I tried reinstalling it, but still had the same error.
> I checked the mod_python.so .. it is really there.
> Other apache modules are also loaded form the same directory, but didn't
> raise any error.
>
> I hope someone can help me with this issue. Thanks!
>
> Aung
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060830/5ea217c4/attachment.html
From fredrik.sandin at ltu.se  Tue Aug 29 16:53:57 2006
From: fredrik.sandin at ltu.se (Fredrik Sandin)
Date: Tue Aug 29 17:11:48 2006
Subject: [mod_python] Publisher + PSP + Sessions?
Message-ID: <op.te2bx9jo9etm87@avari254.mt.ltu.se>

Hello!

Given the following configuration

<Directory "...">
     ...
     SetHandler mod_python
     PythonHandler mod_python.publisher
</Directory>

and a template loading meachanism similar to the one in
the example on the modpython homepage:

http://www.modpython.org/examples/psp_site/

how to access the session (dictionary) outside the psp
templates?

Within a psp template it is possible to write

<%
if not session.has_key('myvar'):
     session['myvar'] = 0 # Default value
%>

However, since the idea is to separate the template from
the logic, I would prefer to do this in the python function.
Example, inside myhandler.py:

def index(req):
     if not X.has_key('myvar'):
         X['myvar'] = 0 # Default value
     return _build_page(req, template='index')

How to define X such that session['myvar'] will be defined
inside the psp template for the index page?

Cheers,
Fredrik
From grahamd at dscpl.com.au  Tue Aug 29 18:07:10 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Aug 29 18:07:19 2006
Subject: [mod_python] Publisher + PSP + Sessions?
Message-ID: <1156889230.16423@dscpl.user.openhosting.com>

Fredrik Sandin wrote ..
> Hello!
> 
> Given the following configuration
> 
> <Directory "...">
>      ...
>      SetHandler mod_python
>      PythonHandler mod_python.publisher
> </Directory>
> 
> and a template loading meachanism similar to the one in
> the example on the modpython homepage:
> 
> http://www.modpython.org/examples/psp_site/
> 
> how to access the session (dictionary) outside the psp
> templates?
> 
> Within a psp template it is possible to write
> 
> <%
> if not session.has_key('myvar'):
>      session['myvar'] = 0 # Default value
> %>
> 
> However, since the idea is to separate the template from
> the logic, I would prefer to do this in the python function.
> Example, inside myhandler.py:
> 
> def index(req):
>      if not X.has_key('myvar'):
>          X['myvar'] = 0 # Default value
>      return _build_page(req, template='index')
> 
> How to define X such that session['myvar'] will be defined
> inside the psp template for the index page?

If you are using mod_python 3.2.8 or later, you can say:

  def index(req):
       req.session = Session.Session(req)
       if not req.session.has_key('myvar'):
           req.session['myvar'] = 0 # Default value
       return _build_page(req, template='index')

Ie., PSP will use the session object you create and store in the request object as
req.session.

You still access the session object the same in the PSP page template. Ie., as
'session'. No need to reference it as 'req.session' in PSP page.

Graham
From David.Bear at asu.edu  Tue Aug 29 23:46:22 2006
From: David.Bear at asu.edu (David Bear)
Date: Tue Aug 29 23:46:27 2006
Subject: [mod_python] session object error
Message-ID: <20060830034622.GO1503@asu.edu>

I am using modpython 3.1.3 (suse packaged) and am attempting to follow
the example  at
http://modpython.org/live/current/doc-html/pyapi-sess-example.html

However, I get an error on code like this 

session['hits'] += 1

saying that the object does not support assignment. Rats. Does my
modpython not have a good session object? 

-- 
David Bear
phone: 	602-496-0424
fax: 	602-496-0955
College of Public Programs/ASU
University Center Rm 622
411 N Central
Phoenix, AZ 85007-0685
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From David.Bear at asu.edu  Wed Aug 30 00:08:11 2006
From: David.Bear at asu.edu (David Bear)
Date: Wed Aug 30 00:08:16 2006
Subject: [mod_python] session object error
In-Reply-To: <20060830034622.GO1503@asu.edu>
References: <20060830034622.GO1503@asu.edu>
Message-ID: <20060830040811.GR1503@asu.edu>

On Tue, Aug 29, 2006 at 08:46:22PM -0700, David Bear wrote:
> I am using modpython 3.1.3 (suse packaged) and am attempting to follow
> the example  at
> http://modpython.org/live/current/doc-html/pyapi-sess-example.html
> 
> However, I get an error on code like this 
> 
> session['hits'] += 1
> 
> saying that the object does not support assignment. Rats. Does my
> modpython not have a good session object? 

Sorry about this posting. Ignore it. I made a mistake when I creation
my session object.

> 
> -- 
> David Bear
> phone: 	602-496-0424
> fax: 	602-496-0955
> College of Public Programs/ASU
> University Center Rm 622
> 411 N Central
> Phoenix, AZ 85007-0685
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
David Bear
phone: 	602-496-0424
fax: 	602-496-0955
College of Public Programs/ASU
University Center Rm 622
411 N Central
Phoenix, AZ 85007-0685
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From grahamd at dscpl.com.au  Wed Aug 30 00:13:13 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug 30 00:15:36 2006
Subject: [mod_python] session object error
Message-ID: <1156911193.23017@dscpl.user.openhosting.com>

David Bear wrote ..
> I am using modpython 3.1.3 (suse packaged) and am attempting to follow
> the example  at
> http://modpython.org/live/current/doc-html/pyapi-sess-example.html
> 
> However, I get an error on code like this 
> 
> session['hits'] += 1
> 
> saying that the object does not support assignment. Rats. Does my
> modpython not have a good session object? 

Exactly what type of Python exception is being raised?

The Session object derives from 'dict' and so anything that you can do on
a 'dict' instance should still work. The only thing I can think of that could go
awry is that if 'hits' is not in the session object dictionary to begin with.
But then that would result in a KeyError.

>>> a = dict()
>>> a['hits'] += 1
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
KeyError: 'hits'

Graham
From grahamd at dscpl.com.au  Wed Aug 30 07:17:11 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug 30 07:17:32 2006
Subject: [mod_python] Publisher + PSP + Sessions?
In-Reply-To: <op.te3cs5dq9etm87@avari254.mt.ltu.se>
References: <1156889230.16423@dscpl.user.openhosting.com>
	<op.te3cs5dq9etm87@avari254.mt.ltu.se>
Message-ID: <4d6e69fe2a054773959e2e07c962e603@dscpl.com.au>

Please keep followups on the mailing list. A few comments below.

On 30/08/2006, at 8:01 PM, Fredrik Sandin wrote:

> Dear Graham,
>
> thanks! Guided by Google, I tried session=Session.Session(req)
> (did not realise that it should be stored in req.session) and
> ended up with a timeout when trying to load the page.
>
> The problem was an older version of mod_python, after upgrading
> to 3.2.10 it works fine.
>
> I started learning mod_python a few days ago to implement an
> online GUI. The example psp site on the mod_python homepage
> set me off in the right direction, I think, because I like
> the idea to separate the logic from the templates. However,
> I think that the example site/source could benefit from a few
> additions:

The problem we have at the moment is that current active developers
do not have ready access to make modifications to the web site.
 From memory, not sure that the publisher/PSP example there represents
best practice in respect to doing things anyway. Certainly with
mod_python 3.3 there are perhaps better ways of doing the same
thing.

> 1. Show how to handle sessions (as you did above). It is not
>    sufficient to have access to the session variable inside the
>    templates when the logic should be factored out elsewhere.
>
> 2. Show how to handle forms and form input, including argument
>    matching and type conversion. The same thing applies here, it
>    is not sufficient to have access to the form variable inside
>    the templates when the logic should be factored out.

If you are using mod_python 3.2.10 or earlier, you have to explicitly
pass the form object created by mod_python.publisher into the PSP
run() function. From memory:

   page = psp.PSP(req, filename='...')
   page.run({"form": req.form})

This is not optimal as PSP tries to decode form parameters a second
time, although the mod_python.publisher ones take precedence here
since they are passed in.

In mod_python 3.3, PSP will automatically use value of req.form which
is inherited from something else such as mod_python.publisher. There
are various other issues related to forms and session objects and
using mod_python.publisher and mod_python.psp together which are also
fixed in mod_python 3.3.

We will possibly cut a development snapshot of 3.3 soon for initial
testing. If you really wanted to use it in the mean time, you would
have to use source code out of subversion repository.

Graham

From john.keyes at secantus.com  Wed Aug 30 07:44:16 2006
From: john.keyes at secantus.com (John Keyes)
Date: Wed Aug 30 07:44:28 2006
Subject: [mod_python] Mailing List
Message-ID: <e37997d0608300444k5e602b07x8bbed99c734ab8ac@mail.gmail.com>

Can the mailing list software always set the Reply-To header
to be mod_python@modpython.org?  It seems to happen quite
regularly that people simply reply on a mail and don't
reply all.

-John K
From grahamd at dscpl.com.au  Wed Aug 30 08:00:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Aug 30 08:01:24 2006
Subject: [mod_python] Mailing List
In-Reply-To: <e37997d0608300444k5e602b07x8bbed99c734ab8ac@mail.gmail.com>
References: <e37997d0608300444k5e602b07x8bbed99c734ab8ac@mail.gmail.com>
Message-ID: <79a748ea325221b02965a2a1b8d177ff@dscpl.com.au>


On 30/08/2006, at 9:44 PM, John Keyes wrote:

> Can the mailing list software always set the Reply-To header
> to be mod_python@modpython.org?  It seems to happen quite
> regularly that people simply reply on a mail and don't
> reply all.
>
> -John K

I can only offer this previous post where there was brought up.

   
http://www.modpython.org/pipermail/mod_python/2006-February/020440.html

Basically, there is a school of thought that Reply-To is bad.

Graham

From jeffh at dundeemt.com  Wed Aug 30 08:22:12 2006
From: jeffh at dundeemt.com (Jeff Hinrichs - DM&T)
Date: Wed Aug 30 08:22:15 2006
Subject: [mod_python] Mailing List
In-Reply-To: <79a748ea325221b02965a2a1b8d177ff@dscpl.com.au>
References: <e37997d0608300444k5e602b07x8bbed99c734ab8ac@mail.gmail.com>
	<79a748ea325221b02965a2a1b8d177ff@dscpl.com.au>
Message-ID: <5aaed53f0608300522x565815f7x59e900d196b2204f@mail.gmail.com>

Well, I for one think that
http://starboard.flowtheory.net/blog/?q=node/170 rebuttal is quite
good.  The email comes from the list and reply should get it back to
the list.  Reply all generates atleast 1 extraneous  email  if not
more.

Reply v. Reply All is only arguably a better choice in forums where
things tend to degenerate in to school yard antics.  Not in a forum
where knowledge and information are the dominant types of messages.  I
can't think of a single case where replying to the individual and not
the group benefits mod_python and the lists subscribers.

just my $US 0.02

-Jeff

CC is a misnomer, it should be corrected to CYA <g>


On 8/30/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 30/08/2006, at 9:44 PM, John Keyes wrote:
>
> > Can the mailing list software always set the Reply-To header
> > to be mod_python@modpython.org?  It seems to happen quite
> > regularly that people simply reply on a mail and don't
> > reply all.
> >
> > -John K
>
> I can only offer this previous post where there was brought up.
>
>
> http://www.modpython.org/pipermail/mod_python/2006-February/020440.html
>
> Basically, there is a school of thought that Reply-To is bad.
>
> Graham
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Jeff Hinrichs
Dundee Media & Technology, Inc
jeffh@dundeemt.com
402.320.0821
From john.keyes at secantus.com  Wed Aug 30 10:20:51 2006
From: john.keyes at secantus.com (John Keyes)
Date: Wed Aug 30 10:21:12 2006
Subject: [mod_python] Mailing List
In-Reply-To: <5aaed53f0608300522x565815f7x59e900d196b2204f@mail.gmail.com>
References: <e37997d0608300444k5e602b07x8bbed99c734ab8ac@mail.gmail.com>
	<79a748ea325221b02965a2a1b8d177ff@dscpl.com.au>
	<5aaed53f0608300522x565815f7x59e900d196b2204f@mail.gmail.com>
Message-ID: <e37997d0608300720i391b22b5h91455ba4666dfb74@mail.gmail.com>

On 8/30/06, Jeff Hinrichs - DM&T <jeffh@dundeemt.com> wrote:

> I can't think of a single case where replying to the individual and not
> the group benefits mod_python and the lists subscribers.
Agreed.

-John K
From pb+python at fasterix.frmug.org  Wed Aug 30 11:48:22 2006
From: pb+python at fasterix.frmug.org (Pierre Beyssac)
Date: Wed Aug 30 11:48:26 2006
Subject: [mod_python] [SPAM] can't set several cookies from the same page
Message-ID: <20060830154822.GA43964@fasterix.frmug.org>

Hello,

I'm a happy mod_python user since... yesterday.

I can't seem to get the following to work: setting 2 cookies from
the same request. The following code is taken from the documentation
for the most part; apparently, it results in only one "Set-Cookie"
header being emitted in the HTTP reply headers.

Initially I just wanted to establish a session + a cookie at the
same time and it didn't work either, apparently for the same reason.

Any idea what I am doing wrong? Am I missing something obvious?

I'm using mod_python 3.2.10, Python 2.4.3, Apache 2.0.59 on FreeBSD 4.11.

---
from mod_python import apache, Cookie, Session
import time

SECRET = "mYseCret"

def _cookiehandler(req, ident):
    cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
                                 secret=SECRET)
    if cookies.has_key(ident):
        mycookie = cookies[ident]
        req.write("OK, cookie found: %s\n" % mycookie)
        if type(mycookie) is Cookie.MarshalCookie:
            req.write('Here is what it looks like decoded: %s=%s\n'
                      % (mycookie.name, mycookie.value))
        else:
            req.write('Strange, cannot decode...\n')
    else:
        value = {'eu_org': ident}
        Cookie.add_cookie(req, Cookie.MarshalCookie(ident, value, SECRET))
        req.write("No cookie found, trying to set one\n")

def handler(req):
    req.content_type = "text/plain"
    _cookiehandler(req, 'id1')
    _cookiehandler(req, 'id2')
    return apache.OK
---
Generated reply :
---
Date: Tue, 29 Aug 2006 19:54:28 GMT
Server: Apache/2.0.59 (FreeBSD) mod_python/3.2.10 Python/2.4.3 mod_ssl/2.0.59 OpenSSL/0.9.7d-p1
Cache-Control: no-cache="set-cookie"
Set-Cookie: id1=d68b2820cbded02eea3afc876689f30ae3QGAAAAZXVfb3JndAMAAABpZDEw
Connection: close
Content-Type: text/plain; charset=ISO-8859-1

No cookie found, trying to set one
No cookie found, trying to set one

-- 
	Le mieux est l'ennemi du bien -- Unie dans la diversit?
Pierre Beyssac	      	    pb@fasterix.frmug.org pb@fasterix.freenix.org
		Free domains: http://www.eu.org/
From pb+python at fasterix.frmug.org  Wed Aug 30 12:18:17 2006
From: pb+python at fasterix.frmug.org (Pierre Beyssac)
Date: Wed Aug 30 12:18:20 2006
Subject: [SPAM] Re: [mod_python] [SPAM] can't set several cookies from the
	same page
In-Reply-To: <20060830154822.GA43964@fasterix.frmug.org>
References: <20060830154822.GA43964@fasterix.frmug.org>
Message-ID: <20060830161817.GA44305@fasterix.frmug.org>

On Wed, Aug 30, 2006 at 05:48:22PM +0200, Pierre Beyssac wrote:
> Any idea what I am doing wrong? Am I missing something obvious?

Uh, nevermind, apparently the answer is that all headers should be
set before they are emitted, i.e. I shouldn't have done any req.write()
before all the cookies have been set... sorry for posting the
question in the first place!
-- 
	Le mieux est l'ennemi du bien -- Unie dans la diversit?
Pierre Beyssac	      	    pb@fasterix.frmug.org pb@fasterix.freenix.org
		Free domains: http://www.eu.org/
From David.Bear at asu.edu  Wed Aug 30 12:55:08 2006
From: David.Bear at asu.edu (David Bear)
Date: Wed Aug 30 12:55:13 2006
Subject: [mod_python] examples of using simpletal with modpython
Message-ID: <20060830165508.GC14455@asu.edu>

I was wondering if there are any examples of using simpletal with
modpython.. if you use it in conjuction with publisher, or have
written your own handler to use it.

I seems that it would work well with publisher becuase you could pass
a controlled namespace to the simpletal template. 
-- 
David Bear
phone: 	602-496-0424
fax: 	602-496-0955
College of Public Programs/ASU
University Center Rm 622
411 N Central
Phoenix, AZ 85007-0685
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From jcigar at ulb.ac.be  Wed Aug 30 16:26:45 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Wed Aug 30 16:26:50 2006
Subject: [mod_python] examples of using simpletal with modpython
In-Reply-To: <20060830165508.GC14455@asu.edu>
References: <20060830165508.GC14455@asu.edu>
Message-ID: <44F5F485.4070806@ulb.ac.be>

Hello,

I'm using simpleTAL with mod_python every day at work and it works like 
a charm !
I've written my own handler which dispatch the "action" (based on regex) 
to the good controller (I followed the MVC pattern).
The structure looks like:
root/application/models
root/application/controllers
root/application/views
root/public
...

If it can help you, I've put some (colored) examples of my code at 
http://mordor.ath.cx/stuff/mod_python/
- dispatch.html is the dispatcher
- base.html is the base controller from which all controllers inherits
- default.html is an example of controller which use simple a simpleTAL 
context (which is render through self.render())
(This is development code therefore there are many things to improve)

Regards,
Julien

David Bear wrote:
> I was wondering if there are any examples of using simpletal with
> modpython.. if you use it in conjuction with publisher, or have
> written your own handler to use it.
>
> I seems that it would work well with publisher becuase you could pass
> a controlled namespace to the simpletal template. 
>   

From jpg at jgassociates.ca  Wed Aug 30 16:44:44 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Aug 30 16:44:48 2006
Subject: [mod_python] [SPAM] can't set several cookies from the same page
In-Reply-To: <20060830154822.GA43964@fasterix.frmug.org>
References: <20060830154822.GA43964@fasterix.frmug.org>
Message-ID: <44F5F8BC.2040304@jgassociates.ca>

Your first call to req.write() causes the response headers to be sent to 
the client. Once the headers are sent it's too late to set another 
cookie. This is not unique to mod_python - it's just the way cookies 
work. Make sure you set all your cookies (or any other header for that 
matter) before calling req.write()

Jim


Pierre Beyssac wrote:
> Hello,
> 
> I'm a happy mod_python user since... yesterday.
> 
> I can't seem to get the following to work: setting 2 cookies from
> the same request. The following code is taken from the documentation
> for the most part; apparently, it results in only one "Set-Cookie"
> header being emitted in the HTTP reply headers.
> 
> Initially I just wanted to establish a session + a cookie at the
> same time and it didn't work either, apparently for the same reason.
> 
> Any idea what I am doing wrong? Am I missing something obvious?
> 
> I'm using mod_python 3.2.10, Python 2.4.3, Apache 2.0.59 on FreeBSD 4.11.
> 
> ---
> from mod_python import apache, Cookie, Session
> import time
> 
> SECRET = "mYseCret"
> 
> def _cookiehandler(req, ident):
>     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
>                                  secret=SECRET)
>     if cookies.has_key(ident):
>         mycookie = cookies[ident]
>         req.write("OK, cookie found: %s\n" % mycookie)
>         if type(mycookie) is Cookie.MarshalCookie:
>             req.write('Here is what it looks like decoded: %s=%s\n'
>                       % (mycookie.name, mycookie.value))
>         else:
>             req.write('Strange, cannot decode...\n')
>     else:
>         value = {'eu_org': ident}
>         Cookie.add_cookie(req, Cookie.MarshalCookie(ident, value, SECRET))
>         req.write("No cookie found, trying to set one\n")
> 
> def handler(req):
>     req.content_type = "text/plain"
>     _cookiehandler(req, 'id1')
>     _cookiehandler(req, 'id2')
>     return apache.OK
> ---
> Generated reply :
> ---
> Date: Tue, 29 Aug 2006 19:54:28 GMT
> Server: Apache/2.0.59 (FreeBSD) mod_python/3.2.10 Python/2.4.3 mod_ssl/2.0.59 OpenSSL/0.9.7d-p1
> Cache-Control: no-cache="set-cookie"
> Set-Cookie: id1=d68b2820cbded02eea3afc876689f30ae3QGAAAAZXVfb3JndAMAAABpZDEw
> Connection: close
> Content-Type: text/plain; charset=ISO-8859-1
> 
> No cookie found, trying to set one
> No cookie found, trying to set one
> 

From jpg at jgassociates.ca  Wed Aug 30 16:45:42 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Aug 30 16:45:46 2006
Subject: [SPAM] Re: [mod_python] [SPAM] can't set several cookies from
	the	same page
In-Reply-To: <20060830161817.GA44305@fasterix.frmug.org>
References: <20060830154822.GA43964@fasterix.frmug.org>
	<20060830161817.GA44305@fasterix.frmug.org>
Message-ID: <44F5F8F6.2010207@jgassociates.ca>

Pierre Beyssac wrote:
> On Wed, Aug 30, 2006 at 05:48:22PM +0200, Pierre Beyssac wrote:
>> Any idea what I am doing wrong? Am I missing something obvious?
> 
> Uh, nevermind, apparently the answer is that all headers should be
> set before they are emitted, i.e. I shouldn't have done any req.write()
> before all the cookies have been set... sorry for posting the
> question in the first place!

And I should read all the messages in my inbox before responding. :)

Jim
From nicolas at lehuen.com  Thu Aug 31 06:23:10 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Aug 31 06:23:32 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
	<166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>
Message-ID: <c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>

I must confess I'm at a loss, if you did all the checks you've written.

One last possible problem may be that your Apache binary distribution is not
built with the same MSVC version as the one I've used to build the binaries.
Do you use the stock binary distribution of both Apache and mod_python, or
have you tried to build one of the two yourself ?

What user account is your Apache running under ?

Regards,
Nicolas

2006/8/29, Aung Kyaw Htet <akhtet@gmail.com>:
>
> Hello Nicolas,
>
> I've also looked at the message archives and found that this is a common
> problem.
>
> - I've checked my C:\Windows\system32 folder and msvcp71.dll and
> mscr71.dll are there.
>
> - I've checked and set my PATH variable from MyComputer so that the
> entries
> C:\Python24
> C:\Python24\DLLs
> C:\Windows\system32, are there.
>
> But i still can't run Apache yet. Am I still missing something else?
>
> Regards,
> Aung
>
>
> On 8/29/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>
> > Hi,
> >
> > Make sure that the Python and MSVCRT DLLs are in the PATH variable,
> > either the system one or the one of the user the Apache server runs in.
> >
> > Regards,
> > Nicolas
> >
> > 2006/8/29, Aung Kyaw Htet < akhtet@gmail.com>:
> > >
> > > Hi,
> >
> > I was just trying to install Mod Python, but couldn't get it working.
> >
> > Mod Python 3.2.8 Win32 for python 2.4
> > Python 2.4.3
> > Apache HTTP Server 2.2.2
> > Windows XP Service Pack 2
> >
> > I changed the Apache configuration file as instructed
> > LoadModule python_module modules/mod_python.so
> >
> > But then I tested my apache configuration, and got error message
> > Cannot load C:/.../modules/mod_python.so into server. The specificed
> > procedure could not be found.
> >
> > I tried reinstalling it, but still had the same error.
> > I checked the mod_python.so .. it is really there.
> > Other apache modules are also loaded form the same directory, but didn't
> > raise any error.
> >
> > I hope someone can help me with this issue. Thanks!
> >
> > Aung
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060831/6da4d84e/attachment.html
From grahamd at dscpl.com.au  Thu Aug 31 06:36:32 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Aug 31 06:36:53 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
	<166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>
	<c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>
Message-ID: <a99d2b53983f996a4a8bd60de2e824b1@dscpl.com.au>

You haven't mentioned checking access rights to all the relevant files
for the user that Apache runs as. That is one that is usually on your
check list. But then, you have now asked what user Apache is running 
as. :-)

Graham

On 31/08/2006, at 8:23 PM, Nicolas Lehuen wrote:

> I must confess I'm at a loss, if you did all the checks you've written.
>
> One last possible problem may be that your Apache binary distribution 
> is not built with the same MSVC version as the one I've used to build 
> the binaries. Do you use the stock binary distribution of both Apache 
> and mod_python, or have you tried to build one of the two yourself ?
>
> What user account is your Apache running under ?
>
> Regards,
> Nicolas
>
> 2006/8/29, Aung Kyaw Htet <akhtet@gmail.com>:Hello Nicolas,
>>
>> I've also looked at the message archives and found that this is a 
>> common problem.
>>
>> - I've checked my C:\Windows\system32 folder and msvcp71.dll and 
>> mscr71.dll are there.
>>
>> - I've checked and set my PATH variable from MyComputer so that the 
>> entries
>> C:\Python24
>> C:\Python24\DLLs
>> C:\Windows\system32, are there.
>>
>> But i still can't run Apache yet. Am I still missing something else?
>>
>> Regards,
>> Aung
>>
>>
>> On 8/29/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>>> Hi,
>>>
>>> Make sure that the Python and MSVCRT DLLs are in the PATH variable, 
>>> either the system one or the one of the user the Apache server runs 
>>> in.
>>>
>>> Regards,
>>> Nicolas
>>>
>>>  2006/8/29, Aung Kyaw Htet < akhtet@gmail.com>:Hi,
>>>
>>> I was just trying to install Mod Python, but couldn't get it working.
>>>
>>> Mod Python 3.2.8 Win32 for python 2.4
>>> Python 2.4.3
>>> Apache HTTP Server 2.2.2
>>> Windows XP Service Pack 2
>>>
>>> I changed the Apache configuration file as instructed
>>> LoadModule python_module modules/mod_python.so
>>>
>>> But then I tested my apache configuration, and got error message
>>> Cannot load C:/.../modules/mod_python.so into server. The specificed 
>>> procedure could not be found.
>>>
>>> I tried reinstalling it, but still had the same error.
>>> I checked the mod_python.so .. it is really there.
>>> Other apache modules are also loaded form the same directory, but 
>>> didn't raise any error.
>>>
>>> I hope someone can help me with this issue. Thanks!
>>>
>>> Aung
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>>  Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From herschel at panix.com  Thu Aug 31 08:37:48 2006
From: herschel at panix.com (Clemens Herschel)
Date: Thu Aug 31 08:38:11 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <a99d2b53983f996a4a8bd60de2e824b1@dscpl.com.au>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
	<166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>
	<c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>
	<a99d2b53983f996a4a8bd60de2e824b1@dscpl.com.au>
Message-ID: <1074.69.118.170.122.1157027868.squirrel@mail.panix.com>

> You haven't mentioned checking access rights to all the relevant files
> for the user that Apache runs as. That is one that is usually on your
> check list. But then, you have now asked what user Apache is running
> as. :-)
>
> Graham
>
> On 31/08/2006, at 8:23 PM, Nicolas Lehuen wrote:
>
>> I must confess I'm at a loss, if you did all the checks you've written.
>>
>> One last possible problem may be that your Apache binary distribution
>> is not built with the same MSVC version as the one I've used to build
>> the binaries. Do you use the stock binary distribution of both Apache
>> and mod_python, or have you tried to build one of the two yourself ?
>>
>> What user account is your Apache running under ?
>>
>> Regards,
>> Nicolas
>>
>> 2006/8/29, Aung Kyaw Htet <akhtet@gmail.com>:Hello Nicolas,
>>>
>>> I've also looked at the message archives and found that this is a
>>> common problem.
>>>
>>> - I've checked my C:\Windows\system32 folder and msvcp71.dll and
>>> mscr71.dll are there.
>>>
>>> - I've checked and set my PATH variable from MyComputer so that the
>>> entries
>>> C:\Python24
>>> C:\Python24\DLLs
>>> C:\Windows\system32, are there.
>>>
>>> But i still can't run Apache yet. Am I still missing something else?
>>>
>>> Regards,
>>> Aung
>>>
>>>
>>> On 8/29/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>>>> Hi,
>>>>
>>>> Make sure that the Python and MSVCRT DLLs are in the PATH variable,
>>>> either the system one or the one of the user the Apache server runs
>>>> in.
>>>>
>>>> Regards,
>>>> Nicolas
>>>>
>>>>  2006/8/29, Aung Kyaw Htet < akhtet@gmail.com>:Hi,
>>>>
>>>> I was just trying to install Mod Python, but couldn't get it working.
>>>>
>>>> Mod Python 3.2.8 Win32 for python 2.4
>>>> Python 2.4.3
>>>> Apache HTTP Server 2.2.2
>>>> Windows XP Service Pack 2
>>>>
>>>> I changed the Apache configuration file as instructed
>>>> LoadModule python_module modules/mod_python.so
>>>>
>>>> But then I tested my apache configuration, and got error message
>>>> Cannot load C:/.../modules/mod_python.so into server. The specificed
>>>> procedure could not be found.
>>>>
>>>> I tried reinstalling it, but still had the same error.
>>>> I checked the mod_python.so .. it is really there.
>>>> Other apache modules are also loaded form the same directory, but
>>>> didn't raise any error.
>>>>
>>>> I hope someone can help me with this issue. Thanks!
>>>>
>>>> Aung
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>>  Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>>
>>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
A shot in the dark as I am new to mod_python. But when I run python
applications in a windows environment like Boa and wxpython, I have to set
an environment variable PYTHONPATH.
Clemens Herschel

From nicolas at lehuen.com  Thu Aug 31 09:19:05 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Aug 31 09:19:13 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <1074.69.118.170.122.1157027868.squirrel@mail.panix.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>
	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>
	<166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>
	<c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>
	<a99d2b53983f996a4a8bd60de2e824b1@dscpl.com.au>
	<1074.69.118.170.122.1157027868.squirrel@mail.panix.com>
Message-ID: <c298f2d70608310619h4e529c5aif452683463b988d7@mail.gmail.com>

Turns out the problem was pretty simple : Aung Kyaw used the 3.2.8 release
which doesn't support Apache 2.2. This had somehow passed under my radar.

The "problem" is that in alphabetical order, 3.2.8 is the latest release,
and 3.2.10 is the first of the 3.2 release ! See for example
http://apache.crihan.fr/dist/httpd/modpython/win/

So Aung Kyaw thought he was downloading the latest version. I myself add
trouble to locate the 3.2.10 release at first sight when I wanted to point
him a correct download location...

Nicolas

2006/8/31, Clemens Herschel <herschel@panix.com>:
>
> > You haven't mentioned checking access rights to all the relevant files
> > for the user that Apache runs as. That is one that is usually on your
> > check list. But then, you have now asked what user Apache is running
> > as. :-)
> >
> > Graham
> >
> > On 31/08/2006, at 8:23 PM, Nicolas Lehuen wrote:
> >
> >> I must confess I'm at a loss, if you did all the checks you've written.
> >>
> >> One last possible problem may be that your Apache binary distribution
> >> is not built with the same MSVC version as the one I've used to build
> >> the binaries. Do you use the stock binary distribution of both Apache
> >> and mod_python, or have you tried to build one of the two yourself ?
> >>
> >> What user account is your Apache running under ?
> >>
> >> Regards,
> >> Nicolas
> >>
> >> 2006/8/29, Aung Kyaw Htet <akhtet@gmail.com>:Hello Nicolas,
> >>>
> >>> I've also looked at the message archives and found that this is a
> >>> common problem.
> >>>
> >>> - I've checked my C:\Windows\system32 folder and msvcp71.dll and
> >>> mscr71.dll are there.
> >>>
> >>> - I've checked and set my PATH variable from MyComputer so that the
> >>> entries
> >>> C:\Python24
> >>> C:\Python24\DLLs
> >>> C:\Windows\system32, are there.
> >>>
> >>> But i still can't run Apache yet. Am I still missing something else?
> >>>
> >>> Regards,
> >>> Aung
> >>>
> >>>
> >>> On 8/29/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
> >>>> Hi,
> >>>>
> >>>> Make sure that the Python and MSVCRT DLLs are in the PATH variable,
> >>>> either the system one or the one of the user the Apache server runs
> >>>> in.
> >>>>
> >>>> Regards,
> >>>> Nicolas
> >>>>
> >>>>  2006/8/29, Aung Kyaw Htet < akhtet@gmail.com>:Hi,
> >>>>
> >>>> I was just trying to install Mod Python, but couldn't get it working.
> >>>>
> >>>> Mod Python 3.2.8 Win32 for python 2.4
> >>>> Python 2.4.3
> >>>> Apache HTTP Server 2.2.2
> >>>> Windows XP Service Pack 2
> >>>>
> >>>> I changed the Apache configuration file as instructed
> >>>> LoadModule python_module modules/mod_python.so
> >>>>
> >>>> But then I tested my apache configuration, and got error message
> >>>> Cannot load C:/.../modules/mod_python.so into server. The specificed
> >>>> procedure could not be found.
> >>>>
> >>>> I tried reinstalling it, but still had the same error.
> >>>> I checked the mod_python.so .. it is really there.
> >>>> Other apache modules are also loaded form the same directory, but
> >>>> didn't raise any error.
> >>>>
> >>>> I hope someone can help me with this issue. Thanks!
> >>>>
> >>>> Aung
> >>>>
> >>>> _______________________________________________
> >>>> Mod_python mailing list
> >>>>  Mod_python@modpython.org
> >>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>>
> >>>>
> >>>>
> >>>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> A shot in the dark as I am new to mod_python. But when I run python
> applications in a windows environment like Boa and wxpython, I have to set
> an environment variable PYTHONPATH.
> Clemens Herschel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060831/2f0e9f51/attachment.html
From shadow at mapik.net  Thu Aug 31 12:22:54 2006
From: shadow at mapik.net (=?WINDOWS-1252?Q?Honza_Rame=9A?=)
Date: Thu Aug 31 12:23:00 2006
Subject: [mod_python] Python 2.5
Message-ID: <22e28ea10608310922y230fback57f87e68cbe09fba@mail.gmail.com>

Hi,
have any of you tried to run mod_python with Python 2.5 on Windows. I
cannot run Python 2.4 compiled with VS2005 it always result in an error. And
mod_python with Python 2.5 returns Internal server error and error.logcontains:


> [Thu Aug 31 02:40:35 2006] [error] make_obcallback: could not import
> mod_python.apache.\n
> [Thu Aug 31 02:40:35 2006] [error] make_obcallback: Python path being used
> "['C:\\\\WINDOWS\\\\system32\\\\python25.zip', '.\\\\DLLs', '.\\\\lib',
> '.\\\\lib\\\\plat-win', '.\\\\lib\\\\lib-tk',
> 'C:\\\\Inetpub\\\\Apache2\\\\bin']".
> [Thu Aug 31 02:40:35 2006] [error] python_handler: no interpreter callback
> found.
> [Thu Aug 31 02:40:35 2006] [error] [client 10.0.0.2] python_handler: Can't
> get/create interpreter.


I compiled both Apache 2.2.3 and mod_python 3.2.10
Thanks

Honza Rames
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060831/e0c73a19/attachment.html
From jpg at jgassociates.ca  Thu Aug 31 16:52:33 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Aug 31 16:52:36 2006
Subject: [mod_python] Cannot install , Need help
In-Reply-To: <c298f2d70608310619h4e529c5aif452683463b988d7@mail.gmail.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>	<166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>	<c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>	<a99d2b53983f996a4a8bd60de2e824b1@dscpl.com.au>	<1074.69.118.170.122.1157027868.squirrel@mail.panix.com>
	<c298f2d70608310619h4e529c5aif452683463b988d7@mail.gmail.com>
Message-ID: <44F74C11.6080601@jgassociates.ca>

I find this sort of thing to be very irritating as well. Perhaps for 3.3 
we can adopt a slightly different naming scheme for the patch level of 
the version at least. First version would be 3.3.01. I don't know if any 
other projects do this, and after typing it, it sure looks strange.  Or 
maybe skip 3.3.0 to 3.3.9 completely and jump to 3.3.10 for the first 
stable release in the 3.3 series? What  do other folks think?

Jim

Nicolas Lehuen wrote:
> Turns out the problem was pretty simple : Aung Kyaw used the 3.2.8 release
> which doesn't support Apache 2.2. This had somehow passed under my radar.
> 
> The "problem" is that in alphabetical order, 3.2.8 is the latest release,
> and 3.2.10 is the first of the 3.2 release ! See for example
> http://apache.crihan.fr/dist/httpd/modpython/win/
> 
> So Aung Kyaw thought he was downloading the latest version. I myself add
> trouble to locate the 3.2.10 release at first sight when I wanted to point
> him a correct download location...
> 
> Nicolas
> 
> 2006/8/31, Clemens Herschel <herschel@panix.com>:
>>
>> > You haven't mentioned checking access rights to all the relevant files
>> > for the user that Apache runs as. That is one that is usually on your
>> > check list. But then, you have now asked what user Apache is running
>> > as. :-)
>> >
>> > Graham
>> >
>> > On 31/08/2006, at 8:23 PM, Nicolas Lehuen wrote:
>> >
>> >> I must confess I'm at a loss, if you did all the checks you've 
>> written.
>> >>
>> >> One last possible problem may be that your Apache binary distribution
>> >> is not built with the same MSVC version as the one I've used to build
>> >> the binaries. Do you use the stock binary distribution of both Apache
>> >> and mod_python, or have you tried to build one of the two yourself ?
>> >>
>> >> What user account is your Apache running under ?
>> >>
>> >> Regards,
>> >> Nicolas
>> >>
>> >> 2006/8/29, Aung Kyaw Htet <akhtet@gmail.com>:Hello Nicolas,
>> >>>
>> >>> I've also looked at the message archives and found that this is a
>> >>> common problem.
>> >>>
>> >>> - I've checked my C:\Windows\system32 folder and msvcp71.dll and
>> >>> mscr71.dll are there.
>> >>>
>> >>> - I've checked and set my PATH variable from MyComputer so that the
>> >>> entries
>> >>> C:\Python24
>> >>> C:\Python24\DLLs
>> >>> C:\Windows\system32, are there.
>> >>>
>> >>> But i still can't run Apache yet. Am I still missing something else?
>> >>>
>> >>> Regards,
>> >>> Aung
>> >>>
>> >>>
>> >>> On 8/29/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>> >>>> Hi,
>> >>>>
>> >>>> Make sure that the Python and MSVCRT DLLs are in the PATH variable,
>> >>>> either the system one or the one of the user the Apache server runs
>> >>>> in.
>> >>>>
>> >>>> Regards,
>> >>>> Nicolas
>> >>>>
>> >>>>  2006/8/29, Aung Kyaw Htet < akhtet@gmail.com>:Hi,
>> >>>>
>> >>>> I was just trying to install Mod Python, but couldn't get it 
>> working.
>> >>>>
>> >>>> Mod Python 3.2.8 Win32 for python 2.4
>> >>>> Python 2.4.3
>> >>>> Apache HTTP Server 2.2.2
>> >>>> Windows XP Service Pack 2
>> >>>>
>> >>>> I changed the Apache configuration file as instructed
>> >>>> LoadModule python_module modules/mod_python.so
>> >>>>
>> >>>> But then I tested my apache configuration, and got error message
>> >>>> Cannot load C:/.../modules/mod_python.so into server. The specificed
>> >>>> procedure could not be found.
>> >>>>
>> >>>> I tried reinstalling it, but still had the same error.
>> >>>> I checked the mod_python.so .. it is really there.
>> >>>> Other apache modules are also loaded form the same directory, but
>> >>>> didn't raise any error.
>> >>>>
>> >>>> I hope someone can help me with this issue. Thanks!
>> >>>>
>> >>>> Aung
>> >>>>
>> >>>> _______________________________________________
>> >>>> Mod_python mailing list
>> >>>>  Mod_python@modpython.org
>> >>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> >>>>
>> >>>>
>> >>>>
>> >>>
>> >> _______________________________________________
>> >> Mod_python mailing list
>> >> Mod_python@modpython.org
>> >> http://mailman.modpython.org/mailman/listinfo/mod_python
>> >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >
>> >
>> A shot in the dark as I am new to mod_python. But when I run python
>> applications in a windows environment like Boa and wxpython, I have to 
>> set
>> an environment variable PYTHONPATH.
>> Clemens Herschel
>>
>>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Thu Aug 31 17:12:45 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Aug 31 17:12:47 2006
Subject: [mod_python] Python 2.5
In-Reply-To: <22e28ea10608310922y230fback57f87e68cbe09fba@mail.gmail.com>
References: <22e28ea10608310922y230fback57f87e68cbe09fba@mail.gmail.com>
Message-ID: <44F750CD.9080904@jgassociates.ca>

I haven't tried 2.5 yet, but I guess we should start testing the 
development branch against it. We're hoping to release mod_python 3.3 
sometime in October or November. Hopefully that would be too long after 
python 2.5 is officially out. I don't know what their timetable is but 
currently it's just the release candidate so the lag shouldn't be too 
great. I'd be very surprised if there was any changes that would break 
mod_python though.

For your particular problem though I suspect it's the usual installation 
funkiness rather than a python 2.5 specific issue. In particular take a 
look at the thread that started on Tuesday. See
http://www.modpython.org/pipermail/mod_python/2006-August/021944.html

Jim


Honza Rame? wrote:
> Hi,
> have any of you tried to run mod_python with Python 2.5 on Windows. I
> cannot run Python 2.4 compiled with VS2005 it always result in an error. 
> And
> mod_python with Python 2.5 returns Internal server error and 
> error.logcontains:
> 
> 
>> [Thu Aug 31 02:40:35 2006] [error] make_obcallback: could not import
>> mod_python.apache.\n
>> [Thu Aug 31 02:40:35 2006] [error] make_obcallback: Python path being 
>> used
>> "['C:\\\\WINDOWS\\\\system32\\\\python25.zip', '.\\\\DLLs', '.\\\\lib',
>> '.\\\\lib\\\\plat-win', '.\\\\lib\\\\lib-tk',
>> 'C:\\\\Inetpub\\\\Apache2\\\\bin']".
>> [Thu Aug 31 02:40:35 2006] [error] python_handler: no interpreter 
>> callback
>> found.
>> [Thu Aug 31 02:40:35 2006] [error] [client 10.0.0.2] python_handler: 
>> Can't
>> get/create interpreter.
> 
> 
> I compiled both Apache 2.2.3 and mod_python 3.2.10
> Thanks
> 
> Honza Rames
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From list at joreybump.com  Thu Aug 31 22:12:51 2006
From: list at joreybump.com (Jorey Bump)
Date: Thu Aug 31 22:12:56 2006
Subject: [SPAM] Re: [mod_python] Cannot install , Need help
In-Reply-To: <44F74C11.6080601@jgassociates.ca>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>	<166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>	<c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>	<a99d2b53983f996a4a8bd60de2e824b1@dscpl.com.au>	<1074.69.118.170.122.1157027868.squirrel@mail.panix.com>	<c298f2d70608310619h4e529c5aif452683463b988d7@mail.gmail.com>
	<44F74C11.6080601@jgassociates.ca>
Message-ID: <44F79723.1060006@joreybump.com>

Jim Gallacher wrote:
> I find this sort of thing to be very irritating as well. Perhaps for 3.3 
> we can adopt a slightly different naming scheme for the patch level of 
> the version at least. First version would be 3.3.01. I don't know if any 
> other projects do this, and after typing it, it sure looks strange.  Or 
> maybe skip 3.3.0 to 3.3.9 completely and jump to 3.3.10 for the first 
> stable release in the 3.3 series? What  do other folks think?

I agree that it takes some getting used to, but this naming convention 
has been common for so long that you are likely to cause more confusion 
by trying to subtly change it. As with IP addresses, the dots are not 
decimals, just separators, so it is perfectly OK for any part to be 
normally incremented. Leading zeroes are meaningless in this context, 
especially if used in one part, but not the others. Imagine 3.03.01 
because you might get to 3.10.01 - now, they're confusing because they 
look a bit like dates.

FWIW, my favorite version numbering scheme is the one recommended for 
DNS zone file serial numbers, based on the current date with 2 more 
digits to allow for 99 updates in one day:

  2006083101

It will sort easily for the next 7993 years. :)
From list at joreybump.com  Thu Aug 31 22:33:33 2006
From: list at joreybump.com (Jorey Bump)
Date: Thu Aug 31 22:33:36 2006
Subject: [SPAM] Re: [SPAM] Re: [mod_python] Cannot install , Need help
In-Reply-To: <44F79723.1060006@joreybump.com>
References: <166141960608290601o20db2448vacde3bf7ddbd7b2f@mail.gmail.com>	<c298f2d70608290614r4069e01kee1e69967f271c98@mail.gmail.com>	<166141960608290842o1411ff78l67d3d2f26aeb216@mail.gmail.com>	<c298f2d70608310323g226bef1bmb341f951242ebd5e@mail.gmail.com>	<a99d2b53983f996a4a8bd60de2e824b1@dscpl.com.au>	<1074.69.118.170.122.1157027868.squirrel@mail.panix.com>	<c298f2d70608310619h4e529c5aif452683463b988d7@mail.gmail.com>	<44F74C11.6080601@jgassociates.ca>
	<44F79723.1060006@joreybump.com>
Message-ID: <44F79BFD.6000601@joreybump.com>

My God, SORBS is listing my dynamic DSL IP address as a trojaned machine 
based on an incident that took place on Feb 4, 2006, long before I was 
assigned it? Are they on drugs?

On a related note, 2.4 required hits is far too low a setting for 
SpamAssassin. Can this be raised a bit closer to the default of 5?




From blair at houghton.net  Thu Aug 31 22:01:48 2006
From: blair at houghton.net (Blair P. Houghton)
Date: Fri Sep  1 18:26:33 2006
Subject: [mod_python] errors in default mod_python docs for 3.2.10 publisher
	setup
Message-ID: <44F7948C.8090405@houghton.net>

I happened to get frustrated enough to plug the right magic
into the right search box (the one at http://modpython.org/,
as Google wasn't helping) and found the answer to the reason
that /my/ publisher setup wasn't finding my scripts.  The answer
is that the setup I was following from the 3.2.10 doc tree is
incomplete, and doesn't say that the URI for a publisher-mediated
script has to include the name of the method being invoked.

I.e., this document is inadequate:

http://www.modpython.org/live/mod_python-3.2.10/doc-html/tut-pub.html

the three .conf lines are correct, but the description omits the
correct URI formula.  Just browsing to http://domain/path/script
or http://domain/path/script.py gets a 404 error, while
http://domain/path/script.py/handler works fine.  Note that the
'.py' suffix must be included also.

This document has a different .conf, but does give
the correct instructions for the URI:

http://www.modpython.org/live/current/doc-html/hand-pub-intro.html

Okay.  For grins I just tried the second .conf setup, and
now it works with or without the '.py' suffix, but the
handler name is still required.*

I have not tested any PATH environment-variable 
variations.  I do know that I have one installation 
(the XAMPP bundle on Win XP) that does not need any 
explicit Python elements in the PATH at all.  How that 
works I don't know.  But this one (the 
DeveloperSide.net bundle, with mod_python added on 
afterward...I forget whose mod_python build it was, I'm 
pretty sure I got it from a modpython.org mirror).

I believe that the document from the live/current tree 
should be moved to the document in the live/mod_python-
3.2.10 tree ASAP so that people won't be caught by this 
any more.  I'd do it myself but I'm not even sure that 
this email will get through so I'm not quite up to 
speed on monkeying around the project files, nor even 
if they're modifiable by mod_python newbs.  Another of 
the pleasures of open source.

--Blair

* - here are the significant lines from the working .conf:

  LoadModule python_module modules/mod_python.so

  &lt;Directory /www/webroot>
    SetHandler mod_python 
    PythonHandler mod_python.publisher
  &lt;/Directory>

The path "modules/mod_python.so" is
relative to the Apache install directory; in this case
the full path is C:/www/Apache22/modules/mod_python.so".
"/www/webroot" is the base of my served-file tree, so it
could have been just "/" or the Directory lines could
be omitted entirely and the behavior is the same on my
system.  The working URI is "http://localhost/script/handler".
