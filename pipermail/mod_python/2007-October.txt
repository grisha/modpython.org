From pfreixes at milnou.net  Mon Oct  1 03:08:19 2007
From: pfreixes at milnou.net (Pau Freixes)
Date: Mon Oct  1 03:02:41 2007
Subject: [mod_python] Concurrence and virtual host interpreter python
In-Reply-To: <46FEA6A7.4030800@jgassociates.ca>
Message-ID: <opZQwYfC.1191222499.3555890.pfreixes@milnou.net>


Hi Jim,

Thanks for your answer, and yes i didn't think with kind of mpm was work
in my apache environment, and of course this it's very important.

I m working with mpm-prefork module, for php and debian restrictions ( I
don't like open a discussion about this :) )

OK first, i test another time my index.py script with ab tool. And the
results are :

Server Software:        Apache/2.2.3
Server Hostname:        pfreixes.mynewsonline.com
Server Port:            80

Document Path:          /index.py
Document Length:        120 bytes

Concurrency Level:      4
Time taken for tests:   9.173665 seconds
Complete requests:      4
Failed requests:        0
Write errors:           0
Total transferred:      1420 bytes
HTML transferred:       480 bytes
Requests per second:    0.44 [#/sec] (mean)
Time per request:       9173.665 [ms] (mean)
Time per request:       2293.416 [ms] (mean, across all concurrent
requests)
Transfer rate:          0.11 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0   24  16.5     33      33
Processing:  9087 9123  39.6   9136    9173
Waiting:       83  112  28.4    135     139
Total:       9120 9147  27.2   9169    9173

Ok and the log of apache server is

192.168.0.222 - - [01/Oct/2007:08:48:03 +0200] "GET /index.py HTTP/1.0"
200 120 "-" "ApacheBench/2.0.40-dev"
192.168.0.222 - - [01/Oct/2007:08:48:03 +0200] "GET /index.py HTTP/1.0"
200 120 "-" "ApacheBench/2.0.40-dev"
192.168.0.222 - - [01/Oct/2007:08:48:03 +0200] "GET /index.py HTTP/1.0"
200 120 "-" "ApacheBench/2.0.40-dev"
192.168.0.222 - - [01/Oct/2007:08:48:03 +0200] "GET /index.py HTTP/1.0"
200 120 "-" "ApacheBench/2.0.40-dev"


My index.py, it's like this

    for i in range(1,10):
        req.write("Value is %d\r\n" % VALUE)
        time.sleep(1)

        # change global variable
        VALUE = VALUE + 1;

In definitive, the request share cpu time, why ? this is not a ease
response because this can be for only kernel scheduling between the
process ( every hit is a diferent process ) or becasuse a same
interpreters shared with process are linked with some SHM/IPC mechanism.

But at this point, i think the best question about all environment is how
python share a subinterpreter in a multi fork environment ?  Any ideas
about this ?

This is not my objective, :P. I need learn in a pure thread environment
but i think a some of culture about internal python mechanism can be
positive for me.

Thks to all.


A 29/9/2007, "Jim Gallacher" <jpg@jgassociates.ca> va escriure:

>Pau Freixes wrote:
>> Hi to all, Im new in a list.
>>
>> Well, this last days I was work for testing and learn how work with multi
>> thread and multi interpreter environment in embedding python in C
>> applications, and of course mod_python it's a excellent place for
>> understand this.
>
>You'll need to throw multi-process into the mix of things to understand.
>  I'm not actually sure if mod_python *is* an excellent environment for
>your learning endeavours as there are a number of complicating factors
>introduced by apache and your browser.
>
>The behaviour that you'll see will depend on which apache mpm you are
>using: prefork, worker or winnt. If you haven't already done so you
>should take a look at http://httpd.apache.org/docs/2.0/mpm.html
>
>In order to effectively answer your questions you'll need to let us know
>  us know which mpm you are using. Also, what are you using as your
>client?
>
>> Ok, with my lectures and test with mod_python code, i have a some
>> questions, somebody can help me for understand this concepts ?
>>
>> 1. I was try multi concurrence in a virtual host python script with this
>> easy code
>>
>> def handler(req):
>>
>>     # Request Content Type
>>     req.content_type = "text/plain"
>>
>>     VALUE2 = 1
>>     for i in range(1,10):
>>         req.write("Value is %d\r\n" % VALUE2)
>>         time.sleep(5)
>>
>>         # change global variable
>>         VALUE2 = VALUE2 + 1;
>>
>>
>>     req.write("Hellow World")
>>     return apache.OK
>>
>> And my surprise it's that apache only process the next request when the
>> previous request has been served. !!
>> I don't understand this strange behavior, because mod_python it's made
>> for accept concurrent threads in same interpreter, and i test a similar
>> situation  in a c code and it's possible do run some threads at same
>> time in same interpreter.
>>
>> time.sleep(5) it's a pretty situation for python core for change the
>> context and release GIL and assign to this to other thread. yes ?
>
>Are you sure you're not seeing an artifact of the browser keeping the
>connection open? If this is the case then your request is being
>serialized by apache and the GIL doesn't enter into it.
>
>You could play with your apache config (KeepAlive off and so on), but
>it's likely easier to use a different test client such as wget. Also,
>modify your req.write() calls to immediately flush the data, which will
>make it easier to see what's going on. eg. req.write("something",1)
>
>Open multiple terminals and run the following in each simultaneously (or
>as near as you can make it).
>
>wget -S -O - http://..../index.py
>
>I think you'll see that mod_python is behaving exactly as you'd expect.
>
>>
>> 2. And de second question it's in similar situation, when you reuse a
>> interpreter for all request to same virtual host, with this code :
>>
>> import time
>>
>> VALUE = 1
>>
>> def handler(req):
>>     global VALUE
>>
>>     # Request Content Type
>>     req.content_type = "text/plain"
>>
>>     for i in range(1,10):
>>         req.write("Value is %d\r\n" % VALUE)
>>         time.sleep(5)
>>
>>         # change global variable
>>         VALUE = VALUE + 1;
>>
>>
>>     req.write("Hellow World")
>>     return apache.OK
>>
>> VALUE it's a global variable for de index.py, and subsequent request for
>> the same url (http://...../index.py) show one incremental value for
>> VALUE. For example, this two request produced this two results
>>
>> http://...../index.py
>>
>> Value is 1
>> Value is 2
>> Value is 3
>> Value is 4
>> Value is 5
>> Value is 6
>> Value is 7
>> Value is 8
>> Value is 9
>> Hellow World
>>
>> http://...../index.py
>>
>> Value is 10
>> Value is 11
>> Value is 12
>> Value is 13
>> Value is 14
>> Value is 15
>> Value is 16
>> Value is 17
>> Value is 18
>> Hellow World
>>
>>
>> Ok, this situation it's really and i think its very normal because only
>> callback to handler it's made with the same interpreter and VALUE is
>> not re assigned to value 1, may be ?
>
>The statement "VALUE = 1" is only evaluated when the module (index.py)
>is first loaded. It is not re-evaluated for each request. Note however
>that VALUE should *not* be considered a global variable. Depending on
>which apache mpm is being used you could have multiple, independent
>copies of VALUE. Using the mpm-prefork and the default MaxClients value
>of 256, you could potentially have 256 copies of VALUE if your server is
>under a heavy load. A similar situation exists with mpm-worker where you
>could still have a number of independent multi-threaded child processes.
>
>> 3. And the most important question, why mod_python not use a separate
>> interpreters for all request ?
>
>I'm not 100% sure what you are asking. Do you mean a separate
>interpreter for each request? If so then the resource usage would be
>unacceptably high. The default is to have a separate subinterpreter for
>each virtual host.
>
>Jim
>
>

From matusis at matusis.com  Mon Oct  1 05:12:26 2007
From: matusis at matusis.com (Alec Matusis)
Date: Mon Oct  1 05:13:14 2007
Subject: [mod_python] mod_python or apache scalability?
Message-ID: <022001c8040b$31c20790$954616b0$@com>

I am sorry in advance if this turns out to be an apache-related issue, but
when I posted this on apache list, it has been suggested that it might be an
application issue, so I am reposting it here.


We are running a busy mod_python/3.1.4 Python/2.4.1 server on 2.6.9 kernel,
that suddenly becomes very slow- requests either time out, or it takes
10-20sec to serve a 1K thumbnail. 
It is somewhat correlated with load spikes, but not perfectly (by looking at
the bandwidth graph, it never happens during the low bandwidth periods at
night, but it does not coincide with peaks of b/w) 

When we initially encountered an apache overload, it was always accompanied
with 

[error] server reached MaxClients setting, consider raising the MaxClients
setting 

in the apache error log. We also got 

kernel: possible SYN flooding on port 80. Sending cookies. 

in /var/log/messages system log. 

After that I raised MaxClients from 200 to 300. The problem initially
disappeared, but after our bandwidth grew a bit more, we got this behavior
again. 
Now apache crashes (becomes very slow) silently, with no warning in apache
error logs at all (although we still get SYN flood message in the system
log) 
When apache is this 'slow' regime, /server-status still shows available
slots, i.e. MaxClients is not reached. 

This is the relevant part of httpd.conf: 

ServerLimit 300 
# we are using prefork MPM 
StartServers 10 
MinSpareServers 5 
MaxSpareServers 20 
MaxClients 300 
MaxRequestsPerChild 10000 
MaxMemFree 2500 

The server has 4GB of physical RAM and 4GB of swap. During these apache
?slowdowns", the swap size is still 0 and vmstat shows no swapping at all. 
I suspect the problem may be in 

MaxMemFree 2500 

but then I would expect some kind of???out of memory? errors in the logs? 

I am posting it on this list since I have not gotten a response in the users
list, and I think it's a bug for two reasons: 

1) When apache is in this slow "degraded" regime, I would expect a log
message in the apache error log, with an explanation why. 

3) If this is related to resource exhaustion, I would expect the server to
recover from this regime by itself when the load subsides, but this is not
the case. Only apachectl start/stop recovers the server.



From graham.dumpleton at gmail.com  Mon Oct  1 05:31:08 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct  1 05:31:21 2007
Subject: [mod_python] 2.4.4 <> 2.4.3... :-)
In-Reply-To: <fdgflf$p7p$1@sea.gmane.org>
References: <fdgflf$p7p$1@sea.gmane.org>
Message-ID: <88e286470710010231w5d0fa684q1d97763c6313944f@mail.gmail.com>

On 28/09/2007, durumdara@gmail.com <durumdara@gmail.com> wrote:
> Hi!
>
> I reinstalled my "old" server, and I got this warning:
>
>  >[Thu Sep 27 15:47:26 2007] [error] python_init: Python version
>  >mismatch, expected '2.4.3', found '2.4.4'.
>
> First: is it problem? Can I got errors because of the little version diff?
>
>  >[Thu Sep 27 15:47:26 2007] [error] python_init: Python executable
> found >'C:\\web\\xampplite\\apache\\bin\\apache.exe'.
>
> What is this??? Python executable = apache.exe???
>
>  >[Thu Sep 27 15:47:26 2007] [error] python_init: Python path being used
>  >'C:\\WINDOWS\\system32\\python24.zip;C:\\Python24\\Lib;C:\\Python24\\DLLs;C:\\Python24\\Lib\\lib-tk;;C:\\web\\xampplite\\apache\\bin'.
>
> It is ok...
>
> Please answer to me!

Patch level differences in the Python version are okay provided that
mod_python is linked against Python using a shared library or in the
case of Win32 a DLL.

As Win32 always uses a DLL for Python you are fine.

You can ignore the Python executable path, it is just showing that
mod_python is executing within Apache.

Graham
From graham.dumpleton at gmail.com  Mon Oct  1 07:12:26 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct  1 07:12:39 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <022001c8040b$31c20790$954616b0$@com>
References: <022001c8040b$31c20790$954616b0$@com>
Message-ID: <88e286470710010412w690e365erc4c7ae1df6dc923d@mail.gmail.com>

In order so we can understand things better ...

1. Please explain what application you are running on top of
mod_python. Show the Apache configuration applying to the application
you are running on top of mod_python.

2. Explain why you are running prefork and not worker MPM. Are you
also running some PHP application that will not work with worker MPM?

3. Explain what the relationship is between your mod_python
application and your memory hogging twisted back end processes, ie.,
do they communicate with each other and how.

4. Indicate how big your Apache and twisted processes are growing.

5. Indicate whether you have used the netstat program to try and
determine how many socket connections are being held open by Apache
and twisted processes.

6. Indicate whether you have tried changing the Apache configuration
for how many keep alive connections are maintained and how long keep
alive connections are kept open. For some guidance on these see recent
blog post at:

  http://lucumr.pocoo.org/cogitations/2007/09/30/pushing-apache-performance

7. Indicate what range of values you have experimented with for
MaxRequestsPerChild.

At the moment the description of your problem is a bit vague so all
the above detail would help immensely as far as us being able to given
any ideas.

Please try not to gloss over details, the more details you give the
more helpful we might be able to be. For example, you don't even
mention that your system is shared with some very large twisted
processes. I only know that this might be the case from a short
followup you made to HTTPD dev list. When you say twisted, I presume
though you mean Python Twisted framework.

Graham

On 01/10/2007, Alec Matusis <matusis@matusis.com> wrote:
> I am sorry in advance if this turns out to be an apache-related issue, but
> when I posted this on apache list, it has been suggested that it might be an
> application issue, so I am reposting it here.
>
>
> We are running a busy mod_python/3.1.4 Python/2.4.1 server on 2.6.9 kernel,
> that suddenly becomes very slow- requests either time out, or it takes
> 10-20sec to serve a 1K thumbnail.
> It is somewhat correlated with load spikes, but not perfectly (by looking at
> the bandwidth graph, it never happens during the low bandwidth periods at
> night, but it does not coincide with peaks of b/w)
>
> When we initially encountered an apache overload, it was always accompanied
> with
>
> [error] server reached MaxClients setting, consider raising the MaxClients
> setting
>
> in the apache error log. We also got
>
> kernel: possible SYN flooding on port 80. Sending cookies.
>
> in /var/log/messages system log.
>
> After that I raised MaxClients from 200 to 300. The problem initially
> disappeared, but after our bandwidth grew a bit more, we got this behavior
> again.
> Now apache crashes (becomes very slow) silently, with no warning in apache
> error logs at all (although we still get SYN flood message in the system
> log)
> When apache is this 'slow' regime, /server-status still shows available
> slots, i.e. MaxClients is not reached.
>
> This is the relevant part of httpd.conf:
>
> ServerLimit 300
> # we are using prefork MPM
> StartServers 10
> MinSpareServers 5
> MaxSpareServers 20
> MaxClients 300
> MaxRequestsPerChild 10000
> MaxMemFree 2500
>
> The server has 4GB of physical RAM and 4GB of swap. During these apache
> "slowdowns", the swap size is still 0 and vmstat shows no swapping at all.
> I suspect the problem may be in
>
> MaxMemFree 2500
>
> but then I would expect some kind of"out of memory" errors in the logs?
>
> I am posting it on this list since I have not gotten a response in the users
> list, and I think it's a bug for two reasons:
>
> 1) When apache is in this slow "degraded" regime, I would expect a log
> message in the apache error log, with an explanation why.
>
> 3) If this is related to resource exhaustion, I would expect the server to
> recover from this regime by itself when the load subsides, but this is not
> the case. Only apachectl start/stop recovers the server.
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From calderano at sgaspa.it  Mon Oct  1 07:39:00 2007
From: calderano at sgaspa.it (Luca Calderano)
Date: Mon Oct  1 07:39:21 2007
Subject: [mod_python] SESSION HELP
Message-ID: <003c01c8041f$a9910550$410100a4@sga.dom>

Can someone tell me how do session expires even if i set expiration time = 0 ?
thanks in advance 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071001/e353295f/attachment.html
From jpg at jgassociates.ca  Mon Oct  1 07:54:49 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Oct  1 07:53:23 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <022001c8040b$31c20790$954616b0$@com>
References: <022001c8040b$31c20790$954616b0$@com>
Message-ID: <4700E009.7010203@jgassociates.ca>

Are you using Sessions, specifically DbmSession?

Jim


Alec Matusis wrote:
> I am sorry in advance if this turns out to be an apache-related issue, but
> when I posted this on apache list, it has been suggested that it might be an
> application issue, so I am reposting it here.
> 
> 
> We are running a busy mod_python/3.1.4 Python/2.4.1 server on 2.6.9 kernel,
> that suddenly becomes very slow- requests either time out, or it takes
> 10-20sec to serve a 1K thumbnail. 
> It is somewhat correlated with load spikes, but not perfectly (by looking at
> the bandwidth graph, it never happens during the low bandwidth periods at
> night, but it does not coincide with peaks of b/w) 
> 
> When we initially encountered an apache overload, it was always accompanied
> with 
> 
> [error] server reached MaxClients setting, consider raising the MaxClients
> setting 
> 
> in the apache error log. We also got 
> 
> kernel: possible SYN flooding on port 80. Sending cookies. 
> 
> in /var/log/messages system log. 
> 
> After that I raised MaxClients from 200 to 300. The problem initially
> disappeared, but after our bandwidth grew a bit more, we got this behavior
> again. 
> Now apache crashes (becomes very slow) silently, with no warning in apache
> error logs at all (although we still get SYN flood message in the system
> log) 
> When apache is this 'slow' regime, /server-status still shows available
> slots, i.e. MaxClients is not reached. 
> 
> This is the relevant part of httpd.conf: 
> 
> ServerLimit 300 
> # we are using prefork MPM 
> StartServers 10 
> MinSpareServers 5 
> MaxSpareServers 20 
> MaxClients 300 
> MaxRequestsPerChild 10000 
> MaxMemFree 2500 
> 
> The server has 4GB of physical RAM and 4GB of swap. During these apache
> ?slowdowns", the swap size is still 0 and vmstat shows no swapping at all. 
> I suspect the problem may be in 
> 
> MaxMemFree 2500 
> 
> but then I would expect some kind of  ?out of memory? errors in the logs? 
> 
> I am posting it on this list since I have not gotten a response in the users
> list, and I think it's a bug for two reasons: 
> 
> 1) When apache is in this slow "degraded" regime, I would expect a log
> message in the apache error log, with an explanation why. 
> 
> 3) If this is related to resource exhaustion, I would expect the server to
> recover from this regime by itself when the load subsides, but this is not
> the case. Only apachectl start/stop recovers the server.
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Mon Oct  1 08:03:15 2007
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Oct  1 08:01:39 2007
Subject: [mod_python] SESSION HELP
In-Reply-To: <003c01c8041f$a9910550$410100a4@sga.dom>
References: <003c01c8041f$a9910550$410100a4@sga.dom>
Message-ID: <4700E203.8030903@jgassociates.ca>

Luca Calderano wrote:
> Can someone tell me how do session expires even if i set expiration time = 0 ?
> thanks in advance 

Perhaps you could clarify your questions a little, but you should be 
aware that the session will always be invalidated when the browser is 
closed.

Jim
From list at joreybump.com  Mon Oct  1 14:49:03 2007
From: list at joreybump.com (Jorey Bump)
Date: Mon Oct  1 14:49:26 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <022001c8040b$31c20790$954616b0$@com>
References: <022001c8040b$31c20790$954616b0$@com>
Message-ID: <4701411F.5010305@joreybump.com>

Alec Matusis wrote, at 10/01/2007 05:12 AM:

> This is the relevant part of httpd.conf: 
> 
> ServerLimit 300 
> # we are using prefork MPM 
> StartServers 10 
> MinSpareServers 5 
> MaxSpareServers 20 
> MaxClients 300 
> MaxRequestsPerChild 10000 
> MaxMemFree 2500 

It's not always wise to simply raise values on a system that's already 
overburdened. For example, setting a finite value of 10000 for 
MaxRequestsPerChild may still be too high to make a difference. 
Increasing the number of clients and servers may only make the problem 
worse.

I'd revert to the defaults, then start by changing only 
MaxRequestsPerChild to something smaller, like 100, to see if it has any 
effect at all. Putting a short lifespan on your child processes may help 
the symptoms enough to point the way to a cure. To get a proper control, 
be sure to stop/start apache, not use restart or graceful.

From matusis at matusis.com  Mon Oct  1 18:34:43 2007
From: matusis at matusis.com (Alec Matusis)
Date: Mon Oct  1 18:35:38 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <88e286470710010412w690e365erc4c7ae1df6dc923d@mail.gmail.com>
References: <022001c8040b$31c20790$954616b0$@com>
	<88e286470710010412w690e365erc4c7ae1df6dc923d@mail.gmail.com>
Message-ID: <00d001c8047b$435e6f50$ca1b4df0$@com>

Hi Graham,

> 1. Please explain what application you are running on top of
> mod_python. Show the Apache configuration applying to the application
> you are running on top of mod_python.

    <Directory "/ourpath/scripts">
            SetHandler mod_python
            PythonPath "sys.path+['/ourpath/scripts', '/ourpath/publisher',
'/ourpath']"
            PythonHandler publisher
            PythonOption init _our_init
            PythonOption default _main
            PythonInputFilter flashfilter FLASHFILTER
            SetInputFilter FLASHFILTER
    </Directory>

Flashfilter is used very infrequently (for user image uploads from legacy
clients), it's not a major load factor.

> 2. Explain why you are running prefork and not worker MPM. Are you
> also running some PHP application that will not work with worker MPM?

We are not using any PHP, it's all python. I do not have any rational reason
for using prefork over worker, except that once I ran a python script on
this machine that spawned multiple threads. I believe it gave me an error
(something like "cannot spawn any more threads") at about 305 threads. That
made me apprehensive about using worker MPM.  

> 3. Explain what the relationship is between your mod_python
> application and your memory hogging twisted back end processes, ie.,
> do they communicate with each other and how.

We have two twisted processes, they take about 110MB and 75MB of RSS
respectively, and run for months without restarting.
Python web scripts periodically communicate with one of the twisted
processes like this:

socket.setdefaulttimeout(10)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('127.0.0.1', twisted_listening_port))
r = s.send(command)
if r > 0:    data = s.recv(10)
else:
    data = -1
s.close()

> 4. Indicate how big your Apache and twisted processes are growing.

Apache can have up to 275 processes, each taking between 11-18MB
Twisted is 105MB and 75MB 
(all figures are RSS)
Apache is restarted nightly by a cron script (graceful restart)

> 5. Indicate whether you have used the netstat program to try and
> determine how many socket connections are being held open by Apache
> and twisted processes.
 
Under normal operation:
# netstat -n | grep :80  | wc -l
11704

# netstat -n | grep :80 | grep ESTABLISHED | wc -l 
151

When apache crashed (was "slow"):
# netstat -n | grep :80  | wc -l
6067
This is half of the normal. I do not know how many of these were in
TIME_WAIT.

2 Twisted processes have about 3500 and 1000 connection respectively, all in
the ESTABLISHED state.

> 6. Indicate whether you have tried changing the Apache configuration
> for how many keep alive connections are maintained and how long keep
> alive connections are kept open. 

We have always had 

KeepAlive Off

> 7. Indicate what range of values you have experimented with for
> MaxRequestsPerChild.

I upped to from 1000 to 10000, but at that time our bandwidth was much
lower, so not recently- since I did not see any memory leaks in apache
children.

> At the moment the description of your problem is a bit vague so all
> the above detail would help immensely as far as us being able to given
> any ideas.

I managed to take a screenshot of /server-status page when apache was in the
"slow" state again today.
It showed 0 idle workers, all 300 MaxClients busy, and most of them (90%) in
the R state, 8% in the W state and the rest in the C state. Despite this,
apache did not log "[error] server reached MaxClients setting, consider
raising the MaxClients setting" at any time during the crash. It did log
this message immediately after I restarted the server, when it was
operational.
Overall load average drops form 16-20 to 3-5 when apache crashes, and
`procinfo -d` shows that the CPUs are 60% idle (drop from normal 15-30% idle
during peak load).

After today's crash I removed MaxMemFree 2500 altogether. 
It crashed again after that, with nothing in the error log.
Apachectl stop/start recovers it.

Our apache access logs are disabled for most common requests.
I noticed that when apache is operating normally, there's a lot of
connections to our DB server machine in the TIME_WAIT state. 
It turns out that the DB server is under a medium-high load as well, but I
did not manage to look at that machine during the apache crash. This is how
our db machine looks like under normal operation

db0 ~> procinfo -d
Bootup: Tue Jul 24 15:17:47 2007    Load average: 4.70 5.52 4.76 1/157 24936

user  :       0:00:08.51  42.5%  page in :     1188  disk 1:       92r
277w9w
nice  :       0:00:00.00   0.0%  page out:     2396  disk 2:       68r
280ww
system:       0:00:02.05  10.2%  swap in :        0  disk 3:       80r
369ww
idle  :       0:00:09.44  47.2%  swap out:        0  disk 4:      297r
599w7w
uptime:  69d  0:16:17.61         context :    414234

I will send /server-status page when apache is crashing as an html
attachment in a separate email, since I am afraid this email will be
delivered to junk if it has an attachement.

Thank You

Alec Matusis.



> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Monday, October 01, 2007 4:12 AM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] mod_python or apache scalability?
> 
> In order so we can understand things better ...
> 
> 1. Please explain what application you are running on top of
> mod_python. Show the Apache configuration applying to the application
> you are running on top of mod_python.
> 
> 2. Explain why you are running prefork and not worker MPM. Are you
> also running some PHP application that will not work with worker MPM?
> 
> 3. Explain what the relationship is between your mod_python
> application and your memory hogging twisted back end processes, ie.,
> do they communicate with each other and how.
> 
> 4. Indicate how big your Apache and twisted processes are growing.
> 
> 5. Indicate whether you have used the netstat program to try and
> determine how many socket connections are being held open by Apache
> and twisted processes.
> 
> 6. Indicate whether you have tried changing the Apache configuration
> for how many keep alive connections are maintained and how long keep
> alive connections are kept open. For some guidance on these see recent
> blog post at:
> 
>   http://lucumr.pocoo.org/cogitations/2007/09/30/pushing-apache-
> performance
> 
> 7. Indicate what range of values you have experimented with for
> MaxRequestsPerChild.
> 
> At the moment the description of your problem is a bit vague so all
> the above detail would help immensely as far as us being able to given
> any ideas.
> 
> Please try not to gloss over details, the more details you give the
> more helpful we might be able to be. For example, you don't even
> mention that your system is shared with some very large twisted
> processes. I only know that this might be the case from a short
> followup you made to HTTPD dev list. When you say twisted, I presume
> though you mean Python Twisted framework.
> 
> Graham
> 
> On 01/10/2007, Alec Matusis <matusis@matusis.com> wrote:
> > I am sorry in advance if this turns out to be an apache-related
> issue, but
> > when I posted this on apache list, it has been suggested that it
> might be an
> > application issue, so I am reposting it here.
> >
> >
> > We are running a busy mod_python/3.1.4 Python/2.4.1 server on 2.6.9
> kernel,
> > that suddenly becomes very slow- requests either time out, or it
> takes
> > 10-20sec to serve a 1K thumbnail.
> > It is somewhat correlated with load spikes, but not perfectly (by
> looking at
> > the bandwidth graph, it never happens during the low bandwidth
> periods at
> > night, but it does not coincide with peaks of b/w)
> >
> > When we initially encountered an apache overload, it was always
> accompanied
> > with
> >
> > [error] server reached MaxClients setting, consider raising the
> MaxClients
> > setting
> >
> > in the apache error log. We also got
> >
> > kernel: possible SYN flooding on port 80. Sending cookies.
> >
> > in /var/log/messages system log.
> >
> > After that I raised MaxClients from 200 to 300. The problem initially
> > disappeared, but after our bandwidth grew a bit more, we got this
> behavior
> > again.
> > Now apache crashes (becomes very slow) silently, with no warning in
> apache
> > error logs at all (although we still get SYN flood message in the
> system
> > log)
> > When apache is this 'slow' regime, /server-status still shows
> available
> > slots, i.e. MaxClients is not reached.
> >
> > This is the relevant part of httpd.conf:
> >
> > ServerLimit 300
> > # we are using prefork MPM
> > StartServers 10
> > MinSpareServers 5
> > MaxSpareServers 20
> > MaxClients 300
> > MaxRequestsPerChild 10000
> > MaxMemFree 2500
> >
> > The server has 4GB of physical RAM and 4GB of swap. During these
> apache
> > "slowdowns", the swap size is still 0 and vmstat shows no swapping at
> all.
> > I suspect the problem may be in
> >
> > MaxMemFree 2500
> >
> > but then I would expect some kind of"out of memory" errors in the
> logs?
> >
> > I am posting it on this list since I have not gotten a response in
> the users
> > list, and I think it's a bug for two reasons:
> >
> > 1) When apache is in this slow "degraded" regime, I would expect a
> log
> > message in the apache error log, with an explanation why.
> >
> > 3) If this is related to resource exhaustion, I would expect the
> server to
> > recover from this regime by itself when the load subsides, but this
> is not
> > the case. Only apachectl start/stop recovers the server.
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >

From matusis at matusis.com  Mon Oct  1 18:41:47 2007
From: matusis at matusis.com (Alec Matusis)
Date: Mon Oct  1 18:42:32 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <4700E009.7010203@jgassociates.ca>
References: <022001c8040b$31c20790$954616b0$@com>
	<4700E009.7010203@jgassociates.ca>
Message-ID: <00d801c8047c$404b9490$c0e2bdb0$@com>

> Are you using Sessions, specifically DbmSession?
> 
> Jim

We are not using DbmSession

Alec

> -----Original Message-----
> From: Jim Gallacher [mailto:jpg@jgassociates.ca]
> Sent: Monday, October 01, 2007 4:55 AM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] mod_python or apache scalability?
> 
> Are you using Sessions, specifically DbmSession?
> 
> Jim
> 
> 
> Alec Matusis wrote:
> > I am sorry in advance if this turns out to be an apache-related
> issue, but
> > when I posted this on apache list, it has been suggested that it
> might be an
> > application issue, so I am reposting it here.
> >
> >
> > We are running a busy mod_python/3.1.4 Python/2.4.1 server on 2.6.9
> kernel,
> > that suddenly becomes very slow- requests either time out, or it
> takes
> > 10-20sec to serve a 1K thumbnail.
> > It is somewhat correlated with load spikes, but not perfectly (by
> looking at
> > the bandwidth graph, it never happens during the low bandwidth
> periods at
> > night, but it does not coincide with peaks of b/w)
> >
> > When we initially encountered an apache overload, it was always
> accompanied
> > with
> >
> > [error] server reached MaxClients setting, consider raising the
> MaxClients
> > setting
> >
> > in the apache error log. We also got
> >
> > kernel: possible SYN flooding on port 80. Sending cookies.
> >
> > in /var/log/messages system log.
> >
> > After that I raised MaxClients from 200 to 300. The problem initially
> > disappeared, but after our bandwidth grew a bit more, we got this
> behavior
> > again.
> > Now apache crashes (becomes very slow) silently, with no warning in
> apache
> > error logs at all (although we still get SYN flood message in the
> system
> > log)
> > When apache is this 'slow' regime, /server-status still shows
> available
> > slots, i.e. MaxClients is not reached.
> >
> > This is the relevant part of httpd.conf:
> >
> > ServerLimit 300
> > # we are using prefork MPM
> > StartServers 10
> > MinSpareServers 5
> > MaxSpareServers 20
> > MaxClients 300
> > MaxRequestsPerChild 10000
> > MaxMemFree 2500
> >
> > The server has 4GB of physical RAM and 4GB of swap. During these
> apache
> > "slowdowns", the swap size is still 0 and vmstat shows no swapping at
> all.
> > I suspect the problem may be in
> >
> > MaxMemFree 2500
> >
> > but then I would expect some kind of  "out of memory" errors in the
> logs?
> >
> > I am posting it on this list since I have not gotten a response in
> the users
> > list, and I think it's a bug for two reasons:
> >
> > 1) When apache is in this slow "degraded" regime, I would expect a
> log
> > message in the apache error log, with an explanation why.
> >
> > 3) If this is related to resource exhaustion, I would expect the
> server to
> > recover from this regime by itself when the load subsides, but this
> is not
> > the case. Only apachectl start/stop recovers the server.
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >

From graham.dumpleton at gmail.com  Mon Oct  1 19:00:24 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct  1 19:00:37 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <00d801c8047c$404b9490$c0e2bdb0$@com>
References: <022001c8040b$31c20790$954616b0$@com>
	<4700E009.7010203@jgassociates.ca>
	<00d801c8047c$404b9490$c0e2bdb0$@com>
Message-ID: <88e286470710011600s19d16b35yd8da386b2706df2b@mail.gmail.com>

Are you using mod_python sessions at all though?

On 02/10/2007, Alec Matusis <matusis@matusis.com> wrote:
> > Are you using Sessions, specifically DbmSession?
> >
> > Jim
>
> We are not using DbmSession
>
> Alec
>
> > -----Original Message-----
> > From: Jim Gallacher [mailto:jpg@jgassociates.ca]
> > Sent: Monday, October 01, 2007 4:55 AM
> > To: Alec Matusis
> > Cc: mod_python@modpython.org
> > Subject: Re: [mod_python] mod_python or apache scalability?
> >
> > Are you using Sessions, specifically DbmSession?
> >
> > Jim
> >
> >
> > Alec Matusis wrote:
> > > I am sorry in advance if this turns out to be an apache-related
> > issue, but
> > > when I posted this on apache list, it has been suggested that it
> > might be an
> > > application issue, so I am reposting it here.
> > >
> > >
> > > We are running a busy mod_python/3.1.4 Python/2.4.1 server on 2.6.9
> > kernel,
> > > that suddenly becomes very slow- requests either time out, or it
> > takes
> > > 10-20sec to serve a 1K thumbnail.
> > > It is somewhat correlated with load spikes, but not perfectly (by
> > looking at
> > > the bandwidth graph, it never happens during the low bandwidth
> > periods at
> > > night, but it does not coincide with peaks of b/w)
> > >
> > > When we initially encountered an apache overload, it was always
> > accompanied
> > > with
> > >
> > > [error] server reached MaxClients setting, consider raising the
> > MaxClients
> > > setting
> > >
> > > in the apache error log. We also got
> > >
> > > kernel: possible SYN flooding on port 80. Sending cookies.
> > >
> > > in /var/log/messages system log.
> > >
> > > After that I raised MaxClients from 200 to 300. The problem initially
> > > disappeared, but after our bandwidth grew a bit more, we got this
> > behavior
> > > again.
> > > Now apache crashes (becomes very slow) silently, with no warning in
> > apache
> > > error logs at all (although we still get SYN flood message in the
> > system
> > > log)
> > > When apache is this 'slow' regime, /server-status still shows
> > available
> > > slots, i.e. MaxClients is not reached.
> > >
> > > This is the relevant part of httpd.conf:
> > >
> > > ServerLimit 300
> > > # we are using prefork MPM
> > > StartServers 10
> > > MinSpareServers 5
> > > MaxSpareServers 20
> > > MaxClients 300
> > > MaxRequestsPerChild 10000
> > > MaxMemFree 2500
> > >
> > > The server has 4GB of physical RAM and 4GB of swap. During these
> > apache
> > > "slowdowns", the swap size is still 0 and vmstat shows no swapping at
> > all.
> > > I suspect the problem may be in
> > >
> > > MaxMemFree 2500
> > >
> > > but then I would expect some kind of  "out of memory" errors in the
> > logs?
> > >
> > > I am posting it on this list since I have not gotten a response in
> > the users
> > > list, and I think it's a bug for two reasons:
> > >
> > > 1) When apache is in this slow "degraded" regime, I would expect a
> > log
> > > message in the apache error log, with an explanation why.
> > >
> > > 3) If this is related to resource exhaustion, I would expect the
> > server to
> > > recover from this regime by itself when the load subsides, but this
> > is not
> > > the case. Only apachectl start/stop recovers the server.
> > >
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From matusis at matusis.com  Mon Oct  1 19:02:04 2007
From: matusis at matusis.com (Alec Matusis)
Date: Mon Oct  1 19:02:58 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <88e286470710011600s19d16b35yd8da386b2706df2b@mail.gmail.com>
References: <022001c8040b$31c20790$954616b0$@com>	
	<4700E009.7010203@jgassociates.ca>	
	<00d801c8047c$404b9490$c0e2bdb0$@com>
	<88e286470710011600s19d16b35yd8da386b2706df2b@mail.gmail.com>
Message-ID: <00f801c8047f$15ea6660$41bf3320$@com>

> Are you using mod_python sessions at all though?

No, we are not using sessions anywhere.

Alec.

> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Monday, October 01, 2007 4:00 PM
> To: Alec Matusis
> Cc: Jim Gallacher; mod_python@modpython.org
> Subject: Re: [mod_python] mod_python or apache scalability?
> 
> Are you using mod_python sessions at all though?
> 
> On 02/10/2007, Alec Matusis <matusis@matusis.com> wrote:
> > > Are you using Sessions, specifically DbmSession?
> > >
> > > Jim
> >
> > We are not using DbmSession
> >
> > Alec
> >
> > > -----Original Message-----
> > > From: Jim Gallacher [mailto:jpg@jgassociates.ca]
> > > Sent: Monday, October 01, 2007 4:55 AM
> > > To: Alec Matusis
> > > Cc: mod_python@modpython.org
> > > Subject: Re: [mod_python] mod_python or apache scalability?
> > >
> > > Are you using Sessions, specifically DbmSession?
> > >
> > > Jim
> > >
> > >
> > > Alec Matusis wrote:
> > > > I am sorry in advance if this turns out to be an apache-related
> > > issue, but
> > > > when I posted this on apache list, it has been suggested that it
> > > might be an
> > > > application issue, so I am reposting it here.
> > > >
> > > >
> > > > We are running a busy mod_python/3.1.4 Python/2.4.1 server on
> 2.6.9
> > > kernel,
> > > > that suddenly becomes very slow- requests either time out, or it
> > > takes
> > > > 10-20sec to serve a 1K thumbnail.
> > > > It is somewhat correlated with load spikes, but not perfectly (by
> > > looking at
> > > > the bandwidth graph, it never happens during the low bandwidth
> > > periods at
> > > > night, but it does not coincide with peaks of b/w)
> > > >
> > > > When we initially encountered an apache overload, it was always
> > > accompanied
> > > > with
> > > >
> > > > [error] server reached MaxClients setting, consider raising the
> > > MaxClients
> > > > setting
> > > >
> > > > in the apache error log. We also got
> > > >
> > > > kernel: possible SYN flooding on port 80. Sending cookies.
> > > >
> > > > in /var/log/messages system log.
> > > >
> > > > After that I raised MaxClients from 200 to 300. The problem
> initially
> > > > disappeared, but after our bandwidth grew a bit more, we got this
> > > behavior
> > > > again.
> > > > Now apache crashes (becomes very slow) silently, with no warning
> in
> > > apache
> > > > error logs at all (although we still get SYN flood message in the
> > > system
> > > > log)
> > > > When apache is this 'slow' regime, /server-status still shows
> > > available
> > > > slots, i.e. MaxClients is not reached.
> > > >
> > > > This is the relevant part of httpd.conf:
> > > >
> > > > ServerLimit 300
> > > > # we are using prefork MPM
> > > > StartServers 10
> > > > MinSpareServers 5
> > > > MaxSpareServers 20
> > > > MaxClients 300
> > > > MaxRequestsPerChild 10000
> > > > MaxMemFree 2500
> > > >
> > > > The server has 4GB of physical RAM and 4GB of swap. During these
> > > apache
> > > > "slowdowns", the swap size is still 0 and vmstat shows no
> swapping at
> > > all.
> > > > I suspect the problem may be in
> > > >
> > > > MaxMemFree 2500
> > > >
> > > > but then I would expect some kind of  "out of memory" errors in
> the
> > > logs?
> > > >
> > > > I am posting it on this list since I have not gotten a response
> in
> > > the users
> > > > list, and I think it's a bug for two reasons:
> > > >
> > > > 1) When apache is in this slow "degraded" regime, I would expect
> a
> > > log
> > > > message in the apache error log, with an explanation why.
> > > >
> > > > 3) If this is related to resource exhaustion, I would expect the
> > > server to
> > > > recover from this regime by itself when the load subsides, but
> this
> > > is not
> > > > the case. Only apachectl start/stop recovers the server.
> > > >
> > > >
> > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >

From graham.dumpleton at gmail.com  Mon Oct  1 21:46:46 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct  1 21:46:58 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <022001c8040b$31c20790$954616b0$@com>
References: <022001c8040b$31c20790$954616b0$@com>
Message-ID: <88e286470710011846h4e5af467h3074f4b02b703d05@mail.gmail.com>

On 01/10/2007, Alec Matusis <matusis@matusis.com> wrote:
> in the apache error log. We also got
>
> kernel: possible SYN flooding on port 80. Sending cookies.
>
> in /var/log/messages system log.

Have you determined for certain that you aren't the target of an
external SYN Flood DOS attack?

Do a Google search for 'kernel: possible SYN flooding on port 80.
Sending cookies' and you will find lots of stuff to read. Your running
out of or having a large number of socket connections may be
symptomatic of a large number of half open connections being created
and then being left in TIME_WAIT. Thus perhaps do some better analysis
of socket connection states using netstat. If not a SYN Flood, then
possibly follow some of the other suggestions in the pages you will
find when you do the search.

FWIW, I personally would try and move from prefork to worker MPM as
the number of Apache child processes you are running with is to my
mind excessive. Using worker would certainly drop memory usage for a
start as you wouldn't need as many child processes to be started. I
wouldn't be concerned about running out of threads as when running
worker I wouldn't suggest more than 25 threads per process as a
starting point anyway. If your mod_python application was creating
lots of threads, you are likely to hit the thread limit with prefork
and not just worker so which MPM is used shouldn't be an issue in that
case.

BTW, what operating system are you using?

Graham
From matusis at matusis.com  Mon Oct  1 22:07:25 2007
From: matusis at matusis.com (Alec Matusis)
Date: Mon Oct  1 22:10:01 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <88e286470710011846h4e5af467h3074f4b02b703d05@mail.gmail.com>
References: <022001c8040b$31c20790$954616b0$@com>
	<88e286470710011846h4e5af467h3074f4b02b703d05@mail.gmail.com>
Message-ID: <014e01c80498$fa327510$ee975f30$@com>

> Have you determined for certain that you aren't the target of an
> external SYN Flood DOS attack?

I strongly suspect it has to do with this "frozen" apache state, because

a) I do not see an inbound bandwidth spike on the bandwidth monitor
b) As soon as apache is restarted, everything is normal, SYN flood messages
go away. 
I would not expect the attack to stop when we restart apache ;)

> BTW, what operating system are you using?
We are on SuSE 9.3 (x86-64) kernel 2.6.11.4-21.12-smp

> FWIW, I personally would try and move from prefork to worker MPM as
> the number of Apache child processes you are running with is to my
> mind excessive.

I will certainly try that, but not till next week, since it involves
recompiling apache.
I will upgrade to apache 2.2 and mod_python 3.3.1 at the same time- I am not
sure if they have any performance improvements over 2.0/mod_python 3.1.4
combination.



> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Monday, October 01, 2007 6:47 PM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] mod_python or apache scalability?
> 
> On 01/10/2007, Alec Matusis <matusis@matusis.com> wrote:
> > in the apache error log. We also got
> >
> > kernel: possible SYN flooding on port 80. Sending cookies.
> >
> > in /var/log/messages system log.
> 
> Have you determined for certain that you aren't the target of an
> external SYN Flood DOS attack?
> 
> Do a Google search for 'kernel: possible SYN flooding on port 80.
> Sending cookies' and you will find lots of stuff to read. Your running
> out of or having a large number of socket connections may be
> symptomatic of a large number of half open connections being created
> and then being left in TIME_WAIT. Thus perhaps do some better analysis
> of socket connection states using netstat. If not a SYN Flood, then
> possibly follow some of the other suggestions in the pages you will
> find when you do the search.
> 
> FWIW, I personally would try and move from prefork to worker MPM as
> the number of Apache child processes you are running with is to my
> mind excessive. Using worker would certainly drop memory usage for a
> start as you wouldn't need as many child processes to be started. I
> wouldn't be concerned about running out of threads as when running
> worker I wouldn't suggest more than 25 threads per process as a
> starting point anyway. If your mod_python application was creating
> lots of threads, you are likely to hit the thread limit with prefork
> and not just worker so which MPM is used shouldn't be an issue in that
> case.
> 
> BTW, what operating system are you using?
> 
> Graham

From graham.dumpleton at gmail.com  Mon Oct  1 22:16:26 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct  1 22:16:42 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <014e01c80498$fa327510$ee975f30$@com>
References: <022001c8040b$31c20790$954616b0$@com>
	<88e286470710011846h4e5af467h3074f4b02b703d05@mail.gmail.com>
	<014e01c80498$fa327510$ee975f30$@com>
Message-ID: <88e286470710011916t30a35308sb1e7936c0df9f0cc@mail.gmail.com>

On 02/10/2007, Alec Matusis <matusis@matusis.com> wrote:
> > FWIW, I personally would try and move from prefork to worker MPM as
> > the number of Apache child processes you are running with is to my
> > mind excessive.
>
> I will certainly try that, but not till next week, since it involves
> recompiling apache.
> I will upgrade to apache 2.2 and mod_python 3.3.1 at the same time- I am not
> sure if they have any performance improvements over 2.0/mod_python 3.1.4
> combination.

Version 3.1.4 of mod_python has various bugs in it which have been
fixed in 3.3.1, so upgrading would be a good idea anyway. Just make
sure you test your code on 3.3.1 before hand and specifically take not
of any issues with finding Python modules as module importer has
changed in a few subtle ways. See description of
apache.import_module() in:

  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

Also, how your configure Apache 2.2 for authentication is a bit
different if you are using features such as Basic auth, so watch out
for that as well as that trips up some people, especially if they are
running their own custom mod_python authenhandler.

Graham
From dinogen at yahoo.com  Wed Oct  3 06:32:36 2007
From: dinogen at yahoo.com (Marcello Semboli)
Date: Wed Oct  3 06:32:51 2007
Subject: [mod_python] AddHandler on .htaccess
Message-ID: <119926.98045.qm@web55202.mail.re4.yahoo.com>

Hello, everybody.

I'm writing a web application in python using mod_python.publisher and a template PSP system.
I have Apache 2.0.55, mod_python 3.2.8 and python 2.4.4c1.

If my .htaccess is: 
    AddHandler mod_python .py
    PythonHandler mod_python.publisher

everything works well. The page
http://localhost/login.py 
and 
http://localhost/login.py/index render the correct page.

But if I want to use a different extension, say, login.psp I can't get it works at all!

I try to change login.py in login.psp and .htaccess as follow:
    AddHandler mod_python .psp

    PythonHandler mod_python.publisher


and also:
    AddHandler mod_python .psp


    PythonHandler mod_python.publisher |  .psp



In any case I got 404 Not Found.
Restarting apache, flushing cache, removing various .pyc cannot fix the problem.

Where is my error???


________________________________
Marcello Semboli
http://dinogen.hacknight.org




      ___________________________________ 
L'email della prossima generazione? Puoi averla con la nuova Yahoo! Mail: http://it.docs.yahoo.com/nowyoucan.html

From graham.dumpleton at gmail.com  Wed Oct  3 06:50:16 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct  3 06:50:32 2007
Subject: [mod_python] AddHandler on .htaccess
In-Reply-To: <119926.98045.qm@web55202.mail.re4.yahoo.com>
References: <119926.98045.qm@web55202.mail.re4.yahoo.com>
Message-ID: <88e286470710030350y7512d652q67a1afa723c7d1aa@mail.gmail.com>

Are you sure your .htaccess file is actually being read and used and
you aren't just inheriting a fixed configuration from main Apache
configuration files?

If you insert junk in the .htaccess file, ie., invalid name which is
not a valid directive, such as string 'XXX', do you then get a 500
error and message in the Apache error log file. If you do, this would
indicate the file is being read, otherwise it isn't.

For other general commentary on SetHandler/AddHandler and mod_python see:

  http://www.dscpl.com.au/wiki/ModPython/Articles/SetHandlerVersusAddHandler

Graham

On 03/10/2007, Marcello Semboli <dinogen@yahoo.com> wrote:
> Hello, everybody.
>
> I'm writing a web application in python using mod_python.publisher and a template PSP system.
> I have Apache 2.0.55, mod_python 3.2.8 and python 2.4.4c1.
>
> If my .htaccess is:
>     AddHandler mod_python .py
>     PythonHandler mod_python.publisher
>
> everything works well. The page
> http://localhost/login.py
> and
> http://localhost/login.py/index render the correct page.
>
> But if I want to use a different extension, say, login.psp I can't get it works at all!
>
> I try to change login.py in login.psp and .htaccess as follow:
>     AddHandler mod_python .psp
>
>     PythonHandler mod_python.publisher
>
>
> and also:
>     AddHandler mod_python .psp
>
>
>     PythonHandler mod_python.publisher |  .psp
>
>
>
> In any case I got 404 Not Found.
> Restarting apache, flushing cache, removing various .pyc cannot fix the problem.
>
> Where is my error???
>
>
> ________________________________
> Marcello Semboli
> http://dinogen.hacknight.org
>
>
>
>
>       ___________________________________
> L'email della prossima generazione? Puoi averla con la nuova Yahoo! Mail: http://it.docs.yahoo.com/nowyoucan.html
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From gdamjan at gmail.com  Wed Oct  3 13:09:12 2007
From: gdamjan at gmail.com (Damjan Georgievski)
Date: Wed Oct  3 13:09:30 2007
Subject: [mod_python] Get the <Directory> config from handler
Message-ID: <28f0f01f0710031009m35a0bfe6yafd1f93ea4c3c493@mail.gmail.com>

I wan't to make a python auth handler, but that can only be used in
apache <Directory> directives.

Also I'd like to check from the handler what is the directory it's set
up for... How do I do it?
From mike.robokoff at apioutsourcing.com  Wed Oct  3 15:27:46 2007
From: mike.robokoff at apioutsourcing.com (Michael Robokoff)
Date: Wed Oct  3 15:28:04 2007
Subject: [mod_python] Segmentation fault (11)
Message-ID: <003a01c805f3$7a4df3e0$d501020a@api104b4843840>

I was having trouble integrating mod_python-3.3.1 with apache 2.2.6 Both
were compiled from source. 

I would get the following anytime I tried to access any web page.

 

[notice] child pid 8625 exit signal Segmentation fault (11), possible
coredump in /usr/local/apache2

 

I wound up going back to mod_python-3.2.10 and all seems to work now.

 

Anyone else seeing this kind of problem?

 

 

 

Michael Robokoff

Senior Systems Administrator

API Outsourcing

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071003/882229bf/attachment.html
From jpclaude66 at mac.com  Wed Oct  3 18:23:06 2007
From: jpclaude66 at mac.com (Juan Pablo Claude)
Date: Wed Oct  3 18:23:09 2007
Subject: [mod_python] Building mod_python on Mac OS X Panther
Message-ID: <91F686C6-0AFC-49B0-B65B-7710679D4E8C@mac.com>

Hello all:

	I am trying to build mod_python 3.3.1 on a G4 Mac running OS X  
10.3.9 (Panther) server. In can run ./configure just fine, but when I  
try to run make, the building fails because it is trying to compile  
for ppc and i386 architectures. Panther and Xcode 1.5 know nothing of  
intel Macs. Also it is trying to use the 10.4.u SDK, which is not in  
my version of Xcode.

	I have been unable to find information about configuration options  
or compiler flags. Can someone help me out?

Thanks

Juan-Pablo
From graham.dumpleton at gmail.com  Wed Oct  3 18:58:19 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct  3 18:58:31 2007
Subject: [mod_python] Get the <Directory> config from handler
In-Reply-To: <28f0f01f0710031009m35a0bfe6yafd1f93ea4c3c493@mail.gmail.com>
References: <28f0f01f0710031009m35a0bfe6yafd1f93ea4c3c493@mail.gmail.com>
Message-ID: <88e286470710031558t5cfd56c6s9ac96a7b9212574c@mail.gmail.com>

On 04/10/2007, Damjan Georgievski <gdamjan@gmail.com> wrote:
> I wan't to make a python auth handler, but that can only be used in
> apache <Directory> directives.
>
> Also I'd like to check from the handler what is the directory it's set
> up for... How do I do it?

If you are using mod_python 3.3.1 then you can access:

  req.hlist.directory

if it is not None, then used in Directory context. The value should be
the actual directory the handler directive occurred in.

Do note though that if handlers are registered dynamically, then
strictly speaking if req.hlist.directory is None then while
req.hlist.parent is not None, you should keep traversing back through
parent handler list record to see if req.hlist.directory is not None
is some parent context from which dynamic handler was registered.

Graham
From graham.dumpleton at gmail.com  Wed Oct  3 19:04:25 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct  3 19:04:45 2007
Subject: [mod_python] Segmentation fault (11)
In-Reply-To: <003a01c805f3$7a4df3e0$d501020a@api104b4843840>
References: <003a01c805f3$7a4df3e0$d501020a@api104b4843840>
Message-ID: <88e286470710031604g66fba22kf585c6518225bfce@mail.gmail.com>

Segmentation faults like this can be caused by a number of issues.

1. Linking in of multiple versions of the same shared library which
are incompatible.
2. Linking in of a shared library that conflicts with embedded expat
or SSL support code in Apache.
3. Third party Python extension modules that aren't designed to work
in sub interpreters, for example, subversion bindings.
4. Broken Python installations on Debian systems whereby they screwed
up md5 module causing conflicts with md5 code in PHP.

You might have a look through:

  http://code.google.com/p/modwsgi/wiki/ApplicationIssues

Although this is for mod_wsgi, a lot of those issues apply to mod_wsgi as well.

Graham

On 04/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
>
>
>
>
> I was having trouble integrating mod_python-3.3.1 with apache 2.2.6 Both
> were compiled from source.
>
> I would get the following anytime I tried to access any web page.
>
>
>
> [notice] child pid 8625 exit signal Segmentation fault (11), possible
> coredump in /usr/local/apache2
>
>
>
> I wound up going back to mod_python-3.2.10 and all seems to work now.
>
>
>
> Anyone else seeing this kind of problem?
>
>
>
>
>
>
>
> Michael Robokoff
>
> Senior Systems Administrator
>
> API Outsourcing
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From graham.dumpleton at gmail.com  Wed Oct  3 19:08:22 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct  3 19:08:33 2007
Subject: [mod_python] Building mod_python on Mac OS X Panther
In-Reply-To: <91F686C6-0AFC-49B0-B65B-7710679D4E8C@mac.com>
References: <91F686C6-0AFC-49B0-B65B-7710679D4E8C@mac.com>
Message-ID: <88e286470710031608q198e2c4as98f2129a20f5029c@mail.gmail.com>

You will probably have to find the file lib/pythonX.Y/config/Makefile
(replace X.Y with your actual Python version) in where your Python is
installed and edit the definitions in there to remove the i386 flag.
Fix up any other definitions in there as well at the same time if it
is pointing at wrong locations.

Graham

On 04/10/2007, Juan Pablo Claude <jpclaude66@mac.com> wrote:
> Hello all:
>
>         I am trying to build mod_python 3.3.1 on a G4 Mac running OS X
> 10.3.9 (Panther) server. In can run ./configure just fine, but when I
> try to run make, the building fails because it is trying to compile
> for ppc and i386 architectures. Panther and Xcode 1.5 know nothing of
> intel Macs. Also it is trying to use the 10.4.u SDK, which is not in
> my version of Xcode.
>
>         I have been unable to find information about configuration options
> or compiler flags. Can someone help me out?
>
> Thanks
>
> Juan-Pablo
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Thu Oct  4 08:05:28 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Oct  4 08:06:40 2007
Subject: [mod_python] Segmentation fault (11)
In-Reply-To: <001101c80679$9b5e09e0$d501020a@api104b4843840>
References: <003a01c805f3$7a4df3e0$d501020a@api104b4843840>
	<88e286470710031604g66fba22kf585c6518225bfce@mail.gmail.com>
	<001101c80679$9b5e09e0$d501020a@api104b4843840>
Message-ID: <88e286470710040505w6e579654pb87a4e302910c5d2@mail.gmail.com>

On 04/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> Thank you for the response, I appreciate your help.
>
>
> Segmentation faults like this can be caused by a number of issues.
>
> 1. Linking in of multiple versions of the same shared library which
> are incompatible.
>
>         How do I find out about this?

The document I referenced mentions a few of the main culprits.

> 2. Linking in of a shared library that conflicts with embedded expat
> or SSL support code in Apache.
>
>         I did verify the expat libraries are the same. I don't have any
>         problems with ssl. It is only when mod_python is loaded that the
>         problem occurs.
>
> 3. Third party Python extension modules that aren't designed to work
> in sub interpreters, for example, subversion bindings.
>
>         I didn't install any of these.

There are others besides subversion. What Python web application are
you trying to run which is causing it to crash? Does a simple hello
world example program work.

> 4. Broken Python installations on Debian systems whereby they screwed
> up md5 module causing conflicts with md5 code in PHP.
>
>         I am running on Solaris 10, and built Python my self with out
>         any issues.
>
> You might have a look through:
>
>   http://code.google.com/p/modwsgi/wiki/ApplicationIssues
>
> Although this is for mod_wsgi, a lot of those issues apply to mod_wsgi as
> well.
>
>         Thanks again, I will check it out.

If nothing shows up as being obvious, you will need to determine where
the crash is occurring. For details on debugging crashes in Apache
using gdb see:

  http://code.google.com/p/modwsgi/wiki/DebuggingTechniques

BTW, please use reply-all and keep follow ups on mailing list.

Graham

> --Mike
>
> Graham
>
> On 04/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> >
> >
> >
> >
> > I was having trouble integrating mod_python-3.3.1 with apache 2.2.6 Both
> > were compiled from source.
> >
> > I would get the following anytime I tried to access any web page.
> >
> >
> >
> > [notice] child pid 8625 exit signal Segmentation fault (11), possible
> > coredump in /usr/local/apache2
> >
> >
> >
> > I wound up going back to mod_python-3.2.10 and all seems to work now.
> >
> >
> >
> > Anyone else seeing this kind of problem?
> >
> >
> >
> >
> >
> >
> >
> > Michael Robokoff
> >
> > Senior Systems Administrator
> >
> > API Outsourcing
> >
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
>
>
From mike.robokoff at apioutsourcing.com  Thu Oct  4 08:28:07 2007
From: mike.robokoff at apioutsourcing.com (Michael Robokoff)
Date: Thu Oct  4 08:28:27 2007
Subject: [mod_python] Segmentation fault (11)
In-Reply-To: <88e286470710040505w6e579654pb87a4e302910c5d2@mail.gmail.com>
References: <003a01c805f3$7a4df3e0$d501020a@api104b4843840>
	<88e286470710031604g66fba22kf585c6518225bfce@mail.gmail.com>
	<001101c80679$9b5e09e0$d501020a@api104b4843840>
	<88e286470710040505w6e579654pb87a4e302910c5d2@mail.gmail.com>
Message-ID: <001701c80682$04ca2190$d501020a@api104b4843840>

The document I referenced mentions a few of the main culprits.
http://code.google.com/p/modwsgi/wiki/ApplicationIssues

	Ok, Still have to get to that.


There are others besides subversion. What Python web application are
you trying to run which is causing it to crash? Does a simple hello
world example program work.

	I can't even load a generic non-python page when that module is
	loaded. When I try and access any webpage I get the seg fault.
	If the module is loaded I cannot access the default apache web
	page. If the module is not loaded, then I can access the default
	apache web page.

If nothing shows up as being obvious, you will need to determine where
the crash is occurring. For details on debugging crashes in Apache
using gdb see:

  http://code.google.com/p/modwsgi/wiki/DebuggingTechniques

	Thanks, I may need to do that. I've never done it before but I 
guess there is always a first time. Also its something good to know.

BTW, please use reply-all and keep follow ups on mailing list.

Sorry, I will try and remember that.


--Mike
 

-----Original Message-----
From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com] 
Sent: Thursday, October 04, 2007 7:05 AM
To: Michael Robokoff
Cc: mod_python
Subject: Re: [mod_python] Segmentation fault (11)

On 04/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> Thank you for the response, I appreciate your help.
>
>
> Segmentation faults like this can be caused by a number of issues.
>
> 1. Linking in of multiple versions of the same shared library which
> are incompatible.
>
>         How do I find out about this?

The document I referenced mentions a few of the main culprits.

> 2. Linking in of a shared library that conflicts with embedded expat
> or SSL support code in Apache.
>
>         I did verify the expat libraries are the same. I don't have any
>         problems with ssl. It is only when mod_python is loaded that the
>         problem occurs.
>
> 3. Third party Python extension modules that aren't designed to work
> in sub interpreters, for example, subversion bindings.
>
>         I didn't install any of these.

There are others besides subversion. What Python web application are
you trying to run which is causing it to crash? Does a simple hello
world example program work.

> 4. Broken Python installations on Debian systems whereby they screwed
> up md5 module causing conflicts with md5 code in PHP.
>
>         I am running on Solaris 10, and built Python my self with out
>         any issues.
>
> You might have a look through:
>
>   http://code.google.com/p/modwsgi/wiki/ApplicationIssues
>
> Although this is for mod_wsgi, a lot of those issues apply to mod_wsgi as
> well.
>
>         Thanks again, I will check it out.

If nothing shows up as being obvious, you will need to determine where
the crash is occurring. For details on debugging crashes in Apache
using gdb see:

  http://code.google.com/p/modwsgi/wiki/DebuggingTechniques

BTW, please use reply-all and keep follow ups on mailing list.

Graham

> --Mike
>
> Graham
>
> On 04/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> >
> >
> >
> >
> > I was having trouble integrating mod_python-3.3.1 with apache 2.2.6 Both
> > were compiled from source.
> >
> > I would get the following anytime I tried to access any web page.
> >
> >
> >
> > [notice] child pid 8625 exit signal Segmentation fault (11), possible
> > coredump in /usr/local/apache2
> >
> >
> >
> > I wound up going back to mod_python-3.2.10 and all seems to work now.
> >
> >
> >
> > Anyone else seeing this kind of problem?
> >
> >
> >
> >
> >
> >
> >
> > Michael Robokoff
> >
> > Senior Systems Administrator
> >
> > API Outsourcing
> >
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
>
>


From scarfboy at gmail.com  Thu Oct  4 10:54:14 2007
From: scarfboy at gmail.com (Bart)
Date: Thu Oct  4 10:54:27 2007
Subject: [mod_python] Vampire f_globals error
Message-ID: <b71082d80710040754q26bd7fbeneb220941182f193a@mail.gmail.com>

Since a few days ago (probably some specific change, but I can't guess
which one) I have sporadically gotten errors like:

File "/usr/lib/python2.4/site-packages/vampire/cache.py", line 538, in
find_module
    globals = parent.f_globals
AttributeError: 'NoneType' object has no attribute 'f_globals'

Does anyone know what the error means, or what I can do about it?

It seems to be related to reloading. (We're still on 3.1, and I can't
upgrade just yet (production environment, so I have to set up a
separate machine to figure out what that upgrade will break and how to
fix it)


Thanks,
--Bart
From graham.dumpleton at gmail.com  Thu Oct  4 18:28:13 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Oct  4 18:28:28 2007
Subject: [mod_python] Vampire f_globals error
In-Reply-To: <b71082d80710040754q26bd7fbeneb220941182f193a@mail.gmail.com>
References: <b71082d80710040754q26bd7fbeneb220941182f193a@mail.gmail.com>
Message-ID: <88e286470710041528u2d74a5ddp30361374a72e687e@mail.gmail.com>

What is the full stack trace so can see the calling context?

Graham

On 05/10/2007, Bart <scarfboy@gmail.com> wrote:
> Since a few days ago (probably some specific change, but I can't guess
> which one) I have sporadically gotten errors like:
>
> File "/usr/lib/python2.4/site-packages/vampire/cache.py", line 538, in
> find_module
>     globals = parent.f_globals
> AttributeError: 'NoneType' object has no attribute 'f_globals'
>
> Does anyone know what the error means, or what I can do about it?
>
> It seems to be related to reloading. (We're still on 3.1, and I can't
> upgrade just yet (production environment, so I have to set up a
> separate machine to figure out what that upgrade will break and how to
> fix it)
>
>
> Thanks,
> --Bart
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From oag at optusnet.com.au  Thu Oct  4 20:33:30 2007
From: oag at optusnet.com.au (Oliver Goodman)
Date: Thu Oct  4 20:33:50 2007
Subject: [mod_python] [SPAM] Prpblem installing mod_python 3.3.1 in OSX 
Message-ID: <37CEF394-260B-4E7E-88FC-E9A1E4D5A64F@optusnet.com.au>

Porcari,

It's some time since you posted so perhaps you solved the problem  
already.

In any case I recently ran into it myself and despite finding dozens  
of reports of this problem on the internet I didn't find any  
explanation. Now that I've found the answer (for myself at least) I  
thought I'd better post it. That way if I forget what it was, and run  
into it again, at least maybe I'll find my own post :-)

The warnings are easily dealt with as another poster already noted:  
simply delete the -arch i386 flag from the configure-generated  
Makefile. It's the link errors that are the real problem. In fact  
they are not really related to mod_python. I also got them when I  
first tried to build boost_python on my Mac.

The reason I had this problem, on Mac OSX 10.3.9 (not Server version  
in my case), was because I had installed newer versions of Python  
alongside the built-in version 2.3.

Now, I don't know how to build mod_python against any of those newer  
pythons. The link error is there because they expect something to be  
in the libSystem library which isn't. I doubt there is much that can  
be done about that.

What you can do however is build mod_python against the built-in  
python. Specify

   --with-python=/System/Library/Frameworks/Python.framework/Versions/ 
2.3/bin/python2.3

when you ./configure. That unfortunately doesn't stop the compiler  
(libtool/gcc) from looking at the wrong python when it comes to link  
time. So you also need to edit src/Makefile. I added the following  
flag (just before the -framework Python flag in the LDFLAGS line):

   -Wl,-F/System/Library/Frameworks

That tells the linker to look first for the python framework in / 
System/Library/Frameworks which is where the built-in one lives.

And then of course you'll have to install everything you installed  
for Python 2.4 or 2.5 again for 2.3. Such is life.

Oliver

(Message resent because it didn't appear on the list the first time.)

From graham.dumpleton at gmail.com  Thu Oct  4 20:48:24 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Oct  4 20:48:47 2007
Subject: [mod_python] [SPAM] Prpblem installing mod_python 3.3.1 in OSX
In-Reply-To: <37CEF394-260B-4E7E-88FC-E9A1E4D5A64F@optusnet.com.au>
References: <37CEF394-260B-4E7E-88FC-E9A1E4D5A64F@optusnet.com.au>
Message-ID: <88e286470710041748h15d7c152xc9a94acdb0d47aa7@mail.gmail.com>

On 05/10/2007, Oliver Goodman <oag@optusnet.com.au> wrote:
> Porcari,
>
> It's some time since you posted so perhaps you solved the problem
> already.
>
> In any case I recently ran into it myself and despite finding dozens
> of reports of this problem on the internet I didn't find any
> explanation. Now that I've found the answer (for myself at least) I
> thought I'd better post it. That way if I forget what it was, and run
> into it again, at least maybe I'll find my own post :-)
>
> The warnings are easily dealt with as another poster already noted:
> simply delete the -arch i386 flag from the configure-generated
> Makefile. It's the link errors that are the real problem. In fact
> they are not really related to mod_python. I also got them when I
> first tried to build boost_python on my Mac.
>
> The reason I had this problem, on Mac OSX 10.3.9 (not Server version
> in my case), was because I had installed newer versions of Python
> alongside the built-in version 2.3.
>
> Now, I don't know how to build mod_python against any of those newer
> pythons. The link error is there because they expect something to be
> in the libSystem library which isn't. I doubt there is much that can
> be done about that.
>
> What you can do however is build mod_python against the built-in
> python. Specify
>
>    --with-python=/System/Library/Frameworks/Python.framework/Versions/
> 2.3/bin/python2.3

Provided that /usr/bin is in your PATH first that should not be
required. If it doesn't it suggests that your other versions of Python
have screwed with the default OS version replacing /usr/bin/python
with a link to some other version. If some other python executable in
different directory was being found first and /usr/bin/python was
okay, you could also have said:

  --with-python=/usr/bin/python

as that is a symlink to the more obscure location.

> when you ./configure. That unfortunately doesn't stop the compiler
> (libtool/gcc) from looking at the wrong python when it comes to link
> time. So you also need to edit src/Makefile. I added the following
> flag (just before the -framework Python flag in the LDFLAGS line):
>
>    -Wl,-F/System/Library/Frameworks

That again shouldn't be required unless your attempts to install other
versions of Python have screwed things up somehow, as compiler should
look there anyway.

> That tells the linker to look first for the python framework in /
> System/Library/Frameworks which is where the built-in one lives.
>
> And then of course you'll have to install everything you installed
> for Python 2.4 or 2.5 again for 2.3. Such is life.

You perhaps should have posted what all your compiler/linker errors
were at the time so we could work out what was going wrong. Anyway, no
matter now if you have got it working.

Graham
From graham.dumpleton at gmail.com  Thu Oct  4 21:35:30 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Oct  4 21:35:45 2007
Subject: [mod_python] [SPAM] Prpblem installing mod_python 3.3.1 in OSX
In-Reply-To: <D71516BF-B8B1-4193-A080-56ED12A32D74@optusnet.com.au>
References: <37CEF394-260B-4E7E-88FC-E9A1E4D5A64F@optusnet.com.au>
	<88e286470710041748h15d7c152xc9a94acdb0d47aa7@mail.gmail.com>
	<D71516BF-B8B1-4193-A080-56ED12A32D74@optusnet.com.au>
Message-ID: <88e286470710041835l2de8b558oaceb8658473aa43c@mail.gmail.com>

On 05/10/2007, Oliver Goodman <oag@optusnet.com.au> wrote:
> Graham,
>
> I did what probably lots of people have done and downloaded Python
> 2.4 and later Python 2.5 for OS X Panther. It works fine. One doesn't
> discover any issues until trying to build something like mod_python
> against the new python.
>
> > Provided that /usr/bin is in your PATH first that should not be
> > required. If it doesn't it suggests that your other versions of Python
> > have screwed with the default OS version replacing /usr/bin/python
> > with a link to some other version.
>
> Obviously my path is set to pick up one of the late model pythons
> first otherwise what would be the point of installing them? I have
> not screwed anything up, I have merely installed a python which
> happens not to be linkable against the built-in system libraries.
> Unexpected, but hardly terminal.

I'm not suggesting you screwed things up, but that the Python
installers you used did. This was a big problem with installers for
older versions of Python on Panther and from memory there were often
additional packages of scripts provided by people to fix things up so
that the newer version would safely coexist with the default OS
version.

> > You perhaps should have posted what all your compiler/linker errors
> > were at the time so we could work out what was going wrong. Anyway, no
> > matter now if you have got it working.
>
> Why should I post what my link errors were? I googled and found about
> a dozen reports in various lists of this issue (which is not with
> mod_python per-se but with incompatibility between the available
> pythons and the libraries on Panther) with exactly the same link
> errors as mine, and nowhere was I able to find any response saying
> what to do about it.
>
> I posted merely to be a good citizen and help others out in case they
> too encounter this confusing problem. It may not matter to you or me
> now that I have got it working but I should think a few people out
> there might actually be grateful for the time I took to post about this.

The suggestion about posting the errors is because there are people
here who have a reasonable amount of experience with MacOS X and in
particular getting more complicated Python packages like mod_python to
work on it. We could thus have helped you understand things quicker
than otherwise might have been the case by you having to search
through Google to find an answer. We could also perhaps have pointed
you to some existing documentation of MacOSX issues for similar
packages to mod_python. In other words we could have saved you wasting
your own time if you had brought all the issues to us initially. That
is all I am saying.

Graham

> Oliver
>
>
> On 05/10/2007, at 10:48 AM, Graham Dumpleton wrote:
>
> > On 05/10/2007, Oliver Goodman <oag@optusnet.com.au> wrote:
> >> Porcari,
> >>
> >> It's some time since you posted so perhaps you solved the problem
> >> already.
> >>
> >> In any case I recently ran into it myself and despite finding dozens
> >> of reports of this problem on the internet I didn't find any
> >> explanation. Now that I've found the answer (for myself at least) I
> >> thought I'd better post it. That way if I forget what it was, and run
> >> into it again, at least maybe I'll find my own post :-)
> >>
> >> The warnings are easily dealt with as another poster already noted:
> >> simply delete the -arch i386 flag from the configure-generated
> >> Makefile. It's the link errors that are the real problem. In fact
> >> they are not really related to mod_python. I also got them when I
> >> first tried to build boost_python on my Mac.
> >>
> >> The reason I had this problem, on Mac OSX 10.3.9 (not Server version
> >> in my case), was because I had installed newer versions of Python
> >> alongside the built-in version 2.3.
> >>
> >> Now, I don't know how to build mod_python against any of those newer
> >> pythons. The link error is there because they expect something to be
> >> in the libSystem library which isn't. I doubt there is much that can
> >> be done about that.
> >>
> >> What you can do however is build mod_python against the built-in
> >> python. Specify
> >>
> >>    --with-python=/System/Library/Frameworks/Python.framework/
> >> Versions/
> >> 2.3/bin/python2.3
> >
> > Provided that /usr/bin is in your PATH first that should not be
> > required. If it doesn't it suggests that your other versions of Python
> > have screwed with the default OS version replacing /usr/bin/python
> > with a link to some other version. If some other python executable in
> > different directory was being found first and /usr/bin/python was
> > okay, you could also have said:
> >
> >   --with-python=/usr/bin/python
> >
> > as that is a symlink to the more obscure location.
> >
> >> when you ./configure. That unfortunately doesn't stop the compiler
> >> (libtool/gcc) from looking at the wrong python when it comes to link
> >> time. So you also need to edit src/Makefile. I added the following
> >> flag (just before the -framework Python flag in the LDFLAGS line):
> >>
> >>    -Wl,-F/System/Library/Frameworks
> >
> > That again shouldn't be required unless your attempts to install other
> > versions of Python have screwed things up somehow, as compiler should
> > look there anyway.
> >
> >> That tells the linker to look first for the python framework in /
> >> System/Library/Frameworks which is where the built-in one lives.
> >>
> >> And then of course you'll have to install everything you installed
> >> for Python 2.4 or 2.5 again for 2.3. Such is life.
> >
> > You perhaps should have posted what all your compiler/linker errors
> > were at the time so we could work out what was going wrong. Anyway, no
> > matter now if you have got it working.
> >
> > Graham
>
>
From martijn at xs4us.nu  Fri Oct  5 07:14:38 2007
From: martijn at xs4us.nu (Martijn Moeling)
Date: Fri Oct  5 07:15:16 2007
Subject: [mod_python] mod_python or apache scalability?
In-Reply-To: <88e286470710011916t30a35308sb1e7936c0df9f0cc@mail.gmail.com>
References: <022001c8040b$31c20790$954616b0$@com>
	<88e286470710011846h4e5af467h3074f4b02b703d05@mail.gmail.com>
	<014e01c80498$fa327510$ee975f30$@com>
	<88e286470710011916t30a35308sb1e7936c0df9f0cc@mail.gmail.com>
Message-ID: <6514BB79-1D10-42BA-80A6-A91F205FF6AC@xs4us.nu>

I have seen similair problems, Are you using MysqlDb?

Kind regards,

Martijn

On Oct 2, 2007, at 4:16 AM, Graham Dumpleton wrote:

> On 02/10/2007, Alec Matusis <matusis@matusis.com> wrote:
>>> FWIW, I personally would try and move from prefork to worker MPM as
>>> the number of Apache child processes you are running with is to my
>>> mind excessive.
>>
>> I will certainly try that, but not till next week, since it involves
>> recompiling apache.
>> I will upgrade to apache 2.2 and mod_python 3.3.1 at the same  
>> time- I am not
>> sure if they have any performance improvements over 2.0/mod_python  
>> 3.1.4
>> combination.
>
> Version 3.1.4 of mod_python has various bugs in it which have been
> fixed in 3.3.1, so upgrading would be a good idea anyway. Just make
> sure you test your code on 3.3.1 before hand and specifically take not
> of any issues with finding Python modules as module importer has
> changed in a few subtle ways. See description of
> apache.import_module() in:
>
>   http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>
> Also, how your configure Apache 2.2 for authentication is a bit
> different if you are using features such as Basic auth, so watch out
> for that as well as that trips up some people, especially if they are
> running their own custom mod_python authenhandler.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From sampsa.riikonen at iki.fi  Fri Oct  5 20:27:13 2007
From: sampsa.riikonen at iki.fi (Sampsa Riikonen)
Date: Fri Oct  5 20:27:27 2007
Subject: [mod_python] terminating html code by psp?
Message-ID: <8bc4d0610710051727s45eee2ddn358e705967b749a2@mail.gmail.com>

Dear List,

Is there any way to end an html page using psp scripting
(i.e. some sort of "break" tag that would prevent the output
of the html code appearing in the .psp file after the tag..?)

Regards,

S.
From graham.dumpleton at gmail.com  Fri Oct  5 20:37:28 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Oct  5 20:37:41 2007
Subject: [mod_python] terminating html code by psp?
In-Reply-To: <8bc4d0610710051727s45eee2ddn358e705967b749a2@mail.gmail.com>
References: <8bc4d0610710051727s45eee2ddn358e705967b749a2@mail.gmail.com>
Message-ID: <88e286470710051737n2211526eyce873a699bcfdea6@mail.gmail.com>

I cant remember if it works or not, but try:

  raise apache.SERVER_RETURN, apache.OK

Graham

On 06/10/2007, Sampsa Riikonen <sampsa.riikonen@iki.fi> wrote:
> Dear List,
>
> Is there any way to end an html page using psp scripting
> (i.e. some sort of "break" tag that would prevent the output
> of the html code appearing in the .psp file after the tag..?)
>
> Regards,
>
> S.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From bycoffe at gmail.com  Sat Oct  6 22:23:55 2007
From: bycoffe at gmail.com (Aaron Bycoffe)
Date: Sat Oct  6 22:24:01 2007
Subject: [mod_python] mod_python still using Python 2.3 after upgrading to
	2.5
Message-ID: <be6b0d330710061923m7a1f31e7t1a14ff1249b4f7ab@mail.gmail.com>

I have upgraded from Python 2.3 to Python 2.5. After the upgrade, I
reinstalled mod_python 3.3.1. I ran the following configure command:
./configure --with-apxs=/usr/sbin/apxs --with-python=/usr/bin/python2.5

However, mod_python is still using Python 2.3. How do I get it to use
2.5 instead? (I have restarted Apache.)

This is from a mod_python.testhandler info page:

Apache version: Apache/2.0.61 (Unix) mod_ssl/2.0.61 p?"@?"??
PHP/4.4.7 mod_python/3.3.1 Python/2.3.4 mod_perl/2.0.3 Perl/v5.8.5

Python sys.version: 2.3.4 (#1, Oct 11 2006, 06:18:43)  [GCC 3.4.6
20060404 (Red Hat 3.4.6-3)]

Python sys.path:
/usr/lib/python2.3/site-packages/MySQL_python-1.2.2-py2.3-linux-i686.egg
/usr/lib/python2.3/site-packages/setuptools-0.6c6-py2.3.egg
/usr/lib/python2.3/site-packages/flup-1.0-py2.3.egg
/usr/lib/python23.zip
/usr/lib/python2.3
/usr/lib/python2.3/plat-linux2
/usr/lib/python2.3/lib-tk
/usr/lib/python2.3/lib-dynload
/usr/lib/python2.3/site-packages
/usr/lib/python2.3/site-packages/PIL


Thanks.

From graham.dumpleton at gmail.com  Sat Oct  6 22:38:17 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Oct  6 22:38:23 2007
Subject: [mod_python] mod_python still using Python 2.3 after upgrading to
	2.5
In-Reply-To: <be6b0d330710061923m7a1f31e7t1a14ff1249b4f7ab@mail.gmail.com>
References: <be6b0d330710061923m7a1f31e7t1a14ff1249b4f7ab@mail.gmail.com>
Message-ID: <88e286470710061938y6fe3855aw666ccf27cdc709c6@mail.gmail.com>

Are you 100 percent confident that your new mod_python.so copied into
the location where Apache was loading it and that it replaced the
existing version? Check the time stamps of the mod_python.so where
Apache is loading it from to see if it changed.

Is there anything in the Apache error logs about a version mismatch,
ie. compile time Python version does match runtime version of Python
library found?

Graham

On 07/10/2007, Aaron Bycoffe <bycoffe@gmail.com> wrote:
> I have upgraded from Python 2.3 to Python 2.5. After the upgrade, I
> reinstalled mod_python 3.3.1. I ran the following configure command:
> ./configure --with-apxs=/usr/sbin/apxs --with-python=/usr/bin/python2.5
>
> However, mod_python is still using Python 2.3. How do I get it to use
> 2.5 instead? (I have restarted Apache.)
>
> This is from a mod_python.testhandler info page:
>
> Apache version: Apache/2.0.61 (Unix) mod_ssl/2.0.61 p?" @?" ??
> PHP/4.4.7 mod_python/3.3.1 Python/2.3.4 mod_perl/2.0.3 Perl/v5.8.5
>
> Python sys.version: 2.3.4 (#1, Oct 11 2006, 06:18:43)  [GCC 3.4.6
> 20060404 (Red Hat 3.4.6-3)]
>
> Python sys.path:
> /usr/lib/python2.3/site-packages/MySQL_python-1.2.2-py2.3-linux-i686.egg
> /usr/lib/python2.3/site-packages/setuptools-0.6c6-py2.3.egg
> /usr/lib/python2.3/site-packages/flup-1.0-py2.3.egg
> /usr/lib/python23.zip
> /usr/lib/python2.3
> /usr/lib/python2.3/plat-linux2
> /usr/lib/python2.3/lib-tk
> /usr/lib/python2.3/lib-dynload
> /usr/lib/python2.3/site-packages
> /usr/lib/python2.3/site-packages/PIL
>
>
> Thanks.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From bycoffe at gmail.com  Sat Oct  6 22:52:40 2007
From: bycoffe at gmail.com (Aaron Bycoffe)
Date: Sat Oct  6 22:52:45 2007
Subject: [mod_python] mod_python still using Python 2.3 after upgrading to
	2.5
In-Reply-To: <88e286470710061938y6fe3855aw666ccf27cdc709c6@mail.gmail.com>
References: <be6b0d330710061923m7a1f31e7t1a14ff1249b4f7ab@mail.gmail.com>
	<88e286470710061938y6fe3855aw666ccf27cdc709c6@mail.gmail.com>
Message-ID: <be6b0d330710061952r3b7c74e6hc2bb23f53c69ceb5@mail.gmail.com>

I tried deleting mod_python.so and reinstalling mod_python. It
re-created mod_python.so in the same place (/usr/lib/apache/) when I
reinstalled mod_python using --with-python=/usr/bin/python2.5, but
mod_python.so still appears to be using Python 2.3. When I grep for
'python2.3' on mod_python.so, I get "Binary file mod_python.so
matches."

There's nothing in the Apache error logs about a version mismatch.

On 10/6/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> Are you 100 percent confident that your new mod_python.so copied into
> the location where Apache was loading it and that it replaced the
> existing version? Check the time stamps of the mod_python.so where
> Apache is loading it from to see if it changed.
>
> Is there anything in the Apache error logs about a version mismatch,
> ie. compile time Python version does match runtime version of Python
> library found?
>
> Graham
>
> On 07/10/2007, Aaron Bycoffe <bycoffe@gmail.com> wrote:
> > I have upgraded from Python 2.3 to Python 2.5. After the upgrade, I
> > reinstalled mod_python 3.3.1. I ran the following configure command:
> > ./configure --with-apxs=/usr/sbin/apxs --with-python=/usr/bin/python2.5
> >
> > However, mod_python is still using Python 2.3. How do I get it to use
> > 2.5 instead? (I have restarted Apache.)
> >
> > This is from a mod_python.testhandler info page:
> >
> > Apache version: Apache/2.0.61 (Unix) mod_ssl/2.0.61 p?" @?" ??
> > PHP/4.4.7 mod_python/3.3.1 Python/2.3.4 mod_perl/2.0.3 Perl/v5.8.5
> >
> > Python sys.version: 2.3.4 (#1, Oct 11 2006, 06:18:43)  [GCC 3.4.6
> > 20060404 (Red Hat 3.4.6-3)]
> >
> > Python sys.path:
> > /usr/lib/python2.3/site-packages/MySQL_python-1.2.2-py2.3-linux-i686.egg
> > /usr/lib/python2.3/site-packages/setuptools-0.6c6-py2.3.egg
> > /usr/lib/python2.3/site-packages/flup-1.0-py2.3.egg
> > /usr/lib/python23.zip
> > /usr/lib/python2.3
> > /usr/lib/python2.3/plat-linux2
> > /usr/lib/python2.3/lib-tk
> > /usr/lib/python2.3/lib-dynload
> > /usr/lib/python2.3/site-packages
> > /usr/lib/python2.3/site-packages/PIL
> >
> >
> > Thanks.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From graham.dumpleton at gmail.com  Sat Oct  6 23:41:15 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Oct  6 23:41:21 2007
Subject: [mod_python] mod_python still using Python 2.3 after upgrading to
	2.5
In-Reply-To: <be6b0d330710061952r3b7c74e6hc2bb23f53c69ceb5@mail.gmail.com>
References: <be6b0d330710061923m7a1f31e7t1a14ff1249b4f7ab@mail.gmail.com>
	<88e286470710061938y6fe3855aw666ccf27cdc709c6@mail.gmail.com>
	<be6b0d330710061952r3b7c74e6hc2bb23f53c69ceb5@mail.gmail.com>
Message-ID: <88e286470710062041h1627d9c3j6fc37488c0c1300b@mail.gmail.com>

If you are using RPMs for Python installation, did you ensure that you
installed the python-dev package for Python 2.5?

Also, are you doing a 'restart' or Apache, or a 'stop' and then
'start'. If you do just a 'restart' it may not unload the old
mod_python properly, you must do a 'stop' and 'start'.

Graham

On 07/10/2007, Aaron Bycoffe <bycoffe@gmail.com> wrote:
> I tried deleting mod_python.so and reinstalling mod_python. It
> re-created mod_python.so in the same place (/usr/lib/apache/) when I
> reinstalled mod_python using --with-python=/usr/bin/python2.5, but
> mod_python.so still appears to be using Python 2.3. When I grep for
> 'python2.3' on mod_python.so, I get "Binary file mod_python.so
> matches."
>
> There's nothing in the Apache error logs about a version mismatch.
>
> On 10/6/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > Are you 100 percent confident that your new mod_python.so copied into
> > the location where Apache was loading it and that it replaced the
> > existing version? Check the time stamps of the mod_python.so where
> > Apache is loading it from to see if it changed.
> >
> > Is there anything in the Apache error logs about a version mismatch,
> > ie. compile time Python version does match runtime version of Python
> > library found?
> >
> > Graham
> >
> > On 07/10/2007, Aaron Bycoffe <bycoffe@gmail.com> wrote:
> > > I have upgraded from Python 2.3 to Python 2.5. After the upgrade, I
> > > reinstalled mod_python 3.3.1. I ran the following configure command:
> > > ./configure --with-apxs=/usr/sbin/apxs --with-python=/usr/bin/python2.5
> > >
> > > However, mod_python is still using Python 2.3. How do I get it to use
> > > 2.5 instead? (I have restarted Apache.)
> > >
> > > This is from a mod_python.testhandler info page:
> > >
> > > Apache version: Apache/2.0.61 (Unix) mod_ssl/2.0.61 p?" @?" ??
> > > PHP/4.4.7 mod_python/3.3.1 Python/2.3.4 mod_perl/2.0.3 Perl/v5.8.5
> > >
> > > Python sys.version: 2.3.4 (#1, Oct 11 2006, 06:18:43)  [GCC 3.4.6
> > > 20060404 (Red Hat 3.4.6-3)]
> > >
> > > Python sys.path:
> > > /usr/lib/python2.3/site-packages/MySQL_python-1.2.2-py2.3-linux-i686.egg
> > > /usr/lib/python2.3/site-packages/setuptools-0.6c6-py2.3.egg
> > > /usr/lib/python2.3/site-packages/flup-1.0-py2.3.egg
> > > /usr/lib/python23.zip
> > > /usr/lib/python2.3
> > > /usr/lib/python2.3/plat-linux2
> > > /usr/lib/python2.3/lib-tk
> > > /usr/lib/python2.3/lib-dynload
> > > /usr/lib/python2.3/site-packages
> > > /usr/lib/python2.3/site-packages/PIL
> > >
> > >
> > > Thanks.
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
>

From bycoffe at gmail.com  Sat Oct  6 23:58:43 2007
From: bycoffe at gmail.com (Aaron Bycoffe)
Date: Sat Oct  6 23:58:49 2007
Subject: [mod_python] mod_python still using Python 2.3 after upgrading to
	2.5
In-Reply-To: <88e286470710062041h1627d9c3j6fc37488c0c1300b@mail.gmail.com>
References: <be6b0d330710061923m7a1f31e7t1a14ff1249b4f7ab@mail.gmail.com>
	<88e286470710061938y6fe3855aw666ccf27cdc709c6@mail.gmail.com>
	<be6b0d330710061952r3b7c74e6hc2bb23f53c69ceb5@mail.gmail.com>
	<88e286470710062041h1627d9c3j6fc37488c0c1300b@mail.gmail.com>
Message-ID: <be6b0d330710062058y4b5c089r59738cfe936d4b25@mail.gmail.com>

I got it working. I renamed the python2.3 directory, did a make clean
and reinstalled mod_python, and it took care of the problem.

Thanks for your suggestions.

On 10/6/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> If you are using RPMs for Python installation, did you ensure that you
> installed the python-dev package for Python 2.5?
>
> Also, are you doing a 'restart' or Apache, or a 'stop' and then
> 'start'. If you do just a 'restart' it may not unload the old
> mod_python properly, you must do a 'stop' and 'start'.
>
> Graham
>
> On 07/10/2007, Aaron Bycoffe <bycoffe@gmail.com> wrote:
> > I tried deleting mod_python.so and reinstalling mod_python. It
> > re-created mod_python.so in the same place (/usr/lib/apache/) when I
> > reinstalled mod_python using --with-python=/usr/bin/python2.5, but
> > mod_python.so still appears to be using Python 2.3. When I grep for
> > 'python2.3' on mod_python.so, I get "Binary file mod_python.so
> > matches."
> >
> > There's nothing in the Apache error logs about a version mismatch.
> >
> > On 10/6/07, Graham Dumpleton <graham.dumpleton@gmail.com> wrote:
> > > Are you 100 percent confident that your new mod_python.so copied into
> > > the location where Apache was loading it and that it replaced the
> > > existing version? Check the time stamps of the mod_python.so where
> > > Apache is loading it from to see if it changed.
> > >
> > > Is there anything in the Apache error logs about a version mismatch,
> > > ie. compile time Python version does match runtime version of Python
> > > library found?
> > >
> > > Graham
> > >
> > > On 07/10/2007, Aaron Bycoffe <bycoffe@gmail.com> wrote:
> > > > I have upgraded from Python 2.3 to Python 2.5. After the upgrade, I
> > > > reinstalled mod_python 3.3.1. I ran the following configure command:
> > > > ./configure --with-apxs=/usr/sbin/apxs --with-python=/usr/bin/python2.5
> > > >
> > > > However, mod_python is still using Python 2.3. How do I get it to use
> > > > 2.5 instead? (I have restarted Apache.)
> > > >
> > > > This is from a mod_python.testhandler info page:
> > > >
> > > > Apache version: Apache/2.0.61 (Unix) mod_ssl/2.0.61 p?" @?" ??
> > > > PHP/4.4.7 mod_python/3.3.1 Python/2.3.4 mod_perl/2.0.3 Perl/v5.8.5
> > > >
> > > > Python sys.version: 2.3.4 (#1, Oct 11 2006, 06:18:43)  [GCC 3.4.6
> > > > 20060404 (Red Hat 3.4.6-3)]
> > > >
> > > > Python sys.path:
> > > > /usr/lib/python2.3/site-packages/MySQL_python-1.2.2-py2.3-linux-i686.egg
> > > > /usr/lib/python2.3/site-packages/setuptools-0.6c6-py2.3.egg
> > > > /usr/lib/python2.3/site-packages/flup-1.0-py2.3.egg
> > > > /usr/lib/python23.zip
> > > > /usr/lib/python2.3
> > > > /usr/lib/python2.3/plat-linux2
> > > > /usr/lib/python2.3/lib-tk
> > > > /usr/lib/python2.3/lib-dynload
> > > > /usr/lib/python2.3/site-packages
> > > > /usr/lib/python2.3/site-packages/PIL
> > > >
> > > >
> > > > Thanks.
> > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> > >
> >
>

From rodion at infobot.pl  Sun Oct  7 12:50:12 2007
From: rodion at infobot.pl (Rodion)
Date: Sun Oct  7 12:49:33 2007
Subject: [mod_python] mod_python and connection to database.
Message-ID: <47090E44.5040005@infobot.pl>

Hello.

Sorry for my poor english. Here is my mod_python code. This is a simple 
URL shorter:

from mod_python import apache, util
import psycopg2 as psycopg

def handler(req):
     req.content_type = "text/plain"
     url_id = req.args
     connection = psycopg.connect("dbname=my_db")
     cursor = connection.cursor()
     cursor.execute("""SELECT myurl FROM urls WHERE myid=%s""",(url_id))
     original_url = cursor.fetchone()[0]
     connection.close()
     util.redirect(req,original_url)
     req.status = apache.DONE
     return apache.DONE

This programme connects database everytime, but I want(need) force him 
to connect it continously

This script connects database everytime (psycopg.connect("dbname=my_db") 
, but I nedd force to stay conneceted with it continously. It is 
possible to make that in mod_python ? I have mod_python 3.2.10

Thanks in advance.
rdn




From gdamjan at gmail.com  Mon Oct  8 11:06:22 2007
From: gdamjan at gmail.com (Damjan Georgievski)
Date: Mon Oct  8 11:06:28 2007
Subject: [mod_python] Which handler? (WebDav AA system)
Message-ID: <28f0f01f0710080806i5e579e89t2ca55115b7d53e81@mail.gmail.com>

I'm trying to build a simple handler that will multi-user WebDav
storage. Of course I intend to use the DAV support in Apache, and just
want to write a simple wrapper that will allow or deny access acording
to some criteria. It seemed to me that I'd that easyest with python
and mod_python.

A bit of context.
WebDav uses several HTTP methods, but we can generally separate them
in two classes: GET&HEAD are public, every other can be considered
restricted. My idea is that a user has full rw access to his own part
of DAV storage (for ex. '$DAVROOT/username'), everything stored there
is publically readable unless stored in the special folder
'$DAVROOT/username/private'.

Now, the question is what handler to use.

I tried the accesshandler, but it seems I can't return
HTTP_UNAUTHORIZED from it (it gets converted to FOBIDDEN somewhere).

I tried authenhandler, but it needs peculiar setup in apache's
configuration, and it requires authorization no matter what.

I also tried PythonHandler (and SetHandler mod_pytohn) but the problem
is that it doesn't handle requests for methods other than the standard
GET, POST, etc. (it misses PROPFIND for ex.).

I tried inithandler too, it seemed like it doesn't execute.

So the question is, which handler I can use so that I can allow public
access in some cases, FORBID access in other casses, and ask for
authorization in third cases?
From dorneles at x3ng.com.br  Mon Oct  8 18:33:50 2007
From: dorneles at x3ng.com.br (=?UTF-8?B?RG9ybmVsZXMgVHJlbcOpYQ==?=)
Date: Mon Oct  8 18:54:59 2007
Subject: [mod_python] Running mod_python tests
Message-ID: <feeb8f$iot$1@sea.gmane.org>

Hello folks,

I'm trying to run the mod_python tests but I hit a few problems,
specifically I got one error and three failing tests.

1) My environment:

Ubuntu Gutsy
Python 2.5.1
Apache 2.2.4

2) What I did:

sudo apt-get install apache2 apache2-dev
cd /tmp
wget
http://mirrors.uol.com.br/pub/apache/httpd/modpython/mod_python-3.3.1.tgz
tar zxf mod_python-3.3.1.tgz
cd mod_python-3.3.1; ./configure; make
cd /usr/lib/python2.5/site-packages
sudo ln -s /tmp/mod_python-3.3.1/lib/python/mod_python
cd -
python test/test.py

3) The tests results:

======================================================================
FAIL: test_psphandler (__main__.PerRequestTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/test.py", line 1847, in test_psphandler
    self.fail(`rsp`)
AssertionError: '\n<pre>\nMOD_PYTHON ERROR\n\nProcessId:
21114\nInterpreter:    \'test_psphandler\'\n\nServerName:
\'test_psphandler\'\nDocumentRoot:
\'/home/dorneles/src/mod_python-3.3.1/test/htdocs\'\n\nURI:
 \'/psptest.psp\'\nLocation:       None\nDirectory:
\'/home/dorneles/src/mod_python-3.3.1/test/htdocs/\'\nFilename:
\'/home/dorneles/src/mod_python-3.3.1/test/htdocs/psptest.psp\'\nPathInfo:
      \'\'\n\nPhase:          \'PythonHandler\'\nHandler:
\'mod_python.psp\'\n\nTraceback (most recent call last):\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537,
in HandlerDispatch\n    default=default_handler, arg=req,
silent=hlist.silent)\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1202,
in _process_target\n    module = import_module(module_name,
path=path)\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/importer.py", line 304,
in import_module\n    return __import__(module_name, {}, {},
[\'*\'])\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/psp.py", line 21, in
&lt;module&gt;\n    import apache, Session, util, _psp\n\nImportError:
No module named _psp\n\n</pre>\n'

======================================================================
FAIL: test_psp_error (__main__.PerRequestTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/test.py", line 1915, in test_psp_error
    self.fail(`rsp`)
AssertionError: '\n<pre>\nMOD_PYTHON ERROR\n\nProcessId:
21114\nInterpreter:    \'test_psp_error\'\n\nServerName:
\'test_psp_error\'\nDocumentRoot:
\'/home/dorneles/src/mod_python-3.3.1/test/htdocs\'\n\nURI:
 \'/psptest_main.psp\'\nLocation:       None\nDirectory:
\'/home/dorneles/src/mod_python-3.3.1/test/htdocs/\'\nFilename:
\'/home/dorneles/src/mod_python-3.3.1/test/htdocs/psptest_main.psp\'\nPathInfo:
      \'\'\n\nPhase:          \'PythonHandler\'\nHandler:
\'mod_python.psp\'\n\nTraceback (most recent call last):\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537,
in HandlerDispatch\n    default=default_handler, arg=req,
silent=hlist.silent)\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1202,
in _process_target\n    module = import_module(module_name,
path=path)\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/importer.py", line 304,
in import_module\n    return __import__(module_name, {}, {},
[\'*\'])\n\n  File
"/usr/lib/python2.5/site-packages/mod_python/psp.py", line 21, in
&lt;module&gt;\n    import apache, Session, util, _psp\n\nImportError:
No module named _psp\n\n</pre>\n'

======================================================================
ERROR: test_apache_exists_config_define (__main__.PerInstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/test.py", line 2794, in test_apache_exists_config_define
    f = urllib.urlopen("http://127.0.0.1:%s/tests.py" % PORT)
  File "urllib.py", line 82, in urlopen
    return opener.open(url)
  File "urllib.py", line 190, in open
    return getattr(self, name)(url)
  File "urllib.py", line 325, in open_http
    h.endheaders()
  File "httplib.py", line 856, in endheaders
    self._send_output()
  File "httplib.py", line 728, in _send_output
    self.send(msg)
  File "httplib.py", line 695, in send
    self.connect()
  File "httplib.py", line 679, in connect
    raise socket.error, msg
IOError: [Errno socket error] (111, 'Connection refused')

======================================================================
FAIL: testPerRequestTests (__main__.PerInstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/test.py", line 2710, in testPerRequestTests
    self.failUnless(result.wasSuccessful())
AssertionError

4) Questions

a) Can someone confirm that some tests are really failing and/or
that the problem is with my environment?

b) Is there a way to run the tests without the need to add (or link)
the mod_python package to Python site-packages directory?

Any help is very welcome... :-)

-- 

Dorneles Trem?a
X3ng Web Technology
http://nosleepforyou.blogspot.com

From graham.dumpleton at gmail.com  Mon Oct  8 19:23:43 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct  8 19:23:49 2007
Subject: [mod_python] Running mod_python tests
In-Reply-To: <feeb8f$iot$1@sea.gmane.org>
References: <feeb8f$iot$1@sea.gmane.org>
Message-ID: <88e286470710081623l30d18a71n17b212f17a643882@mail.gmail.com>

You need to actually install mod_python properly. Symlinking the
lib/python/mod_python directory into site-packages is not enough as
the _pspmodule.so file isn't copied into the correct location until an
install is done.

Graham

On 09/10/2007, Dorneles Trem?a <dorneles@x3ng.com.br> wrote:
> Hello folks,
>
> I'm trying to run the mod_python tests but I hit a few problems,
> specifically I got one error and three failing tests.
>
> 1) My environment:
>
> Ubuntu Gutsy
> Python 2.5.1
> Apache 2.2.4
>
> 2) What I did:
>
> sudo apt-get install apache2 apache2-dev
> cd /tmp
> wget
> http://mirrors.uol.com.br/pub/apache/httpd/modpython/mod_python-3.3.1.tgz
> tar zxf mod_python-3.3.1.tgz
> cd mod_python-3.3.1; ./configure; make
> cd /usr/lib/python2.5/site-packages
> sudo ln -s /tmp/mod_python-3.3.1/lib/python/mod_python
> cd -
> python test/test.py
>
> 3) The tests results:
>
> ======================================================================
> FAIL: test_psphandler (__main__.PerRequestTestCase)
> ----------------------------------------------------------------------
> Traceback (most recent call last):
>   File "test/test.py", line 1847, in test_psphandler
>     self.fail(`rsp`)
> AssertionError: '\n<pre>\nMOD_PYTHON ERROR\n\nProcessId:
> 21114\nInterpreter:    \'test_psphandler\'\n\nServerName:
> \'test_psphandler\'\nDocumentRoot:
> \'/home/dorneles/src/mod_python-3.3.1/test/htdocs\'\n\nURI:
>  \'/psptest.psp\'\nLocation:       None\nDirectory:
> \'/home/dorneles/src/mod_python-3.3.1/test/htdocs/\'\nFilename:
> \'/home/dorneles/src/mod_python-3.3.1/test/htdocs/psptest.psp\'\nPathInfo:
>       \'\'\n\nPhase:          \'PythonHandler\'\nHandler:
> \'mod_python.psp\'\n\nTraceback (most recent call last):\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537,
> in HandlerDispatch\n    default=default_handler, arg=req,
> silent=hlist.silent)\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1202,
> in _process_target\n    module = import_module(module_name,
> path=path)\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 304,
> in import_module\n    return __import__(module_name, {}, {},
> [\'*\'])\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/psp.py", line 21, in
> &lt;module&gt;\n    import apache, Session, util, _psp\n\nImportError:
> No module named _psp\n\n</pre>\n'
>
> ======================================================================
> FAIL: test_psp_error (__main__.PerRequestTestCase)
> ----------------------------------------------------------------------
> Traceback (most recent call last):
>   File "test/test.py", line 1915, in test_psp_error
>     self.fail(`rsp`)
> AssertionError: '\n<pre>\nMOD_PYTHON ERROR\n\nProcessId:
> 21114\nInterpreter:    \'test_psp_error\'\n\nServerName:
> \'test_psp_error\'\nDocumentRoot:
> \'/home/dorneles/src/mod_python-3.3.1/test/htdocs\'\n\nURI:
>  \'/psptest_main.psp\'\nLocation:       None\nDirectory:
> \'/home/dorneles/src/mod_python-3.3.1/test/htdocs/\'\nFilename:
> \'/home/dorneles/src/mod_python-3.3.1/test/htdocs/psptest_main.psp\'\nPathInfo:
>       \'\'\n\nPhase:          \'PythonHandler\'\nHandler:
> \'mod_python.psp\'\n\nTraceback (most recent call last):\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1537,
> in HandlerDispatch\n    default=default_handler, arg=req,
> silent=hlist.silent)\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 1202,
> in _process_target\n    module = import_module(module_name,
> path=path)\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/importer.py", line 304,
> in import_module\n    return __import__(module_name, {}, {},
> [\'*\'])\n\n  File
> "/usr/lib/python2.5/site-packages/mod_python/psp.py", line 21, in
> &lt;module&gt;\n    import apache, Session, util, _psp\n\nImportError:
> No module named _psp\n\n</pre>\n'
>
> ======================================================================
> ERROR: test_apache_exists_config_define (__main__.PerInstanceTestCase)
> ----------------------------------------------------------------------
> Traceback (most recent call last):
>   File "test/test.py", line 2794, in test_apache_exists_config_define
>     f = urllib.urlopen("http://127.0.0.1:%s/tests.py" % PORT)
>   File "urllib.py", line 82, in urlopen
>     return opener.open(url)
>   File "urllib.py", line 190, in open
>     return getattr(self, name)(url)
>   File "urllib.py", line 325, in open_http
>     h.endheaders()
>   File "httplib.py", line 856, in endheaders
>     self._send_output()
>   File "httplib.py", line 728, in _send_output
>     self.send(msg)
>   File "httplib.py", line 695, in send
>     self.connect()
>   File "httplib.py", line 679, in connect
>     raise socket.error, msg
> IOError: [Errno socket error] (111, 'Connection refused')
>
> ======================================================================
> FAIL: testPerRequestTests (__main__.PerInstanceTestCase)
> ----------------------------------------------------------------------
> Traceback (most recent call last):
>   File "test/test.py", line 2710, in testPerRequestTests
>     self.failUnless(result.wasSuccessful())
> AssertionError
>
> 4) Questions
>
> a) Can someone confirm that some tests are really failing and/or
> that the problem is with my environment?
>
> b) Is there a way to run the tests without the need to add (or link)
> the mod_python package to Python site-packages directory?
>
> Any help is very welcome... :-)
>
> --
>
> Dorneles Trem?a
> X3ng Web Technology
> http://nosleepforyou.blogspot.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dorneles at x3ng.com.br  Mon Oct  8 19:53:39 2007
From: dorneles at x3ng.com.br (=?ISO-8859-1?Q?Dorneles_Trem=E9a?=)
Date: Mon Oct  8 19:54:12 2007
Subject: [mod_python] Re: Running mod_python tests
In-Reply-To: <88e286470710081623l30d18a71n17b212f17a643882@mail.gmail.com>
References: <feeb8f$iot$1@sea.gmane.org>
	<88e286470710081623l30d18a71n17b212f17a643882@mail.gmail.com>
Message-ID: <feefu9$v6b$1@sea.gmane.org>

Hello,

> You need to actually install mod_python properly. Symlinking the
> lib/python/mod_python directory into site-packages is not enough as
> the _pspmodule.so file isn't copied into the correct location until an
> install is done.

thanks Graham, that indeed seems to have solved the errors/failures.

Now, I've found a new set of problems:

a) sometimes after running the tests, there are still one or two
Apache processes alive. I kill them with 'killall apache2'.

b) If I run the tests 3 or 4 times, at least one time I got an
error like:

======================================================================
ERROR: test_apache_exists_config_define (__main__.PerInstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/test.py", line 2794, in test_apache_exists_config_define
    f = urllib.urlopen("http://127.0.0.1:%s/tests.py" % PORT)
  File "urllib.py", line 82, in urlopen
    return opener.open(url)
  File "urllib.py", line 190, in open
    return getattr(self, name)(url)
  File "urllib.py", line 325, in open_http
    h.endheaders()
  File "httplib.py", line 856, in endheaders
    self._send_output()
  File "httplib.py", line 728, in _send_output
    self.send(msg)
  File "httplib.py", line 695, in send
    self.connect()
  File "httplib.py", line 679, in connect
    raise socket.error, msg
IOError: [Errno socket error] (111, 'Connection refused')
======================================================================

It's interesting because only that particular tests is failing.

I think it's related to the time that Apache takes to start/stop,
but I'm not really sure...

Are those issues important enough to care about them?

-- 

Dorneles Trem?a
X3ng Web Technology
http://nosleepforyou.blogspot.com

From graham.dumpleton at gmail.com  Mon Oct  8 20:51:44 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct  8 20:51:49 2007
Subject: [mod_python] Re: Running mod_python tests
In-Reply-To: <feefu9$v6b$1@sea.gmane.org>
References: <feeb8f$iot$1@sea.gmane.org>
	<88e286470710081623l30d18a71n17b212f17a643882@mail.gmail.com>
	<feefu9$v6b$1@sea.gmane.org>
Message-ID: <88e286470710081751r513ed6a9x71a2de41f310a42b@mail.gmail.com>

>From memory, there are log files placed in a subdirectory of the
'test' directory where you run the tests from. Can you see any
evidence of Apache having a 'Segmentation fault', 'SIGSEGV' or other
form of core dump in the log files. If something is crashing on
shutdown, it can sometimes result in processes hanging around.

Graham

On 09/10/2007, Dorneles Trem?a <dorneles@x3ng.com.br> wrote:
> Hello,
>
> > You need to actually install mod_python properly. Symlinking the
> > lib/python/mod_python directory into site-packages is not enough as
> > the _pspmodule.so file isn't copied into the correct location until an
> > install is done.
>
> thanks Graham, that indeed seems to have solved the errors/failures.
>
> Now, I've found a new set of problems:
>
> a) sometimes after running the tests, there are still one or two
> Apache processes alive. I kill them with 'killall apache2'.
>
> b) If I run the tests 3 or 4 times, at least one time I got an
> error like:
>
> ======================================================================
> ERROR: test_apache_exists_config_define (__main__.PerInstanceTestCase)
> ----------------------------------------------------------------------
> Traceback (most recent call last):
>   File "test/test.py", line 2794, in test_apache_exists_config_define
>     f = urllib.urlopen("http://127.0.0.1:%s/tests.py" % PORT)
>   File "urllib.py", line 82, in urlopen
>     return opener.open(url)
>   File "urllib.py", line 190, in open
>     return getattr(self, name)(url)
>   File "urllib.py", line 325, in open_http
>     h.endheaders()
>   File "httplib.py", line 856, in endheaders
>     self._send_output()
>   File "httplib.py", line 728, in _send_output
>     self.send(msg)
>   File "httplib.py", line 695, in send
>     self.connect()
>   File "httplib.py", line 679, in connect
>     raise socket.error, msg
> IOError: [Errno socket error] (111, 'Connection refused')
> ======================================================================
>
> It's interesting because only that particular tests is failing.
>
> I think it's related to the time that Apache takes to start/stop,
> but I'm not really sure...
>
> Are those issues important enough to care about them?
>
> --
>
> Dorneles Trem?a
> X3ng Web Technology
> http://nosleepforyou.blogspot.com
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dorneles at x3ng.com.br  Mon Oct  8 22:58:10 2007
From: dorneles at x3ng.com.br (=?ISO-8859-1?Q?Dorneles_Trem=E9a?=)
Date: Mon Oct  8 23:10:58 2007
Subject: [mod_python] Re: Running mod_python tests
In-Reply-To: <88e286470710081751r513ed6a9x71a2de41f310a42b@mail.gmail.com>
References: <feeb8f$iot$1@sea.gmane.org>	<88e286470710081623l30d18a71n17b212f17a643882@mail.gmail.com>	<feefu9$v6b$1@sea.gmane.org>
	<88e286470710081751r513ed6a9x71a2de41f310a42b@mail.gmail.com>
Message-ID: <feeqo5$p32$1@sea.gmane.org>

Graham,

> From memory, there are log files placed in a subdirectory of the
> 'test' directory where you run the tests from. Can you see any
> evidence of Apache having a 'Segmentation fault', 'SIGSEGV' or other
> form of core dump in the log files. If something is crashing on
> shutdown, it can sometimes result in processes hanging around.

no evidences of SIGSEGVs. Looks like the processes were still
running because when the 'stop' action was fired, Apache server
hasn't still started, or something like that...

But I think I identified the problem: the failures only happens
if I run the tests from outside the 'test' directory, or IOW:

  - 'python test/test.py' fails sometimes
  - 'cd test; python test.py' always works like a charm

My conclusion: it seems that the directory switching is causing
some kind of delay/penality somewhere. If I apply the small patch
bellow then the tests can be run from anywhere, either from the
'test' directory or outside it without any failure... :-)

--- test.py.orig        2007-10-08 22:06:14.000000000 -0300
+++ test.py     2007-10-08 23:45:07.000000000 -0300
@@ -357,7 +357,7 @@
         cmd = '%s %s -k start -f %s' % (httpd, extra, config)
         print "    ", cmd
         os.system(cmd)
-        time.sleep(1)
+        time.sleep(1.5)
         self.httpd_running = 1

     def stopHttpd(self):
@@ -368,7 +368,7 @@
         cmd = '%s -k stop -f %s' % (httpd, config)
         print "    ", cmd
         os.system(cmd)
-        time.sleep(1)
+        time.sleep(1.5)

         # Wait for apache to stop by checking for the existence of
pid the
         # file. If pid file still exists after 20 seconds raise an error.

Thanks once more.

-- 

Dorneles Trem?a
X3ng Web Technology
http://nosleepforyou.blogspot.com

From graham.dumpleton at gmail.com  Tue Oct  9 05:40:50 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct  9 05:41:01 2007
Subject: [mod_python] Which handler? (WebDav AA system)
In-Reply-To: <28f0f01f0710080806i5e579e89t2ca55115b7d53e81@mail.gmail.com>
References: <28f0f01f0710080806i5e579e89t2ca55115b7d53e81@mail.gmail.com>
Message-ID: <88e286470710090240l77a4121ag4d71b7e2b41168c7@mail.gmail.com>

On 09/10/2007, Damjan Georgievski <gdamjan@gmail.com> wrote:
> I'm trying to build a simple handler that will multi-user WebDav
> storage. Of course I intend to use the DAV support in Apache, and just
> want to write a simple wrapper that will allow or deny access acording
> to some criteria. It seemed to me that I'd that easyest with python
> and mod_python.
>
> A bit of context.
> WebDav uses several HTTP methods, but we can generally separate them
> in two classes: GET&HEAD are public, every other can be considered
> restricted. My idea is that a user has full rw access to his own part
> of DAV storage (for ex. '$DAVROOT/username'), everything stored there
> is publically readable unless stored in the special folder
> '$DAVROOT/username/private'.
>
> Now, the question is what handler to use.
>
> I tried the accesshandler, but it seems I can't return
> HTTP_UNAUTHORIZED from it (it gets converted to FOBIDDEN somewhere).
>
> I tried authenhandler, but it needs peculiar setup in apache's
> configuration, and it requires authorization no matter what.

You need to use a combination of authenhandler and authzhandler. It
isn't trivial to get right and to do it anything near properly needs
mod_python 3.3.1.

If your authenhandler determines that something is public, it can fake
that a user has logged in by setting req.user, req.ap_auth_type
appropriately and returning OK.

There are some examples that might get you started in the mailing list
archives searchable from the www.modpython.org site. Beyond that you
need to sketch out a bit better what your ideas are for doing it as
far as hooking into user databases and directive options for Require
that you might want to use. Depending on user database source, there
are possibly other modules for Apache available that could also be
used.

Graham

> I also tried PythonHandler (and SetHandler mod_pytohn) but the problem
> is that it doesn't handle requests for methods other than the standard
> GET, POST, etc. (it misses PROPFIND for ex.).
>
> I tried inithandler too, it seemed like it doesn't execute.
>
> So the question is, which handler I can use so that I can allow public
> access in some cases, FORBID access in other casses, and ask for
> authorization in third cases?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jeffmess at gmail.com  Tue Oct  9 07:39:07 2007
From: jeffmess at gmail.com (Jeff van Aswegen)
Date: Tue Oct  9 07:39:13 2007
Subject: [mod_python] Mixing content_type not displaying correct info
Message-ID: <3ad7a1e40710090439xcb4b706jac1ad14139926e17@mail.gmail.com>

Hey guys

I am trying to display 2 content types under 1 function/webpage,
'image/jpeg' and 'text/html' but this is not working out. I am trying to
display a portion of an image and underneath that image have 3 text fields
that a capturer can enter some information on the image. This is what I have
so far.

def show_image(req):
    width, height = 1000, 1000

    img = Image.open('/home/jeffmess/images/taco/F0476544.JPG')
    img = img.resize((width,height), Image.ANTIALIAS)
    box = (300,335,740,680)
    region = img.crop(box)
    img.paste(region, box)
    s = StringIO()
    region.save(s, 'jpeg')
    file.write(s.getvalue())
    file.close()
    req.content_type = 'image/jpeg'

    req.write(s.getvalue())
    img.close()

    return apache.OK

Now on the same page if I include a random text field say,

    req.content_type = "text/html"
    req.write("""<INPUT TYPE='text' NAME='field0' ID='field0'
ONKEYDOWN='return tabOnEnter (this, event);' >""")

Browsing to the page will show the text field but the image will all be
jargon. Can anyone perhaps offer some advice or point me in the right
direction? Thanks

Regards

Jeff
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071009/09bb6e74/attachment.html
From sdavis2 at mail.nih.gov  Tue Oct  9 08:05:00 2007
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Tue Oct  9 08:05:06 2007
Subject: [mod_python] Mixing content_type not displaying correct info
In-Reply-To: <3ad7a1e40710090439xcb4b706jac1ad14139926e17@mail.gmail.com>
References: <3ad7a1e40710090439xcb4b706jac1ad14139926e17@mail.gmail.com>
Message-ID: <470B6E6C.6020502@mail.nih.gov>

Jeff van Aswegen wrote:
> Hey guys
>
> I am trying to display 2 content types under 1 function/webpage, 
> 'image/jpeg' and 'text/html' but this is not working out. I am trying 
> to display a portion of an image and underneath that image have 3 text 
> fields that a capturer can enter some information on the image. This 
> is what I have so far.
>
> def show_image(req):
>     width, height = 1000, 1000
>    
>     img = Image.open('/home/jeffmess/images/taco/F0476544.JPG')
>     img = img.resize((width,height), Image.ANTIALIAS)
>     box = (300,335,740,680)
>     region = img.crop(box)
>     img.paste(region, box)
>     s = StringIO()
>     region.save(s, 'jpeg')
>     file.write(s.getvalue())
>     file.close()
>     req.content_type = 'image/jpeg'
>
>     req.write(s.getvalue())
>     img.close()
>    
>     return apache.OK
>
> Now on the same page if I include a random text field say,
>
>     req.content_type = "text/html"
>     req.write("""<INPUT TYPE='text' NAME='field0' ID='field0' 
> ONKEYDOWN='return tabOnEnter (this, event);' >""")
>
> Browsing to the page will show the text field but the image will all 
> be jargon. Can anyone perhaps offer some advice or point me in the 
> right direction? Thanks

You cannot mix content types.  What you should do is to save the image 
as a temporary file and make an IMG tag on the page that includes the 
text.  As an alternative to the temporary file, you can return the image 
from a separate function and call that function (as a URL, obviously) 
from the IMG tag.

Sean
From sdavis2 at mail.nih.gov  Tue Oct  9 08:45:53 2007
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Tue Oct  9 08:45:59 2007
Subject: [mod_python] Mixing content_type not displaying correct info
In-Reply-To: <3ad7a1e40710090508s52a80569o80daab10506ebafb@mail.gmail.com>
References: <3ad7a1e40710090439xcb4b706jac1ad14139926e17@mail.gmail.com>	
	<470B6E6C.6020502@mail.nih.gov>
	<3ad7a1e40710090508s52a80569o80daab10506ebafb@mail.gmail.com>
Message-ID: <470B7801.6030809@mail.nih.gov>

Jeff van Aswegen wrote:
> Thanks for the reply. Is there no other way around this? I would 
> prefer to not save images on the Disk (even if it is temporary)as I'm 
> dealing with millions of images.

Well, the two ways of dealing with that are:

1)  Have a cron job that cleans up the temp images that are older than 
say 5 minutes from the temp directory.
2)  As I mentioned in the first email, simply make an IMG tag that calls 
your show_image() function (after some slight modification to return 
only the image).

Hope that helps.

Sean
From mike.robokoff at apioutsourcing.com  Tue Oct  9 11:22:55 2007
From: mike.robokoff at apioutsourcing.com (Michael Robokoff)
Date: Tue Oct  9 11:23:07 2007
Subject: [mod_python] Question
Message-ID: <007e01c80a88$44679c10$8201020a@api104b4843840>

I have just compiled pyton-2.5.1, mod_python-3.3.1,
tomcat-connectors-1.2.23, MySQL-python-1.2.2, SQLAlchemy-0.3.9 and
apache-2.0.59.

 

I know all are not associated with this problem but I wanted you to be aware
of them just incase there may be a compatibility issue.

Anyway when I run with a previously good config I get the following when
trying to access our page.

 

MOD_PYTHON ERROR
 
ProcessId:      7989
Interpreter:    '10.0.0.99'
 
ServerName:     '10.0.0.99'
DocumentRoot:   '/usr/local/apache2/htdocs'
 
URI:            '/test/standard/'
Location:       '/test/standard/'
Directory:      None
Filename:       ''
PathInfo:       None
 
Phase:          'PythonAccessHandler'
Handler:        'access'
 
Traceback (most recent call last):
 
  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py", line
1537, in HandlerDispatch
    default=default_handler, arg=req, silent=hlist.silent)
 
  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py", line
1229, in _process_target
    result = _execute_target(config, req, object, arg)
 
  File "/usr/local/lib/python2.5/site-packages/mod_python/importer.py", line
1128, in _execute_target
    result = object(arg)
 
  File "/usr/local/apache2/htdocs/test/standard/access.py", line 39, in
accesshandler
    db_module.createSession(sess._sid)
 
  File "/usr/local/apache2/htdocs/test/standard/db_module.py", line 88, in
createSession
    apache.log_error("Error %d: %s" % (e.orig.args[0], e.orig.args[1]))
 
NameError: global name 'apache' is not defined
 
 
MODULE CACHE DETAILS
 
Accessed:       Tue Oct  9 10:02:57 2007
Generation:     0
 
_mp_3318e5527a8f6da0ffb4f529361e3d2e {
  FileName:     '/usr/local/apache2/htdocs/test/standard/access.py'
  Instance:     1 [IMPORT]
  Generation:   2
  Modified:     Mon Aug 20 15:11:00 2007
  Imported:     Tue Oct  9 10:02:57 2007
  Children:     '/usr/local/apache2/htdocs/test/standard/db_module.py'
}
 
_mp_8ef5cf081b949f7d69d523216e25838d {
  FileName:     '/usr/local/apache2/htdocs/test/standard/db_module.py'
  Instance:     1 [IMPORT]
  Generation:   1
  Modified:     Mon Aug 20 15:10:42 2007
  Imported:     Tue Oct  9 10:02:57 2007
}
 

If anyone could give me some idea's on where to look next it would be really
appreciated. 

I don't know python. So I may be missing something simple. 

 

Thanks for your help!

 

 

Michael Robokoff

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071009/0d63abae/attachment.html
From gdamjan at gmail.com  Tue Oct  9 13:03:29 2007
From: gdamjan at gmail.com (Damjan Georgievski)
Date: Tue Oct  9 13:03:37 2007
Subject: [mod_python] Which handler? (WebDav AA system)
In-Reply-To: <88e286470710090240l77a4121ag4d71b7e2b41168c7@mail.gmail.com>
References: <28f0f01f0710080806i5e579e89t2ca55115b7d53e81@mail.gmail.com>
	<88e286470710090240l77a4121ag4d71b7e2b41168c7@mail.gmail.com>
Message-ID: <28f0f01f0710091003x2daaf94brfd6a4e78f77873d5@mail.gmail.com>

> You need to use a combination of authenhandler and authzhandler. It
> isn't trivial to get right and to do it anything near properly needs
> mod_python 3.3.1.

Sure, I do use 3.3.1 .

> If your authenhandler determines that something is public, it can fake
> that a user has logged in by setting req.user, req.ap_auth_type
> appropriately and returning OK.

But still, the apache conf will prompt the user for a user/pass ...
I'm rethinking this part now... The public part can be in another
namespace (url space).

> There are some examples that might get you started in the mailing list
> archives searchable from the www.modpython.org site. Beyond that you
> need to sketch out a bit better what your ideas are for doing it as
> far as hooking into user databases and directive options for Require
> that you might want to use. Depending on user database source, there
> are possibly other modules for Apache available that could also be
> used.

I don't have any requirements for a database source ... I intended to
use a simple pickled dictionary to store the user/pass info - just as
a quick way of storing the info. (Wrinting the pickle wil be rare
anyway).

BTW,
any particular modules in mind that I could use??
From graham.dumpleton at gmail.com  Tue Oct  9 18:27:53 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct  9 18:27:58 2007
Subject: [mod_python] Question
In-Reply-To: <007e01c80a88$44679c10$8201020a@api104b4843840>
References: <007e01c80a88$44679c10$8201020a@api104b4843840>
Message-ID: <88e286470710091527y7b1118cboffb84d6fe52901a@mail.gmail.com>

Looks like you haven't imported the module in the first place. Use:

  from mod_python import apache

Graham

On 10/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
>
>
>
>
> I have just compiled pyton-2.5.1, mod_python-3.3.1,
> tomcat-connectors-1.2.23, MySQL-python-1.2.2, SQLAlchemy-0.3.9 and
> apache-2.0.59.
>
>
>
> I know all are not associated with this problem but I wanted you to be aware
> of them just incase there may be a compatibility issue.
>
> Anyway when I run with a previously good config I get the following when
> trying to access our page.
>
>
>   MOD_PYTHON ERROR
>
> ProcessId:      7989
> Interpreter:    '10.0.0.99'
>
> ServerName:     '10.0.0.99'
> DocumentRoot:   '/usr/local/apache2/htdocs'
>
> URI:            '/test/standard/'
> Location:       '/test/standard/'
> Directory:      None
> Filename:       ''
> PathInfo:       None
>
> Phase:          'PythonAccessHandler'
> Handler:        'access'
>
> Traceback (most recent call last):
>
>   File
> "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
> line 1537, in HandlerDispatch
>     default=default_handler, arg=req, silent=hlist.silent)
>
>   File
> "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
> line 1229, in _process_target
>     result = _execute_target(config, req, object, arg)
>
>   File
> "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
> line 1128, in _execute_target
>     result = object(arg)
>
>   File "/usr/local/apache2/htdocs/test/standard/access.py",
> line 39, in accesshandler
>     db_module.createSession(sess._sid)
>
>   File
> "/usr/local/apache2/htdocs/test/standard/db_module.py",
> line 88, in createSession
>     apache.log_error("Error %d: %s" % (e.orig.args[0], e.orig.args[1]))
>
> NameError: global name 'apache' is not defined
>
>
> MODULE CACHE DETAILS
>
> Accessed:       Tue Oct  9 10:02:57 2007
> Generation:     0
>
> _mp_3318e5527a8f6da0ffb4f529361e3d2e {
>   FileName:
> '/usr/local/apache2/htdocs/test/standard/access.py'
>   Instance:     1 [IMPORT]
>   Generation:   2
>   Modified:     Mon Aug 20 15:11:00 2007
>   Imported:     Tue Oct  9 10:02:57 2007
>   Children:
> '/usr/local/apache2/htdocs/test/standard/db_module.py'
> }
>
> _mp_8ef5cf081b949f7d69d523216e25838d {
>   FileName:
> '/usr/local/apache2/htdocs/test/standard/db_module.py'
>   Instance:     1 [IMPORT]
>   Generation:   1
>   Modified:     Mon Aug 20 15:10:42 2007
>   Imported:     Tue Oct  9 10:02:57 2007
> }
>
>
>
> If anyone could give me some idea's on where to look next it would be really
> appreciated.
>
> I don't know python. So I may be missing something simple.
>
>
>
> Thanks for your help!
>
>
>
>
>
> Michael Robokoff
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From amos at latteier.com  Tue Oct  9 18:34:54 2007
From: amos at latteier.com (Amos Latteier)
Date: Tue Oct  9 18:35:04 2007
Subject: [mod_python] Input filter content-length problem
Message-ID: <6bcfeef70710091534p501b7955xb554552959177167@mail.gmail.com>

Hi,

I'm creating an input filter to rewrite POSTed form data before
handling. It works great with one exception:

  * My filter changes the length of the request body (since it writes
more than it reads), but I cannot figure out how to change the
Content-Length header to match.

So the program that handles for form data sees the changes that my
input filter makes, but it sees the original Content-Length header,
and thus misses some of the data that my filter adds to the request
body.

I've tried changing the content length by doing:

filter.req.headers_in['Content-Length'] = str(len(my_new_request_body))

before I make any calls to filter.write(). However this doesn't affect
the Content-Length header.

I'd be grateful for any suggestions. Thanks!

-Amos
From graham.dumpleton at gmail.com  Tue Oct  9 18:35:41 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct  9 18:35:51 2007
Subject: [mod_python] Which handler? (WebDav AA system)
In-Reply-To: <28f0f01f0710091003x2daaf94brfd6a4e78f77873d5@mail.gmail.com>
References: <28f0f01f0710080806i5e579e89t2ca55115b7d53e81@mail.gmail.com>
	<88e286470710090240l77a4121ag4d71b7e2b41168c7@mail.gmail.com>
	<28f0f01f0710091003x2daaf94brfd6a4e78f77873d5@mail.gmail.com>
Message-ID: <88e286470710091535t4d146c4ao3dcfe8db564904c7@mail.gmail.com>

On 10/10/2007, Damjan Georgievski <gdamjan@gmail.com> wrote:
> > If your authenhandler determines that something is public, it can fake
> > that a user has logged in by setting req.user, req.ap_auth_type
> > appropriately and returning OK.
>
> But still, the apache conf will prompt the user for a user/pass ...
> I'm rethinking this part now... The public part can be in another
> namespace (url space).

It will not still prompt for a user/password. This would only occur if
something returned HTTP_UNAUTHORIZED. If you return OK and provided
you also set req.user to some dummy user name such as 'anonymous' to
trick Apache internals so it thinks the user has been authenticated it
can be made to work.

> > There are some examples that might get you started in the mailing list
> > archives searchable from the www.modpython.org site. Beyond that you
> > need to sketch out a bit better what your ideas are for doing it as
> > far as hooking into user databases and directive options for Require
> > that you might want to use. Depending on user database source, there
> > are possibly other modules for Apache available that could also be
> > used.
>
> I don't have any requirements for a database source ... I intended to
> use a simple pickled dictionary to store the user/pass info - just as
> a quick way of storing the info. (Wrinting the pickle wil be rare
> anyway).
>
> BTW,
> any particular modules in mind that I could use??

Even if only to model what you are trying to do, I would explore the
Limit, LimitExcept and Require directives of Apache. This would allow
you in conjunction with group AuthUserFile and AuthGroupFile to at
least work out how you might do this all in Apache for authenticated
users without having to resort to using mod_python in the first place.
It is entirely possible that this itself may be able to be harnessed
to avoid authentication for public read only access.

Sorry, don't have much time to go into this in depth right now.

Graham
From graham.dumpleton at gmail.com  Tue Oct  9 18:53:28 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct  9 18:53:35 2007
Subject: [mod_python] Input filter content-length problem
In-Reply-To: <6bcfeef70710091534p501b7955xb554552959177167@mail.gmail.com>
References: <6bcfeef70710091534p501b7955xb554552959177167@mail.gmail.com>
Message-ID: <88e286470710091553s2972c98cw6f356d2b1f504165@mail.gmail.com>

On 10/10/2007, Amos Latteier <amos@latteier.com> wrote:
> Hi,
>
> I'm creating an input filter to rewrite POSTed form data before
> handling. It works great with one exception:
>
>   * My filter changes the length of the request body (since it writes
> more than it reads), but I cannot figure out how to change the
> Content-Length header to match.
>
> So the program that handles for form data sees the changes that my
> input filter makes, but it sees the original Content-Length header,
> and thus misses some of the data that my filter adds to the request
> body.
>
> I've tried changing the content length by doing:
>
> filter.req.headers_in['Content-Length'] = str(len(my_new_request_body))
>
> before I make any calls to filter.write(). However this doesn't affect
> the Content-Length header.
>
> I'd be grateful for any suggestions. Thanks!

You can't change the content length.

First off, there are problems in mod_python that can result in loss of
input data if the request content is mutated and thus ends up being
more than originally posted. This is because mod_python wrongly pays
attention to the Content-Length header and doesn't read more than
that. Details in:

  http://issues.apache.org/jira/browse/MODPYTHON-215

I can't remember if this is the full answer, but the only way around
it is to wipe the Content-Length header entirely. This though can only
be done if you are using Apache 2.2 and is done using the mod_filter
directives described in:

  http://httpd.apache.org/docs/2.2/mod/mod_filter.html

to designate that your input filter changes the content length of the
input. By doing this, Apache will wipe the Content-Length header for
you so that applications will not get an incorrect value.

This means though that an application must be written simply to read
all available input and not expect that content length can be used.
This can cause problems though with certain applications. For example,
if using any WSGI based application you are effectively stuffed as the
WSGI protocol doesn't support the concept of mutating input filters
that change the incoming content length. Instead, WSGI applications
expect Content-Length to be defined and that will read that amount of
data and nothing more. That WSGI is deficient in this respect is known
and raised as an issue to be solved in WSGI 2.0. See:

  http://www.wsgi.org/wsgi/WSGI_2.0

As documented in the referenced issues, mod_python also has issues in
its form processing support.

Graham
From bernd.bartmann at gmail.com  Wed Oct 10 03:49:01 2007
From: bernd.bartmann at gmail.com (Bernd Bartmann)
Date: Wed Oct 10 03:49:13 2007
Subject: [mod_python] Problem getting mod_python working on Win32
Message-ID: <6c18a4f0710100049l19f4d05el850d91b36cefa52e@mail.gmail.com>

Hi,

I'm running Apache-2.0.54 and Python 2.5.1 on Win2k3 server. Now I
want to use mod_python. So I downloaded
mod_python-3.3.1.win32-py2.5-Apache2.0.exe. The installation detected
the Python and Apache installations correctly and installed the Apache
module in the correct location. After adding the LoadModule line to
httpd.conf and restarting Apache I get the following error message in
the event viewer:

The Apache service named  reported the following error:
>>> Cannot load C:/Program Files/Apache
Group/Apache2/modules/mod_python.so into server: The specified
procedure could not be found.

What's wrong here?

Thanks in advance,
Bernd.
From mike.robokoff at apioutsourcing.com  Wed Oct 10 07:19:07 2007
From: mike.robokoff at apioutsourcing.com (Michael Robokoff)
Date: Wed Oct 10 07:19:13 2007
Subject: [mod_python] Question
In-Reply-To: <88e286470710091527y7b1118cboffb84d6fe52901a@mail.gmail.com>
References: <007e01c80a88$44679c10$8201020a@api104b4843840>
	<88e286470710091527y7b1118cboffb84d6fe52901a@mail.gmail.com>
Message-ID: <003801c80b2f$5f6bfc20$9d01020a@api104b4843840>

Thank you very much for your help! it is really appreciated!

--Mike

 
-----Original Message-----
From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com] 
Sent: Tuesday, October 09, 2007 5:28 PM
To: Michael Robokoff
Cc: mod_python
Subject: Re: [mod_python] Question

Looks like you haven't imported the module in the first place. Use:

  from mod_python import apache

Graham

On 10/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
>
>
>
>
> I have just compiled pyton-2.5.1, mod_python-3.3.1,
> tomcat-connectors-1.2.23, MySQL-python-1.2.2, SQLAlchemy-0.3.9 and
> apache-2.0.59.
>
>
>
> I know all are not associated with this problem but I wanted you to be
aware
> of them just incase there may be a compatibility issue.
>
> Anyway when I run with a previously good config I get the following when
> trying to access our page.
>
>
>   MOD_PYTHON ERROR
>
> ProcessId:      7989
> Interpreter:    '10.0.0.99'
>
> ServerName:     '10.0.0.99'
> DocumentRoot:   '/usr/local/apache2/htdocs'
>
> URI:            '/test/standard/'
> Location:       '/test/standard/'
> Directory:      None
> Filename:       ''
> PathInfo:       None
>
> Phase:          'PythonAccessHandler'
> Handler:        'access'
>
> Traceback (most recent call last):
>
>   File
> "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
> line 1537, in HandlerDispatch
>     default=default_handler, arg=req, silent=hlist.silent)
>
>   File
> "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
> line 1229, in _process_target
>     result = _execute_target(config, req, object, arg)
>
>   File
> "/usr/local/lib/python2.5/site-packages/mod_python/importer.py",
> line 1128, in _execute_target
>     result = object(arg)
>
>   File "/usr/local/apache2/htdocs/test/standard/access.py",
> line 39, in accesshandler
>     db_module.createSession(sess._sid)
>
>   File
> "/usr/local/apache2/htdocs/test/standard/db_module.py",
> line 88, in createSession
>     apache.log_error("Error %d: %s" % (e.orig.args[0], e.orig.args[1]))
>
> NameError: global name 'apache' is not defined
>
>
> MODULE CACHE DETAILS
>
> Accessed:       Tue Oct  9 10:02:57 2007
> Generation:     0
>
> _mp_3318e5527a8f6da0ffb4f529361e3d2e {
>   FileName:
> '/usr/local/apache2/htdocs/test/standard/access.py'
>   Instance:     1 [IMPORT]
>   Generation:   2
>   Modified:     Mon Aug 20 15:11:00 2007
>   Imported:     Tue Oct  9 10:02:57 2007
>   Children:
> '/usr/local/apache2/htdocs/test/standard/db_module.py'
> }
>
> _mp_8ef5cf081b949f7d69d523216e25838d {
>   FileName:
> '/usr/local/apache2/htdocs/test/standard/db_module.py'
>   Instance:     1 [IMPORT]
>   Generation:   1
>   Modified:     Mon Aug 20 15:10:42 2007
>   Imported:     Tue Oct  9 10:02:57 2007
> }
>
>
>
> If anyone could give me some idea's on where to look next it would be
really
> appreciated.
>
> I don't know python. So I may be missing something simple.
>
>
>
> Thanks for your help!
>
>
>
>
>
> Michael Robokoff
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>


From slava at acdlabs.ru  Wed Oct 10 08:21:54 2007
From: slava at acdlabs.ru (Slava)
Date: Wed Oct 10 08:26:48 2007
Subject: [mod_python] How to control Python path?
Message-ID: <1867418893.20071010162154@acdlabs.ru>

Hello All,

I spent some hours but still unable to control subj
I added the below to httpd.conf

<Location "/mysite/">
  SetHandler python-program
  PythonHandler django.core.handlers.modpython
  SetEnv DJANGO_SETTINGS_MODULE settings.py
  PythonPath "[r'C:\\md\\htdocs\\django\\django\\bin\\mysite'] + sys.path"
  PythonDebug On
</Location>

But for some reason PythonPath directive is ignored by Apache.
Contents of errors log after Apache restart:


[Wed Oct 10 16:04:23 2007] [error] make_obcallback: could not import mod_python.apache.\n

[Wed Oct 10 16:04:23 2007] [error] make_obcallback: Python path being
used "['C:\\\\soft\\\\Python\\\\python25.zip', '.\\\\DLLs',
'.\\\\lib', '.\\\\lib\\\\plat win', '.\\\\lib\\\\lib-tk',
'C:\\\\soft\\\\comm\\\\Apache2_2_3\\\\bin']".

My httpd.conf file is not ignored by Apache. I tried to replace
"PythonPath" with "PythonPath777" - in this case Apache refused to
restart.

Also, I tried to carry out PythonPath directive to the outside of
<Location> tag. It won't helped.

I'm still unable to modify Python path so I'm little confused. Can you
pls help? =)

Also, is there other way to control Python path?

Thanks

-- 
Best regards,
 Slava                          mailto:slava@acdlabs.ru

From stefan at softexperience.ro  Wed Oct 10 13:15:08 2007
From: stefan at softexperience.ro (Stefan Horomnea)
Date: Wed Oct 10 13:10:01 2007
Subject: [mod_python] how to take the psp.PSP.run in a variable ?
In-Reply-To: <200710101600.l9AG0C0p014598@modpython.org>
References: <200710101600.l9AG0C0p014598@modpython.org>
Message-ID: <470D089C.2040804@softexperience.ro>

Hello,

I have this code:

    tmpl = psp.PSP(req, filename='tp/myresult.tpl.html')
    tmpl.run(vars = kwargs)

My question is, how can I store the template contents in a variable. So 
the run method instead of printing making it return ?

Cause I really need this for taking the returning string, and using it 
as a piece in a greater template. Or doing some other stuff on that string.

Thanks.
Stefan

From graham.dumpleton at gmail.com  Wed Oct 10 18:10:52 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 10 18:10:58 2007
Subject: [mod_python] Problem getting mod_python working on Win32
In-Reply-To: <6c18a4f0710100049l19f4d05el850d91b36cefa52e@mail.gmail.com>
References: <6c18a4f0710100049l19f4d05el850d91b36cefa52e@mail.gmail.com>
Message-ID: <88e286470710101510m24bee38emec09f447a0d90443@mail.gmail.com>

Try suggestions given for example same message in:

  http://www.modpython.org/pipermail/mod_python/2007-August/024176.html

You can search the mailing list archives using search box on
www.modpython.org home page.

Graham

On 10/10/2007, Bernd Bartmann <bernd.bartmann@gmail.com> wrote:
> Hi,
>
> I'm running Apache-2.0.54 and Python 2.5.1 on Win2k3 server. Now I
> want to use mod_python. So I downloaded
> mod_python-3.3.1.win32-py2.5-Apache2.0.exe. The installation detected
> the Python and Apache installations correctly and installed the Apache
> module in the correct location. After adding the LoadModule line to
> httpd.conf and restarting Apache I get the following error message in
> the event viewer:
>
> The Apache service named  reported the following error:
> >>> Cannot load C:/Program Files/Apache
> Group/Apache2/modules/mod_python.so into server: The specified
> procedure could not be found.
>
> What's wrong here?
>
> Thanks in advance,
> Bernd.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Wed Oct 10 18:15:14 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 10 18:15:19 2007
Subject: [mod_python] How to control Python path?
In-Reply-To: <1867418893.20071010162154@acdlabs.ru>
References: <1867418893.20071010162154@acdlabs.ru>
Message-ID: <88e286470710101515x3d19c72em9dc12ed9e521fff6@mail.gmail.com>

This is nothing to do with PythonPath, your mod_python installation
simply isn't working. Read same comments against message just given to
someone else for Win32 problems:

  http://www.modpython.org/pipermail/mod_python/2007-August/024176.html

In short Python can't initialise itself as it can't find its own
Python library directory or the files in it aren't readable to user
that Apache is running as.

Graham

On 10/10/2007, Slava <slava@acdlabs.ru> wrote:
> Hello All,
>
> I spent some hours but still unable to control subj
> I added the below to httpd.conf
>
> <Location "/mysite/">
>   SetHandler python-program
>   PythonHandler django.core.handlers.modpython
>   SetEnv DJANGO_SETTINGS_MODULE settings.py
>   PythonPath "[r'C:\\md\\htdocs\\django\\django\\bin\\mysite'] + sys.path"
>   PythonDebug On
> </Location>
>
> But for some reason PythonPath directive is ignored by Apache.
> Contents of errors log after Apache restart:
>
>
> [Wed Oct 10 16:04:23 2007] [error] make_obcallback: could not import mod_python.apache.\n
>
> [Wed Oct 10 16:04:23 2007] [error] make_obcallback: Python path being
> used "['C:\\\\soft\\\\Python\\\\python25.zip', '.\\\\DLLs',
> '.\\\\lib', '.\\\\lib\\\\plat win', '.\\\\lib\\\\lib-tk',
> 'C:\\\\soft\\\\comm\\\\Apache2_2_3\\\\bin']".
>
> My httpd.conf file is not ignored by Apache. I tried to replace
> "PythonPath" with "PythonPath777" - in this case Apache refused to
> restart.
>
> Also, I tried to carry out PythonPath directive to the outside of
> <Location> tag. It won't helped.
>
> I'm still unable to modify Python path so I'm little confused. Can you
> pls help? =)
>
> Also, is there other way to control Python path?
>
> Thanks
>
> --
> Best regards,
>  Slava                          mailto:slava@acdlabs.ru
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Wed Oct 10 18:19:53 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 10 18:20:06 2007
Subject: [mod_python] how to take the psp.PSP.run in a variable ?
In-Reply-To: <470D089C.2040804@softexperience.ro>
References: <200710101600.l9AG0C0p014598@modpython.org>
	<470D089C.2040804@softexperience.ro>
Message-ID: <88e286470710101519l329097b1g71a72ffad5b3348d@mail.gmail.com>

Use some variation of techniques described in:

  http://www.modpython.org/pipermail/mod_python/2005-June/018231.html

If you search the mailing list archive in www.modpython.org you will
find other examples and discussion of issues associated with them.

Graham

On 11/10/2007, Stefan Horomnea <stefan@softexperience.ro> wrote:
> Hello,
>
> I have this code:
>
>     tmpl = psp.PSP(req, filename='tp/myresult.tpl.html')
>     tmpl.run(vars = kwargs)
>
> My question is, how can I store the template contents in a variable. So
> the run method instead of printing making it return ?
>
> Cause I really need this for taking the returning string, and using it
> as a piece in a greater template. Or doing some other stuff on that string.
>
> Thanks.
> Stefan
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From thkatsou at yahoo.gr  Sat Oct 13 10:20:14 2007
From: thkatsou at yahoo.gr (Thimios Katsoulis)
Date: Sat Oct 13 10:20:22 2007
Subject: [mod_python] Mod_python multiple apache mod_python interpreters
	communication
Message-ID: <893541.6266.qm@web23305.mail.ird.yahoo.com>

Hello
I am looking for a way so that the multiple python interpreters that run my mod_python application, 
communicate between them.
In more detail I want to raise some sort of event that can be dispatched among all apache mod_python instances, so they perform some action, 
such as removing a global variable which is - as I understand - visible inside each separate interpreter context.
Any ideas?

Thanks.






      
___________________________________________________________ 
?????????????? Yahoo!; 
?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail 
???????? ??? ???????? ?????? ????????? ???? ??? ??????????? 
????????? http://login.yahoo.com/config/mail?.intl=gr 



From thkatsou at yahoo.gr  Sat Oct 13 11:06:36 2007
From: thkatsou at yahoo.gr (Thimios Katsoulis)
Date: Sat Oct 13 11:13:22 2007
Subject: [mod_python] Re:mod_python and connection to database. (Rodion)
Message-ID: <227210.97103.qm@web23301.mail.ird.yahoo.com>

Hello.

Sorry for my poor english. Here is my mod_python code. This is a simple 
URL shorter:

from mod_python import apache, util
import psycopg2 as psycopg

def handler(req):
     req.content_type = "text/plain"
     url_id = req.args
     connection = psycopg.connect("dbname=my_db")
     cursor = connection.cursor()
     cursor.execute("""SELECT myurl FROM urls WHERE myid=%s""",(url_id))
     original_url = cursor.fetchone()[0]
     connection.close()
     util.redirect(req,original_url)
     req.status = apache.DONE
     return apache.DONE

This programme connects database everytime, but I want(need) force him 
to connect it continously

This script connects database everytime (psycopg.connect("dbname=my_db") 
, but I nedd force to stay conneceted with it continously. It is 
possible to make that in mod_python ? I have mod_python 3.2.10

Thanks in advance.
rdn
---------------

Yes mod_python can maintain global variables per interpreter, so you can open once the connection 
and all subsequent requests will use the opened connection.
You have to declare your connection variable as global e.g. :

    
    def getConn(self):        
        
        try:
            if _conn == None:
                self.openConn()
           
                
        except NameError:
            self.openConn()
        return _conn
    
    def openConn(self):
        
        global _conn
        _conn = connect(self.ConnStr)


So when you want to access it you call self.getConn().
The _conn global variable will instantiate once for each mod_python apache process.
You can include some apache.log_error calls in the code above to watch 
for yourself when the  _conn varible gets instantiated and when it is retreived as global.
Please take notice from what I have observed that while you maintain open connections to DB (postgresql too in my case)
you cannot change structure of the tables etc in the DB..
Of course if you are using modules and not objects you have to alter  the code to  support (removing self ..) modules.
 







      
___________________________________________________________ 
?????????????? Yahoo!; 
?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail 
???????? ??? ???????? ?????? ????????? ???? ??? ??????????? 
????????? http://login.yahoo.com/config/mail?.intl=gr 



From graham.dumpleton at gmail.com  Sat Oct 13 19:01:45 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Oct 13 19:01:53 2007
Subject: [mod_python] Mod_python multiple apache mod_python interpreters
	communication
In-Reply-To: <893541.6266.qm@web23305.mail.ird.yahoo.com>
References: <893541.6266.qm@web23305.mail.ird.yahoo.com>
Message-ID: <88e286470710131601l6abfe95cve69f228d0f7f892f@mail.gmail.com>

On 14/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> Hello
> I am looking for a way so that the multiple python interpreters that run my mod_python application,
> communicate between them.
> In more detail I want to raise some sort of event that can be dispatched among all apache mod_python instances, so they perform some action,
> such as removing a global variable which is - as I understand - visible inside each separate interpreter context.
> Any ideas?

You do understand that within one Apache child process there can be
multiple Python sub interpreters which may be running distinct
applications. Then, there can be multiple Apache child processes.
Thus, there are two levels of communication, between sub interpreters
within the one Apache child process and between named sub interpreters
within different Apache child processes.

For some general background reading and some of the issues around
this, you can find more in:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

As to a solution, it depends on what you are really trying to do.

One solution is not to do too much in the Apache/mod_python processes
to begin with. Instead, use a backend server process to do the real
work and use XML-RPC to communicate with that process. That way the
data that may need to be changed is in one process and there is not
need to synchronise between multiple processes.

Another solution may be to use memcached and store data that has to be
common to multiple processes with it, so that updates to data from one
are automatically seen by another process. In other words, some form
of shared memory mechanism.

At the more complicated end, you could have each Apache/mod_python
process participate in a distributed messaging system network, where
each process is able to subscribe to messages distributed by a central
server and act on the published messages when they are received to
change the value of some locally cached state. Such a system which is
known to be able to work within Apache/mod_python and its rather
hostile environment whereby multiple sub interpreters are being used,
is OSE (http://ose.sourceforge.net).

Having said all that, what exactly are you trying to do?

Graham
From graham.dumpleton at gmail.com  Sat Oct 13 20:06:15 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Oct 13 20:06:21 2007
Subject: [mod_python] Re:mod_python and connection to database. (Rodion)
In-Reply-To: <227210.97103.qm@web23301.mail.ird.yahoo.com>
References: <227210.97103.qm@web23301.mail.ird.yahoo.com>
Message-ID: <88e286470710131706v2d449c95jd250e79e7b98dd58@mail.gmail.com>

Hmm, I not sure if this is an answer to your own question or you are
replying to a really old post, as I don't remember the question.

Either way, the code being presented as an example on the way to solve
this is unsafe for a number of reasons.

The first reason is that it isn't thread protected and thus isn't safe
in a multithread process such as when Apache UNIX worker MPM or
Windows winnt MPM is used. This is because multiple handlers could be
executing concurrently and both decide the global database handle
needs to be created. This could result in wasted resources.

A second possible problem which can occur is where the global database
handle and the code for creating it, is placed in a code module which
is the subject of automatic reloading. So, once threading issues are
dealt with then okay, but do not go putting it in the same code file
as your mod_python handlers, or in general anywhere in the document
tree. Instead put it in a module somewhere else on sys.path outside of
the document tree. For an example of why this can be a problem see:

  http://groups.google.com/group/sqlalchemy/browse_thread/thread/5193bc7598f045fb#

Also ensure you read documentation for import_module() in:

  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

It mentions a bit about resource leakage and transferring data from
old module to new module. Ensure you are using mod_python 3.3.1
though, as older versions were a bit less predictable.

  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken

Graham

On 14/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> Hello.
>
> Sorry for my poor english. Here is my mod_python code. This is a simple
> URL shorter:
>
> from mod_python import apache, util
> import psycopg2 as psycopg
>
> def handler(req):
>      req.content_type = "text/plain"
>      url_id = req.args
>      connection = psycopg.connect("dbname=my_db")
>      cursor = connection.cursor()
>      cursor.execute("""SELECT myurl FROM urls WHERE myid=%s""",(url_id))
>      original_url = cursor.fetchone()[0]
>      connection.close()
>      util.redirect(req,original_url)
>      req.status = apache.DONE
>      return apache.DONE
>
> This programme connects database everytime, but I want(need) force him
> to connect it continously
>
> This script connects database everytime (psycopg.connect("dbname=my_db")
> , but I nedd force to stay conneceted with it continously. It is
> possible to make that in mod_python ? I have mod_python 3.2.10
>
> Thanks in advance.
> rdn
> ---------------
>
> Yes mod_python can maintain global variables per interpreter, so you can open once the connection
> and all subsequent requests will use the opened connection.
> You have to declare your connection variable as global e.g. :
>
>
>     def getConn(self):
>
>         try:
>             if _conn == None:
>                 self.openConn()
>
>
>         except NameError:
>             self.openConn()
>         return _conn
>
>     def openConn(self):
>
>         global _conn
>         _conn = connect(self.ConnStr)
>
>
> So when you want to access it you call self.getConn().
> The _conn global variable will instantiate once for each mod_python apache process.
> You can include some apache.log_error calls in the code above to watch
> for yourself when the  _conn varible gets instantiated and when it is retreived as global.
> Please take notice from what I have observed that while you maintain open connections to DB (postgresql too in my case)
> you cannot change structure of the tables etc in the DB..
> Of course if you are using modules and not objects you have to alter  the code to  support (removing self ..) modules.
>
>
>
>
>
>
>
>
>
> ___________________________________________________________
> ?????????????? Yahoo!;
> ?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail
> ???????? ??? ???????? ?????? ????????? ???? ??? ???????????
> ????????? http://login.yahoo.com/config/mail?.intl=gr
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From bernd.bartmann at gmail.com  Mon Oct 15 02:39:12 2007
From: bernd.bartmann at gmail.com (Bernd Bartmann)
Date: Mon Oct 15 02:39:19 2007
Subject: [mod_python] Problem getting mod_python working on Win32
In-Reply-To: <88e286470710101510m24bee38emec09f447a0d90443@mail.gmail.com>
References: <6c18a4f0710100049l19f4d05el850d91b36cefa52e@mail.gmail.com>
	<88e286470710101510m24bee38emec09f447a0d90443@mail.gmail.com>
Message-ID: <6c18a4f0710142339p102961a2i50bb294de7f2da79@mail.gmail.com>

In the meantime I solved to problem by upgrading to Apache 2.0.61.
Looks like there is some kind of incompatibility between Apache 2.0.54
and mod_python-3.3.1.win32-py2.5-Apache2.0.exe.

cu,
Bernd
From thkatsou at yahoo.gr  Mon Oct 15 05:03:23 2007
From: thkatsou at yahoo.gr (Thimios Katsoulis)
Date: Mon Oct 15 05:06:27 2007
Subject: [mod_python] Re:mod_python and connection to database.
Message-ID: <455262.56782.qm@web23314.mail.ird.yahoo.com>


>Hmm, I not sure if this is an answer to your own question or you are
>replying to a really old post, as I don't remember the question.

>Either way, the code being presented as an example on the way to solve
>this is unsafe for a number of reasons.

>The first reason is that it isn't thread protected and thus isn't safe
>in a multithread process such as when Apache UNIX worker MPM or
>Windows winnt MPM is used. This is because multiple handlers could be
>executing concurrently and both decide the global database handle
>needs to be created. 


What you mean by multiple handlers ? Multithreaded apache that has multiple threads 
in each process? So in this case global variables are shared 
 between different threads in the same process
right?


>This could result in wasted resources.

Wasted resources? Pls explain.


>A second possible problem which can occur is where the global database
>handle and the code for creating it, is placed in a code module which
>is the subject of automatic reloading.

I have now realized that in every reload of the file even if the global variable
 was created in previous invocation  it is re-created.
But why ? Once it's created as global shouldn't it exist after first invocation of the module
 and thus not be recreated ?

> So, once threading issues are
>dealt with then okay, but do not go putting it in the same code file
>as your mod_python handlers, or in general anywhere in the document
>tree. Instead put it in a module somewhere else on sys.path outside of
>the document tree. For an example of why this can be a problem see:

>  http://groups.google.com/group/sqlalchemy/browse_thread/thread/5193bc7598f045fb#

>Also ensure you read documentation for import_module() in:

 > http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

>It mentions a bit about resource leakage and transferring data from
>old module to new module. Ensure you are using mod_python 3.3.1
>though, as older versions were a bit less predictable.

>  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken

Graham

On 14/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> Hello.
>
> Sorry for my poor english. Here is my mod_python code. This is a simple
> URL shorter:
>
> from mod_python import apache, util
> import psycopg2 as psycopg
>
> def handler(req):
>      req.content_type = "text/plain"
>      url_id = req.args
>      connection = psycopg.connect("dbname=my_db")
>      cursor = connection.cursor()
>      cursor.execute("""SELECT myurl FROM urls WHERE myid=%s""",(url_id))
>      original_url = cursor.fetchone()[0]
>      connection.close()
>      util.redirect(req,original_url)
>      req.status = apache.DONE
>      return apache.DONE
>
> This programme connects database everytime, but I want(need) force him
> to connect it continously
>
> This script connects database everytime (psycopg.connect("dbname=my_db")
> , but I nedd force to stay conneceted with it continously. It is
> possible to make that in mod_python ? I have mod_python 3.2.10
>
> Thanks in advance.
> rdn
> ---------------
>
> Yes mod_python can maintain global variables per interpreter, so you can open once the connection
> and all subsequent requests will use the opened connection.
> You have to declare your connection variable as global e.g. :
>
>
>     def getConn(self):
>
>         try:
>             if _conn == None:
>                 self.openConn()
>
>
>         except NameError:
>             self.openConn()
>         return _conn
>
>     def openConn(self):
>
>         global _conn
>         _conn = connect(self.ConnStr)
>
>
> So when you want to access it you call self.getConn().
> The _conn global variable will instantiate once for each mod_python apache process.
> You can include some apache.log_error calls in the code above to watch
> for yourself when the  _conn varible gets instantiated and when it is retreived as global.
> Please take notice from what I have observed that while you maintain open connections to DB (postgresql too in my case)
> you cannot change structure of the tables etc in the DB..
> Of course if you are using modules and not objects you have to alter  the code to  support (removing self ..) modules.
>
>
>
>
>
>
>
>
>
> ___________________________________________________________
> ?????????????? Yahoo!;
> ?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail
> ???????? ??? ???????? ?????? ????????? ???? ??? ???????????
> ????????? http://login.yahoo.com/config/mail?.intl=gr
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>



------------------------------

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


End of Mod_python Digest, Vol 55, Issue 18
******************************************





      
___________________________________________________________ 
?????????????? Yahoo!; 
?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail 
???????? ??? ???????? ?????? ????????? ???? ??? ??????????? 
????????? http://login.yahoo.com/config/mail?.intl=gr 



From graham.dumpleton at gmail.com  Mon Oct 15 08:04:47 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct 15 08:04:55 2007
Subject: [mod_python] Re:mod_python and connection to database.
In-Reply-To: <455262.56782.qm@web23314.mail.ird.yahoo.com>
References: <455262.56782.qm@web23314.mail.ird.yahoo.com>
Message-ID: <88e286470710150504p77437934n806570a184d5f2fb@mail.gmail.com>

On 15/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
>
> >Hmm, I not sure if this is an answer to your own question or you are
> >replying to a really old post, as I don't remember the question.
>
> >Either way, the code being presented as an example on the way to solve
> >this is unsafe for a number of reasons.
>
> >The first reason is that it isn't thread protected and thus isn't safe
> >in a multithread process such as when Apache UNIX worker MPM or
> >Windows winnt MPM is used. This is because multiple handlers could be
> >executing concurrently and both decide the global database handle
> >needs to be created.
>
>
> What you mean by multiple handlers ? Multithreaded apache that has multiple threads
> in each process? So in this case global variables are shared
>  between different threads in the same process
> right?

Correct, and if code running in multiple threads try and set or update
the global data they can interfere with each other. Standard
multithread programming issues.

> >This could result in wasted resources.
>
> Wasted resources? Pls explain.

If the Python destructor of a class object instance doesn't release
resources correctly, for example, doesn't close off database
connections, then they will become unreachable and just consume and
thus reduce the maximum number of connections you could use. Even if
the destructor does do the correct thing, if there is an object
reference count cycle, Python may not be able to garbage collect it
and so it may never be destroyed anyway and release the resources.

> >A second possible problem which can occur is where the global database
> >handle and the code for creating it, is placed in a code module which
> >is the subject of automatic reloading.
>
> I have now realized that in every reload of the file even if the global variable
>  was created in previous invocation  it is re-created.
> But why ? Once it's created as global shouldn't it exist after first invocation of the module
>  and thus not be recreated ?

Because that is the consequences of reloading modules, you either
reload on top of the existing module and thus replace the existing
value, or you reload the module into a fresh module and discard the
old. How are you going to do it so you retain the global data in a
generic way?

Graham

> > So, once threading issues are
> >dealt with then okay, but do not go putting it in the same code file
> >as your mod_python handlers, or in general anywhere in the document
> >tree. Instead put it in a module somewhere else on sys.path outside of
> >the document tree. For an example of why this can be a problem see:
>
> >  http://groups.google.com/group/sqlalchemy/browse_thread/thread/5193bc7598f045fb#
>
> >Also ensure you read documentation for import_module() in:
>
>  > http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>
> >It mentions a bit about resource leakage and transferring data from
> >old module to new module. Ensure you are using mod_python 3.3.1
> >though, as older versions were a bit less predictable.
>
> >  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken
>
> Graham
>
> On 14/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> > Hello.
> >
> > Sorry for my poor english. Here is my mod_python code. This is a simple
> > URL shorter:
> >
> > from mod_python import apache, util
> > import psycopg2 as psycopg
> >
> > def handler(req):
> >      req.content_type = "text/plain"
> >      url_id = req.args
> >      connection = psycopg.connect("dbname=my_db")
> >      cursor = connection.cursor()
> >      cursor.execute("""SELECT myurl FROM urls WHERE myid=%s""",(url_id))
> >      original_url = cursor.fetchone()[0]
> >      connection.close()
> >      util.redirect(req,original_url)
> >      req.status = apache.DONE
> >      return apache.DONE
> >
> > This programme connects database everytime, but I want(need) force him
> > to connect it continously
> >
> > This script connects database everytime (psycopg.connect("dbname=my_db")
> > , but I nedd force to stay conneceted with it continously. It is
> > possible to make that in mod_python ? I have mod_python 3.2.10
> >
> > Thanks in advance.
> > rdn
> > ---------------
> >
> > Yes mod_python can maintain global variables per interpreter, so you can open once the connection
> > and all subsequent requests will use the opened connection.
> > You have to declare your connection variable as global e.g. :
> >
> >
> >     def getConn(self):
> >
> >         try:
> >             if _conn == None:
> >                 self.openConn()
> >
> >
> >         except NameError:
> >             self.openConn()
> >         return _conn
> >
> >     def openConn(self):
> >
> >         global _conn
> >         _conn = connect(self.ConnStr)
> >
> >
> > So when you want to access it you call self.getConn().
> > The _conn global variable will instantiate once for each mod_python apache process.
> > You can include some apache.log_error calls in the code above to watch
> > for yourself when the  _conn varible gets instantiated and when it is retreived as global.
> > Please take notice from what I have observed that while you maintain open connections to DB (postgresql too in my case)
> > you cannot change structure of the tables etc in the DB..
> > Of course if you are using modules and not objects you have to alter  the code to  support (removing self ..) modules.
> >
> >
> >
> >
> >
> >
> >
> >
> >
> > ___________________________________________________________
> > ?????????????? Yahoo!;
> > ?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail
> > ???????? ??? ???????? ?????? ????????? ???? ??? ???????????
> > ????????? http://login.yahoo.com/config/mail?.intl=gr
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
>
> ------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> End of Mod_python Digest, Vol 55, Issue 18
> ******************************************
>
>
>
>
>
>
> ___________________________________________________________
> ?????????????? Yahoo!;
> ?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail
> ???????? ??? ???????? ?????? ????????? ???? ??? ???????????
> ????????? http://login.yahoo.com/config/mail?.intl=gr
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From thkatsou at yahoo.gr  Mon Oct 15 17:04:04 2007
From: thkatsou at yahoo.gr (Thimios Katsoulis)
Date: Mon Oct 15 17:30:50 2007
Subject: [mod_python] Re: Mod_python Digest, Vol 55, Issue 19
Message-ID: <869563.43216.qm@web23301.mail.ird.yahoo.com>

On 15/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
>
> >Hmm, I not sure if this is an answer to your own question or you are
> >replying to a really old post, as I don't remember the question.
>
> >Either way, the code being presented as an example on the way to solve
> >this is unsafe for a number of reasons.
>
> >The first reason is that it isn't thread protected and thus isn't safe
> >in a multithread process such as when Apache UNIX worker MPM or
> >Windows winnt MPM is used. This is because multiple handlers could be
> >executing concurrently and both decide the global database handle
> >needs to be created.
>
>
> What you mean by multiple handlers ? Multithreaded apache that has multiple threads
> in each process? So in this case global variables are shared
>  between different threads in the same process
> right?

>Correct, and if code running in multiple threads try and set or update
>the global data they can interfere with each other. Standard
>multithread programming issues.


By the way is this the default behavior of apache and mod_python meaning: 
  + multiple mod_python threads  that each run  a single application (mod_python handler)
or maybe
Multiple apache processes +  multiple  mod_python threads  even more than one per application (virtual host)?
Is there a way that we can determine hoe we run ?
Perhaps through apache.mpm_query?
Noticing in mpm_query :
AP_MPMQ_IS_THREADED        = 2  # MPM can do threading   

Does this mean we run in multiple threads per apache process mode?

And asking again: Running in multiple threads means
even  more than one thread per mod_python virtual host, or just a thread for each 
virtual host(that is handled by a mod_python handler)?

And something else : multiple threads share only global variables or also 
other kinds of variables class members for example?






> >This could result in wasted resources.
>
> Wasted resources? Pls explain.

>If the Python destructor of a class object instance doesn't release
>resources correctly, for example, doesn't close off database
>connections, then they will become unreachable and just consume and
>thus reduce the maximum number of connections you could use. Even if
>the destructor does do the correct thing, if there is an object
>reference count cycle, Python may not be able to garbage collect it
>and so it may never be destroyed anyway and release the resources.

"object reference count cycle"?.
>From what I 've noticed on module reloading the global connection object is recreated.
So the number of open connections to DB (postgres in my case) increments 1, but after a while the old connection closes (python garbage collecting, postgresql?) and so there is no problem.

Of course it will still be a problem if multiple processes are created and the number of open connections reach the database connection limit.

Just have to notice that this whole thing with keeping the connection open speeds a mod_python/ psycopg2/ postgresql  web app very much.
In my case noticed speed ups up to 300%.

Anyway I think it would be very handful a tutorial about 
"A global's life in mod_python" covering topics like the global variable context.


> >A second possible problem which can occur is where the global database
> >handle and the code for creating it, is placed in a code module which
> >is the subject of automatic reloading.
>
> I have now realized that in every reload of the file even if the global variable
>  was created in previous invocation  it is re-created.
> But why ? Once it's created as global shouldn't it exist after first invocation of the module
>  and thus not be recreated ?

>Because that is the consequences of reloading modules, you either
>reload on top of the existing module and thus replace the existing
>value, 


Sorry don't get you. An example please.
A global variable's context is the module where it is created?
If you reload this module the global variable becomes not reachable?


>or you reload the module into a fresh module and discard the
>old.
 
Are you pointing a technique here?

>How are you going to do it so you retain the global data in a
>generic way?

>Graham

> > So, once threading issues are
> >dealt with then okay, but do not go putting it in the same code file
> >as your mod_python handlers, or in general anywhere in the document
> >tree. Instead put it in a module somewhere else on sys.path outside of
> >the document tree. For an example of why this can be a problem see:
>
> >  http://groups.google.com/group/sqlalchemy/browse_thread/thread/5193bc7598f045fb#
>
> >Also ensure you read documentation for import_module() in:
>
>  > http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
>
> >It mentions a bit about resource leakage and transferring data from
> >old module to new module. Ensure you are using mod_python 3.3.1
> >though, as older versions were a bit less predictable.
>
> >  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken
>
> Graham
>
> On 14/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> > Hello.
> >
> > Sorry for my poor english. Here is my mod_python code. This is a simple
> > URL shorter:
> >
> > from mod_python import apache, util
> > import psycopg2 as psycopg
> >
> > def handler(req):
> >      req.content_type = "text/plain"
> >      url_id = req.args
> >      connection = psycopg.connect("dbname=my_db")
> >      cursor = connection.cursor()
> >      cursor.execute("""SELECT myurl FROM urls WHERE myid=%s""",(url_id))
> >      original_url = cursor.fetchone()[0]
> >      connection.close()
> >      util.redirect(req,original_url)
> >      req.status = apache.DONE
> >      return apache.DONE
> >
> > This programme connects database everytime, but I want(need) force him
> > to connect it continously
> >
> > This script connects database everytime (psycopg.connect("dbname=my_db")
> > , but I nedd force to stay conneceted with it continously. It is
> > possible to make that in mod_python ? I have mod_python 3.2.10
> >
> > Thanks in advance.
> > rdn
> > ---------------
> >
> > Yes mod_python can maintain global variables per interpreter, so you can open once the connection
> > and all subsequent requests will use the opened connection.
> > You have to declare your connection variable as global e.g. :
> >
> >
> >     def getConn(self):
> >
> >         try:
> >             if _conn == None:
> >                 self.openConn()
> >
> >
> >         except NameError:
> >             self.openConn()
> >         return _conn
> >
> >     def openConn(self):
> >
> >         global _conn
> >         _conn = connect(self.ConnStr)
> >
> >
> > So when you want to access it you call self.getConn().
> > The _conn global variable will instantiate once for each mod_python apache process.
> > You can include some apache.log_error calls in the code above to watch
> > for yourself when the  _conn varible gets instantiated and when it is retreived as global.
> > Please take notice from what I have observed that while you maintain open connections to DB (postgresql too in my case)
> > you cannot change structure of the tables etc in the DB..
> > Of course if you are using modules and not objects you have to alter  the code to  support (removing self ..) modules.
> >
> >






      
___________________________________________________________ 
?????????????? Yahoo!; 
?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail 
???????? ??? ???????? ?????? ????????? ???? ??? ??????????? 
????????? http://login.yahoo.com/config/mail?.intl=gr 



From graham.dumpleton at gmail.com  Mon Oct 15 22:09:06 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct 15 22:09:12 2007
Subject: [mod_python] Re: Mod_python Digest, Vol 55, Issue 19
In-Reply-To: <869563.43216.qm@web23301.mail.ird.yahoo.com>
References: <869563.43216.qm@web23301.mail.ird.yahoo.com>
Message-ID: <88e286470710151909q4a5208b9gd6bf73a8c67b2916@mail.gmail.com>

On 16/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> On 15/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> >
> > >Hmm, I not sure if this is an answer to your own question or you are
> > >replying to a really old post, as I don't remember the question.
> >
> > >Either way, the code being presented as an example on the way to solve
> > >this is unsafe for a number of reasons.
> >
> > >The first reason is that it isn't thread protected and thus isn't safe
> > >in a multithread process such as when Apache UNIX worker MPM or
> > >Windows winnt MPM is used. This is because multiple handlers could be
> > >executing concurrently and both decide the global database handle
> > >needs to be created.
> >
> >
> > What you mean by multiple handlers ? Multithreaded apache that has multiple threads
> > in each process? So in this case global variables are shared
> >  between different threads in the same process
> > right?
>
> >Correct, and if code running in multiple threads try and set or update
> >the global data they can interfere with each other. Standard
> >multithread programming issues.
>
> By the way is this the default behavior of apache and mod_python meaning:
>   + multiple mod_python threads  that each run  a single application (mod_python handler)
> or maybe
> Multiple apache processes +  multiple  mod_python threads  even more than one per application (virtual host)?

You only have threads when using an Apache MPM that uses multithreading. See:

  http://www.dscpl.com.au/wiki/ModPython/Articles/TheProcessInterpreterModel

or for an updated version, albeit focused around mod_wsgi, read:

  http://code.google.com/p/modwsgi/wiki/ProcessesAndThreading

> Is there a way that we can determine hoe we run ?
> Perhaps through apache.mpm_query?
> Noticing in mpm_query :
> AP_MPMQ_IS_THREADED        = 2  # MPM can do threading

For an example of how the WSGI environment flags are calculated in a
mod_python WSGI adapter see:

  http://www.aminus.org/blogs/index.php/fumanchu/2005/11/06/wsgi_wrapper_for_mod_python

So yes, AP_MPMQ_IS_THREADED does come in to play.

> Does this mean we run in multiple threads per apache process mode?

Yes, a single handler may have multiple threads running concurrently
within it for different requests.

> And asking again: Running in multiple threads means
> even  more than one thread per mod_python virtual host, or just a thread for each
> virtual host(that is handled by a mod_python handler)?

The Apache thread pool is shared across all requests regardless of
what VirtualHost definitions exist or how many mod_python handlers may
be used.

> And something else : multiple threads share only global variables or also
> other kinds of variables class members for example?

It is all exactly the same as if you were running a standard Python
program which used multiple threads.

> > >This could result in wasted resources.
> >
> > Wasted resources? Pls explain.
>
> >If the Python destructor of a class object instance doesn't release
> >resources correctly, for example, doesn't close off database
> >connections, then they will become unreachable and just consume and
> >thus reduce the maximum number of connections you could use. Even if
> >the destructor does do the correct thing, if there is an object
> >reference count cycle, Python may not be able to garbage collect it
> >and so it may never be destroyed anyway and release the resources.
>
> "object reference count cycle"?.
> >From what I 've noticed on module reloading the global connection object is recreated.
> So the number of open connections to DB (postgres in my case) increments 1, but after a while the old connection closes (python garbage collecting, postgresql?) and so there is no problem.
>
> Of course it will still be a problem if multiple processes are created and the number of open connections reach the database connection limit.

Not in the same way as that would be by design, whereas the resource
leakage isn't.

> Just have to notice that this whole thing with keeping the connection open speeds a mod_python/ psycopg2/ postgresql  web app very much.
> In my case noticed speed ups up to 300%.
>
> Anyway I think it would be very handful a tutorial about
> "A global's life in mod_python" covering topics like the global variable context.

For a start, see document on process/interpreter model. Other than
that, not much different to standard Python programs.

> > >A second possible problem which can occur is where the global database
> > >handle and the code for creating it, is placed in a code module which
> > >is the subject of automatic reloading.
> >
> > I have now realized that in every reload of the file even if the global variable
> >  was created in previous invocation  it is re-created.
> > But why ? Once it's created as global shouldn't it exist after first invocation of the module
> >  and thus not be recreated ?
>
> >Because that is the consequences of reloading modules, you either
> >reload on top of the existing module and thus replace the existing
> >value,
>
>
> Sorry don't get you. An example please.
> A global variable's context is the module where it is created?
> If you reload this module the global variable becomes not reachable?

Consider:

  a = Class()
  a = Class()

The first instance of 'a' is no longer reachable.

If there was a reference count cycle then it may not be deleted
immediately and will be be dependent on garbage collection cycle
kicking in and attempting to break the cycle before it can be deleted.
This may not occur immediately and thus the unreachable object
instance may be using up resources. In worst case, garbage collector
may not be able to break cycle and it will never be destroyed and so
resources will never be released.

> >or you reload the module into a fresh module and discard the
> >old.
>
> Are you pointing a technique here?

Yes and this is the one used by mod_python. The reasons were explained
in document on why mod_python module importing was broken in older
versions.

Graham

> >How are you going to do it so you retain the global data in a
> >generic way?
>
> >Graham
>
> > > So, once threading issues are
> > >dealt with then okay, but do not go putting it in the same code file
> > >as your mod_python handlers, or in general anywhere in the document
> > >tree. Instead put it in a module somewhere else on sys.path outside of
> > >the document tree. For an example of why this can be a problem see:
> >
> > >  http://groups.google.com/group/sqlalchemy/browse_thread/thread/5193bc7598f045fb#
> >
> > >Also ensure you read documentation for import_module() in:
> >
> >  > http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
> >
> > >It mentions a bit about resource leakage and transferring data from
> > >old module to new module. Ensure you are using mod_python 3.3.1
> > >though, as older versions were a bit less predictable.
> >
> > >  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken
> >
> > Graham
> >
> > On 14/10/2007, Thimios Katsoulis <thkatsou@yahoo.gr> wrote:
> > > Hello.
> > >
> > > Sorry for my poor english. Here is my mod_python code. This is a simple
> > > URL shorter:
> > >
> > > from mod_python import apache, util
> > > import psycopg2 as psycopg
> > >
> > > def handler(req):
> > >      req.content_type = "text/plain"
> > >      url_id = req.args
> > >      connection = psycopg.connect("dbname=my_db")
> > >      cursor = connection.cursor()
> > >      cursor.execute("""SELECT myurl FROM urls WHERE myid=%s""",(url_id))
> > >      original_url = cursor.fetchone()[0]
> > >      connection.close()
> > >      util.redirect(req,original_url)
> > >      req.status = apache.DONE
> > >      return apache.DONE
> > >
> > > This programme connects database everytime, but I want(need) force him
> > > to connect it continously
> > >
> > > This script connects database everytime (psycopg.connect("dbname=my_db")
> > > , but I nedd force to stay conneceted with it continously. It is
> > > possible to make that in mod_python ? I have mod_python 3.2.10
> > >
> > > Thanks in advance.
> > > rdn
> > > ---------------
> > >
> > > Yes mod_python can maintain global variables per interpreter, so you can open once the connection
> > > and all subsequent requests will use the opened connection.
> > > You have to declare your connection variable as global e.g. :
> > >
> > >
> > >     def getConn(self):
> > >
> > >         try:
> > >             if _conn == None:
> > >                 self.openConn()
> > >
> > >
> > >         except NameError:
> > >             self.openConn()
> > >         return _conn
> > >
> > >     def openConn(self):
> > >
> > >         global _conn
> > >         _conn = connect(self.ConnStr)
> > >
> > >
> > > So when you want to access it you call self.getConn().
> > > The _conn global variable will instantiate once for each mod_python apache process.
> > > You can include some apache.log_error calls in the code above to watch
> > > for yourself when the  _conn varible gets instantiated and when it is retreived as global.
> > > Please take notice from what I have observed that while you maintain open connections to DB (postgresql too in my case)
> > > you cannot change structure of the tables etc in the DB..
> > > Of course if you are using modules and not objects you have to alter  the code to  support (removing self ..) modules.
> > >
> > >
>
>
>
>
>
>
>
> ___________________________________________________________
> ?????????????? Yahoo!;
> ?????????? ?? ?????????? ???????? (spam); ?? Yahoo! Mail
> ???????? ??? ???????? ?????? ????????? ???? ??? ???????????
> ????????? http://login.yahoo.com/config/mail?.intl=gr
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From mohamed35 at freesurf.fr  Tue Oct 16 08:04:45 2007
From: mohamed35 at freesurf.fr (mohamed35@freesurf.fr)
Date: Tue Oct 16 08:04:52 2007
Subject: [mod_python] Reading data from a POST using chuncked mode
Message-ID: <56707.194.2.158.33.1192536285.squirrel@arlette.freesurf.fr>


Hi,

I used to use req.read() to retrieve raw data from a POST request
(application/pdf) which represents a quite large quantity of data (non
chunked mode).

Now, client is using chunked transfer (HTTP_TRANSFER_ENCODING = chunked), to
avoid blocking a lot of memory at client (mime not used).

I have problems retrieving the data (my saved files are 0 bytes size!) with
the chunked transfer

According to mod_python documentation about the read():
"This function relies on the client providing the Content-length  header.
Absence of the Content-length header will be treated as if Content-length: 0
was supplied."

Is the problem due to the fact that no Content-length header is provided to
modpython by apache?

Does anyone know what should be the proper way of handling chanked transfer
of data with mod_python? Is read() appropriate or any other coding necessary?

Any help is very welcome,
Thanks,
Med








From mike.robokoff at apioutsourcing.com  Tue Oct 16 08:04:52 2007
From: mike.robokoff at apioutsourcing.com (Michael Robokoff)
Date: Tue Oct 16 08:05:07 2007
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
Message-ID: <008601c80fec$c25618e0$8201020a@api104b4843840>

Hello,

I just changed from running apache configured with "mpm=prefork" to
"mpm=worker".

Everything worked with the "prefork" attribute. We decided to change over to
multi threading

to test performance, so I recompiled apache with the "worker" attribute. Now
we get the error

 

[error] [client]   File
"/usr/local/lib/python2.5/site-packages/mod_python/Session.py", line 280, in
lock\n    _apache._global_lock(self._req.server, self._sid), referer:
http://......

 

"ValueError: Failed to acquire global mutex lock" referer: http:...

 

Can you please give me some direction on this. 

 

 

 

Michael Robokoff

Senior Systems Administrator

API Outsourcing

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071016/6ce816fd/attachment-0001.html
From graham.dumpleton at gmail.com  Tue Oct 16 08:24:45 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 16 08:24:51 2007
Subject: [mod_python] Reading data from a POST using chuncked mode
In-Reply-To: <56707.194.2.158.33.1192536285.squirrel@arlette.freesurf.fr>
References: <56707.194.2.158.33.1192536285.squirrel@arlette.freesurf.fr>
Message-ID: <88e286470710160524n17a52de3u5d2e87560911211d@mail.gmail.com>

Using chunked encoding on request content is not supported by mod_python. See:

  http://issues.apache.org/jira/browse/MODPYTHON-222

I am surprised you even got as far as your handler executing as it
shouldn't have and you should instead have got an error sent back to
client saying content length expected.

Graham

On 16/10/2007, mohamed35@freesurf.fr <mohamed35@freesurf.fr> wrote:
>
> Hi,
>
> I used to use req.read() to retrieve raw data from a POST request
> (application/pdf) which represents a quite large quantity of data (non
> chunked mode).
>
> Now, client is using chunked transfer (HTTP_TRANSFER_ENCODING = chunked), to
> avoid blocking a lot of memory at client (mime not used).
>
> I have problems retrieving the data (my saved files are 0 bytes size!) with
> the chunked transfer
>
> According to mod_python documentation about the read():
> "This function relies on the client providing the Content-length  header.
> Absence of the Content-length header will be treated as if Content-length: 0
> was supplied."
>
> Is the problem due to the fact that no Content-length header is provided to
> modpython by apache?
>
> Does anyone know what should be the proper way of handling chanked transfer
> of data with mod_python? Is read() appropriate or any other coding necessary?
>
> Any help is very welcome,
> Thanks,
> Med
>
>
>
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Tue Oct 16 08:28:40 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 16 08:28:46 2007
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <008601c80fec$c25618e0$8201020a@api104b4843840>
References: <008601c80fec$c25618e0$8201020a@api104b4843840>
Message-ID: <88e286470710160528l48581551i353f3f5aac88c896@mail.gmail.com>

Your system has a low number of sysvsem's configured and it is running
out. Whether you use prefork or worker shouldn't matter. You can
change the number that mod_python uses, setting it to a lower value
using the directive:

  PythonOption mod_python.mutex_locks 4

Must be defined at global scope in Apache configuration. Check Apache
error logs to see if it works.

Note, you must be using mod_python 3.3.1.

Graham

On 16/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
>
>
>
>
> Hello,
>
> I just changed from running apache configured with "mpm=prefork" to
> "mpm=worker".
>
> Everything worked with the "prefork" attribute. We decided to change over to
> multi threading
>
> to test performance, so I recompiled apache with the "worker" attribute. Now
> we get the error
>
>
>
> [error] [client]   File
> "/usr/local/lib/python2.5/site-packages/mod_python/Session.py",
> line 280, in lock\n
> _apache._global_lock(self._req.server, self._sid), referer:
> http://......
>
>
>
> "ValueError: Failed to acquire global mutex lock" referer: http:?..
>
>
>
> Can you please give me some direction on this.
>
>
>
>
>
>
>
> Michael Robokoff
>
> Senior Systems Administrator
>
> API Outsourcing
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From graham.dumpleton at gmail.com  Wed Oct 17 18:22:31 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 17 18:22:37 2007
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <003e01c810b5$8ead34a0$8201020a@api104b4843840>
References: <008601c80fec$c25618e0$8201020a@api104b4843840>
	<88e286470710160528l48581551i353f3f5aac88c896@mail.gmail.com>
	<003e01c810b5$8ead34a0$8201020a@api104b4843840>
Message-ID: <88e286470710171522r48f4d0a4kffeaf2d0b99aef49@mail.gmail.com>

On 17/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> Graham, Thanks so much for your help, unfortunately I don't think it
> made any difference. I don't see any real change in error messages.
> Should I check on how to increase the semaphores at the system level?

What do the messages in the Apache error log indicate about how many
mutexes mod_python is actually using? The directive must be in the
correct context else it is ignored.

> [Tue Oct 16 06:36:49 2007] [warn] (45)Deadlock situation detected/avoided:
> Failed to acquire global mutex lock at index 2

This error message possibly indicates the problem as being due to
something else.

One suggestion is to set the Apache configuration directive AcceptMutex.

  http://httpd.apache.org/docs/2.2/mod/mpm_common.html#acceptmutex

Set it to:

  AcceptMutex flock

This may not change the lock type used by mod_python though because of
it how it wrongly indicates which type of lock to use:

  https://issues.apache.org/jira/browse/MODPYTHON-202

It may release more semaphores though for use.

BTW, in apr.h in Apache include directory, what are the following set
to for your system.

#define APR_USE_FLOCK_SERIALIZE           0
#define APR_USE_SYSVSEM_SERIALIZE         1
#define APR_USE_POSIXSEM_SERIALIZE        0
#define APR_USE_FCNTL_SERIALIZE           0
#define APR_USE_PROC_PTHREAD_SERIALIZE    0
#define APR_USE_PTHREAD_SERIALIZE         1

#define APR_HAS_FLOCK_SERIALIZE           1
#define APR_HAS_SYSVSEM_SERIALIZE         1
#define APR_HAS_POSIXSEM_SERIALIZE        1
#define APR_HAS_FCNTL_SERIALIZE           1
#define APR_HAS_PROC_PTHREAD_SERIALIZE    0

Graham

> --Mike
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Tuesday, October 16, 2007 7:29 AM
> To: Michael Robokoff
> Cc: mod_python
> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>
> Your system has a low number of sysvsem's configured and it is running
> out. Whether you use prefork or worker shouldn't matter. You can
> change the number that mod_python uses, setting it to a lower value
> using the directive:
>
>   PythonOption mod_python.mutex_locks 4
>
> Must be defined at global scope in Apache configuration. Check Apache
> error logs to see if it works.
>
> Note, you must be using mod_python 3.3.1.
>
> Graham
>
> On 16/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> >
> >
> >
> >
> > Hello,
> >
> > I just changed from running apache configured with "mpm=prefork" to
> > "mpm=worker".
> >
> > Everything worked with the "prefork" attribute. We decided to change over
> to
> > multi threading
> >
> > to test performance, so I recompiled apache with the "worker" attribute.
> Now
> > we get the error
> >
> >
> >
> > [error] [client]   File
> > "/usr/local/lib/python2.5/site-packages/mod_python/Session.py",
> > line 280, in lock\n
> > _apache._global_lock(self._req.server, self._sid), referer:
> > http://......
> >
> >
> >
> > "ValueError: Failed to acquire global mutex lock" referer: http:...
> >
> >
> >
> > Can you please give me some direction on this.
> >
> >
> >
> >
> >
> >
> >
> > Michael Robokoff
> >
> > Senior Systems Administrator
> >
> > API Outsourcing
> >
> >
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
>
>
>
From apocalypznow at gmail.com  Thu Oct 18 03:45:00 2007
From: apocalypznow at gmail.com (apocalypznow)
Date: Thu Oct 18 03:45:06 2007
Subject: [mod_python] I want mod_python to execute .pyc (or .pyo) files only
Message-ID: <ff72tf$7d2$1@ger.gmane.org>

Hello,

Is there a way I can cause mod_python to execute only pyc (or pyo) 
files?  I have removed the .py files after manually compiling (using 
py_compile).  The file I want to execute is listed:

-rwxr-xr-x 1 root root 374 2007-09-17 23:20 index.pyc

My httpd.conf has the following:
Alias /test2 "/var/www/mod_python/test2"
<Directory /var/www/mod_python/test2>
   AddHandler python-program .pyc
   Options -MultiViews -Indexes
   PythonHandler mod_python.publisher
   PythonPath 'sys.path'
   PythonDebug On
</Directory>

The index.py (which was removed) contains the following:
def index(req):
         return "Index hit."
def hello(req):
         return "Hello hit."

When I execute http://some.url/test2/hello , I get the following:
The requested URL /test2/hello was not found on this server.

I am running mod_python 3.2.8 and Python2.3.5 on Apache 2.

The reason I want to do this is to put a small obstacle to my client 
from easily seeing the source code.  I realise this can be decompiled 
but decompilation does not produce nice results to work from, hence it 
is enough of an obstacle.  I wish to protect my authoring rights through 
  this.

Can someone please help?

From graham.dumpleton at gmail.com  Thu Oct 18 06:41:25 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Oct 18 06:41:31 2007
Subject: [mod_python] I want mod_python to execute .pyc (or .pyo) files
	only
In-Reply-To: <ff72tf$7d2$1@ger.gmane.org>
References: <ff72tf$7d2$1@ger.gmane.org>
Message-ID: <88e286470710180341r2528be8bnd57b9fbf6ba70aa1@mail.gmail.com>

Cannot be done if using mod_python.publisher, or where the handler
code file is in the document tree and a candidate for module
reloading. This  is because the mod_python module importer only uses
.py files and ignores .pyc/.pyo files.

Only time it would work is for a top level handler specified by
PythonHandler which is somewhere on sys.path and not the mod_python
module search locations.

Graham

On 18/10/2007, apocalypznow <apocalypznow@gmail.com> wrote:
> Hello,
>
> Is there a way I can cause mod_python to execute only pyc (or pyo)
> files?  I have removed the .py files after manually compiling (using
> py_compile).  The file I want to execute is listed:
>
> -rwxr-xr-x 1 root root 374 2007-09-17 23:20 index.pyc
>
> My httpd.conf has the following:
> Alias /test2 "/var/www/mod_python/test2"
> <Directory /var/www/mod_python/test2>
>    AddHandler python-program .pyc
>    Options -MultiViews -Indexes
>    PythonHandler mod_python.publisher
>    PythonPath 'sys.path'
>    PythonDebug On
> </Directory>
>
> The index.py (which was removed) contains the following:
> def index(req):
>          return "Index hit."
> def hello(req):
>          return "Hello hit."
>
> When I execute http://some.url/test2/hello , I get the following:
> The requested URL /test2/hello was not found on this server.
>
> I am running mod_python 3.2.8 and Python2.3.5 on Apache 2.
>
> The reason I want to do this is to put a small obstacle to my client
> from easily seeing the source code.  I realise this can be decompiled
> but decompilation does not produce nice results to work from, hence it
> is enough of an obstacle.  I wish to protect my authoring rights through
>   this.
>
> Can someone please help?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From michiel at thingmajig.org  Thu Oct 18 10:00:52 2007
From: michiel at thingmajig.org (Michiel Sikma)
Date: Thu Oct 18 10:00:55 2007
Subject: [mod_python] Page fails to show up
Message-ID: <7E00A704-9F7C-4CEC-AC5D-2D123AE37F55@thingmajig.org>

Hi everyone,

I'm currently trying to make a sort of front-end for doing certain  
things with my Google Calendar account. I'm using mod_python on my  
own server to do it. This is my first time using it, and I keep  
running into a problem where certain code causes the page to not show  
anything at all.

For example, at some point I use a method called _PrintOwnCalendars()  
which executes a query and obtains an object with information about  
my calendars. When this method only contains a simple "return  
'test'" (say, as a test), it does just that. I can then print the  
string that I obtained from the method; it works fine. But when I use  
the actual code (which is "feed = self.cal_client.GetOwnCalendarsFeed 
()"), and then return an arbitrary string, it doesn't work. As in, it  
simply ceases to do anything. I get a blank page even if I return  
some string that's then printed or try to print messages after that.

I don't get an error message at all, either. Normally, when doing  
things that raise an exception, it shows the complete debugging info.  
But for some reason mod_python seems to return absolutely nothing in  
some cases.

I'm sure that the code not working must be because I'm using Google's  
API wrongly or something like that, but I'm wondering how it's  
possible that mod_python shows nothing on the screen instead of  
simply showing debugging info.

Thanks,
Michiel
From scorninpc at gmail.com  Thu Oct 18 12:32:27 2007
From: scorninpc at gmail.com (=?UTF-8?Q?=E2=99=82_Bruno_Pitteli_Gon=C3=A7alves?=)
Date: Thu Oct 18 12:32:33 2007
Subject: [mod_python] mod_python + vista
Message-ID: <3c7cb9240710180932p14dde64bt9046cbbad7ddf729@mail.gmail.com>

Hi all, my first mail ^^

so, I'm brazilian, and my english is not perfect ok?

my question is: how to install mod_python on windows vista.

i have installed Apache 2.2.6, and python 2.5, but when i will install
mod_python, show errors:

"can not create key value"

2 errors with this message.

i think in problem with permission with my user, but I'm administrator =(

thanks for all ^^

[]'s

-- 
Bruno Pitteli Gon?alves
scorninpc@gmail.com
(18) 9795-8674
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071018/3fa8000c/attachment.html
From scorninpc at gmail.com  Thu Oct 18 13:29:54 2007
From: scorninpc at gmail.com (=?UTF-8?Q?=E2=99=82_Bruno_Pitteli_Gon=C3=A7alves?=)
Date: Thu Oct 18 13:30:07 2007
Subject: [mod_python] Re: mod_python + vista
In-Reply-To: <3c7cb9240710180932p14dde64bt9046cbbad7ddf729@mail.gmail.com>
References: <3c7cb9240710180932p14dde64bt9046cbbad7ddf729@mail.gmail.com>
Message-ID: <3c7cb9240710181029y7adfe40eo71c758cee96ab9b7@mail.gmail.com>

hi all
i have solution to problem

go to user control, in panel control, and disable UAC

thanks ^^

On 10/18/07, ? Bruno Pitteli Gon?alves <scorninpc@gmail.com> wrote:
>
> Hi all, my first mail ^^
>
> so, I'm brazilian, and my english is not perfect ok?
>
> my question is: how to install mod_python on windows vista.
>
> i have installed Apache 2.2.6, and python 2.5, but when i will install
> mod_python, show errors:
>
> "can not create key value"
>
> 2 errors with this message.
>
> i think in problem with permission with my user, but I'm administrator =(
>
> thanks for all ^^
>
> []'s
>
> --
> Bruno Pitteli Gon?alves
> scorninpc@gmail.com
> (18) 9795-8674




-- 
Bruno Pitteli Gon?alves
scorninpc@gmail.com
(18) 9795-8674
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071018/2ed5a11e/attachment.html
From knordstrom at library.unt.edu  Thu Oct 18 18:38:24 2007
From: knordstrom at library.unt.edu (Kurt Nordstrom)
Date: Thu Oct 18 17:39:07 2007
Subject: [mod_python] Large File Upload Issues
Message-ID: <4717E060.80408@library.unt.edu>

We're working on a webapp that will need to receive, from its clients, 
fairly large files (it's an archival storage system).  The logical way 
to do this seems to be to use http PUT, with appropriate code on the 
server side to store the file to the proper place.

Borrowing and modifying some code posted back in '05 to this list by a 
Jeremy Jones, I have been playing with this:

from mod_python import apache

import os

def handler(request):
    #request.content_type = "text/plain"
    content_length = int(request.headers_in["Content-Length"])
    outPath = "/home/webtmp/upload_out.dat"
    outFile = open(outPath, "w")
    conn = request.connection
    i = 0
    buf = ""
    while i < content_length:
        c = conn.read(1)
        if c == "":
            break
        buf = buf + c
        if len(buf) >= 102400:           
            outFile.write(buf)
            outFile.flush()
            buf = ""
        i += 1
    if len(buf):
        outFile.write(buf)
        outFile.flush()
    outFile.close()
    talkBack = "Recieved %s bytes\n" % os.stat(outPath).st_size
    request.set_content_length(len(talkBack))
    request.write(talkBack)
    return apache.OK

Basically it reads bytes one at a time from the connection and puts them 
in a buffer, writing it to a file in 100k chunks (I'll probably up this, 
once it actually works the way I want it to).

This seems to be working fine...up to a point.  For some reason, it 
seems to stall out on files that are larger than 95 Megs in size.  It 
just freezes, no activity from client or server, until I kill the client 
(I'm using curl -T to PUT files on the system).

Any thoughts on what might be causing this?  I've already checked the 
apache config for timeout and request size limitations, which are well 
beyond anything that might cause this to be a problem.

-- 
===
Kurt Nordstrom
Programmer
University of North Texas Libraries
Digital Projects Unit
(940) 891-6747

From graham.dumpleton at gmail.com  Thu Oct 18 18:03:20 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Oct 18 18:03:24 2007
Subject: [mod_python] Large File Upload Issues
In-Reply-To: <4717E060.80408@library.unt.edu>
References: <4717E060.80408@library.unt.edu>
Message-ID: <88e286470710181503t290d95bfn1c221fc87367baa5@mail.gmail.com>

Read one byte at a time is exceedingly inefficient. Rather than
reinvent the wheel, perhaps look at Tramline.

  http://www.infrae.com/products/tramline

Personally I don't believe that Python is a good way of doing this and
for best performance it should be done as an Apache module in C code.
At least though the Tramline approach is more efficient than your
current approach.

Graham

On 19/10/2007, Kurt Nordstrom <knordstrom@library.unt.edu> wrote:
> We're working on a webapp that will need to receive, from its clients,
> fairly large files (it's an archival storage system).  The logical way
> to do this seems to be to use http PUT, with appropriate code on the
> server side to store the file to the proper place.
>
> Borrowing and modifying some code posted back in '05 to this list by a
> Jeremy Jones, I have been playing with this:
>
> from mod_python import apache
>
> import os
>
> def handler(request):
>     #request.content_type = "text/plain"
>     content_length = int(request.headers_in["Content-Length"])
>     outPath = "/home/webtmp/upload_out.dat"
>     outFile = open(outPath, "w")
>     conn = request.connection
>     i = 0
>     buf = ""
>     while i < content_length:
>         c = conn.read(1)
>         if c == "":
>             break
>         buf = buf + c
>         if len(buf) >= 102400:
>             outFile.write(buf)
>             outFile.flush()
>             buf = ""
>         i += 1
>     if len(buf):
>         outFile.write(buf)
>         outFile.flush()
>     outFile.close()
>     talkBack = "Recieved %s bytes\n" % os.stat(outPath).st_size
>     request.set_content_length(len(talkBack))
>     request.write(talkBack)
>     return apache.OK
>
> Basically it reads bytes one at a time from the connection and puts them
> in a buffer, writing it to a file in 100k chunks (I'll probably up this,
> once it actually works the way I want it to).
>
> This seems to be working fine...up to a point.  For some reason, it
> seems to stall out on files that are larger than 95 Megs in size.  It
> just freezes, no activity from client or server, until I kill the client
> (I'm using curl -T to PUT files on the system).
>
> Any thoughts on what might be causing this?  I've already checked the
> apache config for timeout and request size limitations, which are well
> beyond anything that might cause this to be a problem.
>
> --
> ===
> Kurt Nordstrom
> Programmer
> University of North Texas Libraries
> Digital Projects Unit
> (940) 891-6747
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Thu Oct 18 18:13:41 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Thu Oct 18 18:13:47 2007
Subject: [mod_python] Page fails to show up
In-Reply-To: <7E00A704-9F7C-4CEC-AC5D-2D123AE37F55@thingmajig.org>
References: <7E00A704-9F7C-4CEC-AC5D-2D123AE37F55@thingmajig.org>
Message-ID: <88e286470710181513x499e6ccfr7a726700193c7f69@mail.gmail.com>

What do you have PythonHandler set to? In other words, are you using
something like mod_python.publisher or your own custom handler? Can
you shrink your code to the minimal required to show the problem and
post it?

Also, have you used apache.log_error() function to log messages at
ever stage in your code to see which path it is taking? In other
words, do some basic debugging rather than assume what is actually
being called and where in the code it gets to.

Graham

On 19/10/2007, Michiel Sikma <michiel@thingmajig.org> wrote:
> Hi everyone,
>
> I'm currently trying to make a sort of front-end for doing certain
> things with my Google Calendar account. I'm using mod_python on my
> own server to do it. This is my first time using it, and I keep
> running into a problem where certain code causes the page to not show
> anything at all.
>
> For example, at some point I use a method called _PrintOwnCalendars()
> which executes a query and obtains an object with information about
> my calendars. When this method only contains a simple "return
> 'test'" (say, as a test), it does just that. I can then print the
> string that I obtained from the method; it works fine. But when I use
> the actual code (which is "feed = self.cal_client.GetOwnCalendarsFeed
> ()"), and then return an arbitrary string, it doesn't work. As in, it
> simply ceases to do anything. I get a blank page even if I return
> some string that's then printed or try to print messages after that.
>
> I don't get an error message at all, either. Normally, when doing
> things that raise an exception, it shows the complete debugging info.
> But for some reason mod_python seems to return absolutely nothing in
> some cases.
>
> I'm sure that the code not working must be because I'm using Google's
> API wrongly or something like that, but I'm wondering how it's
> possible that mod_python shows nothing on the screen instead of
> simply showing debugging info.
>
> Thanks,
> Michiel
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From apocalypznow at gmail.com  Fri Oct 19 00:36:58 2007
From: apocalypznow at gmail.com (apocalypznow)
Date: Fri Oct 19 00:36:59 2007
Subject: [mod_python] import requires apache restart?
Message-ID: <ff9c8s$m94$1@ger.gmane.org>

I've noticed something, and I wonder if someone could please confirm if 
this is the correct behaviour.  In my httpd.conf file, I've included the 
path to a location where my python files are using the PythonPath 
directive.  In my handler code file, I issue a standard "import" 
statement rather than the mod_python (or for that matter, 
vampire.importModule) versions of the import.  To give light protection 
  (against authoring infringement) to my source files, after I 
py_compile them, I delete the original .py files.

Even after changing the source of the files in the PythonPath, and after 
py_compiling them, and after removing the original .py files, I found 
that an Apache restart is required for the changes to be effected.  Does 
this make sense?  If that is the case, is there some copy of the python 
file being made by mod_python somewhere?

From apocalypznow at gmail.com  Fri Oct 19 00:47:14 2007
From: apocalypznow at gmail.com (apocalypznow)
Date: Fri Oct 19 00:47:24 2007
Subject: [mod_python] Re: import requires apache restart?
In-Reply-To: <ff9c8s$m94$1@ger.gmane.org>
References: <ff9c8s$m94$1@ger.gmane.org>
Message-ID: <ff9cs3$m94$2@ger.gmane.org>

I forgot to add these things:
mod_python version 3.2.8
python 2.3.5
Apache 2

I'm using modvampire.  I've also found the same behaviour with 
mod_python.publisher.


apocalypznow wrote:
> I've noticed something, and I wonder if someone could please confirm if 
> this is the correct behaviour.  In my httpd.conf file, I've included the 
> path to a location where my python files are using the PythonPath 
> directive.  In my handler code file, I issue a standard "import" 
> statement rather than the mod_python (or for that matter, 
> vampire.importModule) versions of the import.  To give light protection 
>  (against authoring infringement) to my source files, after I py_compile 
> them, I delete the original .py files.
> 
> Even after changing the source of the files in the PythonPath, and after 
> py_compiling them, and after removing the original .py files, I found 
> that an Apache restart is required for the changes to be effected.  Does 
> this make sense?  If that is the case, is there some copy of the python 
> file being made by mod_python somewhere?

From graham.dumpleton at gmail.com  Fri Oct 19 00:54:37 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Oct 19 00:54:43 2007
Subject: [mod_python] import requires apache restart?
In-Reply-To: <ff9c8s$m94$1@ger.gmane.org>
References: <ff9c8s$m94$1@ger.gmane.org>
Message-ID: <88e286470710182154r61378053pd9f1643f3e12afcf@mail.gmail.com>

This is quite normal behaviour. Standard Python modules and packages
are not candidates for reloading. Read the documentation for
import_module() in:

  http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html

This explains the line of separation between when mod_python can and
can not automatically reload modules.

Graham

On 19/10/2007, apocalypznow <apocalypznow@gmail.com> wrote:
> I've noticed something, and I wonder if someone could please confirm if
> this is the correct behaviour.  In my httpd.conf file, I've included the
> path to a location where my python files are using the PythonPath
> directive.  In my handler code file, I issue a standard "import"
> statement rather than the mod_python (or for that matter,
> vampire.importModule) versions of the import.  To give light protection
>   (against authoring infringement) to my source files, after I
> py_compile them, I delete the original .py files.
>
> Even after changing the source of the files in the PythonPath, and after
> py_compiling them, and after removing the original .py files, I found
> that an Apache restart is required for the changes to be effected.  Does
> this make sense?  If that is the case, is there some copy of the python
> file being made by mod_python somewhere?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Fri Oct 19 01:03:03 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Oct 19 01:03:10 2007
Subject: [mod_python] Re: import requires apache restart?
In-Reply-To: <ff9cs3$m94$2@ger.gmane.org>
References: <ff9c8s$m94$1@ger.gmane.org> <ff9cs3$m94$2@ger.gmane.org>
Message-ID: <88e286470710182203l39d9e435n65e0044d3ba03060@mail.gmail.com>

Even in mod_python 3.2.8, standard Python modules and packages are not
candidates for automatic reloading when using 'import'. Further, in
mod_python 3.2.8 the mod_python mechanism for reloading module
automatically has a lot of problems and you are really encouraged to
upgrade to mod_python 3.3.1. See:

  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken

Graham

On 19/10/2007, apocalypznow <apocalypznow@gmail.com> wrote:
> I forgot to add these things:
> mod_python version 3.2.8
> python 2.3.5
> Apache 2
>
> I'm using modvampire.  I've also found the same behaviour with
> mod_python.publisher.
>
>
> apocalypznow wrote:
> > I've noticed something, and I wonder if someone could please confirm if
> > this is the correct behaviour.  In my httpd.conf file, I've included the
> > path to a location where my python files are using the PythonPath
> > directive.  In my handler code file, I issue a standard "import"
> > statement rather than the mod_python (or for that matter,
> > vampire.importModule) versions of the import.  To give light protection
> >  (against authoring infringement) to my source files, after I py_compile
> > them, I delete the original .py files.
> >
> > Even after changing the source of the files in the PythonPath, and after
> > py_compiling them, and after removing the original .py files, I found
> > that an Apache restart is required for the changes to be effected.  Does
> > this make sense?  If that is the case, is there some copy of the python
> > file being made by mod_python somewhere?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From apocalypznow at gmail.com  Fri Oct 19 01:04:54 2007
From: apocalypznow at gmail.com (apocalypznow)
Date: Fri Oct 19 01:04:55 2007
Subject: [mod_python] Re: import requires apache restart?
In-Reply-To: <88e286470710182154r61378053pd9f1643f3e12afcf@mail.gmail.com>
References: <ff9c8s$m94$1@ger.gmane.org>
	<88e286470710182154r61378053pd9f1643f3e12afcf@mail.gmail.com>
Message-ID: <ff9dt8$pf5$1@ger.gmane.org>

But does apache.import_module() handle .pyc or .pyo files?


Graham Dumpleton wrote:
> This is quite normal behaviour. Standard Python modules and packages
> are not candidates for reloading. Read the documentation for
> import_module() in:
> 
>   http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
> 
> This explains the line of separation between when mod_python can and
> can not automatically reload modules.
> 
> Graham
> 
> On 19/10/2007, apocalypznow <apocalypznow@gmail.com> wrote:
> 
>>I've noticed something, and I wonder if someone could please confirm if
>>this is the correct behaviour.  In my httpd.conf file, I've included the
>>path to a location where my python files are using the PythonPath
>>directive.  In my handler code file, I issue a standard "import"
>>statement rather than the mod_python (or for that matter,
>>vampire.importModule) versions of the import.  To give light protection
>>  (against authoring infringement) to my source files, after I
>>py_compile them, I delete the original .py files.
>>
>>Even after changing the source of the files in the PythonPath, and after
>>py_compiling them, and after removing the original .py files, I found
>>that an Apache restart is required for the changes to be effected.  Does
>>this make sense?  If that is the case, is there some copy of the python
>>file being made by mod_python somewhere?
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From graham.dumpleton at gmail.com  Fri Oct 19 01:21:45 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Oct 19 01:21:50 2007
Subject: [mod_python] Re: import requires apache restart?
In-Reply-To: <ff9dt8$pf5$1@ger.gmane.org>
References: <ff9c8s$m94$1@ger.gmane.org>
	<88e286470710182154r61378053pd9f1643f3e12afcf@mail.gmail.com>
	<ff9dt8$pf5$1@ger.gmane.org>
Message-ID: <88e286470710182221n6914fa92j173577a7b803dc9d@mail.gmail.com>

On 19/10/2007, apocalypznow <apocalypznow@gmail.com> wrote:
> But does apache.import_module() handle .pyc or .pyo files?

In mod_python 3.3.1 the answer is no in all cases.

In mod_python 3.2.X, mod_python.publisher didn't use
apache.import_module() and used its own module importer which didn't
generate or use .pyc or .pyo files.

In mod_python 3.2.X and older versions, how apache.import_module()
used .pyc/.pyo files gets a bit messy as it was broken and thus not
reliable in the way it dealt with .pyc/.pyo files. I'd rather not have
to go back and work out the ways it was wrong again just to explain
it. Just trust me when I say to use the latest version, it is more
predictable.

In terms of what you are trying to do, yes you can supply just
.pyc/.pyo files, but they must be installed as part of a package or as
a module on sys.path somewhere. If you need to change those files, you
must restart Apache, they will not be reloaded automatically. You also
shouldn't rely on using the base Python 'reload' mechanism either as
it doesn't entirely always work either and why it is being removed in
Python 3.0.

Graham

> Graham Dumpleton wrote:
> > This is quite normal behaviour. Standard Python modules and packages
> > are not candidates for reloading. Read the documentation for
> > import_module() in:
> >
> >   http://www.modpython.org/live/current/doc-html/pyapi-apmeth.html
> >
> > This explains the line of separation between when mod_python can and
> > can not automatically reload modules.
> >
> > Graham
> >
> > On 19/10/2007, apocalypznow <apocalypznow@gmail.com> wrote:
> >
> >>I've noticed something, and I wonder if someone could please confirm if
> >>this is the correct behaviour.  In my httpd.conf file, I've included the
> >>path to a location where my python files are using the PythonPath
> >>directive.  In my handler code file, I issue a standard "import"
> >>statement rather than the mod_python (or for that matter,
> >>vampire.importModule) versions of the import.  To give light protection
> >>  (against authoring infringement) to my source files, after I
> >>py_compile them, I delete the original .py files.
> >>
> >>Even after changing the source of the files in the PythonPath, and after
> >>py_compiling them, and after removing the original .py files, I found
> >>that an Apache restart is required for the changes to be effected.  Does
> >>this make sense?  If that is the case, is there some copy of the python
> >>file being made by mod_python somewhere?
> >>
> >>_______________________________________________
> >>Mod_python mailing list
> >>Mod_python@modpython.org
> >>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From tmikk at umn.edu  Fri Oct 19 15:10:27 2007
From: tmikk at umn.edu (Tonu Mikk)
Date: Fri Oct 19 15:10:44 2007
Subject: [mod_python] Apache Virtual Host and mod-python error
Message-ID: <47190123.2040300@umn.edu>

I am getting an error when using Apache (v 2.0) Virtual Host and 
Mod-python (v3.2.10).

Mod_python error: "PythonHandler roundup.cgi.apache"
Traceback (most recent call last):
 File "C:\Python24\lib\site-packages\mod_python\apache.py", line 276, in
HandlerDispatch
   newpath = eval(pathstring)
 File "", line 1
   /Python24/python.exe
   ^
SyntaxError: invalid syntax

When I refresh the page, the error disappears, and the page is 
displayed.  The error tends to happen consistently when I re-start 
Apache service and go to the page for the first time.  I have modified 
the line in Virtual host directive to be C:/Python24/python.exe, but the 
same behavior happens.  I tried adding TimeOut 300 and KeepAliveTimeOut 
15 setting to the Virtual Host directives, but they don't help with it 
either.  Any suggestions on what I could try to remedy this?

Thank you,
Tonu


From mail.python.org at roots.id.au  Sat Oct 20 04:05:51 2007
From: mail.python.org at roots.id.au (Aaron Roots)
Date: Sat Oct 20 04:06:01 2007
Subject: [mod_python] Apache Virtual Host and mod-python error
In-Reply-To: <47190123.2040300@umn.edu>
References: <47190123.2040300@umn.edu>
Message-ID: <4719B6DF.4000309@roots.id.au>

What do you have in the apache VH config?


Tonu Mikk wrote:
> I am getting an error when using Apache (v 2.0) Virtual Host and 
> Mod-python (v3.2.10).
>
> Mod_python error: "PythonHandler roundup.cgi.apache"
> Traceback (most recent call last):
> File "C:\Python24\lib\site-packages\mod_python\apache.py", line 276, in
> HandlerDispatch
>   newpath = eval(pathstring)
> File "", line 1
>   /Python24/python.exe
>   ^
> SyntaxError: invalid syntax
>
> When I refresh the page, the error disappears, and the page is 
> displayed.  The error tends to happen consistently when I re-start 
> Apache service and go to the page for the first time.  I have modified 
> the line in Virtual host directive to be C:/Python24/python.exe, but 
> the same behavior happens.  I tried adding TimeOut 300 and 
> KeepAliveTimeOut 15 setting to the Virtual Host directives, but they 
> don't help with it either.  Any suggestions on what I could try to 
> remedy this?
>
> Thank you,
> Tonu
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From graham.dumpleton at gmail.com  Sat Oct 20 05:19:26 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Sat Oct 20 05:19:32 2007
Subject: [mod_python] Apache Virtual Host and mod-python error
In-Reply-To: <47190123.2040300@umn.edu>
References: <47190123.2040300@umn.edu>
Message-ID: <88e286470710200219l4efefec3r90e5e71dff8f6cb9@mail.gmail.com>

On 20/10/2007, Tonu Mikk <tmikk@umn.edu> wrote:
> I am getting an error when using Apache (v 2.0) Virtual Host and
> Mod-python (v3.2.10).
>
> Mod_python error: "PythonHandler roundup.cgi.apache"
> Traceback (most recent call last):
>  File "C:\Python24\lib\site-packages\mod_python\apache.py", line 276, in
> HandlerDispatch
>    newpath = eval(pathstring)
>  File "", line 1
>    /Python24/python.exe
>    ^
> SyntaxError: invalid syntax
>
> When I refresh the page, the error disappears, and the page is
> displayed.  The error tends to happen consistently when I re-start
> Apache service and go to the page for the first time.  I have modified
> the line in Virtual host directive to be C:/Python24/python.exe, but the
> same behavior happens.

What line? There should never be a need with mod_python to list the
path of the Python executable in the Apache configuration.

As someone else mentioned, post your snippet of Apache configuration
where you setup your mod_python handler. Don't post the whole
configuration, just the relevant snippet.

Graham

> I tried adding TimeOut 300 and KeepAliveTimeOut
> 15 setting to the Virtual Host directives, but they don't help with it
> either.  Any suggestions on what I could try to remedy this?
>
> Thank you,
> Tonu
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From matusis at yahoo.com  Tue Oct 23 03:28:54 2007
From: matusis at yahoo.com (Alec Matusis)
Date: Tue Oct 23 03:29:04 2007
Subject: [mod_python] installation problem: --prefix is ignored for Python
	libraries ?
Message-ID: <00e801c81546$5e757870$1b606950$@com>

We are using encap system in our production server, and I am trying to
upgrade to 3.3.1

I want to install Python libraries not in site-packages, but in
/usr/local/encap/mod_python-3.3.1
and then run encap, which would link them into site-packages. 
So I configure:

web10:/path/sys/src/mod_python-3.3.1 # ./configure
--prefix=/usr/local/encap/mod_python-3.3.1
--with-apxs=/usr/local/encap/httpd-2.2.6/bin/apxs
--with-python=/usr/local/bin/python --with-max-locks=64
#make
#make install
And it directly installs instead into
/usr/local/encap/Python-2.4.1/lib/python2.4/site-packages, ignoring my
configuration prefix:
"
.....
creating
/usr/local/encap/Python-2.4.1/lib/python2.4/site-packages/mod_python
copying build/lib.linux-x86_64-2.4/mod_python/Cookie.py ->
/usr/local/encap/Python-2.4.1/lib/python2.4/site-packages/mod_python
.....
"

How can I force it to install into /usr/local/encap/mod_python-3.3.1 and not
into site-packages?

Thanks.


From graham.dumpleton at gmail.com  Tue Oct 23 07:10:03 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 23 07:10:09 2007
Subject: [mod_python] installation problem: --prefix is ignored for Python
	libraries ?
In-Reply-To: <00e801c81546$5e757870$1b606950$@com>
References: <00e801c81546$5e757870$1b606950$@com>
Message-ID: <88e286470710230410g4fdae1ej31f99b206fd6b45@mail.gmail.com>

You would have to modify generated dist/Makefile and add extra
arguments when 'python setup.py install' is being done. The
configure/makefile structure of mod_python doesn't allow prefix to be
defined so as to install in alternate location.

Graham

On 23/10/2007, Alec Matusis <matusis@yahoo.com> wrote:
> We are using encap system in our production server, and I am trying to
> upgrade to 3.3.1
>
> I want to install Python libraries not in site-packages, but in
> /usr/local/encap/mod_python-3.3.1
> and then run encap, which would link them into site-packages.
> So I configure:
>
> web10:/path/sys/src/mod_python-3.3.1 # ./configure
> --prefix=/usr/local/encap/mod_python-3.3.1
> --with-apxs=/usr/local/encap/httpd-2.2.6/bin/apxs
> --with-python=/usr/local/bin/python --with-max-locks=64
> #make
> #make install
> And it directly installs instead into
> /usr/local/encap/Python-2.4.1/lib/python2.4/site-packages, ignoring my
> configuration prefix:
> "
> .....
> creating
> /usr/local/encap/Python-2.4.1/lib/python2.4/site-packages/mod_python
> copying build/lib.linux-x86_64-2.4/mod_python/Cookie.py ->
> /usr/local/encap/Python-2.4.1/lib/python2.4/site-packages/mod_python
> .....
> "
>
> How can I force it to install into /usr/local/encap/mod_python-3.3.1 and not
> into site-packages?
>
> Thanks.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From graham.dumpleton at gmail.com  Tue Oct 23 07:35:32 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 23 07:35:58 2007
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <001101c81568$1780acb0$b501020a@api104b4843840>
References: <008601c80fec$c25618e0$8201020a@api104b4843840>
	<88e286470710160528l48581551i353f3f5aac88c896@mail.gmail.com>
	<003e01c810b5$8ead34a0$8201020a@api104b4843840>
	<88e286470710171522r48f4d0a4kffeaf2d0b99aef49@mail.gmail.com>
	<001101c81568$1780acb0$b501020a@api104b4843840>
Message-ID: <88e286470710230435s31ffb756vf0ca6f7e1b23c3a1@mail.gmail.com>

What operating system are you on? Does that system run SELinux extensions?

Bar starting to disable other Apache modules to see if there is a
conflict, or doing a complete clean of Apache source and recompiling
everything, include other third party modules, not sure what else to
suggest.

Graham

On 23/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session mutexes
> based on 6 max processes and 25 max threads.
> [Thu Oct 18 07:37:38 2007] [notice] mod_python: using mutex_directory /tmp
> [Thu Oct 18 07:37:38 2007] [notice] Apache/2.0.59 (Unix) DAV/2 mod_jk/1.2.23
> mod_python/3.3.1 Python/2.5.1 configured -- resuming normal operations
> [Thu Oct 18 07:37:38 2007] [info] Server built: Oct 11 2007 13:49:08
> [Thu Oct 18 07:37:38 2007] [debug] worker.c(1676): AcceptMutex: fcntl
> (default: fcntl)
>
> So I tried "AcceptMutex flock"
>
> And I got this:
>
> Syntax error on line 165 of /usr/local/apache2/conf/httpd.conf:
> flock is an invalid mutex mechanism; Valid accept mutexes for this platform
> and MPM are: default, fcntl, sysvsem, posixsem, pthread.
>
> I also tried all of the lock mechanisms available. (fcntl, sysvsem,
> posixsem, pthread) nothing changed with the use of the different
> locking mechanisms
>
> Here is my apr.h info:
>
> #define APR_USE_FLOCK_SERIALIZE           0
> #define APR_USE_SYSVSEM_SERIALIZE         0
> #define APR_USE_POSIXSEM_SERIALIZE        0
> #define APR_USE_FCNTL_SERIALIZE           1
> #define APR_USE_PROC_PTHREAD_SERIALIZE    0
> #define APR_USE_PTHREAD_SERIALIZE         1
>
> #define APR_HAS_FLOCK_SERIALIZE           0
> #define APR_HAS_SYSVSEM_SERIALIZE         1
> #define APR_HAS_POSIXSEM_SERIALIZE        1
> #define APR_HAS_FCNTL_SERIALIZE           1
> #define APR_HAS_PROC_PTHREAD_SERIALIZE    1
> #define APR_PROCESS_LOCK_IS_GLOBAL        0
>
> Does this help at all?
> Is there anything else I can look at or try?
>
>
> Graham, Thanks so much for your help. I really really appreciate it
>
> --Mike
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Wednesday, October 17, 2007 5:23 PM
> To: Michael Robokoff
> Cc: mod_python
> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>
> On 17/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> > Graham, Thanks so much for your help, unfortunately I don't think it
> > made any difference. I don't see any real change in error messages.
> > Should I check on how to increase the semaphores at the system level?
>
> What do the messages in the Apache error log indicate about how many
> mutexes mod_python is actually using? The directive must be in the
> correct context else it is ignored.
>
> > [Tue Oct 16 06:36:49 2007] [warn] (45)Deadlock situation detected/avoided:
> > Failed to acquire global mutex lock at index 2
>
> This error message possibly indicates the problem as being due to
> something else.
>
> One suggestion is to set the Apache configuration directive AcceptMutex.
>
>   http://httpd.apache.org/docs/2.2/mod/mpm_common.html#acceptmutex
>
> Set it to:
>
>   AcceptMutex flock
>
> This may not change the lock type used by mod_python though because of
> it how it wrongly indicates which type of lock to use:
>
>   https://issues.apache.org/jira/browse/MODPYTHON-202
>
> It may release more semaphores though for use.
>
> BTW, in apr.h in Apache include directory, what are the following set
> to for your system.
>
> #define APR_USE_FLOCK_SERIALIZE           0
> #define APR_USE_SYSVSEM_SERIALIZE         1
> #define APR_USE_POSIXSEM_SERIALIZE        0
> #define APR_USE_FCNTL_SERIALIZE           0
> #define APR_USE_PROC_PTHREAD_SERIALIZE    0
> #define APR_USE_PTHREAD_SERIALIZE         1
>
> #define APR_HAS_FLOCK_SERIALIZE           1
> #define APR_HAS_SYSVSEM_SERIALIZE         1
> #define APR_HAS_POSIXSEM_SERIALIZE        1
> #define APR_HAS_FCNTL_SERIALIZE           1
> #define APR_HAS_PROC_PTHREAD_SERIALIZE    0
>
> Graham
>
> > --Mike
> >
> >
> > -----Original Message-----
> > From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> > Sent: Tuesday, October 16, 2007 7:29 AM
> > To: Michael Robokoff
> > Cc: mod_python
> > Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
> >
> > Your system has a low number of sysvsem's configured and it is running
> > out. Whether you use prefork or worker shouldn't matter. You can
> > change the number that mod_python uses, setting it to a lower value
> > using the directive:
> >
> >   PythonOption mod_python.mutex_locks 4
> >
> > Must be defined at global scope in Apache configuration. Check Apache
> > error logs to see if it works.
> >
> > Note, you must be using mod_python 3.3.1.
> >
> > Graham
> >
> > On 16/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> > >
> > >
> > >
> > >
> > > Hello,
> > >
> > > I just changed from running apache configured with "mpm=prefork" to
> > > "mpm=worker".
> > >
> > > Everything worked with the "prefork" attribute. We decided to change
> over
> > to
> > > multi threading
> > >
> > > to test performance, so I recompiled apache with the "worker" attribute.
> > Now
> > > we get the error
> > >
> > >
> > >
> > > [error] [client]   File
> > > "/usr/local/lib/python2.5/site-packages/mod_python/Session.py",
> > > line 280, in lock\n
> > > _apache._global_lock(self._req.server, self._sid), referer:
> > > http://......
> > >
> > >
> > >
> > > "ValueError: Failed to acquire global mutex lock" referer: http:...
> > >
> > >
> > >
> > > Can you please give me some direction on this.
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > > Michael Robokoff
> > >
> > > Senior Systems Administrator
> > >
> > > API Outsourcing
> > >
> > >
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> >
> >
> >
> >
>
>
>
From graham.dumpleton at gmail.com  Tue Oct 23 07:39:55 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 23 07:40:02 2007
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <001101c81568$1780acb0$b501020a@api104b4843840>
References: <008601c80fec$c25618e0$8201020a@api104b4843840>
	<88e286470710160528l48581551i353f3f5aac88c896@mail.gmail.com>
	<003e01c810b5$8ead34a0$8201020a@api104b4843840>
	<88e286470710171522r48f4d0a4kffeaf2d0b99aef49@mail.gmail.com>
	<001101c81568$1780acb0$b501020a@api104b4843840>
Message-ID: <88e286470710230439u613e430k3f0a085ec25b030a@mail.gmail.com>

On 23/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session mutexes
> based on 6 max processes and 25 max threads.

BTW, what did you end up setting mod_python.mutex_locks to? If you use
4 like I said, then it can't have been in correct part of Apache
configuration, outside of all VirtualHost, as error log still shows '8
session mutexes'.

if you can't get this to work, you might rebuild mod_python and
specific --with-max-locks=4 option to configure to force lower value
to be compiled in.

Graham
From tmikk at umn.edu  Tue Oct 23 11:14:43 2007
From: tmikk at umn.edu (Tonu Mikk)
Date: Tue Oct 23 11:14:53 2007
Subject: [mod_python] Apache Virtual Host and mod-python error
In-Reply-To: <88e286470710200219l4efefec3r90e5e71dff8f6cb9@mail.gmail.com>
References: <47190123.2040300@umn.edu>
	<88e286470710200219l4efefec3r90e5e71dff8f6cb9@mail.gmail.com>
Message-ID: <471E0FE3.4000909@umn.edu>

Thanks for your replies!  I commented out the offending line and all is 
working well now.  See below my original config. 

Graham Dumpleton wrote:
> On 20/10/2007, Tonu Mikk <tmikk@umn.edu> wrote:
>   
>> I am getting an error when using Apache (v 2.0) Virtual Host and
>> Mod-python (v3.2.10).
>>
>> Mod_python error: "PythonHandler roundup.cgi.apache"
>> Traceback (most recent call last):
>>  File "C:\Python24\lib\site-packages\mod_python\apache.py", line 276, in
>> HandlerDispatch
>>    newpath = eval(pathstring)
>>  File "", line 1
>>    /Python24/python.exe
>>    ^
>> SyntaxError: invalid syntax
>>
>> When I refresh the page, the error disappears, and the page is
>> displayed.  The error tends to happen consistently when I re-start
>> Apache service and go to the page for the first time.  I have modified
>> the line in Virtual host directive to be C:/Python24/python.exe, but the
>> same behavior happens.
>>     
>
> What line? There should never be a need with mod_python to list the
> path of the Python executable in the Apache configuration.
>   
The offending line was
PythonPath      C:/Python24/python.exe

> As someone else mentioned, post your snippet of Apache configuration
> where you setup your mod_python handler. Don't post the whole
> configuration, just the relevant snippet.
>
> Graham
>   
<VirtualHost mydomain.domain.rootdomain>
        ServerName      mydomain.domain.rootdomain
        ServerAdmin     me@mydomain.domain.rootdomain

        AliasMatch ^/@@file(.*) C:/roundup/tracker/html$1
        AliasMatch ^/(?!@@file)(.*) C:/roundup/tracker/html/dummy.py/$1

        DocumentRoot    C:/roundup/tracker/html
        <Directory      C:/roundup/*>
                # UMN only IP access
                AllowOverride None
                Options None
                Order allow,deny
                 </Directory>

        AddHandler      python-program .py
        PythonOptimize  On
#        PythonPath      C:/Python24/python.exe
        PythonHandler   roundup.cgi.apache
        PythonOption    TrackerHome     /roundup/tracker
</VirtualHost>
>   
Tonu
From graham.dumpleton at gmail.com  Tue Oct 23 20:07:37 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 23 20:07:44 2007
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <003701c81581$acc49cf0$b501020a@api104b4843840>
References: <008601c80fec$c25618e0$8201020a@api104b4843840>
	<88e286470710160528l48581551i353f3f5aac88c896@mail.gmail.com>
	<003e01c810b5$8ead34a0$8201020a@api104b4843840>
	<88e286470710171522r48f4d0a4kffeaf2d0b99aef49@mail.gmail.com>
	<001101c81568$1780acb0$b501020a@api104b4843840>
	<88e286470710230439u613e430k3f0a085ec25b030a@mail.gmail.com>
	<003701c81581$acc49cf0$b501020a@api104b4843840>
Message-ID: <88e286470710231707x60a1586cj9b8129f5bbfab2e@mail.gmail.com>

If you run 'ipcs' what is the output? Something must be using all the
semaphores, can't be anything else.

Graham

On 24/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> Ok the directive did take effect as the log entry below shows:
>
> [Tue Oct 23 07:20:32 2007] [notice] mod_python: Creating 4 session mutexes
> based on 6 max processes and 25 max threads.
> [Tue Oct 23 07:20:32 2007] [notice] mod_python: using mutex_directory /tmp
>
>
> Still see this however:
>
> ValueError: Failed to acquire global mutex lock
>
> I will try recompiling with the option you mentioned and see what happens.
>
>
> --Mike
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Tuesday, October 23, 2007 6:40 AM
> To: Michael Robokoff
> Cc: mod_python
> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>
> On 23/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> > [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session mutexes
> > based on 6 max processes and 25 max threads.
>
> BTW, what did you end up setting mod_python.mutex_locks to? If you use
> 4 like I said, then it can't have been in correct part of Apache
> configuration, outside of all VirtualHost, as error log still shows '8
> session mutexes'.
>
> if you can't get this to work, you might rebuild mod_python and
> specific --with-max-locks=4 option to configure to force lower value
> to be compiled in.
>
> Graham
>
>
>
From habnabit at gmail.com  Tue Oct 23 23:48:53 2007
From: habnabit at gmail.com (Aaron Gallagher)
Date: Tue Oct 23 23:49:17 2007
Subject: [mod_python] Storing large amounts of data in RAM
Message-ID: <E05F0386-F4D8-4EFB-9E52-C30782D99E48@gmail.com>

I'm working on a web-application port of a text game, and I'm just  
wondering what the best way for me to implement this is.

Game data is stored in a single python object which is pickleable.  
I'm not sure of the exact size of the data in memory, but the pickled  
files are between 600 and 900k uncompressed. I would like to store  
each object in memory rather than saving and loading the object for  
each request. So, what is the best way to do this? I'm pretty sure I  
remember from earlier posts that it's not possible to have memory  
that's shared between multiple interpreters. Is it possible to only  
use one interpreter and keep all of the data objects in that  
interpreter?

Also, other than having a cron job send an HTTP request to the server  
intermittently, is there a way to have data objects save themselves  
to a file if their player hasn't made a request in a certain amount  
of time?

Aaron Gallagher
<habnabit@gmail.com>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071023/fedf7d0a/attachment.html
From graham.dumpleton at gmail.com  Wed Oct 24 00:14:20 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 24 00:14:25 2007
Subject: [mod_python] Storing large amounts of data in RAM
In-Reply-To: <E05F0386-F4D8-4EFB-9E52-C30782D99E48@gmail.com>
References: <E05F0386-F4D8-4EFB-9E52-C30782D99E48@gmail.com>
Message-ID: <88e286470710232114i553693b2x6a1df82ac39f3cf2@mail.gmail.com>

On 24/10/2007, Aaron Gallagher <habnabit@gmail.com> wrote:
>
> I'm working on a web-application port of a text game, and I'm just wondering
> what the best way for me to implement this is.
>
> Game data is stored in a single python object which is pickleable. I'm not
> sure of the exact size of the data in memory, but the pickled files are
> between 600 and 900k uncompressed. I would like to store each object in
> memory rather than saving and loading the object for each request. So, what
> is the best way to do this? I'm pretty sure I remember from earlier posts
> that it's not possible to have memory that's shared between multiple
> interpreters. Is it possible to only use one interpreter and keep all of the
> data objects in that interpreter?

I think you mean share between the same named interpreter in different
processes such as would be used on UNIX systems when using Apache. On
Windows, there is only one process so no problem there.

So, unless you are going to use Windows only, then the multiprocess
nature of Apache will cause you issues.

One option, depending on the complexity of your data, may be to use
memcached and store data in shared memory accessible to all.

> Also, other than having a cron job send an HTTP request to the server
> intermittently, is there a way to have data objects save themselves to a
> file if their player hasn't made a request in a certain amount of time?

You could use a distinct thread created the first time a request comes
in for the application. This though is also problematic in a
multiprocess web server as although one process may not have had a
request for a while, others may have.

If you really need everything to be done in one process, one option is
to run a backend Python server process which embeds an XML-RPC server
and have all your web interfaces use XML-RPC requests to the game
engine in that to do things.

Another option is to not use mod_python, instead base your web
application on a framework capable of being hosted on any WSGI server.
Then run this in standalone Python server process and use Apache to
proxy to it.

Basing it on a WSGI server, you could also then use daemon mode of
mod_wsgi but run with a single managed process. That way you don't
have the hassle of having to work out how to run up the backend
process as Apache will manage that for you.

For further information on data sharing issues in relation to
process/threading model of Apache see:

  http://code.google.com/p/modwsgi/wiki/ProcessesAndThreading

This talks about it in the context of mod_wsgi, but is more up to date
and accurate than older version of document I did for mod_python.

Graham
From habnabit at gmail.com  Wed Oct 24 00:23:04 2007
From: habnabit at gmail.com (Aaron Gallagher)
Date: Wed Oct 24 00:23:32 2007
Subject: [mod_python] Storing large amounts of data in RAM
In-Reply-To: <88e286470710232114i553693b2x6a1df82ac39f3cf2@mail.gmail.com>
References: <E05F0386-F4D8-4EFB-9E52-C30782D99E48@gmail.com>
	<88e286470710232114i553693b2x6a1df82ac39f3cf2@mail.gmail.com>
Message-ID: <636DC945-6D7A-4513-9C5B-A415A34EE3F8@gmail.com>

On Oct 23, 2007, at 9:14 PM, Graham Dumpleton wrote:

> If you really need everything to be done in one process, one option is
> to run a backend Python server process which embeds an XML-RPC server
> and have all your web interfaces use XML-RPC requests to the game
> engine in that to do things.
>
> Another option is to not use mod_python, instead base your web
> application on a framework capable of being hosted on any WSGI server.
> Then run this in standalone Python server process and use Apache to
> proxy to it.
>
> Basing it on a WSGI server, you could also then use daemon mode of
> mod_wsgi but run with a single managed process. That way you don't
> have the hassle of having to work out how to run up the backend
> process as Apache will manage that for you.
>
> For further information on data sharing issues in relation to
> process/threading model of Apache see:
>
>   http://code.google.com/p/modwsgi/wiki/ProcessesAndThreading
>
> This talks about it in the context of mod_wsgi, but is more up to date
> and accurate than older version of document I did for mod_python.

I think either of those solutions sounds good. I'm leaning toward the  
WSGI option, because then I don't have to have a backend. I've never  
done anything with mod_wsgi before, so do you have a good all- 
inclusive tutorial for WSGI work with python?

Aaron Gallagher
<habnabit@gmail.com>
From graham.dumpleton at gmail.com  Wed Oct 24 00:33:27 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 24 00:33:34 2007
Subject: [mod_python] Storing large amounts of data in RAM
In-Reply-To: <636DC945-6D7A-4513-9C5B-A415A34EE3F8@gmail.com>
References: <E05F0386-F4D8-4EFB-9E52-C30782D99E48@gmail.com>
	<88e286470710232114i553693b2x6a1df82ac39f3cf2@mail.gmail.com>
	<636DC945-6D7A-4513-9C5B-A415A34EE3F8@gmail.com>
Message-ID: <88e286470710232133u27ef1fd3t62ab170f9dae4c55@mail.gmail.com>

On 24/10/2007, Aaron Gallagher <habnabit@gmail.com> wrote:
> On Oct 23, 2007, at 9:14 PM, Graham Dumpleton wrote:
>
> > If you really need everything to be done in one process, one option is
> > to run a backend Python server process which embeds an XML-RPC server
> > and have all your web interfaces use XML-RPC requests to the game
> > engine in that to do things.
> >
> > Another option is to not use mod_python, instead base your web
> > application on a framework capable of being hosted on any WSGI server.
> > Then run this in standalone Python server process and use Apache to
> > proxy to it.
> >
> > Basing it on a WSGI server, you could also then use daemon mode of
> > mod_wsgi but run with a single managed process. That way you don't
> > have the hassle of having to work out how to run up the backend
> > process as Apache will manage that for you.
> >
> > For further information on data sharing issues in relation to
> > process/threading model of Apache see:
> >
> >   http://code.google.com/p/modwsgi/wiki/ProcessesAndThreading
> >
> > This talks about it in the context of mod_wsgi, but is more up to date
> > and accurate than older version of document I did for mod_python.
>
> I think either of those solutions sounds good. I'm leaning toward the
> WSGI option, because then I don't have to have a backend. I've never
> done anything with mod_wsgi before, so do you have a good all-
> inclusive tutorial for WSGI work with python?

Not on WSGI programming as such, as there is enough of that out there
by other people. For some pointers see:

  http://www.wsgi.org

For mod_wsgi specific material see:

  http://www.modwsgi.org

You just need to work out what WSGI capable framework you might want
to use. One lightweight option is web.py if you need to be doing a lot
of customised pages and request handlers. For a more structure system
have a look at Django. In between you have Pylons, which aims to be a
more componentised system where you can mix and match stuff.

Graham
From mail.python.org at roots.id.au  Wed Oct 24 05:38:17 2007
From: mail.python.org at roots.id.au (Aaron Roots)
Date: Wed Oct 24 05:38:31 2007
Subject: [mod_python] from __future__ import & psp
Message-ID: <471F1289.8070802@roots.id.au>

I am trying to find out if there is any way currantly to use "from __future__ import module" with mod_python PSP

If I include the line at the top of the psp file - it returns this error:
	/*SyntaxError: from __future__ imports must occur at the beginning of the file*/

I have searched to find an answer to if it can or if there is another way to import like JSP's "<%@ page import="package"%>" that would work.
Either it wont work currantly or I do not know how to reference it correctly.



Cheers heaps
Aaron

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071024/de9dc6e7/attachment.html
From sdavis2 at mail.nih.gov  Wed Oct 24 07:58:53 2007
From: sdavis2 at mail.nih.gov (Sean Davis)
Date: Wed Oct 24 07:58:59 2007
Subject: [mod_python] Storing large amounts of data in RAM
In-Reply-To: <E05F0386-F4D8-4EFB-9E52-C30782D99E48@gmail.com>
References: <E05F0386-F4D8-4EFB-9E52-C30782D99E48@gmail.com>
Message-ID: <471F337D.80205@mail.nih.gov>

Aaron Gallagher wrote:
> I'm working on a web-application port of a text game, and I'm just 
> wondering what the best way for me to implement this is.
>
> Game data is stored in a single python object which is pickleable. I'm 
> not sure of the exact size of the data in memory, but the pickled 
> files are between 600 and 900k uncompressed. I would like to store 
> each object in memory rather than saving and loading the object for 
> each request. So, what is the best way to do this? I'm pretty sure I 
> remember from earlier posts that it's not possible to have memory 
> that's shared between multiple interpreters. Is it possible to only 
> use one interpreter and keep all of the data objects in that interpreter?
>
> Also, other than having a cron job send an HTTP request to the server 
> intermittently, is there a way to have data objects save themselves to 
> a file if their player hasn't made a request in a certain amount of time?

You could try to use in-memory caching, but if the files are that small, 
particularly if you are on linux, the OS will cache some of the files 
automatically.  As an example, if you have a system that has a 
reasonable amount of RAM, try reading a text file that is a few hundred 
Mb.  Then, immediately read it again.  The second time around will be 
faster, likely, due to caching. 

Sean
From algroth at gmx.de  Wed Oct 24 22:32:16 2007
From: algroth at gmx.de (Stefan Schulze)
Date: Wed Oct 24 22:32:27 2007
Subject: [mod_python] Problems with Apache
Message-ID: <001a01c816af$42590fc0$fbfaa8c0@cestra>

Hi there...

I'm trying to teach my apache-server to understand python. The Apache 2.2.6
runs on NetBSD 3.1 with Python 2.4.4. I compiled the mod_python 3.2.10 with
pkgsrc and nothing strange happens while building the the lib. But when I
add "LoadModule python_module lib/httpd/mod_python.so" to my httpd.conf I
get lots of errors in the startup-log: [notice] mod_python: Creating 8
session mutexes based on 256 max processes and 0 max threads. [notice]
mod_python: using mutex_directory /tmp [error] (28)No space left on device:
mod_python: Failed to create global mutex 5 of 8 (/tmp/mpmtx208245). [error]
mod_python: We can probably continue, but with diminished ability to process
session locks. [error] mod_python: Hint: On Linux, the problem may be the
number of available semaphores, check 'sysctl kernel.sem'

On /tmp is lots of space and it's seems not to be a permission-problem,
because the user pgsql can create files there. Everybody has "rwt"-rights on
/tmp.

"sysctl kernel.sem" results in "sysctl: top level name 'kernel' in
'kernel.sem' is invalid".
 
Can anybody give me a hint how to solve this problem?

Bye,
  Stefan


From graham.dumpleton at gmail.com  Wed Oct 24 23:00:20 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 24 23:00:27 2007
Subject: [mod_python] Problems with Apache
In-Reply-To: <001a01c816af$42590fc0$fbfaa8c0@cestra>
References: <001a01c816af$42590fc0$fbfaa8c0@cestra>
Message-ID: <88e286470710242000p4ab418b5q1c5c2dc936b0c77a@mail.gmail.com>

On 25/10/2007, Stefan Schulze <algroth@gmx.de> wrote:
> Hi there...
>
> I'm trying to teach my apache-server to understand python. The Apache 2.2.6
> runs on NetBSD 3.1 with Python 2.4.4. I compiled the mod_python 3.2.10 with
> pkgsrc and nothing strange happens while building the the lib. But when I
> add "LoadModule python_module lib/httpd/mod_python.so" to my httpd.conf I
> get lots of errors in the startup-log: [notice] mod_python: Creating 8
> session mutexes based on 256 max processes and 0 max threads. [notice]
> mod_python: using mutex_directory /tmp [error] (28)No space left on device:
> mod_python: Failed to create global mutex 5 of 8 (/tmp/mpmtx208245). [error]
> mod_python: We can probably continue, but with diminished ability to process
> session locks. [error] mod_python: Hint: On Linux, the problem may be the
> number of available semaphores, check 'sysctl kernel.sem'
>
> On /tmp is lots of space and it's seems not to be a permission-problem,
> because the user pgsql can create files there. Everybody has "rwt"-rights on
> /tmp.
>
> "sysctl kernel.sem" results in "sysctl: top level name 'kernel' in
> 'kernel.sem' is invalid".
>
> Can anybody give me a hint how to solve this problem?

The '/tmp' bit has nothing to do with.

The 'sysctl kernel.sem' is the Linux command to use. You will need to
work out the NetBSD way of listing how many kernel semaphores have
been configured. What ever is in use, it appears to be too low.

You can also configure mod_python to use less semaphores. Use the
option '--with-max-locks=4' to the 'configure' script when you are
building mod_python. If you don't know how to override that with
pkgsrc, then you can instead do it at run time by setting:

  PythonOption mod_python.mutex_locks 4

at global scope (outside of VirtualHost containers) in the Apache
configuration file.

Since a value of 4 would use up last semaphore, highly recommend you
increase number of kernel semaphores provided by OS.

Graham
From graham.dumpleton at gmail.com  Wed Oct 24 23:04:05 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Wed Oct 24 23:04:11 2007
Subject: [mod_python] ValueError: Failed to acquire global mutex lock
In-Reply-To: <000a01c81631$7eb419c0$8201020a@api104b4843840>
References: <008601c80fec$c25618e0$8201020a@api104b4843840>
	<88e286470710160528l48581551i353f3f5aac88c896@mail.gmail.com>
	<003e01c810b5$8ead34a0$8201020a@api104b4843840>
	<88e286470710171522r48f4d0a4kffeaf2d0b99aef49@mail.gmail.com>
	<001101c81568$1780acb0$b501020a@api104b4843840>
	<88e286470710230439u613e430k3f0a085ec25b030a@mail.gmail.com>
	<003701c81581$acc49cf0$b501020a@api104b4843840>
	<88e286470710231707x60a1586cj9b8129f5bbfab2e@mail.gmail.com>
	<000a01c81631$7eb419c0$8201020a@api104b4843840>
Message-ID: <88e286470710242004l4987f3fbu7e038885721d28ba@mail.gmail.com>

Going by errors posted by someone else for other thread, seems that if
semaphores exhausted, error would occur at mod_python startup not when
locking the mutex.

I'll have to go back and read all your emails again. You said you were
using 'worker' MPM now didn't you. Your not using some strange MPM
like perchild or ITK-MPM are you. I know that these cause problems for
these mutexes in mod_python because of how different processes wanting
to lock the mutex run as different users.

Graham

On 24/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> # ipcs
> IPC status from <running system> as of Wed Oct 24 06:25:17 CDT 2007
> T         ID      KEY        MODE        OWNER    GROUP
> Message Queues:
> Shared Memory:
> Semaphores:
> s          2   0          --ra-------      api    other
>
> Not sure how to read that.
>
> If the problem is the semaphores, Shouldn't I be able to use the following
> set semsys:seminfo_semmni=2048
> set semsys:seminfo_semmns=2048
> set semsys:seminfo_semmnu=1024
> set semsys:seminfo_semmsl=300
> set semsys:seminfo_semopm=128
> set semsys:seminfo_semume=64
>
> to make more semaphores available?
>
> I tried that but it didn't change anything, do you think that was not
> enough?
>
>
> --Mike
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> Sent: Tuesday, October 23, 2007 7:08 PM
> To: Michael Robokoff
> Cc: mod_python
> Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
>
> If you run 'ipcs' what is the output? Something must be using all the
> semaphores, can't be anything else.
>
> Graham
>
> On 24/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> > Ok the directive did take effect as the log entry below shows:
> >
> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: Creating 4 session mutexes
> > based on 6 max processes and 25 max threads.
> > [Tue Oct 23 07:20:32 2007] [notice] mod_python: using mutex_directory /tmp
> >
> >
> > Still see this however:
> >
> > ValueError: Failed to acquire global mutex lock
> >
> > I will try recompiling with the option you mentioned and see what happens.
> >
> >
> > --Mike
> >
> >
> > -----Original Message-----
> > From: Graham Dumpleton [mailto:graham.dumpleton@gmail.com]
> > Sent: Tuesday, October 23, 2007 6:40 AM
> > To: Michael Robokoff
> > Cc: mod_python
> > Subject: Re: [mod_python] ValueError: Failed to acquire global mutex lock
> >
> > On 23/10/2007, Michael Robokoff <mike.robokoff@apioutsourcing.com> wrote:
> > > [Thu Oct 18 07:37:38 2007] [notice] mod_python: Creating 8 session
> mutexes
> > > based on 6 max processes and 25 max threads.
> >
> > BTW, what did you end up setting mod_python.mutex_locks to? If you use
> > 4 like I said, then it can't have been in correct part of Apache
> > configuration, outside of all VirtualHost, as error log still shows '8
> > session mutexes'.
> >
> > if you can't get this to work, you might rebuild mod_python and
> > specific --with-max-locks=4 option to configure to force lower value
> > to be compiled in.
> >
> > Graham
> >
> >
> >
>
>
>
From cguin at bbn.com  Fri Oct 26 11:38:53 2007
From: cguin at bbn.com (Chris Guin)
Date: Fri Oct 26 11:42:55 2007
Subject: [mod_python] Multiple Django Applications
Message-ID: <7.0.0.16.2.20071026112817.02394908@bbn.com>

Hi,

We're trying to run two different Django applications from the same 
Apache server using mod_python.  Their url spaces should not 
overlap.  We have different sets of <Location> nodes in Httpd.conf, 
using the appropriate settings.py for each.  The apps are located in 
two separate folders.  However, Apache does not seem to want to let 
you switch between them - if you go to App1 first, it will use App1's 
settings whether the URL points to App1 or App2.  Do we need to 
somehow consolidate the settings.py, or is there some other way to 
set this up properly?

Thanks,
Chris Guin


From graham.dumpleton at gmail.com  Fri Oct 26 18:53:42 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Fri Oct 26 18:53:47 2007
Subject: [mod_python] Multiple Django Applications
In-Reply-To: <7.0.0.16.2.20071026112817.02394908@bbn.com>
References: <7.0.0.16.2.20071026112817.02394908@bbn.com>
Message-ID: <88e286470710261553u6a1020c4pb2d972ce282bc62b@mail.gmail.com>

Post the mod_python configuration from Apache configuration file that
you are using.

Also, are you setting PythonInterpreter like the Django documentation
explains as an example?

Graham

On 27/10/2007, Chris Guin <cguin@bbn.com> wrote:
> Hi,
>
> We're trying to run two different Django applications from the same
> Apache server using mod_python.  Their url spaces should not
> overlap.  We have different sets of <Location> nodes in Httpd.conf,
> using the appropriate settings.py for each.  The apps are located in
> two separate folders.  However, Apache does not seem to want to let
> you switch between them - if you go to App1 first, it will use App1's
> settings whether the URL points to App1 or App2.  Do we need to
> somehow consolidate the settings.py, or is there some other way to
> set this up properly?
>
> Thanks,
> Chris Guin
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From ben at mitchellfamily.com  Mon Oct 29 13:16:11 2007
From: ben at mitchellfamily.com (Ben Mitchell)
Date: Mon Oct 29 13:16:20 2007
Subject: [mod_python] Trouble on OSX - Leopard
Message-ID: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>

Hi, folks.

I'm working on getting Django running again after upgrading to  
Leopard.  I've hit a snag building / installing mod_python, and I'm  
hoping someone might know what's going on.

I did the following:
- downloaded the 3.3.1 source
- .config --with-apxs=/usr/sbin/apxs
- make
- sudo make install
- added to httpd.conf:  LoadModule python_module      libexec/apache2/ 
mod_python.so

I then ran apachectl configtest and got an error:

% apachectl configtest
httpd: Syntax error on line 116 of /private/etc/apache2/httpd.conf:  
Cannot load /usr/libexec/apache2/mod_python.so into server: dlopen(/ 
usr/libexec/apache2/mod_python.so, 10): no suitable image found.  Did  
find:\n\t/usr/libexec/apache2/mod_python.so: no matching architecture  
in universal wrapper

Any ideas?  I've tried a bunch of things tracking this down, but I get  
this same error every time.

Thanks,
-Ben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071029/ada10aa6/attachment.html
From graham.dumpleton at gmail.com  Mon Oct 29 17:30:05 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Mon Oct 29 17:30:11 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
Message-ID: <88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I get this
> same error every time.

Can you do a quick test and see if you can install mod_wsgi
(http://www.modwsgi.org) instead. This can replace mod_python if all
you want to host is Django, but more importantly it follows somewhat
how mod_python is installed but is less complicated in the way it does
it. It will be easier for me to debug what the problem is if mod_wsgi
has the same issue. Can then apply what is learned from that back to
mod_python and get it working.

BTW, I presume you are using standard OS version of Python. Which
version of Python does Leopard supply if that is the case?

If you try mod_wsgi and it also fails, supply the output from doing
the initial 'make' of it so can see all the compiler flags that are
being used to build it, plus any output from compiler.

Thanks.

Graham
From ben at mitchellfamily.com  Mon Oct 29 23:50:54 2007
From: ben at mitchellfamily.com (Ben Mitchell)
Date: Mon Oct 29 23:51:07 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
Message-ID: <E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>

Graham,

Thanks for the help.  mod_wsgi didn't work either.  I've appended all  
the details below.

-Ben


[Macintosh:local/src/mod_wsgi-1.2] benha% ls
LICENCE		Makefile-2.X.in	configure	mod_wsgi.c
Makefile-1.X.in	README		configure.ac
[Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
checking for apxs2... no
checking for apxs... /usr/sbin/apxs
checking for python... /usr/bin/python
checking Apache version... 2.2.6
configure: creating ./config.status
config.status: creating Makefile
[Macintosh:local/src/mod_wsgi-1.2] benha% make
/usr/sbin/apxs -c -I/System/Library/Frameworks/Python.framework/ 
Versions/2.5/include/python2.5 -DNDEBUG -DMACOSX -DENABLE_DTRACE   
mod_wsgi.c -framework Python -u _PyMac_Error -framework Python -ldl
/usr/share/apr-1/build-1/libtool --silent --mode=compile gcc    - 
DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp  -I/usr/include/ 
apache2  -I/usr/include/apr-1   -I/usr/include/apr-1  -I/System/ 
Library/Frameworks/Python.framework/Versions/2.5/include/python2.5 - 
DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c &&  
touch mod_wsgi.slo
/usr/share/apr-1/build-1/libtool --silent --mode=link gcc -o  
mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version     
mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
[Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
Password:
sh-3.2# make install
/usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'  
mod_wsgi.la
/usr/share/httpd/build/instdso.sh SH_LIBTOOL='/usr/share/apr-1/build-1/ 
libtool' mod_wsgi.la /usr/libexec/apache2
/usr/share/apr-1/build-1/libtool --mode=install cp mod_wsgi.la /usr/ 
libexec/apache2/
cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
ranlib /usr/libexec/apache2/mod_wsgi.a
chmod 644 /usr/libexec/apache2/mod_wsgi.a
----------------------------------------------------------------------
Libraries have been installed in:
    /usr/libexec/apache2

If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the `-LLIBDIR'
flag during linking and do at least one of the following:
    - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
      during execution

See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.
----------------------------------------------------------------------
chmod 755 /usr/libexec/apache2/mod_wsgi.so
sh-3.2# exit
exit
[Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/ 
httpd.conf


ADDED the following line to httpd.conf:
LoadModule wsgi_module libexec/apache2/mod_wsgi.so


[Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
httpd: Syntax error on line 117 of /private/etc/apache2/httpd.conf:  
Cannot load /usr/libexec/apache2/mod_wsgi.so into server: dlopen(/usr/ 
libexec/apache2/mod_wsgi.so, 10): no suitable image found.  Did find:\n 
\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but wrong architecture
[Macintosh:local/src/mod_wsgi-1.2] benha%





On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to  
> Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping  
> someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I  
> get this
> same error every time.

Can you do a quick test and see if you can install mod_wsgi
(http://www.modwsgi.org) instead. This can replace mod_python if all
you want to host is Django, but more importantly it follows somewhat
how mod_python is installed but is less complicated in the way it does
it. It will be easier for me to debug what the problem is if mod_wsgi
has the same issue. Can then apply what is learned from that back to
mod_python and get it working.

BTW, I presume you are using standard OS version of Python. Which
version of Python does Leopard supply if that is the case?

If you try mod_wsgi and it also fails, supply the output from doing
the initial 'make' of it so can see all the compiler flags that are
being used to build it, plus any output from compiler.

Thanks.

Graham

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071029/22859344/attachment.html
From graham.dumpleton at gmail.com  Tue Oct 30 00:06:19 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 00:06:27 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
Message-ID: <88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>

What does it say if you run:

  file /usr/libexec/apache2/mod_wsgi.so

BTW, is this a PPC or Intel machine?

Did you do a fresh install or an upgrade of Leopard?

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Graham,
>
> Thanks for the help.  mod_wsgi didn't work either.  I've appended all the
> details below.
>
> -Ben
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% ls
> LICENCE Makefile-2.X.in configure mod_wsgi.c
> Makefile-1.X.in README configure.ac
> [Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
> checking for apxs2... no
> checking for apxs... /usr/sbin/apxs
> checking for python... /usr/bin/python
> checking Apache version... 2.2.6
> configure: creating ./config.status
> config.status: creating Makefile
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  mod_wsgi.c -framework Python -u
> _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c && touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
> Password:
> sh-3.2# make install
> /usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'
> mod_wsgi.la
> /usr/share/httpd/build/instdso.sh
> SH_LIBTOOL='/usr/share/apr-1/build-1/libtool' mod_wsgi.la
> /usr/libexec/apache2
> /usr/share/apr-1/build-1/libtool --mode=install cp
> mod_wsgi.la /usr/libexec/apache2/
> cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
> cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
> cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
> ranlib /usr/libexec/apache2/mod_wsgi.a
> chmod 644 /usr/libexec/apache2/mod_wsgi.a
> ----------------------------------------------------------------------
> Libraries have been installed in:
>    /usr/libexec/apache2
>
> If you ever happen to want to link against installed libraries
> in a given directory, LIBDIR, you must either use libtool, and
> specify the full pathname of the library, or use the `-LLIBDIR'
> flag during linking and do at least one of the following:
>    - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
>      during execution
>
> See any operating system documentation about shared libraries for
> more information, such as the ld(1) and ld.so(8) manual pages.
> ----------------------------------------------------------------------
> chmod 755 /usr/libexec/apache2/mod_wsgi.so
> sh-3.2# exit
> exit
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/httpd.conf
>
>
> ADDED the following line to httpd.conf:
> LoadModule wsgi_module libexec/apache2/mod_wsgi.so
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but
> wrong architecture
> [Macintosh:local/src/mod_wsgi-1.2] benha%
>
>
>
>
>
>
> On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I get this
> same error every time.
>
> Can you do a quick test and see if you can install mod_wsgi
> (http://www.modwsgi.org) instead. This can replace mod_python if all
> you want to host is Django, but more importantly it follows somewhat
> how mod_python is installed but is less complicated in the way it does
> it. It will be easier for me to debug what the problem is if mod_wsgi
> has the same issue. Can then apply what is learned from that back to
> mod_python and get it working.
>
> BTW, I presume you are using standard OS version of Python. Which
> version of Python does Leopard supply if that is the case?
>
> If you try mod_wsgi and it also fails, supply the output from doing
> the initial 'make' of it so can see all the compiler flags that are
> being used to build it, plus any output from compiler.
From ben at mitchellfamily.com  Tue Oct 30 00:10:24 2007
From: ben at mitchellfamily.com (Ben Mitchell)
Date: Tue Oct 30 00:10:32 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
Message-ID: <ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>

I started off yesterday doing an "Upgrade."  But I found enough  
weirdness that I did an "Archive and Install" tonight.  It's an intel  
MacBook Pro.

[Macintosh:/private/var/mysql] benha% file /usr/libexec/apache2/ 
mod_wsgi.so
/usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386




On Oct 29, 2007, at 9:06 PM, Graham Dumpleton wrote:

What does it say if you run:

  file /usr/libexec/apache2/mod_wsgi.so

BTW, is this a PPC or Intel machine?

Did you do a fresh install or an upgrade of Leopard?

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Graham,
>
> Thanks for the help.  mod_wsgi didn't work either.  I've appended  
> all the
> details below.
>
> -Ben
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% ls
> LICENCE Makefile-2.X.in configure mod_wsgi.c
> Makefile-1.X.in README configure.ac
> [Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
> checking for apxs2... no
> checking for apxs... /usr/sbin/apxs
> checking for python... /usr/bin/python
> checking Apache version... 2.2.6
> configure: creating ./config.status
> config.status: creating Makefile
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/ 
> python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  mod_wsgi.c -framework Python -u
> _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/ 
> python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c &&  
> touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
> Password:
> sh-3.2# make install
> /usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'
> mod_wsgi.la
> /usr/share/httpd/build/instdso.sh
> SH_LIBTOOL='/usr/share/apr-1/build-1/libtool' mod_wsgi.la
> /usr/libexec/apache2
> /usr/share/apr-1/build-1/libtool --mode=install cp
> mod_wsgi.la /usr/libexec/apache2/
> cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
> cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
> cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
> ranlib /usr/libexec/apache2/mod_wsgi.a
> chmod 644 /usr/libexec/apache2/mod_wsgi.a
> ----------------------------------------------------------------------
> Libraries have been installed in:
>   /usr/libexec/apache2
>
> If you ever happen to want to link against installed libraries
> in a given directory, LIBDIR, you must either use libtool, and
> specify the full pathname of the library, or use the `-LLIBDIR'
> flag during linking and do at least one of the following:
>   - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
>     during execution
>
> See any operating system documentation about shared libraries for
> more information, such as the ld(1) and ld.so(8) manual pages.
> ----------------------------------------------------------------------
> chmod 755 /usr/libexec/apache2/mod_wsgi.so
> sh-3.2# exit
> exit
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/ 
> httpd.conf
>
>
> ADDED the following line to httpd.conf:
> LoadModule wsgi_module libexec/apache2/mod_wsgi.so
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but
> wrong architecture
> [Macintosh:local/src/mod_wsgi-1.2] benha%
>
>
>
>
>
>
> On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to  
> Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping  
> someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I  
> get this
> same error every time.
>
> Can you do a quick test and see if you can install mod_wsgi
> (http://www.modwsgi.org) instead. This can replace mod_python if all
> you want to host is Django, but more importantly it follows somewhat
> how mod_python is installed but is less complicated in the way it does
> it. It will be easier for me to debug what the problem is if mod_wsgi
> has the same issue. Can then apply what is learned from that back to
> mod_python and get it working.
>
> BTW, I presume you are using standard OS version of Python. Which
> version of Python does Leopard supply if that is the case?
>
> If you try mod_wsgi and it also fails, supply the output from doing
> the initial 'make' of it so can see all the compiler flags that are
> being used to build it, plus any output from compiler.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071029/1f059012/attachment.html
From graham.dumpleton at gmail.com  Tue Oct 30 00:18:22 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 00:18:33 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
Message-ID: <88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>

How about:

  otool -L /usr/libexec/apache2/mod_wsgi.so

Should refer to standard Python framework.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> I started off yesterday doing an "Upgrade."  But I found enough weirdness
> that I did an "Archive and Install" tonight.  It's an intel MacBook Pro.
>
> [Macintosh:/private/var/mysql] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
>
>
>
>
> On Oct 29, 2007, at 9:06 PM, Graham Dumpleton wrote:
> What does it say if you run:
>
>   file /usr/libexec/apache2/mod_wsgi.so
>
> BTW, is this a PPC or Intel machine?
>
> Did you do a fresh install or an upgrade of Leopard?
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Graham,
>
> Thanks for the help.  mod_wsgi didn't work either.  I've appended all the
> details below.
>
> -Ben
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% ls
> LICENCE Makefile-2.X.in configure mod_wsgi.c
> Makefile-1.X.in README configure.ac
> [Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
> checking for apxs2... no
> checking for apxs... /usr/sbin/apxs
> checking for python... /usr/bin/python
> checking Apache version... 2.2.6
> configure: creating ./config.status
> config.status: creating Makefile
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  mod_wsgi.c -framework Python -u
> _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c && touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
> Password:
> sh-3.2# make install
> /usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'
> mod_wsgi.la
> /usr/share/httpd/build/instdso.sh
> SH_LIBTOOL='/usr/share/apr-1/build-1/libtool' mod_wsgi.la
> /usr/libexec/apache2
> /usr/share/apr-1/build-1/libtool --mode=install cp
> mod_wsgi.la /usr/libexec/apache2/
> cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
> cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
> cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
> ranlib /usr/libexec/apache2/mod_wsgi.a
> chmod 644 /usr/libexec/apache2/mod_wsgi.a
> ----------------------------------------------------------------------
> Libraries have been installed in:
>    /usr/libexec/apache2
>
> If you ever happen to want to link against installed libraries
> in a given directory, LIBDIR, you must either use libtool, and
> specify the full pathname of the library, or use the `-LLIBDIR'
> flag during linking and do at least one of the following:
>    - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
>      during execution
>
> See any operating system documentation about shared libraries for
> more information, such as the ld(1) and ld.so(8) manual pages.
> ----------------------------------------------------------------------
> chmod 755 /usr/libexec/apache2/mod_wsgi.so
> sh-3.2# exit
> exit
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/httpd.conf
>
>
> ADDED the following line to httpd.conf:
> LoadModule wsgi_module libexec/apache2/mod_wsgi.so
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but
> wrong architecture
> [Macintosh:local/src/mod_wsgi-1.2] benha%
>
>
>
>
>
>
> On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I get this
> same error every time.
>
> Can you do a quick test and see if you can install mod_wsgi
> (http://www.modwsgi.org) instead. This can replace mod_python if all
> you want to host is Django, but more importantly it follows somewhat
> how mod_python is installed but is less complicated in the way it does
> it. It will be easier for me to debug what the problem is if mod_wsgi
> has the same issue. Can then apply what is learned from that back to
> mod_python and get it working.
>
> BTW, I presume you are using standard OS version of Python. Which
> version of Python does Leopard supply if that is the case?
>
> If you try mod_wsgi and it also fails, supply the output from doing
> the initial 'make' of it so can see all the compiler flags that are
> being used to build it, plus any output from compiler.
>
>
From ben at mitchellfamily.com  Tue Oct 30 00:21:34 2007
From: ben at mitchellfamily.com (Ben Mitchell)
Date: Tue Oct 30 00:21:44 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
Message-ID: <28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>

[Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L /usr/libexec/ 
apache2/mod_wsgi.so
/usr/libexec/apache2/mod_wsgi.so:
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current  
version 111.0.0)
	/Library/Frameworks/Python.framework/Versions/2.5/Python  
(compatibility version 2.5.0, current version 2.5.0)
	/usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current  
version 1.0.0)
[Macintosh:local/src/PyGreSQL-3.8.1] benha%



On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:

How about:

  otool -L /usr/libexec/apache2/mod_wsgi.so

Should refer to standard Python framework.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> I started off yesterday doing an "Upgrade."  But I found enough  
> weirdness
> that I did an "Archive and Install" tonight.  It's an intel MacBook  
> Pro.
>
> [Macintosh:/private/var/mysql] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
>
>
>
>
> On Oct 29, 2007, at 9:06 PM, Graham Dumpleton wrote:
> What does it say if you run:
>
>  file /usr/libexec/apache2/mod_wsgi.so
>
> BTW, is this a PPC or Intel machine?
>
> Did you do a fresh install or an upgrade of Leopard?
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Graham,
>
> Thanks for the help.  mod_wsgi didn't work either.  I've appended  
> all the
> details below.
>
> -Ben
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% ls
> LICENCE Makefile-2.X.in configure mod_wsgi.c
> Makefile-1.X.in README configure.ac
> [Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
> checking for apxs2... no
> checking for apxs... /usr/sbin/apxs
> checking for python... /usr/bin/python
> checking Apache version... 2.2.6
> configure: creating ./config.status
> config.status: creating Makefile
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/ 
> python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  mod_wsgi.c -framework Python -u
> _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/ 
> python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c &&  
> touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
> Password:
> sh-3.2# make install
> /usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'
> mod_wsgi.la
> /usr/share/httpd/build/instdso.sh
> SH_LIBTOOL='/usr/share/apr-1/build-1/libtool' mod_wsgi.la
> /usr/libexec/apache2
> /usr/share/apr-1/build-1/libtool --mode=install cp
> mod_wsgi.la /usr/libexec/apache2/
> cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
> cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
> cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
> ranlib /usr/libexec/apache2/mod_wsgi.a
> chmod 644 /usr/libexec/apache2/mod_wsgi.a
> ----------------------------------------------------------------------
> Libraries have been installed in:
>   /usr/libexec/apache2
>
> If you ever happen to want to link against installed libraries
> in a given directory, LIBDIR, you must either use libtool, and
> specify the full pathname of the library, or use the `-LLIBDIR'
> flag during linking and do at least one of the following:
>   - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
>     during execution
>
> See any operating system documentation about shared libraries for
> more information, such as the ld(1) and ld.so(8) manual pages.
> ----------------------------------------------------------------------
> chmod 755 /usr/libexec/apache2/mod_wsgi.so
> sh-3.2# exit
> exit
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/ 
> httpd.conf
>
>
> ADDED the following line to httpd.conf:
> LoadModule wsgi_module libexec/apache2/mod_wsgi.so
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but
> wrong architecture
> [Macintosh:local/src/mod_wsgi-1.2] benha%
>
>
>
>
>
>
> On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to  
> Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping  
> someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I  
> get this
> same error every time.
>
> Can you do a quick test and see if you can install mod_wsgi
> (http://www.modwsgi.org) instead. This can replace mod_python if all
> you want to host is Django, but more importantly it follows somewhat
> how mod_python is installed but is less complicated in the way it does
> it. It will be easier for me to debug what the problem is if mod_wsgi
> has the same issue. Can then apply what is learned from that back to
> mod_python and get it working.
>
> BTW, I presume you are using standard OS version of Python. Which
> version of Python does Leopard supply if that is the case?
>
> If you try mod_wsgi and it also fails, supply the output from doing
> the initial 'make' of it so can see all the compiler flags that are
> being used to build it, plus any output from compiler.
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071029/68e6beb5/attachment-0001.html
From graham.dumpleton at gmail.com  Tue Oct 30 00:35:29 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 00:35:35 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
Message-ID: <88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>

One more and then I will have exhausted my ideas and may have to
research elsewhere.

  file /usr/sbin/httpd

Change path if this isn't what Apache server executable is called.

  file /usr/libexec/apache2/*.so

This is to see what other Apache and other modules are compiled as.
Ie., Intel only or dual architecture etc.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so:
>  /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version
> 111.0.0)
>  /Library/Frameworks/Python.framework/Versions/2.5/Python
> (compatibility version 2.5.0, current version 2.5.0)
>  /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current version
> 1.0.0)
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
> How about:
>
>   otool -L /usr/libexec/apache2/mod_wsgi.so
>
> Should refer to standard Python framework.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> I started off yesterday doing an "Upgrade."  But I found enough weirdness
> that I did an "Archive and Install" tonight.  It's an intel MacBook Pro.
>
> [Macintosh:/private/var/mysql] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
>
>
>
>
> On Oct 29, 2007, at 9:06 PM, Graham Dumpleton wrote:
> What does it say if you run:
>
>   file /usr/libexec/apache2/mod_wsgi.so
>
> BTW, is this a PPC or Intel machine?
>
> Did you do a fresh install or an upgrade of Leopard?
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Graham,
>
> Thanks for the help.  mod_wsgi didn't work either.  I've appended all the
> details below.
>
> -Ben
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% ls
> LICENCE Makefile-2.X.in configure mod_wsgi.c
> Makefile-1.X.in README configure.ac
> [Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
> checking for apxs2... no
> checking for apxs... /usr/sbin/apxs
> checking for python... /usr/bin/python
> checking Apache version... 2.2.6
> configure: creating ./config.status
> config.status: creating Makefile
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  mod_wsgi.c -framework Python -u
> _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c && touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
> Password:
> sh-3.2# make install
> /usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'
> mod_wsgi.la
> /usr/share/httpd/build/instdso.sh
> SH_LIBTOOL='/usr/share/apr-1/build-1/libtool' mod_wsgi.la
> /usr/libexec/apache2
> /usr/share/apr-1/build-1/libtool --mode=install cp
> mod_wsgi.la /usr/libexec/apache2/
> cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
> cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
> cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
> ranlib /usr/libexec/apache2/mod_wsgi.a
> chmod 644 /usr/libexec/apache2/mod_wsgi.a
> ----------------------------------------------------------------------
> Libraries have been installed in:
>    /usr/libexec/apache2
>
> If you ever happen to want to link against installed libraries
> in a given directory, LIBDIR, you must either use libtool, and
> specify the full pathname of the library, or use the `-LLIBDIR'
> flag during linking and do at least one of the following:
>    - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
>      during execution
>
> See any operating system documentation about shared libraries for
> more information, such as the ld(1) and ld.so(8) manual pages.
> ----------------------------------------------------------------------
> chmod 755 /usr/libexec/apache2/mod_wsgi.so
> sh-3.2# exit
> exit
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/httpd.conf
>
>
> ADDED the following line to httpd.conf:
> LoadModule wsgi_module libexec/apache2/mod_wsgi.so
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but
> wrong architecture
> [Macintosh:local/src/mod_wsgi-1.2] benha%
>
>
>
>
>
>
> On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I get this
> same error every time.
>
> Can you do a quick test and see if you can install mod_wsgi
> (http://www.modwsgi.org) instead. This can replace mod_python if all
> you want to host is Django, but more importantly it follows somewhat
> how mod_python is installed but is less complicated in the way it does
> it. It will be easier for me to debug what the problem is if mod_wsgi
> has the same issue. Can then apply what is learned from that back to
> mod_python and get it working.
>
> BTW, I presume you are using standard OS version of Python. Which
> version of Python does Leopard supply if that is the case?
>
> If you try mod_wsgi and it also fails, supply the output from doing
> the initial 'make' of it so can see all the compiler flags that are
> being used to build it, plus any output from compiler.
>
>
>
>
From ben at mitchellfamily.com  Tue Oct 30 00:41:57 2007
From: ben at mitchellfamily.com (Ben Mitchell)
Date: Tue Oct 30 00:42:04 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
	<88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
Message-ID: <BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>

Looks ok to me, though we're way out of my depth at this point :-)


[Macintosh:~/Documents/Development] benha% file /usr/sbin/httpd
/usr/sbin/httpd: Mach-O universal binary with 4 architectures
/usr/sbin/httpd (for architecture ppc7400):	Mach-O executable ppc
/usr/sbin/httpd (for architecture ppc64):	Mach-O 64-bit executable ppc64
/usr/sbin/httpd (for architecture i386):	Mach-O executable i386
/usr/sbin/httpd (for architecture x86_64):	Mach-O 64-bit executable  
x86_64
[Macintosh:~/Documents/Development] benha% file /usr/libexec/apache2/ 
mod_wsgi.so
/usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
[Macintosh:~/Documents/Development] benha%



On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:

One more and then I will have exhausted my ideas and may have to
research elsewhere.

  file /usr/sbin/httpd

Change path if this isn't what Apache server executable is called.

  file /usr/libexec/apache2/*.so

This is to see what other Apache and other modules are compiled as.
Ie., Intel only or dual architecture etc.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so:
> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current  
> version
> 111.0.0)
> /Library/Frameworks/Python.framework/Versions/2.5/Python
> (compatibility version 2.5.0, current version 2.5.0)
> /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current  
> version
> 1.0.0)
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
> How about:
>
>  otool -L /usr/libexec/apache2/mod_wsgi.so
>
> Should refer to standard Python framework.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> I started off yesterday doing an "Upgrade."  But I found enough  
> weirdness
> that I did an "Archive and Install" tonight.  It's an intel MacBook  
> Pro.
>
> [Macintosh:/private/var/mysql] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
>
>
>
>
> On Oct 29, 2007, at 9:06 PM, Graham Dumpleton wrote:
> What does it say if you run:
>
>  file /usr/libexec/apache2/mod_wsgi.so
>
> BTW, is this a PPC or Intel machine?
>
> Did you do a fresh install or an upgrade of Leopard?
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Graham,
>
> Thanks for the help.  mod_wsgi didn't work either.  I've appended  
> all the
> details below.
>
> -Ben
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% ls
> LICENCE Makefile-2.X.in configure mod_wsgi.c
> Makefile-1.X.in README configure.ac
> [Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
> checking for apxs2... no
> checking for apxs... /usr/sbin/apxs
> checking for python... /usr/bin/python
> checking Apache version... 2.2.6
> configure: creating ./config.status
> config.status: creating Makefile
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/ 
> python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  mod_wsgi.c -framework Python -u
> _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/ 
> python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c &&  
> touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
> Password:
> sh-3.2# make install
> /usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'
> mod_wsgi.la
> /usr/share/httpd/build/instdso.sh
> SH_LIBTOOL='/usr/share/apr-1/build-1/libtool' mod_wsgi.la
> /usr/libexec/apache2
> /usr/share/apr-1/build-1/libtool --mode=install cp
> mod_wsgi.la /usr/libexec/apache2/
> cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
> cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
> cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
> ranlib /usr/libexec/apache2/mod_wsgi.a
> chmod 644 /usr/libexec/apache2/mod_wsgi.a
> ----------------------------------------------------------------------
> Libraries have been installed in:
>   /usr/libexec/apache2
>
> If you ever happen to want to link against installed libraries
> in a given directory, LIBDIR, you must either use libtool, and
> specify the full pathname of the library, or use the `-LLIBDIR'
> flag during linking and do at least one of the following:
>   - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
>     during execution
>
> See any operating system documentation about shared libraries for
> more information, such as the ld(1) and ld.so(8) manual pages.
> ----------------------------------------------------------------------
> chmod 755 /usr/libexec/apache2/mod_wsgi.so
> sh-3.2# exit
> exit
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/ 
> httpd.conf
>
>
> ADDED the following line to httpd.conf:
> LoadModule wsgi_module libexec/apache2/mod_wsgi.so
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but
> wrong architecture
> [Macintosh:local/src/mod_wsgi-1.2] benha%
>
>
>
>
>
>
> On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to  
> Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping  
> someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I  
> get this
> same error every time.
>
> Can you do a quick test and see if you can install mod_wsgi
> (http://www.modwsgi.org) instead. This can replace mod_python if all
> you want to host is Django, but more importantly it follows somewhat
> how mod_python is installed but is less complicated in the way it does
> it. It will be easier for me to debug what the problem is if mod_wsgi
> has the same issue. Can then apply what is learned from that back to
> mod_python and get it working.
>
> BTW, I presume you are using standard OS version of Python. Which
> version of Python does Leopard supply if that is the case?
>
> If you try mod_wsgi and it also fails, supply the output from doing
> the initial 'make' of it so can see all the compiler flags that are
> being used to build it, plus any output from compiler.
>
>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071029/3f3b4e2f/attachment-0001.html
From graham.dumpleton at gmail.com  Tue Oct 30 00:47:50 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 00:47:56 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<88e286470710291430u4040ac6qa0488e3d026c82c7@mail.gmail.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
	<88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
	<BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
Message-ID: <88e286470710292147r3dba009ar9c75104cb9aca7bc@mail.gmail.com>

Was there no other .so files besides mod_wsgi.so in:

  /usr/libexec/apache2

Was wanting to see what 'file' yielded on other .so files in that directory.

if there is no other .so files, would suggest that they are static
linking core Apache modules, which they haven't done in the past.

Anyway, I will bring it all up on Apache modules-dev list in case
others have heard about such issues.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Looks ok to me, though we're way out of my depth at this point :-)
>
>
>
> [Macintosh:~/Documents/Development] benha% file
> /usr/sbin/httpd
> /usr/sbin/httpd: Mach-O universal binary with 4 architectures
> /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
> /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable ppc64
> /usr/sbin/httpd (for architecture i386): Mach-O executable i386
> /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable x86_64
> [Macintosh:~/Documents/Development] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
> [Macintosh:~/Documents/Development] benha%
>
>
>
>
> On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
> One more and then I will have exhausted my ideas and may have to
> research elsewhere.
>
>   file /usr/sbin/httpd
>
> Change path if this isn't what Apache server executable is called.
>
>   file /usr/libexec/apache2/*.so
>
> This is to see what other Apache and other modules are compiled as.
> Ie., Intel only or dual architecture etc.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so:
>  /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version
> 111.0.0)
>  /Library/Frameworks/Python.framework/Versions/2.5/Python
> (compatibility version 2.5.0, current version 2.5.0)
>  /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current version
> 1.0.0)
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
> How about:
>
>   otool -L /usr/libexec/apache2/mod_wsgi.so
>
> Should refer to standard Python framework.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> I started off yesterday doing an "Upgrade."  But I found enough weirdness
> that I did an "Archive and Install" tonight.  It's an intel MacBook Pro.
>
> [Macintosh:/private/var/mysql] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
>
>
>
>
> On Oct 29, 2007, at 9:06 PM, Graham Dumpleton wrote:
> What does it say if you run:
>
>   file /usr/libexec/apache2/mod_wsgi.so
>
> BTW, is this a PPC or Intel machine?
>
> Did you do a fresh install or an upgrade of Leopard?
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Graham,
>
> Thanks for the help.  mod_wsgi didn't work either.  I've appended all the
> details below.
>
> -Ben
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% ls
> LICENCE Makefile-2.X.in configure mod_wsgi.c
> Makefile-1.X.in README configure.ac
> [Macintosh:local/src/mod_wsgi-1.2] benha% ./configure
> checking for apxs2... no
> checking for apxs... /usr/sbin/apxs
> checking for python... /usr/bin/python
> checking Apache version... 2.2.6
> configure: creating ./config.status
> config.status: creating Makefile
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  mod_wsgi.c -framework Python -u
> _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c && touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -framework Python -u _PyMac_Error -framework Python -ldl
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo su
> Password:
> sh-3.2# make install
> /usr/sbin/apxs -i -S LIBEXECDIR=/usr/libexec/apache2 -n 'mod_wsgi'
> mod_wsgi.la
> /usr/share/httpd/build/instdso.sh
> SH_LIBTOOL='/usr/share/apr-1/build-1/libtool' mod_wsgi.la
> /usr/libexec/apache2
> /usr/share/apr-1/build-1/libtool --mode=install cp
> mod_wsgi.la /usr/libexec/apache2/
> cp .libs/mod_wsgi.so /usr/libexec/apache2/mod_wsgi.so
> cp .libs/mod_wsgi.lai /usr/libexec/apache2/mod_wsgi.la
> cp .libs/mod_wsgi.a /usr/libexec/apache2/mod_wsgi.a
> ranlib /usr/libexec/apache2/mod_wsgi.a
> chmod 644 /usr/libexec/apache2/mod_wsgi.a
> ----------------------------------------------------------------------
> Libraries have been installed in:
>    /usr/libexec/apache2
>
> If you ever happen to want to link against installed libraries
> in a given directory, LIBDIR, you must either use libtool, and
> specify the full pathname of the library, or use the `-LLIBDIR'
> flag during linking and do at least one of the following:
>    - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
>      during execution
>
> See any operating system documentation about shared libraries for
> more information, such as the ld(1) and ld.so(8) manual pages.
> ----------------------------------------------------------------------
> chmod 755 /usr/libexec/apache2/mod_wsgi.so
> sh-3.2# exit
> exit
> [Macintosh:local/src/mod_wsgi-1.2] benha% sudo emacs /etc/apache2/httpd.conf
>
>
> ADDED the following line to httpd.conf:
> LoadModule wsgi_module libexec/apache2/mod_wsgi.so
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_wsgi.so: mach-o, but
> wrong architecture
> [Macintosh:local/src/mod_wsgi-1.2] benha%
>
>
>
>
>
>
> On Oct 29, 2007, at 2:30 PM, Graham Dumpleton wrote:
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hi, folks.
>
> I'm working on getting Django running again after upgrading to Leopard.
> I've hit a snag building / installing mod_python, and I'm hoping someone
> might know what's going on.
>
> I did the following:
> - downloaded the 3.3.1 source
> - .config --with-apxs=/usr/sbin/apxs
> - make
> - sudo make install
> - added to httpd.conf:  LoadModule python_module
> libexec/apache2/mod_python.so
>
> I then ran apachectl configtest and got an error:
>
> % apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_python.so into server:
> dlopen(/usr/libexec/apache2/mod_python.so, 10): no suitable
> image found.  Did
> find:\n\t/usr/libexec/apache2/mod_python.so: no matching
> architecture in universal wrapper
> Any ideas?  I've tried a bunch of things tracking this down, but I get this
> same error every time.
>
> Can you do a quick test and see if you can install mod_wsgi
> (http://www.modwsgi.org) instead. This can replace mod_python if all
> you want to host is Django, but more importantly it follows somewhat
> how mod_python is installed but is less complicated in the way it does
> it. It will be easier for me to debug what the problem is if mod_wsgi
> has the same issue. Can then apply what is learned from that back to
> mod_python and get it working.
>
> BTW, I presume you are using standard OS version of Python. Which
> version of Python does Leopard supply if that is the case?
>
> If you try mod_wsgi and it also fails, supply the output from doing
> the initial 'make' of it so can see all the compiler flags that are
> being used to build it, plus any output from compiler.
>
>
>
>
>
>
From graham.dumpleton at gmail.com  Tue Oct 30 01:05:04 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 01:05:10 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
	<88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
	<BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
	<88e286470710292147r3dba009ar9c75104cb9aca7bc@mail.gmail.com>
	<13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
Message-ID: <88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>

Okay, might now what the issue is now.

What may be happening is that Apache server is running up in Rosetta
(ie., PPC), and because the mod_wsgi/mod_python .so files are Intel
only it isn't working.

First step is to determine what Apache is running as. Think you can do
this by running 'Activity Viewer' or whatever they now call it. Ensure
that 'Kind' column is viewable and see what is against httpd
processes. Will be PowerPC or Intel. If it shows PowerPC, that will be
the problem.

To fix I think you run Finder, select Go->Go To Folder and enter
'/usr/sbin'. Then find 'httpd' and go File->GetInfo. From memory in
there somewhere is a way of marking the process to run as Intel rather
than PowerPC.

The question is that if this is necessary, why it is running as
PowerPC by default.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Sorry.  Missed what you were asking for.  Looks like most of them have all
> the architectures, but the Mach-O bundle i386 seems to be the same for the
> wsgi one and the others.
>
>
>
> [Macintosh:~/Documents/Development] benha% file
> /usr/libexec/apache2/*.so
> /usr/libexec/apache2/libphp5.so:             Mach-O
> universal binary with 4 architectures
> /usr/libexec/apache2/libphp5.so (for architecture ppc7400): Mach-O bundle
> ppc
> /usr/libexec/apache2/libphp5.so (for architecture ppc64): Mach-O 64-bit
> bundle ppc64
> /usr/libexec/apache2/libphp5.so (for architecture i386): Mach-O bundle i386
> /usr/libexec/apache2/libphp5.so (for architecture x86_64): Mach-O 64-bit
> bundle x86_64
> /usr/libexec/apache2/mod_actions.so:         Mach-O
> universal binary with 4 architectures
> /usr/libexec/apache2/mod_actions.so (for architecture
> ppc7400): Mach-O bundle ppc
> /usr/libexec/apache2/mod_actions.so (for architecture
> ppc64): Mach-O 64-bit bundle ppc64
> /usr/libexec/apache2/mod_actions.so (for architecture
> i386): Mach-O bundle i386
> /usr/libexec/apache2/mod_actions.so (for architecture
> x86_64): Mach-O 64-bit bundle x86_64
> ...
>
>
>
>
>
>
> On Oct 29, 2007, at 9:47 PM, Graham Dumpleton wrote:
> Was there no other .so files besides mod_wsgi.so in:
>
>   /usr/libexec/apache2
>
> Was wanting to see what 'file' yielded on other .so files in that directory.
>
> if there is no other .so files, would suggest that they are static
> linking core Apache modules, which they haven't done in the past.
>
> Anyway, I will bring it all up on Apache modules-dev list in case
> others have heard about such issues.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Looks ok to me, though we're way out of my depth at this point :-)
>
>
>
> [Macintosh:~/Documents/Development] benha% file
> /usr/sbin/httpd
> /usr/sbin/httpd: Mach-O universal binary with 4 architectures
> /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
> /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable ppc64
> /usr/sbin/httpd (for architecture i386): Mach-O executable i386
> /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable x86_64
> [Macintosh:~/Documents/Development] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
> [Macintosh:~/Documents/Development] benha%
>
>
>
>
> On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
> One more and then I will have exhausted my ideas and may have to
> research elsewhere.
>
>   file /usr/sbin/httpd
>
> Change path if this isn't what Apache server executable is called.
>
>   file /usr/libexec/apache2/*.so
>
> This is to see what other Apache and other modules are compiled as.
> Ie., Intel only or dual architecture etc.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so:
>  /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version
> 111.0.0)
>  /Library/Frameworks/Python.framework/Versions/2.5/Python
> (compatibility version 2.5.0, current version 2.5.0)
>  /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current version
> 1.0.0)
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
> How about:
>
>   otool -L /usr/libexec/apache2/mod_wsgi.so
>
> Should refer to standard Python framework.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> I started off yesterday doing an "Upgrade."  But I found enough weirdness
> that I did an "Archive and Install" tonight.  It's an intel MacBook Pro.
> ...
>
> [Message clipped]
From ben at mitchellfamily.com  Tue Oct 30 01:15:55 2007
From: ben at mitchellfamily.com (Ben Mitchell)
Date: Tue Oct 30 01:16:02 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<E08EE6DA-7EBE-4CDE-BDC3-3E897FF94DBF@mitchellfamily.com>
	<88e286470710292106p516980bbte02306b72c4650ba@mail.gmail.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
	<88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
	<BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
	<88e286470710292147r3dba009ar9c75104cb9aca7bc@mail.gmail.com>
	<13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
	<88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>
Message-ID: <8CA56D25-818F-4484-B527-20646905FF41@mitchellfamily.com>

You're on the right track, but off by a hair ;-)

Turns out httpd is an Intel (64 bit) process

Sooo...  I need to figure out how to get a 64-bit version of the .so  
built, when it's building only the 32-bit version by default.

Any thoughts on that?

And thanks.  I _never_ would've figured this one out on my own.

-Ben

On Oct 29, 2007, at 10:05 PM, Graham Dumpleton wrote:

Okay, might now what the issue is now.

What may be happening is that Apache server is running up in Rosetta
(ie., PPC), and because the mod_wsgi/mod_python .so files are Intel
only it isn't working.

First step is to determine what Apache is running as. Think you can do
this by running 'Activity Viewer' or whatever they now call it. Ensure
that 'Kind' column is viewable and see what is against httpd
processes. Will be PowerPC or Intel. If it shows PowerPC, that will be
the problem.

To fix I think you run Finder, select Go->Go To Folder and enter
'/usr/sbin'. Then find 'httpd' and go File->GetInfo. From memory in
there somewhere is a way of marking the process to run as Intel rather
than PowerPC.

The question is that if this is necessary, why it is running as
PowerPC by default.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Sorry.  Missed what you were asking for.  Looks like most of them  
> have all
> the architectures, but the Mach-O bundle i386 seems to be the same  
> for the
> wsgi one and the others.
>
>
>
> [Macintosh:~/Documents/Development] benha% file
> /usr/libexec/apache2/*.so
> /usr/libexec/apache2/libphp5.so:             Mach-O
> universal binary with 4 architectures
> /usr/libexec/apache2/libphp5.so (for architecture ppc7400): Mach-O  
> bundle
> ppc
> /usr/libexec/apache2/libphp5.so (for architecture ppc64): Mach-O 64- 
> bit
> bundle ppc64
> /usr/libexec/apache2/libphp5.so (for architecture i386): Mach-O  
> bundle i386
> /usr/libexec/apache2/libphp5.so (for architecture x86_64): Mach-O 64- 
> bit
> bundle x86_64
> /usr/libexec/apache2/mod_actions.so:         Mach-O
> universal binary with 4 architectures
> /usr/libexec/apache2/mod_actions.so (for architecture
> ppc7400): Mach-O bundle ppc
> /usr/libexec/apache2/mod_actions.so (for architecture
> ppc64): Mach-O 64-bit bundle ppc64
> /usr/libexec/apache2/mod_actions.so (for architecture
> i386): Mach-O bundle i386
> /usr/libexec/apache2/mod_actions.so (for architecture
> x86_64): Mach-O 64-bit bundle x86_64
> ...
>
>
>
>
>
>
> On Oct 29, 2007, at 9:47 PM, Graham Dumpleton wrote:
> Was there no other .so files besides mod_wsgi.so in:
>
>  /usr/libexec/apache2
>
> Was wanting to see what 'file' yielded on other .so files in that  
> directory.
>
> if there is no other .so files, would suggest that they are static
> linking core Apache modules, which they haven't done in the past.
>
> Anyway, I will bring it all up on Apache modules-dev list in case
> others have heard about such issues.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Looks ok to me, though we're way out of my depth at this point :-)
>
>
>
> [Macintosh:~/Documents/Development] benha% file
> /usr/sbin/httpd
> /usr/sbin/httpd: Mach-O universal binary with 4 architectures
> /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
> /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable  
> ppc64
> /usr/sbin/httpd (for architecture i386): Mach-O executable i386
> /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable  
> x86_64
> [Macintosh:~/Documents/Development] benha% file
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
> [Macintosh:~/Documents/Development] benha%
>
>
>
>
> On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
> One more and then I will have exhausted my ideas and may have to
> research elsewhere.
>
>  file /usr/sbin/httpd
>
> Change path if this isn't what Apache server executable is called.
>
>  file /usr/libexec/apache2/*.so
>
> This is to see what other Apache and other modules are compiled as.
> Ie., Intel only or dual architecture etc.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
> /usr/libexec/apache2/mod_wsgi.so
> /usr/libexec/apache2/mod_wsgi.so:
> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current  
> version
> 111.0.0)
> /Library/Frameworks/Python.framework/Versions/2.5/Python
> (compatibility version 2.5.0, current version 2.5.0)
> /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current  
> version
> 1.0.0)
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
> How about:
>
>  otool -L /usr/libexec/apache2/mod_wsgi.so
>
> Should refer to standard Python framework.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> I started off yesterday doing an "Upgrade."  But I found enough  
> weirdness
> that I did an "Archive and Install" tonight.  It's an intel MacBook  
> Pro.
> ...
>
> [Message clipped]

From graham.dumpleton at gmail.com  Tue Oct 30 01:23:59 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 01:24:07 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <8CA56D25-818F-4484-B527-20646905FF41@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
	<88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
	<BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
	<88e286470710292147r3dba009ar9c75104cb9aca7bc@mail.gmail.com>
	<13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
	<88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>
	<8CA56D25-818F-4484-B527-20646905FF41@mitchellfamily.com>
Message-ID: <88e286470710292223k195a5f68n29b2e8f2b5263528@mail.gmail.com>

Try editing Makefile and adding option to CFLAGS:

  CFLAGS = -Wc,-m64

At least I think that -m64 is the option. The -Wc, bit is to get it
past apxs/libtool build tool.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> You're on the right track, but off by a hair ;-)
>
> Turns out httpd is an Intel (64 bit) process
>
> Sooo...  I need to figure out how to get a 64-bit version of the .so
> built, when it's building only the 32-bit version by default.
>
> Any thoughts on that?
>
> And thanks.  I _never_ would've figured this one out on my own.
>
> -Ben
>
> On Oct 29, 2007, at 10:05 PM, Graham Dumpleton wrote:
>
> Okay, might now what the issue is now.
>
> What may be happening is that Apache server is running up in Rosetta
> (ie., PPC), and because the mod_wsgi/mod_python .so files are Intel
> only it isn't working.
>
> First step is to determine what Apache is running as. Think you can do
> this by running 'Activity Viewer' or whatever they now call it. Ensure
> that 'Kind' column is viewable and see what is against httpd
> processes. Will be PowerPC or Intel. If it shows PowerPC, that will be
> the problem.
>
> To fix I think you run Finder, select Go->Go To Folder and enter
> '/usr/sbin'. Then find 'httpd' and go File->GetInfo. From memory in
> there somewhere is a way of marking the process to run as Intel rather
> than PowerPC.
>
> The question is that if this is necessary, why it is running as
> PowerPC by default.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> > Sorry.  Missed what you were asking for.  Looks like most of them
> > have all
> > the architectures, but the Mach-O bundle i386 seems to be the same
> > for the
> > wsgi one and the others.
> >
> >
> >
> > [Macintosh:~/Documents/Development] benha% file
> > /usr/libexec/apache2/*.so
> > /usr/libexec/apache2/libphp5.so:             Mach-O
> > universal binary with 4 architectures
> > /usr/libexec/apache2/libphp5.so (for architecture ppc7400): Mach-O
> > bundle
> > ppc
> > /usr/libexec/apache2/libphp5.so (for architecture ppc64): Mach-O 64-
> > bit
> > bundle ppc64
> > /usr/libexec/apache2/libphp5.so (for architecture i386): Mach-O
> > bundle i386
> > /usr/libexec/apache2/libphp5.so (for architecture x86_64): Mach-O 64-
> > bit
> > bundle x86_64
> > /usr/libexec/apache2/mod_actions.so:         Mach-O
> > universal binary with 4 architectures
> > /usr/libexec/apache2/mod_actions.so (for architecture
> > ppc7400): Mach-O bundle ppc
> > /usr/libexec/apache2/mod_actions.so (for architecture
> > ppc64): Mach-O 64-bit bundle ppc64
> > /usr/libexec/apache2/mod_actions.so (for architecture
> > i386): Mach-O bundle i386
> > /usr/libexec/apache2/mod_actions.so (for architecture
> > x86_64): Mach-O 64-bit bundle x86_64
> > ...
> >
> >
> >
> >
> >
> >
> > On Oct 29, 2007, at 9:47 PM, Graham Dumpleton wrote:
> > Was there no other .so files besides mod_wsgi.so in:
> >
> >  /usr/libexec/apache2
> >
> > Was wanting to see what 'file' yielded on other .so files in that
> > directory.
> >
> > if there is no other .so files, would suggest that they are static
> > linking core Apache modules, which they haven't done in the past.
> >
> > Anyway, I will bring it all up on Apache modules-dev list in case
> > others have heard about such issues.
> >
> > Graham
> >
> > On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> >
> > Looks ok to me, though we're way out of my depth at this point :-)
> >
> >
> >
> > [Macintosh:~/Documents/Development] benha% file
> > /usr/sbin/httpd
> > /usr/sbin/httpd: Mach-O universal binary with 4 architectures
> > /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
> > /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable
> > ppc64
> > /usr/sbin/httpd (for architecture i386): Mach-O executable i386
> > /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable
> > x86_64
> > [Macintosh:~/Documents/Development] benha% file
> > /usr/libexec/apache2/mod_wsgi.so
> > /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
> > [Macintosh:~/Documents/Development] benha%
> >
> >
> >
> >
> > On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
> > One more and then I will have exhausted my ideas and may have to
> > research elsewhere.
> >
> >  file /usr/sbin/httpd
> >
> > Change path if this isn't what Apache server executable is called.
> >
> >  file /usr/libexec/apache2/*.so
> >
> > This is to see what other Apache and other modules are compiled as.
> > Ie., Intel only or dual architecture etc.
> >
> > Graham
> >
> > On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> >
> > [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
> > /usr/libexec/apache2/mod_wsgi.so
> > /usr/libexec/apache2/mod_wsgi.so:
> > /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current
> > version
> > 111.0.0)
> > /Library/Frameworks/Python.framework/Versions/2.5/Python
> > (compatibility version 2.5.0, current version 2.5.0)
> > /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current
> > version
> > 1.0.0)
> > [Macintosh:local/src/PyGreSQL-3.8.1] benha%
> >
> >
> >
> >
> > On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
> > How about:
> >
> >  otool -L /usr/libexec/apache2/mod_wsgi.so
> >
> > Should refer to standard Python framework.
> >
> > Graham
> >
> > On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> >
> > I started off yesterday doing an "Upgrade."  But I found enough
> > weirdness
> > that I did an "Archive and Install" tonight.  It's an intel MacBook
> > Pro.
> > ...
> >
> > [Message clipped]
>
>
From ben at mitchellfamily.com  Tue Oct 30 01:43:50 2007
From: ben at mitchellfamily.com (Ben Mitchell)
Date: Tue Oct 30 01:43:56 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <88e286470710292223k195a5f68n29b2e8f2b5263528@mail.gmail.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<ED3345C9-01F3-40D4-BE66-C143C4D8C667@mitchellfamily.com>
	<88e286470710292118o2039f18bwf02c25a71316ad4d@mail.gmail.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
	<88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
	<BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
	<88e286470710292147r3dba009ar9c75104cb9aca7bc@mail.gmail.com>
	<13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
	<88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>
	<8CA56D25-818F-4484-B527-20646905FF41@mitchellfamily.com>
	<88e286470710292223k195a5f68n29b2e8f2b5263528@mail.gmail.com>
Message-ID: <95043BA8-0A7D-4F01-9879-D4607865D034@mitchellfamily.com>

Hrmmm...

Not working.  I had to add the same flags to both CFLAGS and LDFLAGS  
to get it to make a 64-bit version (not sure that was the right  
move).  But now I get this:

sh-3.2# file /usr/libexec/apache2/mod_python.so
/usr/libexec/apache2/mod_python.so: Mach-O 64-bit bundle x86_64
sh-3.2# apachectl configtest
httpd: Syntax error on line 116 of /private/etc/apache2/httpd.conf:  
Can't locate API module structure `python_module' in file /usr/libexec/ 
apache2/mod_python.so: dlsym(0x1002179c0, python_module): symbol not  
found

Got something similar for mod_wsgi:

sh-3.2# apachectl configtest
httpd: Syntax error on line 117 of /private/etc/apache2/httpd.conf:  
Cannot load /usr/libexec/apache2/mod_wsgi.so into server: dlopen(/usr/ 
libexec/apache2/mod_wsgi.so, 10): Symbol not found: _PyExc_RuntimeError 
\n  Referenced from: /usr/libexec/apache2/mod_wsgi.so\n  Expected in:  
dynamic lookup\n


Anyway, I don't want to consume your evening with this :-)  I'll keep  
plugging away at it.  I really appreciate the help.  I think I'm at  
least on the right track now.

-Ben

On Oct 29, 2007, at 10:23 PM, Graham Dumpleton wrote:

Try editing Makefile and adding option to CFLAGS:

  CFLAGS = -Wc,-m64

At least I think that -m64 is the option. The -Wc, bit is to get it
past apxs/libtool build tool.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> You're on the right track, but off by a hair ;-)
>
> Turns out httpd is an Intel (64 bit) process
>
> Sooo...  I need to figure out how to get a 64-bit version of the .so
> built, when it's building only the 32-bit version by default.
>
> Any thoughts on that?
>
> And thanks.  I _never_ would've figured this one out on my own.
>
> -Ben
>
> On Oct 29, 2007, at 10:05 PM, Graham Dumpleton wrote:
>
> Okay, might now what the issue is now.
>
> What may be happening is that Apache server is running up in Rosetta
> (ie., PPC), and because the mod_wsgi/mod_python .so files are Intel
> only it isn't working.
>
> First step is to determine what Apache is running as. Think you can do
> this by running 'Activity Viewer' or whatever they now call it. Ensure
> that 'Kind' column is viewable and see what is against httpd
> processes. Will be PowerPC or Intel. If it shows PowerPC, that will be
> the problem.
>
> To fix I think you run Finder, select Go->Go To Folder and enter
> '/usr/sbin'. Then find 'httpd' and go File->GetInfo. From memory in
> there somewhere is a way of marking the process to run as Intel rather
> than PowerPC.
>
> The question is that if this is necessary, why it is running as
> PowerPC by default.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>> Sorry.  Missed what you were asking for.  Looks like most of them
>> have all
>> the architectures, but the Mach-O bundle i386 seems to be the same
>> for the
>> wsgi one and the others.
>>
>>
>>
>> [Macintosh:~/Documents/Development] benha% file
>> /usr/libexec/apache2/*.so
>> /usr/libexec/apache2/libphp5.so:             Mach-O
>> universal binary with 4 architectures
>> /usr/libexec/apache2/libphp5.so (for architecture ppc7400): Mach-O
>> bundle
>> ppc
>> /usr/libexec/apache2/libphp5.so (for architecture ppc64): Mach-O 64-
>> bit
>> bundle ppc64
>> /usr/libexec/apache2/libphp5.so (for architecture i386): Mach-O
>> bundle i386
>> /usr/libexec/apache2/libphp5.so (for architecture x86_64): Mach-O 64-
>> bit
>> bundle x86_64
>> /usr/libexec/apache2/mod_actions.so:         Mach-O
>> universal binary with 4 architectures
>> /usr/libexec/apache2/mod_actions.so (for architecture
>> ppc7400): Mach-O bundle ppc
>> /usr/libexec/apache2/mod_actions.so (for architecture
>> ppc64): Mach-O 64-bit bundle ppc64
>> /usr/libexec/apache2/mod_actions.so (for architecture
>> i386): Mach-O bundle i386
>> /usr/libexec/apache2/mod_actions.so (for architecture
>> x86_64): Mach-O 64-bit bundle x86_64
>> ...
>>
>>
>>
>>
>>
>>
>> On Oct 29, 2007, at 9:47 PM, Graham Dumpleton wrote:
>> Was there no other .so files besides mod_wsgi.so in:
>>
>> /usr/libexec/apache2
>>
>> Was wanting to see what 'file' yielded on other .so files in that
>> directory.
>>
>> if there is no other .so files, would suggest that they are static
>> linking core Apache modules, which they haven't done in the past.
>>
>> Anyway, I will bring it all up on Apache modules-dev list in case
>> others have heard about such issues.
>>
>> Graham
>>
>> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>>
>> Looks ok to me, though we're way out of my depth at this point :-)
>>
>>
>>
>> [Macintosh:~/Documents/Development] benha% file
>> /usr/sbin/httpd
>> /usr/sbin/httpd: Mach-O universal binary with 4 architectures
>> /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
>> /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable
>> ppc64
>> /usr/sbin/httpd (for architecture i386): Mach-O executable i386
>> /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable
>> x86_64
>> [Macintosh:~/Documents/Development] benha% file
>> /usr/libexec/apache2/mod_wsgi.so
>> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>> [Macintosh:~/Documents/Development] benha%
>>
>>
>>
>>
>> On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
>> One more and then I will have exhausted my ideas and may have to
>> research elsewhere.
>>
>> file /usr/sbin/httpd
>>
>> Change path if this isn't what Apache server executable is called.
>>
>> file /usr/libexec/apache2/*.so
>>
>> This is to see what other Apache and other modules are compiled as.
>> Ie., Intel only or dual architecture etc.
>>
>> Graham
>>
>> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>>
>> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
>> /usr/libexec/apache2/mod_wsgi.so
>> /usr/libexec/apache2/mod_wsgi.so:
>> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current
>> version
>> 111.0.0)
>> /Library/Frameworks/Python.framework/Versions/2.5/Python
>> (compatibility version 2.5.0, current version 2.5.0)
>> /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current
>> version
>> 1.0.0)
>> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>>
>>
>>
>>
>> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
>> How about:
>>
>> otool -L /usr/libexec/apache2/mod_wsgi.so
>>
>> Should refer to standard Python framework.
>>
>> Graham
>>
>> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>>
>> I started off yesterday doing an "Upgrade."  But I found enough
>> weirdness
>> that I did an "Archive and Install" tonight.  It's an intel MacBook
>> Pro.
>> ...
>>
>> [Message clipped]
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20071029/4ab3bb78/attachment.html
From graham.dumpleton at gmail.com  Tue Oct 30 01:47:02 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 01:47:08 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <95043BA8-0A7D-4F01-9879-D4607865D034@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<28904AD3-261B-4220-A1E4-6F2FE09EC871@mitchellfamily.com>
	<88e286470710292135t6476b179ta052c193a70b262b@mail.gmail.com>
	<BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
	<88e286470710292147r3dba009ar9c75104cb9aca7bc@mail.gmail.com>
	<13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
	<88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>
	<8CA56D25-818F-4484-B527-20646905FF41@mitchellfamily.com>
	<88e286470710292223k195a5f68n29b2e8f2b5263528@mail.gmail.com>
	<95043BA8-0A7D-4F01-9879-D4607865D034@mitchellfamily.com>
Message-ID: <88e286470710292247n65e9b884g132a451647950790@mail.gmail.com>

The one with mod_wsgi looks like it isn't linking Python Framework any
more. So, keep also checking with otool -L as well to make sure Python
library dependency is there.

Let me know what you work out.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hrmmm...
>
> Not working.  I had to add the same flags to both CFLAGS and LDFLAGS to get
> it to make a 64-bit version (not sure that was the right move).  But now I
> get this:
>
>
> sh-3.2# file /usr/libexec/apache2/mod_python.so
> /usr/libexec/apache2/mod_python.so: Mach-O 64-bit bundle
> x86_64
> sh-3.2# apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Can't locate API module
> structure `python_module' in file
> /usr/libexec/apache2/mod_python.so: dlsym(0x1002179c0,
> python_module): symbol not found
>
> Got something similar for mod_wsgi:
>
>
> sh-3.2# apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): Symbol not
> found: _PyExc_RuntimeError\n  Referenced from:
> /usr/libexec/apache2/mod_wsgi.so\n  Expected in: dynamic
> lookup\n
>
>
> Anyway, I don't want to consume your evening with this :-)  I'll keep
> plugging away at it.  I really appreciate the help.  I think I'm at least on
> the right track now.
>
> -Ben
>
> On Oct 29, 2007, at 10:23 PM, Graham Dumpleton wrote:
> Try editing Makefile and adding option to CFLAGS:
>
>   CFLAGS = -Wc,-m64
>
> At least I think that -m64 is the option. The -Wc, bit is to get it
> past apxs/libtool build tool.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> You're on the right track, but off by a hair ;-)
>
> Turns out httpd is an Intel (64 bit) process
>
> Sooo...  I need to figure out how to get a 64-bit version of the .so
> built, when it's building only the 32-bit version by default.
>
> Any thoughts on that?
>
> And thanks.  I _never_ would've figured this one out on my own.
>
> -Ben
>
> On Oct 29, 2007, at 10:05 PM, Graham Dumpleton wrote:
>
> Okay, might now what the issue is now.
>
> What may be happening is that Apache server is running up in Rosetta
> (ie., PPC), and because the mod_wsgi/mod_python .so files are Intel
> only it isn't working.
>
> First step is to determine what Apache is running as. Think you can do
> this by running 'Activity Viewer' or whatever they now call it. Ensure
> that 'Kind' column is viewable and see what is against httpd
> processes. Will be PowerPC or Intel. If it shows PowerPC, that will be
> the problem.
>
> To fix I think you run Finder, select Go->Go To Folder and enter
> '/usr/sbin'. Then find 'httpd' and go File->GetInfo. From memory in
> there somewhere is a way of marking the process to run as Intel rather
> than PowerPC.
>
> The question is that if this is necessary, why it is running as
> PowerPC by default.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Sorry.  Missed what you were asking for.  Looks like most of them
>
> have all
>
> the architectures, but the Mach-O bundle i386 seems to be the same
>
> for the
>
> wsgi one and the others.
>
>
>
>
>
>
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/libexec/apache2/*.so
>
> /usr/libexec/apache2/libphp5.so:             Mach-O
>
> universal binary with 4 architectures
>
> /usr/libexec/apache2/libphp5.so (for architecture ppc7400): Mach-O
>
> bundle
>
> ppc
>
> /usr/libexec/apache2/libphp5.so (for architecture ppc64): Mach-O 64-
>
> bit
>
> bundle ppc64
>
> /usr/libexec/apache2/libphp5.so (for architecture i386): Mach-O
>
> bundle i386
>
> /usr/libexec/apache2/libphp5.so (for architecture x86_64): Mach-O 64-
>
> bit
>
> bundle x86_64
>
> /usr/libexec/apache2/mod_actions.so:         Mach-O
>
> universal binary with 4 architectures
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> ppc7400): Mach-O bundle ppc
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> ppc64): Mach-O 64-bit bundle ppc64
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> i386): Mach-O bundle i386
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> x86_64): Mach-O 64-bit bundle x86_64
>
> ...
>
>
>
>
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:47 PM, Graham Dumpleton wrote:
>
> Was there no other .so files besides mod_wsgi.so in:
>
>
>
>  /usr/libexec/apache2
>
>
>
> Was wanting to see what 'file' yielded on other .so files in that
>
> directory.
>
>
>
> if there is no other .so files, would suggest that they are static
>
> linking core Apache modules, which they haven't done in the past.
>
>
>
> Anyway, I will bring it all up on Apache modules-dev list in case
>
> others have heard about such issues.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> Looks ok to me, though we're way out of my depth at this point :-)
>
>
>
>
>
>
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/sbin/httpd
>
> /usr/sbin/httpd: Mach-O universal binary with 4 architectures
>
> /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
>
> /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable
>
> ppc64
>
> /usr/sbin/httpd (for architecture i386): Mach-O executable i386
>
> /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable
>
> x86_64
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/libexec/apache2/mod_wsgi.so
>
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
> [Macintosh:~/Documents/Development] benha%
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
>
> One more and then I will have exhausted my ideas and may have to
>
> research elsewhere.
>
>
>
>  file /usr/sbin/httpd
>
>
>
> Change path if this isn't what Apache server executable is called.
>
>
>
>  file /usr/libexec/apache2/*.so
>
>
>
> This is to see what other Apache and other modules are compiled as.
>
> Ie., Intel only or dual architecture etc.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
>
> /usr/libexec/apache2/mod_wsgi.so
>
> /usr/libexec/apache2/mod_wsgi.so:
>
> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current
>
> version
>
> 111.0.0)
>
> /Library/Frameworks/Python.framework/Versions/2.5/Python
>
> (compatibility version 2.5.0, current version 2.5.0)
>
> /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current
>
> version
>
> 1.0.0)
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
>
> How about:
>
>
>
>  otool -L /usr/libexec/apache2/mod_wsgi.so
>
>
>
> Should refer to standard Python framework.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> I started off yesterday doing an "Upgrade."  But I found enough
>
> weirdness
>
> that I did an "Archive and Install" tonight.  It's an intel MacBook
>
> Pro.
>
> ...
>
>
>
> [Message clipped]
>
>
>
>
From graham.dumpleton at gmail.com  Tue Oct 30 06:13:31 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 06:13:37 2007
Subject: [mod_python] Trouble on OSX - Leopard
In-Reply-To: <32435AA5-BE56-46A5-B4FF-29AD8B2BC873@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<BF1DDF4B-32AF-4E59-9252-CD154CC366AD@mitchellfamily.com>
	<88e286470710292147r3dba009ar9c75104cb9aca7bc@mail.gmail.com>
	<13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
	<88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>
	<8CA56D25-818F-4484-B527-20646905FF41@mitchellfamily.com>
	<88e286470710292223k195a5f68n29b2e8f2b5263528@mail.gmail.com>
	<95043BA8-0A7D-4F01-9879-D4607865D034@mitchellfamily.com>
	<88e286470710292247n65e9b884g132a451647950790@mail.gmail.com>
	<32435AA5-BE56-46A5-B4FF-29AD8B2BC873@mitchellfamily.com>
Message-ID: <88e286470710300313y1b5c129do7be2745932226618@mail.gmail.com>

Hmmm, if that is a bit odd.

BTW, what architectures are included in mod_wsgi.so/mod_python.so if
you force use of compiler options:

  -arch ppc -arch i386

Check the gcc man page for what are the choices for -arch on Leopard.

Graham

On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Graham,
>
> Made some progress...
>
> Here's what appears to be the problem:
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c -Wc,-m64
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE -Wc,-m64 mod_wsgi.c -m64 -framework Python
> -u _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1  -m64
> -m64
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c && touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -m64 -framework Python -u _PyMac_Error -framework Python -ldl
> ld: warning in
> /Library/Frameworks//Python.framework/Python, missing
> required architecture x86_64 in file
> Per the last line, ld doesn't believe Python has a 64-bit version and, as a
> result, isn't linking it.  Same problem is breaking the build on mod_python.
>
> Curiously, an inspection of Python implies that it has a 64-bit version:
>
>
> [Macintosh:Library/Frameworks/Python.framework] benha% file
> Python
> Python: Mach-O universal binary with 4 architectures
> Python (for architecture ppc7400): Mach-O dynamically linked shared library
> ppc
> Python (for architecture ppc64): Mach-O 64-bit dynamically linked shared
> library ppc64
> Python (for architecture i386): Mach-O dynamically linked shared library
> i386
> Python (for architecture x86_64): Mach-O 64-bit dynamically linked shared
> library x86_64
>
> Anyway, that's pretty clearly the issue.  No solution yet, but I thought
> you'd like to know...
>
> -Ben
>
>
>
> On Oct 29, 2007, at 10:47 PM, Graham Dumpleton wrote:
> The one with mod_wsgi looks like it isn't linking Python Framework any
> more. So, keep also checking with otool -L as well to make sure Python
> library dependency is there.
>
> Let me know what you work out.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hrmmm...
>
> Not working.  I had to add the same flags to both CFLAGS and LDFLAGS to get
> it to make a 64-bit version (not sure that was the right move).  But now I
> get this:
>
>
> sh-3.2# file /usr/libexec/apache2/mod_python.so
> /usr/libexec/apache2/mod_python.so: Mach-O 64-bit bundle
> x86_64
> sh-3.2# apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Can't locate API module
> structure `python_module' in file
> /usr/libexec/apache2/mod_python.so: dlsym(0x1002179c0,
> python_module): symbol not found
>
> Got something similar for mod_wsgi:
>
>
> sh-3.2# apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): Symbol not
> found: _PyExc_RuntimeError\n  Referenced from:
> /usr/libexec/apache2/mod_wsgi.so\n  Expected in: dynamic
> lookup\n
>
>
> Anyway, I don't want to consume your evening with this :-)  I'll keep
> plugging away at it.  I really appreciate the help.  I think I'm at least on
> the right track now.
>
> -Ben
>
> On Oct 29, 2007, at 10:23 PM, Graham Dumpleton wrote:
> Try editing Makefile and adding option to CFLAGS:
>
>   CFLAGS = -Wc,-m64
>
> At least I think that -m64 is the option. The -Wc, bit is to get it
> past apxs/libtool build tool.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> You're on the right track, but off by a hair ;-)
>
> Turns out httpd is an Intel (64 bit) process
>
> Sooo...  I need to figure out how to get a 64-bit version of the .so
> built, when it's building only the 32-bit version by default.
>
> Any thoughts on that?
>
> And thanks.  I _never_ would've figured this one out on my own.
>
> -Ben
>
> On Oct 29, 2007, at 10:05 PM, Graham Dumpleton wrote:
>
> Okay, might now what the issue is now.
>
> What may be happening is that Apache server is running up in Rosetta
> (ie., PPC), and because the mod_wsgi/mod_python .so files are Intel
> only it isn't working.
>
> First step is to determine what Apache is running as. Think you can do
> this by running 'Activity Viewer' or whatever they now call it. Ensure
> that 'Kind' column is viewable and see what is against httpd
> processes. Will be PowerPC or Intel. If it shows PowerPC, that will be
> the problem.
>
> To fix I think you run Finder, select Go->Go To Folder and enter
> '/usr/sbin'. Then find 'httpd' and go File->GetInfo. From memory in
> there somewhere is a way of marking the process to run as Intel rather
> than PowerPC.
>
> The question is that if this is necessary, why it is running as
> PowerPC by default.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Sorry.  Missed what you were asking for.  Looks like most of them
>
> have all
>
> the architectures, but the Mach-O bundle i386 seems to be the same
>
> for the
>
> wsgi one and the others.
>
>
>
>
>
>
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/libexec/apache2/*.so
>
> /usr/libexec/apache2/libphp5.so:             Mach-O
>
> universal binary with 4 architectures
>
> /usr/libexec/apache2/libphp5.so (for architecture ppc7400): Mach-O
>
> bundle
>
> ppc
>
> /usr/libexec/apache2/libphp5.so (for architecture ppc64): Mach-O 64-
>
> bit
>
> bundle ppc64
>
> /usr/libexec/apache2/libphp5.so (for architecture i386): Mach-O
>
> bundle i386
>
> /usr/libexec/apache2/libphp5.so (for architecture x86_64): Mach-O 64-
>
> bit
>
> bundle x86_64
>
> /usr/libexec/apache2/mod_actions.so:         Mach-O
>
> universal binary with 4 architectures
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> ppc7400): Mach-O bundle ppc
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> ppc64): Mach-O 64-bit bundle ppc64
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> i386): Mach-O bundle i386
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> x86_64): Mach-O 64-bit bundle x86_64
>
> ...
>
>
>
>
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:47 PM, Graham Dumpleton wrote:
>
> Was there no other .so files besides mod_wsgi.so in:
>
>
>
>  /usr/libexec/apache2
>
>
>
> Was wanting to see what 'file' yielded on other .so files in that
>
> directory.
>
>
>
> if there is no other .so files, would suggest that they are static
>
> linking core Apache modules, which they haven't done in the past.
>
>
>
> Anyway, I will bring it all up on Apache modules-dev list in case
>
> others have heard about such issues.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> Looks ok to me, though we're way out of my depth at this point :-)
>
>
>
>
>
>
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/sbin/httpd
>
> /usr/sbin/httpd: Mach-O universal binary with 4 architectures
>
> /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
>
> /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable
>
> ppc64
>
> /usr/sbin/httpd (for architecture i386): Mach-O executable i386
>
> /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable
>
> x86_64
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/libexec/apache2/mod_wsgi.so
>
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
> [Macintosh:~/Documents/Development] benha%
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
>
> One more and then I will have exhausted my ideas and may have to
>
> research elsewhere.
>
>
>
>  file /usr/sbin/httpd
>
>
>
> Change path if this isn't what Apache server executable is called.
>
>
>
>  file /usr/libexec/apache2/*.so
>
>
>
> This is to see what other Apache and other modules are compiled as.
>
> Ie., Intel only or dual architecture etc.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
>
> /usr/libexec/apache2/mod_wsgi.so
>
> /usr/libexec/apache2/mod_wsgi.so:
>
> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current
>
> version
>
> 111.0.0)
>
> /Library/Frameworks/Python.framework/Versions/2.5/Python
>
> (compatibility version 2.5.0, current version 2.5.0)
>
> /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current
>
> version
>
> 1.0.0)
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
>
> How about:
>
>
>
>  otool -L /usr/libexec/apache2/mod_wsgi.so
>
>
>
> Should refer to standard Python framework.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> I started off yesterday doing an "Upgrade."  But I found enough
>
> weirdness
>
> that I did an "Archive and Install" tonight.  It's an intel MacBook
>
> Pro.
>
> ...
>
>
>
> [Message clipped]
>
>
>
>
>
>
From cameron.mcpherson at florey.edu.au  Tue Oct 30 10:25:48 2007
From: cameron.mcpherson at florey.edu.au (Cameron McPherson)
Date: Tue Oct 30 10:25:55 2007
Subject: [mod_python] how to create a 'submit' page while background
	function runs
Message-ID: <1973.128.250.42.13.1193754348.squirrel@moora.hfi.unimelb.edu.au>

I am using the mod_python publisher handler to control form data. It works fine, but
what I want to do is create a submit 'please wait while request is processed' kind
of page upon form submit.
AFAIK, publisher has to either return a string to complete, or use req.write(x)
followed by return(apache.OK) to finish. with this in mind, how can I return html
showing a submit page, whilst running the script on the form data in the background,
then return that html string when it's done?

I've tried javascript through the form onsubmit, which is fine for most form data
entered, except it chokes on the file upload value - it cannot pass this correctly
to the handler req object (I need it as req.form['file']), and the inbuilt read-only
prevents me from assigning it to a input file value using js (see below).

Any ideas on implementing this are greatly appreciated.


Cam.


==> submits sequence or file to 'ProcessForm'; calls 'submitCheck()' first
<form enctype="multipart/form-data" action= "./ProcessForm" method="post"
onsubmit="submitCheck()" name="ppg">
    <p><input type="textarea" name="sequence" maxlength="100000"
autofocus="autofocus" cols="80" rows="10" wrap="hard" /></p>
    <p><input type="file" name="file" /> &nbsp;&nbsp;<input type="submit"
value="submit" /> <input type="reset" value="reset" /></p>
...
</form>

==> Processes form data, returns a formatted string to the client
def ProcessForm(req): # called from 'submit'
...
    if not sequence: # (or =='')
        fileitem=req.form['file']
        if fileitem.filename:    #check that file was uploaded
...         #process uploaded file data
        return Display(req,probeList)

==> Hack job to try to make a submit page w' JS - works fine for form data
'sequence' in the form textarea, but cannot adequately pass the file item data to
the 'ProcessForm' script (ie: i think it's not recognised properly as a req object
file? I've commented out the bits which dont work)
function submitCheck() {
    if (document.forms.ppg.sequence.value) {
    var seq=document.forms.ppg.sequence.value
    var fil=document.forms.ppg.file.value
    var gen=document.forms.ppg.gene_id.value
    var num=document.forms.ppg.number_probes.value
    var smin=document.forms.ppg.size_min.value
    var smax=document.forms.ppg.size_max.value
    var tmin=document.forms.ppg.tm_min.value
    var tmax=document.forms.ppg.tm_max.value
    var gmin=document.forms.ppg.gc_min.value
    var gmax=document.forms.ppg.gc_max.value
    var subS1="<html>\n<head>\n<link rel=\"stylesheet\" type=\"text/css\"
href=\"./assets/style/style.css\" />\n</head>\n<body>\n<h3
style=\"text-decoration:blink;\">Please wait while your request is
processed...</h3>";
    var subS2="</form>\n</body>\n</html>";
    document.write(subS1);
    document.write("<form enctype=\"multipart/form-data\" action=\"./ProcessForm\"
method=\"post\" onsubmit=\"submitResult()\" name=\"ppgSubmit\">");
    document.write("<input type=\"hidden\" name=\"sequence\" value="+seq+">");
    //document.write("<input type=\"file\" name=\"file\" value="+fil+">");
    //document.write("<input type=\"hidden\" name=\"file\" value="+fil+">");
    document.write("<input type=\"hidden\" name=\"gene_id\" value="+gen+">");
    document.write("<input type=\"hidden\" name=\"number_probes\" value="+num+">");
    document.write("<input type=\"hidden\" name=\"size_min\" value="+smin+">");
    document.write("<input type=\"hidden\" name=\"size_max\" value="+smax+">");
    document.write("<input type=\"hidden\" name=\"tm_min\" value="+tmin+">");
    document.write("<input type=\"hidden\" name=\"tm_max\" value="+tmax+">");
    document.write("<input type=\"hidden\" name=\"gc_min\" value="+gmin+">");
    document.write("<input type=\"hidden\" name=\"gc_max\" value="+gmax+">");
    document.write(subS2);
    document.forms.ppgSubmit.submit();
    //alert(fil);
    }
}








From elias.collas at gulfstream.com  Tue Oct 30 16:35:22 2007
From: elias.collas at gulfstream.com (elias.collas@gulfstream.com)
Date: Tue Oct 30 16:36:57 2007
Subject: [mod_python] how to create a 'submit' page while
	background	function runs
In-Reply-To: <1973.128.250.42.13.1193754348.squirrel@moora.hfi.unimelb.edu.au>
Message-ID: <OFD0B24EF8.F48CC43E-ON85257384.00709881-85257384.00711A40@zeus.git.gulfaero.com>


Cam,
I've had good success with the AJAX file upload found at
http://www.webtoolkit.info/ajax-file-upload.html

It uses a hidden IFrame to load the file asynchronously. You can define a
'onStart' callback that writes your message to the client while the file is
uploading.

Hope this helps.

Elias Collas
Stress Methods Group
Gulfstream Aerospace Corp


This e-mail message, including all attachments, is for the sole use of the
intended recipient(s) and may contain legally privileged and confidential
information.  If you are not an intended recipient, you are hereby notified
that you have either received this message in error or through
interception, and that any review, use, distribution, copying or disclosure
of this message or its attachments is strictly prohibited and is subject to
criminal and civil penalties.  All personal messages express solely the
sender's views and not those of Gulfstream Aerospace Corporation.  If you
received this message in error, please contact the sender by reply e-mail
and destroy all copies of the original message.



From graham.dumpleton at gmail.com  Tue Oct 30 17:00:40 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 17:00:46 2007
Subject: Success! [Was: Re: [mod_python] Trouble on OSX - Leopard]
In-Reply-To: <BB6A3726-D049-4C4A-8B02-646D36D80900@mitchellfamily.com>
References: <AD500BFB-22DA-40DB-BFD7-658847357776@mitchellfamily.com>
	<13F2E99F-5823-46C5-A28A-BDB6E50F78EC@mitchellfamily.com>
	<88e286470710292205v6988d359jbee2e5518b58a99@mail.gmail.com>
	<8CA56D25-818F-4484-B527-20646905FF41@mitchellfamily.com>
	<88e286470710292223k195a5f68n29b2e8f2b5263528@mail.gmail.com>
	<95043BA8-0A7D-4F01-9879-D4607865D034@mitchellfamily.com>
	<88e286470710292247n65e9b884g132a451647950790@mail.gmail.com>
	<32435AA5-BE56-46A5-B4FF-29AD8B2BC873@mitchellfamily.com>
	<88e286470710300313y1b5c129do7be2745932226618@mail.gmail.com>
	<BB6A3726-D049-4C4A-8B02-646D36D80900@mitchellfamily.com>
Message-ID: <88e286470710301400o6bd6ec60v45d30f5d2e8b5714@mail.gmail.com>

Bouncing this back to the list so anyone else wanting to get it
working on Leopard knows the magic.

One thing I would like to see though. Can you dig into the
lib/python2.5/config directory of your Python installation and post
extract from there which shows the compiler flags that Python itself
uses when building extension modules. We may find that it has the
-arch flags in there, but both mod_python and mod_wsgi ignore them for
various reasons.

Thanks for tracking this through.

Graham

On 31/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> OK.  I got it!
>
> At this point, both mod_wsgi and mod_python appear to be installed and
> working properly.
>
> For mod_python I had to make the following modifications to
> .../src/Makefile:
>
> Add -arch x86_64 to the LDFLAGS line
>
> Change the build line in mod_python.so to:
> $(APXS) $(INCLUDES) -c -Wc,"-arch x86_64" $(SRCS) $(LDFLAGS) $(LIBS)
>
> I'm sure there's a cleaner / more generic way to make this happen, but I was
> more interested in "getting 'er done" at this point.
>
> mod_wsgi was easier.  I actually built it as a "universal binary":
> CPPFLAGS = -Wc,"-arch ppc" -Wc,"-arch i386" -Wc,"-arch x86_64"
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE
> CFLAGS = -Wc,"-arch ppc" -Wc,"-arch i386" -Wc,"-arch x86_64"
> LDFLAGS = -arch ppc -arch i386 -arch x86_64 -framework Python -u
> _PyMac_Error -framework Python
>
> Thanks again for all your help.  I really appreciate it.
>
> -Ben
>
>
>
> On Oct 30, 2007, at 3:13 AM, Graham Dumpleton wrote:
> Hmmm, if that is a bit odd.
>
> BTW, what architectures are included in mod_wsgi.so/mod_python.so if
> you force use of compiler options:
>
>   -arch ppc -arch i386
>
> Check the gcc man page for what are the choices for -arch on Leopard.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Graham,
>
> Made some progress...
>
> Here's what appears to be the problem:
>
>
> [Macintosh:local/src/mod_wsgi-1.2] benha% make
> /usr/sbin/apxs -c -Wc,-m64
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE -Wc,-m64 mod_wsgi.c -m64 -framework Python
> -u _PyMac_Error -framework Python -ldl
> /usr/share/apr-1/build-1/libtool --silent --mode=compile
> gcc    -DDARWIN -DSIGPROCMASK_SETS_THREAD_MASK -no-cpp-precomp
> -I/usr/include/apache2  -I/usr/include/apr-1   -I/usr/include/apr-1  -m64
> -m64
> -I/System/Library/Frameworks/Python.framework/Versions/2.5/include/python2.5
> -DNDEBUG -DMACOSX -DENABLE_DTRACE  -c -o mod_wsgi.lo mod_wsgi.c && touch
> mod_wsgi.slo
> /usr/share/apr-1/build-1/libtool --silent --mode=link gcc
> -o mod_wsgi.la  -rpath /usr/libexec/apache2 -module -avoid-version
> mod_wsgi.lo -m64 -framework Python -u _PyMac_Error -framework Python -ldl
> ld: warning in
> /Library/Frameworks//Python.framework/Python, missing
> required architecture x86_64 in file
> Per the last line, ld doesn't believe Python has a 64-bit version and, as a
> result, isn't linking it.  Same problem is breaking the build on mod_python.
>
> Curiously, an inspection of Python implies that it has a 64-bit version:
>
>
> [Macintosh:Library/Frameworks/Python.framework] benha% file
> Python
> Python: Mach-O universal binary with 4 architectures
> Python (for architecture ppc7400): Mach-O dynamically linked shared library
> ppc
> Python (for architecture ppc64): Mach-O 64-bit dynamically linked shared
> library ppc64
> Python (for architecture i386): Mach-O dynamically linked shared library
> i386
> Python (for architecture x86_64): Mach-O 64-bit dynamically linked shared
> library x86_64
>
> Anyway, that's pretty clearly the issue.  No solution yet, but I thought
> you'd like to know...
>
> -Ben
>
>
>
> On Oct 29, 2007, at 10:47 PM, Graham Dumpleton wrote:
> The one with mod_wsgi looks like it isn't linking Python Framework any
> more. So, keep also checking with otool -L as well to make sure Python
> library dependency is there.
>
> Let me know what you work out.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> Hrmmm...
>
> Not working.  I had to add the same flags to both CFLAGS and LDFLAGS to get
> it to make a 64-bit version (not sure that was the right move).  But now I
> get this:
>
>
> sh-3.2# file /usr/libexec/apache2/mod_python.so
> /usr/libexec/apache2/mod_python.so: Mach-O 64-bit bundle
> x86_64
> sh-3.2# apachectl configtest
> httpd: Syntax error on line 116 of
> /private/etc/apache2/httpd.conf: Can't locate API module
> structure `python_module' in file
> /usr/libexec/apache2/mod_python.so: dlsym(0x1002179c0,
> python_module): symbol not found
>
> Got something similar for mod_wsgi:
>
>
> sh-3.2# apachectl configtest
> httpd: Syntax error on line 117 of
> /private/etc/apache2/httpd.conf: Cannot load
> /usr/libexec/apache2/mod_wsgi.so into server:
> dlopen(/usr/libexec/apache2/mod_wsgi.so, 10): Symbol not
> found: _PyExc_RuntimeError\n  Referenced from:
> /usr/libexec/apache2/mod_wsgi.so\n  Expected in: dynamic
> lookup\n
>
>
> Anyway, I don't want to consume your evening with this :-)  I'll keep
> plugging away at it.  I really appreciate the help.  I think I'm at least on
> the right track now.
>
> -Ben
>
> On Oct 29, 2007, at 10:23 PM, Graham Dumpleton wrote:
> Try editing Makefile and adding option to CFLAGS:
>
>   CFLAGS = -Wc,-m64
>
> At least I think that -m64 is the option. The -Wc, bit is to get it
> past apxs/libtool build tool.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
> You're on the right track, but off by a hair ;-)
>
> Turns out httpd is an Intel (64 bit) process
>
> Sooo...  I need to figure out how to get a 64-bit version of the .so
> built, when it's building only the 32-bit version by default.
>
> Any thoughts on that?
>
> And thanks.  I _never_ would've figured this one out on my own.
>
> -Ben
>
> On Oct 29, 2007, at 10:05 PM, Graham Dumpleton wrote:
>
> Okay, might now what the issue is now.
>
> What may be happening is that Apache server is running up in Rosetta
> (ie., PPC), and because the mod_wsgi/mod_python .so files are Intel
> only it isn't working.
>
> First step is to determine what Apache is running as. Think you can do
> this by running 'Activity Viewer' or whatever they now call it. Ensure
> that 'Kind' column is viewable and see what is against httpd
> processes. Will be PowerPC or Intel. If it shows PowerPC, that will be
> the problem.
>
> To fix I think you run Finder, select Go->Go To Folder and enter
> '/usr/sbin'. Then find 'httpd' and go File->GetInfo. From memory in
> there somewhere is a way of marking the process to run as Intel rather
> than PowerPC.
>
> The question is that if this is necessary, why it is running as
> PowerPC by default.
>
> Graham
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
> Sorry.  Missed what you were asking for.  Looks like most of them
>
> have all
>
> the architectures, but the Mach-O bundle i386 seems to be the same
>
> for the
>
> wsgi one and the others.
>
>
>
>
>
>
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/libexec/apache2/*.so
>
> /usr/libexec/apache2/libphp5.so:             Mach-O
>
> universal binary with 4 architectures
>
> /usr/libexec/apache2/libphp5.so (for architecture ppc7400): Mach-O
>
> bundle
>
> ppc
>
> /usr/libexec/apache2/libphp5.so (for architecture ppc64): Mach-O 64-
>
> bit
>
> bundle ppc64
>
> /usr/libexec/apache2/libphp5.so (for architecture i386): Mach-O
>
> bundle i386
>
> /usr/libexec/apache2/libphp5.so (for architecture x86_64): Mach-O 64-
>
> bit
>
> bundle x86_64
>
> /usr/libexec/apache2/mod_actions.so:         Mach-O
>
> universal binary with 4 architectures
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> ppc7400): Mach-O bundle ppc
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> ppc64): Mach-O 64-bit bundle ppc64
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> i386): Mach-O bundle i386
>
> /usr/libexec/apache2/mod_actions.so (for architecture
>
> x86_64): Mach-O 64-bit bundle x86_64
>
> ...
>
>
>
>
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:47 PM, Graham Dumpleton wrote:
>
> Was there no other .so files besides mod_wsgi.so in:
>
>
>
>  /usr/libexec/apache2
>
>
>
> Was wanting to see what 'file' yielded on other .so files in that
>
> directory.
>
>
>
> if there is no other .so files, would suggest that they are static
>
> linking core Apache modules, which they haven't done in the past.
>
>
>
> Anyway, I will bring it all up on Apache modules-dev list in case
>
> others have heard about such issues.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> Looks ok to me, though we're way out of my depth at this point :-)
>
>
>
>
>
>
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/sbin/httpd
>
> /usr/sbin/httpd: Mach-O universal binary with 4 architectures
>
> /usr/sbin/httpd (for architecture ppc7400): Mach-O executable ppc
>
> /usr/sbin/httpd (for architecture ppc64): Mach-O 64-bit executable
>
> ppc64
>
> /usr/sbin/httpd (for architecture i386): Mach-O executable i386
>
> /usr/sbin/httpd (for architecture x86_64): Mach-O 64-bit executable
>
> x86_64
>
> [Macintosh:~/Documents/Development] benha% file
>
> /usr/libexec/apache2/mod_wsgi.so
>
> /usr/libexec/apache2/mod_wsgi.so: Mach-O bundle i386
>
> [Macintosh:~/Documents/Development] benha%
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:35 PM, Graham Dumpleton wrote:
>
> One more and then I will have exhausted my ideas and may have to
>
> research elsewhere.
>
>
>
>  file /usr/sbin/httpd
>
>
>
> Change path if this isn't what Apache server executable is called.
>
>
>
>  file /usr/libexec/apache2/*.so
>
>
>
> This is to see what other Apache and other modules are compiled as.
>
> Ie., Intel only or dual architecture etc.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha% otool -L
>
> /usr/libexec/apache2/mod_wsgi.so
>
> /usr/libexec/apache2/mod_wsgi.so:
>
> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current
>
> version
>
> 111.0.0)
>
> /Library/Frameworks/Python.framework/Versions/2.5/Python
>
> (compatibility version 2.5.0, current version 2.5.0)
>
> /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current
>
> version
>
> 1.0.0)
>
> [Macintosh:local/src/PyGreSQL-3.8.1] benha%
>
>
>
>
>
>
>
>
>
> On Oct 29, 2007, at 9:18 PM, Graham Dumpleton wrote:
>
> How about:
>
>
>
>  otool -L /usr/libexec/apache2/mod_wsgi.so
>
>
>
> Should refer to standard Python framework.
>
>
>
> Graham
>
>
>
> On 30/10/2007, Ben Mitchell <ben@mitchellfamily.com> wrote:
>
>
>
> I started off yesterday doing an "Upgrade."  But I found enough
>
> weirdness
>
> that I did an "Archive and Install" tonight.  It's an intel MacBook
>
> Pro.
>
> ...
>
>
>
> [Message clipped]
>
>
>
>
>
>
>
>
From rguha at indiana.edu  Tue Oct 30 19:16:42 2007
From: rguha at indiana.edu (Rajarshi Guha)
Date: Tue Oct 30 19:16:49 2007
Subject: [mod_python] weird import problems with mod_python
Message-ID: <F2A508A3-F15D-442D-844C-67DAEF792320@indiana.edu>

Hi, I'm running Apache 2.0.2, Python 2.3.4 on a RHEL 4 machine and  
mod_python 3.1.3

I have a mod_python program, junk.py, that looks like

import sys
import calc

def index(req):
     return sys.path

Here calc is a Python file in the same directory as junk.py. Thus I  
expected that it would import with no problem. If I comment out the  
import calc line I get the value of sys.path as

['/home/*/public_html/', '/usr/lib/python23.zip', '/usr/lib/ 
python2.3', '/usr/lib/python2.3/plat-linux2', '/usr/lib/python2.3/lib- 
tk', '/usr/lib/python2.3/lib-dynload', '/usr/lib/python2.3/site- 
packages', '/usr/lib/python2.3/site-packages/gtk-2.0', './']

If however the import calc line is uncommented then visiting the URL

http://sulu.informatics.indiana.edu/~rguha/junk.py/

will report:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line  
299, in HandlerDispatch
     result = object(req)

   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py",  
line 98, in handler
     path=[path])

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line  
457, in import_module
     module = imp.load_module(mname, f, p, d)

   File "/home/rguha/public_html/junk.py", line 5, in ?

ImportError: No module named calc

But then reloading that URL will then show the expected result.   
Reloading once more shows

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line  
299, in HandlerDispatch
     result = object(req)

   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py",  
line 98, in handler
     path=[path])

   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line  
457, in import_module
     module = imp.load_module(mname, f, p, d)

   File "/home/rguha/public_html/junk.py", line 5, in ?
     def index(req):

ImportError: No module named calc


THis is very weird and I can't seem to work out what's happening -  
sometimes it will load and work, other times it will throw an  
ImportError but at different places.

Any pointers would be very much appreciated!


-------------------------------------------------------------------
Rajarshi Guha  <rguha@indiana.edu>
GPG Fingerprint: 0CCA 8EE2 2EEB 25E2 AB04  06F7 1BB9 E634 9B87 56EE
-------------------------------------------------------------------
A meeting is an event at which the minutes are
kept and the hours are lost.


From graham.dumpleton at gmail.com  Tue Oct 30 20:24:27 2007
From: graham.dumpleton at gmail.com (Graham Dumpleton)
Date: Tue Oct 30 20:24:35 2007
Subject: [mod_python] weird import problems with mod_python
In-Reply-To: <F2A508A3-F15D-442D-844C-67DAEF792320@indiana.edu>
References: <F2A508A3-F15D-442D-844C-67DAEF792320@indiana.edu>
Message-ID: <88e286470710301724j5aee05dcx2cd7998dd5732b03@mail.gmail.com>

Upgrade to mod_python 3.3.1. The older version you are using is buggy.
For all the gory details of why you shouldn't be using such an old
version read:

  http://www.dscpl.com.au/wiki/ModPython/Articles/ModuleImportingIsBroken

Graham

On 31/10/2007, Rajarshi Guha <rguha@indiana.edu> wrote:
> Hi, I'm running Apache 2.0.2, Python 2.3.4 on a RHEL 4 machine and
> mod_python 3.1.3
>
> I have a mod_python program, junk.py, that looks like
>
> import sys
> import calc
>
> def index(req):
>      return sys.path
>
> Here calc is a Python file in the same directory as junk.py. Thus I
> expected that it would import with no problem. If I comment out the
> import calc line I get the value of sys.path as
>
> ['/home/*/public_html/', '/usr/lib/python23.zip', '/usr/lib/
> python2.3', '/usr/lib/python2.3/plat-linux2', '/usr/lib/python2.3/lib-
> tk', '/usr/lib/python2.3/lib-dynload', '/usr/lib/python2.3/site-
> packages', '/usr/lib/python2.3/site-packages/gtk-2.0', './']
>
> If however the import calc line is uncommented then visiting the URL
>
> http://sulu.informatics.indiana.edu/~rguha/junk.py/
>
> will report:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>      result = object(req)
>
>    File "/usr/lib/python2.3/site-packages/mod_python/publisher.py",
> line 98, in handler
>      path=[path])
>
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 457, in import_module
>      module = imp.load_module(mname, f, p, d)
>
>    File "/home/rguha/public_html/junk.py", line 5, in ?
>
> ImportError: No module named calc
>
> But then reloading that URL will then show the expected result.
> Reloading once more shows
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>      result = object(req)
>
>    File "/usr/lib/python2.3/site-packages/mod_python/publisher.py",
> line 98, in handler
>      path=[path])
>
>    File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 457, in import_module
>      module = imp.load_module(mname, f, p, d)
>
>    File "/home/rguha/public_html/junk.py", line 5, in ?
>      def index(req):
>
> ImportError: No module named calc
>
>
> THis is very weird and I can't seem to work out what's happening -
> sometimes it will load and work, other times it will throw an
> ImportError but at different places.
>
> Any pointers would be very much appreciated!
>
>
> -------------------------------------------------------------------
> Rajarshi Guha  <rguha@indiana.edu>
> GPG Fingerprint: 0CCA 8EE2 2EEB 25E2 AB04  06F7 1BB9 E634 9B87 56EE
> -------------------------------------------------------------------
> A meeting is an event at which the minutes are
> kept and the hours are lost.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
