From yjfuk at 126.com  Sat Apr  1 11:04:32 2006
From: yjfuk at 126.com (yjfuk)
Date: Sat Apr  1 11:04:51 2006
Subject: [mod_python] mod_python session problem
Message-ID: <442EA490.0000CF.10329@m67.126.com>

code below:
from mod_python import Session
def index(req)
  sess=Session.Session(req)
  if sess.is_new():
    sess['num']=0
    sess.save()
  else:
    sess['num']+=1
    sess.save()
    req.write(str(sess['num']))
 
 
when I reflush the browser some times ,the session is usually lost .
I run it in windows XP(sp2),python 2.4.2, mod_python 3.2.8 

 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060402/29b9b902/attachment.html
From luismg at gmx.net  Sat Apr  1 13:44:14 2006
From: luismg at gmx.net (Luis M. Gonzalez)
Date: Sat Apr  1 13:44:10 2006
Subject: [mod_python] importing module
Message-ID: <000b01c655bc$4864b550$e69debc9@luis>

I've been trying to solve an import problem, and I came across a strange behaviour when using firefox or opera as web browser.
This is the script:

    #myscript.py
    from utils import table
    import MySQLdb
    con = MySQLdb.connect('localhost','root','','vic')
    cur = con.cursor()
    cur.execute('select * from clientes')

    def index(req):
        req.content_type='text/htm'
        req.write(table(cur))

"utils.py" is a module placed in htdocs directory which contains a function for representing tabular data.

The problem I see is that when trying to access http://localhost/myscript.py,  I get an "Open" dialog in my browser, prompting me to open or save the file on disk.
It doesn't happend when using Internet Explorer, which works fine.

What is the problem?
This is my http.conf configuration:

    <Directory "C:/Archivos de programa/xampp/htdocs">
    AddHandler python-program .py .psp
    PythonHandler mod_python.publisher | .py
    PythonHandler mod_python.psp | .psp
    </Directory>

I would appreciate a hint to solve this...
Thanks in advance!
LUIS
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060401/e6455b28/attachment.html
From jpg at jgassociates.ca  Sat Apr  1 14:27:41 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Apr  1 14:26:26 2006
Subject: [mod_python] importing module
In-Reply-To: <000b01c655bc$4864b550$e69debc9@luis>
References: <000b01c655bc$4864b550$e69debc9@luis>
Message-ID: <442ED42D.9060002@jgassociates.ca>

Luis M. Gonzalez wrote:
> I've been trying to solve an import problem, and I came across a strange behaviour when using firefox or opera as web browser.
> This is the script:
> 
>     #myscript.py
>     from utils import table
>     import MySQLdb
>     con = MySQLdb.connect('localhost','root','','vic')
>     cur = con.cursor()
>     cur.execute('select * from clientes')
> 
>     def index(req):
>         req.content_type='text/htm'
>         req.write(table(cur))
> 
> "utils.py" is a module placed in htdocs directory which contains a function for representing tabular data.
> 
> The problem I see is that when trying to access http://localhost/myscript.py,  I get an "Open" dialog in my browser, prompting me to open or save the file on disk.
> It doesn't happend when using Internet Explorer, which works fine.
> 
> What is the problem?

Use req.content_type = 'text/html'. Firefox is picky about the correct 
mime type.

Jim
From jpg at jgassociates.ca  Sat Apr  1 14:28:55 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Apr  1 14:27:41 2006
Subject: [mod_python] mod_python session problem
In-Reply-To: <442EA490.0000CF.10329@m67.126.com>
References: <442EA490.0000CF.10329@m67.126.com>
Message-ID: <442ED477.4080206@jgassociates.ca>

yjfuk wrote:
> code below:
> from mod_python import Session
> def index(req)
>   sess=Session.Session(req)
>   if sess.is_new():
>     sess['num']=0
>     sess.save()
>   else:
>     sess['num']+=1
>     sess.save()
>     req.write(str(sess['num']))
>  
>  
> when I reflush the browser some times ,the session is usually lost .
> I run it in windows XP(sp2),python 2.4.2, mod_python 3.2.8 

Does reflush mean refresh or restart?

Jim


From luismg at gmx.net  Sat Apr  1 16:08:14 2006
From: luismg at gmx.net (Luis M. Gonzalez)
Date: Sat Apr  1 16:08:09 2006
Subject: [mod_python] importing module
References: <000b01c655bc$4864b550$e69debc9@luis>
	<442ED42D.9060002@jgassociates.ca>
Message-ID: <001f01c655d0$665fc9f0$e69debc9@luis>

> Use req.content_type = 'text/html'. Firefox is picky about the correct 
> mime type.

But I used it already. See the code again:

>>     #myscript.py
>>     from utils import table
>>     import MySQLdb
>>     con = MySQLdb.connect('localhost','root','','vic')
>>     cur = con.cursor()
>>     cur.execute('select * from clientes')
>> 
>>     def index(req):
>>         req.content_type='text/htm'
>>         req.write(table(cur))

From luismg at gmx.net  Sat Apr  1 16:10:45 2006
From: luismg at gmx.net (Luis M. Gonzalez)
Date: Sat Apr  1 16:10:38 2006
Subject: [mod_python] importing module
References: <000b01c655bc$4864b550$e69debc9@luis>
	<442ED42D.9060002@jgassociates.ca>
Message-ID: <002401c655d0$bfe5e130$e69debc9@luis>

Ohh! I see...
The problem is that I used "htm" instead of "html".
It works now...

Thanks!

LUIS


> 
> Use req.content_type = 'text/html'. Firefox is picky about the correct 
> mime type.
> 
> Jim
>
From gdamjan at mail.net.mk  Sat Apr  1 18:29:16 2006
From: gdamjan at mail.net.mk (Damjan)
Date: Sat Apr  1 18:29:20 2006
Subject: [mod_python] WSGI server
In-Reply-To: <442C2CC8.6040308@dd.revealed.net>
References: <435DF58A933BA74397B42CDEB8145A860114401E@ex9.hostedexchange.local>
	<442C2CC8.6040308@dd.revealed.net>
Message-ID: <20060401232916.GA28211@legolas.on.net.mk>

> >  2. I've found a passthrough file wrapper "plays nicer" with large
> > applications than a tempfile. YMMV.
> 
> Yeah, I have seen this mostly implemented that way and considered it.  The
> main problem I have is that the spec says that wsgi.input is a file "like"
> object.  A passthru wrapper doesn't let me seek or tell, and if you're

There's a list of methods that wsgi.input and wsgi.error MUST support
http://www.python.org/dev/peps/pep-0333/#id19 and seek and tell are not
listed. Also PEP-333 FORBIDS calling any other methods of those objects.

> supporting large POST requests (e.g. file uploads), then a StringIO isn't
> going to cut it.  I see where a passthru can be more efficient, but I prefer
> the flexibility of the tempfile implementation.  You could put tempfiles on
> a tmpfs mount, if you were interested in improving performance.

I must say, I don't like temp files. They pollute /tmp, so I'd want to
configure where temp files are located, which means additional
administration effort. But that's just my 0.02.



-- 
damjan | ??????
This is my jabber ID -->         damjan@bagra.net.mk 
 -- not my mail address, it's a Jabber ID --^ :)
From nick at dd.revealed.net  Sat Apr  1 18:42:33 2006
From: nick at dd.revealed.net (Nick)
Date: Sat Apr  1 18:42:39 2006
Subject: [mod_python] WSGI server
In-Reply-To: <20060401232916.GA28211@legolas.on.net.mk>
References: <435DF58A933BA74397B42CDEB8145A860114401E@ex9.hostedexchange.local>	<442C2CC8.6040308@dd.revealed.net>
	<20060401232916.GA28211@legolas.on.net.mk>
Message-ID: <442F0FE9.2000304@dd.revealed.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Damjan wrote:
> There's a list of methods that wsgi.input and wsgi.error MUST support
> http://www.python.org/dev/peps/pep-0333/#id19 and seek and tell are not
> listed. Also PEP-333 FORBIDS calling any other methods of those objects.

OK, thanks... I missed the "must not use any other methods" part.  That
certainly does simplify things.

> I must say, I don't like temp files. They pollute /tmp, so I'd want to
> configure where temp files are located, which means additional
> administration effort. But that's just my 0.02.

In theory, yes, they could pollute /tmp, but at least the POSIX
implementation unlinks the file immediately on creation.  But I think
your above point makes further discussion on this topic moot :)

Thanks,
Nick
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQFELw/pv4zJ7LQ+i84RAhtUAJ49a4kLXq1xlEJodDPfeVjCOpcNiwCeJbMG
593ca/Lqrngjyqhjq7EoO8M=
=A/6p
-----END PGP SIGNATURE-----
From yjfuk at 126.com  Sat Apr  1 23:45:00 2006
From: yjfuk at 126.com (yjfuk)
Date: Sat Apr  1 23:45:31 2006
Subject: [mod_python] mod_python session p
 roblem
Message-ID: <442F56CC.00000B.03545@m65.126.com>

I mean refresh,e.g. press F5 in the IE
 
 
 
 
 
 



-----原始邮件-----
发件人:"Jim Gallacher" 
发送时间:2006-04-02 03:28:55
收件人:"yjfuk" 
抄送:mod_python@modpython.org
主题:Re: [mod_python] mod_python session problem


yjfuk wrote:
> code below:
> from mod_python import Session
> def index(req)
>   sess=Session.Session(req)
>   if sess.is_new():
>     sess['num']=0
>     sess.save()
>   else:
>     sess['num']+=1
>     sess.save()
>     req.write(str(sess['num']))
>  
>  
> when I reflush the browser some times ,the session is usually lost .
> I run it in windows XP(sp2),python 2.4.2, mod_python 3.2.8 

Does reflush mean refresh or restart?

Jim


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060402/15522164/attachment.html
From jpg at jgassociates.ca  Sun Apr  2 11:51:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Apr  2 11:51:27 2006
Subject: [mod_python] mod_python session p roblem
In-Reply-To: <442F56CC.00000B.03545@m65.126.com>
References: <442F56CC.00000B.03545@m65.126.com>
Message-ID: <442FF309.10104@jgassociates.ca>

The code you show here looks OK, so I'm not sure what the problem may be.

So is a new session created for every request, where you always see "0"
returned in the response? Or do you sometimes see some number greater
than "0", and then sometimes "0"? This is unclear in your original
message as well.

Is there anything in the apache error log indicating a problem?

Jim


yjfuk wrote:
> I mean refresh,e.g. press F5 in the IE
>  

> 
> yjfuk wrote:
> 
>>code below:
>>from mod_python import Session
>>def index(req)
>>  sess=Session.Session(req)
>>  if sess.is_new():
>>    sess['num']=0
>>    sess.save()
>>  else:
>>    sess['num']+=1
>>    sess.save()
>>    req.write(str(sess['num']))
>> 
>> 
>>when I reflush the browser some times ,the session is usually lost .
>>I run it in windows XP(sp2),python 2.4.2, mod_python 3.2.8 
> 
> 
> Does reflush mean refresh or restart?
> 
> Jim
> 
> 
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Sun Apr  2 18:54:29 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  2 18:54:35 2006
Subject: [mod_python] mod_python session p roblem
Message-ID: <1144018469.1379@dscpl.user.openhosting.com>

> > yjfuk wrote:
> > 
> >>code below:
> >>from mod_python import Session
> >>def index(req)
> >>  sess=Session.Session(req)
> >>  if sess.is_new():
> >>    sess['num']=0
> >>    sess.save()
> >>  else:
> >>    sess['num']+=1
> >>    sess.save()
> >>    req.write(str(sess['num']))
> >> 
> >> 
> >>when I reflush the browser some times ,the session is usually lost .
> >>I run it in windows XP(sp2),python 2.4.2, mod_python 3.2.8

Is this really the complete code you were using to experiment with
or have you thrown out a lot of stuff?

I ask as since you were using req.write(), no content type would be
set for case where existing session used and an empty response
would result from where it is a new session. Thus, the responses
wouldn't necessarily be as useful as they could be. This is assuming
the indenting of your code was simply stuffed up in one of the
posts.

Oh, there is also a ':' missing off function prototype, but again that
may also have dissappeared in posts.

The important thing is, if this isn't all your code, then it is possible
that the problem lies in stuff you didn't post.

Jim Gallacher wrote ..
> The code you show here looks OK, so I'm not sure what the problem may be.
> 
> So is a new session created for every request, where you always see "0"
> returned in the response? Or do you sometimes see some number greater
> than "0", and then sometimes "0"? This is unclear in your original
> message as well.
> 
> Is there anything in the apache error log indicating a problem?

I would suggest you experiment with something like the following code:

  from mod_python import Session
  import time

  def index(req):

    timestamp = time.time()

    req.log_error("index %s" % `timestamp`)

    req.content_type = 'text/plain'

    sess=Session.Session(req)

    if sess.is_new():
      sess['num']=0
      sess.save()
    else:
      sess['num']+=1
      sess.save()

    req.write("index %s\n" % `timestamp`)

    req.write("num %d\n" % str(sess['num']))

The point of the logging is to prove that the function did in fact get
called. The point of returning the timestamp in the response is to
prove that you are in fact getting a different fresh page on each access
attempt.

If it isn't a problem in some other code of yours, one possibility if
you are accessing the server through a proxy is that you have an
overly agressive proxy cache. This can be a problem with GET requests
in some situations and in worst cases it may be necessary to specify
explicitly that responses should not be cached.

When you work out the problem or if you already have, please followup
saying it is fixed and describe what the problem is. :-)

Graham

From webb.sprague at gmail.com  Sun Apr  2 23:05:27 2006
From: webb.sprague at gmail.com (Webb Sprague)
Date: Sun Apr  2 23:05:30 2006
Subject: [mod_python] weird error in mod_python (3.1.4.r1) /scipy
	(0.4.8)/gentoo (~x86) web application
Message-ID: <b11ea23c0604022005m1434c831tdcb5b6c8c970da7c@mail.gmail.com>

This may be un-reproducible, and it does NOT happen within ipython
shell, but I am getting the backtrace below when trying to import
scipy within my application.  I would guess it has to do with the very
outdated ebuild of mod_python, (see the gentoo bug: 
http://bugs.gentoo.org/show_bug.cgi?id=123852), but just in case
anybody has any quick fixes, please let me know.

I have restarted Apache numerous times to make sure there isn't some
weird cache thing going on (the source of most of my phantom bug
reports).  Scipy 0.3.2 does not have this problem.

Backtrace follows. (6), with LcUtil.py, is where it tries to import
and errors out.

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

(1)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch
    result = object(req)

(2)  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
line 98, in handler
    path=[path])

(3)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
line 457, in import_module
    module = imp.load_module(mname, f, p, d)

(4)  File "/var/www/localhost/htdocs/larry/lc.py", line 32, in ?
    import LcSinglePopObject

 (5) File "/var/www/localhost/htdocs/larry/LcSinglePopObject.py", line 40, in ?
    import LcUtil

(6)  File "/var/www/localhost/htdocs/larry/LcUtil.py", line 8, in ?
    import scipy as S

  File "/usr/lib/python2.4/site-packages/scipy/__init__.py", line 18, in ?
    import pkg_resources as _pr # activate namespace packages
(manipulates __path__)

  File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 2347, in ?
    working_set = WorkingSet()

  File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 343,
in __init__
    self.add_entry(entry)

  File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 358,
in add_entry
    for dist in find_distributions(entry, True):

  File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1450,
in find_distributions
    importer = get_importer(path_item)

  File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1407,
in get_importer
    importer = hook(path_item)

TypeError: zipimporter() argument 1 must be string, not
builtin_function_or_method

From grahamd at dscpl.com.au  Sun Apr  2 23:36:32 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  2 23:36:37 2006
Subject: [mod_python] weird error in mod_python (3.1.4.r1)
	/scipy(0.4.8)/gentoo (~x86) web application
Message-ID: <1144035392.2357@dscpl.user.openhosting.com>

Webb Sprague wrote ..
> This may be un-reproducible, and it does NOT happen within ipython
> shell, but I am getting the backtrace below when trying to import
> scipy within my application.  I would guess it has to do with the very
> outdated ebuild of mod_python, (see the gentoo bug: 
> http://bugs.gentoo.org/show_bug.cgi?id=123852), but just in case
> anybody has any quick fixes, please let me know.
> 
> I have restarted Apache numerous times to make sure there isn't some
> weird cache thing going on (the source of most of my phantom bug
> reports).  Scipy 0.3.2 does not have this problem.

Looking through pkg_resources.py, critical bit of code seems to be:

class WorkingSet(object):
    """A collection of active distributions on sys.path (or a similar list)"""

    def __init__(self, entries=None):
        """Create working set from list of path entries (default=sys.path)"""
        self.entries = []
        self.entry_keys = {}
        self.by_key = {}
        self.callbacks = []

        if entries is None:
            entries = sys.path

        for entry in entries:
            self.add_entry(entry)

Specifically, "entries" is set to 'sys.path' and then each entry in that is
processed. The final error suggests that one of the entries in 'sys.path'
is actually a function and not a string.

Are you setting 'sys.path' using PythonPath directive in mod_python
and somehow stuffed it up, or are you setting 'sys.path' explicitly in
any other places?

Graham

> Backtrace follows. (6), with LcUtil.py, is where it tries to import
> and errors out.
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
> (1)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
> line 299, in HandlerDispatch
>     result = object(req)
> 
> (2)  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> line 98, in handler
>     path=[path])
> 
> (3)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
> line 457, in import_module
>     module = imp.load_module(mname, f, p, d)
> 
> (4)  File "/var/www/localhost/htdocs/larry/lc.py", line 32, in ?
>     import LcSinglePopObject
> 
>  (5) File "/var/www/localhost/htdocs/larry/LcSinglePopObject.py", line
> 40, in ?
>     import LcUtil
> 
> (6)  File "/var/www/localhost/htdocs/larry/LcUtil.py", line 8, in ?
>     import scipy as S
> 
>   File "/usr/lib/python2.4/site-packages/scipy/__init__.py", line 18, in
> ?
>     import pkg_resources as _pr # activate namespace packages
> (manipulates __path__)
> 
>   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 2347,
> in ?
>     working_set = WorkingSet()
> 
>   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 343,
> in __init__
>     self.add_entry(entry)
> 
>   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 358,
> in add_entry
>     for dist in find_distributions(entry, True):
> 
>   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1450,
> in find_distributions
>     importer = get_importer(path_item)
> 
>   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1407,
> in get_importer
>     importer = hook(path_item)
> 
> TypeError: zipimporter() argument 1 must be string, not
> builtin_function_or_method
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From webb.sprague at gmail.com  Mon Apr  3 00:06:16 2006
From: webb.sprague at gmail.com (Webb Sprague)
Date: Mon Apr  3 00:06:20 2006
Subject: [mod_python] weird error in mod_python (3.1.4.r1)
	/scipy(0.4.8)/gentoo (~x86) web application
In-Reply-To: <1144035392.2357@dscpl.user.openhosting.com>
References: <1144035392.2357@dscpl.user.openhosting.com>
Message-ID: <b11ea23c0604022106j6261bdaay4e8f02b001327938@mail.gmail.com>

Thanks to Graham's help, I found the typo
("sys.path.append(os.getcwd)" should have been
"sys.path.append(os.getcwd())"), and all is well.

W

On 4/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Webb Sprague wrote ..
> > This may be un-reproducible, and it does NOT happen within ipython
> > shell, but I am getting the backtrace below when trying to import
> > scipy within my application.  I would guess it has to do with the very
> > outdated ebuild of mod_python, (see the gentoo bug:
> > http://bugs.gentoo.org/show_bug.cgi?id=123852), but just in case
> > anybody has any quick fixes, please let me know.
> >
> > I have restarted Apache numerous times to make sure there isn't some
> > weird cache thing going on (the source of most of my phantom bug
> > reports).  Scipy 0.3.2 does not have this problem.
>
> Looking through pkg_resources.py, critical bit of code seems to be:
>
> class WorkingSet(object):
>     """A collection of active distributions on sys.path (or a similar list)"""
>
>     def __init__(self, entries=None):
>         """Create working set from list of path entries (default=sys.path)"""
>         self.entries = []
>         self.entry_keys = {}
>         self.by_key = {}
>         self.callbacks = []
>
>         if entries is None:
>             entries = sys.path
>
>         for entry in entries:
>             self.add_entry(entry)
>
> Specifically, "entries" is set to 'sys.path' and then each entry in that is
> processed. The final error suggests that one of the entries in 'sys.path'
> is actually a function and not a string.
>
> Are you setting 'sys.path' using PythonPath directive in mod_python
> and somehow stuffed it up, or are you setting 'sys.path' explicitly in
> any other places?
>
> Graham
>
> > Backtrace follows. (6), with LcUtil.py, is where it tries to import
> > and errors out.
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> > (1)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
> > line 299, in HandlerDispatch
> >     result = object(req)
> >
> > (2)  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> > line 98, in handler
> >     path=[path])
> >
> > (3)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
> > line 457, in import_module
> >     module = imp.load_module(mname, f, p, d)
> >
> > (4)  File "/var/www/localhost/htdocs/larry/lc.py", line 32, in ?
> >     import LcSinglePopObject
> >
> >  (5) File "/var/www/localhost/htdocs/larry/LcSinglePopObject.py", line
> > 40, in ?
> >     import LcUtil
> >
> > (6)  File "/var/www/localhost/htdocs/larry/LcUtil.py", line 8, in ?
> >     import scipy as S
> >
> >   File "/usr/lib/python2.4/site-packages/scipy/__init__.py", line 18, in
> > ?
> >     import pkg_resources as _pr # activate namespace packages
> > (manipulates __path__)
> >
> >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 2347,
> > in ?
> >     working_set = WorkingSet()
> >
> >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 343,
> > in __init__
> >     self.add_entry(entry)
> >
> >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 358,
> > in add_entry
> >     for dist in find_distributions(entry, True):
> >
> >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1450,
> > in find_distributions
> >     importer = get_importer(path_item)
> >
> >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1407,
> > in get_importer
> >     importer = hook(path_item)
> >
> > TypeError: zipimporter() argument 1 must be string, not
> > builtin_function_or_method
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>

From webb.sprague at gmail.com  Mon Apr  3 11:20:25 2006
From: webb.sprague at gmail.com (Webb Sprague)
Date: Mon Apr  3 11:20:28 2006
Subject: [mod_python] Pickled objects require _apache on un-pickling
	(mod_python 3.2.8)
Message-ID: <b11ea23c0604030820i6f43dbe4x25165cd5b1baa915@mail.gmail.com>

So...

I have a web application that pickles objects after doing some
statistical analyses on data that is entered through a form, with a
mod_python infrastructure.  Now I am trying to unpickle those objects
in ipython, but I get the strange error "can't find _apache" (see
stack trace below) on cPickle.loads() (line 108).  It works fine
through the web browser.  Why would this object possibly want _apache
or apache -- it doesn't import anything to do with mod_python
explicitly, and I can create these objects outside of the web.  I can
post more code or more error messages if it would help

Thanks!

In [30]: lcdb.retrieveObject(14)
---------------------------------------------------------------------------
exceptions.ImportError                               Traceback (most
recent call last)

/var/www/localhost/htdocs/larry/<ipython console>

/var/www/localhost/htdocs/larry/LcDB.py in retrieveObject(self,
objectSerialNumber)
    106                 if instancePickled == None:
    107                         raise LcDataException, "No such data
object: %i" % objectSerialNumber
--> 108                 instance = cPickle.loads(instancePickled)
    109                 curs.close()
    110                 return instance

/usr/lib/python2.4/site-packages/mod_python/util.py
     19 # $Id: util.py 374268 2006-02-02 05:31:45Z nlehuen $
     20
---> 21 import _apache
     22 import apache
     23 import cStringIO

ImportError: No module named _apache

From jpg at jgassociates.ca  Mon Apr  3 11:52:55 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Apr  3 11:52:02 2006
Subject: [mod_python] Pickled objects require _apache on
	un-pickling	(mod_python 3.2.8)
In-Reply-To: <b11ea23c0604030820i6f43dbe4x25165cd5b1baa915@mail.gmail.com>
References: <b11ea23c0604030820i6f43dbe4x25165cd5b1baa915@mail.gmail.com>
Message-ID: <443144D7.5090103@jgassociates.ca>

It sounds like you are using FieldStorage to retrieve your form data, 
and trying to pickle it or some of its fields directly. Loading the 
pickle will then pull in mod_python.util which has the _apache 
dependency. _apache is part of the hook into Apache's guts, and can't be 
used outside of mod_python.

Try building your pickle using form['some_name'].value, which will be a 
string, rather than form['some_value'], which will be an instance of 
mod_python.util.Field.

Jim


Webb Sprague wrote:
> So...
> 
> I have a web application that pickles objects after doing some
> statistical analyses on data that is entered through a form, with a
> mod_python infrastructure.  Now I am trying to unpickle those objects
> in ipython, but I get the strange error "can't find _apache" (see
> stack trace below) on cPickle.loads() (line 108).  It works fine
> through the web browser.  Why would this object possibly want _apache
> or apache -- it doesn't import anything to do with mod_python
> explicitly, and I can create these objects outside of the web.  I can
> post more code or more error messages if it would help
> 
> Thanks!
> 
> In [30]: lcdb.retrieveObject(14)
> ---------------------------------------------------------------------------
> exceptions.ImportError                               Traceback (most
> recent call last)
> 
> /var/www/localhost/htdocs/larry/<ipython console>
> 
> /var/www/localhost/htdocs/larry/LcDB.py in retrieveObject(self,
> objectSerialNumber)
>     106                 if instancePickled == None:
>     107                         raise LcDataException, "No such data
> object: %i" % objectSerialNumber
> --> 108                 instance = cPickle.loads(instancePickled)
>     109                 curs.close()
>     110                 return instance
> 
> /usr/lib/python2.4/site-packages/mod_python/util.py
>      19 # $Id: util.py 374268 2006-02-02 05:31:45Z nlehuen $
>      20
> ---> 21 import _apache
>      22 import apache
>      23 import cStringIO
> 
> ImportError: No module named _apache
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From mmadecki at comcast.net  Mon Apr  3 19:52:10 2006
From: mmadecki at comcast.net ( Miro)
Date: Mon Apr  3 19:51:37 2006
Subject: [mod_python] sharing data in the same interpreter
Message-ID: <200604032351.k33NpWJ9016518@modpython.org>

Hi,

 

I?m trying to figure out how to share data between different handlers
running in the same interpreter instance.

I got it running with apache in debug mode (only one worker thread) but not
in normal mode.

According to the value of ?req.interpreter? both handlers use the same
interpreter.

I noticed that with ?PythonDebug On? according to the log message ?handle?
module gets reloaded with every request.

Does that wipe out any global cfg!?

Is there any way to make this working?

 

I?m using following platform:

-          Fedora Core 4

-          Apache 2.0.54

-          Mod_python 3.2.8 (installed from source to replace pre-packaged
3.1.4)

 

Complete cfg and example are attached.

test_handle.py does POST to set global data that follow on GET request
should read.

 

Thanks

Miro

 

 

# /etc/httpd/conf.d/python.conf

 

LoadModule python_module modules/mod_python.so

 

Listen 8000

NameVirtualHost *:8000

<VirtualHost *:8000>

  SetHandler mod_python

  PythonPath "['/tmp/py'] + sys.path"

  PythonInterpreter ONE

  PythonAutoReload Off

  <Location "/get">

    PythonHandler handle::get_handler

  </Location>

  <Location "/post">

    PythonHandler handle::post_handler

  </Location>

</VirtualHost>

 

# /tmp/py/handle.py

 

from mod_python import apache

 

class SharedData:

  data = "Doesn't work"

 

def get_handler(req):

    req.content_type = "text/plain"

    req.write(SharedData.data)

    apache.log_error("get_handler wrote : " + SharedData.data)

    apache.log_error("get_handler interpreter : %r" % req.interpreter)

    return apache.OK

 

def post_handler(req):

    SharedData.data = req.read()

    apache.log_error("post_handler read : " + SharedData.data)

    apache.log_error("post_handler interpreter : %r" % req.interpreter)

    return apache.OK

 

# /tmp/py/test_handle.py

 

import httplib

 

def test_get():

   print "test_get"

   PORT = 8000

   PATH = "/get"

   conn = httplib.HTTPConnection("127.0.0.1:%s" % PORT)

   conn.putrequest("GET", PATH, skip_host=1)

   conn.putheader("Host", "%s:%s" % ("test_get", PORT))

   conn.endheaders()

   response = conn.getresponse()

   rsp = response.read()

   print "Got back : %s" %rsp

   conn.close()

 

def test_post():

  print 'test_post'

  params = 'It works'

  print "    writing %d bytes..." % len(params)

  PORT = 8000

  PATH = "/post"

  conn = httplib.HTTPConnection("127.0.0.1:%s" % PORT)

  conn.putrequest("POST", PATH, skip_host=1)

  conn.putheader("Host", "test_rpost:%s" % PORT)

  conn.putheader("Content-Length", len(params))

  conn.endheaders()

  conn.send(params)

  conn.close()

 

if __name__ == "__main__":

  test_post()

  test_get()


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.3.5/300 - Release Date: 04/03/06
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060403/c7862eae/attachment.html
From grahamd at dscpl.com.au  Mon Apr  3 20:07:43 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr  3 20:07:46 2006
Subject: [mod_python] sharing data in the same interpreter
Message-ID: <1144109263.25327@dscpl.user.openhosting.com>

For startes read:

  http://www.dscpl.com.au/articles/modpython-004.html

This will explain how there are different process models in Apache
and a bit about data sharing.

Graham

 Miro wrote ..
> Hi,
> 
>  
> 
> I?m trying to figure out how to share data between different handlers
> running in the same interpreter instance.
> 
> I got it running with apache in debug mode (only one worker thread) but
> not
> in normal mode.
> 
> According to the value of ?req.interpreter? both handlers use the same
> interpreter.
> 
> I noticed that with ?PythonDebug On? according to the log message ?handle?
> module gets reloaded with every request.
> 
> Does that wipe out any global cfg!?
> 
> Is there any way to make this working?
> 
>  
> 
> I?m using following platform:
> 
> -          Fedora Core 4
> 
> -          Apache 2.0.54
> 
> -          Mod_python 3.2.8 (installed from source to replace pre-packaged
> 3.1.4)
> 
>  
> 
> Complete cfg and example are attached.
> 
> test_handle.py does POST to set global data that follow on GET request
> should read.
> 
>  
> 
> Thanks
> 
> Miro
> 
>  
> 
>  
> 
> # /etc/httpd/conf.d/python.conf
> 
>  
> 
> LoadModule python_module modules/mod_python.so
> 
>  
> 
> Listen 8000
> 
> NameVirtualHost *:8000
> 
> <VirtualHost *:8000>
> 
>   SetHandler mod_python
> 
>   PythonPath "['/tmp/py'] + sys.path"
> 
>   PythonInterpreter ONE
> 
>   PythonAutoReload Off
> 
>   <Location "/get">
> 
>     PythonHandler handle::get_handler
> 
>   </Location>
> 
>   <Location "/post">
> 
>     PythonHandler handle::post_handler
> 
>   </Location>
> 
> </VirtualHost>
> 
>  
> 
> # /tmp/py/handle.py
> 
>  
> 
> from mod_python import apache
> 
>  
> 
> class SharedData:
> 
>   data = "Doesn't work"
> 
>  
> 
> def get_handler(req):
> 
>     req.content_type = "text/plain"
> 
>     req.write(SharedData.data)
> 
>     apache.log_error("get_handler wrote : " + SharedData.data)
> 
>     apache.log_error("get_handler interpreter : %r" % req.interpreter)
> 
>     return apache.OK
> 
>  
> 
> def post_handler(req):
> 
>     SharedData.data = req.read()
> 
>     apache.log_error("post_handler read : " + SharedData.data)
> 
>     apache.log_error("post_handler interpreter : %r" % req.interpreter)
> 
>     return apache.OK
> 
>  
> 
> # /tmp/py/test_handle.py
> 
>  
> 
> import httplib
> 
>  
> 
> def test_get():
> 
>    print "test_get"
> 
>    PORT = 8000
> 
>    PATH = "/get"
> 
>    conn = httplib.HTTPConnection("127.0.0.1:%s" % PORT)
> 
>    conn.putrequest("GET", PATH, skip_host=1)
> 
>    conn.putheader("Host", "%s:%s" % ("test_get", PORT))
> 
>    conn.endheaders()
> 
>    response = conn.getresponse()
> 
>    rsp = response.read()
> 
>    print "Got back : %s" %rsp
> 
>    conn.close()
> 
>  
> 
> def test_post():
> 
>   print 'test_post'
> 
>   params = 'It works'
> 
>   print "    writing %d bytes..." % len(params)
> 
>   PORT = 8000
> 
>   PATH = "/post"
> 
>   conn = httplib.HTTPConnection("127.0.0.1:%s" % PORT)
> 
>   conn.putrequest("POST", PATH, skip_host=1)
> 
>   conn.putheader("Host", "test_rpost:%s" % PORT)
> 
>   conn.putheader("Content-Length", len(params))
> 
>   conn.endheaders()
> 
>   conn.send(params)
> 
>   conn.close()
> 
>  
> 
> if __name__ == "__main__":
> 
>   test_post()
> 
>   test_get()
> 
> 
> -- 
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.385 / Virus Database: 268.3.5/300 - Release Date: 04/03/06
>  
From al at ruiz.ws  Mon Apr  3 18:14:01 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Mon Apr  3 20:24:33 2006
Subject: [mod_python] [SPAM] Does the Request object have a member called
	'name'?
Message-ID: <1144102441.3610.357.camel@localhost.localdomain>

This script used to run fine on a Debian system. This is now on FreeBSD
with modpython 2.7.11.

This is what I'm getting:

!V!:0!!V!:My Property Test!!V!:1234 West!!V!:Orem, UT, 84052!!V!:1!!
V!:!!V!:!!V!:3!!V!:1!!V!:8!!V!:200!!V!:300!!V!:100!!V!:!!V!:!!V!:!!V!:!!
V!:!!V!:22!!V!:! Mod_python error: "PythonHandler mod_python.publisher"
Traceback (most recent call last): File
"/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 193,
in Dispatch result = object(req) File
"/usr/local/lib/python2.4/site-packages/mod_python/publisher.py", line
173, in handler result = apply(object, (), args) File
"/home/elkmeadowsrental/www/elkmeadowsrentals.com/save.py", line 23, in
index exclamation=q.name.find("!") AttributeError: 'NoneType' object has
no attribute 'find'


On the following code:

def index (req,t="",id=""):
	global R; R=req;R.content_type="text/html"
	R.send_http_header()
	R.write(" ")
	dbcur=DBconnectpropman.DB.cursor()
	USER=ZWF.usercheck(R,dbcur)
	photo=[]
	if USER.auth==1:
		tables={};id=0;detailid=0;propid='';custid=''
		for q in R.form.list:
			if q.name=="res!propertyid":propid=q.value
			if q.name=="res!startdate":ressdate=q.value
			if q.name=="res!enddate":resedate=q.value
			if q.name=="res!customerid":custid=q.value
			if q.name==t+"formkey": 
				if q.value=="": id="0"
				else: id=q.value;
			exclamation=q.name.find("!")
.... more code


The problem is when calling the last line.  It seems that q.name is not
defined.  What's wrong? Is this a member method that is implemented in
newer versions (3.1x)?  How do I implement it in 2.7?  Is the problem
somewhere else?  What's the best way to troubleshoot the problem?




From grahamd at dscpl.com.au  Mon Apr  3 20:38:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr  3 20:38:06 2006
Subject: [mod_python] Does the Request object have a member called 'name'?
Message-ID: <1144111084.9930@dscpl.user.openhosting.com>

Alberto Ruiz wrote ..
> This script used to run fine on a Debian system. This is now on FreeBSD
> with modpython 2.7.11.
> 
> This is what I'm getting:
> 
> !V!:0!!V!:My Property Test!!V!:1234 West!!V!:Orem, UT, 84052!!V!:1!!
> V!:!!V!:!!V!:3!!V!:1!!V!:8!!V!:200!!V!:300!!V!:100!!V!:!!V!:!!V!:!!V!:!!
> V!:!!V!:22!!V!:! Mod_python error: "PythonHandler mod_python.publisher"
> Traceback (most recent call last): File
> "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 193,
> in Dispatch result = object(req) File
> "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py", line
> 173, in handler result = apply(object, (), args) File
> "/home/elkmeadowsrental/www/elkmeadowsrentals.com/save.py", line 23, in
> index exclamation=q.name.find("!") AttributeError: 'NoneType' object has
> no attribute 'find'
> 
> 
> On the following code:
> 
> def index (req,t="",id=""):
> 	global R; R=req;R.content_type="text/html"
> 	R.send_http_header()
> 	R.write(" ")
> 	dbcur=DBconnectpropman.DB.cursor()
> 	USER=ZWF.usercheck(R,dbcur)
> 	photo=[]
> 	if USER.auth==1:
> 		tables={};id=0;detailid=0;propid='';custid=''
> 		for q in R.form.list:
> 			if q.name=="res!propertyid":propid=q.value
> 			if q.name=="res!startdate":ressdate=q.value
> 			if q.name=="res!enddate":resedate=q.value
> 			if q.name=="res!customerid":custid=q.value
> 			if q.name==t+"formkey": 
> 				if q.value=="": id="0"
> 				else: id=q.value;
> 			exclamation=q.name.find("!")
> .... more code
> 
> 
> The problem is when calling the last line.  It seems that q.name is not
> defined.  What's wrong? Is this a member method that is implemented in
> newer versions (3.1x)?  How do I implement it in 2.7?  Is the problem
> somewhere else?  What's the best way to troubleshoot the problem?

I have noticed that sometimes a form key name can be none. Not sure
if this was a mod_python 2.7.X specific thing or not, but my forms
code has:

      # Some strange forms can result in fields where the
      # key value is None. Wipe this out just in case this
      # happens as can cause problems later.

      if args.has_key(None):
        del args[None]

You may therefore simply want to ignore case where q.name is None.

Graham
From al at ruiz.ws  Mon Apr  3 21:17:18 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Mon Apr  3 22:10:17 2006
Subject: [mod_python] Does the Request object have a member called 'name'?
In-Reply-To: <1144111084.9930@dscpl.user.openhosting.com>
References: <1144111084.9930@dscpl.user.openhosting.com>
Message-ID: <1144113438.3610.360.camel@localhost.localdomain>

Thanks for the tip. It didn't work because I couldn't call args[None]
without complaining about the invalid subscriptor,  but I added an if
statement in the for loop to check if the value was None:
if arg==None:continue

Thanks again.

On Mon, 2006-04-03 at 20:38 -0400, Graham Dumpleton wrote:

> I have noticed that sometimes a form key name can be none. Not sure
> if this was a mod_python 2.7.X specific thing or not, but my forms
> code has:
> 
>       # Some strange forms can result in fields where the
>       # key value is None. Wipe this out just in case this
>       # happens as can cause problems later.
> 
>       if args.has_key(None):
>         del args[None]
> 
> You may therefore simply want to ignore case where q.name is None.
> 
> Graham
> 

From al at ruiz.ws  Mon Apr  3 21:26:54 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Mon Apr  3 22:10:18 2006
Subject: [mod_python] Is this related to not having support to upload a file?
Message-ID: <1144114014.3609.370.camel@localhost.localdomain>

Like I mentioned in earlier threads, this code used to work in a Debian
system, but now it doesn't work on FreeBSD with modpython 2.7.11.
I'm getting the following error.

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
line 193, in Dispatch
    result = object(req)

  File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
line 106, in handler
    val = File(field)

  File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
line 322, in __init__
    for m in field.file.__methods__:

AttributeError: 'file' object has no attribute '__methods__'



It is hard to pin point the problem, since it doesn't show where in my
code is happening. But my guess is that it is somewhere in this code
snippet:

for p in photo:
phpath='/data/webroot/propman/propphotos/'
F= open(phpath+str("tempprop"+id+"-"+p.name[-1:]+p.filename[-4:]),'wb')
F.write(p.file.read())
F.flush()
os.system("convert "+phpath+str("tempprop"+id
+"-"+p.name[-1:]+p.filename[-4:])+" -resize 400x300 "+phpath
+""+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:]))
com="convert "+phpath+str("tempprop"+id
+"-"+p.name[-1:]+p.filename[-4:])+" -resize 80x60 "+phpath
+"thm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
R.write("\n\n"+com+"\n\n")
os.system(com)
if p.name[-1:]=="1":
com="convert "+phpath+str("tempprop"+id
+"-"+p.name[-1:]+p.filename[-4:])+" -resize 220x165\! "+phpath
+"bthm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
R.write("\n\n"+com+"\n\n")
os.system(com)

Sorry about the indentation, it got missed up while pasting in the
email.

My guess is in 'p.file.read()

How do I implemented for 2.7.11? or do I need to configure my Apache
conf file.

From grahamd at dscpl.com.au  Mon Apr  3 22:34:54 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr  3 22:34:56 2006
Subject: [mod_python] Is this related to not having support to upload a
	file?
Message-ID: <1144118094.11219@dscpl.user.openhosting.com>

Alberto Ruiz wrote ..
> Like I mentioned in earlier threads, this code used to work in a Debian
> system, but now it doesn't work on FreeBSD with modpython 2.7.11.
> I'm getting the following error.
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
> line 193, in Dispatch
>     result = object(req)
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
> line 106, in handler
>     val = File(field)
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
> line 322, in __init__
>     for m in field.file.__methods__:
> 
> AttributeError: 'file' object has no attribute '__methods__'
> 
> 
> 
> It is hard to pin point the problem, since it doesn't show where in my
> code is happening. But my guess is that it is somewhere in this code
> snippet:
> 
> for p in photo:
> phpath='/data/webroot/propman/propphotos/'
> F= open(phpath+str("tempprop"+id+"-"+p.name[-1:]+p.filename[-4:]),'wb')
> F.write(p.file.read())
> F.flush()
> os.system("convert "+phpath+str("tempprop"+id
> +"-"+p.name[-1:]+p.filename[-4:])+" -resize 400x300 "+phpath
> +""+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:]))
> com="convert "+phpath+str("tempprop"+id
> +"-"+p.name[-1:]+p.filename[-4:])+" -resize 80x60 "+phpath
> +"thm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
> R.write("\n\n"+com+"\n\n")
> os.system(com)
> if p.name[-1:]=="1":
> com="convert "+phpath+str("tempprop"+id
> +"-"+p.name[-1:]+p.filename[-4:])+" -resize 220x165\! "+phpath
> +"bthm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
> R.write("\n\n"+com+"\n\n")
> os.system(com)
> 
> Sorry about the indentation, it got missed up while pasting in the
> email.
> 
> My guess is in 'p.file.read()
> 
> How do I implemented for 2.7.11? or do I need to configure my Apache
> conf file.

The problem is nothing to do with your code and there is nothing
you can do in your code to get around it.

The problem is that in mod_python.publisher it uses:

class File:
    """ Like a file, but also has headers and filename
    """

    def __init__(self, field):
                 
        # steal all the file-like methods
        for m in field.file.__methods__:
            self.__dict__[m] = getattr(field.file, m)

__methods__ is from Python 1.5 and therefore will no longer work if you
are using a newer version of Python.

  __methods__
    List of the methods of many built-in object types, e.g., [].__methods__
    yields ['append', 'count', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'].

You might be able to modify mod_python 2.7.X source code to do it
differently. You might be able to use something like:

        # steal all the file-like methods
        #for m in field.file.__methods__:
        #    self.__dict__[m] = getattr(field.file, m)

        for k in field.file.__dict__:
            if k[:2] != '__':
                v = getattr(field.file, k)
                if callable(v):
                    self.__dict__[k] = v

The file in mod_python source code that needs to be modified is:

 lib/python/mod_python/publisher.py

Graham



From grahamd at dscpl.com.au  Mon Apr  3 22:52:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr  3 22:52:58 2006
Subject: [mod_python] Is this related to not having support to upload
	afile?
Message-ID: <1144119175.21010@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Alberto Ruiz wrote ..
> > Like I mentioned in earlier threads, this code used to work in a Debian
> > system, but now it doesn't work on FreeBSD with modpython 2.7.11.
> > I'm getting the following error.
> > 
> > Mod_python error: "PythonHandler mod_python.publisher"
> > 
> > Traceback (most recent call last):
> > 
> >   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
> > line 193, in Dispatch
> >     result = object(req)
> > 
> >   File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
> > line 106, in handler
> >     val = File(field)
> > 
> >   File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
> > line 322, in __init__
> >     for m in field.file.__methods__:
> > 
> > AttributeError: 'file' object has no attribute '__methods__'
>
> ...
>
> The problem is nothing to do with your code and there is nothing
> you can do in your code to get around it.
> 
> The problem is that in mod_python.publisher it uses:
> 
> class File:
>     """ Like a file, but also has headers and filename
>     """
> 
>     def __init__(self, field):
>                  
>         # steal all the file-like methods
>         for m in field.file.__methods__:
>             self.__dict__[m] = getattr(field.file, m)
> 
> __methods__ is from Python 1.5 and therefore will no longer work if you
> are using a newer version of Python.
> 
>   __methods__
>     List of the methods of many built-in object types, e.g., [].__methods__
>     yields ['append', 'count', 'index', 'insert', 'pop', 'remove', 'reverse',
> 'sort'].
> 
> You might be able to modify mod_python 2.7.X source code to do it
> differently. You might be able to use something like:
> 
>         # steal all the file-like methods
>         #for m in field.file.__methods__:
>         #    self.__dict__[m] = getattr(field.file, m)
> 
>         for k in field.file.__dict__:
>             if k[:2] != '__':
>                 v = getattr(field.file, k)
>                 if callable(v):
>                     self.__dict__[k] = v
> 
> The file in mod_python source code that needs to be modified is:
> 
>  lib/python/mod_python/publisher.py

BTW, if you can't modify the source code, for example it is on an ISPs
box, instead add the following at the start of your published code file
where you want to use a form upload. Note that this is a mega hack as
you are patching mod_python on the fly and change may affect other users
if you get it wrong.

from mod_python import apache

# Don't use import to avoid bug in mod_python.
_publisher = apache.import_module("mod_python.publisher")

class _MyHackFileClass:
    """ Like a file, but also has headers and filename
    """

    def __init__(self, field):

        # steal all the file-like methods
        #for m in field.file.__methods__:
        #    self.__dict__[m] = getattr(field.file, m)

        for k in field.file.__dict__:
            if k[:2] != '__':
                v = getattr(field.file, k)
                if callable(v):
                    self.__dict__[k] = v

        self.headers = field.headers
        self.filename = field.filename

_publisher.File = _MyHackFileClass

# Now comes your original code.

Graham


From el_z0rr07 at yahoo.com  Tue Apr  4 00:52:19 2006
From: el_z0rr07 at yahoo.com (Alberto Ruiz)
Date: Tue Apr  4 00:52:30 2006
Subject: [mod_python] [SPAM] Is this related to not having support to upload
	a file??
Message-ID: <20060404045219.35595.qmail@web51408.mail.yahoo.com>

I apologyze for sending this email again, but my server is under   a DDOS attack and I'm not sure if this email went through.  If it  did can somebody please forward me or post the replies again.  I  had to subscribe again to the mailing list with a different account.     Thanks. 
  
  Like I mentioned in earlier threads, this code used to work in a Debian
  system, but now it doesn't work on FreeBSD with modpython 2.7.11.
  I'm getting the following error.
  
  Mod_python error: "PythonHandler mod_python.publisher"
  
  Traceback (most recent call last):
  
    File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
  line 193, in Dispatch
      result = object(req)
  
    File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
  line 106, in handler
      val = File(field)
  
    File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
  line 322, in __init__
      for m in field.file.__methods__:
  
  AttributeError: 'file' object has no attribute '__methods__'
  
  
  
  It is hard to pin point the problem, since it doesn't show where in my
  code is happening. But my guess is that it is somewhere in this code
  snippet:
  
  for p in photo:
  phpath='/data/webroot/propman/propphotos/'
  F= open(phpath+str("tempprop"+id+"-"+p.name[-1:]+p.filename[-4:]),'wb')
  F.write(p.file.read())
  F.flush()
  os.system("convert "+phpath+str("tempprop"+id
  +"-"+p.name[-1:]+p.filename[-4:])+" -resize 400x300 "+phpath
  +""+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:]))
  com="convert "+phpath+str("tempprop"+id
  +"-"+p.name[-1:]+p.filename[-4:])+" -resize 80x60 "+phpath
  +"thm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
  R.write("\n\n"+com+"\n\n")
  os.system(com)
  if p.name[-1:]=="1":
  com="convert "+phpath+str("tempprop"+id
  +"-"+p.name[-1:]+p.filename[-4:])+" -resize 220x165\! "+phpath
  +"bthm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
  R.write("\n\n"+com+"\n\n")
  os.system(com)
  
  Sorry about the indentation, it got missed up while pasting in the
  email.
  
  My guess is in 'p.file.read()
  
  How do I implemented for 2.7.11? or do I need to configure my Apache
  conf file.
  
  
			
---------------------------------
Yahoo! Messenger with Voice. PC-to-Phone calls for ridiculously low rates.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060403/17f0c95e/attachment.html
From grahamd at dscpl.com.au  Tue Apr  4 01:16:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr  4 01:17:01 2006
Subject: [SPAM] [mod_python] [SPAM] Is this related to not having support
	to upload a file??
Message-ID: <1144127815.4310@dscpl.user.openhosting.com>

See mailing list archives. There were two responses.

  http://www.modpython.org/pipermail/mod_python/2006-April/020756.html
  http://www.modpython.org/pipermail/mod_python/2006-April/020757.html

Graham

Alberto Ruiz wrote ..
> I apologyze for sending this email again, but my server is under   a DDOS
> attack and I'm not sure if this email went through.  If it  did can somebody
> please forward me or post the replies again.  I  had to subscribe again
> to the mailing list with a different account.     Thanks. 
>   
>   Like I mentioned in earlier threads, this code used to work in a Debian
>   system, but now it doesn't work on FreeBSD with modpython 2.7.11.
>   I'm getting the following error.
>   
>   Mod_python error: "PythonHandler mod_python.publisher"
>   
>   Traceback (most recent call last):
>   
>     File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
>   line 193, in Dispatch
>       result = object(req)
>   
>     File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
>   line 106, in handler
>       val = File(field)
>   
>     File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
>   line 322, in __init__
>       for m in field.file.__methods__:
>   
>   AttributeError: 'file' object has no attribute '__methods__'
>   
>   
>   
>   It is hard to pin point the problem, since it doesn't show where in my
>   code is happening. But my guess is that it is somewhere in this code
>   snippet:
>   
>   for p in photo:
>   phpath='/data/webroot/propman/propphotos/'
>   F= open(phpath+str("tempprop"+id+"-"+p.name[-1:]+p.filename[-4:]),'wb')
>   F.write(p.file.read())
>   F.flush()
>   os.system("convert "+phpath+str("tempprop"+id
>   +"-"+p.name[-1:]+p.filename[-4:])+" -resize 400x300 "+phpath
>   +""+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:]))
>   com="convert "+phpath+str("tempprop"+id
>   +"-"+p.name[-1:]+p.filename[-4:])+" -resize 80x60 "+phpath
>   +"thm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
>   R.write("\n\n"+com+"\n\n")
>   os.system(com)
>   if p.name[-1:]=="1":
>   com="convert "+phpath+str("tempprop"+id
>   +"-"+p.name[-1:]+p.filename[-4:])+" -resize 220x165\! "+phpath
>   +"bthm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
>   R.write("\n\n"+com+"\n\n")
>   os.system(com)
>   
>   Sorry about the indentation, it got missed up while pasting in the
>   email.
>   
>   My guess is in 'p.file.read()
>   
>   How do I implemented for 2.7.11? or do I need to configure my Apache
>   conf file.
>   
>   
> 			
> ---------------------------------
> Yahoo! Messenger with Voice. PC-to-Phone calls for ridiculously low rates.
From jcigar at ulb.ac.be  Tue Apr  4 05:19:21 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Apr  4 05:19:00 2006
Subject: [mod_python] debian
Message-ID: <44323A19.3050309@ulb.ac.be>

Hello,

I just received the confirmation that the current maintainer of the 
libapache2-mod-python will not maintain the package anymore (no more 
time) ...
(see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=360654)

Is somebody interested to adopt it ?

(I would be interested, but I haven't any knownledges on Debian 
packaging at the moment, so if somebody is motivated ...)

Regards,
Julien

-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
Work: jcigar@ulb.ac.be
Personal: mage@mordor.ath.cx

From x at branwelt.de  Tue Apr  4 08:27:13 2006
From: x at branwelt.de (Emanuel Rumpf)
Date: Tue Apr  4 08:24:56 2006
Subject: [mod_python] processing py-scripts with apache 1.3 and mod_python
In-Reply-To: <44323A19.3050309@ulb.ac.be>
References: <44323A19.3050309@ulb.ac.be>
Message-ID: <44326621.1010504@branwelt.de>

Hello,

I wanted /anydir/py/test.py to be processed by mod_python
on apache 1.3 server, when requesting http://domain.org/py/test.py
(where /anydir/ is the DocumentRoot)


No matter, what I tried, there was no success,
either the file was delivered as textfile-download,
or I got a "File not Found" error.

my current config, which is inside a virtual host:

<Directory /anydir/py/>
                Options -FollowSymLinks +Indexes
                Order allow,deny
                Allow from all

                PythonPath "sys.path+['/anydir/py/']"

                #PythonHandler handler_script
                PythonHandler mod_python.publisher

                PythonDebug On
                PythonInterpreter pi01

                #excecute those with .py extension
                #AddHandler mod_python .py
               
                #excecute those with any extension
                #SetHandler mod_python
                # the same (?):
                SetHandler python-program

</Directory>


Any hints, how to make it working?

Thanks,
Emanuel


btw:
What's the diffence between:
SetHandler mod_python
and:
SetHandler python-program



From el_z0rr07 at yahoo.com  Tue Apr  4 09:25:57 2006
From: el_z0rr07 at yahoo.com (Alberto Ruiz)
Date: Tue Apr  4 09:26:01 2006
Subject: [mod_python] [SPAM] Re: Is this related to not having support to
	upload a file?
In-Reply-To: <1144127815.4310@dscpl.user.openhosting.com>
Message-ID: <20060404132557.96036.qmail@web51413.mail.yahoo.com>

Ok I modified the publisher.py code but I got the following:
  
  Traceback (most recent call last):
  
    File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 193, in Dispatch
      result = object(req)
  
    File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py", line 106, in handler
      val = File(field)
  
    File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py", line 324, in __init__
      for k in field.file.__dict__:
  
  AttributeError: 'file' object has no attribute '__dict__'
  

  So __dict__ is also not supported on newer versions of Python?  It  doesn't make sense.   I just did the following edit:
  
  class File:
      """ Like a file, but also has headers and filename
      """
  
      def __init__(self, field):
  
          # steal all the file-like methods
          #for m in field.file.__methods__:
          #    self.__dict__[m] = getattr(field.file, m)
          for k in field.file.__dict__:
              if k[:2] != '__':
                  v = getattr(field.file, k)
                  if callable(v):
                       self.__dict__[k] = v
  
          self.headers = field.headers
          self.filename = field.filename
  
  
Graham Dumpleton <grahamd@dscpl.com.au> wrote:  See mailing list archives. There were two responses.

  http://www.modpython.org/pipermail/mod_python/2006-April/020756.html
  http://www.modpython.org/pipermail/mod_python/2006-April/020757.html

Graham

Alberto Ruiz wrote ..
> I apologyze for sending this email again, but my server is under   a DDOS
> attack and I'm not sure if this email went through.  If it  did can somebody
> please forward me or post the replies again.  I  had to subscribe again
> to the mailing list with a different account.     Thanks. 
>   
>   Like I mentioned in earlier threads, this code used to work in a Debian
>   system, but now it doesn't work on FreeBSD with modpython 2.7.11.
>   I'm getting the following error.
>   
>   Mod_python error: "PythonHandler mod_python.publisher"
>   
>   Traceback (most recent call last):
>   
>     File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
>   line 193, in Dispatch
>       result = object(req)
>   
>     File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
>   line 106, in handler
>       val = File(field)
>   
>     File "/usr/local/lib/python2.4/site-packages/mod_python/publisher.py",
>   line 322, in __init__
>       for m in field.file.__methods__:
>   
>   AttributeError: 'file' object has no attribute '__methods__'
>   
>   
>   
>   It is hard to pin point the problem, since it doesn't show where in my
>   code is happening. But my guess is that it is somewhere in this code
>   snippet:
>   
>   for p in photo:
>   phpath='/data/webroot/propman/propphotos/'
>   F= open(phpath+str("tempprop"+id+"-"+p.name[-1:]+p.filename[-4:]),'wb')
>   F.write(p.file.read())
>   F.flush()
>   os.system("convert "+phpath+str("tempprop"+id
>   +"-"+p.name[-1:]+p.filename[-4:])+" -resize 400x300 "+phpath
>   +""+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:]))
>   com="convert "+phpath+str("tempprop"+id
>   +"-"+p.name[-1:]+p.filename[-4:])+" -resize 80x60 "+phpath
>   +"thm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
>   R.write("\n\n"+com+"\n\n")
>   os.system(com)
>   if p.name[-1:]=="1":
>   com="convert "+phpath+str("tempprop"+id
>   +"-"+p.name[-1:]+p.filename[-4:])+" -resize 220x165\! "+phpath
>   +"bthm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
>   R.write("\n\n"+com+"\n\n")
>   os.system(com)
>   
>   Sorry about the indentation, it got missed up while pasting in the
>   email.
>   
>   My guess is in 'p.file.read()
>   
>   How do I implemented for 2.7.11? or do I need to configure my Apache
>   conf file.
>   
>   
>    
> ---------------------------------
> Yahoo! Messenger with Voice. PC-to-Phone calls for ridiculously low rates.


		
---------------------------------
How low will we go? Check out Yahoo! Messenger?s low  PC-to-Phone call rates.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060404/8e9013d6/attachment.html
From dpopowich at comcast.net  Tue Apr  4 10:02:51 2006
From: dpopowich at comcast.net (Daniel J. Popowich)
Date: Tue Apr  4 10:02:17 2006
Subject: [mod_python] debian
In-Reply-To: <44323A19.3050309@ulb.ac.be>
References: <44323A19.3050309@ulb.ac.be>
Message-ID: <17458.31883.286145.603665@io.astro.umass.edu>


Julien Cigar writes:
> Hello,
> 
> I just received the confirmation that the current maintainer of the 
> libapache2-mod-python will not maintain the package anymore (no more 
> time) ...
> (see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=360654)
> 
> Is somebody interested to adopt it ?
> 

I am interested and have stated so before.  My day job is maintaining
a department of debian boxes, so I'm up on the debian-way.  I had sent
an email to the previous maintainer, but never received a response.

There's someone in my department who's an official debian developer
and he's helping me get such status so I can maintain mod-python as
well as a few others.

Cheers,

Daniel Popowich
---------------
http://home.comcast.net/~d.popowich/mpservlets/
From vinehand at yahoo.com  Tue Apr  4 10:28:37 2006
From: vinehand at yahoo.com (y y)
Date: Tue Apr  4 10:28:42 2006
Subject: [mod_python] can't get modperl working
Message-ID: <20060404142837.59220.qmail@web35507.mail.mud.yahoo.com>

Hi,

I installed:
python 2.4
Apache 2.0.55
mod_python 3.2.8
on Windows XP

and I cannot get it working. I've tried this too many
times and with too many mix of versions and I'm
getting the same problem when I run Apache on console:

Syntax error on line 173 of C:/Program Files/Apache
Group/Apache2/conf/httpd.conf:
Cannot load C:/Program Files/Apache
Group/Apache2/modules/mod_python.so into server: The
specified module could not be found.

Please help!

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From jpg at jgassociates.ca  Tue Apr  4 10:47:56 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Apr  4 10:47:18 2006
Subject: [mod_python] debian
In-Reply-To: <17458.31883.286145.603665@io.astro.umass.edu>
References: <44323A19.3050309@ulb.ac.be>
	<17458.31883.286145.603665@io.astro.umass.edu>
Message-ID: <4432871C.7000003@jgassociates.ca>

Daniel J. Popowich wrote:
> Julien Cigar writes:
> 
>>Hello,
>>
>>I just received the confirmation that the current maintainer of the 
>>libapache2-mod-python will not maintain the package anymore (no more 
>>time) ...
>>(see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=360654)
>>
>>Is somebody interested to adopt it ?
>>
> 
> 
> I am interested and have stated so before.  My day job is maintaining
> a department of debian boxes, so I'm up on the debian-way.  I had sent
> an email to the previous maintainer, but never received a response.
> 
> There's someone in my department who's an official debian developer
> and he's helping me get such status so I can maintain mod-python as
> well as a few others.
> 
This is wonderful news Daniel! I'd hate to see mod_python dropped from 
Debian.

Jim
From jpg at jgassociates.ca  Tue Apr  4 10:51:50 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Apr  4 10:51:12 2006
Subject: [mod_python] can't get modperl working
In-Reply-To: <20060404142837.59220.qmail@web35507.mail.mud.yahoo.com>
References: <20060404142837.59220.qmail@web35507.mail.mud.yahoo.com>
Message-ID: <44328806.2030706@jgassociates.ca>

y y wrote:
> Hi,
> 
> I installed:
> python 2.4
> Apache 2.0.55
> mod_python 3.2.8
> on Windows XP
> 
> and I cannot get it working. I've tried this too many
> times and with too many mix of versions and I'm
> getting the same problem when I run Apache on console:
> 
> Syntax error on line 173 of C:/Program Files/Apache
> Group/Apache2/conf/httpd.conf:
> Cannot load C:/Program Files/Apache
> Group/Apache2/modules/mod_python.so into server: The
> specified module could not be found.
> 
> Please help!

So what exactly does line 173 of httpd.conf say?

Is the C:/Program Files/Apache Group/Apache2/modules/mod_python.so file 
in fact missing?

Did you use the mod_python binary for the installation or did you 
compile it yourself?

Jim

From ccbean at gmail.com  Tue Apr  4 12:32:08 2006
From: ccbean at gmail.com (Colin Bean)
Date: Tue Apr  4 12:32:15 2006
Subject: [mod_python] processing py-scripts with apache 1.3 and mod_python
In-Reply-To: <44326621.1010504@branwelt.de>
References: <44323A19.3050309@ulb.ac.be> <44326621.1010504@branwelt.de>
Message-ID: <29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>

For starters, try putting quotes around the path in the "Directory" section,
so:
    <Directory "/anydir/py/">

Also, chage "PythonHandler mod_python.publisher" to "SetHandler
mod_python.publisher".
Once you've done this, I don't beleive that you need the PythonPath
directive (since it is the same path as the publisher directory), nor the
"SetHandler python-program".

This doesn't really answer your question in depth, but I beleive that the
"SetHandler python-program" directive is only necessisary in older
versions(?) of mod_python, in which case you also needed to specify a
"PythonHandler" directive.  In your case, the line "SetHandler
mod_python.publisher" should be all that's needed.

Also, posting relevant snippets of your error logs will help us to diagnose
further problems.

HTH,
-Colin


On 4/4/06, Emanuel Rumpf <x@branwelt.de> wrote:
>
> Hello,
>
> I wanted /anydir/py/test.py to be processed by mod_python
> on apache 1.3 server, when requesting http://domain.org/py/test.py
> (where /anydir/ is the DocumentRoot)
>
>
> No matter, what I tried, there was no success,
> either the file was delivered as textfile-download,
> or I got a "File not Found" error.
>
> my current config, which is inside a virtual host:
>
> <Directory /anydir/py/>
>                 Options -FollowSymLinks +Indexes
>                 Order allow,deny
>                 Allow from all
>
>                 PythonPath "sys.path+['/anydir/py/']"
>
>                 #PythonHandler handler_script
>                 PythonHandler mod_python.publisher
>
>                 PythonDebug On
>                 PythonInterpreter pi01
>
>                 #excecute those with .py extension
>                 #AddHandler mod_python .py
>
>                 #excecute those with any extension
>                 #SetHandler mod_python
>                 # the same (?):
>                 SetHandler python-program
>
> </Directory>
>
>
> Any hints, how to make it working?
>
> Thanks,
> Emanuel
>
>
> btw:
> What's the diffence between:
> SetHandler mod_python
> and:
> SetHandler python-program
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060404/33e8c1b7/attachment.html
From vinehand at yahoo.com  Tue Apr  4 14:37:47 2006
From: vinehand at yahoo.com (y y)
Date: Tue Apr  4 14:37:51 2006
Subject: [mod_python] can't get modperl working
In-Reply-To: <44328806.2030706@jgassociates.ca>
Message-ID: <20060404183747.43645.qmail@web35510.mail.mud.yahoo.com>

line 173 was the line that uses LoadModule on
mod_python. I checked the directory and mod_python.so
in fact there.

--- Jim Gallacher <jpg@jgassociates.ca> wrote:

> y y wrote:
> > Hi,
> > 
> > I installed:
> > python 2.4
> > Apache 2.0.55
> > mod_python 3.2.8
> > on Windows XP
> > 
> > and I cannot get it working. I've tried this too
> many
> > times and with too many mix of versions and I'm
> > getting the same problem when I run Apache on
> console:
> > 
> > Syntax error on line 173 of C:/Program
> Files/Apache
> > Group/Apache2/conf/httpd.conf:
> > Cannot load C:/Program Files/Apache
> > Group/Apache2/modules/mod_python.so into server:
> The
> > specified module could not be found.
> > 
> > Please help!
> 
> So what exactly does line 173 of httpd.conf say?
> 
> Is the C:/Program Files/Apache
> Group/Apache2/modules/mod_python.so file 
> in fact missing?
> 
> Did you use the mod_python binary for the
> installation or did you 
> compile it yourself?
> 
> Jim
> 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From vinehand at yahoo.com  Tue Apr  4 14:44:54 2006
From: vinehand at yahoo.com (y y)
Date: Tue Apr  4 14:44:57 2006
Subject: [mod_python] can't get modperl working
In-Reply-To: <44328806.2030706@jgassociates.ca>
Message-ID: <20060404184454.62699.qmail@web35513.mail.mud.yahoo.com>

oh, and I downloaded all my binaries from the
corresponding project ftp sites.

--- Jim Gallacher <jpg@jgassociates.ca> wrote:

> y y wrote:
> > Hi,
> > 
> > I installed:
> > python 2.4
> > Apache 2.0.55
> > mod_python 3.2.8
> > on Windows XP
> > 
> > and I cannot get it working. I've tried this too
> many
> > times and with too many mix of versions and I'm
> > getting the same problem when I run Apache on
> console:
> > 
> > Syntax error on line 173 of C:/Program
> Files/Apache
> > Group/Apache2/conf/httpd.conf:
> > Cannot load C:/Program Files/Apache
> > Group/Apache2/modules/mod_python.so into server:
> The
> > specified module could not be found.
> > 
> > Please help!
> 
> So what exactly does line 173 of httpd.conf say?
> 
> Is the C:/Program Files/Apache
> Group/Apache2/modules/mod_python.so file 
> in fact missing?
> 
> Did you use the mod_python binary for the
> installation or did you 
> compile it yourself?
> 
> Jim
> 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From nicolas at lehuen.com  Tue Apr  4 14:56:46 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Apr  4 14:56:50 2006
Subject: [mod_python] can't get modperl working
In-Reply-To: <20060404183747.43645.qmail@web35510.mail.mud.yahoo.com>
References: <44328806.2030706@jgassociates.ca>
	<20060404183747.43645.qmail@web35510.mail.mud.yahoo.com>
Message-ID: <c298f2d70604041156i32bc5a6aj20991077b03ec0ac@mail.gmail.com>

Hi,

One of the possible cause of your problem is that Apache does find
mod_python.so but not one of the DLL it relies on. Unfortunately the error
reporting in this case is quite scarce and misguiding.

The candidates missing DLLs are python24.dll and the Microsoft Runtime DLLS
(normally msvcr71.dll and msvcp71.dll).

Make sure that your Python directory and the runtime DLLs can be found on
your PATH. The runtime DLLs are normaly copied in your Python directory, so
putting the Python directory on your PATH variable should do the trick.

Also, make sure that the user which is running Apache has its PATH variable
properly set. The best way to do this is to define it at the system-wide
level, but logging it under the user and defining the variable at the user
level is also possible.

I hope this will solve your problem.

Regards,
Nicolas

2006/4/4, y y <vinehand@yahoo.com>:
>
> line 173 was the line that uses LoadModule on
> mod_python. I checked the directory and mod_python.so
> in fact there.
>
> --- Jim Gallacher <jpg@jgassociates.ca> wrote:
>
> > y y wrote:
> > > Hi,
> > >
> > > I installed:
> > > python 2.4
> > > Apache 2.0.55
> > > mod_python 3.2.8
> > > on Windows XP
> > >
> > > and I cannot get it working. I've tried this too
> > many
> > > times and with too many mix of versions and I'm
> > > getting the same problem when I run Apache on
> > console:
> > >
> > > Syntax error on line 173 of C:/Program
> > Files/Apache
> > > Group/Apache2/conf/httpd.conf:
> > > Cannot load C:/Program Files/Apache
> > > Group/Apache2/modules/mod_python.so into server:
> > The
> > > specified module could not be found.
> > >
> > > Please help!
> >
> > So what exactly does line 173 of httpd.conf say?
> >
> > Is the C:/Program Files/Apache
> > Group/Apache2/modules/mod_python.so file
> > in fact missing?
> >
> > Did you use the mod_python binary for the
> > installation or did you
> > compile it yourself?
> >
> > Jim
> >
> >
>
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060404/2a40b2ea/attachment.html
From nicolas at lehuen.com  Tue Apr  4 15:01:30 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Apr  4 15:01:32 2006
Subject: [mod_python] can't get modperl working
In-Reply-To: <c298f2d70604041156i32bc5a6aj20991077b03ec0ac@mail.gmail.com>
References: <44328806.2030706@jgassociates.ca>
	<20060404183747.43645.qmail@web35510.mail.mud.yahoo.com>
	<c298f2d70604041156i32bc5a6aj20991077b03ec0ac@mail.gmail.com>
Message-ID: <c298f2d70604041201gac2c45fubf2cabfed45f2e6f@mail.gmail.com>

One thing that we should put in the documentation if it's not already : if
you change your PATH variable to solve this problem, and Apache runs as a
service, you probably have to restart your computer to make sure the
variable change is taken into account.

If restarting is a luxury you cannot afford, then you should at least stop
and start the service. Restarting using apache -k restart WON'T do the
trick, as the parent process is not stopped, so the environment is not
refreshed. You have to do "apache -k stop & apache -k start" or use the
Services control panel.

Regards,
Nicolas


2006/4/4, Nicolas Lehuen <nicolas@lehuen.com>:
>
> Hi,
>
> One of the possible cause of your problem is that Apache does find
> mod_python.so but not one of the DLL it relies on. Unfortunately the error
> reporting in this case is quite scarce and misguiding.
>
> The candidates missing DLLs are python24.dll and the Microsoft Runtime
> DLLS (normally msvcr71.dll and msvcp71.dll).
>
> Make sure that your Python directory and the runtime DLLs can be found on
> your PATH. The runtime DLLs are normaly copied in your Python directory, so
> putting the Python directory on your PATH variable should do the trick.
>
> Also, make sure that the user which is running Apache has its PATH
> variable properly set. The best way to do this is to define it at the
> system-wide level, but logging it under the user and defining the variable
> at the user level is also possible.
>
> I hope this will solve your problem.
>
> Regards,
> Nicolas
>
> 2006/4/4, y y <vinehand@yahoo.com>:
>
> > line 173 was the line that uses LoadModule on
> > mod_python. I checked the directory and mod_python.so
> > in fact there.
> >
> > --- Jim Gallacher <jpg@jgassociates.ca> wrote:
> >
> > > y y wrote:
> > > > Hi,
> > > >
> > > > I installed:
> > > > python 2.4
> > > > Apache 2.0.55
> > > > mod_python 3.2.8
> > > > on Windows XP
> > > >
> > > > and I cannot get it working. I've tried this too
> > > many
> > > > times and with too many mix of versions and I'm
> > > > getting the same problem when I run Apache on
> > > console:
> > > >
> > > > Syntax error on line 173 of C:/Program
> > > Files/Apache
> > > > Group/Apache2/conf/httpd.conf:
> > > > Cannot load C:/Program Files/Apache
> > > > Group/Apache2/modules/mod_python.so into server:
> > > The
> > > > specified module could not be found.
> > > >
> > > > Please help!
> > >
> > > So what exactly does line 173 of httpd.conf say?
> > >
> > > Is the C:/Program Files/Apache
> > > Group/Apache2/modules/mod_python.so file
> > > in fact missing?
> > >
> > > Did you use the mod_python binary for the
> > > installation or did you
> > > compile it yourself?
> > >
> > > Jim
> > >
> > >
> >
> >
> > __________________________________________________
> > Do You Yahoo!?
> > Tired of spam?  Yahoo! Mail has the best spam protection around
> > http://mail.yahoo.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060404/acad60b1/attachment-0001.html
From x at branwelt.de  Tue Apr  4 15:07:26 2006
From: x at branwelt.de (Emanuel Rumpf)
Date: Tue Apr  4 15:05:03 2006
Subject: [mod_python] processing py-scripts with apache 1.3 and mod_python
In-Reply-To: <29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>
References: <44323A19.3050309@ulb.ac.be> <44326621.1010504@branwelt.de>
	<29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>
Message-ID: <4432C3EE.3070601@branwelt.de>

Colin Bean wrote:

>For starters, try putting quotes around the path in the "Directory" section,
>so:
>    <Directory "/anydir/py/">
>
>Also, chage "PythonHandler mod_python.publisher" to "SetHandler
>mod_python.publisher".
>Once you've done this, I don't beleive that you need the PythonPath
>directive (since it is the same path as the publisher directory), nor the
>"SetHandler python-program".
>
>This doesn't really answer your question in depth, but I beleive that the
>"SetHandler python-program" directive is only necessisary in older
>versions(?) of mod_python, in which case you also needed to specify a
>"PythonHandler" directive.  In your case, the line "SetHandler
>mod_python.publisher" should be all that's needed.
>
>Also, posting relevant snippets of your error logs will help us to diagnose
>further problems.
>
>HTH,
>-Colin
>
>
>On 4/4/06, Emanuel Rumpf <x@branwelt.de> wrote:
>  
>
>>Hello,
>>
>>I wanted /anydir/py/test.py to be processed by mod_python
>>on apache 1.3 server, when requesting http://domain.org/py/test.py
>>(where /anydir/ is the DocumentRoot)
>>
>>
>>No matter, what I tried, there was no success,
>>either the file was delivered as textfile-download,
>>or I got a "File not Found" error.
>>
>>my current config, which is inside a virtual host:
>>
>><Directory /anydir/py/>
>>                Options -FollowSymLinks +Indexes
>>                Order allow,deny
>>                Allow from all
>>
>>                PythonPath "sys.path+['/anydir/py/']"
>>
>>                #PythonHandler handler_script
>>                PythonHandler mod_python.publisher
>>
>>                PythonDebug On
>>                PythonInterpreter pi01
>>
>>                #excecute those with .py extension
>>                #AddHandler mod_python .py
>>
>>                #excecute those with any extension
>>                #SetHandler mod_python
>>                # the same (?):
>>                SetHandler python-program
>>
>></Directory>
>>
>>
>>Any hints, how to make it working?
>>
>>Thanks,
>>Emanuel
>>
>>
>>btw:
>>What's the diffence between:
>>SetHandler mod_python
>>and:
>>SetHandler python-program
>>
>>    
>>


SetHandler mod_python.publisher
Doesn't seem to work. So maybe the mod_python version is too old? (
mod_python-2.7.11 )

With the following construct, mod_python seems
to create a directory-index (the view changes of the directory list,
that's why I assume it),
but the files still are delivered as plain-text.


<FilesMatch "(.*)">
        Options -FollowSymLinks +Indexes
        Order allow,deny
        Allow from all
       
        #excecute those with .py extension
        #AddHandler mod_python .py
       
        PythonHandler mod_python.publisher
        SetHandler python-program
        PythonDebug On
      
</FilesMatch>

There's a message in /var/log/apache/error.log :
[Tue Apr  4 18:37:57 2006] [notice] mod_python: (Re)importing
mod_python.publisher from None

Emanuel






From nicolas at lehuen.com  Tue Apr  4 15:11:44 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Apr  4 15:11:55 2006
Subject: [SPAM] Re: [mod_python] processing py-scripts with apache 1.3 and
	mod_python
In-Reply-To: <4432C3EE.3070601@branwelt.de>
References: <44323A19.3050309@ulb.ac.be> <44326621.1010504@branwelt.de>
	<29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>
	<4432C3EE.3070601@branwelt.de>
Message-ID: <c298f2d70604041211r44b1f112l76fe0aa16b8c3e7d@mail.gmail.com>

The mod_python version is definitely too old. There are been a LOT of bug
fixes since 2.7.11. Unfortunately the 3.x branch from which the latest
version (3.2.8) is issued requires Apache 2.0.47 or later. If you can
upgrade, then I'd advise you do it now. If you cannot, then be prepared to
use a very deprecated version of mod_python, which is not longer developed
or maintained.

Regards,
Nicolas

2006/4/4, Emanuel Rumpf <x@branwelt.de>:
>
> Colin Bean wrote:
>
> >For starters, try putting quotes around the path in the "Directory"
> section,
> >so:
> >    <Directory "/anydir/py/">
> >
> >Also, chage "PythonHandler mod_python.publisher" to "SetHandler
> >mod_python.publisher".
> >Once you've done this, I don't beleive that you need the PythonPath
> >directive (since it is the same path as the publisher directory), nor the
> >"SetHandler python-program".
> >
> >This doesn't really answer your question in depth, but I beleive that the
> >"SetHandler python-program" directive is only necessisary in older
> >versions(?) of mod_python, in which case you also needed to specify a
> >"PythonHandler" directive.  In your case, the line "SetHandler
> >mod_python.publisher" should be all that's needed.
> >
> >Also, posting relevant snippets of your error logs will help us to
> diagnose
> >further problems.
> >
> >HTH,
> >-Colin
> >
> >
> >On 4/4/06, Emanuel Rumpf <x@branwelt.de> wrote:
> >
> >
> >>Hello,
> >>
> >>I wanted /anydir/py/test.py to be processed by mod_python
> >>on apache 1.3 server, when requesting http://domain.org/py/test.py
> >>(where /anydir/ is the DocumentRoot)
> >>
> >>
> >>No matter, what I tried, there was no success,
> >>either the file was delivered as textfile-download,
> >>or I got a "File not Found" error.
> >>
> >>my current config, which is inside a virtual host:
> >>
> >><Directory /anydir/py/>
> >>                Options -FollowSymLinks +Indexes
> >>                Order allow,deny
> >>                Allow from all
> >>
> >>                PythonPath "sys.path+['/anydir/py/']"
> >>
> >>                #PythonHandler handler_script
> >>                PythonHandler mod_python.publisher
> >>
> >>                PythonDebug On
> >>                PythonInterpreter pi01
> >>
> >>                #excecute those with .py extension
> >>                #AddHandler mod_python .py
> >>
> >>                #excecute those with any extension
> >>                #SetHandler mod_python
> >>                # the same (?):
> >>                SetHandler python-program
> >>
> >></Directory>
> >>
> >>
> >>Any hints, how to make it working?
> >>
> >>Thanks,
> >>Emanuel
> >>
> >>
> >>btw:
> >>What's the diffence between:
> >>SetHandler mod_python
> >>and:
> >>SetHandler python-program
> >>
> >>
> >>
>
>
> SetHandler mod_python.publisher
> Doesn't seem to work. So maybe the mod_python version is too old? (
> mod_python-2.7.11 )
>
> With the following construct, mod_python seems
> to create a directory-index (the view changes of the directory list,
> that's why I assume it),
> but the files still are delivered as plain-text.
>
>
> <FilesMatch "(.*)">
>         Options -FollowSymLinks +Indexes
>         Order allow,deny
>         Allow from all
>
>         #excecute those with .py extension
>         #AddHandler mod_python .py
>
>         PythonHandler mod_python.publisher
>         SetHandler python-program
>         PythonDebug On
>
> </FilesMatch>
>
> There's a message in /var/log/apache/error.log :
> [Tue Apr  4 18:37:57 2006] [notice] mod_python: (Re)importing
> mod_python.publisher from None
>
> Emanuel
>
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060404/794a10ac/attachment.html
From vinehand at yahoo.com  Tue Apr  4 15:30:52 2006
From: vinehand at yahoo.com (y y)
Date: Tue Apr  4 15:30:55 2006
Subject: [mod_python] can't get modperl working
In-Reply-To: <c298f2d70604041201gac2c45fubf2cabfed45f2e6f@mail.gmail.com>
Message-ID: <20060404193052.71360.qmail@web35505.mail.mud.yahoo.com>

Problem solved.. Thanks Nicolas.

The issue is exactly as you described. I needed to
have C:\python24 in my path.

Thanks again!

--- Nicolas Lehuen <nicolas@lehuen.com> wrote:

> One thing that we should put in the documentation if
> it's not already : if
> you change your PATH variable to solve this problem,
> and Apache runs as a
> service, you probably have to restart your computer
> to make sure the
> variable change is taken into account.
> 
> If restarting is a luxury you cannot afford, then
> you should at least stop
> and start the service. Restarting using apache -k
> restart WON'T do the
> trick, as the parent process is not stopped, so the
> environment is not
> refreshed. You have to do "apache -k stop & apache
> -k start" or use the
> Services control panel.
> 
> Regards,
> Nicolas
> 
> 
> 2006/4/4, Nicolas Lehuen <nicolas@lehuen.com>:
> >
> > Hi,
> >
> > One of the possible cause of your problem is that
> Apache does find
> > mod_python.so but not one of the DLL it relies on.
> Unfortunately the error
> > reporting in this case is quite scarce and
> misguiding.
> >
> > The candidates missing DLLs are python24.dll and
> the Microsoft Runtime
> > DLLS (normally msvcr71.dll and msvcp71.dll).
> >
> > Make sure that your Python directory and the
> runtime DLLs can be found on
> > your PATH. The runtime DLLs are normaly copied in
> your Python directory, so
> > putting the Python directory on your PATH variable
> should do the trick.
> >
> > Also, make sure that the user which is running
> Apache has its PATH
> > variable properly set. The best way to do this is
> to define it at the
> > system-wide level, but logging it under the user
> and defining the variable
> > at the user level is also possible.
> >
> > I hope this will solve your problem.
> >
> > Regards,
> > Nicolas
> >
> > 2006/4/4, y y <vinehand@yahoo.com>:
> >
> > > line 173 was the line that uses LoadModule on
> > > mod_python. I checked the directory and
> mod_python.so
> > > in fact there.
> > >
> > > --- Jim Gallacher <jpg@jgassociates.ca> wrote:
> > >
> > > > y y wrote:
> > > > > Hi,
> > > > >
> > > > > I installed:
> > > > > python 2.4
> > > > > Apache 2.0.55
> > > > > mod_python 3.2.8
> > > > > on Windows XP
> > > > >
> > > > > and I cannot get it working. I've tried this
> too
> > > > many
> > > > > times and with too many mix of versions and
> I'm
> > > > > getting the same problem when I run Apache
> on
> > > > console:
> > > > >
> > > > > Syntax error on line 173 of C:/Program
> > > > Files/Apache
> > > > > Group/Apache2/conf/httpd.conf:
> > > > > Cannot load C:/Program Files/Apache
> > > > > Group/Apache2/modules/mod_python.so into
> server:
> > > > The
> > > > > specified module could not be found.
> > > > >
> > > > > Please help!
> > > >
> > > > So what exactly does line 173 of httpd.conf
> say?
> > > >
> > > > Is the C:/Program Files/Apache
> > > > Group/Apache2/modules/mod_python.so file
> > > > in fact missing?
> > > >
> > > > Did you use the mod_python binary for the
> > > > installation or did you
> > > > compile it yourself?
> > > >
> > > > Jim
> > > >
> > > >
> > >
> > >
> > >
> __________________________________________________
> > > Do You Yahoo!?
> > > Tired of spam?  Yahoo! Mail has the best spam
> protection around
> > > http://mail.yahoo.com
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > >
>
http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> >
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From grahamd at dscpl.com.au  Tue Apr  4 16:27:52 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr  4 16:28:08 2006
Subject: [mod_python] Re: Is this related to not having support to upload a
	file?
In-Reply-To: <20060404132557.96036.qmail@web51413.mail.yahoo.com>
References: <20060404132557.96036.qmail@web51413.mail.yahoo.com>
Message-ID: <398054EA-C0E4-4C7E-A476-7D2F48D9210F@dscpl.com.au>

Instead of:

   for k in field.file.__dict__:

try:

   for k in dir(field.file):

Grahamd

On 04/04/2006, at 11:25 PM, Alberto Ruiz wrote:

> Ok I modified the publisher.py code but I got the following:
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> apache.py", line 193, in Dispatch
>     result = object(req)
>
>   File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py", line 106, in handler
>     val = File(field)
>
>   File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py", line 324, in __init__
>     for k in field.file.__dict__:
>
> AttributeError: 'file' object has no attribute '__dict__'
>
>
> So __dict__ is also not supported on newer versions of Python?  It  
> doesn't make sense.   I just did the following edit:
>
> class File:
>     """ Like a file, but also has headers and filename
>     """
>
>     def __init__(self, field):
>
>         # steal all the file-like methods
>         #for m in field.file.__methods__:
>         #    self.__dict__[m] = getattr(field.file, m)
>         for k in field.file.__dict__:
>             if k[:2] != '__':
>                 v = getattr(field.file, k)
>                 if callable(v):
>                     self.__dict__[k] = v
>
>         self.headers = field.headers
>         self.filename = field.filename
>
>
> Graham Dumpleton <grahamd@dscpl.com.au> wrote: See mailing list  
> archives. There were two responses.
>
> http://www.modpython.org/pipermail/mod_python/2006-April/020756.html
> http://www.modpython.org/pipermail/mod_python/2006-April/020757.html
>
> Graham
>
> Alberto Ruiz wrote ..
> > I apologyze for sending this email again, but my server is under  
> a DDOS
> > attack and I'm not sure if this email went through. If it did can  
> somebody
> > please forward me or post the replies again. I had to subscribe  
> again
> > to the mailing list with a different account. Thanks.
> >
> > Like I mentioned in earlier threads, this code used to work in a  
> Debian
> > system, but now it doesn't work on FreeBSD with modpython 2.7.11.
> > I'm getting the following error.
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> > File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
> > line 193, in Dispatch
> > result = object(req)
> >
> > File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py",
> > line 106, in handler
> > val = File(field)
> >
> > File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py",
> > line 322, in __init__
> > for m in field.file.__methods__:
> >
> > AttributeError: 'file' object has no attribute '__methods__'
> >
> >
> >
> > It is hard to pin point the problem, since it doesn't show where  
> in my
> > code is happening. But my guess is that it is somewhere in this code
> > snippet:
> >
> > for p in photo:
> > phpath='/data/webroot/propman/propphotos/'
> > F= open(phpath+str("tempprop"+id+"-"+p.name[-1:]+p.filename 
> [-4:]),'wb')
> > F.write(p.file.read())
> > F.flush()
> > os.system("convert "+phpath+str("tempprop"+id
> > +"-"+p.name[-1:]+p.filename[-4:])+" -resize 400x300 "+phpath
> > +""+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:]))
> > com="convert "+phpath+str("tempprop"+id
> > +"-"+p.name[-1:]+p.filename[-4:])+" -resize 80x60 "+phpath
> > +"thm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
> > R.write("\n\n"+com+"\n\n")
> > os.system(com)
> > if p.name[-1:]=="1":
> > com="convert "+phpath+str("tempprop"+id
> > +"-"+p.name[-1:]+p.filename[-4:])+" -resize 220x165\! "+phpath
> > +"bthm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
> > R.write("\n\n"+com+"\n\n")
> > os.system(com)
> >
> > Sorry about the indentation, it got missed up while pasting in the
> > email.
> >
> > My guess is in 'p.file.read()
> >
> > How do I implemented for 2.7.11? or do I need to configure my Apache
> > conf file.
> >
> >
> >
> > ---------------------------------
> > Yahoo! Messenger with Voice. PC-to-Phone calls for ridiculously  
> low rates.
>
>
> How low will we go? Check out Yahoo! Messenger?s low PC-to-Phone  
> call rates.


From grahamd at dscpl.com.au  Tue Apr  4 17:04:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr  4 17:05:08 2006
Subject: [mod_python] processing py-scripts with apache 1.3 and mod_python
In-Reply-To: <29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>
References: <44323A19.3050309@ulb.ac.be> <44326621.1010504@branwelt.de>
	<29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>
Message-ID: <E304A11D-DA61-4857-BA92-FD9478E35188@dscpl.com.au>


On 05/04/2006, at 2:32 AM, Colin Bean wrote:

> For starters, try putting quotes around the path in the "Directory"  
> section, so:
>     <Directory "/anydir/py/">

Adding quotes should make no different. Quotes are only really required
where path has space or other magic characters in it.

> Also, chage "PythonHandler mod_python.publisher" to "SetHandler  
> mod_python.publisher".

This is an incorrect suggestion as well.

> Once you've done this, I don't beleive that you need the PythonPath  
> directive (since it is the same path as the publisher directory),  
> nor the "SetHandler python-program".
>
> This doesn't really answer your question in depth, but I beleive  
> that the "SetHandler python-program" directive is only necessisary  
> in older versions(?) of mod_python, in which case you also needed  
> to specify a "PythonHandler" directive.  In your case, the line  
> "SetHandler mod_python.publisher" should be all that's needed.

He is using an older version so must use "python-program". Note that  
"python-program"
still works in newer versions as well.

> Also, posting relevant snippets of your error logs will help us to  
> diagnose further problems.
>
> HTH,
> -Colin
>
>
> On 4/4/06, Emanuel Rumpf <x@branwelt.de> wrote: Hello,
>
> I wanted /anydir/py/test.py to be processed by mod_python
> on apache 1.3 server, when requesting http://domain.org/py/test.py
> (where /anydir/ is the DocumentRoot)
>
>
> No matter, what I tried, there was no success,
> either the file was delivered as textfile-download,
> or I got a "File not Found" error.
>
> my current config, which is inside a virtual host:
>
> <Directory /anydir/py/>
>                 Options -FollowSymLinks +Indexes
>                 Order allow,deny
>                 Allow from all
>
>                 PythonPath "sys.path+['/anydir/py/']"

No necessary to have PythonPath.

>                 #PythonHandler handler_script
>                 PythonHandler mod_python.publisher
>
>                 PythonDebug On
>                 PythonInterpreter pi01
>
>                 #excecute those with .py extension
>                 #AddHandler mod_python .py

This should be:

   AddHandler python-program .py

The "mod_python" tag only works in newer versions of mod_python.

>                 #excecute those with any extension
>                 #SetHandler mod_python
>                 # the same (?):
>                 SetHandler python-program

Don't use SetHandler, use the AddHandler line above instead else every
request will go through mod_python and you will not be able to serve
up static files.

> </Directory>
>
>
> Any hints, how to make it working?
>
> Thanks,
> Emanuel
>
>
> btw:
> What's the diffence between:
> SetHandler mod_python

Works in mod_python 3.X.

> and:
> SetHandler python-program

Works in mod_python 2.7.X and 3.X.

Having done that, if you still can't get it to work, post the  
contents of your
"test.py" file.

BTW, it is bad to call it "test.py" as there is a Python module  
called "test"
and so if you stuff up, it may pick that up instead.

Although not for mod_python.publisher, would suggest you read:

   http://www.dscpl.com.au/articles/modpython-001.html


Graham
From el_z0rr07 at yahoo.com  Tue Apr  4 17:06:32 2006
From: el_z0rr07 at yahoo.com (Alberto Ruiz)
Date: Tue Apr  4 17:06:51 2006
Subject: [mod_python] [SPAM] Re: Is this related to not having support to
	upload a file?
In-Reply-To: <398054EA-C0E4-4C7E-A476-7D2F48D9210F@dscpl.com.au>
Message-ID: <20060404210632.32921.qmail@web51402.mail.yahoo.com>

I see.
  
  I also tried the following that I found on a newsgroup and it also worked:
  
  class File:
      """ Like a file, but also has headers and filename
      """
      def sim_methods(self, obj):
          return filter(lambda s, t=obj:
                  type(getattr(t, s)) == BuiltinMethodType, dir(obj))
          
      def __init__(self, field):
  
          # steal all the file-like methods
          #for m in field.file.__methods__:
          #    self.__dict__[m] = getattr(field.file, m)
  
          for m in self.sim_methods(field.file):
              self.__dict__[m] = getattr(field.file, m)
  
          self.headers = field.headers
          self.filename = field.filename
  
  
  Thanks again for all your help. I really impressed on how quickly you guys respond.
  

Graham Dumpleton <grahamd@dscpl.com.au> wrote:  Instead of:

   for k in field.file.__dict__:

try:

   for k in dir(field.file):

Grahamd

On 04/04/2006, at 11:25 PM, Alberto Ruiz wrote:

> Ok I modified the publisher.py code but I got the following:
>
> Traceback (most recent call last):
>
>   File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> apache.py", line 193, in Dispatch
>     result = object(req)
>
>   File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py", line 106, in handler
>     val = File(field)
>
>   File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py", line 324, in __init__
>     for k in field.file.__dict__:
>
> AttributeError: 'file' object has no attribute '__dict__'
>
>
> So __dict__ is also not supported on newer versions of Python?  It  
> doesn't make sense.   I just did the following edit:
>
> class File:
>     """ Like a file, but also has headers and filename
>     """
>
>     def __init__(self, field):
>
>         # steal all the file-like methods
>         #for m in field.file.__methods__:
>         #    self.__dict__[m] = getattr(field.file, m)
>         for k in field.file.__dict__:
>             if k[:2] != '__':
>                 v = getattr(field.file, k)
>                 if callable(v):
>                     self.__dict__[k] = v
>
>         self.headers = field.headers
>         self.filename = field.filename
>
>
> Graham Dumpleton  wrote: See mailing list  
> archives. There were two responses.
>
> http://www.modpython.org/pipermail/mod_python/2006-April/020756.html
> http://www.modpython.org/pipermail/mod_python/2006-April/020757.html
>
> Graham
>
> Alberto Ruiz wrote ..
> > I apologyze for sending this email again, but my server is under  
> a DDOS
> > attack and I'm not sure if this email went through. If it did can  
> somebody
> > please forward me or post the replies again. I had to subscribe  
> again
> > to the mailing list with a different account. Thanks.
> >
> > Like I mentioned in earlier threads, this code used to work in a  
> Debian
> > system, but now it doesn't work on FreeBSD with modpython 2.7.11.
> > I'm getting the following error.
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> > File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py",
> > line 193, in Dispatch
> > result = object(req)
> >
> > File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py",
> > line 106, in handler
> > val = File(field)
> >
> > File "/usr/local/lib/python2.4/site-packages/mod_python/ 
> publisher.py",
> > line 322, in __init__
> > for m in field.file.__methods__:
> >
> > AttributeError: 'file' object has no attribute '__methods__'
> >
> >
> >
> > It is hard to pin point the problem, since it doesn't show where  
> in my
> > code is happening. But my guess is that it is somewhere in this code
> > snippet:
> >
> > for p in photo:
> > phpath='/data/webroot/propman/propphotos/'
> > F= open(phpath+str("tempprop"+id+"-"+p.name[-1:]+p.filename 
> [-4:]),'wb')
> > F.write(p.file.read())
> > F.flush()
> > os.system("convert "+phpath+str("tempprop"+id
> > +"-"+p.name[-1:]+p.filename[-4:])+" -resize 400x300 "+phpath
> > +""+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:]))
> > com="convert "+phpath+str("tempprop"+id
> > +"-"+p.name[-1:]+p.filename[-4:])+" -resize 80x60 "+phpath
> > +"thm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
> > R.write("\n\n"+com+"\n\n")
> > os.system(com)
> > if p.name[-1:]=="1":
> > com="convert "+phpath+str("tempprop"+id
> > +"-"+p.name[-1:]+p.filename[-4:])+" -resize 220x165\! "+phpath
> > +"bthm"+str("prop"+id+"-"+p.name[-1:]+p.filename[-4:])
> > R.write("\n\n"+com+"\n\n")
> > os.system(com)
> >
> > Sorry about the indentation, it got missed up while pasting in the
> > email.
> >
> > My guess is in 'p.file.read()
> >
> > How do I implemented for 2.7.11? or do I need to configure my Apache
> > conf file.
> >
> >
> >
> > ---------------------------------
> > Yahoo! Messenger with Voice. PC-to-Phone calls for ridiculously  
> low rates.
>
>
> How low will we go? Check out Yahoo! Messenger?s low PC-to-Phone  
> call rates.



		
---------------------------------
New Yahoo! Messenger with Voice. Call regular phones from your PC and save big.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060404/b0eae54b/attachment.html
From ccbean at gmail.com  Tue Apr  4 17:14:13 2006
From: ccbean at gmail.com (Colin Bean)
Date: Tue Apr  4 17:14:29 2006
Subject: [mod_python] processing py-scripts with apache 1.3 and mod_python
In-Reply-To: <E304A11D-DA61-4857-BA92-FD9478E35188@dscpl.com.au>
References: <44323A19.3050309@ulb.ac.be> <44326621.1010504@branwelt.de>
	<29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>
	<E304A11D-DA61-4857-BA92-FD9478E35188@dscpl.com.au>
Message-ID: <29a6ca010604041414u2da9194by65ef796d7a3be5ab@mail.gmail.com>

My mistake(s)...
I stand corrected :)
I've only configured mod_python 3.X or newer, and somehow overlooked the
fact that he was running 2.7.

-Colin

On 4/4/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
>
> On 05/04/2006, at 2:32 AM, Colin Bean wrote:
>
> > For starters, try putting quotes around the path in the "Directory"
> > section, so:
> >     <Directory "/anydir/py/">
>
> Adding quotes should make no different. Quotes are only really required
> where path has space or other magic characters in it.
>
> > Also, chage "PythonHandler mod_python.publisher" to "SetHandler
> > mod_python.publisher".
>
> This is an incorrect suggestion as well.
>
> > Once you've done this, I don't beleive that you need the PythonPath
> > directive (since it is the same path as the publisher directory),
> > nor the "SetHandler python-program".
> >
> > This doesn't really answer your question in depth, but I beleive
> > that the "SetHandler python-program" directive is only necessisary
> > in older versions(?) of mod_python, in which case you also needed
> > to specify a "PythonHandler" directive.  In your case, the line
> > "SetHandler mod_python.publisher" should be all that's needed.
>
> He is using an older version so must use "python-program". Note that
> "python-program"
> still works in newer versions as well.
>
> > Also, posting relevant snippets of your error logs will help us to
> > diagnose further problems.
> >
> > HTH,
> > -Colin
> >
> >
> > On 4/4/06, Emanuel Rumpf <x@branwelt.de> wrote: Hello,
> >
> > I wanted /anydir/py/test.py to be processed by mod_python
> > on apache 1.3 server, when requesting http://domain.org/py/test.py
> > (where /anydir/ is the DocumentRoot)
> >
> >
> > No matter, what I tried, there was no success,
> > either the file was delivered as textfile-download,
> > or I got a "File not Found" error.
> >
> > my current config, which is inside a virtual host:
> >
> > <Directory /anydir/py/>
> >                 Options -FollowSymLinks +Indexes
> >                 Order allow,deny
> >                 Allow from all
> >
> >                 PythonPath "sys.path+['/anydir/py/']"
>
> No necessary to have PythonPath.
>
> >                 #PythonHandler handler_script
> >                 PythonHandler mod_python.publisher
> >
> >                 PythonDebug On
> >                 PythonInterpreter pi01
> >
> >                 #excecute those with .py extension
> >                 #AddHandler mod_python .py
>
> This should be:
>
>    AddHandler python-program .py
>
> The "mod_python" tag only works in newer versions of mod_python.
>
> >                 #excecute those with any extension
> >                 #SetHandler mod_python
> >                 # the same (?):
> >                 SetHandler python-program
>
> Don't use SetHandler, use the AddHandler line above instead else every
> request will go through mod_python and you will not be able to serve
> up static files.
>
> > </Directory>
> >
> >
> > Any hints, how to make it working?
> >
> > Thanks,
> > Emanuel
> >
> >
> > btw:
> > What's the diffence between:
> > SetHandler mod_python
>
> Works in mod_python 3.X.
>
> > and:
> > SetHandler python-program
>
> Works in mod_python 2.7.X and 3.X.
>
> Having done that, if you still can't get it to work, post the
> contents of your
> "test.py" file.
>
> BTW, it is bad to call it "test.py" as there is a Python module
> called "test"
> and so if you stuff up, it may pick that up instead.
>
> Although not for mod_python.publisher, would suggest you read:
>
>    http://www.dscpl.com.au/articles/modpython-001.html
>
>
> Graham
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060404/f6fbda4c/attachment.html
From Harold at giant-steps-networks.com  Wed Apr  5 02:51:57 2006
From: Harold at giant-steps-networks.com (Harold J. Ship)
Date: Wed Apr  5 01:55:28 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDB7@exchange.Giant-Steps.local>

Attempting to upload a file using Flash 8 FileReference.upload(url)
causes a ValueError at line 173 of util.py.
 
Windows XP
Apache 2.0.54
mod_python 3.2.8
 
>From httpd.conf:
<VirtualHost *:8020>
    ServerName python
    DocumentRoot "c:/Program Files/Apache Group/Apache2/htdocs/python"
    <Directory "c:/Program Files/Apache Group/Apache2/htdocs/python">
        AddHandler mod_python .py
        PythonHandler deko_publisher
        PythonDebug Off
        RewriteEngine On
        RewriteRule ^$ ^$ [F]
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteRule ^(\w+)/(.*)$ $1.py/$2 [QSA,L]
        ErrorDocument 500 "<h2>Application error</h2>Problem with Python
Setup"
    </Directory>
</VirtualHost>
 
deko_publisher is my own handler that delegates to mod_python.publisher
 
It seems that the HTTP request has some header lines that aren't of the
form "Name: value" such as file boundaries.
 
>From error.log:
 
[Mon Apr 03 12:05:40 2006] [INFO] WebPython deko_publisher.py:17 about
to run uploadFoo
[Mon Apr 03 12:05:40 2006] [error] [client 127.0.0.1] PythonHandler
deko_publisher: Traceback (most recent call last):
[Mon Apr 03 12:05:40 2006] [error] [client 127.0.0.1] PythonHandler
deko_publisher:   File
"C:\\Python23\\Lib\\site-packages\\mod_python\\apache.py", line 299, in
HandlerDispatch\n    result = object(req)
[Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
deko_publisher:   File "C:/Program Files/Apache
Group/Apache2/htdocs/python/deko_publisher.py", line 18, in handler\n
return apache.handler(req)
[Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
deko_publisher:   File
"C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line 213,
in handler\n    published = publish_object(req, object)
[Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
deko_publisher:   File
"C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line 411,
in publish_object\n    req.form = util.FieldStorage(req,
keep_blank_values=1)
[Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
deko_publisher:   File
"C:\\Python23\\Lib\\site-packages\\mod_python\\util.py", line 173, in
__init__\n    h, v = line.split(":", 1)
[Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
deko_publisher: ValueError: unpack list of wrong size
 
util.py (lines 169-175):
           while line not in ('\r','\r\n'):
               # we read the headers until we reach an empty line
               # NOTE : a single \n would mean the entity is malformed,
but
               # we're tolerating it anyway
               h, v = line.split(":", 1)
               headers.add(h, v)
               h = h.lower()
 
proposed change:
           while line not in ('\r','\r\n'):
               # we read the headers until we reach an empty line
               # NOTE : a single \n would mean the entity is malformed,
but
               # we're tolerating it anyway
               try:
                  h, v = line.split(":", 1)
               except ValueError:
                  h, v = "", ""
               headers.add(h, v)
               h = h.lower()

 
 
Harold Ship
Giant Steps Networks

From grahamd at dscpl.com.au  Wed Apr  5 02:11:41 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr  5 02:11:44 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <1144217501.14197@dscpl.user.openhosting.com>

Can you supply an example request body which has the actual data
removed but preserves the header lines you mention as being a
potential issue?

Thanks.

Graham

Harold J. Ship wrote ..
> Attempting to upload a file using Flash 8 FileReference.upload(url)
> causes a ValueError at line 173 of util.py.
>  
> Windows XP
> Apache 2.0.54
> mod_python 3.2.8
>  
> >From httpd.conf:
> <VirtualHost *:8020>
>     ServerName python
>     DocumentRoot "c:/Program Files/Apache Group/Apache2/htdocs/python"
>     <Directory "c:/Program Files/Apache Group/Apache2/htdocs/python">
>         AddHandler mod_python .py
>         PythonHandler deko_publisher
>         PythonDebug Off
>         RewriteEngine On
>         RewriteRule ^$ ^$ [F]
>         RewriteCond %{REQUEST_FILENAME} !-f
>         RewriteRule ^(\w+)/(.*)$ $1.py/$2 [QSA,L]
>         ErrorDocument 500 "<h2>Application error</h2>Problem with Python
> Setup"
>     </Directory>
> </VirtualHost>
>  
> deko_publisher is my own handler that delegates to mod_python.publisher
>  
> It seems that the HTTP request has some header lines that aren't of the
> form "Name: value" such as file boundaries.
>  
> >From error.log:
>  
> [Mon Apr 03 12:05:40 2006] [INFO] WebPython deko_publisher.py:17 about
> to run uploadFoo
> [Mon Apr 03 12:05:40 2006] [error] [client 127.0.0.1] PythonHandler
> deko_publisher: Traceback (most recent call last):
> [Mon Apr 03 12:05:40 2006] [error] [client 127.0.0.1] PythonHandler
> deko_publisher:   File
> "C:\\Python23\\Lib\\site-packages\\mod_python\\apache.py", line 299, in
> HandlerDispatch\n    result = object(req)
> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> deko_publisher:   File "C:/Program Files/Apache
> Group/Apache2/htdocs/python/deko_publisher.py", line 18, in handler\n
> return apache.handler(req)
> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> deko_publisher:   File
> "C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line 213,
> in handler\n    published = publish_object(req, object)
> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> deko_publisher:   File
> "C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line 411,
> in publish_object\n    req.form = util.FieldStorage(req,
> keep_blank_values=1)
> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> deko_publisher:   File
> "C:\\Python23\\Lib\\site-packages\\mod_python\\util.py", line 173, in
> __init__\n    h, v = line.split(":", 1)
> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> deko_publisher: ValueError: unpack list of wrong size
>  
> util.py (lines 169-175):
>            while line not in ('\r','\r\n'):
>                # we read the headers until we reach an empty line
>                # NOTE : a single \n would mean the entity is malformed,
> but
>                # we're tolerating it anyway
>                h, v = line.split(":", 1)
>                headers.add(h, v)
>                h = h.lower()
>  
> proposed change:
>            while line not in ('\r','\r\n'):
>                # we read the headers until we reach an empty line
>                # NOTE : a single \n would mean the entity is malformed,
> but
>                # we're tolerating it anyway
>                try:
>                   h, v = line.split(":", 1)
>                except ValueError:
>                   h, v = "", ""
>                headers.add(h, v)
>                h = h.lower()
> 
>  
>  
> Harold Ship
> Giant Steps Networks
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Wed Apr  5 02:58:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr  5 02:58:07 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <1144220284.6391@dscpl.user.openhosting.com>

Harold J. Ship wrote ..
> Do you want an ethereal dump, or the flash program that generates
> requests? 

Write a basic handler which does something like:

from mod_python import apache

def handler(req):

    data = open("/some/path/post.dat", "w")
    data.write(req.read())
    data.close()

    req.content_type = 'text/plain'
    req.write("Done")

    return apache.OK

Have your post program post to URL that maps to that handler.

This way it captures exactly what was sent in request and what
util.FieldStorage will consume and people can experiment.

Just make sure any actual data posted is small. Add it as an
attachment to your mail.

Graham



> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
> Sent: Wednesday, April 05, 2006 8:12 AM
> To: Harold J. Ship
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] ValueError with Flash 8
> FileReference.upload(url)
> 
> Can you supply an example request body which has the actual data removed
> but preserves the header lines you mention as being a potential issue?
> 
> Thanks.
> 
> Graham
> 
> Harold J. Ship wrote ..
> > Attempting to upload a file using Flash 8 FileReference.upload(url) 
> > causes a ValueError at line 173 of util.py.
> >  
> > Windows XP
> > Apache 2.0.54
> > mod_python 3.2.8
> >  
> > >From httpd.conf:
> > <VirtualHost *:8020>
> >     ServerName python
> >     DocumentRoot "c:/Program Files/Apache Group/Apache2/htdocs/python"
> >     <Directory "c:/Program Files/Apache Group/Apache2/htdocs/python">
> >         AddHandler mod_python .py
> >         PythonHandler deko_publisher
> >         PythonDebug Off
> >         RewriteEngine On
> >         RewriteRule ^$ ^$ [F]
> >         RewriteCond %{REQUEST_FILENAME} !-f
> >         RewriteRule ^(\w+)/(.*)$ $1.py/$2 [QSA,L]
> >         ErrorDocument 500 "<h2>Application error</h2>Problem with 
> > Python Setup"
> >     </Directory>
> > </VirtualHost>
> >  
> > deko_publisher is my own handler that delegates to 
> > mod_python.publisher
> >  
> > It seems that the HTTP request has some header lines that aren't of 
> > the form "Name: value" such as file boundaries.
> >  
> > >From error.log:
> >  
> > [Mon Apr 03 12:05:40 2006] [INFO] WebPython deko_publisher.py:17 about
> 
> > to run uploadFoo [Mon Apr 03 12:05:40 2006] [error] [client 127.0.0.1]
> 
> > PythonHandler
> > deko_publisher: Traceback (most recent call last):
> > [Mon Apr 03 12:05:40 2006] [error] [client 127.0.0.1] PythonHandler
> > deko_publisher:   File
> > "C:\\Python23\\Lib\\site-packages\\mod_python\\apache.py", line 299,
> in
> > HandlerDispatch\n    result = object(req)
> > [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> > deko_publisher:   File "C:/Program Files/Apache
> > Group/Apache2/htdocs/python/deko_publisher.py", line 18, in handler\n
> > return apache.handler(req) [Mon Apr 03 12:05:41 2006] [error] [client
> > 127.0.0.1] PythonHandler
> > deko_publisher:   File
> > "C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line
> 213,
> > in handler\n    published = publish_object(req, object)
> > [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> > deko_publisher:   File
> > "C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line
> 411,
> > in publish_object\n    req.form = util.FieldStorage(req,
> > keep_blank_values=1)
> > [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> > deko_publisher:   File
> > "C:\\Python23\\Lib\\site-packages\\mod_python\\util.py", line 173, in
> > __init__\n    h, v = line.split(":", 1)
> > [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
> > deko_publisher: ValueError: unpack list of wrong size
> >  
> > util.py (lines 169-175):
> >            while line not in ('\r','\r\n'):
> >                # we read the headers until we reach an empty line
> >                # NOTE : a single \n would mean the entity is 
> > malformed, but
> >                # we're tolerating it anyway
> >                h, v = line.split(":", 1)
> >                headers.add(h, v)
> >                h = h.lower()
> >  
> > proposed change:
> >            while line not in ('\r','\r\n'):
> >                # we read the headers until we reach an empty line
> >                # NOTE : a single \n would mean the entity is 
> > malformed, but
> >                # we're tolerating it anyway
> >                try:
> >                   h, v = line.split(":", 1)
> >                except ValueError:
> >                   h, v = "", ""
> >                headers.add(h, v)
> >                h = h.lower()
> > 
> >  
> >  
> > Harold Ship
> > Giant Steps Networks
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Wed Apr  5 05:58:30 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr  5 05:58:50 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <1144220284.6391@dscpl.user.openhosting.com>
References: <1144220284.6391@dscpl.user.openhosting.com>
Message-ID: <BDCD9099-86E1-4AE1-B7E3-7463D325A9DE@dscpl.com.au>

Sending the swf file as you did in other email isn't probably of any  
use.
We need to get what is actually received by the handler itself so we
can send that through the util.FieldStorage class to test it. This is  
what
the handler I sent below was about. Note though the small change I
marked against the code below. Don't forget to change the save path to
something meaningful.

Put the code in a file called grabinput.py in your directory:

   c:/Program Files/Apache Group/Apache2/htdocs/python

and change:

   PythonHandler mod_python.publisher

to:

   PythonHandler grabinput

in your config.

It is the file that the upload data is saved into that we would need not
the original swf file.

Graham

On 05/04/2006, at 4:58 PM, Graham Dumpleton wrote:

> Harold J. Ship wrote ..
>> Do you want an ethereal dump, or the flash program that generates
>> requests?
>
> Write a basic handler which does something like:
>
> from mod_python import apache
>
> def handler(req):
>
>     data = open("/some/path/post.dat", "w")

This possible should be:

        data = open("/some/path/post.dat", "wb")

Ie., use binary mode to ensure that \r\n sequences are maintained as is.
This may not be an issue on Win32, but might be still good to do it.

>     data.write(req.read())
>     data.close()
>
>     req.content_type = 'text/plain'
>     req.write("Done")
>
>     return apache.OK
>
> Have your post program post to URL that maps to that handler.
>
> This way it captures exactly what was sent in request and what
> util.FieldStorage will consume and people can experiment.
>
> Just make sure any actual data posted is small. Add it as an
> attachment to your mail.
>
> Graham
>
>
>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: Wednesday, April 05, 2006 8:12 AM
>> To: Harold J. Ship
>> Cc: mod_python@modpython.org
>> Subject: Re: [mod_python] ValueError with Flash 8
>> FileReference.upload(url)
>>
>> Can you supply an example request body which has the actual data  
>> removed
>> but preserves the header lines you mention as being a potential  
>> issue?
>>
>> Thanks.
>>
>> Graham
>>
>> Harold J. Ship wrote ..
>>> Attempting to upload a file using Flash 8 FileReference.upload(url)
>>> causes a ValueError at line 173 of util.py.
>>>
>>> Windows XP
>>> Apache 2.0.54
>>> mod_python 3.2.8
>>>
>>>> From httpd.conf:
>>> <VirtualHost *:8020>
>>>     ServerName python
>>>     DocumentRoot "c:/Program Files/Apache Group/Apache2/htdocs/ 
>>> python"
>>>     <Directory "c:/Program Files/Apache Group/Apache2/htdocs/ 
>>> python">
>>>         AddHandler mod_python .py
>>>         PythonHandler deko_publisher
>>>         PythonDebug Off
>>>         RewriteEngine On
>>>         RewriteRule ^$ ^$ [F]
>>>         RewriteCond %{REQUEST_FILENAME} !-f
>>>         RewriteRule ^(\w+)/(.*)$ $1.py/$2 [QSA,L]
>>>         ErrorDocument 500 "<h2>Application error</h2>Problem with
>>> Python Setup"
>>>     </Directory>
>>> </VirtualHost>
>>>
>>> deko_publisher is my own handler that delegates to
>>> mod_python.publisher
>>>
>>> It seems that the HTTP request has some header lines that aren't of
>>> the form "Name: value" such as file boundaries.
>>>
>>>> From error.log:
>>>
>>> [Mon Apr 03 12:05:40 2006] [INFO] WebPython deko_publisher.py:17  
>>> about
>>
>>> to run uploadFoo [Mon Apr 03 12:05:40 2006] [error] [client  
>>> 127.0.0.1]
>>
>>> PythonHandler
>>> deko_publisher: Traceback (most recent call last):
>>> [Mon Apr 03 12:05:40 2006] [error] [client 127.0.0.1] PythonHandler
>>> deko_publisher:   File
>>> "C:\\Python23\\Lib\\site-packages\\mod_python\\apache.py", line 299,
>> in
>>> HandlerDispatch\n    result = object(req)
>>> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
>>> deko_publisher:   File "C:/Program Files/Apache
>>> Group/Apache2/htdocs/python/deko_publisher.py", line 18, in  
>>> handler\n
>>> return apache.handler(req) [Mon Apr 03 12:05:41 2006] [error]  
>>> [client
>>> 127.0.0.1] PythonHandler
>>> deko_publisher:   File
>>> "C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line
>> 213,
>>> in handler\n    published = publish_object(req, object)
>>> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
>>> deko_publisher:   File
>>> "C:\\Python23\\Lib\\site-packages\\mod_python\\publisher.py", line
>> 411,
>>> in publish_object\n    req.form = util.FieldStorage(req,
>>> keep_blank_values=1)
>>> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
>>> deko_publisher:   File
>>> "C:\\Python23\\Lib\\site-packages\\mod_python\\util.py", line  
>>> 173, in
>>> __init__\n    h, v = line.split(":", 1)
>>> [Mon Apr 03 12:05:41 2006] [error] [client 127.0.0.1] PythonHandler
>>> deko_publisher: ValueError: unpack list of wrong size
>>>
>>> util.py (lines 169-175):
>>>            while line not in ('\r','\r\n'):
>>>                # we read the headers until we reach an empty line
>>>                # NOTE : a single \n would mean the entity is
>>> malformed, but
>>>                # we're tolerating it anyway
>>>                h, v = line.split(":", 1)
>>>                headers.add(h, v)
>>>                h = h.lower()
>>>
>>> proposed change:
>>>            while line not in ('\r','\r\n'):
>>>                # we read the headers until we reach an empty line
>>>                # NOTE : a single \n would mean the entity is
>>> malformed, but
>>>                # we're tolerating it anyway
>>>                try:
>>>                   h, v = line.split(":", 1)
>>>                except ValueError:
>>>                   h, v = "", ""
>>>                headers.add(h, v)
>>>                h = h.lower()
>>>
>>>
>>>
>>> Harold Ship
>>> Giant Steps Networks
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From Harold at giant-steps-networks.com  Wed Apr  5 07:28:55 2006
From: Harold at giant-steps-networks.com (Harold J. Ship)
Date: Wed Apr  5 06:29:38 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDF7@exchange.Giant-Steps.local>

Ok, here's the output.

------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7

Content-Disposition: form-data; name="Filename"



sample.txt

------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7

Content-Disposition: form-data; name="Filedata"; filename="sample.txt"

Content-Type: application/octet-stream



Start of Sample Text File Contents

End of Sample Text File Contents



------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7

Content-Disposition: form-data; name="Upload"

Submit Query

------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7



-------------- next part --------------
A non-text attachment was scrubbed...
Name: post.dat
Type: application/octet-stream
Size: 498 bytes
Desc: post.dat
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060405/c627b6a5/post.obj
-------------- next part --------------
Start of Sample Text File Contents
End of Sample Text File Contents
From grahamd at dscpl.com.au  Wed Apr  5 07:22:40 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr  5 07:23:20 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDF7@exchange.Giant-Steps.local>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDF7@exchange.Giant-Steps.local>
Message-ID: <1A8ED26A-9932-4B03-A9D4-C47ED1DC644D@dscpl.com.au>

Sorry, one more thing.

Can  you modify that handler you used to grab this and add:

   req.log_error("headers=%s" % `req.headers_in`)

Grab what it produces from the Apache error log file and post it here.

Need this to see what post is setting as boundary value in content type
header.

Thanks.

On 05/04/2006, at 9:28 PM, Harold J. Ship wrote:

> Ok, here's the output.
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
> Content-Disposition: form-data; name="Filename"
>
>
>
> sample.txt
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
> Content-Disposition: form-data; name="Filedata"; filename="sample.txt"
>
> Content-Type: application/octet-stream
>
>
>
> Start of Sample Text File Contents
>
> End of Sample Text File Contents
>
>
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
> Content-Disposition: form-data; name="Upload"
>
> Submit Query
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
>
>
> <post.dat>
> <sample.txt>

From grahamd at dscpl.com.au  Wed Apr  5 07:32:50 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr  5 07:33:32 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDF7@exchange.Giant-Steps.local>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDF7@exchange.Giant-Steps.local>
Message-ID: <F4D33C0B-AA5E-471B-A37B-60EBDC13024F@dscpl.com.au>


On 05/04/2006, at 9:28 PM, Harold J. Ship wrote:

> Ok, here's the output.
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
> Content-Disposition: form-data; name="Filename"
>
>
>
> sample.txt
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
> Content-Disposition: form-data; name="Filedata"; filename="sample.txt"
>
> Content-Type: application/octet-stream
>
>
>
> Start of Sample Text File Contents
>
> End of Sample Text File Contents
>
>
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
> Content-Disposition: form-data; name="Upload"
>
> Submit Query
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7

I'm not an expert on FieldStorage as I stayed out of all the  
discussions on
it when it was being improved. I am also not up on what the content type
application/x-www-form-urlencoded is all about. All the same, I'll share
what I found so far in case it helps someone else.

First off, I don't get an error, but I don't believe I get correct  
results either.
To test, what I did was create a handler containing:

from mod_python import apache, util

def handler(req):

     apache.log_error('headers_in=%s'%req.headers_in)

     req.content_type = 'text/plain'

     form = util.FieldStorage(req)

     for field in form.list:
         apache.log_error('name=%s' % `field.name`)
         apache.log_error('value=%s' % `field.value`)

     req.write('done')

     return apache.OK


I then used "ab" to post your file to a URL mapping to that handler.

   ab -p post.dat -T 'multipart/form-data; boundary=---------- 
KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7^M' http://localhost:8082/testing/ 
upload-1/dummy

Note that that is actually a real \r (CR) where ^M is shown in the  
boundary.
Without that it wouldn't work. I am not sure though whether that is  
simply due
to CR LF weirdness in way file was created and then how it is being  
interpreted
by "ab" on Mac OS X when given to it as input.

Anyway, result of that is:

[Wed Apr 05 21:26:24 2006] [error] headers_in={'Content-type':  
'multipart/form-data; boundary=---------- 
KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r', 'Content-length': '498', 'Accept':  
'*/*', 'Host': 'localhost:8082', 'User-Agent': 'ApacheBench/1.3d'}
[Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
upload: Traceback (most recent call last):
[Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
upload:   File "/System/Library/Frameworks/Python.framework/Versions/ 
2.3/lib/python2.3/site-packages/mod_python/apache.py", line 308, in  
HandlerDispatch\n    result = object(req)
[Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
upload:   File "/Users/grahamd/Workspaces/testing/upload-1/ 
upload.py", line 9, in handler\n    form = util.FieldStorage(req)
[Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
upload:   File "/System/Library/Frameworks/Python.framework/Versions/ 
2.3/lib/python2.3/site-packages/mod_python/util.py", line 180, in  
__init__\n    h, v = line.split(":", 1)
[Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
upload: ValueError: unpack list of wrong size

Thus, have duplicated it.

Note that this may possibly be something to do with strangeness in  
line endings.
First their was the issue above with CR, but there are other nasties  
in input with
CR LF. See following "od" dump.

0000000    -   -   -   -   -   -   -   -   -   -   -   -   K   M   7   G
0000020    I   3   g   L   6   c   H   2   g   L   6   g   L   6   c   H
0000040    2   g   L   6   c   H   2   K   M   7  \r  \r  \n   C   o   n
0000060    t   e   n   t   -   D   i   s   p   o   s   i   t   i   o   n
0000100    :       f   o   r   m   -   d   a   t   a   ;       n   a   m
0000120    e   =   "   F   i   l   e   n   a   m   e   "  \r  \r  \n  \r
0000140   \r  \n   s   a   m   p   l   e   .   t   x   t  \r  \r  \n   -
0000160    -   -   -   -   -   -   -   -   -   -   -   K   M   7   G   I
0000200    3   g   L   6   c   H   2   g   L   6   g   L   6   c   H   2
0000220    g   L   6   c   H   2   K   M   7  \r  \r  \n   C   o   n   t
0000240    e   n   t   -   D   i   s   p   o   s   i   t   i   o   n   :
0000260        f   o   r   m   -   d   a   t   a   ;       n   a   m   e
0000300    =   "   F   i   l   e   d   a   t   a   "   ;       f   i   l
0000320    e   n   a   m   e   =   "   s   a   m   p   l   e   .   t   x
0000340    t   "  \r  \r  \n   C   o   n   t   e   n   t   -   T   y   p
0000360    e   :       a   p   p   l   i   c   a   t   i   o   n   /   o
0000400    c   t   e   t   -   s   t   r   e   a   m  \r  \r  \n  \r  \r
0000420   \n   S   t   a   r   t       o   f       S   a   m   p   l   e
0000440        T   e   x   t       F   i   l   e       C   o   n   t   e
0000460    n   t   s  \r  \r  \n   E   n   d       o   f       S   a   m
0000500    p   l   e       T   e   x   t       F   i   l   e       C   o
0000520    n   t   e   n   t   s  \r  \r  \n  \r  \r  \n   -   -   -   -
0000540    -   -   -   -   -   -   -   -   K   M   7   G   I   3   g   L
0000560    6   c   H   2   g   L   6   g   L   6   c   H   2   g   L   6
0000600    c   H   2   K   M   7  \r  \r  \n   C   o   n   t   e   n   t
0000620    -   D   i   s   p   o   s   i   t   i   o   n   :       f   o
0000640    r   m   -   d   a   t   a   ;       n   a   m   e   =   "   U
0000660    p   l   o   a   d   "  \r  \r  \n   S   u   b   m   i   t
0000700    Q   u   e   r   y  \r  \r  \n   -   -   -   -   -   -   -   -
0000720    -   -   -   -   K   M   7   G   I   3   g   L   6   c   H   2
0000740    g   L   6   g   L   6   c   H   2   g   L   6   c   H   2   K
0000760    M   7
0000762

See the "\r  \r  \n  \r  \r  \n" sequences.

Not sure that I'll have much more time to play with this tonight, so  
posting this
progress in case someone else wants to pick up and continue.

Graham





From Harold at giant-steps-networks.com  Wed Apr  5 08:37:58 2006
From: Harold at giant-steps-networks.com (Harold J. Ship)
Date: Wed Apr  5 07:39:08 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDFF@exchange.Giant-Steps.local>

[client 127.0.0.1] headers={'Cache-Control': 'no-cache', 'Connection':
'Keep-Alive', 'Content-Length': '484', 'Host': 'localhost:8020',
'User-Agent': 'Shockwave Flash', 'Content-Type': 'multipart/form-data;
boundary=----------Ij5KM7cH2Ef1ei4KM7cH2cH2KM7GI3', 'Accept': 'text/*'} 

-----Original Message-----
From: Graham Dumpleton
Sent: Wednesday, April 05, 2006 1:23 PM
To: Harold J. Ship
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ValueError with Flash 8
FileReference.upload(url)

Sorry, one more thing.

Can  you modify that handler you used to grab this and add:

   req.log_error("headers=%s" % `req.headers_in`)

Grab what it produces from the Apache error log file and post it here.

Need this to see what post is setting as boundary value in content type
header.

Thanks.

From grahamd at dscpl.com.au  Wed Apr  5 07:47:09 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr  5 07:47:34 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <F4D33C0B-AA5E-471B-A37B-60EBDC13024F@dscpl.com.au>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDF7@exchange.Giant-Steps.local>
	<F4D33C0B-AA5E-471B-A37B-60EBDC13024F@dscpl.com.au>
Message-ID: <29942A59-8CF9-459C-BA6F-E12B0430277C@dscpl.com.au>

I am coming to the conclusion that the file produced by Flash is  
malformed.

Even if I were to get rid of the double \r\r sequences, replacing  
them with a
single \r, you end up with no blank like after:

   Content-Disposition: form-data; name="Upload"

which means that:

   Submit Query

gets interpreted as a header and thus why it dies as there is no  
colon on that
line.

Anyone got any better ideas?

Bedtime for me now.

Graham

On 05/04/2006, at 9:32 PM, Graham Dumpleton wrote:

>
> On 05/04/2006, at 9:28 PM, Harold J. Ship wrote:
>
>> Ok, here's the output.
>>
>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>
>> Content-Disposition: form-data; name="Filename"
>>
>>
>>
>> sample.txt
>>
>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>
>> Content-Disposition: form-data; name="Filedata";  
>> filename="sample.txt"
>>
>> Content-Type: application/octet-stream
>>
>>
>>
>> Start of Sample Text File Contents
>>
>> End of Sample Text File Contents
>>
>>
>>
>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>
>> Content-Disposition: form-data; name="Upload"
>>
>> Submit Query
>>
>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
> I'm not an expert on FieldStorage as I stayed out of all the  
> discussions on
> it when it was being improved. I am also not up on what the content  
> type
> application/x-www-form-urlencoded is all about. All the same, I'll  
> share
> what I found so far in case it helps someone else.
>
> First off, I don't get an error, but I don't believe I get correct  
> results either.
> To test, what I did was create a handler containing:
>
> from mod_python import apache, util
>
> def handler(req):
>
>     apache.log_error('headers_in=%s'%req.headers_in)
>
>     req.content_type = 'text/plain'
>
>     form = util.FieldStorage(req)
>
>     for field in form.list:
>         apache.log_error('name=%s' % `field.name`)
>         apache.log_error('value=%s' % `field.value`)
>
>     req.write('done')
>
>     return apache.OK
>
>
> I then used "ab" to post your file to a URL mapping to that handler.
>
>   ab -p post.dat -T 'multipart/form-data; boundary=---------- 
> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7^M' http://localhost:8082/testing/ 
> upload-1/dummy
>
> Note that that is actually a real \r (CR) where ^M is shown in the  
> boundary.
> Without that it wouldn't work. I am not sure though whether that is  
> simply due
> to CR LF weirdness in way file was created and then how it is being  
> interpreted
> by "ab" on Mac OS X when given to it as input.
>
> Anyway, result of that is:
>
> [Wed Apr 05 21:26:24 2006] [error] headers_in={'Content-type':  
> 'multipart/form-data; boundary=---------- 
> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r', 'Content-length': '498',  
> 'Accept': '*/*', 'Host': 'localhost:8082', 'User-Agent':  
> 'ApacheBench/1.3d'}
> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
> upload: Traceback (most recent call last):
> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
> upload:   File "/System/Library/Frameworks/Python.framework/ 
> Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py",  
> line 308, in HandlerDispatch\n    result = object(req)
> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
> upload:   File "/Users/grahamd/Workspaces/testing/upload-1/ 
> upload.py", line 9, in handler\n    form = util.FieldStorage(req)
> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
> upload:   File "/System/Library/Frameworks/Python.framework/ 
> Versions/2.3/lib/python2.3/site-packages/mod_python/util.py", line  
> 180, in __init__\n    h, v = line.split(":", 1)
> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
> upload: ValueError: unpack list of wrong size
>
> Thus, have duplicated it.
>
> Note that this may possibly be something to do with strangeness in  
> line endings.
> First their was the issue above with CR, but there are other  
> nasties in input with
> CR LF. See following "od" dump.
>
> 0000000    -   -   -   -   -   -   -   -   -   -   -   -   K   M    
> 7   G
> 0000020    I   3   g   L   6   c   H   2   g   L   6   g   L   6    
> c   H
> 0000040    2   g   L   6   c   H   2   K   M   7  \r  \r  \n   C    
> o   n
> 0000060    t   e   n   t   -   D   i   s   p   o   s   i   t   i    
> o   n
> 0000100    :       f   o   r   m   -   d   a   t   a   ;       n    
> a   m
> 0000120    e   =   "   F   i   l   e   n   a   m   e   "  \r  \r   
> \n  \r
> 0000140   \r  \n   s   a   m   p   l   e   .   t   x   t  \r  \r   
> \n   -
> 0000160    -   -   -   -   -   -   -   -   -   -   -   K   M   7    
> G   I
> 0000200    3   g   L   6   c   H   2   g   L   6   g   L   6   c    
> H   2
> 0000220    g   L   6   c   H   2   K   M   7  \r  \r  \n   C   o    
> n   t
> 0000240    e   n   t   -   D   i   s   p   o   s   i   t   i   o    
> n   :
> 0000260        f   o   r   m   -   d   a   t   a   ;       n   a    
> m   e
> 0000300    =   "   F   i   l   e   d   a   t   a   "   ;       f    
> i   l
> 0000320    e   n   a   m   e   =   "   s   a   m   p   l   e   .    
> t   x
> 0000340    t   "  \r  \r  \n   C   o   n   t   e   n   t   -   T    
> y   p
> 0000360    e   :       a   p   p   l   i   c   a   t   i   o    
> n   /   o
> 0000400    c   t   e   t   -   s   t   r   e   a   m  \r  \r  \n   
> \r  \r
> 0000420   \n   S   t   a   r   t       o   f       S   a   m   p    
> l   e
> 0000440        T   e   x   t       F   i   l   e       C   o   n    
> t   e
> 0000460    n   t   s  \r  \r  \n   E   n   d       o   f       S    
> a   m
> 0000500    p   l   e       T   e   x   t       F   i   l   e        
> C   o
> 0000520    n   t   e   n   t   s  \r  \r  \n  \r  \r  \n   -   -    
> -   -
> 0000540    -   -   -   -   -   -   -   -   K   M   7   G   I   3    
> g   L
> 0000560    6   c   H   2   g   L   6   g   L   6   c   H   2   g    
> L   6
> 0000600    c   H   2   K   M   7  \r  \r  \n   C   o   n   t   e    
> n   t
> 0000620    -   D   i   s   p   o   s   i   t   i   o   n   :        
> f   o
> 0000640    r   m   -   d   a   t   a   ;       n   a   m   e   =    
> "   U
> 0000660    p   l   o   a   d   "  \r  \r  \n   S   u   b   m   i   t
> 0000700    Q   u   e   r   y  \r  \r  \n   -   -   -   -   -   -    
> -   -
> 0000720    -   -   -   -   K   M   7   G   I   3   g   L   6   c    
> H   2
> 0000740    g   L   6   g   L   6   c   H   2   g   L   6   c   H    
> 2   K
> 0000760    M   7
> 0000762
>
> See the "\r  \r  \n  \r  \r  \n" sequences.
>
> Not sure that I'll have much more time to play with this tonight,  
> so posting this
> progress in case someone else wants to pick up and continue.
>
> Graham
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Wed Apr  5 08:32:07 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Apr  5 08:32:04 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <29942A59-8CF9-459C-BA6F-E12B0430277C@dscpl.com.au>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDDF7@exchange.Giant-Steps.local>	<F4D33C0B-AA5E-471B-A37B-60EBDC13024F@dscpl.com.au>
	<29942A59-8CF9-459C-BA6F-E12B0430277C@dscpl.com.au>
Message-ID: <4433B8C7.403@jgassociates.ca>

I don't have time to look at this in any detail right now, but I agree 
that it looks malformed. The last part of post.dat really shoud be:

------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r\n
Content-Disposition: form-data; name="Upload"\r\n
\r\n
Submit Query\r\n
------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7


mod_python 3.2.8 should handle embedded \r\n or \r\r sequences in the 
file contents correctly. There is even a unit test for this. ;)

Jim


Graham Dumpleton wrote:
> I am coming to the conclusion that the file produced by Flash is  
> malformed.
> 
> Even if I were to get rid of the double \r\r sequences, replacing  them 
> with a
> single \r, you end up with no blank like after:
> 
>   Content-Disposition: form-data; name="Upload"
> 
> which means that:
> 
>   Submit Query
> 
> gets interpreted as a header and thus why it dies as there is no  colon 
> on that
> line.
> 
> Anyone got any better ideas?
> 
> Bedtime for me now.
> 
> Graham
> 
> On 05/04/2006, at 9:32 PM, Graham Dumpleton wrote:
> 
>>
>> On 05/04/2006, at 9:28 PM, Harold J. Ship wrote:
>>
>>> Ok, here's the output.
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>
>>> Content-Disposition: form-data; name="Filename"
>>>
>>>
>>>
>>> sample.txt
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>
>>> Content-Disposition: form-data; name="Filedata";  filename="sample.txt"
>>>
>>> Content-Type: application/octet-stream
>>>
>>>
>>>
>>> Start of Sample Text File Contents
>>>
>>> End of Sample Text File Contents
>>>
>>>
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>
>>> Content-Disposition: form-data; name="Upload"
>>>
>>> Submit Query
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>
>>
>> I'm not an expert on FieldStorage as I stayed out of all the  
>> discussions on
>> it when it was being improved. I am also not up on what the content  type
>> application/x-www-form-urlencoded is all about. All the same, I'll  share
>> what I found so far in case it helps someone else.
>>
>> First off, I don't get an error, but I don't believe I get correct  
>> results either.
>> To test, what I did was create a handler containing:
>>
>> from mod_python import apache, util
>>
>> def handler(req):
>>
>>     apache.log_error('headers_in=%s'%req.headers_in)
>>
>>     req.content_type = 'text/plain'
>>
>>     form = util.FieldStorage(req)
>>
>>     for field in form.list:
>>         apache.log_error('name=%s' % `field.name`)
>>         apache.log_error('value=%s' % `field.value`)
>>
>>     req.write('done')
>>
>>     return apache.OK
>>
>>
>> I then used "ab" to post your file to a URL mapping to that handler.
>>
>>   ab -p post.dat -T 'multipart/form-data; boundary=---------- 
>> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7^M' http://localhost:8082/testing/ 
>> upload-1/dummy
>>
>> Note that that is actually a real \r (CR) where ^M is shown in the  
>> boundary.
>> Without that it wouldn't work. I am not sure though whether that is  
>> simply due
>> to CR LF weirdness in way file was created and then how it is being  
>> interpreted
>> by "ab" on Mac OS X when given to it as input.
>>
>> Anyway, result of that is:
>>
>> [Wed Apr 05 21:26:24 2006] [error] headers_in={'Content-type':  
>> 'multipart/form-data; boundary=---------- 
>> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r', 'Content-length': '498',  'Accept': 
>> '*/*', 'Host': 'localhost:8082', 'User-Agent':  'ApacheBench/1.3d'}
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload: Traceback (most recent call last):
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload:   File "/System/Library/Frameworks/Python.framework/ 
>> Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py",  line 
>> 308, in HandlerDispatch\n    result = object(req)
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload:   File "/Users/grahamd/Workspaces/testing/upload-1/ 
>> upload.py", line 9, in handler\n    form = util.FieldStorage(req)
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload:   File "/System/Library/Frameworks/Python.framework/ 
>> Versions/2.3/lib/python2.3/site-packages/mod_python/util.py", line  
>> 180, in __init__\n    h, v = line.split(":", 1)
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload: ValueError: unpack list of wrong size
>>
>> Thus, have duplicated it.
>>
>> Note that this may possibly be something to do with strangeness in  
>> line endings.
>> First their was the issue above with CR, but there are other  nasties 
>> in input with
>> CR LF. See following "od" dump.
>>
>> 0000000    -   -   -   -   -   -   -   -   -   -   -   -   K   M    7   G
>> 0000020    I   3   g   L   6   c   H   2   g   L   6   g   L   6    c   H
>> 0000040    2   g   L   6   c   H   2   K   M   7  \r  \r  \n   C    o   n
>> 0000060    t   e   n   t   -   D   i   s   p   o   s   i   t   i    o   n
>> 0000100    :       f   o   r   m   -   d   a   t   a   ;       n    a   m
>> 0000120    e   =   "   F   i   l   e   n   a   m   e   "  \r  \r   \n  \r
>> 0000140   \r  \n   s   a   m   p   l   e   .   t   x   t  \r  \r   \n   -
>> 0000160    -   -   -   -   -   -   -   -   -   -   -   K   M   7    G   I
>> 0000200    3   g   L   6   c   H   2   g   L   6   g   L   6   c    H   2
>> 0000220    g   L   6   c   H   2   K   M   7  \r  \r  \n   C   o    n   t
>> 0000240    e   n   t   -   D   i   s   p   o   s   i   t   i   o    n   :
>> 0000260        f   o   r   m   -   d   a   t   a   ;       n   a    m   e
>> 0000300    =   "   F   i   l   e   d   a   t   a   "   ;       f    i   l
>> 0000320    e   n   a   m   e   =   "   s   a   m   p   l   e   .    t   x
>> 0000340    t   "  \r  \r  \n   C   o   n   t   e   n   t   -   T    y   p
>> 0000360    e   :       a   p   p   l   i   c   a   t   i   o    n   /   o
>> 0000400    c   t   e   t   -   s   t   r   e   a   m  \r  \r  \n   \r  \r
>> 0000420   \n   S   t   a   r   t       o   f       S   a   m   p    l   e
>> 0000440        T   e   x   t       F   i   l   e       C   o   n    t   e
>> 0000460    n   t   s  \r  \r  \n   E   n   d       o   f       S    a   m
>> 0000500    p   l   e       T   e   x   t       F   i   l   e        C   o
>> 0000520    n   t   e   n   t   s  \r  \r  \n  \r  \r  \n   -   -    -   -
>> 0000540    -   -   -   -   -   -   -   -   K   M   7   G   I   3    g   L
>> 0000560    6   c   H   2   g   L   6   g   L   6   c   H   2   g    L   6
>> 0000600    c   H   2   K   M   7  \r  \r  \n   C   o   n   t   e    n   t
>> 0000620    -   D   i   s   p   o   s   i   t   i   o   n   :        f   o
>> 0000640    r   m   -   d   a   t   a   ;       n   a   m   e   =    "   U
>> 0000660    p   l   o   a   d   "  \r  \r  \n   S   u   b   m   i   t
>> 0000700    Q   u   e   r   y  \r  \r  \n   -   -   -   -   -   -    -   -
>> 0000720    -   -   -   -   K   M   7   G   I   3   g   L   6   c    H   2
>> 0000740    g   L   6   g   L   6   c   H   2   g   L   6   c   H    2   K
>> 0000760    M   7
>> 0000762
>>
>> See the "\r  \r  \n  \r  \r  \n" sequences.
>>
>> Not sure that I'll have much more time to play with this tonight,  so 
>> posting this
>> progress in case someone else wants to pick up and continue.
>>
>> Graham
>>
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From x at branwelt.de  Wed Apr  5 08:37:34 2006
From: x at branwelt.de (Emanuel Rumpf)
Date: Wed Apr  5 08:35:11 2006
Subject: [mod_python] processing py-scripts with apache 1.3 and mod_python
In-Reply-To: <E304A11D-DA61-4857-BA92-FD9478E35188@dscpl.com.au>
References: <44323A19.3050309@ulb.ac.be> <44326621.1010504@branwelt.de>
	<29a6ca010604040932o57131e1eu813db9b8dd6c9d5@mail.gmail.com>
	<E304A11D-DA61-4857-BA92-FD9478E35188@dscpl.com.au>
Message-ID: <4433BA0E.6070201@branwelt.de>

Graham Dumpleton wrote:

>
> On 05/04/2006, at 2:32 AM, Colin Bean wrote:
>
>> For starters, try putting quotes around the path in the "Directory" 
>> section, so:
>>     <Directory "/anydir/py/">
>
>
> Adding quotes should make no different. Quotes are only really required
> where path has space or other magic characters in it.
>
>> Also, chage "PythonHandler mod_python.publisher" to "SetHandler 
>> mod_python.publisher".
>
>
> This is an incorrect suggestion as well.
>
>> Once you've done this, I don't beleive that you need the PythonPath 
>> directive (since it is the same path as the publisher directory), 
>> nor the "SetHandler python-program".
>>
>> This doesn't really answer your question in depth, but I beleive 
>> that the "SetHandler python-program" directive is only necessisary 
>> in older versions(?) of mod_python, in which case you also needed  to
>> specify a "PythonHandler" directive.  In your case, the line 
>> "SetHandler mod_python.publisher" should be all that's needed.
>
>
> He is using an older version so must use "python-program". Note that 
> "python-program"
> still works in newer versions as well.
>
>> Also, posting relevant snippets of your error logs will help us to 
>> diagnose further problems.
>>
>> HTH,
>> -Colin
>>
>>
>> On 4/4/06, Emanuel Rumpf <x@branwelt.de> wrote: Hello,
>>
>> I wanted /anydir/py/test.py to be processed by mod_python
>> on apache 1.3 server, when requesting http://domain.org/py/test.py
>> (where /anydir/ is the DocumentRoot)
>>
>>
>> No matter, what I tried, there was no success,
>> either the file was delivered as textfile-download,
>> or I got a "File not Found" error.
>>
>> my current config, which is inside a virtual host:
>>
>> <Directory /anydir/py/>
>>                 Options -FollowSymLinks +Indexes
>>                 Order allow,deny
>>                 Allow from all
>>
>>                 PythonPath "sys.path+['/anydir/py/']"
>
>
> No necessary to have PythonPath.
>
>>                 #PythonHandler handler_script
>>                 PythonHandler mod_python.publisher
>>
>>                 PythonDebug On
>>                 PythonInterpreter pi01
>>
>>                 #excecute those with .py extension
>>                 #AddHandler mod_python .py
>
>
> This should be:
>
>   AddHandler python-program .py
>
> The "mod_python" tag only works in newer versions of mod_python.
>
>>                 #excecute those with any extension
>>                 #SetHandler mod_python
>>                 # the same (?):
>>                 SetHandler python-program
>
>
> Don't use SetHandler, use the AddHandler line above instead else every
> request will go through mod_python and you will not be able to serve
> up static files.
>
>> </Directory>
>>
>>
>> Any hints, how to make it working?
>>
>> Thanks,
>> Emanuel
>>
>>
>> btw:
>> What's the diffence between:
>> SetHandler mod_python
>
>
> Works in mod_python 3.X.
>
>> and:
>> SetHandler python-program
>
>
> Works in mod_python 2.7.X and 3.X.
>
> Having done that, if you still can't get it to work, post the 
> contents of your
> "test.py" file.
>
> BTW, it is bad to call it "test.py" as there is a Python module 
> called "test"
> and so if you stuff up, it may pick that up instead.
>
> Although not for mod_python.publisher, would suggest you read:
>
>   http://www.dscpl.com.au/articles/modpython-001.html
>
>
> Graham
>
I actually got confused, because my local machine uses 3.x and the
remote one uses 2.7
The reason, why the scripts were delivered as plaintext is, that I used
the mod_python.publisher,
but 2.7 doesn't support the index -function:
http://domain.org/py/testx.py      # 3.x yes, 2.7 no
http://domain.org/py/testx.py/index      # 3.x yes, 2.7 yes

Also mod_python 2.7 has no Cookie object.
How to set cookies with 2.7 ?


Watching these problems, I hope to upgrade to apache2 soon.

Thanks for your help all
Emanuel








From Harold at giant-steps-networks.com  Wed Apr  5 12:17:10 2006
From: Harold at giant-steps-networks.com (Harold J. Ship)
Date: Wed Apr  5 11:18:12 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE23@exchange.Giant-Steps.local>

Maybe so, but on another platform using cgi it's ok. 

-----Original Message-----
From: Jim Gallacher
Sent: Wednesday, April 05, 2006 2:32 PM
To: Graham Dumpleton
Cc: Harold J. Ship; mod_python@modpython.org
Subject: Re: [mod_python] ValueError with Flash 8
FileReference.upload(url)

I don't have time to look at this in any detail right now, but I agree
that it looks malformed. The last part of post.dat really shoud be:

------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r\n
Content-Disposition: form-data; name="Upload"\r\n \r\n Submit Query\r\n
------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7


mod_python 3.2.8 should handle embedded \r\n or \r\r sequences in the
file contents correctly. There is even a unit test for this. ;)

Jim


Graham Dumpleton wrote:
> I am coming to the conclusion that the file produced by Flash is 
> malformed.
> 
> Even if I were to get rid of the double \r\r sequences, replacing  
> them with a single \r, you end up with no blank like after:
> 
>   Content-Disposition: form-data; name="Upload"
> 
> which means that:
> 
>   Submit Query
> 
> gets interpreted as a header and thus why it dies as there is no  
> colon on that line.
> 
> Anyone got any better ideas?
> 
> Bedtime for me now.
> 
> Graham
> 
> On 05/04/2006, at 9:32 PM, Graham Dumpleton wrote:
> 
>>
>> On 05/04/2006, at 9:28 PM, Harold J. Ship wrote:
>>
>>> Ok, here's the output.
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>
>>> Content-Disposition: form-data; name="Filename"
>>>
>>>
>>>
>>> sample.txt
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>
>>> Content-Disposition: form-data; name="Filedata";
filename="sample.txt"
>>>
>>> Content-Type: application/octet-stream
>>>
>>>
>>>
>>> Start of Sample Text File Contents
>>>
>>> End of Sample Text File Contents
>>>
>>>
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>
>>> Content-Disposition: form-data; name="Upload"
>>>
>>> Submit Query
>>>
>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>
>>
>> I'm not an expert on FieldStorage as I stayed out of all the 
>> discussions on it when it was being improved. I am also not up on 
>> what the content  type application/x-www-form-urlencoded is all 
>> about. All the same, I'll  share what I found so far in case it helps

>> someone else.
>>
>> First off, I don't get an error, but I don't believe I get correct 
>> results either.
>> To test, what I did was create a handler containing:
>>
>> from mod_python import apache, util
>>
>> def handler(req):
>>
>>     apache.log_error('headers_in=%s'%req.headers_in)
>>
>>     req.content_type = 'text/plain'
>>
>>     form = util.FieldStorage(req)
>>
>>     for field in form.list:
>>         apache.log_error('name=%s' % `field.name`)
>>         apache.log_error('value=%s' % `field.value`)
>>
>>     req.write('done')
>>
>>     return apache.OK
>>
>>
>> I then used "ab" to post your file to a URL mapping to that handler.
>>
>>   ab -p post.dat -T 'multipart/form-data; boundary=---------- 
>> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7^M' http://localhost:8082/testing/ 
>> upload-1/dummy
>>
>> Note that that is actually a real \r (CR) where ^M is shown in the 
>> boundary.
>> Without that it wouldn't work. I am not sure though whether that is 
>> simply due to CR LF weirdness in way file was created and then how it

>> is being interpreted by "ab" on Mac OS X when given to it as input.
>>
>> Anyway, result of that is:
>>
>> [Wed Apr 05 21:26:24 2006] [error] headers_in={'Content-type':  
>> 'multipart/form-data; boundary=---------- 
>> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r', 'Content-length': '498',
'Accept':
>> '*/*', 'Host': 'localhost:8082', 'User-Agent':  'ApacheBench/1.3d'} 
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler
>> upload: Traceback (most recent call last):
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload:   File "/System/Library/Frameworks/Python.framework/ 
>> Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py",  line

>> 308, in HandlerDispatch\n    result = object(req)
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload:   File "/Users/grahamd/Workspaces/testing/upload-1/ 
>> upload.py", line 9, in handler\n    form = util.FieldStorage(req)
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler  
>> upload:   File "/System/Library/Frameworks/Python.framework/ 
>> Versions/2.3/lib/python2.3/site-packages/mod_python/util.py", line  
>> 180, in __init__\n    h, v = line.split(":", 1)
>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler
>> upload: ValueError: unpack list of wrong size
>>
>> Thus, have duplicated it.
>>
>> Note that this may possibly be something to do with strangeness in 
>> line endings.
>> First their was the issue above with CR, but there are other  nasties

>> in input with CR LF. See following "od" dump.
>>
>> 0000000    -   -   -   -   -   -   -   -   -   -   -   -   K   M    7
G
>> 0000020    I   3   g   L   6   c   H   2   g   L   6   g   L   6    c
H
>> 0000040    2   g   L   6   c   H   2   K   M   7  \r  \r  \n   C    o
n
>> 0000060    t   e   n   t   -   D   i   s   p   o   s   i   t   i    o
n
>> 0000100    :       f   o   r   m   -   d   a   t   a   ;       n    a
m
>> 0000120    e   =   "   F   i   l   e   n   a   m   e   "  \r  \r   \n
\r
>> 0000140   \r  \n   s   a   m   p   l   e   .   t   x   t  \r  \r   \n
-
>> 0000160    -   -   -   -   -   -   -   -   -   -   -   K   M   7    G
I
>> 0000200    3   g   L   6   c   H   2   g   L   6   g   L   6   c    H
2
>> 0000220    g   L   6   c   H   2   K   M   7  \r  \r  \n   C   o    n
t
>> 0000240    e   n   t   -   D   i   s   p   o   s   i   t   i   o    n
:
>> 0000260        f   o   r   m   -   d   a   t   a   ;       n   a    m
e
>> 0000300    =   "   F   i   l   e   d   a   t   a   "   ;       f    i
l
>> 0000320    e   n   a   m   e   =   "   s   a   m   p   l   e   .    t
x
>> 0000340    t   "  \r  \r  \n   C   o   n   t   e   n   t   -   T    y
p
>> 0000360    e   :       a   p   p   l   i   c   a   t   i   o    n   /
o
>> 0000400    c   t   e   t   -   s   t   r   e   a   m  \r  \r  \n   \r
\r
>> 0000420   \n   S   t   a   r   t       o   f       S   a   m   p    l
e
>> 0000440        T   e   x   t       F   i   l   e       C   o   n    t
e
>> 0000460    n   t   s  \r  \r  \n   E   n   d       o   f       S    a
m
>> 0000500    p   l   e       T   e   x   t       F   i   l   e        C
o
>> 0000520    n   t   e   n   t   s  \r  \r  \n  \r  \r  \n   -   -    -
-
>> 0000540    -   -   -   -   -   -   -   -   K   M   7   G   I   3    g
L
>> 0000560    6   c   H   2   g   L   6   g   L   6   c   H   2   g    L
6
>> 0000600    c   H   2   K   M   7  \r  \r  \n   C   o   n   t   e    n
t
>> 0000620    -   D   i   s   p   o   s   i   t   i   o   n   :        f
o
>> 0000640    r   m   -   d   a   t   a   ;       n   a   m   e   =    "
U
>> 0000660    p   l   o   a   d   "  \r  \r  \n   S   u   b   m   i   t
>> 0000700    Q   u   e   r   y  \r  \r  \n   -   -   -   -   -   -    -
-
>> 0000720    -   -   -   -   K   M   7   G   I   3   g   L   6   c    H
2
>> 0000740    g   L   6   g   L   6   c   H   2   g   L   6   c   H    2
K
>> 0000760    M   7
>> 0000762
>>
>> See the "\r  \r  \n  \r  \r  \n" sequences.
>>
>> Not sure that I'll have much more time to play with this tonight,  so

>> posting this progress in case someone else wants to pick up and 
>> continue.
>>
>> Graham
>>
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


From grahamd at dscpl.com.au  Wed Apr  5 17:56:36 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr  5 17:56:53 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE23@exchange.Giant-Steps.local>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE23@exchange.Giant-Steps.local>
Message-ID: <CFD8A029-1F12-4D1F-BB62-7AA8050DCA03@dscpl.com.au>


On 06/04/2006, at 2:17 AM, Harold J. Ship wrote:

> Maybe so, but on another platform using cgi it's ok.

If it isn't formatted per the standards for how multipart forms are
meant to be formatted, that it may be accepted on platform does
not matter as there are no guarantees it will be accepted on
another.

Anyway, to settle this, capture your post data again using that
handler, but change the handler to:

from mod_python import apache
import base64

def handler(req):

     data = open("/some/path/post.dat", "wb")
     data.write(base64.encodestring(req.read()))
     data.close()

     req.content_type = 'text/plain'
     req.write("Done")

     return apache.OK

By encoding it as base64 before being sent, we know for sure that
nothing about how it was written to file or dealt with by any mail
software will stuff up CR LF sequences and we can see exactly
what was received.

Graham


> -----Original Message-----
> From: Jim Gallacher
> Sent: Wednesday, April 05, 2006 2:32 PM
> To: Graham Dumpleton
> Cc: Harold J. Ship; mod_python@modpython.org
> Subject: Re: [mod_python] ValueError with Flash 8
> FileReference.upload(url)
>
> I don't have time to look at this in any detail right now, but I agree
> that it looks malformed. The last part of post.dat really shoud be:
>
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r\n
> Content-Disposition: form-data; name="Upload"\r\n \r\n Submit Query 
> \r\n
> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>
>
> mod_python 3.2.8 should handle embedded \r\n or \r\r sequences in the
> file contents correctly. There is even a unit test for this. ;)
>
> Jim
>
>
> Graham Dumpleton wrote:
>> I am coming to the conclusion that the file produced by Flash is
>> malformed.
>>
>> Even if I were to get rid of the double \r\r sequences, replacing
>> them with a single \r, you end up with no blank like after:
>>
>>   Content-Disposition: form-data; name="Upload"
>>
>> which means that:
>>
>>   Submit Query
>>
>> gets interpreted as a header and thus why it dies as there is no
>> colon on that line.
>>
>> Anyone got any better ideas?
>>
>> Bedtime for me now.
>>
>> Graham
>>
>> On 05/04/2006, at 9:32 PM, Graham Dumpleton wrote:
>>
>>>
>>> On 05/04/2006, at 9:28 PM, Harold J. Ship wrote:
>>>
>>>> Ok, here's the output.
>>>>
>>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>>
>>>> Content-Disposition: form-data; name="Filename"
>>>>
>>>>
>>>>
>>>> sample.txt
>>>>
>>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>>
>>>> Content-Disposition: form-data; name="Filedata";
> filename="sample.txt"
>>>>
>>>> Content-Type: application/octet-stream
>>>>
>>>>
>>>>
>>>> Start of Sample Text File Contents
>>>>
>>>> End of Sample Text File Contents
>>>>
>>>>
>>>>
>>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>>
>>>> Content-Disposition: form-data; name="Upload"
>>>>
>>>> Submit Query
>>>>
>>>> ------------KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7
>>>
>>>
>>> I'm not an expert on FieldStorage as I stayed out of all the
>>> discussions on it when it was being improved. I am also not up on
>>> what the content  type application/x-www-form-urlencoded is all
>>> about. All the same, I'll  share what I found so far in case it  
>>> helps
>
>>> someone else.
>>>
>>> First off, I don't get an error, but I don't believe I get correct
>>> results either.
>>> To test, what I did was create a handler containing:
>>>
>>> from mod_python import apache, util
>>>
>>> def handler(req):
>>>
>>>     apache.log_error('headers_in=%s'%req.headers_in)
>>>
>>>     req.content_type = 'text/plain'
>>>
>>>     form = util.FieldStorage(req)
>>>
>>>     for field in form.list:
>>>         apache.log_error('name=%s' % `field.name`)
>>>         apache.log_error('value=%s' % `field.value`)
>>>
>>>     req.write('done')
>>>
>>>     return apache.OK
>>>
>>>
>>> I then used "ab" to post your file to a URL mapping to that handler.
>>>
>>>   ab -p post.dat -T 'multipart/form-data; boundary=----------
>>> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7^M' http://localhost:8082/testing/
>>> upload-1/dummy
>>>
>>> Note that that is actually a real \r (CR) where ^M is shown in the
>>> boundary.
>>> Without that it wouldn't work. I am not sure though whether that is
>>> simply due to CR LF weirdness in way file was created and then  
>>> how it
>
>>> is being interpreted by "ab" on Mac OS X when given to it as input.
>>>
>>> Anyway, result of that is:
>>>
>>> [Wed Apr 05 21:26:24 2006] [error] headers_in={'Content-type':
>>> 'multipart/form-data; boundary=----------
>>> KM7GI3gL6cH2gL6gL6cH2gL6cH2KM7\r', 'Content-length': '498',
> 'Accept':
>>> '*/*', 'Host': 'localhost:8082', 'User-Agent':  'ApacheBench/1.3d'}
>>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler
>>> upload: Traceback (most recent call last):
>>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler
>>> upload:   File "/System/Library/Frameworks/Python.framework/
>>> Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py",   
>>> line
>
>>> 308, in HandlerDispatch\n    result = object(req)
>>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler
>>> upload:   File "/Users/grahamd/Workspaces/testing/upload-1/
>>> upload.py", line 9, in handler\n    form = util.FieldStorage(req)
>>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler
>>> upload:   File "/System/Library/Frameworks/Python.framework/
>>> Versions/2.3/lib/python2.3/site-packages/mod_python/util.py", line
>>> 180, in __init__\n    h, v = line.split(":", 1)
>>> [Wed Apr 05 21:26:24 2006] [error] [client 127.0.0.1] PythonHandler
>>> upload: ValueError: unpack list of wrong size
>>>
>>> Thus, have duplicated it.
>>>
>>> Note that this may possibly be something to do with strangeness in
>>> line endings.
>>> First their was the issue above with CR, but there are other   
>>> nasties
>
>>> in input with CR LF. See following "od" dump.
>>>
>>> 0000000    -   -   -   -   -   -   -   -   -   -   -   -   K    
>>> M    7
> G
>>> 0000020    I   3   g   L   6   c   H   2   g   L   6   g   L    
>>> 6    c
> H
>>> 0000040    2   g   L   6   c   H   2   K   M   7  \r  \r  \n    
>>> C    o
> n
>>> 0000060    t   e   n   t   -   D   i   s   p   o   s   i   t    
>>> i    o
> n
>>> 0000100    :       f   o   r   m   -   d   a   t   a   ;        
>>> n    a
> m
>>> 0000120    e   =   "   F   i   l   e   n   a   m   e   "  \r   
>>> \r   \n
> \r
>>> 0000140   \r  \n   s   a   m   p   l   e   .   t   x   t  \r   
>>> \r   \n
> -
>>> 0000160    -   -   -   -   -   -   -   -   -   -   -   K   M    
>>> 7    G
> I
>>> 0000200    3   g   L   6   c   H   2   g   L   6   g   L   6    
>>> c    H
> 2
>>> 0000220    g   L   6   c   H   2   K   M   7  \r  \r  \n   C    
>>> o    n
> t
>>> 0000240    e   n   t   -   D   i   s   p   o   s   i   t   i    
>>> o    n
> :
>>> 0000260        f   o   r   m   -   d   a   t   a   ;       n    
>>> a    m
> e
>>> 0000300    =   "   F   i   l   e   d   a   t   a   "   ;        
>>> f    i
> l
>>> 0000320    e   n   a   m   e   =   "   s   a   m   p   l    
>>> e   .    t
> x
>>> 0000340    t   "  \r  \r  \n   C   o   n   t   e   n   t   -    
>>> T    y
> p
>>> 0000360    e   :       a   p   p   l   i   c   a   t   i   o     
>>> n   /
> o
>>> 0000400    c   t   e   t   -   s   t   r   e   a   m  \r  \r   
>>> \n   \r
> \r
>>> 0000420   \n   S   t   a   r   t       o   f       S   a   m    
>>> p    l
> e
>>> 0000440        T   e   x   t       F   i   l   e       C   o    
>>> n    t
> e
>>> 0000460    n   t   s  \r  \r  \n   E   n   d       o   f        
>>> S    a
> m
>>> 0000500    p   l   e       T   e   x   t       F   i   l    
>>> e        C
> o
>>> 0000520    n   t   e   n   t   s  \r  \r  \n  \r  \r  \n   -    
>>> -    -
> -
>>> 0000540    -   -   -   -   -   -   -   -   K   M   7   G   I    
>>> 3    g
> L
>>> 0000560    6   c   H   2   g   L   6   g   L   6   c   H   2    
>>> g    L
> 6
>>> 0000600    c   H   2   K   M   7  \r  \r  \n   C   o   n   t    
>>> e    n
> t
>>> 0000620    -   D   i   s   p   o   s   i   t   i   o    
>>> n   :        f
> o
>>> 0000640    r   m   -   d   a   t   a   ;       n   a   m   e    
>>> =    "
> U
>>> 0000660    p   l   o   a   d   "  \r  \r  \n   S   u   b   m   i   t
>>> 0000700    Q   u   e   r   y  \r  \r  \n   -   -   -   -   -    
>>> -    -
> -
>>> 0000720    -   -   -   -   K   M   7   G   I   3   g   L   6    
>>> c    H
> 2
>>> 0000740    g   L   6   g   L   6   c   H   2   g   L   6   c    
>>> H    2
> K
>>> 0000760    M   7
>>> 0000762
>>>
>>> See the "\r  \r  \n  \r  \r  \n" sequences.
>>>
>>> Not sure that I'll have much more time to play with this  
>>> tonight,  so
>
>>> posting this progress in case someone else wants to pick up and
>>> continue.
>>>
>>> Graham
>>>
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>

From mmadecki at comcast.net  Wed Apr  5 22:42:04 2006
From: mmadecki at comcast.net ( Miro)
Date: Wed Apr  5 22:40:56 2006
Subject: [mod_python] sharing data in the same interpreter
In-Reply-To: <1144109263.25327@dscpl.user.openhosting.com>
Message-ID: <200604060240.k362epXK010574@modpython.org>

Graham,
Thanks for the pointer.

I didn't realize that stock Apache on Linux/Unix uses forking MDM (seems a
bit conservative approach these days).

I had to recompile it with worker MDM that uses both threads and processes
(--with-mpm=worker) and configure it in such a way that it never uses more
than one process to serve requests (StartServers = 1, MaxClients =
ThreadsPerChild).

After that if I set up same PythonInterpreter to all handlers. It works with
virtual hosts and both http request and tcp connection handlers.

Just in case somebody runs into same problem.

Miro

> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: 04/03/2006 8:08 PM
> To: Miro
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] sharing data in the same interpreter
> 
> For startes read:
> 
>   http://www.dscpl.com.au/articles/modpython-004.html
> 
> This will explain how there are different process models in Apache
> and a bit about data sharing.
> 
> Graham
> 
>  Miro wrote ..
> > Hi,
> >
> >
> >
> > I?m trying to figure out how to share data between different handlers
> > running in the same interpreter instance.
> >
> > I got it running with apache in debug mode (only one worker thread) but
> > not
> > in normal mode.
> >
> > According to the value of ?req.interpreter? both handlers use the same
> > interpreter.
> >
> > I noticed that with ?PythonDebug On? according to the log message
> ?handle?
> > module gets reloaded with every request.
> >
> > Does that wipe out any global cfg!?
> >
> > Is there any way to make this working?
> >
> >
> >
> > I?m using following platform:
> >
> > -          Fedora Core 4
> >
> > -          Apache 2.0.54
> >
> > -          Mod_python 3.2.8 (installed from source to replace pre-
> packaged
> > 3.1.4)
> >
> >
> >
> > Complete cfg and example are attached.
> >
> > test_handle.py does POST to set global data that follow on GET request
> > should read.
> >
> >
> >
> > Thanks
> >
> > Miro
> >
> >
> >
> >
> >
> > # /etc/httpd/conf.d/python.conf
> >
> >
> >
> > LoadModule python_module modules/mod_python.so
> >
> >
> >
> > Listen 8000
> >
> > NameVirtualHost *:8000
> >
> > <VirtualHost *:8000>
> >
> >   SetHandler mod_python
> >
> >   PythonPath "['/tmp/py'] + sys.path"
> >
> >   PythonInterpreter ONE
> >
> >   PythonAutoReload Off
> >
> >   <Location "/get">
> >
> >     PythonHandler handle::get_handler
> >
> >   </Location>
> >
> >   <Location "/post">
> >
> >     PythonHandler handle::post_handler
> >
> >   </Location>
> >
> > </VirtualHost>
> >
> >
> >
> > # /tmp/py/handle.py
> >
> >
> >
> > from mod_python import apache
> >
> >
> >
> > class SharedData:
> >
> >   data = "Doesn't work"
> >
> >
> >
> > def get_handler(req):
> >
> >     req.content_type = "text/plain"
> >
> >     req.write(SharedData.data)
> >
> >     apache.log_error("get_handler wrote : " + SharedData.data)
> >
> >     apache.log_error("get_handler interpreter : %r" % req.interpreter)
> >
> >     return apache.OK
> >
> >
> >
> > def post_handler(req):
> >
> >     SharedData.data = req.read()
> >
> >     apache.log_error("post_handler read : " + SharedData.data)
> >
> >     apache.log_error("post_handler interpreter : %r" % req.interpreter)
> >
> >     return apache.OK
> >
> >
> >
> > # /tmp/py/test_handle.py
> >
> >
> >
> > import httplib
> >
> >
> >
> > def test_get():
> >
> >    print "test_get"
> >
> >    PORT = 8000
> >
> >    PATH = "/get"
> >
> >    conn = httplib.HTTPConnection("127.0.0.1:%s" % PORT)
> >
> >    conn.putrequest("GET", PATH, skip_host=1)
> >
> >    conn.putheader("Host", "%s:%s" % ("test_get", PORT))
> >
> >    conn.endheaders()
> >
> >    response = conn.getresponse()
> >
> >    rsp = response.read()
> >
> >    print "Got back : %s" %rsp
> >
> >    conn.close()
> >
> >
> >
> > def test_post():
> >
> >   print 'test_post'
> >
> >   params = 'It works'
> >
> >   print "    writing %d bytes..." % len(params)
> >
> >   PORT = 8000
> >
> >   PATH = "/post"
> >
> >   conn = httplib.HTTPConnection("127.0.0.1:%s" % PORT)
> >
> >   conn.putrequest("POST", PATH, skip_host=1)
> >
> >   conn.putheader("Host", "test_rpost:%s" % PORT)
> >
> >   conn.putheader("Content-Length", len(params))
> >
> >   conn.endheaders()
> >
> >   conn.send(params)
> >
> >   conn.close()
> >
> >
> >
> > if __name__ == "__main__":
> >
> >   test_post()
> >
> >   test_get()
> >
> >
> > --
> > No virus found in this outgoing message.
> > Checked by AVG Free Edition.
> > Version: 7.1.385 / Virus Database: 268.3.5/300 - Release Date: 04/03/06
> >
> 
> --
> No virus found in this incoming message.
> Checked by AVG Free Edition.
> Version: 7.1.385 / Virus Database: 268.3.5/300 - Release Date: 04/03/06
> 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.3.5/301 - Release Date: 04/04/06
 


From Harold at giant-steps-networks.com  Thu Apr  6 02:52:22 2006
From: Harold at giant-steps-networks.com (Harold J. Ship)
Date: Thu Apr  6 01:52:53 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE31@exchange.Giant-Steps.local>

 
Attached output.

LS0tLS0tLS0tLS0tYWUwZ0w2YWUwY0gyS003YWUwY0gySWo1ZWk0ZWk0DQpDb250ZW50LURp
c3Bv
c2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9IkZpbGVuYW1lIg0KDQpzYW1wbGUudHh0DQotLS0t
LS0t
LS0tLS1hZTBnTDZhZTBjSDJLTTdhZTBjSDJJajVlaTRlaTQNCkNvbnRlbnQtRGlzcG9zaXRp
b246
IGZvcm0tZGF0YTsgbmFtZT0iRmlsZWRhdGEiOyBmaWxlbmFtZT0ic2FtcGxlLnR4dCINCkNv
bnRl
bnQtVHlwZTogYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtDQoNClN0YXJ0IG9mIFNhbXBsZSBU
ZXh0
IEZpbGUgQ29udGVudHMNCkVuZCBvZiBTYW1wbGUgVGV4dCBGaWxlIENvbnRlbnRzDQoNCi0t
LS0t
LS0tLS0tLWFlMGdMNmFlMGNIMktNN2FlMGNIMklqNWVpNGVpNA0KQ29udGVudC1EaXNwb3Np
dGlv
bjogZm9ybS1kYXRhOyBuYW1lPSJVcGxvYWQiDQpTdWJtaXQgUXVlcnkNCi0tLS0tLS0tLS0t
LWFl
MGdMNmFlMGNIMktNN2FlMGNIMklqNWVpNGVpNA==


-----Original Message-----
From: Graham Dumpleton
Sent: Wednesday, April 05, 2006 11:57 PM
To: Harold J. Ship
Cc: Jim Gallacher; mod_python@modpython.org
Subject: Re: [mod_python] ValueError with Flash 8
FileReference.upload(url)


If it isn't formatted per the standards for how multipart forms are
meant to be formatted, that it may be accepted on platform does not
matter as there are no guarantees it will be accepted on another.

Anyway, to settle this, capture your post data again using that handler,
but change the handler to:

from mod_python import apache
import base64

def handler(req):

     data = open("/some/path/post.dat", "wb")
     data.write(base64.encodestring(req.read()))
     data.close()

     req.content_type = 'text/plain'
     req.write("Done")

     return apache.OK

By encoding it as base64 before being sent, we know for sure that
nothing about how it was written to file or dealt with by any mail
software will stuff up CR LF sequences and we can see exactly what was
received.

Graham

-------------- next part --------------
A non-text attachment was scrubbed...
Name: post.dat
Type: application/octet-stream
Size: 657 bytes
Desc: post.dat
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060406/f98a7a3a/post.obj
From grahamd at dscpl.com.au  Thu Apr  6 02:14:59 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr  6 02:15:04 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <1144304099.30744@dscpl.user.openhosting.com>

Definitely missing the required blank line after the content disposition line in
the second group.

'------------ae0gL6ae0cH2KM7ae0cH2Ij5ei4ei4\r\nContent-Disposition: form-data; name="Filename"\r\n\r\nsample.txt\r\n------------ae0gL6ae0cH2KM7ae0cH2Ij5ei4ei4\r\nContent-Disposition: form-data; name="Filedata"; filename="sample.txt"\r\nContent-Type: application/octet-stream\r\n\r\nStart of Sample Text File Contents\r\nEnd of Sample Text File Contents\r\n\r\n------------ae0gL6ae0cH2KM7ae0cH2Ij5ei4ei4\r\nContent-Disposition: form-data; name="Upload"\r\nSubmit Query\r\n------------ae0gL6ae0cH2KM7ae0cH2Ij5ei4ei4'

I can't find a simple reference right now to refer to which says it is required,
but relevant RFCs are:

  http://rfc.sunsite.dk/rfc/rfc1521.html
  http://rfc.sunsite.dk/rfc/rfc1522.html
  http://rfc.sunsite.dk/rfc/rfc1867.html

Just to see if it works, add a blank line at the beginning of your data in
the second section before it gets packaged into the post.

Graham

Harold J. Ship wrote ..
>  
> Attached output.
> 
> LS0tLS0tLS0tLS0tYWUwZ0w2YWUwY0gyS003YWUwY0gySWo1ZWk0ZWk0DQpDb250ZW50LURp
> c3Bv
> c2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9IkZpbGVuYW1lIg0KDQpzYW1wbGUudHh0DQotLS0t
> LS0t
> LS0tLS1hZTBnTDZhZTBjSDJLTTdhZTBjSDJJajVlaTRlaTQNCkNvbnRlbnQtRGlzcG9zaXRp
> b246
> IGZvcm0tZGF0YTsgbmFtZT0iRmlsZWRhdGEiOyBmaWxlbmFtZT0ic2FtcGxlLnR4dCINCkNv
> bnRl
> bnQtVHlwZTogYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtDQoNClN0YXJ0IG9mIFNhbXBsZSBU
> ZXh0
> IEZpbGUgQ29udGVudHMNCkVuZCBvZiBTYW1wbGUgVGV4dCBGaWxlIENvbnRlbnRzDQoNCi0t
> LS0t
> LS0tLS0tLWFlMGdMNmFlMGNIMktNN2FlMGNIMklqNWVpNGVpNA0KQ29udGVudC1EaXNwb3Np
> dGlv
> bjogZm9ybS1kYXRhOyBuYW1lPSJVcGxvYWQiDQpTdWJtaXQgUXVlcnkNCi0tLS0tLS0tLS0t
> LWFl
> MGdMNmFlMGNIMktNN2FlMGNIMklqNWVpNGVpNA==
> 
> 
> -----Original Message-----
> From: Graham Dumpleton
> Sent: Wednesday, April 05, 2006 11:57 PM
> To: Harold J. Ship
> Cc: Jim Gallacher; mod_python@modpython.org
> Subject: Re: [mod_python] ValueError with Flash 8
> FileReference.upload(url)
> 
> 
> If it isn't formatted per the standards for how multipart forms are
> meant to be formatted, that it may be accepted on platform does not
> matter as there are no guarantees it will be accepted on another.
> 
> Anyway, to settle this, capture your post data again using that handler,
> but change the handler to:
> 
> from mod_python import apache
> import base64
> 
> def handler(req):
> 
>      data = open("/some/path/post.dat", "wb")
>      data.write(base64.encodestring(req.read()))
>      data.close()
> 
>      req.content_type = 'text/plain'
>      req.write("Done")
> 
>      return apache.OK
> 
> By encoding it as base64 before being sent, we know for sure that
> nothing about how it was written to file or dealt with by any mail
> software will stuff up CR LF sequences and we can see exactly what was
> received.
> 
> Graham
From Harold at giant-steps-networks.com  Thu Apr  6 10:26:13 2006
From: Harold at giant-steps-networks.com (Harold J. Ship)
Date: Thu Apr  6 09:26:30 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
Message-ID: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE74@exchange.Giant-Steps.local>

Thanks for your help. I posted a bug on Macromedia's site.

However, even if the request from the Flash FileReference.update()
method isn't correct, wouldn't it make sense to handle it? The Flash
player is ubiquitous, and even if Macromedia fixes this, there will be
millions of older versions that will continue to send the request that
way. This effectively means that one can't use Flash to upload files to
a mod_python based server.

Thanks again,
Harold

From benomatic42 at gmail.com  Thu Apr  6 09:46:45 2006
From: benomatic42 at gmail.com (ben)
Date: Thu Apr  6 09:46:50 2006
Subject: [mod_python] Apache + mod_python + SSLVerifyClient == broken url
	parsing?
Message-ID: <967dbda50604060646l1cf2780bt8e37d7d09304e837@mail.gmail.com>

I have unearthed a strange problem.  I have a simple httpd.conf that should
map urls like this:

/download -> static content, matching client SSL cert required
* -> mod_python handler, SSL based, but no client cert required

What I get instead is

https://foobar.com/download/stuff.txt -- static content, client cert
required
https://foobar.com/setup/things -- python handler, no client cert
https://foobar.com/setup/download/stuff -- python handler, client cert
required

The last thing should never happen by the configuration:

---- httpd.conf ----
ServerName 127.0.0.1
ServerRoot "/usr/local"
DocumentRoot "/usr/local/htdocs"
Listen 443
User www
Group www
LoadModule python_module modules/mod_python.so

<Location "/">
        SetHandler mod_python
        PythonHandler dummy::handler
        PythonDebug On
</Location>

<Location "/download">
        SSLVerifyClient require
        SSLVerifyDepth 1
        SetHandler None
</Location>

SSLEngine on
SSLCertificateFile    certs/dummy.crt
SSLCertificateKeyFile certs/dummy.crt
SSLCACertificateFile  certs/dummy-ca.crt
--------

This is running against apache 2.2.0, python 2.4.1 and mod_python 3.2.8 (+
the four patches found here -- needed for proper 2.2.0 operation --
http://svn.apache.org/viewcvs.cgi?rev=376544&view=rev )

Basically, any url that contains, but does not begin with '/download/',
falsely requires an SSL client cert, and produces an IOError in the python
during the write() call.

Simple test python code is here:

---- dummy.py ----
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    try:
        req.write(str(req.the_request))
    except IOError, e:
        apache.log_error('IOError: ' + str(e))
        apache.log_error('IOError: ' + req.the_request)
    return apache.OK
--------

Below are the errors produced in apache's error log for each url, using a
client that does not have the client cert configured.

https://foobar.com/download/stuff.txt
[www_error] Re-negotiation handshake failed: Not accepted by client!?
[curl error] SSL read: error:14094410:SSL routines:SSL3_READ_BYTES:sslv3
alert handshake failure, errno 0

https://foobar.com/setup/things
[no errors]

https://foobar.com/setup/download/stuff
[www_error] IOError: Write failed, client closed connection.
[www_error] IOError: GET /foo/download HTTP/1.1
[curl error] SSL read: error:14094410:SSL routines:SSL3_READ_BYTES:sslv3
alert handshake failure, errno 0

Has anybody seen any problem like this?  I tried setting this up to fail w/
static content, but so far it only fails w/ mod_python + ssl.
The apache lists show a few other problems w/ the SSLVerifyClient directive,
so it may not be only mod_python that triggers this...


http://marc.theaimsgroup.com/?l=apache-modssl&w=2&r=1&s=SSLVerifyClient&q=b

Any suggestions on how to fix this, or what I ought to do to bring this to
apache/modssl developer attention?  Thanks.

ben
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060406/c6df01e0/attachment-0001.html
From nick at dd.revealed.net  Thu Apr  6 09:49:05 2006
From: nick at dd.revealed.net (Nick)
Date: Thu Apr  6 09:49:19 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE74@exchange.Giant-Steps.local>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE74@exchange.Giant-Steps.local>
Message-ID: <44351C51.7040001@dd.revealed.net>

Harold J. Ship wrote:
> Thanks for your help. I posted a bug on Macromedia's site.

It's not impossible, but does seem unlikely, that mod_python is the only
correct implementation, i.e. parsing the headers correctly and failing on
Flash requests.

Just a thought.

Nick
From jpg at jgassociates.ca  Thu Apr  6 10:17:36 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Apr  6 10:17:03 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE74@exchange.Giant-Steps.local>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE74@exchange.Giant-Steps.local>
Message-ID: <44352300.4000704@jgassociates.ca>

Harold J. Ship wrote:
> Thanks for your help. I posted a bug on Macromedia's site.
> 
> However, even if the request from the Flash FileReference.update()
> method isn't correct, wouldn't it make sense to handle it? 

This is an interesting question. I'm not a fan of putting hacks in 
software product A to deal with bugs in software product B. I realize 
the world is not perfect and at times this may be necessary, but I think 
it just makes our code base more difficult to maintain as well 
increasing the chance of introducing new bugs of our own. For example, 
how should a malformed request from a non-Flash client be handled? It 
may be more appropriate to raise an exception rather than ignore the 
error, so how does one decide for any given request?

> The Flash
> player is ubiquitous, and even if Macromedia fixes this, there will be
> millions of older versions that will continue to send the request that
> way. This effectively means that one can't use Flash to upload files to
> a mod_python based server.

This is not completely true, as one can always subclass FieldStorage to 
deal with special cases. Isn't this one of the things that draws us all 
to python in the first place? :)

Jim


From benomatic42 at gmail.com  Thu Apr  6 15:12:41 2006
From: benomatic42 at gmail.com (ben)
Date: Thu Apr  6 15:12:47 2006
Subject: [mod_python] Apache + mod_python + SSLVerifyClient == broken url
	parsing?
In-Reply-To: <1144341523.9066.25.camel@localhost.localdomain>
References: <967dbda50604060646l1cf2780bt8e37d7d09304e837@mail.gmail.com>
	<1144341523.9066.25.camel@localhost.localdomain>
Message-ID: <967dbda50604061212n8135612nf9fc895cee63f66a@mail.gmail.com>

On 4/6/06, Joshua Ginsberg <listspam@flowtheory.net> wrote:
>
> That's because your SetHandler cascades to /download -- that you fail to
> specify a handler for /download does not mean it uses the default
> handler. You want to add to the /download section "SetHandler
> default-handler" to get your desired result.


I've tried with both 'none' and 'default-handler', and gotten the same
result.

My complaint is not that python is the interpreter for a url like:

  https://foobar.com/foo/download

because I want it to be python handled (it doesn't start with /download).
The problem is that the above url also receives the 'SSLVerifyClient
require' directive, which is incorrect.

I believe it to be impossible for a single url to be interpreted by python
AND get SSLVerifyClient at the same time.

At a deeper level, it's surprising to me that this code even reaches
mod_python -- it seems intuitively that the SSLVerifyClient directive should
be part of authentication, and ought to fail during connection negotiation,
before control is handed over to the python interpreter.

Thanks =]

-b
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060406/8f46228c/attachment.html
From list at joreybump.com  Thu Apr  6 15:57:05 2006
From: list at joreybump.com (Jorey Bump)
Date: Thu Apr  6 15:57:22 2006
Subject: [mod_python] Apache + mod_python + SSLVerifyClient == broken
	url	parsing?
In-Reply-To: <967dbda50604061212n8135612nf9fc895cee63f66a@mail.gmail.com>
References: <967dbda50604060646l1cf2780bt8e37d7d09304e837@mail.gmail.com>	<1144341523.9066.25.camel@localhost.localdomain>
	<967dbda50604061212n8135612nf9fc895cee63f66a@mail.gmail.com>
Message-ID: <44357291.7030506@joreybump.com>

ben wrote:

> At a deeper level, it's surprising to me that this code even reaches 
> mod_python -- it seems intuitively that the SSLVerifyClient directive 
> should be part of authentication, and ought to fail during connection 
> negotiation, before control is handed over to the python interpreter.

Have you tried using Directory instead of Location?


From benomatic42 at gmail.com  Thu Apr  6 16:04:24 2006
From: benomatic42 at gmail.com (ben)
Date: Thu Apr  6 16:04:29 2006
Subject: [mod_python] Apache + mod_python + SSLVerifyClient == broken url
	parsing?
In-Reply-To: <44357291.7030506@joreybump.com>
References: <967dbda50604060646l1cf2780bt8e37d7d09304e837@mail.gmail.com>
	<1144341523.9066.25.camel@localhost.localdomain>
	<967dbda50604061212n8135612nf9fc895cee63f66a@mail.gmail.com>
	<44357291.7030506@joreybump.com>
Message-ID: <967dbda50604061304y284354c3xbec05b932e0fede4@mail.gmail.com>

On 4/6/06, Jorey Bump <list@joreybump.com> wrote:

> Have you tried using Directory instead of Location?


yep.  the original conf used Directory.  I've tried using both, as well as
<LocationMatch "^/download/">, to no avail.

-b
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060406/fd46d717/attachment.html
From grahamd at dscpl.com.au  Thu Apr  6 16:34:20 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr  6 16:34:50 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)
In-Reply-To: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE74@exchange.Giant-Steps.local>
References: <5B0ECC1928CB6C479A734A6BD6209EF0DDDE74@exchange.Giant-Steps.local>
Message-ID: <8E7B082B-E780-4FED-A027-57924938C35B@dscpl.com.au>


On 07/04/2006, at 12:26 AM, Harold J. Ship wrote:

> Thanks for your help. I posted a bug on Macromedia's site.
>
> However, even if the request from the Flash FileReference.update()
> method isn't correct, wouldn't it make sense to handle it? The Flash
> player is ubiquitous, and even if Macromedia fixes this, there will be
> millions of older versions that will continue to send the request that
> way. This effectively means that one can't use Flash to upload  
> files to
> a mod_python based server.

Looking at what they sent, a long shot may be that the problem is that
they only emit the blank line after the content type header line. Since
you didn't have a content type associated with the second section, it
didn't add it. Thus, what happens when you specify content type for
the section section as 'text/plain'.

Graham
From blake8086 at gmail.com  Thu Apr  6 22:22:16 2006
From: blake8086 at gmail.com (Blake Householder)
Date: Thu Apr  6 22:22:33 2006
Subject: [mod_python] External connections in mod_python
Message-ID: <e61079980604061922g2793ef64ua165a1a049953cf5@mail.gmail.com>

I have a bit of code that's trying to access google from a mod_python
request handler, and it crashes Apache when it reaches the line

response = opener.open(self.url)

Is it possible to connect to external sites from Apache in this manner, or
should I just give up and use PHP?

import httplib, profile, pstats, re, sys, thread, threading, urllib2
from mod_python import apache
from BeautifulSoup import BeautifulSoup

MAXCONNECTIONS = 2
MAXRESULTS = 10

class PageGrabber(threading.Thread):
    connectionPool = threading.Semaphore(MAXCONNECTIONS)
    outputSemaphore = threading.Semaphore()

    def __init__(self, url, req):
        self.url = url
        self.req = req
        threading.Thread.__init__(self)

    def run(self):
        opener = urllib2.build_opener()
        opener.addheaders = [('User-agent', 'Mozilla/5.0')]
        try:
            PageGrabber.connectionPool.acquire()
            response = opener.open(self.url)
            PageGrabber.connectionPool.release()
            soup = BeautifulSoup(response)
            PageGrabber.outputSemaphore.acquire()
            #strip google cache header stuff
            cutPage = re.split('<hr>|<hr />', str(soup), 1)
            strippedPage = cutPage[1]
            #split into words
            wordList = re.split('\t|\n|
|<.*?>|\r|<!--|-->|&nbsp;|,|&quot;|&lt;|&gt;|\?|!|:|\*|\.|\[|\]|\(|\)|\'|\-|"|=|/|<|>|\+|&|@|#',
str(strippedPage))
            #print only nonzero words
            for word in wordList:
                if len(word) > 0:
                    self.req.write(word + ' / ')
            PageGrabber.outputSemaphore.release()
        except Exception:
            print 'timed out'
        return

def main(req):
    opener = urllib2.build_opener()
    opener.addheaders = [('User-agent', 'Mozilla/5.0')]
    searchTerms = ['python']
    if len(searchTerms) > 1:
        searchString = '+'.join(searchTerms)
    else:
        searchString = searchTerms[0]
    response = opener.open('http://www.google.com/search?num=' +
str(MAXRESULTS) +'&q=' + searchString)

    soup = BeautifulSoup(response)
    cachedURLs = []
    #extract cache urls
    for result in soup('a'):
        if re.search('q=cache', result['href']):
            cachedURLs.append(result['href'])

    #start threads to pull down cached data
    for cachedURL in cachedURLs:
        #use google's image strip thingie
        stripURL = cachedURL + '&strip=1'
        PageGrabber(stripURL, req).start()

def handler(req):
    req.content_type = 'text/plain'
    main(req)
    return apache.OK
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060406/9a338a17/attachment.html
From grahamd at dscpl.com.au  Thu Apr  6 23:29:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr  6 23:29:37 2006
Subject: [mod_python] External connections in mod_python
Message-ID: <1144380573.22547@dscpl.user.openhosting.com>

I am not sure that what you are trying to do would work anyway.

You seem to create threads within the context of a request where
the threads could live beyond when the handler returns, yet the
threads then write back to the req object whose Apache internals
by that point may have been destroyed which thus could result
in a crash.

How are you sure that the line you quote is where it crashes?

Perhaps you can explain what you are trying to do rather than us
decipher the code.

Graham

Blake Householder wrote ..
> I have a bit of code that's trying to access google from a mod_python
> request handler, and it crashes Apache when it reaches the line
> 
> response = opener.open(self.url)
> 
> Is it possible to connect to external sites from Apache in this manner,
> or
> should I just give up and use PHP?
> 
> import httplib, profile, pstats, re, sys, thread, threading, urllib2
> from mod_python import apache
> from BeautifulSoup import BeautifulSoup
> 
> MAXCONNECTIONS = 2
> MAXRESULTS = 10
> 
> class PageGrabber(threading.Thread):
>     connectionPool = threading.Semaphore(MAXCONNECTIONS)
>     outputSemaphore = threading.Semaphore()
> 
>     def __init__(self, url, req):
>         self.url = url
>         self.req = req
>         threading.Thread.__init__(self)
> 
>     def run(self):
>         opener = urllib2.build_opener()
>         opener.addheaders = [('User-agent', 'Mozilla/5.0')]
>         try:
>             PageGrabber.connectionPool.acquire()
>             response = opener.open(self.url)
>             PageGrabber.connectionPool.release()
>             soup = BeautifulSoup(response)
>             PageGrabber.outputSemaphore.acquire()
>             #strip google cache header stuff
>             cutPage = re.split('<hr>|<hr />', str(soup), 1)
>             strippedPage = cutPage[1]
>             #split into words
>             wordList = re.split('\t|\n|
> |<.*?>|\r|<!--|-->|&nbsp;|,|&quot;|&lt;|&gt;|\?|!|:|\*|\.|\[|\]|\(|\)|\'|\-|"|=|/|<|>|\+|&|@|#',
> str(strippedPage))
>             #print only nonzero words
>             for word in wordList:
>                 if len(word) > 0:
>                     self.req.write(word + ' / ')
>             PageGrabber.outputSemaphore.release()
>         except Exception:
>             print 'timed out'
>         return
> 
> def main(req):
>     opener = urllib2.build_opener()
>     opener.addheaders = [('User-agent', 'Mozilla/5.0')]
>     searchTerms = ['python']
>     if len(searchTerms) > 1:
>         searchString = '+'.join(searchTerms)
>     else:
>         searchString = searchTerms[0]
>     response = opener.open('http://www.google.com/search?num=' +
> str(MAXRESULTS) +'&q=' + searchString)
> 
>     soup = BeautifulSoup(response)
>     cachedURLs = []
>     #extract cache urls
>     for result in soup('a'):
>         if re.search('q=cache', result['href']):
>             cachedURLs.append(result['href'])
> 
>     #start threads to pull down cached data
>     for cachedURL in cachedURLs:
>         #use google's image strip thingie
>         stripURL = cachedURL + '&strip=1'
>         PageGrabber(stripURL, req).start()
> 
> def handler(req):
>     req.content_type = 'text/plain'
>     main(req)
>     return apache.OK
From herschel at panix.com  Fri Apr  7 09:55:46 2006
From: herschel at panix.com (clemens herschel)
Date: Fri Apr  7 09:55:51 2006
Subject: [mod_python] apr_socketaddr_port_get
Message-ID: <Pine.NEB.4.63.0604070946070.5173@panix1.panix.com>


This is on a development system. To eliminalte apr_table_compress error, I 
upgraded apache. I have this new apr_socketaddr_port_get error
Thanks for any help, Clem


apr_socketaddr_port_get

mod_python 3.2.8
python 2.4
Apachee 2.2

Red Hat Linux 9



[root@herschelenterprises apache2]# bin/httpd
httpd: Syntax error on line 231 of /usr/local/apache2/conf/httpd.conf: 
Cannot load /usr/local/apache2/modules/mod_python.so into server: 
/usr/local/apache2/modules/mod_python.so: undefined symbol: 
apr_sockaddr_port_get
[root@herschelenterprises apache2]# bin/httpd -X
httpd: Syntax error on line 231 of /usr/local/apache2/conf/httpd.conf: 
Cannot load /usr/local/apache2/modules/mod_python.so into server: 
/usr/local/apache2/modules/mod_python.so: undefined symbol: 
apr_sockaddr_port_get

From jpg at jgassociates.ca  Fri Apr  7 10:28:15 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr  7 10:28:05 2006
Subject: [mod_python] apr_socketaddr_port_get
In-Reply-To: <Pine.NEB.4.63.0604070946070.5173@panix1.panix.com>
References: <Pine.NEB.4.63.0604070946070.5173@panix1.panix.com>
Message-ID: <443676FF.9020100@jgassociates.ca>

3.2.8 does not support Apache 2.2. Support is scheduled in the 3.2.9 
bugfix release (real soon now ;) ). In the mean time you can grab a copy 
of the stable branch from the subversion repository:

svn co http://svn.apache.org/repos/asf/httpd/mod_python/branches/3.2.x

Or, if you want to be a little more cutting edge you could try the 
development branch.
svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk

Jim

clemens herschel wrote:
> 
> This is on a development system. To eliminalte apr_table_compress error, 
> I upgraded apache. I have this new apr_socketaddr_port_get error
> Thanks for any help, Clem
> 
> 
> apr_socketaddr_port_get
> 
> mod_python 3.2.8
> python 2.4
> Apachee 2.2
> 
> Red Hat Linux 9
> 
> 
> 
> [root@herschelenterprises apache2]# bin/httpd
> httpd: Syntax error on line 231 of /usr/local/apache2/conf/httpd.conf: 
> Cannot load /usr/local/apache2/modules/mod_python.so into server: 
> /usr/local/apache2/modules/mod_python.so: undefined symbol: 
> apr_sockaddr_port_get
> [root@herschelenterprises apache2]# bin/httpd -X
> httpd: Syntax error on line 231 of /usr/local/apache2/conf/httpd.conf: 
> Cannot load /usr/local/apache2/modules/mod_python.so into server: 
> /usr/local/apache2/modules/mod_python.so: undefined symbol: 
> apr_sockaddr_port_get
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From pgroce.listserv at gmail.com  Fri Apr  7 14:58:33 2006
From: pgroce.listserv at gmail.com (Phil Groce)
Date: Fri Apr  7 14:58:36 2006
Subject: [mod_python] Using _global_lock in scripts
Message-ID: <35ac89bd0604071158w41ff28et9b3d1f55847e0a16@mail.gmail.com>

I have a resource which my module will need to access, potentially
from multiple child processes, since I can't directly control the MPM
being used. The logical implementation is to persist the resource to
disk and lock access with a mutex, similarly to what the Session
module does.

Session, of course, does this with _apache._global_lock and
_apache._global_unlock do. However, their names and the names of the
module seem to indicate that the implementors intend for them to be
private.

So I have a few questions:

1. Despite my misgivings at using private interfaces, it would
simplify my life greatly if I could use these functions. Is it
reasonable to assume that, even if they are private, they will exist
and have pretty much the same contract for a while yet? (The seem to
have existed, largely unchanged, for quite a while now.)

2. If it is not reasonable, what suggestions do you have for
implementing concurrent access to a resource from (potentially)
multiple interpreters and/or child processes?

3. If it _is_ reasonable....any chance that this can become a
documented mod_python feature? :)

Sincerely,

Phil Groce

From aditya.vrr at gmail.com  Fri Apr  7 16:22:06 2006
From: aditya.vrr at gmail.com (gOLeM)
Date: Fri Apr  7 16:22:10 2006
Subject: [mod_python] Mod Python problems
In-Reply-To: <1143591630.21131@dscpl.user.openhosting.com>
References: <1143591630.21131@dscpl.user.openhosting.com>
Message-ID: <ec2d07cf0604071322o49b4ab3ah43339cd0336cbd0f@mail.gmail.com>

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
287, in HandlerDispatch
    log=debug)

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
461, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named mptest

do i have to set any path?
I am using the global apache configuration file /etc/httpd/conf/httpd.conf
added the following lines to it
------------------------------------
AddHandler python-program .py
PythonHandler mptest
PythonDebug On
------------------------------------
mptest.py
from mod_python import apache

def handler(req):
    req.content_type = 'text/plain'
    req.send_http_header()
    req.write('mptest.py\n')
    return apache.OK

using the latest version of mod-python, working on fedora core 1 with
apache 2.0.4



On 3/28/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> gOLeM wrote ..
> > Hello,
> >
> > I know that you guys must have got this mail a thousand times, but i
> > cant seem to find a solution anywhere. I have tried everything but
> > couldnt get mod_python running.
> >
> > I've downloaded the psp_site.tgz and put it in /var/www/html/psp_site
> > and when i try to access it, i am getting the actual code instead of
> > the webpage.
> > The mod_python.so is loaded, but still i am not able to get psp running
> > :(
> >
> > Please help me.
>
> Have you tried getting a simple test handler going first? Trying to
> start out by using PSP site example is not a good way to go.
>
> If you haven't tried a simple test handler first, work your way through:
>
>   http://www.dscpl.com.au/articles/modpython-001.html
>
> to get an idea how things work.
>
> If you have got a simple test handler going, you need to be a bit more
> specific about what snippet of Apache configuration you are using
> to enable PSP example. Where it is, ie., global Apache config or in
> .htaccess file etc.
>
> Graham
>
>


--
The Purpose of Life is a life of purpose -- Leider, Richard
Quitters never win and Winners never quit   -- Napolean Hill

From jpg at jgassociates.ca  Fri Apr  7 16:26:28 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr  7 16:24:22 2006
Subject: [mod_python] Using _global_lock in scripts
In-Reply-To: <35ac89bd0604071158w41ff28et9b3d1f55847e0a16@mail.gmail.com>
References: <35ac89bd0604071158w41ff28et9b3d1f55847e0a16@mail.gmail.com>
Message-ID: <4436CAF4.5060604@jgassociates.ca>

Phil Groce wrote:
> I have a resource which my module will need to access, potentially
> from multiple child processes, since I can't directly control the MPM
> being used. The logical implementation is to persist the resource to
> disk and lock access with a mutex, similarly to what the Session
> module does.
> 
> Session, of course, does this with _apache._global_lock and
> _apache._global_unlock do. However, their names and the names of the
> module seem to indicate that the implementors intend for them to be
> private.

They are there to support session locking. You will have a possible 
conflict if you are using sessions and want to "borrow" a lock for other 
purposes.

> So I have a few questions:
> 
> 1. Despite my misgivings at using private interfaces, it would
> simplify my life greatly if I could use these functions. Is it
> reasonable to assume that, even if they are private, they will exist
> and have pretty much the same contract for a while yet? (The seem to
> have existed, largely unchanged, for quite a while now.)

The locks are actually used for 2 separate purposes: Session locking and 
serializing access to the dbm file for DbmSession. Lock index 0 is 
reserved for accessing the dbm file. Locks 1 to MAX_LOCKS are used for 
locking the actual sessions, where the lock index is derived from a hash 
of the session id.

As long as  you don't use DbmSession you can safely use lock index 0. eg.

_apache._global_lock(server, None, 0)

Note that you'll still be able to use FileSession, since it does use 
index 0.

I think you can assume that this interface will not change in the near 
future. When I was working on FileSession there was quite a bit of 
discussion on alternative locking mechanisms, but even if the 
implementation is changed in the future to improve performance I can't 
imagine why the interface would change.

> 2. If it is not reasonable, what suggestions do you have for
> implementing concurrent access to a resource from (potentially)
> multiple interpreters and/or child processes?

You could always use a filelock. Not the most efficient way to do it, 
but it would work. See portalocker.py for ideas.
http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/65203

> 3. If it _is_ reasonable....any chance that this can become a
> documented mod_python feature? :)

Hmmm... I think it's a little too much of a hack to go in the offical 
documentation - bit too much like handing someone a loaded gun.

Jim
From aditya.vrr at gmail.com  Fri Apr  7 16:26:45 2006
From: aditya.vrr at gmail.com (gOLeM)
Date: Fri Apr  7 16:26:49 2006
Subject: [mod_python] Mod Python problems
In-Reply-To: <ec2d07cf0604071322o49b4ab3ah43339cd0336cbd0f@mail.gmail.com>
References: <1143591630.21131@dscpl.user.openhosting.com>
	<ec2d07cf0604071322o49b4ab3ah43339cd0336cbd0f@mail.gmail.com>
Message-ID: <ec2d07cf0604071326t1c7bdae3l78e44b1d0ebe6bc6@mail.gmail.com>

sorry.. forgot to add that the mptest.py is located in /var/www/html/mptest.py

i did try creating a directory in /var/www/html/psp and also put the
same lines in .htaccess and tried to access
http://localhost/psp/mptest.py. and got the same problem. :(

On 4/7/06, gOLeM <aditya.vrr@gmail.com> wrote:
> Mod_python error: "PythonHandler mptest"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 287, in HandlerDispatch
>     log=debug)
>
>   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 461, in import_module
>     f, p, d = imp.find_module(parts[i], path)
>
> ImportError: No module named mptest
>
> do i have to set any path?
> I am using the global apache configuration file /etc/httpd/conf/httpd.conf
> added the following lines to it
> ------------------------------------
> AddHandler python-program .py
> PythonHandler mptest
> PythonDebug On
> ------------------------------------
> mptest.py
> from mod_python import apache
>
> def handler(req):
>     req.content_type = 'text/plain'
>     req.send_http_header()
>     req.write('mptest.py\n')
>     return apache.OK
>
> using the latest version of mod-python, working on fedora core 1 with
> apache 2.0.4
>
>
>
> On 3/28/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > gOLeM wrote ..
> > > Hello,
> > >
> > > I know that you guys must have got this mail a thousand times, but i
> > > cant seem to find a solution anywhere. I have tried everything but
> > > couldnt get mod_python running.
> > >
> > > I've downloaded the psp_site.tgz and put it in /var/www/html/psp_site
> > > and when i try to access it, i am getting the actual code instead of
> > > the webpage.
> > > The mod_python.so is loaded, but still i am not able to get psp running
> > > :(
> > >
> > > Please help me.
> >
> > Have you tried getting a simple test handler going first? Trying to
> > start out by using PSP site example is not a good way to go.
> >
> > If you haven't tried a simple test handler first, work your way through:
> >
> >   http://www.dscpl.com.au/articles/modpython-001.html
> >
> > to get an idea how things work.
> >
> > If you have got a simple test handler going, you need to be a bit more
> > specific about what snippet of Apache configuration you are using
> > to enable PSP example. Where it is, ie., global Apache config or in
> > .htaccess file etc.
> >
> > Graham
> >
> >
>
>
> --
> The Purpose of Life is a life of purpose -- Leider, Richard
> Quitters never win and Winners never quit   -- Napolean Hill
>


--
The Purpose of Life is a life of purpose -- Leider, Richard
Quitters never win and Winners never quit   -- Napolean Hill

From jpg at jgassociates.ca  Fri Apr  7 17:43:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr  7 17:41:20 2006
Subject: [mod_python] Using _global_lock in scripts
In-Reply-To: <4436CAF4.5060604@jgassociates.ca>
References: <35ac89bd0604071158w41ff28et9b3d1f55847e0a16@mail.gmail.com>
	<4436CAF4.5060604@jgassociates.ca>
Message-ID: <4436DD09.40206@jgassociates.ca>

Oops, I missed the use of  _apache._global_lock(server, None, 0) in the 
psp dbm cache. You could run into problems if you are using psp at the 
same time as your resource. If you want to use the lock and and psp in 
the same request you'll need to be careful how you arrange your code.

Jim


Jim Gallacher wrote:
> Phil Groce wrote:
> 
>> I have a resource which my module will need to access, potentially
>> from multiple child processes, since I can't directly control the MPM
>> being used. The logical implementation is to persist the resource to
>> disk and lock access with a mutex, similarly to what the Session
>> module does.
>>
>> Session, of course, does this with _apache._global_lock and
>> _apache._global_unlock do. However, their names and the names of the
>> module seem to indicate that the implementors intend for them to be
>> private.
> 
> 
> They are there to support session locking. You will have a possible 
> conflict if you are using sessions and want to "borrow" a lock for other 
> purposes.
> 
>> So I have a few questions:
>>
>> 1. Despite my misgivings at using private interfaces, it would
>> simplify my life greatly if I could use these functions. Is it
>> reasonable to assume that, even if they are private, they will exist
>> and have pretty much the same contract for a while yet? (The seem to
>> have existed, largely unchanged, for quite a while now.)
> 
> 
> The locks are actually used for 2 separate purposes: Session locking and 
> serializing access to the dbm file for DbmSession. Lock index 0 is 
> reserved for accessing the dbm file. Locks 1 to MAX_LOCKS are used for 
> locking the actual sessions, where the lock index is derived from a hash 
> of the session id.
> 
> As long as  you don't use DbmSession you can safely use lock index 0. eg.
> 
> _apache._global_lock(server, None, 0)
> 
> Note that you'll still be able to use FileSession, since it does use 
> index 0.
> 
> I think you can assume that this interface will not change in the near 
> future. When I was working on FileSession there was quite a bit of 
> discussion on alternative locking mechanisms, but even if the 
> implementation is changed in the future to improve performance I can't 
> imagine why the interface would change.
> 
>> 2. If it is not reasonable, what suggestions do you have for
>> implementing concurrent access to a resource from (potentially)
>> multiple interpreters and/or child processes?
> 
> 
> You could always use a filelock. Not the most efficient way to do it, 
> but it would work. See portalocker.py for ideas.
> http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/65203
> 
>> 3. If it _is_ reasonable....any chance that this can become a
>> documented mod_python feature? :)
> 
> 
> Hmmm... I think it's a little too much of a hack to go in the offical 
> documentation - bit too much like handing someone a loaded gun.
> 
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From aditya.vrr at gmail.com  Fri Apr  7 18:08:17 2006
From: aditya.vrr at gmail.com (gOLeM)
Date: Fri Apr  7 18:08:21 2006
Subject: [mod_python] Mod Python problems
In-Reply-To: <ec2d07cf0604071326t1c7bdae3l78e44b1d0ebe6bc6@mail.gmail.com>
References: <1143591630.21131@dscpl.user.openhosting.com>
	<ec2d07cf0604071322o49b4ab3ah43339cd0336cbd0f@mail.gmail.com>
	<ec2d07cf0604071326t1c7bdae3l78e44b1d0ebe6bc6@mail.gmail.com>
Message-ID: <ec2d07cf0604071508m5e01ba7bicc48df690fc902d6@mail.gmail.com>

finally fixed this problem, but now am facing another problem :(

i've configured the httpd.conf for the publisher module.
When i access http://localhost/psp_site/ i get the source code of index.py
whereas when i access http://localhost/psp_site/index.py i am actually
getting the html page.
any help on what i might be doing wrong would be of great help :)


On 4/7/06, gOLeM <aditya.vrr@gmail.com> wrote:
> sorry.. forgot to add that the mptest.py is located in /var/www/html/mptest.py
>
> i did try creating a directory in /var/www/html/psp and also put the
> same lines in .htaccess and tried to access
> http://localhost/psp/mptest.py. and got the same problem. :(
>
> On 4/7/06, gOLeM <aditya.vrr@gmail.com> wrote:
> > Mod_python error: "PythonHandler mptest"
> >
> > Traceback (most recent call last):
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> > 287, in HandlerDispatch
> >     log=debug)
> >
> >   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> > 461, in import_module
> >     f, p, d = imp.find_module(parts[i], path)
> >
> > ImportError: No module named mptest
> >
> > do i have to set any path?
> > I am using the global apache configuration file /etc/httpd/conf/httpd.conf
> > added the following lines to it
> > ------------------------------------
> > AddHandler python-program .py
> > PythonHandler mptest
> > PythonDebug On
> > ------------------------------------
> > mptest.py
> > from mod_python import apache
> >
> > def handler(req):
> >     req.content_type = 'text/plain'
> >     req.send_http_header()
> >     req.write('mptest.py\n')
> >     return apache.OK
> >
> > using the latest version of mod-python, working on fedora core 1 with
> > apache 2.0.4
> >
> >
> >
> > On 3/28/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > gOLeM wrote ..
> > > > Hello,
> > > >
> > > > I know that you guys must have got this mail a thousand times, but i
> > > > cant seem to find a solution anywhere. I have tried everything but
> > > > couldnt get mod_python running.
> > > >
> > > > I've downloaded the psp_site.tgz and put it in /var/www/html/psp_site
> > > > and when i try to access it, i am getting the actual code instead of
> > > > the webpage.
> > > > The mod_python.so is loaded, but still i am not able to get psp running
> > > > :(
> > > >
> > > > Please help me.
> > >
> > > Have you tried getting a simple test handler going first? Trying to
> > > start out by using PSP site example is not a good way to go.
> > >
> > > If you haven't tried a simple test handler first, work your way through:
> > >
> > >   http://www.dscpl.com.au/articles/modpython-001.html
> > >
> > > to get an idea how things work.
> > >
> > > If you have got a simple test handler going, you need to be a bit more
> > > specific about what snippet of Apache configuration you are using
> > > to enable PSP example. Where it is, ie., global Apache config or in
> > > .htaccess file etc.
> > >
> > > Graham
> > >
> > >
> >
> >
> > --
> > The Purpose of Life is a life of purpose -- Leider, Richard
> > Quitters never win and Winners never quit   -- Napolean Hill
> >
>
>
> --
> The Purpose of Life is a life of purpose -- Leider, Richard
> Quitters never win and Winners never quit   -- Napolean Hill
>


--
The Purpose of Life is a life of purpose -- Leider, Richard
Quitters never win and Winners never quit   -- Napolean Hill

From jpg at jgassociates.ca  Fri Apr  7 18:29:31 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr  7 18:26:52 2006
Subject: [mod_python] Mod Python problems
In-Reply-To: <ec2d07cf0604071508m5e01ba7bicc48df690fc902d6@mail.gmail.com>
References: <1143591630.21131@dscpl.user.openhosting.com>	<ec2d07cf0604071322o49b4ab3ah43339cd0336cbd0f@mail.gmail.com>	<ec2d07cf0604071326t1c7bdae3l78e44b1d0ebe6bc6@mail.gmail.com>
	<ec2d07cf0604071508m5e01ba7bicc48df690fc902d6@mail.gmail.com>
Message-ID: <4436E7CB.6000304@jgassociates.ca>

gOLeM wrote:
> finally fixed this problem,

That's good. What was the problem?

> but now am facing another problem :(
> 
> i've configured the httpd.conf for the publisher module.
> When i access http://localhost/psp_site/ i get the source code of index.py
> whereas when i access http://localhost/psp_site/index.py i am actually
> getting the html page.

Try adding the following to your httpd.conf:

<Directory /some/path/psp_site>
   DirectoryIndex index.py
</Directory>


Jim

From nemesis128 at atarax.org  Sat Apr  8 07:28:42 2006
From: nemesis128 at atarax.org (nemesis128@atarax.org)
Date: Sat Apr  8 07:28:44 2006
Subject: [mod_python] internal error again!
Message-ID: <20060408132842.2qnn71genko4wkwo@webmail.naeberg.org>

Hello,

First i'd like to thank alll the people behind mod_python! =)

All worked fine for me with apache 1.3.
Now i have installed apache 2 and i have that usual problem of Internal Server
Error 500.

I've read all the faqs about it, nothing works.

Detailed:

 - Mandriva Linux 2006
 - Compiled python 2.4.3
 - Compiled apache 2.0.55
 - mod python 3.2.8 (i even tried to compile it with the latest flex 2.5.33)
 - i tried htaccess & httpd.conf directives
 - with all examples given in the doc.
 - i always get the same error log:

-------------------------------------------------------------------
[Fri Apr 07 23:19:20 2006] [notice] mod_python: Creating 32 session mutexes
based on 150 max processes and 0 max threads.
[Fri Apr 07 23:19:20 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
Python/2.4.3 configured -
- resuming normal operations
[Fri Apr 07 23:19:23 2006] [error] make_obcallback: could not import
mod_python.apache.\n
'import site' failed; use -v for traceback
'import site' failed; use -v for traceback
ImportError: No module named mod_python.apache
[Fri Apr 07 23:19:23 2006] [error] python_handler: no interpreter callback
found.
[Fri Apr 07 23:19:23 2006] [error] [client ::1] python_handler: Can't get/create
interpreter., refe
rer: http://localhost/%7Esm/
----------------------------------------------------------------------

Well, sys.path is OK too, but cannot import site (nor mod_python) !!


I also get that kind of error on apache startup sometimes, and i just don't know
if it has something to do with the problem explained above:

----------------------------------------------------------------------
[Sat Apr 08 02:13:37 2006] [notice] mod_python: Creating 32 session mutexes
based on 150 max proces
ses and 0 max threads.
[Sat Apr 08 02:13:37 2006] [error] (28)No space left on device: mod_python:
Failed to create global
 mutex 21 of 32 (/tmp/mpmtx1145121).
[Sat Apr 08 02:13:37 2006] [error] mod_python: We can probably continue, but
with diminished abilit
y to process session locks.
[Sat Apr 08 02:13:37 2006] [error] mod_python: Hint: On Linux, the problem may
be the number of ava
ilable semaphores, check 'sysctl kernel.sem'
[Sat Apr 08 02:13:37 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
Python/2.4.3 configured -
- resuming normal operations
-------------------------------------------------------------------------

Any help ?

Thanx alot++++

   Stan.


From administrator at leebrown.org  Sat Apr  8 09:13:13 2006
From: administrator at leebrown.org (Lee Brown)
Date: Sat Apr  8 09:11:55 2006
Subject: [mod_python] win32 binaries of mod_python ?
Message-ID: <004401c65b0e$314ff030$0301a8c0@uberbox>

Greetings!

I just wanted to thank Nicolas Lehuen for kindly providing the Win32
binaries for 3.2.8

(I really ~ought~ to get a C compiler and learn how to use it one of these
days.)

Best Regards,
Lee E. Brown
(leebrown@leebrown.org)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060408/d91ee49e/attachment.html
From administrator at leebrown.org  Sat Apr  8 11:35:53 2006
From: administrator at leebrown.org (Lee Brown)
Date: Sat Apr  8 11:35:15 2006
Subject: [mod_python] Interesting Program Behavior
Message-ID: <005101c65b22$1f607a70$0301a8c0@uberbox>

Greetings!

Being a foolhardy sort, I just upgraded to Apache/2.0.55(Win32)
mod_python/3.2.8 Python/2.4.3 all at one whack.

The interesting part is that everything worked perfectly on the first try.
No fiddling around required.

Kudos to the Mod Python team!

Best Regards,
Lee E. Brown
(leebrown@leebrown.org)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060408/6fa34045/attachment.html
From trevor at thennion.demon.co.uk  Sat Apr  8 11:44:23 2006
From: trevor at thennion.demon.co.uk (Trevor Hennion)
Date: Sat Apr  8 11:46:53 2006
Subject: [mod_python] internal error again!
In-Reply-To: <20060408132842.2qnn71genko4wkwo@webmail.naeberg.org>
References: <20060408132842.2qnn71genko4wkwo@webmail.naeberg.org>
Message-ID: <4437DA57.4060707@thennion.demon.co.uk>

nemesis128@atarax.org wrote:
> Hello,
> 
> First i'd like to thank alll the people behind mod_python! =)
> 
> All worked fine for me with apache 1.3.
> Now i have installed apache 2 and i have that usual problem of Internal Server
> Error 500.
> 
> I've read all the faqs about it, nothing works.
> 
> Detailed:
> 
>  - Mandriva Linux 2006
>  - Compiled python 2.4.3
>  - Compiled apache 2.0.55
>  - mod python 3.2.8 (i even tried to compile it with the latest flex 2.5.33)
>  - i tried htaccess & httpd.conf directives
>  - with all examples given in the doc.
>  - i always get the same error log:
> 
> -------------------------------------------------------------------
> [Fri Apr 07 23:19:20 2006] [notice] mod_python: Creating 32 session mutexes
> based on 150 max processes and 0 max threads.
> [Fri Apr 07 23:19:20 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
> Python/2.4.3 configured -
> - resuming normal operations
> [Fri Apr 07 23:19:23 2006] [error] make_obcallback: could not import
> mod_python.apache.\n
> 'import site' failed; use -v for traceback
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> [Fri Apr 07 23:19:23 2006] [error] python_handler: no interpreter callback
> found.
> [Fri Apr 07 23:19:23 2006] [error] [client ::1] python_handler: Can't get/create
> interpreter., refe
> rer: http://localhost/%7Esm/
> ----------------------------------------------------------------------
> 
> Well, sys.path is OK too, but cannot import site (nor mod_python) !!
> 
> 
> I also get that kind of error on apache startup sometimes, and i just don't know
> if it has something to do with the problem explained above:
> 
> ----------------------------------------------------------------------
> [Sat Apr 08 02:13:37 2006] [notice] mod_python: Creating 32 session mutexes
> based on 150 max proces
> ses and 0 max threads.
> [Sat Apr 08 02:13:37 2006] [error] (28)No space left on device: mod_python:
> Failed to create global
>  mutex 21 of 32 (/tmp/mpmtx1145121).
> [Sat Apr 08 02:13:37 2006] [error] mod_python: We can probably continue, but
> with diminished abilit
> y to process session locks.
> [Sat Apr 08 02:13:37 2006] [error] mod_python: Hint: On Linux, the problem may
> be the number of ava
> ilable semaphores, check 'sysctl kernel.sem'
> [Sat Apr 08 02:13:37 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
> Python/2.4.3 configured -
> - resuming normal operations
> -------------------------------------------------------------------------
> 
Your gog extract shows:
No space left on device: mod_python:
Failed to create global


Regards
Trevor Hennion
http://www.infocentrality.co.uk
From jpg at jgassociates.ca  Sat Apr  8 12:25:18 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Apr  8 12:24:41 2006
Subject: [mod_python] internal error again!
In-Reply-To: <20060408132842.2qnn71genko4wkwo@webmail.naeberg.org>
References: <20060408132842.2qnn71genko4wkwo@webmail.naeberg.org>
Message-ID: <4437E3EE.8060209@jgassociates.ca>

nemesis128@atarax.org wrote:
> Hello,
> 
> First i'd like to thank alll the people behind mod_python! =)
> 
> All worked fine for me with apache 1.3.
> Now i have installed apache 2 and i have that usual problem of Internal Server
> Error 500.
> 
> I've read all the faqs about it, nothing works.
> 
> Detailed:
> 
>  - Mandriva Linux 2006
>  - Compiled python 2.4.3
>  - Compiled apache 2.0.55
>  - mod python 3.2.8 (i even tried to compile it with the latest flex 2.5.33)
>  - i tried htaccess & httpd.conf directives
>  - with all examples given in the doc.
>  - i always get the same error log:
> 
> -------------------------------------------------------------------
> [Fri Apr 07 23:19:20 2006] [notice] mod_python: Creating 32 session mutexes
> based on 150 max processes and 0 max threads.
> [Fri Apr 07 23:19:20 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
> Python/2.4.3 configured -
> - resuming normal operations
> [Fri Apr 07 23:19:23 2006] [error] make_obcallback: could not import
> mod_python.apache.\n
> 'import site' failed; use -v for traceback
> 'import site' failed; use -v for traceback
> ImportError: No module named mod_python.apache
> [Fri Apr 07 23:19:23 2006] [error] python_handler: no interpreter callback
> found.
> [Fri Apr 07 23:19:23 2006] [error] [client ::1] python_handler: Can't get/create
> interpreter., refe
> rer: http://localhost/%7Esm/
> ----------------------------------------------------------------------

Since you compiled your own python and apache, I going to assume that 
you have multiple versions of each on your system.

Quoting from Graham,
"Having multiple versions of Python available can often be a problem as
Apache/mod_python will attempt to use the one found in $PATH of user 
Apache is started as and not that which mod_python was compiled against. 
This can result in a unhealthy mix of stuff from different versions of 
Python being used."

> Well, sys.path is OK too, but cannot import site (nor mod_python) !!
> 
> 
> I also get that kind of error on apache startup sometimes, and i just don't know
> if it has something to do with the problem explained above:
> 
> ----------------------------------------------------------------------
> [Sat Apr 08 02:13:37 2006] [notice] mod_python: Creating 32 session mutexes
> based on 150 max proces
> ses and 0 max threads.
> [Sat Apr 08 02:13:37 2006] [error] (28)No space left on device: mod_python:
> Failed to create global
>  mutex 21 of 32 (/tmp/mpmtx1145121).
> [Sat Apr 08 02:13:37 2006] [error] mod_python: We can probably continue, but
> with diminished abilit
> y to process session locks.
> [Sat Apr 08 02:13:37 2006] [error] mod_python: Hint: On Linux, the problem may
> be the number of ava
> ilable semaphores, check 'sysctl kernel.sem'
> [Sat Apr 08 02:13:37 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
> Python/2.4.3 configured -
> - resuming normal operations
> -------------------------------------------------------------------------

This may be the result of Apache not shutting down cleanly. Normally it 
will remove the semaphores but if things are badly borked this may not 
happen. You can remove the dead semaphores by running the following 
command as root, subsituting the correct apache user for "apache-user":

localhost:~# ipcs -s | awk '/apache-user/ { system("ipcrm sem " $2) }'

Also, you likely don't need 32 mutexes. I'd stick with the default of 8 
until you've done some benchmarking to prove that you really do need 32.

Jim








From nemesis128 at atarax.org  Sat Apr  8 17:11:34 2006
From: nemesis128 at atarax.org (sm)
Date: Sat Apr  8 17:11:23 2006
Subject: [mod_python] internal error again!
In-Reply-To: <4437DA57.4060707@thennion.demon.co.uk>
References: <20060408132842.2qnn71genko4wkwo@webmail.naeberg.org>
	<4437DA57.4060707@thennion.demon.co.uk>
Message-ID: <20060408231134.d7eodu8qo0gwkgcs@webmail.naeberg.org>

Trevor Hennion <trevor@thennion.demon.co.uk> a ?crit :

> nemesis128@atarax.org wrote:
>> Hello,
>>
>> First i'd like to thank alll the people behind mod_python! =)
>>
>> All worked fine for me with apache 1.3.
>> Now i have installed apache 2 and i have that usual problem of 
>> Internal Server
>> Error 500.
>>
>> I've read all the faqs about it, nothing works.
>>
>> Detailed:
>>
>>  - Mandriva Linux 2006
>>  - Compiled python 2.4.3
>>  - Compiled apache 2.0.55
>>  - mod python 3.2.8 (i even tried to compile it with the latest flex 2.5.33)
>>  - i tried htaccess & httpd.conf directives
>>  - with all examples given in the doc.
>>  - i always get the same error log:
>>
>> -------------------------------------------------------------------
>> [Fri Apr 07 23:19:20 2006] [notice] mod_python: Creating 32 session mutexes
>> based on 150 max processes and 0 max threads.
>> [Fri Apr 07 23:19:20 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
>> Python/2.4.3 configured -
>> - resuming normal operations
>> [Fri Apr 07 23:19:23 2006] [error] make_obcallback: could not import
>> mod_python.apache.n
>> 'import site' failed; use -v for traceback
>> 'import site' failed; use -v for traceback
>> ImportError: No module named mod_python.apache
>> [Fri Apr 07 23:19:23 2006] [error] python_handler: no interpreter callback
>> found.
>> [Fri Apr 07 23:19:23 2006] [error] [client ::1] python_handler: 
>> Can't get/create
>> interpreter., refe
>> rer: http://localhost/%7Esm/
>> ----------------------------------------------------------------------
>>
>> Well, sys.path is OK too, but cannot import site (nor mod_python) !!
>>
>>
>> I also get that kind of error on apache startup sometimes, and i 
>> just don't know
>> if it has something to do with the problem explained above:
>>
>> ----------------------------------------------------------------------
>> [Sat Apr 08 02:13:37 2006] [notice] mod_python: Creating 32 session mutexes
>> based on 150 max proces
>> ses and 0 max threads.
>> [Sat Apr 08 02:13:37 2006] [error] (28)No space left on device: mod_python:
>> Failed to create global
>>  mutex 21 of 32 (/tmp/mpmtx1145121).
>> [Sat Apr 08 02:13:37 2006] [error] mod_python: We can probably continue, but
>> with diminished abilit
>> y to process session locks.
>> [Sat Apr 08 02:13:37 2006] [error] mod_python: Hint: On Linux, the 
>> problem may
>> be the number of ava
>> ilable semaphores, check 'sysctl kernel.sem'
>> [Sat Apr 08 02:13:37 2006] [notice] Apache/2.0.55 (Unix) mod_python/3.2.8
>> Python/2.4.3 configured -
>> - resuming normal operations
>> -------------------------------------------------------------------------
>>
> Your gog extract shows:
> No space left on device: mod_python:
> Failed to create global
>

Yep... How could I fix this ? please, any help is welcome (links etc)...

I have to say that the second error log shown above didn't happen at the
beginning. Does it have something to do with the '--with-max-locks' configure
directive? ...

+++Stan.





From stalker at telecom.ozersk.ru  Sun Apr  9 04:31:45 2006
From: stalker at telecom.ozersk.ru (Stanislav Ershov)
Date: Sun Apr  9 04:32:14 2006
Subject: [mod_python] re: win32 binaries of mod_python?
Message-ID: <4438C671.7050709@telecom.ozersk.ru>

 >Greetings!

 >I just wanted to thank Nicolas Lehuen for kindly providing the Win32
 >binaries for 3.2.8

 >(I really ~ought~ to get a C compiler and learn how to use it one of 
 >these
 >days.)

 >Best Regards,
 >Lee E. Brown
 >(leebrown@leebrown.org)

try this, 
http://download.nextag.com/apache/httpd/modpython/win/3.2.8/mod_python-3.2.8.win32-py2.4.exe
or other apache mirror
From cyberco at media2b.net  Sun Apr  9 17:55:22 2006
From: cyberco at media2b.net (cyberco)
Date: Sun Apr  9 17:55:25 2006
Subject: [mod_python] mod_python + apache + winxp => could not import
	mod_python.apache
In-Reply-To: <ca8dfa360604091454v371562b0h2d7085bfef1b49e6@mail.gmail.com>
References: <ca8dfa360604091342k4b5e023cvd292c9befed8bd8e@mail.gmail.com>
	<ca8dfa360604091454v371562b0h2d7085bfef1b49e6@mail.gmail.com>
Message-ID: <ca8dfa360604091455u2624e80bo61689c542f9a5ef7@mail.gmail.com>

  On my system:

=============
mod_python 3.2.8
apache 2.0.55
python2.4
winxp
=============

When I try to load a .py file I get the error:
==============
[Sun Apr 09 14:03:46 2006] [error] make_obcallback: could not import
mod_python.apache.\n
[Sun Apr 09 14:03:46 2006] [error] python_handler: no interpreter callback
found.
[Sun Apr 09 14:03:46 2006] [error] [client 192.168.2.100] python_handler:
Can't get/create interpreter., referer:
http://myserver/test/
==============

Jim Gallacher offered:
==============
This may happen when you have several different python versions installed on
your
system, and mod_python is trying to use the wrong one. If this is the
case, adjust the path that apache sees so that the correct python
appears first in the path.
==============

But.....
- I only have one version of Python installed
- From the Python interpreter I can import the mod_python module just fine
- At starup the Apache log states:
[Sun Apr 09 22:16:38 2006] [notice] Apache/2.0.55 (Win32) mod_python/3.2.5b
Python/2.4.2 configured -- resuming normal operations
[Sun Apr 09 22:16:38 2006] [notice] mod_python: Creating 8 session mutexes
based on 0 max processes and 250 max threads.

I added the following to my httpd.conf:
==============
LoadModule python_module modules/mod_python.so
<Directory "C:\Program Files\Apache Group\Apache2\htdocs\test">
  AddHandler mod_python .py
  PythonHandler mptest
  PythonDebug On
</Directory>
==============

where mptest.py contains:
==============
from mod_python import _apache
def handler(req):
    req.content_type = 'text/plain'
    req.write("Hello World!")
    return apache.OK
==============

I'm at a loss here. Any suggestions?

Thanks!
Berco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060409/417a492e/attachment.html
From jpg at jgassociates.ca  Sun Apr  9 18:32:41 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Apr  9 18:31:05 2006
Subject: [mod_python] mod_python + apache + winxp => could not import
	mod_python.apache
In-Reply-To: <ca8dfa360604091455u2624e80bo61689c542f9a5ef7@mail.gmail.com>
References: <ca8dfa360604091342k4b5e023cvd292c9befed8bd8e@mail.gmail.com>	<ca8dfa360604091454v371562b0h2d7085bfef1b49e6@mail.gmail.com>
	<ca8dfa360604091455u2624e80bo61689c542f9a5ef7@mail.gmail.com>
Message-ID: <44398B89.5020302@jgassociates.ca>

cyberco wrote:
>   On my system:
> 
> =============
> mod_python 3.2.8
> apache 2.0.55
> python2.4
> winxp
> =============
> 
> When I try to load a .py file I get the error:
> ==============
> [Sun Apr 09 14:03:46 2006] [error] make_obcallback: could not import
> mod_python.apache.\n
> [Sun Apr 09 14:03:46 2006] [error] python_handler: no interpreter callback
> found.
> [Sun Apr 09 14:03:46 2006] [error] [client 192.168.2.100] python_handler:
> Can't get/create interpreter., referer:
> http://myserver/test/
> ==============
> 
> Jim Gallacher offered:
> ==============
> This may happen when you have several different python versions installed on
> your
> system, and mod_python is trying to use the wrong one. If this is the
> case, adjust the path that apache sees so that the correct python
> appears first in the path.
> ==============
> 
> But.....
> - I only have one version of Python installed
> - From the Python interpreter I can import the mod_python module just fine
> - At starup the Apache log states:
> [Sun Apr 09 22:16:38 2006] [notice] Apache/2.0.55 (Win32) mod_python/3.2.5b
> Python/2.4.2 configured -- resuming normal operations
> [Sun Apr 09 22:16:38 2006] [notice] mod_python: Creating 8 session mutexes
> based on 0 max processes and 250 max threads.
> 
> I added the following to my httpd.conf:
> ==============
> LoadModule python_module modules/mod_python.so
> <Directory "C:\Program Files\Apache Group\Apache2\htdocs\test">
>   AddHandler mod_python .py
>   PythonHandler mptest
>   PythonDebug On
> </Directory>
> ==============
> 
> where mptest.py contains:
> ==============
> from mod_python import _apache
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write("Hello World!")
>     return apache.OK
> ==============
> 
> I'm at a loss here. Any suggestions?
> 

It may just be a typo in your message, and even if not it may not be 
significant, but I notice that you say you are using mod_python 3.2.8 
but the apache log is showing version 3.2.5b. It might be worth 
investigating.

Jim

From jayed at meangrape.com  Sun Apr  9 19:47:37 2006
From: jayed at meangrape.com (Jay)
Date: Sun Apr  9 19:47:42 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly rendering of
	latex in html
Message-ID: <20060409234737.GI7883@mail.meangrape.com>


Hi,

I've spent a lot of time in the past embedding latex into HTML pages.
All of the solutions I've come across fall short in one way or 
another.

I've spent the last few days knocking together a little mod_python
app that utilizes memcached to do as-needed rendering of latex
embedded in HTML.

If anyone is interested, feel free to take a look and send comments.

http://www.meangrape.com/htmlatex

Thanks!

Jay.
From grahamd at dscpl.com.au  Sun Apr  9 20:07:03 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  9 20:07:07 2006
Subject: [mod_python] mod_python + apache + winxp => could not
	importmod_python.apache
Message-ID: <1144627623.18582@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> cyberco wrote:
> >   On my system:
> > 
> > =============
> > mod_python 3.2.8
> > apache 2.0.55
> > python2.4
> > winxp
> > =============
>
> ...
>
> > - At starup the Apache log states:
> > [Sun Apr 09 22:16:38 2006] [notice] Apache/2.0.55 (Win32) mod_python/3.2.5b
> > Python/2.4.2 configured -- resuming normal operations
> 
> It may just be a typo in your message, and even if not it may not be 
> significant, but I notice that you say you are using mod_python 3.2.8 
> but the apache log is showing version 3.2.5b. It might be worth 
> investigating.

As a start for some internal self debugging by mod_python, how about
we make the following change:

Index: src/mod_python.c
===================================================================
--- src/mod_python.c    (revision 392846)
+++ src/mod_python.c    (working copy)
@@ -575,6 +575,9 @@
     const char *userdata_key = "python_init";
     apr_status_t rc;
 
+    const char *py_compile_version = PY_VERSION;
+    const char *py_dynamic_version = 0;
+
     /* The "initialized" flag is a fudge for Mac OS X. It
      * addresses two issues. The first is that when an Apache
      * "restart" is performed, Apache will unload the mod_python
@@ -599,9 +602,17 @@
 
     /* mod_python version */
     ap_add_version_component(p, VERSION_COMPONENT);
-    
+
+    py_dynamic_version = strtok((char *)Py_GetVersion(), " ");
+
+    if (strcmp(py_compile_version, py_dynamic_version) != 0) {
+        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
+                     "python_init: Version mismatch, expected %s, found %s.",
+                     py_compile_version, py_dynamic_version);
+    }
+
     /* Python version */
-    sprintf(buff, "Python/%.200s", strtok((char *)Py_GetVersion(), " "));
+    sprintf(buff, "Python/%.200s", py_dynamic_version);
     ap_add_version_component(p, buff);
 
     /* cache main server */

Will this work, reliably across Python on different platforms? I think
it should as long as PyGetVersion() implementation hasn't changed
at some point.

There are some other points in code where other checks or debug
could be output. For example, if mod_python Python modules can't
be found, then dumpy out sys.path.

Even for the above, would be nice to dump out where Python thinks
it lives when such a mismatch occurs, as would highlight where
wrong version is coming from. Just need to work out a good way
of determining this, may need to wait until after Python has been
initialised though.

Graham
From grahamd at dscpl.com.au  Sun Apr  9 20:28:53 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  9 20:29:06 2006
Subject: [mod_python] mod_python + apache + winxp => could
	notimportmod_python.apache
Message-ID: <1144628933.32182@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> As a start for some internal self debugging by mod_python, how about
> we make the following change:
> 
> Index: src/mod_python.c
> ===================================================================
> --- src/mod_python.c    (revision 392846)
> +++ src/mod_python.c    (working copy)
> @@ -575,6 +575,9 @@
>      const char *userdata_key = "python_init";
>      apr_status_t rc;
>  
> +    const char *py_compile_version = PY_VERSION;
> +    const char *py_dynamic_version = 0;
> +
>      /* The "initialized" flag is a fudge for Mac OS X. It
>       * addresses two issues. The first is that when an Apache
>       * "restart" is performed, Apache will unload the mod_python
> @@ -599,9 +602,17 @@
>  
>      /* mod_python version */
>      ap_add_version_component(p, VERSION_COMPONENT);
> -    
> +
> +    py_dynamic_version = strtok((char *)Py_GetVersion(), " ");
> +
> +    if (strcmp(py_compile_version, py_dynamic_version) != 0) {
> +        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
> +                     "python_init: Version mismatch, expected %s, found
> %s.",
> +                     py_compile_version, py_dynamic_version);
> +    }
> +
>      /* Python version */
> -    sprintf(buff, "Python/%.200s", strtok((char *)Py_GetVersion(), " "));
> +    sprintf(buff, "Python/%.200s", py_dynamic_version);
>      ap_add_version_component(p, buff);
>  
>      /* cache main server */
> 
> Will this work, reliably across Python on different platforms? I think
> it should as long as PyGetVersion() implementation hasn't changed
> at some point.
> 
> There are some other points in code where other checks or debug
> could be output. For example, if mod_python Python modules can't
> be found, then dumpy out sys.path.
> 
> Even for the above, would be nice to dump out where Python thinks
> it lives when such a mismatch occurs, as would highlight where
> wrong version is coming from. Just need to work out a good way
> of determining this, may need to wait until after Python has been
> initialised though.

Here is a better version. If it fails on version match, will dump out:

[Mon Apr 10 10:24:02 2006] [error] python_init: Version mismatch, expected 2.3.5, found 2.3.
[Mon Apr 10 10:24:02 2006] [error] python_init: Executable '/usr/bin/python'.
[Mon Apr 10 10:24:02 2006] [error] python_init: Using Path '/Users/grahamd/lib/python:/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python23.zip:/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/:/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/plat-darwin:/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/plat-mac:/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/plat-mac/lib-scriptpackages:/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/lib-tk:/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/lib-dynload'.

Patch is as follows. The question is, should mod_python output both
these values all the time?

Index: src/mod_python.c
===================================================================
--- src/mod_python.c    (revision 392846)
+++ src/mod_python.c    (working copy)
@@ -575,6 +575,9 @@
     const char *userdata_key = "python_init";
     apr_status_t rc;
 
+    const char *py_compile_version = PY_VERSION;
+    const char *py_dynamic_version = 0;
+
     /* The "initialized" flag is a fudge for Mac OS X. It
      * addresses two issues. The first is that when an Apache
      * "restart" is performed, Apache will unload the mod_python
@@ -599,9 +602,23 @@
 
     /* mod_python version */
     ap_add_version_component(p, VERSION_COMPONENT);
-    
+
+    py_dynamic_version = strtok((char *)Py_GetVersion(), " ");
+
+    if (strcmp(py_compile_version, py_dynamic_version) != 0) {
+        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
+                     "python_init: Version mismatch, expected %s, found %s.",
+                     py_compile_version, py_dynamic_version);
+        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
+                     "python_init: Executable '%s'.",
+                     Py_GetProgramFullPath());
+        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 0, s,
+                     "python_init: Using Path '%s'.",
+                     Py_GetPath());
+    }
+
     /* Python version */
-    sprintf(buff, "Python/%.200s", strtok((char *)Py_GetVersion(), " "));
+    sprintf(buff, "Python/%.200s", py_dynamic_version);
     ap_add_version_component(p, buff);
 
     /* cache main server */


Graham

From grahamd at dscpl.com.au  Sun Apr  9 20:41:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  9 20:41:22 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly rendering
	oflatex in html
Message-ID: <1144629677.6956@dscpl.user.openhosting.com>

Jay wrote ..
> 
> Hi,
> 
> I've spent a lot of time in the past embedding latex into HTML pages.
> All of the solutions I've come across fall short in one way or 
> another.
> 
> I've spent the last few days knocking together a little mod_python
> app that utilizes memcached to do as-needed rendering of latex
> embedded in HTML.
> 
> If anyone is interested, feel free to take a look and send comments.
> 
> http://www.meangrape.com/htmlatex

Cute. Nice to see someone actually using output filters for something.

BTW, you say:

  With this setting, htmlatex filters all outgoing html that end in .htmlx.  I'd
  like to have it handle .html files, but right now, it chokes on plain HTML
  without any equations.  More mod_python study is needed.

In what way does it choke on HTML with no LaTeX elements? Is this really
a mod_python issue as your line about more mod_python study being
required seems to suggest?

Graham
From jayed at meangrape.com  Sun Apr  9 20:55:29 2006
From: jayed at meangrape.com (Jay)
Date: Sun Apr  9 20:55:34 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly rendering
	oflatex in html
In-Reply-To: <1144629677.6956@dscpl.user.openhosting.com>
References: <1144629677.6956@dscpl.user.openhosting.com>
Message-ID: <20060410005529.GJ7883@mail.meangrape.com>

On Sun, Apr 09, 2006 at 08:41:17PM -0400, Graham Dumpleton wrote:
> Cute. Nice to see someone actually using output filters for something.

When I ran across output filters, I thought to myself -- "this is what
I've been looking for".

> 
> BTW, you say:
> 
>   With this setting, htmlatex filters all outgoing html that end in .htmlx.  I'd
>   like to have it handle .html files, but right now, it chokes on plain HTML
>   without any equations.  More mod_python study is needed.
> 
> In what way does it choke on HTML with no LaTeX elements? Is this really
> a mod_python issue as your line about more mod_python study being
> required seems to suggest?

The original setup was:

PythonOutputFilter	htmlatex	HTMLATEX
AddOutputFilter		HTMLATEX	.html

HTML files with latex worked fine.  The symptoms stayed the same
after bouncing the server so it probably wasn't some quirk.
A plain old HTML file (http://www.meangrape.com/htmlatex/index.html
for instance) caused the following error:

[error] [client 209.223.7.161] htmlatex
htmlatex: Traceback (most recent call last):, referer:
http://www.meangrape.com/

[error] [client 209.223.7.161] htmlatex
htmlatex:   File
"/usr/lib/python2.3/site-packages/mod_python/apache.py", line 187, in
FilterDispatch\n    object(filter), referer: http://www.meangrape.com/

[error] [client 209.223.7.161] htmlatex
htmlatex:   File "/var/www/python/htmlatex/htmlatex.py", line 107, in
outputfilter\n    filter.write(main(temp_doc)), referer:
http://www.meangrape.com/

[error] [client 209.223.7.161] htmlatex
htmlatex: TypeError: Argument to write() must be a string, referer:
http://www.meangrape.com/

The applicable code is:

    if not hasattr(filter.req,'temp_doc'): 
        filter.req.temp_doc = []
	# If content-length ended up wrong, Gecko browsers truncated
	# data
	if "Content-Length" in filter.req.headers_out:
	    del filter.req.headers_out["Content-Length"]
	temp_doc = filter.req.temp_doc

	s = filter.read()
	while s:
	   temp_doc.append(s)
	   s = filter.read()

    if s is None:
        temp_doc = ''.join(temp_doc)
-->     filter.write(main(temp_doc))
        filter.close()

I'm quite inclined to believe that I've something misconfigured, or my
code is weak. I highly doubt that it's a mod_python problem per se.

Jay.
From grahamd at dscpl.com.au  Sun Apr  9 21:02:11 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  9 21:02:17 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly rendering
	oflatex in html
Message-ID: <1144630931.20116@dscpl.user.openhosting.com>

Jay wrote ..
>     if s is None:
>         temp_doc = ''.join(temp_doc)
> -->     filter.write(main(temp_doc))
>         filter.close()
> 
> I'm quite inclined to believe that I've something misconfigured, or my
> code is weak. I highly doubt that it's a mod_python problem per se.

Change the main() function:

def main(data):
    """
    Get the latex source; return a raw string for the webserver to send to the client
    
    Take the outgoing HTML and turn it into a python object.  Search the object for the
    <div> and <span> tags that indicate latex source -- the tags we can handle are given
    in the global variable TYPES.  If there isn't anything to handle, return.  If there is, 
    process it and return a pretty-ied raw string of HTML for the webserver to send to the client.
    
    Notes:  A working directory must be set via os.chdir so latex knows where to put its output
    """
    if not os.path.isdir(TEMPDIR):
        os.mkdir(TEMPDIR, 0755)
    os.chdir(TEMPDIR)
    soup = BeautifulSoup(data)
    equations = soup.fetch(TYPES)
    if not equations:
        # return
        return data # <--------------------------------------

In other words, if there are no embedded equations, return the original
page content as is.

Graham


From grahamd at dscpl.com.au  Sun Apr  9 21:07:25 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  9 21:07:36 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly rendering
	oflatex in html
Message-ID: <1144631245.23271@dscpl.user.openhosting.com>

Jay wrote ..
> 
> Hi,
> 
> I've spent a lot of time in the past embedding latex into HTML pages.
> All of the solutions I've come across fall short in one way or 
> another.
> 
> I've spent the last few days knocking together a little mod_python
> app that utilizes memcached to do as-needed rendering of latex
> embedded in HTML.
> 
> If anyone is interested, feel free to take a look and send comments.
> 
> http://www.meangrape.com/htmlatex

BTW, change:

	<Location /your/directory>
		PythonPath ['/var/www/python/htmlatex']+sys.path
		PythonDebug Off
		PythonOutputFilter htmlatex HTMLATEX
		AddOutputFilter HTMLATEX .htmlx
	</Location>


to:

	<Location /your/directory>
		PythonPath ['/var/www/python/htmlatex']+sys.path
		PythonDebug Off
		PythonOutputFilter htmlatex HTMLATEX
		AddOutputFilter HTMLATEX;CONTENT_LENGTH .htmlx
	</Location>

and you will get correct amended content length header added back in.

This works because you buffer up data and write it in one go. Thus the
CONTENT_LENGTH output filter is able to recalculate content length
for you.

You could also have added it yourself by going:

    if s is None:
        temp_doc = ''.join(temp_doc)
        data = main(temp_doc)
        filter.req.set_content_length(len(data))
        filter.write(data)
        filter.close()	

Graham
From grahamd at dscpl.com.au  Sun Apr  9 21:14:53 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr  9 21:14:55 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly
	renderingoflatex in html
Message-ID: <1144631693.27861@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Jay wrote ..
> > 
> > Hi,
> > 
> > I've spent a lot of time in the past embedding latex into HTML pages.
> > All of the solutions I've come across fall short in one way or 
> > another.
> > 
> > I've spent the last few days knocking together a little mod_python
> > app that utilizes memcached to do as-needed rendering of latex
> > embedded in HTML.
> > 
> > If anyone is interested, feel free to take a look and send comments.
> > 
> > http://www.meangrape.com/htmlatex
> 
> BTW, change:
> 
> 	<Location /your/directory>
> 		PythonPath ['/var/www/python/htmlatex']+sys.path
> 		PythonDebug Off
> 		PythonOutputFilter htmlatex HTMLATEX
> 		AddOutputFilter HTMLATEX .htmlx
> 	</Location>
> 
> 
> to:
> 
> 	<Location /your/directory>
> 		PythonPath ['/var/www/python/htmlatex']+sys.path
> 		PythonDebug Off
> 		PythonOutputFilter htmlatex HTMLATEX
> 		AddOutputFilter HTMLATEX;CONTENT_LENGTH .htmlx
> 	</Location>
> 
> and you will get correct amended content length header added back in.
> 
> This works because you buffer up data and write it in one go. Thus the
> CONTENT_LENGTH output filter is able to recalculate content length
> for you.
> 
> You could also have added it yourself by going:
> 
>     if s is None:
>         temp_doc = ''.join(temp_doc)
>         data = main(temp_doc)
>         filter.req.set_content_length(len(data))
>         filter.write(data)
>         filter.close()	

Hmmm, writing the content length yourself may not work as the following
article suggests.

  http://www.debianhelp.co.uk/apachead.htm

Given that the naming of stuff in that example is much like your code, I
would hazard to guess though you may have used it as a guide to doing
your own.

Using the "CONTENT_LENGTH" output filter should work though.

Graham
From jayed at meangrape.com  Sun Apr  9 21:16:12 2006
From: jayed at meangrape.com (Jay)
Date: Sun Apr  9 21:16:21 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly rendering
	oflatex in html
In-Reply-To: <1144630931.20116@dscpl.user.openhosting.com>
References: <1144630931.20116@dscpl.user.openhosting.com>
Message-ID: <20060410011612.GK7883@mail.meangrape.com>

On Sun, Apr 09, 2006 at 09:02:11PM -0400, Graham Dumpleton wrote:
>     """
>     if not os.path.isdir(TEMPDIR):
>         os.mkdir(TEMPDIR, 0755)
>     os.chdir(TEMPDIR)
>     soup = BeautifulSoup(data)
>     equations = soup.fetch(TYPES)
>     if not equations:
>         # return
>         return data # <--------------------------------------
> 
> In other words, if there are no embedded equations, return the original
> page content as is.

That makes perfect sense, Graham.  As does the content-length tip.
Thanks!

--
Jay.
From jayed at meangrape.com  Sun Apr  9 21:23:49 2006
From: jayed at meangrape.com (Jay)
Date: Sun Apr  9 21:23:58 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly
	renderingoflatex in html
In-Reply-To: <1144631693.27861@dscpl.user.openhosting.com>
References: <1144631693.27861@dscpl.user.openhosting.com>
Message-ID: <20060410012349.GL7883@mail.meangrape.com>

On Sun, Apr 09, 2006 at 09:14:53PM -0400, Graham Dumpleton wrote:
> Graham Dumpleton wrote ..
> 
> Hmmm, writing the content length yourself may not work as the following
> article suggests.
> 
>   http://www.debianhelp.co.uk/apachead.htm
> 
> Given that the naming of stuff in that example is much like your code, I
> would hazard to guess though you may have used it as a guide to doing
> your own.

Guide? Rather "stole shamelessly".

> Using the "CONTENT_LENGTH" output filter should work though.

I'll give it a whirl.

--
Jay.

From nlv11281 at natlab.research.philips.com  Mon Apr 10 01:43:37 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Apr 10 01:43:46 2006
Subject: [mod_python] Using _global_lock in scripts
In-Reply-To: <35ac89bd0604071158w41ff28et9b3d1f55847e0a16@mail.gmail.com>
References: <35ac89bd0604071158w41ff28et9b3d1f55847e0a16@mail.gmail.com>
Message-ID: <4439F089.5040501@natlab.research.philips.com>

> 2. If it is not reasonable, what suggestions do you have for
> implementing concurrent access to a resource from (potentially)
> multiple interpreters and/or child processes?

Run a worker process that manages the resource. Use some form of RPC and 
IPC to communicate with that process. For many things, you can get way 
with using a UNIX or TCP socket, sending a request as a pickled Python 
object (I tend to pickle dictionaries) and getting a response in the 
same way.

The worker process can either run single threaded using a select(), or 
use some standard mutexing to serialize access to your resource.

It would help a lot to know what the mysterious "resource" you want to 
manage is.

From jayed at meangrape.com  Mon Apr 10 02:54:13 2006
From: jayed at meangrape.com (Jay)
Date: Mon Apr 10 02:54:22 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly
	renderingoflatex in html
In-Reply-To: <1144631693.27861@dscpl.user.openhosting.com>
References: <1144631693.27861@dscpl.user.openhosting.com>
Message-ID: <20060410065413.GM7883@mail.meangrape.com>


One quick question about content-length...

On Sun, Apr 09, 2006 at 09:14:53PM -0400, Graham Dumpleton wrote:
> Graham Dumpleton wrote ..
> > 	<Location /your/directory>
> > 		PythonPath ['/var/www/python/htmlatex']+sys.path
> > 		PythonDebug Off
> > 		PythonOutputFilter htmlatex HTMLATEX
> > 		AddOutputFilter HTMLATEX;CONTENT_LENGTH .htmlx
> > 	</Location>
> > 
> > and you will get correct amended content length header added back in.
> > 
> > This works because you buffer up data and write it in one go. Thus the
> > CONTENT_LENGTH output filter is able to recalculate content length
> > for you.

> Using the "CONTENT_LENGTH" output filter should work though.

OK, CONTENT_LENGTH works great for htmlx files.  Now what I'd like to do
is just have the output filter handle all html files by doing
	AddOutputFilter HTMLATEX;CONTENT_LENGTH .html

It works peachy keen for html files that, hah, contain equations.
Normal HTML files provide erratic content-length headers and stall
the browser out.  My first thought was to store the original content
length and if a filter.req didn't have any equations, to restore it
manually.  Then I remembered the "well, we tried it and it didn't work"
comments from the debianUK site.  (I'll stil give it a whirl later,
though).

Any suggestions?  Does the *order* of the AddOutputFilter arguments make
a difference?  Is HTMLATEX;CONTENT_LENGTH different from
CONTENT_LENGTH;HTMLATEX? (My guess is that it is different, but one can
never tell).

Anyway, I've done a fairly substantial rewrite (insomuch as something
with only 250 lines can be referred to as 'substantial') so if you want
to take a gander at the code, it's at
http://www.meangrape.com/htmlatex/src/htmlatex.py

--
Jay.


From grahamd at dscpl.com.au  Mon Apr 10 06:01:43 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 10 06:02:12 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly
	renderingoflatex in html
In-Reply-To: <20060410065413.GM7883@mail.meangrape.com>
References: <1144631693.27861@dscpl.user.openhosting.com>
	<20060410065413.GM7883@mail.meangrape.com>
Message-ID: <08AF9B44-8F1E-4651-BC9E-29A9EA2D59D3@dscpl.com.au>


On 10/04/2006, at 4:54 PM, Jay wrote:

>
> One quick question about content-length...
>
> On Sun, Apr 09, 2006 at 09:14:53PM -0400, Graham Dumpleton wrote:
>> Graham Dumpleton wrote ..
>>> 	<Location /your/directory>
>>> 		PythonPath ['/var/www/python/htmlatex']+sys.path
>>> 		PythonDebug Off
>>> 		PythonOutputFilter htmlatex HTMLATEX
>>> 		AddOutputFilter HTMLATEX;CONTENT_LENGTH .htmlx
>>> 	</Location>
>>>
>>> and you will get correct amended content length header added back  
>>> in.
>>>
>>> This works because you buffer up data and write it in one go.  
>>> Thus the
>>> CONTENT_LENGTH output filter is able to recalculate content length
>>> for you.
>
>> Using the "CONTENT_LENGTH" output filter should work though.
>
> OK, CONTENT_LENGTH works great for htmlx files.  Now what I'd like  
> to do
> is just have the output filter handle all html files by doing
> 	AddOutputFilter HTMLATEX;CONTENT_LENGTH .html
>
> It works peachy keen for html files that, hah, contain equations.
> Normal HTML files provide erratic content-length headers and stall
> the browser out.  My first thought was to store the original content
> length and if a filter.req didn't have any equations, to restore it
> manually.  Then I remembered the "well, we tried it and it didn't  
> work"
> comments from the debianUK site.  (I'll stil give it a whirl later,
> though).

I don't quite understand why req.set_content_length() wouldn't work as
long as it is called before the first call of filter.write(). After  
all, the
CONTENT_LENGTH filter works by doing the same thing. I would
highly recommend though that you upgrade to mod_python 3.2.8
if you are still using 3.1.2 as mentioned in your README.

I would be interested to hear what happens when you log to the Apache
log file the content length before calling main() and compare that to
that produced by CONTENT_LENGTH filter for same file.

If there are no embedded equations and it comes up with different
values, then something is definitely amiss.

Don't forget though that your code has:

     if not equations:
         output = StringIO(soup.prettify())
         output = output.getvalue()
         return output.strip()

That is, when no equations you are stripping white space from ends, so
make sure you take length at correct point.

> Any suggestions?  Does the *order* of the AddOutputFilter arguments  
> make
> a difference?  Is HTMLATEX;CONTENT_LENGTH different from
> CONTENT_LENGTH;HTMLATEX? (My guess is that it is different, but one  
> can
> never tell).

Yes, order is very important. Data will pass through filters in order  
listed.

Please let us know what you work out.

Graham
From administrator at leebrown.org  Mon Apr 10 08:08:54 2006
From: administrator at leebrown.org (Lee Brown)
Date: Mon Apr 10 08:07:22 2006
Subject: [mod_python] Speaking of Output Filters....
Message-ID: <006e01c65c97$89e23c00$0301a8c0@uberbox>

Greetings!

I am probably remiss for not having shared this before now.  Here are two
output filters for mod_python that I have developed.

The first filter, xsltfilter.py, transforms XML into XHTML (or whatever else
you may desire) via an XSLT template.  The second filter, xincludefilter.py,
processes xinclude elements imbedded in XHTML.  Both are meant as a simple
means of providing "quasi-dynamic" web content.  Benchmarks on my hardware
show throughputs of 100 to 500+ pages per second using these filters.

Dependencies:
lxml:  an ElemenTree-like binding for the libxml2/libxslt libraries (see
http://www.codespeak.net/lxml)

In the "main" Apache config:

AddHandler mod_python .py
PythonPath " ...(as needed)... "
PythonOutputFilter xsltfilter XSLTFILTER
PythonOutputFilter xincludefilter XINCLUDEFILTER

In the appropriate Apache VHOST section:

AddType text/html .xml .xhtml

<Directory " .(as needed). ">
	AddOutputFilter XSLTFILTER .xml
	AddOutputFilter XINCLUDEFILTER .xhtml
	..
</Directory>

File xsltfilter.py:  (Note - Could probably stand some refactoring)

from mod_python import apache
import lxml.etree
from cStringIO import StringIO

xsltfile = open('/path/to/my/template.xslt', 'rU')
xsltstring = xsltfile.read()
xsltfile.close()

styledoc = lxml.etree.parse(StringIO(xsltstring))
transformer = lxml.etree.XSLT(styledoc)

def outputfilter (filter):
    xmlstring = filter.read()
    doc = lxml.etree.parse(StringIO(xmlstring))
    doc.xinclude()
    result = str(transformer(doc))
    filter.write(result)
    filter.close()

File xincludefilter.py:  (Note - Could probabaly stand some refactoring)

from mod_python import apache
import lxml.etree
from cStringIO import StringIO

xsltstring = """<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" 
  xmlns="http://www.w3.org/1999/xhtml" 
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  
  <xsl:output method="xml" version="1.0" encoding="ISO-8859-1" 
    indent="yes" omit-xml-declaration="yes" 
    doctype-public="-//W3C//DTD xhtml 1.0 Strict//EN" 
    doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"/>
  
  <xsl:template match="/">
    <xsl:apply-templates select="@*|node()"/>
  </xsl:template>

  <xsl:template match="@*|node()">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>

</xsl:stylesheet>
"""

styledoc = lxml.etree.parse(StringIO(xsltstring))
transformer = lxml.etree.XSLT(styledoc)

def outputfilter (filter):
    xmlstring = filter.read()
    doc = lxml.etree.parse(StringIO(xmlstring))
    doc.xinclude()
    result = str(transformer(doc))
    filter.write(result)
    filter.close()

Best Regards,
Lee E. Brown
(leebrown@leebrown.org)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060410/330343b8/attachment-0001.html
From jayed at meangrape.com  Mon Apr 10 08:58:25 2006
From: jayed at meangrape.com (Jay)
Date: Mon Apr 10 08:58:36 2006
Subject: [mod_python] mod_python / memcahced for on-the-fly
	renderingoflatex in html
In-Reply-To: <08AF9B44-8F1E-4651-BC9E-29A9EA2D59D3@dscpl.com.au>
References: <1144631693.27861@dscpl.user.openhosting.com>
	<20060410065413.GM7883@mail.meangrape.com>
	<08AF9B44-8F1E-4651-BC9E-29A9EA2D59D3@dscpl.com.au>
Message-ID: <20060410125825.GO7883@mail.meangrape.com>

On Mon, Apr 10, 2006 at 08:01:43PM +1000, Graham Dumpleton wrote:
> I don't quite understand why req.set_content_length() wouldn't work as
> long as it is called before the first call of filter.write(). After  
> all, the
> CONTENT_LENGTH filter works by doing the same thing. 

Actually, having tried it now, it seems to work.

> I would
> highly recommend though that you upgrade to mod_python 3.2.8
> if you are still using 3.1.2 as mentioned in your README.

It's on the list to do this week.

> Please let us know what you work out.

I can return the length and the data in both cases and it works fine.
	if not equations:
     		length = len(data)
     		return length, data

	if equations:
    		[...munge the parse-tree-object into a string...]
    		length = len(parse-tree-object-string)
    		return length, parse-tree-object-string

I can not return the length in both cases and not use the CONTENT_LENGTH
filter, and it works fine.
	if not equations:
		return data
	if equations:
		return munged-data

If I try to use the CONTENT_LENGTH filter and set the length manually,
it doesn't work.
	if not equations:
		return length, data
	if equations:
		return munged-data    (<--- no length)

At this point, I no longer have the slightest clue what the code that
had the original problem looked like, and I'm too tired to dig around in
subversion to find it. Right now the problem looks to be fixed; I'll
keep poking at it to see how I can make it break if I find the time.

Thanks for all your help.

--
Jay.



From androdol at yandex.ru  Mon Apr 10 10:12:39 2006
From: androdol at yandex.ru (=?windows-1251?Q?=C0=ED=E4=F0=E5=E9_=C4=EE=EB=E8=ED?=)
Date: Mon Apr 10 10:28:16 2006
Subject: [mod_python] When I try to use include directive an SyntaxError
	error occurs
Message-ID: <814584931.20060410191239@yandex.ru>

Salut, everybody.

When I try to use include directive an SyntaxError error occurs.
For example:

Mod_python error: "PythonHandler index::index"

Traceback (most recent call last):

  File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/home/mik/proj/python/pysite01/htdocs/index.py", line 8, in index
    template = psp.PSP(req, filename)

  File "/usr/local/lib/python2.4/site-packages/mod_python/psp.py", line 111, in __init__
    self.load_from_file()

  File "/usr/local/lib/python2.4/site-packages/mod_python/psp.py", line 179, in load_from_file
    code = compile(source, filename, "exec")

  File "/home/mik/proj/python/pysite01/htdocs/tst3.psp", line 8

    req.write("""
""",0); include file="tst4.psp";req.write("""

                 
                   ^

SyntaxError: invalid syntax


index.py content:

#
# there's some stuff here that the handler doesn't actually use....

from mod_python import apache, psp, util, Cookie, Session

def index(req):
    filename = "tst3.psp"
    template = psp.PSP(req, filename)
    return apache.OK


tst3.psp content:

<html>
<%
import time
%>
Hello world, the time is: <%=time.strftime("%Y-%m-%d, %H:%M:%S")%><br>
<%
%>
<% include file="tst4.psp"%>
</html>

tst4.psp content:

hello from tst4.psp

Apache config:
Alias /pysite01 "/home/mik/proj/python/pysite01/htdocs"
<Directory "/home/mik/proj/python/pysite01/htdocs">
    SetHandler mod_python
    PythonHandler index:index
    PythonPath "sys.path + ['/home/mik/proj/python/pysite01/htdocs']"
    PythonDebug On

    Order Deny,Allow
    Allow From All
</Directory>

system: FreeBSD 5.4, Apache 2.0.55, mod_python 3.2.8


I wonder why the error occurs.

---
Mik

From jpg at jgassociates.ca  Mon Apr 10 10:38:29 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Apr 10 10:37:45 2006
Subject: [mod_python] When I try to use include directive an SyntaxError
	error occurs
In-Reply-To: <814584931.20060410191239@yandex.ru>
References: <814584931.20060410191239@yandex.ru>
Message-ID: <443A6DE5.80106@jgassociates.ca>

?????? ????? wrote:
> Salut, everybody.
> 
> When I try to use include directive an SyntaxError error occurs.
> For example:
> 
> Mod_python error: "PythonHandler index::index"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/home/mik/proj/python/pysite01/htdocs/index.py", line 8, in index
>     template = psp.PSP(req, filename)
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/psp.py", line 111, in __init__
>     self.load_from_file()
> 
>   File "/usr/local/lib/python2.4/site-packages/mod_python/psp.py", line 179, in load_from_file
>     code = compile(source, filename, "exec")
> 
>   File "/home/mik/proj/python/pysite01/htdocs/tst3.psp", line 8
> 
>     req.write("""
> """,0); include file="tst4.psp";req.write("""
> 
>                  
>                    ^
> 
> SyntaxError: invalid syntax
> 
> 
> index.py content:
> 
> #
> # there's some stuff here that the handler doesn't actually use....
> 
> from mod_python import apache, psp, util, Cookie, Session
> 
> def index(req):
>     filename = "tst3.psp"
>     template = psp.PSP(req, filename)
>     return apache.OK
> 
> 
> tst3.psp content:
> 
> <html>
> <%
> import time
> %>
> Hello world, the time is: <%=time.strftime("%Y-%m-%d, %H:%M:%S")%><br>
> <%
> %>
> <% include file="tst4.psp"%>

Missing '@' perhaps?

<%@ include file="tst4.psp"%>
^^^

Jim

From nick at dd.revealed.net  Mon Apr 10 10:40:28 2006
From: nick at dd.revealed.net (Nick)
Date: Mon Apr 10 10:40:35 2006
Subject: [mod_python] Speaking of Output Filters....
In-Reply-To: <006e01c65c97$89e23c00$0301a8c0@uberbox>
References: <006e01c65c97$89e23c00$0301a8c0@uberbox>
Message-ID: <443A6E5C.5030301@dd.revealed.net>

Sounds pretty cool... I haven't looked at the library modules you
referenced, but is it possible to create XSLT extension functions in Python
that your stylesheet can reference?

Thanks,
Nick

Lee Brown wrote:
> 
> 
> Greetings!
> 
> I am probably remiss for not having shared this before now.  Here are
> two output filters for mod_python that I have developed.
> 
> The first filter, xsltfilter.py, transforms XML into XHTML (or whatever
> else you may desire) via an XSLT template.  The second filter,
> xincludefilter.py, processes xinclude elements imbedded in XHTML.  Both
> are meant as a simple means of providing "quasi-dynamic" web content. 
> Benchmarks on my hardware show throughputs of 100 to 500+ pages per
> second using these filters.
> 
> Dependencies:
> lxml:  an ElemenTree-like binding for the libxml2/libxslt libraries (see
> http://www.codespeak.net/lxml <http://www.codespeak.net/lxml> )

[code and examples deleted]
From jpg at jgassociates.ca  Mon Apr 10 11:08:00 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Apr 10 11:07:11 2006
Subject: [mod_python] mod_python + apache + winxp => could not import
	mod_python.apache
In-Reply-To: <ca8dfa360604091455u2624e80bo61689c542f9a5ef7@mail.gmail.com>
References: <ca8dfa360604091342k4b5e023cvd292c9befed8bd8e@mail.gmail.com>	<ca8dfa360604091454v371562b0h2d7085bfef1b49e6@mail.gmail.com>
	<ca8dfa360604091455u2624e80bo61689c542f9a5ef7@mail.gmail.com>
Message-ID: <443A74D0.30007@jgassociates.ca>

cyberco wrote:
>   On my system:
> 
> =============
> mod_python 3.2.8
> apache 2.0.55
> python2.4
> winxp
> =============
> 
> When I try to load a .py file I get the error:
> ==============
> [Sun Apr 09 14:03:46 2006] [error] make_obcallback: could not import
> mod_python.apache.\n
> [Sun Apr 09 14:03:46 2006] [error] python_handler: no interpreter callback
> found.
> [Sun Apr 09 14:03:46 2006] [error] [client 192.168.2.100] python_handler:
> Can't get/create interpreter., referer:
> http://myserver/test/
> ==============
> 

<snip>

> where mptest.py contains:
> ==============
> from mod_python import _apache
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write("Hello World!")
>     return apache.OK
> ==============
> 

Unrelated, but when you do get mod_python working, your mptest.py script 
will fail. There is no mod_python._apache module. It should read

from mod_python import apache.

Jim
From jpg at jgassociates.ca  Mon Apr 10 16:45:55 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Apr 10 16:43:30 2006
Subject: [mod_python] When I try to use include directive an SyntaxError
	error occurs
In-Reply-To: <623772458.20060411005437@yandex.ru>
References: <814584931.20060410191239@yandex.ru>
	<443A6DE5.80106@jgassociates.ca>
	<623772458.20060411005437@yandex.ru>
Message-ID: <443AC403.8060108@jgassociates.ca>

Mikhail wrote:
> Salut, Jim.

Salut Mikhail,

Please keep the conversation on the mailing list.

> 
>>>tst3.psp content:
>>>
>>><html>
>>><%
>>>import time
>>>%>
>>>Hello world, the time is: <%=time.strftime("%Y-%m-%d, %H:%M:%S")%><br>
>>><%
>>>%>
>>><% include file="tst4.psp"%>
> 
> 
> JG> Missing '@' perhaps?
> 
> JG> <%@ include file="tst4.psp"%>
> JG> ^^^
> 
> No, with '@' this directive include nothing.
> This thread not help me:
> http://www.modpython.org/pipermail/mod_python/2005-March/017589.html

If you want to include a psp file you must use it, otherwise the parser 
expects to find a valid python statement which is clearly not the case here.

I took a look at your original email and I think you are chasing the 
wrong problem, as you never actually render the page. Your index.py 
should look like this:

from mod_python import apache, psp, util, Cookie, Session

def index(req):
     # It always a good idea to set the content type
     # for browsers like Firefox
     req.content_type = 'text/html'
     filename = "tst3.psp"
     template = psp.PSP(req, filename)
     # render the page!
     template.run()
     return apache.OK


Also, there is an error in your apache config, but I think it is just a 
typo in your message, otherwise you wouldn't even get the parse error.

# Wrong
PythonHandler index:index

# Right
PythonHandler index::index

Everything should work once you make these changes, including the '@' 
character.

<%@ include file="tst4.psp"%>

Jim


From grahamd at dscpl.com.au  Mon Apr 10 18:34:20 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 10 18:34:27 2006
Subject: [mod_python] Speaking of Output Filters....
Message-ID: <1144708460.29640@dscpl.user.openhosting.com>

Lee Brown wrote ..
> Greetings!
> 
> I am probably remiss for not having shared this before now.  Here are two
> output filters for mod_python that I have developed.
>
> ...
>
> def outputfilter (filter):
>     xmlstring = filter.read()
>     doc = lxml.etree.parse(StringIO(xmlstring))
>     doc.xinclude()
>     result = str(transformer(doc))
>     filter.write(result)
>     filter.close()

I suspect that these filters will not work in all situations. This is because
a filter can be called multiple times for a single request and within one
invocation, it is not guaranteed that filter.read() will return all the data.

In short, your filter will only work when serving up static files and maybe
only files up to a certain size at that perhaps. It is not likely to work where
the XML is generated by a content handler.

This is why the prior posters filters would accumulate data in a list held
in request object until read() returned None and only then process data,
write it out and close the filter off.

Graham
From jarrod at vertigrated.com  Mon Apr 10 21:07:40 2006
From: jarrod at vertigrated.com (jarrod roberson)
Date: Mon Apr 10 21:07:44 2006
Subject: [mod_python] Anyone have an idea when mod_python will be available
	for Apache 2.2
Message-ID: <2389d4730604101807u5b91da1al20808c645daf4e7e@mail.gmail.com>

I have a project we are working on that uses mod_python and we really need
the new monitor_hook in Apache 2.2 as well.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060410/ba4b821a/attachment.html
From grahamd at dscpl.com.au  Mon Apr 10 21:35:45 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 10 21:35:48 2006
Subject: [mod_python] Anyone have an idea when mod_python will be
	availablefor Apache 2.2
Message-ID: <1144719345.2488@dscpl.user.openhosting.com>

jarrod roberson wrote ..
> I have a project we are working on that uses mod_python and we really need
> the new monitor_hook in Apache 2.2 as well.

Now if you are prepared to try using development version of
mod_python 3.3 out of subversion repository.

Otherwise, there is a possibility that a mod_python 3.2.9, which
incorporates Apache 2.2 support, will be made available within
the next 2-4 weeks depending on how we go.

Graham
From jpg at jgassociates.ca  Mon Apr 10 22:22:14 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Apr 10 22:18:14 2006
Subject: [mod_python] Anyone have an idea when mod_python will
	be	availablefor Apache 2.2
In-Reply-To: <1144719345.2488@dscpl.user.openhosting.com>
References: <1144719345.2488@dscpl.user.openhosting.com>
Message-ID: <443B12D6.9090908@jgassociates.ca>

Graham Dumpleton wrote:
> jarrod roberson wrote ..
> 
>>I have a project we are working on that uses mod_python and we really need
>>the new monitor_hook in Apache 2.2 as well.

monitor_hook?

> 
> Now if you are prepared to try using development version of
> mod_python 3.3 out of subversion repository.

Apache 2.2 support has been back ported to the repository 
branches/3.2.x. This is the branch that will be used for 3.2.9 so you 
could also grab that while waiting for the offical release.

Please note that the changes allow mod_python to work with Apache 2.2 
but we have not added any support for 2.2 specific api's.

Jim
From grahamd at dscpl.com.au  Mon Apr 10 23:27:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 10 23:27:31 2006
Subject: [mod_python] Anyone have an idea when mod_python will
	be	availablefor Apache 2.2
In-Reply-To: <443B12D6.9090908@jgassociates.ca>
References: <1144719345.2488@dscpl.user.openhosting.com>
	<443B12D6.9090908@jgassociates.ca>
Message-ID: <8D44281D-632B-450B-AB69-E27CCB8E1964@dscpl.com.au>


On 11/04/2006, at 12:22 PM, Jim Gallacher wrote:

> Graham Dumpleton wrote:
>> jarrod roberson wrote ..
>>> I have a project we are working on that uses mod_python and we  
>>> really need
>>> the new monitor_hook in Apache 2.2 as well.
>
> monitor_hook?

 From what's new in Apache 2.2.

   Monitor hook added
     Monitor hook enables modules to run regular/scheduled jobs in  
the parent (root) process.

It doesn't sound like something we would want specific mod_python  
support
for anyway given that it runs in parent process and mod_python doesn't
provide really low level access to Apache API.

I assumed that they wanted to run some other module that used the  
feature
and not that there was any expectation that mod_python would support it
in some way.

>> Now if you are prepared to try using development version of
>> mod_python 3.3 out of subversion repository.
>
> Apache 2.2 support has been back ported to the repository branches/ 
> 3.2.x. This is the branch that will be used for 3.2.9 so you could  
> also grab that while waiting for the offical release.
>
> Please note that the changes allow mod_python to work with Apache  
> 2.2 but we have not added any support for 2.2 specific api's.

True, the 3.2.x branch would be a much better idea. My head isn't  
clear today
either. Left work middle of day to go home and rest. :-(

Time to go have a snooze. :-)

Graham
From nogradi at gmail.com  Tue Apr 11 04:26:49 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Tue Apr 11 04:27:02 2006
Subject: [mod_python] Re: Speaking of Output Filters....
In-Reply-To: <1144708460.29640@dscpl.user.openhosting.com>
References: <1144708460.29640@dscpl.user.openhosting.com>
Message-ID: <5f56302b0604110126u351e0b66l9ce107f5ed75b50c@mail.gmail.com>

> > def outputfilter (filter):
> >     xmlstring = filter.read()
> >     doc = lxml.etree.parse(StringIO(xmlstring))
> >     doc.xinclude()
> >     result = str(transformer(doc))
> >     filter.write(result)
> >     filter.close()
>
> I suspect that these filters will not work in all situations. This is
> because
> a filter can be called multiple times for a single request and within one
> invocation, it is not guaranteed that filter.read() will return all the
> data.
>
> In short, your filter will only work when serving up static files and maybe
> only files up to a certain size at that perhaps. It is not likely to work
> where
> the XML is generated by a content handler.
>
> This is why the prior posters filters would accumulate data in a list held
> in request object until read() returned None and only then process data,
> write it out and close the filter off.

Indeed I ran into the same problem with my first filter, but this
article helped a lot in clarifying how bucket brigades work which I
think is the main thing to understand for writing a proper
input/output filter:

http://perl.apache.org/docs/2.0/user/handlers/filters.html

This is on mod_perl but the things about buckets in general are
explained quite well.

From grahamd at dscpl.com.au  Tue Apr 11 06:48:56 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr 11 06:49:08 2006
Subject: [mod_python] Re: Speaking of Output Filters....
In-Reply-To: <5f56302b0604110126u351e0b66l9ce107f5ed75b50c@mail.gmail.com>
References: <1144708460.29640@dscpl.user.openhosting.com>
	<5f56302b0604110126u351e0b66l9ce107f5ed75b50c@mail.gmail.com>
Message-ID: <34db274e3939b31689df2e825de6e0d5@dscpl.com.au>


On 11/04/2006, at 6:26 PM, Daniel Nogradi wrote:

>>> def outputfilter (filter):
>>>     xmlstring = filter.read()
>>>     doc = lxml.etree.parse(StringIO(xmlstring))
>>>     doc.xinclude()
>>>     result = str(transformer(doc))
>>>     filter.write(result)
>>>     filter.close()
>>
>> I suspect that these filters will not work in all situations. This is
>> because
>> a filter can be called multiple times for a single request and within 
>> one
>> invocation, it is not guaranteed that filter.read() will return all 
>> the
>> data.
>>
>> In short, your filter will only work when serving up static files and 
>> maybe
>> only files up to a certain size at that perhaps. It is not likely to 
>> work
>> where
>> the XML is generated by a content handler.
>>
>> This is why the prior posters filters would accumulate data in a list 
>> held
>> in request object until read() returned None and only then process 
>> data,
>> write it out and close the filter off.
>
> Indeed I ran into the same problem with my first filter, but this
> article helped a lot in clarifying how bucket brigades work which I
> think is the main thing to understand for writing a proper
> input/output filter:
>
> http://perl.apache.org/docs/2.0/user/handlers/filters.html
>
> This is on mod_perl but the things about buckets in general are
> explained quite well.

Another good jumping off point for background information is:

   http://www.projectcomputing.com/resources/apacheFilterFAQ/index.html

Obviously mod_python simplifies it a lot by hiding the bucket
brigade, but still good stuff.

Graham

From administrator at leebrown.org  Tue Apr 11 07:02:43 2006
From: administrator at leebrown.org (Lee Brown)
Date: Tue Apr 11 07:01:11 2006
Subject: [mod_python] Speaking of Output Filters....
In-Reply-To: <443A6E5C.5030301@dd.revealed.net>
Message-ID: <008201c65d57$75061a70$0301a8c0@uberbox>

Greetings!

I'm not sure if you can add XSLT extensions in lxml or not - the
documentation (so far) is mostly a number of examples.  (see
http://codespeak.net/lxml/api.html).

If being limited to Python 2.3 isn't a problem for you, there's a Python
binding for Apache's Xerxes/Xalan called Pyana
(http://pyana.sourceforge.net) which is simple, slick, and fast.  It's very
easy to add external Python functions as XSLT extensions with Pyana.  The
downside of Pyana is that it does not support Xinclude and it is compiled
against static DLLs for Xerxes, Xalan, and Python23 so it doesn't keep up
with the latest features.  I was using Pyana for my filters at first, but
the lack of support for Xinclude and Python 2.4 made me switch.

For what it's worth, Amara/4Suite has the the most comprehensive feature set
of any of the XML/XSLT processors I've tried but it's main drawback is that
it is crawlingly slow.  The same filters implemented in Amara/4Suite are
about ten times slower.


Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Nick
Sent: Monday, April 10, 2006 10:40 AM
To: Lee Brown
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Speaking of Output Filters....

Sounds pretty cool... I haven't looked at the library modules you
referenced, but is it possible to create XSLT extension functions in Python
that your stylesheet can reference?

Thanks,
Nick

Lee Brown wrote:
> 
> 
> Greetings!
> 
> I am probably remiss for not having shared this before now.  Here are 
> two output filters for mod_python that I have developed.
> 
> The first filter, xsltfilter.py, transforms XML into XHTML (or 
> whatever else you may desire) via an XSLT template.  The second 
> filter, xincludefilter.py, processes xinclude elements imbedded in 
> XHTML.  Both are meant as a simple means of providing "quasi-dynamic" web
content.
> Benchmarks on my hardware show throughputs of 100 to 500+ pages per 
> second using these filters.
> 
> Dependencies:
> lxml:  an ElemenTree-like binding for the libxml2/libxslt libraries 
> (see http://www.codespeak.net/lxml <http://www.codespeak.net/lxml> )

[code and examples deleted]
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From administrator at leebrown.org  Tue Apr 11 07:30:42 2006
From: administrator at leebrown.org (Lee Brown)
Date: Tue Apr 11 07:30:28 2006
Subject: [mod_python] Speaking of Output Filters....
In-Reply-To: <1144708460.29640@dscpl.user.openhosting.com>
Message-ID: <008301c65d5b$5e4eafa0$0301a8c0@uberbox>

Greetings!

All good points which I hadn't considered.  The filters have worked very
well so far, though, mostly (I suspect) because I wrote these filters as a
means of merging and transforming content in lieu of using any content
handlers at all.  The content I'm trying to serve is all "quasi-dynamic,"
that is, the content changes, but only when a content author or some
back-end program decides to change it.  As far as the Apache server is
concerned, it all looks like static content.

I haven't tried serving up "War and Peace" as a single web page yet, but
I've tested my filters using what I'd call "unreasonably long" web pages
without any problems - so far.

I'll take a shot at reformulating my code and let you know how it turns out.
It may not even be necessary to accumulate the data in a buffer; if lxml is
using a push-parser it will accept the data piece-wise and all I'd need to
do is detect EOS before invoking the tranform.  

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Graham Dumpleton
Sent: Monday, April 10, 2006 6:34 PM
To: Lee Brown
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Speaking of Output Filters....

Lee Brown wrote ..
> Greetings!
> 
> I am probably remiss for not having shared this before now.  Here are 
> two output filters for mod_python that I have developed.
>
> ...
>
> def outputfilter (filter):
>     xmlstring = filter.read()
>     doc = lxml.etree.parse(StringIO(xmlstring))
>     doc.xinclude()
>     result = str(transformer(doc))
>     filter.write(result)
>     filter.close()

I suspect that these filters will not work in all situations. This is
because a filter can be called multiple times for a single request and
within one invocation, it is not guaranteed that filter.read() will return
all the data.

In short, your filter will only work when serving up static files and maybe
only files up to a certain size at that perhaps. It is not likely to work
where the XML is generated by a content handler.

This is why the prior posters filters would accumulate data in a list held
in request object until read() returned None and only then process data,
write it out and close the filter off.

Graham
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From nick at dd.revealed.net  Tue Apr 11 09:55:05 2006
From: nick at dd.revealed.net (Nick)
Date: Tue Apr 11 09:55:11 2006
Subject: [mod_python] Speaking of Output Filters....
In-Reply-To: <008201c65d57$75061a70$0301a8c0@uberbox>
References: <008201c65d57$75061a70$0301a8c0@uberbox>
Message-ID: <443BB539.7080107@dd.revealed.net>

Lee Brown wrote:
> I'm not sure if you can add XSLT extensions in lxml or not - the
> documentation (so far) is mostly a number of examples.  (see
> http://codespeak.net/lxml/api.html).

I did get a chance to finally take a look late last night.  It does indeed
provide a way to hook in Python, which is really the main reason to get
excited about XSLT using Python ;-)

> I was using Pyana for my filters at first, but
> the lack of support for Xinclude and Python 2.4 made me switch.

Indeed, I have seen this, and it was the lack of 2.4 support that caused me
to not give it a second look.

> For what it's worth, Amara/4Suite has the the most comprehensive feature set
> of any of the XML/XSLT processors I've tried but it's main drawback is that
> it is crawlingly slow.  The same filters implemented in Amara/4Suite are
> about ten times slower.

Ditto, it IS painfully slow.  I thought I might have been doing something
wrong, so it's good to hear someone else say it.  I really liked 4Suite, but
it just couldn't handle volume.

Anyway, lxml is definitely the right place for me... thanks for the nice
example of using it in mod_python :)

Nick
From cyberco at media2b.net  Tue Apr 11 10:58:12 2006
From: cyberco at media2b.net (cyberco)
Date: Tue Apr 11 10:58:15 2006
Subject: [mod_python] mod_python + apache + winxp => could not import
	mod_python.apache
In-Reply-To: <443A744A.8040400@jgassociates.ca>
References: <ca8dfa360604091342k4b5e023cvd292c9befed8bd8e@mail.gmail.com>
	<ca8dfa360604091454v371562b0h2d7085bfef1b49e6@mail.gmail.com>
	<ca8dfa360604091455u2624e80bo61689c542f9a5ef7@mail.gmail.com>
	<44398B89.5020302@jgassociates.ca>
	<ca8dfa360604100013t358e5adcv396f3cdd64e6f15f@mail.gmail.com>
	<443A744A.8040400@jgassociates.ca>
Message-ID: <ca8dfa360604110758o1c71d6beq99b9952314e04d88@mail.gmail.com>

Hi Jim,

Thanks for your help so far.

 On 4/10/06, Jim Gallacher <jpg@jgassociates.ca> wrote:

> Hi Berco,
>
> I noticed that this message did not make it into the mod_python mailing
> list. Per our prior conversation, it looks like you subscribed as
> cyberco, but you are sending mail to the list as berco. I'm not a list
> admin and I'm not sure how the list is moderated, but as Grisha, our
> BDFL, is very busy it's possible that the message was simply dropped.
> That may even be the standard policy for mail from non-subscribed
> addresses.


 Right, I accidently sent it from the wrong email address. I resent it from
the correct one.

Anyway, you might want to consider installing 3.2.8. There weren't any
> really big changes from 3.2.5b that affected, but that was a beta after
> all.


 The change made no difference

I'm still scratching my head over this one, and I suspects it's
> something really simple we are both overlooking.


 I have the same feeling, but I'm running out of options :)

Could you try a quick import test from the command line and email me the
> output? Here is what I get:
>
> $ python
> Python 2.3.5 (#2, Nov 20 2005, 16:40:39)
> [GCC 4.0.3 20051111 (prerelease) (Debian 4.0.2-4)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
> >>> import mod_python.psp
> Traceback (most recent call last):
>   File "<stdin>", line 1, in ?
>   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 20, in ?
>     import apache, Session, util, _psp
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 29, in ?
>     import _apache
> ImportError: No module named _apache
> >>>
>
> The ImportError I get is the expected one as _apache refers to the
> actual Apache loadable module, which of course is not available from the
> command line interpreter. Any other ImportError indicates a different
> problem.
>
> Jim


 I get the same:
===========
Python 2.4.2 (#67, Sep 28 2005, 12:41:11) [MSC v.1310 32 bit (Intel)] on
win32

Type "help", "copyright", "credits" or "license" for more information.
>>> import mod_python.psp
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "C:\Python24\Lib\site-packages\mod_python\psp.py", line 20, in ?

    import apache, Session, util, _psp
  File "C:\Python24\Lib\site-packages\mod_python\apache.py", line 28, in ?

    import _apache
ImportError: No module named _apache
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060411/e1136969/attachment.html
From johnjsal at gmail.com  Tue Apr 11 13:52:53 2006
From: johnjsal at gmail.com (John Salerno)
Date: Tue Apr 11 13:53:00 2006
Subject: [mod_python] installing handlers on Apache server?
Message-ID: <bc4bd5f00604111052y1ee084c1gde6f6d2c632e1866@mail.gmail.com>

Hi everyone. I have a question about setting up handlers on a server that
already has mod_python installed. (At least, I am told it is installed, and
I believe I need to set up handlers.)

After creating a test PSP page, I get a 500 Internal Server Error, with the
following error log message:

"Invalid command 'PythonHandler', perhaps mis-spelled or defined by a module
not included in the server configuration"

I have an .htaccess file with the appropriate three lines in it (including
debugging), but there seems to be more to do. In my control panel, there is
a way to add new handlers and extensions to the server, but I don't know
what to add. I've tried a bunch of combinations, like:

mod_python  .psp  #this wasn't there yesterday, but is now
PythonHandler .psp
mod_python.psp   .psp

None of that works, although sometimes when I try to access the PSP page I
get the HTML source instead of the server error.

Any help would be appreciated!

Thanks,
John
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060411/1eaf601d/attachment.html
From benomatic42 at gmail.com  Tue Apr 11 14:15:37 2006
From: benomatic42 at gmail.com (ben)
Date: Tue Apr 11 14:15:41 2006
Subject: [mod_python] Anyone have an idea when mod_python will be
	available for Apache 2.2
In-Reply-To: <2389d4730604101807u5b91da1al20808c645daf4e7e@mail.gmail.com>
References: <2389d4730604101807u5b91da1al20808c645daf4e7e@mail.gmail.com>
Message-ID: <967dbda50604111115r408cf7b9j3231c1edcc24a6b5@mail.gmail.com>

I've been using modpython 3.2.8 + apache 2.2.0 for a while, after
applying the diffs found here:

  http://svn.apache.org/viewcvs.cgi?rev=376544&view=rev

Perhaps Graham or somebody else can suggest that I'm an idiot for
doing so, but the only problem I've seen thus far is SSL related (and
probably not mod_python's fault -- description here:
http://modpython.org/pipermail/mod_python/2006-April/020796.html).

ben

From grahamd at dscpl.com.au  Tue Apr 11 17:04:59 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr 11 17:05:10 2006
Subject: [mod_python] installing handlers on Apache server?
In-Reply-To: <bc4bd5f00604111052y1ee084c1gde6f6d2c632e1866@mail.gmail.com>
References: <bc4bd5f00604111052y1ee084c1gde6f6d2c632e1866@mail.gmail.com>
Message-ID: <16553f0626c75aa439b1db780d8f974c@dscpl.com.au>

What version of mod_python do you supposedly have? Can you confirm
that mod_python is being loaded by sighting the startup message in
the Apache error log file?

Anyway, suggest you work through instructions in:

   http://www.dscpl.com.au/articles/modpython-001.html

This gives a simpler example to start with and pointers for what to
look for when you get stuff like 500 errors.

Graham

On 12/04/2006, at 3:52 AM, John Salerno wrote:

> Hi everyone. I have a question about setting up handlers on a server 
> that already has mod_python installed. (At least, I am told it is 
> installed, and I believe I need to set up handlers.)
>
> After creating a test PSP page, I get a 500 Internal Server Error, 
> with the following error log message:
>
> "Invalid command 'PythonHandler', perhaps mis-spelled or defined by a 
> module not included in the server configuration"
>
> I have an .htaccess file with the appropriate three lines in it 
> (including debugging), but there seems to be more to do. In my control 
> panel, there is a way to add new handlers and extensions to the 
> server, but I don't know what to add. I've tried a bunch of 
> combinations, like:
>
> mod_python? .psp? #this wasn't there yesterday, but is now
> PythonHandler .psp
> mod_python.psp?? .psp
>
> None of that works, although sometimes when I try to access the PSP 
> page I get the HTML source instead of the server error.
>
> Any help would be appreciated!
>
> Thanks,
> John
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Tue Apr 11 17:11:47 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr 11 17:11:57 2006
Subject: [mod_python] mod_python + apache + winxp => could not import
	mod_python.apache
In-Reply-To: <ca8dfa360604110758o1c71d6beq99b9952314e04d88@mail.gmail.com>
References: <ca8dfa360604091342k4b5e023cvd292c9befed8bd8e@mail.gmail.com>
	<ca8dfa360604091454v371562b0h2d7085bfef1b49e6@mail.gmail.com>
	<ca8dfa360604091455u2624e80bo61689c542f9a5ef7@mail.gmail.com>
	<44398B89.5020302@jgassociates.ca>
	<ca8dfa360604100013t358e5adcv396f3cdd64e6f15f@mail.gmail.com>
	<443A744A.8040400@jgassociates.ca>
	<ca8dfa360604110758o1c71d6beq99b9952314e04d88@mail.gmail.com>
Message-ID: <98375c0db0737e8c83c6bc0cd3ce6a3e@dscpl.com.au>

One of the things I remember Nicolas sometimes suggesting is that
if Apache is run as service, make sure that the user the service
runs as actually has read abilities on directories where Python
site-packages are stored. But then, I have lost track of what the
original problem was so this may not be relevant.

BTW, is the mod_python you are using built from source by you or
is it the prebuilt version which was available. We have some new
logging stuff which would be useful to help in debugging this sort
of problem, but you would need to be able to build mod_python from
source code.

Graham

On 12/04/2006, at 12:58 AM, cyberco wrote:

> Hi Jim,
> ?
> Thanks for your help so far.
> ?
> On 4/10/06, Jim Gallacher < jpg@jgassociates.ca> wrote:
>> Hi Berco,
>>
>> I noticed that this message did not make it into the mod_python 
>> mailing
>> list. Per our prior conversation, it looks like you subscribed as
>> cyberco, but you are sending mail to the list as berco. I'm not a list
>> admin and I'm not sure how the list is moderated, but as Grisha, our
>> BDFL, is very busy it's possible that the message was simply dropped.
>>  That may even be the standard policy for mail from non-subscribed 
>> addresses.?
> Right, I accidently sent it from the wrong email address. I resent it 
> from the correct one.
>
>> Anyway, you might want to consider installing 3.2.8. There weren't any
>> really big changes from 3.2.5b that affected, but that was a beta 
>> after all.?
> The change made no difference
>
>> I'm still scratching my head over this one, and I suspects it's
>> something really simple we are both overlooking.?
> I have the same feeling, but I'm running out of options :)
>
>> Could you try a quick import test from the command line and email me 
>> the
>> output? Here is what I get:
>>
>> $ python
>> Python 2.3.5 (#2, Nov 20 2005, 16:40:39)
>> [GCC 4.0.3 20051111 (prerelease) (Debian 4.0.2-4)] on linux2
>> Type "help", "copyright", "credits" or "license" for more information.
>> >>> import mod_python.psp
>> Traceback (most recent call last):
>> ??File "<stdin>", line 1, in ?
>> ??File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 20, 
>> in ?
>> ????import apache, Session, util, _psp
>> ??File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>> 29, in ?
>> ????import _apache
>> ImportError: No module named _apache
>> >>>
>>
>> The ImportError I get is the expected one as _apache refers to the
>> actual Apache loadable module, which of course is not available from 
>> the
>> command line interpreter. Any other ImportError indicates a different
>> problem.
>>
>> Jim?
> I get the same:
> ===========
> Python 2.4.2 (#67, Sep 28 2005, 12:41:11) [MSC v.1310 32 bit (Intel)] 
> on win32
>
> Type "help", "copyright", "credits" or "license" for more information.
> >>> import mod_python.psp
> Traceback (most recent call last):
> ? File "<stdin>", line 1, in ?
> ? File "C:\Python24\Lib\site-packages\mod_python\psp.py", line 20, in ?
>
> ??? import apache, Session, util, _psp
> ? File "C:\Python24\Lib\site-packages\mod_python\apache.py", line 28, 
> in ?
>
> ??? import _apache
> ImportError: No module named _apache
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From jpg at jgassociates.ca  Tue Apr 11 17:42:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Apr 11 17:40:09 2006
Subject: [mod_python] Anyone have an idea when mod_python will be	available
	for Apache 2.2
In-Reply-To: <967dbda50604111115r408cf7b9j3231c1edcc24a6b5@mail.gmail.com>
References: <2389d4730604101807u5b91da1al20808c645daf4e7e@mail.gmail.com>
	<967dbda50604111115r408cf7b9j3231c1edcc24a6b5@mail.gmail.com>
Message-ID: <443C22CD.3080008@jgassociates.ca>

ben wrote:
> I've been using modpython 3.2.8 + apache 2.2.0 for a while, after
> applying the diffs found here:
> 
>   http://svn.apache.org/viewcvs.cgi?rev=376544&view=rev
> 
> Perhaps Graham or somebody else can suggest that I'm an idiot for
> doing so

No you are not an idiot. :) This is the same diff that has been applied 
to branches/3.2.x.

Jim
From administrator at leebrown.org  Wed Apr 12 07:48:18 2006
From: administrator at leebrown.org (Lee Brown)
Date: Wed Apr 12 07:47:13 2006
Subject: [mod_python] mod_python + apache + winxp => could not
	importmod_python.apache
In-Reply-To: <98375c0db0737e8c83c6bc0cd3ce6a3e@dscpl.com.au>
Message-ID: <00a001c65e26$fdf0c220$0301a8c0@uberbox>

Greetings! 

I think it actually IS relevant.  I've gone back and looked over the code
samples from this thread, and if Berco is using the as-distrubuted Windows
binaries for Apache, Python, and Mod Python then his setup ought to be
working fine.  I suspect that there may be a users/groups/permissions issue.

FWIW, on my XP setup I created a special user for the Apache service to run
as, and then specifically granted permissions for that user on all the
resources it needs to access.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Graham Dumpleton
Sent: Tuesday, April 11, 2006 5:12 PM
To: cyberco
Cc: mod_python@modpython.org
Subject: Re: [mod_python] mod_python + apache + winxp => could not
importmod_python.apache

One of the things I remember Nicolas sometimes suggesting is that if Apache
is run as service, make sure that the user the service runs as actually has
read abilities on directories where Python site-packages are stored. But
then, I have lost track of what the original problem was so this may not be
relevant.


From administrator at leebrown.org  Wed Apr 12 08:25:32 2006
From: administrator at leebrown.org (Lee Brown)
Date: Wed Apr 12 08:24:01 2006
Subject: [mod_python] Re: Speaking of Output Filters....
In-Reply-To: <34db274e3939b31689df2e825de6e0d5@dscpl.com.au>
Message-ID: <00a101c65e2c$31a114d0$0301a8c0@uberbox>

Greetings!

Thanks to Graham and Daniel for the info on bucket brigades. I think I've
got my head wrapped around it now.

If I'm grasping this correctly: not only can one request call the filter
multiple times, but overlapping requests may be calling the filter multiple
times.  The filter therefore needs to preserve its state in a thread-safe
way, and as far as the filter is concerned the req object is a persistent,
thread-safe place to put a buffer.

If filter.read() returns '', this means you've hit the bottom of the current
bucket and it's time to update the buffer.  If filter.read returns None,
you've hit the end of the request stream and it's time to proceede with the
filter operation.

If I'm still missing something, please let me know....

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


From grahamd at dscpl.com.au  Wed Apr 12 08:26:07 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr 12 08:26:41 2006
Subject: [mod_python] Re: Speaking of Output Filters....
In-Reply-To: <00a101c65e2c$31a114d0$0301a8c0@uberbox>
References: <00a101c65e2c$31a114d0$0301a8c0@uberbox>
Message-ID: <2EBDD3D2-4783-4A27-A899-505550B6CC45@dscpl.com.au>


On 12/04/2006, at 10:25 PM, Lee Brown wrote:

> Greetings!
>
> Thanks to Graham and Daniel for the info on bucket brigades. I  
> think I've
> got my head wrapped around it now.
>
> If I'm grasping this correctly: not only can one request call the  
> filter
> multiple times, but overlapping requests may be calling the filter  
> multiple
> times.  The filter therefore needs to preserve its state in a  
> thread-safe
> way, and as far as the filter is concerned the req object is a  
> persistent,
> thread-safe place to put a buffer.
>
> If filter.read() returns '', this means you've hit the bottom of  
> the current
> bucket and it's time to update the buffer.  If filter.read returns  
> None,
> you've hit the end of the request stream and it's time to proceede  
> with the
> filter operation.
>
> If I'm still missing something, please let me know....

No, not missing anything that I can see. Actually sums it up quite well.

Graham
From grahamd at dscpl.com.au  Wed Apr 12 17:02:06 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr 12 17:02:21 2006
Subject: [mod_python] installing handlers on Apache server?
In-Reply-To: <bc4bd5f00604121338x15a6e65bmeb4ffc9bbe554de3@mail.gmail.com>
References: <bc4bd5f00604111052y1ee084c1gde6f6d2c632e1866@mail.gmail.com>
	<16553f0626c75aa439b1db780d8f974c@dscpl.com.au>
	<bc4bd5f00604120908k3d210b70mabe3c54601ef40fc@mail.gmail.com>
	<bc4bd5f00604121251x353c8d81off5c9c95c2e88fce@mail.gmail.com>
	<B5B86A5E-003F-412A-B175-29D64268284F@dscpl.com.au>
	<bc4bd5f00604121338x15a6e65bmeb4ffc9bbe554de3@mail.gmail.com>
Message-ID: <CC51F0AB-D959-4B55-A6B3-F5A19A5D2B86@dscpl.com.au>

Whoops. I myself forgot to cc the mailing list this time.

Just for the record, pushing this exchange back to the list. :-)

On 13/04/2006, at 6:38 AM, John Salerno wrote:

> I see. Thanks for the answers!
>
>
> John
>
>
>
> On 4/12/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> On 13/04/2006, at 5:51 AM, John Salerno wrote:
>
> > Just to follow up, everything seems to be working now after their
> > upgrades, and I didn't have to do anything. However, I did notice
> > that the .htaccess file they have contains this:
> >
> > AddHandler python-program .psp
> > PythonHandler testingpython
> > PythonDebug On
> >
> > whereas I had always thought it was supposed to contain:
> >
> > AddHandler mod_python .psp
> > PythonHandler mod_python.psp
> > PythonDebug On
> >
> >
> > So perhaps that was part of the problem. I'm not sure what the
> > difference between the two is.
>
> The difference between the two is that they have written their own
> handler
> to handle any requests arriving with a .psp extension, whereas the
> latter
> will trigger the supplied mod_python.psp handler for any requests
> arriving with
> a .psp extension. Both are valid, it just depends on what you are
> wanting to
> do.
>
> Graham
>

From nlv11281 at natlab.research.philips.com  Thu Apr 13 01:54:18 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Apr 13 01:54:25 2006
Subject: [mod_python] Re: mysqldb error
Message-ID: <443DE78A.5060908@natlab.research.philips.com>

There is an optimization in the MySQL client that when the host is "localhost" (or the equivalent), 
it will attempt to use a UNIX socket (or a named pipe on Windows) instead of a TCP/IP socket.

If your DB is on the localhost, makeing sure the UNIX socket (/tmp/mysql.sock or something like 
that) is there and functions properly can greatly improve security, since you can disable remote TCP 
access to the database entirely, so that even if people get the password, they still cannot connect 
to the DB (without access rights to that machine).

I've seen machines that use /var/lib/mysql/mysql.sock, which the apache user (usually 'apache' or 
'nobody') may not have access to.



Mike Looijmans
Philips Natlab / Topic Automation


Graham Dumpleton wrote:

 > Whoops. I could be talking nonsense here. But  then I missed that
 > your code says 127.0.0.1 yet the error says 10.0.0.6.
 >
 > FWIW, the reason that I thought to suggest to look at this was that
 > I was using a database once where using 127.0.0.1 made it use
 > a local database connection rather than full IP connection and in
 > that situation, for whatever reason it actually ignored the user name
 > in the login and was using the user ID of the process connecting
 > to the database to determine privileges.
 >
 > I rarely use databases, so could though be completely wrong and
 > misunderstood what I saw at the time. :-(
 >
 > Someone who knows what they are talking about should step in
 > and save me now. :-)
 >
 > Graham
 >
 > Graham Dumpleton wrote ..
 >
 >> Apache doesn't probably run as any of the users which your database
 >> allows access to. Add lines in your CGI which says:
 >>
 >>  import os
 >>  print os.getuid()
 >>
 >> and then see what user that UID actually is and give it access. User
 >> may be something like "apache", "www", "wwwroot" or possibly even
 >> "nobody" depending on the system configuration.
 >>
 >> You can also check your Apache configuration for lines:
 >>
 >> User www
 >> Group www
 >>
 >> to see what it runs as:
 >>
 >> Graham
 >>
 >> Firat KUCUK wrote ..
 >>
 >>> my distro is ubuntu breezy,
 >>> I used cgi handler. And text mime type
 >>> so i can view the print statement.
 >>>
 >>> MySQL server 4.0.24
 >>> apache 2.0.54
 >>> python2.4-mysqldb 1.2.1
 >>>
 >>> php, console python, cgi python works fine.
 >>>
 >>> my .htaccess file
 >>>
 >>> Allow from       All
 >>>
 >>> AddHandler       mod_python .py
 >>> PythonHandler    mod_python.cgihandler
 >>> PythonDebug      On
 >>>
 >>> DirectoryIndex   index.htm index.html index.php index.py index.pl
 >>>
 >>> -----------------------------------------------------------------------------
 >>>
 >>> #! /usr/bin/python
 >>> # -*- coding: UTF-8 -*-
 >>>
 >>> print 'Content-Type: text/plain\n'
 >>>
 >>> import MySQLdb
 >>> conn = MySQLdb.connect(
 >>>           host   = '127.0.0.1',
 >>>           user   = 'pismikrop',
 >>>           passwd = 'pass',
 >>>           db     = 'gate')
 >>> print conn
 >>> conn.close()
 >>>
 >>>
 >>> -------------------------------------------
 >>>
 >>> output: <_mysql.connection open to '(null)' at 82a97e4>
 >>>
 >>>
 >>> if host = '10.0.0.6'
 >>>
 >>> Mod_python error: "PythonHandler mod_python.cgihandler"
 >>>
 >>> Traceback (most recent call last):
 >>>
 >>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
 >>
 >>
 >> 299,
 >>
 >>> in HandlerDispatch
 >>>    result = object(req)
 >>>
 >>>  File "/usr/lib/python2.4/site-packages/mod_python/cgihandler.py", line
 >>> 96, in handler
 >>>    imp.load_module(module_name, fd, path, desc)
 >>>
 >>>  File "/home/pismikrop/vhosts/mikropyuvasi/content/tests/mpcgi/firat.py",
 >>> line 11, in ?
 >>>    db     = 'gate')
 >>>
 >>>  File "/usr/lib/python2.4/site-packages/MySQLdb/__init__.py", line 66,
 >>> in Connect
 >>>    return Connection(*args, **kwargs)
 >>>
 >>>  File "/usr/lib/python2.4/site-packages/MySQLdb/connections.py", line
 >>> 134, in __init__
 >>>    super(Connection, self).__init__(*args, **kwargs2)
 >>>
 >>> OperationalError: (2003, "Can't connect to MySQL server on '10.0.0.6'
 >>
 >>
 >> (111)")
 >>
 >>> ------------------------------------------
 >>>
 >>> mysql> SELECT User, Host FROM user;
 >>> +------------------+--------------+
 >>> | User             | Host         |
 >>> +------------------+--------------+
 >>> | pismikrop        | %            |
 >>> | debian-sys-maint | localhost    |
 >>> | root             | localhost    |
 >>> | root             | mikropyuvasi |
 >>> +------------------+--------------+
 >>>
 >>> pismikrop user has all priviliges to all databases.
 >
 >
 >


From apocalypznow at gmail.com  Tue Apr 11 01:25:39 2006
From: apocalypznow at gmail.com (apocalypznow)
Date: Thu Apr 13 03:55:09 2006
Subject: [mod_python] AJAX and Vampire's Publisher
Message-ID: <e1fekf$248$1@sea.gmane.org>

Does anyone have any experience using AJAX (in particular, SAJAX) with 
Vampire Publisher?  Does it work?

From grahamd at dscpl.com.au  Thu Apr 13 06:20:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 13 06:21:48 2006
Subject: [mod_python] AJAX and Vampire's Publisher
In-Reply-To: <e1fekf$248$1@sea.gmane.org>
References: <e1fekf$248$1@sea.gmane.org>
Message-ID: <734B8445-FBF6-4AB1-A9A9-94D0EF2A4EC7@dscpl.com.au>


On 11/04/2006, at 3:25 PM, apocalypznow wrote:

> Does anyone have any experience using AJAX (in particular, SAJAX)  
> with Vampire Publisher?  Does it work?

FWIW, on the server side what you write for an AJAX client isn't  
necessarily
going to be that much different to any other sort of web application.  
The only
real difference that has to be considered with AJAX programming is the
potential need to be able to POST varying content types. Some handlers
for mod_python only support a POST content type of multipart/form,  
ie., HTML
form data. Obviously this is a big restriction if you want to POST  
XML data of
some form.

If all you want to POST is HTML form data, then you may as well use the
mod_python.publisher that comes with mod_python itself. Probably best  
just
to ensure you are using mod_python 3.2.8 though as that version resolves
for publisher at least some of the module loading/reloading issues.

If you do want to POST XML data or other types of data, for example  
JSON,
then using mod_python.publisher as the dispatch method for URLs isn't
going to work as it will not allow you to do that. In this case then  
using either
vampire::publisher or vampire.Publisher(), presuming that you were  
referring
specifically to these when you said "Vampire's Publisher", certainly  
may be
a better option because it is more flexible.

But then the publisher like bits of Vampire, like the original  
mod_python.publisher
they emulate, only support GET and POST. If you wanted to use REST ideas
of using GET, POST, PUT and DELETE as appropriate, then you may need
to drop down to the lower level handler style interfaces in Vampire  
as they don't
restrict the method types.

So, although Vampire has shown itself to work in various scenarios,  
it is
probably better to be asking whether it meets the requirements you may
have in respect of the sort of data you may want to POST back to the  
application
and whether supporting them is possible. This goes the same for whatever
additional layers on top of mod_python that you may be looking at. In  
short,
it isn't just what URL mapping mechanism something provides that is
important.

Anyway, hope this stimulates you to think more about the issues as I  
really don't
think it is a simple question as to whether a particular client side  
AJAX toolkit
works with Vampire or not.

I would also hope that you might describe more about what you perceive
mod_python or some layer on top of it needs to provide to facilitate  
AJAX
style clients, as it isn't something that has really been discussed  
on the
mailing list at all, so am curious to hear your (and others) ideas on  
it all.

Graham
From girty at cogeco.ca  Fri Apr 14 22:36:23 2006
From: girty at cogeco.ca (greg)
Date: Fri Apr 14 22:34:50 2006
Subject: [mod_python] finding length of user file before uploading
Message-ID: <44405C27.7050403@cogeco.ca>

I want a script (PSP preferred, custom handler if need be) that can
cancel an upload if the file is too large, or is taking too long.
The list archives have a few hacks for custom uploads using:

	util.FieldStorage(req, file_callback=FileFactory)

However, this parameter is not in the official docs, and several
previous posters noticed the behaviour breaking between versions.
My system is Debian, Apache2, mod_python 3.1.3-3.
When I try the file_callback trick, I get:

   File "/var/www/upload.psp", line 40, in ?
     frm = util.FieldStorage(req, file_callback=make_file)

TypeError: __init__() got an unexpected keyword argument 'file_callback'


I presume that undocumented feature has become extinct in recent versions.

And, even if it had worked, it still doesn't relay the size of the
file until the transfer is eating time and memory.
I would like to avoid making a custom handler that gets the data 
directly from the client--it seems like I would re-invent the wheel. A 
slower wheel.

What is the best way to aquire the filesize before the upload starts?

Thanks,

Greg

From grahamd at dscpl.com.au  Fri Apr 14 22:54:50 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 14 22:55:15 2006
Subject: [mod_python] finding length of user file before uploading
In-Reply-To: <44405C27.7050403@cogeco.ca>
References: <44405C27.7050403@cogeco.ca>
Message-ID: <453FC468-3C51-4686-AB35-21BA10560D68@dscpl.com.au>


On 15/04/2006, at 12:36 PM, greg wrote:

> I want a script (PSP preferred, custom handler if need be) that can
> cancel an upload if the file is too large, or is taking too long.
> The list archives have a few hacks for custom uploads using:
>
> 	util.FieldStorage(req, file_callback=FileFactory)
>
> However, this parameter is not in the official docs, and several
> previous posters noticed the behaviour breaking between versions.
> My system is Debian, Apache2, mod_python 3.1.3-3.
> When I try the file_callback trick, I get:
>
>   File "/var/www/upload.psp", line 40, in ?
>     frm = util.FieldStorage(req, file_callback=make_file)
>
> TypeError: __init__() got an unexpected keyword argument  
> 'file_callback'
>
>
> I presume that undocumented feature has become extinct in recent  
> versions.
>
> And, even if it had worked, it still doesn't relay the size of the
> file until the transfer is eating time and memory.
> I would like to avoid making a custom handler that gets the data  
> directly from the client--it seems like I would re-invent the  
> wheel. A slower wheel.
>
> What is the best way to aquire the filesize before the upload starts?

The file_callback and field_callback parameters are new features in
unreleased 3.2.9 and 3.3.X. That is why you can find them. See
documentation at:

   http://svn.apache.org/viewcvs.cgi/httpd/mod_python/branches/3.2.x/ 
Doc/modpython4.tex?rev=393781&view=markup

The simplest way to avoid uploading something that is too big is to
check the content length of the incoming request. You would need
to use a custom handler for that though.

Because some handlers such as mod_python.publisher have already
consumed request content by the time your code has been called,
the simplest thing to do is to do the check in a fixup handler which is
run in addition too, but before the normal content handler.

For example:

   PythonFixupHandler check_for_large_uploads

   # check_for_large_uploads.py

   from mod_python import apache

   UPLOAD_LIMIT = 1000000

   def fixuphandler(req):
     length = int(req.headers_in.get("Content-Length", "0"))
     if length >= UPLOAD_LIMIT:
       req.content_type = 'text/plain'
       req.status = apache.HTTP_BAD_REQUEST
       req.write('upload too big\n')
       return apache.DONE

     return apache.OK

The important bit is that the fixup handler must cause call to following
content handler to be aborted. This is why it explicitly sets req.status
and then returns apache.DONE instead of apache.OK. The handler
needs to also construct any custom response.

Not sure there is a simple way of handling an upload that takes too
long. I haven't looked at the file_callback feature to see whether that
might make it easier.

Graham

From grahamd at dscpl.com.au  Fri Apr 14 23:01:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 14 23:01:44 2006
Subject: [mod_python] finding length of user file before uploading
In-Reply-To: <453FC468-3C51-4686-AB35-21BA10560D68@dscpl.com.au>
References: <44405C27.7050403@cogeco.ca>
	<453FC468-3C51-4686-AB35-21BA10560D68@dscpl.com.au>
Message-ID: <58444CBA-DFA7-437D-BDD5-C817D6FDECED@dscpl.com.au>


On 15/04/2006, at 12:54 PM, Graham Dumpleton wrote:

>
> On 15/04/2006, at 12:36 PM, greg wrote:
>
>> I want a script (PSP preferred, custom handler if need be) that can
>> cancel an upload if the file is too large, or is taking too long.
>> The list archives have a few hacks for custom uploads using:
>>
>> 	util.FieldStorage(req, file_callback=FileFactory)
>>
>> However, this parameter is not in the official docs, and several
>> previous posters noticed the behaviour breaking between versions.
>> My system is Debian, Apache2, mod_python 3.1.3-3.
>> When I try the file_callback trick, I get:
>>
>>   File "/var/www/upload.psp", line 40, in ?
>>     frm = util.FieldStorage(req, file_callback=make_file)
>>
>> TypeError: __init__() got an unexpected keyword argument  
>> 'file_callback'
>>
>>
>> I presume that undocumented feature has become extinct in recent  
>> versions.
>>
>> And, even if it had worked, it still doesn't relay the size of the
>> file until the transfer is eating time and memory.
>> I would like to avoid making a custom handler that gets the data  
>> directly from the client--it seems like I would re-invent the  
>> wheel. A slower wheel.
>>
>> What is the best way to aquire the filesize before the upload starts?
>
> The file_callback and field_callback parameters are new features in
> unreleased 3.2.9 and 3.3.X. That is why you can find them. See
> documentation at:

Whoops. The file_callback feature is in 3.2.8 source code, but web site
documentation doesn't mention it. The thing I got confused about as only
being in 3.2.9/3.3.X was some more recent performance improvements
to the same code.

Anyway, upgrade from your older 3.1.3 to 3.2.8 and you will have access
to the feature. You will though need to refer to documentation out of
the source code repository.

Graham
From administrator at leebrown.org  Mon Apr 17 12:21:28 2006
From: administrator at leebrown.org (Lee Brown)
Date: Mon Apr 17 12:24:02 2006
Subject: [mod_python] Output Filters Redeaux
Message-ID: <000601c6623a$fb743500$0301a8c0@uberbox>

Greetings!

Just for fun, here is a handy template for constructing Mod Python output
filters:

    from mod_python import apache
    from cStringIO import StringIO

    def outputfilter (filter):
            
        try:
            streambuffer = filter.req.streambuffer
        except AttributeError:
            filter.req.streambuffer = StringIO() # See Note 1
            streambuffer = filter.req.streambuffer
		# See Note 2
        
        streamlet = filter.read()
        while streamlet:
		# See Note 3
            streambuffer.write(streamlet)
            streamlet = filter.read()

        if streamlet is None:
		# See Note 4
            filter.write(streambuffer)
            filter.close()

This is as stripped-down, bare-bones as a filter can get, IMHO.  Of course,
this is just an echo filter until you add your own code to it.

Note 1:

When a filter is invoked once or only a few times, there is no real
advantage in using a cStringIO buffer over a Python List buffer.
As the number of re-invocations goes up, cStringIO starts to show a speed
advantage.

Note 2:

Anything else that you may want to initialize at the start of a request
should go here, ex:
    filter.req.some_variable = some_value

Note 3:

Depending on your application, you may want to hack at the raw stream before
putting it in the buffer, ex:
    streambuffer.write(streamlet.replace('\r\n', '\n'))

Note 4:

At this point, streambuffer contains the entire request response and you may
go ahead and do whatever it is you wanted to accomplish, ex:
    filter.write(my_tranform_function(streambuffer))



Best Regards,
Lee E. Brown
(leebrown@leebrown.org)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060417/22d132a2/attachment.html
From administrator at leebrown.org  Mon Apr 17 12:36:34 2006
From: administrator at leebrown.org (Lee Brown)
Date: Mon Apr 17 12:39:26 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <000601c6623a$fb743500$0301a8c0@uberbox>
Message-ID: <001101c6623d$16fa7e40$0301a8c0@uberbox>

Greetings!
 
This is the code for a Mod Python output filter that performs an XSLT
transform on XML data that I published a few weeks ago.  I've restructured
it as an example application of the filter template:
 
from mod_python import apache
from cStringIO import StringIO
import lxml.etree
import time
 
name = 'LXML'
timestring = 'Time to process XML/XSLT files using %s: %.3f milliseconds (%s
pages per second) [%s pass]\n'
 
xsltfile = open('c:/webdev/sites/crashtest/templates/template.xslt', 'rU')
styledoc = lxml.etree.parse(StringIO(xsltfile.read()))
transformer = lxml.etree.XSLT(styledoc)
xsltfile.close()
 
def outputfilter (filter):
            
    try:
        streambuffer = filter.req.streambuffer
    except AttributeError:
        filter.req.streambuffer = StringIO()
        streambuffer = filter.req.streambuffer
        filter.req.start = time.clock()
        filter.req.passes = 0
        
    streamlet = filter.read()
    while streamlet:
        filter.req.passes += 1
        streambuffer.write(streamlet.replace('\r\n', '\n'))
        streamlet = filter.read()
 
    if streamlet is None:
        doc = lxml.etree.parse(streambuffer)
        doc.xinclude()
        result = str(transformer(doc))
        end = time.clock()
        start = filter.req.start
        passes = filter.req.passes
        ms = (end-start)*1000
        pps = int(1/(end-start))
        timestamp = timestring % (name, ms, pps, passes)
        filter.write(result.replace('benchmark', timestamp))
        filter.close()

 




Best Regards, 
Lee E. Brown 
(leebrown@leebrown.org) 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060417/e494c7ad/attachment.html
From nick at dd.revealed.net  Mon Apr 17 12:43:22 2006
From: nick at dd.revealed.net (Nick)
Date: Mon Apr 17 12:43:31 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <000601c6623a$fb743500$0301a8c0@uberbox>
References: <000601c6623a$fb743500$0301a8c0@uberbox>
Message-ID: <4443C5AA.7040602@dd.revealed.net>

Great example!  Thanks.

On a devel note, it looks like the filter object would be very handy if it
could be treated as in iterator, such as (using the sample code's nomenclature):

for streamlet in filter:
  [do something with streamlet here]

It would definitely turn filter writing into something more Pythonic.  Does
that seem like something that would be useful?

Thanks,
Nick

Lee Brown wrote:
> 
> 
> Greetings!
> 
> Just for fun, here is a handy template for constructing Mod Python
> output filters:
> 
>     from mod_python import apache
>     from cStringIO import StringIO
> 
>     def outputfilter (filter):
>            
>         try:
>             streambuffer = filter.req.streambuffer
>         except AttributeError:
>             filter.req.streambuffer = StringIO() # See Note 1
>             streambuffer = filter.req.streambuffer
>                 # See Note 2
>        
>         streamlet = filter.read()
>         while streamlet:
>                 # See Note 3
>             streambuffer.write(streamlet)
>             streamlet = filter.read()
> 
>         if streamlet is None:
>                 # See Note 4
>             filter.write(streambuffer)
>             filter.close()
> 
> This is as stripped-down, bare-bones as a filter can get, IMHO.  Of
> course, this is just an echo filter until you add your own code to it.
> 
> Note 1:
> 
> When a filter is invoked once or only a few times, there is no real
> advantage in using a cStringIO buffer over a Python List buffer.
> 
> As the number of re-invocations goes up, cStringIO starts to show a
> speed advantage.
> 
> Note 2:
> 
> Anything else that you may want to initialize at the start of a request
> should go here, ex:
>      filter.req.some_variable = some_value
> 
> Note 3:
> 
> Depending on your application, you may want to hack at the raw stream
> before putting it in the buffer, ex:
>     streambuffer.write(streamlet.replace('\r\n', '\n'))
> 
> Note 4:
> 
> At this point, streambuffer contains the entire request response and you
> may go ahead and do whatever it is you wanted to accomplish, ex:
> 
>     filter.write(my_tranform_function(streambuffer))
> 
> 
> 
> Best Regards,
> Lee E. Brown
> (leebrown@leebrown.org)
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From girty at cogeco.ca  Mon Apr 17 13:05:08 2006
From: girty at cogeco.ca (greg)
Date: Mon Apr 17 13:03:27 2006
Subject: [mod_python] finding length of user file before uploading
In-Reply-To: <453FC468-3C51-4686-AB35-21BA10560D68@dscpl.com.au>
References: <44405C27.7050403@cogeco.ca>
	<453FC468-3C51-4686-AB35-21BA10560D68@dscpl.com.au>
Message-ID: <4443CAC4.6010301@cogeco.ca>

Thanks Graham, for sharing your insight.

A question about the example:
What does the normal content handler do with the request after the fixup 
  handler returns apache.DONE?

I expect I will keep the file check and upload monitoring inside a 
single handler for now. I am working on commercial deployment, so I have 
to take a 'wait-and-see' approach with features, despite my personal 
curiousity about how the dev team is shaping the libs.

What would mod_python.conf look like? If one handler is doing 
everything, is this correct?

<Directory myserver/www/uploads>
      AddHandler mod_python *
      PythonPath "['/foo/mypy/'] + sys.path"
      PythonHandler fixup
      #PythonDebug On
</Directory>

Greg

> Because some handlers such as mod_python.publisher have already
> consumed request content by the time your code has been called,
> the simplest thing to do is to do the check in a fixup handler which is
> run in addition too, but before the normal content handler.
> 
> For example:
> 
>   PythonFixupHandler check_for_large_uploads
> 
>   # check_for_large_uploads.py
> 
>   from mod_python import apache
> 
>   UPLOAD_LIMIT = 1000000
> 
>   def fixuphandler(req):
>     length = int(req.headers_in.get("Content-Length", "0"))
>     if length >= UPLOAD_LIMIT:
>       req.content_type = 'text/plain'
>       req.status = apache.HTTP_BAD_REQUEST
>       req.write('upload too big\n')
>       return apache.DONE
> 
>     return apache.OK
> 
> The important bit is that the fixup handler must cause call to following
> content handler to be aborted. This is why it explicitly sets req.status
> and then returns apache.DONE instead of apache.OK. The handler
> needs to also construct any custom response.
> 
> Not sure there is a simple way of handling an upload that takes too
> long. I haven't looked at the file_callback feature to see whether that
> might make it easier.
> 
> Graham

From administrator at leebrown.org  Mon Apr 17 13:04:45 2006
From: administrator at leebrown.org (Lee Brown)
Date: Mon Apr 17 13:07:22 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <4443C5AA.7040602@dd.revealed.net>
Message-ID: <001c01c66241$075bf0a0$0301a8c0@uberbox>

That's a good question.  I don't know if the filter object is iterable or
not.

What's warping my noodle is handling the two different exit conditions in a
Pythonic way; if the filter returns '' you just want to hibernate but if the
filter returns None you want to wrap up and get out.  Kinda like this (given
an iterable filter object):

for streamlet in filter:
    if streamlet:
        streambuffer.write(streamlet)
    else:
        break
If streamlet is None:
    [proceed with your filter thing]

To me, this does not seem to be much more Pythonic that the previous version
- you still have to noodle on it a while to see the flow structure.


Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Nick
Sent: Monday, April 17, 2006 12:43 PM
To: Lee Brown
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Output Filters Redeaux

Great example!  Thanks.

On a devel note, it looks like the filter object would be very handy if it
could be treated as in iterator, such as (using the sample code's
nomenclature):

for streamlet in filter:
  [do something with streamlet here]

It would definitely turn filter writing into something more Pythonic.  Does
that seem like something that would be useful?

Thanks,
Nick

Lee Brown wrote:
> 
> 
> Greetings!
> 
> Just for fun, here is a handy template for constructing Mod Python 
> output filters:
> 
>     from mod_python import apache
>     from cStringIO import StringIO
> 
>     def outputfilter (filter):
>            
>         try:
>             streambuffer = filter.req.streambuffer
>         except AttributeError:
>             filter.req.streambuffer = StringIO() # See Note 1
>             streambuffer = filter.req.streambuffer
>                 # See Note 2
>        
>         streamlet = filter.read()
>         while streamlet:
>                 # See Note 3
>             streambuffer.write(streamlet)
>             streamlet = filter.read()
> 
>         if streamlet is None:
>                 # See Note 4
>             filter.write(streambuffer)
>             filter.close()
> 
> This is as stripped-down, bare-bones as a filter can get, IMHO.  Of 
> course, this is just an echo filter until you add your own code to it.
> 
> Note 1:
> 
> When a filter is invoked once or only a few times, there is no real 
> advantage in using a cStringIO buffer over a Python List buffer.
> 
> As the number of re-invocations goes up, cStringIO starts to show a 
> speed advantage.
> 
> Note 2:
> 
> Anything else that you may want to initialize at the start of a 
> request should go here, ex:
>      filter.req.some_variable = some_value
> 
> Note 3:
> 
> Depending on your application, you may want to hack at the raw stream 
> before putting it in the buffer, ex:
>     streambuffer.write(streamlet.replace('\r\n', '\n'))
> 
> Note 4:
> 
> At this point, streambuffer contains the entire request response and 
> you may go ahead and do whatever it is you wanted to accomplish, ex:
> 
>     filter.write(my_tranform_function(streambuffer))
> 
> 
> 
> Best Regards,
> Lee E. Brown
> (leebrown@leebrown.org)
> 
> 
> ----------------------------------------------------------------------
> --
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From deron.meranda at gmail.com  Mon Apr 17 14:44:16 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Apr 17 14:44:20 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <001c01c66241$075bf0a0$0301a8c0@uberbox>
References: <4443C5AA.7040602@dd.revealed.net>
	<001c01c66241$075bf0a0$0301a8c0@uberbox>
Message-ID: <5c06fa770604171144m16fb2903qa429c59a6db4cb53@mail.gmail.com>

On 4/17/06, Lee Brown <administrator@leebrown.org> wrote:
> What's warping my noodle is handling the two different exit conditions in a
> Pythonic way; if the filter returns '' you just want to hibernate but if the
> filter returns None you want to wrap up and get out.

This kind of pattern is seen a lot in all kinds of "streams processors".
It's great for cases where you don't want to impose any data
size limits (such as needing to hold the whole document in-memory).

> Kinda like this (given an iterable filter object):
>
> for streamlet in filter:
>     if streamlet:
>         streambuffer.write(streamlet)
>     else:
>         break
> If streamlet is None:
>     [proceed with your filter thing]
>
> To me, this does not seem to be much more Pythonic that the previous version
> - you still have to noodle on it a while to see the flow structure.

For an iterator approach to seem better, you first must use it like an
iterator.  What you're doing is essentially collecting all the data in a big
heap and then only doing any processing at the end.  So yes, an iterator
isn't much cleaner.

If instead, you used something like a SAX parser, then you could be
processing the filter content on-the-fly as you read each bit, rather
than waiting until the end of the data.  And that would be more
"pythonic" (I guess).

Now, since you're using the heavyweight XSLT as your XML
transformer, then that may dictate the choices open to you.
--
Deron Meranda

From nick at dd.revealed.net  Mon Apr 17 14:46:36 2006
From: nick at dd.revealed.net (Nick)
Date: Mon Apr 17 14:46:43 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <001c01c66241$075bf0a0$0301a8c0@uberbox>
References: <001c01c66241$075bf0a0$0301a8c0@uberbox>
Message-ID: <4443E28C.6040009@dd.revealed.net>

An iterator would take care of these kinds of questions internally.
Yielding '' does not signal the last iteration, nor should it according to
your example.  However, None should not be yielded by the iterator, and
would instead raise a StopIteration (or simply fall through to the end of
the __iter__ function, though being in C probably easier to raise
StopInteration).

In other words, you don't need the support code below.  You only need the
for, which will end when None has been returned from the read(), now hidden
in the iterator.

Nick

Lee Brown wrote:
> That's a good question.  I don't know if the filter object is iterable or
> not.
> 
> What's warping my noodle is handling the two different exit conditions in a
> Pythonic way; if the filter returns '' you just want to hibernate but if the
> filter returns None you want to wrap up and get out.  Kinda like this (given
> an iterable filter object):
> 
> for streamlet in filter:
>     if streamlet:
>         streambuffer.write(streamlet)
>     else:
>         break
> If streamlet is None:
>     [proceed with your filter thing]
> 
> To me, this does not seem to be much more Pythonic that the previous version
> - you still have to noodle on it a while to see the flow structure.
> 
> 
> Best Regards,
> Lee E. Brown
> (administrator@leebrown.org)
> 
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Nick
> Sent: Monday, April 17, 2006 12:43 PM
> To: Lee Brown
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] Output Filters Redeaux
> 
> Great example!  Thanks.
> 
> On a devel note, it looks like the filter object would be very handy if it
> could be treated as in iterator, such as (using the sample code's
> nomenclature):
> 
> for streamlet in filter:
>   [do something with streamlet here]
> 
> It would definitely turn filter writing into something more Pythonic.  Does
> that seem like something that would be useful?
> 
> Thanks,
> Nick
> 
> Lee Brown wrote:
>>
>> Greetings!
>>
>> Just for fun, here is a handy template for constructing Mod Python 
>> output filters:
>>
>>     from mod_python import apache
>>     from cStringIO import StringIO
>>
>>     def outputfilter (filter):
>>            
>>         try:
>>             streambuffer = filter.req.streambuffer
>>         except AttributeError:
>>             filter.req.streambuffer = StringIO() # See Note 1
>>             streambuffer = filter.req.streambuffer
>>                 # See Note 2
>>        
>>         streamlet = filter.read()
>>         while streamlet:
>>                 # See Note 3
>>             streambuffer.write(streamlet)
>>             streamlet = filter.read()
>>
>>         if streamlet is None:
>>                 # See Note 4
>>             filter.write(streambuffer)
>>             filter.close()
From nick at dd.revealed.net  Mon Apr 17 14:57:56 2006
From: nick at dd.revealed.net (Nick)
Date: Mon Apr 17 14:58:01 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <4443E28C.6040009@dd.revealed.net>
References: <001c01c66241$075bf0a0$0301a8c0@uberbox>
	<4443E28C.6040009@dd.revealed.net>
Message-ID: <4443E534.3000607@dd.revealed.net>

As an example to follow up on this, in your XSLT parser, you would have:

    for streamlet in filter:
        filter.req.passes += 1
        streambuffer.write(streamlet.replace('\r\n', '\n'))

    ("if streamlet is None" is not required at this point)

Maybe what I neglected to convey is that the multiple calls to the
outputfilter handler would abstracted differently, so that to the handler it
would appear to be called only a single time, with the mod_python code
handling the feeding of the filter iterator via the apache bucket brigade.

Not having studied this code very carefully, I don't know how complicated
it's going to be, but it would certainly simplify things a lot on the Python
side of things.  The trick is going to be writing the __iter__ function of
the filter object in such a way that it will yield the results of a read(),
unless the read is '', in which case it will wait for the next filter call,
finally stopping the iteration once the last read() is done.

Nick

Nick wrote:
> An iterator would take care of these kinds of questions internally.
> Yielding '' does not signal the last iteration, nor should it according to
> your example.  However, None should not be yielded by the iterator, and
> would instead raise a StopIteration (or simply fall through to the end of
> the __iter__ function, though being in C probably easier to raise
> StopInteration).
> 
> In other words, you don't need the support code below.  You only need the
> for, which will end when None has been returned from the read(), now hidden
> in the iterator.
> 
> Nick
> 
> Lee Brown wrote:
>> That's a good question.  I don't know if the filter object is iterable or
>> not.
>>
>> What's warping my noodle is handling the two different exit conditions in a
>> Pythonic way; if the filter returns '' you just want to hibernate but if the
>> filter returns None you want to wrap up and get out.  Kinda like this (given
>> an iterable filter object):
>>
>> for streamlet in filter:
>>     if streamlet:
>>         streambuffer.write(streamlet)
>>     else:
>>         break
>> If streamlet is None:
>>     [proceed with your filter thing]
>>
>> To me, this does not seem to be much more Pythonic that the previous version
>> - you still have to noodle on it a while to see the flow structure.
>>
>>
>> Best Regards,
>> Lee E. Brown
>> (administrator@leebrown.org)
>>
>> -----Original Message-----
>> From: mod_python-bounces@modpython.org
>> [mailto:mod_python-bounces@modpython.org] On Behalf Of Nick
>> Sent: Monday, April 17, 2006 12:43 PM
>> To: Lee Brown
>> Cc: mod_python@modpython.org
>> Subject: Re: [mod_python] Output Filters Redeaux
>>
>> Great example!  Thanks.
>>
>> On a devel note, it looks like the filter object would be very handy if it
>> could be treated as in iterator, such as (using the sample code's
>> nomenclature):
>>
>> for streamlet in filter:
>>   [do something with streamlet here]
>>
>> It would definitely turn filter writing into something more Pythonic.  Does
>> that seem like something that would be useful?
>>
>> Thanks,
>> Nick
>>
>> Lee Brown wrote:
>>> Greetings!
>>>
>>> Just for fun, here is a handy template for constructing Mod Python 
>>> output filters:
>>>
>>>     from mod_python import apache
>>>     from cStringIO import StringIO
>>>
>>>     def outputfilter (filter):
>>>            
>>>         try:
>>>             streambuffer = filter.req.streambuffer
>>>         except AttributeError:
>>>             filter.req.streambuffer = StringIO() # See Note 1
>>>             streambuffer = filter.req.streambuffer
>>>                 # See Note 2
>>>        
>>>         streamlet = filter.read()
>>>         while streamlet:
>>>                 # See Note 3
>>>             streambuffer.write(streamlet)
>>>             streamlet = filter.read()
>>>
>>>         if streamlet is None:
>>>                 # See Note 4
>>>             filter.write(streambuffer)
>>>             filter.close()
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Mon Apr 17 17:17:20 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 17 17:17:36 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <4443E534.3000607@dd.revealed.net>
References: <001c01c66241$075bf0a0$0301a8c0@uberbox>
	<4443E28C.6040009@dd.revealed.net>
	<4443E534.3000607@dd.revealed.net>
Message-ID: <5459ACAA-8B37-457E-A294-433C6E29BAF1@dscpl.com.au>


On 18/04/2006, at 4:57 AM, Nick wrote:

> As an example to follow up on this, in your XSLT parser, you would  
> have:
>
>     for streamlet in filter:
>         filter.req.passes += 1
>         streambuffer.write(streamlet.replace('\r\n', '\n'))
>
>     ("if streamlet is None" is not required at this point)

You still possibly need to know when None was read, as you still need  
to call
close() on the filter.

Graham
From grahamd at dscpl.com.au  Mon Apr 17 17:20:09 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 17 17:20:19 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <001101c6623d$16fa7e40$0301a8c0@uberbox>
References: <001101c6623d$16fa7e40$0301a8c0@uberbox>
Message-ID: <C61084C9-C9AA-4AA6-83A8-A5F777814D11@dscpl.com.au>


On 18/04/2006, at 2:36 AM, Lee Brown wrote:

>     streamlet = filter.read()
>     while streamlet:
>         filter.req.passes += 1
>         streambuffer.write(streamlet.replace('\r\n', '\n'))
>         streamlet = filter.read()

What do you do if consecutive \r\n weren't in the same block of data  
returned
by read()?

I realise that it may have to be a fabricated situation that causes  
that, but
thought I would ask all the same. :-)

Graham
From grahamd at dscpl.com.au  Mon Apr 17 17:34:29 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 17 17:34:40 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <001101c6623d$16fa7e40$0301a8c0@uberbox>
References: <001101c6623d$16fa7e40$0301a8c0@uberbox>
Message-ID: <6FE81C03-A903-4804-93EA-5849B64E896D@dscpl.com.au>

BTW, since you are modifying the length of the content, you must  
ensure you
delete any content length header in the req.headers_out, otherwise it  
will
disagree with what is actually sent and clients may hang waiting for  
data or
prematurely truncate data.

The deletion of the header must be done before the first call to  
filter.write().

On 18/04/2006, at 2:36 AM, Lee Brown wrote:

> Greetings!
>
> This is the code for a Mod Python output filter that performs an  
> XSLT transform on XML data that I published a few weeks ago.  I've  
> restructured it as an example application of the filter template:
>
> from mod_python import apache
> from cStringIO import StringIO
> import lxml.etree
> import time
>
> name = 'LXML'
> timestring = 'Time to process XML/XSLT files using %s: %.3f  
> milliseconds (%s pages per second) [%s pass]\n'
>
> xsltfile = open('c:/webdev/sites/crashtest/templates/ 
> template.xslt', 'rU')
> styledoc = lxml.etree.parse(StringIO(xsltfile.read()))
> transformer = lxml.etree.XSLT(styledoc)
> xsltfile.close()
>
> def outputfilter (filter):
>     try:
>         streambuffer = filter.req.streambuffer
>     except AttributeError:

            try:
              del filter.req.headers_out["Content-Length"]
            except:
              pass

>         filter.req.streambuffer = StringIO()
>         streambuffer = filter.req.streambuffer
>         filter.req.start = time.clock()
>         filter.req.passes = 0
>
>     streamlet = filter.read()
>     while streamlet:
>         filter.req.passes += 1
>         streambuffer.write(streamlet.replace('\r\n', '\n'))
>         streamlet = filter.read()
>
>     if streamlet is None:
>         doc = lxml.etree.parse(streambuffer)
>         doc.xinclude()
>         result = str(transformer(doc))
>         end = time.clock()
>         start = filter.req.start
>         passes = filter.req.passes
>         ms = (end-start)*1000
>         pps = int(1/(end-start))
>         timestamp = timestring % (name, ms, pps, passes)
>         filter.write(result.replace('benchmark', timestamp))
>         filter.close()
>
>
>
> Best Regards,
> Lee E. Brown
> (leebrown@leebrown.org)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From siminone at ntlworld.com  Mon Apr 17 17:37:39 2006
From: siminone at ntlworld.com (cagney)
Date: Mon Apr 17 17:37:50 2006
Subject: [mod_python] Problem with PSP on mod_python 3.13
Message-ID: <1145309860.22083.20.camel@localhost.localdomain>

Hi

I'm completely new to mod_python and everything has being going well
until I encountered PSP. I intend to only use PSP as a templating system
to keep HTML pages away from code.

The problem is that sometimes the PSP page appears and sometimes the
following error message appears.
        
                Mod_python error: "PythonHandler mod_python.publisher"
                
                Traceback (most recent call last):
                
                  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
                    result = object(req)
                
                  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 98, in handler
                    path=[path])
                
                  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 457, in import_module
                    module = imp.load_module(mname, f, p, d)
                
                  File "/media/userarea/apache/psp_site/index.py", line 31, in ?
                    from mod_python import psp
                
                  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 27, in ?
                    from cgi import escape
                
                
                
                ImportError: cannot import name escape
                
                
The strange thing is that when the refresh button is pressed the PSP
page appears. There are times when I have to goto the root ie
localhost/sandpit (alias) and continually press refresh until it works.
This is not browser related as I viewed file with both firefox and
konqueror.

To note my settings are as follows:
	 Apache/2.0.54 
	 mod_python/3.1.3
	 Python/2.4.2 Server 
	 localhost Port 80

The handlers I am using are as follows:

<Directory /media/userarea/apache/>
	Options +Indexes
	AllowOverride None
	AddHandler mod_python .py .py_
	PythonHandler mod_python.publisher
	PythonDebug On
</Directory>

I've checked apache's error.log and can only assume that the following
message occurs when it refreshes and displays page properly.

        Mon Apr 17 22:34:04 2006] [notice] mod_python: (Re)importing module 'index' with path set to '['/media/userarea/apache/psp_site']'
        
Has anyone encountered this before and know a solution.

Thanks in Advance

Al

From nick at dd.revealed.net  Mon Apr 17 17:37:49 2006
From: nick at dd.revealed.net (Nick)
Date: Mon Apr 17 17:37:56 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <5459ACAA-8B37-457E-A294-433C6E29BAF1@dscpl.com.au>
References: <001c01c66241$075bf0a0$0301a8c0@uberbox>
	<4443E28C.6040009@dd.revealed.net>
	<4443E534.3000607@dd.revealed.net>
	<5459ACAA-8B37-457E-A294-433C6E29BAF1@dscpl.com.au>
Message-ID: <44440AAD.6060503@dd.revealed.net>

Graham Dumpleton wrote:
> On 18/04/2006, at 4:57 AM, Nick wrote:
>> As an example to follow up on this, in your XSLT parser, you would have:
>>
>>     for streamlet in filter:
>>         filter.req.passes += 1
>>         streambuffer.write(streamlet.replace('\r\n', '\n'))
>>
>>     ("if streamlet is None" is not required at this point)
> 
> You still possibly need to know when None was read, as you still need to
> call
> close() on the filter.

The iterator would stop when None was read, so that's implicit.  Again, this
idea assumes a producer/consumer model rather than the repeated calling
model that is supported now.  And that, of course, implies some kind of
thread or fork and communication through a pipe or some other form of IPC,
unless there's some aspect of the apache API that I'm not aware of (which is
highly possible :)

That may be a code path you don't want to take, but I thought I'd throw the
idea out there anyway.  And there may be a way to implement this that isn't
as complex as I think it might be.

Nick

From grahamd at dscpl.com.au  Mon Apr 17 17:44:30 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 17 17:44:40 2006
Subject: [mod_python] finding length of user file before uploading
In-Reply-To: <4443CAC4.6010301@cogeco.ca>
References: <44405C27.7050403@cogeco.ca>
	<453FC468-3C51-4686-AB35-21BA10560D68@dscpl.com.au>
	<4443CAC4.6010301@cogeco.ca>
Message-ID: <33F093CD-ADC4-4FA6-A7A4-847E3DEA9BBB@dscpl.com.au>


On 18/04/2006, at 3:05 AM, greg wrote:

> Thanks Graham, for sharing your insight.
>
> A question about the example:
> What does the normal content handler do with the request after the  
> fixup  handler returns apache.DONE?

Nothing, no further handler phases for the request will be called.  
DONE means the
request has been satisfied and nothing else needs to be done.

> I expect I will keep the file check and upload monitoring inside a  
> single handler for now. I am working on commercial deployment, so I  
> have to take a 'wait-and-see' approach with features, despite my  
> personal curiousity about how the dev team is shaping the libs.
>
> What would mod_python.conf look like? If one handler is doing  
> everything, is this correct?
>
> <Directory myserver/www/uploads>
>      AddHandler mod_python *

You might mean:

   SetHandler mod_python

if your expectation is that everything against the directory is to be  
processed by the handler.

Or:

   AddHandler mod_python .py

if request must have .py extension in URL.

Ie., can't be '*'.

>      PythonPath "['/foo/mypy/'] + sys.path"
>      PythonHandler fixup
>      #PythonDebug On
> </Directory>

The reason why I did it as a separate handler is that you can't avoid  
it if you are using
something like mod_python.publisher or mod_python.psp to implement  
your upload
handler. This is because both process the form before any code of you  
own would have
a chance to run, thus making the check useless.

If you are using mod_python.publisher you choices thus are:

<Directory myserver/www/uploads>
     SetHandler mod_python
     PythonFixupHandler check_for_large_uploads
     PythonHandler mod_python.publisher
     ...
</Directory>

or if you have some philosophical problem with using the fixup  
handler phase, use
a stacked handler in content phase.

<Directory myserver/www/uploads>
     SetHandler mod_python
     PythonHandler check_for_large_uploads
     PythonHandler mod_python.publisher
     ...
</Directory>

If you aren't using mod_python.publisher, then yes you could  
incorporate the check
from check_for_large_uploads into your own custom handler instead.

<Directory myserver/www/uploads>
     SetHandler mod_python
     PythonHandler your_upload_handler
     ...
</Directory>

Graham

> Greg
>
>> Because some handlers such as mod_python.publisher have already
>> consumed request content by the time your code has been called,
>> the simplest thing to do is to do the check in a fixup handler  
>> which is
>> run in addition too, but before the normal content handler.
>> For example:
>>   PythonFixupHandler check_for_large_uploads
>>   # check_for_large_uploads.py
>>   from mod_python import apache
>>   UPLOAD_LIMIT = 1000000
>>   def fixuphandler(req):
>>     length = int(req.headers_in.get("Content-Length", "0"))
>>     if length >= UPLOAD_LIMIT:
>>       req.content_type = 'text/plain'
>>       req.status = apache.HTTP_BAD_REQUEST
>>       req.write('upload too big\n')
>>       return apache.DONE
>>     return apache.OK
>> The important bit is that the fixup handler must cause call to  
>> following
>> content handler to be aborted. This is why it explicitly sets  
>> req.status
>> and then returns apache.DONE instead of apache.OK. The handler
>> needs to also construct any custom response.
>> Not sure there is a simple way of handling an upload that takes too
>> long. I haven't looked at the file_callback feature to see whether  
>> that
>> might make it easier.
>> Graham
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Mon Apr 17 17:49:19 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 17 17:49:26 2006
Subject: [mod_python] Problem with PSP on mod_python 3.13
In-Reply-To: <1145309860.22083.20.camel@localhost.localdomain>
References: <1145309860.22083.20.camel@localhost.localdomain>
Message-ID: <05380FA4-F937-4C3D-AB46-78BD5DB2A039@dscpl.com.au>

Looks like somewhere on your web site, you or someone else has called a
mod_python handler cgi.py and it is being found before the standard  
Python
cgi module.

If it is someone else, use PythonInterpreter to specify a unique  
interpreter
name just for your code area.

These sorts of problems will hopefully be addressed in mod_python 3.3  
with
a new module importer. Also see:

   http://www.dscpl.com.au/articles/modpython-003.html

Graham

On 18/04/2006, at 7:37 AM, cagney wrote:

> Hi
>
> I'm completely new to mod_python and everything has being going well
> until I encountered PSP. I intend to only use PSP as a templating  
> system
> to keep HTML pages away from code.
>
> The problem is that sometimes the PSP page appears and sometimes the
> following error message appears.
>
>                 Mod_python error: "PythonHandler mod_python.publisher"
>
>                 Traceback (most recent call last):
>
>                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> apache.py", line 299, in HandlerDispatch
>                     result = object(req)
>
>                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> publisher.py", line 98, in handler
>                     path=[path])
>
>                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> apache.py", line 457, in import_module
>                     module = imp.load_module(mname, f, p, d)
>
>                   File "/media/userarea/apache/psp_site/index.py",  
> line 31, in ?
>                     from mod_python import psp
>
>                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> psp.py", line 27, in ?
>                     from cgi import escape
>
>
>
>                 ImportError: cannot import name escape
>
>
> The strange thing is that when the refresh button is pressed the PSP
> page appears. There are times when I have to goto the root ie
> localhost/sandpit (alias) and continually press refresh until it  
> works.
> This is not browser related as I viewed file with both firefox and
> konqueror.
>
> To note my settings are as follows:
> 	 Apache/2.0.54
> 	 mod_python/3.1.3
> 	 Python/2.4.2 Server
> 	 localhost Port 80
>
> The handlers I am using are as follows:
>
> <Directory /media/userarea/apache/>
> 	Options +Indexes
> 	AllowOverride None
> 	AddHandler mod_python .py .py_
> 	PythonHandler mod_python.publisher
> 	PythonDebug On
> </Directory>
>
> I've checked apache's error.log and can only assume that the following
> message occurs when it refreshes and displays page properly.
>
>         Mon Apr 17 22:34:04 2006] [notice] mod_python: (Re) 
> importing module 'index' with path set to '['/media/userarea/apache/ 
> psp_site']'
>
> Has anyone encountered this before and know a solution.
>
> Thanks in Advance
>
> Al
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From deron.meranda at gmail.com  Mon Apr 17 18:03:04 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Apr 17 18:03:09 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <44440AAD.6060503@dd.revealed.net>
References: <001c01c66241$075bf0a0$0301a8c0@uberbox>
	<4443E28C.6040009@dd.revealed.net> <4443E534.3000607@dd.revealed.net>
	<5459ACAA-8B37-457E-A294-433C6E29BAF1@dscpl.com.au>
	<44440AAD.6060503@dd.revealed.net>
Message-ID: <5c06fa770604171503s2ab6bd9dsba9a60969a7062eb@mail.gmail.com>

On 4/17/06, Nick <nick@dd.revealed.net> wrote:
> The iterator would stop when None was read, so that's implicit.  Again, this
> idea assumes a producer/consumer model rather than the repeated calling
> model that is supported now.  And that, of course, implies some kind of
> thread or fork and communication through a pipe or some other form of IPC,
> unless there's some aspect of the apache API that I'm not aware of (which is
> highly possible :)

Not sure why you're thinking about threads and IPC?

Anyway creating a generator-wrapper is the quickest way.  But you
could modify the filter class so it acts like an iterator pretty easy.
Just add a new method something like (this is untested):

   class filter:
      ....
      def __iter__(self):
          class filteriter:
              def __init__(self,f):
                  self.f = f
              def next(self):
                  s = self.f.read()
                  if s is None:
                      raise StopIteration
                  return s
          return filteriter(self)

With a little more work, you could even make the iterator repackage
the data blocks into lines so it acts more like readlines() ... although
that's not a good general solution since not all data will be line-oriented.

And as Graham pointed out, doing the replace '\r\n' as you're
doing it is quite fragile.  It will break when you least expect it to.
--
Deron Meranda

From nick at dd.revealed.net  Mon Apr 17 18:17:27 2006
From: nick at dd.revealed.net (Nick)
Date: Mon Apr 17 18:17:33 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <5c06fa770604171503s2ab6bd9dsba9a60969a7062eb@mail.gmail.com>
References: <001c01c66241$075bf0a0$0301a8c0@uberbox>	
	<4443E28C.6040009@dd.revealed.net>
	<4443E534.3000607@dd.revealed.net>	
	<5459ACAA-8B37-457E-A294-433C6E29BAF1@dscpl.com.au>	
	<44440AAD.6060503@dd.revealed.net>
	<5c06fa770604171503s2ab6bd9dsba9a60969a7062eb@mail.gmail.com>
Message-ID: <444413F7.3010603@dd.revealed.net>

Deron Meranda wrote:
> On 4/17/06, Nick <nick@dd.revealed.net> wrote:
>> The iterator would stop when None was read, so that's implicit.  Again, this
>> idea assumes a producer/consumer model rather than the repeated calling
>> model that is supported now.  And that, of course, implies some kind of
>> thread or fork and communication through a pipe or some other form of IPC,
>> unless there's some aspect of the apache API that I'm not aware of (which is
>> highly possible :)
> 
> Not sure why you're thinking about threads and IPC?

Mostly because a filter is called multiple times by apache, as new
information is available to be read.  As I understand the apache API, your
filter gets called the first time, ctx is NULL signaling the start of the
filtering, and you read buckets until you run out of input, then the handler
returns, waiting to be called again.  Apache will call the filter over and
over for the request until a read reaches the end of the BB stream, at which
point this will be the last time the filter is called.

> Anyway creating a generator-wrapper is the quickest way.  But you
> could modify the filter class so it acts like an iterator pretty easy.

That won't work in this case, because you can read in some stuff, then get
interrupted, then get called again to read in more stuff.  I don't think
there's a real advantage to making the filter object an iterator as the
handler currently works.

> And as Graham pointed out, doing the replace '\r\n' as you're
> doing it is quite fragile.  It will break when you least expect it to.

I guess that part is addressed to Lee :)

Nick
From siminone at ntlworld.com  Mon Apr 17 18:28:50 2006
From: siminone at ntlworld.com (cagney)
Date: Mon Apr 17 18:29:00 2006
Subject: [mod_python] Problem with PSP on mod_python 3.13
In-Reply-To: <05380FA4-F937-4C3D-AB46-78BD5DB2A039@dscpl.com.au>
References: <1145309860.22083.20.camel@localhost.localdomain>
	<05380FA4-F937-4C3D-AB46-78BD5DB2A039@dscpl.com.au>
Message-ID: <1145312930.8950.12.camel@localhost.localdomain>

On Tue, 2006-04-18 at 07:49 +1000, Graham Dumpleton wrote:
> Looks like somewhere on your web site, you or someone else has called a
> mod_python handler cgi.py and it is being found before the standard  
> Python
> cgi module.
> 
> If it is someone else, use PythonInterpreter to specify a unique  
> interpreter
> name just for your code area.
> 
> These sorts of problems will hopefully be addressed in mod_python 3.3  
> with
> a new module importer. Also see:
> 
>    http://www.dscpl.com.au/articles/modpython-003.html
> 
> Graham
> 
> On 18/04/2006, at 7:37 AM, cagney wrote:
> 
> > Hi
> >
> > I'm completely new to mod_python and everything has being going well
> > until I encountered PSP. I intend to only use PSP as a templating  
> > system
> > to keep HTML pages away from code.
> >
> > The problem is that sometimes the PSP page appears and sometimes the
> > following error message appears.
> >
> >                 Mod_python error: "PythonHandler mod_python.publisher"
> >
> >                 Traceback (most recent call last):
> >
> >                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> > apache.py", line 299, in HandlerDispatch
> >                     result = object(req)
> >
> >                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> > publisher.py", line 98, in handler
> >                     path=[path])
> >
> >                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> > apache.py", line 457, in import_module
> >                     module = imp.load_module(mname, f, p, d)
> >
> >                   File "/media/userarea/apache/psp_site/index.py",  
> > line 31, in ?
> >                     from mod_python import psp
> >
> >                   File "/usr/lib/python2.4/site-packages/mod_python/ 
> > psp.py", line 27, in ?
> >                     from cgi import escape
> >
> >
> >
> >                 ImportError: cannot import name escape
> >
> >
> > The strange thing is that when the refresh button is pressed the PSP
> > page appears. There are times when I have to goto the root ie
> > localhost/sandpit (alias) and continually press refresh until it  
> > works.
> > This is not browser related as I viewed file with both firefox and
> > konqueror.
> >
> > To note my settings are as follows:
> > 	 Apache/2.0.54
> > 	 mod_python/3.1.3
> > 	 Python/2.4.2 Server
> > 	 localhost Port 80
> >
> > The handlers I am using are as follows:
> >
> > <Directory /media/userarea/apache/>
> > 	Options +Indexes
> > 	AllowOverride None
> > 	AddHandler mod_python .py .py_
> > 	PythonHandler mod_python.publisher
> > 	PythonDebug On
> > </Directory>
> >
> > I've checked apache's error.log and can only assume that the following
> > message occurs when it refreshes and displays page properly.
> >
> >         Mon Apr 17 22:34:04 2006] [notice] mod_python: (Re) 
> > importing module 'index' with path set to '['/media/userarea/apache/ 
> > psp_site']'
> >
> > Has anyone encountered this before and know a solution.
> >
> > Thanks in Advance
> >
> > Al
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 

I had created several aliases that had different pythonhandlers when
trying various examples. I have commented them out and everything is
working fine now.

Well, lesson learned!! I have too keep in mind the apache side of things
as well as the programming parts. 

Thanks Graham for taking the time out to answer my query.

Much appreciated.

Al.



From grahamd at dscpl.com.au  Mon Apr 17 19:17:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 17 19:18:03 2006
Subject: [mod_python] Output Filters Redeaux
Message-ID: <1145315869.27252@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> On 4/17/06, Nick <nick@dd.revealed.net> wrote:
> > The iterator would stop when None was read, so that's implicit.  Again,
> this
> > idea assumes a producer/consumer model rather than the repeated calling
> > model that is supported now.  And that, of course, implies some kind
> of
> > thread or fork and communication through a pipe or some other form of
> IPC,
> > unless there's some aspect of the apache API that I'm not aware of (which
> is
> > highly possible :)
> 
> Not sure why you're thinking about threads and IPC?
> 
> Anyway creating a generator-wrapper is the quickest way.  But you
> could modify the filter class so it acts like an iterator pretty easy.
> Just add a new method something like (this is untested):
> 
>    class filter:
>       ....
>       def __iter__(self):
>           class filteriter:
>               def __init__(self,f):
>                   self.f = f
>               def next(self):
>                   s = self.f.read()
>                   if s is None:
>                       raise StopIteration
>                   return s
>           return filteriter(self)

Overall I can't see how it could be made to work, at least I can't see how
it could be made to work easily. The basic problem is that on each call into
a filter, it is a different filter object associated with different buckets in the
bucket brigade. So although within the context of a single filter call, you
might be able make the filter object iterable, you probably can't have one
bit of code which somehow transparently bridges the multiple calls to the
filter even if using a generator somehow, which is what I think the suggestion
was about. I don't truly grok all that can be done with generators and so
there may indeed be a way, but it would probably need to use multiple
levels of indirection to get around fact the filter object changes.

Graham


From nick at dd.revealed.net  Mon Apr 17 23:24:57 2006
From: nick at dd.revealed.net (Nick)
Date: Mon Apr 17 23:25:05 2006
Subject: [mod_python] Output Filters Redeaux
In-Reply-To: <1145315869.27252@dscpl.user.openhosting.com>
References: <1145315869.27252@dscpl.user.openhosting.com>
Message-ID: <44445C09.2000503@dd.revealed.net>

Graham Dumpleton wrote:
> Overall I can't see how it could be made to work, at least I can't see how
> it could be made to work easily. The basic problem is that on each call into
> a filter, it is a different filter object associated with different buckets in the
> bucket brigade. So although within the context of a single filter call, you
> might be able make the filter object iterable, you probably can't have one
> bit of code which somehow transparently bridges the multiple calls to the
> filter even if using a generator somehow, which is what I think the suggestion
> was about. I don't truly grok all that can be done with generators and so
> there may indeed be a way, but it would probably need to use multiple
> levels of indirection to get around fact the filter object changes.

See attached sample code for how to accomplish this in pure Python.
This is quick and dirty and really needs to be made more thread safe.

Nick
-------------- next part --------------
A non-text attachment was scrubbed...
Name: mp_filter.py
Type: text/x-python
Size: 1746 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060417/b495a1ed/mp_filter.py
From nlv11281 at natlab.research.philips.com  Tue Apr 18 01:41:32 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Apr 18 01:41:35 2006
Subject: [mod_python] finding length of user file before uploading
In-Reply-To: <44405C27.7050403@cogeco.ca>
References: <44405C27.7050403@cogeco.ca>
Message-ID: <44447C0C.7000101@natlab.research.philips.com>

If you check the content-length header BEFORE you do anything with a 
form, PSP won't use the fieldstorage yet, and you'll be in time to 
report an error.

The correct behaviour for these cases is to use the '100 continue' 
system, but the client has to request that with an expect-continue 
header. I'm not sure how you can trigger a browser to wait for a 
'continue' request. Or is apache already handling this under water?

Note that you'll have to forcibly close the connection if you are not 
using the 100 continue response, because the client will keep dumping 
data your way...


Mike Looijmans
Philips Natlab / Topic Automation


greg wrote:
> I want a script (PSP preferred, custom handler if need be) that can
> cancel an upload if the file is too large, or is taking too long.
> The list archives have a few hacks for custom uploads using:
> 
>     util.FieldStorage(req, file_callback=FileFactory)
> 
> However, this parameter is not in the official docs, and several
> previous posters noticed the behaviour breaking between versions.
> My system is Debian, Apache2, mod_python 3.1.3-3.
> When I try the file_callback trick, I get:
> 
>   File "/var/www/upload.psp", line 40, in ?
>     frm = util.FieldStorage(req, file_callback=make_file)
> 
> TypeError: __init__() got an unexpected keyword argument 'file_callback'
> 
> 
> I presume that undocumented feature has become extinct in recent versions.
> 
> And, even if it had worked, it still doesn't relay the size of the
> file until the transfer is eating time and memory.
> I would like to avoid making a custom handler that gets the data 
> directly from the client--it seems like I would re-invent the wheel. A 
> slower wheel.
> 
> What is the best way to aquire the filesize before the upload starts?
> 
> Thanks,
> 
> Greg
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Tue Apr 18 21:09:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr 18 21:09:26 2006
Subject: [mod_python] Mod_Python and Google Summer of Code 2006.
Message-ID: <1145408957.30491@dscpl.user.openhosting.com>

Depending on what lists and sites you read, you have probably heard by now
that Google is running it's Summer of Code program again. In their own
words:

  Summer of Code 2006 is a program that offers student developers stipends
  to create new open source programs or to help currently established projects.

The idea being that various groups, of which Apache Software Foundation
is one, suggest projects which could be taken on by students under the
program.

More details can be found at:

  http://code.google.com/summerofcode.html
  http://wiki.apache.org/general/SummerOfCode2006

There has been a bit of discussion back and forth on the HTTPD developers
list about possible projects. This email is to see if anyone has any specific
ideas with a mod_python flavour that could be put up. I have posted this on
the general list rather than the developer list for mod_python as although
you need some projects, not much good if you can't find students who might
be interested in doing it. Thus thought might have more success getting both
ideas and students interested in doing them here.

That all said, one possible project is something that has been discussed
a couple of times previously. That is a "mod_dav_python" module.

The idea with this is that if:

  https://issues.apache.org/jira/browse/MODPYTHON-165

is implemented to expose some of mod_python internals, the mod_dav
Python support could be done in a distinct standalone module with a life
of its own, thus not impacting on mod_python development or holding
it up.

The projects itself would basically entail coming up with Python wrappers
for mod_dav structures and bridging between mod_dav hooks and Python
functions that implement them. Wrapping of mod_dav internal functions
would probably also be required. To get an idea of what structures etc
there are see:

  http://docx.itscales.com/structdav__hooks__repository.html

Now this may simply be too ambitious a project for a student. I admit I
don't know too much about mod_dav to know.

Anyway, else got any other ideas for other projects with a mod_python
flavour to them that could be proposed? Anyone knowledgeable about
mod_dav care to set me straight on mod_dav and point out that it probably
would be too complicated?

Graham
From matusis at matusis.com  Wed Apr 19 05:08:03 2006
From: matusis at matusis.com (Alec Matusis)
Date: Wed Apr 19 05:09:09 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
Message-ID: <200604190909.k3J991Vm016070@modpython.org>

I have been having a problem with FileReference.upload(url)  in flash 8, and to my amazement, found these posts.
 
Here's the error:
 
[Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line 153, in __init__
[Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v = line.split(":", 1)
 
 
Here's what Flash sends to the server (obtained with self.req.log_error(repr(self.req.read())):
 
[Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
[Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie': 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache', 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host': 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash', 'Content-Type': 'multipart/form-data; boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept': 'text/*'}
[Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition: form-data; name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition: form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\\x00\\x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\\r\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04\\n\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00\\x00\\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\\x03\\xf5\\x00\\x00\\x00\\x00\\x00H\\x00/ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/ff\\x00\\x01\\x00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\\x00\\x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x005\\x00\\x00\\x00\\x01\\x00-\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\\x00\\x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\\x008BIM\\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\\x00\\x00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\\x00W\\xe4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File written by Adobe Photoshop\\xa8 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\\xdb\\x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\\x0b\\n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\\x13\\x13\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\\r\\x0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e\\x0e\\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\\x04\\x00\\x07\\xff\\xc4\\x01?\\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\\x08\\x05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04!\\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\\xc1b34r\\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\\x93TdE\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\'\\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\\x03\\x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03!1\\x12\\x04AQaq"\\x13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82\\x92CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T\\xa3\\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xff\\xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00?\\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02 \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac:*~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\\xd9\\x99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\\xac\\xb7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\\xa5\\xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94\\x7f*\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\\xe6\\xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\\x8fc\\x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\\x91\\xedv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7\\xd6\\xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\\xcf\\xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae!\\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\\x89\\x04Xc \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\\xc1\\x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%?\\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2\\xc6\\xb9\\x80\\xee2\\x08-\\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-;\\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3\\xac\\x8d\\xba\\xfb\\x96/Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\\xcaH\\x8e\\xdb\\xe8\\xcd\\x86 \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\\xb3\\x7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\\x18\\x8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\\x15\\x89\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\\xc8\\'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\\xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06\\x88=\\x9ez\\xa7:\\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\xfd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x91\\xf9\\xc2?y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xabwO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\\x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,`{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\\x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc3\\xaafT\\xcb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-\\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\\xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX/\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/\\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?\\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x04.\\xd4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06\\x88=\\x9ez\\xa7:\\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\xfd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x91\\xf9\\xc2?y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xabwO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\\x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,`{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\\x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc3\\xaafT\\xcb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-\\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\\xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX/\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/\\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?\\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x04.\\xd4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06\\x88=\\x9ez\\xa7:\\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\xfd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x91\\xf9\\xc2?y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xabwO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\\x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,`{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\\x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc3\\xaafT\\xcb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-\\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\\xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX/\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/\\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?\\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83\\xcf\\x1f\\x143 <file://\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x04.\\xd4\\x95> 


Any thoughts on this?

 
--Alec
 
 



From e.deventer at boer.nl  Wed Apr 19 06:55:24 2006
From: e.deventer at boer.nl (e.deventer@boer.nl)
Date: Wed Apr 19 06:55:45 2006
Subject: [mod_python] error: could not import mod_python.apache
Message-ID: <OF69A5974B.E39EBB40-ONC1257155.0036C3C1-C1257155.003C0136@boer.nl>

I can't get mod_python to work. 

I'm using the following software/versions, installed in the listed order:

Windows 2000 5.00.2195 SP4
Mozilla Firefox 1.5.0.2
Python 2.4.2 (python-2.4.2.msi)
Apache 2.0.55 (apache_2.0.55-win32-x86-no_ssl.exe)
Mod_python 3.2.8 (mod_python-3.2.8.win32-py2.4.exe)
Python and Apache (seem to) run just fine.

After installation I have added the "LoadModule python_module 
modules/mod_python.so" line to httpd.conf. mod_python.so is present in the 
modules directory. Then I have tried to test my setup by following the 
test procedure of the modpython.org tutorial (2.4). I've added this to the 
httpd.conf:

<Directory "C:/Program Files/Apache Group/Apache2/htdocs/test/"> 
     AddHandler mod_python .py
     PythonHandler mptest 
     PythonDebug On 
</Directory>

(Does it matter where in the http.conf I put this code?)

When I try to load mptest.py (containing the code form the tutorial), the 
browser displays an Internal Server Error. Then when I look at the 
error.log I see these errors:
[error] make_obcallback: could not import mod_python.apache.\n
[error] python_handler: no interpreter callback found.
[error] [client 127.0.0.1] python_handler: Can't get/create interpreter., 
referer: http://localhost/test/

Then I tried to diagnose my configuration using the 
mod_python.testhandeler, but this gives exactly the same error in both the 
browser and error.log

Any ideas?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060419/191f8d28/attachment.html
From administrator at leebrown.org  Wed Apr 19 09:27:41 2006
From: administrator at leebrown.org (Lee Brown)
Date: Wed Apr 19 09:30:06 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <OF69A5974B.E39EBB40-ONC1257155.0036C3C1-C1257155.003C0136@boer.nl>
Message-ID: <000c01c663b5$08e9ac80$0301a8c0@uberbox>

Greetings!
 
I have a server box here that is configured almost identically to yours
(except it has Python 2.4.3 installed).  I just configured it as per the
tutorial and it ran mptest.py just fine.  I suspect this may be a windows
user/group/permission problem.
 
Open Task Manager and look at the running processes; note the user which
Apache.exe is running under.  Keep the task manager open and start a copy of
the Python interpreter and note the user which python.exe is running under.
(Usually, apache.exe is running as user SYSTEM and python.exe will be
running under the current user.)  
 
Go to the directory where you installed Python and right-click python.exe.
Under the security tab, verify that the user apache is running as has "full
control" permissions.
 

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of e.deventer@boer.nl
Sent: Wednesday, April 19, 2006 6:55 AM
To: mod_python@modpython.org
Subject: [mod_python] error: could not import mod_python.apache



I can't get mod_python to work. 

I'm using the following software/versions, installed in the listed order: 

Windows 2000 5.00.2195 SP4 
Mozilla Firefox 1.5.0.2 
Python 2.4.2 (python-2.4.2.msi) 
Apache 2.0.55 (apache_2.0.55-win32-x86-no_ssl.exe) 
Mod_python 3.2.8 (mod_python-3.2.8.win32-py2.4.exe) 
Python and Apache (seem to) run just fine. 

After installation I have added the "LoadModule python_module
modules/mod_python.so" line to httpd.conf. mod_python.so is present in the
modules directory. Then I have tried to test my setup by following the test
procedure of the modpython.org tutorial (2.4). I've added this to the
httpd.conf: 

<Directory "C:/Program Files/Apache Group/Apache2/htdocs/test/"> 
     AddHandler mod_python .py 
     PythonHandler mptest 
     PythonDebug On 
</Directory> 

(Does it matter where in the http.conf I put this code?) 

When I try to load mptest.py (containing the code form the tutorial), the
browser displays an Internal Server Error. Then when I look at the error.log
I see these errors: 
[error] make_obcallback: could not import mod_python.apache.\n 
[error] python_handler: no interpreter callback found. 
[error] [client 127.0.0.1] python_handler: Can't get/create interpreter.,
referer: http://localhost/test/ 

Then I tried to diagnose my configuration using the mod_python.testhandeler,
but this gives exactly the same error in both the browser and error.log 

Any ideas? 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060419/99658d87/attachment-0001.html
From johnjsal at gmail.com  Wed Apr 19 10:40:35 2006
From: johnjsal at gmail.com (John Salerno)
Date: Wed Apr 19 10:40:41 2006
Subject: [mod_python] Trouble getting mod_python to work
Message-ID: <bc4bd5f00604190740v7d705d31g9af1f6966b2de481@mail.gmail.com>

Hi everyone. I wrote before about having some trouble getting
mod_python set up on my server. I'm not the one doing it, but I've
been in touch with the admins. Whenever I try to access a PSP page, it
simply shows the HTML source code instead of properly running it. I
thought maybe this had to do with incorrect use of handlers, but I
don't know what to do about it. The htaccess file reads:

AddHandler mod_python .psp
PythonHandler mod_python.psp
PythonDebug On

At one point they had their own custom handlers in there, but they
changed it back. Another thing they just tried was changing the
httpd.conf file and it reads:

#<IfDefine HAVE_PYTHON>

LoadModule python_module      /usr/lib/apache/mod_python.so

 #<IfDefine HAVE_PYTHON>

#AddModule mod_python.c

#</IfDefine>

AddModule mod_python.c

 <Directory "/var/www/html">

 AddHandler mod_python .psp

PythonHandler mod_python.psp

PythonDebug On

 </Directory>

But this kind of stuff is beyond me. My only other experience with
mod_python was easy, because it was properly set up and I only had to
write PSP files. I don't know what else needs to be done here to get
it working. Any help would be appreciated.

Thanks,
John

From dworley at communityconnect.com  Wed Apr 19 14:00:12 2006
From: dworley at communityconnect.com (David Worley)
Date: Wed Apr 19 14:00:21 2006
Subject: [mod_python] Apache Configuration Help
Message-ID: <EE702CA684057843958BF6CE882E910102389B38@cci019.hq.communityconnect.com>

I'm trying to get Apache to look up a couple directories for a python
script, so in my httpd.conf file I've added the following:

<Directory 'C:\Program Files\Apache Group\Apache2\htdocs\mg\css'>
	AddHandler python-program .css
	PythonHandler switch
	PythonDebug On
</Directory>

As far as I understand apache, this is saying any file in this directory
will be handled by the file "switch.py".

Now, what I need is for switch.py to be locate in the \htdocs\directory.

Does anyone know how to go about this?

Thanks!

===============================
David Worley
Senior Front End Developer
dworley@communityconnect.com
212.431.4477x390
=============================== 

From list at joreybump.com  Wed Apr 19 14:34:50 2006
From: list at joreybump.com (Jorey Bump)
Date: Wed Apr 19 14:35:00 2006
Subject: [mod_python] Apache Configuration Help
In-Reply-To: <EE702CA684057843958BF6CE882E910102389B38@cci019.hq.communityconnect.com>
References: <EE702CA684057843958BF6CE882E910102389B38@cci019.hq.communityconnect.com>
Message-ID: <444682CA.1060902@joreybump.com>

David Worley wrote:
> I'm trying to get Apache to look up a couple directories for a python
> script, so in my httpd.conf file I've added the following:
> 
> <Directory 'C:\Program Files\Apache Group\Apache2\htdocs\mg\css'>
> 	AddHandler python-program .css
> 	PythonHandler switch
> 	PythonDebug On
> </Directory>
> 
> As far as I understand apache, this is saying any file in this directory
> will be handled by the file "switch.py".

No, it says that any request for a file ending in .css will be handled 
by a Python module named switch (using a function named 'handler' in the 
module).

> Now, what I need is for switch.py to be locate in the \htdocs\directory.

Not necessarily. It is sufficient for switch.py to be anywhere in your 
(meaning apache's) module search path. mod_python will attempt to 
prepend the specified directory to sys.path, but it is not always 
desirable to place your handler within your DocumentRoot (all of 
mod_python's supplied handlers are typically installed in site-packages 
and available to all users, for example).

> Does anyone know how to go about this?

Well, obviously, the easiest way is to save the file in the specified 
directory. :)

Whenever I write a handler, however, and don't want it available 
globally to all users on the system, I put it in a special directory 
outside of my DocumentRoot and prepend that directory to PythonPath:

PythonPath "['/var/www/vhost/www.example.com/python'] + sys.path"
<Directory /var/www/vhost/www.example.com/website>
   SetHandler python-program
   PythonHandler myhandler
</Directory>

In this case, myhandler.py is in my virtual host's local python 
directory. Because I've used SetHandler, all files in the directory will 
be processed by the handler, regardless of extension. If you need to 
access other files in the directory without using mod_python, then use 
AddHandler as you did in your example.

Note that newer versions of mod_python support the use of 'mod_python' 
instead of the deprecated 'python-program' argument in (Add|Set)Handler 
directives.

From grahamd at dscpl.com.au  Wed Apr 19 16:34:48 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr 19 16:35:01 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <200604190909.k3J991Vm016070@modpython.org>
References: <200604190909.k3J991Vm016070@modpython.org>
Message-ID: <4BB369CE-2F15-40A8-89D5-16B66F589039@dscpl.com.au>

Flash for some reason doesn't do the POST for multipart/form per  
standard RFCs
when no content type is associated with a filename block.

See:

   http://www.modpython.org/pipermail/mod_python/2006-April/020794.html

for previous discussion.

See more below.

On 19/04/2006, at 7:08 PM, Alec Matusis wrote:

> I have been having a problem with FileReference.upload(url)  in  
> flash 8, and to my amazement, found these posts.
>
> Here's the error:
>
> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File "/usr/ 
> local/lib/python2.4/site-packages/mod_python/util.py", line 153, in  
> __init__
> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =  
> line.split(":", 1)
>
>
> Here's what Flash sends to the server (obtained with  
> self.req.log_error(repr(self.req.read())):
>
> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':  
> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',  
> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':  
> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',  
> 'Content-Type': 'multipart/form-data; boundary=---------- 
> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept': 'text/*'}
> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] '------------ 
> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition: form-data;  
> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------ 
> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:

See in above line how now content type but also no required extra  
blank line.
Add a content type for that filename block and see if it works.

Graham

> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent- 
> Type: application/octet-stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\ 
> \x10JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xed\ 
> \x08TPhotoshop 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\ 
> \x00H\\x00\\x00\\x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\ 
> \x018BIM\\x04\\r\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\ 
> \x03\\xf3\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\ 
> \x00\\x00\\x018BIM\\x04\\n\\x00\\x00\\x00\\x00\\x00\\x01\\x00\ 
> \x008BIM\\'\\x10\\x00\\x00\\x00\\x00\\x00\\n\\x00\\x01\\x00\\x00\ 
> \x00\\x00\\x00\\x00\\x00\\x028BIM\\x03\\xf5\\x00\\x00\\x00\\x00\ 
> \x00H\\x00/ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\ 
> \x01\\x00/ff\\x00\\x01\\x!
>  00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\ 
> \x00\\x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\ 
> \x00\\x01\\x005\\x00\\x00\\x00\\x01\\x00-\\x00\\x00\\x00\\x06\\x00\ 
> \x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\\x00\\x00\\x00\\x00\\x00p\ 
> \x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\ 
> \xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\xe8\ 
> \x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\ 
> \xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\ 
> \x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\ 
> \xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\ 
> \xff\\xff\\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\ 
> \xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\ 
> \xff\\xff\\xff\\xff\\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00 
> \\x00\\x00\\x10\\x00\\x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\ 
> \x00\\x00\\x00\\x008BIM\\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00 
> \\!
>  x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\\x00 
> \\x
> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\\x00W\ 
> \xe4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\ 
> \x00\\x10JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\ 
> \x00&File written by Adobe Photoshop\\xa8 5.0\\xff\\xee\\x00\ 
> \x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\\xdb\\x00\\x84\\x00\ 
> \x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\\x0b\\n\\x0b\\x11\ 
> \x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\\x13\\x13\\x18\ 
> \x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\ 
> \x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\ 
> \x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\ 
> \r\\x0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\ 
> \x0e\\x0e\\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\ 
> \x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\ 
> \x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\ 
> \x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\ 
> \x00K\\x!
>  00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\ 
> \x04\\x00\\x07\\xff\\xc4\\x01?\\x00\\x00\\x01\\x05\\x01\\x01\\x01\ 
> \x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x01\ 
> \x02\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x01\\x00\\x01\\x05\\x01\ 
> \x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\ 
> \x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x10\\x00\\x01\ 
> \x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\\x08\\x05\\x03\\x0c3\ 
> \x01\\x00\\x02\\x11\\x03\\x04!\\x121\\x05AQa\\x13"q\\x812\\x06\\x14\ 
> \x91\\xa1\\xb1B#$\\x15R\\xc1b34r\\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\ 
> \xf1cs5\\x16\\xa2\\xb2\\x83&D\\x93TdE\\xc2\\xa3t6\\x17\\xd2U\\xe2e\ 
> \xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\'\\x94\\xa4\\x85\\xb4\\x95\ 
> \xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x96\\xa6\ 
> \xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xd7\\xe7\ 
> \xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\\x03\\x04\\x05\\x06\ 
> \x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03!1\\x12\\x04AQaq"\\x!
>  13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82\ 
> \x92
> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T\ 
> \xa3\\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\ 
> \x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\ 
> \x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\ 
> \xc7\\xff\\xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00?\ 
> \x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02 \\xc7\\x9a 
> (\\t\\xc0M\\\\\\x82\\xac:*~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\ 
> \xba\\xa7P\\xa7\\xa6`\\xd9\\x99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\ 
> \xd9W\\x80\\\\G\\xd7\\xdb\\xac\\xb7\\xa8b\\xe0\\x02Emf\\xf2\\x07\ 
> \x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\\xa5\\xcd\\xea_\\\\\\xfa\\xc6[\\xa3 
> \\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94\\x7f*\\xd3\\xee\\xff\\x003b\ 
> \xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\\xe6\\xd9f\\xa0\\x96\\xdaw\ 
> \xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\\x8fc\\x98L\\x9a\\xb4\\xdc\ 
> \\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\\x91\\xedv\\xe2u\\xf3Q\ 
> \xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7\\xd6\!
>  \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\ 
> \xcf\\xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae!\\xd5\\xd8\\xd7\ 
> \x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\\x89\\x04Xc \\xc4\ 
> \xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\\xc1\\x08\ 
> \xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%?\\xff\\xd0\\xde\\x01"41 
> \\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2\\xc6\\xb9\\x80\\xee2\ 
> \x08-\\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\ 
> \x98-;\\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\ 
> \xed3\\xac\\x8d\\xba\\xfb\\x96/Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\ 
> \x16\\xff\\x00\\xe4\\x9a\\xa3\\xcaH\\x8e\\xdb\\xe8\\xcd\\x86 \\xcf}\ 
> \xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\\xb3\\x7fPk\ 
> \xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\\x18\\x8ep 
> \\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\\x15\\x89 
> \\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\\xc8\ 
> \'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
>  \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
> \x08O2
> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\ 
> \xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\ 
> \\\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\ 
> \xb1I\\x06\\x88=\\x9ez\\xa7:\\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\ 
> \x86\\xe2\\xfa\\xec\\xf5\\x1e\\xfd\\x002\\x08\\x13\\xff\\x00EUc.e\ 
> \x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x91\\xf9\\xc2?y+p\\xba\\x96]\\x91 
> {\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xabwO\\xea\\xe5\ 
> \xf8Ved_y`{\\x0b\\x05/y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\ 
> \xdbxcZ\\x00\\xaf\\xe8\\x9f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\ 
> \x97\\x15g\\r\\x98\\x03T\\xd3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\ 
> \x03\\xd6z\\x84i{\\xbc\\x95\\x8c\\x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\ 
> \x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,`{\\x0c\\xb5\\xc2AE\\x05$\ 
> \xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb3\\xba\\xd6s\\xb1qKk1m\ 
> \xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\\x89\\x8f\\xa3\\xec\ 
> \x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc3\\xaafT\\xcb\!
>  \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\ 
> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
> \x02@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf 
> (V\\xf2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\ 
> \xcd\\xce#\\xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f 
> %\\x1c0\\x01\\xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\ 
> \xb9\\xda\\xb9\\xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\ 
> \x05;^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
> \x01I\\xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-\ 
> \xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A 
> \\xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
> \x7fX/\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/\\xfe\\xbb\ 
> \xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!9\\x0c,{\ 
> \x9a$hJU\\xb6\\\\\\xd0~%+?\\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d 
> \\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x04.\\xd4\!
>  \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
> \x08O2
> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\ 
> \xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\ 
> \\\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\ 
> \xb1I\\x06\\x88=\\x9ez\\xa7:\\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\ 
> \x86\\xe2\\xfa\\xec\\xf5\\x1e\\xfd\\x002\\x08\\x13\\xff\\x00EUc.e\ 
> \x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x91\\xf9\\xc2?y+p\\xba\\x96]\\x91 
> {\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xabwO\\xea\\xe5\ 
> \xf8Ved_y`{\\x0b\\x05/y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\ 
> \xdbxcZ\\x00\\xaf\\xe8\\x9f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\ 
> \x97\\x15g\\r\\x98\\x03T\\xd3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\ 
> \x03\\xd6z\\x84i{\\xbc\\x95\\x8c\\x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\ 
> \x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,`{\\x0c\\xb5\\xc2AE\\x05$\ 
> \xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb3\\xba\\xd6s\\xb1qKk1m\ 
> \xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\\x89\\x8f\\xa3\\xec\ 
> \x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc3\\xaafT\\xcb\!
>  \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\ 
> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
> \x02@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf 
> (V\\xf2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\ 
> \xcd\\xce#\\xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f 
> %\\x1c0\\x01\\xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\ 
> \xb9\\xda\\xb9\\xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\ 
> \x05;^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
> \x01I\\xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-\ 
> \xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A 
> \\xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
> \x7fX/\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/\\xfe\\xbb\ 
> \xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!9\\x0c,{\ 
> \x9a$hJU\\xb6\\\\\\xd0~%+?\\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\ 
> \x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x04.\\x!
>  d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
> \x0
> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
> \xabW\\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4 
> \\xa8\\\\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\ 
> \x08\\xb1I\\x06\\x88=\\x9ez\\xa7:\\xf67c\\xf6\\xed\\xf2\\x07\\xee\ 
> \xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\xfd\\x002\\x08\\x13\\xff\ 
> \x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x91\\xf9\\xc2?y+p\\xba\ 
> \x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xabwO\\xea 
> \\xe5\\xf8Ved_y`{\\x0b\\x05/y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\ 
> \xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\ 
> \x908\\x97\\x15g\\r\\x98\\x03T\\xd3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\ 
> \xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\\x1e\\xbd\\x94\\xc7\\xc6A\ 
> \xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,`{\\x0c\\xb5\\xc2AE\\x05 
> $\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb3\\xba\\xd6s\\xb1qKk1m 
> \\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\\x89\\x8f\\xa3\\xec\ 
> \x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc3\\xaafT\\x!
>  cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
> \nMo\\x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\ 
> \x13\\x02@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\ 
> \xdf(V\\xf2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88> 
> \\xcd\\xce#\\xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\ 
> \x9f%\\x1c0\\x01\\xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\ 
> \xac\\xb9\\xda\\xb9\\xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\ 
> \xba{\\x05;^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\ 
> \x1eOy\\x01I\\xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\ 
> \xc0-\\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01 
> \\x06A\\xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\ 
> \xd7%s\\x7fX/\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/\\xfe\ 
> \xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!9\ 
> \x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?\\x9cS\\xab\\xf9\\xd7p\\x92\\x99\ 
> \x13\\xa7>d$\\xe3\\xb5\\x84\\x83\\xcf\\x1f\\x143 <file://!
>  \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed 
> \\x
> 04.\\xd4\\x95>
>
>
> Any thoughts on this?
>
>
> --Alec
>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Wed Apr 19 17:43:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr 19 17:43:35 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <4BB369CE-2F15-40A8-89D5-16B66F589039@dscpl.com.au>
References: <200604190909.k3J991Vm016070@modpython.org>
	<4BB369CE-2F15-40A8-89D5-16B66F589039@dscpl.com.au>
Message-ID: <38d0fa0ad9a5326f6fbec2bc6b4a352b@dscpl.com.au>

Arrrghhh, I'm going bonkers, the blank line is there now when I look
at it. :-(

Too many backslashes in there, strains the eyes.

Anyway, still sounds very much like the missing blank line seen before.
I'll have a look again later at it.

Graham

On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:

> Flash for some reason doesn't do the POST for multipart/form per  
> standard RFCs
> when no content type is associated with a filename block.
>
> See:
>
>   http://www.modpython.org/pipermail/mod_python/2006-April/020794.html
>
> for previous discussion.
>
> See more below.
>
> On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
>
>> I have been having a problem with FileReference.upload(url)  in flash  
>> 8, and to my amazement, found these posts.
>>
>> Here's the error:
>>
>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File  
>> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line  
>> 153, in __init__
>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =  
>> line.split(":", 1)
>>
>>
>> Here's what Flash sends to the server (obtained with  
>> self.req.log_error(repr(self.req.read())):
>>
>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':  
>> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',  
>> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':  
>> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',  
>> 'Content-Type': 'multipart/form-data;  
>> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':  
>> 'text/*'}
>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]  
>> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:  
>> form-data;  
>> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------ 
>> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
>
> See in above line how now content type but also no required extra  
> blank line.
> Add a content type for that filename block and see if it works.
>
> Graham
>
>> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent-Type:  
>> application/octet- 
>> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\\x02\\x 
>> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop  
>> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\\x00\\ 
>> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\\r\\x0 
>> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\\x00\\x0 
>> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04\\n\\ 
>> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00\\x00 
>> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\\x03\\x 
>> f5\\x00\\x00\\x00\\x00\\x00H\\x00/ 
>> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/ 
>> ff\\x00\\x01\\x!
>>   
>> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\\x00\\ 
>> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\ 
>> \x005\\x00\\x00\\x00\\x01\\x00- 
>> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\\x00\ 
>> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\\x00\ 
>> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\\x008BIM 
>> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
>>   
>> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\\x00\\x
>> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\\x00W\\xe 
>> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\\x00\\x1 
>> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File  
>> written by Adobe Photoshop\\xa8  
>> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\\xdb\ 
>> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\\x0b\\ 
>> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\\x13\\x1 
>> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0 
>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0 
>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\\r\\x 
>> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e\\x0e 
>> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c\\x0c 
>> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
>>   
>> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\\x04\ 
>> \x00\\x07\\xff\\xc4\\x01? 
>> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00 
>> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0 
>> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0 
>> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x 
>> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\\x08\\x 
>> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04! 
>> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\\xc1b34r 
>> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\\x93Td 
>> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\' 
>> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5 
>> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\\xa7\\ 
>> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\\x03\\ 
>> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03! 
>> 1\\x12\\x04AQaq"\\x!
>>   
>> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82\\x92
>> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T\\xa3 
>> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\\x85\\ 
>> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x9 
>> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xff\ 
>> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00? 
>> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02  
>> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac: 
>> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\\xd9\\x 
>> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\\xac\\xb 
>> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\\xa5\\ 
>> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94\\x7f 
>> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\\xe6\ 
>> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\\x8fc\\ 
>> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\\x91\\xe 
>> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7\\xd6 
>> \!
>>   
>> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\\xcf\ 
>> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae! 
>> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\\x89\\ 
>> x04Xc  
>> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\\xc1\\ 
>> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%? 
>> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2\\xc6 
>> \\xb9\\x80\\xee2\\x08- 
>> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-; 
>> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3\\xac 
>> \\x8d\\xba\\xfb\\x96/ 
>> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\\xcaH 
>> \\x8e\\xdb\\xe8\\xcd\\x86  
>> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\\xb3\\x 
>> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\\x18\\x 
>> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\\x15\\x8 
>> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\\xc8\\ 
>> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
>>   
>> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x 
>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\ 
>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06 
>> \\x88=\\x9ez\\xa7: 
>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x 
>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9 
>> 1\\xf9\\xc2? 
>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab 
>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9 
>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd 
>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\ 
>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk, 
>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb 
>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\ 
>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc 
>> 3\\xaafT\\xcb\!
>>   
>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1 
>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\ 
>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\ 
>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf 
>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf 
>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc 
>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\ 
>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\ 
>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX 
>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo! 
>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
>> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x 
>> 08\\xed\\x04.\\xd4\!
>>   
>> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x 
>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\ 
>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06 
>> \\x88=\\x9ez\\xa7: 
>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x 
>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9 
>> 1\\xf9\\xc2? 
>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab 
>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9 
>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd 
>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\ 
>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk, 
>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb 
>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\ 
>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc 
>> 3\\xaafT\\xcb\!
>>   
>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1 
>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\ 
>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\ 
>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf 
>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf 
>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc 
>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\ 
>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\ 
>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX 
>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo! 
>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
>> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\ 
>> \xd7\\x08\\xed\\x04.\\x!
>>   
>> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x0
>> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW 
>> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\ 
>> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\ 
>> x06\\x88=\\x9ez\\xa7: 
>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x 
>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9 
>> 1\\xf9\\xc2? 
>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab 
>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9 
>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd 
>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\ 
>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk, 
>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb 
>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\ 
>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc 
>> 3\\xaafT\\x!
>>   
>> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\ 
>> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x0 
>> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf 
>> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\ 
>> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\ 
>> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\ 
>> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\ 
>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\ 
>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX 
>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo! 
>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
>> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83\\xcf 
>> \\x1f\\x143 <file://!
>>   
>> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x
>> 04.\\xd4\\x95>
>>
>>
>> Any thoughts on this?
>>
>>
>> --Alec
>>
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From dan.eloff at gmail.com  Wed Apr 19 18:06:30 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Apr 19 18:06:34 2006
Subject: [mod_python] The new module loader
Message-ID: <4817b6fc0604191506u5a2c3303ue87701776fb7c89@mail.gmail.com>

I went digging through the mod_python files and discovered how the new
publisher loader works (using ModuleCache) and I borrowed the idea to import
modules for my handler.

The purpose of ModuleCache was to avoid sys.modules right?

I'm having some trouble with this, and I eventually tracked it down to
multiple versions of a dependancy module being loaded.

My handler loads one version, with empty module variables, while the actual
modules for the pages load different version(s) and populate them with data.
The changes are never reflected in the version kept by my handler (because
they are not the same)

This all makes sense, and is probably the intended effect, but what do you
do for modules like Session in mod_python, where MemorySession uses a static
class member to store sessions? Wouldn't the page modules each get their own
version and thusly prevent sessions from working?

I need to be able to reload modified modules, but also to make use of shared
modules. These seem to be conflicting needs, however. Does anybody have any
inisght into this situation that they can share?

Thanks,
-Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060419/f689f234/attachment.html
From grahamd at dscpl.com.au  Wed Apr 19 18:22:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr 19 18:22:29 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604191506u5a2c3303ue87701776fb7c89@mail.gmail.com>
References: <4817b6fc0604191506u5a2c3303ue87701776fb7c89@mail.gmail.com>
Message-ID: <e2b3e5d4e87553cd75ea8df43592610a@dscpl.com.au>


On 20/04/2006, at 8:06 AM, Dan Eloff wrote:

> I went digging through the mod_python files and discovered how the new  
> publisher loader works (using ModuleCache) and I borrowed the idea to  
> import modules for my handler.

Note that mod_python 3.3 will like be discarding that module loader
and the original one and replacing it with a grand unified module
reloader. :-)

> The purpose of ModuleCache was to avoid sys.modules right?

Yes.

> I'm having some trouble with this, and I eventually tracked it down to  
> multiple versions of a dependancy module being loaded.

Known issue. See:

    
http://www.dscpl.com.au/articles/modpython-003.html#multiple-module- 
instances

> My handler loads one version, with empty module variables, while the  
> actual modules for the pages load different version(s) and populate  
> them with data. The changes are never reflected in the version kept by  
> my handler (because they are not the same)
>
> This all makes sense, and is probably the intended effect, but what do  
> you do for modules like Session in mod_python, where MemorySession  
> uses a static class member to store sessions? Wouldn't the page  
> modules each get their own version and thusly prevent sessions from  
> working?

Also see:

    
http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-module- 
data

> I need to be able to reload modified modules, but also to make use of  
> shared modules. These seem to be conflicting needs, however. Does  
> anybody have any inisght into this situation that they can share?

Only that mod_python 3.3 will hopefully fix a lot of this stuff. If you
are prepared to give 3.3 source code out of subversion repository a go
to see if things work as you expect, let me know and will tell you the
magic to enable the unified module importer in 3.3 as at moment it is
still off by default.

Note though that even in 3.3, the "transfer of module data" issue still
has to be explicitly dealt with in some way. Although not confirmed how
this will be done, the new module importer as it stands now allows a
module to define a __clone__() method which will be called and which
can be used to transfer data from an old module to a new where data  
needs
to be preserved across reloads.

As I said, if interested I'll go into it more later.

Graham

From grahamd at dscpl.com.au  Wed Apr 19 20:06:30 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr 19 20:06:33 2006
Subject: [mod_python] The new module loader
Message-ID: <1145491590.7901@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> I am interested in how this unified module importer works and how it avoids
> these problems.
> 
> I'd really appreciate a brief description of it's architecture, not that
> you
> usually need all that much encouraging ;)
> 
> Thanks,
> -Dan

Bit busy today to elaborate too much, but you can start by reading my
far from complete document on it:

  http://www.dscpl.com.au/articles/modpython-007.html

Graham

> On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> >
> > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> >
> > > I went digging through the mod_python files and discovered how the
> new
> > > publisher loader works (using ModuleCache) and I borrowed the idea
> to
> > > import modules for my handler.
> >
> > Note that mod_python 3.3 will like be discarding that module loader
> > and the original one and replacing it with a grand unified module
> > reloader. :-)
> >
> > > The purpose of ModuleCache was to avoid sys.modules right?
> >
> > Yes.
> >
> > > I'm having some trouble with this, and I eventually tracked it down
> to
> > > multiple versions of a dependancy module being loaded.
> >
> > Known issue. See:
> >
> >
> > http://www.dscpl.com.au/articles/modpython-003.html#multiple-module-
> > instances
> >
> > > My handler loads one version, with empty module variables, while the
> > > actual modules for the pages load different version(s) and populate
> > > them with data. The changes are never reflected in the version kept
> by
> > > my handler (because they are not the same)
> > >
> > > This all makes sense, and is probably the intended effect, but what
> do
> > > you do for modules like Session in mod_python, where MemorySession
> > > uses a static class member to store sessions? Wouldn't the page
> > > modules each get their own version and thusly prevent sessions from
> > > working?
> >
> > Also see:
> >
> >
> > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-module-
> > data
> >
> > > I need to be able to reload modified modules, but also to make use
> of
> > > shared modules. These seem to be conflicting needs, however. Does
> > > anybody have any inisght into this situation that they can share?
> >
> > Only that mod_python 3.3 will hopefully fix a lot of this stuff. If you
> > are prepared to give 3.3 source code out of subversion repository a go
> > to see if things work as you expect, let me know and will tell you the
> > magic to enable the unified module importer in 3.3 as at moment it is
> > still off by default.
> >
> > Note though that even in 3.3, the "transfer of module data" issue still
> > has to be explicitly dealt with in some way. Although not confirmed how
> > this will be done, the new module importer as it stands now allows a
> > module to define a __clone__() method which will be called and which
> > can be used to transfer data from an old module to a new where data
> > needs
> > to be preserved across reloads.
> >
> > As I said, if interested I'll go into it more later.
> >
> > Graham
> >
> >
From grahamd at dscpl.com.au  Wed Apr 19 20:36:08 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Apr 19 20:36:12 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
Message-ID: <1145493368.24005@dscpl.user.openhosting.com>

Please keep posts on mailing list. :-)

That discussion covers two issues.

1. That in some cases it doesn't output required extra blank line.
This is what the Ruby patch was about.

2. That with Win32 client, it will do a POST with zero content.

As to 2, I note that your example request shows content length
header of "0", but then has content. I'm not sure if this is meant
to be the test post or the real thing.

Do you see any test POST with no actual content like they talk
about? Have you perhaps captured the test POST rather than
the real POST?

Graham

Alec Matusis wrote ..
> I found this discussion on Macromedia website:
> 
>  
> http://livedocs.macromedia.com/flash/8/main/wwhelp/wwhimpl/common/html/wwhel
> p.htm?context=LiveDocs_Parts&file=00002225.html
> 
> The relevant posts are 
> No screen name said on Sep 23, 2005 at 10:15 AM
> 
> and Macromedia's official response, acknowledging the bug:
> shimi2 said on Jan 19, 2006 at 11:22 AM : 
> 
> I am not 100% sure if I encountered the same problem, but it looks like
> it.
> It also could be that it tries to parse the empty POST request that flash
> issues to test the connection if the filesize is > 10KB (their comment
> shimi2 said on Sep 21, 2005 at 4:45 PM and also this is evidently the first
> empty line in my req.read() output ? )
> 
> They recommend a workaround for Ruby there. Since it seems to be a fairly
> common issue, would you be able to recommend a workaround for mod_python
> as
> well?
> 
> I wouldn't like to change mod_python sources, but rather, I would like
> to
> alter the bad HTTP request in my handler:
> 
> try:
>     myform=util.FieldStorage(req)
> except ValueError:
>     altered_req = MakeGoodHTTPRequest(req)
>     myform=util.FieldStorage(altered_req)
> 
> to handle 
> ValueError: need more than 1 value to unpack 
> that appears on line 153 in util.py ( h, v = line.split(":", 1) causes
> it -
> looks like the line does not have a colon ":" )
> 
> Could you advise on how this MakeGoodHTTPRequest should look like?
> 
> 
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
> Sent: Wednesday, April 19, 2006 2:43 PM
> To: Alec Matusis
> Cc: mod_python list
> Subject: Re: [mod_python] ValueError with Flash 8 FileReference.upload(url)
> 
> Arrrghhh, I'm going bonkers, the blank line is there now when I look
> at it. :-(
> 
> Too many backslashes in there, strains the eyes.
> 
> Anyway, still sounds very much like the missing blank line seen before.
> I'll have a look again later at it.
> 
> Graham
> 
> On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:
> 
> > Flash for some reason doesn't do the POST for multipart/form per  
> > standard RFCs
> > when no content type is associated with a filename block.
> >
> > See:
> >
> >   http://www.modpython.org/pipermail/mod_python/2006-April/020794.html
> >
> > for previous discussion.
> >
> > See more below.
> >
> > On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
> >
> >> I have been having a problem with FileReference.upload(url)  in flash
> >> 8, and to my amazement, found these posts.
> >>
> >> Here's the error:
> >>
> >> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File  
> >> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line  
> >> 153, in __init__
> >> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =  
> >> line.split(":", 1)
> >>
> >>
> >> Here's what Flash sends to the server (obtained with  
> >> self.req.log_error(repr(self.req.read())):
> >>
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':  
> >> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',  
> >> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':  
> >> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',  
> >> 'Content-Type': 'multipart/form-data;  
> >> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':  
> >> 'text/*'}
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]  
> >> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
> >> form-data;  
> >> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------ 
> >> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
> >
> > See in above line how now content type but also no required extra  
> > blank line.
> > Add a content type for that filename block and see if it works.
> >
> > Graham
> >
> >> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent-Type:
> >> application/octet- 
> >> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\\x02\\x
> >> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop  
> >> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\\x00\\
> >> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\\r\\x0
> >> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\\x00\\x0
> >> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04\\n\\
> >> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00\\x00
> >> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\\x03\\x
> >> f5\\x00\\x00\\x00\\x00\\x00H\\x00/ 
> >> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/ 
> >> ff\\x00\\x01\\x!
> >>   
> >> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\\x00\\
> >> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\
> >> \x005\\x00\\x00\\x00\\x01\\x00- 
> >> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\\x00\
> >> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\\x00\
> >> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\\x008BIM
> >> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
> >>   
> >> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\\x00\\x
> >> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\\x00W\\xe
> >> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\\x00\\x1
> >> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File
> >> written by Adobe Photoshop\\xa8  
> >> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\\xdb\
> >> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\\x0b\\
> >> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\\x13\\x1
> >> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0
> >> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0
> >> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\\r\\x
> >> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e\\x0e
> >> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
> >>   
> >> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\\x04\
> >> \x00\\x07\\xff\\xc4\\x01? 
> >> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00
> >> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0
> >> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0
> >> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x
> >> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\\x08\\x
> >> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04! 
> >> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\\xc1b34r
> >> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\\x93Td
> >> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\'
> >> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5
> >> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\\xa7\\
> >> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\\x03\\
> >> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03! 
> >> 1\\x12\\x04AQaq"\\x!
> >>   
> >> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82\\x92
> >> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T\\xa3
> >> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\\x85\\
> >> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x9
> >> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xff\
> >> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00? 
> >> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02  
> >> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac: 
> >> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\\xd9\\x
> >> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\\xac\\xb
> >> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\\xa5\\
> >> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94\\x7f
> >> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\\xe6\
> >> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\\x8fc\\
> >> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\\x91\\xe
> >> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7\\xd6
> >> \!
> >>   
> >> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\\xcf\
> >> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae! 
> >> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\\x89\\
> >> x04Xc  
> >> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\\xc1\\
> >> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%? 
> >> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2\\xc6
> >> \\xb9\\x80\\xee2\\x08- 
> >> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-; 
> >> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3\\xac
> >> \\x8d\\xba\\xfb\\x96/ 
> >> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\\xcaH
> >> \\x8e\\xdb\\xe8\\xcd\\x86  
> >> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\\xb3\\x
> >> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\\x18\\x
> >> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\\x15\\x8
> >> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\\xc8\\
> >> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
> >>   
> >> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
> >> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x
> >> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\
> >> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06
> >> \\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\xcb\!
> >>   
> >> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1
> >> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\
> >> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\
> >> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf
> >> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf
> >> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc
> >> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x
> >> 08\\xed\\x04.\\xd4\!
> >>   
> >> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
> >> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x
> >> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\
> >> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06
> >> \\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\xcb\!
> >>   
> >> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1
> >> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\
> >> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\
> >> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf
> >> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf
> >> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc
> >> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\
> >> \xd7\\x08\\xed\\x04.\\x!
> >>   
> >> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x0
> >> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW
> >> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\
> >> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\
> >> x06\\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\x!
> >>   
> >> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\
> >> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x0
> >> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf
> >> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\
> >> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\
> >> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\
> >> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83\\xcf
> >> \\x1f\\x143 <file://!
> >>   
> >> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x
> >> 04.\\xd4\\x95>
> >>
> >>
> >> Any thoughts on this?
> >>
> >>
> >> --Alec
> >>
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Thu Apr 20 00:07:06 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 00:07:11 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604192048o78680847t126d14ac78244fed@mail.gmail.com>
Message-ID: <1145506026.15083@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> It sounds interesting, it might just finally solve all my importing woes.
> How do I enable this UMI?
> 
> Thanks,
> -Dan

See:

  http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976

Graham

> On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Dan Eloff wrote ..
> > > I am interested in how this unified module importer works and how it
> > avoids
> > > these problems.
> > >
> > > I'd really appreciate a brief description of it's architecture, not
> that
> > > you
> > > usually need all that much encouraging ;)
> > >
> > > Thanks,
> > > -Dan
> >
> > Bit busy today to elaborate too much, but you can start by reading my
> > far from complete document on it:
> >
> >   http://www.dscpl.com.au/articles/modpython-007.html
> >
> > Graham
> >
> > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > >
> > > >
> > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > >
> > > > > I went digging through the mod_python files and discovered how
> the
> > > new
> > > > > publisher loader works (using ModuleCache) and I borrowed the idea
> > > to
> > > > > import modules for my handler.
> > > >
> > > > Note that mod_python 3.3 will like be discarding that module loader
> > > > and the original one and replacing it with a grand unified module
> > > > reloader. :-)
> > > >
> > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > >
> > > > Yes.
> > > >
> > > > > I'm having some trouble with this, and I eventually tracked it
> down
> > > to
> > > > > multiple versions of a dependancy module being loaded.
> > > >
> > > > Known issue. See:
> > > >
> > > >
> > > > http://www.dscpl.com.au/articles/modpython-003.html#multiple-module-
> > > > instances
> > > >
> > > > > My handler loads one version, with empty module variables, while
> the
> > > > > actual modules for the pages load different version(s) and populate
> > > > > them with data. The changes are never reflected in the version
> kept
> > > by
> > > > > my handler (because they are not the same)
> > > > >
> > > > > This all makes sense, and is probably the intended effect, but
> what
> > > do
> > > > > you do for modules like Session in mod_python, where MemorySession
> > > > > uses a static class member to store sessions? Wouldn't the page
> > > > > modules each get their own version and thusly prevent sessions
> from
> > > > > working?
> > > >
> > > > Also see:
> > > >
> > > >
> > > >
> > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-module-
> > > > data
> > > >
> > > > > I need to be able to reload modified modules, but also to make
> use
> > > of
> > > > > shared modules. These seem to be conflicting needs, however. Does
> > > > > anybody have any inisght into this situation that they can share?
> > > >
> > > > Only that mod_python 3.3 will hopefully fix a lot of this stuff.
> If
> > you
> > > > are prepared to give 3.3 source code out of subversion repository
> a go
> > > > to see if things work as you expect, let me know and will tell you
> the
> > > > magic to enable the unified module importer in 3.3 as at moment it
> is
> > > > still off by default.
> > > >
> > > > Note though that even in 3.3, the "transfer of module data" issue
> > still
> > > > has to be explicitly dealt with in some way. Although not confirmed
> > how
> > > > this will be done, the new module importer as it stands now allows
> a
> > > > module to define a __clone__() method which will be called and which
> > > > can be used to transfer data from an old module to a new where data
> > > > needs
> > > > to be preserved across reloads.
> > > >
> > > > As I said, if interested I'll go into it more later.
> > > >
> > > > Graham
> > > >
> > > >
> >
From e.deventer at boer.nl  Thu Apr 20 02:23:08 2006
From: e.deventer at boer.nl (e.deventer@boer.nl)
Date: Thu Apr 20 02:23:21 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <000c01c663b5$08e9ac80$0301a8c0@uberbox>
Message-ID: <OFC0D00152.55535594-ONC1257156.0020FD94-C1257156.0023142D@boer.nl>

"Lee Brown" <administrator@leebrown.org> wrote on 19-04-2006 15:27:41:
 
> Open Task Manager and look at the running processes; note the user 
> which Apache.exe is running under.  Keep the task manager open and 
> start a copy of the Python interpreter and note the user which 
> python.exe is running under.  (Usually, apache.exe is running as 
> user SYSTEM and python.exe will be running under the current user.) 

In the taskmanager in Windows 2000 the "user" is not visible, and when I 
go to View > Select columns (I'm using a Dutch version so that's a 
translation), there is no "user" column available for selection either. 
So I can't figure out which users Apache and Python are running under.. 

> Go to the directory where you installed Python and right-click 
> python.exe.  Under the security tab, verify that the user apache is 
> running as has "full control" permissions.

In the security tab of python.exe, there is only one usergroup defined: 
"Everyone", and it has full control. 

Any further suggestions?
 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/4d5e3d67/attachment.html
From grahamd at dscpl.com.au  Thu Apr 20 02:46:47 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 02:46:58 2006
Subject: [mod_python] error: could not import mod_python.apache
Message-ID: <1145515607.2595@dscpl.user.openhosting.com>

e.deventer@boer.nl wrote ..
> "Lee Brown" <administrator@leebrown.org> wrote on 19-04-2006 15:27:41:
>  
> > Open Task Manager and look at the running processes; note the user 
> > which Apache.exe is running under.  Keep the task manager open and 
> > start a copy of the Python interpreter and note the user which 
> > python.exe is running under.  (Usually, apache.exe is running as 
> > user SYSTEM and python.exe will be running under the current user.) 
> 
> In the taskmanager in Windows 2000 the "user" is not visible, and when
> I 
> go to View > Select columns (I'm using a Dutch version so that's a 
> translation), there is no "user" column available for selection either.
> So I can't figure out which users Apache and Python are running under..
> 
> > Go to the directory where you installed Python and right-click 
> > python.exe.  Under the security tab, verify that the user apache is 
> > running as has "full control" permissions.
> 
> In the security tab of python.exe, there is only one usergroup defined:
> "Everyone", and it has full control. 
> 
> Any further suggestions?

More often than not it is the permissions problem, so don't give
up on pursuing that totally just yet.

Some other questions, do you have more than one version of
Python installed on your system?

If you run Python from the command line and enter:

  from mod_python import psp

what error do you get? And yes this will error, what the error message
is is important, so make sure you quote it exactly in followup.

Graham

From matusis at matusis.com  Thu Apr 20 06:04:03 2006
From: matusis at matusis.com (Alec Matusis)
Date: Thu Apr 20 06:05:14 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <1145493368.24005@dscpl.user.openhosting.com>
Message-ID: <200604201005.k3KA54qh018317@modpython.org>

 
Sorry, I did not notice that I was replying to your personal email :-)

I think I captured both empty test POST and the POST with the actual
content:

This is the empty test POST:

[Thu Apr 20 02:54:06 2006] [error] [client 10.0.1.39] NEW REQUEST
HEADERS:{'Cookie': 'cookies_enabled.matusis.com=yes', 'Cache-Control':
'no-cache', 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':
'zz.alecm.dev.matusis.com', 'User-Agent': 'Shockwave Flash', 'Content-Type':
'multipart/form-data; boundary=----------Ij5gL6gL6gL6ei4Ef1ei4gL6Ij5Ij5',
'Accept': 'text/*'}
[Thu Apr 20 02:54:06 2006] [error] [client 10.0.1.39] NEW REQUEST:''


And this is the actual POST with data (shows 'Content-Length': '50346')

[Thu Apr 20 02:54:06 2006] [error] [client 10.0.1.39] NEW REQUEST
HEADERS:{'Cookie': 'cookies_enabled.matusis.com=yes', 'Cache-Control':
'no-cache', 'Connection': 'Keep-Alive', 'Content-Length': '50346', 'Host':
'zz.alecm.dev.matusis.com', 'User-Agent': 'Shockwave Flash', 'Content-Type':
'multipart/form-data; boundary=----------Ij5gL6gL6gL6ei4Ef1ei4gL6Ij5Ij5',
'Accept': 'text/*'}
[Thu Apr 20 02:54:06 2006] [error] [client 10.0.1.39] NEW
REQUEST:'------------Ij5gL6gL6gL6ei4Ef1ei4gL6Ij5Ij5\\r\\nContent-Disposition
: form-data;
name="Filename"\\r\\n\\r\\nalecsm.jpg\\r\\n------------Ij5gL6gL6gL6ei4Ef1ei4
gL6Ij5Ij5\\r\\nContent-Disposition: form-data; name="Filedata";
filename="alecsm.jpg"\\r\\nContent-Type:
application/octet-stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\
\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xed\\nzPhotoshop
3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\\x00\\x00\\x
01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\\r\\x00\\x00\\x00\
\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\\x00\\x00\\x00\\x00\\x08\\
x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04\\n\\x00\\x00\\x00\\x00\\x00\
\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00\\x00\\x00\\n\\x00\\x01\\x00\\x00\\
x00\\x00\\x00\\x00\\x00\\x028BIM\\x03\\xf5\\x00\\x00\\x00\\x00\\x00H\\x00/ff
\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/ff\\x00\\x01
\\x00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\\x00\\x00
\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x005\\x0
0\\x00\\x00\\x01\\x00-\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM
\\x03\\xf8\\x00\\x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff
\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\
\xff\\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\
xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\x
e8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xf
f\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\xe8\\x00\\x00
\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\
\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\xe8\\x00\\x008BIM\\x04\\x
08\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x
00\\x02@\\x00\\x00\\x00\\x008BIM\\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x0
0\\x00\\x00\\x018BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x08\\xe9\\x00\\x00\\x00\
\x01\\x00\\x00\\x00p\\x00\\x00\\x00L\\x00\\x00\\x01P\\x00\\x00c\\xc0\\x00\\x
00\\x08\\xcd\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01
\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File written by Adobe
Photoshop\\xa8
5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\\xdb\\x00\\
x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\\x0b\\n\\x0b\\x11\
\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\\x13\\x13\\x18\\x11\\x0c\\
x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x
0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0
c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\\r\\x0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\
\x0e\\x0e\\x14\\x14\\x0e\\x0e\\x0e\\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\
x11\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x
0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0
c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00L\\x00p\\x03\\x
01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\\x04\\x00\\x07\\xff\\x
c4\\x01?\\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x
00\\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x
01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x0
0\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x10\\x00\\x0
1\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\\x08\\x05\\x03\\x0c3\\x01\\x0
0\\x02\\x11\\x03\\x04!\\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#
$\\x15R\\xc1b34r\\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x8
3&D\\x93TdE\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3
F\\'\\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\
xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\\xa7\\xb7\\xc7
\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\\x03\\x04\\x05\\x06\
\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03!1\\x12\\x04AQaq"\\x13\\x052\\x
81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82\\x92CS\\x15cs4\\xf1%\
\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T\\xa3\\x17dEU6te\\xe2\\xf2\\
xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\
\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7
GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xff\\xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\
x03\\x11\\x00?\\x00+X\\xa6\\xd6\\xa7ktD\\rL\\xa5\\xf6\\xc45L5H5L5*U\\xb0\\x0
cS\\x0cR\\rS\\rF\\x95m3\\x90v\\xd9\\xb6&\\xb6\\x97v<\\x10\\x11q\\x1c\\xeb\\x
a9\\xde\\xe2\\t\\xdc\\xe1
@\\xd0\\xf8+>\\x9bH\\x82\\x01\\x07\\x9d\\x10:\\x86e\\x1d/\\xa7_\\x9dk&\\xbcf
n\\xf4\\xdb\\xed\\xdc\\xe2C+\\xafO\\xa3\\xeaX\\xe6%Z\\xa2\\xdbX\\xb4\\xb9\\x
f6\\x98ip\\rw\\x02{+-\\xa2\\x1a\\xd0\\xe0Zv\\x8d\\x0e\\x9d\\x97\\x93\\xe4\\x
0f\\xac\\xfdv\\xd6;
\\xd9s\\x8bw\\xd6\\xcd\\xc2\\xb65\\xa7\\xfd\\x1dC\\xd3\\xad\\x9f\\xf9\\xf1h\
\xf4?\\xac=k\\xea\\xd6ux]K\\xd4\\x7fNs\\x87\\xadE\\x84?`\\xb3\\xdb\\xf6\\x8c
k\\xbfI\\xb1\\xf5\\xfd?G\\x7f\\xa5\\x7f\\xfe\\x08\\x801\\xd8\\x10\\xba\\xa4\
\x05\\x98\\x90\\x1fF4\\x85\\x03H\\xd7Eq\\xcc\\xda\\\\\\xd3\\xac\\x18C
h\\x9dH\\xb6\\x93\\xebBuj\\xdb\\xda\\x84\\xe6\\xa5H\\xb7\\xff\\xd0\\xba\\xd1
\\xa2
\\x08m:"4\\xa0\\x96m\\x08\\x81\\xaa-\\x08\\xad\\tR\\x96\\rS\\rN\\x02\\x94#JS
\\x05a\\xc0\\xd8\\xed\\x95\\xc8\\xde\\xfd\\x046}\\xee\\xf7{}\\xad\\xfd\\xe5\
\x93\\xf5\\xb9\\x98\\xd9\\x1fW\\xb2\\xaa\\xa2\\xc2\\xe6\\xbc\\xd3\\xe9\\x93\
\x0e>\\xa0{-uN\\xf4\\xbd\\x9fE\\xafZ\\xc45\\xcd-p\\x0ei\\x10A\\xd4\\x10{\\x1
5[7\\xa6\\xd5\\x99\\x82\\xfc&E\\x01\\xfa\\xb7\\xd3\\x00\\r\\xd1\\xfb\\xad\\x
db\\xf4\\x907F\\xb7]\\x1a\\xb1\\xc5\\xb7W\\x07\\t\\xf7b1\\xb5\\xdb\\x8a=\\x1
6\\xc3C\\x9a\\xe2\\x1d\\xe4w\\xfb\\xd8\\xff\\x00\\xe57b\\xcd\\xebu\\x8e\\xa0
\\xc6TXkc\\x9fT\\xb8\\x87@c\\xdfX\\xfep\\xfb_\\xed\\xb1\\xff\\x00\\xcd\\xado
\\xb4:\\xda+-i\\x05\\x92\\xe7:\\x1a\\xe0\\x0cl\\r{l-P\\xa3\\x1d\\xd9\\xf6\\x
e0t\\xd6\\x9fM\\xff\\x00H\\xee\\xe4\\xb6\\x8f\\xd2;\\xf4m\\x9fs\\xda\\xc5V;\
\x8a\\x03\\xc3\\xcd\\xbb1\\xe97"\\x06\\xb7\\xb6\\xcfii\\x02\\xc7\\x81\\xa0\\
x04\\x81\\xf0\\x05\\x0fv\\xaa6X\\x1c\\xe2|L\\xa1\\xee\\xd5[h[7\\x047\\x059LB
J\\x7f\\xff\\xd1\\xb0\\xcb4Ec\\x96M9\\xf5\\xb9\\xbb\\x81\\x1b\\x00\\x92\\xf9
\\x1buW+\\xc8\\x13\\x08%\\xd2c\\x91\\x9aU*\\xad\\x95i\\x8e\\x94T\\x9c\\'*\\x
00\\xa4\\\\\\x8a\\x97%F\\xec\\xaaqi~U\\xef\\x15\\xd3@\\xdfe\\x87\\x80\\x07\\
xc1S\\xea\\x9d@`\\xe2\\x9b\\xa3u\\x8e;*i\\xe3q\\xfc\\xf7\\x7f"\\xb6\\xfb\\xd
73\\x99\\x9f\\x97\\x9e\\xd0/\\xb0\\xbd\\x80\\xee\\x0c\\x00\\x06\\x82\\x0e\\x
9bX=\\x9e\\xd8CUiz\\xb6js\\xef\\xc8\\xba\\xce\\x99q\\xae\\x9b\\x1e\\xf2\\x19
uRu;\\xc7\\xe8\\x9c\\xe6\\xba\\xbd\\xdb\\xbfyW\\xca\\xc1v1a\\xba\\xd3fE\\x9a
\\xbe\\xc0Ka\\x83\\xf3X\\x18}\\x8c\\xff\\x00\\xcf\\x89\\xd9\\x99uOy\\xac\\xb
0Yf\\xaf\\xb4\\xfb\\x9d\\xfda_\\xd0\\xff\\x00=\\x00=\\xd6\\xb8\\xbd\\xc4\\xb
bq\\x92]\\xab\\x9c\\x7fy\\xe5E\\x0c$\\x9b\\x97\\xa7[\\xa0\\xcd<\\xf1\\x03\\x
86\\x1e\\xad+\\x88\\xba\\r\\xeb\\xbdQ\\xad\\x1f\\xac\\xb9\\xc3\\x81\\xbc5\\x
c7\\xe6\\\\\\xd4\\\\_\\xac\\x1dE\\xb6\\x87\\xde\\xe1u\\'\\x96\\x16\\xb5\\xa6
?\\x90\\xe65\\xbe\\xe5\\x94u\\x0e<\\x804\\xfc\\x89\\x07\\x02A\\xe25\\xfb\\x9
5\\x8akY{\\xaa/\\xae\\xea\\xdbmn\\xdd[\\xc6\\xe6\\x9f\\x10Qw.\\x7f\\xea\\xde
Q4[\\x8a\\xf3&\\xa7o\\xacw\\xda\\xff\\x00\\xa6?\\xb3b\\xda\\x0fM\\\\\\r\\xbf
\\xff\\xd2\\xe5}k\\x0b\\xdd]m{\\x892\\xe2\\xf8|;\\x9f\\xa2\\xc8f\\xe6\\xff\\
x00ob\\xd8\\xc7\\xbe\\xc3\\xa9c\\xc0\\xf1
\\xa5\\x81\\xd2q\\xf0\\xc1\\xfa>\\x98\\x92\\t#O\\x0f\\xa3\\xb5\\xbf\\xe7oS\\
xcc8\\xf4\\xb3\\xd5\\xf5\\xbd)p\\xf7=\\xc4\\xb0\\xff\\x00"\\xb6}\\'\\x7fV\\x
b4\\xd3{\\xa5\\xbd\\x8f\\x94\\xd2\\x06\\xabF\\x9b\\xdaG+\\x93\\xc9\\xeb\\xb6
=\\xdbjl\\xbd\\xdfD\\x9648\\x81\\xaf\\xe8\\xe8g\\xf3m\\xff\\x00\\x84\\xbd\\x
ca\\xefM\\xca\\xbd\\xb4:\\xcb\\xf4s\\x8e\\xe7\\x12\\xe9\\x00\\x01\\xe3\\r\\x
db\\xb5!1t\\x9a/L-o\\x8aE\\xe0\\xacjz\\x90\\xb5\\xbb\\x9b
O\\xb4\\x9d$~\\xf0\\xfeJ\\xb2\\xcc\\xa9\\xee\\x9dhs\\xfe\\xb2\\xdc]uuv\\xad\
\x9b\\xfe%\\xe4\\xff\\x00\\xdfX\\xb2\\xaap\\r\\x04j\\x0c\\x11\\xf0V\\xfe\\xb
0_9\\x95\\xeb\\xc5`|\\x89s\\x95\\n\\x9f\\xa6\\xbd\\x89\\x07\\xf2\\xa7\\x8d\\
x96\\x1d\\xd9\\xbfqv\\xc0t\\xe5\\xdf\\x00\\xa4=\\xac\\x00\\xf2\\xe0IC\\x1a\\
xb5\\xc7\\xf7\\xb4\\x1f\\x00uOa\\x1b\\x83G\\x03


So I am not sure which one of the two causes util.FieldStorage(req) to
break:

the actual error is 

[Thu Apr 20 03:01:40 2006] [error] [client 10.0.1.39]   File
"/zeroworks/pg/alecm/im/scripts/_cmd.py", line 29, in __init__
[Thu Apr 20 03:01:40 2006] [error] [client 10.0.1.39]
self.form=util.FieldStorage(self.req)
[Thu Apr 20 03:01:40 2006] [error] [client 10.0.1.39]
[Thu Apr 20 03:01:40 2006] [error] [client 10.0.1.39]   File
"/usr/local/lib/python2.4/site-packages/mod_python/util.py", line 153, in
__init__
[Thu Apr 20 03:01:40 2006] [error] [client 10.0.1.39]     h, v =
line.split(":", 1)
[Thu Apr 20 03:01:40 2006] [error] [client 10.0.1.39] 
[Thu Apr 20 03:01:40 2006] [error] [client 10.0.1.39] ValueError: need more
than 1 value to unpack

This means that in h, v = line.split(":", 1) on line 153 in util.py, it
tries to split a string where it expects a colon ":", but the string has no
colon.
Could this be due to the first empty POST? Or is this due to the second
POST, which is corrupt?
And how do I counter that?

Thanks!  

 
-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Wednesday, April 19, 2006 5:36 PM
To: Alec Matusis
Cc: mod_python@modpython.org
Subject: RE: [mod_python] ValueError with Flash 8 FileReference.upload(url) 

Please keep posts on mailing list. :-)

That discussion covers two issues.

1. That in some cases it doesn't output required extra blank line.
This is what the Ruby patch was about.

2. That with Win32 client, it will do a POST with zero content.

As to 2, I note that your example request shows content length
header of "0", but then has content. I'm not sure if this is meant
to be the test post or the real thing.

Do you see any test POST with no actual content like they talk
about? Have you perhaps captured the test POST rather than
the real POST?

Graham

Alec Matusis wrote ..
> I found this discussion on Macromedia website:
> 
>  
>
http://livedocs.macromedia.com/flash/8/main/wwhelp/wwhimpl/common/html/wwhel
> p.htm?context=LiveDocs_Parts&file=00002225.html
> 
> The relevant posts are 
> No screen name said on Sep 23, 2005 at 10:15 AM
> 
> and Macromedia's official response, acknowledging the bug:
> shimi2 said on Jan 19, 2006 at 11:22 AM : 
> 
> I am not 100% sure if I encountered the same problem, but it looks like
> it.
> It also could be that it tries to parse the empty POST request that flash
> issues to test the connection if the filesize is > 10KB (their comment
> shimi2 said on Sep 21, 2005 at 4:45 PM and also this is evidently the
first
> empty line in my req.read() output ? )
> 
> They recommend a workaround for Ruby there. Since it seems to be a fairly
> common issue, would you be able to recommend a workaround for mod_python
> as
> well?
> 
> I wouldn't like to change mod_python sources, but rather, I would like
> to
> alter the bad HTTP request in my handler:
> 
> try:
>     myform=util.FieldStorage(req)
> except ValueError:
>     altered_req = MakeGoodHTTPRequest(req)
>     myform=util.FieldStorage(altered_req)
> 
> to handle 
> ValueError: need more than 1 value to unpack 
> that appears on line 153 in util.py ( h, v = line.split(":", 1) causes
> it -
> looks like the line does not have a colon ":" )
> 
> Could you advise on how this MakeGoodHTTPRequest should look like?
> 
> 
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
> Sent: Wednesday, April 19, 2006 2:43 PM
> To: Alec Matusis
> Cc: mod_python list
> Subject: Re: [mod_python] ValueError with Flash 8
FileReference.upload(url)
> 
> Arrrghhh, I'm going bonkers, the blank line is there now when I look
> at it. :-(
> 
> Too many backslashes in there, strains the eyes.
> 
> Anyway, still sounds very much like the missing blank line seen before.
> I'll have a look again later at it.
> 
> Graham
> 
> On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:
> 
> > Flash for some reason doesn't do the POST for multipart/form per  
> > standard RFCs
> > when no content type is associated with a filename block.
> >
> > See:
> >
> >   http://www.modpython.org/pipermail/mod_python/2006-April/020794.html
> >
> > for previous discussion.
> >
> > See more below.
> >
> > On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
> >
> >> I have been having a problem with FileReference.upload(url)  in flash
> >> 8, and to my amazement, found these posts.
> >>
> >> Here's the error:
> >>
> >> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File  
> >> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line  
> >> 153, in __init__
> >> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =  
> >> line.split(":", 1)
> >>
> >>
> >> Here's what Flash sends to the server (obtained with  
> >> self.req.log_error(repr(self.req.read())):
> >>
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':  
> >> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',  
> >> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':  
> >> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',  
> >> 'Content-Type': 'multipart/form-data;  
> >> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':  
> >> 'text/*'}
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]  
> >> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
> >> form-data;  
> >> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------ 
> >> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
> >
> > See in above line how now content type but also no required extra  
> > blank line.
> > Add a content type for that filename block and see if it works.
> >
> > Graham
> >
> >> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent-Type:
> >> application/octet- 
> >> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\\x02\\x
> >> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop  
> >> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\\x00\\
> >> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\\r\\x0
> >> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\\x00\\x0
> >> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04\\n\\
> >> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00\\x00
> >> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\\x03\\x
> >> f5\\x00\\x00\\x00\\x00\\x00H\\x00/ 
> >> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/ 
> >> ff\\x00\\x01\\x!
> >>   
> >> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\\x00\\
> >> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\
> >> \x005\\x00\\x00\\x00\\x01\\x00- 
> >> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\\x00\
> >> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\\x00\
> >> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\\x008BIM
> >> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
> >>   
> >> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\\x00\\x
> >> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\\x00W\\xe
> >> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\\x00\\x1
> >> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File
> >> written by Adobe Photoshop\\xa8  
> >> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\\xdb\
> >> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\\x0b\\
> >> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\\x13\\x1
> >> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0
> >> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0
> >> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\\r\\x
> >> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e\\x0e
> >> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
> >>   
> >> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\\x04\
> >> \x00\\x07\\xff\\xc4\\x01? 
> >> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00
> >> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0
> >> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0
> >> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x
> >> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\\x08\\x
> >> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04! 
> >> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\\xc1b34r
> >> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\\x93Td
> >> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\'
> >> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5
> >> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\\xa7\\
> >> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\\x03\\
> >> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03! 
> >> 1\\x12\\x04AQaq"\\x!
> >>   
> >> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82\\x92
> >> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T\\xa3
> >> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\\x85\\
> >> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x9
> >> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xff\
> >> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00? 
> >> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02  
> >> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac: 
> >> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\\xd9\\x
> >> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\\xac\\xb
> >> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\\xa5\\
> >> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94\\x7f
> >> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\\xe6\
> >> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\\x8fc\\
> >> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\\x91\\xe
> >> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7\\xd6
> >> \!
> >>   
> >> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\\xcf\
> >> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae! 
> >> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\\x89\\
> >> x04Xc  
> >> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\\xc1\\
> >> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%? 
> >> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2\\xc6
> >> \\xb9\\x80\\xee2\\x08- 
> >> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-; 
> >> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3\\xac
> >> \\x8d\\xba\\xfb\\x96/ 
> >> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\\xcaH
> >> \\x8e\\xdb\\xe8\\xcd\\x86  
> >> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\\xb3\\x
> >> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\\x18\\x
> >> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\\x15\\x8
> >> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\\xc8\\
> >> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
> >>   
> >> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
> >> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x
> >> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\
> >> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06
> >> \\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\xcb\!
> >>   
> >> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1
> >> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\
> >> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\
> >> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf
> >> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf
> >> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc
> >> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x
> >> 08\\xed\\x04.\\xd4\!
> >>   
> >> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
> >> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x
> >> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\
> >> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06
> >> \\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\xcb\!
> >>   
> >> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1
> >> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\
> >> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\
> >> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf
> >> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf
> >> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc
> >> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\
> >> \xd7\\x08\\xed\\x04.\\x!
> >>   
> >> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x0
> >> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW
> >> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\
> >> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\
> >> x06\\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\x!
> >>   
> >> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\
> >> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x0
> >> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf
> >> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\
> >> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\
> >> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\
> >> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83\\xcf
> >> \\x1f\\x143 <file://!
> >>   
> >> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x
> >> 04.\\xd4\\x95>
> >>
> >>
> >> Any thoughts on this?
> >>
> >>
> >> --Alec
> >>
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

From e.deventer at boer.nl  Thu Apr 20 06:44:36 2006
From: e.deventer at boer.nl (e.deventer@boer.nl)
Date: Thu Apr 20 06:44:53 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <1145515607.2595@dscpl.user.openhosting.com>
Message-ID: <OFE60C7CD4.75713E14-ONC1257156.003A7BA8-C1257156.003B03FC@boer.nl>

"Graham Dumpleton" <grahamd@dscpl.com.au> wrote on 20-04-2006 08:46:47:

> More often than not it is the permissions problem, so don't give
> up on pursuing that totally just yet.

I understand, but I don't know what else I can do..

> Some other questions, do you have more than one version of
> Python installed on your system?

I have only one version installed. 
 
> If you run Python from the command line and enter:
> 
>   from mod_python import psp
> 
> what error do you get? And yes this will error, what the error message
> is is important, so make sure you quote it exactly in followup.

This is the error that I get:

Traceback (most recent call last):
  File "<pyshell#0>", line 1, in -toplevel-
    from mod_python import psp
  File "C:\Python\Python24\Lib\site-packages\mod_python\psp.py", line 20, 
in -toplevel-
    import apache, Session, util, _psp
  File "C:\Python\Python24\Lib\site-packages\mod_python\apache.py", line 
28, in -toplevel-
    import _apache
ImportError: No module named _apache 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/5cb2246f/attachment.html
From matusis at matusis.com  Thu Apr 20 06:53:16 2006
From: matusis at matusis.com (Alec Matusis)
Date: Thu Apr 20 06:54:21 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <1145493368.24005@dscpl.user.openhosting.com>
Message-ID: <200604201054.k3KAsHhu012618@modpython.org>

One more thing:

I inserted the following code in util.py on line 153 where it could not
split the string:

                        try:
                            h, v = line.split(":", 1)
                        except Exception, e:
                            req.log_error('faulty line is: '+repr(line))

And the output was:

[Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
'Submit Query\\r\\n'
[Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
'------------ae0cH2ae0KM7KM7KM7gL6KM7ei4ei4'

I am not 100% sure what this means, but for some reason these two lines were
not captured by req.read() in my publisher.
And, I suppose, this SubmitQuery line is wrong? 

 

-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Wednesday, April 19, 2006 5:36 PM
To: Alec Matusis
Cc: mod_python@modpython.org
Subject: RE: [mod_python] ValueError with Flash 8 FileReference.upload(url) 

Please keep posts on mailing list. :-)

That discussion covers two issues.

1. That in some cases it doesn't output required extra blank line.
This is what the Ruby patch was about.

2. That with Win32 client, it will do a POST with zero content.

As to 2, I note that your example request shows content length
header of "0", but then has content. I'm not sure if this is meant
to be the test post or the real thing.

Do you see any test POST with no actual content like they talk
about? Have you perhaps captured the test POST rather than
the real POST?

Graham

Alec Matusis wrote ..
> I found this discussion on Macromedia website:
> 
>  
>
http://livedocs.macromedia.com/flash/8/main/wwhelp/wwhimpl/common/html/wwhel
> p.htm?context=LiveDocs_Parts&file=00002225.html
> 
> The relevant posts are 
> No screen name said on Sep 23, 2005 at 10:15 AM
> 
> and Macromedia's official response, acknowledging the bug:
> shimi2 said on Jan 19, 2006 at 11:22 AM : 
> 
> I am not 100% sure if I encountered the same problem, but it looks like
> it.
> It also could be that it tries to parse the empty POST request that flash
> issues to test the connection if the filesize is > 10KB (their comment
> shimi2 said on Sep 21, 2005 at 4:45 PM and also this is evidently the
first
> empty line in my req.read() output ? )
> 
> They recommend a workaround for Ruby there. Since it seems to be a fairly
> common issue, would you be able to recommend a workaround for mod_python
> as
> well?
> 
> I wouldn't like to change mod_python sources, but rather, I would like
> to
> alter the bad HTTP request in my handler:
> 
> try:
>     myform=util.FieldStorage(req)
> except ValueError:
>     altered_req = MakeGoodHTTPRequest(req)
>     myform=util.FieldStorage(altered_req)
> 
> to handle 
> ValueError: need more than 1 value to unpack 
> that appears on line 153 in util.py ( h, v = line.split(":", 1) causes
> it -
> looks like the line does not have a colon ":" )
> 
> Could you advise on how this MakeGoodHTTPRequest should look like?
> 
> 
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
> Sent: Wednesday, April 19, 2006 2:43 PM
> To: Alec Matusis
> Cc: mod_python list
> Subject: Re: [mod_python] ValueError with Flash 8
FileReference.upload(url)
> 
> Arrrghhh, I'm going bonkers, the blank line is there now when I look
> at it. :-(
> 
> Too many backslashes in there, strains the eyes.
> 
> Anyway, still sounds very much like the missing blank line seen before.
> I'll have a look again later at it.
> 
> Graham
> 
> On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:
> 
> > Flash for some reason doesn't do the POST for multipart/form per  
> > standard RFCs
> > when no content type is associated with a filename block.
> >
> > See:
> >
> >   http://www.modpython.org/pipermail/mod_python/2006-April/020794.html
> >
> > for previous discussion.
> >
> > See more below.
> >
> > On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
> >
> >> I have been having a problem with FileReference.upload(url)  in flash
> >> 8, and to my amazement, found these posts.
> >>
> >> Here's the error:
> >>
> >> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File  
> >> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line  
> >> 153, in __init__
> >> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =  
> >> line.split(":", 1)
> >>
> >>
> >> Here's what Flash sends to the server (obtained with  
> >> self.req.log_error(repr(self.req.read())):
> >>
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':  
> >> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',  
> >> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':  
> >> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',  
> >> 'Content-Type': 'multipart/form-data;  
> >> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':  
> >> 'text/*'}
> >> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]  
> >> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
> >> form-data;  
> >> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------ 
> >> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
> >
> > See in above line how now content type but also no required extra  
> > blank line.
> > Add a content type for that filename block and see if it works.
> >
> > Graham
> >
> >> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent-Type:
> >> application/octet- 
> >> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\\x02\\x
> >> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop  
> >> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\\x00\\
> >> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\\r\\x0
> >> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\\x00\\x0
> >> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04\\n\\
> >> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00\\x00
> >> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\\x03\\x
> >> f5\\x00\\x00\\x00\\x00\\x00H\\x00/ 
> >> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/ 
> >> ff\\x00\\x01\\x!
> >>   
> >> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\\x00\\
> >> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\
> >> \x005\\x00\\x00\\x00\\x01\\x00- 
> >> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\\x00\
> >> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
> >> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\\x00\
> >> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\\x008BIM
> >> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
> >>   
> >> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\\x00\\x
> >> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\\x00W\\xe
> >> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\\x00\\x1
> >> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File
> >> written by Adobe Photoshop\\xa8  
> >> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\\xdb\
> >> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\\x0b\\
> >> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\\x13\\x1
> >> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0
> >> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0
> >> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\\r\\x
> >> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e\\x0e
> >> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
> >> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
> >>   
> >> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\\x04\
> >> \x00\\x07\\xff\\xc4\\x01? 
> >> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x00
> >> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0
> >> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00\\x0
> >> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x
> >> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\\x08\\x
> >> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04! 
> >> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\\xc1b34r
> >> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\\x93Td
> >> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\'
> >> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5
> >> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\\xa7\\
> >> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\\x03\\
> >> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03! 
> >> 1\\x12\\x04AQaq"\\x!
> >>   
> >> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82\\x92
> >> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T\\xa3
> >> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\\x85\\
> >> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\\x86\\x9
> >> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\\xff\
> >> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00? 
> >> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02  
> >> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac: 
> >> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\\xd9\\x
> >> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\\xac\\xb
> >> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\\xa5\\
> >> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94\\x7f
> >> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\\xe6\
> >> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\\x8fc\\
> >> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\\x91\\xe
> >> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7\\xd6
> >> \!
> >>   
> >> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\\xcf\
> >> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae! 
> >> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\\x89\\
> >> x04Xc  
> >> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\\xc1\\
> >> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%? 
> >> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2\\xc6
> >> \\xb9\\x80\\xee2\\x08- 
> >> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-; 
> >> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3\\xac
> >> \\x8d\\xba\\xfb\\x96/ 
> >> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\\xcaH
> >> \\x8e\\xdb\\xe8\\xcd\\x86  
> >> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\\xb3\\x
> >> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\\x18\\x
> >> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\\x15\\x8
> >> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\\xc8\\
> >> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
> >>   
> >> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
> >> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x
> >> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\
> >> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06
> >> \\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\xcb\!
> >>   
> >> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1
> >> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\
> >> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\
> >> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf
> >> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf
> >> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc
> >> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x
> >> 08\\xed\\x04.\\xd4\!
> >>   
> >> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x08O2
> >> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW\\x
> >> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\\\\
> >> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\x06
> >> \\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\xcb\!
> >>   
> >> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\\x1
> >> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x02@\
> >> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf2z\
> >> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\\xf
> >> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\\xf
> >> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\\xc
> >> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\
> >> \xd7\\x08\\xed\\x04.\\x!
> >>   
> >> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\\x0
> >> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\\xabW
> >> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8\\
> >> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I\\
> >> x06\\x88=\\x9ez\\xa7: 
> >> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\\x1e\\x
> >> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\\xf70\\x9
> >> 1\\xf9\\xc2? 
> >> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2\\xab
> >> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/ 
> >> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\\xe8\\x9
> >> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\\x03T\\xd
> >> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\\x8c\
> >> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\\xa0Uk,
> >> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%1*2\\xb
> >> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\\xa5\
> >> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\\xb9\\xc
> >> 3\\xaafT\\x!
> >>   
> >> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\\nMo\
> >> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\\x0
> >> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\\xf
> >> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\\xce#\
> >> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\\x01\
> >> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\\xb9\
> >> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05; 
> >> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\\x01I\\
> >> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0- 
> >> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\\x06A\
> >> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\\x7fX
> >> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/ 
> >> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\\xa0yFo!
> >> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+? 
> >> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83\\xcf
> >> \\x1f\\x143 <file://!
> >>   
> >> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\\xed\\x
> >> 04.\\xd4\\x95>
> >>
> >>
> >> Any thoughts on this?
> >>
> >>
> >> --Alec
> >>
> >>
> >>
> >>
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

From nlv11281 at natlab.research.philips.com  Thu Apr 20 07:06:47 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Apr 20 07:06:57 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <OFE60C7CD4.75713E14-ONC1257156.003A7BA8-C1257156.003B03FC@boer.nl>
References: <OFE60C7CD4.75713E14-ONC1257156.003A7BA8-C1257156.003B03FC@boer.nl>
Message-ID: <44476B47.7000702@natlab.research.philips.com>

It may be a good idea to stop your apache server, re-install mod_python 
and then restart apache. The install fails when Apache runs during the 
install, but the install isn't too clear about that, as I recall.

Apache on windows will run by default using the local "SYSTEM" account. 
This account has access to just about everything on your local machine, 
but has no rights whatsover to access any network resource, even if you 
explicitly grant it access to some networked dirs. So your modules, 
python, and your scripts must be located on the local machine's drive(s).



Mike Looijmans
Philips Natlab / Topic Automation


e.deventer@boer.nl wrote:
> 
> "Graham Dumpleton" <grahamd@dscpl.com.au> wrote on 20-04-2006 08:46:47:
> 
>  > More often than not it is the permissions problem, so don't give
>  > up on pursuing that totally just yet.
> 
> I understand, but I don't know what else I can do..
> 
>  > Some other questions, do you have more than one version of
>  > Python installed on your system?
> 
> I have only one version installed.
>  
>  > If you run Python from the command line and enter:
>  >
>  >   from mod_python import psp
>  >
>  > what error do you get? And yes this will error, what the error message
>  > is is important, so make sure you quote it exactly in followup.
> 
> This is the error that I get:
> 
> Traceback (most recent call last):
>   File "<pyshell#0>", line 1, in -toplevel-
>     from mod_python import psp
>   File "C:\Python\Python24\Lib\site-packages\mod_python\psp.py", line 
> 20, in -toplevel-
>     import apache, Session, util, _psp
>   File "C:\Python\Python24\Lib\site-packages\mod_python\apache.py", line 
> 28, in -toplevel-
>     import _apache
> ImportError: No module named _apache
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Thu Apr 20 07:11:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 07:12:11 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <OFE60C7CD4.75713E14-ONC1257156.003A7BA8-C1257156.003B03FC@boer.nl>
References: <OFE60C7CD4.75713E14-ONC1257156.003A7BA8-C1257156.003B03FC@boer.nl>
Message-ID: <F607AA4C-268C-4A57-9953-1714AADEF7CD@dscpl.com.au>


On 20/04/2006, at 8:44 PM, e.deventer@boer.nl wrote:

>
> "Graham Dumpleton" <grahamd@dscpl.com.au> wrote on 20-04-2006  
> 08:46:47:
>
> > More often than not it is the permissions problem, so don't give
> > up on pursuing that totally just yet.
>
> I understand, but I don't know what else I can do..
>
> > Some other questions, do you have more than one version of
> > Python installed on your system?
>
> I have only one version installed.
>
> > If you run Python from the command line and enter:
> >
> >   from mod_python import psp
> >
> > what error do you get? And yes this will error, what the error  
> message
> > is is important, so make sure you quote it exactly in followup.
>
> This is the error that I get:
>
> Traceback (most recent call last):
>   File "<pyshell#0>", line 1, in -toplevel-
>     from mod_python import psp
>   File "C:\Python\Python24\Lib\site-packages\mod_python\psp.py",  
> line 20, in -toplevel-
>     import apache, Session, util, _psp
>   File "C:\Python\Python24\Lib\site-packages\mod_python\apache.py",  
> line 28, in -toplevel-
>     import _apache
> ImportError: No module named _apache

Well, at least the Python parts of mod_python are installed in the  
correct spot.

Can you now find the mod_python startup message from the Apache error
log and post it here just so we can confirm what it says about  
versions of
mod_python/Python being found are correct. Message is something like:

Apache/2.2.0 (Unix) mod_python/3.3.0-dev-20060312 Python/2.3.5  
configured -- resuming normal operations

Graham
From e.deventer at boer.nl  Thu Apr 20 07:20:07 2006
From: e.deventer at boer.nl (e.deventer@boer.nl)
Date: Thu Apr 20 07:20:32 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <44476B47.7000702@natlab.research.philips.com>
Message-ID: <OF867D8240.31C21C26-ONC1257156.003E0E45-C1257156.003E444D@boer.nl>

Mike Looijmans <nlv11281@natlab.research.philips.com> wrote on 20-04-2006 
13:06:47:

> It may be a good idea to stop your apache server, re-install mod_python 
> and then restart apache. The install fails when Apache runs during the 
> install, but the install isn't too clear about that, as I recall.

I was pretty sure that Apache wasn't running when I installed mod_python, 
but to make sure I installed mod_python again (with Apache not running). 
It made no difference.
 
> Apache on windows will run by default using the local "SYSTEM" account. 
> This account has access to just about everything on your local machine, 
> but has no rights whatsover to access any network resource, even if you 
> explicitly grant it access to some networked dirs. So your modules, 
> python, and your scripts must be located on the local machine's 
drive(s).

All my files are on the local C: drive. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/6051e6aa/attachment.html
From e.deventer at boer.nl  Thu Apr 20 07:21:30 2006
From: e.deventer at boer.nl (e.deventer@boer.nl)
Date: Thu Apr 20 07:22:06 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <F607AA4C-268C-4A57-9953-1714AADEF7CD@dscpl.com.au>
Message-ID: <OF7021E746.B4E160C2-ONC1257156.003DD947-C1257156.003E64AA@boer.nl>

Graham Dumpleton <grahamd@dscpl.com.au> wrote on 20-04-2006 13:11:44:

> Can you now find the mod_python startup message from the Apache error
> log and post it here just so we can confirm what it says about 
> versions of
> mod_python/Python being found are correct. Message is something like:
> 
> Apache/2.2.0 (Unix) mod_python/3.3.0-dev-20060312 Python/2.3.5 
> configured -- resuming normal operations

The message from my log is:
Apache/2.0.55 (Win32) mod_python/3.2.8 Python/2.4.2 configured -- resuming 
normal operations 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/466930d3/attachment.html
From grahamd at dscpl.com.au  Thu Apr 20 07:28:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 07:29:21 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <200604201054.k3KAsHhu012618@modpython.org>
References: <200604201054.k3KAsHhu012618@modpython.org>
Message-ID: <8F10456E-8E17-4260-B91E-E0D9EE82E54D@dscpl.com.au>


On 20/04/2006, at 8:53 PM, Alec Matusis wrote:

> One more thing:
>
> I inserted the following code in util.py on line 153 where it could  
> not
> split the string:
>
>                         try:
>                             h, v = line.split(":", 1)
>                         except Exception, e:
>                             req.log_error('faulty line is: '+repr 
> (line))
>
> And the output was:
>
> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
> 'Submit Query\\r\\n'
> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
> '------------ae0cH2ae0KM7KM7KM7gL6KM7ei4ei4'
>
> I am not 100% sure what this means, but for some reason these two  
> lines were
> not captured by req.read() in my publisher.
> And, I suppose, this SubmitQuery line is wrong?

The request you think is the problem, possibly isn't the problem  
then. :-)

Anyway, in util.FieldStorage, instead of using code:

            while line not in ('\r','\r\n'):
                # we read the headers until we reach an empty line
                # NOTE : a single \n would mean the entity is  
malformed, but
                # we're tolerating it anyway
                h, v = line.split(":", 1)

try using the following code instead:

            while line not in ('\r','\r\n') and line.find(':') != -1:
                # we read the headers until we reach an empty line
                # NOTE : a single \n would mean the entity is  
malformed, but
                # we're tolerating it anyway
                h, v = line.split(":", 1)

I have no idea if this will actually work. It attempts to break out  
of header parsing
if it finds a line with no colon in it.

This will not work for multiline headers, but then mod_python doesn't  
work for
them anyway:

   http://issues.apache.org/jira/browse/MODPYTHON-159

Graham

> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Wednesday, April 19, 2006 5:36 PM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: RE: [mod_python] ValueError with Flash 8  
> FileReference.upload(url)
>
> Please keep posts on mailing list. :-)
>
> That discussion covers two issues.
>
> 1. That in some cases it doesn't output required extra blank line.
> This is what the Ruby patch was about.
>
> 2. That with Win32 client, it will do a POST with zero content.
>
> As to 2, I note that your example request shows content length
> header of "0", but then has content. I'm not sure if this is meant
> to be the test post or the real thing.
>
> Do you see any test POST with no actual content like they talk
> about? Have you perhaps captured the test POST rather than
> the real POST?
>
> Graham
>
> Alec Matusis wrote ..
>> I found this discussion on Macromedia website:
>>
>>
>>
> http://livedocs.macromedia.com/flash/8/main/wwhelp/wwhimpl/common/ 
> html/wwhel
>> p.htm?context=LiveDocs_Parts&file=00002225.html
>>
>> The relevant posts are
>> No screen name said on Sep 23, 2005 at 10:15 AM
>>
>> and Macromedia's official response, acknowledging the bug:
>> shimi2 said on Jan 19, 2006 at 11:22 AM :
>>
>> I am not 100% sure if I encountered the same problem, but it looks  
>> like
>> it.
>> It also could be that it tries to parse the empty POST request  
>> that flash
>> issues to test the connection if the filesize is > 10KB (their  
>> comment
>> shimi2 said on Sep 21, 2005 at 4:45 PM and also this is evidently the
> first
>> empty line in my req.read() output ? )
>>
>> They recommend a workaround for Ruby there. Since it seems to be a  
>> fairly
>> common issue, would you be able to recommend a workaround for  
>> mod_python
>> as
>> well?
>>
>> I wouldn't like to change mod_python sources, but rather, I would  
>> like
>> to
>> alter the bad HTTP request in my handler:
>>
>> try:
>>     myform=util.FieldStorage(req)
>> except ValueError:
>>     altered_req = MakeGoodHTTPRequest(req)
>>     myform=util.FieldStorage(altered_req)
>>
>> to handle
>> ValueError: need more than 1 value to unpack
>> that appears on line 153 in util.py ( h, v = line.split(":", 1)  
>> causes
>> it -
>> looks like the line does not have a colon ":" )
>>
>> Could you advise on how this MakeGoodHTTPRequest should look like?
>>
>>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: Wednesday, April 19, 2006 2:43 PM
>> To: Alec Matusis
>> Cc: mod_python list
>> Subject: Re: [mod_python] ValueError with Flash 8
> FileReference.upload(url)
>>
>> Arrrghhh, I'm going bonkers, the blank line is there now when I look
>> at it. :-(
>>
>> Too many backslashes in there, strains the eyes.
>>
>> Anyway, still sounds very much like the missing blank line seen  
>> before.
>> I'll have a look again later at it.
>>
>> Graham
>>
>> On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:
>>
>>> Flash for some reason doesn't do the POST for multipart/form per
>>> standard RFCs
>>> when no content type is associated with a filename block.
>>>
>>> See:
>>>
>>>   http://www.modpython.org/pipermail/mod_python/2006-April/ 
>>> 020794.html
>>>
>>> for previous discussion.
>>>
>>> See more below.
>>>
>>> On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
>>>
>>>> I have been having a problem with FileReference.upload(url)  in  
>>>> flash
>>>> 8, and to my amazement, found these posts.
>>>>
>>>> Here's the error:
>>>>
>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File
>>>> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line
>>>> 153, in __init__
>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =
>>>> line.split(":", 1)
>>>>
>>>>
>>>> Here's what Flash sends to the server (obtained with
>>>> self.req.log_error(repr(self.req.read())):
>>>>
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':
>>>> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',
>>>> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':
>>>> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',
>>>> 'Content-Type': 'multipart/form-data;
>>>> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':
>>>> 'text/*'}
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]
>>>> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent- 
>>>> Disposition:
>>>> form-data;
>>>> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------
>>>> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
>>>
>>> See in above line how now content type but also no required extra
>>> blank line.
>>> Add a content type for that filename block and see if it works.
>>>
>>> Graham
>>>
>>>> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent- 
>>>> Type:
>>>> application/octet-
>>>> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\ 
>>>> \x02\\x
>>>> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop
>>>> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\ 
>>>> \x00\\
>>>> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\ 
>>>> \r\\x0
>>>> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\ 
>>>> \x00\\x0
>>>> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04 
>>>> \\n\\
>>>> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00 
>>>> \\x00
>>>> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\ 
>>>> \x03\\x
>>>> f5\\x00\\x00\\x00\\x00\\x00H\\x00/
>>>> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/
>>>> ff\\x00\\x01\\x!
>>>>
>>>> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\ 
>>>> \x00\\
>>>> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\ 
>>>> \x01\
>>>> \x005\\x00\\x00\\x00\\x01\\x00-
>>>> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\ 
>>>> \x00\
>>>> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\ 
>>>> \x00\
>>>> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\ 
>>>> \x008BIM
>>>> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
>>>>
>>>> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\ 
>>>> \x00\\x
>>>> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\ 
>>>> \x00W\\xe
>>>> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\ 
>>>> \x00\\x1
>>>> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File
>>>> written by Adobe Photoshop\\xa8
>>>> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\ 
>>>> \xdb\
>>>> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\ 
>>>> \x0b\\
>>>> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\ 
>>>> \x13\\x1
>>>> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\ 
>>>> \x0c\\x0
>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\ 
>>>> \x0c\\x0
>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\ 
>>>> \r\\x
>>>> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e 
>>>> \\x0e
>>>> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
>>>>
>>>> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\ 
>>>> \x04\
>>>> \x00\\x07\\xff\\xc4\\x01?
>>>> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00 
>>>> \\x00
>>>> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\ 
>>>> \n\\x0
>>>> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\ 
>>>> \x00\\x0
>>>> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\ 
>>>> \n\\x
>>>> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\ 
>>>> \x08\\x
>>>> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04!
>>>> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\ 
>>>> \xc1b34r
>>>> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\ 
>>>> \x93Td
>>>> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\ 
>>>> \xf3F\\'
>>>> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5 
>>>> \\xe5
>>>> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\ 
>>>> \xa7\\
>>>> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\ 
>>>> \x03\\
>>>> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03!
>>>> 1\\x12\\x04AQaq"\\x!
>>>>
>>>> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82 
>>>> \\x92
>>>> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T 
>>>> \\xa3
>>>> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\ 
>>>> \x85\\
>>>> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\ 
>>>> \x86\\x9
>>>> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\ 
>>>> \xff\
>>>> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00?
>>>> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02
>>>> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac:
>>>> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\ 
>>>> \xd9\\x
>>>> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\ 
>>>> \xac\\xb
>>>> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\ 
>>>> \xa5\\
>>>> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94 
>>>> \\x7f
>>>> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\ 
>>>> \xe6\
>>>> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\ 
>>>> \x8fc\\
>>>> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\ 
>>>> \x91\\xe
>>>> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7 
>>>> \\xd6
>>>> \!
>>>>
>>>> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\ 
>>>> \xcf\
>>>> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae!
>>>> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\ 
>>>> \x89\\
>>>> x04Xc
>>>> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\ 
>>>> \xc1\\
>>>> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%?
>>>> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2 
>>>> \\xc6
>>>> \\xb9\\x80\\xee2\\x08-
>>>> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-;
>>>> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3 
>>>> \\xac
>>>> \\x8d\\xba\\xfb\\x96/
>>>> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\ 
>>>> \xcaH
>>>> \\x8e\\xdb\\xe8\\xcd\\x86
>>>> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\ 
>>>> \xb3\\x
>>>> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\ 
>>>> \x18\\x
>>>> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\ 
>>>> \x15\\x8
>>>> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\ 
>>>> \xc8\\
>>>> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
>>>>
>>>> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
>>>> \x08O2
>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW\\x
>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8 
>>>> \\\\\
>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I 
>>>> \\x06
>>>> \\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\xcb\!
>>>>
>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\\x1
>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
>>>> \x02@\
>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\ 
>>>> \xf2z\
>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\\xf
>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\\xf
>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\\xc
>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\ 
>>>> \xd7\\x
>>>> 08\\xed\\x04.\\xd4\!
>>>>
>>>> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
>>>> \x08O2
>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW\\x
>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8 
>>>> \\\\\
>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I 
>>>> \\x06
>>>> \\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\xcb\!
>>>>
>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\\x1
>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
>>>> \x02@\
>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\ 
>>>> \xf2z\
>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\\xf
>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\\xf
>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\\xc
>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\ 
>>>> \xc666X\
>>>> \xd7\\x08\\xed\\x04.\\x!
>>>>
>>>> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\ 
>>>> \xa4bdT\\x0
>>>> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW
>>>> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\ 
>>>> \xa8\\
>>>> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\ 
>>>> \xb1I\\
>>>> x06\\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\x!
>>>>
>>>> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\
>>>> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\ 
>>>> \x13\\x0
>>>> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf 
>>>> (V\\xf
>>>> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\
>>>> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\
>>>> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\
>>>> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83 
>>>> \\xcf
>>>> \\x1f\\x143 <file://!
>>>>
>>>> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\ 
>>>> \xed\\x
>>>> 04.\\xd4\\x95>
>>>>
>>>>
>>>> Any thoughts on this?
>>>>
>>>>
>>>> --Alec
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Thu Apr 20 07:46:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 07:46:47 2006
Subject: [mod_python] Trouble getting mod_python to work
In-Reply-To: <bc4bd5f00604190740v7d705d31g9af1f6966b2de481@mail.gmail.com>
References: <bc4bd5f00604190740v7d705d31g9af1f6966b2de481@mail.gmail.com>
Message-ID: <FCF8B653-546E-4E77-A72B-198551836B9F@dscpl.com.au>

The Apache setup may be that they disallow you to even have a .htaccess
file. Make sure they aren't using:

   AllowOverride None

Ensure they have at least:

   AllowOverride FileInfo

This was mentioned in the getting started document I referred you to:
   If instead of the string "mptest.py" you see the actual source code

   contained in the file, or your browser asks you to save the response

   to a file and that file contains the source code, the main Apache  
configuration

   may not be enabled so as to allow you to specify Apache handlers  
in a ".htaccess"

   file. To enable this facility, edit your main Apache configuration  
file and add in an

   appropriate location:

   <Directory /some/directory>
   AllowOverride FileInfo
   </Directory>
   Replace "/some/directory" with the absolute pathname to the  
directory in which

   the ".htaccess" file is located. You will need to restart Apache  
before this

   configuration change takes affect.

In your case it is a .psp file and not a .py file, but same issue  
applies.

Graham

On 20/04/2006, at 12:40 AM, John Salerno wrote:

> Hi everyone. I wrote before about having some trouble getting
> mod_python set up on my server. I'm not the one doing it, but I've
> been in touch with the admins. Whenever I try to access a PSP page, it
> simply shows the HTML source code instead of properly running it. I
> thought maybe this had to do with incorrect use of handlers, but I
> don't know what to do about it. The htaccess file reads:
>
> AddHandler mod_python .psp
> PythonHandler mod_python.psp
> PythonDebug On
>
> At one point they had their own custom handlers in there, but they
> changed it back. Another thing they just tried was changing the
> httpd.conf file and it reads:
>
> #<IfDefine HAVE_PYTHON>
>
> LoadModule python_module      /usr/lib/apache/mod_python.so
>
>  #<IfDefine HAVE_PYTHON>
>
> #AddModule mod_python.c
>
> #</IfDefine>
>
> AddModule mod_python.c
>
>  <Directory "/var/www/html">
>
>  AddHandler mod_python .psp
>
> PythonHandler mod_python.psp
>
> PythonDebug On
>
>  </Directory>
>
> But this kind of stuff is beyond me. My only other experience with
> mod_python was easy, because it was properly set up and I only had to
> write PSP files. I don't know what else needs to be done here to get
> it working. Any help would be appreciated.
>
> Thanks,
> John
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From administrator at leebrown.org  Thu Apr 20 08:09:35 2006
From: administrator at leebrown.org (Lee Brown)
Date: Thu Apr 20 08:12:07 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <OFC0D00152.55535594-ONC1257156.0020FD94-C1257156.0023142D@boer.nl>
Message-ID: <001e01c66473$4acad020$0301a8c0@uberbox>

Greetings!
 
O.K., try this for both python.exe and apache.exe:
 
Right click the file, select Properties, click the Security tab, and then
down at the bottom click Advanced.  Then click the Owner tab.  Do both files
have the same owner?

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of e.deventer@boer.nl
Sent: Thursday, April 20, 2006 2:23 AM
To: mod_python@modpython.org
Subject: RE: [mod_python] error: could not import mod_python.apache



In the taskmanager in Windows 2000 the "user" is not visible, and when I go
to View > Select columns (I'm using a Dutch version so that's a
translation), there is no "user" column available for selection either.   
So I can't figure out which users Apache and Python are running under.. 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/1ad099e5/attachment.html
From e.deventer at boer.nl  Thu Apr 20 08:55:06 2006
From: e.deventer at boer.nl (e.deventer@boer.nl)
Date: Thu Apr 20 08:55:12 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <001e01c66473$4acad020$0301a8c0@uberbox>
Message-ID: <OF0EF1A69E.906F01C8-ONC1257156.0043CB9D-C1257156.0046F6AE@boer.nl>

"Lee Brown" <administrator@leebrown.org> wrote on 20-04-2006 14:09:35:

> O.K., try this for both python.exe and apache.exe:
> 
> Right click the file, select Properties, click the Security tab, and
> then down at the bottom click Advanced.  Then click the Owner tab. 
> Do both files have the same owner?

They have the same owner: Administrator. 
(I use Windows with a standard user account, I can get the Administrator 
to login and make changes if necessary) 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/59238578/attachment.html
From dan.eloff at gmail.com  Thu Apr 20 14:17:08 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Apr 20 14:17:18 2006
Subject: [SPAM] Re: [mod_python] The new module loader
In-Reply-To: <1145506026.15083@dscpl.user.openhosting.com>
References: <4817b6fc0604192048o78680847t126d14ac78244fed@mail.gmail.com>
	<1145506026.15083@dscpl.user.openhosting.com>
Message-ID: <4817b6fc0604201117i497313b3ye1b442804fedb827@mail.gmail.com>

Excellent, now I just have to figure out how to get it from the svn. There's
no instructions (that I found) on the mod_python site, probably because it's
something everybody but me knows.I downloaded TortoiseSVN because that seems
to be what you need on windows, and it when I click on checkout it wants to
know the url of the repository.

http://svn.apache.org and http://svn.apache.org/httpd/mod_python/ do not
work.

What's the url (and am I even going about this the right way?)

Thanks,
-Dan

On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Dan Eloff wrote ..
> > It sounds interesting, it might just finally solve all my importing
> woes.
> > How do I enable this UMI?
> >
> > Thanks,
> > -Dan
>
> See:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
>
> Graham
>
> > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > >
> > > Dan Eloff wrote ..
> > > > I am interested in how this unified module importer works and how it
> > > avoids
> > > > these problems.
> > > >
> > > > I'd really appreciate a brief description of it's architecture, not
> > that
> > > > you
> > > > usually need all that much encouraging ;)
> > > >
> > > > Thanks,
> > > > -Dan
> > >
> > > Bit busy today to elaborate too much, but you can start by reading my
> > > far from complete document on it:
> > >
> > >   http://www.dscpl.com.au/articles/modpython-007.html
> > >
> > > Graham
> > >
> > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > >
> > > > >
> > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > >
> > > > > > I went digging through the mod_python files and discovered how
> > the
> > > > new
> > > > > > publisher loader works (using ModuleCache) and I borrowed the
> idea
> > > > to
> > > > > > import modules for my handler.
> > > > >
> > > > > Note that mod_python 3.3 will like be discarding that module
> loader
> > > > > and the original one and replacing it with a grand unified module
> > > > > reloader. :-)
> > > > >
> > > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > > >
> > > > > Yes.
> > > > >
> > > > > > I'm having some trouble with this, and I eventually tracked it
> > down
> > > > to
> > > > > > multiple versions of a dependancy module being loaded.
> > > > >
> > > > > Known issue. See:
> > > > >
> > > > >
> > > > >
> http://www.dscpl.com.au/articles/modpython-003.html#multiple-module-
> > > > > instances
> > > > >
> > > > > > My handler loads one version, with empty module variables, while
> > the
> > > > > > actual modules for the pages load different version(s) and
> populate
> > > > > > them with data. The changes are never reflected in the version
> > kept
> > > > by
> > > > > > my handler (because they are not the same)
> > > > > >
> > > > > > This all makes sense, and is probably the intended effect, but
> > what
> > > > do
> > > > > > you do for modules like Session in mod_python, where
> MemorySession
> > > > > > uses a static class member to store sessions? Wouldn't the page
> > > > > > modules each get their own version and thusly prevent sessions
> > from
> > > > > > working?
> > > > >
> > > > > Also see:
> > > > >
> > > > >
> > > > >
> > >
> http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-module-
> > > > > data
> > > > >
> > > > > > I need to be able to reload modified modules, but also to make
> > use
> > > > of
> > > > > > shared modules. These seem to be conflicting needs, however.
> Does
> > > > > > anybody have any inisght into this situation that they can
> share?
> > > > >
> > > > > Only that mod_python 3.3 will hopefully fix a lot of this stuff.
> > If
> > > you
> > > > > are prepared to give 3.3 source code out of subversion repository
> > a go
> > > > > to see if things work as you expect, let me know and will tell you
> > the
> > > > > magic to enable the unified module importer in 3.3 as at moment it
> > is
> > > > > still off by default.
> > > > >
> > > > > Note though that even in 3.3, the "transfer of module data" issue
> > > still
> > > > > has to be explicitly dealt with in some way. Although not
> confirmed
> > > how
> > > > > this will be done, the new module importer as it stands now allows
> > a
> > > > > module to define a __clone__() method which will be called and
> which
> > > > > can be used to transfer data from an old module to a new where
> data
> > > > > needs
> > > > > to be preserved across reloads.
> > > > >
> > > > > As I said, if interested I'll go into it more later.
> > > > >
> > > > > Graham
> > > > >
> > > > >
> > >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/db6e21d5/attachment.html
From grahamd at dscpl.com.au  Thu Apr 20 16:34:12 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 16:34:29 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604201117i497313b3ye1b442804fedb827@mail.gmail.com>
References: <4817b6fc0604192048o78680847t126d14ac78244fed@mail.gmail.com>
	<1145506026.15083@dscpl.user.openhosting.com>
	<4817b6fc0604201117i497313b3ye1b442804fedb827@mail.gmail.com>
Message-ID: <7630DEC4-F937-451E-B687-81F84C9591A1@dscpl.com.au>

Quoting from some of Jim's notes:
   To access the Subversion repositories anonymously, you will need a  
Subversion client.

   Choose the branch you would like to work on and check it out. For  
example, to get the

   current development branch (trunk), use:

     svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk  
mod_python

Graham

On 21/04/2006, at 4:17 AM, Dan Eloff wrote:

> Excellent, now I just have to figure out how to get it from the  
> svn. There's no instructions (that I found) on the mod_python site,  
> probably because it's something everybody but me knows.I downloaded  
> TortoiseSVN because that seems to be what you need on windows, and  
> it when I click on checkout it wants to know the url of the  
> repository.
>
> http://svn.apache.org and http://svn.apache.org/httpd/mod_python/  
> do not work.
>
> What's the url (and am I even going about this the right way?)
>
> Thanks,
> -Dan
>
> On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Dan  
> Eloff wrote ..
> > It sounds interesting, it might just finally solve all my  
> importing woes.
> > How do I enable this UMI?
> >
> > Thanks,
> > -Dan
>
> See:
>
>    http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
>
> Graham
>
> > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > >
> > > Dan Eloff wrote ..
> > > > I am interested in how this unified module importer works and  
> how it
> > > avoids
> > > > these problems.
> > > >
> > > > I'd really appreciate a brief description of it's  
> architecture, not
> > that
> > > > you
> > > > usually need all that much encouraging ;)
> > > >
> > > > Thanks,
> > > > -Dan
> > >
> > > Bit busy today to elaborate too much, but you can start by  
> reading my
> > > far from complete document on it:
> > >
> > >   http://www.dscpl.com.au/articles/modpython-007.html
> > >
> > > Graham
> > >
> > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > >
> > > > >
> > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > >
> > > > > > I went digging through the mod_python files and  
> discovered how
> > the
> > > > new
> > > > > > publisher loader works (using ModuleCache) and I borrowed  
> the idea
> > > > to
> > > > > > import modules for my handler.
> > > > >
> > > > > Note that mod_python 3.3 will like be discarding that  
> module loader
> > > > > and the original one and replacing it with a grand unified  
> module
> > > > > reloader. :-)
> > > > >
> > > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > > >
> > > > > Yes.
> > > > >
> > > > > > I'm having some trouble with this, and I eventually  
> tracked it
> > down
> > > > to
> > > > > > multiple versions of a dependancy module being loaded.
> > > > >
> > > > > Known issue. See:
> > > > >
> > > > >
> > > > > http://www.dscpl.com.au/articles/ 
> modpython-003.html#multiple-module-
> > > > > instances
> > > > >
> > > > > > My handler loads one version, with empty module  
> variables, while
> > the
> > > > > > actual modules for the pages load different version(s)  
> and populate
> > > > > > them with data. The changes are never reflected in the  
> version
> > kept
> > > > by
> > > > > > my handler (because they are not the same)
> > > > > >
> > > > > > This all makes sense, and is probably the intended  
> effect, but
> > what
> > > > do
> > > > > > you do for modules like Session in mod_python, where  
> MemorySession
> > > > > > uses a static class member to store sessions? Wouldn't  
> the page
> > > > > > modules each get their own version and thusly prevent  
> sessions
> > from
> > > > > > working?
> > > > >
> > > > > Also see:
> > > > >
> > > > >
> > > > >
> > > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of- 
> module-
> > > > > data
> > > > >
> > > > > > I need to be able to reload modified modules, but also to  
> make
> > use
> > > > of
> > > > > > shared modules. These seem to be conflicting needs,  
> however. Does
> > > > > > anybody have any inisght into this situation that they  
> can share?
> > > > >
> > > > > Only that mod_python 3.3 will hopefully fix a lot of this  
> stuff.
> > If
> > > you
> > > > > are prepared to give 3.3 source code out of subversion  
> repository
> > a go
> > > > > to see if things work as you expect, let me know and will  
> tell you
> > the
> > > > > magic to enable the unified module importer in 3.3 as at  
> moment it
> > is
> > > > > still off by default.
> > > > >
> > > > > Note though that even in 3.3, the "transfer of module data"  
> issue
> > > still
> > > > > has to be explicitly dealt with in some way. Although not  
> confirmed
> > > how
> > > > > this will be done, the new module importer as it stands now  
> allows
> > a
> > > > > module to define a __clone__() method which will be called  
> and which
> > > > > can be used to transfer data from an old module to a new  
> where data
> > > > > needs
> > > > > to be preserved across reloads.
> > > > >
> > > > > As I said, if interested I'll go into it more later.
> > > > >
> > > > > Graham
> > > > >
> > > > >
> > >
>

From grahamd at dscpl.com.au  Thu Apr 20 16:36:52 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 16:37:01 2006
Subject: [mod_python] Trouble getting mod_python to work
In-Reply-To: <bc4bd5f00604200659j77659977sd34df5ecff7674f@mail.gmail.com>
References: <bc4bd5f00604190740v7d705d31g9af1f6966b2de481@mail.gmail.com>
	<FCF8B653-546E-4E77-A72B-198551836B9F@dscpl.com.au>
	<bc4bd5f00604200659j77659977sd34df5ecff7674f@mail.gmail.com>
Message-ID: <D80AC320-DDAF-4747-8E58-89AF706704D3@dscpl.com.au>


On 20/04/2006, at 11:59 PM, John Salerno wrote:

> Thank you. I'll pass this information along and hopefully things can
> be set straight.

Please keep conversation on mailing list.

You can personally see if file is being consulted by putting a syntax  
error
in it. Ie., add a line into .htaccess file saying:

   XXX

When you access page in that directory, if it does not return a 500  
error,
then file is not being consulted.

Graham

> On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> The Apache setup may be that they disallow you to even have  
>> a .htaccess
>> file. Make sure they aren't using:
>>
>>    AllowOverride None
>>
>> Ensure they have at least:
>>
>>    AllowOverride FileInfo
>>
>> This was mentioned in the getting started document I referred you to:
>>    If instead of the string "mptest.py" you see the actual source  
>> code
>>
>>    contained in the file, or your browser asks you to save the  
>> response
>>
>>    to a file and that file contains the source code, the main Apache
>> configuration
>>
>>    may not be enabled so as to allow you to specify Apache handlers
>> in a ".htaccess"
>>
>>    file. To enable this facility, edit your main Apache configuration
>> file and add in an
>>
>>    appropriate location:
>>
>>    <Directory /some/directory>
>>    AllowOverride FileInfo
>>    </Directory>
>>    Replace "/some/directory" with the absolute pathname to the
>> directory in which
>>
>>    the ".htaccess" file is located. You will need to restart Apache
>> before this
>>
>>    configuration change takes affect.
>>
>> In your case it is a .psp file and not a .py file, but same issue
>> applies.
>>
>> Graham
>>
>> On 20/04/2006, at 12:40 AM, John Salerno wrote:
>>
>>> Hi everyone. I wrote before about having some trouble getting
>>> mod_python set up on my server. I'm not the one doing it, but I've
>>> been in touch with the admins. Whenever I try to access a PSP  
>>> page, it
>>> simply shows the HTML source code instead of properly running it. I
>>> thought maybe this had to do with incorrect use of handlers, but I
>>> don't know what to do about it. The htaccess file reads:
>>>
>>> AddHandler mod_python .psp
>>> PythonHandler mod_python.psp
>>> PythonDebug On
>>>
>>> At one point they had their own custom handlers in there, but they
>>> changed it back. Another thing they just tried was changing the
>>> httpd.conf file and it reads:
>>>
>>> #<IfDefine HAVE_PYTHON>
>>>
>>> LoadModule python_module      /usr/lib/apache/mod_python.so
>>>
>>>  #<IfDefine HAVE_PYTHON>
>>>
>>> #AddModule mod_python.c
>>>
>>> #</IfDefine>
>>>
>>> AddModule mod_python.c
>>>
>>>  <Directory "/var/www/html">
>>>
>>>  AddHandler mod_python .psp
>>>
>>> PythonHandler mod_python.psp
>>>
>>> PythonDebug On
>>>
>>>  </Directory>
>>>
>>> But this kind of stuff is beyond me. My only other experience with
>>> mod_python was easy, because it was properly set up and I only  
>>> had to
>>> write PSP files. I don't know what else needs to be done here to get
>>> it working. Any help would be appreciated.
>>>
>>> Thanks,
>>> John
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>

From johnjsal at gmail.com  Thu Apr 20 16:39:48 2006
From: johnjsal at gmail.com (John Salerno)
Date: Thu Apr 20 16:39:53 2006
Subject: [mod_python] Trouble getting mod_python to work
In-Reply-To: <D80AC320-DDAF-4747-8E58-89AF706704D3@dscpl.com.au>
References: <bc4bd5f00604190740v7d705d31g9af1f6966b2de481@mail.gmail.com>
	<FCF8B653-546E-4E77-A72B-198551836B9F@dscpl.com.au>
	<bc4bd5f00604200659j77659977sd34df5ecff7674f@mail.gmail.com>
	<D80AC320-DDAF-4747-8E58-89AF706704D3@dscpl.com.au>
Message-ID: <bc4bd5f00604201339m211f81e9k3bbe812c8f9eb29c@mail.gmail.com>

Thanks. I tried this but it still only displays the Python source code
when I try to access the PSP pages.

John

On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 20/04/2006, at 11:59 PM, John Salerno wrote:
>
> > Thank you. I'll pass this information along and hopefully things can
> > be set straight.
>
> Please keep conversation on mailing list.
>
> You can personally see if file is being consulted by putting a syntax
> error
> in it. Ie., add a line into .htaccess file saying:
>
>    XXX
>
> When you access page in that directory, if it does not return a 500
> error,
> then file is not being consulted.
>
> Graham
>
> > On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >> The Apache setup may be that they disallow you to even have
> >> a .htaccess
> >> file. Make sure they aren't using:
> >>
> >>    AllowOverride None
> >>
> >> Ensure they have at least:
> >>
> >>    AllowOverride FileInfo
> >>
> >> This was mentioned in the getting started document I referred you to:
> >>    If instead of the string "mptest.py" you see the actual source
> >> code
> >>
> >>    contained in the file, or your browser asks you to save the
> >> response
> >>
> >>    to a file and that file contains the source code, the main Apache
> >> configuration
> >>
> >>    may not be enabled so as to allow you to specify Apache handlers
> >> in a ".htaccess"
> >>
> >>    file. To enable this facility, edit your main Apache configuration
> >> file and add in an
> >>
> >>    appropriate location:
> >>
> >>    <Directory /some/directory>
> >>    AllowOverride FileInfo
> >>    </Directory>
> >>    Replace "/some/directory" with the absolute pathname to the
> >> directory in which
> >>
> >>    the ".htaccess" file is located. You will need to restart Apache
> >> before this
> >>
> >>    configuration change takes affect.
> >>
> >> In your case it is a .psp file and not a .py file, but same issue
> >> applies.
> >>
> >> Graham
> >>
> >> On 20/04/2006, at 12:40 AM, John Salerno wrote:
> >>
> >>> Hi everyone. I wrote before about having some trouble getting
> >>> mod_python set up on my server. I'm not the one doing it, but I've
> >>> been in touch with the admins. Whenever I try to access a PSP
> >>> page, it
> >>> simply shows the HTML source code instead of properly running it. I
> >>> thought maybe this had to do with incorrect use of handlers, but I
> >>> don't know what to do about it. The htaccess file reads:
> >>>
> >>> AddHandler mod_python .psp
> >>> PythonHandler mod_python.psp
> >>> PythonDebug On
> >>>
> >>> At one point they had their own custom handlers in there, but they
> >>> changed it back. Another thing they just tried was changing the
> >>> httpd.conf file and it reads:
> >>>
> >>> #<IfDefine HAVE_PYTHON>
> >>>
> >>> LoadModule python_module      /usr/lib/apache/mod_python.so
> >>>
> >>>  #<IfDefine HAVE_PYTHON>
> >>>
> >>> #AddModule mod_python.c
> >>>
> >>> #</IfDefine>
> >>>
> >>> AddModule mod_python.c
> >>>
> >>>  <Directory "/var/www/html">
> >>>
> >>>  AddHandler mod_python .psp
> >>>
> >>> PythonHandler mod_python.psp
> >>>
> >>> PythonDebug On
> >>>
> >>>  </Directory>
> >>>
> >>> But this kind of stuff is beyond me. My only other experience with
> >>> mod_python was easy, because it was properly set up and I only
> >>> had to
> >>> write PSP files. I don't know what else needs to be done here to get
> >>> it working. Any help would be appreciated.
> >>>
> >>> Thanks,
> >>> John
> >>>
> >>> _______________________________________________
> >>> Mod_python mailing list
> >>> Mod_python@modpython.org
> >>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
>
>

From dan.eloff at gmail.com  Thu Apr 20 16:47:57 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Apr 20 16:48:02 2006
Subject: [SPAM] Re: [mod_python] The new module loader
In-Reply-To: <7630DEC4-F937-451E-B687-81F84C9591A1@dscpl.com.au>
References: <4817b6fc0604192048o78680847t126d14ac78244fed@mail.gmail.com>
	<1145506026.15083@dscpl.user.openhosting.com>
	<4817b6fc0604201117i497313b3ye1b442804fedb827@mail.gmail.com>
	<7630DEC4-F937-451E-B687-81F84C9591A1@dscpl.com.au>
Message-ID: <4817b6fc0604201347q1f445729p6b56653a93148ba8@mail.gmail.com>

Yay! I've got it now, and it compiled fine. I suspect something that will
still be a hitch is the need for that __clone__() method you talked about.
How do I use it, is it documented anywhere, or is there an example
__clone__() method I can see?

Thanks,
-Dan

On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Quoting from some of Jim's notes:
>    To access the Subversion repositories anonymously, you will need a
> Subversion client.
>
>    Choose the branch you would like to work on and check it out. For
> example, to get the
>
>    current development branch (trunk), use:
>
>      svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk
> mod_python
>
> Graham
>
> On 21/04/2006, at 4:17 AM, Dan Eloff wrote:
>
> > Excellent, now I just have to figure out how to get it from the
> > svn. There's no instructions (that I found) on the mod_python site,
> > probably because it's something everybody but me knows.I downloaded
> > TortoiseSVN because that seems to be what you need on windows, and
> > it when I click on checkout it wants to know the url of the
> > repository.
> >
> > http://svn.apache.org and http://svn.apache.org/httpd/mod_python/
> > do not work.
> >
> > What's the url (and am I even going about this the right way?)
> >
> > Thanks,
> > -Dan
> >
> > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Dan
> > Eloff wrote ..
> > > It sounds interesting, it might just finally solve all my
> > importing woes.
> > > How do I enable this UMI?
> > >
> > > Thanks,
> > > -Dan
> >
> > See:
> >
> >    http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
> >
> > Graham
> >
> > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > >
> > > > Dan Eloff wrote ..
> > > > > I am interested in how this unified module importer works and
> > how it
> > > > avoids
> > > > > these problems.
> > > > >
> > > > > I'd really appreciate a brief description of it's
> > architecture, not
> > > that
> > > > > you
> > > > > usually need all that much encouraging ;)
> > > > >
> > > > > Thanks,
> > > > > -Dan
> > > >
> > > > Bit busy today to elaborate too much, but you can start by
> > reading my
> > > > far from complete document on it:
> > > >
> > > >   http://www.dscpl.com.au/articles/modpython-007.html
> > > >
> > > > Graham
> > > >
> > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > >
> > > > > >
> > > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > > >
> > > > > > > I went digging through the mod_python files and
> > discovered how
> > > the
> > > > > new
> > > > > > > publisher loader works (using ModuleCache) and I borrowed
> > the idea
> > > > > to
> > > > > > > import modules for my handler.
> > > > > >
> > > > > > Note that mod_python 3.3 will like be discarding that
> > module loader
> > > > > > and the original one and replacing it with a grand unified
> > module
> > > > > > reloader. :-)
> > > > > >
> > > > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > > > >
> > > > > > Yes.
> > > > > >
> > > > > > > I'm having some trouble with this, and I eventually
> > tracked it
> > > down
> > > > > to
> > > > > > > multiple versions of a dependancy module being loaded.
> > > > > >
> > > > > > Known issue. See:
> > > > > >
> > > > > >
> > > > > > http://www.dscpl.com.au/articles/
> > modpython-003.html#multiple-module-
> > > > > > instances
> > > > > >
> > > > > > > My handler loads one version, with empty module
> > variables, while
> > > the
> > > > > > > actual modules for the pages load different version(s)
> > and populate
> > > > > > > them with data. The changes are never reflected in the
> > version
> > > kept
> > > > > by
> > > > > > > my handler (because they are not the same)
> > > > > > >
> > > > > > > This all makes sense, and is probably the intended
> > effect, but
> > > what
> > > > > do
> > > > > > > you do for modules like Session in mod_python, where
> > MemorySession
> > > > > > > uses a static class member to store sessions? Wouldn't
> > the page
> > > > > > > modules each get their own version and thusly prevent
> > sessions
> > > from
> > > > > > > working?
> > > > > >
> > > > > > Also see:
> > > > > >
> > > > > >
> > > > > >
> > > > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-
> > module-
> > > > > > data
> > > > > >
> > > > > > > I need to be able to reload modified modules, but also to
> > make
> > > use
> > > > > of
> > > > > > > shared modules. These seem to be conflicting needs,
> > however. Does
> > > > > > > anybody have any inisght into this situation that they
> > can share?
> > > > > >
> > > > > > Only that mod_python 3.3 will hopefully fix a lot of this
> > stuff.
> > > If
> > > > you
> > > > > > are prepared to give 3.3 source code out of subversion
> > repository
> > > a go
> > > > > > to see if things work as you expect, let me know and will
> > tell you
> > > the
> > > > > > magic to enable the unified module importer in 3.3 as at
> > moment it
> > > is
> > > > > > still off by default.
> > > > > >
> > > > > > Note though that even in 3.3, the "transfer of module data"
> > issue
> > > > still
> > > > > > has to be explicitly dealt with in some way. Although not
> > confirmed
> > > > how
> > > > > > this will be done, the new module importer as it stands now
> > allows
> > > a
> > > > > > module to define a __clone__() method which will be called
> > and which
> > > > > > can be used to transfer data from an old module to a new
> > where data
> > > > > > needs
> > > > > > to be preserved across reloads.
> > > > > >
> > > > > > As I said, if interested I'll go into it more later.
> > > > > >
> > > > > > Graham
> > > > > >
> > > > > >
> > > >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/5429a316/attachment.html
From nogradi at gmail.com  Thu Apr 20 18:11:23 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Thu Apr 20 18:11:30 2006
Subject: [mod_python] proposal for new FAQ entry on sessions
Message-ID: <5f56302b0604201511i6105dd0bx4797c48a6cc7308@mail.gmail.com>

I just started to experiment with the Session module and came up with
a minimalistic but complete example using the publisher handler. There
are two files, login.py asks for a password to log the user in and
another one which checks if the user was already logged in. In case
he/she isn't the request is redirected to login.py. There are a couple
of security issues with this solution of course but the point is only
to give a toy model demonstrating how this mechanism could in
principle work.

The notation assumes a SetHandler apache directive, with AddHandler
one needs to refer to the scripts as 'login.py' and 'test.py' not just
'login' or 'test'.

Please let me know what the experts think since I wouldn't want to
cause more harm than good by posting a silly FAQ entry :)


# this is our login page, login.py
from mod_python import Session, util

def index( req ):

    session = Session.Session( req )

    if not session.is_new( ):
        return 'You are already logged in.'

    form = """<html><form enctype="multipart/form-data" method="POST"
action="login">
      <input type=text name="secret"><br>
      <input type='submit' name='go' value='Go'>
    </form></html>
    """

    try:
        secret = req.form[ 'secret' ]
    except KeyError:
        return form

    if secret == 'my_dear_password':
        session.save( )
        return 'Password correct, now you are logged in.'
    else:
        return form
# end of login.py

and the other file is:

# this is test.py
from mod_python import Session, util

def index( req ):

    session = Session.Session( req )

    if session.is_new( ):
        util.redirect( req, 'login' )
        return
    else:
        return 'You are logged in.'
# end of test.py

From matusis at matusis.com  Thu Apr 20 18:06:50 2006
From: matusis at matusis.com (Alec Matusis)
Date: Thu Apr 20 18:35:34 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <8F10456E-8E17-4260-B91E-E0D9EE82E54D@dscpl.com.au>
Message-ID: <200604202235.k3KMZSHA024854@modpython.org>

 
This actually worked.

My quiestion is: how can I implement a similar change in the application,
rather than in mod_python source?

The rationale is that next time we upgrade mod_python, we will forget about
this patch, and it will break on us.

Thanks!


-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Thursday, April 20, 2006 4:28 AM
To: Alec Matusis
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ValueError with Flash 8 FileReference.upload(url) 


On 20/04/2006, at 8:53 PM, Alec Matusis wrote:

> One more thing:
>
> I inserted the following code in util.py on line 153 where it could  
> not
> split the string:
>
>                         try:
>                             h, v = line.split(":", 1)
>                         except Exception, e:
>                             req.log_error('faulty line is: '+repr 
> (line))
>
> And the output was:
>
> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
> 'Submit Query\\r\\n'
> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
> '------------ae0cH2ae0KM7KM7KM7gL6KM7ei4ei4'
>
> I am not 100% sure what this means, but for some reason these two  
> lines were
> not captured by req.read() in my publisher.
> And, I suppose, this SubmitQuery line is wrong?

The request you think is the problem, possibly isn't the problem  
then. :-)

Anyway, in util.FieldStorage, instead of using code:

            while line not in ('\r','\r\n'):
                # we read the headers until we reach an empty line
                # NOTE : a single \n would mean the entity is  
malformed, but
                # we're tolerating it anyway
                h, v = line.split(":", 1)

try using the following code instead:

            while line not in ('\r','\r\n') and line.find(':') != -1:
                # we read the headers until we reach an empty line
                # NOTE : a single \n would mean the entity is  
malformed, but
                # we're tolerating it anyway
                h, v = line.split(":", 1)

I have no idea if this will actually work. It attempts to break out  
of header parsing
if it finds a line with no colon in it.

This will not work for multiline headers, but then mod_python doesn't  
work for
them anyway:

   http://issues.apache.org/jira/browse/MODPYTHON-159

Graham

> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Wednesday, April 19, 2006 5:36 PM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: RE: [mod_python] ValueError with Flash 8  
> FileReference.upload(url)
>
> Please keep posts on mailing list. :-)
>
> That discussion covers two issues.
>
> 1. That in some cases it doesn't output required extra blank line.
> This is what the Ruby patch was about.
>
> 2. That with Win32 client, it will do a POST with zero content.
>
> As to 2, I note that your example request shows content length
> header of "0", but then has content. I'm not sure if this is meant
> to be the test post or the real thing.
>
> Do you see any test POST with no actual content like they talk
> about? Have you perhaps captured the test POST rather than
> the real POST?
>
> Graham
>
> Alec Matusis wrote ..
>> I found this discussion on Macromedia website:
>>
>>
>>
> http://livedocs.macromedia.com/flash/8/main/wwhelp/wwhimpl/common/ 
> html/wwhel
>> p.htm?context=LiveDocs_Parts&file=00002225.html
>>
>> The relevant posts are
>> No screen name said on Sep 23, 2005 at 10:15 AM
>>
>> and Macromedia's official response, acknowledging the bug:
>> shimi2 said on Jan 19, 2006 at 11:22 AM :
>>
>> I am not 100% sure if I encountered the same problem, but it looks  
>> like
>> it.
>> It also could be that it tries to parse the empty POST request  
>> that flash
>> issues to test the connection if the filesize is > 10KB (their  
>> comment
>> shimi2 said on Sep 21, 2005 at 4:45 PM and also this is evidently the
> first
>> empty line in my req.read() output ? )
>>
>> They recommend a workaround for Ruby there. Since it seems to be a  
>> fairly
>> common issue, would you be able to recommend a workaround for  
>> mod_python
>> as
>> well?
>>
>> I wouldn't like to change mod_python sources, but rather, I would  
>> like
>> to
>> alter the bad HTTP request in my handler:
>>
>> try:
>>     myform=util.FieldStorage(req)
>> except ValueError:
>>     altered_req = MakeGoodHTTPRequest(req)
>>     myform=util.FieldStorage(altered_req)
>>
>> to handle
>> ValueError: need more than 1 value to unpack
>> that appears on line 153 in util.py ( h, v = line.split(":", 1)  
>> causes
>> it -
>> looks like the line does not have a colon ":" )
>>
>> Could you advise on how this MakeGoodHTTPRequest should look like?
>>
>>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: Wednesday, April 19, 2006 2:43 PM
>> To: Alec Matusis
>> Cc: mod_python list
>> Subject: Re: [mod_python] ValueError with Flash 8
> FileReference.upload(url)
>>
>> Arrrghhh, I'm going bonkers, the blank line is there now when I look
>> at it. :-(
>>
>> Too many backslashes in there, strains the eyes.
>>
>> Anyway, still sounds very much like the missing blank line seen  
>> before.
>> I'll have a look again later at it.
>>
>> Graham
>>
>> On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:
>>
>>> Flash for some reason doesn't do the POST for multipart/form per
>>> standard RFCs
>>> when no content type is associated with a filename block.
>>>
>>> See:
>>>
>>>   http://www.modpython.org/pipermail/mod_python/2006-April/ 
>>> 020794.html
>>>
>>> for previous discussion.
>>>
>>> See more below.
>>>
>>> On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
>>>
>>>> I have been having a problem with FileReference.upload(url)  in  
>>>> flash
>>>> 8, and to my amazement, found these posts.
>>>>
>>>> Here's the error:
>>>>
>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File
>>>> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line
>>>> 153, in __init__
>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =
>>>> line.split(":", 1)
>>>>
>>>>
>>>> Here's what Flash sends to the server (obtained with
>>>> self.req.log_error(repr(self.req.read())):
>>>>
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':
>>>> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',
>>>> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':
>>>> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',
>>>> 'Content-Type': 'multipart/form-data;
>>>> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':
>>>> 'text/*'}
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]
>>>> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent- 
>>>> Disposition:
>>>> form-data;
>>>> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------
>>>> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
>>>
>>> See in above line how now content type but also no required extra
>>> blank line.
>>> Add a content type for that filename block and see if it works.
>>>
>>> Graham
>>>
>>>> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent- 
>>>> Type:
>>>> application/octet-
>>>> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\ 
>>>> \x02\\x
>>>> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop
>>>> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\ 
>>>> \x00\\
>>>> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\ 
>>>> \r\\x0
>>>> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\ 
>>>> \x00\\x0
>>>> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04 
>>>> \\n\\
>>>> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00 
>>>> \\x00
>>>> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\ 
>>>> \x03\\x
>>>> f5\\x00\\x00\\x00\\x00\\x00H\\x00/
>>>> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/
>>>> ff\\x00\\x01\\x!
>>>>
>>>> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\ 
>>>> \x00\\
>>>> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\ 
>>>> \x01\
>>>> \x005\\x00\\x00\\x00\\x01\\x00-
>>>> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\ 
>>>> \x00\
>>>> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\ 
>>>> \x00\
>>>> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\ 
>>>> \x008BIM
>>>> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
>>>>
>>>> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\ 
>>>> \x00\\x
>>>> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\ 
>>>> \x00W\\xe
>>>> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\ 
>>>> \x00\\x1
>>>> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File
>>>> written by Adobe Photoshop\\xa8
>>>> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\ 
>>>> \xdb\
>>>> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\ 
>>>> \x0b\\
>>>> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\ 
>>>> \x13\\x1
>>>> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\ 
>>>> \x0c\\x0
>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\ 
>>>> \x0c\\x0
>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\ 
>>>> \r\\x
>>>> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e 
>>>> \\x0e
>>>> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
>>>>
>>>> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\ 
>>>> \x04\
>>>> \x00\\x07\\xff\\xc4\\x01?
>>>> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00 
>>>> \\x00
>>>> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\ 
>>>> \n\\x0
>>>> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\ 
>>>> \x00\\x0
>>>> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\ 
>>>> \n\\x
>>>> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\ 
>>>> \x08\\x
>>>> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04!
>>>> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\ 
>>>> \xc1b34r
>>>> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\ 
>>>> \x93Td
>>>> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\ 
>>>> \xf3F\\'
>>>> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5 
>>>> \\xe5
>>>> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\ 
>>>> \xa7\\
>>>> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\ 
>>>> \x03\\
>>>> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03!
>>>> 1\\x12\\x04AQaq"\\x!
>>>>
>>>> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82 
>>>> \\x92
>>>> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T 
>>>> \\xa3
>>>> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\ 
>>>> \x85\\
>>>> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\ 
>>>> \x86\\x9
>>>> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\ 
>>>> \xff\
>>>> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00?
>>>> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02
>>>> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac:
>>>> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\ 
>>>> \xd9\\x
>>>> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\ 
>>>> \xac\\xb
>>>> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\ 
>>>> \xa5\\
>>>> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94 
>>>> \\x7f
>>>> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\ 
>>>> \xe6\
>>>> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\ 
>>>> \x8fc\\
>>>> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\ 
>>>> \x91\\xe
>>>> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7 
>>>> \\xd6
>>>> \!
>>>>
>>>> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\ 
>>>> \xcf\
>>>> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae!
>>>> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\ 
>>>> \x89\\
>>>> x04Xc
>>>> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\ 
>>>> \xc1\\
>>>> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%?
>>>> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2 
>>>> \\xc6
>>>> \\xb9\\x80\\xee2\\x08-
>>>> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-;
>>>> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3 
>>>> \\xac
>>>> \\x8d\\xba\\xfb\\x96/
>>>> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\ 
>>>> \xcaH
>>>> \\x8e\\xdb\\xe8\\xcd\\x86
>>>> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\ 
>>>> \xb3\\x
>>>> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\ 
>>>> \x18\\x
>>>> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\ 
>>>> \x15\\x8
>>>> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\ 
>>>> \xc8\\
>>>> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
>>>>
>>>> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
>>>> \x08O2
>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW\\x
>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8 
>>>> \\\\\
>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I 
>>>> \\x06
>>>> \\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\xcb\!
>>>>
>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\\x1
>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
>>>> \x02@\
>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\ 
>>>> \xf2z\
>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\\xf
>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\\xf
>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\\xc
>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\ 
>>>> \xd7\\x
>>>> 08\\xed\\x04.\\xd4\!
>>>>
>>>> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
>>>> \x08O2
>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW\\x
>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8 
>>>> \\\\\
>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I 
>>>> \\x06
>>>> \\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\xcb\!
>>>>
>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\\x1
>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
>>>> \x02@\
>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\ 
>>>> \xf2z\
>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\\xf
>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\\xf
>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\\xc
>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\ 
>>>> \xc666X\
>>>> \xd7\\x08\\xed\\x04.\\x!
>>>>
>>>> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\ 
>>>> \xa4bdT\\x0
>>>> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW
>>>> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\ 
>>>> \xa8\\
>>>> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\ 
>>>> \xb1I\\
>>>> x06\\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\x!
>>>>
>>>> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\
>>>> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\ 
>>>> \x13\\x0
>>>> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf 
>>>> (V\\xf
>>>> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\
>>>> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\
>>>> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\
>>>> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83 
>>>> \\xcf
>>>> \\x1f\\x143 <file://!
>>>>
>>>> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\ 
>>>> \xed\\x
>>>> 04.\\xd4\\x95>
>>>>
>>>>
>>>> Any thoughts on this?
>>>>
>>>>
>>>> --Alec
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Thu Apr 20 19:33:20 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Apr 20 19:31:39 2006
Subject: [mod_python] PythonAuthzHandler not working
Message-ID: <44481A40.7000105@jgassociates.ca>

I've been pulling my hair out all day trying to get PythonAuthzHandler 
to work and I'm either missing something obvious or there is a problem 
with mod_python. What the heck is the magic required to make Apache call 
my authzhander? Using Apache 2.0.55 with the latest 3.3.0-dev, all my 
handlers including authenhandler get called, *except* for authzhandler.

<Directory /srv/projects/aos/html/aos-admin/>
   DirectoryIndex index.py
   AllowOverride None
   AddHandler mod_python .py

   AuthType PyCookie
   AuthName "Restricted"
   Require valid-user
   Require admin

   PythonAccessHandler mprest.authtest
   PythonAuthenHandler mprest.authtest
   PythonAuthzHandler mprest.authtest
   PythonHandler mprest.authtest

</Directory>

authtest.py contains the appropriate handlers that do nothing more than 
call req.log_error().

To aid in my efforts I modified python_handler in mod_python.c to log 
the status of each phase.

Simplified error_log output:

$ cut -f 4 -d "]"  error.log
mod_python.c python_handler: DECLINED PythonInitHandler phase
mod_python.c python_handler: DECLINED PythonPostReadRequestHandler phase
mod_python.c python_handler: DECLINED PythonTransHandler phase
mod_python.c python_handler: DECLINED PythonHeaderParserHandler phase
mod_python.c python_handler: PROCESS  PythonAccessHandler phase
authtest.py  accesshandler called
mod_python.c python_handler: PROCESS  PythonAuthenHandler phase
authtest.py  authenhandler called
mod_python.c python_handler: DECLINED PythonFixupHandler phase
mod_python.c python_handler: PROCESS  PythonHandler phase
authtest.py  handler called
mod_python.c python_handler: DECLINED PythonLogHandler phase
mod_python.c python_handler: DECLINED PythonCleanupHandler phase


Please save me before I've gone completely bald. Otherwise at that point 
I'll have to start poking myself with a pointed stick. Madness can't be 
too far off in my future. :)

Thanks,
Jim


From grahamd at dscpl.com.au  Thu Apr 20 21:04:51 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 21:05:24 2006
Subject: [mod_python] The new module loader
Message-ID: <1145581491.13993@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> Yay! I've got it now, and it compiled fine. I suspect something that will
> still be a hitch is the need for that __clone__() method you talked about.
> How do I use it, is it documented anywhere, or is there an example
> __clone__() method I can see?
> 
> Thanks,
> -Dan

Note that the __clone__() method is something that I added because of
a need I saw. I doubt that anyone else has burrowed into the code for
the importer deep enough yet to understand what it is necessarily all
about and thus the whole concept hasn't been peer reviewed as such.
Thus whether it is included at all, or in the form as it currently exists
is not final.

That said, I have attached a very contrived set of examples of migrating
data from an old module to a new. It looks messy purely because of
the different examples and support for multithreading. If a module is
complicated and you want to be able to support multithreading and
module reloading, it will be complicated. I've seen a bit of dubious code
posted in the past which given the right conditions would blow up,
but without a proper solution have generally refrained from pointing
out the problems.

Put the attached file in a directory configured for mod_python.publisher
with a configuration something like:

  PythonInterpreter testing
  AddHandler mod_python .py
  PythonHandler mod_python.publisher
  PythonDebug On
  PythonAutoReload On

The "testing" interpreter is the one I have the new module importer
enabled for. Ie., in main Apache configuration, outside of all container
directives have:

  PythonOption mod_python.future.importer testing

Check that all works by accessing page as "child.py". Once it works,
copy "child.py" to "parent.py" and add at the start the line:

  import child

Then access "parent.py".

Now for some fun, update modification time on "parent.py" by touching
it or resaving it. Watch how reload counter increments. Touch it again
and see how transfer counter increments. Work out from code what
each of the bits is doing and why certain things are done certain ways.
If you don't understand, ask.

Now for some tricky stuff. Touch the "child.py" file, but still access
"parent.py". See how the parent module gets reloaded. Keep touching
"child.py" if you don't believe what is happening. Also access "child.py"
from browser as well to see how was also reloaded.

What is happening here is that new module importer doesn't just look
at page you are accessing, but looks at modules it imports and if the
child changes, the parent gets reloaded automatically along with the
child. With this working, you avoid all the horrible problems that exist
now of having to force reloads by touching all files or restarting Apache.

Finally, note how the reload is occurring even though child was imported
using "import" statement. This is because underneath it is magically
mapping to apache.import_module(). Change the "import" from:

  import child

to:

  child = apache.import_module("child")

and you will see it works the same.

The rules are as per that incomplete document I referred you to
about the module importer.

BTW, you cant totally avoid Apache restarts when you start using
__clone__() unless you are quite careful that it handles gracefully
not finding the data in an existing module that it is looking to copy
across. Anyway, experiment and you will see what I mean.

You might also see if you can work out what __purge__() function
does by looking at source code. :-)

Hope this provides you with hours of fun.

Graham

> On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Quoting from some of Jim's notes:
> >    To access the Subversion repositories anonymously, you will need a
> > Subversion client.
> >
> >    Choose the branch you would like to work on and check it out. For
> > example, to get the
> >
> >    current development branch (trunk), use:
> >
> >      svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk
> > mod_python
> >
> > Graham
> >
> > On 21/04/2006, at 4:17 AM, Dan Eloff wrote:
> >
> > > Excellent, now I just have to figure out how to get it from the
> > > svn. There's no instructions (that I found) on the mod_python site,
> > > probably because it's something everybody but me knows.I downloaded
> > > TortoiseSVN because that seems to be what you need on windows, and
> > > it when I click on checkout it wants to know the url of the
> > > repository.
> > >
> > > http://svn.apache.org and http://svn.apache.org/httpd/mod_python/
> > > do not work.
> > >
> > > What's the url (and am I even going about this the right way?)
> > >
> > > Thanks,
> > > -Dan
> > >
> > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Dan
> > > Eloff wrote ..
> > > > It sounds interesting, it might just finally solve all my
> > > importing woes.
> > > > How do I enable this UMI?
> > > >
> > > > Thanks,
> > > > -Dan
> > >
> > > See:
> > >
> > >    http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
> > >
> > > Graham
> > >
> > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > >
> > > > > Dan Eloff wrote ..
> > > > > > I am interested in how this unified module importer works and
> > > how it
> > > > > avoids
> > > > > > these problems.
> > > > > >
> > > > > > I'd really appreciate a brief description of it's
> > > architecture, not
> > > > that
> > > > > > you
> > > > > > usually need all that much encouraging ;)
> > > > > >
> > > > > > Thanks,
> > > > > > -Dan
> > > > >
> > > > > Bit busy today to elaborate too much, but you can start by
> > > reading my
> > > > > far from complete document on it:
> > > > >
> > > > >   http://www.dscpl.com.au/articles/modpython-007.html
> > > > >
> > > > > Graham
> > > > >
> > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > > >
> > > > > > >
> > > > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > > > >
> > > > > > > > I went digging through the mod_python files and
> > > discovered how
> > > > the
> > > > > > new
> > > > > > > > publisher loader works (using ModuleCache) and I borrowed
> > > the idea
> > > > > > to
> > > > > > > > import modules for my handler.
> > > > > > >
> > > > > > > Note that mod_python 3.3 will like be discarding that
> > > module loader
> > > > > > > and the original one and replacing it with a grand unified
> > > module
> > > > > > > reloader. :-)
> > > > > > >
> > > > > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > > > > >
> > > > > > > Yes.
> > > > > > >
> > > > > > > > I'm having some trouble with this, and I eventually
> > > tracked it
> > > > down
> > > > > > to
> > > > > > > > multiple versions of a dependancy module being loaded.
> > > > > > >
> > > > > > > Known issue. See:
> > > > > > >
> > > > > > >
> > > > > > > http://www.dscpl.com.au/articles/
> > > modpython-003.html#multiple-module-
> > > > > > > instances
> > > > > > >
> > > > > > > > My handler loads one version, with empty module
> > > variables, while
> > > > the
> > > > > > > > actual modules for the pages load different version(s)
> > > and populate
> > > > > > > > them with data. The changes are never reflected in the
> > > version
> > > > kept
> > > > > > by
> > > > > > > > my handler (because they are not the same)
> > > > > > > >
> > > > > > > > This all makes sense, and is probably the intended
> > > effect, but
> > > > what
> > > > > > do
> > > > > > > > you do for modules like Session in mod_python, where
> > > MemorySession
> > > > > > > > uses a static class member to store sessions? Wouldn't
> > > the page
> > > > > > > > modules each get their own version and thusly prevent
> > > sessions
> > > > from
> > > > > > > > working?
> > > > > > >
> > > > > > > Also see:
> > > > > > >
> > > > > > >
> > > > > > >
> > > > > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-
> > > module-
> > > > > > > data
> > > > > > >
> > > > > > > > I need to be able to reload modified modules, but also to
> > > make
> > > > use
> > > > > > of
> > > > > > > > shared modules. These seem to be conflicting needs,
> > > however. Does
> > > > > > > > anybody have any inisght into this situation that they
> > > can share?
> > > > > > >
> > > > > > > Only that mod_python 3.3 will hopefully fix a lot of this
> > > stuff.
> > > > If
> > > > > you
> > > > > > > are prepared to give 3.3 source code out of subversion
> > > repository
> > > > a go
> > > > > > > to see if things work as you expect, let me know and will
> > > tell you
> > > > the
> > > > > > > magic to enable the unified module importer in 3.3 as at
> > > moment it
> > > > is
> > > > > > > still off by default.
> > > > > > >
> > > > > > > Note though that even in 3.3, the "transfer of module data"
> > > issue
> > > > > still
> > > > > > > has to be explicitly dealt with in some way. Although not
> > > confirmed
> > > > > how
> > > > > > > this will be done, the new module importer as it stands now
> > > allows
> > > > a
> > > > > > > module to define a __clone__() method which will be called
> > > and which
> > > > > > > can be used to transfer data from an old module to a new
> > > where data
> > > > > > > needs
> > > > > > > to be preserved across reloads.
> > > > > > >
> > > > > > > As I said, if interested I'll go into it more later.
> > > > > > >
> > > > > > > Graham
> > > > > > >
> > > > > > >
> > > > >
> > >
> >
> >
-------------- next part --------------
A non-text attachment was scrubbed...
Name: child.py
Type: application/octet-stream
Size: 3068 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/3b236b50/child.obj
From dan.eloff at gmail.com  Thu Apr 20 21:50:21 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Apr 20 21:50:33 2006
Subject: [SPAM] Re: [mod_python] The new module loader
In-Reply-To: <1145581491.13993@dscpl.user.openhosting.com>
References: <1145581491.13993@dscpl.user.openhosting.com>
Message-ID: <4817b6fc0604201850j66caee0fnaf8d2334f2d812a2@mail.gmail.com>

Thanks Graham! *cranks up music* hours of fun beginning.

-Dan

On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Dan Eloff wrote ..
> > Yay! I've got it now, and it compiled fine. I suspect something that
> will
> > still be a hitch is the need for that __clone__() method you talked
> about.
> > How do I use it, is it documented anywhere, or is there an example
> > __clone__() method I can see?
> >
> > Thanks,
> > -Dan
>
> Note that the __clone__() method is something that I added because of
> a need I saw. I doubt that anyone else has burrowed into the code for
> the importer deep enough yet to understand what it is necessarily all
> about and thus the whole concept hasn't been peer reviewed as such.
> Thus whether it is included at all, or in the form as it currently exists
> is not final.
>
> That said, I have attached a very contrived set of examples of migrating
> data from an old module to a new. It looks messy purely because of
> the different examples and support for multithreading. If a module is
> complicated and you want to be able to support multithreading and
> module reloading, it will be complicated. I've seen a bit of dubious code
> posted in the past which given the right conditions would blow up,
> but without a proper solution have generally refrained from pointing
> out the problems.
>
> Put the attached file in a directory configured for mod_python.publisher
> with a configuration something like:
>
>   PythonInterpreter testing
>   AddHandler mod_python .py
>   PythonHandler mod_python.publisher
>   PythonDebug On
>   PythonAutoReload On
>
> The "testing" interpreter is the one I have the new module importer
> enabled for. Ie., in main Apache configuration, outside of all container
> directives have:
>
>   PythonOption mod_python.future.importer testing
>
> Check that all works by accessing page as "child.py". Once it works,
> copy "child.py" to "parent.py" and add at the start the line:
>
>   import child
>
> Then access "parent.py".
>
> Now for some fun, update modification time on "parent.py" by touching
> it or resaving it. Watch how reload counter increments. Touch it again
> and see how transfer counter increments. Work out from code what
> each of the bits is doing and why certain things are done certain ways.
> If you don't understand, ask.
>
> Now for some tricky stuff. Touch the "child.py" file, but still access
> "parent.py". See how the parent module gets reloaded. Keep touching
> "child.py" if you don't believe what is happening. Also access "child.py"
> from browser as well to see how was also reloaded.
>
> What is happening here is that new module importer doesn't just look
> at page you are accessing, but looks at modules it imports and if the
> child changes, the parent gets reloaded automatically along with the
> child. With this working, you avoid all the horrible problems that exist
> now of having to force reloads by touching all files or restarting Apache.
>
> Finally, note how the reload is occurring even though child was imported
> using "import" statement. This is because underneath it is magically
> mapping to apache.import_module(). Change the "import" from:
>
>   import child
>
> to:
>
>   child = apache.import_module("child")
>
> and you will see it works the same.
>
> The rules are as per that incomplete document I referred you to
> about the module importer.
>
> BTW, you cant totally avoid Apache restarts when you start using
> __clone__() unless you are quite careful that it handles gracefully
> not finding the data in an existing module that it is looking to copy
> across. Anyway, experiment and you will see what I mean.
>
> You might also see if you can work out what __purge__() function
> does by looking at source code. :-)
>
> Hope this provides you with hours of fun.
>
> Graham
>
> > On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > >
> > > Quoting from some of Jim's notes:
> > >    To access the Subversion repositories anonymously, you will need a
> > > Subversion client.
> > >
> > >    Choose the branch you would like to work on and check it out. For
> > > example, to get the
> > >
> > >    current development branch (trunk), use:
> > >
> > >      svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk
> > > mod_python
> > >
> > > Graham
> > >
> > > On 21/04/2006, at 4:17 AM, Dan Eloff wrote:
> > >
> > > > Excellent, now I just have to figure out how to get it from the
> > > > svn. There's no instructions (that I found) on the mod_python site,
> > > > probably because it's something everybody but me knows.I downloaded
> > > > TortoiseSVN because that seems to be what you need on windows, and
> > > > it when I click on checkout it wants to know the url of the
> > > > repository.
> > > >
> > > > http://svn.apache.org and http://svn.apache.org/httpd/mod_python/
> > > > do not work.
> > > >
> > > > What's the url (and am I even going about this the right way?)
> > > >
> > > > Thanks,
> > > > -Dan
> > > >
> > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Dan
> > > > Eloff wrote ..
> > > > > It sounds interesting, it might just finally solve all my
> > > > importing woes.
> > > > > How do I enable this UMI?
> > > > >
> > > > > Thanks,
> > > > > -Dan
> > > >
> > > > See:
> > > >
> > > >
> http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
> > > >
> > > > Graham
> > > >
> > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > >
> > > > > > Dan Eloff wrote ..
> > > > > > > I am interested in how this unified module importer works and
> > > > how it
> > > > > > avoids
> > > > > > > these problems.
> > > > > > >
> > > > > > > I'd really appreciate a brief description of it's
> > > > architecture, not
> > > > > that
> > > > > > > you
> > > > > > > usually need all that much encouraging ;)
> > > > > > >
> > > > > > > Thanks,
> > > > > > > -Dan
> > > > > >
> > > > > > Bit busy today to elaborate too much, but you can start by
> > > > reading my
> > > > > > far from complete document on it:
> > > > > >
> > > > > >   http://www.dscpl.com.au/articles/modpython-007.html
> > > > > >
> > > > > > Graham
> > > > > >
> > > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > > > >
> > > > > > > >
> > > > > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > > > > >
> > > > > > > > > I went digging through the mod_python files and
> > > > discovered how
> > > > > the
> > > > > > > new
> > > > > > > > > publisher loader works (using ModuleCache) and I borrowed
> > > > the idea
> > > > > > > to
> > > > > > > > > import modules for my handler.
> > > > > > > >
> > > > > > > > Note that mod_python 3.3 will like be discarding that
> > > > module loader
> > > > > > > > and the original one and replacing it with a grand unified
> > > > module
> > > > > > > > reloader. :-)
> > > > > > > >
> > > > > > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > > > > > >
> > > > > > > > Yes.
> > > > > > > >
> > > > > > > > > I'm having some trouble with this, and I eventually
> > > > tracked it
> > > > > down
> > > > > > > to
> > > > > > > > > multiple versions of a dependancy module being loaded.
> > > > > > > >
> > > > > > > > Known issue. See:
> > > > > > > >
> > > > > > > >
> > > > > > > > http://www.dscpl.com.au/articles/
> > > > modpython-003.html#multiple-module-
> > > > > > > > instances
> > > > > > > >
> > > > > > > > > My handler loads one version, with empty module
> > > > variables, while
> > > > > the
> > > > > > > > > actual modules for the pages load different version(s)
> > > > and populate
> > > > > > > > > them with data. The changes are never reflected in the
> > > > version
> > > > > kept
> > > > > > > by
> > > > > > > > > my handler (because they are not the same)
> > > > > > > > >
> > > > > > > > > This all makes sense, and is probably the intended
> > > > effect, but
> > > > > what
> > > > > > > do
> > > > > > > > > you do for modules like Session in mod_python, where
> > > > MemorySession
> > > > > > > > > uses a static class member to store sessions? Wouldn't
> > > > the page
> > > > > > > > > modules each get their own version and thusly prevent
> > > > sessions
> > > > > from
> > > > > > > > > working?
> > > > > > > >
> > > > > > > > Also see:
> > > > > > > >
> > > > > > > >
> > > > > > > >
> > > > > > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-
> > > > module-
> > > > > > > > data
> > > > > > > >
> > > > > > > > > I need to be able to reload modified modules, but also to
> > > > make
> > > > > use
> > > > > > > of
> > > > > > > > > shared modules. These seem to be conflicting needs,
> > > > however. Does
> > > > > > > > > anybody have any inisght into this situation that they
> > > > can share?
> > > > > > > >
> > > > > > > > Only that mod_python 3.3 will hopefully fix a lot of this
> > > > stuff.
> > > > > If
> > > > > > you
> > > > > > > > are prepared to give 3.3 source code out of subversion
> > > > repository
> > > > > a go
> > > > > > > > to see if things work as you expect, let me know and will
> > > > tell you
> > > > > the
> > > > > > > > magic to enable the unified module importer in 3.3 as at
> > > > moment it
> > > > > is
> > > > > > > > still off by default.
> > > > > > > >
> > > > > > > > Note though that even in 3.3, the "transfer of module data"
> > > > issue
> > > > > > still
> > > > > > > > has to be explicitly dealt with in some way. Although not
> > > > confirmed
> > > > > > how
> > > > > > > > this will be done, the new module importer as it stands now
> > > > allows
> > > > > a
> > > > > > > > module to define a __clone__() method which will be called
> > > > and which
> > > > > > > > can be used to transfer data from an old module to a new
> > > > where data
> > > > > > > > needs
> > > > > > > > to be preserved across reloads.
> > > > > > > >
> > > > > > > > As I said, if interested I'll go into it more later.
> > > > > > > >
> > > > > > > > Graham
> > > > > > > >
> > > > > > > >
> > > > > >
> > > >
> > >
> > >
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/35face6c/attachment-0001.html
From grahamd at dscpl.com.au  Thu Apr 20 21:50:35 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 21:50:38 2006
Subject: [mod_python] PythonAuthzHandler not working
Message-ID: <1145584235.7806@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> I've been pulling my hair out all day trying to get PythonAuthzHandler
> to work and I'm either missing something obvious or there is a problem
> with mod_python. What the heck is the magic required to make Apache call
> my authzhander? Using Apache 2.0.55 with the latest 3.3.0-dev, all my 
> handlers including authenhandler get called, *except* for authzhandler.
> 
> <Directory /srv/projects/aos/html/aos-admin/>
>    DirectoryIndex index.py
>    AllowOverride None
>    AddHandler mod_python .py
> 
>    AuthType PyCookie
>    AuthName "Restricted"
>    Require valid-user
>    Require admin
> 
>    PythonAccessHandler mprest.authtest
>    PythonAuthenHandler mprest.authtest
>    PythonAuthzHandler mprest.authtest
>    PythonHandler mprest.authtest
> 
> </Directory>
> 
> authtest.py contains the appropriate handlers that do nothing more than
> call req.log_error().
> 
> To aid in my efforts I modified python_handler in mod_python.c to log 
> the status of each phase.
> 
> Simplified error_log output:
> 
> $ cut -f 4 -d "]"  error.log
> mod_python.c python_handler: DECLINED PythonInitHandler phase
> mod_python.c python_handler: DECLINED PythonPostReadRequestHandler phase
> mod_python.c python_handler: DECLINED PythonTransHandler phase
> mod_python.c python_handler: DECLINED PythonHeaderParserHandler phase
> mod_python.c python_handler: PROCESS  PythonAccessHandler phase
> authtest.py  accesshandler called
> mod_python.c python_handler: PROCESS  PythonAuthenHandler phase
> authtest.py  authenhandler called
> mod_python.c python_handler: DECLINED PythonFixupHandler phase
> mod_python.c python_handler: PROCESS  PythonHandler phase
> authtest.py  handler called
> mod_python.c python_handler: DECLINED PythonLogHandler phase
> mod_python.c python_handler: DECLINED PythonCleanupHandler phase
> 
> 
> Please save me before I've gone completely bald. Otherwise at that point
> I'll have to start poking myself with a pointed stick. Madness can't be
> too far off in my future. :)

Behaviour confirmed.

I don't have much hair left already.

What is stranger is that if you use:

#PythonAccessHandler handlers
#PythonAuthenHandler handlers
#PythonAuthzHandler handlers
#PythonHandler handlers
PythonHandlerModule handlers

you get a 500 error and the Apache log file says:

[Fri Apr 21 11:45:13 2006] [crit] [client ::1] configuration error:  couldn't check user.  No user file?: /~grahamd/authz/index.py

Using the new module importer with its slightly different treatment of
handler responses makes no difference.

Note that I have the following in my authenhandler().

  req.user = "dummy"
  req.ap_auth_type = "dummy"

If I don't, I get a 500 error and:

[Fri Apr 21 11:48:25 2006] [error] [client ::1] python_handler: After PythonAuthenHandler req->user is NULL. Assign something to req.user if returning OK to avoid this error.

This error is actually from mod_python and was originally a fudge from
some problem with Apache from back in time. Maybe it should be
removed as comments suggest it should have been at some point.

Time to start augmenting Apache itself with some debug logging
as it all does make a great deal of sense. :-(

More later.

Graham
From grahamd at dscpl.com.au  Thu Apr 20 22:15:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 22:15:26 2006
Subject: [mod_python] PythonAuthzHandler not working
Message-ID: <1145585717.22189@dscpl.user.openhosting.com>

Add to config:

  AuthAuthoritative Off
  Require dummy

The value to Require cannot be:

  valid-user
  user ???
  group ???

it has to be something of your own creation that your authz handler then
interprets.

I am noting that authzhandler() can't return DECLINED, but must be OK,
or presumable HTTP_UNAUTHORIZED. Returning DECLINED results in 500
error and:

[Fri Apr 21 12:10:43 2006] [crit] [client ::1] configuration error:  couldn't check access.  No groups file?: /~grahamd/authz/index.py


Graham

Graham Dumpleton wrote ..
> Jim Gallacher wrote ..
> > I've been pulling my hair out all day trying to get PythonAuthzHandler
> > to work and I'm either missing something obvious or there is a problem
> > with mod_python. What the heck is the magic required to make Apache call
> > my authzhander? Using Apache 2.0.55 with the latest 3.3.0-dev, all my
> > handlers including authenhandler get called, *except* for authzhandler.
> > 
> > <Directory /srv/projects/aos/html/aos-admin/>
> >    DirectoryIndex index.py
> >    AllowOverride None
> >    AddHandler mod_python .py
> > 
> >    AuthType PyCookie
> >    AuthName "Restricted"
> >    Require valid-user
> >    Require admin
> > 
> >    PythonAccessHandler mprest.authtest
> >    PythonAuthenHandler mprest.authtest
> >    PythonAuthzHandler mprest.authtest
> >    PythonHandler mprest.authtest
> > 
> > </Directory>
> > 
> > authtest.py contains the appropriate handlers that do nothing more than
> > call req.log_error().
> > 
> > To aid in my efforts I modified python_handler in mod_python.c to log
> > the status of each phase.
> > 
> > Simplified error_log output:
> > 
> > $ cut -f 4 -d "]"  error.log
> > mod_python.c python_handler: DECLINED PythonInitHandler phase
> > mod_python.c python_handler: DECLINED PythonPostReadRequestHandler phase
> > mod_python.c python_handler: DECLINED PythonTransHandler phase
> > mod_python.c python_handler: DECLINED PythonHeaderParserHandler phase
> > mod_python.c python_handler: PROCESS  PythonAccessHandler phase
> > authtest.py  accesshandler called
> > mod_python.c python_handler: PROCESS  PythonAuthenHandler phase
> > authtest.py  authenhandler called
> > mod_python.c python_handler: DECLINED PythonFixupHandler phase
> > mod_python.c python_handler: PROCESS  PythonHandler phase
> > authtest.py  handler called
> > mod_python.c python_handler: DECLINED PythonLogHandler phase
> > mod_python.c python_handler: DECLINED PythonCleanupHandler phase
> > 
> > 
> > Please save me before I've gone completely bald. Otherwise at that point
> > I'll have to start poking myself with a pointed stick. Madness can't
> be
> > too far off in my future. :)
> 
> Behaviour confirmed.
> 
> I don't have much hair left already.
> 
> What is stranger is that if you use:
> 
> #PythonAccessHandler handlers
> #PythonAuthenHandler handlers
> #PythonAuthzHandler handlers
> #PythonHandler handlers
> PythonHandlerModule handlers
> 
> you get a 500 error and the Apache log file says:
> 
> [Fri Apr 21 11:45:13 2006] [crit] [client ::1] configuration error:  couldn't
> check user.  No user file?: /~grahamd/authz/index.py
> 
> Using the new module importer with its slightly different treatment of
> handler responses makes no difference.
> 
> Note that I have the following in my authenhandler().
> 
>   req.user = "dummy"
>   req.ap_auth_type = "dummy"
> 
> If I don't, I get a 500 error and:
> 
> [Fri Apr 21 11:48:25 2006] [error] [client ::1] python_handler: After PythonAuthenHandler
> req->user is NULL. Assign something to req.user if returning OK to avoid
> this error.
> 
> This error is actually from mod_python and was originally a fudge from
> some problem with Apache from back in time. Maybe it should be
> removed as comments suggest it should have been at some point.
> 
> Time to start augmenting Apache itself with some debug logging
> as it all does make a great deal of sense. :-(
> 
> More later.
> 
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From dan.eloff at gmail.com  Thu Apr 20 22:29:41 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Thu Apr 20 22:29:45 2006
Subject: [mod_python] The new module loader
In-Reply-To: <1145581491.13993@dscpl.user.openhosting.com>
References: <1145581491.13993@dscpl.user.openhosting.com>
Message-ID: <4817b6fc0604201929v7227b005m507d4207b6bc2559@mail.gmail.com>

Neat, it works like you said it would, very nice. I'm not sure how you
managed to reload parent when child changes, I'd like to take a peek at that
later, good job.

__purge__ is called if __clone__ raises and exception, to notify the
original module that it wasn't able to be cloned, and now it's just going to
be dumped without the data being copied over.

I think I figured out what you used the intialized flag for in child.py, it
let's you avoid initializing the parts that get overwritten by __clone__()
in the event that __clone__ is called, afterall, it could be an expensive
operation. I don't understand why you keep a reference in a temporary
location and then lock the object and copy outside of __clone__, why not
lock and copy inside __clone__?

Thanks,
-Dan

On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Dan Eloff wrote ..
> > Yay! I've got it now, and it compiled fine. I suspect something that
> will
> > still be a hitch is the need for that __clone__() method you talked
> about.
> > How do I use it, is it documented anywhere, or is there an example
> > __clone__() method I can see?
> >
> > Thanks,
> > -Dan
>
> Note that the __clone__() method is something that I added because of
> a need I saw. I doubt that anyone else has burrowed into the code for
> the importer deep enough yet to understand what it is necessarily all
> about and thus the whole concept hasn't been peer reviewed as such.
> Thus whether it is included at all, or in the form as it currently exists
> is not final.
>
> That said, I have attached a very contrived set of examples of migrating
> data from an old module to a new. It looks messy purely because of
> the different examples and support for multithreading. If a module is
> complicated and you want to be able to support multithreading and
> module reloading, it will be complicated. I've seen a bit of dubious code
> posted in the past which given the right conditions would blow up,
> but without a proper solution have generally refrained from pointing
> out the problems.
>
> Put the attached file in a directory configured for mod_python.publisher
> with a configuration something like:
>
>   PythonInterpreter testing
>   AddHandler mod_python .py
>   PythonHandler mod_python.publisher
>   PythonDebug On
>   PythonAutoReload On
>
> The "testing" interpreter is the one I have the new module importer
> enabled for. Ie., in main Apache configuration, outside of all container
> directives have:
>
>   PythonOption mod_python.future.importer testing
>
> Check that all works by accessing page as "child.py". Once it works,
> copy "child.py" to "parent.py" and add at the start the line:
>
>   import child
>
> Then access "parent.py".
>
> Now for some fun, update modification time on "parent.py" by touching
> it or resaving it. Watch how reload counter increments. Touch it again
> and see how transfer counter increments. Work out from code what
> each of the bits is doing and why certain things are done certain ways.
> If you don't understand, ask.
>
> Now for some tricky stuff. Touch the "child.py" file, but still access
> "parent.py". See how the parent module gets reloaded. Keep touching
> "child.py" if you don't believe what is happening. Also access "child.py"
> from browser as well to see how was also reloaded.
>
> What is happening here is that new module importer doesn't just look
> at page you are accessing, but looks at modules it imports and if the
> child changes, the parent gets reloaded automatically along with the
> child. With this working, you avoid all the horrible problems that exist
> now of having to force reloads by touching all files or restarting Apache.
>
> Finally, note how the reload is occurring even though child was imported
> using "import" statement. This is because underneath it is magically
> mapping to apache.import_module(). Change the "import" from:
>
>   import child
>
> to:
>
>   child = apache.import_module("child")
>
> and you will see it works the same.
>
> The rules are as per that incomplete document I referred you to
> about the module importer.
>
> BTW, you cant totally avoid Apache restarts when you start using
> __clone__() unless you are quite careful that it handles gracefully
> not finding the data in an existing module that it is looking to copy
> across. Anyway, experiment and you will see what I mean.
>
> You might also see if you can work out what __purge__() function
> does by looking at source code. :-)
>
> Hope this provides you with hours of fun.
>
> Graham
>
> > On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > >
> > > Quoting from some of Jim's notes:
> > >    To access the Subversion repositories anonymously, you will need a
> > > Subversion client.
> > >
> > >    Choose the branch you would like to work on and check it out. For
> > > example, to get the
> > >
> > >    current development branch (trunk), use:
> > >
> > >      svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk
> > > mod_python
> > >
> > > Graham
> > >
> > > On 21/04/2006, at 4:17 AM, Dan Eloff wrote:
> > >
> > > > Excellent, now I just have to figure out how to get it from the
> > > > svn. There's no instructions (that I found) on the mod_python site,
> > > > probably because it's something everybody but me knows.I downloaded
> > > > TortoiseSVN because that seems to be what you need on windows, and
> > > > it when I click on checkout it wants to know the url of the
> > > > repository.
> > > >
> > > > http://svn.apache.org and http://svn.apache.org/httpd/mod_python/
> > > > do not work.
> > > >
> > > > What's the url (and am I even going about this the right way?)
> > > >
> > > > Thanks,
> > > > -Dan
> > > >
> > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Dan
> > > > Eloff wrote ..
> > > > > It sounds interesting, it might just finally solve all my
> > > > importing woes.
> > > > > How do I enable this UMI?
> > > > >
> > > > > Thanks,
> > > > > -Dan
> > > >
> > > > See:
> > > >
> > > >
> http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
> > > >
> > > > Graham
> > > >
> > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > >
> > > > > > Dan Eloff wrote ..
> > > > > > > I am interested in how this unified module importer works and
> > > > how it
> > > > > > avoids
> > > > > > > these problems.
> > > > > > >
> > > > > > > I'd really appreciate a brief description of it's
> > > > architecture, not
> > > > > that
> > > > > > > you
> > > > > > > usually need all that much encouraging ;)
> > > > > > >
> > > > > > > Thanks,
> > > > > > > -Dan
> > > > > >
> > > > > > Bit busy today to elaborate too much, but you can start by
> > > > reading my
> > > > > > far from complete document on it:
> > > > > >
> > > > > >   http://www.dscpl.com.au/articles/modpython-007.html
> > > > > >
> > > > > > Graham
> > > > > >
> > > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > > > >
> > > > > > > >
> > > > > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > > > > >
> > > > > > > > > I went digging through the mod_python files and
> > > > discovered how
> > > > > the
> > > > > > > new
> > > > > > > > > publisher loader works (using ModuleCache) and I borrowed
> > > > the idea
> > > > > > > to
> > > > > > > > > import modules for my handler.
> > > > > > > >
> > > > > > > > Note that mod_python 3.3 will like be discarding that
> > > > module loader
> > > > > > > > and the original one and replacing it with a grand unified
> > > > module
> > > > > > > > reloader. :-)
> > > > > > > >
> > > > > > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > > > > > >
> > > > > > > > Yes.
> > > > > > > >
> > > > > > > > > I'm having some trouble with this, and I eventually
> > > > tracked it
> > > > > down
> > > > > > > to
> > > > > > > > > multiple versions of a dependancy module being loaded.
> > > > > > > >
> > > > > > > > Known issue. See:
> > > > > > > >
> > > > > > > >
> > > > > > > > http://www.dscpl.com.au/articles/
> > > > modpython-003.html#multiple-module-
> > > > > > > > instances
> > > > > > > >
> > > > > > > > > My handler loads one version, with empty module
> > > > variables, while
> > > > > the
> > > > > > > > > actual modules for the pages load different version(s)
> > > > and populate
> > > > > > > > > them with data. The changes are never reflected in the
> > > > version
> > > > > kept
> > > > > > > by
> > > > > > > > > my handler (because they are not the same)
> > > > > > > > >
> > > > > > > > > This all makes sense, and is probably the intended
> > > > effect, but
> > > > > what
> > > > > > > do
> > > > > > > > > you do for modules like Session in mod_python, where
> > > > MemorySession
> > > > > > > > > uses a static class member to store sessions? Wouldn't
> > > > the page
> > > > > > > > > modules each get their own version and thusly prevent
> > > > sessions
> > > > > from
> > > > > > > > > working?
> > > > > > > >
> > > > > > > > Also see:
> > > > > > > >
> > > > > > > >
> > > > > > > >
> > > > > > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-
> > > > module-
> > > > > > > > data
> > > > > > > >
> > > > > > > > > I need to be able to reload modified modules, but also to
> > > > make
> > > > > use
> > > > > > > of
> > > > > > > > > shared modules. These seem to be conflicting needs,
> > > > however. Does
> > > > > > > > > anybody have any inisght into this situation that they
> > > > can share?
> > > > > > > >
> > > > > > > > Only that mod_python 3.3 will hopefully fix a lot of this
> > > > stuff.
> > > > > If
> > > > > > you
> > > > > > > > are prepared to give 3.3 source code out of subversion
> > > > repository
> > > > > a go
> > > > > > > > to see if things work as you expect, let me know and will
> > > > tell you
> > > > > the
> > > > > > > > magic to enable the unified module importer in 3.3 as at
> > > > moment it
> > > > > is
> > > > > > > > still off by default.
> > > > > > > >
> > > > > > > > Note though that even in 3.3, the "transfer of module data"
> > > > issue
> > > > > > still
> > > > > > > > has to be explicitly dealt with in some way. Although not
> > > > confirmed
> > > > > > how
> > > > > > > > this will be done, the new module importer as it stands now
> > > > allows
> > > > > a
> > > > > > > > module to define a __clone__() method which will be called
> > > > and which
> > > > > > > > can be used to transfer data from an old module to a new
> > > > where data
> > > > > > > > needs
> > > > > > > > to be preserved across reloads.
> > > > > > > >
> > > > > > > > As I said, if interested I'll go into it more later.
> > > > > > > >
> > > > > > > > Graham
> > > > > > > >
> > > > > > > >
> > > > > >
> > > >
> > >
> > >
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/dbc7dbe0/attachment-0001.html
From grahamd at dscpl.com.au  Thu Apr 20 22:31:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 22:31:29 2006
Subject: [mod_python] PythonAuthzHandler not working
Message-ID: <1145586682.31526@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Add to config:
> 
>   AuthAuthoritative Off
>   Require dummy
> 
> The value to Require cannot be:
> 
>   valid-user
>   user ???
>   group ???
> 
> it has to be something of your own creation that your authz handler then
> interprets.
> 
> I am noting that authzhandler() can't return DECLINED, but must be OK,
> or presumable HTTP_UNAUTHORIZED. Returning DECLINED results in 500
> error and:
> 
> [Fri Apr 21 12:10:43 2006] [crit] [client ::1] configuration error:  couldn't
> check access.  No groups file?: /~grahamd/authz/index.py 

This last issue still occurs with PythonHandlersModule even with the changes
I gave above, so something definitely wrong with how mod_python does
things when that directive is used. That whole directive is a pain in the neck
and I very doubt it gets used anyway. Wish we could nuke it. :-)

Graham
 
> Graham Dumpleton wrote ..
> > Jim Gallacher wrote ..
> > > I've been pulling my hair out all day trying to get PythonAuthzHandler
> > > to work and I'm either missing something obvious or there is a problem
> > > with mod_python. What the heck is the magic required to make Apache
> call
> > > my authzhander? Using Apache 2.0.55 with the latest 3.3.0-dev, all
> my
> > > handlers including authenhandler get called, *except* for authzhandler.
> > > 
> > > <Directory /srv/projects/aos/html/aos-admin/>
> > >    DirectoryIndex index.py
> > >    AllowOverride None
> > >    AddHandler mod_python .py
> > > 
> > >    AuthType PyCookie
> > >    AuthName "Restricted"
> > >    Require valid-user
> > >    Require admin
> > > 
> > >    PythonAccessHandler mprest.authtest
> > >    PythonAuthenHandler mprest.authtest
> > >    PythonAuthzHandler mprest.authtest
> > >    PythonHandler mprest.authtest
> > > 
> > > </Directory>
> > > 
> > > authtest.py contains the appropriate handlers that do nothing more
> than
> > > call req.log_error().
> > > 
> > > To aid in my efforts I modified python_handler in mod_python.c to log
> > > the status of each phase.
> > > 
> > > Simplified error_log output:
> > > 
> > > $ cut -f 4 -d "]"  error.log
> > > mod_python.c python_handler: DECLINED PythonInitHandler phase
> > > mod_python.c python_handler: DECLINED PythonPostReadRequestHandler
> phase
> > > mod_python.c python_handler: DECLINED PythonTransHandler phase
> > > mod_python.c python_handler: DECLINED PythonHeaderParserHandler phase
> > > mod_python.c python_handler: PROCESS  PythonAccessHandler phase
> > > authtest.py  accesshandler called
> > > mod_python.c python_handler: PROCESS  PythonAuthenHandler phase
> > > authtest.py  authenhandler called
> > > mod_python.c python_handler: DECLINED PythonFixupHandler phase
> > > mod_python.c python_handler: PROCESS  PythonHandler phase
> > > authtest.py  handler called
> > > mod_python.c python_handler: DECLINED PythonLogHandler phase
> > > mod_python.c python_handler: DECLINED PythonCleanupHandler phase
> > > 
> > > 
> > > Please save me before I've gone completely bald. Otherwise at that
> point
> > > I'll have to start poking myself with a pointed stick. Madness can't
> > be
> > > too far off in my future. :)
> > 
> > Behaviour confirmed.
> > 
> > I don't have much hair left already.
> > 
> > What is stranger is that if you use:
> > 
> > #PythonAccessHandler handlers
> > #PythonAuthenHandler handlers
> > #PythonAuthzHandler handlers
> > #PythonHandler handlers
> > PythonHandlerModule handlers
> > 
> > you get a 500 error and the Apache log file says:
> > 
> > [Fri Apr 21 11:45:13 2006] [crit] [client ::1] configuration error: 
> couldn't
> > check user.  No user file?: /~grahamd/authz/index.py
> > 
> > Using the new module importer with its slightly different treatment of
> > handler responses makes no difference.
> > 
> > Note that I have the following in my authenhandler().
> > 
> >   req.user = "dummy"
> >   req.ap_auth_type = "dummy"
> > 
> > If I don't, I get a 500 error and:
> > 
> > [Fri Apr 21 11:48:25 2006] [error] [client ::1] python_handler: After
> PythonAuthenHandler
> > req->user is NULL. Assign something to req.user if returning OK to avoid
> > this error.
> > 
> > This error is actually from mod_python and was originally a fudge from
> > some problem with Apache from back in time. Maybe it should be
> > removed as comments suggest it should have been at some point.
> > 
> > Time to start augmenting Apache itself with some debug logging
> > as it all does make a great deal of sense. :-(
> > 
> > More later.
> > 
> > Graham
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Thu Apr 20 22:39:54 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 22:40:02 2006
Subject: [mod_python] The new module loader
Message-ID: <1145587194.4281@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> Neat, it works like you said it would, very nice. I'm not sure how you
> managed to reload parent when child changes, I'd like to take a peek at
> that
> later, good job.

Lots of magic involved. :-)

What it does is keep a dependency tree of imports managed through the
importer and determines if parents need reloading based on mtime of
child being updated, or if the child had been reimported since the last
time the parent was imported.

It does this to multiple levels, so you could copy child.py to grandchild.py
and add "import grandchild" into "child.py" and you will see that touching
grandchild.py will correctly cause both child and parent to be imported
when parent accessed.

> __purge__ is called if __clone__ raises and exception, to notify the
> original module that it wasn't able to be cloned, and now it's just going
> to
> be dumped without the data being copied over.

Yep. Sort of a failsafe. Not sure what you might use it for. Maybe to force
close of database connections although you would have to be careful
doing that as they may be in use by parallel requests in same process.
So, more flag that its all going away and close idle connections and
when parallel request release connections they might close automatically.

> I think I figured out what you used the intialized flag for in child.py,
> it
> let's you avoid initializing the parts that get overwritten by __clone__()
> in the event that __clone__ is called, afterall, it could be an expensive
> operation. I don't understand why you keep a reference in a temporary
> location and then lock the object and copy outside of __clone__, why not
> lock and copy inside __clone__?

The temporary was just to show a different variation. There is lots of ways
of doing it. The reason for doing the transfer outside of the clone function
is that at the clone point the new module hasn't actually been loaded and you
may need to create instances of classes from the new module to pour the
transferred data into. These are only available later.

Graham
 
> Thanks,
> -Dan
> 
> On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Dan Eloff wrote ..
> > > Yay! I've got it now, and it compiled fine. I suspect something that
> > will
> > > still be a hitch is the need for that __clone__() method you talked
> > about.
> > > How do I use it, is it documented anywhere, or is there an example
> > > __clone__() method I can see?
> > >
> > > Thanks,
> > > -Dan
> >
> > Note that the __clone__() method is something that I added because of
> > a need I saw. I doubt that anyone else has burrowed into the code for
> > the importer deep enough yet to understand what it is necessarily all
> > about and thus the whole concept hasn't been peer reviewed as such.
> > Thus whether it is included at all, or in the form as it currently exists
> > is not final.
> >
> > That said, I have attached a very contrived set of examples of migrating
> > data from an old module to a new. It looks messy purely because of
> > the different examples and support for multithreading. If a module is
> > complicated and you want to be able to support multithreading and
> > module reloading, it will be complicated. I've seen a bit of dubious
> code
> > posted in the past which given the right conditions would blow up,
> > but without a proper solution have generally refrained from pointing
> > out the problems.
> >
> > Put the attached file in a directory configured for mod_python.publisher
> > with a configuration something like:
> >
> >   PythonInterpreter testing
> >   AddHandler mod_python .py
> >   PythonHandler mod_python.publisher
> >   PythonDebug On
> >   PythonAutoReload On
> >
> > The "testing" interpreter is the one I have the new module importer
> > enabled for. Ie., in main Apache configuration, outside of all container
> > directives have:
> >
> >   PythonOption mod_python.future.importer testing
> >
> > Check that all works by accessing page as "child.py". Once it works,
> > copy "child.py" to "parent.py" and add at the start the line:
> >
> >   import child
> >
> > Then access "parent.py".
> >
> > Now for some fun, update modification time on "parent.py" by touching
> > it or resaving it. Watch how reload counter increments. Touch it again
> > and see how transfer counter increments. Work out from code what
> > each of the bits is doing and why certain things are done certain ways.
> > If you don't understand, ask.
> >
> > Now for some tricky stuff. Touch the "child.py" file, but still access
> > "parent.py". See how the parent module gets reloaded. Keep touching
> > "child.py" if you don't believe what is happening. Also access "child.py"
> > from browser as well to see how was also reloaded.
> >
> > What is happening here is that new module importer doesn't just look
> > at page you are accessing, but looks at modules it imports and if the
> > child changes, the parent gets reloaded automatically along with the
> > child. With this working, you avoid all the horrible problems that exist
> > now of having to force reloads by touching all files or restarting Apache.
> >
> > Finally, note how the reload is occurring even though child was imported
> > using "import" statement. This is because underneath it is magically
> > mapping to apache.import_module(). Change the "import" from:
> >
> >   import child
> >
> > to:
> >
> >   child = apache.import_module("child")
> >
> > and you will see it works the same.
> >
> > The rules are as per that incomplete document I referred you to
> > about the module importer.
> >
> > BTW, you cant totally avoid Apache restarts when you start using
> > __clone__() unless you are quite careful that it handles gracefully
> > not finding the data in an existing module that it is looking to copy
> > across. Anyway, experiment and you will see what I mean.
> >
> > You might also see if you can work out what __purge__() function
> > does by looking at source code. :-)
> >
> > Hope this provides you with hours of fun.
> >
> > Graham
> >
> > > On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > >
> > > > Quoting from some of Jim's notes:
> > > >    To access the Subversion repositories anonymously, you will need
> a
> > > > Subversion client.
> > > >
> > > >    Choose the branch you would like to work on and check it out.
> For
> > > > example, to get the
> > > >
> > > >    current development branch (trunk), use:
> > > >
> > > >      svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk
> > > > mod_python
> > > >
> > > > Graham
> > > >
> > > > On 21/04/2006, at 4:17 AM, Dan Eloff wrote:
> > > >
> > > > > Excellent, now I just have to figure out how to get it from the
> > > > > svn. There's no instructions (that I found) on the mod_python site,
> > > > > probably because it's something everybody but me knows.I downloaded
> > > > > TortoiseSVN because that seems to be what you need on windows,
> and
> > > > > it when I click on checkout it wants to know the url of the
> > > > > repository.
> > > > >
> > > > > http://svn.apache.org and http://svn.apache.org/httpd/mod_python/
> > > > > do not work.
> > > > >
> > > > > What's the url (and am I even going about this the right way?)
> > > > >
> > > > > Thanks,
> > > > > -Dan
> > > > >
> > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Dan
> > > > > Eloff wrote ..
> > > > > > It sounds interesting, it might just finally solve all my
> > > > > importing woes.
> > > > > > How do I enable this UMI?
> > > > > >
> > > > > > Thanks,
> > > > > > -Dan
> > > > >
> > > > > See:
> > > > >
> > > > >
> > http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
> > > > >
> > > > > Graham
> > > > >
> > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > > >
> > > > > > > Dan Eloff wrote ..
> > > > > > > > I am interested in how this unified module importer works
> and
> > > > > how it
> > > > > > > avoids
> > > > > > > > these problems.
> > > > > > > >
> > > > > > > > I'd really appreciate a brief description of it's
> > > > > architecture, not
> > > > > > that
> > > > > > > > you
> > > > > > > > usually need all that much encouraging ;)
> > > > > > > >
> > > > > > > > Thanks,
> > > > > > > > -Dan
> > > > > > >
> > > > > > > Bit busy today to elaborate too much, but you can start by
> > > > > reading my
> > > > > > > far from complete document on it:
> > > > > > >
> > > > > > >   http://www.dscpl.com.au/articles/modpython-007.html
> > > > > > >
> > > > > > > Graham
> > > > > > >
> > > > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > > > > >
> > > > > > > > >
> > > > > > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > > > > > >
> > > > > > > > > > I went digging through the mod_python files and
> > > > > discovered how
> > > > > > the
> > > > > > > > new
> > > > > > > > > > publisher loader works (using ModuleCache) and I borrowed
> > > > > the idea
> > > > > > > > to
> > > > > > > > > > import modules for my handler.
> > > > > > > > >
> > > > > > > > > Note that mod_python 3.3 will like be discarding that
> > > > > module loader
> > > > > > > > > and the original one and replacing it with a grand unified
> > > > > module
> > > > > > > > > reloader. :-)
> > > > > > > > >
> > > > > > > > > > The purpose of ModuleCache was to avoid sys.modules right?
> > > > > > > > >
> > > > > > > > > Yes.
> > > > > > > > >
> > > > > > > > > > I'm having some trouble with this, and I eventually
> > > > > tracked it
> > > > > > down
> > > > > > > > to
> > > > > > > > > > multiple versions of a dependancy module being loaded.
> > > > > > > > >
> > > > > > > > > Known issue. See:
> > > > > > > > >
> > > > > > > > >
> > > > > > > > > http://www.dscpl.com.au/articles/
> > > > > modpython-003.html#multiple-module-
> > > > > > > > > instances
> > > > > > > > >
> > > > > > > > > > My handler loads one version, with empty module
> > > > > variables, while
> > > > > > the
> > > > > > > > > > actual modules for the pages load different version(s)
> > > > > and populate
> > > > > > > > > > them with data. The changes are never reflected in the
> > > > > version
> > > > > > kept
> > > > > > > > by
> > > > > > > > > > my handler (because they are not the same)
> > > > > > > > > >
> > > > > > > > > > This all makes sense, and is probably the intended
> > > > > effect, but
> > > > > > what
> > > > > > > > do
> > > > > > > > > > you do for modules like Session in mod_python, where
> > > > > MemorySession
> > > > > > > > > > uses a static class member to store sessions? Wouldn't
> > > > > the page
> > > > > > > > > > modules each get their own version and thusly prevent
> > > > > sessions
> > > > > > from
> > > > > > > > > > working?
> > > > > > > > >
> > > > > > > > > Also see:
> > > > > > > > >
> > > > > > > > >
> > > > > > > > >
> > > > > > > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-
> > > > > module-
> > > > > > > > > data
> > > > > > > > >
> > > > > > > > > > I need to be able to reload modified modules, but also
> to
> > > > > make
> > > > > > use
> > > > > > > > of
> > > > > > > > > > shared modules. These seem to be conflicting needs,
> > > > > however. Does
> > > > > > > > > > anybody have any inisght into this situation that they
> > > > > can share?
> > > > > > > > >
> > > > > > > > > Only that mod_python 3.3 will hopefully fix a lot of this
> > > > > stuff.
> > > > > > If
> > > > > > > you
> > > > > > > > > are prepared to give 3.3 source code out of subversion
> > > > > repository
> > > > > > a go
> > > > > > > > > to see if things work as you expect, let me know and will
> > > > > tell you
> > > > > > the
> > > > > > > > > magic to enable the unified module importer in 3.3 as at
> > > > > moment it
> > > > > > is
> > > > > > > > > still off by default.
> > > > > > > > >
> > > > > > > > > Note though that even in 3.3, the "transfer of module data"
> > > > > issue
> > > > > > > still
> > > > > > > > > has to be explicitly dealt with in some way. Although not
> > > > > confirmed
> > > > > > > how
> > > > > > > > > this will be done, the new module importer as it stands
> now
> > > > > allows
> > > > > > a
> > > > > > > > > module to define a __clone__() method which will be called
> > > > > and which
> > > > > > > > > can be used to transfer data from an old module to a new
> > > > > where data
> > > > > > > > > needs
> > > > > > > > > to be preserved across reloads.
> > > > > > > > >
> > > > > > > > > As I said, if interested I'll go into it more later.
> > > > > > > > >
> > > > > > > > > Graham
> > > > > > > > >
> > > > > > > > >
> > > > > > >
> > > > >
> > > >
> > > >
> >
> >
> >
From grahamd at dscpl.com.au  Thu Apr 20 23:18:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Apr 20 23:18:41 2006
Subject: [mod_python] PythonAuthzHandler not working
Message-ID: <1145589508.26973@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Graham Dumpleton wrote ..
> > Add to config:
> > 
> >   AuthAuthoritative Off
> >   Require dummy
> > 
> > The value to Require cannot be:
> > 
> >   valid-user
> >   user ???
> >   group ???
> > 
> > it has to be something of your own creation that your authz handler then
> > interprets.
> > 
> > I am noting that authzhandler() can't return DECLINED, but must be OK,
> > or presumable HTTP_UNAUTHORIZED. Returning DECLINED results in 500
> > error and:
> > 
> > [Fri Apr 21 12:10:43 2006] [crit] [client ::1] configuration error: 
> couldn't
> > check access.  No groups file?: /~grahamd/authz/index.py 
> 
> This last issue still occurs with PythonHandlersModule even with the changes
> I gave above, so something definitely wrong with how mod_python does
> things when that directive is used. That whole directive is a pain in the
> neck
> and I very doubt it gets used anyway. Wish we could nuke it. :-)

And the reason it breaks is that PythonHandlerModule forgets to setup
the call to PythonAuthenHandler.

    python_directive_handler(cmd, mconfig, "PythonPostReadRequestHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonTransHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonHeaderParserHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonAccessHandler", val, SILENT);

     # PythonAuthenHandler missing here.

    python_directive_handler(cmd, mconfig, "PythonAuthzHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonTypeHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonInitHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonLogHandler", val, SILENT);
    python_directive_handler(cmd, mconfig, "PythonCleanupHandler", val, SILENT);

Been that way since 3.0. :-)

Graham
From grahamd at dscpl.com.au  Fri Apr 21 01:05:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 01:05:41 2006
Subject: [mod_python] The new module loader
Message-ID: <1145595933.20755@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> The test example you gave using publisher works great. But when I try and
> use that with my current configuration:
> 
> PythonInterpreter testing
> PythonOptimize Off
> PythonDebug On
> PythonAutoReload On
> PythonOption mod_python.future.importer testing
> # don't invoke our python handler if the file has an extension, it doesn't
> handle any addresses like that
> <Directory />
>     SetHandler mod_python
>     PythonHandler PyServer.pyserver

The new module importer completely ignores packages as it is practically
impossible to get any form of automatic module reloading to work
correctly with them when they are more than trivial. As such, packages
are handed off to standard Python __import__ to deal with. That it even
finds the package means that you have it installed in sys.path. Even if
it was a file based module, because it is on sys.path and thus likely to
be installed in a standard location, the new module importer would again
ignore it as it leaves all sys.path modules up to Python __import__
as too dangerous to be mixing importing schemes.

Anyway, that all only applies if you were expecting PyServer.pyserver to
automatically reload upon changes.

> </Directory>
> 
> <LocationMatch "^[^?]*?\.">
>     SetHandler None
> </LocationMatch>
> 
> I'm certain it's not using your importer. Nothing is reloaded when modified.
> Nothing is printed to the log.
> 
> I'm calling apache.import_module(module, 1, 1, path).

With the new module importer, ensure you use:

  apache.import_module(module, path=path)

Do not supply the autoreload and log arguments as they will now
default to None which means that the values will be picked up
automatically from Apache configuration options PythonAutoReload
and PythonDebug. This is mentioned in my document.

Now, if the call to apache.import_module() is at global scope in
PyServer.pyserver, because the package module is not a candidate
for module reloading, that you use apache.import_module() is
not going to do anything. In general, if a package/module is
being imported from sys.path, you shouldn't be using the
apache.import_module() function, at least not at global scope.

A request handler within such a module could use apache.import_module()
as in that case it will be called on each request and the module will
come from the cache if not changed, or will be reloaded from disk if it
has, or isn't in the cache to begin with.

> Any idea why this could be?

Can you describe the structure of your modules and where your
apache.import_module() calls are.

> Does your importer only work with publisher?

Should work for normal handlers as well, with proviso that the handler
file would need to be in document tree directory for automatic
reloading to work from top level.

Graham

> Thanks,
> -Dan
> 
> On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Dan Eloff wrote ..
> > > Neat, it works like you said it would, very nice. I'm not sure how
> you
> > > managed to reload parent when child changes, I'd like to take a peek
> at
> > > that
> > > later, good job.
> >
> > Lots of magic involved. :-)
> >
> > What it does is keep a dependency tree of imports managed through the
> > importer and determines if parents need reloading based on mtime of
> > child being updated, or if the child had been reimported since the last
> > time the parent was imported.
> >
> > It does this to multiple levels, so you could copy child.py to
> > grandchild.py
> > and add "import grandchild" into "child.py" and you will see that touching
> > grandchild.py will correctly cause both child and parent to be imported
> > when parent accessed.
> >
> > > __purge__ is called if __clone__ raises and exception, to notify the
> > > original module that it wasn't able to be cloned, and now it's just
> > going
> > > to
> > > be dumped without the data being copied over.
> >
> > Yep. Sort of a failsafe. Not sure what you might use it for. Maybe to
> > force
> > close of database connections although you would have to be careful
> > doing that as they may be in use by parallel requests in same process.
> > So, more flag that its all going away and close idle connections and
> > when parallel request release connections they might close automatically.
> >
> > > I think I figured out what you used the intialized flag for in child.py,
> > > it
> > > let's you avoid initializing the parts that get overwritten by
> > __clone__()
> > > in the event that __clone__ is called, afterall, it could be an
> > expensive
> > > operation. I don't understand why you keep a reference in a temporary
> > > location and then lock the object and copy outside of __clone__, why
> not
> > > lock and copy inside __clone__?
> >
> > The temporary was just to show a different variation. There is lots of
> > ways
> > of doing it. The reason for doing the transfer outside of the clone
> > function
> > is that at the clone point the new module hasn't actually been loaded
> and
> > you
> > may need to create instances of classes from the new module to pour the
> > transferred data into. These are only available later.
> >
> > Graham
> >
> > > Thanks,
> > > -Dan
> > >
> > > On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > >
> > > > Dan Eloff wrote ..
> > > > > Yay! I've got it now, and it compiled fine. I suspect something
> that
> > > > will
> > > > > still be a hitch is the need for that __clone__() method you talked
> > > > about.
> > > > > How do I use it, is it documented anywhere, or is there an example
> > > > > __clone__() method I can see?
> > > > >
> > > > > Thanks,
> > > > > -Dan
> > > >
> > > > Note that the __clone__() method is something that I added because
> of
> > > > a need I saw. I doubt that anyone else has burrowed into the code
> for
> > > > the importer deep enough yet to understand what it is necessarily
> all
> > > > about and thus the whole concept hasn't been peer reviewed as such.
> > > > Thus whether it is included at all, or in the form as it currently
> > exists
> > > > is not final.
> > > >
> > > > That said, I have attached a very contrived set of examples of
> > migrating
> > > > data from an old module to a new. It looks messy purely because of
> > > > the different examples and support for multithreading. If a module
> is
> > > > complicated and you want to be able to support multithreading and
> > > > module reloading, it will be complicated. I've seen a bit of dubious
> > > code
> > > > posted in the past which given the right conditions would blow up,
> > > > but without a proper solution have generally refrained from pointing
> > > > out the problems.
> > > >
> > > > Put the attached file in a directory configured for
> > mod_python.publisher
> > > > with a configuration something like:
> > > >
> > > >   PythonInterpreter testing
> > > >   AddHandler mod_python .py
> > > >   PythonHandler mod_python.publisher
> > > >   PythonDebug On
> > > >   PythonAutoReload On
> > > >
> > > > The "testing" interpreter is the one I have the new module importer
> > > > enabled for. Ie., in main Apache configuration, outside of all
> > container
> > > > directives have:
> > > >
> > > >   PythonOption mod_python.future.importer testing
> > > >
> > > > Check that all works by accessing page as "child.py". Once it works,
> > > > copy "child.py" to "parent.py" and add at the start the line:
> > > >
> > > >   import child
> > > >
> > > > Then access "parent.py".
> > > >
> > > > Now for some fun, update modification time on "parent.py" by touching
> > > > it or resaving it. Watch how reload counter increments. Touch it
> again
> > > > and see how transfer counter increments. Work out from code what
> > > > each of the bits is doing and why certain things are done certain
> > ways.
> > > > If you don't understand, ask.
> > > >
> > > > Now for some tricky stuff. Touch the "child.py" file, but still access
> > > > "parent.py". See how the parent module gets reloaded. Keep touching
> > > > "child.py" if you don't believe what is happening. Also access "
> > child.py"
> > > > from browser as well to see how was also reloaded.
> > > >
> > > > What is happening here is that new module importer doesn't just look
> > > > at page you are accessing, but looks at modules it imports and if
> the
> > > > child changes, the parent gets reloaded automatically along with
> the
> > > > child. With this working, you avoid all the horrible problems that
> > exist
> > > > now of having to force reloads by touching all files or restarting
> > Apache.
> > > >
> > > > Finally, note how the reload is occurring even though child was
> > imported
> > > > using "import" statement. This is because underneath it is magically
> > > > mapping to apache.import_module(). Change the "import" from:
> > > >
> > > >   import child
> > > >
> > > > to:
> > > >
> > > >   child = apache.import_module("child")
> > > >
> > > > and you will see it works the same.
> > > >
> > > > The rules are as per that incomplete document I referred you to
> > > > about the module importer.
> > > >
> > > > BTW, you cant totally avoid Apache restarts when you start using
> > > > __clone__() unless you are quite careful that it handles gracefully
> > > > not finding the data in an existing module that it is looking to
> copy
> > > > across. Anyway, experiment and you will see what I mean.
> > > >
> > > > You might also see if you can work out what __purge__() function
> > > > does by looking at source code. :-)
> > > >
> > > > Hope this provides you with hours of fun.
> > > >
> > > > Graham
> > > >
> > > > > On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > >
> > > > > > Quoting from some of Jim's notes:
> > > > > >    To access the Subversion repositories anonymously, you will
> > need
> > > a
> > > > > > Subversion client.
> > > > > >
> > > > > >    Choose the branch you would like to work on and check it out.
> > > For
> > > > > > example, to get the
> > > > > >
> > > > > >    current development branch (trunk), use:
> > > > > >
> > > > > >      svn co http://svn.apache.org/repos/asf/httpd/mod_python/trunk
> > > > > > mod_python
> > > > > >
> > > > > > Graham
> > > > > >
> > > > > > On 21/04/2006, at 4:17 AM, Dan Eloff wrote:
> > > > > >
> > > > > > > Excellent, now I just have to figure out how to get it from
> the
> > > > > > > svn. There's no instructions (that I found) on the mod_python
> > site,
> > > > > > > probably because it's something everybody but me knows.Idownloaded
> > > > > > > TortoiseSVN because that seems to be what you need on windows,
> > > and
> > > > > > > it when I click on checkout it wants to know the url of the
> > > > > > > repository.
> > > > > > >
> > > > > > > http://svn.apache.org and
> > http://svn.apache.org/httpd/mod_python/
> > > > > > > do not work.
> > > > > > >
> > > > > > > What's the url (and am I even going about this the right way?)
> > > > > > >
> > > > > > > Thanks,
> > > > > > > -Dan
> > > > > > >
> > > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Dan
> > > > > > > Eloff wrote ..
> > > > > > > > It sounds interesting, it might just finally solve all my
> > > > > > > importing woes.
> > > > > > > > How do I enable this UMI?
> > > > > > > >
> > > > > > > > Thanks,
> > > > > > > > -Dan
> > > > > > >
> > > > > > > See:
> > > > > > >
> > > > > > >
> > > > http://issues.apache.org/jira/browse/MODPYTHON-143#action_12370976
> > > > > > >
> > > > > > > Graham
> > > > > > >
> > > > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > > > > >
> > > > > > > > > Dan Eloff wrote ..
> > > > > > > > > > I am interested in how this unified module importer works
> > > and
> > > > > > > how it
> > > > > > > > > avoids
> > > > > > > > > > these problems.
> > > > > > > > > >
> > > > > > > > > > I'd really appreciate a brief description of it's
> > > > > > > architecture, not
> > > > > > > > that
> > > > > > > > > > you
> > > > > > > > > > usually need all that much encouraging ;)
> > > > > > > > > >
> > > > > > > > > > Thanks,
> > > > > > > > > > -Dan
> > > > > > > > >
> > > > > > > > > Bit busy today to elaborate too much, but you can start
> by
> > > > > > > reading my
> > > > > > > > > far from complete document on it:
> > > > > > > > >
> > > > > > > > >   http://www.dscpl.com.au/articles/modpython-007.html
> > > > > > > > >
> > > > > > > > > Graham
> > > > > > > > >
> > > > > > > > > > On 4/19/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > > > > > > >
> > > > > > > > > > >
> > > > > > > > > > > On 20/04/2006, at 8:06 AM, Dan Eloff wrote:
> > > > > > > > > > >
> > > > > > > > > > > > I went digging through the mod_python files and
> > > > > > > discovered how
> > > > > > > > the
> > > > > > > > > > new
> > > > > > > > > > > > publisher loader works (using ModuleCache) and I
> > borrowed
> > > > > > > the idea
> > > > > > > > > > to
> > > > > > > > > > > > import modules for my handler.
> > > > > > > > > > >
> > > > > > > > > > > Note that mod_python 3.3 will like be discarding that
> > > > > > > module loader
> > > > > > > > > > > and the original one and replacing it with a grand
> > unified
> > > > > > > module
> > > > > > > > > > > reloader. :-)
> > > > > > > > > > >
> > > > > > > > > > > > The purpose of ModuleCache was to avoid sys.modulesright?
> > > > > > > > > > >
> > > > > > > > > > > Yes.
> > > > > > > > > > >
> > > > > > > > > > > > I'm having some trouble with this, and I eventually
> > > > > > > tracked it
> > > > > > > > down
> > > > > > > > > > to
> > > > > > > > > > > > multiple versions of a dependancy module being loaded.
> > > > > > > > > > >
> > > > > > > > > > > Known issue. See:
> > > > > > > > > > >
> > > > > > > > > > >
> > > > > > > > > > > http://www.dscpl.com.au/articles/
> > > > > > > modpython-003.html#multiple-module-
> > > > > > > > > > > instances
> > > > > > > > > > >
> > > > > > > > > > > > My handler loads one version, with empty module
> > > > > > > variables, while
> > > > > > > > the
> > > > > > > > > > > > actual modules for the pages load different version(s)
> > > > > > > and populate
> > > > > > > > > > > > them with data. The changes are never reflected in
> the
> > > > > > > version
> > > > > > > > kept
> > > > > > > > > > by
> > > > > > > > > > > > my handler (because they are not the same)
> > > > > > > > > > > >
> > > > > > > > > > > > This all makes sense, and is probably the intended
> > > > > > > effect, but
> > > > > > > > what
> > > > > > > > > > do
> > > > > > > > > > > > you do for modules like Session in mod_python, where
> > > > > > > MemorySession
> > > > > > > > > > > > uses a static class member to store sessions? Wouldn't
> > > > > > > the page
> > > > > > > > > > > > modules each get their own version and thusly prevent
> > > > > > > sessions
> > > > > > > > from
> > > > > > > > > > > > working?
> > > > > > > > > > >
> > > > > > > > > > > Also see:
> > > > > > > > > > >
> > > > > > > > > > >
> > > > > > > > > > >
> > > > > > > > >
> > http://www.dscpl.com.au/articles/modpython-003.html#transfer-of-
> > > > > > > module-
> > > > > > > > > > > data
> > > > > > > > > > >
> > > > > > > > > > > > I need to be able to reload modified modules, but
> also
> > > to
> > > > > > > make
> > > > > > > > use
> > > > > > > > > > of
> > > > > > > > > > > > shared modules. These seem to be conflicting needs,
> > > > > > > however. Does
> > > > > > > > > > > > anybody have any inisght into this situation that
> they
> > > > > > > can share?
> > > > > > > > > > >
> > > > > > > > > > > Only that mod_python 3.3 will hopefully fix a lot of
> > this
> > > > > > > stuff.
> > > > > > > > If
> > > > > > > > > you
> > > > > > > > > > > are prepared to give 3.3 source code out of subversion
> > > > > > > repository
> > > > > > > > a go
> > > > > > > > > > > to see if things work as you expect, let me know and
> > will
> > > > > > > tell you
> > > > > > > > the
> > > > > > > > > > > magic to enable the unified module importer in 3.3
> as at
> > > > > > > moment it
> > > > > > > > is
> > > > > > > > > > > still off by default.
> > > > > > > > > > >
> > > > > > > > > > > Note though that even in 3.3, the "transfer of module
> > data"
> > > > > > > issue
> > > > > > > > > still
> > > > > > > > > > > has to be explicitly dealt with in some way. Although
> > not
> > > > > > > confirmed
> > > > > > > > > how
> > > > > > > > > > > this will be done, the new module importer as it stands
> > > now
> > > > > > > allows
> > > > > > > > a
> > > > > > > > > > > module to define a __clone__() method which will be
> > called
> > > > > > > and which
> > > > > > > > > > > can be used to transfer data from an old module to
> a new
> > > > > > > where data
> > > > > > > > > > > needs
> > > > > > > > > > > to be preserved across reloads.
> > > > > > > > > > >
> > > > > > > > > > > As I said, if interested I'll go into it more later.
> > > > > > > > > > >
> > > > > > > > > > > Graham
> > > > > > > > > > >
> > > > > > > > > > >
> > > > > > > > >
> > > > > > >
> > > > > >
> > > > > >
> > > >
> > > >
> > > >
> >
From grahamd at dscpl.com.au  Fri Apr 21 01:44:10 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 01:44:15 2006
Subject: [mod_python] The new module loader
Message-ID: <1145598250.8774@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Dan Eloff wrote ..
> > <Directory />
> >     SetHandler mod_python
> >     PythonHandler PyServer.pyserver
> 
> The new module importer completely ignores packages as it is practically
> impossible to get any form of automatic module reloading to work
> correctly with them when they are more than trivial. As such, packages
> are handed off to standard Python __import__ to deal with. That it even
> finds the package means that you have it installed in sys.path. Even if
> it was a file based module, because it is on sys.path and thus likely to
> be installed in a standard location, the new module importer would again
> ignore it as it leaves all sys.path modules up to Python __import__
> as too dangerous to be mixing importing schemes.
> 
> Anyway, that all only applies if you were expecting PyServer.pyserver to
> automatically reload upon changes.

BTW, that something outside of the document tree, possibly in sys.path,
is dealt with by Python __import__ doesn't mean you can't have module
reloading on stuff outside of the document tree. The idea is that if it is
part of the web application and needs to be reloadable, that it doesn't
really belong in standard Python directories anyway. People only install
it there at present because it is convenient.

The better way of dealing with this with the new module importer is to
put your web application modules elsewhere, ie., not on sys.path. You then
specify an absolute path to the actual .py file in the handler directive.

 <Directory />
     SetHandler mod_python
     PythonHandler /path/to/web/application/PyServer/pserver.py
     ...

Most cases I have seen is that people use packages purely to create a
namespace to group the modules. With the new module importer that
doesn't really need to be done anymore. That is because you can
directly reference an arbitrary module by its path. When you use the
"import" statement in files in that directory, one of the places it will
automatically look, without that directory needing to be in sys.path,
is the same directory the file is in. This achieves the same result as
what people are using packages for now but you can still have module
reloading work.

If you need a working example of this let me know.

Graham

From dan.eloff at gmail.com  Fri Apr 21 02:48:16 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Fri Apr 21 02:48:24 2006
Subject: [mod_python] The new module loader
In-Reply-To: <1145598250.8774@dscpl.user.openhosting.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
Message-ID: <4817b6fc0604202348m43bab44ai928d249facd162d2@mail.gmail.com>

Thanks a bundle Graham, I get the gist of it. Tomorrow I'll back everything
up and then start reworking it with all that in mind. Much appreciated. The
pyserver stuff wasn't being reloaded because it's in site-packages, and the
rest of the stuff was being loaded *AFTER* being placed in sys.path. I did a
pretty good job of shooting myself in the foot there. I'll fix it all up and
give it another go and let you know what happens.

You're right about the packages too, other than as a namespace and for
convenience, I don't need it, and it makes more sense for it to live
elsewhere. You put an awful lot of thought into this, I think it will be the
death of all those auto reload woes.

Thanks again,
-Dan

On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Graham Dumpleton wrote ..
> > Dan Eloff wrote ..
> > > <Directory />
> > >     SetHandler mod_python
> > >     PythonHandler PyServer.pyserver
> >
> > The new module importer completely ignores packages as it is practically
> > impossible to get any form of automatic module reloading to work
> > correctly with them when they are more than trivial. As such, packages
> > are handed off to standard Python __import__ to deal with. That it even
> > finds the package means that you have it installed in sys.path. Even if
> > it was a file based module, because it is on sys.path and thus likely to
> > be installed in a standard location, the new module importer would again
> > ignore it as it leaves all sys.path modules up to Python __import__
> > as too dangerous to be mixing importing schemes.
> >
> > Anyway, that all only applies if you were expecting PyServer.pyserver to
> > automatically reload upon changes.
>
> BTW, that something outside of the document tree, possibly in sys.path,
> is dealt with by Python __import__ doesn't mean you can't have module
> reloading on stuff outside of the document tree. The idea is that if it is
> part of the web application and needs to be reloadable, that it doesn't
> really belong in standard Python directories anyway. People only install
> it there at present because it is convenient.
>
> The better way of dealing with this with the new module importer is to
> put your web application modules elsewhere, ie., not on sys.path. You then
> specify an absolute path to the actual .py file in the handler directive.
>
> <Directory />
>      SetHandler mod_python
>      PythonHandler /path/to/web/application/PyServer/pserver.py
>      ...
>
> Most cases I have seen is that people use packages purely to create a
> namespace to group the modules. With the new module importer that
> doesn't really need to be done anymore. That is because you can
> directly reference an arbitrary module by its path. When you use the
> "import" statement in files in that directory, one of the places it will
> automatically look, without that directory needing to be in sys.path,
> is the same directory the file is in. This achieves the same result as
> what people are using packages for now but you can still have module
> reloading work.
>
> If you need a working example of this let me know.
>
> Graham
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060420/7ec81dd4/attachment.html
From grahamd at dscpl.com.au  Fri Apr 21 03:01:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 03:01:34 2006
Subject: [mod_python] The new module loader
Message-ID: <1145602891.18276@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> Thanks a bundle Graham, I get the gist of it. Tomorrow I'll back everything
> up and then start reworking it with all that in mind. Much appreciated.
> The
> pyserver stuff wasn't being reloaded because it's in site-packages, and
> the
> rest of the stuff was being loaded *AFTER* being placed in sys.path. I
> did a
> pretty good job of shooting myself in the foot there. I'll fix it all up
> and
> give it another go and let you know what happens.
> 
> You're right about the packages too, other than as a namespace and for
> convenience, I don't need it, and it makes more sense for it to live
> elsewhere. You put an awful lot of thought into this, I think it will be
> the
> death of all those auto reload woes.

If you are going to go off and restructure your code, I'll let you know of
one more thing that may be useful.

When you use apache.import_module(), like the directive in the Apache
configuration, you can use an absolute pathname instead of a straight
module name.

  mystuff1 = apache.import_module("/some/path/mystuff1.py")

Also, within a module managed by the new importer, as well as being
able to say:

  import mystuff2

or:

  mystuff2 = apache.import_module("mystuff2")

to get "mystuff2" from the same directory, you can also say:

  mystuff2 = apache.import_module("./mystuff2.py")

When using an absolute path or relative path, the file doesn't even
strictly need to have a .py extension. For example, if someone
wanted to rewrite high level dispatcher for mpservlets framework
to use new importer, they could use:

  servlet = apache.import_module("/some/path/servlet.mps")

Unless you have a good reason, I would suggest sticking with .py
extension.

You might perhaps see the next step from "./" above and that is that
relative paths in general work. Thus, to get module from a subdir
you can use:

  subdir_mystuff3 = apache.import_module("./subdir/mystuff3.py")

The "./" is important, you can't just have "subdir/..." it will not work
and will take it as a normal module import rather than a relative path.

Finally, if need be, you can say:

  parentdir_mystuff4 = apache.import_module("../parent/mystuff4.py")

This relative path importing should be sufficient to replace any of the
inter package imports used with a package.

BTW, if you stumble across "~/..." in source code of importer, ignore it
and do not try and use it. Originally I saw it as a useful shortcut, but I
now see problems with it, so it is going to go away.

Graham

> On 4/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Graham Dumpleton wrote ..
> > > Dan Eloff wrote ..
> > > > <Directory />
> > > >     SetHandler mod_python
> > > >     PythonHandler PyServer.pyserver
> > >
> > > The new module importer completely ignores packages as it is practically
> > > impossible to get any form of automatic module reloading to work
> > > correctly with them when they are more than trivial. As such, packages
> > > are handed off to standard Python __import__ to deal with. That it
> even
> > > finds the package means that you have it installed in sys.path. Even
> if
> > > it was a file based module, because it is on sys.path and thus likely
> to
> > > be installed in a standard location, the new module importer would
> again
> > > ignore it as it leaves all sys.path modules up to Python __import__
> > > as too dangerous to be mixing importing schemes.
> > >
> > > Anyway, that all only applies if you were expecting PyServer.pyserver
> to
> > > automatically reload upon changes.
> >
> > BTW, that something outside of the document tree, possibly in sys.path,
> > is dealt with by Python __import__ doesn't mean you can't have module
> > reloading on stuff outside of the document tree. The idea is that if
> it is
> > part of the web application and needs to be reloadable, that it doesn't
> > really belong in standard Python directories anyway. People only install
> > it there at present because it is convenient.
> >
> > The better way of dealing with this with the new module importer is to
> > put your web application modules elsewhere, ie., not on sys.path. You
> then
> > specify an absolute path to the actual .py file in the handler directive.
> >
> > <Directory />
> >      SetHandler mod_python
> >      PythonHandler /path/to/web/application/PyServer/pserver.py
> >      ...
> >
> > Most cases I have seen is that people use packages purely to create a
> > namespace to group the modules. With the new module importer that
> > doesn't really need to be done anymore. That is because you can
> > directly reference an arbitrary module by its path. When you use the
> > "import" statement in files in that directory, one of the places it will
> > automatically look, without that directory needing to be in sys.path,
> > is the same directory the file is in. This achieves the same result as
> > what people are using packages for now but you can still have module
> > reloading work.
> >
> > If you need a working example of this let me know.
> >
> > Graham
> >
> >
From matusis at matusis.com  Fri Apr 21 04:12:44 2006
From: matusis at matusis.com (Alec Matusis)
Date: Fri Apr 21 04:14:20 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <8F10456E-8E17-4260-B91E-E0D9EE82E54D@dscpl.com.au>
Message-ID: <200604210813.k3L8Dklw028848@modpython.org>

 
I figured out how to do this without changing mod_python source:

I wrote a mod_python input filter:

flashfilter.py:

from mod_python import apache

def inputfilter(filter):
    #this is a workaround flash 8 FileReference bug: Flash POST is not
RFC-compliant as of Flash 8,0,22,0
    s = filter.read()
    while s:
        if 'flashfileref' in parse_args(filter.req.args):
            filter.write(s.replace('\r\nSubmit Query','\r\n\r\nSubmit
Query'))
        else:
            filter.write(s)
        s = filter.read()

    if s is None:
        filter.close()

For this to work, flash FileReference should submit data to a script
/myscript with an argument /myscript?flashfileref
since I wanted to be able to mark which data should be filtered not to
reduce performance too much.

Also I had to do
                PythonInputFilter flashfilter FLASHFILTER
                SetInputFilter FLASHFILTER 

in my apache config file.

parse_args(args) is a simple function that converts the arguments of a
request that follow "?" into a dictionary.


-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Thursday, April 20, 2006 4:28 AM
To: Alec Matusis
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ValueError with Flash 8 FileReference.upload(url) 


On 20/04/2006, at 8:53 PM, Alec Matusis wrote:

> One more thing:
>
> I inserted the following code in util.py on line 153 where it could  
> not
> split the string:
>
>                         try:
>                             h, v = line.split(":", 1)
>                         except Exception, e:
>                             req.log_error('faulty line is: '+repr 
> (line))
>
> And the output was:
>
> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
> 'Submit Query\\r\\n'
> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
> '------------ae0cH2ae0KM7KM7KM7gL6KM7ei4ei4'
>
> I am not 100% sure what this means, but for some reason these two  
> lines were
> not captured by req.read() in my publisher.
> And, I suppose, this SubmitQuery line is wrong?

The request you think is the problem, possibly isn't the problem  
then. :-)

Anyway, in util.FieldStorage, instead of using code:

            while line not in ('\r','\r\n'):
                # we read the headers until we reach an empty line
                # NOTE : a single \n would mean the entity is  
malformed, but
                # we're tolerating it anyway
                h, v = line.split(":", 1)

try using the following code instead:

            while line not in ('\r','\r\n') and line.find(':') != -1:
                # we read the headers until we reach an empty line
                # NOTE : a single \n would mean the entity is  
malformed, but
                # we're tolerating it anyway
                h, v = line.split(":", 1)

I have no idea if this will actually work. It attempts to break out  
of header parsing
if it finds a line with no colon in it.

This will not work for multiline headers, but then mod_python doesn't  
work for
them anyway:

   http://issues.apache.org/jira/browse/MODPYTHON-159

Graham

> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Wednesday, April 19, 2006 5:36 PM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: RE: [mod_python] ValueError with Flash 8  
> FileReference.upload(url)
>
> Please keep posts on mailing list. :-)
>
> That discussion covers two issues.
>
> 1. That in some cases it doesn't output required extra blank line.
> This is what the Ruby patch was about.
>
> 2. That with Win32 client, it will do a POST with zero content.
>
> As to 2, I note that your example request shows content length
> header of "0", but then has content. I'm not sure if this is meant
> to be the test post or the real thing.
>
> Do you see any test POST with no actual content like they talk
> about? Have you perhaps captured the test POST rather than
> the real POST?
>
> Graham
>
> Alec Matusis wrote ..
>> I found this discussion on Macromedia website:
>>
>>
>>
> http://livedocs.macromedia.com/flash/8/main/wwhelp/wwhimpl/common/ 
> html/wwhel
>> p.htm?context=LiveDocs_Parts&file=00002225.html
>>
>> The relevant posts are
>> No screen name said on Sep 23, 2005 at 10:15 AM
>>
>> and Macromedia's official response, acknowledging the bug:
>> shimi2 said on Jan 19, 2006 at 11:22 AM :
>>
>> I am not 100% sure if I encountered the same problem, but it looks  
>> like
>> it.
>> It also could be that it tries to parse the empty POST request  
>> that flash
>> issues to test the connection if the filesize is > 10KB (their  
>> comment
>> shimi2 said on Sep 21, 2005 at 4:45 PM and also this is evidently the
> first
>> empty line in my req.read() output ? )
>>
>> They recommend a workaround for Ruby there. Since it seems to be a  
>> fairly
>> common issue, would you be able to recommend a workaround for  
>> mod_python
>> as
>> well?
>>
>> I wouldn't like to change mod_python sources, but rather, I would  
>> like
>> to
>> alter the bad HTTP request in my handler:
>>
>> try:
>>     myform=util.FieldStorage(req)
>> except ValueError:
>>     altered_req = MakeGoodHTTPRequest(req)
>>     myform=util.FieldStorage(altered_req)
>>
>> to handle
>> ValueError: need more than 1 value to unpack
>> that appears on line 153 in util.py ( h, v = line.split(":", 1)  
>> causes
>> it -
>> looks like the line does not have a colon ":" )
>>
>> Could you advise on how this MakeGoodHTTPRequest should look like?
>>
>>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: Wednesday, April 19, 2006 2:43 PM
>> To: Alec Matusis
>> Cc: mod_python list
>> Subject: Re: [mod_python] ValueError with Flash 8
> FileReference.upload(url)
>>
>> Arrrghhh, I'm going bonkers, the blank line is there now when I look
>> at it. :-(
>>
>> Too many backslashes in there, strains the eyes.
>>
>> Anyway, still sounds very much like the missing blank line seen  
>> before.
>> I'll have a look again later at it.
>>
>> Graham
>>
>> On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:
>>
>>> Flash for some reason doesn't do the POST for multipart/form per
>>> standard RFCs
>>> when no content type is associated with a filename block.
>>>
>>> See:
>>>
>>>   http://www.modpython.org/pipermail/mod_python/2006-April/ 
>>> 020794.html
>>>
>>> for previous discussion.
>>>
>>> See more below.
>>>
>>> On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
>>>
>>>> I have been having a problem with FileReference.upload(url)  in  
>>>> flash
>>>> 8, and to my amazement, found these posts.
>>>>
>>>> Here's the error:
>>>>
>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File
>>>> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line
>>>> 153, in __init__
>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =
>>>> line.split(":", 1)
>>>>
>>>>
>>>> Here's what Flash sends to the server (obtained with
>>>> self.req.log_error(repr(self.req.read())):
>>>>
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':
>>>> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',
>>>> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':
>>>> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',
>>>> 'Content-Type': 'multipart/form-data;
>>>> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':
>>>> 'text/*'}
>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]
>>>> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent- 
>>>> Disposition:
>>>> form-data;
>>>> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------
>>>> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
>>>
>>> See in above line how now content type but also no required extra
>>> blank line.
>>> Add a content type for that filename block and see if it works.
>>>
>>> Graham
>>>
>>>> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent- 
>>>> Type:
>>>> application/octet-
>>>> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\ 
>>>> \x02\\x
>>>> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop
>>>> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\ 
>>>> \x00\\
>>>> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\ 
>>>> \r\\x0
>>>> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\ 
>>>> \x00\\x0
>>>> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04 
>>>> \\n\\
>>>> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00 
>>>> \\x00
>>>> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\ 
>>>> \x03\\x
>>>> f5\\x00\\x00\\x00\\x00\\x00H\\x00/
>>>> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/
>>>> ff\\x00\\x01\\x!
>>>>
>>>> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\ 
>>>> \x00\\
>>>> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\ 
>>>> \x01\
>>>> \x005\\x00\\x00\\x00\\x01\\x00-
>>>> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\ 
>>>> \x00\
>>>> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff 
>>>> \\xff
>>>> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\ 
>>>> \x00\
>>>> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\ 
>>>> \x008BIM
>>>> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
>>>>
>>>> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\ 
>>>> \x00\\x
>>>> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\ 
>>>> \x00W\\xe
>>>> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\ 
>>>> \x00\\x1
>>>> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\\x00&File
>>>> written by Adobe Photoshop\\xa8
>>>> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\ 
>>>> \xdb\
>>>> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\ 
>>>> \x0b\\
>>>> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\ 
>>>> \x13\\x1
>>>> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\ 
>>>> \x0c\\x0
>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\ 
>>>> \x0c\\x0
>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\ 
>>>> \r\\x
>>>> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e 
>>>> \\x0e
>>>> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c 
>>>> \\x0c
>>>> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
>>>>
>>>> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\ 
>>>> \x04\
>>>> \x00\\x07\\xff\\xc4\\x01?
>>>> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00 
>>>> \\x00
>>>> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\ 
>>>> \n\\x0
>>>> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\ 
>>>> \x00\\x0
>>>> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\ 
>>>> \n\\x
>>>> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\ 
>>>> \x08\\x
>>>> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04!
>>>> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\ 
>>>> \xc1b34r
>>>> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\ 
>>>> \x93Td
>>>> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\ 
>>>> \xf3F\\'
>>>> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5 
>>>> \\xe5
>>>> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\ 
>>>> \xa7\\
>>>> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\ 
>>>> \x03\\
>>>> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03!
>>>> 1\\x12\\x04AQaq"\\x!
>>>>
>>>> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82 
>>>> \\x92
>>>> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T 
>>>> \\xa3
>>>> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\ 
>>>> \x85\\
>>>> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\ 
>>>> \x86\\x9
>>>> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\ 
>>>> \xff\
>>>> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00?
>>>> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02
>>>> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac:
>>>> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\ 
>>>> \xd9\\x
>>>> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\ 
>>>> \xac\\xb
>>>> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\ 
>>>> \xa5\\
>>>> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94 
>>>> \\x7f
>>>> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\ 
>>>> \xe6\
>>>> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\ 
>>>> \x8fc\\
>>>> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\ 
>>>> \x91\\xe
>>>> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7 
>>>> \\xd6
>>>> \!
>>>>
>>>> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\ 
>>>> \xcf\
>>>> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae!
>>>> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\ 
>>>> \x89\\
>>>> x04Xc
>>>> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\ 
>>>> \xc1\\
>>>> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%?
>>>> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2 
>>>> \\xc6
>>>> \\xb9\\x80\\xee2\\x08-
>>>> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-;
>>>> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3 
>>>> \\xac
>>>> \\x8d\\xba\\xfb\\x96/
>>>> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\ 
>>>> \xcaH
>>>> \\x8e\\xdb\\xe8\\xcd\\x86
>>>> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\ 
>>>> \xb3\\x
>>>> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\ 
>>>> \x18\\x
>>>> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\ 
>>>> \x15\\x8
>>>> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\ 
>>>> \xc8\\
>>>> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
>>>>
>>>> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
>>>> \x08O2
>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW\\x
>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8 
>>>> \\\\\
>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I 
>>>> \\x06
>>>> \\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\xcb\!
>>>>
>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\\x1
>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
>>>> \x02@\
>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\ 
>>>> \xf2z\
>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\\xf
>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\\xf
>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\\xc
>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\ 
>>>> \xd7\\x
>>>> 08\\xed\\x04.\\xd4\!
>>>>
>>>> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\ 
>>>> \x08O2
>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW\\x
>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8 
>>>> \\\\\
>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I 
>>>> \\x06
>>>> \\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\xcb\!
>>>>
>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\\x1
>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\ 
>>>> \x02@\
>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\ 
>>>> \xf2z\
>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\\xf
>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\\xf
>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\\xc
>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\ 
>>>> \xc666X\
>>>> \xd7\\x08\\xed\\x04.\\x!
>>>>
>>>> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\ 
>>>> \xa4bdT\\x0
>>>> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\ 
>>>> \xabW
>>>> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\ 
>>>> \xa8\\
>>>> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\ 
>>>> \xb1I\\
>>>> x06\\x88=\\x9ez\\xa7:
>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\ 
>>>> \x1e\\x
>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\ 
>>>> \xf70\\x9
>>>> 1\\xf9\\xc2?
>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2 
>>>> \\xab
>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\ 
>>>> \xe8\\x9
>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\ 
>>>> \x03T\\xd
>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\ 
>>>> \x8c\
>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\ 
>>>> \xa0Uk,
>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd% 
>>>> 1*2\\xb
>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\ 
>>>> \xa5\
>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\ 
>>>> \xb9\\xc
>>>> 3\\xaafT\\x!
>>>>
>>>> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\ 
>>>> \nMo\
>>>> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\ 
>>>> \x13\\x0
>>>> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf 
>>>> (V\\xf
>>>> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\ 
>>>> \xce#\
>>>> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\ 
>>>> \x01\
>>>> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\ 
>>>> \xb9\
>>>> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\ 
>>>> \x01I\\
>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\ 
>>>> \x06A\
>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\ 
>>>> \x7fX
>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\ 
>>>> \xa0yFo!
>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83 
>>>> \\xcf
>>>> \\x1f\\x143 <file://!
>>>>
>>>> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\ 
>>>> \xed\\x
>>>> 04.\\xd4\\x95>
>>>>
>>>>
>>>> Any thoughts on this?
>>>>
>>>>
>>>> --Alec
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Apr 21 05:23:42 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 05:24:15 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <200604210813.k3L8DlWb028849@dscpl.user.openhosting.com>
References: <200604210813.k3L8DlWb028849@dscpl.user.openhosting.com>
Message-ID: <1284A4BC-79C4-45BA-905A-7E225397829D@dscpl.com.au>

A creative way of getting around the problem. I hadn't thought
of using a filter. Some suggested changes below.

On 21/04/2006, at 6:12 PM, Alec Matusis wrote:

>
> I figured out how to do this without changing mod_python source:
>
> I wrote a mod_python input filter:
>
> flashfilter.py:
>
> from mod_python import apache
>
> def inputfilter(filter):
>     #this is a workaround flash 8 FileReference bug: Flash POST is not
> RFC-compliant as of Flash 8,0,22,0


     if 'flashfileref' in parse_args(filter.req.args):
       filter.pass_on()
       return


>     s = filter.read()
>     while s:
>         if 'flashfileref' in parse_args(filter.req.args):
>             filter.write(s.replace('\r\nSubmit Query','\r\n\r\nSubmit
> Query'))
>         else:
>             filter.write(s)

Just have:

            filter.write(s.replace('\r\nSubmit Query','\r\n\r\nSubmit  
Query'))

as pass on call above will cause your filtering code to be skipped.

Graham

>         s = filter.read()
>
>     if s is None:
>         filter.close()
>
> For this to work, flash FileReference should submit data to a script
> /myscript with an argument /myscript?flashfileref
> since I wanted to be able to mark which data should be filtered not to
> reduce performance too much.
>
> Also I had to do
>                 PythonInputFilter flashfilter FLASHFILTER
>                 SetInputFilter FLASHFILTER
>
> in my apache config file.
>
> parse_args(args) is a simple function that converts the arguments of a
> request that follow "?" into a dictionary.
>
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Thursday, April 20, 2006 4:28 AM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] ValueError with Flash 8  
> FileReference.upload(url)
>
>
> On 20/04/2006, at 8:53 PM, Alec Matusis wrote:
>
>> One more thing:
>>
>> I inserted the following code in util.py on line 153 where it could
>> not
>> split the string:
>>
>>                         try:
>>                             h, v = line.split(":", 1)
>>                         except Exception, e:
>>                             req.log_error('faulty line is: '+repr
>> (line))
>>
>> And the output was:
>>
>> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
>> 'Submit Query\\r\\n'
>> [Thu Apr 20 03:47:53 2006] [error] [client 10.0.1.35] faulty line is:
>> '------------ae0cH2ae0KM7KM7KM7gL6KM7ei4ei4'
>>
>> I am not 100% sure what this means, but for some reason these two
>> lines were
>> not captured by req.read() in my publisher.
>> And, I suppose, this SubmitQuery line is wrong?
>
> The request you think is the problem, possibly isn't the problem
> then. :-)
>
> Anyway, in util.FieldStorage, instead of using code:
>
>             while line not in ('\r','\r\n'):
>                 # we read the headers until we reach an empty line
>                 # NOTE : a single \n would mean the entity is
> malformed, but
>                 # we're tolerating it anyway
>                 h, v = line.split(":", 1)
>
> try using the following code instead:
>
>             while line not in ('\r','\r\n') and line.find(':') != -1:
>                 # we read the headers until we reach an empty line
>                 # NOTE : a single \n would mean the entity is
> malformed, but
>                 # we're tolerating it anyway
>                 h, v = line.split(":", 1)
>
> I have no idea if this will actually work. It attempts to break out
> of header parsing
> if it finds a line with no colon in it.
>
> This will not work for multiline headers, but then mod_python doesn't
> work for
> them anyway:
>
>    http://issues.apache.org/jira/browse/MODPYTHON-159
>
> Graham
>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: Wednesday, April 19, 2006 5:36 PM
>> To: Alec Matusis
>> Cc: mod_python@modpython.org
>> Subject: RE: [mod_python] ValueError with Flash 8
>> FileReference.upload(url)
>>
>> Please keep posts on mailing list. :-)
>>
>> That discussion covers two issues.
>>
>> 1. That in some cases it doesn't output required extra blank line.
>> This is what the Ruby patch was about.
>>
>> 2. That with Win32 client, it will do a POST with zero content.
>>
>> As to 2, I note that your example request shows content length
>> header of "0", but then has content. I'm not sure if this is meant
>> to be the test post or the real thing.
>>
>> Do you see any test POST with no actual content like they talk
>> about? Have you perhaps captured the test POST rather than
>> the real POST?
>>
>> Graham
>>
>> Alec Matusis wrote ..
>>> I found this discussion on Macromedia website:
>>>
>>>
>>>
>> http://livedocs.macromedia.com/flash/8/main/wwhelp/wwhimpl/common/
>> html/wwhel
>>> p.htm?context=LiveDocs_Parts&file=00002225.html
>>>
>>> The relevant posts are
>>> No screen name said on Sep 23, 2005 at 10:15 AM
>>>
>>> and Macromedia's official response, acknowledging the bug:
>>> shimi2 said on Jan 19, 2006 at 11:22 AM :
>>>
>>> I am not 100% sure if I encountered the same problem, but it looks
>>> like
>>> it.
>>> It also could be that it tries to parse the empty POST request
>>> that flash
>>> issues to test the connection if the filesize is > 10KB (their
>>> comment
>>> shimi2 said on Sep 21, 2005 at 4:45 PM and also this is evidently  
>>> the
>> first
>>> empty line in my req.read() output ? )
>>>
>>> They recommend a workaround for Ruby there. Since it seems to be a
>>> fairly
>>> common issue, would you be able to recommend a workaround for
>>> mod_python
>>> as
>>> well?
>>>
>>> I wouldn't like to change mod_python sources, but rather, I would
>>> like
>>> to
>>> alter the bad HTTP request in my handler:
>>>
>>> try:
>>>     myform=util.FieldStorage(req)
>>> except ValueError:
>>>     altered_req = MakeGoodHTTPRequest(req)
>>>     myform=util.FieldStorage(altered_req)
>>>
>>> to handle
>>> ValueError: need more than 1 value to unpack
>>> that appears on line 153 in util.py ( h, v = line.split(":", 1)
>>> causes
>>> it -
>>> looks like the line does not have a colon ":" )
>>>
>>> Could you advise on how this MakeGoodHTTPRequest should look like?
>>>
>>>
>>> -----Original Message-----
>>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>>> Sent: Wednesday, April 19, 2006 2:43 PM
>>> To: Alec Matusis
>>> Cc: mod_python list
>>> Subject: Re: [mod_python] ValueError with Flash 8
>> FileReference.upload(url)
>>>
>>> Arrrghhh, I'm going bonkers, the blank line is there now when I look
>>> at it. :-(
>>>
>>> Too many backslashes in there, strains the eyes.
>>>
>>> Anyway, still sounds very much like the missing blank line seen
>>> before.
>>> I'll have a look again later at it.
>>>
>>> Graham
>>>
>>> On 20/04/2006, at 6:34 AM, Graham Dumpleton wrote:
>>>
>>>> Flash for some reason doesn't do the POST for multipart/form per
>>>> standard RFCs
>>>> when no content type is associated with a filename block.
>>>>
>>>> See:
>>>>
>>>>   http://www.modpython.org/pipermail/mod_python/2006-April/
>>>> 020794.html
>>>>
>>>> for previous discussion.
>>>>
>>>> See more below.
>>>>
>>>> On 19/04/2006, at 7:08 PM, Alec Matusis wrote:
>>>>
>>>>> I have been having a problem with FileReference.upload(url)  in
>>>>> flash
>>>>> 8, and to my amazement, found these posts.
>>>>>
>>>>> Here's the error:
>>>>>
>>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]   File
>>>>> "/usr/local/lib/python2.4/site-packages/mod_python/util.py", line
>>>>> 153, in __init__
>>>>> [Wed Apr 19 01:34:52 2006] [error] [client 10.0.1.39]     h, v =
>>>>> line.split(":", 1)
>>>>>
>>>>>
>>>>> Here's what Flash sends to the server (obtained with
>>>>> self.req.log_error(repr(self.req.read())):
>>>>>
>>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] ''
>>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39] {'Cookie':
>>>>> 'cookies_enabled.matusis.com=yes', 'Cache-Control': 'no-cache',
>>>>> 'Connection': 'Keep-Alive', 'Content-Length': '0', 'Host':
>>>>> 'zz.alecm.dev.chattanga.com', 'User-Agent': 'Shockwave Flash',
>>>>> 'Content-Type': 'multipart/form-data;
>>>>> boundary=----------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3', 'Accept':
>>>>> 'text/*'}
>>>>> [Wed Apr 19 02:05:44 2006] [error] [client 10.0.1.39]
>>>>> '------------gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-
>>>>> Disposition:
>>>>> form-data;
>>>>> name="Filename"\\r\\n\\r\\naleccs.jpg\\r\\n------------
>>>>> gL6Ef1ei4ae0ei4ae0Ef1GI3GI3GI3\\r\\nContent-Disposition:
>>>>
>>>> See in above line how now content type but also no required extra
>>>> blank line.
>>>> Add a content type for that filename block and see if it works.
>>>>
>>>> Graham
>>>>
>>>>> form-data; name="Filedata"; filename="aleccs.jpg"\\r\\nContent-
>>>>> Type:
>>>>> application/octet-
>>>>> stream\\r\\n\\r\\n\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF\\x00\\x01\
>>>>> \x02\\x
>>>>> 01\\x00H\\x00H\\x00\\x00\\xff\\xed\\x08TPhotoshop
>>>>> 3.0\\x008BIM\\x03\\xed\\x00\\x00\\x00\\x00\\x00\\x10\\x00H\\x00\
>>>>> \x00\\
>>>>> x00\\x01\\x00\\x01\\x00H\\x00\\x00\\x00\\x01\\x00\\x018BIM\\x04\
>>>>> \r\\x0
>>>>> 0\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00x8BIM\\x03\\xf3\\x00\
>>>>> \x00\\x0
>>>>> 0\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x04
>>>>> \\n\\
>>>>> x00\\x00\\x00\\x00\\x00\\x01\\x00\\x008BIM\\'\\x10\\x00\\x00\\x00
>>>>> \\x00
>>>>> \\x00\\n\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x028BIM\
>>>>> \x03\\x
>>>>> f5\\x00\\x00\\x00\\x00\\x00H\\x00/
>>>>> ff\\x00\\x01\\x00lff\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x00/
>>>>> ff\\x00\\x01\\x!
>>>>>
>>>>> 00\\xa1\\x99\\x9a\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x01\\x002\
>>>>> \x00\\
>>>>> x00\\x00\\x01\\x00Z\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\
>>>>> \x01\
>>>>> \x005\\x00\\x00\\x00\\x01\\x00-
>>>>> \\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x018BIM\\x03\\xf8\
>>>>> \x00\
>>>>> \x00\\x00\\x00\\x00p\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\x03\\xe8\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff
>>>>> \\xff
>>>>> \\x03\\xe8\\x00\\x008BIM\\x04\\x08\\x00\\x00\\x00\\x00\\x00\\x10\
>>>>> \x00\
>>>>> \x00\\x00\\x01\\x00\\x00\\x02@\\x00\\x00\\x02@\\x00\\x00\\x00\
>>>>> \x008BIM
>>>>> \\x04\\x14\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\!
>>>>>
>>>>> x00\\x00\\x038BIM\\x04\\x0c\\x00\\x00\\x00\\x00\\x06\\xc3\\x00\
>>>>> \x00\\x
>>>>> 00\\x01\\x00\\x00\\x00d\\x00\\x00\\x00K\\x00\\x00\\x01,\\x00\
>>>>> \x00W\\xe
>>>>> 4\\x00\\x00\\x06\\xa7\\x00\\x18\\x00\\x01\\xff\\xd8\\xff\\xe0\
>>>>> \x00\\x1
>>>>> 0JFIF\\x00\\x01\\x02\\x01\\x00H\\x00H\\x00\\x00\\xff\\xfe\ 
>>>>> \x00&File
>>>>> written by Adobe Photoshop\\xa8
>>>>> 5.0\\xff\\xee\\x00\\x0eAdobe\\x00d\\x80\\x00\\x00\\x00\\x01\\xff\
>>>>> \xdb\
>>>>> \x00\\x84\\x00\\x0c\\x08\\x08\\x08\\t\\x08\\x0c\\t\\t\\x0c\\x11\
>>>>> \x0b\\
>>>>> n\\x0b\\x11\\x15\\x0f\\x0c\\x0c\\x0f\\x15\\x18\\x13\\x13\\x15\
>>>>> \x13\\x1
>>>>> 3\\x18\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x0c\\x0c\\x0c\
>>>>> \x0c\\x0
>>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\
>>>>> \x0c\\x0
>>>>> c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x01\\r\\x0b\\x0b\
>>>>> \r\\x
>>>>> 0e\\r\\x10\\x0e\\x0e\\x10\\x14\\x0e\\x0e\\x0e\\x14\\x14\\x0e\\x0e
>>>>> \\x0e
>>>>> \\x0e\\x14\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x11\\x11\\x0c\\x0c\\x0c
>>>>> \\x0c
>>>>> \\x0c\\x0c\\x11\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
>>>>> \\x0c
>>>>> \\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c\\x0c
>>>>> \\x0c
>>>>> \\x0c\\x0c\\x0c\\xff\\xc0\\x00\\x11\\x08\\x00K\\x!
>>>>>
>>>>> 00d\\x03\\x01"\\x00\\x02\\x11\\x01\\x03\\x11\\x01\\xff\\xdd\\x00\
>>>>> \x04\
>>>>> \x00\\x07\\xff\\xc4\\x01?
>>>>> \\x00\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\\x00
>>>>> \\x00
>>>>> \\x00\\x00\\x00\\x03\\x00\\x01\\x02\\x04\\x05\\x06\\x07\\x08\\t\
>>>>> \n\\x0
>>>>> b\\x01\\x00\\x01\\x05\\x01\\x01\\x01\\x01\\x01\\x01\\x00\\x00\
>>>>> \x00\\x0
>>>>> 0\\x00\\x00\\x00\\x01\\x00\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\
>>>>> \n\\x
>>>>> 0b\\x10\\x00\\x01\\x04\\x01\\x03\\x02\\x04\\x02\\x05\\x07\\x06\
>>>>> \x08\\x
>>>>> 05\\x03\\x0c3\\x01\\x00\\x02\\x11\\x03\\x04!
>>>>> \\x121\\x05AQa\\x13"q\\x812\\x06\\x14\\x91\\xa1\\xb1B#$\\x15R\
>>>>> \xc1b34r
>>>>> \\x82\\xd1C\\x07%\\x92S\\xf0\\xe1\\xf1cs5\\x16\\xa2\\xb2\\x83&D\
>>>>> \x93Td
>>>>> E\\xc2\\xa3t6\\x17\\xd2U\\xe2e\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\
>>>>> \xf3F\\'
>>>>> \\x94\\xa4\\x85\\xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5
>>>>> \\xe5
>>>>> \\xf5Vfv\\x86\\x96\\xa6\\xb6\\xc6\\xd6\\xe6\\xf67GWgw\\x87\\x97\
>>>>> \xa7\\
>>>>> xb7\\xc7\\xd7\\xe7\\xf7\\x11\\x00\\x02\\x02\\x01\\x02\\x04\\x04\
>>>>> \x03\\
>>>>> x04\\x05\\x06\\x07\\x07\\x06\\x055\\x01\\x00\\x02\\x11\\x03!
>>>>> 1\\x12\\x04AQaq"\\x!
>>>>>
>>>>> 13\\x052\\x81\\x91\\x14\\xa1\\xb1B#\\xc1R\\xd1\\xf03$b\\xe1r\\x82
>>>>> \\x92
>>>>> CS\\x15cs4\\xf1%\\x06\\x16\\xa2\\xb2\\x83\\x07&5\\xc2\\xd2D\\x93T
>>>>> \\xa3
>>>>> \\x17dEU6te\\xe2\\xf2\\xb3\\x84\\xc3\\xd3u\\xe3\\xf3F\\x94\\xa4\
>>>>> \x85\\
>>>>> xb4\\x95\\xc4\\xd4\\xe4\\xf4\\xa5\\xb5\\xc5\\xd5\\xe5\\xf5Vfv\
>>>>> \x86\\x9
>>>>> 6\\xa6\\xb6\\xc6\\xd6\\xe6\\xf6\\'7GWgw\\x87\\x97\\xa7\\xb7\\xc7\
>>>>> \xff\
>>>>> \xda\\x00\\x0c\\x03\\x01\\x00\\x02\\x11\\x03\\x11\\x00?
>>>>> \\x00\\xd6,\\x0e\\x10D\\x82\\x90\\xa1\\x80\\x10\\x04\\x02
>>>>> \\xc7\\x9a(\\t\\xc0M\\\\\\x82\\xac:
>>>>> *~\\xf6\\x02\\x1d\\x11$\\x93\\xff\\x00TP\\xba\\xa7P\\xa7\\xa6`\
>>>>> \xd9\\x
>>>>> 99p\\x96\\xb2\\x00`0\\\\\\xe3\\xf4Z\\xd9W\\x80\\\\G\\xd7\\xdb\
>>>>> \xac\\xb
>>>>> 7\\xa8b\\xe0\\x02Emf\\xf2\\x07\\x8b\\xdc[\\xbb\\xfc\\xd6%\\xa0V\
>>>>> \xa5\\
>>>>> xcd\\xea_\\\\\\xfa\\xc6[\\xa3\\x1e\\xc1\\x85^\\xb0\\xda\\xbe\\x94
>>>>> \\x7f
>>>>> *\\xd3\\xee\\xff\\x003b\\xaf\\x8b\\xf5\\xab\\xeb\\x165\\x82\\xc6\
>>>>> \xe6\
>>>>> \xd9f\\xa0\\x96\\xdaw\\xb4\\xc7\\xe6\\xbbz\\xd1\\xc6\\xfa\\xb1\
>>>>> \x8fc\\
>>>>> x98L\\x9a\\xb4\\xdc\\\\`\\x9f\\x84+\\x99_Uzg\\xa0\\xefM\\xaem\
>>>>> \x91\\xe
>>>>> dv\\xe2u\\xf3Q\\xfb\\xf0\\xf1f\\xfb\\xb4\\xfc\\x1e\\x8f\\xea\\xc7
>>>>> \\xd6
>>>>> \!
>>>>>
>>>>> \xcc~\\xba\\xd3M\\xac\\x18\\xf9\\xf5\\x89u@\\xcb^\\xd1\\xcd\\x94\
>>>>> \xcf\
>>>>> \xfd6-\\xf8^=\\x8a\\xcb\\xfa?U\\xc4\\xbd\\xae!
>>>>> \\xd5\\xd8\\xd7\\x0e\\xe7\\x9d\\xb67O\\xe4\\x95\\xec@\\xea\\xa4\
>>>>> \x89\\
>>>>> x04Xc
>>>>> \\xc4\\xd1\\xdd\\x81n\\xa9\\x88\\xd5L\\xf2\\xa3\\xc9E\\x16\\x85\
>>>>> \xc1\\
>>>>> x08\\xb5\\x1c\\x85\\x02\\x12\\xa4Z\\x18\\xd5$HI%?
>>>>> \\xff\\xd0\\xde\\x01"41\\xe0\\x9d<i\\x1e)%\\xb1{p\\xc3"\\x9d\\xc2
>>>>> \\xc6
>>>>> \\xb9\\x80\\xee2\\x08-
>>>>> \\xdc\\xe5\\xc4\\xfdk\\xc6e\\x9ds\\x16\\xc6{\\xdc*-{\\x00\\x98-;
>>>>> \\x99\\xff\\x00E\\xeb\\xa6\\xab\\x08Wc,\\xf5\\x1c\\xed\\x93\\xed3
>>>>> \\xac
>>>>> \\x8d\\xba\\xfb\\x96/
>>>>> Yc\\x99\\xd5Ya\\x1a\\x13\\x00\\xf9\\x16\\xff\\x00\\xe4\\x9a\\xa3\
>>>>> \xcaH
>>>>> \\x8e\\xdb\\xe8\\xcd\\x86
>>>>> \\xcf}\\xb5jcfe\\xd4\\x0e\\xe6\\xb4\\x86\\tuE\\x84H\\xe3\\xdbb\
>>>>> \xb3\\x
>>>>> 7fPk\\xda@c*\\xda\\x1a\\\\\\xe3.\\x00\\x1f\\xf3\\x15\\x8b\\x88\
>>>>> \x18\\x
>>>>> 8ep\\x1a\\x98\\x10\\x06\\xba\\xaa\\xb8\\xc2\\x9b2\\xacce\\xcd\
>>>>> \x15\\x8
>>>>> 9\\xdc\\xd2\\x04\\x8f\\x8a\\x82\\xc6\\x9e\\x9d\\x1bF\\x12\\xa28\
>>>>> \xc8\\
>>>>> 'g b\\xb7;\\xad\\xf4\\xf1>\\xc7d\\xb4\\x13\\x11!\\xbf\!
>>>>>
>>>>> \xa4<#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\
>>>>> \x08O2
>>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\
>>>>> \xabW\\x
>>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8
>>>>> \\\\\
>>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I
>>>>> \\x06
>>>>> \\x88=\\x9ez\\xa7:
>>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\
>>>>> \x1e\\x
>>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\
>>>>> \xf70\\x9
>>>>> 1\\xf9\\xc2?
>>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2
>>>>> \\xab
>>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\
>>>>> \xe8\\x9
>>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\
>>>>> \x03T\\xd
>>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\
>>>>> \x8c\
>>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\
>>>>> \xa0Uk,
>>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%
>>>>> 1*2\\xb
>>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\
>>>>> \xa5\
>>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\
>>>>> \xb9\\xc
>>>>> 3\\xaafT\\xcb\!
>>>>>
>>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\
>>>>> \nMo\\x1
>>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\
>>>>> \x02@\
>>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\
>>>>> \xf2z\
>>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\
>>>>> \xce#\\xf
>>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\
>>>>> \x01\\xf
>>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\
>>>>> \xb9\\xc
>>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\
>>>>> \x01I\\
>>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\
>>>>> \x06A\
>>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\
>>>>> \x7fX
>>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\
>>>>> \xa0yFo!
>>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>>> \\x9cS\\??\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\
>>>>> \xd7\\x
>>>>> 08\\xed\\x04.\\xd4\!
>>>>>
>>>>> \x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\\xa4bdT\
>>>>> \x08O2
>>>>> \\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\
>>>>> \xabW\\x
>>>>> eat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\\xa8
>>>>> \\\\\
>>>>> \xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\\xb1I
>>>>> \\x06
>>>>> \\x88=\\x9ez\\xa7:
>>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\
>>>>> \x1e\\x
>>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\
>>>>> \xf70\\x9
>>>>> 1\\xf9\\xc2?
>>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2
>>>>> \\xab
>>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\
>>>>> \xe8\\x9
>>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\
>>>>> \x03T\\xd
>>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\
>>>>> \x8c\
>>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\
>>>>> \xa0Uk,
>>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%
>>>>> 1*2\\xb
>>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\
>>>>> \xa5\
>>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\
>>>>> \xb9\\xc
>>>>> 3\\xaafT\\xcb\!
>>>>>
>>>>> \t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\
>>>>> \nMo\\x1
>>>>> 3\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\\x13\
>>>>> \x02@\
>>>>> \xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf(V\
>>>>> \xf2z\
>>>>> \x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\
>>>>> \xce#\\xf
>>>>> 7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\
>>>>> \x01\\xf
>>>>> 3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\
>>>>> \xb9\\xc
>>>>> 9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\
>>>>> \x01I\\
>>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\
>>>>> \x06A\
>>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\
>>>>> \x7fX
>>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\
>>>>> \xa0yFo!
>>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>>> \\x9cS\\xab\\xf">\\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\
>>>>> \xc666X\
>>>>> \xd7\\x08\\xed\\x04.\\x!
>>>>>
>>>>> d4\\x95>#cj\\xa6\\xa6h\\x98\\xcbS\\xc5l\\x89Q\\x9dTw&\\xdc\
>>>>> \xa4bdT\\x0
>>>>> 8O2\\x92Ja\\x1a\\xa4\\xa5\\t$\\xa7\\xff\\xd1\\xe8\\x12L\\x9aRK%S\
>>>>> \xabW
>>>>> \\xeat\\xfbH\\x1e\\xea\\xc6\\xf1\\xe3\\xed\\xf7\\x1f\\xfa*\\xd4\
>>>>> \xa8\\
>>>>> \\\\xfaEN\\xf5\\x9c\\xd6VA\\x0es\\x88\\x02\\x0e\\x9c\\x94\\x08\
>>>>> \xb1I\\
>>>>> x06\\x88=\\x9ez\\xa7:
>>>>> \\xf67c\\xf6\\xed\\xf2\\x07\\xee\\xdc\\x86\\xe2\\xfa\\xec\\xf5\
>>>>> \x1e\\x
>>>>> fd\\x002\\x08\\x13\\xff\\x00EUc.e\\x81\\xd8v\\xb4\\xb4\\x925\
>>>>> \xf70\\x9
>>>>> 1\\xf9\\xc2?
>>>>> y+p\\xba\\x96]\\x91{\\xda+\\x1fK\\xd3\\x9d~j\\xa5h\\xdf\\xe2\\xd2
>>>>> \\xab
>>>>> wO\\xea\\xe5\\xf8Ved_y`{\\x0b\\x05/
>>>>> y\\x03Wn\\x07f\\xef\\xce]10\\xbc\\xfe\\xdcz\\xdbxcZ\\x00\\xaf\
>>>>> \xe8\\x9
>>>>> f\\x0f\\x18V\\xeb\\xea9\\xac\\x1bY}\\x908\\x97\\x15g\\r\\x98\
>>>>> \x03T\\xd
>>>>> 3\\xcfBd]\\xfe\\xc7\\xb2.L\\x1c\\xb9\\x03\\xd6z\\x84i{\\xbc\\x95\
>>>>> \x8c\
>>>>> \x1e\\xbd\\x94\\xc7\\xc6A\\xf5k<\\x93\\xc8\\xf8\\x15%1Xz\\x90S\
>>>>> \xa0Uk,
>>>>> `{\\x0c\\xb5\\xc2AE\\x05$\\xb2I4\\xa4\\x92\\x9f\\xff\\xd2\\xdd%
>>>>> 1*2\\xb
>>>>> 3\\xba\\xd6s\\xb1qKk1m\\xb2\\xd6\\x9f\\x01\\xf9\\xceEM\\xac\\x8e\
>>>>> \xa5\
>>>>> \x89\\x8f\\xa3\\xec\\x05\\xdf\\xb8\\xddN\\x9f\\xf5+\\x9a\\xea\
>>>>> \xb9\\xc
>>>>> 3\\xaafT\\x!
>>>>>
>>>>> cb\\t\\xaf\\x16\\xb0\\xef\\xd1\\xcf\\xd2t\\xfer\\xa6\\xcb7H\\xf2\
>>>>> \nMo\
>>>>> \x13\\xa0\\xef\\xc1\\xd7\\xe6\\x84\\xa2LH\\x06\\x89\\xea\\xba\
>>>>> \x13\\x0
>>>>> 2@\\xc8X\\x1d\\x1b\\x9d6\\xb2\\xc7\\x96\\x0f\\xe6\\xcb\\x8e\\xdf
>>>>> (V\\xf
>>>>> 2z\\x9dL\\x9a\\xf1\\xe2\\xcb8.\\x1fD\\x7f\\xe4\\x96C\\x88>\\xcd\
>>>>> \xce#\
>>>>> \xf7D\\x81\\xf8(\\xbd\\xdf\\x98\\xc1\\xb5\\xa3\\xe9x\\x9f%\\x1c0\
>>>>> \x01\
>>>>> \xf3\\x1e&I\\xf3$\\xfc\\x83\\x87\\xc5#\\x9c^\\xe3\\xac\\xb9\\xda\
>>>>> \xb9\
>>>>> \xc9\\x89\\xdb\\x00\\'h\\x03O\\xbc\\xa6\\x1a\\xba{\\x05;
>>>>> ^\\xd6k\\x0e\\xe8=\\x87\\xe5S\\xdcd\\x0e\\x10\\xde\\xe2\\x1eOy\
>>>>> \x01I\\
>>>>> xae\\x93\\'\\xb2(w>\\xaff\\xcb\\xac\\xc5q\\xfe[?\\xef\\xc0-
>>>>> \\xe0\\xe5\\xc5\\xe2^q\\xf2\\xaa\\xb8~i\\xd7\\xe0y]{^\\x1c\\x01\
>>>>> \x06A\
>>>>> \xd4\\x14\\xc2\\xba%>\\xe4\\x90\\xb7$\\x92\\xe7\\xff\\xd3\\xd7%s\
>>>>> \x7fX
>>>>> /\\xf52v4\\xe9H\\x83\\xf3\\xe5tK\\x95\\xea_\\xd3/
>>>>> \\xfe\\xbb\\xbf\\xd4\\xa2\\x11&\\x93\\x07q\\xc29<\\x85^\\xaf\
>>>>> \xa0yFo!
>>>>> 9\\x0c,{\\x9a$hJU\\xb6\\\\\\xd0~%+?
>>>>> \\x9cS\\xab\\xf9\\xd7p\\x92\\x99\\x13\\xa7>d$\\xe3\\xb5\\x84\\x83
>>>>> \\xcf
>>>>> \\x1f\\x143 <file://!
>>>>>
>>>>> \\xff\\x00QzL\\xea\\xb8}\\x8d\\xfd\\xad\\x88\\xc666X\\xd7\\x08\
>>>>> \xed\\x
>>>>> 04.\\xd4\\x95>
>>>>>
>>>>>
>>>>> Any thoughts on this?
>>>>>
>>>>>
>>>>> --Alec
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Apr 21 05:39:01 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 05:39:26 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <1284A4BC-79C4-45BA-905A-7E225397829D@dscpl.com.au>
References: <200604210813.k3L8DlWb028849@dscpl.user.openhosting.com>
	<1284A4BC-79C4-45BA-905A-7E225397829D@dscpl.com.au>
Message-ID: <B77B30D1-3DD3-484D-9DE3-051D75D29EBB@dscpl.com.au>

Whoops.


On 21/04/2006, at 7:23 PM, Graham Dumpleton wrote:

> A creative way of getting around the problem. I hadn't thought
> of using a filter. Some suggested changes below.
>
> On 21/04/2006, at 6:12 PM, Alec Matusis wrote:
>
>>
>> I figured out how to do this without changing mod_python source:
>>
>> I wrote a mod_python input filter:
>>
>> flashfilter.py:
>>
>> from mod_python import apache
>>
>> def inputfilter(filter):
>>     #this is a workaround flash 8 FileReference bug: Flash POST is  
>> not
>> RFC-compliant as of Flash 8,0,22,0
>
>
>     if 'flashfileref' in parse_args(filter.req.args):
>       filter.pass_on()
>       return

Logic wrong way around.

     if 'flashfileref' not in parse_args(filter.req.args):
       filter.pass_on()
       return

Graham
From matusis at matusis.com  Fri Apr 21 05:40:44 2006
From: matusis at matusis.com (Alec Matusis)
Date: Fri Apr 21 05:41:57 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <B77B30D1-3DD3-484D-9DE3-051D75D29EBB@dscpl.com.au>
Message-ID: <200604210941.k3L9fq7K013842@modpython.org>

 Yes, I got that.
Thanks, I tested it, all works well.

I hope this filter does not tax the performance too much when I submit large
files?

-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Friday, April 21, 2006 2:39 AM
To: Alec Matusis
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ValueError with Flash 8 FileReference.upload(url) 

Whoops.


On 21/04/2006, at 7:23 PM, Graham Dumpleton wrote:

> A creative way of getting around the problem. I hadn't thought
> of using a filter. Some suggested changes below.
>
> On 21/04/2006, at 6:12 PM, Alec Matusis wrote:
>
>>
>> I figured out how to do this without changing mod_python source:
>>
>> I wrote a mod_python input filter:
>>
>> flashfilter.py:
>>
>> from mod_python import apache
>>
>> def inputfilter(filter):
>>     #this is a workaround flash 8 FileReference bug: Flash POST is  
>> not
>> RFC-compliant as of Flash 8,0,22,0
>
>
>     if 'flashfileref' in parse_args(filter.req.args):
>       filter.pass_on()
>       return

Logic wrong way around.

     if 'flashfileref' not in parse_args(filter.req.args):
       filter.pass_on()
       return

Graham

From administrator at leebrown.org  Fri Apr 21 08:27:13 2006
From: administrator at leebrown.org (Lee Brown)
Date: Fri Apr 21 08:29:44 2006
Subject: [mod_python] error: could not import mod_python.apache
In-Reply-To: <OF0EF1A69E.906F01C8-ONC1257156.0043CB9D-C1257156.0046F6AE@boer.nl>
Message-ID: <006001c6653e$eb9499c0$0301a8c0@uberbox>

Greetings!
 
The reason why I asked you to check the owner status is that the owner of a
file or application is always fully-privileged for that file or application.
Ask your system administrator to log and in and try running your tests
again.  If it works when the administrator is the current user and it
doesn't work when you are the current user, then somewhere in the
apache/mod_python/python process there is a file that cannot be accessed by
an ordinary user.
 
If so, the quickest solution is for your administrator is to create a new
user group that has administrator-level privileges for all of apache,
mod_python, python, and the web document directories - all the stuff you
will be using.  He should then add your user to that group.
 

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of e.deventer@boer.nl
Sent: Thursday, April 20, 2006 8:55 AM
To: Lee Brown
Cc: mod_python@modpython.org
Subject: RE: [mod_python] error: could not import mod_python.apache



"Lee Brown" <administrator@leebrown.org> wrote on 20-04-2006 14:09:35:

> O.K., try this for both python.exe and apache.exe: 
>   
> Right click the file, select Properties, click the Security tab, and
> then down at the bottom click Advanced.  Then click the Owner tab.  
> Do both files have the same owner? 

They have the same owner: Administrator. 
(I use Windows with a standard user account, I can get the Administrator to
login and make changes if necessary) 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060421/e26d1524/attachment.html
From list at joreybump.com  Fri Apr 21 12:08:52 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Apr 21 12:09:11 2006
Subject: [mod_python] The new module loader
In-Reply-To: <1145598250.8774@dscpl.user.openhosting.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
Message-ID: <44490394.9050402@joreybump.com>

Graham Dumpleton wrote:
> Graham Dumpleton wrote ..
>> The new module importer completely ignores packages as it is practically
>> impossible to get any form of automatic module reloading to work
>> correctly with them when they are more than trivial. As such, packages
>> are handed off to standard Python __import__ to deal with. That it even
>> finds the package means that you have it installed in sys.path. Even if
>> it was a file based module, because it is on sys.path and thus likely to
>> be installed in a standard location, the new module importer would again
>> ignore it as it leaves all sys.path modules up to Python __import__
>> as too dangerous to be mixing importing schemes.
>>
>> Anyway, that all only applies if you were expecting PyServer.pyserver to
>> automatically reload upon changes.

Graham, can you enumerate the different ways packages are handled, or is 
it enough to say that packages are never reloaded? In this thread, you 
explain that when a package is imported via PythonHandler, mod_python 
uses the conventional Python __import__, requiring an apache restart to 
reliably reload the package, as in the past.

This also implies that if a published module imports a package, and the 
published module is touched or modified, then the module will be 
reloaded, but not the package. Is this correct?

> BTW, that something outside of the document tree, possibly in sys.path,
> is dealt with by Python __import__ doesn't mean you can't have module
> reloading on stuff outside of the document tree. The idea is that if it is
> part of the web application and needs to be reloadable, that it doesn't
> really belong in standard Python directories anyway. People only install
> it there at present because it is convenient.

There are security benefits to not putting your code in the 
DocumentRoot. It's also useful to develop generic utilities that are 
used in multiple apps (not just mod_python), but that you don't want 
available globally on the system. I prefer extremely minimal frontends 
in the DocumentRoot, with most of my code stored elsewhere. Will the new 
importer support reloading modules outside of the DocumentRoot without 
putting them in sys.path?

> The better way of dealing with this with the new module importer is to
> put your web application modules elsewhere, ie., not on sys.path. You then
> specify an absolute path to the actual .py file in the handler directive.
> 
>  <Directory />
>      SetHandler mod_python
>      PythonHandler /path/to/web/application/PyServer/pserver.py
>      ...

How arbitrary is this path? Must it be within the DocumentRoot?

> Most cases I have seen is that people use packages purely to create a
> namespace to group the modules. With the new module importer that
> doesn't really need to be done anymore. That is because you can
> directly reference an arbitrary module by its path. When you use the
> "import" statement in files in that directory, one of the places it will
> automatically look, without that directory needing to be in sys.path,
> is the same directory the file is in. This achieves the same result as
> what people are using packages for now but you can still have module
> reloading work.

Does it (the initial loading, not the reloading) also apply to packages 
in that directory? Or will it only work with standalone single file 
modules in the root of that directory?

This is all very nifty, because it implies that a mod_python application 
can now be easily distributed by inflating a tarball and specifying the 
PythonHandler accordingly.

If the new importer works outside of the DocumentRoot, and Location is 
used instead of Directory, no files need to be created in the 
DocumentRoot at all. Or is this currently impossible, in regards to 
automatic module reloading? I already do this for some handlers I've 
written, and really like the flexibility provided by the virtualization.



From dan.eloff at gmail.com  Fri Apr 21 13:00:01 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Fri Apr 21 13:00:05 2006
Subject: [mod_python] The new module loader
In-Reply-To: <44490394.9050402@joreybump.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
Message-ID: <4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>

>How arbitrary is this path? Must it be within the DocumentRoot?

This one I can answer I believe. I put a path starting from C:\, and
it worked fine, with the limitation that you can't have spaces in the
path, and you can't use double quotes to get around that. So I had to
figure out how to write things dos style, like MyDocu~1, and that
worked.

I came across a bit of trouble with the importer now, It can't find a
module that exists.

  File "C:\Docume~1\Dan\MyDocu~1\PYROOT\pyserver\web.py", line 348, in
import_module
    module = apache.import_module(module, 1, 1, path)

  File "C:\Program
Files\Python\lib\site-packages\mod_python\importer.py", line 236, in
import_module
    return __import__(module_name, {}, {}, ['*'])

ImportError: No module named _config

Now I've confirmed there is a module named _config.py in the path
specified, and I can find it if I add path to sys.path.

There is an import at the top of _config.py that should fail and raise
and exception, but that shouldn't be related?

Any ideas why this is happening?

Thanks,
-Dan



On 4/21/06, Jorey Bump <list@joreybump.com> wrote:
> Graham Dumpleton wrote:
> > Graham Dumpleton wrote ..
> >> The new module importer completely ignores packages as it is practically
> >> impossible to get any form of automatic module reloading to work
> >> correctly with them when they are more than trivial. As such, packages
> >> are handed off to standard Python __import__ to deal with. That it even
> >> finds the package means that you have it installed in sys.path. Even if
> >> it was a file based module, because it is on sys.path and thus likely to
> >> be installed in a standard location, the new module importer would again
> >> ignore it as it leaves all sys.path modules up to Python __import__
> >> as too dangerous to be mixing importing schemes.
> >>
> >> Anyway, that all only applies if you were expecting PyServer.pyserver to
> >> automatically reload upon changes.
>
> Graham, can you enumerate the different ways packages are handled, or is
> it enough to say that packages are never reloaded? In this thread, you
> explain that when a package is imported via PythonHandler, mod_python
> uses the conventional Python __import__, requiring an apache restart to
> reliably reload the package, as in the past.
>
> This also implies that if a published module imports a package, and the
> published module is touched or modified, then the module will be
> reloaded, but not the package. Is this correct?
>
> > BTW, that something outside of the document tree, possibly in sys.path,
> > is dealt with by Python __import__ doesn't mean you can't have module
> > reloading on stuff outside of the document tree. The idea is that if it is
> > part of the web application and needs to be reloadable, that it doesn't
> > really belong in standard Python directories anyway. People only install
> > it there at present because it is convenient.
>
> There are security benefits to not putting your code in the
> DocumentRoot. It's also useful to develop generic utilities that are
> used in multiple apps (not just mod_python), but that you don't want
> available globally on the system. I prefer extremely minimal frontends
> in the DocumentRoot, with most of my code stored elsewhere. Will the new
> importer support reloading modules outside of the DocumentRoot without
> putting them in sys.path?
>
> > The better way of dealing with this with the new module importer is to
> > put your web application modules elsewhere, ie., not on sys.path. You then
> > specify an absolute path to the actual .py file in the handler directive.
> >
> >  <Directory />
> >      SetHandler mod_python
> >      PythonHandler /path/to/web/application/PyServer/pserver.py
> >      ...
>
> How arbitrary is this path? Must it be within the DocumentRoot?
>
> > Most cases I have seen is that people use packages purely to create a
> > namespace to group the modules. With the new module importer that
> > doesn't really need to be done anymore. That is because you can
> > directly reference an arbitrary module by its path. When you use the
> > "import" statement in files in that directory, one of the places it will
> > automatically look, without that directory needing to be in sys.path,
> > is the same directory the file is in. This achieves the same result as
> > what people are using packages for now but you can still have module
> > reloading work.
>
> Does it (the initial loading, not the reloading) also apply to packages
> in that directory? Or will it only work with standalone single file
> modules in the root of that directory?
>
> This is all very nifty, because it implies that a mod_python application
> can now be easily distributed by inflating a tarball and specifying the
> PythonHandler accordingly.
>
> If the new importer works outside of the DocumentRoot, and Location is
> used instead of Directory, no files need to be created in the
> DocumentRoot at all. Or is this currently impossible, in regards to
> automatic module reloading? I already do this for some handlers I've
> written, and really like the flexibility provided by the virtualization.
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dan.eloff at gmail.com  Fri Apr 21 16:17:37 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Fri Apr 21 16:17:41 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
Message-ID: <4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>

Whoops. I was looking over the code for import_module and I figured it
out. path is meant to be a list, duh. Maybe add an

assert not path or isinstance(path, list), 'path must be a list of
paths to search for the module.'

to your code near the top of the function. Otherwise if path is a
string, search_path.extend(path) doesn't throw, but it makes a huge
search_path of single character locations and fails utterly (and
silently)

-Dan

From dan.eloff at gmail.com  Fri Apr 21 16:35:24 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Fri Apr 21 16:35:27 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
Message-ID: <4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>

Hey Graham,

I'm running into one problem related to taking things out of the
packages. I've imported PyServer.module_name in many places in my
modules but of course now PyServer no longer exists and all it's
modules are in the directory with pyserver.py which contains the
handler. I changed import PyServer.config to just import config, but
it doesn't find it.

I'm loathe to use absolute or even relative paths because of how many
different places I'd have to modify it. Is there some way to globally
add the handler's directory to the search path?

Thanks,
-Dan

On 4/21/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> Whoops. I was looking over the code for import_module and I figured it
> out. path is meant to be a list, duh. Maybe add an
>
> assert not path or isinstance(path, list), 'path must be a list of
> paths to search for the module.'
>
> to your code near the top of the function. Otherwise if path is a
> string, search_path.extend(path) doesn't throw, but it makes a huge
> search_path of single character locations and fails utterly (and
> silently)
>
> -Dan
>

From grahamd at dscpl.com.au  Fri Apr 21 18:24:12 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 18:24:21 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <200604210941.k3L9fldR013821@dscpl.user.openhosting.com>
References: <200604210941.k3L9fldR013821@dscpl.user.openhosting.com>
Message-ID: <2B608EE6-BE6B-4859-92FD-AA77ECDA715C@dscpl.com.au>

Actually there is another problem that only came to me later. That is  
that
there is no guarantee with an input filter that you are going to get the
complete text you are trying to replace in one read even if it was  
written
in one go by the client. This is because you are at the mercy of how
blocking of data reads off the client socket works out. A patching of  
the
util.FieldStorage class may be the only way around that.

Graham

On 21/04/2006, at 7:40 PM, Alec Matusis wrote:

>  Yes, I got that.
> Thanks, I tested it, all works well.
>
> I hope this filter does not tax the performance too much when I  
> submit large
> files?
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Friday, April 21, 2006 2:39 AM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] ValueError with Flash 8  
> FileReference.upload(url)
>
> Whoops.
>
>
> On 21/04/2006, at 7:23 PM, Graham Dumpleton wrote:
>
>> A creative way of getting around the problem. I hadn't thought
>> of using a filter. Some suggested changes below.
>>
>> On 21/04/2006, at 6:12 PM, Alec Matusis wrote:
>>
>>>
>>> I figured out how to do this without changing mod_python source:
>>>
>>> I wrote a mod_python input filter:
>>>
>>> flashfilter.py:
>>>
>>> from mod_python import apache
>>>
>>> def inputfilter(filter):
>>>     #this is a workaround flash 8 FileReference bug: Flash POST is
>>> not
>>> RFC-compliant as of Flash 8,0,22,0
>>
>>
>>     if 'flashfileref' in parse_args(filter.req.args):
>>       filter.pass_on()
>>       return
>
> Logic wrong way around.
>
>      if 'flashfileref' not in parse_args(filter.req.args):
>        filter.pass_on()
>        return
>
> Graham

From matusis at matusis.com  Fri Apr 21 18:33:39 2006
From: matusis at matusis.com (Alec Matusis)
Date: Fri Apr 21 18:34:51 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <2B608EE6-BE6B-4859-92FD-AA77ECDA715C@dscpl.com.au>
Message-ID: <200604212234.k3LMYlZ3025415@modpython.org>

Is there a way to read the request by lines in the filter, rather than
trying to read the entire buffer?
That way at least the text that I am trying to replace will come in a single
read, when I read that line.

Or will it be to slow?

-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Friday, April 21, 2006 3:24 PM
To: Alec Matusis
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ValueError with Flash 8 FileReference.upload(url) 

Actually there is another problem that only came to me later. That is  
that
there is no guarantee with an input filter that you are going to get the
complete text you are trying to replace in one read even if it was  
written
in one go by the client. This is because you are at the mercy of how
blocking of data reads off the client socket works out. A patching of  
the
util.FieldStorage class may be the only way around that.

Graham

On 21/04/2006, at 7:40 PM, Alec Matusis wrote:

>  Yes, I got that.
> Thanks, I tested it, all works well.
>
> I hope this filter does not tax the performance too much when I  
> submit large
> files?
>
> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Friday, April 21, 2006 2:39 AM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] ValueError with Flash 8  
> FileReference.upload(url)
>
> Whoops.
>
>
> On 21/04/2006, at 7:23 PM, Graham Dumpleton wrote:
>
>> A creative way of getting around the problem. I hadn't thought
>> of using a filter. Some suggested changes below.
>>
>> On 21/04/2006, at 6:12 PM, Alec Matusis wrote:
>>
>>>
>>> I figured out how to do this without changing mod_python source:
>>>
>>> I wrote a mod_python input filter:
>>>
>>> flashfilter.py:
>>>
>>> from mod_python import apache
>>>
>>> def inputfilter(filter):
>>>     #this is a workaround flash 8 FileReference bug: Flash POST is
>>> not
>>> RFC-compliant as of Flash 8,0,22,0
>>
>>
>>     if 'flashfileref' in parse_args(filter.req.args):
>>       filter.pass_on()
>>       return
>
> Logic wrong way around.
>
>      if 'flashfileref' not in parse_args(filter.req.args):
>        filter.pass_on()
>        return
>
> Graham

From grahamd at dscpl.com.au  Fri Apr 21 18:57:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 18:57:30 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
Message-ID: <7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>


On 22/04/2006, at 6:35 AM, Dan Eloff wrote:

> Hey Graham,
>
> I'm running into one problem related to taking things out of the
> packages. I've imported PyServer.module_name in many places in my
> modules but of course now PyServer no longer exists and all it's
> modules are in the directory with pyserver.py which contains the
> handler. I changed import PyServer.config to just import config, but
> it doesn't find it.
>
> I'm loathe to use absolute or even relative paths because of how many
> different places I'd have to modify it. Is there some way to globally
> add the handler's directory to the search path?

I gotta run out the door, so no time to answer all questions right now.

Can you clarify when you say "handler directory" whether you mean
the directory that pserver.py is in, or the directory indicated by the
Directory directive where you specified PythonHandler?

Also, are you setting PythonPath directive?

Oh, and give locations of pyserver.py and config.py, along with any path
used with Directory directive so I have context.

In a rush, so take note of comments in:

   http://issues.apache.org/jira/browse/MODPYTHON-154
   http://www.dscpl.com.au/articles/modpython-007.html#setting-of- 
pythonpath

in the mean time.

You may be coming up against preserved behaviour from old
importer that frankly I think should not be kept.

Thanks.

Graham


> On 4/21/06, Dan Eloff <dan.eloff@gmail.com> wrote:
>> Whoops. I was looking over the code for import_module and I  
>> figured it
>> out. path is meant to be a list, duh. Maybe add an
>>
>> assert not path or isinstance(path, list), 'path must be a list of
>> paths to search for the module.'
>>
>> to your code near the top of the function. Otherwise if path is a
>> string, search_path.extend(path) doesn't throw, but it makes a huge
>> search_path of single character locations and fails utterly (and
>> silently)
>>
>> -Dan
>>

From sergiosdj at gmail.com  Fri Apr 21 20:05:46 2006
From: sergiosdj at gmail.com (=?ISO-8859-1?Q?S=E9rgio_Durigan_J=FAnior?=)
Date: Fri Apr 21 20:05:50 2006
Subject: [mod_python] Problem with configure
Message-ID: <eebf789d0604211705t3ef7d46br738793d932ce40f7@mail.gmail.com>

Hi ;-)

Well, I know it's a known problem, and I even found some answers
(which didn't apply to my problem) in the internet. I'm running
Slackware 10.2 here, with python 2.4 and Apache 2.0 installed, and I'm
trying to install mod_python here for 2 hours without success... The
error occurs when I'm running ./configure. The output is below:

---------------------
neo@pegasus mod_python-3.2.8 $ ./configure
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes

...

checking what libraries Python was linked with... -lpython2.4  
-lpthread -ldl  -lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/include/python2.4
./configure: line 3427: syntax error near unexpected token `('
./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`'
neo@pegasus mod_python-3.2.8 $
----------------------------------------------------------

Ok, with this error in my hand, I took a look at Google, I found this message:

http://www.modpython.org/pipermail/mod_python/2006-February/020468.html

Its answer took me to:

http://issues.apache.org/jira/browse/MODPYTHON-122

I made the modifications listed in the link above (in my configure.in
file), but it didn't work. So, I opened my configure file and removed
the parenthesis which were causing the errors. After some time
(because there were a lot of them to remove!), I tried again. Didn't
work too. So, as I ran out of ideas, I decided to ask here :-)

Ahh, by the way, I'm running bash 3.1.11(2)-release. Dunno if it
helps, but anyway... ;-)

Thanks!

S?rgio.

From grahamd at dscpl.com.au  Fri Apr 21 20:53:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 20:54:07 2006
Subject: [mod_python] Problem with configure
In-Reply-To: <eebf789d0604211705t3ef7d46br738793d932ce40f7@mail.gmail.com>
References: <eebf789d0604211705t3ef7d46br738793d932ce40f7@mail.gmail.com>
Message-ID: <B6E61BBB-A8BC-440C-88E0-023577FB23D9@dscpl.com.au>

Don't remove the parenthesis in configure. Find the one line of the
form:

   MP_VERSION=`echo $MP_VERSION | sed s/\\"//g`

in "configure" and change it to:

   MP_VERSION=`echo $MP_VERSION | sed 's/["]//g'`

Much like you would have done in configure.in.

Note that configure is generated from configure.in only by developers
before release is made.

Graham

On 22/04/2006, at 10:05 AM, S?rgio Durigan J?nior wrote:

> Hi ;-)
>
> Well, I know it's a known problem, and I even found some answers
> (which didn't apply to my problem) in the internet. I'm running
> Slackware 10.2 here, with python 2.4 and Apache 2.0 installed, and I'm
> trying to install mod_python here for 2 hours without success... The
> error occurs when I'm running ./configure. The output is below:
>
> ---------------------
> neo@pegasus mod_python-3.2.8 $ ./configure
> checking for gcc... gcc
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
>
> ...
>
> checking what libraries Python was linked with... -lpython2.4
> -lpthread -ldl  -lutil   -lm
> checking linker flags used to link Python...
> checking where Python include files are... -I/usr/include/python2.4
> ./configure: line 3427: syntax error near unexpected token `('
> ./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/ 
> dev/null`'
> neo@pegasus mod_python-3.2.8 $
> ----------------------------------------------------------
>
> Ok, with this error in my hand, I took a look at Google, I found  
> this message:
>
> http://www.modpython.org/pipermail/mod_python/2006-February/ 
> 020468.html
>
> Its answer took me to:
>
> http://issues.apache.org/jira/browse/MODPYTHON-122
>
> I made the modifications listed in the link above (in my configure.in
> file), but it didn't work. So, I opened my configure file and removed
> the parenthesis which were causing the errors. After some time
> (because there were a lot of them to remove!), I tried again. Didn't
> work too. So, as I ran out of ideas, I decided to ask here :-)
>
> Ahh, by the way, I'm running bash 3.1.11(2)-release. Dunno if it
> helps, but anyway... ;-)
>
> Thanks!
>
> S?rgio.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From dan.eloff at gmail.com  Fri Apr 21 21:03:54 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Fri Apr 21 21:03:59 2006
Subject: [mod_python] The new module loader
In-Reply-To: <7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
	<7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
Message-ID: <4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>

My exact setup is as follows:

PythonInterpreter pyserver
PythonOptimize Off
PythonDebug On
PythonAutoReload On
PythonOption mod_python.future.importer pyserver
# don't invoke our python handler if the file has an extension, it
doesn't handle any addresses like that
<Directory />
	SetHandler mod_python
	PythonHandler C:\Docume~1\Dan\MyDocu~1\PYROOT\pyserver\pyserver.py
</Directory>

<LocationMatch "^[^?]*?\.">
	SetHandler None
</LocationMatch>

The document root is: My Documents/HTDOCS
And you can see that pyserver.py (and config.py) is located in:
My Documents/PYROOT/pyserver

By handler directory this is the one I'm referring too.

The _config.py that is unable to import the config.py is in:
My Documents/PYROOT/web

It is not an issue with your importer that it can't be found, but I
would like to know how to make it found with out editing every file
like _config.py, because the pyserver files are used often.

Thank you very much for taking the time to reply while obviously busy.
-Dan



On 4/21/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 22/04/2006, at 6:35 AM, Dan Eloff wrote:
>
> > Hey Graham,
> >
> > I'm running into one problem related to taking things out of the
> > packages. I've imported PyServer.module_name in many places in my
> > modules but of course now PyServer no longer exists and all it's
> > modules are in the directory with pyserver.py which contains the
> > handler. I changed import PyServer.config to just import config, but
> > it doesn't find it.
> >
> > I'm loathe to use absolute or even relative paths because of how many
> > different places I'd have to modify it. Is there some way to globally
> > add the handler's directory to the search path?
>
> I gotta run out the door, so no time to answer all questions right now.
>
> Can you clarify when you say "handler directory" whether you mean
> the directory that pserver.py is in, or the directory indicated by the
> Directory directive where you specified PythonHandler?
>
> Also, are you setting PythonPath directive?
>
> Oh, and give locations of pyserver.py and config.py, along with any path
> used with Directory directive so I have context.
>
> In a rush, so take note of comments in:
>
>    http://issues.apache.org/jira/browse/MODPYTHON-154
>    http://www.dscpl.com.au/articles/modpython-007.html#setting-of-
> pythonpath
>
> in the mean time.
>
> You may be coming up against preserved behaviour from old
> importer that frankly I think should not be kept.
>
> Thanks.
>
> Graham
>
>
> > On 4/21/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> >> Whoops. I was looking over the code for import_module and I
> >> figured it
> >> out. path is meant to be a list, duh. Maybe add an
> >>
> >> assert not path or isinstance(path, list), 'path must be a list of
> >> paths to search for the module.'
> >>
> >> to your code near the top of the function. Otherwise if path is a
> >> string, search_path.extend(path) doesn't throw, but it makes a huge
> >> search_path of single character locations and fails utterly (and
> >> silently)
> >>
> >> -Dan
> >>
>
>

From grahamd at dscpl.com.au  Fri Apr 21 21:44:13 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 21 21:44:37 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
	<7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
	<4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>
Message-ID: <A5EBB953-553E-4E7B-A758-8EE56C0B2A6A@dscpl.com.au>


On 22/04/2006, at 11:03 AM, Dan Eloff wrote:

> My exact setup is as follows:
>
> PythonInterpreter pyserver
> PythonOptimize Off
> PythonDebug On
> PythonAutoReload On
> PythonOption mod_python.future.importer pyserver
> # don't invoke our python handler if the file has an extension, it
> doesn't handle any addresses like that
> <Directory />
> 	SetHandler mod_python
> 	PythonHandler C:\Docume~1\Dan\MyDocu~1\PYROOT\pyserver\pyserver.py
> </Directory>
>
> <LocationMatch "^[^?]*?\.">
> 	SetHandler None
> </LocationMatch>
>
> The document root is: My Documents/HTDOCS
> And you can see that pyserver.py (and config.py) is located in:
> My Documents/PYROOT/pyserver
>
> By handler directory this is the one I'm referring too.
>
> The _config.py that is unable to import the config.py is in:
> My Documents/PYROOT/web

How are the files in this directory (_config.py) being imported in  
the first place?
Is your pyserver.py file importing them explicitly using  
apache.import_module()?

> It is not an issue with your importer that it can't be found, but I
> would like to know how to make it found with out editing every file
> like _config.py, because the pyserver files are used often.
>
> Thank you very much for taking the time to reply while obviously busy.

It is a Saturday, just running around doing morning shopping and  
house hunting,
nothing too dramatic.

Anyway, time to go off and look at a house on sale now. I think I  
know what the
answer to your problem will be and I'll be covering it when I reply  
to some of
Jorey's comments.

Graham

> -Dan
>
>
>
> On 4/21/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>
>> On 22/04/2006, at 6:35 AM, Dan Eloff wrote:
>>
>>> Hey Graham,
>>>
>>> I'm running into one problem related to taking things out of the
>>> packages. I've imported PyServer.module_name in many places in my
>>> modules but of course now PyServer no longer exists and all it's
>>> modules are in the directory with pyserver.py which contains the
>>> handler. I changed import PyServer.config to just import config, but
>>> it doesn't find it.
>>>
>>> I'm loathe to use absolute or even relative paths because of how  
>>> many
>>> different places I'd have to modify it. Is there some way to  
>>> globally
>>> add the handler's directory to the search path?
>>
>> I gotta run out the door, so no time to answer all questions right  
>> now.
>>
>> Can you clarify when you say "handler directory" whether you mean
>> the directory that pserver.py is in, or the directory indicated by  
>> the
>> Directory directive where you specified PythonHandler?
>>
>> Also, are you setting PythonPath directive?
>>
>> Oh, and give locations of pyserver.py and config.py, along with  
>> any path
>> used with Directory directive so I have context.
>>
>> In a rush, so take note of comments in:
>>
>>    http://issues.apache.org/jira/browse/MODPYTHON-154
>>    http://www.dscpl.com.au/articles/modpython-007.html#setting-of-
>> pythonpath
>>
>> in the mean time.
>>
>> You may be coming up against preserved behaviour from old
>> importer that frankly I think should not be kept.
>>
>> Thanks.
>>
>> Graham
>>
>>
>>> On 4/21/06, Dan Eloff <dan.eloff@gmail.com> wrote:
>>>> Whoops. I was looking over the code for import_module and I
>>>> figured it
>>>> out. path is meant to be a list, duh. Maybe add an
>>>>
>>>> assert not path or isinstance(path, list), 'path must be a list of
>>>> paths to search for the module.'
>>>>
>>>> to your code near the top of the function. Otherwise if path is a
>>>> string, search_path.extend(path) doesn't throw, but it makes a huge
>>>> search_path of single character locations and fails utterly (and
>>>> silently)
>>>>
>>>> -Dan
>>>>
>>
>>

From dan.eloff at gmail.com  Sat Apr 22 02:08:36 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Sat Apr 22 02:08:41 2006
Subject: [SPAM] Re: [mod_python] The new module loader
In-Reply-To: <A5EBB953-553E-4E7B-A758-8EE56C0B2A6A@dscpl.com.au>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
	<7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
	<4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>
	<A5EBB953-553E-4E7B-A758-8EE56C0B2A6A@dscpl.com.au>
Message-ID: <4817b6fc0604212308v15e65e02y54111a99835be325@mail.gmail.com>

> How are the files in this directory (_config.py) being imported in
> the first place?
> Is your pyserver.py file importing them explicitly using
> apache.import_module()?

Yes, that's exactly it.

If you want some unasked for info on the housing, the market seems to
be at a high, it probably can't go much higher realistically, and
certainly there are signs it's starting on the way down again
(interest rates going up, and finally being reflected in the mortgage
rates, housing starts down 7.5% last month, and another 7.5% this
month. Some high-profile real estate investors have either extricated
themselves from the market or are in the process of doing so.) Just
things to keep in mind when making your decision. It may be wise to
rent for a year or two and see what happens, only time will tell. Not
trying to tell you what to do, just giving you more information so you
can make an informed decision.

-Dan

From grahamd at dscpl.com.au  Sat Apr 22 08:14:37 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 22 08:14:48 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604212308v15e65e02y54111a99835be325@mail.gmail.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
	<7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
	<4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>
	<A5EBB953-553E-4E7B-A758-8EE56C0B2A6A@dscpl.com.au>
	<4817b6fc0604212308v15e65e02y54111a99835be325@mail.gmail.com>
Message-ID: <31D3751C-12BA-4EA5-9719-32EF8916576C@dscpl.com.au>


On 22/04/2006, at 4:08 PM, Dan Eloff wrote:

>> How are the files in this directory (_config.py) being imported in
>> the first place?
>> Is your pyserver.py file importing them explicitly using
>> apache.import_module()?
>
> Yes, that's exactly it.

If your pyserver.py is effectively acting as a dispatcher for  
multiple pages
based on URL, and it is using apache.import_module() to load an actual
handler module file from your "web" directory by full path name, ie.,
something like:

   stub = posixpath.splitex(req.path_info)[0]
   file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
   module = apache.import_module(file)

Change it to:

   directory = os.path.dirname(__file__)
   stub = posixpath.splitex(req.path_info)[0]
   file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
   module = apache.import_module(file, path=[directory])

It is important you be providing a full pathname as first argument to  
the
apache.import_module() as by doing so it triggers a special different
interpretation for the "path" argument.

Namely, when the module is specified by a full or absolute pathname,
as opposed to just the module name, the "path" argument becomes a
search path which is embedded within the loaded module and which
is consulted when sub imports are done from within that module.

Using this feature, you can then embed the directory the config module
is in as part of the module search path for the "web" module and using
the "import" statement or apache.import_module() to load it should
then work.

Note that the search path is only embedded within the module directly
loaded by apache.import_module() when this is done. The search
path is not inherited by any modules it may then in turn import.

Also note that this feature is an area which still has to be properly
thought out as to how it should work or be accessible. How it is
currently exposed is handy in some circumstances, but possibly
not as generally useful as it could be. How the ability to use it is
exposed may well change in time. One has to be really careful though
with such a feature because of the possibilities of introducing
unpredictable behaviour from when a module is imported from
different places with potentially different search paths defined. This
sort of path difference problem is a big problem with the current
importer, so rather want to avoid it.

I'll probably talk again about these search path issues when I finally
get around to addressing Jorey's email.

> If you want some unasked for info on the housing, ....

Which country is this???? Doesn't quite reflect my situation here in Oz.
Anyway, with all those property terms in there, probably lucky my spam
filter didn't flag it. :-)

Graham
From grahamd at dscpl.com.au  Sat Apr 22 09:51:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 22 09:51:41 2006
Subject: [mod_python] The new module loader
In-Reply-To: <44490394.9050402@joreybump.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
Message-ID: <CC544970-9ADC-49E3-842C-8552AA6C6A16@dscpl.com.au>

Sorry for taking so long to get back to this email. Busy day ...

On 22/04/2006, at 2:08 AM, Jorey Bump wrote:

> Graham Dumpleton wrote:
>> Graham Dumpleton wrote ..
>>> The new module importer completely ignores packages as it is  
>>> practically
>>> impossible to get any form of automatic module reloading to work
>>> correctly with them when they are more than trivial. As such,  
>>> packages
>>> are handed off to standard Python __import__ to deal with. That  
>>> it even
>>> finds the package means that you have it installed in sys.path.  
>>> Even if
>>> it was a file based module, because it is on sys.path and thus  
>>> likely to
>>> be installed in a standard location, the new module importer  
>>> would again
>>> ignore it as it leaves all sys.path modules up to Python __import__
>>> as too dangerous to be mixing importing schemes.
>>>
>>> Anyway, that all only applies if you were expecting  
>>> PyServer.pyserver to
>>> automatically reload upon changes.
>
> Graham, can you enumerate the different ways packages are handled,  
> or is it enough to say that packages are never reloaded? In this  
> thread, you explain that when a package is imported via  
> PythonHandler, mod_python uses the conventional Python __import__,  
> requiring an apache restart to reliably reload the package, as in  
> the past.

That is correct. What it means is that packages will only be found if
located somewhere along sys.path and are still held in sys.modules
because it is builtin Python __import__ that will load them. As such,  
they
are not regarded as being reloadable by mod_python. Whether you can
reload Packages using the Python "reload" statement/function I don't  
know
as I have never tried. I would probably not recommend trying, so an
Apache restart is still going to be the only way to reliably reload a  
package.
Therefore nothing has change in this respect from current importer.

I really did try hard to get reloading working with packages, ie., many
nights over a few weeks, but in the end although I could see a glimmer
of hope that it might work, it just became too impractical. Some of the
problems are that sub imports within packages will only work when the
parent module in the package is listed in sys.modules. Thus one had
to fake up horrible unique module reference names to store a reference
to the modules in sys.modules. Because of reloading, this had to be
tagged also with an incarnation version number so that when reloading
you weren't overwriting the currently loaded one. The other big problem
was that you get cyclic dependency loops in packages because of how
you reference back through the root of the package when doing sub
imports. This meant that any change to any module file within the
package had to trigger a complete reload of all files which made up
the package. Ie., you had to treat the package as a complete blob,
otherwise it became impossible to implement and you invariable some
how got different versions of a module in use in different parts of the
package at the same time. Very messy.

What I have hoped to achieve by some of the other features in the new
module importer is a way of achieving the same effect that packages
were generally being used for, ie., namespacing and encapsulation,
but still be able to support reloading. It does though mean  
restructuring
your imports a bit and it only becomes usable within the context of
mod_python, but then if it was some generic package which wasn't
mod_python specific to support a web application, one could question
why one would expect it to be reloadable anyway.

> This also implies that if a published module imports a package, and  
> the published module is touched or modified, then the module will  
> be reloaded, but not the package. Is this correct?

Correct, the file based handler module can be reloaded, but the package
will be referenced out of sys.modules where it already resides by the
Python __import__ builtin importer.

>> BTW, that something outside of the document tree, possibly in  
>> sys.path,
>> is dealt with by Python __import__ doesn't mean you can't have module
>> reloading on stuff outside of the document tree. The idea is that  
>> if it is
>> part of the web application and needs to be reloadable, that it  
>> doesn't
>> really belong in standard Python directories anyway. People only  
>> install
>> it there at present because it is convenient.
>
> There are security benefits to not putting your code in the  
> DocumentRoot. It's also useful to develop generic utilities that  
> are used in multiple apps (not just mod_python), but that you don't  
> want available globally on the system. I prefer extremely minimal  
> frontends in the DocumentRoot, with most of my code stored  
> elsewhere. Will the new importer support reloading modules outside  
> of the DocumentRoot without putting them in sys.path?

If you don't want certain modules available globally on your system,  
ie.,
not in site-packages directory. You can obviously still set PythonPath
just within mod_python configuration so they are found without it
effecting command line Python. Obviously these are still notionally
on sys.path and so would not be candidates for reloading.

As I mentioned, setting of PythonPath currently has nasty side effect
preserved from current importer whereby it causes Directory directive
directory not to be searched. I want to get rid of this behaviour though
as it doesn't seem to make too much sense with new module importer.

   http://issues.apache.org/jira/browse/MODPYTHON-154

although one still has to be careful in doing it as it may cause  
existing
applications to now incorrectly pick up a module from the Directory
directive directory when it wouldn't have before. Because of path
ordering issues in current importer, using common names in multiple
locations always caused unpredictable though.

Now in terms of modules which are a candidates for reloading being
able to be found on some search path, the first thing that could be done
(hasn't yet), is to allow for handler directives a path to be  
specified by:

   PythonHandlerPath '["/some/path1":"/some/path2"]'
   PythonHandler mydispatcher

The idea here is that where the specified handler module is not an
absolute or relative path, ie., is just a module name, the path defined
by PythonHandlerPath directive would be appended to the "path"
argument to apache.import_module() function call internally, the
current value of the "path" argument in this situation being the
Directory directive directory.

The order of search would then be, look in Directory directive  
directory,
then search PythonHandlerPath and then fall back to sys.path.

Note that this can be done now by virtue of a shell handler in the
document tree simply containing something like:

   from mod_python import apache
   _inner = apache.import_module("modname",path=["some/path1","/some/ 
path2"])
   handler = _inner.handler

But then, it is probably better to use a full path name in the config
to begin with and more probably want I want to promote as a preferred
mechanism with the new importer. This is the main reason
why I haven't added PythonHandlerPath. That is, I think using an
absolute path name is better in being more precise.

The other reason PythonHandlerPath hasn't been implemented yet is that
the new importer is still optional and hasn't been properly embedded  
into
mod_python. Until it was accepted as the correct way to go, I didn't
want to be adding new directives or changing other parts of mod_python
which need to be changed so it works correctly in all situations. See:

   http://issues.apache.org/jira/browse/MODPYTHON-155
   http://issues.apache.org/jira/browse/MODPYTHON-156

for a couple of other examples of things which I haven't been able
to do yet and can't really until decision made to embed it properly.

So, PythonHandlerPath is one way that some special search path
could be consulted for reloadable modules. This though would only
apply by default to top level handler imports, it would not apply for
explicit calls to apache.import_module().

Overall I am a bit hesitant on introducing a directive which would
provide a search path which apache.import_module() would
automatically search. The reason is that like in the current importer
this can cause problems where different parts of the document tree
decide to set the search path differently.

For example, imagine a common set of modules outside of the
document tree which are used by code running under different
parts of the document tree and which therefore may have different
handler search paths defined. Depending on which part of the
document tree calls into the common code first will dictate how a
search may be done for some other module if the common modules
expect to find it on the search path. If one part of the document tree
doesn't include this other place, the search will fail. In other words
the common modules are relying on a search path that is in part out
of its control.

Hope you follow what I am getting at here. It is in some way the sort
of situation Dan had with the "config" module. His code was relying
on fact that directory his config module directory was in sys.path.
But PythonPath effectively being random order based on access
order when set to different things in different parts of the document
tree, if someone else provided a config module under same name
it would be found by mistake and he would not get the one he wanted.

My feeling is that those modules should be self contained, or if they do
need to search else where, that they should somehow define the search
path for the other module themselves, ie., using "path" argument to
the apache.import_module() method. This ensures they get want
they wanted.

So, an equivalent to PythonPath for reloadable modules could be
provided, but I'd only really wanted to do it when good use cases
shown and that it is also shown that unpredictable behaviour isn't
just going to result again because of how it could be set differently
in different parts of document tree. One would also have to come up
with a way to extend such a part inherited from a parent context. Ie.,
like how one can refer to sys.path in PythonPath now.

>> The better way of dealing with this with the new module importer  
>> is to
>> put your web application modules elsewhere, ie., not on sys.path.  
>> You then
>> specify an absolute path to the actual .py file in the handler  
>> directive.
>>  <Directory />
>>      SetHandler mod_python
>>      PythonHandler /path/to/web/application/PyServer/pserver.py
>>      ...
>
> How arbitrary is this path? Must it be within the DocumentRoot?

It is an absolute path relative to the root of the filesystem as a  
whole,
so can be anything you want. Can include drive specifiers on Win32.

There currently is a short cut that can be used to refer relative to the
directory the Directory directive refers to. This is:

   PythonHandler ~/mymodules/handler.py

Ie., "~/" prefix. As I mentioned in a previous email, wanting to get rid
of the "~/" prefix as a general mechanism. What I mean here is that
currently this can also be used in explicit calls to  
apache.import_module()
and will refer to the currently value of req.hlist.directory as root  
of path.
This leads to unpredictability with common modules like discussed
above and so getting rid of it. Instead, for handler directive case,  
will
instead allow:

   PythonHandler ./mymodules/handler.py

or:

   PythonHandler ../mymodules/handler.py

Ie., relative to directory the Directory directive specifies.

>> Most cases I have seen is that people use packages purely to create a
>> namespace to group the modules. With the new module importer that
>> doesn't really need to be done anymore. That is because you can
>> directly reference an arbitrary module by its path. When you use the
>> "import" statement in files in that directory, one of the places  
>> it will
>> automatically look, without that directory needing to be in sys.path,
>> is the same directory the file is in. This achieves the same  
>> result as
>> what people are using packages for now but you can still have module
>> reloading work.
>
> Does it (the initial loading, not the reloading) also apply to  
> packages in that directory? Or will it only work with standalone  
> single file modules in the root of that directory?

Only works for standalone single file modules. A Python package  
always has
to be on sys.path and will never be reloabable by mod_python.

Note that if a package is very simple. Ie., is a single level and  
refers to
modules in the same package directly rather than through the root,  
using:

   package = apache.import_module("/some/path/package/__init__.py")

can often work though and will give you reloading as well.

> This is all very nifty, because it implies that a mod_python  
> application can now be easily distributed by inflating a tarball  
> and specifying the PythonHandler accordingly.

If PythonHandler path refers to the extracted tarball by absolute  
path, then
yes it becomes simpler as no need to mess with PythonPath or install  
it into
site-packages. You just can't implement it as a traditional package,  
but then
because it is self contained in its own directory which isn't  
mentioned in
sys.path, you still have the ability to internally structure it how  
you want.

> If the new importer works outside of the DocumentRoot,

Which it does, but then I probably don't need to confirm that again. :-)

> and Location is used instead of Directory, no files need to be  
> created in the DocumentRoot at all. Or is this currently  
> impossible, in regards to automatic module reloading? I already do  
> this for some handlers I've written, and really like the  
> flexibility provided by the virtualization.

Technically it is probably possible to have nothing at all in the  
document tree.
You can do this now with the current importer though, but means  
messing with
PythonPath with all the problems that entails and other code can pick  
up your
handler modules. By being able to specify an absolute path to your  
handler bundle
it becomes completely separate and would only be accessible by other  
code similarly
accessing it by absolute path.

I think perhaps you are starting to see where I am in part going with  
the new
module importer. That is that I am introducing this new way of being  
able to
refer to stuff by explicit paths, thereby breaking away from sys.path  
and all the
problems that result from that. It means restructuring stuff a bit  
and it will not be
backward compatible, but I think that overall it is a much better way  
of doing it
with better compartmentalisation and predictability.

Anyway, that was a long ramble. I really need to start getting some  
of this
documented properly, as there is certainly more to the new module  
importer
than providing an exact replacement for the old. I think the  
possibilities are
quite promising, but need to explain it well so people don't get the  
wrong idea
and that there are good reasons for doing it.

BTW, I forgot to say more about how the "path" argument to  
apache.import_module()
behaves when module name is referred to as an absolute or relative  
path. This
is something I started talking about in previous email to Dan. If you  
didn't
read that one, you may want to go back and look at it. I'll need to  
revisit that
one again, as that is the one area that probably still needs to be  
thought out
properly and changes still made to make it more usable.

Definitely getting late now, but then I slept most of the afternoon  
as felt a bit funny. :-)

Graham
From dan.eloff at gmail.com  Sat Apr 22 11:05:39 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Sat Apr 22 11:05:43 2006
Subject: [mod_python] The new module loader
In-Reply-To: <31D3751C-12BA-4EA5-9719-32EF8916576C@dscpl.com.au>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<44490394.9050402@joreybump.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
	<7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
	<4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>
	<A5EBB953-553E-4E7B-A758-8EE56C0B2A6A@dscpl.com.au>
	<4817b6fc0604212308v15e65e02y54111a99835be325@mail.gmail.com>
	<31D3751C-12BA-4EA5-9719-32EF8916576C@dscpl.com.au>
Message-ID: <4817b6fc0604220805o6330adddx25a56d27de881c90@mail.gmail.com>

It works! Nice feature, I don't see any trouble with it being the way
it is, maybe if you just added some __debug__ only code that squeals
if the same module is imported with a different search path.

Although something that would be nice is a feature like python has
with sys.path, that is the ability to globally add directories to the
search path (through code and through the apache config maybe.) I
would still like the ability to add the pyserver directory globally to
every module's search path, because for me, every module that
mod_python loads should have access to it.

I didn't realize you lived in the Australia, I just assumed you were
in the US. You're probably fine. Right now in North America the
housing bubble has just burst, but not many have figured it out yet.
When they do, most of those people who are buying real estate right
now are going to get burned. The real estate market is cyclical, so
it's not a big deal, more of an overdue correction, but I wouldn't
want to be the one having to pay for that. On the bright side, it's
good news for the stock market.

-Dan

On 4/22/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 22/04/2006, at 4:08 PM, Dan Eloff wrote:
>
> >> How are the files in this directory (_config.py) being imported in
> >> the first place?
> >> Is your pyserver.py file importing them explicitly using
> >> apache.import_module()?
> >
> > Yes, that's exactly it.
>
> If your pyserver.py is effectively acting as a dispatcher for
> multiple pages
> based on URL, and it is using apache.import_module() to load an actual
> handler module file from your "web" directory by full path name, ie.,
> something like:
>
>    stub = posixpath.splitex(req.path_info)[0]
>    file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
>    module = apache.import_module(file)
>
> Change it to:
>
>    directory = os.path.dirname(__file__)
>    stub = posixpath.splitex(req.path_info)[0]
>    file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
>    module = apache.import_module(file, path=[directory])
>
> It is important you be providing a full pathname as first argument to
> the
> apache.import_module() as by doing so it triggers a special different
> interpretation for the "path" argument.
>
> Namely, when the module is specified by a full or absolute pathname,
> as opposed to just the module name, the "path" argument becomes a
> search path which is embedded within the loaded module and which
> is consulted when sub imports are done from within that module.
>
> Using this feature, you can then embed the directory the config module
> is in as part of the module search path for the "web" module and using
> the "import" statement or apache.import_module() to load it should
> then work.
>
> Note that the search path is only embedded within the module directly
> loaded by apache.import_module() when this is done. The search
> path is not inherited by any modules it may then in turn import.
>
> Also note that this feature is an area which still has to be properly
> thought out as to how it should work or be accessible. How it is
> currently exposed is handy in some circumstances, but possibly
> not as generally useful as it could be. How the ability to use it is
> exposed may well change in time. One has to be really careful though
> with such a feature because of the possibilities of introducing
> unpredictable behaviour from when a module is imported from
> different places with potentially different search paths defined. This
> sort of path difference problem is a big problem with the current
> importer, so rather want to avoid it.
>
> I'll probably talk again about these search path issues when I finally
> get around to addressing Jorey's email.
>
> > If you want some unasked for info on the housing, ....
>
> Which country is this???? Doesn't quite reflect my situation here in Oz.
> Anyway, with all those property terms in there, probably lucky my spam
> filter didn't flag it. :-)
>
> Graham
>

From jpg at jgassociates.ca  Sat Apr 22 15:22:36 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Apr 22 15:17:24 2006
Subject: [mod_python] PythonAuthzHandler not working
In-Reply-To: <1145585717.22189@dscpl.user.openhosting.com>
References: <1145585717.22189@dscpl.user.openhosting.com>
Message-ID: <444A827C.7080800@jgassociates.ca>

Graham Dumpleton wrote:
> Add to config:
> 
>   AuthAuthoritative Off

That doesn't really make sense to me. Nothing like this is mentioned for 
other auth modules like mod_auth_ldap.

>   Require dummy
> 
> The value to Require cannot be:
> 
>   valid-user
>   user ???
>   group ???
> 
> it has to be something of your own creation that your authz handler then
> interprets.
> 
> I am noting that authzhandler() can't return DECLINED, but must be OK,
> or presumable HTTP_UNAUTHORIZED. Returning DECLINED results in 500
> error and:
> 
> [Fri Apr 21 12:10:43 2006] [crit] [client ::1] configuration error:  couldn't check access.  No groups file?: /~grahamd/authz/index.py
> 

I've worn my fingers to bloody stumps trying every directive that seems 
even vaguely related to authentication or authorization and I just can't 
get my authzhandler to fire.

Well, screw it, I thought. I'll just use a stacked handler:

   PythonAuthenHandler mprest.auth mprest.auth::authzhandler

This works just fine, although I'd prefer to use PythonAuthzHandler as 
it makes the intention clearer, but I've wasted enough time on this already.

So I'm working away, watching the "new module loader" thread float by on 
the the mailing list and I say to myself, "Gee, I really should turn on 
the new importer to give it a bit of a workout". I turn it on, and give 
my authen/authz login function a whirl... and...

Aaaaahhhhhrrrrggggg.....

It sails right past the second handler in the stack - 
mprest.auth::authzhanlder is ignored. Putting them in separate 
directives makes no difference:

   PythonAuthenHandler mprest.auth
   PythonAuthenHandler mprest.auth::authzhandler

No joy. (And of course PythonAuthzHandler is a lost cause for me).

I've decided that there is some powerful supernatural force that does 
not want me to do authorization testing.

I think discussion of this should be shifted to the python-dev list as 
importer.py is only in the development branch at this time.

Jim





From dan.eloff at gmail.com  Sat Apr 22 15:22:36 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Sat Apr 22 15:22:40 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604220805o6330adddx25a56d27de881c90@mail.gmail.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<4817b6fc0604211000u72cbe790r3e132501e4b5c630@mail.gmail.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
	<7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
	<4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>
	<A5EBB953-553E-4E7B-A758-8EE56C0B2A6A@dscpl.com.au>
	<4817b6fc0604212308v15e65e02y54111a99835be325@mail.gmail.com>
	<31D3751C-12BA-4EA5-9719-32EF8916576C@dscpl.com.au>
	<4817b6fc0604220805o6330adddx25a56d27de881c90@mail.gmail.com>
Message-ID: <4817b6fc0604221222j319195d8ne0946e914409dc3a@mail.gmail.com>

Well for now I'm putting pyserver back into a package, and dumping it
into the site-packages directory again.

In an ideal world pyserver doesn't need to be relaoded, it's more of a
supporting framework for my web applciations and since it needs to be
accessible from all my web applications, it makes some sense for it to
be located on sys.path.

In the real world pyserver is not stable yet, and changes frequently,
and I'll miss the reloading ability. But hey that's why I have restart
apache on hotkey. CTRL+ALT+A and hit refresh.

In my case the only place I use mod_python is through pyserver and
it'd be nice to add directories to the search path with global defines
in the apache config for cases like this.

-Dan

On 4/22/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> It works! Nice feature, I don't see any trouble with it being the way
> it is, maybe if you just added some __debug__ only code that squeals
> if the same module is imported with a different search path.
>
> Although something that would be nice is a feature like python has
> with sys.path, that is the ability to globally add directories to the
> search path (through code and through the apache config maybe.) I
> would still like the ability to add the pyserver directory globally to
> every module's search path, because for me, every module that
> mod_python loads should have access to it.
>
> I didn't realize you lived in the Australia, I just assumed you were
> in the US. You're probably fine. Right now in North America the
> housing bubble has just burst, but not many have figured it out yet.
> When they do, most of those people who are buying real estate right
> now are going to get burned. The real estate market is cyclical, so
> it's not a big deal, more of an overdue correction, but I wouldn't
> want to be the one having to pay for that. On the bright side, it's
> good news for the stock market.
>
> -Dan
>
> On 4/22/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > On 22/04/2006, at 4:08 PM, Dan Eloff wrote:
> >
> > >> How are the files in this directory (_config.py) being imported in
> > >> the first place?
> > >> Is your pyserver.py file importing them explicitly using
> > >> apache.import_module()?
> > >
> > > Yes, that's exactly it.
> >
> > If your pyserver.py is effectively acting as a dispatcher for
> > multiple pages
> > based on URL, and it is using apache.import_module() to load an actual
> > handler module file from your "web" directory by full path name, ie.,
> > something like:
> >
> >    stub = posixpath.splitex(req.path_info)[0]
> >    file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
> >    module = apache.import_module(file)
> >
> > Change it to:
> >
> >    directory = os.path.dirname(__file__)
> >    stub = posixpath.splitex(req.path_info)[0]
> >    file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
> >    module = apache.import_module(file, path=[directory])
> >
> > It is important you be providing a full pathname as first argument to
> > the
> > apache.import_module() as by doing so it triggers a special different
> > interpretation for the "path" argument.
> >
> > Namely, when the module is specified by a full or absolute pathname,
> > as opposed to just the module name, the "path" argument becomes a
> > search path which is embedded within the loaded module and which
> > is consulted when sub imports are done from within that module.
> >
> > Using this feature, you can then embed the directory the config module
> > is in as part of the module search path for the "web" module and using
> > the "import" statement or apache.import_module() to load it should
> > then work.
> >
> > Note that the search path is only embedded within the module directly
> > loaded by apache.import_module() when this is done. The search
> > path is not inherited by any modules it may then in turn import.
> >
> > Also note that this feature is an area which still has to be properly
> > thought out as to how it should work or be accessible. How it is
> > currently exposed is handy in some circumstances, but possibly
> > not as generally useful as it could be. How the ability to use it is
> > exposed may well change in time. One has to be really careful though
> > with such a feature because of the possibilities of introducing
> > unpredictable behaviour from when a module is imported from
> > different places with potentially different search paths defined. This
> > sort of path difference problem is a big problem with the current
> > importer, so rather want to avoid it.
> >
> > I'll probably talk again about these search path issues when I finally
> > get around to addressing Jorey's email.
> >
> > > If you want some unasked for info on the housing, ....
> >
> > Which country is this???? Doesn't quite reflect my situation here in Oz.
> > Anyway, with all those property terms in there, probably lucky my spam
> > filter didn't flag it. :-)
> >
> > Graham
> >
>

From grahamd at dscpl.com.au  Sat Apr 22 18:19:13 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 22 18:19:25 2006
Subject: [mod_python] PythonAuthzHandler not working
In-Reply-To: <444A827C.7080800@jgassociates.ca>
References: <1145585717.22189@dscpl.user.openhosting.com>
	<444A827C.7080800@jgassociates.ca>
Message-ID: <EB1CC786-6ED6-41A1-A4AA-459236E14C14@dscpl.com.au>


On 23/04/2006, at 5:22 AM, Jim Gallacher wrote:

> Graham Dumpleton wrote:
>> Add to config:
>>   AuthAuthoritative Off
>
> That doesn't really make sense to me. Nothing like this is  
> mentioned for other auth modules like mod_auth_ldap.

I couldn't even find it documented. It is mentioned in source code  
for 2.0.
Turns of inbuilt auth.

>>   Require dummy
>> The value to Require cannot be:
>>   valid-user
>>   user ???
>>   group ???
>> it has to be something of your own creation that your authz  
>> handler then
>> interprets.
>> I am noting that authzhandler() can't return DECLINED, but must be  
>> OK,
>> or presumable HTTP_UNAUTHORIZED. Returning DECLINED results in 500
>> error and:
>> [Fri Apr 21 12:10:43 2006] [crit] [client ::1] configuration  
>> error:  couldn't check access.  No groups file?: /~grahamd/authz/ 
>> index.py
>
> I've worn my fingers to bloody stumps trying every directive that  
> seems even vaguely related to authentication or authorization and I  
> just can't get my authzhandler to fire.
>
> Well, screw it, I thought. I'll just use a stacked handler:
>
>   PythonAuthenHandler mprest.auth mprest.auth::authzhandler
>
> This works just fine, although I'd prefer to use PythonAuthzHandler  
> as it makes the intention clearer, but I've wasted enough time on  
> this already.
>
> So I'm working away, watching the "new module loader" thread float  
> by on the the mailing list and I say to myself, "Gee, I really  
> should turn on the new importer to give it a bit of a workout". I  
> turn it on, and give my authen/authz login function a whirl... and...
>
> Aaaaahhhhhrrrrggggg.....
>
> It sails right past the second handler in the stack -  
> mprest.auth::authzhanlder is ignored. Putting them in separate  
> directives makes no difference:
>
>   PythonAuthenHandler mprest.auth
>   PythonAuthenHandler mprest.auth::authzhandler
>
> No joy. (And of course PythonAuthzHandler is a lost cause for me).

See:

   http://issues.apache.org/jira/browse/MODPYTHON-129

Your first handler should return apache.DECLINED now if it doesn't do  
anything.
Problem is you are using stacked handlers here for two different  
purposes.

Graham
From grahamd at dscpl.com.au  Sat Apr 22 21:43:43 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 22 21:44:21 2006
Subject: [mod_python] PythonAuthzHandler not working
In-Reply-To: <EB1CC786-6ED6-41A1-A4AA-459236E14C14@dscpl.com.au>
References: <1145585717.22189@dscpl.user.openhosting.com>
	<444A827C.7080800@jgassociates.ca>
	<EB1CC786-6ED6-41A1-A4AA-459236E14C14@dscpl.com.au>
Message-ID: <318164FC-41BF-4D6B-9706-6A644DDC5CC5@dscpl.com.au>


On 23/04/2006, at 8:19 AM, Graham Dumpleton wrote:

>
> On 23/04/2006, at 5:22 AM, Jim Gallacher wrote:
>
>> Graham Dumpleton wrote:
>>> Add to config:
>>>   AuthAuthoritative Off
>>
>> That doesn't really make sense to me. Nothing like this is  
>> mentioned for other auth modules like mod_auth_ldap.
>
> I couldn't even find it documented. It is mentioned in source code  
> for 2.0.
> Turns of inbuilt auth.

BTW, if you are using Apache 2.2, you might actually need both:

   AuthzDefaultAuthoritative Off
   AuthzUserAuthoritative Off

I didn't check before if it had changed form 2.0 to 2.2.

I'll do some tests and get back to you on what is required for 2.2 if  
that
is what you are using.

Graham


From grahamd at dscpl.com.au  Sat Apr 22 23:44:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 22 23:44:56 2006
Subject: [mod_python] PythonAuthzHandler not working
In-Reply-To: <318164FC-41BF-4D6B-9706-6A644DDC5CC5@dscpl.com.au>
References: <1145585717.22189@dscpl.user.openhosting.com>
	<444A827C.7080800@jgassociates.ca>
	<EB1CC786-6ED6-41A1-A4AA-459236E14C14@dscpl.com.au>
	<318164FC-41BF-4D6B-9706-6A644DDC5CC5@dscpl.com.au>
Message-ID: <4555C0AA-078E-41FE-8E21-6458AE29918D@dscpl.com.au>


On 23/04/2006, at 11:43 AM, Graham Dumpleton wrote:

>
> On 23/04/2006, at 8:19 AM, Graham Dumpleton wrote:
>
>>
>> On 23/04/2006, at 5:22 AM, Jim Gallacher wrote:
>>
>>> Graham Dumpleton wrote:
>>>> Add to config:
>>>>   AuthAuthoritative Off
>>>
>>> That doesn't really make sense to me. Nothing like this is  
>>> mentioned for other auth modules like mod_auth_ldap.
>>
>> I couldn't even find it documented. It is mentioned in source code  
>> for 2.0.
>> Turns of inbuilt auth.
>
> BTW, if you are using Apache 2.2, you might actually need both:
>
>   AuthzDefaultAuthoritative Off
>   AuthzUserAuthoritative Off
>
> I didn't check before if it had changed form 2.0 to 2.2.
>
> I'll do some tests and get back to you on what is required for 2.2  
> if that
> is what you are using.

Done testing, and on Apache 2.2, you don't need either of the above.

Here is a summary of what I found. Note that I am using mod_python 3.3
from trunk. First off, am using the handlers:

     from mod_python import apache

     def authenhandler(req):
         apache.log_error("authenhandler")
         req.phases = ["authenhandler"]
         req.user = "grumpy"
         req.ap_auth_type = req.auth_type()
         return apache.OK

     def authzhandler(req):
         apache.log_error("authzhandler")
         req.phases.append("authzhandler")
         return apache.OK

     def handler(req):
         apache.log_error("handler")
         req.phases.append("handler")
         req.content_type = "text/plain"
         req.write(req.ap_auth_type+"\n")
         req.write(req.user+"\n")
         req.write(str(req.phases)+"\n")
         return apache.OK

For Apache 2.0, the configuration that works is:

     SetHandler mod_python

     PythonAuthenHandler authz_1
     PythonAuthzHandler authz_1
     PythonHandler authz_1
     PythonDebug On

     AuthType authztest
     Require group grumpy
     #AuthAuthoritative Off

The result in the browser is:

     authztest
     grumpy
     ['authenhandler', 'authzhandler', 'handler']

Note that I am not using AuthAuthoritative in the end here.

Now, if I instead use either:

     Require user grumpy

or:

     Require valid-user

even if set in conjunction with:

     Require group grumpy

the result is:

     authztest
     grumpy
     ['authenhandler', 'handler']

Thus, no authzhandler run. This is because builtin mod_authz is  
getting run before
my authzhandler and the user condition is being satisfied and so my  
handler never
gets to run.

If you want to have something like 'valid-user' or 'user', you need  
to call it something
else. For example, thus:

     Require authztest::valid-user

If I do that alone though, I get authorization required response and  
error log says:

     [Sun Apr 23 13:21:58 2006] [error] [client ::1] access to / 
testing/authz-1/ failed, reason: unknown require  
directive:"authztest::valid-user"

To get past that, that is where in Apache 2.0 I need to set  
AuthAuthoritative.

     SetHandler mod_python

     PythonAuthenHandler authz_1
     PythonAuthzHandler authz_1
     PythonHandler authz_1
     PythonDebug On

     AuthType authztest
     Require authztest::valid-user
     AuthAuthoritative Off

Thus I again get:

     authztest
     grumpy
     ['authenhandler', 'authzhandler', 'handler']

In Apache 2.2, things are slightly different. Using:

     SetHandler mod_python

     PythonAuthenHandler authz_1
     PythonAuthzHandler authz_1
     PythonHandler authz_1
     PythonDebug On

     AuthType authztest
     Require group grumpy

still works okay. Using:

     Require user grumpy

or:

     Require valid-user

still results in:

     authztest
     grumpy
     ['authenhandler', 'handler']

In Apache 2.2, if I use:

     SetHandler mod_python

     PythonAuthenHandler authz_1
     PythonAuthzHandler authz_1
     PythonHandler authz_1
     PythonDebug On

     AuthType authztest
     Require authztest::valid-user

I get:

     authztest
     grumpy
     ['authenhandler', 'authzhandler', 'handler']

So, no need to have any equivalent to AuthAuthoritative in Apache 2.2.

In summary, situation seems to be that if you want to perform  
authorization based
on group member ship, okay to still use:

     Require group grumpy

But you should not set AuthGroupFile, because if you do then the  
builting authz handler
will try and do the interpretation itself.

If you want equivalents to 'valid-user' or 'user' where your  
authzhandler interprets them,
you need to qualify them to avoid builtin authz module interpreting  
them. Thus use something
like:

     Require authztest::valid-user
     Require authztest::user grumpy

and the check req.requires for pertinent tags and data.

Going back to your original configuration:

     <Directory /srv/projects/aos/html/aos-admin/>
       DirectoryIndex index.py

Take note of DirectoryIndex problems recorded in:

     http://issues.apache.org/jira/browse/MODPYTHON-146

This would be an issue if you are trying to pass data in req through  
from these handlers
to content handler. Plus notes and subprocess_env values can get  
duplicated.

       AllowOverride None
       AddHandler mod_python .py

       AuthType PyCookie
       AuthName "Restricted"
       Require valid-user

If req.user is set, use of 'valid-user' would cause inbuilt authz  
handler to return
OK and so your authzhandler would not run. If though req.user hadn't  
been
set by authenhandler, you probably get an error occur.

       Require admin

The "admin" tag is not one known of by Apache. If you were using  
Apache 2.0
you would most like be getting:

     [Sun Apr 23 13:41:06 2006] [error] [client ::1] access to / 
testing/authz-1/ failed, reason: unknown require directive:"admin"

Thus, in Apache 2.0, you would need to have AuthAuthoritative set. In  
Apache 2.2
you wouldn't need to.

       PythonAccessHandler mprest.authtest
       PythonAuthenHandler mprest.authtest
       PythonAuthzHandler mprest.authtest
       PythonHandler mprest.authtest

     </Directory>

Now, what was the final configuration you were trying to use and what  
version of
Apache were you using?

Graham



From grahamd at dscpl.com.au  Sat Apr 22 23:49:51 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 22 23:50:15 2006
Subject: [mod_python] ValueError with Flash 8 FileReference.upload(url)  
In-Reply-To: <200604212234.k3LMYlXx025416@dscpl.user.openhosting.com>
References: <200604212234.k3LMYlXx025416@dscpl.user.openhosting.com>
Message-ID: <6FCEC999-5E09-4D7E-9D68-53C79877CB12@dscpl.com.au>


On 22/04/2006, at 8:33 AM, Alec Matusis wrote:

> Is there a way to read the request by lines in the filter, rather than
> trying to read the entire buffer?
> That way at least the text that I am trying to replace will come in  
> a single
> read, when I read that line.
>
> Or will it be to slow?

There is no way to read a line at a time.

All I can suggest is that you read through the complete recent thread  
about
filters as described in:

     http://www.modpython.org/pipermail/mod_python/2006-April/ 
020869.html

For thread view see:

     http://www.modpython.org/pipermail/mod_python/2006-April/ 
thread.html

In that thread it gives recipes for how to buffer up data until it is  
all received
so that it can be processed in one go, thus avoiding problems with  
partial
reads of data you are interested in.

In terms of whether it would be slow or not, I would suggest you just  
get
something working first that would work reliably and only then worry  
about
performance. In the greater scheme of things, your traffic for these  
sort of
posts may be so minimal that you could ignore that they incur slightly
greater overhead.

Graham

> -----Original Message-----
> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
> Sent: Friday, April 21, 2006 3:24 PM
> To: Alec Matusis
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] ValueError with Flash 8  
> FileReference.upload(url)
>
> Actually there is another problem that only came to me later. That is
> that
> there is no guarantee with an input filter that you are going to  
> get the
> complete text you are trying to replace in one read even if it was
> written
> in one go by the client. This is because you are at the mercy of how
> blocking of data reads off the client socket works out. A patching of
> the
> util.FieldStorage class may be the only way around that.
>
> Graham
>
> On 21/04/2006, at 7:40 PM, Alec Matusis wrote:
>
>>  Yes, I got that.
>> Thanks, I tested it, all works well.
>>
>> I hope this filter does not tax the performance too much when I
>> submit large
>> files?
>>
>> -----Original Message-----
>> From: Graham Dumpleton [mailto:grahamd@dscpl.com.au]
>> Sent: Friday, April 21, 2006 2:39 AM
>> To: Alec Matusis
>> Cc: mod_python@modpython.org
>> Subject: Re: [mod_python] ValueError with Flash 8
>> FileReference.upload(url)
>>
>> Whoops.
>>
>>
>> On 21/04/2006, at 7:23 PM, Graham Dumpleton wrote:
>>
>>> A creative way of getting around the problem. I hadn't thought
>>> of using a filter. Some suggested changes below.
>>>
>>> On 21/04/2006, at 6:12 PM, Alec Matusis wrote:
>>>
>>>>
>>>> I figured out how to do this without changing mod_python source:
>>>>
>>>> I wrote a mod_python input filter:
>>>>
>>>> flashfilter.py:
>>>>
>>>> from mod_python import apache
>>>>
>>>> def inputfilter(filter):
>>>>     #this is a workaround flash 8 FileReference bug: Flash POST is
>>>> not
>>>> RFC-compliant as of Flash 8,0,22,0
>>>
>>>
>>>     if 'flashfileref' in parse_args(filter.req.args):
>>>       filter.pass_on()
>>>       return
>>
>> Logic wrong way around.
>>
>>      if 'flashfileref' not in parse_args(filter.req.args):
>>        filter.pass_on()
>>        return
>>
>> Graham

From yjfuk at 126.com  Sun Apr 23 07:53:32 2006
From: yjfuk at 126.com (yjfuk)
Date: Sun Apr 23 07:53:43 2006
Subject: [mod_python] session lock
Message-ID: <444B6ABC.000013.17263@m67.126.com>

my envinment is apache2.0.55 + mod_python 3.2.2b
 
in my web usually raise "Session unable to acquire mutex lock",why? I store the session in the class.
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060423/9140172a/attachment.html
From grahamd at dscpl.com.au  Sun Apr 23 08:18:36 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr 23 08:19:04 2006
Subject: [mod_python] session lock
In-Reply-To: <444B6ABC.000013.17263@m67.126.com>
References: <444B6ABC.000013.17263@m67.126.com>
Message-ID: <CE77625C-1BBE-40FF-9BA3-335A4F19C526@dscpl.com.au>


On 23/04/2006, at 9:53 PM, yjfuk wrote:

> my envinment is apache2.0.55 + mod_python 3.2.2b
>
> in my web usually raise "Session unable to acquire mutex lock",why?  
> I store the session in the class.

Which operating system and version?

What does the mod_python startup message in the Apache error log file
say in regard to the number of session mutexes created. For example:

[Wed Mar 15 15:47:15 2006] [notice] mod_python: Creating 8 session  
mutexes based on 150 max processes and 0 max threads.

Is your Apache configured for prefork MPM or worker MPM?

Graham
From dan.eloff at gmail.com  Sun Apr 23 13:27:05 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Sun Apr 23 13:27:14 2006
Subject: [mod_python] The new module loader
In-Reply-To: <4817b6fc0604221222j319195d8ne0946e914409dc3a@mail.gmail.com>
References: <1145598250.8774@dscpl.user.openhosting.com>
	<4817b6fc0604211317w7f3192dfna837fe3fa2f2d44a@mail.gmail.com>
	<4817b6fc0604211335w6be447cdwcf37cec188908d9e@mail.gmail.com>
	<7C73DEB8-F48D-4B1C-ACDD-BA4A9391EC9A@dscpl.com.au>
	<4817b6fc0604211803p7afab8c3r64ba92d9a99849ef@mail.gmail.com>
	<A5EBB953-553E-4E7B-A758-8EE56C0B2A6A@dscpl.com.au>
	<4817b6fc0604212308v15e65e02y54111a99835be325@mail.gmail.com>
	<31D3751C-12BA-4EA5-9719-32EF8916576C@dscpl.com.au>
	<4817b6fc0604220805o6330adddx25a56d27de881c90@mail.gmail.com>
	<4817b6fc0604221222j319195d8ne0946e914409dc3a@mail.gmail.com>
Message-ID: <4817b6fc0604231027i75695813k887ec9b2c650f016@mail.gmail.com>

Loving that new importer Graham, thanks for all the trouble it must've
taken to create it. It's so painless working on my website now. The
sessions started working too, because suddenly there's only one
sessions module being loaded.

Thanks,
-Dan

On 4/22/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> Well for now I'm putting pyserver back into a package, and dumping it
> into the site-packages directory again.
>
> In an ideal world pyserver doesn't need to be relaoded, it's more of a
> supporting framework for my web applciations and since it needs to be
> accessible from all my web applications, it makes some sense for it to
> be located on sys.path.
>
> In the real world pyserver is not stable yet, and changes frequently,
> and I'll miss the reloading ability. But hey that's why I have restart
> apache on hotkey. CTRL+ALT+A and hit refresh.
>
> In my case the only place I use mod_python is through pyserver and
> it'd be nice to add directories to the search path with global defines
> in the apache config for cases like this.
>
> -Dan
>
> On 4/22/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> > It works! Nice feature, I don't see any trouble with it being the way
> > it is, maybe if you just added some __debug__ only code that squeals
> > if the same module is imported with a different search path.
> >
> > Although something that would be nice is a feature like python has
> > with sys.path, that is the ability to globally add directories to the
> > search path (through code and through the apache config maybe.) I
> > would still like the ability to add the pyserver directory globally to
> > every module's search path, because for me, every module that
> > mod_python loads should have access to it.
> >
> > I didn't realize you lived in the Australia, I just assumed you were
> > in the US. You're probably fine. Right now in North America the
> > housing bubble has just burst, but not many have figured it out yet.
> > When they do, most of those people who are buying real estate right
> > now are going to get burned. The real estate market is cyclical, so
> > it's not a big deal, more of an overdue correction, but I wouldn't
> > want to be the one having to pay for that. On the bright side, it's
> > good news for the stock market.
> >
> > -Dan
> >
> > On 4/22/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > >
> > > On 22/04/2006, at 4:08 PM, Dan Eloff wrote:
> > >
> > > >> How are the files in this directory (_config.py) being imported in
> > > >> the first place?
> > > >> Is your pyserver.py file importing them explicitly using
> > > >> apache.import_module()?
> > > >
> > > > Yes, that's exactly it.
> > >
> > > If your pyserver.py is effectively acting as a dispatcher for
> > > multiple pages
> > > based on URL, and it is using apache.import_module() to load an actual
> > > handler module file from your "web" directory by full path name, ie.,
> > > something like:
> > >
> > >    stub = posixpath.splitex(req.path_info)[0]
> > >    file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
> > >    module = apache.import_module(file)
> > >
> > > Change it to:
> > >
> > >    directory = os.path.dirname(__file__)
> > >    stub = posixpath.splitex(req.path_info)[0]
> > >    file = os.path.join("C:/My Documents/PYROOT/web", stub) + ".py"
> > >    module = apache.import_module(file, path=[directory])
> > >
> > > It is important you be providing a full pathname as first argument to
> > > the
> > > apache.import_module() as by doing so it triggers a special different
> > > interpretation for the "path" argument.
> > >
> > > Namely, when the module is specified by a full or absolute pathname,
> > > as opposed to just the module name, the "path" argument becomes a
> > > search path which is embedded within the loaded module and which
> > > is consulted when sub imports are done from within that module.
> > >
> > > Using this feature, you can then embed the directory the config module
> > > is in as part of the module search path for the "web" module and using
> > > the "import" statement or apache.import_module() to load it should
> > > then work.
> > >
> > > Note that the search path is only embedded within the module directly
> > > loaded by apache.import_module() when this is done. The search
> > > path is not inherited by any modules it may then in turn import.
> > >
> > > Also note that this feature is an area which still has to be properly
> > > thought out as to how it should work or be accessible. How it is
> > > currently exposed is handy in some circumstances, but possibly
> > > not as generally useful as it could be. How the ability to use it is
> > > exposed may well change in time. One has to be really careful though
> > > with such a feature because of the possibilities of introducing
> > > unpredictable behaviour from when a module is imported from
> > > different places with potentially different search paths defined. This
> > > sort of path difference problem is a big problem with the current
> > > importer, so rather want to avoid it.
> > >
> > > I'll probably talk again about these search path issues when I finally
> > > get around to addressing Jorey's email.
> > >
> > > > If you want some unasked for info on the housing, ....
> > >
> > > Which country is this???? Doesn't quite reflect my situation here in Oz.
> > > Anyway, with all those property terms in there, probably lucky my spam
> > > filter didn't flag it. :-)
> > >
> > > Graham
> > >
> >
>

From jpg at jgassociates.ca  Sun Apr 23 22:23:16 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Apr 23 22:20:31 2006
Subject: [mod_python] PythonAuthzHandler not working
In-Reply-To: <4555C0AA-078E-41FE-8E21-6458AE29918D@dscpl.com.au>
References: <1145585717.22189@dscpl.user.openhosting.com>
	<444A827C.7080800@jgassociates.ca>
	<EB1CC786-6ED6-41A1-A4AA-459236E14C14@dscpl.com.au>
	<318164FC-41BF-4D6B-9706-6A644DDC5CC5@dscpl.com.au>
	<4555C0AA-078E-41FE-8E21-6458AE29918D@dscpl.com.au>
Message-ID: <444C3694.3000703@jgassociates.ca>

Problem solved, discussion below. Thanks for your help Graham. The 
mod_python project is *very* lucky to have you on board.

Graham Dumpleton wrote:
> 
> On 23/04/2006, at 11:43 AM, Graham Dumpleton wrote:
> 
>>
>> On 23/04/2006, at 8:19 AM, Graham Dumpleton wrote:
>>
>>>
>>> On 23/04/2006, at 5:22 AM, Jim Gallacher wrote:
>>>
>>>> Graham Dumpleton wrote:
>>>>> Add to config:
>>>>>   AuthAuthoritative Off
>>>>
>>>> That doesn't really make sense to me. Nothing like this is mentioned 
>>>> for other auth modules like mod_auth_ldap.
>>>
>>> I couldn't even find it documented. It is mentioned in source code 
>>> for 2.0.
>>> Turns of inbuilt auth.
>>
>> BTW, if you are using Apache 2.2, you might actually need both:
>>
>>   AuthzDefaultAuthoritative Off
>>   AuthzUserAuthoritative Off
>>
>> I didn't check before if it had changed form 2.0 to 2.2.
>>
>> I'll do some tests and get back to you on what is required for 2.2 if 
>> that
>> is what you are using.
> 
> Done testing, and on Apache 2.2, you don't need either of the above.
> 
> Here is a summary of what I found. Note that I am using mod_python 3.3
> from trunk. First off, am using the handlers:
> 
>     from mod_python import apache
> 
>     def authenhandler(req):
>         apache.log_error("authenhandler")
>         req.phases = ["authenhandler"]
>         req.user = "grumpy"
>         req.ap_auth_type = req.auth_type()
>         return apache.OK
> 
>     def authzhandler(req):
>         apache.log_error("authzhandler")
>         req.phases.append("authzhandler")
>         return apache.OK
> 
>     def handler(req):
>         apache.log_error("handler")
>         req.phases.append("handler")
>         req.content_type = "text/plain"
>         req.write(req.ap_auth_type+"\n")
>         req.write(req.user+"\n")
>         req.write(str(req.phases)+"\n")
>         return apache.OK
> 
> For Apache 2.0, the configuration that works is:
> 
>     SetHandler mod_python
> 
>     PythonAuthenHandler authz_1
>     PythonAuthzHandler authz_1
>     PythonHandler authz_1
>     PythonDebug On
> 
>     AuthType authztest
>     Require group grumpy
>     #AuthAuthoritative Off
> 
> The result in the browser is:
> 
>     authztest
>     grumpy
>     ['authenhandler', 'authzhandler', 'handler']
> 
> Note that I am not using AuthAuthoritative in the end here.
> 
> Now, if I instead use either:
> 
>     Require user grumpy
> 
> or:
> 
>     Require valid-user
> 
> even if set in conjunction with:
> 
>     Require group grumpy
> 
> the result is:
> 
>     authztest
>     grumpy
>     ['authenhandler', 'handler']
> 
> Thus, no authzhandler run. This is because builtin mod_authz is getting 
> run before
> my authzhandler and the user condition is being satisfied and so my 
> handler never
> gets to run.
> 
> If you want to have something like 'valid-user' or 'user', you need to 
> call it something
> else. For example, thus:
> 
>     Require authztest::valid-user
> 
> If I do that alone though, I get authorization required response and 
> error log says:
> 
>     [Sun Apr 23 13:21:58 2006] [error] [client ::1] access to 
> /testing/authz-1/ failed, reason: unknown require 
> directive:"authztest::valid-user"
> 
> To get past that, that is where in Apache 2.0 I need to set 
> AuthAuthoritative.
> 
>     SetHandler mod_python
> 
>     PythonAuthenHandler authz_1
>     PythonAuthzHandler authz_1
>     PythonHandler authz_1
>     PythonDebug On
> 
>     AuthType authztest
>     Require authztest::valid-user
>     AuthAuthoritative Off
> 
> Thus I again get:
> 
>     authztest
>     grumpy
>     ['authenhandler', 'authzhandler', 'handler']
> 
> In Apache 2.2, things are slightly different. Using:
> 
>     SetHandler mod_python
> 
>     PythonAuthenHandler authz_1
>     PythonAuthzHandler authz_1
>     PythonHandler authz_1
>     PythonDebug On
> 
>     AuthType authztest
>     Require group grumpy
> 
> still works okay. Using:
> 
>     Require user grumpy
> 
> or:
> 
>     Require valid-user
> 
> still results in:
> 
>     authztest
>     grumpy
>     ['authenhandler', 'handler']
> 
> In Apache 2.2, if I use:
> 
>     SetHandler mod_python
> 
>     PythonAuthenHandler authz_1
>     PythonAuthzHandler authz_1
>     PythonHandler authz_1
>     PythonDebug On
> 
>     AuthType authztest
>     Require authztest::valid-user
> 
> I get:
> 
>     authztest
>     grumpy
>     ['authenhandler', 'authzhandler', 'handler']
> 
> So, no need to have any equivalent to AuthAuthoritative in Apache 2.2.
> 
> In summary, situation seems to be that if you want to perform 
> authorization based
> on group member ship, okay to still use:
> 
>     Require group grumpy

Woot, Woot, Woot! We have a solution! 10,000 Thank-yous and as much 
virtual beer as you can drink, Graham. It never occurred to me to *not* 
use "Require valid-user". Any discussion I've seen on 
PythonAuthenHandler indicated the valid-user was *required* to get the 
authenhandler to run.

> But you should not set AuthGroupFile, because if you do then the 
> builting authz handler
> will try and do the interpretation itself.
> 
> If you want equivalents to 'valid-user' or 'user' where your 
> authzhandler interprets them,
> you need to qualify them to avoid builtin authz module interpreting 
> them. Thus use something
> like:
> 
>     Require authztest::valid-user
>     Require authztest::user grumpy
> 
> and the check req.requires for pertinent tags and data.
> 
> Going back to your original configuration:
> 
>     <Directory /srv/projects/aos/html/aos-admin/>
>       DirectoryIndex index.py
> 
> Take note of DirectoryIndex problems recorded in:
> 
>     http://issues.apache.org/jira/browse/MODPYTHON-146
> 
> This would be an issue if you are trying to pass data in req through 
> from these handlers
> to content handler. Plus notes and subprocess_env values can get 
> duplicated.
> 
>       AllowOverride None
>       AddHandler mod_python .py
> 
>       AuthType PyCookie
>       AuthName "Restricted"
>       Require valid-user
> 
> If req.user is set, use of 'valid-user' would cause inbuilt authz 
> handler to return
> OK and so your authzhandler would not run. If though req.user hadn't been
> set by authenhandler, you probably get an error occur.

That is correct, but the error is generated in mod_python.c, 
irrespective of the existence of "Require valid-user". Looking at that 
code makes me think there is an unreported bug, which may also explain 
some of the confusion over the AuthAuthorative business. More on this below.

>       Require admin
> 
> The "admin" tag is not one known of by Apache. If you were using Apache 2.0
> you would most like be getting:
> 
>     [Sun Apr 23 13:41:06 2006] [error] [client ::1] access to 
> /testing/authz-1/ failed, reason: unknown require directive:"admin"

This is not a problem as long as Require [valid-user|user|group] is set. 
  An error will not be raised as long as one of those is set. Strings 
set with Require can be retrieved with req.requires().

> Thus, in Apache 2.0, you would need to have AuthAuthoritative set. In 
> Apache 2.2
> you wouldn't need to.
> 
>       PythonAccessHandler mprest.authtest
>       PythonAuthenHandler mprest.authtest
>       PythonAuthzHandler mprest.authtest
>       PythonHandler mprest.authtest
> 
>     </Directory>
> 
> Now, what was the final configuration you were trying to use and what 
> version of
> Apache were you using?

Just for the record here is the conf that worked for me with Apache 
2.0.55 and mp 3.3.0-dev (with both new and old module importers). One of 
the directories contains dynamic content, while the other is static 
content. Note the absence of Require valid-user. Require group is 
sufficient to get both PythonAuthenHandler and PythonAuthzHandler to fire.

<Directory /path/to/html/adminonly/>
   AddHandler mod_python .py
   AuthType PyCookie
   AuthName "Restricted - Administrators Only"
   Require group
   Require pygroup admin
   PythonAuthenHandler mprest.auth
   PythonAuthzHandler mprest.auth
   PythonHandler mprest.publisher
</Directory>

There is no PythonHandler in the next example, as the directory only 
contains static content, but I want to use the same authen/authz 
mechanism to protect this resource.

<Directory /path/to/html/membersonly/>
   AuthType PyCookie
   AuthName "Restricted - Members Only"
   Require group
   Require pygroup member admin
   PythonAuthenHandler mprest.auth
   PythonAuthzHandler mprest.auth
</Directory>

I'll make some notes to stick in the documentation so some other poor 
sob can avoid the trouble this caused me.

Ultimately however it seems to me there is a bug in mod_python.c related 
to the whole AuthAthoritative business. Consider the following code 
pulled from the python_handler function. (mod_python.c line 1412 
revision 396250):

    if (strcmp(phase, "PythonAuthenHandler") == 0) {
          ... snip ...

          if (result == HTTP_UNAUTHORIZED)
          {
               if   (! conf->authoritative)
                     result = DECLINED;


conf->authoritative is initialized to 1, but we don't have an Apache 
directive to set the value. I wonder if the assumption was that this was 
set by AuthAuthoritative, or if it there was an oversight in not adding 
a new directive? Either way it's a bug. Mod_python should not concern 
itself with AuthAuthoritative, as that is for use by mod_auth, so we 
really need our on directive.

As confirmation I modified python_handler to log conf->authoritative and 
indeed it's value is unaffected by the AuthAthoritative setting. In it's 
current state, PythonAuthenHander will *always* be authoritative.

Other mod_auth_* modules define their own  authoritative directives, for 
example: AuthDBMAuthoritative, AuthLDAPAuthoritative, 
AuthMySQLAuthoritative and Anonymous_Authoritative. Following the most 
common pattern I would suggest we add AuthPythonAuthoritative.

This issue may also be important to 
http://issues.apache.org/jira/browse/MODPYTHON-129

Jim
From doug.dixon at gmail.com  Sun Apr 23 22:46:30 2006
From: doug.dixon at gmail.com (Doug Dixon)
Date: Sun Apr 23 22:46:44 2006
Subject: [mod_python] PythonAuthzHandler not working
In-Reply-To: <444C3694.3000703@jgassociates.ca>
References: <1145585717.22189@dscpl.user.openhosting.com>
	<444A827C.7080800@jgassociates.ca>
	<EB1CC786-6ED6-41A1-A4AA-459236E14C14@dscpl.com.au>
	<318164FC-41BF-4D6B-9706-6A644DDC5CC5@dscpl.com.au>
	<4555C0AA-078E-41FE-8E21-6458AE29918D@dscpl.com.au>
	<444C3694.3000703@jgassociates.ca>
Message-ID: <164B3CB5-FE3D-4194-AEA7-622E02FA65C8@gmail.com>

Must say I agree. Can you be cloned Graham?

On 24 Apr 2006, at 14:23, Jim Gallacher wrote:

> Thanks for your help Graham. The mod_python project is *very* lucky  
> to have you on board.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060424/1eb054d0/attachment.html
From yjfuk at 126.com  Sun Apr 23 23:17:52 2006
From: yjfuk at 126.com (yjfuk)
Date: Sun Apr 23 23:18:06 2006
Subject: &nbsp;[mod_python]&nbsp;session&nb
 sp;lock
Message-ID: <444C4360.000082.26397@m67.126.com>

the mod_python startup message in the Apache error log file is :
 
[Sat Jan 28 18:40:19 2006] [notice] mod_python: Creating 8 session mutexes based on 25 max processes and 30 max threads
 
the Apache is configured for worker MPM
 
 
 



-----原始邮件-----
发件人:"Graham Dumpleton" 
发送时间:2006-04-23 20:18:36
收件人:"yjfuk" 
抄送:mod_python@modpython.org
主题:Re: [mod_python] session lock


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060424/fbc085a7/attachment.html
From grahamd at dscpl.com.au  Sun Apr 23 23:50:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Apr 23 23:50:31 2006
Subject: [mod_python] PythonAuthzHandler not working
Message-ID: <1145850628.26998@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> Ultimately however it seems to me there is a bug in mod_python.c related
> to the whole AuthAthoritative business. Consider the following code 
> pulled from the python_handler function. (mod_python.c line 1412 
> revision 396250):
> 
>     if (strcmp(phase, "PythonAuthenHandler") == 0) {
>           ... snip ...
> 
>           if (result == HTTP_UNAUTHORIZED)
>           {
>                if   (! conf->authoritative)
>                      result = DECLINED;
> 
> 
> conf->authoritative is initialized to 1, but we don't have an Apache 
> directive to set the value. I wonder if the assumption was that this was
> set by AuthAuthoritative, or if it there was an oversight in not adding
> a new directive? Either way it's a bug. Mod_python should not concern 
> itself with AuthAuthoritative, as that is for use by mod_auth, so we 
> really need our on directive.
> 
> As confirmation I modified python_handler to log conf->authoritative and
> indeed it's value is unaffected by the AuthAthoritative setting. In it's
> current state, PythonAuthenHander will *always* be authoritative.
> 
> Other mod_auth_* modules define their own  authoritative directives, for
> example: AuthDBMAuthoritative, AuthLDAPAuthoritative, 
> AuthMySQLAuthoritative and Anonymous_Authoritative. Following the most
> common pattern I would suggest we add AuthPythonAuthoritative.
> 
> This issue may also be important to 
> http://issues.apache.org/jira/browse/MODPYTHON-129

I've noted the PythonAuthenHandler code in python_handler many times and
although I need to go back and look at it again I have been thinking
that that section of code may possibly be partly bogus and shouldn't be
in there. The warning message about req.user not being set is possibly
helpful, but why should mod_python be making a decision to change an
unauthorized response back to a declined and why should it be generating
a WWW-Authenticate header with an assumption that Basic authorisation
is being used when it may well not be. What is going to happen if I write
an authenhandler for Digest authentication and it returns unauthorised,
mod_python will obliterate any WWW-Authenticate header I may have
placed there specific to Digest authentication.

Thus I don't necessarily think it is a case of amending it some way, it
may be a case of obliterating it and make people do the correct thing
in their handlers to begin with rather than providing a crutch to fix their
omissions. This may mean adding means of calling further auth related
functions through the req object if there is something missing now,
such as access to ap_note_basic_auth_failure().

Graham
From grahamd at dscpl.com.au  Mon Apr 24 00:10:38 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 24 00:10:46 2006
Subject: &nbsp;[mod_python]&nbsp;session&nbsp;lock
Message-ID: <1145851838.6194@dscpl.user.openhosting.com>

yjfuk wrote ..
> the mod_python startup message in the Apache error log file is :
>  
> [Sat Jan 28 18:40:19 2006] [notice] mod_python: Creating 8 session mutexes
> based on 25 max processes and 30 max threads
>  
> the Apache is configured for worker MPM

You didn't say what operating system you were using.

>From what I gather from mailing list archives, the cause of the problem
for why global mutex locks cannot be acquired is sometimes elusive.

The usual problem is that the operating system only has a limited number of
the types of locks used. In the case of Linux it may be necessary to increase
the number kernel locks available for use. Mod_python will output
error messages warning of an ability to acquire the locks initially, but
not sure if this happens in 3.2.2b that you are using.

Thus, upgrade to mod_python 3.2.8 to begin with, then look carefully
in the log files for messages something like:

       mod_python: We can probably continue, but with diminished ability to process session locks.
       mod_python: Hint: On Linux, the problem may be the number of available semaphores, check 'sysctl kernel.sem'

This would be immediately after that startup message.

So, upgrade mod_python first and if it still persists, look into 'sysctl kernel.sem'
command if your on Linux and increasing number of locks. Else, get back to
us and we can see what else we can come up with.

Graham
From grahamd at dscpl.com.au  Mon Apr 24 00:55:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Apr 24 00:56:01 2006
Subject: [mod_python] PythonAuthzHandler not working
Message-ID: <1145854554.30208@dscpl.user.openhosting.com>

Doug Dixon wrote ..
> Must say I agree. Can you be cloned Graham?
> 
> On 24 Apr 2006, at 14:23, Jim Gallacher wrote:
> 
> > Thanks for your help Graham. The mod_python project is *very* lucky 
> > to have you on board.

I'll take that as a vote of confidence that I'm going the right
direction with changes I have been making on mod_python. With this good
will floating around, maybe it is a good time for me to ram through my
latest proposed change in relation to MODPYTHON-128 and I can finally
mark it resolved. (Insert evil maniacal laugh here) :-)

Anyway, thanks again for the support and encouragement. Some times it is
hard for me to know whether I am doing the right thing or not so
feedback is always welcome.

Graham
From dan.eloff at gmail.com  Mon Apr 24 12:09:02 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Mon Apr 24 12:09:15 2006
Subject: [mod_python] Distinguish http from https?
Message-ID: <4817b6fc0604240909i63f22686s71d1706735ee6bbc@mail.gmail.com>

How can you determine if the request is associated with an http
request or an https request?

I thought maybe one could use unparsed_uri, but I don't think it has
to begin with http or https.

Thanks,
-Dan

From deron.meranda at gmail.com  Mon Apr 24 12:48:30 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Apr 24 12:48:34 2006
Subject: [mod_python] Distinguish http from https?
In-Reply-To: <4817b6fc0604240909i63f22686s71d1706735ee6bbc@mail.gmail.com>
References: <4817b6fc0604240909i63f22686s71d1706735ee6bbc@mail.gmail.com>
Message-ID: <5c06fa770604240948m2c8ab905l8bfb01f256722de4@mail.gmail.com>

On 4/24/06, Dan Eloff <dan.eloff@gmail.com> wrote:
> How can you determine if the request is associated with an http
> request or an https request?
>
> I thought maybe one could use unparsed_uri, but I don't think it has
> to begin with http or https.

When 3.2.9 is released it will have more direct support for all things
TLS/SSL, including a function req.is_https().  You can read up on
what's coming (as well as some info on workarounds until then) by
reading:
   http://issues.apache.org/jira/browse/MODPYTHON-94

Until then you must devise your own methods.  If you're working
in the content phase you can probably just look for the HTTPS
environment variable.

   if req.subprocess_env.get('HTTPS') == 'on':

You may need to call req.add_common_vars() first.  Experiment.

If you're doing this in an auth phase you can't use the above.
--
Deron Meranda

From gah at research.att.com  Tue Apr 25 12:21:25 2006
From: gah at research.att.com (Glenn Hochberg)
Date: Tue Apr 25 12:20:54 2006
Subject: [mod_python] Distinguish http from https?
Message-ID: <EA5A9E59-6ED1-4EB6-B22F-91E52FE6B178@research.att.com>

One (admittedly somewhat klugey) solution is to add:
	PythonOption ssl on
to your ssl VirtualHost container (i.e. typically in ssl.conf), and  
then test for this option in your mod_python code, e.g.:

     url = 'http://'
     if req.get_options().has_key('ssl'):  url = 'https://'

This is what I've been using for some time, but it's great to know  
that something less config-intrusive will be available in future.

--Glenn

On 4/24/06, Deron Meranda <deron.meranda@gmail.com> wrote:

> On 4/24/06, Dan Eloff <dan.eloff@gmail.com> wrote:
>
>> How can you determine if the request is associated with an http
>> request or an https request?
>>
>> I thought maybe one could use unparsed_uri, but I don't think it has
>> to begin with http or https.
>>
>
> When 3.2.9 is released it will have more direct support for all things
> TLS/SSL, including a function req.is_https().  You can read up on
> what's coming (as well as some info on workarounds until then) by
> reading:
>    http://issues.apache.org/jira/browse/MODPYTHON-94
>
> Until then you must devise your own methods.  If you're working
> in the content phase you can probably just look for the HTTPS
> environment variable.
>
>    if req.subprocess_env.get('HTTPS') == 'on':
>
> You may need to call req.add_common_vars() first.  Experiment.
>
> If you're doing this in an auth phase you can't use the above.
> --
> Deron Meranda
>
From deron.meranda at gmail.com  Tue Apr 25 12:49:40 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Apr 25 12:49:54 2006
Subject: [mod_python] Distinguish http from https?
In-Reply-To: <EA5A9E59-6ED1-4EB6-B22F-91E52FE6B178@research.att.com>
References: <EA5A9E59-6ED1-4EB6-B22F-91E52FE6B178@research.att.com>
Message-ID: <5c06fa770604250949h2555c939l59a73926a8eaa897@mail.gmail.com>

On 4/25/06, Glenn Hochberg <gah@research.att.com> wrote:
> One (admittedly somewhat klugey) solution is to add:
>         PythonOption ssl on
> to your ssl VirtualHost container (i.e. typically in ssl.conf), and
> then test for this option in your mod_python code, e.g.:
>
>      url = 'http://'
>      if req.get_options().has_key('ssl'):  url = 'https://'
>
> This is what I've been using for some time, but it's great to know
> that something less config-intrusive will be available in future.

I think you probably meant to put a == 'on' in the if test,
otherwise somebody may be tempted to change the config to
read "off", thinking it would toggle your behavior.

Just to be clear though, that is not a good test for security, which
is what I think the original poster was after--to determine whether or
not the current HTTP connection was tunneled through TLS or SSL.

You can of course use the Apache SSLRequireSSL directive
in your VirtualHost section to enforce SSL only, in which case
then in combination with your PythonOption, it will work as a
quick solution.
--
Deron Meranda

From dan.eloff at gmail.com  Tue Apr 25 14:53:53 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Tue Apr 25 14:53:55 2006
Subject: [mod_python] Authentication and security in general
Message-ID: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>

This is maybe a little off topic, but I got to thinking and reading
about authentication and security.

I learned a few things that concern me and I'd like to discuss them.

Basic Authentication works by sending the username/password on every
request, which means anyone along the route with a packet sniffer (in
my house, or at my work, at the isp, etc) can easily glean the
password and username. Digest Auth is no better, it just means the
crook has to be somewhat technically savy because you can't use the
browser to make requests. Big deal, I was doing that as a teenager.

If you use SSL, then everything get's encypted and it's secure. But
change the https:// to http:// in the browser, or click a link given
to you that does the same and your username/password are transmitted
in the clear again. So a little more complex for an attacker, now he
has to get you to visit a special url. Simply devise a website, use
the location: header, and you can steal a person's login (and thus
probably their identity) if they are currently logged in somewhere and
visit your site AND you are monitoring their communications. That's
extremely unlikely for a random attacker, but easy enough for people
you work with, so using http authentication isn't very secure unless
there is a way to stop browsers from sending your user/pass in the
clear.

Cookies are a little better, you can use secure to make sure they are
only sent over SSL connections, so you have the effect that the user
is logged in only when viewing https:// pages, and not anywhere else.
That complicates things unless you always use SSL for every page a
user views when logged in.

But few places do that. I know gmail doesn't, I'm looking at my SID
right now, attached to an unsecured cookie and passed in the clear.
It's good for two weeks. So a week from now some hacker could check up
on his packet sniffer, and find it gleaned my SID, and gain access to
my gmail account. Perhaps gmail adds a few checks for security, such
as rejecting the session if it comes from a different IP than it
originated from (maybe a good idea for mod_python sessions?). It's
unlikely that this attacker has managed to send the request from my IP
address unless he's at my ISP or he's on the same network (at work, at
a public network when I check my email from my laptop) But that could
be a lot of people. Anybody who can access my email, will with some
ingenuity be able to access almost every website I previously thought
of as secure.

Surely it can't be all that easy? There must be some tricks for
securing things that I'm not aware of. Something I'm misunderstanding?

-Dan

From listspam at flowtheory.net  Tue Apr 25 15:11:45 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Tue Apr 25 15:11:56 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
Message-ID: <1145992305.5880.10.camel@localhost.localdomain>

> Surely it can't be all that easy? There must be some tricks for
> securing things that I'm not aware of. Something I'm misunderstanding?

No. No tricks. If you want to make sure things are as secure as they can
be, you always use TLS and you use cookies -- one to identify them in
TLS-secured pages, the other to identify them in non-TLS secured pages. 
Those sites that don't use SSL/TLS everywhere don't care about spending
the CPU cycles to have practically impervious security. 

-jag

From gah at research.att.com  Tue Apr 25 15:50:44 2006
From: gah at research.att.com (Glenn Hochberg)
Date: Tue Apr 25 15:50:08 2006
Subject: [mod_python] Distinguish http from https?
In-Reply-To: <5c06fa770604250949h2555c939l59a73926a8eaa897@mail.gmail.com>
References: <EA5A9E59-6ED1-4EB6-B22F-91E52FE6B178@research.att.com>
	<5c06fa770604250949h2555c939l59a73926a8eaa897@mail.gmail.com>
Message-ID: <1F0E7867-748D-49D1-A1B7-BC903BFA97A7@research.att.com>

On Apr 25, 2006, at 12:49 PM, Deron Meranda wrote:

> On 4/25/06, Glenn Hochberg <gah@research.att.com> wrote:
>> One (admittedly somewhat klugey) solution is to add:
>>         PythonOption ssl on
>> to your ssl VirtualHost container (i.e. typically in ssl.conf), and
>> then test for this option in your mod_python code, e.g.:
>>
>>      url = 'http://'
>>      if req.get_options().has_key('ssl'):  url = 'https://'
>>
>> This is what I've been using for some time, but it's great to know
>> that something less config-intrusive will be available in future.
>
> I think you probably meant to put a == 'on' in the if test,
> otherwise somebody may be tempted to change the config to
> read "off", thinking it would toggle your behavior.
>
> Just to be clear though, that is not a good test for security, which
> is what I think the original poster was after--to determine whether or
> not the current HTTP connection was tunneled through TLS or SSL.
>
> You can of course use the Apache SSLRequireSSL directive
> in your VirtualHost section to enforce SSL only, in which case
> then in combination with your PythonOption, it will work as a
> quick solution.
> --

To clarify, we have separate VirtualHost's set up for ssl vs. non-ssl  
-- the ssl-vhost is used for port 443, and the non-ssl-vhost for port  
80.  The ssl-vhost does indeed have SSLRequireSSL set as well.

I agree that this is only a "quick solution"--the ability to find out  
directly whether or not TLS/SSL is in use for the connection would  
certainly be preferable.

	-Glenn
From deron.meranda at gmail.com  Tue Apr 25 17:00:19 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Apr 25 17:00:23 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <1145992305.5880.10.camel@localhost.localdomain>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<1145992305.5880.10.camel@localhost.localdomain>
Message-ID: <5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>

On 4/25/06, Joshua Ginsberg <listspam@flowtheory.net> wrote:
> > Surely it can't be all that easy? There must be some tricks for
> > securing things that I'm not aware of. Something I'm misunderstanding?

Proper website security is a very tough thing to get correct.
The history is littered with big companies that have gotten it
wrong: HotMail, Yahoo, Amazon, etc...  Fortunately for many
sites just close enough is good enough.  You really need to
determine what kind of security you need to figure out what to do.

Using cookies instead of (or in addition to) HTTP authentication
(Basic/Digest) is in many cases somewhat better, mainly because
you have better control over the browser memorizing passwords
and that the server can make it easy to log off a user (just try to
log off when using HTTP authentication).  Login forms should set
the autocomplete="off" attribute to try to force browsers not to
remember passwords...although with things like the Google toolbar,
even that doesn't always work.  Using extra devices like captchas
can help prevent bot brute-forcing attacks (with reduced usability).

(In a LAN/Intranet environment you can use other protocols
such as NTLM or Kerberos, which are a bit more secure, but
challenging to configure).

But even cookies aren't the best either.  First you should always
issue encrypted (or stateless) cookies.  They should have domain
restrictions set, as well as SSL-only restrictions (which, btw, see
mod_python issue 108
http://issues.apache.org/jira/browse/MODPYTHON-108).
You may want to disable the TRACE method in Apache to
prevent cookie stealing.

If you want to do any sort of log off or expiration, you should also
include the expiration date in the cookie content (and properly
encrypted or signed), since the actual cookie expiration property
is modifiable by the user.

And if not *everything* is over TLS/SSL, then it's not worth putting
too much effort into it anyway.  (Which, btw, google mail can
operate in all-SSL mode if you start at the page
https://mail.google.com/ when you first log in).  Even then though,
if you're not validating client certificates, TLS/SSL is severely
handicapped already from man-in-the-middle attacks.


What I do (by using mod_python) is to use a cookie-based system.
First a subset of my server (say the /login url) is set to use it's own
private PythonInterpreter and PythonPath; and all of my high-sensitive
stuff goes in there.  It is what draws the login forms and processes
them.  When it logs somebody in, it will issue a cookie whose content
contains the user's id, the expiration timestamp, and a digital
signature (you can use the mod_python's SignedCookie class for this).

Then for the entire website (/ url), excluding /login and /error, I have
a PythonAccessHandler which verifies the cookie, and will cause
an HTTP 401 Unauthorized if it's not correct or has expired.  If
it's okay, then it stuffs information about the user into the req
object so the content handlers can get to it if desired, as well as
setting up and loading the session object (if you use sessions).

The advantage of this is that it protects all my files, even things
like images which are not handled by mod_python.  And since
it's in it's own handler, and forces 401's if somethings wrong,
there's little chance that a broken content handler may accidently
disable security.

There are of course lots of different approaches, and even I have
just glossed over what I do.
--
Deron Meranda

From grahamd at dscpl.com.au  Tue Apr 25 18:37:27 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr 25 18:37:35 2006
Subject: [mod_python] Authentication and security in general
Message-ID: <1146004647.15356@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> Then for the entire website (/ url), excluding /login and /error, I have
> a PythonAccessHandler which verifies the cookie, and will cause
> an HTTP 401 Unauthorized if it's not correct or has expired.  If
> it's okay, then it stuffs information about the user into the req
> object so the content handlers can get to it if desired, as well as
> setting up and loading the session object (if you use sessions).

Just be mindful of the DirectoryIndex fast redirect problem if you are
stuffing user info in the req object from an access handler, as such
information will not actually turn up in the request object in the
content handler phase but will be lost. This is more an Apache
problem than mod_python and it doesn't look like Apache will be
changed real soon. See:

  https://issues.apache.org/jira/browse/MODPYTHON-146
  http://www.mail-archive.com/python-dev@httpd.apache.org/msg01736.html

for more information on what I am rambling about. :-)

Graham
From dan.eloff at gmail.com  Tue Apr 25 18:37:59 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Tue Apr 25 18:38:03 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<1145992305.5880.10.camel@localhost.localdomain>
	<5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
Message-ID: <4817b6fc0604251537o6fb01bc1wa76e27e2b8c9e512@mail.gmail.com>

On 4/25/06, Deron Meranda <deron.meranda@gmail.com> wrote:
> On 4/25/06, Joshua Ginsberg <listspam@flowtheory.net> wrote:
> > > Surely it can't be all that easy? There must be some tricks for
> > > securing things that I'm not aware of. Something I'm misunderstanding?
>
> Proper website security is a very tough thing to get correct.
> The history is littered with big companies that have gotten it
> wrong: HotMail, Yahoo, Amazon, etc...  Fortunately for many
> sites just close enough is good enough.  You really need to
> determine what kind of security you need to figure out what to do.

Ironclad. I collect a lot of personal information about people
(including myself) and I don't want anybody else gaining access to
that.

> Using cookies instead of (or in addition to) HTTP authentication
> (Basic/Digest) is in many cases somewhat better, mainly because
> you have better control over the browser memorizing passwords
> and that the server can make it easy to log off a user (just try to
> log off when using HTTP authentication).

Tell me about. I just implemented a mixed authentication system
yesterday (wrote my own impl of basic auth protocol, because an auth
handler wasn't working well for me) and was annoyed to discover that
even when I logout, the browser logs me right back in. I ditched that
now. I could have saved myself the trouble had I done my research
better to start with.

> If you want to do any sort of log off or expiration, you should also
> include the expiration date in the cookie content (and properly
> encrypted or signed), since the actual cookie expiration property
> is modifiable by the user.

How can anyone cause trouble like that? If a user goes to that much
bother to logout without being logged out, then he deserves to not be
logged out. Maybe on a shared computer it could be an issue, but you
shouldn't have a live session cookie on there anyway after your done
with it or you've got a security hole you could drive a tank through.

> And if not *everything* is over TLS/SSL, then it's not worth putting
> too much effort into it anyway.  (Which, btw, google mail can
> operate in all-SSL mode if you start at the page
> https://mail.google.com/ when you first log in).

Confirmed, I don't think I'd worry about that at home, but I'd
definitely use that feature on public networks.

>Even then though,
> if you're not validating client certificates, TLS/SSL is severely
> handicapped already from man-in-the-middle attacks.

I don't understand that could you please briefly explain it? Why am I
not validating client certificates and how do I do that?

>
> What I do (by using mod_python) is to use a cookie-based system.
<snip>

Sounds very good actually.

Ok how's this for a design:

Login over https, send two cookies, each with a signed SID, one cookie
with secure enabled. Set the secure cookie with the path (say /secure)
where everything needs to be done with https.

If the unsecured cookie is present, and the SID checks out, and the
session is still valid, create the session (so basically the user is
logged in.) http is used preferentially after that. However any pages
where the user can access his information or do anything that you
wouldn't want someone else doing is in /secure and uses https. Mark
the session as 'secure' if the secured cookie is also present and the
SID checks out. Unless the session is marked secure for the /secure
directory, log them out and return them to the login screen. This
should be done in one place prior to handing off to a handler like you
did, so omitting it in a single handler doesn't create a security
hole.

One thing I'd love to know how to do though, is make sure all links
pointing to the /secure directory use https. I use purely relative
links inside my website because it makes moving code from development
server to production server and back really easy. Probably you could
do it with mod_rewrite.

Thanks for sharing your valuable input!

-Dan

From grahamd at dscpl.com.au  Tue Apr 25 18:57:24 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Apr 25 18:57:27 2006
Subject: [mod_python] Authentication and security in general
Message-ID: <1146005844.25895@dscpl.user.openhosting.com>

Dan Eloff wrote ..
> > Using cookies instead of (or in addition to) HTTP authentication
> > (Basic/Digest) is in many cases somewhat better, mainly because
> > you have better control over the browser memorizing passwords
> > and that the server can make it easy to log off a user (just try to
> > log off when using HTTP authentication).
> 
> Tell me about. I just implemented a mixed authentication system
> yesterday (wrote my own impl of basic auth protocol, because an auth
> handler wasn't working well for me) and was annoyed to discover that
> even when I logout, the browser logs me right back in. I ditched that
> now. I could have saved myself the trouble had I done my research
> better to start with.

Not perhaps relevant as suggestions are to perhaps not be using basic
authorisation, but thought the following link may be of interest:

  HTTP Authentication with HTML Forms
  http://www.peej.co.uk/articles/http-auth-with-html-forms.html

This describes how one can use HTML forms with some JavaScript
to implement basic authentication. That is, avoid the browser based
popup login window.

I presume that even though this method is used that the browser
is still remembering the credentials for subsequent requests and thus
is still not providing a logout as such.

Still interesting.

Graham
From listspam at flowtheory.net  Tue Apr 25 19:14:47 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Tue Apr 25 19:14:59 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <4817b6fc0604251537o6fb01bc1wa76e27e2b8c9e512@mail.gmail.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<1145992305.5880.10.camel@localhost.localdomain>
	<5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
	<4817b6fc0604251537o6fb01bc1wa76e27e2b8c9e512@mail.gmail.com>
Message-ID: <1146006887.5880.22.camel@localhost.localdomain>

> Ironclad. I collect a lot of personal information about people
> (including myself) and I don't want anybody else gaining access to
> that.

My suggestion then is that you encrypt in your database the personal
information about people where the key is the SHA1 digest of the user's
password. Make sure, of course, when you store their password, it is
stored using a different family of hashing algorithm. Then when you need
access to their personal information (e.g. credit card information)
prompt them for their password again and use it to decrypt their record.
This is not entirely bulletproof -- anybody who can inspect the running
memory on your server can find this information -- but if your server is
0wn3d you're pretty hosed anyway.


> Login over https, send two cookies, each with a signed SID, one cookie
> with secure enabled. Set the secure cookie with the path (say /secure)
> where everything needs to be done with https.

Generally good practice. It takes some care to ensure that possession of
the insecure SID does not gain the user access to the secure SID or any
information that the secure SID is required for.

> One thing I'd love to know how to do though, is make sure all links
> pointing to the /secure directory use https. I use purely relative
> links inside my website because it makes moving code from development
> server to production server and back really easy. Probably you could
> do it with mod_rewrite.

Investigate the SSLRequireSSL directive.

-jag

From jcea at argo.es  Wed Apr 26 09:14:08 2006
From: jcea at argo.es (Jesus Cea)
Date: Wed Apr 26 09:14:17 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>	<1145992305.5880.10.camel@localhost.localdomain>
	<5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
Message-ID: <444F7220.3010900@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Deron Meranda wrote:
> You may want to disable the TRACE method in Apache to
> prevent cookie stealing.

Uhm?. That was new to me. How TRACE helps to steal cookies?.

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea@jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRE9yIJlgi5GaxT1NAQJddwP+NX0ZC+ZAgXgy1tIECpIYtsSXoG8n0Ov0
Z5QHhSfG/XdN5C7Uywt2/SE5RDNGT43FoxUNfPZ4uFjet7fIN/DYXqe/ep73p0tK
iCJW0WB0UCfwhnb4DLPjOZJoXoGf+uRVLw60qOX2tMWC4E56/oLES6puQSzGa/bm
itzCve4BEig=
=Zmyl
-----END PGP SIGNATURE-----
From deron.meranda at gmail.com  Wed Apr 26 10:34:16 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Apr 26 10:34:54 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <444F7220.3010900@argo.es>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<1145992305.5880.10.camel@localhost.localdomain>
	<5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
	<444F7220.3010900@argo.es>
Message-ID: <5c06fa770604260734o5e3dc004m4a77be22c402f56@mail.gmail.com>

On 4/26/06, Jesus Cea <jcea@argo.es> wrote:
> > You may want to disable the TRACE method in Apache to
> > prevent cookie stealing.
>
> Uhm?. That was new to me. How TRACE helps to steal cookies?.

See http://www.apacheweek.com/issues/03-01-24#news

The basic gist is that the TRACE method (which is built directly
into the Apache internals, you can't handle it with your own
handler for instance) will echo out all of the cookies back to
the caller.

This actually is a "vulnerability" if you will in the HTTP protocol,
so it's not just an Apache thing.  It involves the ability of the
new "AJAX" style javascript to get a copy of any of the cookies
from a site, and can then send those cookies to a different site.
Thus silently stealing your cookies.

The safest thing is to simply disable TRACE.  The notes for
  http://issues.apache.org/jira/browse/MODPYTHON-108
contain related information, especially the HttpOnly cookie
property.  Follow the links mentioned in that note for even
more information on the subject.
--
Deron Meranda

From deron.meranda at gmail.com  Wed Apr 26 10:40:09 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Apr 26 10:40:13 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <5c06fa770604260734o5e3dc004m4a77be22c402f56@mail.gmail.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<1145992305.5880.10.camel@localhost.localdomain>
	<5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
	<444F7220.3010900@argo.es>
	<5c06fa770604260734o5e3dc004m4a77be22c402f56@mail.gmail.com>
Message-ID: <5c06fa770604260740p4db75c5dt59a611626463e9e8@mail.gmail.com>

Oh, I should've mentioned that the latest Apache 2.2 has now
made it much easier to disable TRACE with a new directive.  See

  http://httpd.apache.org/docs/2.2/mod/core.html#traceenable

If you're pre-2.2 though you still must use mod_rewrite.
--
Deron Meranda

From dan.eloff at gmail.com  Wed Apr 26 11:33:44 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Apr 26 11:33:55 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <1146006887.5880.22.camel@localhost.localdomain>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<1145992305.5880.10.camel@localhost.localdomain>
	<5c06fa770604251400p58187dbdibe9557f462a76782@mail.gmail.com>
	<4817b6fc0604251537o6fb01bc1wa76e27e2b8c9e512@mail.gmail.com>
	<1146006887.5880.22.camel@localhost.localdomain>
Message-ID: <4817b6fc0604260833x441483fbj792e8b3a30e6bdd6@mail.gmail.com>

On 4/25/06, Joshua Ginsberg <listspam@flowtheory.net> wrote:
> My suggestion then is that you encrypt in your database the personal
> information about people where the key is the SHA1 digest of the user's
> password. Make sure, of course, when you store their password, it is
> stored using a different family of hashing algorithm. Then when you need
> access to their personal information (e.g. credit card information)
> prompt them for their password again and use it to decrypt their record.

I wish I could do that, but my website needs access to that
information while the user is not online, so I can't encrypt it.
However, things like credit cards I can encrypt (and wouldn't feel
safe storing them without doing that)

> Generally good practice. It takes some care to ensure that possession of
> the insecure SID does not gain the user access to the secure SID or any
> information that the secure SID is required for.
>

Yes, I use a single handler as a dispatcher for my site, so I'm going
to put the logic in there before control get's passed onto the rest of
the site. If req.uri begins with /secure they will get redirected to
the login screen unless the secure session cookie exists and passes
the tests. Then It's just up to me to put everything important in the
/secure directory.

>
> Investigate the SSLRequireSSL directive.
>

Thanks!

-Dan

From dan.eloff at gmail.com  Wed Apr 26 11:37:44 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Apr 26 11:37:55 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <444F067D.1010806@natlab.research.philips.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<444F067D.1010806@natlab.research.philips.com>
Message-ID: <4817b6fc0604260837g418b3da6o5604599b6d1cebf2@mail.gmail.com>

> Digest auth protects your password very well (it's not sent over the network at all). It does not
> protect the contents or URL or any other part of the request like SSL does. It is very hard to
> calculate a password based on its MD5 hash alone.

Yes, it protects the password perfectly. But that just stops a person
from using your username and password to login with. It's remarkably
easy to just send the username and digest and gain access to all the
same things. Most people who would have the skills to glean your
username/password from the communications would know how to do this.
So it only offers the illusion of security.

-Dan

From nicolas at lehuen.com  Wed Apr 26 14:24:55 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Wed Apr 26 14:25:03 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <4817b6fc0604260837g418b3da6o5604599b6d1cebf2@mail.gmail.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<444F067D.1010806@natlab.research.philips.com>
	<4817b6fc0604260837g418b3da6o5604599b6d1cebf2@mail.gmail.com>
Message-ID: <c298f2d70604261124w5f90e013gac8c530d7f4a1aec@mail.gmail.com>

2006/4/26, Dan Eloff <dan.eloff@gmail.com>:
>
> > Digest auth protects your password very well (it's not sent over the
> network at all). It does not
> > protect the contents or URL or any other part of the request like SSL
> does. It is very hard to
> > calculate a password based on its MD5 hash alone.
>
> Yes, it protects the password perfectly. But that just stops a person
> from using your username and password to login with. It's remarkably
> easy to just send the username and digest and gain access to all the
> same things. Most people who would have the skills to glean your
> username/password from the communications would know how to do this.
> So it only offers the illusion of security.
>
> -Dan
>

There is a double nonce system used to "salt" the MD5 and prevent replays.
See

http://en.wikipedia.org/wiki/Digest_access_authentication

And the RFC, of course.

I'm no security expert, but judging from the protocol, it seems that digest
auth is pretty safe and well thought - except that it doesn't hide the rest
of the HTTP headers and that MD5 has shown serious weaknesses.

Regards,
Nicolas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060426/0e8ce9ea/attachment.html
From dan.eloff at gmail.com  Wed Apr 26 19:28:37 2006
From: dan.eloff at gmail.com (Dan Eloff)
Date: Wed Apr 26 19:28:42 2006
Subject: [mod_python] Authentication and security in general
In-Reply-To: <c298f2d70604261124w5f90e013gac8c530d7f4a1aec@mail.gmail.com>
References: <4817b6fc0604251153o4486b2car736f6df469f74314@mail.gmail.com>
	<444F067D.1010806@natlab.research.philips.com>
	<4817b6fc0604260837g418b3da6o5604599b6d1cebf2@mail.gmail.com>
	<c298f2d70604261124w5f90e013gac8c530d7f4a1aec@mail.gmail.com>
Message-ID: <4817b6fc0604261628s27a7b029jc88d187596d72387@mail.gmail.com>

You're right. I read this in the apache docs:

"Next, with regard to security considerations, you should understand
two things. Although your password is not passed in the clear, all of
your data is, and so this is a rather small measure of security. And,
although your password is not really sent at all, but a digest form of
it, someone very familiar with the workings of HTTP could use that
information - just your digested password - and use that to gain
access to the content, since that digested password is really all the
information required to access the web site."

But it was for version 1.3, so maybe it's dated or just plain
incorrect. It looks pretty secure anyway.

But of course the best is still SSL/TLS

-Dan

On 4/26/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
> 2006/4/26, Dan Eloff <dan.eloff@gmail.com>:
>
> > > Digest auth protects your password very well (it's not sent over the
> network at all). It does not
> > > protect the contents or URL or any other part of the request like SSL
> does. It is very hard to
> > > calculate a password based on its MD5 hash alone.
> >
> > Yes, it protects the password perfectly. But that just stops a person
> > from using your username and password to login with. It's remarkably
> > easy to just send the username and digest and gain access to all the
> > same things. Most people who would have the skills to glean your
> > username/password from the communications would know how to do this.
> > So it only offers the illusion of security.
> >
> > -Dan
> >
>
> There is a double nonce system used to "salt" the MD5 and prevent replays.
> See
>
>  http://en.wikipedia.org/wiki/Digest_access_authentication
>
>  And the RFC, of course.
>
> I'm no security expert, but judging from the protocol, it seems that digest
> auth is pretty safe and well thought - except that it doesn't hide the rest
> of the HTTP headers and that MD5 has shown serious weaknesses.
>
> Regards,
>  Nicolas
>

From crougeau at dining.umd.edu  Thu Apr 27 11:59:16 2006
From: crougeau at dining.umd.edu (Christian Rougeau)
Date: Thu Apr 27 11:59:23 2006
Subject: [mod_python] Newbie Question from a newbie - mod_python/Apache 1.3
	accessing Python 2.4 libraries
Message-ID: <499F4FDA0A45E44493DB30A925470FA5B3A620@icarus.DSUSRS.dining.umd.edu>

Hi. I am brand spankin' new to this. 

Here's my question. 



If we install mod_python onto our apache 1.3 server running on RHEL4,
can I also access regular Python 2.4's libraries that are also installed
on the OS? 
Am I to use a certain handler in order to do this, or does handlers
matter , in this situation? 

Also, I assume I can use my mod_perl right along side my mod_python AND
Cold Fusion, with no problems / interferences............RIGHT? 


Thanks python community! 
CTR

NEWNEWNEW!! 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060427/fd94e8c1/attachment.html
From list at joreybump.com  Thu Apr 27 12:21:59 2006
From: list at joreybump.com (Jorey Bump)
Date: Thu Apr 27 12:22:17 2006
Subject: [mod_python] Newbie Question from a newbie - mod_python/Apache
	1.3	accessing Python 2.4 libraries
In-Reply-To: <499F4FDA0A45E44493DB30A925470FA5B3A620@icarus.DSUSRS.dining.umd.edu>
References: <499F4FDA0A45E44493DB30A925470FA5B3A620@icarus.DSUSRS.dining.umd.edu>
Message-ID: <4450EFA7.50101@joreybump.com>

Christian Rougeau wrote:

> If we install mod_python onto our apache 1.3 server running on RHEL4, 
> can I also access regular Python 2.4's libraries that are also installed 
> on the OS?

mod_python isn't python. It uses whatever python you have installed on 
your system (hopefully you have only one). So the answer is yes.

> Am I to use a certain handler in order to do this, or does handlers 
> matter , in this situation?

It's all about handlers. Use the ones that come with mod_python, get one 
from a third party, or write your own. You must use a handler, some 
people use more than a few, depending on the need.

> Also, I assume I can use my mod_perl right along side my mod_python AND 
> Cold Fusion, with no problems / interferences????RIGHT?

If incompatible libraries were used, apache could crash. For example, 
mod_python doesn't have builtin MySQL support. You need to install a 
python module like MySQLdb, most likely compiling it against your 
system's mysql libraries. However, other apps like PHP and possibly 
ColdFusion may have been compiled against a different mysql version. If 
  apps in these different languages attempt to use mysql, apache may 
crash. This also applies to some other things, like expat. It's hard to 
debug when it happens, and it also makes rolling your own difficult on 
some platforms. Be warned.

A tip: Don't use apache 1.3 because it limits you to an obsolete version 
of mod_python. I still run some production servers with this setup, but 
as a newbie, you will benefit greatly from the newest versions of 
mod_python that will only run on apache 2.x.x. Does RHEL4 provide more 
recent versions?


From deron.meranda at gmail.com  Thu Apr 27 12:28:34 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Thu Apr 27 12:28:43 2006
Subject: [mod_python] Newbie Question from a newbie - mod_python/Apache
	1.3 accessing Python 2.4 libraries
In-Reply-To: <499F4FDA0A45E44493DB30A925470FA5B3A620@icarus.DSUSRS.dining.umd.edu>
References: <499F4FDA0A45E44493DB30A925470FA5B3A620@icarus.DSUSRS.dining.umd.edu>
Message-ID: <5c06fa770604270928h25163428sd14abc6dddaf9c@mail.gmail.com>

On 4/27/06, Christian Rougeau <crougeau@dining.umd.edu> wrote:
> If we install mod_python onto our apache 1.3 server running on RHEL4, can I
> also access regular Python 2.4's libraries that are also installed on the
> OS?

That depend's on what version of Python was used to "compile"
the mod_python module.  If Python 2.4 compiled your mod_python,
then yes, your mod_python handlers have full access to the
Python 2.4 libraries.

> Am I to use a certain handler in order to do this, or does handlers matter ,
> in this situation?

No, it depends on which Python executable you use when you
build/install mod_python.  It can't be changed, short of recompiling.


> Also, I assume I can use my mod_perl right along side my mod_python AND Cold
> Fusion, with no problems / interferences????RIGHT?

It's hard to answer that question.  In general, yes, different modules
will safely co-exist.  But that can fail in practice, usually because two
of the Apache modules themselves have dependencies on some
additional library which is in common.  MySQL is a common case.
It could be that your Perl interface to MySQL uses a particular
MySQL library version (and hence mod_perl is dependent upon
it), but your Python interface to MySQL uses a different version,
and hence your mod_python modules would too.  Although it's
usually PHP which shows up most often as an offender.
--
Deron Meranda

From deron.meranda at gmail.com  Thu Apr 27 12:35:53 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Thu Apr 27 12:35:58 2006
Subject: [mod_python] Newbie Question from a newbie - mod_python/Apache
	1.3 accessing Python 2.4 libraries
In-Reply-To: <4450EFA7.50101@joreybump.com>
References: <499F4FDA0A45E44493DB30A925470FA5B3A620@icarus.DSUSRS.dining.umd.edu>
	<4450EFA7.50101@joreybump.com>
Message-ID: <5c06fa770604270935v4d4d33cewd21b84ace095579e@mail.gmail.com>

> Does RHEL4 provide more recent versions?

I'm running CentOS 4.3 on one box (which is a clone of RHEL 4.3)
and it has apache httpd 2.0.52
--
Deron Meranda

From stefanglaus at gmail.com  Thu Apr 27 13:24:48 2006
From: stefanglaus at gmail.com (Stefan Glaus)
Date: Thu Apr 27 13:24:52 2006
Subject: [mod_python] DbmSession
Message-ID: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>

I'm trying to use the DbmSession class. MemorySession works (for a
single process) but whenever I try using DbmSession, no cookies are
being set in my browser.. Is there something I'm overlooking here?

From list at joreybump.com  Thu Apr 27 14:57:55 2006
From: list at joreybump.com (Jorey Bump)
Date: Thu Apr 27 14:58:03 2006
Subject: [mod_python] Newbie Question from a newbie - mod_python/Apache
	1.3	accessing Python 2.4 libraries
In-Reply-To: <499F4FDA0A45E44493DB30A925470FA5B3A66C@icarus.DSUSRS.dining.umd.edu>
References: <499F4FDA0A45E44493DB30A925470FA5B3A66C@icarus.DSUSRS.dining.umd.edu>
Message-ID: <44511433.8010608@joreybump.com>

It's helpful to others to keep responses on the list. :)

Christian Rougeau wrote:
> Yes, it has apache 2, of course. But we don't use it for in-house stuff,
> presently. 

Sorry, I meant does it have a 3.x version of mod_python to work with its 
apache 2.x? This isn't trivial, so it's possible they only provide a 
2.7.x mod_python RPM, which only works with apache 1.3.x. You can 
uninstall the RPM and compile your own mod_python 3.x against apache 
2.x, but I don't recommend that you attempt to install both versions of 
mod_python (unless RH provides them and has worked some magic to make it 
safe).

> Why? 

A tremendous amount of development activity has (and is) going into 
improving mod_python. The dust hasn't settled, but there are some very 
nice features in the newer versions, many of them aimed at newbies. You 
are also likely to get better support here if you run into problems. 
Questions about mod_python 2.7.x have fallen dramatically in the last 
few months, now that older distributions that included it are being 
replaced and development has ceased on that version.

> I have been excessively warned against using Apache 2 when I asked my
> former colleagues, due to the fact that it doesn't play very nice with
> the mod_perl stuff that we have set up on one server. So, I was fine
> with going with apache 1.3 SSL. 

Apache 1.3 is a champ, and beloved by many admins. I've only recently 
upgraded, but I skip to apache 2.2 in most cases. You can easily use 
multiple versions of apache on a single server, especially if you 
compile your own. You might also find that mod_perl has caught up to the 
newer versions of apache.

> However, my thought now is to have both halves of the website on one
> box, with both Apache 2/CF/mod_python on one side (CF b/c that's what
> the site is in currently, and what the daily developer knows, and, hey,
> I know it too.)  

I've read that CF performs dramatically better with apache 2.0, so I 
didn't even consider 1.3 when I set up my CF server.

> and Apache 1.3 SSL/mod_perl enabled residing on the
> same box, different directory. 
> 
> Thoughts on this? 

Apache's so flexible, you can easily do this. You can even proxy 
connections to other instances, if you need to remain within the same 
public-facing host. You can migrate your other apps to the newer apache 
at a comfortable pace, so it's a reasonable plan.

From crougeau at dining.umd.edu  Thu Apr 27 15:02:11 2006
From: crougeau at dining.umd.edu (Christian Rougeau)
Date: Thu Apr 27 15:02:14 2006
Subject: FW: [mod_python] Newbie Question from a newbie - mod_python/Apache
	1.3	accessing Python 2.4 libraries
Message-ID: <499F4FDA0A45E44493DB30A925470FA5B3A68F@icarus.DSUSRS.dining.umd.edu>

 forwarded back to the list....

-----Original Message-----
From: Jorey Bump [mailto:list@joreybump.com] 
Sent: Thursday, April 27, 2006 2:58 PM
To: Christian Rougeau
Cc: mod_python user mailing list
Subject: Re: [mod_python] Newbie Question from a newbie -
mod_python/Apache 1.3 accessing Python 2.4 libraries

It's helpful to others to keep responses on the list. :)

Christian Rougeau wrote:
> Yes, it has apache 2, of course. But we don't use it for in-house 
> stuff, presently.

Sorry, I meant does it have a 3.x version of mod_python to work with its
apache 2.x? This isn't trivial, so it's possible they only provide a
2.7.x mod_python RPM, which only works with apache 1.3.x. You can
uninstall the RPM and compile your own mod_python 3.x against apache
2.x, but I don't recommend that you attempt to install both versions of
mod_python (unless RH provides them and has worked some magic to make it
safe).

> Why? 

A tremendous amount of development activity has (and is) going into
improving mod_python. The dust hasn't settled, but there are some very
nice features in the newer versions, many of them aimed at newbies. You
are also likely to get better support here if you run into problems. 
Questions about mod_python 2.7.x have fallen dramatically in the last
few months, now that older distributions that included it are being
replaced and development has ceased on that version.

> I have been excessively warned against using Apache 2 when I asked my 
> former colleagues, due to the fact that it doesn't play very nice with

> the mod_perl stuff that we have set up on one server. So, I was fine 
> with going with apache 1.3 SSL.

Apache 1.3 is a champ, and beloved by many admins. I've only recently
upgraded, but I skip to apache 2.2 in most cases. You can easily use
multiple versions of apache on a single server, especially if you
compile your own. You might also find that mod_perl has caught up to the
newer versions of apache.

> However, my thought now is to have both halves of the website on one 
> box, with both Apache 2/CF/mod_python on one side (CF b/c that's what 
> the site is in currently, and what the daily developer knows, and, 
> hey, I know it too.)

I've read that CF performs dramatically better with apache 2.0, so I
didn't even consider 1.3 when I set up my CF server.

> and Apache 1.3 SSL/mod_perl enabled residing on the same box, 
> different directory.
> 
> Thoughts on this? 

Apache's so flexible, you can easily do this. You can even proxy
connections to other instances, if you need to remain within the same
public-facing host. You can migrate your other apps to the newer apache
at a comfortable pace, so it's a reasonable plan.


From nogradi at gmail.com  Fri Apr 28 04:28:01 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Fri Apr 28 04:28:09 2006
Subject: [mod_python] Re: DbmSession
In-Reply-To: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>
References: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>
Message-ID: <5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>

> I'm trying to use the DbmSession class. MemorySession works (for a
> single process) but whenever I try using DbmSession, no cookies are
> being set in my browser.. Is there something I'm overlooking here?

Please post the (minimal) code that you use, that way it will be
easier to tell what might go wrong. For example: are the db files
created on your server where the session data should be stored?

From yjfuk at 126.com  Fri Apr 28 05:17:01 2006
From: yjfuk at 126.com (yjfuk)
Date: Fri Apr 28 05:17:32 2006
Subject: &nbsp;Re:&nbsp;[mod_python]&nbsp;s
 ession&nbsp;lock
Message-ID: <4451DD8D.000011.20430@m69.126.com>

I think it's my code error,but I am not sure.
My apapche conf is like this :
SetHandler mod_python
PythonHandler mod_python.publisher
 
I use psp as my template.I confuse that the variable seems to share the values among the pages.
e.g. 
a page named index.py contain functions as below:
 
test=0
def a(req):
    global test
    req.write(str(test))
    test=test+1
 
def b(req):
    global test

    req.write(str(test))
    test=test+1
 
when you visit the page http://localhost/index/a it print 0,then visit page http://localhost/index/b
it print 1 as if the variable 'test' is pass vis get or post method.why?
is it the cache trick? 
 
 



-----原始邮件-----
发件人:"Graham Dumpleton" 
发送时间:2006-04-24 12:10:38
收件人:"yjfuk" 
抄送:"mod_python@modpython..." 
主题:Re: Re: [mod_python] session lock


yjfuk wrote ..
> the mod_python startup message in the Apache error log file is :
>  
> [Sat Jan 28 18:40:19 2006] [notice] mod_python: Creating 8 session mutexes
> based on 25 max processes and 30 max threads
>  
> the Apache is configured for worker MPM

You didn't say what operating system you were using.

From what I gather from mailing list archives, the cause of the problem
for why global mutex locks cannot be acquired is sometimes elusive.

The usual problem is that the operating system only has a limited number of
the types of locks used. In the case of Linux it may be necessary to increase
the number kernel locks available for use. Mod_python will output
error messages warning of an ability to acquire the locks initially, but
not sure if this happens in 3.2.2b that you are using.

Thus, upgrade to mod_python 3.2.8 to begin with, then look carefully
in the log files for messages something like:

       mod_python: We can probably continue, but with diminished ability to process session locks.
       mod_python: Hint: On Linux, the problem may be the number of available semaphores, check 'sysctl kernel.sem'

This would be immediately after that startup message.

So, upgrade mod_python first and if it still persists, look into 'sysctl kernel.sem'
command if your on Linux and increasing number of locks. Else, get back to
us and we can see what else we can come up with.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060428/89375069/attachment-0001.html
From yjfuk at 126.com  Fri Apr 28 05:30:40 2006
From: yjfuk at 126.com (yjfuk)
Date: Fri Apr 28 05:31:15 2006
Subject: &nbsp;Re:&nbsp;[mod_python]&nbsp;s
 ession&nbsp;lock
Message-ID: <4451E0C0.000037.29003@m67.126.com>

in the mod_python's Session module ,I analyse the code.
when it use sid ,it invoke lock method .why does it lock sid?
when it unlock sid? end of the request it auto unlock?
 
 
 



-----原始邮件-----
发件人:"Graham Dumpleton" 
发送时间:2006-04-24 12:10:38
收件人:"yjfuk" 
抄送:"mod_python@modpython..." 
主题:Re: Re: [mod_python] session lock


yjfuk wrote ..
> the mod_python startup message in the Apache error log file is :
>  
> [Sat Jan 28 18:40:19 2006] [notice] mod_python: Creating 8 session mutexes
> based on 25 max processes and 30 max threads
>  
> the Apache is configured for worker MPM

You didn't say what operating system you were using.

From what I gather from mailing list archives, the cause of the problem
for why global mutex locks cannot be acquired is sometimes elusive.

The usual problem is that the operating system only has a limited number of
the types of locks used. In the case of Linux it may be necessary to increase
the number kernel locks available for use. Mod_python will output
error messages warning of an ability to acquire the locks initially, but
not sure if this happens in 3.2.2b that you are using.

Thus, upgrade to mod_python 3.2.8 to begin with, then look carefully
in the log files for messages something like:

       mod_python: We can probably continue, but with diminished ability to process session locks.
       mod_python: Hint: On Linux, the problem may be the number of available semaphores, check 'sysctl kernel.sem'

This would be immediately after that startup message.

So, upgrade mod_python first and if it still persists, look into 'sysctl kernel.sem'
command if your on Linux and increasing number of locks. Else, get back to
us and we can see what else we can come up with.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060428/7d05c79a/attachment.html
From siroky at dasir.net  Fri Apr 28 07:32:07 2006
From: siroky at dasir.net (David Siroky (net))
Date: Fri Apr 28 07:32:36 2006
Subject: [mod_python] PythonPath without application path
Message-ID: <1146223927.7304.11.camel@localhost>

Hi!

I have an application which uses another library located in a special
directory and I used
PythonPath "['/mujbin/python_modules'] + sys.path"
to access the library for imports. Everything went well but suddenly it
stopped working:

Mod_python error: "PythonHandler apphandler"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
    log=debug)

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 454, in import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named apphandler

where apphandler.py is the entry point for my application. My .htaccess
(in the same directory as apphandler.py):

SetHandler mod_python
PythonDebug On
PythonHandler apphandler
PythonAutoReload On
PythonPath "['/mujbin/python_modules'] + sys.path"

When I remove the PythonPath the apphandler is imported (but I need the
library). I printed the sys.path and now it contains the
'/mujbin/python_modules' but no more the directory with my app.

How is that possible? I guess it some stupid thing but I don't remember
changing anything that can possibly alter the behavior. I'm lost.

Thank you.

David


From jpg at jgassociates.ca  Fri Apr 28 08:58:16 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr 28 08:58:18 2006
Subject: &nbsp;Re:&nbsp;[mod_python]&nbsp;s ession&nbsp;lock
In-Reply-To: <4451DD8D.000011.20430@m69.126.com>
References: <4451DD8D.000011.20430@m69.126.com>
Message-ID: <44521168.6070102@jgassociates.ca>

yjfuk wrote:
> I think it's my code error,but I am not sure.
> My apapche conf is like this :
> SetHandler mod_python
> PythonHandler mod_python.publisher
>  
> I use psp as my template.I confuse that the variable seems to share the values among the pages.
> e.g. 
> a page named index.py contain functions as below:
>  
> test=0
> def a(req):
>     global test
>     req.write(str(test))
>     test=test+1
>  
> def b(req):
>     global test
> 
>     req.write(str(test))
>     test=test+1
>  
> when you visit the page http://localhost/index/a it print 0,then visit page http://localhost/index/b
> it print 1 as if the variable 'test' is pass vis get or post method.why?
> is it the cache trick? 

It's not a trick, it's the way python works. The interpreter created by 
mod_python is persistent between requests and you increment the value of 
test in your code.

However you can't depend on the value of test for apache-mpm's such as 
forked and worker. You'll have multiple interpreters with these mpm's 
and each interpreter will get it's own copy of the data. Which 
interpreter will handle a particular request so if you visit 
http://localhost/index/a 10 times you might see this seemingly random 
pattern:

0
1
0
2
1
3
0
1
4
3

Unless you fully understand this you should avoid variables defined at 
the module level for anything other than constants.

Jim
From grahamd at dscpl.com.au  Fri Apr 28 08:58:29 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 28 08:59:04 2006
Subject: [mod_python] PythonPath without application path
In-Reply-To: <1146223927.7304.11.camel@localhost>
References: <1146223927.7304.11.camel@localhost>
Message-ID: <896efd4f99b5e56ff4df2a93d556bd84@dscpl.com.au>

Setting PythonPath stops mod_python from looking in the directory
the directive is defined for. Thus, when you set PythonPath, also
add into it the directory the handler is in.

The new importer being developed for mod_python 3.3 will solve
this problem and many others. You may want to read:

   http://www.dscpl.com.au/articles/modpython-003.html

so you are aware of various other issues that exist as well.

Graham

On 28/04/2006, at 9:32 PM, David Siroky (net) wrote:

> Hi!
>
> I have an application which uses another library located in a special
> directory and I used
> PythonPath "['/mujbin/python_modules'] + sys.path"
> to access the library for imports. Everything went well but suddenly it
> stopped working:
>
> Mod_python error: "PythonHandler apphandler"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 
> 287, in HandlerDispatch
>     log=debug)
>
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 
> 454, in import_module
>     f, p, d = imp.find_module(parts[i], path)
>
> ImportError: No module named apphandler
>
> where apphandler.py is the entry point for my application. My .htaccess
> (in the same directory as apphandler.py):
>
> SetHandler mod_python
> PythonDebug On
> PythonHandler apphandler
> PythonAutoReload On
> PythonPath "['/mujbin/python_modules'] + sys.path"
>
> When I remove the PythonPath the apphandler is imported (but I need the
> library). I printed the sys.path and now it contains the
> '/mujbin/python_modules' but no more the directory with my app.
>
> How is that possible? I guess it some stupid thing but I don't remember
> changing anything that can possibly alter the behavior. I'm lost.
>
> Thank you.
>
> David
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Apr 28 09:01:56 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 28 09:02:13 2006
Subject: &nbsp;Re:&nbsp;[mod_python]&nbsp;s ession&nbsp;lock
In-Reply-To: <44521168.6070102@jgassociates.ca>
References: <4451DD8D.000011.20430@m69.126.com>
	<44521168.6070102@jgassociates.ca>
Message-ID: <fe31898f6ae6444abdd99b81d7cb44f8@dscpl.com.au>

Consider reading:

   http://www.dscpl.com.au/articles/modpython-004.html

This will give you some more background information on what Jim
is talking about in respect of MPMs, interpreters models etc.

Access to globals in your module code also wasn't thread safe
and could not do quite what you expect in a multithread MPM.

Graham

On 28/04/2006, at 10:58 PM, Jim Gallacher wrote:

> yjfuk wrote:
>> I think it's my code error,but I am not sure.
>> My apapche conf is like this :
>> SetHandler mod_python
>> PythonHandler mod_python.publisher
>>  I use psp as my template.I confuse that the variable seems to share 
>> the values among the pages.
>> e.g. a page named index.py contain functions as below:
>>  test=0
>> def a(req):
>>     global test
>>     req.write(str(test))
>>     test=test+1
>>  def b(req):
>>     global test
>>     req.write(str(test))
>>     test=test+1
>>  when you visit the page http://localhost/index/a it print 0,then 
>> visit page http://localhost/index/b
>> it print 1 as if the variable 'test' is pass vis get or post 
>> method.why?
>> is it the cache trick?
>
> It's not a trick, it's the way python works. The interpreter created 
> by mod_python is persistent between requests and you increment the 
> value of test in your code.
>
> However you can't depend on the value of test for apache-mpm's such as 
> forked and worker. You'll have multiple interpreters with these mpm's 
> and each interpreter will get it's own copy of the data. Which 
> interpreter will handle a particular request so if you visit 
> http://localhost/index/a 10 times you might see this seemingly random 
> pattern:
>
> 0
> 1
> 0
> 2
> 1
> 3
> 0
> 1
> 4
> 3
>
> Unless you fully understand this you should avoid variables defined at 
> the module level for anything other than constants.
>
> Jim

From jpg at jgassociates.ca  Fri Apr 28 09:04:02 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr 28 09:04:01 2006
Subject: &nbsp;Re:&nbsp;[mod_python]&nbsp;s ession&nbsp;lock
In-Reply-To: <4451E0C0.000037.29003@m67.126.com>
References: <4451E0C0.000037.29003@m67.126.com>
Message-ID: <445212C2.60205@jgassociates.ca>

yjfuk wrote:
> in the mod_python's Session module ,I analyse the code.
> when it use sid ,it invoke lock method .why does it lock sid?
> when it unlock sid? end of the request it auto unlock?

The session is locked so that the session data is lost or corrupted by 2 
  requests with the same sid arriving almost simultaneously, as might 
happed with page frames, or if the user has multiple browser windows or 
tabs open to the same website.

When the session is locked a cleanup is registered to unlock the session 
when the request is complete.

Jim

From jpg at jgassociates.ca  Fri Apr 28 09:08:00 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr 28 09:07:57 2006
Subject: [mod_python] Re: DbmSession
In-Reply-To: <5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>
References: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>
	<5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>
Message-ID: <445213B0.8090505@jgassociates.ca>

Daniel Nogradi wrote:
>> I'm trying to use the DbmSession class. MemorySession works (for a
>> single process) but whenever I try using DbmSession, no cookies are
>> being set in my browser.. Is there something I'm overlooking here?
> 
> Please post the (minimal) code that you use, that way it will be
> easier to tell what might go wrong. For example: are the db files
> created on your server where the session data should be stored?

Also, your OS and mod_python version would be helpful. :)

Jim
From stefanglaus at gmail.com  Fri Apr 28 10:35:27 2006
From: stefanglaus at gmail.com (Stefan Glaus)
Date: Fri Apr 28 10:35:31 2006
Subject: [mod_python] Re: DbmSession
In-Reply-To: <445213B0.8090505@jgassociates.ca>
References: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>
	<5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>
	<445213B0.8090505@jgassociates.ca>
Message-ID: <82105edc0604280735y36e7ed37m4135ee3dcfa12403@mail.gmail.com>

The relevant code is as follows:

session = Session.Session(req)
if session.is_new():
	req.write("new")
	
req.write(session.id() + '<BR><BR>')


I'm running this on apache 2.0 with python 2.4.2 and mod_python 3.2

The code works now, it is setting cookies but I don't know what
changed. Sorry for the lack of detail in the original post... first
time :)


Thanks for your reply and if I figure out what I've changed in order
for it to work, I'll follow up



On 4/28/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Daniel Nogradi wrote:
> >> I'm trying to use the DbmSession class. MemorySession works (for a
> >> single process) but whenever I try using DbmSession, no cookies are
> >> being set in my browser.. Is there something I'm overlooking here?
> >
> > Please post the (minimal) code that you use, that way it will be
> > easier to tell what might go wrong. For example: are the db files
> > created on your server where the session data should be stored?
>
> Also, your OS and mod_python version would be helpful. :)
>
> Jim
>

From alejmsg at adinet.com.uy  Fri Apr 28 13:00:41 2006
From: alejmsg at adinet.com.uy (Alejandro Michelin Salomon ( Adinet ))
Date: Fri Apr 28 13:00:06 2006
Subject: [mod_python] Configuring Apache Server With Mod Python
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAh0jBQOISH0CP8t92FhFchgEAAAAA@adinet.com.uy>

Hi:

I am new to python.

I need same help.

I add this line to httpd.conf --> LoadModule python_module
modules/mod_python.so

And then :

Apache DocumentRoot is "D:/webroot"

<Directory "D:/webroot/test">

        AddHandler mod_python .py
        PythonHandler mptest
        PythonDebug On 
</Directory>

I runs --> localhost/test/mptest.py

Runs ok a test

When try tu run the same file in localhost/mptest.py

The apache only prints python code in the page.

Who to run others .py files out of localhost/test, or configuring modpython
to work in all subdirectories under 
localhost structure?

Thanks in advance

Alejandro Michelin Salomon
Porto Alegre
Brasil

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006
 



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006

From jpg at jgassociates.ca  Fri Apr 28 13:13:03 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Apr 28 13:11:55 2006
Subject: [mod_python] Configuring Apache Server With Mod Python
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAh0jBQOISH0CP8t92FhFchgEAAAAA@adinet.com.uy>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAh0jBQOISH0CP8t92FhFchgEAAAAA@adinet.com.uy>
Message-ID: <44524D1F.2090408@jgassociates.ca>

Alejandro Michelin Salomon ( Adinet ) wrote:
> Hi:
> 
> I am new to python.
> 
> I need same help.
> 
> I add this line to httpd.conf --> LoadModule python_module
> modules/mod_python.so
> 
> And then :
> 
> Apache DocumentRoot is "D:/webroot"
> 
> <Directory "D:/webroot/test">
> 
>         AddHandler mod_python .py
>         PythonHandler mptest
>         PythonDebug On 
> </Directory>
> 
> I runs --> localhost/test/mptest.py
> 
> Runs ok a test
> 
> When try tu run the same file in localhost/mptest.py
> 
> The apache only prints python code in the page.
> 
> Who to run others .py files out of localhost/test, or configuring modpython
> to work in all subdirectories under 
> localhost structure?

You could use the publisher handler and configure your webroot directory 
accordingly:

<Directory "D:/webroot">
          AddHandler mod_python .py
          PythonHandler mod_python.publisher
          PythonDebug On
</Directory>

Check the documentation for more information on publisher.

Jim
From alejmsg at adinet.com.uy  Fri Apr 28 13:23:43 2006
From: alejmsg at adinet.com.uy (Alejandro Michelin Salomon ( Adinet ))
Date: Fri Apr 28 13:23:04 2006
Subject: RES: [mod_python] Configuring Apache Server With Mod Python
In-Reply-To: <44524D1F.2090408@jgassociates.ca>
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAzGwiHQaLLkqgyFawQcht7QEAAAAA@adinet.com.uy>



-->-----Mensagem original-----
-->De: Jim Gallacher [mailto:jpg@jgassociates.ca] 
-->Enviada em: sexta-feira, 28 de abril de 2006 14:13
-->Para: Alejandro Michelin Salomon ( Adinet )
-->Cc: Mod_Python@Modpython. Org
-->Assunto: Re: [mod_python] Configuring Apache Server With Mod Python
-->
-->
-->Alejandro Michelin Salomon ( Adinet ) wrote:
-->> Hi:
-->> 
-->> I am new to python.
-->> 
-->> I need same help.
-->> 
-->> I add this line to httpd.conf --> LoadModule python_module 
-->> modules/mod_python.so
-->> 
-->> And then :
-->> 
-->> Apache DocumentRoot is "D:/webroot"
-->> 
-->> <Directory "D:/webroot/test">
-->> 
-->>         AddHandler mod_python .py
-->>         PythonHandler mptest
-->>         PythonDebug On
-->> </Directory>
-->> 
-->> I runs --> localhost/test/mptest.py
-->> 
-->> Runs ok a test
-->> 
-->> When try tu run the same file in localhost/mptest.py
-->> 
-->> The apache only prints python code in the page.
-->> 
-->> Who to run others .py files out of localhost/test, or configuring 
-->> modpython to work in all subdirectories under localhost structure?
-->
-->You could use the publisher handler and configure your 
-->webroot directory 
-->accordingly:
-->
--><Directory "D:/webroot">
-->          AddHandler mod_python .py
-->          PythonHandler mod_python.publisher
-->          PythonDebug On
--></Directory>
-->
-->Check the documentation for more information on publisher.
-->
-->Jim
-->

Jim :


I try this configuration, on localhost/mptest.py

HTTP 404 Page not found

But i checks, an de mptest.py i in localhost root

Do you no other configuration ?

Alejandro

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006
 



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006

From list at joreybump.com  Fri Apr 28 13:33:37 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Apr 28 13:33:51 2006
Subject: [mod_python] Configuring Apache Server With Mod Python
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAh0jBQOISH0CP8t92FhFchgEAAAAA@adinet.com.uy>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAh0jBQOISH0CP8t92FhFchgEAAAAA@adinet.com.uy>
Message-ID: <445251F1.1040000@joreybump.com>

Alejandro Michelin Salomon ( Adinet ) wrote:

> <Directory "D:/webroot/test">
> 
>         AddHandler mod_python .py
>         PythonHandler mptest
>         PythonDebug On 
> </Directory>
> 
> I runs --> localhost/test/mptest.py
> 
> Runs ok a test
> 
> When try tu run the same file in localhost/mptest.py
> 
> The apache only prints python code in the page.

You've only defined it for D:/webroot/test. Change the above to:

  <Directory "D:/webroot">
  ...

and it will work.
From list at joreybump.com  Fri Apr 28 13:38:21 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Apr 28 13:38:27 2006
Subject: RES: [mod_python] Configuring Apache Server With Mod Python
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAzGwiHQaLLkqgyFawQcht7QEAAAAA@adinet.com.uy>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAzGwiHQaLLkqgyFawQcht7QEAAAAA@adinet.com.uy>
Message-ID: <4452530D.7030608@joreybump.com>

Alejandro Michelin Salomon ( Adinet ) wrote:

> I try this configuration, on localhost/mptest.py
> 
> HTTP 404 Page not found
> 
> But i checks, an de mptest.py i in localhost root

Publisher requires a different approach, and will return a 404 error if 
you don't point to a function within your published module, even though 
the file is present. Your mptest.py is unlikely to be compatible.

Your original problem was a simple configuration error. Fix that, then 
read the documentation carefully before moving on to Publisher.
From alejmsg at adinet.com.uy  Fri Apr 28 13:43:42 2006
From: alejmsg at adinet.com.uy (Alejandro Michelin Salomon ( Adinet ))
Date: Fri Apr 28 13:43:09 2006
Subject: RES: [mod_python] Configuring Apache Server With Mod Python
In-Reply-To: <44524D1F.2090408@jgassociates.ca>
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAA80G+WEDQ0mOc4EcjUgFuQEAAAAA@adinet.com.uy>

Jim :

I find this directive in the manual --> PythonInterpreter

I resolved with this :

<Directory "D:/webroot">
          AddHandler mod_python .py
          PythonHandler mptest
          PythonInterpreter mptest
          PythonDebug On
</Directory>

Now i can run .py files in each direcotory under localhost.

Thanks for the help.



-->-----Mensagem original-----
-->De: Jim Gallacher [mailto:jpg@jgassociates.ca] 
-->Enviada em: sexta-feira, 28 de abril de 2006 14:13
-->Para: Alejandro Michelin Salomon ( Adinet )
-->Cc: Mod_Python@Modpython. Org
-->Assunto: Re: [mod_python] Configuring Apache Server With Mod Python
-->
-->
-->Alejandro Michelin Salomon ( Adinet ) wrote:
-->> Hi:
-->> 
-->> I am new to python.
-->> 
-->> I need same help.
-->> 
-->> I add this line to httpd.conf --> LoadModule python_module 
-->> modules/mod_python.so
-->> 
-->> And then :
-->> 
-->> Apache DocumentRoot is "D:/webroot"
-->> 
-->> <Directory "D:/webroot/test">
-->> 
-->>         AddHandler mod_python .py
-->>         PythonHandler mptest
-->>         PythonDebug On
-->> </Directory>
-->> 
-->> I runs --> localhost/test/mptest.py
-->> 
-->> Runs ok a test
-->> 
-->> When try tu run the same file in localhost/mptest.py
-->> 
-->> The apache only prints python code in the page.
-->> 
-->> Who to run others .py files out of localhost/test, or configuring 
-->> modpython to work in all subdirectories under localhost structure?
-->
-->You could use the publisher handler and configure your 
-->webroot directory 
-->accordingly:
-->
--><Directory "D:/webroot">
-->          AddHandler mod_python .py
-->          PythonHandler mod_python.publisher
-->          PythonDebug On
--></Directory>
-->
-->Check the documentation for more information on publisher.
-->
-->Jim
-->
-->
-->-- 
-->No virus found in this incoming message.
-->Checked by AVG Free Edition.
-->Version: 7.1.385 / Virus Database: 268.5.1/326 - Release 
-->Date: 27/4/2006
-->
-->
-->-- 
-->No virus found in this incoming message.
-->Checked by AVG Free Edition.
-->Version: 7.1.385 / Virus Database: 268.5.1/326 - Release 
-->Date: 27/4/2006
--> 
-->

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006
 



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006

From list at joreybump.com  Fri Apr 28 13:49:46 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Apr 28 13:49:53 2006
Subject: RES: [mod_python] Configuring Apache Server With Mod Python
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAA80G+WEDQ0mOc4EcjUgFuQEAAAAA@adinet.com.uy>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAA80G+WEDQ0mOc4EcjUgFuQEAAAAA@adinet.com.uy>
Message-ID: <445255BA.6060800@joreybump.com>

Alejandro Michelin Salomon ( Adinet ) wrote:

> I find this directive in the manual --> PythonInterpreter
> 
> I resolved with this :
> 
> <Directory "D:/webroot">
>           AddHandler mod_python .py
>           PythonHandler mptest
>           PythonInterpreter mptest
>           PythonDebug On
> </Directory>
> 
> Now i can run .py files in each direcotory under localhost.

Experiment with settings, by all means, but setting PythonInterpreter 
was unnecessary to solve your problem. Remove it, restart apache, and see.
From alejmsg at adinet.com.uy  Fri Apr 28 13:51:42 2006
From: alejmsg at adinet.com.uy (Alejandro Michelin Salomon ( Adinet ))
Date: Fri Apr 28 13:51:01 2006
Subject: [mod_python] Nest step configuration PSP
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAeaNjeGr73UyMbbRuTA9psgEAAAAA@adinet.com.uy>

Hi :

I follow the manual configuring apache to accept .psp files :

"
PSP handler is a handler that processes documents using the PSP class in
mod_python.psp module. 
To use it, simply add this to your httpd configuration: 
  AddHandler mod_python .psp
  PythonHandler mod_python.psp
"
I restart the apache server.
But when try tu access a psp page, the server trys to download the file.

Is the prior handler for .py file comflicting with this other ?

Thanks in advance

Alejandro Michelin Salomon

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006
 



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006

From list at joreybump.com  Fri Apr 28 14:02:08 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Apr 28 14:02:16 2006
Subject: [mod_python] Nest step configuration PSP
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAeaNjeGr73UyMbbRuTA9psgEAAAAA@adinet.com.uy>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAAeaNjeGr73UyMbbRuTA9psgEAAAAA@adinet.com.uy>
Message-ID: <445258A0.2070101@joreybump.com>

Alejandro Michelin Salomon ( Adinet ) wrote:

> I follow the manual configuring apache to accept .psp files :
> 
> "
> PSP handler is a handler that processes documents using the PSP class in
> mod_python.psp module. 
> To use it, simply add this to your httpd configuration: 
>   AddHandler mod_python .psp
>   PythonHandler mod_python.psp
> "
> I restart the apache server.
> But when try tu access a psp page, the server trys to download the file.
> 
> Is the prior handler for .py file comflicting with this other ?

Possibly. Show your configuration.
From alejmsg at adinet.com.uy  Fri Apr 28 14:12:09 2006
From: alejmsg at adinet.com.uy (Alejandro Michelin Salomon ( Adinet ))
Date: Fri Apr 28 14:11:46 2006
Subject: RES: [mod_python] Nest step configuration PSP
In-Reply-To: <445258A0.2070101@joreybump.com>
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAA0CBXfwEGTE2nUFm+RqacEAEAAAAA@adinet.com.uy>


Jorey:

I have this :
<Directory "D:/webroot">
          AddHandler mod_python .py
          PythonHandler mptest
          PythonDebug On
</Directory>

And i add this :

AddHandler mod_python .psp
PythonHandler mod_python.psp

Now i have this :

<Directory "D:/webroot">
          AddHandler mod_python .py
          PythonHandler mptest
          PythonDebug On
</Directory>

AddHandler mod_python .psp
PythonHandler mod_python.psp

Is wrong ?
I can have .py and .psp files configured a the same time ?

Alejandro



-->-----Mensagem original-----
-->De: Jorey Bump [mailto:list@joreybump.com] 
-->Enviada em: sexta-feira, 28 de abril de 2006 15:02
-->Para: Alejandro Michelin Salomon ( Adinet )
-->Cc: Mod_Python@Modpython. Org
-->Assunto: Re: [mod_python] Nest step configuration PSP
-->
-->
-->Alejandro Michelin Salomon ( Adinet ) wrote:
-->
-->> I follow the manual configuring apache to accept .psp files :
-->> 
-->> "
-->> PSP handler is a handler that processes documents using 
-->the PSP class 
-->> in mod_python.psp module. To use it, simply add this to your httpd 
-->> configuration:
-->>   AddHandler mod_python .psp
-->>   PythonHandler mod_python.psp
-->> "
-->> I restart the apache server.
-->> But when try tu access a psp page, the server trys to download the 
-->> file.
-->> 
-->> Is the prior handler for .py file comflicting with this other ?
-->
-->Possibly. Show your configuration.
-->
-->
-->-- 
-->No virus found in this incoming message.
-->Checked by AVG Free Edition.
-->Version: 7.1.385 / Virus Database: 268.5.1/326 - Release 
-->Date: 27/4/2006
-->
-->
-->-- 
-->No virus found in this incoming message.
-->Checked by AVG Free Edition.
-->Version: 7.1.385 / Virus Database: 268.5.1/326 - Release 
-->Date: 27/4/2006
--> 
-->

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006
 



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.385 / Virus Database: 268.5.1/326 - Release Date: 27/4/2006

From list at joreybump.com  Fri Apr 28 14:38:54 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Apr 28 14:39:02 2006
Subject: RES: [mod_python] Nest step configuration PSP
In-Reply-To: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAA0CBXfwEGTE2nUFm+RqacEAEAAAAA@adinet.com.uy>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAA0CBXfwEGTE2nUFm+RqacEAEAAAAA@adinet.com.uy>
Message-ID: <4452613E.7050300@joreybump.com>

Alejandro Michelin Salomon ( Adinet ) wrote:

> I have this :
> <Directory "D:/webroot">
>           AddHandler mod_python .py
>           PythonHandler mptest
>           PythonDebug On
> </Directory>
> 
> And i add this :
> 
> AddHandler mod_python .psp
> PythonHandler mod_python.psp
> 
> Now i have this :
> 
> <Directory "D:/webroot">
>           AddHandler mod_python .py
>           PythonHandler mptest
>           PythonDebug On
> </Directory>
> 
> AddHandler mod_python .psp
> PythonHandler mod_python.psp
> 
> Is wrong ?

Yes, but you were misled by the instructions that you quoted. If you 
want to try psp, "simply" do this:

  <Directory "D:/webroot">
     AddHandler mod_python .psp
     PythonHandler mod_python.psp
     PythonDebug On
  </Directory>

> I can have .py and .psp files configured a the same time ?

Easily, if you use different Directory containers, but I'll defer to 
someone else who does this in the same directory, so I don't omit any 
gotchas. I use Publisher, not psp.


From koes.list at gmail.com  Fri Apr 28 15:55:44 2006
From: koes.list at gmail.com (Kusmayadi)
Date: Fri Apr 28 15:55:48 2006
Subject: [mod_python] mod_python publisher framework
Message-ID: <4163f16b0604281255u7e6988e3l@mail.gmail.com>

Anybody knows any framework for mod_python.publisher? I know some
mod_python framework like TurboGears, Cheetah, CherryPy, Aquarium, but
i see that they're not using mod_python.publisher.

From grahamd at dscpl.com.au  Fri Apr 28 19:02:35 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 28 19:02:50 2006
Subject: [mod_python] Re: DbmSession
In-Reply-To: <82105edc0604280735y36e7ed37m4135ee3dcfa12403@mail.gmail.com>
References: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>
	<5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>
	<445213B0.8090505@jgassociates.ca>
	<82105edc0604280735y36e7ed37m4135ee3dcfa12403@mail.gmail.com>
Message-ID: <5a5610ba9acad056134f84b88f551518@dscpl.com.au>

I hope you are doing a session.save() somewhere. You don't show
it in your code and without it, you will get a new session
every time.

Graham

On 29/04/2006, at 12:35 AM, Stefan Glaus wrote:

> The relevant code is as follows:
>
> session = Session.Session(req)
> if session.is_new():
> 	req.write("new")
> 	
> req.write(session.id() + '<BR><BR>')
>
>
> I'm running this on apache 2.0 with python 2.4.2 and mod_python 3.2
>
> The code works now, it is setting cookies but I don't know what
> changed. Sorry for the lack of detail in the original post... first
> time :)
>
>
> Thanks for your reply and if I figure out what I've changed in order
> for it to work, I'll follow up
>
>
>
> On 4/28/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>> Daniel Nogradi wrote:
>> >> I'm trying to use the DbmSession class. MemorySession works (for a
>> >> single process) but whenever I try using DbmSession, no cookies are
>> >> being set in my browser.. Is there something I'm overlooking here?
>> >
>> > Please post the (minimal) code that you use, that way it will be
>> > easier to tell what might go wrong. For example: are the db files
>> > created on your server where the session data should be stored?
>>
>> Also, your OS and mod_python version would be helpful. :)
>>
>> Jim
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Apr 28 19:09:42 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 28 19:10:26 2006
Subject: RES: [mod_python] Nest step configuration PSP
In-Reply-To: <4452613E.7050300@joreybump.com>
References: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAhx491Ki2tUS42D/aMPFg1MKAAAAQAAAA0CBXfwEGTE2nUFm+RqacEAEAAAAA@adinet.com.uy>
	<4452613E.7050300@joreybump.com>
Message-ID: <215fa2bae521e4d4f2f9285d5b0cdb87@dscpl.com.au>


On 29/04/2006, at 4:38 AM, Jorey Bump wrote:

> Alejandro Michelin Salomon ( Adinet ) wrote:
> Yes, but you were misled by the instructions that you quoted. If you 
> want to try psp, "simply" do this:
>
>  <Directory "D:/webroot">
>     AddHandler mod_python .psp
>     PythonHandler mod_python.psp
>     PythonDebug On
>  </Directory>
>
>> I can have .py and .psp files configured a the same time ?
>
> Easily, if you use different Directory containers, but I'll defer to 
> someone else who does this in the same directory, so I don't omit any 
> gotchas. I use Publisher, not psp.

To mix the two, try using:

  <Directory "D:/webroot">
     AddHandler mod_python .psp
     AddHandler mod_python .py
     PythonHandler mod_python.psp | .psp
     PythonHandler mptest | .py
     PythonDebug On
  </Directory>

Read the documentation in respect of qualifying extension on 
Python*Handler
directives:

   http://www.modpython.org/live/current/doc-html/dir-handlers-syn.html

Graham

From grahamd at dscpl.com.au  Fri Apr 28 19:14:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Apr 28 19:14:43 2006
Subject: [mod_python] mod_python publisher framework
In-Reply-To: <4163f16b0604281255u7e6988e3l@mail.gmail.com>
References: <4163f16b0604281255u7e6988e3l@mail.gmail.com>
Message-ID: <c7129027a54faa75e78b990ced7fea15@dscpl.com.au>


On 29/04/2006, at 5:55 AM, Kusmayadi wrote:

> Anybody knows any framework for mod_python.publisher? I know some
> mod_python framework like TurboGears, Cheetah, CherryPy, Aquarium, but
> i see that they're not using mod_python.publisher.

What are you actually after when you say "framework"? The
main distinction between mod_python.publisher and the others
is that mod_python.publisher doesn't provide a builtin
page templating system. You already have access to form
handling, sessions and it also embodies a URL dispatching
mechanism.

Thus, is what you are really after a page templating system?
The only other possibility is that you want database access.
Not sure what else those other packages provide that isn't
achievable in some other way.

Anyway, people using mod_python.publisher often combine it
with mod_python.psp for page templating or various other
third party solutions. Perhaps you want to be more specific.

Graham

From yjfuk at 126.com  Fri Apr 28 23:44:50 2006
From: yjfuk at 126.com (yjfuk)
Date: Fri Apr 28 23:45:12 2006
Subject: [SPAM] Re: Re:&nbsp; &nbsp; Re:&nbsp; [mod_python]& nbsp; s&nbsp;
	ession&nbsp; lock
Message-ID: <4452E132.00007B.00573@m65.126.com>

 
what does it mean that you say 'defined at the module level '?
 
 



-----原始邮件-----
发件人:"Jim Gallacher" 
发送时间:2006-04-28 20:58:16
收件人:"yjfuk" 
抄送:"graham dumpleton" ,"mod_python@modpython..." 
主题:Re:  Re: [mod_python] s ession lock


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060429/27259da8/attachment.html
From grahamd at dscpl.com.au  Sat Apr 29 00:07:05 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 29 00:07:51 2006
Subject: &nbsp;&nbsp;Re:&nbsp;[mod_python]& nbsp;s&nbsp;ession&nbsp;lock
In-Reply-To: <4452E132.00007B.00573@m65.126.com>
References: <4452E132.00007B.00573@m65.126.com>
Message-ID: <A651CD18-12D0-4F09-B744-04599D8B3A7A@dscpl.com.au>


On 29/04/2006, at 1:44 PM, yjfuk wrote:

>
> what does it mean that you say 'defined at the module level '?

Same as saying "global" variable within a module.

Your code was:

test=0
def a(req):
     global test
     req.write(str(test))
     test=test+1

def b(req):
     global test
     req.write(str(test))
     test=test+1

The "test" variable is "global" within that module, or as Jim  
described it,
it is "defined at the module level".

For a handler module, this is important because where you are using a  
multithreaded
MPM, concurrent requests can be trying to access the same data at the  
same time.
Access to such data therefore must be thread safe. There are also  
other issues in
mod_python that may have to be contended with if module reloading is  
enabled.

Graham
From morten at nidelven-it.no  Sat Apr 29 10:39:46 2006
From: morten at nidelven-it.no (Morten W. Petersen)
Date: Sat Apr 29 10:39:53 2006
Subject: [mod_python] Problems with mod_python after reboots
Message-ID: <44537AB2.3040400@nidelven-it.no>

Hi,

I have a server which always has problems with mod_python after a
reboot, the only workaround I've found so far is to recompile/reinstall
mod_python and take down apache completely and start it up again.

This is not a good situation for us as we always want to have the most
uptime on our servers, do you know what could be causing it?

The error messages in error_log look like this:

[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher: Traceback (most recent call last):
[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line
 287, in HandlerDispatch\n    log=debug)
[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line
 464, in import_module\n    module = imp.load_module(mname, f, p, d)
[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", l
ine 32, in ?\n    import util
[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/util.py", line 2
4, in ?\n    import tempfile
[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File "/usr/lib/python2.3/tempfile.py", line 33,
in ?\n    from random im
port Random as _Random
[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File "/usr/lib/python2.3/random.py", line 42, in
?\n    from math import
 log as _log, exp as _exp, pi as _pi, e as _e
[Sat Apr 29 16:31:26 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher: ImportError:
/usr/lib/python2.3/lib-dynload/math.so: undefined symbol: PyF
PE_jbuf
[Sat Apr 29 16:31:27 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher: Traceback (most recent call last):
[Sat Apr 29 16:31:27 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line
 299, in HandlerDispatch\n    result = object(req)
[Sat Apr 29 16:31:27 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", l
ine 213, in handler\n    published = publish_object(req, object)
[Sat Apr 29 16:31:27 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", l
ine 411, in publish_object\n    req.form = util.FieldStorage(req,
keep_blank_values=1)
[Sat Apr 29 16:31:27 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher: AttributeError: 'module' object has no attribute
'FieldStorage'
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher: Traceback (most recent call last):
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line
 287, in HandlerDispatch\n    log=debug)
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line
 464, in import_module\n    module = imp.load_module(mname, f, p, d)
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", l
ine 32, in ?\n    import util
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File
"/usr/local/lib/python2.3/site-packages/mod_python/util.py", line 2
4, in ?\n    import tempfile
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File "/usr/lib/python2.3/tempfile.py", line 33,
in ?\n    from random im
port Random as _Random
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher:   File "/usr/lib/python2.3/random.py", line 42, in
?\n    from math import
 log as _log, exp as _exp, pi as _pi, e as _e
[Sat Apr 29 16:31:29 2006] [error] [client 80.203.126.208] PythonHandler
mod_python.publisher: ImportError:
/usr/lib/python2.3/lib-dynload/math.so: undefined symbol: PyF
PE_jbuf

TIA,

Morten
From stefanglaus at gmail.com  Sat Apr 29 10:56:08 2006
From: stefanglaus at gmail.com (Stefan Glaus)
Date: Sat Apr 29 10:57:17 2006
Subject: [mod_python] Re: DbmSession
In-Reply-To: <5a5610ba9acad056134f84b88f551518@dscpl.com.au>
References: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>
	<5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>
	<445213B0.8090505@jgassociates.ca>
	<82105edc0604280735y36e7ed37m4135ee3dcfa12403@mail.gmail.com>
	<5a5610ba9acad056134f84b88f551518@dscpl.com.au>
Message-ID: <82105edc0604290756y3d39d1b1o5aff5242ccdb1c01@mail.gmail.com>

>From what I understand (This very well could be wrong), session.save()
does the save to the dbm file, and doesn't really have anything to do
with the cookies.

Thanks!

On 4/28/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> I hope you are doing a session.save() somewhere. You don't show
> it in your code and without it, you will get a new session
> every time.
>
> Graham
>
> On 29/04/2006, at 12:35 AM, Stefan Glaus wrote:
>
> > The relevant code is as follows:
> >
> > session = Session.Session(req)
> > if session.is_new():
> >       req.write("new")
> >
> > req.write(session.id() + '<BR><BR>')
> >
> >
> > I'm running this on apache 2.0 with python 2.4.2 and mod_python 3.2
> >
> > The code works now, it is setting cookies but I don't know what
> > changed. Sorry for the lack of detail in the original post... first
> > time :)
> >
> >
> > Thanks for your reply and if I figure out what I've changed in order
> > for it to work, I'll follow up
> >
> >
> >
> > On 4/28/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> >> Daniel Nogradi wrote:
> >> >> I'm trying to use the DbmSession class. MemorySession works (for a
> >> >> single process) but whenever I try using DbmSession, no cookies are
> >> >> being set in my browser.. Is there something I'm overlooking here?
> >> >
> >> > Please post the (minimal) code that you use, that way it will be
> >> > easier to tell what might go wrong. For example: are the db files
> >> > created on your server where the session data should be stored?
> >>
> >> Also, your OS and mod_python version would be helpful. :)
> >>
> >> Jim
> >>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From deron.meranda at gmail.com  Sat Apr 29 11:09:12 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Sat Apr 29 11:09:15 2006
Subject: [mod_python] Problems with mod_python after reboots
In-Reply-To: <44537AB2.3040400@nidelven-it.no>
References: <44537AB2.3040400@nidelven-it.no>
Message-ID: <5c06fa770604290809ob9351ebt9a2b0229eba7ebf7@mail.gmail.com>

On 4/29/06, Morten W. Petersen <morten@nidelven-it.no> wrote:
> I have a server which always has problems with mod_python after a
> reboot, the only workaround I've found so far is to recompile/reinstall
> mod_python and take down apache completely and start it up again.

> /usr/lib/python2.3/lib-dynload/math.so: undefined symbol: PyF
> PE_jbuf

That is certainly strange.  Usually math.so is compiled into the core
python instead of left as a dynamic loadable; but it's possible to
compile python the way you have it.  Need a little more information.

What operating system?

If this is Linux, type the following and note all "math.so" files
which are under some sort of Python directory:
    locate math.so

Aside from mod_python, have you compiled/installed anything else
yourself (Apache, Python, etc.)

Do you have more than one version of Python installed?

Which version of Python (path to the python executabl) do you use when
you recompile mod_python?

Do you have any other non-standard Apache modules installed?

Is there anything unusual with your boot process? (Perhaps some sort
of backup/recovery or mirrored filesystems?)

Can you intentionally reboot the system somtime.  Just before shutdown
compute the file checksums of both the mod_python.so module as well as
math.so.  Use sha1sum or md5sum if possible.  Then reboot and recheck
those files to see if something has changed them.
--
Deron Meranda

From jpg at jgassociates.ca  Sat Apr 29 11:56:15 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Apr 29 11:55:47 2006
Subject: [mod_python] Re: DbmSession
In-Reply-To: <82105edc0604290756y3d39d1b1o5aff5242ccdb1c01@mail.gmail.com>
References: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>	<5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>	<445213B0.8090505@jgassociates.ca>	<82105edc0604280735y36e7ed37m4135ee3dcfa12403@mail.gmail.com>	<5a5610ba9acad056134f84b88f551518@dscpl.com.au>
	<82105edc0604290756y3d39d1b1o5aff5242ccdb1c01@mail.gmail.com>
Message-ID: <44538C9F.7000209@jgassociates.ca>

Any chance you were doing a req.write call *before* creating the session 
instance? The first req.write() causes the response headers to be sent, 
so if Session.Session() comes later in your code it will not be able to 
set the cookie. (Actually, it will set it, but the headers have already 
been sent, so it is effectively a noop).

Jim

Stefan Glaus wrote:
>> From what I understand (This very well could be wrong), session.save()
> does the save to the dbm file, and doesn't really have anything to do
> with the cookies.
> 
> Thanks!
> 
> On 4/28/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> I hope you are doing a session.save() somewhere. You don't show
>> it in your code and without it, you will get a new session
>> every time.
>>
>> Graham
>>
>> On 29/04/2006, at 12:35 AM, Stefan Glaus wrote:
>>
>> > The relevant code is as follows:
>> >
>> > session = Session.Session(req)
>> > if session.is_new():
>> >       req.write("new")
>> >
>> > req.write(session.id() + '<BR><BR>')
>> >
>> >
>> > I'm running this on apache 2.0 with python 2.4.2 and mod_python 3.2
>> >
>> > The code works now, it is setting cookies but I don't know what
>> > changed. Sorry for the lack of detail in the original post... first
>> > time :)
>> >
>> >
>> > Thanks for your reply and if I figure out what I've changed in order
>> > for it to work, I'll follow up
>> >
>> >
>> >
>> > On 4/28/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>> >> Daniel Nogradi wrote:
>> >> >> I'm trying to use the DbmSession class. MemorySession works (for a
>> >> >> single process) but whenever I try using DbmSession, no cookies are
>> >> >> being set in my browser.. Is there something I'm overlooking here?
>> >> >
>> >> > Please post the (minimal) code that you use, that way it will be
>> >> > easier to tell what might go wrong. For example: are the db files
>> >> > created on your server where the session data should be stored?
>> >>
>> >> Also, your OS and mod_python version would be helpful. :)
>> >>
>> >> Jim
>> >>
>> >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jeffreyz at broadpark.no  Sat Apr 29 13:14:10 2006
From: jeffreyz at broadpark.no (Jeffrey A. Zelt)
Date: Sat Apr 29 13:14:18 2006
Subject: [mod_python] PSP/Mac OS X line ending gotcha
Message-ID: <EBEC980F-314E-4FF3-B5BA-E4236F932A31@broadpark.no>

I've only just started using mod_python, so please excuse this if it  
is documented in an obvious place.  Let me put it very simply.  On  
Mac OS X, make sure that your HTML files are terminated by :

    a line feed (ascii 10) and NOT a carriage return (ascii 13).

The Windows line ending of CRLF is also OK because it includes the  
line feed.  PSP does *not* like lines terminated by only a carriage  
return.  Here is how I encountered this.  It should also indicate  
when you should look out for this issue.

I successfully implemented some functionality through a custom  
generic python handler - that went pretty smoothly.  Then I wanted to  
use PSP for simple templating.  Everything worked perfectly when I  
first introduced python expressions delimited by:

    ?<%=?  and  ?%>?

However, as soon as I tried using python code delimited by:

    ?<%?  and  ?%>?

all hell broke loose and I could not get anything to work.  A  
simplified version of what I was trying was something like:

     <%
    for i in range(n):
        # start for loop
    %>

         HTML code to repeat n times

    <%
    # terminate for loop
    %>

This just repeats the block of HTML code n times.  The details of the  
python code here are not important.  This construction triggered  
various errors, depending on the details of the python code I  
inserted into the page.  The problem was that I was using Adobe  
GoLive to edit my web pages and to insert the python code in the page  
(I am talking about the source view, not the WYSIWYG/Layout view).   
My version of GoLive is a little old and still prefers to write files  
with carriage return line endings.  This was the default for the Mac  
OS before Mac OS X.  Everything *looks* OK in the GoLive editor and  
it also looked OK in the other editors I chose to check the code  
(other editors would have tipped me off, but I did not use one of  
those).

However, it seems that the PSP engine, or whatever you want to call  
it, does not treat carriage returns as line endings, and therefore  
chokes badly when encountering code written this way.

GoLive has a menu item where you can select  the desired line  
terminator.  I selected "Unix (LF)".  This made no visible change to  
the document when viewed in GoLive, but then suddenly the <% ... %>  
PSP parts of the document worked perfectly.

It is probably obvious when you think about it, but it is tricky to  
detect if you are bit by it because you may not visibly see anything  
wrong with the code you are editing.

I hope this helps someone avoid what I went through.

Jeff 
From jpg at jgassociates.ca  Sat Apr 29 14:37:20 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Apr 29 14:36:06 2006
Subject: [mod_python] PSP/Mac OS X line ending gotcha
In-Reply-To: <EBEC980F-314E-4FF3-B5BA-E4236F932A31@broadpark.no>
References: <EBEC980F-314E-4FF3-B5BA-E4236F932A31@broadpark.no>
Message-ID: <4453B260.1030801@jgassociates.ca>

Jeffrey A. Zelt wrote:
> I've only just started using mod_python, so please excuse this if it is 
> documented in an obvious place.  Let me put it very simply.  On Mac OS 
> X, make sure that your HTML files are terminated by :
> 
>    a line feed (ascii 10) and NOT a carriage return (ascii 13).
> 
> The Windows line ending of CRLF is also OK because it includes the line 
> feed.  PSP does *not* like lines terminated by only a carriage return.  
> Here is how I encountered this.  It should also indicate when you should 
> look out for this issue.
> 
> I successfully implemented some functionality through a custom generic 
> python handler - that went pretty smoothly.  Then I wanted to use PSP 
> for simple templating.  Everything worked perfectly when I first 
> introduced python expressions delimited by:
> 
>    ?<%=?  and  ?%>?
> 
> However, as soon as I tried using python code delimited by:
> 
>    ?<%?  and  ?%>?
> 
> all hell broke loose and I could not get anything to work.  A simplified 
> version of what I was trying was something like:
> 
>     <%
>    for i in range(n):
>        # start for loop
>    %>
> 
>         HTML code to repeat n times
> 
>    <%
>    # terminate for loop
>    %>
> 
> This just repeats the block of HTML code n times.  The details of the 
> python code here are not important.  This construction triggered various 
> errors, depending on the details of the python code I inserted into the 
> page.  The problem was that I was using Adobe GoLive to edit my web 
> pages and to insert the python code in the page (I am talking about the 
> source view, not the WYSIWYG/Layout view).  My version of GoLive is a 
> little old and still prefers to write files with carriage return line 
> endings.  This was the default for the Mac OS before Mac OS X.  
> Everything *looks* OK in the GoLive editor and it also looked OK in the 
> other editors I chose to check the code (other editors would have tipped 
> me off, but I did not use one of those).
> 
> However, it seems that the PSP engine, or whatever you want to call it, 
> does not treat carriage returns as line endings, and therefore chokes 
> badly when encountering code written this way.

The psp parser expects lines of python code to end in:

\r\n | \n | %>

So using \r as the line terminator will indeed mess things up.

> GoLive has a menu item where you can select  the desired line 
> terminator.  I selected "Unix (LF)".  This made no visible change to the 
> document when viewed in GoLive, but then suddenly the <% ... %> PSP 
> parts of the document worked perfectly.
> 
> It is probably obvious when you think about it, but it is tricky to 
> detect if you are bit by it because you may not visibly see anything 
> wrong with the code you are editing.
> 
> I hope this helps someone avoid what I went through.

It should be easy enough to fix this. At the very least it should be 
documented.

I'll file a bug report. Thanks for your input.
Jim

From grahamd at dscpl.com.au  Sat Apr 29 17:33:37 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Apr 29 17:33:44 2006
Subject: [mod_python] Problems with mod_python after reboots
In-Reply-To: <5c06fa770604290809ob9351ebt9a2b0229eba7ebf7@mail.gmail.com>
References: <44537AB2.3040400@nidelven-it.no>
	<5c06fa770604290809ob9351ebt9a2b0229eba7ebf7@mail.gmail.com>
Message-ID: <E828B35D-2DA5-44E7-8C87-5938E12A7EF5@dscpl.com.au>


On 30/04/2006, at 1:09 AM, Deron Meranda wrote:

> On 4/29/06, Morten W. Petersen <morten@nidelven-it.no> wrote:
>> I have a server which always has problems with mod_python after a
>> reboot, the only workaround I've found so far is to recompile/ 
>> reinstall
>> mod_python and take down apache completely and start it up again.
>
>> /usr/lib/python2.3/lib-dynload/math.so: undefined symbol: PyF
>> PE_jbuf
>
> Do you have more than one version of Python installed?

I'd also probably suggest this may the problem. When started, mod_python
uses the python first found in PATH. When auto restarted on bootup, the
PATH is probably different to when you restart by hand and is finding  
the
wrong version.

Graham
From stefanglaus at gmail.com  Sat Apr 29 22:56:22 2006
From: stefanglaus at gmail.com (Stefan Glaus)
Date: Sat Apr 29 22:56:26 2006
Subject: [mod_python] Re: DbmSession
In-Reply-To: <44538C9F.7000209@jgassociates.ca>
References: <82105edc0604271024k6aa7c336n202933c8a04e117d@mail.gmail.com>
	<5f56302b0604280128hf941210qf2e844410aa2dd72@mail.gmail.com>
	<445213B0.8090505@jgassociates.ca>
	<82105edc0604280735y36e7ed37m4135ee3dcfa12403@mail.gmail.com>
	<5a5610ba9acad056134f84b88f551518@dscpl.com.au>
	<82105edc0604290756y3d39d1b1o5aff5242ccdb1c01@mail.gmail.com>
	<44538C9F.7000209@jgassociates.ca>
Message-ID: <82105edc0604291956m9a6765fo75adb69a79410693@mail.gmail.com>

That's exactly it. I never would have figured that out. Thanks a lot
for all the help. I'm sure you'll hear from plenty of times as the
weeks go by!

On 4/29/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Any chance you were doing a req.write call *before* creating the session
> instance? The first req.write() causes the response headers to be sent,
> so if Session.Session() comes later in your code it will not be able to
> set the cookie. (Actually, it will set it, but the headers have already
> been sent, so it is effectively a noop).
>
> Jim
>
> Stefan Glaus wrote:
> >> From what I understand (This very well could be wrong), session.save()
> > does the save to the dbm file, and doesn't really have anything to do
> > with the cookies.
> >
> > Thanks!
> >
> > On 4/28/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >> I hope you are doing a session.save() somewhere. You don't show
> >> it in your code and without it, you will get a new session
> >> every time.
> >>
> >> Graham
> >>
> >> On 29/04/2006, at 12:35 AM, Stefan Glaus wrote:
> >>
> >> > The relevant code is as follows:
> >> >
> >> > session = Session.Session(req)
> >> > if session.is_new():
> >> >       req.write("new")
> >> >
> >> > req.write(session.id() + '<BR><BR>')
> >> >
> >> >
> >> > I'm running this on apache 2.0 with python 2.4.2 and mod_python 3.2
> >> >
> >> > The code works now, it is setting cookies but I don't know what
> >> > changed. Sorry for the lack of detail in the original post... first
> >> > time :)
> >> >
> >> >
> >> > Thanks for your reply and if I figure out what I've changed in order
> >> > for it to work, I'll follow up
> >> >
> >> >
> >> >
> >> > On 4/28/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> >> >> Daniel Nogradi wrote:
> >> >> >> I'm trying to use the DbmSession class. MemorySession works (for a
> >> >> >> single process) but whenever I try using DbmSession, no cookies are
> >> >> >> being set in my browser.. Is there something I'm overlooking here?
> >> >> >
> >> >> > Please post the (minimal) code that you use, that way it will be
> >> >> > easier to tell what might go wrong. For example: are the db files
> >> >> > created on your server where the session data should be stored?
> >> >>
> >> >> Also, your OS and mod_python version would be helpful. :)
> >> >>
> >> >> Jim
> >> >>
> >> >
> >> > _______________________________________________
> >> > Mod_python mailing list
> >> > Mod_python@modpython.org
> >> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>

From morten at nidelven-it.no  Sun Apr 30 16:45:37 2006
From: morten at nidelven-it.no (Morten W. Petersen)
Date: Sun Apr 30 16:46:09 2006
Subject: [mod_python] Problems with mod_python after reboots
In-Reply-To: <E828B35D-2DA5-44E7-8C87-5938E12A7EF5@dscpl.com.au>
References: <44537AB2.3040400@nidelven-it.no>
	<5c06fa770604290809ob9351ebt9a2b0229eba7ebf7@mail.gmail.com>
	<E828B35D-2DA5-44E7-8C87-5938E12A7EF5@dscpl.com.au>
Message-ID: <445521F1.7070405@nidelven-it.no>

Graham Dumpleton wrote:
> 
> On 30/04/2006, at 1:09 AM, Deron Meranda wrote:
> 
>> On 4/29/06, Morten W. Petersen <morten@nidelven-it.no> wrote:
>>> I have a server which always has problems with mod_python after a
>>> reboot, the only workaround I've found so far is to recompile/reinstall
>>> mod_python and take down apache completely and start it up again.
>>
>>> /usr/lib/python2.3/lib-dynload/math.so: undefined symbol: PyF
>>> PE_jbuf
>>
>> Do you have more than one version of Python installed?
> 
> I'd also probably suggest this may the problem. When started, mod_python
> uses the python first found in PATH. When auto restarted on bootup, the
> PATH is probably different to when you restart by hand and is finding the
> wrong version.

There are multiple python installations and it is using a different PATH
at boot time, so this is probably the cause of the bug.

I'll try fixing that, thanks for the help!

-Morten
