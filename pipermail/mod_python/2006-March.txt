From heuristic at gmail.com  Wed Mar  1 08:11:12 2006
From: heuristic at gmail.com (Alex Biddle)
Date: Wed Mar  1 08:11:20 2006
Subject: [mod_python] ./configure error
In-Reply-To: <1141161110.9736@dscpl.user.openhosting.com>
References: <1141161110.9736@dscpl.user.openhosting.com>
Message-ID: <45e0ec7b0603010511m12c15e82uce4e900a41dbbedc@mail.gmail.com>

Thankyou.

Works like a charm now :D

On 2/28/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> The problem is the version of bash you are using. See workarounds
> documented in:
>
>  http://issues.apache.org/jira/browse/MODPYTHON-122
>
> Graham
>

From bwhiteley at novell.com  Wed Mar  1 15:19:33 2006
From: bwhiteley at novell.com (Bart Whiteley)
Date: Wed Mar  1 15:19:11 2006
Subject: [mod_python] Getting the script name with publisher
Message-ID: <1141244373.17539.25.camel@jbw.provo.novell.com>

In order to generate hyperlinks, I need a reliable way to determine the
script name while using the publisher handler.  I hunted around for a
bit, and only found this from years ago that wasn't answered: 
http://www.modpython.org/pipermail/mod_python/2003-September/014133.html

I was doing this for a while: 
  req.uri[:-len(req.path_info)]

This worked until I renamed my script to index.py, then it fell apart.
So, I guess what I really need is not the script name, but the portion
of the URI prior to the method name.  In some cases this might be the
script name (possibly without the '.py').  In the case of index.py, it
might be the folder containing index.py.  

As an example, I've set up a script loosely based on hello.py: 
http://modpython.org/live/current/doc-html/hand-pub-intro.html

I place it in /srv/www/htdocs/mptest/index.py (docroot
is /srv/www/htdocs).
When I access it like this: http://www/mptest/say/hello, 
I see the following vars: 
SCRIPT_FILENAME		/srv/www/htdocs/mptest/say
PATH_INFO		/hello
SCRIPT_NAME		/mptest/say

In this example, I'd like to isolate "/mptest".

Does anyone have a way to reliable isolate the script name, or the
folder containing index.py? 

From d at hell.art.pl  Wed Mar  1 15:47:01 2006
From: d at hell.art.pl (d)
Date: Wed Mar  1 15:47:16 2006
Subject: [mod_python] Path related problems with PSP (possibly a bug)
Message-ID: <51400803-E6B5-4846-868C-8355390A1E0F@hell.art.pl>

Hello

  I've been having some weird path related problems using mod_python/ 
PSP, so I
decided to switch to using absolute paths everywhere, but that  
unfortunately didn't
help. Now I have little time to solve this, so I'd really appreciate  
a quick answer..
  Here's the problem:

# I have a /index.py with this contents:
def test (req):
   # test.html contains "foo <%= x %> "
   tmpl = psp.PSP (req, '/home2/kompassztuki/webapps/mod_python/ 
htdocs/test.html')
   tmpl.run (vars = { 'x' : 10 })

# And a /admin/index.py with:
def test (req):
   # test.html contains only "bar <%= x %> "
   tmpl = psp.PSP (req, '/home2/kompassztuki/webapps/mod_python/ 
htdocs/admin/test.html')
   tmpl.run (vars = { 'x' : 11 })

  To begin cleanly I restart the server and access /test. I get a  
page containing
"foo 10", as expected. Now I access /admin/test and the page says  
"bar 11", which
is still ok, but then, when I access /test again, I get the same page  
containing
"bar 11".
  Yes, I did flush the cache and reload the page. Mod_python seems to  
launch the
proper function, but in a wrong directory.
  Here's the Apache log for this whole event:

[Wed Mar 01 14:14:18 2006] [notice] caught SIGTERM, shutting down
[Wed Mar 01 14:14:21 2006] [notice] mod_python: Creating 32 session  
mutexes based on 256 max processes and 0 max threads.
[Wed Mar 01 14:14:21 2006] [notice] Apache/2.0.46 (Red Hat)  
mod_python/3.1.4 Python/2.4 configured -- resuming normal operations
[Wed Mar 01 14:14:33 2006] [notice] mod_python: (Re)importing module  
'mod_python.publisher'
[Wed Mar 01 14:14:33 2006] [notice] mod_python: (Re)importing module  
'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
htdocs']'
[Wed Mar 01 14:14:33 2006] [notice] mod_python: (Re)importing module  
'index' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
htdocs']'
[Wed Mar 01 14:14:34 2006] [notice] mod_python: (Re)importing module  
'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
mod_python/htdocs']'
[Wed Mar 01 14:14:38 2006] [notice] mod_python: (Re)importing module  
'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
htdocs/admin']'
[Wed Mar 01 14:14:38 2006] [notice] mod_python: (Re)importing module  
'index' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
htdocs/admin']'
[Wed Mar 01 14:14:39 2006] [notice] mod_python: (Re)importing module  
'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
mod_python/htdocs']'
[Wed Mar 01 14:14:43 2006] [notice] mod_python: (Re)importing module  
'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
htdocs']'
[Wed Mar 01 14:14:43 2006] [notice] mod_python: (Re)importing module  
'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
mod_python/htdocs']'
[Wed Mar 01 14:14:45 2006] [notice] mod_python: (Re)importing module  
'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
htdocs']'
[Wed Mar 01 14:14:45 2006] [notice] mod_python: (Re)importing module  
'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
mod_python/htdocs']'

  After some time of inactivity, or multiple refreshes, accessing / 
test will finally return
a page containing "foo 10", but accessing /admin/test will cause the  
same problem
once again. It seems the effect cannot be inversed, i.e. /admin/test  
always works fine.
  As I said before - a quick reply from anyone would be nice, I'm in  
trouble already ;]

thanks,
d
From d at hell.art.pl  Wed Mar  1 16:01:05 2006
From: d at hell.art.pl (d)
Date: Wed Mar  1 16:01:12 2006
Subject: [mod_python] Getting the script name with publisher
In-Reply-To: <1141244373.17539.25.camel@jbw.provo.novell.com>
References: <1141244373.17539.25.camel@jbw.provo.novell.com>
Message-ID: <C6496605-E73E-44CA-A6B6-4BDF4D5ABA86@hell.art.pl>


On Mar 1, 2006, at 9:19 PM, Bart Whiteley wrote:

> In order to generate hyperlinks, I need a reliable way to determine  
> the
> script name while using the publisher handler.  I hunted around for a
> bit, and only found this from years ago that wasn't answered:
> http://www.modpython.org/pipermail/mod_python/2003-September/ 
> 014133.html
>
> I was doing this for a while:
>   req.uri[:-len(req.path_info)]
>
> This worked until I renamed my script to index.py, then it fell apart.
> So, I guess what I really need is not the script name, but the portion
> of the URI prior to the method name.  In some cases this might be the
> script name (possibly without the '.py').  In the case of index.py, it
> might be the folder containing index.py.
>
> As an example, I've set up a script loosely based on hello.py:
> http://modpython.org/live/current/doc-html/hand-pub-intro.html
>
> I place it in /srv/www/htdocs/mptest/index.py (docroot
> is /srv/www/htdocs).
> When I access it like this: http://www/mptest/say/hello,
> I see the following vars:
> SCRIPT_FILENAME		/srv/www/htdocs/mptest/say
> PATH_INFO		/hello
> SCRIPT_NAME		/mptest/say
>
> In this example, I'd like to isolate "/mptest".
>
> Does anyone have a way to reliable isolate the script name, or the
> folder containing index.py?

You mean `os.path.basename (__file__)` ?

d

PS. Sorry I sent it directly to you the first time ;] I just started  
using this mail client ;]

From bwhiteley at novell.com  Wed Mar  1 16:18:32 2006
From: bwhiteley at novell.com (Bart Whiteley)
Date: Wed Mar  1 16:18:15 2006
Subject: [mod_python] Getting the script name with publisher
In-Reply-To: <C6496605-E73E-44CA-A6B6-4BDF4D5ABA86@hell.art.pl>
References: <1141244373.17539.25.camel@jbw.provo.novell.com>
	<C6496605-E73E-44CA-A6B6-4BDF4D5ABA86@hell.art.pl>
Message-ID: <1141247912.17539.34.camel@jbw.provo.novell.com>

On Wed, 2006-03-01 at 22:01 +0100, d wrote:
> On Mar 1, 2006, at 9:19 PM, Bart Whiteley wrote:
> 
> > In order to generate hyperlinks, I need a reliable way to determine  
> > the
> > script name while using the publisher handler.  I hunted around for a
> > bit, and only found this from years ago that wasn't answered:
> > http://www.modpython.org/pipermail/mod_python/2003-September/ 
> > 014133.html
> >
> > I was doing this for a while:
> >   req.uri[:-len(req.path_info)]
> >
> > This worked until I renamed my script to index.py, then it fell apart.
> > So, I guess what I really need is not the script name, but the portion
> > of the URI prior to the method name.  In some cases this might be the
> > script name (possibly without the '.py').  In the case of index.py, it
> > might be the folder containing index.py.
> >
> > As an example, I've set up a script loosely based on hello.py:
> > http://modpython.org/live/current/doc-html/hand-pub-intro.html
> >
> > I place it in /srv/www/htdocs/mptest/index.py (docroot
> > is /srv/www/htdocs).
> > When I access it like this: http://www/mptest/say/hello,
> > I see the following vars:
> > SCRIPT_FILENAME		/srv/www/htdocs/mptest/say
> > PATH_INFO		/hello
> > SCRIPT_NAME		/mptest/say
> >
> > In this example, I'd like to isolate "/mptest".
> >
> > Does anyone have a way to reliable isolate the script name, or the
> > folder containing index.py?
> 
> You mean `os.path.basename (__file__)` ?
> 

Thanks.  I didn't know about __file__.  I how have this which seems to
work in all cases: 

def _baseScript(req):
    drlen = len(req.subprocess_env['DOCUMENT_ROOT'])
    if os.path.basename(__file__) == 'index.py':
        return os.path.dirname(__file__)[drlen:]
    else:
        return __file__[drlen:-3]


From grahamd at dscpl.com.au  Wed Mar  1 16:44:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar  1 16:44:39 2006
Subject: [mod_python] Path related problems with PSP (possibly a bug)
Message-ID: <1141249473.29929@dscpl.user.openhosting.com>

Upgrade to mod_python 3.2.8. The problem should go away for case
where publisher is used. See:

  http://issues.apache.org/jira/browse/MODPYTHON-9
  http://www.dscpl.com.au/articles/modpython-003.html

Graham

d wrote ..
> Hello
> 
>   I've been having some weird path related problems using mod_python/ 
> PSP, so I
> decided to switch to using absolute paths everywhere, but that  
> unfortunately didn't
> help. Now I have little time to solve this, so I'd really appreciate  
> a quick answer..
>   Here's the problem:
> 
> # I have a /index.py with this contents:
> def test (req):
>    # test.html contains "foo <%= x %> "
>    tmpl = psp.PSP (req, '/home2/kompassztuki/webapps/mod_python/ 
> htdocs/test.html')
>    tmpl.run (vars = { 'x' : 10 })
> 
> # And a /admin/index.py with:
> def test (req):
>    # test.html contains only "bar <%= x %> "
>    tmpl = psp.PSP (req, '/home2/kompassztuki/webapps/mod_python/ 
> htdocs/admin/test.html')
>    tmpl.run (vars = { 'x' : 11 })
> 
>   To begin cleanly I restart the server and access /test. I get a  
> page containing
> "foo 10", as expected. Now I access /admin/test and the page says  
> "bar 11", which
> is still ok, but then, when I access /test again, I get the same page 
> containing
> "bar 11".
>   Yes, I did flush the cache and reload the page. Mod_python seems to 
> launch the
> proper function, but in a wrong directory.
>   Here's the Apache log for this whole event:
> 
> [Wed Mar 01 14:14:18 2006] [notice] caught SIGTERM, shutting down
> [Wed Mar 01 14:14:21 2006] [notice] mod_python: Creating 32 session  
> mutexes based on 256 max processes and 0 max threads.
> [Wed Mar 01 14:14:21 2006] [notice] Apache/2.0.46 (Red Hat)  
> mod_python/3.1.4 Python/2.4 configured -- resuming normal operations
> [Wed Mar 01 14:14:33 2006] [notice] mod_python: (Re)importing module  
> 'mod_python.publisher'
> [Wed Mar 01 14:14:33 2006] [notice] mod_python: (Re)importing module  
> 'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
> htdocs']'
> [Wed Mar 01 14:14:33 2006] [notice] mod_python: (Re)importing module  
> 'index' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
> htdocs']'
> [Wed Mar 01 14:14:34 2006] [notice] mod_python: (Re)importing module  
> 'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
> mod_python/htdocs']'
> [Wed Mar 01 14:14:38 2006] [notice] mod_python: (Re)importing module  
> 'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
> htdocs/admin']'
> [Wed Mar 01 14:14:38 2006] [notice] mod_python: (Re)importing module  
> 'index' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
> htdocs/admin']'
> [Wed Mar 01 14:14:39 2006] [notice] mod_python: (Re)importing module  
> 'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
> mod_python/htdocs']'
> [Wed Mar 01 14:14:43 2006] [notice] mod_python: (Re)importing module  
> 'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
> htdocs']'
> [Wed Mar 01 14:14:43 2006] [notice] mod_python: (Re)importing module  
> 'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
> mod_python/htdocs']'
> [Wed Mar 01 14:14:45 2006] [notice] mod_python: (Re)importing module  
> 'test' with path set to '['/home2/kompassztuki/webapps/mod_python/ 
> htdocs']'
> [Wed Mar 01 14:14:45 2006] [notice] mod_python: (Re)importing module  
> 'favicon.ico' with path set to '['/home2/kompassztuki/webapps/ 
> mod_python/htdocs']'
> 
>   After some time of inactivity, or multiple refreshes, accessing / 
> test will finally return
> a page containing "foo 10", but accessing /admin/test will cause the  
> same problem
> once again. It seems the effect cannot be inversed, i.e. /admin/test  
> always works fine.
>   As I said before - a quick reply from anyone would be nice, I'm in  
> trouble already ;]
> 
> thanks,
> d
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Wed Mar  1 16:48:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar  1 16:48:55 2006
Subject: [mod_python] Getting the script name with publisher
Message-ID: <1141249729.594@dscpl.user.openhosting.com>

Bart Whiteley wrote ..
> Thanks.  I didn't know about __file__.  I how have this which seems to
> work in all cases: 
> 
> def _baseScript(req):
>     drlen = len(req.subprocess_env['DOCUMENT_ROOT'])
>     if os.path.basename(__file__) == 'index.py':
>         return os.path.dirname(__file__)[drlen:]
>     else:
>         return __file__[drlen:-3]

Will not work when files are in a user account served up by mod_userdir
or where Alias directive is used to map in files outside of the directories
under document root.

Trying to do what you want is actually quite hard and there are a lot of
gotchas. When I get some time I'll try and respond properly.

Graham
From d at hell.art.pl  Wed Mar  1 17:03:13 2006
From: d at hell.art.pl (d)
Date: Wed Mar  1 17:03:20 2006
Subject: [mod_python] Path related problems with PSP (possibly a bug)
In-Reply-To: <1141249473.29929@dscpl.user.openhosting.com>
References: <1141249473.29929@dscpl.user.openhosting.com>
Message-ID: <BE1F41ED-2808-4628-BC66-D08289B115D3@hell.art.pl>


On Mar 1, 2006, at 10:44 PM, Graham Dumpleton wrote:

> Upgrade to mod_python 3.2.8. The problem should go away for case
> where publisher is used. See:
>
>   http://issues.apache.org/jira/browse/MODPYTHON-9
>   http://www.dscpl.com.au/articles/modpython-003.html

  Thanks.

d
From grahamd at dscpl.com.au  Wed Mar  1 17:06:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar  1 17:06:29 2006
Subject: [mod_python] Getting the script name with publisher
Message-ID: <1141250788.13132@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Bart Whiteley wrote ..
> > Thanks.  I didn't know about __file__.  I how have this which seems to
> > work in all cases: 
> > 
> > def _baseScript(req):
> >     drlen = len(req.subprocess_env['DOCUMENT_ROOT'])
> >     if os.path.basename(__file__) == 'index.py':
> >         return os.path.dirname(__file__)[drlen:]
> >     else:
> >         return __file__[drlen:-3]
> 
> Will not work when files are in a user account served up by mod_userdir
> or where Alias directive is used to map in files outside of the directories
> under document root.
> 
> Trying to do what you want is actually quite hard and there are a lot of
> gotchas. When I get some time I'll try and respond properly.

While on this bit of code, this also will not work if Apache was run as
a user which had write access to the directory the files are in. This is
because in that case, Python will be able to write ".pyc" files to the
directory and thus the "__file__" attribute may actually have a ".pyc"
suffix and not ".py". Thus appropriate use of os.path.splitext() may be
in order rather than assuming that ".py" extension will always be used.

Graham
From mvanaswegen at gmail.com  Thu Mar  2 06:21:18 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Thu Mar  2 06:21:58 2006
Subject: [mod_python] Mod_python Security
Message-ID: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>

Hi

I'd like to publish my page but I'm not sure what security issues mod_python
typically face.
Any recommendations?


Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060302/b9657918/attachment.html
From trepca at gmail.com  Thu Mar  2 07:27:12 2006
From: trepca at gmail.com (Sebastjan Trepca)
Date: Thu Mar  2 07:27:20 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>
References: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>
Message-ID: <cd329af80603020427i18a262b2h730de59d821bfe60@mail.gmail.com>

None? :)

Sebastjan

On 3/2/06, marinus van aswegen <mvanaswegen@gmail.com> wrote:
> Hi
>
> I'd like to publish my page but I'm not sure what security issues mod_python
> typically face.
> Any recommendations?
>
>
> Regards
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

From nlv11281 at natlab.research.philips.com  Thu Mar  2 08:37:09 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Mar  2 08:37:21 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>
References: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>
Message-ID: <4406F505.5070209@natlab.research.philips.com>

As with any server-side scripting, there's:

- Cross-site scripting
- Code injection
- SQL injection

But that's typically 'your' fault...

Mike Looijmans
Philips Natlab / Topic Automation


marinus van aswegen wrote:
> Hi
> 
> I'd like to publish my page but I'm not sure what security issues 
> mod_python typically face.
> Any recommendations?
> 
> 
> Regards
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nicolas at lehuen.com  Thu Mar  2 08:54:55 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Thu Mar  2 08:55:00 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <4406F505.5070209@natlab.research.philips.com>
References: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>
	<4406F505.5070209@natlab.research.philips.com>
Message-ID: <c298f2d70603020554j708199bbp@mail.gmail.com>

There's an important rule :

If you use the publisher, everything which is defined in a published
module is generally accessible from the web, except if its name begins
with an underscore.

For example :

# index.py
# BAD !
secret_password = "foobar"

def index(req,password):
    if password != secret_password:
        return util.redirect(req,'/rejected.html')
    else:
        return "Welcome !"

Your secret password in accessible through
http://my_server/my_folder/index.py/secret_password

To make sure it won't be accessed, rename secret_password to _secret_password.

There are exceptions to this "everything is accessible" rule, namely
imported modules, new-styles classes and built-in functions cannot be
traversed nor published. This prevents basic leaks like being able to
call sys.exit() from any published module that imports sys. Those
rules are specified in the lib/python/mod_python/publisher.py file, if
you are curious.

But in any case, be aware that any string defined in a published
module is accessible unless its name is prefixed by an underscore,
which includes your precious database password.

Regards,
Nicolas

2006/3/2, Mike Looijmans <nlv11281@natlab.research.philips.com>:
> As with any server-side scripting, there's:
>
> - Cross-site scripting
> - Code injection
> - SQL injection
>
> But that's typically 'your' fault...
>
> Mike Looijmans
> Philips Natlab / Topic Automation
>
>
> marinus van aswegen wrote:
> > Hi
> >
> > I'd like to publish my page but I'm not sure what security issues
> > mod_python typically face.
> > Any recommendations?
> >
> >
> > Regards
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Thu Mar  2 15:06:50 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  2 15:07:18 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <c298f2d70603020554j708199bbp@mail.gmail.com>
References: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>
	<4406F505.5070209@natlab.research.philips.com>
	<c298f2d70603020554j708199bbp@mail.gmail.com>
Message-ID: <99151551-F40B-4B64-B9C4-2F0254A01BEC@dscpl.com.au>

Some more.

1. If using mod_python.psp and you have PythonDebug enabled
the source code for your PSP pages can be visible by virtue of
putting an underscore on the end of the extension. Eg. ".psp_".

It is thus a good idea not to have PyhthonDebug enabled for production
and/or public web site if using mod_python.psp. If you really need
PythonDebug to be on, only enable it for requests coming from
you own client machine in some way.

2. If Apache has write access to directories, it can drop ".pyc" files
into the directories for modules loaded. This extension isn't generally
protected and people can download the ".pyc" files and potentially
work out what your code is. Use something like:

   <Files *.pyc>
   deny from all
   </Files>

Depending on platform, may have to block access to ".pyo" files as
well.

3. PythonDebug in general can reveal stack traces to a client when
something goes wrong. In worst case, this may reveal secret information.

4. Try to avoid putting source code in actual directories visible to
Apache. Especially do not put sensitive information in such files.
The reason here is that it only takes one mistake in Apache  
configuration
and all your code would be visible.

5. If using an extension such as ".html" with AddHandler to map to
handler code in actual directory, ensure you block access to ".py"
extension if need be.

   <Files *.py>
   deny from all
   </Files>

6. If writing a custom handler, if wanting to return apache.DECLINED,
make sure you understand what it does. Specifically, it will cause the
builtin default Apache handler to still run, which will serve up static
files. Like above, you may need to deny access to certain files as a
result.

That is all I can think of for now. Sorry if some of it makes no sense,
am in a rush.

Graham

On 03/03/2006, at 12:54 AM, Nicolas Lehuen wrote:

> There's an important rule :
>
> If you use the publisher, everything which is defined in a published
> module is generally accessible from the web, except if its name begins
> with an underscore.
>
> For example :
>
> # index.py
> # BAD !
> secret_password = "foobar"
>
> def index(req,password):
>     if password != secret_password:
>         return util.redirect(req,'/rejected.html')
>     else:
>         return "Welcome !"
>
> Your secret password in accessible through
> http://my_server/my_folder/index.py/secret_password
>
> To make sure it won't be accessed, rename secret_password to  
> _secret_password.
>
> There are exceptions to this "everything is accessible" rule, namely
> imported modules, new-styles classes and built-in functions cannot be
> traversed nor published. This prevents basic leaks like being able to
> call sys.exit() from any published module that imports sys. Those
> rules are specified in the lib/python/mod_python/publisher.py file, if
> you are curious.
>
> But in any case, be aware that any string defined in a published
> module is accessible unless its name is prefixed by an underscore,
> which includes your precious database password.
>
> Regards,
> Nicolas
>
> 2006/3/2, Mike Looijmans <nlv11281@natlab.research.philips.com>:
>> As with any server-side scripting, there's:
>>
>> - Cross-site scripting
>> - Code injection
>> - SQL injection
>>
>> But that's typically 'your' fault...
>>
>> Mike Looijmans
>> Philips Natlab / Topic Automation
>>
>>
>> marinus van aswegen wrote:
>>> Hi
>>>
>>> I'd like to publish my page but I'm not sure what security issues
>>> mod_python typically face.
>>> Any recommendations?
>>>
>>>
>>> Regards
>>>
>>>
>>> -------------------------------------------------------------------- 
>>> ----
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From dlenski at gmail.com  Thu Mar  2 15:34:53 2006
From: dlenski at gmail.com (Dan Lenski)
Date: Thu Mar  2 15:35:00 2006
Subject: [mod_python] problem setting up mod_python under Ubuntu Breezy
In-Reply-To: <53e1ea310603021230m7de37410y1f410d46c0bf5cf6@mail.gmail.com>
References: <53e1ea310603021228td59c778hdd330892aa641c2d@mail.gmail.com>
	<53e1ea310603021230m7de37410y1f410d46c0bf5cf6@mail.gmail.com>
Message-ID: <53e1ea310603021234u7c40d474r9013a8feb87a7e59@mail.gmail.com>

Hi all,
I'm having trouble getting mod_python to work under Ubuntu Breezy.
I'm using Apache 1.3.33 with mod_python 2.7.10, Python 2.4.1a0, all
the default packages for the distribution basically.

I'm having the "could not import module mod_python.apache" problem,
which appears to be quite a classic :-)  I'm following along with
Graham Dumpleton's "Getting mod_python Working" guide, and created a
little mptest.py script.  When I try to load the mptest.py script, I
get a 500 error from Apache, and the following in my error log:

make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Thu Mar  2 14:55:22 2006] [error] [client 129.2.43.114] python_handler: make_ob
callback returned no obCallBack!

Note that these DO NOT occur when Apache starts up!!  They don't occur
until I try to load the offending page.  My httpd.conf includes the
lines:

  <Directory /var/www/python>
    AddHandler python-program .py
    PythonHandler mptest
    PythonDebug On
  </Directory>

Does anyone have any advice?  I have python 2.4 installed on my system
(not 2.2, 2.3, or anything else).  So I think it's not the problem
described here:
   http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
I've tried starting Apache in single-process mode with
PYTHONHOME="/usr", since all the python modules are stored under
/usr/lib/python2.4/

All to no avail.  I'm completely stumped.  I've read a pretty good
chunk of the FAQ, and googled lots of other threads on similar topics.
 Any hints?  Thanks,

Dan Lenski
(Physics grad student at U of Maryland)

From grahamd at dscpl.com.au  Thu Mar  2 16:21:57 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  2 16:22:01 2006
Subject: [mod_python] Mod_python Security
Message-ID: <1141334517.22477@dscpl.user.openhosting.com>

Another one, an important one at that.

7. Be aware that a security hole was found in mod_python. Unfortunately,
I can't seem to find the proper security advisory for it on mod_python
site. Only reference seems to be:

  http://www.modpython.org/3.1.4.html

I could be blind, but I would have thought it would have been important
to keep the notice on the main page.

If using 2.X stream, ensure you are using 2.7.11 or make sure your
distribution has patched 2.7.10 if that is what they are using.

If using 3.X stream. ensure you are using 3.1.4 or make sure your
distribution has patched 3.0.X or 3.1.3 if that is what they are using.

Graham
  
Graham Dumpleton wrote ..
> Some more.
> 
> 1. If using mod_python.psp and you have PythonDebug enabled
> the source code for your PSP pages can be visible by virtue of
> putting an underscore on the end of the extension. Eg. ".psp_".
> 
> It is thus a good idea not to have PyhthonDebug enabled for production
> and/or public web site if using mod_python.psp. If you really need
> PythonDebug to be on, only enable it for requests coming from
> you own client machine in some way.
> 
> 2. If Apache has write access to directories, it can drop ".pyc" files
> into the directories for modules loaded. This extension isn't generally
> protected and people can download the ".pyc" files and potentially
> work out what your code is. Use something like:
> 
>    <Files *.pyc>
>    deny from all
>    </Files>
> 
> Depending on platform, may have to block access to ".pyo" files as
> well.
> 
> 3. PythonDebug in general can reveal stack traces to a client when
> something goes wrong. In worst case, this may reveal secret information.
> 
> 4. Try to avoid putting source code in actual directories visible to
> Apache. Especially do not put sensitive information in such files.
> The reason here is that it only takes one mistake in Apache  
> configuration
> and all your code would be visible.
> 
> 5. If using an extension such as ".html" with AddHandler to map to
> handler code in actual directory, ensure you block access to ".py"
> extension if need be.
> 
>    <Files *.py>
>    deny from all
>    </Files>
> 
> 6. If writing a custom handler, if wanting to return apache.DECLINED,
> make sure you understand what it does. Specifically, it will cause the
> builtin default Apache handler to still run, which will serve up static
> files. Like above, you may need to deny access to certain files as a
> result.
> 
> That is all I can think of for now. Sorry if some of it makes no sense,
> am in a rush.
> 
> Graham
> 
> On 03/03/2006, at 12:54 AM, Nicolas Lehuen wrote:
> 
> > There's an important rule :
> >
> > If you use the publisher, everything which is defined in a published
> > module is generally accessible from the web, except if its name begins
> > with an underscore.
> >
> > For example :
> >
> > # index.py
> > # BAD !
> > secret_password = "foobar"
> >
> > def index(req,password):
> >     if password != secret_password:
> >         return util.redirect(req,'/rejected.html')
> >     else:
> >         return "Welcome !"
> >
> > Your secret password in accessible through
> > http://my_server/my_folder/index.py/secret_password
> >
> > To make sure it won't be accessed, rename secret_password to  
> > _secret_password.
> >
> > There are exceptions to this "everything is accessible" rule, namely
> > imported modules, new-styles classes and built-in functions cannot be
> > traversed nor published. This prevents basic leaks like being able to
> > call sys.exit() from any published module that imports sys. Those
> > rules are specified in the lib/python/mod_python/publisher.py file, if
> > you are curious.
> >
> > But in any case, be aware that any string defined in a published
> > module is accessible unless its name is prefixed by an underscore,
> > which includes your precious database password.
> >
> > Regards,
> > Nicolas
> >
> > 2006/3/2, Mike Looijmans <nlv11281@natlab.research.philips.com>:
> >> As with any server-side scripting, there's:
> >>
> >> - Cross-site scripting
> >> - Code injection
> >> - SQL injection
> >>
> >> But that's typically 'your' fault...
> >>
> >> Mike Looijmans
> >> Philips Natlab / Topic Automation
> >>
> >>
> >> marinus van aswegen wrote:
> >>> Hi
> >>>
> >>> I'd like to publish my page but I'm not sure what security issues
> >>> mod_python typically face.
> >>> Any recommendations?
> >>>
> >>>
> >>> Regards
> >>>
> >>>
> >>> --------------------------------------------------------------------
> >>> ----
> >>>
> >>> _______________________________________________
> >>> Mod_python mailing list
> >>> Mod_python@modpython.org
> >>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Thu Mar  2 16:24:56 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  2 16:25:00 2006
Subject: [mod_python] problem setting up mod_python under Ubuntu Breezy
Message-ID: <1141334696.24611@dscpl.user.openhosting.com>

If you are using all the default packages from the distribution,
including that for mod_python, it might be the case that the mod_python
package was originally compiled against an older version of Python and
thus will not work. Can you build the mod_python package yourself from
source code and use that instead?

Graham

Dan Lenski wrote ..
> Hi all,
> I'm having trouble getting mod_python to work under Ubuntu Breezy.
> I'm using Apache 1.3.33 with mod_python 2.7.10, Python 2.4.1a0, all
> the default packages for the distribution basically.
> 
> I'm having the "could not import module mod_python.apache" problem,
> which appears to be quite a classic :-)  I'm following along with
> Graham Dumpleton's "Getting mod_python Working" guide, and created a
> little mptest.py script.  When I try to load the mptest.py script, I
> get a 500 error from Apache, and the following in my error log:
> 
> make_obcallback(): could not import mod_python.apache.
> make_obcallback(): could not call init.
> [Thu Mar  2 14:55:22 2006] [error] [client 129.2.43.114] python_handler:
> make_ob
> callback returned no obCallBack!
> 
> Note that these DO NOT occur when Apache starts up!!  They don't occur
> until I try to load the offending page.  My httpd.conf includes the
> lines:
> 
>   <Directory /var/www/python>
>     AddHandler python-program .py
>     PythonHandler mptest
>     PythonDebug On
>   </Directory>
> 
> Does anyone have any advice?  I have python 2.4 installed on my system
> (not 2.2, 2.3, or anything else).  So I think it's not the problem
> described here:
>    http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
> I've tried starting Apache in single-process mode with
> PYTHONHOME="/usr", since all the python modules are stored under
> /usr/lib/python2.4/
> 
> All to no avail.  I'm completely stumped.  I've read a pretty good
> chunk of the FAQ, and googled lots of other threads on similar topics.
>  Any hints?  Thanks,
> 
> Dan Lenski
> (Physics grad student at U of Maryland)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From tkruthoff at gmail.com  Thu Mar  2 16:26:19 2006
From: tkruthoff at gmail.com (Troy Kruthoff)
Date: Thu Mar  2 16:26:23 2006
Subject: [mod_python] problem setting up mod_python under Ubuntu Breezy
In-Reply-To: <53e1ea310603021234u7c40d474r9013a8feb87a7e59@mail.gmail.com>
References: <53e1ea310603021228td59c778hdd330892aa641c2d@mail.gmail.com>
	<53e1ea310603021230m7de37410y1f410d46c0bf5cf6@mail.gmail.com>
	<53e1ea310603021234u7c40d474r9013a8feb87a7e59@mail.gmail.com>
Message-ID: <5ef0bc720603021326m463628b3v547a708e914ca6f0@mail.gmail.com>

Try using the --with-python option when you configure mod_python,
and/or veryify the references to python in your path point to the
appropriate python installation.

Troy



On 3/2/06, Dan Lenski <dlenski@gmail.com> wrote:
> Hi all,
> I'm having trouble getting mod_python to work under Ubuntu Breezy.
> I'm using Apache 1.3.33 with mod_python 2.7.10, Python 2.4.1a0, all
> the default packages for the distribution basically.
>
> I'm having the "could not import module mod_python.apache" problem,
> which appears to be quite a classic :-)  I'm following along with
> Graham Dumpleton's "Getting mod_python Working" guide, and created a
> little mptest.py script.  When I try to load the mptest.py script, I
> get a 500 error from Apache, and the following in my error log:
>
> make_obcallback(): could not import mod_python.apache.
> make_obcallback(): could not call init.
> [Thu Mar  2 14:55:22 2006] [error] [client 129.2.43.114] python_handler: make_ob
> callback returned no obCallBack!
>
> Note that these DO NOT occur when Apache starts up!!  They don't occur
> until I try to load the offending page.  My httpd.conf includes the
> lines:
>
>   <Directory /var/www/python>
>     AddHandler python-program .py
>     PythonHandler mptest
>     PythonDebug On
>   </Directory>
>
> Does anyone have any advice?  I have python 2.4 installed on my system
> (not 2.2, 2.3, or anything else).  So I think it's not the problem
> described here:
>    http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.001.htp
> I've tried starting Apache in single-process mode with
> PYTHONHOME="/usr", since all the python modules are stored under
> /usr/lib/python2.4/
>
> All to no avail.  I'm completely stumped.  I've read a pretty good
> chunk of the FAQ, and googled lots of other threads on similar topics.
>  Any hints?  Thanks,
>
> Dan Lenski
> (Physics grad student at U of Maryland)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From deron.meranda at gmail.com  Thu Mar  2 16:28:06 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Thu Mar  2 16:28:11 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <c298f2d70603020554j708199bbp@mail.gmail.com>
References: <ffa39deb0603020321u3237f53bjeac458ec383902d4@mail.gmail.com>
	<4406F505.5070209@natlab.research.philips.com>
	<c298f2d70603020554j708199bbp@mail.gmail.com>
Message-ID: <5c06fa770603021328h2e5549ebh1e3744cf29067fb4@mail.gmail.com>

On 3/2/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
> For example :
>
> # index.py
> # BAD !
> secret_password = "foobar"

Or even better yet, if your code must know about secret passwords
(which is common for opening database connections, etc.), use
something like,

   # index.py
   _secret_password = open('.secret','r').read().strip()

and then store the password itself in the file ".secret".

The leading dot in the filename will insure that Apache won't serve
that file up with the default apache config.  [Somebody correct me
if this is different for Windows].

The leading underscore in the variable name will help hide it from
debug output, stack traces, pydocs, etc.

Anyway this still isn't perfect, but its a whole lot better than embedding
any passwords directly in the source code.  You should never do that.
--
Deron Meranda

From dlenski at gmail.com  Thu Mar  2 16:37:00 2006
From: dlenski at gmail.com (Dan Lenski)
Date: Thu Mar  2 16:37:04 2006
Subject: [mod_python] problem setting up mod_python under Ubuntu Breezy
In-Reply-To: <1141334696.24611@dscpl.user.openhosting.com>
References: <1141334696.24611@dscpl.user.openhosting.com>
Message-ID: <53e1ea310603021337p75181bcbod1b364ce29d6c168@mail.gmail.com>

On 3/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> If you are using all the default packages from the distribution,
> including that for mod_python, it might be the case that the mod_python
> package was originally compiled against an older version of Python and
> thus will not work. Can you build the mod_python package yourself from
> source code and use that instead?

Thanks for the quick reply.  Your mod_python guide has been very helpful to me.

The package is called libapache-mod-python2.4, and it explicitly
depends on python2.4.  When I run "strings mod_python.so", I come up
with the string 2.4.1a0, whereas "python -V" gives me 2.4.2

Could it be that this minor version difference is causing the
conflict?  If so, I'll compile my own package ASAP.  Thanks,

Dan

From grahamd at dscpl.com.au  Thu Mar  2 16:41:11 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  2 16:41:19 2006
Subject: [mod_python] Mod_python Security
Message-ID: <1141335671.4052@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> On 3/2/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
> > For example :
> >
> > # index.py
> > # BAD !
> > secret_password = "foobar"
> 
> Or even better yet, if your code must know about secret passwords
> (which is common for opening database connections, etc.), use
> something like,
> 
>    # index.py
>    _secret_password = open('.secret','r').read().strip()
> 
> and then store the password itself in the file ".secret".
> 
> The leading dot in the filename will insure that Apache won't serve
> that file up with the default apache config.  [Somebody correct me
> if this is different for Windows].

Stand corrected then. Using a leading dot doesn't protect it on
UNIX like systems. The only safe way is to not put it in the directory
in the first place.

BTW, that code wouldn't work anyway, as you use a relative path
but working directory will not actually be that directory so it will
not find it.

Graham
From jamesp at westcoastaerospace.com  Thu Mar  2 16:54:43 2006
From: jamesp at westcoastaerospace.com (James Paige)
Date: Thu Mar  2 16:54:50 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <1141334517.22477@dscpl.user.openhosting.com>
References: <1141334517.22477@dscpl.user.openhosting.com>
Message-ID: <440769A3.9050802@westcoastaerospace.com>

These security hints are good stuff to have all in one place. I have 
edited together a list based on this thread and posted it on the 
mod_python FAQ at http://www.modpython.org/FAQ/faqw.py?req=all#3.28

---
James Paige

Graham Dumpleton wrote:
> Another one, an important one at that.
> 
> 7. Be aware that a security hole was found in mod_python. Unfortunately,
> I can't seem to find the proper security advisory for it on mod_python
> site. Only reference seems to be:
> 
>   http://www.modpython.org/3.1.4.html
> 
> I could be blind, but I would have thought it would have been important
> to keep the notice on the main page.
> 
> If using 2.X stream, ensure you are using 2.7.11 or make sure your
> distribution has patched 2.7.10 if that is what they are using.
> 
> If using 3.X stream. ensure you are using 3.1.4 or make sure your
> distribution has patched 3.0.X or 3.1.3 if that is what they are using.
> 
> Graham
>   
> Graham Dumpleton wrote ..
>> Some more.
>>
>> 1. If using mod_python.psp and you have PythonDebug enabled
>> the source code for your PSP pages can be visible by virtue of
>> putting an underscore on the end of the extension. Eg. ".psp_".
>>
>> It is thus a good idea not to have PyhthonDebug enabled for production
>> and/or public web site if using mod_python.psp. If you really need
>> PythonDebug to be on, only enable it for requests coming from
>> you own client machine in some way.
>>
>> 2. If Apache has write access to directories, it can drop ".pyc" files
>> into the directories for modules loaded. This extension isn't generally
>> protected and people can download the ".pyc" files and potentially
>> work out what your code is. Use something like:
>>
>>    <Files *.pyc>
>>    deny from all
>>    </Files>
>>
>> Depending on platform, may have to block access to ".pyo" files as
>> well.
>>
>> 3. PythonDebug in general can reveal stack traces to a client when
>> something goes wrong. In worst case, this may reveal secret information.
>>
>> 4. Try to avoid putting source code in actual directories visible to
>> Apache. Especially do not put sensitive information in such files.
>> The reason here is that it only takes one mistake in Apache  
>> configuration
>> and all your code would be visible.
>>
>> 5. If using an extension such as ".html" with AddHandler to map to
>> handler code in actual directory, ensure you block access to ".py"
>> extension if need be.
>>
>>    <Files *.py>
>>    deny from all
>>    </Files>
>>
>> 6. If writing a custom handler, if wanting to return apache.DECLINED,
>> make sure you understand what it does. Specifically, it will cause the
>> builtin default Apache handler to still run, which will serve up static
>> files. Like above, you may need to deny access to certain files as a
>> result.
>>
>> That is all I can think of for now. Sorry if some of it makes no sense,
>> am in a rush.
>>
>> Graham
>>
>> On 03/03/2006, at 12:54 AM, Nicolas Lehuen wrote:
>>
>>> There's an important rule :
>>>
>>> If you use the publisher, everything which is defined in a published
>>> module is generally accessible from the web, except if its name begins
>>> with an underscore.
>>>
>>> For example :
>>>
>>> # index.py
>>> # BAD !
>>> secret_password = "foobar"
>>>
>>> def index(req,password):
>>>     if password != secret_password:
>>>         return util.redirect(req,'/rejected.html')
>>>     else:
>>>         return "Welcome !"
>>>
>>> Your secret password in accessible through
>>> http://my_server/my_folder/index.py/secret_password
>>>
>>> To make sure it won't be accessed, rename secret_password to  
>>> _secret_password.
>>>
>>> There are exceptions to this "everything is accessible" rule, namely
>>> imported modules, new-styles classes and built-in functions cannot be
>>> traversed nor published. This prevents basic leaks like being able to
>>> call sys.exit() from any published module that imports sys. Those
>>> rules are specified in the lib/python/mod_python/publisher.py file, if
>>> you are curious.
>>>
>>> But in any case, be aware that any string defined in a published
>>> module is accessible unless its name is prefixed by an underscore,
>>> which includes your precious database password.
>>>
>>> Regards,
>>> Nicolas
>>>
>>> 2006/3/2, Mike Looijmans <nlv11281@natlab.research.philips.com>:
>>>> As with any server-side scripting, there's:
>>>>
>>>> - Cross-site scripting
>>>> - Code injection
>>>> - SQL injection
>>>>
>>>> But that's typically 'your' fault...
>>>>
>>>> Mike Looijmans
>>>> Philips Natlab / Topic Automation
>>>>
>>>>
>>>> marinus van aswegen wrote:
>>>>> Hi
>>>>>
>>>>> I'd like to publish my page but I'm not sure what security issues
>>>>> mod_python typically face.
>>>>> Any recommendations?
>>>>>
>>>>>
>>>>> Regards
>>>>>
>>>>>
>>>>> --------------------------------------------------------------------
>>>>> ----
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Thu Mar  2 17:04:45 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Mar  2 17:04:48 2006
Subject: [mod_python] How to make a handler for static files?
In-Reply-To: <5ef0bc720602281457x68bbfa83mdd491fcf7920d340@mail.gmail.com>
References: <4402B725.1050501@mischko.com>
	<4402CD29.80007@mischko.com>	<76F6F3ED-2A4C-4F1E-AE53-993CFB1744B8@dscpl.com.au>	<a641cbdd812bb5b993c3df6444b6b249@dscpl.com.au>	<440407DE.10500@mischko.com>	<a6bc453d338ad10206d4f29546ee7fa7@dscpl.com.au>
	<5ef0bc720602281457x68bbfa83mdd491fcf7920d340@mail.gmail.com>
Message-ID: <44076BFD.6040606@jgassociates.ca>

Troy,

Thanks for the PyCon report, and the mod_python flag waving while you 
were there. :)

Jim

Troy Kruthoff wrote:
> Graham,
> 
> I attended (in fact, I almost killed Scott (the originator of this
> thread) driving to a book party).
> 
> I was surprised that there were no sessions specifically about
> mod_python, so I added a BoF meeting (posted the announcement to this
> group).  About 10 people showed up and we talked mostly about how to
> successfully deploy mod_python.  Of the group, only a couple of people
> were actually using mod_python, the rest were seeking additional
> information.  Kevin Lewandowski reported his www.discogs.com site at 2
> million page views (a month I think?) running mod_python on 4
> load-balanced servers.
> 
> The django guys were at the conference (but not the BoF), presented a
> couple topics/sessions, and recommended mod_python for deployment.
> 
> American Greeting also presented a session, I'll have to check my
> notes, but they run a lot of traffic through their online greeting
> services.  However, I asked during the Q & A about their use of
> mod_python, and they do not use it on their main web sites.
> 
> Being new to Python and mod_python and my first PyCon, I can say that
> mod_python seems to be known by those doing web-development with
> Python.  However, there does not seem to be any references to it being
> used for heavy lifting.  I recently had a chat with the co-creator of
> feedlounge.com (a pure Python Ajax application) about their
> experiences with mod_python (they currently are not using it, do to
> ref issues with SQLObject) and he mentioned taking another look at it
> appears updates are coming faster.  Some people at the BoF were not
> aware that mod_python development is as active as it is.
> 
> For what it is worth, I have recently chosen mod_python for the next
> generation of my company's product (a high traffic, b2b web
> application).  When complete, I hope it will be a great reference site
> for others evaluating mod_python.  Early tests show mod_python easliy
> handling 500 reqs/sec with the worker and event MPM's serving 100%
> db-backed dynamic content on modest hardware.  We created and benched
> the same part of our application in PHP and got 200 reqs/sec, 300 with
> opcode caching.  Performance isn't even our primary decision point,
> but it is nice to know mod_python has it nailed.
> 
From gustavo.cordova at q-voz.com  Thu Mar  2 17:20:21 2006
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Thu Mar  2 17:11:39 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <1141335671.4052@dscpl.user.openhosting.com>
References: <1141335671.4052@dscpl.user.openhosting.com>
Message-ID: <44076FA5.8040801@q-voz.com>

Graham Dumpleton wrote:
> Deron Meranda wrote ..
>   
>> On 3/2/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>>     
>>> For example :
>>>
>>> # index.py
>>> # BAD !
>>> secret_password = "foobar"
>>>       
>> Or even better yet, if your code must know about secret passwords
>> (which is common for opening database connections, etc.), use
>> something like,
>>
>>    # index.py
>>    _secret_password = open('.secret','r').read().strip()
>>
>> and then store the password itself in the file ".secret".
>>
>> The leading dot in the filename will insure that Apache won't serve
>> that file up with the default apache config.  [Somebody correct me
>> if this is different for Windows].
>>     
> Stand corrected then. Using a leading dot doesn't protect it on
> UNIX like systems. The only safe way is to not put it in the directory
> in the first place.
>
> BTW, that code wouldn't work anyway, as you use a relative path
> but working directory will not actually be that directory so it will
> not find it.
>
> Graham
>   
*IF* you're going to use Apache's default configuration, all files which 
start with ".ht" are disallowed from all, so, the database password file 
could be:

    .ht_dbpasswd

and it'd be inaccessible to all clients, but locally available.

-gus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060302/429e67b6/attachment.html
From jpg at jgassociates.ca  Thu Mar  2 17:27:12 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Mar  2 17:26:55 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <440769A3.9050802@westcoastaerospace.com>
References: <1141334517.22477@dscpl.user.openhosting.com>
	<440769A3.9050802@westcoastaerospace.com>
Message-ID: <44077140.9050108@jgassociates.ca>

Lots of good practical advice in this thread. Keep it coming. :)

Thanks for creating the summary James. There is already a JIRA issue for 
adding a security section to the documentation. See: 
http://issues.apache.org/jira/browse/MODPYTHON-19
I've added a link in that issue to your FAQ.

I want to make sure a security makes it into mod_python 3.3.

Jim

James Paige wrote:
> These security hints are good stuff to have all in one place. I have 
> edited together a list based on this thread and posted it on the 
> mod_python FAQ at http://www.modpython.org/FAQ/faqw.py?req=all#3.28
> 
> ---
> James Paige
From jpg at jgassociates.ca  Thu Mar  2 17:36:53 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Mar  2 17:36:33 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <44077140.9050108@jgassociates.ca>
References: <1141334517.22477@dscpl.user.openhosting.com>	<440769A3.9050802@westcoastaerospace.com>
	<44077140.9050108@jgassociates.ca>
Message-ID: <44077385.7090700@jgassociates.ca>

Jim Gallacher wrote:
> Lots of good practical advice in this thread. Keep it coming. :)
> 
> Thanks for creating the summary James. There is already a JIRA issue for 
> adding a security section to the documentation. See: 
> http://issues.apache.org/jira/browse/MODPYTHON-19
> I've added a link in that issue to your FAQ.
> 
> I want to make sure a security makes it into mod_python 3.3.

And of course everyone knew I meant "a security section makes it into 
the mod_python 3.3 documentation". ;)

Jim


From deron.meranda at gmail.com  Thu Mar  2 18:16:07 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Thu Mar  2 18:16:12 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <1141335671.4052@dscpl.user.openhosting.com>
References: <1141335671.4052@dscpl.user.openhosting.com>
Message-ID: <5c06fa770603021516r723f754di460ef4f6ce2dadc3@mail.gmail.com>

On 3/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Deron Meranda wrote ..
> >    # index.py
> >    _secret_password = open('.secret','r').read().strip()
>
> Stand corrected then. Using a leading dot doesn't protect it on
> UNIX like systems.

You're right, I typed too fast.  The standard Apache configs
protect files starting with ".ht", not just ".".   (there's a <FilesMatch>
in httpd.conf to catch these).  So you could use ".htsecret" perhaps.

> The only safe way is to not put it in the directory in the first place.

Yes, that's safer still.  But the .ht* prefix is pretty safe too, it's a matter
of convienience (especially if you're under an SELinux environment
and you don't want to/know how to set MAC labels).

> BTW, that code wouldn't work anyway, as you use a relative path
> but working directory will not actually be that directory so it will
> not find it.

Yep, again I just typed my example too quick without paying
attention to the details.

Thanks for keeping me honest.  Bottom line though is to never
put the password in any code; keep it someplace else and read
it in dynamically at module load time.
--
Deron Meranda

From bill.fraser at gmail.com  Thu Mar  2 22:12:18 2006
From: bill.fraser at gmail.com (Bill Fraser)
Date: Thu Mar  2 22:12:22 2006
Subject: [mod_python] changing req.proxyreq on the fly
Message-ID: <b1befe630603021912ib57cc5bu2d65ff8458ac7f1@mail.gmail.com>

Hello, this is my first post to this list, and I'm rather new to
Python, so please excuse me if my question is a trivial one. :)

I'm using Apache2's mod_rewrite for a proxy system on my webserver,
and I've noticed that no matter what, mod_rewrite instructs mod_proxy
to add all the X-Forwarded-* headers, despite the fact that the proxy
request is forward proxy and not a reverse one. Looking at the Apache2
source, mod_proxy specifically mentions in the relevant comment block
that this should NOT be done for forward proxy requests (and in fact
they are messing up the application this is for), yet mod_rewrite will
ALWAYS add them, no matter what the nature of the proxy request is.

Looking further in the source, I found that the way to change this
behavior is to change the value of the r->proxyreq variable from
PROXYREQ_REVERSE (what mod_rewrite sets it to) to PROXYREQ_PROXY. A
nice thing about Python is its ability to attach itself to arbitrary
points in the request process, so I thought I could change this value.
No luck. req.proxyreq is marked as read-only.

Is there any other way to change the value of req.proxyreq? Is there
some obscure Apache setting that might do the same that I've somehow
missed? Yes, I know I could write an Apache module in C that would get
this done, but that's way more than I want to do. I might as well
recompile Apache with the section that adds the headers commented out.

The method I tried was to define a this method:

def fixuphandler(req):
    req.proxyreq = 1
    return apache.OK

and use this in a PythonFixupHandler Apache directive. This causes a
500 error and throws 'TypeError: attribute 'proxyreq' of 'mp_request'
objects is not writable'.

Thanks in advance,
-Bill

From grahamd at dscpl.com.au  Thu Mar  2 22:23:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  2 22:23:28 2006
Subject: [mod_python] Getting the script name with publisher
Message-ID: <1141356203.14919@dscpl.user.openhosting.com>

Bart Whiteley wrote ..
> In order to generate hyperlinks, I need a reliable way to determine the
> script name while using the publisher handler.  I hunted around for a
> bit, and only found this from years ago that wasn't answered: 
> http://www.modpython.org/pipermail/mod_python/2003-September/014133.html
> 
> I was doing this for a while: 
>   req.uri[:-len(req.path_info)]
> 
> This worked until I renamed my script to index.py, then it fell apart.
> So, I guess what I really need is not the script name, but the portion
> of the URI prior to the method name.  In some cases this might be the
> script name (possibly without the '.py').  In the case of index.py, it
> might be the folder containing index.py.  
> 
> As an example, I've set up a script loosely based on hello.py: 
> http://modpython.org/live/current/doc-html/hand-pub-intro.html
> 
> I place it in /srv/www/htdocs/mptest/index.py (docroot
> is /srv/www/htdocs).
> When I access it like this: http://www/mptest/say/hello, 
> I see the following vars: 
> SCRIPT_FILENAME		/srv/www/htdocs/mptest/say
> PATH_INFO		/hello
> SCRIPT_NAME		/mptest/say
> 
> In this example, I'd like to isolate "/mptest".
> 
> Does anyone have a way to reliable isolate the script name, or the
> folder containing index.py? 

Been a busy week for me, so not much time to post, but I'll have a
go at this now.

The basic problem with publisher is that you can have multiple URLs
map to the same thing. For example, with the Apache configuration:

  SetHandler mod_python
  PythonHandler mod_python.publisher

  Options +MultiViews
  MultiViewsMatch Handlers
  AddType text/html;qs=1.0 .py
  AddType text/html;qs=0.9 .html
  AddType text/plain;qs=0.8 .txt

If you have a file called "index.py" containing an index() function, that
function can be addressed using any of the following:

  /
  /index
  /index.py
  /index/
  /index.py/
  /index/index
  /index.py/index
  /index/index/
  /index.py/index/

If that function needs to generate a HTML page with a link in it to one
of the other resources in that directory it can be hard to work out what
the link should be if wanting to use relative URLs.

This is because depending on which of the URLs was used, you might have
to use either "./", "../" or "../../".

I'm guessing that most people choose one they think works, not realising
that if one uses one of the other URLs that can match, that it will
break. I have seen others suggest various ways of working it out
programatically, but from what I have seen they generally don't work in
one situation or another.

Gathering together bits and pieces of code from various stuff I have, I
think the code I will provide in this email should work in all cases,
including where code is in a subdirectory of where PythonHandler
was defined. Please disagree as you see fit as better that problems be
found so we can work out a good solution.

Rather than try and explain each bit of in the email, I have added some
comments to the actual code. The code does a lot of things and is put
together as a bit of a test, so you might want to extract out bits you
want. If you don't understand why something is done, quote the code
and you question and I will answer as best I can.

What the code does is work out base URL values for the directory the
code file lives in and also for where the Python*Handler directive is
defined when possible. The base URLs are available as absolute or
relative. The idea is that you add your relative URL onto the end of
either of these depending on the context from which you want to refer to
other resources.

  link = posixpath.join(req.script_baseurl_rel, "login.html")

Anyway, have a play. I have included the main bit of code as text in
the email, but also along with my .htaccess file and other files to test
it as an attachment. If you intend using bits of it, make sure you look
at the attached stuff as some parts of what the code does rely on it
being run before the publisher has even been run, meaning it has to
be run as a stacked handler.

Enjoy.

Graham

# code starts here.

import posixpath, os

from mod_python import apache

class Handler:
    def __init__(self, name):
        self.__name = name
    def __call__(self, req):
        req.content_type = 'text/plain'
        req.write("object = %s\n" % self.__name)
        req.write("req.filename = %s\n" % req.filename)
        req.write("req.uri = %s\n" % req.uri)
        req.write("req.path_info = %s\n" % req.path_info)
        req.write("req.hlist.directory = %s\n" % req.hlist.directory)
        req.write("\n")
        req.write("original_filename = %s\n" % req.original_filename)
        req.write("normalised_uri = %s\n" % req.normalised_uri)
        req.write("script_name = %s\n" % req.script_name)
        req.write("script_baseurl_abs = %s\n" % req.script_baseurl_abs)
        req.write("script_baseurl_rel = %s\n" % req.script_baseurl_rel)
        req.write("handler_baseurl_abs = %s\n" % req.handler_baseurl_abs)
        req.write("handler_baseurl_rel = %s\n" % req.handler_baseurl_rel)
        req.write("\n")
        req.write("script_login_page_abs = %s\n" %
            posixpath.join(req.script_baseurl_abs, "login.html"))
        req.write("script_login_page_rel = %s\n" %
            posixpath.join(req.script_baseurl_rel, "login.html"))
        req.write("handler_login_page_abs = %s\n" %
            posixpath.join(req.handler_baseurl_abs, "login.html"))
        req.write("handler_login_page_rel = %s\n" %
            posixpath.join(req.handler_baseurl_rel, "login.html"))

def handler(req):

    # Keep a copy of original req.filename as it will
    # be modified by the publisher.

    req.original_filename = req.filename

    # First normalise req.uri when using it as it will
    # preserve repeated slashes in it, whereas such
    # slashes are removed from req.path_info. We must
    # use normalisation function from posixpath and not
    # os.path as Apache always gaurantees to use POSIX
    # format and using os.path version will change
    # slashes to Win32 backslash.

    req.normalised_uri = posixpath.normpath(req.uri)

    # When normalising the path, it will throw away the
    # trailing slash, thus we need to put it back if it
    # appeared in the original.

    if req.normalised_uri:
        if req.normalised_uri != '/' and req.uri[-1] == '/':
            req.normalised_uri += '/'

    # The req.path_info attribute was already normalised
    # above so can simply determine script name by
    # subtracting its length from normalised uri. Note
    # that the script name in this situation can be a
    # directory. In that situation it will have a
    # trailing slash to distinguish it from case whereby
    # script name identifies an actual file.

    if req.path_info:
        req.script_name = req.normalised_uri[:-len(req.path_info)]
    else:
        req.script_name = req.normalised_uri

    # A base url can now be calculated for the directory
    # the script is contained in.

    req.script_baseurl_abs = posixpath.dirname(req.script_name)

    path = req.normalised_uri[len(req.script_baseurl_abs):]
    step = path.count('/') - 1

    if step:
        req.script_baseurl_rel = step * '../'
    else:
        req.script_baseurl_rel = './'

    # A base url can also be calculated corresponding to
    # where the Python*Handler directive was defined.
    # Such a base url can be used in conjunction with a
    # partial path instead of using relative URLs. It
    # can though also be used to help automate the
    # determination of relative URLs. This code will
    # only work if Python*Handler directive appeared in
    # a Directory directive. That is, it will not work
    # if Python*Handler directive appeared inside of a
    # VirtualHost, Location or Files directive. This
    # is because req.hlist.directory will not be set
    # to a useable value in the latter cases. It is
    # also not possible to use this code from inside
    # of mod_python.publisher as it can modify the
    # req.filename attribute, which will stuff this up
    # and the original value will not be available.
    # Finally, also will not work on Win32 for mod_python
    # prior to 3.2.7 as req.hlist.directory has an extra
    # backslash on the path when it shouldn't.

    if req.hlist.directory and os.path.isabs(req.hlist.directory):
        length = len(req.original_filename)
        length -= len(req.hlist.directory) - 1
        length += len(req.path_info or '')

        req.handler_baseurl_abs = req.normalised_uri[:-length]

    else:
        req.handler_baseurl_abs = '/'

    path = req.normalised_uri[len(req.handler_baseurl_abs):]
    step = path.count('/') - 1

    if step:
        req.handler_baseurl_rel = step * '../'
    else:
        req.handler_baseurl_rel = './'

    return apache.OK


-------------- next part --------------
A non-text attachment was scrubbed...
Name: urlstuff.tar
Type: application/x-tar
Size: 20480 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060302/da6ee225/urlstuff-0001.tar
From grahamd at dscpl.com.au  Thu Mar  2 22:37:51 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar  2 22:37:54 2006
Subject: [mod_python] changing req.proxyreq on the fly
Message-ID: <1141357071.25062@dscpl.user.openhosting.com>

Bill Fraser wrote ..
> Hello, this is my first post to this list, and I'm rather new to
> Python, so please excuse me if my question is a trivial one. :)
> 
> I'm using Apache2's mod_rewrite for a proxy system on my webserver,
> and I've noticed that no matter what, mod_rewrite instructs mod_proxy
> to add all the X-Forwarded-* headers, despite the fact that the proxy
> request is forward proxy and not a reverse one. Looking at the Apache2
> source, mod_proxy specifically mentions in the relevant comment block
> that this should NOT be done for forward proxy requests (and in fact
> they are messing up the application this is for), yet mod_rewrite will
> ALWAYS add them, no matter what the nature of the proxy request is.
> 
> Looking further in the source, I found that the way to change this
> behavior is to change the value of the r->proxyreq variable from
> PROXYREQ_REVERSE (what mod_rewrite sets it to) to PROXYREQ_PROXY. A
> nice thing about Python is its ability to attach itself to arbitrary
> points in the request process, so I thought I could change this value.
> No luck. req.proxyreq is marked as read-only.

There are various members in the req object in mod_python which are
read only when they should be writable as well. I have been slowly identifying
them and making them writable as appropriate.

In the case of req.proxyreq, because it is an integer value, I think only
a one line change is required to make it writable.

Index: src/requestobject.c
===================================================================
--- src/requestobject.c (revision 382636)
+++ src/requestobject.c (working copy)
@@ -1675,7 +1675,7 @@
     {"main",       (getter)getmakeobj, NULL, "If subrequest, pointer to the main request", "main"},
     {"the_request", (getter)getreq_recmbr, NULL, "First line of request", "the_request"},
     {"assbackwards", (getter)getreq_recmbr, (setter)setreq_recmbr, "HTTP/0.9 \"simple\" request", "assbackwards"},
-    {"proxyreq",     (getter)getreq_recmbr, NULL, "A proxy request: one of apache.PROXYREQ_* values", "proxyreq"},
+    {"proxyreq",     (getter)getreq_recmbr, (setter)setreq_recmbr, "A proxy request: one of apache.PROXYREQ_* values", "proxyreq"},
     {"header_only",  (getter)getreq_recmbr, NULL, "HEAD request, as oppsed to GET", "header_only"},
     {"protocol",     (getter)getreq_recmbr, NULL, "Protocol as given to us, or HTTP/0.9", "protocol"},
     {"proto_num",    (getter)getreq_recmbr, NULL, "Protocol version. 1.1 = 1001", "proto_num"},

I haven't tested this yet though.

Can you possibly add an issue for this at:

  http://issues.apache.org/jira/browse/MODPYTHON

If not I'll add one later and include your email.

Graham
From grahamd at dscpl.com.au  Fri Mar  3 00:39:47 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  3 00:39:51 2006
Subject: [mod_python] changing req.proxyreq on the fly
Message-ID: <1141364387.8818@dscpl.user.openhosting.com>

FWIW, if req.proxyreq is made writable, it would be good at the same
time to make req.uri writable as well. This would allow for example a
PythonTransHandler which did something like the following:

def transhandler(req):
    if req.proxyreq:
        return apache.DECLINED

    if req.uri.find('/search/') == 0:
        req.proxyreq = apache.PROXYREQ_PROXY
        req.uri = 'http://www.google.com/' + req.uri[len('/search/'):]
        req.filename= "proxy:%s' % req.uri
        req.handler= 'proxy-server'
        return apache.OK

    return apache.DECLINED

That is, you could from within a mod_python handler when detecting
a certain URL prefix, dynamically cause Apache to proxy the request to
another location.

This example is based on a mod_perl example which does something
similar. See:

  http://162.105.203.19/apache-doc/88.htm#BIN194

I'll definitely create a JIRA issue for this, as can see a use for this
in some stuff I have to do. I was going to create a static snippet of
Apache configuration with lots of proxy stuff, but this would be more
interesting.

Graham

Graham Dumpleton wrote ..
> Bill Fraser wrote ..
> > Hello, this is my first post to this list, and I'm rather new to
> > Python, so please excuse me if my question is a trivial one. :)
> > 
> > I'm using Apache2's mod_rewrite for a proxy system on my webserver,
> > and I've noticed that no matter what, mod_rewrite instructs mod_proxy
> > to add all the X-Forwarded-* headers, despite the fact that the proxy
> > request is forward proxy and not a reverse one. Looking at the Apache2
> > source, mod_proxy specifically mentions in the relevant comment block
> > that this should NOT be done for forward proxy requests (and in fact
> > they are messing up the application this is for), yet mod_rewrite will
> > ALWAYS add them, no matter what the nature of the proxy request is.
> > 
> > Looking further in the source, I found that the way to change this
> > behavior is to change the value of the r->proxyreq variable from
> > PROXYREQ_REVERSE (what mod_rewrite sets it to) to PROXYREQ_PROXY. A
> > nice thing about Python is its ability to attach itself to arbitrary
> > points in the request process, so I thought I could change this value.
> > No luck. req.proxyreq is marked as read-only.
> 
> There are various members in the req object in mod_python which are
> read only when they should be writable as well. I have been slowly identifying
> them and making them writable as appropriate.
> 
> In the case of req.proxyreq, because it is an integer value, I think only
> a one line change is required to make it writable.
> 
> Index: src/requestobject.c
> ===================================================================
> --- src/requestobject.c (revision 382636)
> +++ src/requestobject.c (working copy)
> @@ -1675,7 +1675,7 @@
>      {"main",       (getter)getmakeobj, NULL, "If subrequest, pointer to
> the main request", "main"},
>      {"the_request", (getter)getreq_recmbr, NULL, "First line of request",
> "the_request"},
>      {"assbackwards", (getter)getreq_recmbr, (setter)setreq_recmbr, "HTTP/0.9
> \"simple\" request", "assbackwards"},
> -    {"proxyreq",     (getter)getreq_recmbr, NULL, "A proxy request: one
> of apache.PROXYREQ_* values", "proxyreq"},
> +    {"proxyreq",     (getter)getreq_recmbr, (setter)setreq_recmbr, "A
> proxy request: one of apache.PROXYREQ_* values", "proxyreq"},
>      {"header_only",  (getter)getreq_recmbr, NULL, "HEAD request, as oppsed
> to GET", "header_only"},
>      {"protocol",     (getter)getreq_recmbr, NULL, "Protocol as given to
> us, or HTTP/0.9", "protocol"},
>      {"proto_num",    (getter)getreq_recmbr, NULL, "Protocol version. 1.1
> = 1001", "proto_num"},
> 
> I haven't tested this yet though.
> 
> Can you possibly add an issue for this at:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON
> 
> If not I'll add one later and include your email.
> 
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From nd at perlig.de  Fri Mar  3 01:36:44 2006
From: nd at perlig.de (=?iso-8859-1?q?Andr=E9_Malo?=)
Date: Fri Mar  3 01:36:50 2006
Subject: [mod_python] changing req.proxyreq on the fly
In-Reply-To: <b1befe630603021912ib57cc5bu2d65ff8458ac7f1@mail.gmail.com>
References: <b1befe630603021912ib57cc5bu2d65ff8458ac7f1@mail.gmail.com>
Message-ID: <200603030736.44848@news.perlig.de>

* Bill Fraser wrote:

> I'm using Apache2's mod_rewrite for a proxy system on my webserver,
> and I've noticed that no matter what, mod_rewrite instructs mod_proxy
> to add all the X-Forwarded-* headers, despite the fact that the proxy
> request is forward proxy and not a reverse one. Looking at the Apache2
> source, mod_proxy specifically mentions in the relevant comment block
> that this should NOT be done for forward proxy requests (and in fact
> they are messing up the application this is for), yet mod_rewrite will
> ALWAYS add them, no matter what the nature of the proxy request is.

This bug was fixed in 2.0.50. You just might want to update your ancient 
version :-)

nd
-- 
Already I've seen people (really!) write web URLs in the form:
http:\\some.site.somewhere
[...] How soon until greengrocers start writing "apples $1\pound"
or something?                           -- Joona I Palaste in clc
From mvanaswegen at gmail.com  Fri Mar  3 03:12:01 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Fri Mar  3 03:12:05 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <5c06fa770603021516r723f754di460ef4f6ce2dadc3@mail.gmail.com>
References: <1141335671.4052@dscpl.user.openhosting.com>
	<5c06fa770603021516r723f754di460ef4f6ce2dadc3@mail.gmail.com>
Message-ID: <ffa39deb0603030012t7ea891fexabec5da1fb27d2f@mail.gmail.com>

Thanks guys, just what I was looking for. I suspect the safest way to deploy
my mod_python app is to ensure that all calls go through one function via
the publisher ...eg. cmd.py/<what ever cmd you want>.

I'd like to be able to detect if debugging is on via my cmd, so that it will
refuse to exec and return a page indicating that it's down for maint. Is
there a way from inside my script?

Next step is to sanitise input, I'm thinking of using a white list of chars.
Is there a way to ensure that all input will be non Unicode?

Marinus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060303/98db6a37/attachment.html
From grahamd at dscpl.com.au  Fri Mar  3 03:31:52 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  3 03:32:17 2006
Subject: [mod_python] Mod_python Security
In-Reply-To: <ffa39deb0603030012t7ea891fexabec5da1fb27d2f@mail.gmail.com>
References: <1141335671.4052@dscpl.user.openhosting.com>
	<5c06fa770603021516r723f754di460ef4f6ce2dadc3@mail.gmail.com>
	<ffa39deb0603030012t7ea891fexabec5da1fb27d2f@mail.gmail.com>
Message-ID: <B06A0E4B-BC5C-4D90-8466-A3DE59A08B55@dscpl.com.au>


On 03/03/2006, at 7:12 PM, marinus van aswegen wrote:

> Thanks guys, just what I was looking for. I suspect the safest way  
> to deploy my mod_python app is to ensure that all calls go through  
> one function via the publisher ...eg. cmd.py/<what ever cmd you want>.

Using publisher doesn't automatically mean it will be safer. In some  
respects
publisher makes it easier to inadvertently stuff things up because it  
does a
lot of things automagically. :-)

> I'd like to be able to detect if debugging is on via my cmd, so  
> that it will refuse to exec and return a page indicating that it's  
> down for maint. Is there a way from inside my script?

Not sure exactly what you mean here. If you are wanting a way to  
determine
if PythonDebug is set to On, use:

   if int(req.get_config().get("PythonDebug","0"):
      ...

> Next step is to sanitise input, I'm thinking of using a white list  
> of chars. Is there a way to ensure that all input will be non Unicode?

Again not sure exactly what you mean here. If you want to modify the  
content
of POST requests as it arrives, you could look at input filters.

Graham
From grahamd at dscpl.com.au  Fri Mar  3 04:41:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  3 04:41:34 2006
Subject: [mod_python] changing req.proxyreq on the fly
In-Reply-To: <b1befe630603022253m628c8e47pdcbaa40b6b9283a5@mail.gmail.com>
References: <1141364387.8818@dscpl.user.openhosting.com>
	<b1befe630603022253m628c8e47pdcbaa40b6b9283a5@mail.gmail.com>
Message-ID: <8eeebaf3e6aafa5ad64734c6b77fc101@dscpl.com.au>


>> FWIW, if req.proxyreq is made writable, it would be good at the same
>> time to make req.uri writable as well. This would allow for example a
>> PythonTransHandler which did something like the following:
>>
>> def transhandler(req):
>>     if req.proxyreq:
>>         return apache.DECLINED
>>
>>     if req.uri.find('/search/') == 0:
>>         req.proxyreq = apache.PROXYREQ_PROXY
>>         req.uri = 'http://www.google.com/' + req.uri[len('/search/'):]
>>         req.filename= "proxy:%s' % req.uri
>>         req.handler= 'proxy-server'
>>         return apache.OK
>>
>>     return apache.DECLINED
>>
>> That is, you could from within a mod_python handler when detecting
>> a certain URL prefix, dynamically cause Apache to proxy the request to
>> another location.
>>
>> This example is based on a mod_perl example which does something
>> similar. See:
>>
>>   http://162.105.203.19/apache-doc/88.htm#BIN194
>>
>> I'll definitely create a JIRA issue for this, as can see a use for 
>> this
>> in some stuff I have to do. I was going to create a static snippet of
>> Apache configuration with lots of proxy stuff, but this would be more
>> interesting.
>
> Hmm, interesting idea. It would be great to see something like that. I
> can think of all kinds of stuff I've done with mod_rewrite and
> horrible PHP hackery that would have been a lot better and simpler
> with mod_python and something similar to what you mentioned.

Well, if you want to play further, patch for making both req.proxyreq
and req.uri modifiable is at end of this email. An example to play with
is as follows. Doesn't even need to be a transhandler. This example
does it as a fixuphandler which is possibly easier as it can be in
.htaccess file for a specific directory. The example will take any part
of the URL mapping below the directory and map it onto the remote site
instead. Of course, the site has to be proxy friendly and relocatable
within the URL namespace in as much as always using relative URLs and
not absolute URLs.

# ProxyPassReverse equivalent.

import posixpath

from mod_python import apache

def fixuphandler(req):

   if req.proxyreq:
     return apache.DECLINED

   normalised_uri = posixpath.normpath(req.uri)

   if normalised_uri:
     if normalised_uri != '/' and req.uri[-1] == '/':
       normalised_uri += '/'

   length = len(req.filename)
   length -= len(req.hlist.directory) - 1
   length += len(req.path_info or '')

   baseurl = normalised_uri[:-length]
   path = normalised_uri[len(baseurl):]

   req.proxyreq = apache.PROXYREQ_REVERSE
   req.uri = 'http://www.dscpl.com.au' + path
   req.filename = 'proxy:%s' % req.uri
   req.handler = 'proxy-server'

   return apache.OK

# Actual patches.

Index: src/requestobject.c
===================================================================
--- src/requestobject.c (revision 382636)
+++ src/requestobject.c (working copy)
@@ -1515,6 +1515,15 @@
              apr_pstrdup(self->request_rec->pool, 
PyString_AsString(val));
          return 0;
      }
+    else if (strcmp(name, "uri") == 0) {
+        if (! PyString_Check(val)) {
+            PyErr_SetString(PyExc_TypeError, "uri must be a string");
+            return -1;
+        }
+        self->request_rec->uri =
+            apr_pstrdup(self->request_rec->pool, 
PyString_AsString(val));
+        return 0;
+    }

      return PyMember_SetOne((char*)self->request_rec,
                             find_memberdef(request_rec_mbrs, 
(char*)name),
@@ -1675,7 +1684,7 @@
      {"main",       (getter)getmakeobj, NULL, "If subrequest, pointer 
to the main request", "main"},
      {"the_request", (getter)getreq_recmbr, NULL, "First line of 
request", "the_request"},
      {"assbackwards", (getter)getreq_recmbr, (setter)setreq_recmbr, 
"HTTP/0.9 \"simple\" request", "assbackwards"},
-    {"proxyreq",     (getter)getreq_recmbr, NULL, "A proxy request: 
one of apache.PROXYREQ_* values", "proxyreq"},
+    {"proxyreq",     (getter)getreq_recmbr, (setter)setreq_recmbr, "A 
proxy request: one of apache.PROXYREQ_* values", "proxyreq"},
      {"header_only",  (getter)getreq_recmbr, NULL, "HEAD request, as 
oppsed to GET", "header_only"},
      {"protocol",     (getter)getreq_recmbr, NULL, "Protocol as given 
to us, or HTTP/0.9", "protocol"},
      {"proto_num",    (getter)getreq_recmbr, NULL, "Protocol version. 
1.1 = 1001", "proto_num"},
@@ -1709,7 +1718,7 @@
      {"no_cache",      (getter)getreq_recmbr, NULL, "This response in 
non-cacheable", "no_cache"},
      {"no_local_copy", (getter)getreq_recmbr, NULL, "There is no local 
copy of the response", "no_local_copy"},
      {"unparsed_uri",  (getter)getreq_recmbr, NULL, "The URI without 
any parsing performed", "unparsed_uri"},
-    {"uri",           (getter)getreq_recmbr, NULL, "The path portion 
of URI", "uri"},
+    {"uri",           (getter)getreq_recmbr, (setter)setreq_recmbr, 
"The path portion of URI", "uri"},
      {"filename",      (getter)getreq_recmbr, (setter)setreq_recmbr, 
"The file name on disk that this request corresponds to", "filename"},
      {"canonical_filename", (getter)getreq_recmbr, NULL, "The true 
filename (req.filename is canonicalized if they dont match)", 
"canonical_filename"},
      {"path_info",     (getter)getreq_recmbr, (setter)setreq_recmbr, 
"Path_info, if any", "path_info"},


Graham

From grahamd at dscpl.com.au  Fri Mar  3 05:00:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  3 05:00:54 2006
Subject: [mod_python] problem setting up mod_python under Ubuntu Breezy
In-Reply-To: <53e1ea310603021337p75181bcbod1b364ce29d6c168@mail.gmail.com>
References: <1141334696.24611@dscpl.user.openhosting.com>
	<53e1ea310603021337p75181bcbod1b364ce29d6c168@mail.gmail.com>
Message-ID: <810066F9-9C53-4ED1-8E0B-9A8A8482124D@dscpl.com.au>


On 03/03/2006, at 8:37 AM, Dan Lenski wrote:

> On 3/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> If you are using all the default packages from the distribution,
>> including that for mod_python, it might be the case that the  
>> mod_python
>> package was originally compiled against an older version of Python  
>> and
>> thus will not work. Can you build the mod_python package yourself  
>> from
>> source code and use that instead?
>
> Thanks for the quick reply.  Your mod_python guide has been very  
> helpful to me.
>
> The package is called libapache-mod-python2.4, and it explicitly
> depends on python2.4.  When I run "strings mod_python.so", I come up
> with the string 2.4.1a0, whereas "python -V" gives me 2.4.2
>
> Could it be that this minor version difference is causing the
> conflict?  If so, I'll compile my own package ASAP.  Thanks,

Normally a minor sub revision change wouldn't cause a problem as
Python directories tend to only use major and minor version numbers
in directory names, eg. 2.4.

Anyway, if you don't mind compiling would definitely suggest that. I
would though strongly encourage you to upgrade to Apache 2.0 and
mod_python 3.2.8 in the process.

Graham
From jcruff at gmail.com  Fri Mar  3 12:02:19 2006
From: jcruff at gmail.com (John Ruff)
Date: Fri Mar  3 12:02:39 2006
Subject: [mod_python] 411 Length Required for POST
Message-ID: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>

I'm using a XMLHttpRequest to send a POST to a mod_python script, but  
I'm getting "HTTP/1.x 411 Length Required" back to the browser.  I've  
set the 'Content-Length' with my XMLHttpRequest object using [code] 
request.setRequestHeader('Content-Length', '0')[/code] but doesn't  
work, this doesn't happen when posting to a php script.  I'm using  
mod_python.publisher as my handler.  Any ideas?


___________________
John Ruff
jcruff@gmail.com

"No one can see past a choice they don't understand." --The Oracle



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060303/345cbff3/attachment.html
From deron.meranda at gmail.com  Fri Mar  3 12:41:44 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar  3 12:41:53 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
Message-ID: <5c06fa770603030941y50f464c1y8ff75fd6fafd2fe0@mail.gmail.com>

On 3/3/06, John Ruff <jcruff@gmail.com> wrote:
> I'm using a XMLHttpRequest to send a POST to a mod_python script, but I'm
> getting "HTTP/1.x 411 Length Required" back to the browser.  I've set the
> 'Content-Length' with my XMLHttpRequest object using
> [code]request.setRequestHeader('Content-Length',
> '0')[/code] but doesn't work, this doesn't happen when posting to a php
> script.

Are you by any chance sending a "chunked" transfer-encoding?
Are you sending a large amount of data?

mod_python's FieldStorage classes specifically require a Content-Length
header when decoding a POST request (and hence can't decode a
chunked request body).

You may try bumping down to HTTP/1.0 rather than HTTP/1.1, which
should prevent your request from being chunked.
--
Deron Meranda

From jcruff at gmail.com  Fri Mar  3 12:52:59 2006
From: jcruff at gmail.com (John Ruff)
Date: Fri Mar  3 12:53:32 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <5c06fa770603030941y50f464c1y8ff75fd6fafd2fe0@mail.gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<5c06fa770603030941y50f464c1y8ff75fd6fafd2fe0@mail.gmail.com>
Message-ID: <15CCDE5E-A638-42A5-82AC-A324C515D996@gmail.com>

Good info, but no, I'm not sending "chunked" data.  I will try HTTP/ 
1.0 anyway and see if the results differ.  Thanks.

___________________
John Ruff
jcruff@gmail.com

"No one can see past a choice they don't understand." --The Oracle



On Mar 3, 2006, at 12:41 PM, Deron Meranda wrote:

> On 3/3/06, John Ruff <jcruff@gmail.com> wrote:
>> I'm using a XMLHttpRequest to send a POST to a mod_python script,  
>> but I'm
>> getting "HTTP/1.x 411 Length Required" back to the browser.  I've  
>> set the
>> 'Content-Length' with my XMLHttpRequest object using
>> [code]request.setRequestHeader('Content-Length',
>> '0')[/code] but doesn't work, this doesn't happen when posting to  
>> a php
>> script.
>
> Are you by any chance sending a "chunked" transfer-encoding?
> Are you sending a large amount of data?
>
> mod_python's FieldStorage classes specifically require a Content- 
> Length
> header when decoding a POST request (and hence can't decode a
> chunked request body).
>
> You may try bumping down to HTTP/1.0 rather than HTTP/1.1, which
> should prevent your request from being chunked.
> --
> Deron Meranda

From nick at dd.revealed.net  Fri Mar  3 13:32:39 2006
From: nick at dd.revealed.net (Nick)
Date: Fri Mar  3 13:33:08 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
Message-ID: <44088BC7.1050402@dd.revealed.net>

Also of note, FieldStorage will raise HTTP_NOT_IMPLEMENTED if the
content-type is not x-www-form-urlencoded or a multipart, which you may
discover after solving the content-length problem.

Nick

John Ruff wrote:
>  I'm using a XMLHttpRequest to send a POST to a mod_python script, but
> I'm getting "HTTP/1.x 411 Length Required" back to the browser.  I've
> set the 'Content-Length' with my XMLHttpRequest object using
> [code]request.setRequestHeader('Content-Length', '0')[/code] but doesn't
> work, this doesn't happen when posting to a php script.  I'm using
> mod_python.publisher as my handler.  Any ideas?

From jcruff at gmail.com  Fri Mar  3 14:03:14 2006
From: jcruff at gmail.com (John Ruff)
Date: Fri Mar  3 14:03:19 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <44088BC7.1050402@dd.revealed.net>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
Message-ID: <BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>

Thanks, actually I'm already using x-www-form-urlencoded originally  
as a test to confirm the header was being set with XMLHtttpRequest's  
setRequestHeader() method (which is it).  But for whatever reason the  
Content-Length is not being set in the POST header.

___________________
John Ruff
jcruff@gmail.com

"No one can see past a choice they don't understand." --The Oracle



On Mar 3, 2006, at 1:32 PM, Nick wrote:

> Also of note, FieldStorage will raise HTTP_NOT_IMPLEMENTED if the
> content-type is not x-www-form-urlencoded or a multipart, which you  
> may
> discover after solving the content-length problem.
>
> Nick
>
> John Ruff wrote:
>>  I'm using a XMLHttpRequest to send a POST to a mod_python script,  
>> but
>> I'm getting "HTTP/1.x 411 Length Required" back to the browser.  I've
>> set the 'Content-Length' with my XMLHttpRequest object using
>> [code]request.setRequestHeader('Content-Length', '0')[/code] but  
>> doesn't
>> work, this doesn't happen when posting to a php script.  I'm using
>> mod_python.publisher as my handler.  Any ideas?
>

From deron.meranda at gmail.com  Fri Mar  3 14:14:12 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar  3 14:14:18 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
Message-ID: <5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>

On 3/3/06, John Ruff <jcruff@gmail.com> wrote:
> Thanks, actually I'm already using x-www-form-urlencoded originally
> as a test to confirm the header was being set with XMLHtttpRequest's
> setRequestHeader() method (which is it).  But for whatever reason the
> Content-Length is not being set in the POST header.

Are you actually sending any content?

POST requests should almost always be sent with multipart/form-data.

What browser/user agent are you using?  Can you include a
(short) snippet of your javascript code where you are setting up
can calling the XMLHttpRequest object.
--
Deron Meranda

From nick at dd.revealed.net  Fri Mar  3 14:16:27 2006
From: nick at dd.revealed.net (Nick)
Date: Fri Mar  3 14:16:31 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
Message-ID: <4408960B.20708@dd.revealed.net>

Hmm.... in my experience, XMLHttpRequest() automagically puts the
content-length header in based on the size of whatever is passed in send().
 You shouldn't have to explicitly specify a content-length, and I would
think that if you did it would get overridden.

Nick

John Ruff wrote:
> Thanks, actually I'm already using x-www-form-urlencoded originally as a
> test to confirm the header was being set with XMLHtttpRequest's
> setRequestHeader() method (which is it).  But for whatever reason the
> Content-Length is not being set in the POST header.
> 
> ___________________
> John Ruff
> jcruff@gmail.com
> 
> "No one can see past a choice they don't understand." --The Oracle
> 
> 
> 
> On Mar 3, 2006, at 1:32 PM, Nick wrote:
> 
>> Also of note, FieldStorage will raise HTTP_NOT_IMPLEMENTED if the
>> content-type is not x-www-form-urlencoded or a multipart, which you may
>> discover after solving the content-length problem.
>>
>> Nick
>>
>> John Ruff wrote:
>>>  I'm using a XMLHttpRequest to send a POST to a mod_python script, but
>>> I'm getting "HTTP/1.x 411 Length Required" back to the browser.  I've
>>> set the 'Content-Length' with my XMLHttpRequest object using
>>> [code]request.setRequestHeader('Content-Length', '0')[/code] but doesn't
>>> work, this doesn't happen when posting to a php script.  I'm using
>>> mod_python.publisher as my handler.  Any ideas?
>>

From jcruff at gmail.com  Fri Mar  3 14:45:54 2006
From: jcruff at gmail.com (John Ruff)
Date: Fri Mar  3 14:45:59 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
Message-ID: <CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>

Here's the javascript code for setting up the XMLHttpRequest.  *Note:  
This is not production code.

[code]
function getLogData() {
     /* Create a new XMLHttpRequest object to talk to the Web server */
     /*@cc_on @*/
     /*@if (@_jscript_version >= 5)
     try {
       xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
     } catch (e) {
       try {
         xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
       } catch (e2) {
         xmlHttp = false;
       }
     }
     @end @*/

     if (!xmlHttp && typeof XMLHttpRequest != 'undefined') {
       xmlHttp = new XMLHttpRequest();
     }

     xmlHttp.abort();
     xmlHttp.onreadystatechange = handleHttpResponse;
     xmlHttp.open("POST", url, true);
     xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form- 
urlencoded')
     xmlHttp.setRequestHeader('Content-length', '0');
     xmlHttp.send(null);
}
[/code]

And here's the header information:

[snippet]
POST /python/adodb/pixfifo/get HTTP/1.1
Host: localhost:8880
User-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv: 
1.8) Gecko/20051204 Firefox/1.5
Accept: text/xml,application/xml,application/xhtml+xml,text/ 
html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Pragma: no-cache
Cache-Control: no-cache


HTTP/1.x 411 Length Required
Date: Fri, 03 Mar 2006 19:41:27 GMT
Server: Apache/2.0.55 (Unix) DAV/2 mod_python/3.2.7 Python/2.3.5 PHP/ 
5.1.2 mod_ssl/2.0.55 OpenSSL/0.9.8a
Content-Length: 390
Connection: close
Content-Type: text/html; charset=iso-8859-1
[/snippet]

Thanks for reviewing.
___________________
John Ruff
jcruff@gmail.com

"No one can see past a choice they don't understand." --The Oracle



On Mar 3, 2006, at 2:14 PM, Deron Meranda wrote:

> On 3/3/06, John Ruff <jcruff@gmail.com> wrote:
>> Thanks, actually I'm already using x-www-form-urlencoded originally
>> as a test to confirm the header was being set with XMLHtttpRequest's
>> setRequestHeader() method (which is it).  But for whatever reason the
>> Content-Length is not being set in the POST header.
>
> Are you actually sending any content?
>
> POST requests should almost always be sent with multipart/form-data.
>
> What browser/user agent are you using?  Can you include a
> (short) snippet of your javascript code where you are setting up
> can calling the XMLHttpRequest object.
> --
> Deron Meranda

From nick at dd.revealed.net  Fri Mar  3 14:50:24 2006
From: nick at dd.revealed.net (Nick)
Date: Fri Mar  3 14:50:29 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>	<44088BC7.1050402@dd.revealed.net>	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
Message-ID: <44089E00.5030406@dd.revealed.net>

Here's your problem:

>     xmlHttp.send(null);

You gotta send *something* :)

Nick
From deron.meranda at gmail.com  Fri Mar  3 14:54:38 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar  3 14:54:42 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
Message-ID: <5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>

On 3/3/06, John Ruff <jcruff@gmail.com> wrote:
>      xmlHttp.open("POST", url, true);
>      xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-
> urlencoded')
>      xmlHttp.setRequestHeader('Content-length', '0');
>      xmlHttp.send(null);

You're not sending any body!  Even if there's nothing to
send, try sending '' rather than null.  I'm guessing that the
XMLHttpRequest implementation is just not sending a
Content-Length if you send null.

It's also very unusual to use application/x-www-form-urlencoded
with POST's, but I guess you could.  Note thogh that in that case
the "URL" should be in the request body, not the actual
URL you're POSTing to.
--
Deron Meranda

From deron.meranda at gmail.com  Fri Mar  3 14:58:01 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar  3 14:58:06 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
	<5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
Message-ID: <5c06fa770603031158o48e6abbaseca9798d39ff1aa0@mail.gmail.com>

Oh, and in this case you *should* be getting an HTTP 411 error.  The
fact that your PHP script was apparently "working" actually means that
the PHP script was broken and mod_python was doing the right thing.
--
Deron Meranda

From nick at dd.revealed.net  Fri Mar  3 14:59:31 2006
From: nick at dd.revealed.net (Nick)
Date: Fri Mar  3 14:59:36 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>	<44088BC7.1050402@dd.revealed.net>	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
	<5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
Message-ID: <4408A023.6010100@dd.revealed.net>

Deron Meranda wrote:
> It's also very unusual to use application/x-www-form-urlencoded
> with POST's, but I guess you could.

That's the default, unless you're uploading files and have explicitly
specified enctype="multipart/form-data".  Of course, with XMLHttpRequest you
have to manually add the content-type, and application/x-www-form-urlencoded
is a reasonable value.  If you were doing xmlrpc, you might pick text/xml
instead.

Nick
From jcruff at gmail.com  Fri Mar  3 15:01:10 2006
From: jcruff at gmail.com (John Ruff)
Date: Fri Mar  3 15:01:25 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
	<5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
Message-ID: <8EE699D8-E4D8-4FB0-9275-F373C8842E6D@gmail.com>

That was interesting b/c I just discovered that this works on  
Safari's browser, but not until I modified my code to xmlHttp.send 
('') did it work on Firefox.  Thanks very much.
___________________
John Ruff
jcruff@gmail.com

"No one can see past a choice they don't understand." --The Oracle

On Mar 3, 2006, at 2:54 PM, Deron Meranda wrote:

> On 3/3/06, John Ruff <jcruff@gmail.com> wrote:
>>      xmlHttp.open("POST", url, true);
>>      xmlHttp.setRequestHeader('Content-Type', 'application/x-www- 
>> form-
>> urlencoded')
>>      xmlHttp.setRequestHeader('Content-length', '0');
>>      xmlHttp.send(null);
>
> You're not sending any body!  Even if there's nothing to
> send, try sending '' rather than null.  I'm guessing that the
> XMLHttpRequest implementation is just not sending a
> Content-Length if you send null.
>
> It's also very unusual to use application/x-www-form-urlencoded
> with POST's, but I guess you could.  Note thogh that in that case
> the "URL" should be in the request body, not the actual
> URL you're POSTing to.
> --
> Deron Meranda

From jpg at jgassociates.ca  Fri Mar  3 15:17:56 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar  3 15:13:09 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>	<44088BC7.1050402@dd.revealed.net>	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
	<5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
Message-ID: <4408A474.4090709@jgassociates.ca>

Deron Meranda wrote:
> On 3/3/06, John Ruff <jcruff@gmail.com> wrote:
> 
>>     xmlHttp.open("POST", url, true);
>>     xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-
>>urlencoded')
>>     xmlHttp.setRequestHeader('Content-length', '0');
>>     xmlHttp.send(null);
> 
> 
> You're not sending any body!  Even if there's nothing to
> send, try sending '' rather than null.  I'm guessing that the
> XMLHttpRequest implementation is just not sending a
> Content-Length if you send null.

If you are not sending a body, just use GET. That way you don't need to 
worry about setting the content type or length. FieldStorage will still 
parse the url of a GET request to grab any parameters.

Jim



From deron.meranda at gmail.com  Fri Mar  3 15:47:20 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar  3 15:47:24 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <4408A474.4090709@jgassociates.ca>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
	<5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
	<4408A474.4090709@jgassociates.ca>
Message-ID: <5c06fa770603031247j6f2952d1h258ec9040076408f@mail.gmail.com>

On 3/3/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> If you are not sending a body, just use GET. That way you don't need to
> worry about setting the content type or length. FieldStorage will still
> parse the url of a GET request to grab any parameters.

Even better is to understand the differences between GET and
POST (and PUT, etc.).  They are intended for different semantic
behaviors--notably whether they are idempotent.

After you've chosen the correct method FIRST, then figure out how
you want to encode/format the data/parameters.  It's just that with
the semantics of POST it's rather unusal to use URL-encoding.
Maybe you really meant GET, but you should be sure before
blindly changing the method.

Note you don't have to use either URL encoding or FORM encoding.
If you want something simple to build in Javascript, but which still goes
in the POST request body, look at JSON, http://json.org/ -- there's python
bindings so it would be easy for your mod_python modules to decode
JSON formatted data.

You should probably review RFC 2616 http://www.ietf.org/rfc/rfc2616.txt

A less technical read is:
http://www.faqs.org/faqs/www/cgi-faq/section-37.html
--
Deron Meranda

From grahamd at dscpl.com.au  Fri Mar  3 16:01:27 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar  3 16:01:47 2006
Subject: [mod_python] 411 Length Required for POST
In-Reply-To: <5c06fa770603031247j6f2952d1h258ec9040076408f@mail.gmail.com>
References: <6EE75C92-7B82-47F8-B315-BCA70C655246@gmail.com>
	<44088BC7.1050402@dd.revealed.net>
	<BC23ED97-5246-42A7-BDA1-29B3E9987D3C@gmail.com>
	<5c06fa770603031114r54705cbcq6f8d212c94bd6ca0@mail.gmail.com>
	<CADD57DB-A764-4D81-80E7-40A53CE5FAC2@gmail.com>
	<5c06fa770603031154j41e2b75am4a7731ab70e18549@mail.gmail.com>
	<4408A474.4090709@jgassociates.ca>
	<5c06fa770603031247j6f2952d1h258ec9040076408f@mail.gmail.com>
Message-ID: <EE63B70C-EE76-48A4-ADF8-60820282452C@dscpl.com.au>


On 04/03/2006, at 7:47 AM, Deron Meranda wrote:

> Note you don't have to use either URL encoding or FORM encoding.
> If you want something simple to build in Javascript, but which  
> still goes
> in the POST request body, look at JSON, http://json.org/ -- there's  
> python
> bindings so it would be easy for your mod_python modules to decode
> JSON formatted data.

Problem is that if using publisher, it will reject other inbound  
content type
values. See:

  http://issues.apache.org/jira/browse/MODPYTHON-29

Thus you can't use publisher.

Graham
From m at mguerrero.net  Sat Mar  4 07:47:28 2006
From: m at mguerrero.net (Michael Guerrero)
Date: Sat Mar  4 12:47:40 2006
Subject: [mod_python] Faulty Impressions
In-Reply-To: <1141356203.14919@dscpl.user.openhosting.com>
References: <1141356203.14919@dscpl.user.openhosting.com>
Message-ID: <1141476448.3019.9.camel@localhost.localdomain>

Hello,

I'm new to mod_python and am planning a simple LAMPy application (brace
yourselves, newbness ensues).

Based on what I've found on the web (though certainly not an exhaustive
search), it appears mod_python is used for two kinds of web apps:

1. CGI -- making it much faster by embedding the interpreter.
2. PSP -- giving an easy, PHP-like use to Python for web development.

I haven't quite figured out how the different handlers fit into all
this, but am still perusing the documentation--having no knowledge of
Apache or how it works doesn't help ;^).

My question is, is there another means for creating dynamic web content
using mod_python (not talking about frameworks like Zope/Django).

Also, somewhat unrelated, how is the performance of using things like
pickled() objects and shelves versus relational databases when serving
content?

If anyone has any good tutorials a link would be most appreciated.

- Mike Guerrero
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060304/e104e380/attachment.html
From grahamd at dscpl.com.au  Sat Mar  4 15:29:17 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar  4 15:29:31 2006
Subject: [mod_python] Faulty Impressions
In-Reply-To: <1141476448.3019.9.camel@localhost.localdomain>
References: <1141356203.14919@dscpl.user.openhosting.com>
	<1141476448.3019.9.camel@localhost.localdomain>
Message-ID: <16623C51-7328-47F7-8E21-BF017B75E360@dscpl.com.au>


On 04/03/2006, at 11:47 PM, Michael Guerrero wrote:

> Hello,
>
> I'm new to mod_python and am planning a simple LAMPy application  
> (brace yourselves, newbness ensues).
>
> Based on what I've found on the web (though certainly not an  
> exhaustive search), it appears mod_python is used for two kinds of  
> web apps:
>
> 1. CGI -- making it much faster by embedding the interpreter.
> 2. PSP -- giving an easy, PHP-like use to Python for web development.

On the contrary, it is probably used in a lot more different ways  
than that.

3. Publisher (mod_python.publisher) -- providing dispatching  
mechanism for URLs
4. Vampire -- dispatching plus other assorted bits and pieces
5. MPServlets -- dispatching and servlet like infrastructure
6. Custom Handlers -- handlers written for a specific purpose by user

A good number of people combine use of 2 and 3. Other combine other  
third
party generic template packages such as Cheetah, Mighty etc etc. The  
power of
mod_python is that it is so flexible and so many ways that things  
could be done.

> I haven't quite figured out how the different handlers fit into all  
> this, but am still perusing the documentation--having no knowledge  
> of Apache or how it works doesn't help ;^).

Read:

   http://162.105.203.19/apache-doc/22.htm#BIN57

It is from a book about Perl and C programming with Apache but is still
relevant to mod_python.

> My question is, is there another means for creating dynamic web  
> content using mod_python (not talking about frameworks like Zope/ 
> Django).
>
> Also, somewhat unrelated, how is the performance of using things  
> like pickled() objects and shelves versus relational databases when  
> serving content?

Pickling used in the context of mod_python has some limitations which
you need to be mindful of. See:

   http://www.dscpl.com.au/articles/modpython-005.html

Graham

From administrator at leebrown.org  Sat Mar  4 16:59:18 2006
From: administrator at leebrown.org (Lee Brown)
Date: Sat Mar  4 16:57:45 2006
Subject: [mod_python] Faulty Impressions
In-Reply-To: <1141476448.3019.9.camel@localhost.localdomain>
Message-ID: <001b01c63fd6$e2b19d40$0301a8c0@uberbox>

Greetings!
 
I guess a good place to start is to note that mod python is not, in itself,
a web content framework nor a web application framework - it is an interface
between the Apache HTTP server and the Python programming language.  The
true beauty of mod python is, in my opinion, is that you can use it for,
well, any kind of HTTP-based service you need.  Anything written in Python,
or anything that will "speak nicely" to Python, can be implemented over HTTP
with mod python.
 
As an example, I use mod python for an extremely simple and straight-forward
content management system.  My content is XML data that is transformed via
XSLT into web pages.  When a request arrives at the server, a very simple
mod python handler maps the request URL to a pair of XML and HTML files. if
the file timestamp on the HTML file is newer than the XML file then the HTML
file is served as-is.  If the XML file is newer than the HTML file, an
external XSLT processor is called (LIBXSLT, in my case) to refresh the HTML
file and serve it.
 
I wrote this little content management system because I did not like any of
the "out-of-the box" CMS systems out there because they seemed much more
complicated than my needs.  But if you truly want a  full-bore content
management and delivery system, like CherryPy for example, you can do that,
too.
 
So I guess one answer to your question is that mod python allows you to use
almost any means you can imagine (or at least write a program for) for doing
doing whatever it is you need your web application to do.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Michael Guerrero
Sent: Saturday, March 04, 2006 7:47 AM
To: mod_python@modpython.org
Subject: [mod_python] Faulty Impressions


Hello,

I'm new to mod_python and am planning a simple LAMPy application (brace
yourselves, newbness ensues).

Based on what I've found on the web (though certainly not an exhaustive
search), it appears mod_python is used for two kinds of web apps:

1. CGI -- making it much faster by embedding the interpreter.
2. PSP -- giving an easy, PHP-like use to Python for web development.

I haven't quite figured out how the different handlers fit into all this,
but am still perusing the documentation--having no knowledge of Apache or
how it works doesn't help ;^).

My question is, is there another means for creating dynamic web content
using mod_python (not talking about frameworks like Zope/Django).

Also, somewhat unrelated, how is the performance of using things like
pickled() objects and shelves versus relational databases when serving
content?

If anyone has any good tutorials a link would be most appreciated.

- Mike Guerrero 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060304/be892b5c/attachment.html
From m at mguerrero.net  Sat Mar  4 17:18:10 2006
From: m at mguerrero.net (Michael Guerrero)
Date: Sat Mar  4 22:18:23 2006
Subject: [mod_python] Faulty Impressions
In-Reply-To: <001b01c63fd6$e2b19d40$0301a8c0@uberbox>
References: <001b01c63fd6$e2b19d40$0301a8c0@uberbox>
Message-ID: <1141510690.9150.7.camel@localhost.localdomain>

On Sat, 2006-03-04 at 16:59 -0500, Lee Brown wrote:
> Greetings!
>  
> I guess a good place to start is to note that mod python is not, in
> itself, a web content framework nor a web application framework - it
> is an interface between the Apache HTTP server and the Python
> programming language.  The true beauty of mod python is, in my
> opinion, is that you can use it for, well, any kind of HTTP-based
> service you need.  Anything written in Python, or anything that will
> "speak nicely" to Python, can be implemented over HTTP with mod
> python.
>  
> As an example, I use mod python for an extremely simple and
> straight-forward content management system.  My content is XML data
> that is transformed via XSLT into web pages.  When a request arrives
> at the server, a very simple mod python handler maps the request URL
> to a pair of XML and HTML files. if the file timestamp on the HTML
> file is newer than the XML file then the HTML file is served as-is.
> If the XML file is newer than the HTML file, an external XSLT
> processor is called (LIBXSLT, in my case) to refresh the HTML file and
> serve it.
>  
> I wrote this little content management system because I did not like
> any of the "out-of-the box" CMS systems out there because they seemed
> much more complicated than my needs.  But if you truly want a
> full-bore content management and delivery system, like CherryPy for
> example, you can do that, too.
>  
> So I guess one answer to your question is that mod python allows you
> to use almost any means you can imagine (or at least write a program
> for) for doing doing whatever it is you need your web application to
> do.
> 
> Best Regards,
> Lee E. Brown
> (administrator@leebrown.org)
> 
> 
> 
>  
> 
> 
> 
> 
> ______________________________________________________________________
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Michael
> Guerrero
> Sent: Saturday, March 04, 2006 7:47 AM
> To: mod_python@modpython.org
> Subject: [mod_python] Faulty Impressions
> 
> 
> 
> 
> Hello,
> 
> I'm new to mod_python and am planning a simple LAMPy application
> (brace yourselves, newbness ensues).
> 
> Based on what I've found on the web (though certainly not an
> exhaustive search), it appears mod_python is used for two kinds of web
> apps:
> 
> 1. CGI -- making it much faster by embedding the interpreter.
> 2. PSP -- giving an easy, PHP-like use to Python for web development.
> 
> I haven't quite figured out how the different handlers fit into all
> this, but am still perusing the documentation--having no knowledge of
> Apache or how it works doesn't help ;^).
> 
> My question is, is there another means for creating dynamic web
> content using mod_python (not talking about frameworks like
> Zope/Django).
> 
> Also, somewhat unrelated, how is the performance of using things like
> pickled() objects and shelves versus relational databases when serving
> content?
> 
> If anyone has any good tutorials a link would be most appreciated.
> 
> - Mike Guerrero 


Thanks for the responses, and thanks for the links Graham.

I'm actually hoping to do the content creation coding myself--not
looking for a framework.  I didn't want to use CGI because everything I
read says mod_python is much faster than CGI due to it's embedded
nature.  I'm also not looking to write this app in the ASP/PHP/JSP/PSP
fashion.  Never did like it much.  I've been playing around with the
publisher handler a bit, but I still don't have my head completely
around it.

Thanks again for the help.  

Regards,

Michael C. Guerrero
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060304/1891270e/attachment.html
From mvanaswegen at gmail.com  Sun Mar  5 13:33:40 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Sun Mar  5 13:33:44 2006
Subject: [mod_python] Templaing question
Message-ID: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>

Hi

I need some advice; I'm up the creek without a paddle. I wanted to quickly
hack together a small project. I like python so, I thought hey lets try
mod_python. I got some of the hard stuff sorted quickly e.g. login
functions, session handling, etc. When it came to the presentation stuff I
had a quick look at some of the templating toolkits out there, they scared
me! I wanted something simple so I quickly hacked together a

simple templating system, that loaded my html files, replaced the tags I hid
in them with the data I wanted send to the browser via req.write. The
problem is that it renders the page in a weird way, kinda like it doesn't
give the browser a chance to interpret the css. Where do I go from here, I
want to give the client tables of data formatted with nice css.

Marinus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060305/7896f32b/attachment.html
From petersheldrick at googlemail.com  Sun Mar  5 13:40:26 2006
From: petersheldrick at googlemail.com (Peter Sheldrick)
Date: Sun Mar  5 13:40:32 2006
Subject: [mod_python] apache configuration
Message-ID: <1a5f2e680603051040h172724f4h73183bc2b99de626@mail.gmail.com>

I have a directory /somedir that includes .psp and .py files. Is it possible
to tell apache to use mod_python.psp for all the .psp and
mod_python.publisher for all the .py files? If so how?

- Peter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060305/cc84a241/attachment.html
From jpg at jgassociates.ca  Sun Mar  5 14:09:33 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar  5 14:08:24 2006
Subject: [mod_python] apache configuration
In-Reply-To: <1a5f2e680603051040h172724f4h73183bc2b99de626@mail.gmail.com>
References: <1a5f2e680603051040h172724f4h73183bc2b99de626@mail.gmail.com>
Message-ID: <440B376D.8060909@jgassociates.ca>

Peter Sheldrick wrote:
> I have a directory /somedir that includes .psp and .py files. Is it possible
> to tell apache to use mod_python.psp for all the .psp and
> mod_python.publisher for all the .py files? If so how?
> 
> - Peter


AddHandler python-program .py .psp
PythonHandler mod_python.publisher | .py
PythonHandler mod_python.psp | .psp

Jim
From jpg at jgassociates.ca  Sun Mar  5 14:13:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar  5 14:12:25 2006
Subject: [mod_python] Templaing question
In-Reply-To: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>
Message-ID: <440B3861.2050905@jgassociates.ca>

marinus van aswegen wrote:
> Hi
> 
> I need some advice; I'm up the creek without a paddle. I wanted to quickly
> hack together a small project. I like python so, I thought hey lets try
> mod_python. I got some of the hard stuff sorted quickly e.g. login
> functions, session handling, etc. When it came to the presentation stuff I
> had a quick look at some of the templating toolkits out there, they scared
> me! I wanted something simple so I quickly hacked together a
> 
> simple templating system, that loaded my html files, replaced the tags I hid
> in them with the data I wanted send to the browser via req.write. The
> problem is that it renders the page in a weird way, kinda like it doesn't
> give the browser a chance to interpret the css. Where do I go from here, I
> want to give the client tables of data formatted with nice css.
> 
> Marinus

Hi Marinus,

It's not clear if you're asking for help with debugging your templating 
system or advise on alternatives? I'd suggest taking another look at 
mod_python.psp since it's included in mod_python, and people on this 
list are familiar with it and more likely able to offer help.

Jim
From m at mguerrero.net  Sun Mar  5 10:28:40 2006
From: m at mguerrero.net (Michael Guerrero)
Date: Sun Mar  5 15:28:46 2006
Subject: [mod_python] Templaing question
In-Reply-To: <440B3861.2050905@jgassociates.ca>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>
	<440B3861.2050905@jgassociates.ca>
Message-ID: <1141572520.9150.18.camel@localhost.localdomain>

On Sun, 2006-03-05 at 14:13 -0500, Jim Gallacher wrote:

> marinus van aswegen wrote:
> > Hi
> > 
> > I need some advice; I'm up the creek without a paddle. I wanted to quickly
> > hack together a small project. I like python so, I thought hey lets try
> > mod_python. I got some of the hard stuff sorted quickly e.g. login
> > functions, session handling, etc. When it came to the presentation stuff I
> > had a quick look at some of the templating toolkits out there, they scared
> > me! I wanted something simple so I quickly hacked together a
> > 
> > simple templating system, that loaded my html files, replaced the tags I hid
> > in them with the data I wanted send to the browser via req.write. The
> > problem is that it renders the page in a weird way, kinda like it doesn't
> > give the browser a chance to interpret the css. Where do I go from here, I
> > want to give the client tables of data formatted with nice css.
> > 
> > Marinus
> 
> Hi Marinus,
> 
> It's not clear if you're asking for help with debugging your templating 
> system or advise on alternatives? I'd suggest taking another look at 
> mod_python.psp since it's included in mod_python, and people on this 
> list are familiar with it and more likely able to offer help.
> 
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_py

I'm having the same issue as Marinus.

My codes looks like so:

-------------------------------------
from mod_python import apache

def index(req):
    req.content_type = 'text/html'
    req.write(docType()) # a function which puts the doctype in the
page.
    req.write(head(title('Word List') + link('StyleSheet',
'index.css'))) # more functions to put the right tags in.
    ...
    ...
---------------------------------------

The page it creates looks like:

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Word List</title>
<link rel="StyleSheet" href="index.css" />

</head>
<body>
<h1 class="None">
Welcome to Word List
</h1>
<p class="None">
Please login or <a href="reg" name="register" title="register"
class="None">
register
</a>

</p>
<form action="auth" method="POST" class="None">
<input type="text" name="name" value="" class="None" />
<br /><input type="password" name="password" value="" class="None" />
<input type="submit" name="submit" value="Login" class="None" />

</form>

</body>
</html>
------------------------------------------------------------

The .css file is in the same directory as the index.py file, yet the
browser won't render the page using the linked .css.

I have tried adding ../, ./, and the absolute path to the .css to no
avail.  When I save the source of the page, and then open it with my
browser it links to the .css properly.

Any help would be much appreciated.

Regards,

Michael C. Guerrero
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060305/51e90f17/attachment.html
From grahamd at dscpl.com.au  Sun Mar  5 16:16:34 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar  5 16:16:39 2006
Subject: [mod_python] Templaing question
Message-ID: <1141593394.12157@dscpl.user.openhosting.com>

Try clearing your browser cache. I've seen before that browsers are more
aggressive at caching stylesheets than other files. Thus it might be using
an older bogus file. Try renaming the stylesheet file and the reference to
it.

Also look in the Apache access_log/error_log to see if the server does in
fact receive a request to serve up the stylesheet.

Graham

Michael Guerrero wrote ..
> On Sun, 2006-03-05 at 14:13 -0500, Jim Gallacher wrote:
> 
> > marinus van aswegen wrote:
> > > Hi
> > > 
> > > I need some advice; I'm up the creek without a paddle. I wanted to
> quickly
> > > hack together a small project. I like python so, I thought hey lets
> try
> > > mod_python. I got some of the hard stuff sorted quickly e.g. login
> > > functions, session handling, etc. When it came to the presentation
> stuff I
> > > had a quick look at some of the templating toolkits out there, they
> scared
> > > me! I wanted something simple so I quickly hacked together a
> > > 
> > > simple templating system, that loaded my html files, replaced the tags
> I hid
> > > in them with the data I wanted send to the browser via req.write. The
> > > problem is that it renders the page in a weird way, kinda like it doesn't
> > > give the browser a chance to interpret the css. Where do I go from
> here, I
> > > want to give the client tables of data formatted with nice css.
> > > 
> > > Marinus
> > 
> > Hi Marinus,
> > 
> > It's not clear if you're asking for help with debugging your templating
> > system or advise on alternatives? I'd suggest taking another look at
> > mod_python.psp since it's included in mod_python, and people on this
> > list are familiar with it and more likely able to offer help.
> > 
> > Jim
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_py
> 
> I'm having the same issue as Marinus.
> 
> My codes looks like so:
> 
> -------------------------------------
> from mod_python import apache
> 
> def index(req):
>     req.content_type = 'text/html'
>     req.write(docType()) # a function which puts the doctype in the
> page.
>     req.write(head(title('Word List') + link('StyleSheet',
> 'index.css'))) # more functions to put the right tags in.
>     ...
>     ...
> ---------------------------------------
> 
> The page it creates looks like:
> 
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
> "http://www.w3.org/TR/html4/loose.dtd">
> <html>
> <head>
> <title>Word List</title>
> <link rel="StyleSheet" href="index.css" />
> 
> </head>
> <body>
> <h1 class="None">
> Welcome to Word List
> </h1>
> <p class="None">
> Please login or <a href="reg" name="register" title="register"
> class="None">
> register
> </a>
> 
> </p>
> <form action="auth" method="POST" class="None">
> <input type="text" name="name" value="" class="None" />
> <br /><input type="password" name="password" value="" class="None" />
> <input type="submit" name="submit" value="Login" class="None" />
> 
> </form>
> 
> </body>
> </html>
> ------------------------------------------------------------
> 
> The .css file is in the same directory as the index.py file, yet the
> browser won't render the page using the linked .css.
> 
> I have tried adding ../, ./, and the absolute path to the .css to no
> avail.  When I save the source of the page, and then open it with my
> browser it links to the .css properly.
> 
> Any help would be much appreciated.
> 
> Regards,
> 
> Michael C. Guerrero
From grahamd at dscpl.com.au  Sun Mar  5 16:24:57 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar  5 16:25:01 2006
Subject: [mod_python] Templaing question
Message-ID: <1141593897.17354@dscpl.user.openhosting.com>

BTW, you are using "index" for name of function suggesting you are
using publisher. If you are using publisher, are you using SetHandler
or AddHandler?

If you use SetHandler so that all requests to the directory go through
publisher, it will mean that your stylesheet request will also go through
publisher. It will not be able to satisfy the request and will return not
found. Browsers tend to ignore not found errors on stylesheets and
do not show an error.

Thus, if you must use SetHandler, include in your configuration:

  <Files *.css>
  SetHandler default-handler
  </Files>

Graham

Graham Dumpleton wrote ..
> Try clearing your browser cache. I've seen before that browsers are more
> aggressive at caching stylesheets than other files. Thus it might be using
> an older bogus file. Try renaming the stylesheet file and the reference
> to
> it.
> 
> Also look in the Apache access_log/error_log to see if the server does
> in
> fact receive a request to serve up the stylesheet.
> 
> Graham
> 
> Michael Guerrero wrote ..
> > On Sun, 2006-03-05 at 14:13 -0500, Jim Gallacher wrote:
> > 
> > > marinus van aswegen wrote:
> > > > Hi
> > > > 
> > > > I need some advice; I'm up the creek without a paddle. I wanted to
> > quickly
> > > > hack together a small project. I like python so, I thought hey lets
> > try
> > > > mod_python. I got some of the hard stuff sorted quickly e.g. login
> > > > functions, session handling, etc. When it came to the presentation
> > stuff I
> > > > had a quick look at some of the templating toolkits out there, they
> > scared
> > > > me! I wanted something simple so I quickly hacked together a
> > > > 
> > > > simple templating system, that loaded my html files, replaced the
> tags
> > I hid
> > > > in them with the data I wanted send to the browser via req.write.
> The
> > > > problem is that it renders the page in a weird way, kinda like it
> doesn't
> > > > give the browser a chance to interpret the css. Where do I go from
> > here, I
> > > > want to give the client tables of data formatted with nice css.
> > > > 
> > > > Marinus
> > > 
> > > Hi Marinus,
> > > 
> > > It's not clear if you're asking for help with debugging your templating
> > > system or advise on alternatives? I'd suggest taking another look at
> > > mod_python.psp since it's included in mod_python, and people on this
> > > list are familiar with it and more likely able to offer help.
> > > 
> > > Jim
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_py
> > 
> > I'm having the same issue as Marinus.
> > 
> > My codes looks like so:
> > 
> > -------------------------------------
> > from mod_python import apache
> > 
> > def index(req):
> >     req.content_type = 'text/html'
> >     req.write(docType()) # a function which puts the doctype in the
> > page.
> >     req.write(head(title('Word List') + link('StyleSheet',
> > 'index.css'))) # more functions to put the right tags in.
> >     ...
> >     ...
> > ---------------------------------------
> > 
> > The page it creates looks like:
> > 
> > <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
> > "http://www.w3.org/TR/html4/loose.dtd">
> > <html>
> > <head>
> > <title>Word List</title>
> > <link rel="StyleSheet" href="index.css" />
> > 
> > </head>
> > <body>
> > <h1 class="None">
> > Welcome to Word List
> > </h1>
> > <p class="None">
> > Please login or <a href="reg" name="register" title="register"
> > class="None">
> > register
> > </a>
> > 
> > </p>
> > <form action="auth" method="POST" class="None">
> > <input type="text" name="name" value="" class="None" />
> > <br /><input type="password" name="password" value="" class="None" />
> > <input type="submit" name="submit" value="Login" class="None" />
> > 
> > </form>
> > 
> > </body>
> > </html>
> > ------------------------------------------------------------
> > 
> > The .css file is in the same directory as the index.py file, yet the
> > browser won't render the page using the linked .css.
> > 
> > I have tried adding ../, ./, and the absolute path to the .css to no
> > avail.  When I save the source of the page, and then open it with my
> > browser it links to the .css properly.
> > 
> > Any help would be much appreciated.
> > 
> > Regards,
> > 
> > Michael C. Guerrero
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From m at mguerrero.net  Sun Mar  5 11:29:51 2006
From: m at mguerrero.net (Michael Guerrero)
Date: Sun Mar  5 16:29:58 2006
Subject: [mod_python] Templaing question
In-Reply-To: <1141593897.17354@dscpl.user.openhosting.com>
References: <1141593897.17354@dscpl.user.openhosting.com>
Message-ID: <1141576191.9150.37.camel@localhost.localdomain>

On Sun, 2006-03-05 at 16:24 -0500, Graham Dumpleton wrote:

> BTW, you are using "index" for name of function suggesting you are
> using publisher. If you are using publisher, are you using SetHandler
> or AddHandler?
> 
> If you use SetHandler so that all requests to the directory go through
> publisher, it will mean that your stylesheet request will also go through
> publisher. It will not be able to satisfy the request and will return not
> found. Browsers tend to ignore not found errors on stylesheets and
> do not show an error.
> 
> Thus, if you must use SetHandler, include in your configuration:
> 
>   <Files *.css>
>   SetHandler default-handler
>   </Files>
> 
> Graham
> 
> Graham Dumpleton wrote ..
> > Try clearing your browser cache. I've seen before that browsers are more
> > aggressive at caching stylesheets than other files. Thus it might be using
> > an older bogus file. Try renaming the stylesheet file and the reference
> > to
> > it.
> > 
> > Also look in the Apache access_log/error_log to see if the server does
> > in
> > fact receive a request to serve up the stylesheet.
> > 
> > Graham
> > 
> > Michael Guerrero wrote ..
> > > On Sun, 2006-03-05 at 14:13 -0500, Jim Gallacher wrote:
> > > 
> > > > marinus van aswegen wrote:
> > > > > Hi
> > > > > 
> > > > > I need some advice; I'm up the creek without a paddle. I wanted to
> > > quickly
> > > > > hack together a small project. I like python so, I thought hey lets
> > > try
> > > > > mod_python. I got some of the hard stuff sorted quickly e.g. login
> > > > > functions, session handling, etc. When it came to the presentation
> > > stuff I
> > > > > had a quick look at some of the templating toolkits out there, they
> > > scared
> > > > > me! I wanted something simple so I quickly hacked together a
> > > > > 
> > > > > simple templating system, that loaded my html files, replaced the
> > tags
> > > I hid
> > > > > in them with the data I wanted send to the browser via req.write.
> > The
> > > > > problem is that it renders the page in a weird way, kinda like it
> > doesn't
> > > > > give the browser a chance to interpret the css. Where do I go from
> > > here, I
> > > > > want to give the client tables of data formatted with nice css.
> > > > > 
> > > > > Marinus
> > > > 
> > > > Hi Marinus,
> > > > 
> > > > It's not clear if you're asking for help with debugging your templating
> > > > system or advise on alternatives? I'd suggest taking another look at
> > > > mod_python.psp since it's included in mod_python, and people on this
> > > > list are familiar with it and more likely able to offer help.
> > > > 
> > > > Jim
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_py
> > > 
> > > I'm having the same issue as Marinus.
> > > 
> > > My codes looks like so:
> > > 
> > > -------------------------------------
> > > from mod_python import apache
> > > 
> > > def index(req):
> > >     req.content_type = 'text/html'
> > >     req.write(docType()) # a function which puts the doctype in the
> > > page.
> > >     req.write(head(title('Word List') + link('StyleSheet',
> > > 'index.css'))) # more functions to put the right tags in.
> > >     ...
> > >     ...
> > > ---------------------------------------
> > > 
> > > The page it creates looks like:
> > > 
> > > <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
> > > "http://www.w3.org/TR/html4/loose.dtd">
> > > <html>
> > > <head>
> > > <title>Word List</title>
> > > <link rel="StyleSheet" href="index.css" />
> > > 
> > > </head>
> > > <body>
> > > <h1 class="None">
> > > Welcome to Word List
> > > </h1>
> > > <p class="None">
> > > Please login or <a href="reg" name="register" title="register"
> > > class="None">
> > > register
> > > </a>
> > > 
> > > </p>
> > > <form action="auth" method="POST" class="None">
> > > <input type="text" name="name" value="" class="None" />
> > > <br /><input type="password" name="password" value="" class="None" />
> > > <input type="submit" name="submit" value="Login" class="None" />
> > > 
> > > </form>
> > > 
> > > </body>
> > > </html>
> > > ------------------------------------------------------------
> > > 
> > > The .css file is in the same directory as the index.py file, yet the
> > > browser won't render the page using the linked .css.
> > > 
> > > I have tried adding ../, ./, and the absolute path to the .css to no
> > > avail.  When I save the source of the page, and then open it with my
> > > browser it links to the .css properly.
> > > 
> > > Any help would be much appreciated.
> > > 
> > > Regards,
> > > 
> > > Michael C. Guerrero
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 


Just as I received this second response it donned on me that 1) it was
working earlier, and 2) the only change I made was from AddHandler to
SetHandler (yes, I'm using publisher).  

Thanks for the config fix Graham.  Also, you said "if you must use
SetHandler...".  I'm only using it because the examples showed it.  Is
it preferable to use AddHandler instead?  Pros/Cons?

Regards,

Michael C. Guerrero
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060305/a3fc2ab0/attachment.html
From m at mguerrero.net  Sun Mar  5 11:32:44 2006
From: m at mguerrero.net (Michael Guerrero)
Date: Sun Mar  5 16:32:49 2006
Subject: [mod_python] Templaing question
In-Reply-To: <1141593897.17354@dscpl.user.openhosting.com>
References: <1141593897.17354@dscpl.user.openhosting.com>
Message-ID: <1141576364.9150.40.camel@localhost.localdomain>

On Sun, 2006-03-05 at 16:24 -0500, Graham Dumpleton wrote:

> BTW, you are using "index" for name of function suggesting you are
> using publisher. If you are using publisher, are you using SetHandler
> or AddHandler?
> 
> If you use SetHandler so that all requests to the directory go through
> publisher, it will mean that your stylesheet request will also go through
> publisher. It will not be able to satisfy the request and will return not
> found. Browsers tend to ignore not found errors on stylesheets and
> do not show an error.
> 
> Thus, if you must use SetHandler, include in your configuration:
> 
>   <Files *.css>
>   SetHandler default-handler
>   </Files>
> 
> Graham
> 
> Graham Dumpleton wrote ..
> > Try clearing your browser cache. I've seen before that browsers are more
> > aggressive at caching stylesheets than other files. Thus it might be using
> > an older bogus file. Try renaming the stylesheet file and the reference
> > to
> > it.
> > 
> > Also look in the Apache access_log/error_log to see if the server does
> > in
> > fact receive a request to serve up the stylesheet.
> > 
> > Graham
> > 
> > Michael Guerrero wrote ..
> > > On Sun, 2006-03-05 at 14:13 -0500, Jim Gallacher wrote:
> > > 
> > > > marinus van aswegen wrote:
> > > > > Hi
> > > > > 
> > > > > I need some advice; I'm up the creek without a paddle. I wanted to
> > > quickly
> > > > > hack together a small project. I like python so, I thought hey lets
> > > try
> > > > > mod_python. I got some of the hard stuff sorted quickly e.g. login
> > > > > functions, session handling, etc. When it came to the presentation
> > > stuff I
> > > > > had a quick look at some of the templating toolkits out there, they
> > > scared
> > > > > me! I wanted something simple so I quickly hacked together a
> > > > > 
> > > > > simple templating system, that loaded my html files, replaced the
> > tags
> > > I hid
> > > > > in them with the data I wanted send to the browser via req.write.
> > The
> > > > > problem is that it renders the page in a weird way, kinda like it
> > doesn't
> > > > > give the browser a chance to interpret the css. Where do I go from
> > > here, I
> > > > > want to give the client tables of data formatted with nice css.
> > > > > 
> > > > > Marinus
> > > > 
> > > > Hi Marinus,
> > > > 
> > > > It's not clear if you're asking for help with debugging your templating
> > > > system or advise on alternatives? I'd suggest taking another look at
> > > > mod_python.psp since it's included in mod_python, and people on this
> > > > list are familiar with it and more likely able to offer help.
> > > > 
> > > > Jim
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_py
> > > 
> > > I'm having the same issue as Marinus.
> > > 
> > > My codes looks like so:
> > > 
> > > -------------------------------------
> > > from mod_python import apache
> > > 
> > > def index(req):
> > >     req.content_type = 'text/html'
> > >     req.write(docType()) # a function which puts the doctype in the
> > > page.
> > >     req.write(head(title('Word List') + link('StyleSheet',
> > > 'index.css'))) # more functions to put the right tags in.
> > >     ...
> > >     ...
> > > ---------------------------------------
> > > 
> > > The page it creates looks like:
> > > 
> > > <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
> > > "http://www.w3.org/TR/html4/loose.dtd">
> > > <html>
> > > <head>
> > > <title>Word List</title>
> > > <link rel="StyleSheet" href="index.css" />
> > > 
> > > </head>
> > > <body>
> > > <h1 class="None">
> > > Welcome to Word List
> > > </h1>
> > > <p class="None">
> > > Please login or <a href="reg" name="register" title="register"
> > > class="None">
> > > register
> > > </a>
> > > 
> > > </p>
> > > <form action="auth" method="POST" class="None">
> > > <input type="text" name="name" value="" class="None" />
> > > <br /><input type="password" name="password" value="" class="None" />
> > > <input type="submit" name="submit" value="Login" class="None" />
> > > 
> > > </form>
> > > 
> > > </body>
> > > </html>
> > > ------------------------------------------------------------
> > > 
> > > The .css file is in the same directory as the index.py file, yet the
> > > browser won't render the page using the linked .css.
> > > 
> > > I have tried adding ../, ./, and the absolute path to the .css to no
> > > avail.  When I save the source of the page, and then open it with my
> > > browser it links to the .css properly.
> > > 
> > > Any help would be much appreciated.
> > > 
> > > Regards,
> > > 
> > > Michael C. Guerrero
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 


Oh yea, one more Apache Newb question.

Should I put the Files *.css directive in my python.conf file or in my
http.conf file?  Or does it matter which?

Regards,

Michael C. Guerrero
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060305/48ebd224/attachment-0001.html
From nd at perlig.de  Sun Mar  5 16:40:39 2006
From: nd at perlig.de (=?iso-8859-1?q?Andr=E9_Malo?=)
Date: Sun Mar  5 16:40:45 2006
Subject: [mod_python] Templaing question
In-Reply-To: <1141593897.17354@dscpl.user.openhosting.com>
References: <1141593897.17354@dscpl.user.openhosting.com>
Message-ID: <200603052240.39923@news.perlig.de>

* Graham Dumpleton wrote:

> Thus, if you must use SetHandler, include in your configuration:
>
>   <Files *.css>
>   SetHandler default-handler
>   </Files>

Actually

SetHandler none

would be better. Because it resets the configuration instead of overriding 
it.

nd
-- 
$_=q?tvc!uif)%*|#Bopuifs!A`#~tvc!Xibu)%*|qsjou#Kvtu!A`#~tvc!KBQI!)*|~
tvc!ifmm)%*|#Qfsm!A`#~tvc!jt)%*|(Ibdlfs(~  # What the hell is JAPH? ;
@_=split/\s\s+#/;$_=(join''=>map{chr(ord(  #             Andr? Malo ;
$_)-1)}split//=>$_[0]).$_[1];s s.*s$_see;  #  http://www.perlig.de/ ;

From grahamd at dscpl.com.au  Sun Mar  5 16:45:09 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar  5 16:45:11 2006
Subject: [mod_python] Templaing question
Message-ID: <1141595109.29591@dscpl.user.openhosting.com>

Michael Guerrero wrote ..
> On Sun, 2006-03-05 at 16:24 -0500, Graham Dumpleton wrote:
> 
> > BTW, you are using "index" for name of function suggesting you are
> > using publisher. If you are using publisher, are you using SetHandler
> > or AddHandler?
> > 
> > If you use SetHandler so that all requests to the directory go through
> > publisher, it will mean that your stylesheet request will also go through
> > publisher. It will not be able to satisfy the request and will return
> not
> > found. Browsers tend to ignore not found errors on stylesheets and
> > do not show an error.
> > 
> > Thus, if you must use SetHandler, include in your configuration:
> > 
> >   <Files *.css>
> >   SetHandler default-handler
> >   </Files>
> > 
> > Graham
> 
> Just as I received this second response it donned on me that 1) it was
> working earlier, and 2) the only change I made was from AddHandler to
> SetHandler (yes, I'm using publisher).  
> 
> Thanks for the config fix Graham.  Also, you said "if you must use
> SetHandler...".  I'm only using it because the examples showed it.  Is
> it preferable to use AddHandler instead?  Pros/Cons?

If you use SetHandler with mod_python.publisher, you can't put other
types of files in the same directory, except by reseting to default
handler explicitly for them as I described. You must use SetHandler
though if you want access against the directory itself to automatically
map to "index.py/index". In general using no extensions and application
of MultiViews also only works well when using SetHandler.

If using AddHandler, you generally are stuck with using a specific
extension in your URLs to map to the files containing any published
functions etc. Usually people use ".py" for this purpose. This means
the URLs don't follow REST conventions. There is also the issue that
use of ".py" reveals that you are using Python and makes it harder
to transparently change to some other system later. Using AddHandler
makes it easier to mix other static files in the directory though.

Graham
From grahamd at dscpl.com.au  Sun Mar  5 16:48:59 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar  5 16:49:03 2006
Subject: [mod_python] Templaing question
Message-ID: <1141595339.32184@dscpl.user.openhosting.com>

Michael Guerrero wrote ..
> Oh yea, one more Apache Newb question.
> 
> Should I put the Files *.css directive in my python.conf file or in my
> http.conf file?  Or does it matter which?

If you had specified PythonHandler in a .htaccess file, put it in the
.htaccess file.

If you had specified PythonHandler in a Directory or Location container
directive, put it within the same configuration container. For example:

  <Directory /some/path>
  SetHandler mod_python
  PythonHandler mod_python.publisher
  <Files *.css>
  SetHandler default-handler
  </Files>
  </Directory>

In other words, it doesn't need to be global, but only defined in the
same context you are using mod_python.publisher and thus where
the behaviour needs to be reverted to the default.

Graham
From webb.sprague at gmail.com  Sun Mar  5 17:12:06 2006
From: webb.sprague at gmail.com (Webb Sprague)
Date: Sun Mar  5 17:12:09 2006
Subject: [mod_python] req.form documentation?
Message-ID: <b11ea23c0603051412u1cad1d3fxae4aa66d356ecf7c@mail.gmail.com>

Hi all,

Is there a section on req.form in the docs yet?

Thx
W

From jpg at jgassociates.ca  Sun Mar  5 17:45:08 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar  5 17:42:59 2006
Subject: [mod_python] req.form documentation?
In-Reply-To: <b11ea23c0603051412u1cad1d3fxae4aa66d356ecf7c@mail.gmail.com>
References: <b11ea23c0603051412u1cad1d3fxae4aa66d356ecf7c@mail.gmail.com>
Message-ID: <440B69F4.2020607@jgassociates.ca>

Webb Sprague wrote:
> Hi all,
> 
> Is there a section on req.form in the docs yet?

I'm not sure what you mean by yet? If you are using publisher, a 
FieldStorage instance is created automagically and bound to req.form. 
FieldStorage is documented here:
http://www.modpython.org/live/current/doc-html/pyapi-util-fstor.html
but that is not new documentation. Is there some other deficiency in the 
docs that we are missing?

Jim

From list at joreybump.com  Mon Mar  6 13:51:11 2006
From: list at joreybump.com (Jorey Bump)
Date: Mon Mar  6 13:51:26 2006
Subject: [mod_python] Templaing question
In-Reply-To: <1141576191.9150.37.camel@localhost.localdomain>
References: <1141593897.17354@dscpl.user.openhosting.com>
	<1141576191.9150.37.camel@localhost.localdomain>
Message-ID: <440C849F.7080506@joreybump.com>

Michael Guerrero wrote:

> Thanks for the config fix Graham.  Also, you said "if you must use 
> SetHandler...".  I'm only using it because the examples showed it.  Is 
> it preferable to use AddHandler instead?  Pros/Cons?

AddHandler results in less conflicts, but limits you to including the 
extension of filename.py in the URL. I typically enable it for the 
entire DocumentRoot, just so I can place a published module anywhere 
(but rarely use this approach).

SetHandler requires you to commit a directory to serve a special 
purpose, but offers extra mod_python features and a degree of future 
proofing. I develop the majority of my applications this way.

For example, with SetHandler and mod_python.publisher, you can have an 
URL like this:

  http://host/dir/foo.py/index

Where index() is a function in /dir/foo.py. It can also be accessed like 
this:

  http://host/dir/foo/

When your boss realizes that he can replace you with two young PHP 
programmers for the same price, they can replace your code with:

  http://host/dir/foo/index.php

With the proper DirectoryIndex, this is also accessible via:

  http://host/dir/foo/

So a lot of links won't need to be updated, no need for mod_rewrite, and 
you can take a better job at Google with good references, to boot.

I put my stylesheets in a /css directory in the DocumentRoot, and all of 
my pages share them, regardless of the language (HTML, Python, PHP, 
Perl, etc.). Consider using this approach while you learn Publisher. 
Unlike PHP, where you can deploy an entire application as a 
self-contained directory, Publisher requires a different approach when 
using SetHandler. You can hack the conf file to some extent, but it's 
worth checking out alternate (and sometimes simpler) deployment 
strategies that might be more portable.








From sorr at rightnow.com  Mon Mar  6 18:04:06 2006
From: sorr at rightnow.com (Orr, Steve)
Date: Mon Mar  6 18:04:13 2006
Subject: [mod_python] Quixote 2.0 and mod_python
Message-ID: <E418CEC8B5FB3E48B30FA22F092886E70252CE1A@RNT-BOZ-0201.corp.rightnow.com>

Cross posting from the Quixote list:

I'm running Quixote 2.0 on mod_python. Following are my apache
directives:
#KeepAlive Off
KeepAlive On
MaxKeepAliveRequests 0
#MaxKeepAliveRequests 10

<IfModule prefork.c>
MaxRequestsPerChild  100
#MaxRequestsPerChild  1
</IfModule>

The commented out directives are what's set while in "development mode"
and the uncommented values are what needs to be implemented in
production. In the beginning of our development effort I tested the
production settings and all was well but now I'm getting import problems
and lots of inconsistent page behavior. (Everything works fine in
"development mode.") Most of the inconsistencies relate to passing
request object data between pages and I suspect it's related to the
import issues.  

Pointers from those familiar with Quixote/mod_python implementations
greatly appreciated.


TIA,
Steve Orr

From grahamd at dscpl.com.au  Mon Mar  6 18:23:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  6 18:23:27 2006
Subject: [mod_python] Quixote 2.0 and mod_python
Message-ID: <1141687403.12177@dscpl.user.openhosting.com>

Orr, Steve wrote ..
> Cross posting from the Quixote list:

The address from Quixote seems to have dissappeared.

> The commented out directives are what's set while in "development mode"
> and the uncommented values are what needs to be implemented in
> production. In the beginning of our development effort I tested the
> production settings and all was well but now I'm getting import problems
> and lots of inconsistent page behavior. (Everything works fine in
> "development mode.") Most of the inconsistencies relate to passing
> request object data between pages and I suspect it's related to the
> import issues.  
> 
> Pointers from those familiar with Quixote/mod_python implementations
> greatly appreciated.

Not that it will help, but what version of mod_python are you using?

Can you also give the bit of the Apache configuration which triggers
use of Quioxite. Ie., PythonHandler etc.

Anyway, I suspect that you might be hitting some of the known issues with
the module importer. You can read about them at:

  http://www.dscpl.com.au/articles/modpython-003.html

Would need to investigate how, if it does, Quioxite uses the mod_python
module importer.

Are you able to describe the problems and/or errors that may be arising
further? Do you you use the mod_python apache.import_module() function
explicitly?

Graham
From jarrod.roberson at gmail.com  Mon Mar  6 19:31:47 2006
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon Mar  6 19:31:51 2006
Subject: [mod_python] I need to create a Zip file on the fly and write it to
	the stream without any temp files or in memory file creation?
Message-ID: <2389d4730603061631x57fc5476i3b680db335fc84f4@mail.gmail.com>

just to stop the responses now mod_deflate is NOT what I need. I need the
end user to get a pop up that allows them to down load the contents of a
directory as one big zip file.

I have a servlet in Java that does just this using the ZipOutputStream and
it works great! You can download giant directorys with very very little load
on the server since I am doing a ZERO level compression.

The reason I am looking at a mod_python solution is the way we have mod_dav
set up right now it takes over the namespace that we need to do redirects
from and can't get Apache to redirect the URL to the Java Servlet, and we
have a big time crunch and can't re-archtiect the entire directory layout to
try and fix it right now.

I saw a post recommending to use ZipFile, ZipFile won't work, it needs
.tell(). It updates all the zip headers after the fact.
I found something called zipstream.py, but alas, it does the same thing!

Before I go and write a ZipOutputStream wrapper around the request object, I
wanted to see if any of you know of anythign out there that does this.

Thanks again, and remember mod_deflate is NOT going to work.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060306/cd532562/attachment.html
From m at mguerrero.net  Mon Mar  6 14:53:08 2006
From: m at mguerrero.net (Michael Guerrero)
Date: Mon Mar  6 19:53:20 2006
Subject: [mod_python] Templaing question
In-Reply-To: <440C849F.7080506@joreybump.com>
References: <1141593897.17354@dscpl.user.openhosting.com>
	<1141576191.9150.37.camel@localhost.localdomain>
	<440C849F.7080506@joreybump.com>
Message-ID: <1141674788.22355.27.camel@localhost.localdomain>

On Mon, 2006-03-06 at 13:51 -0500, Jorey Bump wrote:

> Michael Guerrero wrote:
> 
> > Thanks for the config fix Graham.  Also, you said "if you must use 
> > SetHandler...".  I'm only using it because the examples showed it.  Is 
> > it preferable to use AddHandler instead?  Pros/Cons?
> 
> AddHandler results in less conflicts, but limits you to including the 
> extension of filename.py in the URL. I typically enable it for the 
> entire DocumentRoot, just so I can place a published module anywhere 
> (but rarely use this approach).
> 
> SetHandler requires you to commit a directory to serve a special 
> purpose, but offers extra mod_python features and a degree of future 
> proofing. I develop the majority of my applications this way.
> 
> For example, with SetHandler and mod_python.publisher, you can have an 
> URL like this:
> 
>   http://host/dir/foo.py/index
> 
> Where index() is a function in /dir/foo.py. It can also be accessed like 
> this:
> 
>   http://host/dir/foo/
> 
> When your boss realizes that he can replace you with two young PHP 
> programmers for the same price, they can replace your code with:
> 
>   http://host/dir/foo/index.php
> 
> With the proper DirectoryIndex, this is also accessible via:
> 
>   http://host/dir/foo/
> 
> So a lot of links won't need to be updated, no need for mod_rewrite, and 
> you can take a better job at Google with good references, to boot.
> 
> I put my stylesheets in a /css directory in the DocumentRoot, and all of 
> my pages share them, regardless of the language (HTML, Python, PHP, 
> Perl, etc.). Consider using this approach while you learn Publisher. 
> Unlike PHP, where you can deploy an entire application as a 
> self-contained directory, Publisher requires a different approach when 
> using SetHandler. You can hack the conf file to some extent, but it's 
> worth checking out alternate (and sometimes simpler) deployment 
> strategies that might be more portable.
> 
> 
> 
> 
> 
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


Awesome reply Jorey!  Thanks.

Fortunately for me, my boss on this project is moi since I'm doing this
in my spare time.  Though I was definitely considering replacing me with
two recent college grads versed in PHP just to get it done.

I'm going to take your advice and break things up by dir.  I like that
better than making a directive for each type of file I could possibly
have in a particular directory.

Regards,

Michael C. Guerrero
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060306/a4ce044a/attachment.html
From grahamd at dscpl.com.au  Mon Mar  6 19:58:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  6 19:58:36 2006
Subject: [mod_python] I need to create a Zip file on the fly and write it
	tothe stream without any temp files or in memory file creation?
Message-ID: <1141693113.8607@dscpl.user.openhosting.com>

Can you please explain the .tell() issue and how it is a problem? If
you are packing it into an instance of StringIO rather than onto req,
then it will be able to find a .tell() function and others it needs.
Obviously, the issue with StringIO is that it must hold it all in
memory until everything is complete and only then can you send
data. Ie., can't be streamed as you go.

Thus, please show examples of how you were using ZipFile and go
into more detail of why it doesn't work and what errors you get.

Graham

jarrod roberson wrote ..
> just to stop the responses now mod_deflate is NOT what I need. I need the
> end user to get a pop up that allows them to down load the contents of
> a
> directory as one big zip file.
> 
> I have a servlet in Java that does just this using the ZipOutputStream
> and
> it works great! You can download giant directorys with very very little
> load
> on the server since I am doing a ZERO level compression.
> 
> The reason I am looking at a mod_python solution is the way we have mod_dav
> set up right now it takes over the namespace that we need to do redirects
> from and can't get Apache to redirect the URL to the Java Servlet, and
> we
> have a big time crunch and can't re-archtiect the entire directory layout
> to
> try and fix it right now.
> 
> I saw a post recommending to use ZipFile, ZipFile won't work, it needs
> .tell(). It updates all the zip headers after the fact.
> I found something called zipstream.py, but alas, it does the same thing!
> 
> Before I go and write a ZipOutputStream wrapper around the request object,
> I
> wanted to see if any of you know of anythign out there that does this.
> 
> Thanks again, and remember mod_deflate is NOT going to work.
From sorr at rightnow.com  Mon Mar  6 20:20:08 2006
From: sorr at rightnow.com (Orr, Steve)
Date: Mon Mar  6 20:20:13 2006
Subject: [mod_python] Quixote 2.0 and mod_python
Message-ID: <E418CEC8B5FB3E48B30FA22F092886E70252CEBE@RNT-BOZ-0201.corp.rightnow.com>

Thanks for the reply Graham,

I'm using mod_python 3.x (?) for Apache 2.0
Here are the Apache directives
    <LocationMatch "^/RAMhome(/|$)">
        SetHandler python-program
        PythonHandler quixote.server.mod_python_handler
        PythonOption quixote-publisher-factory ramhome.create_publisher
        PythonInterpreter ramhome
        PythonDebug On
    </LocationMatch>

I'm using the standard handler for mod_python that ships with Quixote,
quixote.server.mod_python_handler. I looked in that code, grepped around
a bit and did not find any reference to apache.import_module() so it
seems they are not using it. The mod_python_handler.py script was
developed for Quixote 1.0 so I suspect it could use some work even
though it appears to work in my development mode.

Additionally, I got a post from a Quixote developer saying that version
2.4 fixed an import bug. I don't think it's my bug but I'm going to
upgrade and test anyway. After that I've got a few more things to run
down I'll come back with some more detail.


Thanks,
Steve Orr


-----Original Message-----
From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Monday, March 06, 2006 4:23 PM
To: Orr, Steve
Cc: mod_python user mailing list
Subject: Re: [mod_python] Quixote 2.0 and mod_python

Orr, Steve wrote ..
> Cross posting from the Quixote list:

The address from Quixote seems to have dissappeared.

> The commented out directives are what's set while in "development
mode"
> and the uncommented values are what needs to be implemented in
> production. In the beginning of our development effort I tested the
> production settings and all was well but now I'm getting import
problems
> and lots of inconsistent page behavior. (Everything works fine in
> "development mode.") Most of the inconsistencies relate to passing
> request object data between pages and I suspect it's related to the
> import issues.  
> 
> Pointers from those familiar with Quixote/mod_python implementations
> greatly appreciated.

Not that it will help, but what version of mod_python are you using?

Can you also give the bit of the Apache configuration which triggers
use of Quioxite. Ie., PythonHandler etc.

Anyway, I suspect that you might be hitting some of the known issues
with
the module importer. You can read about them at:

  http://www.dscpl.com.au/articles/modpython-003.html

Would need to investigate how, if it does, Quioxite uses the mod_python
module importer.

Are you able to describe the problems and/or errors that may be arising
further? Do you you use the mod_python apache.import_module() function
explicitly?

Graham


From deron.meranda at gmail.com  Mon Mar  6 20:47:05 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Mar  6 20:47:09 2006
Subject: [mod_python] I need to create a Zip file on the fly and write it
	to the stream without any temp files or in memory file creation?
In-Reply-To: <2389d4730603061631x57fc5476i3b680db335fc84f4@mail.gmail.com>
References: <2389d4730603061631x57fc5476i3b680db335fc84f4@mail.gmail.com>
Message-ID: <5c06fa770603061747s5b1ac701waadef515333f8e9f@mail.gmail.com>

On 3/6/06, jarrod roberson <jarrod.roberson@gmail.com> wrote:
> I saw a post recommending to use ZipFile, ZipFile won't work, it needs
> .tell(). It updates all the zip headers after the fact.
> I found something called zipstream.py, but alas, it does the same thing!

I usually deal with formats other than ZIP, so I probably can't solve
your problem.  But it should be possible to write a streamable ZIP
output filter if you can't find one.

Have a look at the specification here:
http://www.pkware.com/business_and_developers/developer/appnote/

I think that, in combination with the python "struct" module and os.path.walk(),
should get you pretty close, especially if you ignore compression (although
adding on deflate compression should be a pretty easy thing, as python's
deflate is streamable).

BTW, this is really more of a general-purpose Python question than a
mod_python one. Perhaps you might get a wider range of responses
on a more general mailing list.  Although once you get a streamable
ZIP, we can certainly assist getting it into a mod_python handler.

(BTW, Graham, using the tell() file method means that it is not
streamable ... e.g., not suitable for very large archives.  Because it
has to "render" the whole archive, either in memory or on disk.)
--
Deron Meranda

From grahamd at dscpl.com.au  Mon Mar  6 21:02:43 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  6 21:02:47 2006
Subject: [mod_python] I need to create a Zip file on the fly and write
	itto the stream without any temp files or in memory file creation?
Message-ID: <1141696963.18242@dscpl.user.openhosting.com>

Deron Meranda wrote ..
> On 3/6/06, jarrod roberson <jarrod.roberson@gmail.com> wrote:
> (BTW, Graham, using the tell() file method means that it is not
> streamable ... e.g., not suitable for very large archives.  Because it
> has to "render" the whole archive, either in memory or on disk.)

I understood that and said as much.

Presuming my memory is correct, where I was coming from was that
towards the end of the discussion of ZipFile the previous time, some
one suggested to use "req" instead of an instance of "StringIO". If
they followed that advice it would indeed fail as "req" doesn't have 
a tell() method, nor seek() etc. Thus, wanted to clarify how they were
attempting to use ZipFile and at least make sure they were using it
in a reasonable way, ignoring the issue for the moment of whether it
could be streamed or not to begin with.

FWIW, just because mod_dav is taking over the bulk of the response
handling, can't see why specific URLs couldn't be intercepted and
made to fire off his existing Java implementation. He hasn't explained
the relationship between URL namespace managed by mod_dav and
the Java stuff to be able to explore that avenue though.

Graham
From ks.chen at bicom.com.tw  Mon Mar  6 22:46:01 2006
From: ks.chen at bicom.com.tw (K.S.Chen)
Date: Mon Mar  6 22:38:07 2006
Subject: [mod_python] How to let mod_python 3.2.8 generate and use .pyc file
	?
Message-ID: <440D01F9.7090001@bicom.com.tw>

Hi,

I used mod_python 3.1.3 for a while.
In that version, publisher handler will compile the module and uses it
later.

In 3.2.8, this feature is replaced by an internal caching mechanism.
Is it possible to turn on this feature so that .pyc file could be used
also ?
or could someone guide me a direction to do that ?

thanks

K.S.Chen
From grahamd at dscpl.com.au  Mon Mar  6 22:41:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  6 22:41:07 2006
Subject: [mod_python] I need to create a Zip file on the fly and write it
	tothe stream without any temp files or in memory file creation?
Message-ID: <1141702864.18391@dscpl.user.openhosting.com>

jarrod roberson wrote ..
> On 3/6/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Can you please explain the .tell() issue and how it is a problem? If
> > you are packing it into an instance of StringIO rather than onto req,
> > then it will be able to find a .tell() function and others it needs.
> > Obviously, the issue with StringIO is that it must hold it all in
> > memory until everything is complete and only then can you send
> > data. Ie., can't be streamed as you go.
> >
> > Thus, please show examples of how you were using ZipFile and go
> > into more detail of why it doesn't work and what errors you get.
> >
> > Graham
> 
> 
> considering that our users will be able to have up to 10GB of quota,
> StringIO won't work for all our cases :-(
> I really need something that will write the Zip File to req.write() on
> the
> fly.
> 
> ZipFile's constructor takes a file like object and write() calls .tell()
> internally to find where the headers end, so it can backtrack and update
> them after the fact, no worky with a one way stream :-(
> 
> And since some of the files will be very large hundreds of megs if not
> gigs,
> in memory isn't going to cut it.

If it is using tell() merely to get how much data has been sent, could
you replace it with a reference to "req.bytes_sent"? If however it then
wants to do a seek() that is a bigger problem. Your use of the word
"backtrack" is worrying, as it suggests the file format can't be streamed
if it needs to rewind back to the start to update stuff in the header.

Graham
From grahamd at dscpl.com.au  Mon Mar  6 22:58:12 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  6 22:58:14 2006
Subject: [mod_python] I need to create a Zip file on the fly and write
	itto the stream without any temp files or in memory file creation?
Message-ID: <1141703892.29519@dscpl.user.openhosting.com>

jarrod roberson wrote ..
> On 3/6/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> >
> > FWIW, just because mod_dav is taking over the bulk of the response
> > handling, can't see why specific URLs couldn't be intercepted and
> > made to fire off his existing Java implementation. He hasn't explained
> > the relationship between URL namespace managed by mod_dav and
> > the Java stuff to be able to explore that avenue though.
> >
> > Graham
> >
> 
> it gets kind of complicated, but the folders we are trying to stream are
> in
> the middle of a directory structure that is handled by mod_dav Directory
> directive, it seems that mod_dav doesn't play nice with mod_proxy or
> mod_rewrite in our case. I am _not_ an Apache 2 expert by any means, but
> they guys that are, asked me if I could get this done "inline" so as not
> have to deal with the complications that Apache is causing.

Mod_dav registers three handler hooks:

    ap_hook_handler(dav_handler, NULL, NULL, APR_HOOK_MIDDLE);
    ap_hook_post_config(dav_init_handler, NULL, NULL, APR_HOOK_MIDDLE);
    ap_hook_fixups(dav_fixups, NULL, NULL, APR_HOOK_MIDDLE);

The response handler will only be run if req.handler is set to "dav-handler".
It will be set to this by dav_fixups().

Mod_python also runs as a middle hook in fixup phase, but if you can get
the ordering correct you could register a mod_python fixup handler which
override the req.handler attribute when request is against a specific URL
so that it is handled by something else.

Unfortunately, 3.2.8 and earlier versions of mod_python probably aren't
going to help. If you were using mod_python from subversion repostory
it probably would though as req.handler is writable in that version where
as it wasn't in earlier versions.

Anyway, as a test to sort out ordering, register a fixup handler:

  PythonFixupHandler _handler_check

  from mod_python import apache

  def fixuphandler(req):
    req.log_error("handler = %s" % req.handler)
    return apache.OK

If the error log shows req.handler already set to "dav-handler" you are in
business, if not, play with order to PythonFixupHandler relative to directives
that enable mod_dav on the directory so that mod_python fixup handler
is run second.

If you then mod_python from subversion repository, you could do:

  from mod_python import apache

  def fixuphandler(req):
    if req.uri = "/some/path":
      req.handler = "name_of_java_handler_module"
    return apache.OK

where req.handler is the handler name for the Java module which knows
how to performing ziping of stuff identified by req.filename. If necessary,
you could modify req.uri or req.filename. See:

  https://issues.apache.org/jira/browse/MODPYTHON-125

Another alternative is to use:

  from mod_python import apache

  def fixuphandler(req):
    if req.uri = "/some/path":
      req.internal_redirect("/some/other/path")
    return apache.DONE

The "/some/other/path" would be what identifies the Java stuff.

Finally, could also consider triggering mod_proxy. See:

  https://issues.apache.org/jira/browse/MODPYTHON-141

As I pointed out though, these tricks require subversion version of
mod_python.

Even if you do handle it inline, you still need to intercept it like above
to trigger a mod_python handler to do it, or intercept using Location
directive.

Graham
From grahamd at dscpl.com.au  Mon Mar  6 23:05:16 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar  6 23:05:24 2006
Subject: [mod_python] How to let mod_python 3.2.8 generate and use .pyc
	file?
Message-ID: <1141704316.1768@dscpl.user.openhosting.com>

K.S.Chen wrote ..
> Hi,
> 
> I used mod_python 3.1.3 for a while.
> In that version, publisher handler will compile the module and uses it
> later.
> 
> In 3.2.8, this feature is replaced by an internal caching mechanism.
> Is it possible to turn on this feature so that .pyc file could be used
> also ?
> or could someone guide me a direction to do that ?

The short answer is that it is not possible. At least not for files directly
imported and managed by publisher. You could always separate out
most of your code into modules stored in a package somewhere on
standard sys.path and import them using standard "import" statement.
Such code though would no longer be a candidate for automatic
module reloading.

Do you have any data to show that not caching compiled byte code in
a .pyc file is somehow detrimental to performance?

BTW, usually Apache doesn't have write access to the directories anyway
and can't produce .pyc files.

Graham
From nlv11281 at natlab.research.philips.com  Tue Mar  7 01:25:16 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Mar  7 01:25:31 2006
Subject: [mod_python] I need to create a Zip file on the fly and write
	it to	the stream without any temp files or in memory file creation?
In-Reply-To: <2389d4730603061631x57fc5476i3b680db335fc84f4@mail.gmail.com>
References: <2389d4730603061631x57fc5476i3b680db335fc84f4@mail.gmail.com>
Message-ID: <440D274C.7080309@natlab.research.philips.com>

Use TarFile (python 2.3 or higher) instead of zip.

Most "winzip" alike programs can handle TAR files just fine, so your 
users won't notice the difference. TAR files are designed to be 
streamable (Tape ARchive) and the python interface won't need tell(). 
You can stream anything that supports read() to a TAR  stream.

TAR does not support compression, but it is common to (g)zip the tar 
stream, which yields a streamable compressed result (and still delivers 
a tar file on the other side if you use a content-encoding of x-gzip)

Mike Looijmans
Philips Natlab / Topic Automation


jarrod roberson wrote:
> just to stop the responses now mod_deflate is NOT what I need. I need 
> the end user to get a pop up that allows them to down load the contents 
> of a directory as one big zip file.
> 
> I have a servlet in Java that does just this using the ZipOutputStream 
> and it works great! You can download giant directorys with very very 
> little load on the server since I am doing a ZERO level compression.
> 
> The reason I am looking at a mod_python solution is the way we have 
> mod_dav set up right now it takes over the namespace that we need to do 
> redirects from and can't get Apache to redirect the URL to the Java 
> Servlet, and we have a big time crunch and can't re-archtiect the entire 
> directory layout to try and fix it right now.
> 
> I saw a post recommending to use ZipFile, ZipFile won't work, it needs 
> .tell(). It updates all the zip headers after the fact.
> I found something called zipstream.py, but alas, it does the same thing!
> 
> Before I go and write a ZipOutputStream wrapper around the request 
> object, I wanted to see if any of you know of anythign out there that 
> does this.
> 
> Thanks again, and remember mod_deflate is NOT going to work.

From nlv11281 at natlab.research.philips.com  Tue Mar  7 01:41:08 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Mar  7 01:41:13 2006
Subject: [mod_python] I need to create a Zip file on the fly and write
	it to	the stream without any temp files or in memory file creation?
In-Reply-To: <440D274C.7080309@natlab.research.philips.com>
References: <2389d4730603061631x57fc5476i3b680db335fc84f4@mail.gmail.com>
	<440D274C.7080309@natlab.research.philips.com>
Message-ID: <440D2B04.2050100@natlab.research.philips.com>

Practical example:

import tarfile
...

    tar = tarfile.open(mode="w|", fileobj=req)
    for f in files:
        tar.add(f)
    tar.close()
...

Use a mode of "w|gz" or "w|bz2" to enable gzip/bzip2 compression (see 
Python help or docs on tarfile for that)

Note: On unix systems (linux), it is a wee bit faster to run the (g)tar 
program and stream its output, especially with lots of small files. On 
Windows systems, this just does not work reliably.

Mike Looijmans
Philips Natlab / Topic Automation


Mike Looijmans wrote:
> Use TarFile (python 2.3 or higher) instead of zip.
> 
> Most "winzip" alike programs can handle TAR files just fine, so your 
> users won't notice the difference. TAR files are designed to be 
> streamable (Tape ARchive) and the python interface won't need tell(). 
> You can stream anything that supports read() to a TAR  stream.
> 
> TAR does not support compression, but it is common to (g)zip the tar 
> stream, which yields a streamable compressed result (and still delivers 
> a tar file on the other side if you use a content-encoding of x-gzip)
> 
> Mike Looijmans
> Philips Natlab / Topic Automation
> 
> 
> jarrod roberson wrote:
> 
>> just to stop the responses now mod_deflate is NOT what I need. I need 
>> the end user to get a pop up that allows them to down load the 
>> contents of a directory as one big zip file.
>>
>> I have a servlet in Java that does just this using the ZipOutputStream 
>> and it works great! You can download giant directorys with very very 
>> little load on the server since I am doing a ZERO level compression.
>>
>> The reason I am looking at a mod_python solution is the way we have 
>> mod_dav set up right now it takes over the namespace that we need to 
>> do redirects from and can't get Apache to redirect the URL to the Java 
>> Servlet, and we have a big time crunch and can't re-archtiect the 
>> entire directory layout to try and fix it right now.
>>
>> I saw a post recommending to use ZipFile, ZipFile won't work, it needs 
>> .tell(). It updates all the zip headers after the fact.
>> I found something called zipstream.py, but alas, it does the same thing!
>>
>> Before I go and write a ZipOutputStream wrapper around the request 
>> object, I wanted to see if any of you know of anythign out there that 
>> does this.
>>
>> Thanks again, and remember mod_deflate is NOT going to work.
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From ks.chen at bicom.com.tw  Tue Mar  7 02:15:10 2006
From: ks.chen at bicom.com.tw (K.S.Chen)
Date: Tue Mar  7 02:07:16 2006
Subject: [mod_python] How to let mod_python 3.2.8 generate and use .pyc
	file?
In-Reply-To: <1141704316.1768@dscpl.user.openhosting.com>
References: <1141704316.1768@dscpl.user.openhosting.com>
Message-ID: <440D32FE.6050606@bicom.com.tw>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060307/bbed429a/attachment-0001.html
From vmanera at manord.com  Tue Mar  7 04:00:15 2006
From: vmanera at manord.com (Manera, Villiam)
Date: Tue Mar  7 03:58:33 2006
Subject: [mod_python] Lock problem with FileSession
Message-ID: <BC53C974C3B9E542BC0A9BD4C5B1168AE1C849@NEWMAIL.manord.com>

On windows work fine

On linux: RH3 EL apache 2.0.55 mod_python:  3.2.8

from mod_python import Session

def fileses(req):
	#sess =  Session.FileSession(req)
	sess =  Session.DbmSession(req)
#	sess.unlock()
	return fileses1(req)
		
def fileses1(req):
	#sess =  Session.FileSession(req)
	sess =  Session.DbmSession(req)
	return 'due'

With DbmSession again work fine
With FileSession and without sess.unlock() fileses1 hang 

Villiam


From grahamd at dscpl.com.au  Tue Mar  7 04:18:39 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  7 04:18:56 2006
Subject: [mod_python] Lock problem with FileSession
In-Reply-To: <BC53C974C3B9E542BC0A9BD4C5B1168AE1C849@NEWMAIL.manord.com>
References: <BC53C974C3B9E542BC0A9BD4C5B1168AE1C849@NEWMAIL.manord.com>
Message-ID: <560D8A85-577B-49CE-ADCB-8BDFEC1C5D4D@dscpl.com.au>


On 07/03/2006, at 8:00 PM, Manera, Villiam wrote:

> On windows work fine
>
> On linux: RH3 EL apache 2.0.55 mod_python:  3.2.8
>
> from mod_python import Session
>
> def fileses(req):
> 	#sess =  Session.FileSession(req)
> 	sess =  Session.DbmSession(req)
> #	sess.unlock()
> 	return fileses1(req)
> 		
> def fileses1(req):
> 	#sess =  Session.FileSession(req)
> 	sess =  Session.DbmSession(req)
> 	return 'due'
>
> With DbmSession again work fine
> With FileSession and without sess.unlock() fileses1 hang

Without the unlock(), they both should probably hang.

The basic rule with sessions is that you should only create one per  
request.
This is because the first will grab a lock on the session, creating a  
second
will cause the thread to deadlock on itself as it waits for the first  
session to
be unlocked.

You should use code like the following:

_get_session(req):
         if not hasattr(req,"session"):
             req.session = Session.DbmSession(req)
         return req.session

def fileses(req):
        sess = _get_session(req)
	return fileses1(req)
		
def fileses1(req):
	sess =  _get_session(req)
	return 'due'

Ie., cache the session object in the request and use cached one if it  
already
exists.

Anyway, this will work in most cases, it actually needs to be more  
complicated
than this to work with internal requests and other strange cases.

Graham


From mvanaswegen at gmail.com  Tue Mar  7 06:48:48 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Tue Mar  7 06:48:51 2006
Subject: [mod_python] Templaing question
In-Reply-To: <440B3861.2050905@jgassociates.ca>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>
	<440B3861.2050905@jgassociates.ca>
Message-ID: <ffa39deb0603070348v2231370fncce795704e953a13@mail.gmail.com>

Hi Jim

Sorry for the late reply, the short answer perhaps a little bit of both.
I was hoping that someone would give me some nice pointers to getting
going with templates. I suspect that psp will give me what I want, I'm
seeing strange behavior when it comes to rendering pages. I had a html page
render correctly if I loaded it with a browser off the disk. I wrote a test
function to load it as a template using psp and it produced
the same strange behavior I saw with my hacked templating system. It's hard
to explain its
like the browser hap haggardly interprets the page and doesn't render it
correctly.
I could mail anyone a screenshot if they are interested.

Regs


Marinus


On 3/5/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>
> marinus van aswegen wrote:
> > Hi
> >
> > I need some advice; I'm up the creek without a paddle. I wanted to
> quickly
> > hack together a small project. I like python so, I thought hey lets try
> > mod_python. I got some of the hard stuff sorted quickly e.g. login
> > functions, session handling, etc. When it came to the presentation stuff
> I
> > had a quick look at some of the templating toolkits out there, they
> scared
> > me! I wanted something simple so I quickly hacked together a
> >
> > simple templating system, that loaded my html files, replaced the tags I
> hid
> > in them with the data I wanted send to the browser via req.write. The
> > problem is that it renders the page in a weird way, kinda like it
> doesn't
> > give the browser a chance to interpret the css. Where do I go from here,
> I
> > want to give the client tables of data formatted with nice css.
> >
> > Marinus
>
> Hi Marinus,
>
> It's not clear if you're asking for help with debugging your templating
> system or advise on alternatives? I'd suggest taking another look at
> mod_python.psp since it's included in mod_python, and people on this
> list are familiar with it and more likely able to offer help.
>
> Jim
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060307/f1b66c74/attachment.html
From list at joreybump.com  Tue Mar  7 08:53:00 2006
From: list at joreybump.com (Jorey Bump)
Date: Tue Mar  7 08:53:17 2006
Subject: [mod_python] Templaing question
In-Reply-To: <1141572520.9150.18.camel@localhost.localdomain>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>	<440B3861.2050905@jgassociates.ca>
	<1141572520.9150.18.camel@localhost.localdomain>
Message-ID: <440D903C.1060902@joreybump.com>

Michael Guerrero wrote:

> def index(req):
>     req.content_type = 'text/html'
>     req.write(docType()) # a function which puts the doctype in the page.
>     req.write(head(title('Word List') + link('StyleSheet', 
> 'index.css'))) # more functions to put the right tags in.

Note that you are generating XHTML for an HTML DOCTYPE.

> The page it creates looks like:
> 
> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" 

You've told the browser you are using HTML.

> "http://www.w3.org/TR/html4/loose.dtd">
> <html>
> <head>
> <title>Word List</title>
> <link rel="StyleSheet" href="index.css" />

In XHTML, this is a self-closing tag. But in HTML, this embeds a literal 
">" character. You need to generate code consistent with your DOCTYPE.



From HansJoachim.Ehlers at eumetsat.int  Tue Mar  7 15:31:00 2006
From: HansJoachim.Ehlers at eumetsat.int (Hans-Joachim Ehlers)
Date: Tue Mar  7 15:31:21 2006
Subject: [mod_python] Mod_python 3.2.8 build on AIX 5.1 using IBMm VAC v6
Message-ID: <s40dfba4.016@gwn0201.eumetsat.int>

FYI:
I was not able to build mod_python 3.2.8 because of some trashy C++ style comment lines within the source code which at least the IBM VAC v6 compiler ( ANSI, C89,C99 compatible )  can not handle. I think even the GCC compiler with the option " pedantic" would fail.
I did not test any further because it looks like getting into a nightmare again.

So thanks for the improment of quality within the code.

Regards
Hajo



From grahamd at dscpl.com.au  Tue Mar  7 16:42:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  7 16:42:13 2006
Subject: [mod_python] Mod_python 3.2.8 build on AIX 5.1 using IBMm VAC v6
Message-ID: <1141767720.3709@dscpl.user.openhosting.com>

Hans-Joachim Ehlers wrote ..
> FYI:
> I was not able to build mod_python 3.2.8 because of some trashy C++ style
> comment lines within the source code which at least the IBM VAC v6 compiler
> ( ANSI, C89,C99 compatible )  can not handle. I think even the GCC compiler
> with the option " pedantic" would fail.
> I did not test any further because it looks like getting into a nightmare
> again.
> 
> So thanks for the improment of quality within the code.

We cannot fix where this occurs if you do not tell us where.

We are aware of there being some C++ style comments in the
code and they have been getting weeded out when found, but
we don't have compilers which complain about the comments
in the first place. Thus, if you record where they occur it will
be fixed quicker.

Graham
From jpg at jgassociates.ca  Tue Mar  7 16:52:00 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Mar  7 16:51:32 2006
Subject: [mod_python] Mod_python 3.2.8 build on AIX 5.1 using IBMm VAC v6
In-Reply-To: <1141767720.3709@dscpl.user.openhosting.com>
References: <1141767720.3709@dscpl.user.openhosting.com>
Message-ID: <440E0080.4060905@jgassociates.ca>

Graham Dumpleton wrote:
> Hans-Joachim Ehlers wrote ..
> 
>>FYI:
>>I was not able to build mod_python 3.2.8 because of some trashy C++ style
>>comment lines within the source code which at least the IBM VAC v6 compiler
>>( ANSI, C89,C99 compatible )  can not handle. I think even the GCC compiler
>>with the option " pedantic" would fail.
>>I did not test any further because it looks like getting into a nightmare
>>again.
>>
>>So thanks for the improment of quality within the code.
> 
> 
> We cannot fix where this occurs if you do not tell us where.
> 
> We are aware of there being some C++ style comments in the
> code and they have been getting weeded out when found, but
> we don't have compilers which complain about the comments
> in the first place. Thus, if you record where they occur it will
> be fixed quicker.

I think I've cleaned out all of the offending comments in svn trunk already.

Jim
From grahamd at dscpl.com.au  Tue Mar  7 17:00:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  7 17:00:40 2006
Subject: [mod_python] Mod_python 3.2.8 build on AIX 5.1 using IBMm VACv6
Message-ID: <1141768831.16001@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> Graham Dumpleton wrote:
> > Hans-Joachim Ehlers wrote ..
> > 
> >>FYI:
> >>I was not able to build mod_python 3.2.8 because of some trashy C++ style
> >>comment lines within the source code which at least the IBM VAC v6 compiler
> >>( ANSI, C89,C99 compatible )  can not handle. I think even the GCC compiler
> >>with the option " pedantic" would fail.
> >>I did not test any further because it looks like getting into a nightmare
> >>again.
> >>
> >>So thanks for the improment of quality within the code.
> > 
> > 
> > We cannot fix where this occurs if you do not tell us where.
> > 
> > We are aware of there being some C++ style comments in the
> > code and they have been getting weeded out when found, but
> > we don't have compilers which complain about the comments
> > in the first place. Thus, if you record where they occur it will
> > be fixed quicker.
> 
> I think I've cleaned out all of the offending comments in svn trunk already.

That is what I thought too and I couldn't find any when I looked again.
Even checked .l and .h.in files. So unless the compiler on AIX is
getting confused by something that looks like a C++ style comment inside
of a C comment, not sure what the issue is and why it is more important
that actual compiler errors and affected code are posted.

Graham
From grahamd at dscpl.com.au  Tue Mar  7 17:12:04 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar  7 17:12:07 2006
Subject: [mod_python] Mod_python 3.2.8 build on AIX 5.1 using IBMm VACv6
Message-ID: <1141769524.24239@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Jim Gallacher wrote ..
> > I think I've cleaned out all of the offending comments in svn trunk already.
> 
> That is what I thought too and I couldn't find any when I looked again.
> Even checked .l and .h.in files. So unless the compiler on AIX is
> getting confused by something that looks like a C++ style comment inside
> of a C comment, not sure what the issue is and why it is more important
> that actual compiler errors and affected code are posted.

Whoops.

Trunk != 3.2.8.

Looks like a backport. :-)

Graham
From jpg at jgassociates.ca  Tue Mar  7 17:13:26 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Mar  7 17:12:48 2006
Subject: [mod_python] Mod_python 3.2.8 build on AIX 5.1 using IBMm VACv6
In-Reply-To: <1141768831.16001@dscpl.user.openhosting.com>
References: <1141768831.16001@dscpl.user.openhosting.com>
Message-ID: <440E0586.2080505@jgassociates.ca>

Graham Dumpleton wrote:
> Jim Gallacher wrote ..
> 
>>Graham Dumpleton wrote:
>>
>>>Hans-Joachim Ehlers wrote ..
>>>
>>>
>>>>FYI:
>>>>I was not able to build mod_python 3.2.8 because of some trashy C++ style
>>>>comment lines within the source code which at least the IBM VAC v6 compiler
>>>>( ANSI, C89,C99 compatible )  can not handle. I think even the GCC compiler
>>>>with the option " pedantic" would fail.
>>>>I did not test any further because it looks like getting into a nightmare
>>>>again.
>>>>
>>>>So thanks for the improment of quality within the code.
>>>
>>>
>>>We cannot fix where this occurs if you do not tell us where.
>>>
>>>We are aware of there being some C++ style comments in the
>>>code and they have been getting weeded out when found, but
>>>we don't have compilers which complain about the comments
>>>in the first place. Thus, if you record where they occur it will
>>>be fixed quicker.
>>
>>I think I've cleaned out all of the offending comments in svn trunk already.
> 
> 
> That is what I thought too and I couldn't find any when I looked again.
> Even checked .l and .h.in files. So unless the compiler on AIX is
> getting confused by something that looks like a C++ style comment inside
> of a C comment, not sure what the issue is and why it is more important
> that actual compiler errors and affected code are posted.

Except that Hans-Jaochim is using 3.2.8, which still has some C++ 
comments scattered about. I fixed the comments in the dev branch after 
3.2.7 was released.

Jim
From jpg at jgassociates.ca  Tue Mar  7 17:26:57 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Mar  7 17:26:09 2006
Subject: [mod_python] Templaing question
In-Reply-To: <ffa39deb0603070348v2231370fncce795704e953a13@mail.gmail.com>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>	<440B3861.2050905@jgassociates.ca>
	<ffa39deb0603070348v2231370fncce795704e953a13@mail.gmail.com>
Message-ID: <440E08B1.2000809@jgassociates.ca>

Marinus,

You could email me the the screenshot but all that proves is that the 
page is not rendering properly and I'm happy to take your word on that 
score. :) Can I assume that it looks like the stylesheet is not being 
applied, as opposed to some malformed html being generated?

Have you had a chance to read the rest of this thread? Michael Guerrero 
was having a similar problem, so you might find some useful information.

Perhaps you could provide your the mod_python parts of your apache 
configuration. A snippet of your the html being produce may be helpful 
as well.

Jim

marinus van aswegen wrote:
> Hi Jim
> 
> Sorry for the late reply, the short answer perhaps a little bit of both.
> I was hoping that someone would give me some nice pointers to getting
> going with templates. I suspect that psp will give me what I want, I'm
> seeing strange behavior when it comes to rendering pages. I had a html page
> render correctly if I loaded it with a browser off the disk. I wrote a test
> function to load it as a template using psp and it produced
> the same strange behavior I saw with my hacked templating system. It's hard
> to explain its
> like the browser hap haggardly interprets the page and doesn't render it
> correctly.
> I could mail anyone a screenshot if they are interested.
> 
> Regs
> 
> 
> Marinus
> 
> 
> On 3/5/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> 
>>marinus van aswegen wrote:
>>
>>>Hi
>>>
>>>I need some advice; I'm up the creek without a paddle. I wanted to
>>
>>quickly
>>
>>>hack together a small project. I like python so, I thought hey lets try
>>>mod_python. I got some of the hard stuff sorted quickly e.g. login
>>>functions, session handling, etc. When it came to the presentation stuff
>>
>>I
>>
>>>had a quick look at some of the templating toolkits out there, they
>>
>>scared
>>
>>>me! I wanted something simple so I quickly hacked together a
>>>
>>>simple templating system, that loaded my html files, replaced the tags I
>>
>>hid
>>
>>>in them with the data I wanted send to the browser via req.write. The
>>>problem is that it renders the page in a weird way, kinda like it
>>
>>doesn't
>>
>>>give the browser a chance to interpret the css. Where do I go from here,
>>
>>I
>>
>>>want to give the client tables of data formatted with nice css.
>>>
>>>Marinus
>>
>>Hi Marinus,
>>
>>It's not clear if you're asking for help with debugging your templating
>>system or advise on alternatives? I'd suggest taking another look at
>>mod_python.psp since it's included in mod_python, and people on this
>>list are familiar with it and more likely able to offer help.
>>
>>Jim
>>
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From bill.fraser at gmail.com  Tue Mar  7 20:42:07 2006
From: bill.fraser at gmail.com (Bill Fraser)
Date: Tue Mar  7 20:42:11 2006
Subject: [mod_python] Templaing question
In-Reply-To: <440E08B1.2000809@jgassociates.ca>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>
	<440B3861.2050905@jgassociates.ca>
	<ffa39deb0603070348v2231370fncce795704e953a13@mail.gmail.com>
	<440E08B1.2000809@jgassociates.ca>
Message-ID: <b1befe630603071742t23ff0012p41361dac45c9d040@mail.gmail.com>

On 3/7/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Marinus,
>
> You could email me the the screenshot but all that proves is that the
> page is not rendering properly and I'm happy to take your word on that
> score. :) Can I assume that it looks like the stylesheet is not being
> applied, as opposed to some malformed html being generated?
>
> Have you had a chance to read the rest of this thread? Michael Guerrero
> was having a similar problem, so you might find some useful information.
>
> Perhaps you could provide your the mod_python parts of your apache
> configuration. A snippet of your the html being produce may be helpful
> as well.

Also, Firefox as of version 1.5 gives quite a lot of error messages
via the JavaScript Console. Stuff like CSS errors, plugin problems,
and all sorts of other stuff gets dumped there. A snippet of that
would probably help a lot here.

-Bill

From mvanaswegen at gmail.com  Wed Mar  8 04:44:09 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Wed Mar  8 04:44:18 2006
Subject: [mod_python] Templaing question
In-Reply-To: <b1befe630603071742t23ff0012p41361dac45c9d040@mail.gmail.com>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>
	<440B3861.2050905@jgassociates.ca>
	<ffa39deb0603070348v2231370fncce795704e953a13@mail.gmail.com>
	<440E08B1.2000809@jgassociates.ca>
	<b1befe630603071742t23ff0012p41361dac45c9d040@mail.gmail.com>
Message-ID: <ffa39deb0603080144r58ab2b28refabf967fea92841@mail.gmail.com>

I'm going to to do some more testing before I shoot my mouth off. I'm going
to create a simple html file with the corresp. css. file, then I'm going to
load the file using the psp.template and do some low level comparisons of
the output. I'll do it tonight if I have a chance.
Thanx for all the input thus far.


On 3/8/06, Bill Fraser <bill.fraser@gmail.com> wrote:
>
> On 3/7/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> > Marinus,
> >
> > You could email me the the screenshot but all that proves is that the
> > page is not rendering properly and I'm happy to take your word on that
> > score. :) Can I assume that it looks like the stylesheet is not being
> > applied, as opposed to some malformed html being generated?
> >
> > Have you had a chance to read the rest of this thread? Michael Guerrero
> > was having a similar problem, so you might find some useful information.
> >
> > Perhaps you could provide your the mod_python parts of your apache
> > configuration. A snippet of your the html being produce may be helpful
> > as well.
>
> Also, Firefox as of version 1.5 gives quite a lot of error messages
> via the JavaScript Console. Stuff like CSS errors, plugin problems,
> and all sorts of other stuff gets dumped there. A snippet of that
> would probably help a lot here.
>
> -Bill
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060308/4e2d06c7/attachment.html
From petersheldrick at googlemail.com  Wed Mar  8 05:19:43 2006
From: petersheldrick at googlemail.com (Peter Sheldrick)
Date: Wed Mar  8 05:19:49 2006
Subject: [mod_python] psp prints
Message-ID: <1a5f2e680603080219w877a295w2e5eedd3fd0fef01@mail.gmail.com>

With psp you can gereate html by doing <%= "html" %> or def fun: return
"html" <%= fun() %> is there a way for fun to just "print" the html? For
example when it is called by a few functions first i don't want to have to
pass the return string of fun() to all above functions.

- Peter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060308/29f994c6/attachment-0001.html
From grahamd at dscpl.com.au  Wed Mar  8 05:28:56 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar  8 05:29:06 2006
Subject: [mod_python] psp prints
In-Reply-To: <1a5f2e680603080219w877a295w2e5eedd3fd0fef01@mail.gmail.com>
References: <1a5f2e680603080219w877a295w2e5eedd3fd0fef01@mail.gmail.com>
Message-ID: <68ebf809396e3af8bfc0ad65f99a00d1@dscpl.com.au>


On 08/03/2006, at 9:19 PM, Peter Sheldrick wrote:

> With psp you can gereate html by doing <%= "html" %> or def fun: 
> return "html" <%= fun() %> is there a way for fun to just "print" the 
> html? For example when it is called by a few functions first i don't 
> want to have to pass the return string of fun() to all above 
> functions.

You can still call req.write().

<%=
req.write("html")
%>

Is that what you want?

Graham

From grahamd at dscpl.com.au  Wed Mar  8 05:49:05 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar  8 05:49:21 2006
Subject: [mod_python] psp prints
In-Reply-To: <1a5f2e680603080241s3b20592m36c7172cc238b7f@mail.gmail.com>
References: <1a5f2e680603080219w877a295w2e5eedd3fd0fef01@mail.gmail.com>
	<68ebf809396e3af8bfc0ad65f99a00d1@dscpl.com.au>
	<1a5f2e680603080241s3b20592m36c7172cc238b7f@mail.gmail.com>
Message-ID: <40d81e6273db7e0689adf53b16125a4f@dscpl.com.au>


On 08/03/2006, at 9:41 PM, Peter Sheldrick wrote:

> If i do it like that, i get the unambigous error: "NameError: global 
> name 'req' is not defined". I have imported a module into my psp page 
> - those functions gerate html. These functions don't know about the 
> page variable req. So is the best way to pass req to all the functions 
> i want to call (and that want to print)?. Is this just a missuse and 
> psp should be self contained; this means: only use functions defined 
> within the psp page?

Passing "req" to functions called from the PSP page is fine
and would be necessary in a lot of cases.

Maybe some others on the mailing list who use PSP on a regular
basis might give suggestions on how to best structure stuff,
but in general it is possibly better to have as little Python
code in the actual PSP page as possible, with it all being
separated into separate functions. That way the PSP page is
cleaner and code is reusable across multiple pages.

PS, please remember to use reply-all so messages go back to
the mailing list.

Graham


> On 3/8/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> On 08/03/2006, at 9:19 PM, Peter Sheldrick wrote:
>>
>> > With psp you can gereate html by doing <%= "html" %> or def fun:
>> > return "html" <%= fun() %> is there a way for fun to just "print" 
>> the
>> > html? For example when it is called by a few functions first i don't
>> > want to have to pass the return string of fun() to all above
>> > functions.
>>
>> You can still call req.write().
>>
>> <%=
>>  req.write("html")
>> %>
>>
>> Is that what you want?
>>
>> Graham
>>

From mark at gingergeeks.co.uk  Wed Mar  8 15:36:25 2006
From: mark at gingergeeks.co.uk (Mark Roberts)
Date: Wed Mar  8 15:36:37 2006
Subject: [mod_python] AIX - someone must have got it work !
Message-ID: <200603082036.25625.mark@gingergeeks.co.uk>

Hi all,
         I'm struggling to get mod_python 3.2.8 to work successfully with 
Apache-2.x, AIX5.2, Python-2.4.2, xlc 7. After browsing the web I can find no 
evidence of anyone actually managing to get it to work.

It fails with a similar message to 
http://www.modpython.org/pipermail/mod_python/2004-February/014993.html

Unfortunately I no longer have a AIX box accessible via the net to allow 
external access to. They are located at work which will prove problematic but 
not impossible to get logs from.

If any one has managed to get mod_python working under AIX I would appreciate 
some feedback.

Best Regards

Mark
www.gingergeeks.co.uk
From grahamd at dscpl.com.au  Wed Mar  8 16:12:20 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar  8 16:12:24 2006
Subject: [mod_python] AIX - someone must have got it work !
Message-ID: <1141852340.24807@dscpl.user.openhosting.com>

Mark Roberts wrote ..
> Hi all,
>          I'm struggling to get mod_python 3.2.8 to work successfully with
> Apache-2.x, AIX5.2, Python-2.4.2, xlc 7. After browsing the web I can find
> no 
> evidence of anyone actually managing to get it to work.
> 
> It fails with a similar message to 
> http://www.modpython.org/pipermail/mod_python/2004-February/014993.html
> 
> Unfortunately I no longer have a AIX box accessible via the net to allow
> external access to. They are located at work which will prove problematic
> but 
> not impossible to get logs from.
> 
> If any one has managed to get mod_python working under AIX I would appreciate
> some feedback.

Referring to a previous problem that might have been similar isn't
too helpful. You will need to post up the actual error messages
from your error logs for us to have any real idea about what to suggest.

Graham
From mvanaswegen at gmail.com  Thu Mar  9 07:55:51 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Thu Mar  9 07:55:57 2006
Subject: [SPAM] Re: [mod_python] Templaing question
In-Reply-To: <ffa39deb0603080144r58ab2b28refabf967fea92841@mail.gmail.com>
References: <ffa39deb0603051033q3be08f77p103fb566ea9067e5@mail.gmail.com>
	<440B3861.2050905@jgassociates.ca>
	<ffa39deb0603070348v2231370fncce795704e953a13@mail.gmail.com>
	<440E08B1.2000809@jgassociates.ca>
	<b1befe630603071742t23ff0012p41361dac45c9d040@mail.gmail.com>
	<ffa39deb0603080144r58ab2b28refabf967fea92841@mail.gmail.com>
Message-ID: <ffa39deb0603090455p1fdba4d0m4c4d795372ea760b@mail.gmail.com>

Hi Guys

I have figured it out, here is a quick summary.

problem: when I send a page to the browser via psp or req.write ( open
('file',r').read()) the
browser does not render the page correctly. I created three test functions
to do some basic testing
http://localhost/test/test[1,2,3]

If you connect to http://localhost/testpage.html it renders the page
correctly
If you connect to http://localhost/test/test[1,2,3] it renders the page
without applying the style sheet.

Solution (relevant files attached below)
If you parse a file via req.write ensure that all references to file contain
the full url.
I changed the url to http://localhost/style.css, and what do you know it
worked.

Regs

Marinus


http.conf -------------------------------------------

<Directory "/var/www">
    AddHandler mod_python .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>


style.css -------------------------------------------

#frame, #header, #footer, #body {
       font-family:arial,verdana,sans-serif;
       font-size:10pt; color:#000000;
       line-height:16px;
       border-bottom:2px solid #FFCA49;
       border-left:2px solid #FFCA49;
       border-right:2px solid #FFCA49;
       border-top:2px solid #FFCA49;
       background: white;
       padding: 10px;
       margin:5px;
}

testpage.html ----------------------------------------

<html>
      <link rel="stylesheet" href="style.css" title="default" media="all">
<body>
<div id='frame'>
     <div id='header'>
     This is a header example
     </div>
     <div id='body'>
     <%=data%>
     This is a body example
     </div>
     <div id='footer'>
     This is a footer example
     </div>
</div>
</body>
</html>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060309/a47027d8/attachment.html
From mark at gingergeeks.co.uk  Thu Mar  9 15:07:00 2006
From: mark at gingergeeks.co.uk (Mark Roberts)
Date: Thu Mar  9 15:07:08 2006
Subject: [mod_python] AIX - someone must have got it work !
In-Reply-To: <200603092000.21838.mark@gingergeeks.co.uk>
References: <1141852340.24807@dscpl.user.openhosting.com>
	<200603092000.21838.mark@gingergeeks.co.uk>
Message-ID: <200603092007.00437.mark@gingergeeks.co.uk>

>
> Referring to a previous problem that might have been similar isn't
> too helpful. You will need to post up the actual error messages
> from your error logs for us to have any real idea about what to suggest.
>
> Graham

Point taken but please be-aware I have immense difficulty getting output off 
the AIX box I'm working on. However here is the output from the Apache error 
log upon Apache startup.

Wed Mar 08 08:22:01 2006] [error] python_handler: no interpreter callback 
found.[Wed Mar 08 08:22:01 2006] [error] make_obcallback: could not import 
mod_python.apache.\n
Traceback (most recent call last):
  File "/my/lib/python2.4/site-packages/mod_python/apache.py", line 22, in ?
    import time
ImportError:    0509-130 Symbol resolution failed 
for /my/lib/python2.4/lib-dynload/time.so because:
        0509-136   Symbol PyArg_Parse (number 0) is not exported from
                   dependent module httpd.
        0509-136   Symbol PyArg_ParseTuple (number 1) is not exported from
                   dependent module httpd.
        0509-136   Symbol Py_BuildValue (number 2) is not exported from
                   dependent module httpd.
        0509-136   Symbol PyDict_GetItemString (number 3) is not exported from
                   dependent module httpd.
        0509-136   Symbol PyErr_NoMemory (number 4) is not exported from
                   dependent module httpd.
        0509-136   Symbol PyErr_Occurred (number 5) is not exported from
                   dependent module httpd.
        0509-021 Additional errors occurred but are not reported.
        0509-192 Examine .loader section symbols with the
                 'dump -Tv' command.
[Wed Mar 08 08:22:01 2006] [error] python_handler: no interpreter callback 
found.
[Wed Mar 08 08:22:01 2006] [notice] caught SIGTERM, shutting down
[Wed Mar 08 08:22:25 2006] [notice] mod_python: Creating 8 session mutexes 
based on 150 max processes and 0 max threads.
[Wed Mar 08 08:22:25 2006] [notice] Apache configured -- resuming normal 
operations

However today I managed to grab ten minutes free time to rebuild Python but 
this time use GNU make instead of the make supplied as part of the IBM XLC 
package. This time on Apache startup I do not get the symbol resolution 
failure in the error log as above. Hopefully when I return to work next week 
I can test the mod_python/vampire/xmlrpc server with my pycurl client.

If all goes well and it works, I will post any configure scripts to those that 
are interested.

Best Regards

Mark Roberts
From Brian.Fleming at tellabs.com  Fri Mar 10 12:45:04 2006
From: Brian.Fleming at tellabs.com (Fleming, Brian J.)
Date: Fri Mar 10 12:45:11 2006
Subject: [mod_python] Apache server crashing when using moinmoin and
	mod_python
Message-ID: <A6A3FD22234C5A4EA8131B6CBA2986C9022B9430@USNVEX3.tellabs-west.tellabsinc.net>

I'm running:

Solaris 9
Apache 2.2.55
Mod_python 3.2.8

I am trying to use a wiki app called MoinMoin and it fails under the gui
editor feature. Apache seems to be crashing.

Any ideas??




[Fri Mar 10 09:05:23 2006] [error] [client 172.28.103.21] File does not
exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
[Fri Mar 10 09:06:26 2006] [error] [client 172.28.81.18] File does not
exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
[Fri Mar 10 09:07:41 2006] [error] [client 172.28.103.42] File does not
exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
[Fri Mar 10 09:42:50 2006] [notice] child pid 422 exit signal
Segmentation fault (11), possible coredump in
/home/sunpecc02/apache_2.0.55
[Fri Mar 10 09:42:50 2006] [notice] child pid 2018 exit signal
Segmentation fault (11), possible coredump in
/home/sunpecc02/apache_2.0.55
[Fri Mar 10 09:42:51 2006] [notice] child pid 421 exit signal
Segmentation fault (11), possible coredump in
/home/sunpecc02/apache_2.0.55 
============================================================
The information contained in this message may be privileged
and confidential and protected from disclosure. If the reader
of this message is not the intended recipient, or an employee
or agent responsible for delivering this message to the
intended recipient, you are hereby notified that any reproduction,
dissemination or distribution of this communication is strictly
prohibited. If you have received this communication in error,
please notify us immediately by replying to the message and
deleting it from your computer. Thank you. Tellabs
============================================================

From grahamd at dscpl.com.au  Fri Mar 10 16:22:29 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 10 16:22:53 2006
Subject: [mod_python] Apache server crashing when using moinmoin and
	mod_python
In-Reply-To: <A6A3FD22234C5A4EA8131B6CBA2986C9022B9430@USNVEX3.tellabs-west.tellabsinc.net>
References: <A6A3FD22234C5A4EA8131B6CBA2986C9022B9430@USNVEX3.tellabs-west.tellabsinc.net>
Message-ID: <56D5A328-330B-4229-B14A-8D9CB942C193@dscpl.com.au>

Read through the following document and see if the expat version issues
described may be a cause:

   http://www.dscpl.com.au/articles/modpython-006.html

This is one of the main causes for core dumps when using mod_python.

Graham

On 11/03/2006, at 4:45 AM, Fleming, Brian J. wrote:

> I'm running:
>
> Solaris 9
> Apache 2.2.55
> Mod_python 3.2.8
>
> I am trying to use a wiki app called MoinMoin and it fails under  
> the gui
> editor feature. Apache seems to be crashing.
>
> Any ideas??
>
>
>
>
> [Fri Mar 10 09:05:23 2006] [error] [client 172.28.103.21] File does  
> not
> exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
> [Fri Mar 10 09:06:26 2006] [error] [client 172.28.81.18] File does not
> exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
> [Fri Mar 10 09:07:41 2006] [error] [client 172.28.103.42] File does  
> not
> exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
> [Fri Mar 10 09:42:50 2006] [notice] child pid 422 exit signal
> Segmentation fault (11), possible coredump in
> /home/sunpecc02/apache_2.0.55
> [Fri Mar 10 09:42:50 2006] [notice] child pid 2018 exit signal
> Segmentation fault (11), possible coredump in
> /home/sunpecc02/apache_2.0.55
> [Fri Mar 10 09:42:51 2006] [notice] child pid 421 exit signal
> Segmentation fault (11), possible coredump in
> /home/sunpecc02/apache_2.0.55
> ============================================================
> The information contained in this message may be privileged
> and confidential and protected from disclosure. If the reader
> of this message is not the intended recipient, or an employee
> or agent responsible for delivering this message to the
> intended recipient, you are hereby notified that any reproduction,
> dissemination or distribution of this communication is strictly
> prohibited. If you have received this communication in error,
> please notify us immediately by replying to the message and
> deleting it from your computer. Thank you. Tellabs
> ============================================================
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Fri Mar 10 16:33:00 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 10 16:30:47 2006
Subject: [mod_python] Apache server crashing when using moinmoin
	and	mod_python
In-Reply-To: <A6A3FD22234C5A4EA8131B6CBA2986C9022B9430@USNVEX3.tellabs-west.tellabsinc.net>
References: <A6A3FD22234C5A4EA8131B6CBA2986C9022B9430@USNVEX3.tellabs-west.tellabsinc.net>
Message-ID: <4411F08C.6080001@jgassociates.ca>

I installed moin-1.5.2 with the mod_python development branch (apache 
2.0.55 mpm-prefork, Linux Debian sid, python 2.3.5) and it works fine 
with in the gui editor mode. I don't have time to install mod_python 
3.2.8 on my test machine, but I doubt that there is anything new in the 
dev branch that would affect moinmoin.

You'll really need to give us more information as the log entry below 
really isn't helpful.

Did you run the unit tests when you installed mod_python? Did any fail?

Jim

Fleming, Brian J. wrote:
> I'm running:
> 
> Solaris 9
> Apache 2.2.55
> Mod_python 3.2.8
> 
> I am trying to use a wiki app called MoinMoin and it fails under the gui
> editor feature. Apache seems to be crashing.
> 
> Any ideas??
> 
> 
> 
> 
> [Fri Mar 10 09:05:23 2006] [error] [client 172.28.103.21] File does not
> exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
> [Fri Mar 10 09:06:26 2006] [error] [client 172.28.81.18] File does not
> exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
> [Fri Mar 10 09:07:41 2006] [error] [client 172.28.103.42] File does not
> exist: /home/sunpecc02/apache_2.0.55/htdocs/favicon.ico
> [Fri Mar 10 09:42:50 2006] [notice] child pid 422 exit signal
> Segmentation fault (11), possible coredump in
> /home/sunpecc02/apache_2.0.55
> [Fri Mar 10 09:42:50 2006] [notice] child pid 2018 exit signal
> Segmentation fault (11), possible coredump in
> /home/sunpecc02/apache_2.0.55
> [Fri Mar 10 09:42:51 2006] [notice] child pid 421 exit signal
> Segmentation fault (11), possible coredump in
> /home/sunpecc02/apache_2.0.55 
> ============================================================
> The information contained in this message may be privileged
> and confidential and protected from disclosure. If the reader
> of this message is not the intended recipient, or an employee
> or agent responsible for delivering this message to the
> intended recipient, you are hereby notified that any reproduction,
> dissemination or distribution of this communication is strictly
> prohibited. If you have received this communication in error,
> please notify us immediately by replying to the message and
> deleting it from your computer. Thank you. Tellabs
> ============================================================
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From emlynj at gmail.com  Sat Mar 11 14:35:37 2006
From: emlynj at gmail.com (Emlyn Jones)
Date: Sat Mar 11 14:35:43 2006
Subject: [mod_python] mod_python-3.2.8 vs python2.4 _bsddb problems
Message-ID: <200603111935.38023.emlynj@gmail.com>

Hello,
I'm trying to upgrade mod_python to version 3.2.8 using Python2.4.
The first attempt failed with "no module _bsddb", which I solved by 
downloading the bsddb libraries and rebuilding python (had to modify 
Modules/Setup manually, is that correct?).
Anyway, now I can import _bsddb from the Python interpreter but I get a 
segmentation fault when using mod_python.
The only funny when building mod_python was that first off it complained about 
not finding db- (note the -). I had to manually add DBLIBVER to src/Makefile, 
which must mean something else went wrong but I can't work out what.
My question is (are):
i)Can I run mod_python without the bsddb dependency? (Surely if it's not built 
be default it must be possible to use mod_python without it?)
ii)If not, what magic am I missing to make it play nice with bsddb enabled? I 
sure something should of made that Makefile correctly.
Any pointers greatfully received.

Cheers,
Emlyn.
From mvanaswegen at gmail.com  Sat Mar 11 17:10:13 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Sat Mar 11 17:10:20 2006
Subject: [mod_python] mod_python gone pyc'ed on me!
Message-ID: <ffa39deb0603111410g6624da13nf22346787a7a4d00@mail.gmail.com>

Somthing very strange just happened to me. I'm busy writing some additional
functions to call from the browser when all of a sudden I noticed that when
I requested my function ala https://localhost/cmd/index that my url was
rewritten in the error as https://localhost/cmd.pyc/index strange!
everything was working for all of a sudden I see .pyc in my www dir? I can't
get to my function, eek!

my httpd.conf is as follow

<Directory "/opt/www">
    # handle .py files
    AddHandler mod_python .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>


Apache/2.0.54 (Ubuntu) mod_auth_kerb/5.0-rc6 mod_python/3.1.3 Python/2.4.2
mod_ssl/2.0.54 OpenSSL/0.9.7g

regs

Marinus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060312/28384946/attachment.html
From list at joreybump.com  Sun Mar 12 00:09:27 2006
From: list at joreybump.com (Jorey Bump)
Date: Sun Mar 12 00:09:35 2006
Subject: [mod_python] mod_python gone pyc'ed on me!
In-Reply-To: <ffa39deb0603111410g6624da13nf22346787a7a4d00@mail.gmail.com>
References: <ffa39deb0603111410g6624da13nf22346787a7a4d00@mail.gmail.com>
Message-ID: <4413AD07.9020609@joreybump.com>

marinus van aswegen wrote:
> Somthing very strange just happened to me. I'm busy writing some 
> additional functions to call from the browser when all of a sudden I 
> noticed that when I requested my function ala 
> https://localhost/cmd/index <https://localhost/cmd/index> that my url 
> was rewritten in the error as https://localhost/cmd.pyc/index strange! 
> everything was working for all of a sudden I see .pyc in my www dir? I 
> can't get to my function, eek!
> 
> my httpd.conf is as follow
> 
> <Directory "/opt/www">
>     # handle .py files
>     AddHandler mod_python .py
>     PythonHandler mod_python.publisher
>     PythonDebug On
> </Directory>
> 
> 
> Apache/2.0.54 (Ubuntu) mod_auth_kerb/5.0-rc6 mod_python/3.1.3 
> Python/2.4.2 mod_ssl/2.0.54 OpenSSL/0.9.7g

Do you have MultiViews enabled? You may want to turn it off. If not, 
remove all .pyc files and set the permissions on the directory so that 
the user Apache runs as does not have write access. That will prevent 
the Python interpreter from opportunistically creating .pyc files.
From grahamd at dscpl.com.au  Sun Mar 12 01:17:02 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 12 01:17:17 2006
Subject: [mod_python] mod_python-3.2.8 vs python2.4 _bsddb problems
In-Reply-To: <200603111935.38023.emlynj@gmail.com>
References: <200603111935.38023.emlynj@gmail.com>
Message-ID: <baf3b895cfa0212ab382ee3347fd5dda@dscpl.com.au>



On 12/03/2006, at 6:35 AM, Emlyn Jones wrote:

> Hello,
> I'm trying to upgrade mod_python to version 3.2.8 using Python2.4.
> The first attempt failed with "no module _bsddb", which I solved by
> downloading the bsddb libraries and rebuilding python (had to modify
> Modules/Setup manually, is that correct?).
> Anyway, now I can import _bsddb from the Python interpreter but I get a
> segmentation fault when using mod_python.
> The only funny when building mod_python was that first off it 
> complained about
> not finding db- (note the -). I had to manually add DBLIBVER to 
> src/Makefile,
> which must mean something else went wrong but I can't work out what.
> My question is (are):
> i)Can I run mod_pythons without the bsddb dependency? (Surely if it's 
> not built
> be default it must be possible to use mod_python without it?)
> ii)If not, what magic am I missing to make it play nice with bsddb 
> enabled? I
> sure something should of made that Makefile correctly.
> Any pointers greatfully received.

What you are describing doesn't quite make any sense. The mod_python C
source code itself doesn't use Berkley database so there shouldn't be 
any
mention of 'db-' in src/Makefile. The only possibility is that you have
a strange Apache or Python installation where the library is mentioned
in the flags for building them and mod_python has included the bogus
flags in its build.

One thing to look at is the contents of:

   lib/python2.4/config/Makefile

I haven't specified the full path as it will depend on your Python
installation. The "config" directory is a subdirectory of your
"site-packages" directory though.

The mod_python installation will grab from that file flags which it 
includes
in its own build. If the flags in that makefile references "db-" and
"DBLIBVER" that at least means you know where it came from.

The problem is that unless Python was built in a strange way with 
modules
statically linked when they would normally be dynamically loaded, those
flags shouldn't be there.

Anyway, that is one avenue to investigate. I can't suggest much else
without seeing where in the build process for mod_python you were 
getting
errors, what the errors were exactly and that section of src/Makefile
you had to modify which mentioned "db-" in the first place.

Graham

From mod_python at frederic.jolliton.com  Sun Mar 12 06:59:25 2006
From: mod_python at frederic.jolliton.com (=?iso-8859-1?Q?Fr=E9d=E9ric_Jolliton?=)
Date: Sun Mar 12 06:59:36 2006
Subject: [mod_python] Specifying GET/POST method for FieldStorage
Message-ID: <86mzfvj2le.fsf@mau.intra.tuxee.net>

Hi,

[I'm not sure if python-dev was more appropriate.]

Say I've the following case: I've a form with POST method, where
action is an URL with a query string.

Currently, with util.FieldStorage it's not possible to know which
values come from the query string and which values come from the POST
request.

So, here is a suggestion: What about adding a keyword 'from_method' to
util.FieldStorage.__init__, then use it as follow:

getFieldStorage = util.FieldStorage( from_method = 'GET' )
postFieldStorage = util.FieldStorage( from_method = 'POST' )

?

And, of course, let unchanged the current behavior if from_method is
not specified or set to None.

Here is a trivial patch to support this keyword, against 3.2.8:

--- mod_python-3.2.8.orig/lib/python/mod_python/util.py	2006-02-02 06:31:45.000000000 +0100
+++ mod_python-3.2.8/lib/python/mod_python/util.py	2006-03-12 12:35:10.000000000 +0100
@@ -91,7 +91,7 @@
 
 class FieldStorage:
 
-   def __init__(self, req, keep_blank_values=0, strict_parsing=0, file_callback=None, field_callback=None):
+   def __init__(self, req, keep_blank_values=0, strict_parsing=0, file_callback=None, field_callback=None, from_method=None):
        #
        # Whenever readline is called ALWAYS use the max size EVEN when not expecting a long line.
        # - this helps protect against malformed content from exhausting memory.
@@ -100,7 +100,7 @@
        self.list = []
 
        # always process GET-style parameters
-       if req.args:
+       if req.args and (from_method is None or from_method.upper() == "GET"):
            pairs = parse_qsl(req.args, keep_blank_values)
            for pair in pairs:
                file = cStringIO.StringIO(pair[1])
@@ -109,6 +109,9 @@
        if req.method != "POST":
            return
 
+       if from_method is not None and from_method.upper() != "POST":
+           return
+
        try:
            clen = int(req.headers_in["content-length"])
        except (KeyError, ValueError):

-- 
Fr?d?ric Jolliton

From wouter at squirrel-systems.com  Sun Mar 12 09:44:20 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Sun Mar 12 09:44:32 2006
Subject: [mod_python] Bug with document root.
Message-ID: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>

Hi all,

I think I ran into a bug of mod_python, regarding sessions. If I define
my site (and document root) in the Vhosts section, I get the below
error. If it is defined in the main configuration of apache (single
site) then there is no problem. Very strange, as the Vhosts idea used to
work (well... that is... Apache recognises and uses only the first
definition, so not all goes that great). Running Mandrake 10.1.

Wouter.


Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
in apply_fs_data
    return object(**args)

  File "/var/www/html/jaimys/python/main.py", line 38, in home
    req.session = util.getSession(req)

  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
    sess = Session.Session(req)

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
389, in Session
    timeout=timeout, lock=lock)

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
294, in __init__
    timeout=timeout, lock=lock)

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
132, in __init__
    Cookie.add_cookie(self._req, self.make_cookie())

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
160, in make_cookie
    c.path = dirpath[len(docroot):]

TypeError: unsubscriptable objectMod_python error: "PythonHandler
mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
in apply_fs_data
    return object(**args)

  File "/var/www/html/jaimys/python/main.py", line 38, in home
    req.session = util.getSession(req)

  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
    sess = Session.Session(req)

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
389, in Session
    timeout=timeout, lock=lock)

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
294, in __init__
    timeout=timeout, lock=lock)

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
132, in __init__
    Cookie.add_cookie(self._req, self.make_cookie())

  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
160, in make_cookie
    c.path = dirpath[len(docroot):]

TypeError: unsubscriptable object
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060312/da848dd3/attachment.html
From jpg at jgassociates.ca  Sun Mar 12 10:13:19 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar 12 10:13:36 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>
Message-ID: <44143A8F.3070201@jgassociates.ca>

Hi Wouter,

Which version of mod_python are you using?

Could you also provide the 2 different configurations and a snippet of 
the code that is causing the problem? Maybe it should be obvious from 
the traceback, but after reading the first 3 lines this morning my brain 
seized. ;)

Jim


Wouter van Marle wrote:
> Hi all,
> 
> I think I ran into a bug of mod_python, regarding sessions. If I define
> my site (and document root) in the Vhosts section, I get the below
> error. If it is defined in the main configuration of apache (single
> site) then there is no problem. Very strange, as the Vhosts idea used to
> work (well... that is... Apache recognises and uses only the first
> definition, so not all goes that great). Running Mandrake 10.1.
> 
> Wouter.
> 
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> 136, in handler
>     result = util.apply_fs_data(object, req.form, req=req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
> in apply_fs_data
>     return object(**args)
> 
>   File "/var/www/html/jaimys/python/main.py", line 38, in home
>     req.session = util.getSession(req)
> 
>   File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>     sess = Session.Session(req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 389, in Session
>     timeout=timeout, lock=lock)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 294, in __init__
>     timeout=timeout, lock=lock)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 132, in __init__
>     Cookie.add_cookie(self._req, self.make_cookie())
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 160, in make_cookie
>     c.path = dirpath[len(docroot):]
> 
> TypeError: unsubscriptable objectMod_python error: "PythonHandler
> mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> 136, in handler
>     result = util.apply_fs_data(object, req.form, req=req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
> in apply_fs_data
>     return object(**args)
> 
>   File "/var/www/html/jaimys/python/main.py", line 38, in home
>     req.session = util.getSession(req)
> 
>   File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>     sess = Session.Session(req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 389, in Session
>     timeout=timeout, lock=lock)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 294, in __init__
>     timeout=timeout, lock=lock)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 132, in __init__
>     Cookie.add_cookie(self._req, self.make_cookie())
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> 160, in make_cookie
>     c.path = dirpath[len(docroot):]
> 
> TypeError: unsubscriptable object
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From wouter at squirrel-systems.com  Sun Mar 12 10:28:02 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Sun Mar 12 10:28:35 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <44143A8F.3070201@jgassociates.ca>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>
	<44143A8F.3070201@jgassociates.ca>
Message-ID: <1142177282.8503.13.camel@cm222-167-159-88.hkcable.com.hk>

On Sun, 2006-03-12 at 10:13 -0500, Jim Gallacher wrote:

> Hi Wouter,
> 
> Which version of mod_python are you using?


apache2-mod_python-2.0.50_3.1.3-1mdk, Installed from rpm.


> Could you also provide the 2 different configurations and a snippet of 
> the code that is causing the problem? Maybe it should be obvious from 
> the traceback, but after reading the first 3 lines this morning my brain 
> seized. ;)


The difference is in the definition of DocumentRoot in either the
httpd2.conf or the Vhosts file. I've now commented out the Vhost
completely, and set DocumentRoot in httpd2.conf. For the rest no
changes.

The Vhost definition:
<VirtualHost jaimys>
       ServerAdmin wouter@jaimysoutdoorkitchens.com
       ServerName www.jaimysoutdoorkitchens.com
       ServerAlias jaimys
       DocumentRoot /var/www/html/jaimys/
       <Location />
               AddHandler mod_python .py
               PythonDebug On
       </Location>
       PythonHandler mod_python.publisher
       ErrorLog /var/log/jaimys-error.log
</VirtualHost>

Wouter.


> 
> Jim
> 
> 
> Wouter van Marle wrote:
> > Hi all,
> > 
> > I think I ran into a bug of mod_python, regarding sessions. If I define
> > my site (and document root) in the Vhosts section, I get the below
> > error. If it is defined in the main configuration of apache (single
> > site) then there is no problem. Very strange, as the Vhosts idea used to
> > work (well... that is... Apache recognises and uses only the first
> > definition, so not all goes that great). Running Mandrake 10.1.
> > 
> > Wouter.
> > 
> > 
> > Mod_python error: "PythonHandler mod_python.publisher"
> > 
> > Traceback (most recent call last):
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> > 299, in HandlerDispatch
> >     result = object(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> > 136, in handler
> >     result = util.apply_fs_data(object, req.form, req=req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
> > in apply_fs_data
> >     return object(**args)
> > 
> >   File "/var/www/html/jaimys/python/main.py", line 38, in home
> >     req.session = util.getSession(req)
> > 
> >   File "/var/www/html/jaimys/python/util.py", line 80, in getSession
> >     sess = Session.Session(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 389, in Session
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 294, in __init__
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 132, in __init__
> >     Cookie.add_cookie(self._req, self.make_cookie())
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 160, in make_cookie
> >     c.path = dirpath[len(docroot):]
> > 
> > TypeError: unsubscriptable objectMod_python error: "PythonHandler
> > mod_python.publisher"
> > 
> > Traceback (most recent call last):
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> > 299, in HandlerDispatch
> >     result = object(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> > 136, in handler
> >     result = util.apply_fs_data(object, req.form, req=req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
> > in apply_fs_data
> >     return object(**args)
> > 
> >   File "/var/www/html/jaimys/python/main.py", line 38, in home
> >     req.session = util.getSession(req)
> > 
> >   File "/var/www/html/jaimys/python/util.py", line 80, in getSession
> >     sess = Session.Session(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 389, in Session
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 294, in __init__
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 132, in __init__
> >     Cookie.add_cookie(self._req, self.make_cookie())
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 160, in make_cookie
> >     c.path = dirpath[len(docroot):]
> > 
> > TypeError: unsubscriptable object
> > 
> > 
> > 
> > ------------------------------------------------------------------------
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060312/33bd1528/attachment.html
From wouter at squirrel-systems.com  Sun Mar 12 10:34:22 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Sun Mar 12 10:34:33 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <44143A8F.3070201@jgassociates.ca>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>
	<44143A8F.3070201@jgassociates.ca>
Message-ID: <1142177662.8503.18.camel@cm222-167-159-88.hkcable.com.hk>

And then I'm now trying to reproduce the behaviour and I can't get back
the error!
:-(
So strange.
Now I really don't understand it anymore...
The whole Vhosts thing doesn't work either. It always displays the first
host in the definition. Also very irritating as on this box I want to
test a few different sites - not nice to every time have to edit the
apache config, restart server, etc.

Wouter.

On Sun, 2006-03-12 at 10:13 -0500, Jim Gallacher wrote:

> Hi Wouter,
> 
> Which version of mod_python are you using?
> 
> Could you also provide the 2 different configurations and a snippet of 
> the code that is causing the problem? Maybe it should be obvious from 
> the traceback, but after reading the first 3 lines this morning my brain 
> seized. ;)
> 
> Jim
> 
> 
> Wouter van Marle wrote:
> > Hi all,
> > 
> > I think I ran into a bug of mod_python, regarding sessions. If I define
> > my site (and document root) in the Vhosts section, I get the below
> > error. If it is defined in the main configuration of apache (single
> > site) then there is no problem. Very strange, as the Vhosts idea used to
> > work (well... that is... Apache recognises and uses only the first
> > definition, so not all goes that great). Running Mandrake 10.1.
> > 
> > Wouter.
> > 
> > 
> > Mod_python error: "PythonHandler mod_python.publisher"
> > 
> > Traceback (most recent call last):
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> > 299, in HandlerDispatch
> >     result = object(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> > 136, in handler
> >     result = util.apply_fs_data(object, req.form, req=req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
> > in apply_fs_data
> >     return object(**args)
> > 
> >   File "/var/www/html/jaimys/python/main.py", line 38, in home
> >     req.session = util.getSession(req)
> > 
> >   File "/var/www/html/jaimys/python/util.py", line 80, in getSession
> >     sess = Session.Session(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 389, in Session
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 294, in __init__
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 132, in __init__
> >     Cookie.add_cookie(self._req, self.make_cookie())
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 160, in make_cookie
> >     c.path = dirpath[len(docroot):]
> > 
> > TypeError: unsubscriptable objectMod_python error: "PythonHandler
> > mod_python.publisher"
> > 
> > Traceback (most recent call last):
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> > 299, in HandlerDispatch
> >     result = object(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> > 136, in handler
> >     result = util.apply_fs_data(object, req.form, req=req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
> > in apply_fs_data
> >     return object(**args)
> > 
> >   File "/var/www/html/jaimys/python/main.py", line 38, in home
> >     req.session = util.getSession(req)
> > 
> >   File "/var/www/html/jaimys/python/util.py", line 80, in getSession
> >     sess = Session.Session(req)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 389, in Session
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 294, in __init__
> >     timeout=timeout, lock=lock)
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 132, in __init__
> >     Cookie.add_cookie(self._req, self.make_cookie())
> > 
> >   File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
> > 160, in make_cookie
> >     c.path = dirpath[len(docroot):]
> > 
> > TypeError: unsubscriptable object
> > 
> > 
> > 
> > ------------------------------------------------------------------------
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060312/eda95c99/attachment.html
From jpg at jgassociates.ca  Sun Mar 12 10:48:57 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar 12 10:48:46 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <1142177282.8503.13.camel@cm222-167-159-88.hkcable.com.hk>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>	<44143A8F.3070201@jgassociates.ca>
	<1142177282.8503.13.camel@cm222-167-159-88.hkcable.com.hk>
Message-ID: <441442E9.9020505@jgassociates.ca>

This looks like an old bug related to the use of AddHandler inside the 
location section. It has been fixed in version 3.2.

http://issues.apache.org/jira/browse/MODPYTHON-50

Jim

Wouter van Marle wrote:
> On Sun, 2006-03-12 at 10:13 -0500, Jim Gallacher wrote:
> 
> 
>>Hi Wouter,
>>
>>Which version of mod_python are you using?
> 
> 
> 
> apache2-mod_python-2.0.50_3.1.3-1mdk, Installed from rpm.
> 
> 
> 
>>Could you also provide the 2 different configurations and a snippet of 
>>the code that is causing the problem? Maybe it should be obvious from 
>>the traceback, but after reading the first 3 lines this morning my brain 
>>seized. ;)
> 
> 
> 
> The difference is in the definition of DocumentRoot in either the
> httpd2.conf or the Vhosts file. I've now commented out the Vhost
> completely, and set DocumentRoot in httpd2.conf. For the rest no
> changes.
> 
> The Vhost definition:
> <VirtualHost jaimys>
>        ServerAdmin wouter@jaimysoutdoorkitchens.com
>        ServerName www.jaimysoutdoorkitchens.com
>        ServerAlias jaimys
>        DocumentRoot /var/www/html/jaimys/
>        <Location />
>                AddHandler mod_python .py
>                PythonDebug On
>        </Location>
>        PythonHandler mod_python.publisher
>        ErrorLog /var/log/jaimys-error.log
> </VirtualHost>
> 
> Wouter.
> 
> 
> 
>>Jim
>>
>>
>>Wouter van Marle wrote:
>>
>>>Hi all,
>>>
>>>I think I ran into a bug of mod_python, regarding sessions. If I define
>>>my site (and document root) in the Vhosts section, I get the below
>>>error. If it is defined in the main configuration of apache (single
>>>site) then there is no problem. Very strange, as the Vhosts idea used to
>>>work (well... that is... Apache recognises and uses only the first
>>>definition, so not all goes that great). Running Mandrake 10.1.
>>>
>>>Wouter.
>>>
>>>
>>>Mod_python error: "PythonHandler mod_python.publisher"
>>>
>>>Traceback (most recent call last):
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>299, in HandlerDispatch
>>>    result = object(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>136, in handler
>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>in apply_fs_data
>>>    return object(**args)
>>>
>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>    req.session = util.getSession(req)
>>>
>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>    sess = Session.Session(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>389, in Session
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>294, in __init__
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>132, in __init__
>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>160, in make_cookie
>>>    c.path = dirpath[len(docroot):]
>>>
>>>TypeError: unsubscriptable objectMod_python error: "PythonHandler
>>>mod_python.publisher"
>>>
>>>Traceback (most recent call last):
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>299, in HandlerDispatch
>>>    result = object(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>136, in handler
>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>in apply_fs_data
>>>    return object(**args)
>>>
>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>    req.session = util.getSession(req)
>>>
>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>    sess = Session.Session(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>389, in Session
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>294, in __init__
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>132, in __init__
>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>160, in make_cookie
>>>    c.path = dirpath[len(docroot):]
>>>
>>>TypeError: unsubscriptable object
>>>
>>>
>>>
>>>------------------------------------------------------------------------
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Sun Mar 12 11:12:25 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar 12 11:12:07 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <1142177662.8503.18.camel@cm222-167-159-88.hkcable.com.hk>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>	<44143A8F.3070201@jgassociates.ca>
	<1142177662.8503.18.camel@cm222-167-159-88.hkcable.com.hk>
Message-ID: <44144869.6000707@jgassociates.ca>

Wouter van Marle wrote:
> And then I'm now trying to reproduce the behaviour and I can't get back
> the error!
> :-(
> So strange.
> Now I really don't understand it anymore...
> The whole Vhosts thing doesn't work either. It always displays the first
> host in the definition. Also very irritating as on this box I want to
> test a few different sites - not nice to every time have to edit the
> apache config, restart server, etc.

Your virtual host config is messed up, so apache is using the first one 
as the default. From your previous email:

     <VirtualHost jaimys>
        ServerAdmin wouter@jaimysoutdoorkitchens.com
        ServerName www.jaimysoutdoorkitchens.com
        ServerAlias jaimys


What's up with the <VirtualHost jamimys>? It should contain an ip 
address or wild card:

<VirtualHost *>
or
<VirtualHost *:80>
or
<VirtualHost 192.168.1.1>

(You'll need to substitute the correct ip address for 192.168.1.1).

This should get you back to the point where you can deal with the 
original bug. ;)

Jim

> Wouter.
> 
> On Sun, 2006-03-12 at 10:13 -0500, Jim Gallacher wrote:
> 
> 
>>Hi Wouter,
>>
>>Which version of mod_python are you using?
>>
>>Could you also provide the 2 different configurations and a snippet of 
>>the code that is causing the problem? Maybe it should be obvious from 
>>the traceback, but after reading the first 3 lines this morning my brain 
>>seized. ;)
>>
>>Jim
>>
>>
>>Wouter van Marle wrote:
>>
>>>Hi all,
>>>
>>>I think I ran into a bug of mod_python, regarding sessions. If I define
>>>my site (and document root) in the Vhosts section, I get the below
>>>error. If it is defined in the main configuration of apache (single
>>>site) then there is no problem. Very strange, as the Vhosts idea used to
>>>work (well... that is... Apache recognises and uses only the first
>>>definition, so not all goes that great). Running Mandrake 10.1.
>>>
>>>Wouter.
>>>
>>>
>>>Mod_python error: "PythonHandler mod_python.publisher"
>>>
>>>Traceback (most recent call last):
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>299, in HandlerDispatch
>>>    result = object(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>136, in handler
>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>in apply_fs_data
>>>    return object(**args)
>>>
>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>    req.session = util.getSession(req)
>>>
>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>    sess = Session.Session(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>389, in Session
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>294, in __init__
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>132, in __init__
>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>160, in make_cookie
>>>    c.path = dirpath[len(docroot):]
>>>
>>>TypeError: unsubscriptable objectMod_python error: "PythonHandler
>>>mod_python.publisher"
>>>
>>>Traceback (most recent call last):
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>299, in HandlerDispatch
>>>    result = object(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>136, in handler
>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>in apply_fs_data
>>>    return object(**args)
>>>
>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>    req.session = util.getSession(req)
>>>
>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>    sess = Session.Session(req)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>389, in Session
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>294, in __init__
>>>    timeout=timeout, lock=lock)
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>132, in __init__
>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>
>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>160, in make_cookie
>>>    c.path = dirpath[len(docroot):]
>>>
>>>TypeError: unsubscriptable object
>>>
>>>
>>>
>>>------------------------------------------------------------------------
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Sun Mar 12 11:23:13 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar 12 11:22:52 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <44144869.6000707@jgassociates.ca>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>	<44143A8F.3070201@jgassociates.ca>	<1142177662.8503.18.camel@cm222-167-159-88.hkcable.com.hk>
	<44144869.6000707@jgassociates.ca>
Message-ID: <44144AF1.2080607@jgassociates.ca>

Jim Gallacher wrote:
> Wouter van Marle wrote:
> 
>> And then I'm now trying to reproduce the behaviour and I can't get back
>> the error!
>> :-(
>> So strange.
>> Now I really don't understand it anymore...
>> The whole Vhosts thing doesn't work either. It always displays the first
>> host in the definition. Also very irritating as on this box I want to
>> test a few different sites - not nice to every time have to edit the
>> apache config, restart server, etc.
> 
> 
> Your virtual host config is messed up, so apache is using the first one 
> as the default. From your previous email:
> 
>     <VirtualHost jaimys>
>        ServerAdmin wouter@jaimysoutdoorkitchens.com
>        ServerName www.jaimysoutdoorkitchens.com
>        ServerAlias jaimys
> 
> 
> What's up with the <VirtualHost jamimys>? It should contain an ip 
> address or wild card:
> 
> <VirtualHost *>
> or
> <VirtualHost *:80>
> or
> <VirtualHost 192.168.1.1>
> 
> (You'll need to substitute the correct ip address for 192.168.1.1).
> 
> This should get you back to the point where you can deal with the 
> original bug. ;)
> 
> Jim
> 
>> Wouter.
>>
>> On Sun, 2006-03-12 at 10:13 -0500, Jim Gallacher wrote:
>>
>>
>>> Hi Wouter,
>>>
>>> Which version of mod_python are you using?
>>>
>>> Could you also provide the 2 different configurations and a snippet 
>>> of the code that is causing the problem? Maybe it should be obvious 
>>> from the traceback, but after reading the first 3 lines this morning 
>>> my brain seized. ;)
>>>
>>> Jim
>>>
>>>
>>> Wouter van Marle wrote:
>>>
>>>> Hi all,
>>>>
>>>> I think I ran into a bug of mod_python, regarding sessions. If I define
>>>> my site (and document root) in the Vhosts section, I get the below
>>>> error. If it is defined in the main configuration of apache (single
>>>> site) then there is no problem. Very strange, as the Vhosts idea 
>>>> used to
>>>> work (well... that is... Apache recognises and uses only the first
>>>> definition, so not all goes that great). Running Mandrake 10.1.
>>>>
>>>> Wouter.
>>>>
>>>>
>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>>
>>>> Traceback (most recent call last):
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>> 299, in HandlerDispatch
>>>>    result = object(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>> 136, in handler
>>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>> in apply_fs_data
>>>>    return object(**args)
>>>>
>>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>>    req.session = util.getSession(req)
>>>>
>>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>>    sess = Session.Session(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 389, in Session
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 294, in __init__
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 132, in __init__
>>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 160, in make_cookie
>>>>    c.path = dirpath[len(docroot):]
>>>>
>>>> TypeError: unsubscriptable objectMod_python error: "PythonHandler
>>>> mod_python.publisher"
>>>>
>>>> Traceback (most recent call last):
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>> 299, in HandlerDispatch
>>>>    result = object(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>> 136, in handler
>>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>> in apply_fs_data
>>>>    return object(**args)
>>>>
>>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>>    req.session = util.getSession(req)
>>>>
>>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>>    sess = Session.Session(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 389, in Session
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 294, in __init__
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 132, in __init__
>>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 160, in make_cookie
>>>>    c.path = dirpath[len(docroot):]
>>>>
>>>> TypeError: unsubscriptable object
>>>>
>>>>
>>>>
>>>> ------------------------------------------------------------------------ 
>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Sun Mar 12 11:27:32 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar 12 11:27:15 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <44144869.6000707@jgassociates.ca>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>	<44143A8F.3070201@jgassociates.ca>	<1142177662.8503.18.camel@cm222-167-159-88.hkcable.com.hk>
	<44144869.6000707@jgassociates.ca>
Message-ID: <44144BF4.509@jgassociates.ca>

Aaak! Maybe I should step away from the computer for a day. Sorry for 
the previous, content-free email.

What I wanted to say is you *can* include a domain name in 
<VirtualHost>, but it's something I like to avoid. You might want to try 
using a fully qualified domain name instead of jaimys.

This will be my last message until I smarten up. :)

Jim

Jim Gallacher wrote:
> Wouter van Marle wrote:
> 
>> And then I'm now trying to reproduce the behaviour and I can't get back
>> the error!
>> :-(
>> So strange.
>> Now I really don't understand it anymore...
>> The whole Vhosts thing doesn't work either. It always displays the first
>> host in the definition. Also very irritating as on this box I want to
>> test a few different sites - not nice to every time have to edit the
>> apache config, restart server, etc.
> 
> 
> Your virtual host config is messed up, so apache is using the first one 
> as the default. From your previous email:
> 
>     <VirtualHost jaimys>
>        ServerAdmin wouter@jaimysoutdoorkitchens.com
>        ServerName www.jaimysoutdoorkitchens.com
>        ServerAlias jaimys
> 
> 
> What's up with the <VirtualHost jamimys>? It should contain an ip 
> address or wild card:
> 
> <VirtualHost *>
> or
> <VirtualHost *:80>
> or
> <VirtualHost 192.168.1.1>
> 
> (You'll need to substitute the correct ip address for 192.168.1.1).
> 
> This should get you back to the point where you can deal with the 
> original bug. ;)
> 
> Jim
> 
>> Wouter.
>>
>> On Sun, 2006-03-12 at 10:13 -0500, Jim Gallacher wrote:
>>
>>
>>> Hi Wouter,
>>>
>>> Which version of mod_python are you using?
>>>
>>> Could you also provide the 2 different configurations and a snippet 
>>> of the code that is causing the problem? Maybe it should be obvious 
>>> from the traceback, but after reading the first 3 lines this morning 
>>> my brain seized. ;)
>>>
>>> Jim
>>>
>>>
>>> Wouter van Marle wrote:
>>>
>>>> Hi all,
>>>>
>>>> I think I ran into a bug of mod_python, regarding sessions. If I define
>>>> my site (and document root) in the Vhosts section, I get the below
>>>> error. If it is defined in the main configuration of apache (single
>>>> site) then there is no problem. Very strange, as the Vhosts idea 
>>>> used to
>>>> work (well... that is... Apache recognises and uses only the first
>>>> definition, so not all goes that great). Running Mandrake 10.1.
>>>>
>>>> Wouter.
>>>>
>>>>
>>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>>
>>>> Traceback (most recent call last):
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>> 299, in HandlerDispatch
>>>>    result = object(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>> 136, in handler
>>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>> in apply_fs_data
>>>>    return object(**args)
>>>>
>>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>>    req.session = util.getSession(req)
>>>>
>>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>>    sess = Session.Session(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 389, in Session
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 294, in __init__
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 132, in __init__
>>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 160, in make_cookie
>>>>    c.path = dirpath[len(docroot):]
>>>>
>>>> TypeError: unsubscriptable objectMod_python error: "PythonHandler
>>>> mod_python.publisher"
>>>>
>>>> Traceback (most recent call last):
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>>> 299, in HandlerDispatch
>>>>    result = object(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>>>> 136, in handler
>>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361,
>>>> in apply_fs_data
>>>>    return object(**args)
>>>>
>>>>  File "/var/www/html/jaimys/python/main.py", line 38, in home
>>>>    req.session = util.getSession(req)
>>>>
>>>>  File "/var/www/html/jaimys/python/util.py", line 80, in getSession
>>>>    sess = Session.Session(req)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 389, in Session
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 294, in __init__
>>>>    timeout=timeout, lock=lock)
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 132, in __init__
>>>>    Cookie.add_cookie(self._req, self.make_cookie())
>>>>
>>>>  File "/usr/lib/python2.3/site-packages/mod_python/Session.py", line
>>>> 160, in make_cookie
>>>>    c.path = dirpath[len(docroot):]
>>>>
>>>> TypeError: unsubscriptable object
>>>>
>>>>
>>>>
>>>> ------------------------------------------------------------------------ 
>>>>
>>>>
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Sun Mar 12 14:36:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 12 14:36:41 2006
Subject: [mod_python] Specifying GET/POST method for FieldStorage
In-Reply-To: <86mzfvj2le.fsf@mau.intra.tuxee.net>
References: <86mzfvj2le.fsf@mau.intra.tuxee.net>
Message-ID: <902953f979bd7b5a3f8519b32cd52421@dscpl.com.au>

Can you explain why you would want to distinguish between the two?

If you want simply not to allow form args in the URL for a POST,
you could check whether req.args is non empty and return a BAD
request if it is. This would be preferable to silently ignoring
the values if any were provided.

If trying to use the URL args and POST content args as different
distinct input methods within the same request, it sounds a bit dodgy.

Graham

On 12/03/2006, at 10:59 PM, Fr?d?ric Jolliton wrote:

> Hi,
>
> [I'm not sure if python-dev was more appropriate.]
>
> Say I've the following case: I've a form with POST method, where
> action is an URL with a query string.
>
> Currently, with util.FieldStorage it's not possible to know which
> values come from the query string and which values come from the POST
> request.
>
> So, here is a suggestion: What about adding a keyword 'from_method' to
> util.FieldStorage.__init__, then use it as follow:
>
> getFieldStorage = util.FieldStorage( from_method = 'GET' )
> postFieldStorage = util.FieldStorage( from_method = 'POST' )
>
> ?
>
> And, of course, let unchanged the current behavior if from_method is
> not specified or set to None.
>
> Here is a trivial patch to support this keyword, against 3.2.8:
>
> --- mod_python-3.2.8.orig/lib/python/mod_python/util.py	2006-02-02 
> 06:31:45.000000000 +0100
> +++ mod_python-3.2.8/lib/python/mod_python/util.py	2006-03-12 
> 12:35:10.000000000 +0100
> @@ -91,7 +91,7 @@
>
>  class FieldStorage:
>
> -   def __init__(self, req, keep_blank_values=0, strict_parsing=0, 
> file_callback=None, field_callback=None):
> +   def __init__(self, req, keep_blank_values=0, strict_parsing=0, 
> file_callback=None, field_callback=None, from_method=None):
>         #
>         # Whenever readline is called ALWAYS use the max size EVEN 
> when not expecting a long line.
>         # - this helps protect against malformed content from 
> exhausting memory.
> @@ -100,7 +100,7 @@
>         self.list = []
>
>         # always process GET-style parameters
> -       if req.args:
> +       if req.args and (from_method is None or from_method.upper() == 
> "GET"):
>             pairs = parse_qsl(req.args, keep_blank_values)
>             for pair in pairs:
>                 file = cStringIO.StringIO(pair[1])
> @@ -109,6 +109,9 @@
>         if req.method != "POST":
>             return
>
> +       if from_method is not None and from_method.upper() != "POST":
> +           return
> +
>         try:
>             clen = int(req.headers_in["content-length"])
>         except (KeyError, ValueError):


From stalker at telecom.ozersk.ru  Sun Mar 12 17:04:50 2006
From: stalker at telecom.ozersk.ru (stalker)
Date: Sun Mar 12 17:06:56 2006
Subject: [mod_python] some troubles with multiple applications in the one
	directory
Message-ID: <44149B02.5080501@telecom.ozersk.ru>

this is the part of my .htaccess file

Options -Indexes
AddHandler mod_python .py
<Files "test1.py">
	PythonHandler test1
</Files>
<Files "test2.py">
	PythonHandler test2
</Files>
<Files "test3.py">
       PythonHandler test3
</Files>
<Files "test4.py">
       PythonHandler test4
</Files>
PythonDebug On

If i get http://localhost/dir/test1.py - normal running
if i get http://my_network_ip/dir/test1.py - i get the error

Mod_python error: "PythonHandler test1"
...
ImportError: No module named test1

how can i fix it?

p.s. apache 2.0.55, mod_python 3.2.8, python 2.4.2, windows 2003
From grahamd at dscpl.com.au  Sun Mar 12 18:23:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 12 18:23:35 2006
Subject: [mod_python] some troubles with multiple applications in the
	onedirectory
Message-ID: <1142205812.664@dscpl.user.openhosting.com>

stalker wrote ..
> this is the part of my .htaccess file
> 
> Options -Indexes
> AddHandler mod_python .py
> <Files "test1.py">
> 	PythonHandler test1
> </Files>
> <Files "test2.py">
> 	PythonHandler test2
> </Files>
> <Files "test3.py">
>        PythonHandler test3
> </Files>
> <Files "test4.py">
>        PythonHandler test4
> </Files>
> PythonDebug On
> 
> If i get http://localhost/dir/test1.py - normal running
> if i get http://my_network_ip/dir/test1.py - i get the error
> 
> Mod_python error: "PythonHandler test1"
> ...
> ImportError: No module named test1
> 
> how can i fix it?

This problem relates to:

  https://issues.apache.org/jira/browse/MODPYTHON-126

Two things can be done to work around. The first is to explicitly
set PythonPath directive in that directory, to include that directory.
This may not be practical if you have other directories nested in
subdirectories.

The second thing that can be done is to put in a dummy fixup
handler in that directory.

  PythonFixupHandler _dummy

This should be outside of the Files directives. The _dummy.py
file should contain:

  from mod_python import apache

  def fixuphandler(req):
    return apache.OK

Use of the fixup handler is enough to trigger sys.path to be
correctly updated automatically with the path to the directory.

There is another workaround which is possibly more elegant,
but it requires use of mod_python out of subversion repository.
If I get a chance and it is of interest, I'll post about it later.

Graham
From wouter at squirrel-systems.com  Sun Mar 12 19:52:35 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Sun Mar 12 19:52:45 2006
Subject: [mod_python] Bug with document root.
In-Reply-To: <44144869.6000707@jgassociates.ca>
References: <1142174661.8503.3.camel@cm222-167-159-88.hkcable.com.hk>
	<44143A8F.3070201@jgassociates.ca>
	<1142177662.8503.18.camel@cm222-167-159-88.hkcable.com.hk>
	<44144869.6000707@jgassociates.ca>
Message-ID: <1142211156.8503.21.camel@cm222-167-159-88.hkcable.com.hk>

On Sun, 2006-03-12 at 11:12 -0500, Jim Gallacher wrote:


>      <VirtualHost jaimys>
>         ServerAdmin wouter@jaimysoutdoorkitchens.com
>         ServerName www.jaimysoutdoorkitchens.com
>         ServerAlias jaimys
> 
> 
> What's up with the <VirtualHost jamimys>? It should contain an ip 
> address or wild card:


I used to have a * there (all hosts are the same IP), also didn't work
and I've given up on that part basically.

But anyway it's getting off topic, I may start fiddling with that again
another time.

Wouter.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060313/0089d1da/attachment.html
From mod_python at frederic.jolliton.com  Mon Mar 13 03:35:00 2006
From: mod_python at frederic.jolliton.com (=?iso-8859-1?Q?Fr=E9d=E9ric_Jolliton?=)
Date: Mon Mar 13 03:35:12 2006
Subject: [mod_python] Re: Specifying GET/POST method for FieldStorage
In-Reply-To: <902953f979bd7b5a3f8519b32cd52421@dscpl.com.au> (Graham
	Dumpleton's message of "Mon, 13 Mar 2006 06:36:21 +1100")
References: <86mzfvj2le.fsf@mau.intra.tuxee.net>
	<902953f979bd7b5a3f8519b32cd52421@dscpl.com.au>
Message-ID: <86ek16ivyj.fsf@mau.intra.tuxee.net>

Hi,

[..]
>> getFieldStorage = util.FieldStorage( from_method = 'GET' )
>> postFieldStorage = util.FieldStorage( from_method = 'POST' )
[..]

[GET/POST field storages]
> Can you explain why you would want to distinguish between the two?
[...]
> If trying to use the URL args and POST content args as different
> distinct input methods within the same request, it sounds a bit
> dodgy.

Not necessary.

Why ? Simply because I want to have full knowledge about the
values. And mainly because the meaning of the values is not the same
according to their origins !

A contrived example:

(I don't doubt someone will answer "Don't do that", but let say I
want.)

Say I've at http://example.com/books/?sort=author&title=full a form
like this:

<form method="POST" action="/books/?sort=author&amp;title=full">
<fieldset><legend> Add a book </legend>
               <input type="hidden" name="action" value="add-a-book" />
<p> Author:    <input type="entry"  name="author" /> </p>
<p> Title:     <input type="entry"  name="title" /> </p>
<p> Publisher: <input type="entry"  name="publisher" /> </p>
<p>            <input type="submit" name="submit" value="Add" /> </p>
</fieldset>
</form>

Here, in this example, there is a clash because the query string
(which is kept from the original URL to maintain the parameters)
include 'title' and the form also include such a field with this name.

To summarize, in this example:

 - page parameters (query string) = ['sort', 'title']
 - form fields (post method) = ['action', 'author', 'title', 'publisher', 'submit']

However, and it's the point on my patch, I don't attach the same
semantic to query string values (which are there to "configure" the
current page) and to the post values (which are the result of the form
and which modify the contents or the resource or whatever) because to
me it's really 2 different *namespaces*, hence the need to parse them
into different field storages if necessary.

Does that make sense ?

After all, mod_python is about controlling every aspect of the
request, no ? :)

-- 
Fr?d?ric Jolliton

From nlv11281 at natlab.research.philips.com  Mon Mar 13 03:56:47 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Mar 13 03:57:17 2006
Subject: [mod_python] Re: Specifying GET/POST method for FieldStorage
In-Reply-To: <86ek16ivyj.fsf@mau.intra.tuxee.net>
References: <86mzfvj2le.fsf@mau.intra.tuxee.net>	<902953f979bd7b5a3f8519b32cd52421@dscpl.com.au>
	<86ek16ivyj.fsf@mau.intra.tuxee.net>
Message-ID: <441533CF.2070007@natlab.research.philips.com>

Objections:
1. GET and POST are really, really bad names.
2. You already have what you want, you're just making things complex.

Explanation:
1. A GET request differs from a POST request in more ways than just 
"where the parameters are". A POST instructs the browser to "not do it 
again" on reload, because a POST has a side-effect (it changes data on 
the server). A GET is a read-only action that does not affect server 
state and can be issued as many times as desired.

2. On what you call a "nameclash", FieldStorage will put the req.args in 
req['title'][0] and the body version in req['title'][1].

I don't see why the whole mod_python community should adapt to your 
single solution to your particular 'problem'. I can think of about a 
dozen ways to get what you apparently want, and modifying any underlying 
mod_python code is not part of any of them.


Mike Looijmans
Philips Natlab / Topic Automation


Fr?d?ric Jolliton wrote:
> Hi,
> 
> [..]
> 
>>>getFieldStorage = util.FieldStorage( from_method = 'GET' )
>>>postFieldStorage = util.FieldStorage( from_method = 'POST' )
> 
> [..]
> 
> [GET/POST field storages]
> 
>>Can you explain why you would want to distinguish between the two?
> 
> [...]
> 
>>If trying to use the URL args and POST content args as different
>>distinct input methods within the same request, it sounds a bit
>>dodgy.
> 
> 
> Not necessary.
> 
> Why ? Simply because I want to have full knowledge about the
> values. And mainly because the meaning of the values is not the same
> according to their origins !
> 
> A contrived example:
> 
> (I don't doubt someone will answer "Don't do that", but let say I
> want.)
> 
> Say I've at http://example.com/books/?sort=author&title=full a form
> like this:
> 
> <form method="POST" action="/books/?sort=author&amp;title=full">
> <fieldset><legend> Add a book </legend>
>                <input type="hidden" name="action" value="add-a-book" />
> <p> Author:    <input type="entry"  name="author" /> </p>
> <p> Title:     <input type="entry"  name="title" /> </p>
> <p> Publisher: <input type="entry"  name="publisher" /> </p>
> <p>            <input type="submit" name="submit" value="Add" /> </p>
> </fieldset>
> </form>
> 
> Here, in this example, there is a clash because the query string
> (which is kept from the original URL to maintain the parameters)
> include 'title' and the form also include such a field with this name.
> 
> To summarize, in this example:
> 
>  - page parameters (query string) = ['sort', 'title']
>  - form fields (post method) = ['action', 'author', 'title', 'publisher', 'submit']
> 
> However, and it's the point on my patch, I don't attach the same
> semantic to query string values (which are there to "configure" the
> current page) and to the post values (which are the result of the form
> and which modify the contents or the resource or whatever) because to
> me it's really 2 different *namespaces*, hence the need to parse them
> into different field storages if necessary.
> 
> Does that make sense ?
> 
> After all, mod_python is about controlling every aspect of the
> request, no ? :)
> 

From grahamd at dscpl.com.au  Mon Mar 13 03:59:08 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 13 03:59:29 2006
Subject: [mod_python] Re: Specifying GET/POST method for FieldStorage
In-Reply-To: <86ek16ivyj.fsf@mau.intra.tuxee.net>
References: <86mzfvj2le.fsf@mau.intra.tuxee.net>
	<902953f979bd7b5a3f8519b32cd52421@dscpl.com.au>
	<86ek16ivyj.fsf@mau.intra.tuxee.net>
Message-ID: <805285f5d0483f697746f323bf46131b@dscpl.com.au>

I haven't really applied the concepts much myself, but one option
which I am sure others are likely suggest is to follow REST style
conventions for URLs instead. See:

   http://rest.blueoxen.net/cgi-bin/wiki.pl

Anyone want to contribute suggestions as to how REST style URLs
could be used to do this.

BTW, am not suggesting you did this, merely interested for my own
education as to how the REST supporters would do it.

Graham

On 13/03/2006, at 7:35 PM, Fr?d?ric Jolliton wrote:
> Why ? Simply because I want to have full knowledge about the
> values. And mainly because the meaning of the values is not the same
> according to their origins !
>
> A contrived example:
>
> (I don't doubt someone will answer "Don't do that", but let say I
> want.)
>
> Say I've at http://example.com/books/?sort=author&title=full a form
> like this:
>
> <form method="POST" action="/books/?sort=author&amp;title=full">
> <fieldset><legend> Add a book </legend>
>                <input type="hidden" name="action" value="add-a-book" />
> <p> Author:    <input type="entry"  name="author" /> </p>
> <p> Title:     <input type="entry"  name="title" /> </p>
> <p> Publisher: <input type="entry"  name="publisher" /> </p>
> <p>            <input type="submit" name="submit" value="Add" /> </p>
> </fieldset>
> </form>
>
> Here, in this example, there is a clash because the query string
> (which is kept from the original URL to maintain the parameters)
> include 'title' and the form also include such a field with this name.
>
> To summarize, in this example:
>
>  - page parameters (query string) = ['sort', 'title']
>  - form fields (post method) = ['action', 'author', 'title', 
> 'publisher', 'submit']
>
> However, and it's the point on my patch, I don't attach the same
> semantic to query string values (which are there to "configure" the
> current page) and to the post values (which are the result of the form
> and which modify the contents or the resource or whatever) because to
> me it's really 2 different *namespaces*, hence the need to parse them
> into different field storages if necessary.
>
> Does that make sense ?
>
> After all, mod_python is about controlling every aspect of the
> request, no ? :)
>
> -- 
> Fr?d?ric Jolliton
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From mod_python at frederic.jolliton.com  Mon Mar 13 12:45:33 2006
From: mod_python at frederic.jolliton.com (=?iso-8859-1?Q?Fr=E9d=E9ric_Jolliton?=)
Date: Mon Mar 13 12:45:45 2006
Subject: [mod_python] Re: Specifying GET/POST method for FieldStorage
In-Reply-To: <441533CF.2070007@natlab.research.philips.com> (Mike Looijmans's
	message of "Mon, 13 Mar 2006 09:56:47 +0100")
References: <86mzfvj2le.fsf@mau.intra.tuxee.net>
	<902953f979bd7b5a3f8519b32cd52421@dscpl.com.au>
	<86ek16ivyj.fsf@mau.intra.tuxee.net>
	<441533CF.2070007@natlab.research.philips.com>
Message-ID: <867j6yi6gy.fsf@mau.intra.tuxee.net>

[Since everyone is top posting, I will don't take the time to
copy&paste parts of my previous post for the context..]

To summarize, I'm proposing:

util.FieldStorage()                   # as usual, return all fields
util.FieldStorage( source = 'all' )   # same as above
util.FieldStorage( source = 'query' ) # only fields from QS
util.FieldStorage( source = 'post' )  # only fields from POST method

> Objections:
> 1. GET and POST are really, really bad names.

I agree. Then perhaps something like source='query' and source='post',
defaulting to source='all' (see above.)

> 2. You already have what you want, you're just making things
> complex.

I want more control, more possibility, more power. I don't see
complexity here.

> Explanation:
> 1. A GET request differs from a POST request in more ways than just
> "where the parameters are". A POST instructs the browser to "not do it
> again" on reload, because a POST has a side-effect (it changes data on
> the server). A GET is a read-only action that does not affect server
> state and can be issued as many times as desired.

You're talking about web browsers and HTML. That's only conventions.
You seems to imply that's the only way. But we agree on the different
meaning according to the origin, and that's the reason for my patch.

But even the query string is only convention (it could be any string
with any syntax you want) as long as it doesn't come from a form with
GET method !

So, here is another (contrived) example:

Say I've my own syntax for the "query" string where & and = have
potentially different meaning (that's my right), and I use only POST
method for forms.

I've URLs such as:

http://example.com/books?sort=title/cat=computing&math

or

http://example.com/books?id:ZmllbGQ=/group:YW5vdGhlciBmaWVsZA==

(base64 encoded values)

or.. well, lot of other possible example for whatever reasons.

However, I want to process the POST fields normally, so in such case I
could want to do:

-=-=-
# Process the query string with my own syntax separately
data = processMyOwnSyntax( req.subprocess_env[ 'QUERY_STRING' ] )

# Reuse the useful util.FieldStorage for the POST fields only and
# don't try to parse query string because the data don't come from a
# form.
formFields = util.FieldStorage( source = 'post' )
-=-=-

> 2. On what you call a "nameclash", FieldStorage will put the
> req.args in req['title'][0] and the body version in req['title'][1].

Seriously ? :) How could you build serious stuff by relying on such
detail !

> I don't see why the whole mod_python community should adapt to your
> single solution to your particular 'problem'.

Huh.

> I can think of about a dozen ways to get what you apparently want,
> and modifying any underlying mod_python code is not part of any of
> them.

Sure, I can just create my own FieldStorage class anyway. After all,
I'm only suggesting something. That such a change could be part of
mod_python or not is not a big concern to me.

And english is not my primary language, it's hard to me to explain
things correctly.

-- 
Fr?d?ric Jolliton

From mark at gingergeeks.co.uk  Mon Mar 13 15:25:13 2006
From: mark at gingergeeks.co.uk (Mark Roberts)
Date: Mon Mar 13 15:25:23 2006
Subject: [mod_python] AIX - someone must have got it work !
Message-ID: <200603132025.13765.mark@gingergeeks.co.uk>

Hi,
    Nope, I was mistaken it still doesn't work !

Best Regards

Mark Roberts
From grahamd at dscpl.com.au  Mon Mar 13 16:17:03 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 13 16:17:08 2006
Subject: [mod_python] AIX - someone must have got it work !
Message-ID: <1142284623.28426@dscpl.user.openhosting.com>

Mark Roberts wrote ..
> Hi,
>     Nope, I was mistaken it still doesn't work !

And without specific details of the current problem, since not sure if
you got past the last one, we still have no idea. ;-)

Thus, you might have to refresh us on the details with any new
information you have.

Graham
From grahamd at dscpl.com.au  Mon Mar 13 18:19:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 13 18:19:37 2006
Subject: [mod_python] Re: Specifying GET/POST method for FieldStorage
Message-ID: <1142291972.7471@dscpl.user.openhosting.com>

=?iso-8859-1?Q?Fr=E9d=E9ric_Jolliton?= wrote ..
> [Since everyone is top posting, I will don't take the time to
> copy&paste parts of my previous post for the context..]
> 
> To summarize, I'm proposing:
> 
> util.FieldStorage()                   # as usual, return all fields
> util.FieldStorage( source = 'all' )   # same as above
> util.FieldStorage( source = 'query' ) # only fields from QS
> util.FieldStorage( source = 'post' )  # only fields from POST method

You do realise you could do this by creating your own class derived
from FieldStorage? Your derived class would just need to put an
appropriate wrapper (or not) around the "req" object before passing
it to the FieldStorage base class constructor.

To get you started, have a look at the following test code:

import types

from mod_python import apache, util

class _Req1:
  def __init__(self, req):
    self.__req = req
    self.__args = None
  def __getattr__(self, name):
    if name == "args":
      return self.__args
    else:
      return getattr(self.__req, name)

class _Req2:
  def __init__(self, req):
    self.__req = req
    self.__method = None
  def __getattr__(self, name):
    if name == "method":
      return self.__method
    else:
      return getattr(self.__req, name)

def dump(req, form):
  args = {}

  # Merge form data into list of possible
  # arguments. Convert the single item lists
  # back into values.
  
  for field in form.list:
    if field.filename:
      value = field
    else:
      value = field.value
      
    if args.has_key(field.name):
      args[field.name].append(value)
    else:
      args[field.name] = [value]
  
    for arg in args.keys():
      if type(args[arg]) == types.ListType:
        if len(args[arg]) == 1:
          args[arg] = args[arg][0]

    # Some strange forms can result in fields
    # where the key value is None. Wipe this out
    # just in case this happens as can cause
    # problems later.

    if args.has_key(None):
      del args[None]

  req.write(str(args))

def handler(req):
  req.content_type = 'text/plain'

  form1 = util.FieldStorage(_Req1(req))
  req.write("post=")
  dump(req, form1)

  req.write("\n")

  form2 = util.FieldStorage(_Req2(req))
  req.write("args=")
  dump(req, form2)

  return apache.OK

From mod_python at frederic.jolliton.com  Mon Mar 13 21:42:06 2006
From: mod_python at frederic.jolliton.com (=?iso-8859-1?Q?Fr=E9d=E9ric_Jolliton?=)
Date: Mon Mar 13 21:42:15 2006
Subject: [mod_python] Re: Specifying GET/POST method for FieldStorage
In-Reply-To: <1142291972.7471@dscpl.user.openhosting.com> (Graham Dumpleton's
	message of "Mon, 13 Mar 2006 18:19:33 -0500")
References: <1142291972.7471@dscpl.user.openhosting.com>
Message-ID: <86zmjt3fy9.fsf@mau.intra.tuxee.net>


[Patching FieldStorage to process only GET or POST fields.]

"Graham Dumpleton" <grahamd-+z240F6uMyr0CCvOHzKKcA@public.gmane.org> writes:
> You do realise you could do this by creating your own class derived
> from FieldStorage? Your derived class would just need to put an
> appropriate wrapper (or not) around the "req" object before passing
> it to the FieldStorage base class constructor.
>
> class _Req1: [wrapper for req overriding 'args']
> class _Req2: [wrapper for req overriding 'method']
[..]

Hmm, why not. I don't thought about that.

Thanks for the suggestion !

-- 
Fr?d?ric Jolliton

From webb.sprague at gmail.com  Thu Mar 16 18:39:23 2006
From: webb.sprague at gmail.com (Webb Sprague)
Date: Thu Mar 16 18:39:29 2006
Subject: [mod_python] Classic classes only
Message-ID: <b11ea23c0603161539p260d642cmc3334b801473e09@mail.gmail.com>

Hi all,

This might have been answered somewhere else, but... When I inherit
from an class that inherits from object (thus making a new style
class), I get the backtrace below.  However, when I use old-style
classes the problem goes away.  I was just wondering if someone could
explain why, or give me a link to a discussion?

Thanks
W

###

Backtrace:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
356, in apply_fs_data
    if not (fc.co_flags & 0x08):

UnboundLocalError: local variable 'fc' referenced before assignment

From grahamd at dscpl.com.au  Thu Mar 16 19:06:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 16 19:06:20 2006
Subject: [mod_python] Classic classes only
In-Reply-To: <b11ea23c0603161539p260d642cmc3334b801473e09@mail.gmail.com>
References: <b11ea23c0603161539p260d642cmc3334b801473e09@mail.gmail.com>
Message-ID: <E0FF78A1-CBA4-4BAC-96E1-3175E86DE5D6@dscpl.com.au>

What version of mod_python are you using?

Known about this for quite a while as addressed the problem in my own
framework which duplicated publisher functionality. I can't remember if
fixed in 3.2.8 and can't check code right now.

Graham

On 17/03/2006, at 10:39 AM, Webb Sprague wrote:

> Hi all,
>
> This might have been answered somewhere else, but... When I inherit
> from an class that inherits from object (thus making a new style
> class), I get the backtrace below.  However, when I use old-style
> classes the problem goes away.  I was just wondering if someone could
> explain why, or give me a link to a discussion?
>
> Thanks
> W
>
> ###
>
> Backtrace:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> line 136, in handler
>     result = util.apply_fs_data(object, req.form, req=req)
>
>   File "/usr/lib/python2.4/site-packages/mod_python/util.py", line
> 356, in apply_fs_data
>     if not (fc.co_flags & 0x08):
>
> UnboundLocalError: local variable 'fc' referenced before assignment
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From mvanaswegen at gmail.com  Fri Mar 17 04:00:19 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Fri Mar 17 04:00:23 2006
Subject: [mod_python] Which Database?
Message-ID: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>

Hi All

Having sorted out mod_python code I new move on to the database :) I've been
playing with mysql via _mysql. Before I get into using this module I thought
I'd ask the obvious question "what database do you like to use and what
module to you use to interface?"
I know this is a bit open ended, but I thought let me gauge what ppl like to
use.

Regs

Marinus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060317/32ca22f5/attachment.html
From python_eager at yahoo.com  Fri Mar 17 04:14:45 2006
From: python_eager at yahoo.com (python eager)
Date: Fri Mar 17 04:15:19 2006
Subject: [mod_python] Reg IronPython
Message-ID: <20060317091445.32081.qmail@web31313.mail.mud.yahoo.com>

Hi
    i want more details about IronPython. Please help me. What is site name and also i need more examples in IronPython. Because i am connecting to .Net environment. please do the needful
   
  thank you
   
  regards
  Python Eager

		
---------------------------------
Yahoo! Travel
 Find  great deals to the top 10 hottest destinations!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060317/74a2b704/attachment.html
From trepca at gmail.com  Fri Mar 17 05:31:02 2006
From: trepca at gmail.com (Sebastjan Trepca)
Date: Fri Mar 17 05:31:05 2006
Subject: [mod_python] Which Database?
In-Reply-To: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
Message-ID: <cd329af80603170231y2b1b9a7rff9bebdf2da61fe8@mail.gmail.com>

PostgreSQL + psycopg2

But it depends on application. SQLite is very nice for small and
simple things for example.

Sebastjan

On 3/17/06, marinus van aswegen <mvanaswegen@gmail.com> wrote:
> Hi All
>
> Having sorted out mod_python code I new move on to the database :) I've been
> playing with mysql via _mysql. Before I get into using this module I thought
> I'd ask the obvious question "what database do you like to use and what
> module to you use to interface?"
> I know this is a bit open ended, but I thought let me gauge what ppl like to
> use.
>
> Regs
>
> Marinus
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

From nlv11281 at natlab.research.philips.com  Fri Mar 17 06:48:51 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Fri Mar 17 06:49:06 2006
Subject: [mod_python] Which Database?
In-Reply-To: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
Message-ID: <441AA223.3030107@natlab.research.philips.com>

MySQL, using MySQLdb.

Putting in another database engine is very easy, just replace the 'connect' call.
Supports all you'll even need (transactions, distributed processing, triggers, ...) and is the 
obvious choice for many-readers few-writers systems.

Mike Looijmans
Philips Natlab / Topic Automation


marinus van aswegen wrote:
> Hi All
> 
> Having sorted out mod_python code I new move on to the database :) I've 
> been playing with mysql via _mysql. Before I get into using this module 
> I thought I'd ask the obvious question "what database do you like to use 
> and what module to you use to interface?"
> I know this is a bit open ended, but I thought let me gauge what ppl 
> like to use.
> 
> Regs
> 
> Marinus
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From gustavo.cordova at q-voz.com  Fri Mar 17 09:23:30 2006
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Mar 17 09:13:39 2006
Subject: [mod_python] Which Database?
In-Reply-To: <441AA223.3030107@natlab.research.philips.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
	<441AA223.3030107@natlab.research.philips.com>
Message-ID: <441AC662.7000100@q-voz.com>

Mike Looijmans wrote:
> MySQL, using MySQLdb.
>
> Putting in another database engine is very easy, just replace the 
> 'connect' call.
> Supports all you'll even need (transactions, distributed processing, 
> triggers, ...) and is the obvious choice for many-readers few-writers 
> systems.
NOO!! IT IS NOT!!

Well, it could be, "but".  MySQL differs from the SQL standard in 
certain small but important ways (please google for more info, let's not 
turn this into a PostgreSQL vs. MySQL flamefest), but the thing is that, 
if you tie down your project with MySQL, you're going to have to work on 
it quite a bit to get it *off* MySQL.

As for me, if the project warrants a database server, it's always been 
PostgreSQL/psycopg (or now, psycopg2); in all the years I've been using 
it, I've never lost a single byte, and it's always performed admirably 
and consistently.

In the area of embedded databases, depending on the case, either it's a 
"shelf-kinda-thingy" using bsddb or gdbm, or sqlite, depending on the 
specific project's needs.

I've been meaning to do a few experiments with PyTables, but I haven't 
found the time.

Salutations!

-gca

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060317/7cd6a1b9/attachment-0001.html
From dave at davebritton.com  Fri Mar 17 09:13:15 2006
From: dave at davebritton.com (Dave Britton)
Date: Fri Mar 17 09:13:40 2006
Subject: [mod_python] Which Database?
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
Message-ID: <00a101c649cc$ef731310$0500a8c0@brittonfamily.org>

I use MySQL with the Dustman MySQLdb interface, for example a typical mod_python publisher delivered module might have:
=======================
from MySQLdb import *
def csql():
 dbc=connect('localhost', 'mysqluser')
 c=cursors.DictCursor(dbc)
 c.execute("use thisdatabase")
 return (c, dbc)
#
def index(req,userid=''):
  c,dbc=csql()
  if userid=='': 
      userid=getnewlogin() # assigns a new userid string
  c.execute("select * from userdata where userid=%s",(userid))
  userdata=c.fetchone()
  dbc.close()
  if userdata.has_key('userfirstname'):
      return "Hello, %s"%userdata['userfirstname']
  else:
      return ("Unrecognized user id")
=====================
It all seems pretty easy once I figured out how to do it, but I have always felt that SQL is a sad abomination, designed by IBM to create legions of database administrators. I wish there was a solid multiuser-safe object-oriented database or even a good procedural language relational DB like dBASE use to be.
-Dave
  ----- Original Message ----- 
  From: marinus van aswegen 
  To: mod_python@modpython.org 
  Sent: Friday, March 17, 2006 4:00 AM
  Subject: [mod_python] Which Database?


  Hi All

  Having sorted out mod_python code I new move on to the database :) I've been playing with mysql via _mysql. Before I get into using this module I thought I'd ask the obvious question "what database do you like to use and what module to you use to interface?" 
  I know this is a bit open ended, but I thought let me gauge what ppl like to use.

  Regs

  Marinus



------------------------------------------------------------------------------


  _______________________________________________
  Mod_python mailing list
  Mod_python@modpython.org
  http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060317/76b6ae4d/attachment-0001.html
From deron.meranda at gmail.com  Fri Mar 17 11:47:28 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar 17 11:50:21 2006
Subject: [mod_python] Reg IronPython
In-Reply-To: <20060317091445.32081.qmail@web31313.mail.mud.yahoo.com>
References: <20060317091445.32081.qmail@web31313.mail.mud.yahoo.com>
Message-ID: <5c06fa770603170847m277d999fjc62590d892f0b96a@mail.gmail.com>

On 3/17/06, python eager <python_eager@yahoo.com> wrote:
>   i want more details about IronPython.

This list is for mod_python only!  No help available here.  In the future go to

 * http://www.python.org/community/
 * http://www.google.com/

Deron Meranda

From list at joreybump.com  Fri Mar 17 12:01:56 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Mar 17 12:03:17 2006
Subject: [mod_python] Which Database?
In-Reply-To: <441AC662.7000100@q-voz.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>	<441AA223.3030107@natlab.research.philips.com>
	<441AC662.7000100@q-voz.com>
Message-ID: <441AEB84.9040803@joreybump.com>

Gustavo C?rdova Avila wrote:

> Well, it could be, "but".  MySQL differs from the SQL standard in 
> certain small but important ways (please google for more info, let's not 
> turn this into a PostgreSQL vs. MySQL flamefest), but the thing is that, 
> if you tie down your project with MySQL, you're going to have to work on 
> it quite a bit to get it *off* MySQL.

Perhaps, but since MySQLdb uses the Python Database API, the situation 
is markedly improved compared to migrating from PHP's internal mysql 
commands (and even PHP now has PEAR:DB to use instead).

Database independence is still somewhat of a holy grail, but a 
well-designed modular approach and the use of a database abstraction 
layer can go a long way in any language.



From scott_list at mischko.com  Fri Mar 17 12:06:52 2006
From: scott_list at mischko.com (Scott Chapman)
Date: Fri Mar 17 12:07:00 2006
Subject: [mod_python] Which Database?
In-Reply-To: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
Message-ID: <441AECAC.1020006@mischko.com>

marinus van aswegen wrote:
> Hi All
> 
> Having sorted out mod_python code I new move on to the database :) I've 
> been playing with mysql via _mysql. Before I get into using this module 
> I thought I'd ask the obvious question "what database do you like to use 
> and what module to you use to interface?"
> I know this is a bit open ended, but I thought let me gauge what ppl 
> like to use.

My signature line says it all.

Seriously, MySQL is just coming into functionality that PostgreSQL has had for a 
very long time.  Maturity is worth something.  It also has tons of functionality 
that MySQL still does not have.  Someone else already mentioned the MySQL SQL 
implementation issues.

I talked with the maker of the GIS extension to MySQL and found that he had to 
modify code in MySQL's string handling sections to implement the GIS module. 
What does that tell you about MySQL's design?  It looks rather monolithic and 
poorly designed to me from here.  I asked him what he knew of PG's 
implementation of their GIS addon and he said it was a very nice bolt-on module 
which has proven very solid, reflecting PG's much better design.

In summary, PG is mature and will allow you all the room you need to grow. MySQL 
(like PHP) is a "well established HACK".  I use SQLLite for all my light lifting 
and PG for everything else.  Just because something is popular does not mean it 
should be used.

Use Psycopg2 to interface to PG.  Don't worry about the "beta" status. It's very 
stable and will go production soon.  I've been using it in production with no 
problems for quite a few beta versions.

Compare http://sql-info.de/mysql/gotchas.html
with http://sql-info.de/postgresql/postgres-gotchas.html
and search google for:
mysql gotcha
and for
postgres gotcha

Cordially,
Scott
-- 
q: Why do so many people take an instant dislike to MySQL and PHP?
a: It saves time.
ps: Use PostgreSQL and Python instead.
From stalker at telecom.ozersk.ru  Fri Mar 17 14:54:58 2006
From: stalker at telecom.ozersk.ru (stalker)
Date: Fri Mar 17 14:57:05 2006
Subject: [mod_python] session
Message-ID: <441B1412.20004@telecom.ozersk.ru>

Hi, all!
Is it possible to disable cookies generation by session?
From jcea at argo.es  Fri Mar 17 15:21:47 2006
From: jcea at argo.es (Jesus Cea)
Date: Fri Mar 17 15:21:53 2006
Subject: [mod_python] Which Database?
In-Reply-To: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>
Message-ID: <441B1A5B.9030201@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

marinus van aswegen wrote:
> Hi All
> 
> Having sorted out mod_python code I new move on to the database :) I've
> been playing with mysql via _mysql. Before I get into using this module
> I thought I'd ask the obvious question "what database do you like to use
> and what module to you use to interface?"
> I know this is a bit open ended, but I thought let me gauge what ppl
> like to use.

You can try a persistence system like DURUS. I've just finished a
BerkeleyDB backend for it, still no publically released, but next week :).

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
                                      _/_/    _/_/          _/_/_/_/_/
PGP Key Available at KeyServ   _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRBsaW5lgi5GaxT1NAQJDWgP/QUBdriTWC7nZ+yIPxvYaM3fcqCLvTUTX
sFpXp8GlwOc8zfDkpu87uBCILCoUdKYuB2VxVNu5HPQIoIDoccOX3hEp9YlUHB31
QqG2LN9Vs5HMKrhAFo0aZwFvppY0NSSmaI5IjcnR8s7TIgqSWISH0qAotkifJWf3
uCl1biiXboY=
=+eGO
-----END PGP SIGNATURE-----
From jpg at jgassociates.ca  Fri Mar 17 15:47:33 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 17 15:45:32 2006
Subject: [mod_python] session
In-Reply-To: <441B1412.20004@telecom.ozersk.ru>
References: <441B1412.20004@telecom.ozersk.ru>
Message-ID: <441B2065.90508@jgassociates.ca>

stalker wrote:
> Hi, all!
> Is it possible to disable cookies generation by session?

I assume you are manually providing the session id by some other means, 
otherwise session will be non-functional.

You can't disable cookies with any of the current session classes. You 
could create a new subclass, and override the make_cookie method.

Alternatively you could try resetting the output headers after you 
create the session instance, but before writing any content. The 
following is not pretty but it should work.


def handler(req):
     req.content_type = 'text/plain'
     sess = Session.Session(req, sid=whatever)

     del req.headers_out['Set-Cookie']
     del req.headers_out['Cache-Control']
     sess.save()
     req.write('all done')
     return apache.OK

Note that as of mod_python 3.2.8, the sid may only contain the 
characters 0-9 and a-f, and len(sid) must equal 32.

Jim
From nlv11281 at natlab.research.philips.com  Mon Mar 20 01:33:53 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Mar 20 01:34:02 2006
Subject: [mod_python] Which Database?
In-Reply-To: <441AEB84.9040803@joreybump.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>	<441AA223.3030107@natlab.research.philips.com>	<441AC662.7000100@q-voz.com>
	<441AEB84.9040803@joreybump.com>
Message-ID: <441E4CD1.4030706@natlab.research.philips.com>

A decision for a DBMS should not be based on little syntactic 
differences. In the end, no DB is compatible with any other, and the 
overvalued holy grail of database engine independence is never found. 
And though I've seen many projects with that grail high in their 
requirements and design, I have never ever seen one actually switch DBMS 
- projects tend to stick to the choice. In the end, technical 
differences aren't that big.

A decision for a DBMS should be based on specific features, tools and 
support. I have used many DBMS systems, including Informix, Oracle, 
SQLServer, MySQL, PostgreSQL, and more. They all have their strengths 
and weaknesses.

The reason I mention MySQL is not that it's my personal favorite, but 
because it is a mature engine, cheap, well supported, and will give 
little problems during startup. It is also very transparent, which is a 
big plus for starting with "home" development.

In the end, it really won't make a big difference which one you choose. 
Pick the one that seems readily available. If you're inexperienced with 
managing a database, pick the one your neighbour is using so that he may 
help you in getting things running easily.

Any "Which DB" post in any newsgroup tends to result in long lasting 
discussions, which is indication enough that all the products are at 
comparable levels.

--
Mike Looijmans
Philips Natlab / Topic Automation

From python_eager at yahoo.com  Mon Mar 20 04:34:26 2006
From: python_eager at yahoo.com (python eager)
Date: Mon Mar 20 04:35:03 2006
Subject: [mod_python] Reg FTP
Message-ID: <20060320093426.90759.qmail@web31313.mail.mud.yahoo.com>

hi
    how to copy files through ftp. Can u give any idea regarding this.
  please help me
   
  reg
  Python Eager

		
---------------------------------
Yahoo! Travel
 Find  great deals to the top 10 hottest destinations!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060320/8ea94a62/attachment.html
From crosseyedpenguin at cox.net  Mon Mar 20 10:21:13 2006
From: crosseyedpenguin at cox.net (Roger)
Date: Mon Mar 20 10:21:22 2006
Subject: [mod_python] Which Database?
In-Reply-To: <441E4CD1.4030706@natlab.research.philips.com>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>	<441AA223.3030107@natlab.research.philips.com>	<441AC662.7000100@q-voz.com>	<441AEB84.9040803@joreybump.com>
	<441E4CD1.4030706@natlab.research.philips.com>
Message-ID: <441EC869.10704@cox.net>

Rather than looking for a database alone, you may want to check out a wrapper for a database.  Many of these support more than one database so (in theory) you would be able to switch the underlying database engine without too much work.  

  Sqlobject
  PyDO
  SQLAlchemy
  dejavu
  axiom
  dejavu

Roger






From gustavo.cordova at q-voz.com  Mon Mar 20 11:08:31 2006
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Mon Mar 20 10:57:56 2006
Subject: [mod_python] Which Database?
In-Reply-To: <441EC869.10704@cox.net>
References: <ffa39deb0603170100y26d49b27y85811f68d423b7bf@mail.gmail.com>	<441AA223.3030107@natlab.research.philips.com>	<441AC662.7000100@q-voz.com>	<441AEB84.9040803@joreybump.com>	<441E4CD1.4030706@natlab.research.philips.com>
	<441EC869.10704@cox.net>
Message-ID: <441ED37F.9080804@q-voz.com>

Roger wrote:
> Rather than looking for a database alone, you may want to check out a 
> wrapper for a database.  Many of these support more than one database 
> so (in theory) you would be able to switch the underlying database 
> engine without too much work. 
>  Sqlobject
>  PyDO
>  SQLAlchemy
>  dejavu
>  axiom
>  dejavu
>
> Roger
You forgot:
  dejavu

I don't fully grok them yet, though; I'm kinda old-fashioned.

-gus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060320/7cda151d/attachment.html
From kwang at activegrid.com  Mon Mar 20 16:15:17 2006
From: kwang at activegrid.com (Kevin Wang)
Date: Mon Mar 20 16:10:45 2006
Subject: [mod_python] the domain name in mod_python's session/cookie
	management
Message-ID: <441F1B65.1030808@activegrid.com>

Hi All,

When a new session/cookie is created on mod_python side, from the source 
code (mod_python/Session.py, mod_python/Cookie.py), I don't see how 
mod_python sets the domain name for the Set-Cookie http header.

Without the domain name, the cookie set in the browser is useless (at least 
in IE).  How does it work?  Am I missed anything?

Any help or input is appreciated.

Thanks.

-- Kevin
From grahamd at dscpl.com.au  Mon Mar 20 17:37:37 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 20 17:37:52 2006
Subject: [mod_python] the domain name in mod_python's
	session/cookiemanagement
Message-ID: <1142894257.9091@dscpl.user.openhosting.com>

Kevin Wang wrote ..
> Hi All,
> 
> When a new session/cookie is created on mod_python side, from the source
> code (mod_python/Session.py, mod_python/Cookie.py), I don't see how 
> mod_python sets the domain name for the Set-Cookie http header.
> 
> Without the domain name, the cookie set in the browser is useless (at least
> in IE). 

In what way is it useless? The session code has been the way it has for
quite a while and no one has complained previously.

> How does it work?  Am I missed anything?
> 
> Any help or input is appreciated.

I am not a cookie expert, but reading the cookie FAQ, it says:

  If Domain is not set explicitly, then it defaults to the full domain of the
  document creating the cookie.

I take this to mean though that if a domain isn't set it would be up to the
browser to ensure that it only uses the cookie against the original site
that issued it. Thus, that mod_python doesn't set it should not be an
issue.

It could be said though that the current session implementation is a
bit limiting though in that it precludes cross site session cookies within
an enclosing domain. The code could perhaps be enhanced to allow an
option to be set to force the inclusion of a "domain" attribute in the
cookie for the session much like it currently allows with the "path"
attribute. The option for the latter is "ApplicationPath". As noted in:

  https://issues.apache.org/jira/browse/MODPYTHON-127

there is an intent to properly namespace these mod_python options
so maybe there should be an option:

  mod_python.Session.application_domain

with Session code implementin:

        if config.has_key("mod_python.Session.application_domain"):
            c.domain = config["mod_python.Session.application_domain"]

Setting the domain though would only be required if you want cross
site session cookies within an enclosing domain, it would not be required
for a single site.

If you are having some problem with even a single site, maybe it is
that the site issues too many cookies and the browser is throwing away
the least used ones:

  Both Internet Explorer and Netscape conform to the RFC 2109 limitations
  on your total cookie count to 300 (this includes a limit of 20 cookies per
  individual domain). If you exceed this, the browser will discard your
  least-used cookies to make room for the new ones.

In other words, maybe the site code is broken in some way and
generating spurious cookies on every request.

FYI, the cookie FAQ can be found at:

  http://www.cookiecentral.com/faq/

Graham


From kwang at activegrid.com  Mon Mar 20 17:44:44 2006
From: kwang at activegrid.com (Kevin Wang)
Date: Mon Mar 20 17:40:13 2006
Subject: [mod_python] the domain name in mod_python's session/cookie
	management
In-Reply-To: <441F0BA5.30407@activegrid.com>
References: <441F0BA5.30407@activegrid.com>
Message-ID: <441F305C.4050205@activegrid.com>

Hi All,

The reason I am asking this is because I found a problem with mod_python's 
Set-Cookie response.  I am assuming that the standard way for setting a 
cookie in a response is that both the application path and domain name are 
supplied so that the next time, the browser will decide if to use this 
cookie for a certain domain and application path.

Looks like mod_python never sets the domain name in "Set-Cookie" header, but 
both firefox and IE browsers are smart enough to assume that the cookie 
belongs to the host requested.  So it works for both firefox and IE. 
However, in the case of request coming from an IE frame, it no longer works! 
  I have no idea why it doesn't work in an IE frame.

To me, the right solution should be that mod_python always sets the domain 
name if one is passed in.

Please let me know if I have missed something or made some obvious mistake.

Thanks.

-- Kevin

==============================================================================
Hi All,

When a new session/cookie is created on mod_python side, from the source
code (mod_python/Session.py, mod_python/Cookie.py), I don't see how
mod_python sets the domain name for the Set-Cookie http header.

Without the domain name, the cookie set in the browser is useless (at least
in IE).  How does it work?  Am I missed anything?

Any help or input is appreciated.

Thanks.

-- Kevin
==============================================================================
From grahamd at dscpl.com.au  Mon Mar 20 17:49:41 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Mar 20 17:49:48 2006
Subject: [mod_python] the domain name in mod_python's
	session/cookiemanagement
Message-ID: <1142894981.17198@dscpl.user.openhosting.com>

Kevin Wang wrote ..
> Hi All,
> 
> The reason I am asking this is because I found a problem with mod_python's
> Set-Cookie response.  I am assuming that the standard way for setting a
> cookie in a response is that both the application path and domain name
> are 
> supplied so that the next time, the browser will decide if to use this
> cookie for a certain domain and application path.
> 
> Looks like mod_python never sets the domain name in "Set-Cookie" header,
> but 
> both firefox and IE browsers are smart enough to assume that the cookie
> belongs to the host requested.  So it works for both firefox and IE. 
> However, in the case of request coming from an IE frame, it no longer works!
>   I have no idea why it doesn't work in an IE frame.

Ensure that the frame uses the exact same hostname to request the
resource from the server as the URL which originally issued the cookie.
If for example the cookie was issued by URL mentioning "www.site.com",
but the frame was accessing "site.com", I don't imagine it would work.

> To me, the right solution should be that mod_python always sets the domain
> name if one is passed in.

I don't believe it should be necessary. Should only be required where
you want cross site session cookie within same enclosing domain.
Although as I mentioned, support for this is possibly missing in the
session implementation.

Graham
From deron.meranda at gmail.com  Mon Mar 20 17:57:34 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Mar 20 17:57:38 2006
Subject: [mod_python] the domain name in mod_python's session/cookie
	management
In-Reply-To: <441F305C.4050205@activegrid.com>
References: <441F0BA5.30407@activegrid.com> <441F305C.4050205@activegrid.com>
Message-ID: <5c06fa770603201457r5a3a05c8re0b098174cd2d5b2@mail.gmail.com>

On 3/20/06, Kevin Wang <kwang@activegrid.com> wrote:
> Looks like mod_python never sets the domain name in "Set-Cookie" header, but
> both firefox and IE browsers are smart enough to assume that the cookie
> belongs to the host requested.

Actually that's what the standards demand that the browsers do, it's
not just a coincidence.

Set-Cookie is actually somewhat dated and is documented in
RFC 2109 - http://www.ietf.org/rfc/rfc2109.txt
Set-Cookie2 is the current standard as documented in
RFC 2965 - http://www.ietf.org/rfc/rfc2965.txt

However Set-Cookie2, while techinically superior, is not as widely
understood by browsers.  So mod_python sticks with Set-Cookie.

> However, in the case of request coming from an IE frame, it no longer works!
>   I have no idea why it doesn't work in an IE frame.

Hmm. Are you using cross-domain frames or anything complicated?

> To me, the right solution should be that mod_python always sets the domain
> name if one is passed in.

You of course can always dive into lower-level code.  For instance
mod_python's Cookie module does let you get at the domain
attribute, which you can set however you like.  (Not to mention
Python's own Cookie/Morsel classes)
--
Deron Meranda

From kwang at activegrid.com  Mon Mar 20 19:17:59 2006
From: kwang at activegrid.com (Kevin Wang)
Date: Mon Mar 20 19:13:31 2006
Subject: [mod_python] the domain name in mod_python's session/cookie
	management
In-Reply-To: <5c06fa770603201457r5a3a05c8re0b098174cd2d5b2@mail.gmail.com>
References: <441F0BA5.30407@activegrid.com> <441F305C.4050205@activegrid.com>
	<5c06fa770603201457r5a3a05c8re0b098174cd2d5b2@mail.gmail.com>
Message-ID: <441F4637.9070704@activegrid.com>


Deron Meranda wrote:
> On 3/20/06, Kevin Wang <kwang@activegrid.com> wrote:
> 
>>Looks like mod_python never sets the domain name in "Set-Cookie" header, but
>>both firefox and IE browsers are smart enough to assume that the cookie
>>belongs to the host requested.
> 
> 
> Actually that's what the standards demand that the browsers do, it's
> not just a coincidence.
> 
> Set-Cookie is actually somewhat dated and is documented in
> RFC 2109 - http://www.ietf.org/rfc/rfc2109.txt
> Set-Cookie2 is the current standard as documented in
> RFC 2965 - http://www.ietf.org/rfc/rfc2965.txt

thanks for pointing this out; it makes sense.

> 
> However Set-Cookie2, while techinically superior, is not as widely
> understood by browsers.  So mod_python sticks with Set-Cookie.
> 
> 
>>However, in the case of request coming from an IE frame, it no longer works!
>>  I have no idea why it doesn't work in an IE frame.
> 
> 
> Hmm. Are you using cross-domain frames or anything complicated?

yes, i do use cross domain frames.  even after i manually add the cookie 
domain option in Session.py, it still doesn't work out.  eventually i found 
this article which talks about ie's lovely P3P restriction:

http://support.microsoft.com/default.aspx?scid=kb;en-us;323752

by either setting ie's security/p3p to be low, or by manually sending a 
specific response header: P3P: CP="CAO PSA OUR", it works!

> 
> 
>>To me, the right solution should be that mod_python always sets the domain
>>name if one is passed in.
> 
> 
> You of course can always dive into lower-level code.  For instance
> mod_python's Cookie module does let you get at the domain
> attribute, which you can set however you like.  (Not to mention
> Python's own Cookie/Morsel classes)
> --
> Deron Meranda
> 
> 
From nogradi at gmail.com  Mon Mar 20 20:39:53 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Mon Mar 20 20:39:57 2006
Subject: [mod_python] bbs written in python?
Message-ID: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>

Can this be possible that there is virtually no bulletin board / forum
software written in python other than the monsterous zope/plone/etc?
I've been searching for quite a while and only found requests,
questions and such on comp.lang.python but no definitive tip as to
what would be a 'standard', good, simple, flexible but scalable bbs
solution.

What I would like to have is a minimalistic version (like
www.minibb.net in PHP) with nothing more then the ability to have
several forums and threads inside the forums. No emoticons, instant
messaging, file upload, email, etc, etc, only posts. And the threads
can flow in a simple linear way. Authentication is irrelevant as I
would have to write that myself anyway. What is important though is
that it should be scalable and should not hang from around a hundred
hits per second.

And if it works with apache + mod_python, well, that would be the absolute best!

An illustration of what I have in mind is the forum on
forum.lighttpd.net but that is unfortunately written in Ruby.

Any ideas?

From dave at davebritton.com  Mon Mar 20 21:52:34 2006
From: dave at davebritton.com (Dave Britton)
Date: Mon Mar 20 21:52:54 2006
Subject: [mod_python] bbs written in python?
References: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>
Message-ID: <00cc01c64c92$81d1e2f0$0500a8c0@brittonfamily.org>

yeah, I need one too.

----- Original Message ----- 
From: "Daniel Nogradi" <nogradi@gmail.com>
To: <mod_python@modpython.org>
Sent: Monday, March 20, 2006 8:39 PM
Subject: [mod_python] bbs written in python?


> Can this be possible that there is virtually no bulletin board / forum
> software written in python other than the monsterous zope/plone/etc?
> I've been searching for quite a while and only found requests,
> questions and such on comp.lang.python but no definitive tip as to
> what would be a 'standard', good, simple, flexible but scalable bbs
> solution.
>
> What I would like to have is a minimalistic version (like
> www.minibb.net in PHP) with nothing more then the ability to have
> several forums and threads inside the forums. No emoticons, instant
> messaging, file upload, email, etc, etc, only posts. And the threads
> can flow in a simple linear way. Authentication is irrelevant as I
> would have to write that myself anyway. What is important though is
> that it should be scalable and should not hang from around a hundred
> hits per second.
>
> And if it works with apache + mod_python, well, that would be the absolute
best!
>
> An illustration of what I have in mind is the forum on
> forum.lighttpd.net but that is unfortunately written in Ruby.
>
> Any ideas?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From deron.meranda at gmail.com  Mon Mar 20 23:46:07 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Mar 20 23:46:12 2006
Subject: [mod_python] bbs written in python?
In-Reply-To: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>
References: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>
Message-ID: <5c06fa770603202046l47684593pfafd9cca21cdb846@mail.gmail.com>

On 3/20/06, Daniel Nogradi <nogradi@gmail.com> wrote:
> Can this be possible that there is virtually no bulletin board / forum
> software written in python other than the monsterous zope/plone/etc?

I don't know specifically what you're after, but have you
looked around at the python wiki:

http://wiki.python.org/moin/PythonBlogSoftware

Also it's not a blog engine per se, but you also have the MoinMoin
wiki engine, which may overlap in some of the functionality
you're looking for (and works with mod_python quite well).
http://moinmoin.wikiwikiweb.de/
--
Deron Meranda

From nogradi at gmail.com  Tue Mar 21 04:17:01 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Tue Mar 21 04:17:35 2006
Subject: [mod_python] Re: bbs written in python?
In-Reply-To: <5c06fa770603202046l47684593pfafd9cca21cdb846@mail.gmail.com>
References: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>
	<5c06fa770603202046l47684593pfafd9cca21cdb846@mail.gmail.com>
Message-ID: <5f56302b0603210117l36d3322bh1eefad401ede8628@mail.gmail.com>

> > Can this be possible that there is virtually no bulletin board / forum
> > software written in python other than the monsterous zope/plone/etc?
>
> I don't know specifically what you're after, but have you
> looked around at the python wiki:
>
> http://wiki.python.org/moin/PythonBlogSoftware
>
> Also it's not a blog engine per se, but you also have the MoinMoin
> wiki engine, which may overlap in some of the functionality
> you're looking for (and works with mod_python quite well).
> http://moinmoin.wikiwikiweb.de/

I looked around there already but they are all - as the name suggests
- blog software as opposed to bullletin boards or forum software. And
yes, there are a number of wikis written in Python, but it seems that
specifically bulletin boards and/or forums are not written yet. There
are many in PHP and a couple in Ruby I wonder why there is
(practically) none for Python.

From python_eager at yahoo.com  Tue Mar 21 04:26:53 2006
From: python_eager at yahoo.com (python eager)
Date: Tue Mar 21 04:26:59 2006
Subject: [mod_python] Reg SubDirectory
Message-ID: <20060321092653.44053.qmail@web31301.mail.mud.yahoo.com>

Hi
   This code snippet working fine. But if change the os.listdir(\\Demo\\data") instead of os.listdir("\\Demo"): it gives error while printing the files . Please let me know what is the error.
   
  import shutil
        import os
        i=0
        for file in os.listdir("\\Demo"):
             
           if os.path.splitext(file)[1] == ".py":
                self.writeln(file)
                self.writeln('<br>')
                i=i+1
                shutil.copy(file, os.path.join('\\backup', file))
        self.writeln(i,'  file(s) copied') 
   
  Please help
   
  regards
  Python Eager

		
---------------------------------
 Yahoo! Mail
 Use Photomail to share photos without annoying attachments.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060321/4257e31c/attachment.html
From nlv11281 at natlab.research.philips.com  Tue Mar 21 04:47:18 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Mar 21 04:47:23 2006
Subject: [mod_python] Re: bbs written in python?
In-Reply-To: <5f56302b0603210117l36d3322bh1eefad401ede8628@mail.gmail.com>
References: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>	<5c06fa770603202046l47684593pfafd9cca21cdb846@mail.gmail.com>
	<5f56302b0603210117l36d3322bh1eefad401ede8628@mail.gmail.com>
Message-ID: <441FCBA6.3070905@natlab.research.philips.com>

> I looked around there already but they are all - as the name suggests
> - blog software as opposed to bullletin boards or forum software. And
> yes, there are a number of wikis written in Python, but it seems that
> specifically bulletin boards and/or forums are not written yet. There
> are many in PHP and a couple in Ruby I wonder why there is
> (practically) none for Python.

My guess: Because there are only few web hosting providers offering 
Python as a server-side scripting option. Most will offer PHP, so that's 
the largest audience.

Mike.

From nogradi at gmail.com  Tue Mar 21 06:42:07 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Tue Mar 21 06:42:12 2006
Subject: [mod_python] Re: bbs written in python?
In-Reply-To: <441FCBA6.3070905@natlab.research.philips.com>
References: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>
	<5c06fa770603202046l47684593pfafd9cca21cdb846@mail.gmail.com>
	<5f56302b0603210117l36d3322bh1eefad401ede8628@mail.gmail.com>
	<441FCBA6.3070905@natlab.research.philips.com>
Message-ID: <5f56302b0603210342j5b2bd31bm53e7ca40b96e7960@mail.gmail.com>

> > I looked around there already but they are all - as the name suggests
> > - blog software as opposed to bullletin boards or forum software. And
> > yes, there are a number of wikis written in Python, but it seems that
> > specifically bulletin boards and/or forums are not written yet. There
> > are many in PHP and a couple in Ruby I wonder why there is
> > (practically) none for Python.
>
> My guess: Because there are only few web hosting providers offering
> Python as a server-side scripting option. Most will offer PHP, so that's
> the largest audience.

This looks to me like a chicken-or-egg problem. For providers to offer
Python there should exist good software, in order to have good
software providers should offer Python :)

From grahamd at dscpl.com.au  Tue Mar 21 06:53:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 21 06:53:48 2006
Subject: [mod_python] Re: bbs written in python?
In-Reply-To: <5f56302b0603210342j5b2bd31bm53e7ca40b96e7960@mail.gmail.com>
References: <5f56302b0603201739l3d10290fofa56430f8cf19446@mail.gmail.com>
	<5c06fa770603202046l47684593pfafd9cca21cdb846@mail.gmail.com>
	<5f56302b0603210117l36d3322bh1eefad401ede8628@mail.gmail.com>
	<441FCBA6.3070905@natlab.research.philips.com>
	<5f56302b0603210342j5b2bd31bm53e7ca40b96e7960@mail.gmail.com>
Message-ID: <941963F3-C036-48D7-98A8-906D06A0DE02@dscpl.com.au>


On 21/03/2006, at 10:42 PM, Daniel Nogradi wrote:

>>> I looked around there already but they are all - as the name  
>>> suggests
>>> - blog software as opposed to bullletin boards or forum software.  
>>> And
>>> yes, there are a number of wikis written in Python, but it seems  
>>> that
>>> specifically bulletin boards and/or forums are not written yet.  
>>> There
>>> are many in PHP and a couple in Ruby I wonder why there is
>>> (practically) none for Python.
>>
>> My guess: Because there are only few web hosting providers offering
>> Python as a server-side scripting option. Most will offer PHP, so  
>> that's
>> the largest audience.
>
> This looks to me like a chicken-or-egg problem. For providers to offer
> Python there should exist good software, in order to have good
> software providers should offer Python :)

Bigger problem is that a lot of providers still use Apache 1.3, thus  
an old
version of mod_python which has lots of problems and issues. If they use
that version as a guide to stability of mod_python, it is no wander they
don't want to support it.

Graham
From lazo_podra at hotmail.com  Thu Mar 23 02:41:31 2006
From: lazo_podra at hotmail.com (LAZO PODRASCANIN)
Date: Thu Mar 23 02:41:43 2006
Subject: [mod_python] Need assistace in configuring the python to work
	inside the Apache Web Server
Message-ID: <BAY105-F328C115F88CFD42CBFD656E0DE0@phx.gbl>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060323/78afb8e0/attachment.html
From jpg at jgassociates.ca  Thu Mar 23 07:55:47 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Mar 23 07:55:47 2006
Subject: [mod_python] Need assistace in configuring the python to work
	inside the Apache Web Server
In-Reply-To: <BAY105-F328C115F88CFD42CBFD656E0DE0@phx.gbl>
References: <BAY105-F328C115F88CFD42CBFD656E0DE0@phx.gbl>
Message-ID: <44229AD3.8010702@jgassociates.ca>

LAZO PODRASCANIN wrote:
> I've installed python-2.4.2 on an Windows xp machine and have Apache HTTP 2.0.55 
> as the web server. The installation of Python is located at c:\Python24 and the 
> Apache server path is c:\program files\Apache Group\Apache2
> 
> I'm new to this. What I need is how to configure the python to work with the 
> Apache server

Quick answer.

Download and install the latest mod_python windows binary 
(mod_python-3.2.8.win32-py2.4.exe) from
http://www.apache.org/dist/httpd/modpython/win or one of the apache mirrors.

To get started take a look at:
http://www.modpython.org/live/current/doc-html/tutorial.html

If you have more specific problems feel free to ask.

Jim

From vsi at ebi.ac.uk  Fri Mar 24 07:29:26 2006
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Fri Mar 24 07:29:46 2006
Subject: [mod_python] Request sendfile question
Message-ID: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>

Hi,

is there a way to send a file using a file handle?

I've got a file archive, which stores files in gzip format. When a client 
downloads the file, I'd like to send the file uncompressed, without 
creating a temporary file.

I'm sending the file like this (bit simplified):

     req.filename = fname
     req.content_type = ctype
     req.set_content_length = flen

     fh = gzip.GzipFile(fpath, 'rb', 9)
     block_size = 1024
     while 1:
         data = fh.read(block_size)
         if not data:
             break
         req.write(data)
     fh.close()

     return apache.OK

I've tested this with different files, it seems to work ok. I was looking 
at the requestobject.c. Would it be easy to implement something like 
req_sendfh in addition to req_sendfile?

Thanks,
Ville

From jpg at jgassociates.ca  Fri Mar 24 08:34:23 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 24 08:34:13 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>
Message-ID: <4423F55F.8020208@jgassociates.ca>

Ville Silventoinen wrote:
> Hi,
> 
> is there a way to send a file using a file handle?
> 
> I've got a file archive, which stores files in gzip format. When a 
> client downloads the file, I'd like to send the file uncompressed, 
> without creating a temporary file.
> 
> I'm sending the file like this (bit simplified):
> 
>     req.filename = fname
>     req.content_type = ctype
>     req.set_content_length = flen
                             ^^^^^^^^

I assume this is a typo but just in case it's not, 
req.set_content_length is a method, not an attribute.


>     fh = gzip.GzipFile(fpath, 'rb', 9)
>     block_size = 1024
>     while 1:
>         data = fh.read(block_size)
>         if not data:
>             break
>         req.write(data)
>     fh.close()
> 
>     return apache.OK
> 
> I've tested this with different files, it seems to work ok. I was 
> looking at the requestobject.c. Would it be easy to implement something 
> like req_sendfh in addition to req_sendfile?

It is probably possible to implement such a thing, but it wouldn't work 
for your use case.

In your example you have a GzipFile instance, which is a *file-like* 
object. This object wraps the real file object and provides the "zippy" 
behaviour. The real file handle is not exposed, and would be useless 
even if it was available since reading from it would just give you the 
compressed stream. (Correctly speaking you could use 
fh.fileobj.fileno(), but it really is not meant to be used directly). If 
you take look at gzip.py in the python lib I think you'll see what I mean.

So in short, your current solution is the correct one.


Jim
From vsi at ebi.ac.uk  Fri Mar 24 09:31:40 2006
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Fri Mar 24 09:31:45 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <4423F55F.8020208@jgassociates.ca>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>
	<4423F55F.8020208@jgassociates.ca>
Message-ID: <Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>

On Fri, 24 Mar 2006, Jim Gallacher wrote:

> Ville Silventoinen wrote:
>>
>>     req.filename = fname
>>     req.content_type = ctype
>>     req.set_content_length = flen
>                            ^^^^^^^^
>
> I assume this is a typo but just in case it's not, req.set_content_length is 
> a method, not an attribute.

Yes, that was a typo, sorry.

Thanks for your comments.

One colleague suggested using a named pipe. The mod_python process would 
fork a child process, which would set up the named pipe for the 
decompressed stream. The parent would wait until this is done and then use 
the named pipe filename with req.sendfile. Any idea if something like that 
would work?


Ville
From deron.meranda at gmail.com  Fri Mar 24 10:29:40 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar 24 10:29:45 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>
	<4423F55F.8020208@jgassociates.ca>
	<Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>
Message-ID: <5c06fa770603240729j3e0e5205t60b150628ec7233f@mail.gmail.com>

On 3/24/06, Ville Silventoinen <vsi@ebi.ac.uk> wrote:
> One colleague suggested using a named pipe. The mod_python process would
> fork a child process, which would set up the named pipe for the
> decompressed stream. The parent would wait until this is done and then use
> the named pipe filename with req.sendfile. Any idea if something like that
> would work?

I believe the file descriptor has to be a real file, meaning
it is seekable, as well as mmap-able (if MMAP is enabled in
your apache).  This is part of the APR bucket brigade stuff
deep inside Apache.

It's still best I think to do it with a loop like you first showed.
--
Deron Meranda

From deron.meranda at gmail.com  Fri Mar 24 10:37:35 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Mar 24 10:37:39 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>
	<4423F55F.8020208@jgassociates.ca>
	<Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>
Message-ID: <5c06fa770603240737wf657cc1k23dba17b064aadf6@mail.gmail.com>

Also, have you looked at the mod_deflate Apache module.
It can decompress (inflate) gzipped content as an output
filter.  Then your python handler can just call sendfile and
not worry about it.

http://httpd.apache.org/docs/2.2/mod/mod_deflate.html

And if you stick with doing it in python, this type of thing is
also perhaps better done with an output filter handler
than directly in your content handler.  Just a thought.
--
Deron Meranda

From jpg at jgassociates.ca  Fri Mar 24 11:07:07 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 24 11:06:28 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>	<4423F55F.8020208@jgassociates.ca>
	<Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>
Message-ID: <4424192B.3060307@jgassociates.ca>

Ville Silventoinen wrote:
> On Fri, 24 Mar 2006, Jim Gallacher wrote:
> 
>> Ville Silventoinen wrote:
>>
>>>
>>>     req.filename = fname
>>>     req.content_type = ctype
>>>     req.set_content_length = flen
>>
>>                            ^^^^^^^^
>>
>> I assume this is a typo but just in case it's not, 
>> req.set_content_length is a method, not an attribute.
> 
> 
> Yes, that was a typo, sorry.
> 
> Thanks for your comments.
> 
> One colleague suggested using a named pipe. The mod_python process would 
> fork a child process, which would set up the named pipe for the 
> decompressed stream. The parent would wait until this is done and then 
> use the named pipe filename with req.sendfile. Any idea if something 
> like that would work?

I have not idea but it seems rather complicated and would still require 
modifying requestobject.c to expose the apache ap_send_fd call. I'm not 
convinced it would be worth the effort. What are you trying to achieve 
exactly that makes your orginal solution unacceptable?

Jim
From vsi at ebi.ac.uk  Fri Mar 24 11:57:38 2006
From: vsi at ebi.ac.uk (Ville Silventoinen)
Date: Fri Mar 24 11:57:49 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <4424192B.3060307@jgassociates.ca>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>
	<4423F55F.8020208@jgassociates.ca>
	<Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>
	<4424192B.3060307@jgassociates.ca>
Message-ID: <Pine.LNX.4.64.0603241649230.11098@wolf.ebi.ac.uk>

On Fri, 24 Mar 2006, Jim Gallacher wrote:

> Ville Silventoinen wrote:
>> 
>> One colleague suggested using a named pipe. The mod_python process would 
>> fork a child process, which would set up the named pipe for the 
>> decompressed stream. The parent would wait until this is done and then use 
>> the named pipe filename with req.sendfile. Any idea if something like that 
>> would work?
>
> I have not idea but it seems rather complicated and would still require 
> modifying requestobject.c to expose the apache ap_send_fd call. I'm not 
> convinced it would be worth the effort. What are you trying to achieve 
> exactly that makes your orginal solution unacceptable?
>
I was just curious if anyone has tried something like that or if my 
solution is somehow faulty or slow compared to the sendfile. Sorry for 
asking stupid questions.

I may investigate mod_deflate or writing a filter, as suggested by Deron.

Thanks for you help,

Ville

From jpg at jgassociates.ca  Fri Mar 24 12:11:34 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 24 12:10:22 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <Pine.LNX.4.64.0603241649230.11098@wolf.ebi.ac.uk>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>	<4423F55F.8020208@jgassociates.ca>	<Pine.LNX.4.64.0603241420170.11098@wolf.ebi.ac.uk>	<4424192B.3060307@jgassociates.ca>
	<Pine.LNX.4.64.0603241649230.11098@wolf.ebi.ac.uk>
Message-ID: <44242846.3050509@jgassociates.ca>

Ville Silventoinen wrote:
> On Fri, 24 Mar 2006, Jim Gallacher wrote:
> 
>> Ville Silventoinen wrote:
>>
>>>
>>> One colleague suggested using a named pipe. The mod_python process 
>>> would fork a child process, which would set up the named pipe for the 
>>> decompressed stream. The parent would wait until this is done and 
>>> then use the named pipe filename with req.sendfile. Any idea if 
>>> something like that would work?
>>
>>
>> I have not idea but it seems rather complicated and would still 
>> require modifying requestobject.c to expose the apache ap_send_fd 
>> call. I'm not convinced it would be worth the effort. What are you 
>> trying to achieve exactly that makes your orginal solution unacceptable?
>>
> I was just curious if anyone has tried something like that or if my 
> solution is somehow faulty or slow compared to the sendfile. Sorry for 
> asking stupid questions.

They are not stupid questions, just premature optimizations. :)

Jim
From python_eager at yahoo.com  Fri Mar 24 23:42:49 2006
From: python_eager at yahoo.com (python eager)
Date: Fri Mar 24 23:42:55 2006
Subject: [mod_python] Need Assistance MD5 hash 
Message-ID: <20060325044249.39066.qmail@web31309.mail.mud.yahoo.com>

Hi
    i need assitance on creating md5hash in each file. How to create and retrieve the file using md5 hash. Please give any examples or reference url.
   
  thank you
  regards
  Python Eager
   

		
---------------------------------
New Yahoo! Messenger with Voice. Call regular phones from your PC for low, low rates.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060324/f41c6c5e/attachment.html
From pjs at packet-addiction.org  Fri Mar 24 23:52:24 2006
From: pjs at packet-addiction.org (Peter Sanchez)
Date: Fri Mar 24 23:49:29 2006
Subject: [mod_python] Need Assistance MD5 hash 
In-Reply-To: <20060325044249.39066.qmail@web31309.mail.mud.yahoo.com>
References: <20060325044249.39066.qmail@web31309.mail.mud.yahoo.com>
Message-ID: <710DAC6E-6E93-48CD-97B6-48CAE52AA083@packet-addiction.org>

This explains how to use the md5 module.

http://docs.python.org/lib/module-md5.html

-Peter

On Mar 24, 2006, at 8:42 PM, python eager wrote:

> Hi
>   i need assitance on creating md5hash in each file. How to create  
> and retrieve the file using md5 hash. Please give any examples or  
> reference url.
>
> thank you
> regards
> Python Eager
>
>
> New Yahoo! Messenger with Voice. Call regular phones from your PC  
> for low, low rates.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060324/ab8d10fb/attachment.html
From nicolas at lehuen.com  Sat Mar 25 04:52:56 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Sat Mar 25 04:53:19 2006
Subject: [mod_python] Need Assistance MD5 hash
In-Reply-To: <710DAC6E-6E93-48CD-97B6-48CAE52AA083@packet-addiction.org>
References: <20060325044249.39066.qmail@web31309.mail.mud.yahoo.com>
	<710DAC6E-6E93-48CD-97B6-48CAE52AA083@packet-addiction.org>
Message-ID: <c298f2d70603250152s6fa5137fy@mail.gmail.com>

To all readers of this mailing list,

Please stop answering "python eager"'s RTFMesque questions, with a
little luck, if we don't look at him, he'll go away.

Maybe I'l just the only one to find his questions and his way
offensive, but the less I read his imperative, ill-mannered and most
of all stupid questions, the better I feel.

It's worse than spam. It's quite depressing to think that an actual
human being prefers to take some time to annoy a lot of people (he's
not restricting his questions to this mailing list) instead of reading
the freely available documentation.

Thanks,
Nicolas


2006/3/25, Peter Sanchez <pjs@packet-addiction.org>:
> This explains how to use the md5 module.
>
> http://docs.python.org/lib/module-md5.html
>
> -Peter
>
> On Mar 24, 2006, at 8:42 PM, python eager wrote:
>
> Hi
>   i need assitance on creating md5hash in each file. How to create and
> retrieve the file using md5 hash. Please give any examples or reference url.
>
> thank you
> regards
> Python Eager
>
>
> ________________________________
> New Yahoo! Messenger with Voice. Call regular phones from your PC for low,
> low rates.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

From grahamd at dscpl.com.au  Sat Mar 25 05:30:02 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar 25 05:30:12 2006
Subject: [mod_python] Need Assistance MD5 hash
In-Reply-To: <c298f2d70603250152s6fa5137fy@mail.gmail.com>
References: <20060325044249.39066.qmail@web31309.mail.mud.yahoo.com>
	<710DAC6E-6E93-48CD-97B6-48CAE52AA083@packet-addiction.org>
	<c298f2d70603250152s6fa5137fy@mail.gmail.com>
Message-ID: <54fc0d2f7001c5d0ac520d0b391e6010@dscpl.com.au>


On 25/03/2006, at 8:52 PM, Nicolas Lehuen wrote:

> To all readers of this mailing list,
>
> Please stop answering "python eager"'s RTFMesque questions, with a
> little luck, if we don't look at him, he'll go away.
>
> Maybe I'l just the only one to find his questions and his way
> offensive, but the less I read his imperative, ill-mannered and most
> of all stupid questions, the better I feel.
>
> It's worse than spam. It's quite depressing to think that an actual
> human being prefers to take some time to annoy a lot of people (he's
> not restricting his questions to this mailing list) instead of reading
> the freely available documentation.

Also, to anyone new to the list who thinks Nicolas is being a bit harsh,
be aware that we have tried to educate Mr Python Eager numerous times as
to the appropriate forums to post both generic questions and some of his
more specific non mod_python questions. We have also directed him a
number of times to a mailing list etiquette FAQ so he can learn better
ways of asking questions and not upset people in the process. For all
that we have done, his manner has not changed and all our pointers to
more appropriate topic specific forums has only resulted him also
spamming those other lists with generic questions nothing to do with
those mailing list.

So as much as it feels good to help people, I share Nicolas' frustration
with this particular poster. They never express any sense of 
gratification
for the help provided and seem to think that we exist only to answer
his often most basic questions which have nothing to do with mod_python
and which they would have been able to work out themselves if only they
had done some research and experimentation of their own.

Graham

From terry.macdonald at dsl.pipex.com  Sat Mar 25 13:11:25 2006
From: terry.macdonald at dsl.pipex.com (Terry Macdonald)
Date: Sat Mar 25 13:11:37 2006
Subject: [mod_python] Need Assistance MD5 hash
In-Reply-To: <54fc0d2f7001c5d0ac520d0b391e6010@dscpl.com.au>
References: <20060325044249.39066.qmail@web31309.mail.mud.yahoo.com>	<710DAC6E-6E93-48CD-97B6-48CAE52AA083@packet-addiction.org>	<c298f2d70603250152s6fa5137fy@mail.gmail.com>
	<54fc0d2f7001c5d0ac520d0b391e6010@dscpl.com.au>
Message-ID: <442587CD.8080508@dsl.pipex.com>

Graham Dumpleton wrote:
>
> On 25/03/2006, at 8:52 PM, Nicolas Lehuen wrote:
>
>> To all readers of this mailing list,
>>
>> Please stop answering "python eager"'s RTFMesque questions, with a
>> little luck, if we don't look at him, he'll go away.
>>
>> Maybe I'l just the only one to find his questions and his way
>> offensive, but the less I read his imperative, ill-mannered and most
>> of all stupid questions, the better I feel.
>>
>> It's worse than spam. It's quite depressing to think that an actual
>> human being prefers to take some time to annoy a lot of people (he's
>> not restricting his questions to this mailing list) instead of reading
>> the freely available documentation.
>
> Also, to anyone new to the list who thinks Nicolas is being a bit harsh,
> be aware that we have tried to educate Mr Python Eager numerous times as
> to the appropriate forums to post both generic questions and some of his
> more specific non mod_python questions. We have also directed him a
> number of times to a mailing list etiquette FAQ so he can learn better
> ways of asking questions and not upset people in the process. For all
> that we have done, his manner has not changed and all our pointers to
> more appropriate topic specific forums has only resulted him also
> spamming those other lists with generic questions nothing to do with
> those mailing list.
>
> So as much as it feels good to help people, I share Nicolas' frustration
> with this particular poster. They never express any sense of 
> gratification
> for the help provided and seem to think that we exist only to answer
> his often most basic questions which have nothing to do with mod_python
> and which they would have been able to work out themselves if only they
> had done some research and experimentation of their own.
>
> Graham
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
+1
From ccbean at gmail.com  Sat Mar 25 14:13:45 2006
From: ccbean at gmail.com (Colin Bean)
Date: Sat Mar 25 14:13:50 2006
Subject: [mod_python] Need Assistance MD5 hash
In-Reply-To: <442587CD.8080508@dsl.pipex.com>
References: <20060325044249.39066.qmail@web31309.mail.mud.yahoo.com>
	<710DAC6E-6E93-48CD-97B6-48CAE52AA083@packet-addiction.org>
	<c298f2d70603250152s6fa5137fy@mail.gmail.com>
	<54fc0d2f7001c5d0ac520d0b391e6010@dscpl.com.au>
	<442587CD.8080508@dsl.pipex.com>
Message-ID: <29a6ca010603251113v4415ebc8rd12fa863e60bd324@mail.gmail.com>

+1
I've found his questions annoying since day one, also.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060325/0bf28878/attachment.html
From al at ruiz.ws  Sat Mar 25 15:54:21 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Sat Mar 25 16:19:56 2006
Subject: [mod_python] publisher handler not working on FreeBSD,
	Apache 1.3 and modpython 2.7
Message-ID: <1143320061.28136.28.camel@localhost.localdomain>

I've looked at the documentation and the faq section but I can't figure
out what I'm doing wrong.   The test script works fine as seen below in
the first <Directory> directive.  But when I try to use the publisher
handler, I get error not found (404).  If I add 'SetHandler', it dumps
the script code.   What am I missing? Or what else can I do to
troubleshoot the issue.  Let me know if I need to post more of the
httpd.conf.  

URLS tried:
http://www.brianheadrentals.com/cgi-bin/test.py
http://www.brianheadrentals.com/propman.py

Apache 1.3.33
Python 2.4.2
FreeBSD 4.7-RELEASE-p28
mod_python-2.7.11

<VirtualHost 204.202.22.32:80>
    SSLDisable
    User           brianheadrentals
    Group          brianheadrentals
    ServerName     brianheadrentals.com
    ServerAlias    www.brianheadrentals.com test.brianheadrentals.com
    ServerAdmin    root@brianheadrentals.com
    DocumentRoot   /home/brianheadrentals/www/brianheadrentals.com
    ScriptAlias    /cgi-bin/ "/home/brianheadrentals/www/cgi-bin/"
    <Directory /home/brianheadrentals/www/cgi-bin>
        AllowOverride None
        Options ExecCGI
        AddHandler python-program .py
        PythonHandler test
        PythonDebug On
        Order allow,deny
        Allow from all
    </Directory>
    <Directory /home/brianheadrentals/www/brianheadrentals.com>
        AllowOverride None
        Options ExecCGI
        AddHandler python-program .py
        #SetHandler mod_python
        PythonHandler mod_python.publisher
        PythonDebug On
        Order allow,deny
        Allow from all
    </Directory>

CustomLog      /usr/local/apache/logs/brianheadrentals/brianheadrentals.com-access_log combined

ErrorLog       /usr/local/apache/logs/brianheadrentals/brianheadrentals.com-error_log
</VirtualHost>



From list at joreybump.com  Sat Mar 25 17:10:47 2006
From: list at joreybump.com (Jorey Bump)
Date: Sat Mar 25 17:11:03 2006
Subject: [mod_python] publisher handler not working on FreeBSD,	Apache
	1.3 and modpython 2.7
In-Reply-To: <1143320061.28136.28.camel@localhost.localdomain>
References: <1143320061.28136.28.camel@localhost.localdomain>
Message-ID: <4425BFE7.8050704@joreybump.com>

Alberto Ruiz wrote:
> I've looked at the documentation and the faq section but I can't figure
> out what I'm doing wrong.   The test script works fine as seen below in
> the first <Directory> directive.  But when I try to use the publisher
> handler, I get error not found (404).  If I add 'SetHandler', it dumps
> the script code.   What am I missing? Or what else can I do to
> troubleshoot the issue.  Let me know if I need to post more of the
> httpd.conf.  
> 
> URLS tried:
> http://www.brianheadrentals.com/cgi-bin/test.py
> http://www.brianheadrentals.com/propman.py

Go back and read the documentation on Publisher (for your version of 
mod_python). Create a function within the module to use as your target:

  http://www.brianheadrentals.com/propman.py/somefunction

From al at ruiz.ws  Sat Mar 25 17:45:12 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Sat Mar 25 18:10:48 2006
Subject: [mod_python] publisher handler not working on FreeBSD,	Apache
	1.3 and modpython 2.7
In-Reply-To: <4425BFE7.8050704@joreybump.com>
References: <1143320061.28136.28.camel@localhost.localdomain>
	<4425BFE7.8050704@joreybump.com>
Message-ID: <1143326712.28136.40.camel@localhost.localdomain>

Thanks for replying so quickly.

This is the part that is confusing.  Everything worked fine on a Linux
Debian system.  So now that I migrated to a FreeBSD system, I have to
create other functions?  What's different?  My main function is labeled
'index': Here is a snipet of what I have in propman.py: 

from mod_python import Cookie
def index (req,LLRuser='',LLRpw=''):
	global R; R=req; R.content_type="text/html"
	cur=DBconnectpropman.DB.cursor()
......

So you are saying that I have to modify my calls to my python scrypts to
be propman.py/index , instead of just propman.py, right?
The version of modpython in my old system was 2.7.10, so I assumed that
they weren't that many changes.
So is there a way to change the call to my scripts so I don't to
append /index ?





On Sat, 2006-03-25 at 17:10 -0500, Jorey Bump wrote:
> Alberto Ruiz wrote:
> > I've looked at the documentation and the faq section but I can't figure
> > out what I'm doing wrong.   The test script works fine as seen below in
> > the first <Directory> directive.  But when I try to use the publisher
> > handler, I get error not found (404).  If I add 'SetHandler', it dumps
> > the script code.   What am I missing? Or what else can I do to
> > troubleshoot the issue.  Let me know if I need to post more of the
> > httpd.conf.  
> > 
> > URLS tried:
> > http://www.brianheadrentals.com/cgi-bin/test.py
> > http://www.brianheadrentals.com/propman.py
> 
> Go back and read the documentation on Publisher (for your version of 
> mod_python). Create a function within the module to use as your target:
> 
>   http://www.brianheadrentals.com/propman.py/somefunction
> 
> 

From grahamd at dscpl.com.au  Sat Mar 25 20:34:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Mar 25 20:34:39 2006
Subject: [mod_python] publisher handler not working on FreeBSD,
	Apache 1.3 and modpython 2.7
In-Reply-To: <1143326712.28136.40.camel@localhost.localdomain>
References: <1143320061.28136.28.camel@localhost.localdomain>
	<4425BFE7.8050704@joreybump.com>
	<1143326712.28136.40.camel@localhost.localdomain>
Message-ID: <4af508d8efeb055b92fb3a9d713f2611@dscpl.com.au>


On 26/03/2006, at 8:45 AM, Alberto Ruiz wrote:

> Thanks for replying so quickly.
>
> This is the part that is confusing.  Everything worked fine on a Linux
> Debian system.  So now that I migrated to a FreeBSD system, I have to
> create other functions?  What's different?

Are you sure you were using mod_python before and not just a CGI script
written in Python? They are different things and you do not need
mod_python to write CGI scripts. In CGI scripts you don't need the
functions as script are executed in total each time. Thus, the fact
you didn't have functions before suggests to me you weren't truly
using mod_python before.

Can you post a small but complete self contained example of what you
were using before.

> My main function is labeled
> 'index': Here is a snipet of what I have in propman.py:
>
> from mod_python import Cookie
> def index (req,LLRuser='',LLRpw=''):
> 	global R; R=req; R.content_type="text/html"
> 	cur=DBconnectpropman.DB.cursor()
> ......

This code is poorly written. You should NOT assign a "req" object to
a global variable because if you ever upgrade to Apache 2.0 and use
a multithread Apache MPM then multiple requests could be executing in
index() at the same time and they will interfere with each other. You
should pass the "req" object to other functions if they need to access
it.

> So you are saying that I have to modify my calls to my python scrypts 
> to
> be propman.py/index , instead of just propman.py, right?

It should be sufficient to use "propman.py" even if you were to use
mod_python.publisher as it will fallback to calling "index()".

> The version of modpython in my old system was 2.7.10, so I assumed that
> they weren't that many changes.
> So is there a way to change the call to my scripts so I don't to
> append /index ?

If you have control over this box, I would highly recommend you upgrade
to Apache 2.2 and mod_python 3.2.8.

Graham


> On Sat, 2006-03-25 at 17:10 -0500, Jorey Bump wrote:
>> Alberto Ruiz wrote:
>>> I've looked at the documentation and the faq section but I can't 
>>> figure
>>> out what I'm doing wrong.   The test script works fine as seen below 
>>> in
>>> the first <Directory> directive.  But when I try to use the publisher
>>> handler, I get error not found (404).  If I add 'SetHandler', it 
>>> dumps
>>> the script code.   What am I missing? Or what else can I do to
>>> troubleshoot the issue.  Let me know if I need to post more of the
>>> httpd.conf.
>>>
>>> URLS tried:
>>> http://www.brianheadrentals.com/cgi-bin/test.py
>>> http://www.brianheadrentals.com/propman.py
>>
>> Go back and read the documentation on Publisher (for your version of
>> mod_python). Create a function within the module to use as your 
>> target:
>>
>>   http://www.brianheadrentals.com/propman.py/somefunction
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From list at joreybump.com  Sun Mar 26 12:33:58 2006
From: list at joreybump.com (Jorey Bump)
Date: Sun Mar 26 12:34:09 2006
Subject: [mod_python] publisher handler not working on FreeBSD,	Apache
	1.3 and modpython 2.7
In-Reply-To: <4af508d8efeb055b92fb3a9d713f2611@dscpl.com.au>
References: <1143320061.28136.28.camel@localhost.localdomain>	<4425BFE7.8050704@joreybump.com>	<1143326712.28136.40.camel@localhost.localdomain>
	<4af508d8efeb055b92fb3a9d713f2611@dscpl.com.au>
Message-ID: <4426D086.8020107@joreybump.com>

Graham Dumpleton wrote:
> 
> On 26/03/2006, at 8:45 AM, Alberto Ruiz wrote:
> 
>> So you are saying that I have to modify my calls to my python scrypts to
>> be propman.py/index , instead of just propman.py, right?

Yes.

> It should be sufficient to use "propman.py" even if you were to use
> mod_python.publisher as it will fallback to calling "index()".

This is not true with mod_python 2.7.10. As the OP states, it returns a 
404 error when calling the script directly. Calling the script with a 
trailing slash returns this error:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

   File "/usr/lib/python2.1/site-packages/mod_python/apache.py", line 
193, in Dispatch
     result = object(req)

   File "/usr/lib/python2.1/site-packages/mod_python/publisher.py", line 
90, in handler
     if func_path[-1] == ".":

IndexError: string index out of range

See this for more information:

http://www.modpython.org/live/mod_python-2.7.8/doc-html/hand-pub-alg-trav.html

I believe someone has posted a patch to add more modern index traversal 
to 2.7.x versions of mod_python. You'll need to search the archives.

My recommendation to Publisher beginners is to avoid using modules named 
  index.py and index() functions until they thoroughly understand how 
mod_python works. Index traversal is a special case in 3.x, and it's 
nearly impossible to understand coming from a different background. The 
documentation can also be misleading (note that this is for mod_python 
3.x, not 2.x!):

http://www.modpython.org/live/current/doc-html/hand-pub-alg-trav.html

>> The version of modpython in my old system was 2.7.10, so I assumed that
>> they weren't that many changes.

They are very different in some key ways, enough to cause you grief. Be 
sure to consult the right documentation.

>> So is there a way to change the call to my scripts so I don't to
>> append /index ?
> 
> If you have control over this box, I would highly recommend you upgrade
> to Apache 2.2 and mod_python 3.2.8.

If this isn't possible, you can plan ahead and reorganize things a bit. 
Designate a directory that will only serve modules via Publisher. Then 
always set an explicit function to be the target. So if you set up an 
app/ directory, and use SetHandler instead of AddHandler, your URL might 
look like this:

  http://host/app/propman/foo

Where foo() is the function that returns your content. You don't have to 
have an index() function in your module. Yes, people will get strange 
errors if they try to go places they shouldn't, but that'll learn 'em. :)

I use this approach on some Debian Woody systems I still have in 
production, and it works fine. When you move to an Apache 2.x/mod_python 
3.x system, you can start to take advantage of the convenient, but 
totally unnecessary, index traversal capabilities.

From jpg at jgassociates.ca  Sun Mar 26 12:47:52 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar 26 12:47:06 2006
Subject: [mod_python] publisher handler not working on FreeBSD,	Apache
	1.3 and modpython 2.7
In-Reply-To: <4426D086.8020107@joreybump.com>
References: <1143320061.28136.28.camel@localhost.localdomain>	<4425BFE7.8050704@joreybump.com>	<1143326712.28136.40.camel@localhost.localdomain>	<4af508d8efeb055b92fb3a9d713f2611@dscpl.com.au>
	<4426D086.8020107@joreybump.com>
Message-ID: <4426D3C8.9000800@jgassociates.ca>

Jorey Bump wrote:

> My recommendation to Publisher beginners is to avoid using modules named 
>  index.py and index() functions until they thoroughly understand how 
> mod_python works. Index traversal is a special case in 3.x, and it's 
> nearly impossible to understand coming from a different background. The 
> documentation can also be misleading (note that this is for mod_python 
> 3.x, not 2.x!):
> 
> http://www.modpython.org/live/current/doc-html/hand-pub-alg-trav.html

In what way is it misleading? Suggestions to make it clearer are welcome.

Jim
From list at joreybump.com  Sun Mar 26 13:45:18 2006
From: list at joreybump.com (Jorey Bump)
Date: Sun Mar 26 13:45:30 2006
Subject: [mod_python] publisher handler not working on FreeBSD,	Apache
	1.3 and modpython 2.7
In-Reply-To: <4426D3C8.9000800@jgassociates.ca>
References: <1143320061.28136.28.camel@localhost.localdomain>	<4425BFE7.8050704@joreybump.com>	<1143326712.28136.40.camel@localhost.localdomain>	<4af508d8efeb055b92fb3a9d713f2611@dscpl.com.au>
	<4426D086.8020107@joreybump.com> <4426D3C8.9000800@jgassociates.ca>
Message-ID: <4426E13E.9020308@joreybump.com>

Jim Gallacher wrote:
> Jorey Bump wrote:
> 
>> My recommendation to Publisher beginners is to avoid using modules 
>> named  index.py and index() functions until they thoroughly understand 
>> how mod_python works. Index traversal is a special case in 3.x, and 
>> it's nearly impossible to understand coming from a different 
>> background. The documentation can also be misleading (note that this 
>> is for mod_python 3.x, not 2.x!):
>>
>> http://www.modpython.org/live/current/doc-html/hand-pub-alg-trav.html
> 
> In what way is it misleading? Suggestions to make it clearer are welcome.

The examples are correct, but I think they'd be easier for newbies to 
understand if they were presented using the module extension to better 
distinguish index.py from index():

http://www.somehost/index.py/index will return "We are in index()"

http://www.somehost/index.py/ will return "We are in index()"

http://www.somehost/index will return "We are in index()"

http://www.somehost/index.py/hello will return "We are in hello()"

http://www.somehost/hello will return "We are in hello()"

http://www.somehost/spam will return "404 Not Found"

Also, since index traversal is a special case, there should be an 
example demonstrating the behaviour of calling a module that contains no 
index():

http://host/eggs.py will return "404 Not Found" if it has no index()

Furthermore, index traversal is only partially available when using 
AddHandler, and this should be noted:

http://www.somehost/index.py/ will return "We are in index()"

http://www.somehost/index will return "404 Not Found"

This should be good enough. It doesn't address using index.py in 
DirectoryIndex, the implications of Multiviews, or the additional 
permutations possible when adding trailing slashes, but the first two 
are external issues and last one might be too much information.

I think this is very important because the user's first encounter with 
Publisher might occur here, where AddHandler is used:

  http://www.modpython.org/live/current/doc-html/tut-pub.html

On that page, the user is offered a link to the Publisher section, where 
  SetHandler is used. I think you'll agree that at this point a new user 
will have no idea of the differences between AddHandler and SetHandler, 
and will be frustrated trying to implement the examples under 
AddHandler, since *none* of them will work. In fact, this is such an 
important topic, AddHandler vs. SetHandler should have a dedicated 
chapter very early in the manual, and it should be mentioned again in 
the Publisher traversal section, with a link. Both have their 
advantages, so a preference for neither should be assumed.










From mmokrejs at ribosome.natur.cuni.cz  Sun Mar 26 14:38:19 2006
From: mmokrejs at ribosome.natur.cuni.cz (=?ISO-8859-2?Q?Martin_MOKREJ=A9?=)
Date: Sun Mar 26 14:38:26 2006
Subject: [mod_python] configure breaks with bash-3.1.14(1)-release
Message-ID: <4426EDAB.7000703@ribosome.natur.cuni.cz>

Hi,
   configure breaks for me on Gentoo linux with this error. I 
suspect it is bash-specific bug. Has anyone seen this?

checking Python version... 2.4
checking Python install prefix... /usr
checking checking where python libraries are installed... 
/usr/lib/python2.4
checking for Py_NewInterpreter in -lpython2.4... yes
checking what libraries Python was linked with... -lpython2.4 
-lpthread -ldl  -lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/include/python2.4
./configure: line 3427: syntax error near unexpected token `('
./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 
2>/dev/null`'

From jpg at jgassociates.ca  Sun Mar 26 14:51:23 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Mar 26 14:50:03 2006
Subject: [mod_python] configure breaks with bash-3.1.14(1)-release
In-Reply-To: <4426EDAB.7000703@ribosome.natur.cuni.cz>
References: <4426EDAB.7000703@ribosome.natur.cuni.cz>
Message-ID: <4426F0BB.5030101@jgassociates.ca>

Martin MOKREJ? wrote:
> Hi,
>   configure breaks for me on Gentoo linux with this error. I suspect it 
> is bash-specific bug. Has anyone seen this?
> 
> checking Python version... 2.4
> checking Python install prefix... /usr
> checking checking where python libraries are installed... 
> /usr/lib/python2.4
> checking for Py_NewInterpreter in -lpython2.4... yes
> checking what libraries Python was linked with... -lpython2.4 -lpthread 
> -ldl  -lutil   -lm
> checking linker flags used to link Python...
> checking where Python include files are... -I/usr/include/python2.4
> ./configure: line 3427: syntax error near unexpected token `('
> ./configure: line 3427: `  as_lineno_3=`(expr $as_lineno_1 + 1) 
> 2>/dev/null`'
> 

This is a known issue with bash 3.1.x. It has been fixed in the 
mod_python 3.2.x branch and the development trunk. See:

http://issues.apache.org/jira/browse/MODPYTHON-122

This fix will be included in the 3.2.9 bugfix release which will likely 
be released in the next couple of weeks.

Jim
From toddobryan at mac.com  Sun Mar 26 19:18:36 2006
From: toddobryan at mac.com (Todd O'Bryan)
Date: Sun Mar 26 19:18:57 2006
Subject: [mod_python] Test fails on Mac OS X, Apache 2.0, mod_python 3.2.8
Message-ID: <BDBD9DAE-9380-4A0B-8737-FA0341F7F609@mac.com>

After fighting a long time with Apache (Mac OS X Server is really  
nice, but figuring which version of Apache I'm running--the built-in  
1.3 or my own install--was a major pain), I finally have a 2.0  
version serving pages. But when I tried to get mod_python working, I  
got this error:

[Sun Mar 26 19:12:01 2006] [error] make_obcallback: could not import  
mod_python.
apache.\n
Traceback (most recent call last):
   File "/sw/lib/python2.4/site-packages/mod_python/apache.py", line  
24, in ?
     import pdb
   File "/sw/lib/python2.4/pdb.py", line 11, in ?
     from repr import Repr
   File "/sw/lib/python2.4/repr.py", line 6, in ?
     from itertools import islice
ImportError: Failure linking new module: /sw/lib/python2.4/lib- 
dynload/itertools
.so: Symbol not found: __PyArg_NoKeywords
   Referenced from: /sw/lib/python2.4/lib-dynload/itertools.so
   Expected in: dynamic lookup

Believe it or not, Google returned NO pages for __PyArg_NoKeywords.  
Any ideas?

Thanks,
Todd
From grahamd at dscpl.com.au  Sun Mar 26 19:40:16 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 26 19:40:25 2006
Subject: [mod_python] Test fails on Mac OS X, Apache 2.0, mod_python 3.2.8
Message-ID: <1143420016.7324@dscpl.user.openhosting.com>

Todd O'Bryan wrote ..
> After fighting a long time with Apache (Mac OS X Server is really  
> nice, but figuring which version of Apache I'm running--the built-in  
> 1.3 or my own install--was a major pain), I finally have a 2.0  
> version serving pages. But when I tried to get mod_python working, I  
> got this error:
> 
> [Sun Mar 26 19:12:01 2006] [error] make_obcallback: could not import  
> mod_python.
> apache.\n
> Traceback (most recent call last):
>    File "/sw/lib/python2.4/site-packages/mod_python/apache.py", line  
> 24, in ?
>      import pdb
>    File "/sw/lib/python2.4/pdb.py", line 11, in ?
>      from repr import Repr
>    File "/sw/lib/python2.4/repr.py", line 6, in ?
>      from itertools import islice
> ImportError: Failure linking new module: /sw/lib/python2.4/lib- 
> dynload/itertools
> .so: Symbol not found: __PyArg_NoKeywords
>    Referenced from: /sw/lib/python2.4/lib-dynload/itertools.so
>    Expected in: dynamic lookup
> 
> Believe it or not, Google returned NO pages for __PyArg_NoKeywords.  
> Any ideas?

Are you confident that you built mod_python for Python 2.4 from fink
and not against the version of Python distributed with Mac OS X?

Having multiple version of Python available can often be a problem as
Apache/mod_python will attempt to use the one found in $PATH of
user Apache is started as and not that which mod_python was compiled
against. This can result in a unhealthy mix of stuff from different versions
of Python being used.

Thus, confirm which version of Python you build mod_python with and
ensure that that version appears in $PATH before any others when
Apache is restarted.

Further, on Mac OS X it doesn't properly unload the Python framework
on a "restart". Thus, after recompiling/reinstalling mod_python it is always
a good idea to do a "stop" and "start" rather than a "restart" of Apache.

If this helps, please feedback details about what the problem turned out
to be. This problem is occassionally seen, but we don't usually get any
details back about why so we can add it to our knowledge bank.


Graham
From grahamd at dscpl.com.au  Sun Mar 26 20:56:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Mar 26 20:56:55 2006
Subject: [mod_python] Test fails on Mac OS X, Apache 2.0, mod_python 3.2.8
Message-ID: <1143424604.19634@dscpl.user.openhosting.com>

Todd O'Bryan wrote ..
> 
> On Mar 26, 2006, at 7:40 PM, Graham Dumpleton wrote:
> 
> > Thus, confirm which version of Python you build mod_python with and
> > ensure that that version appears in $PATH before any others when
> > Apache is restarted.
> 
> Is there a foolproof way to do that?

When you configure mod_python, you can use --with-python option to
point at a specific version. Similarly, you can use --with-apxs option to
point at a specific version of Apache.

> which python
> returns /sw/bin/python
> 
> and when I configure mod_python, it says it's using /sw/sbin/apxs.
> 
> But something else could be going wrong. I'm Unix literate, but not  
> Unix proficient, so any guidance would be helpful.

>From memory, these problems with undefined symbols nearly always
occur on Mac OS X when people use fink. Is there any chance of
convincing you to not use fink to build Apache and similarly not use
Python from fink, but use stock standard Python 2.3 included with the
operating system.

Bar that, not sure much else I can suggest except for doing a full distclean
of mod_python and trying to build it again.

Graham
From nogradi at gmail.com  Sun Mar 26 21:00:35 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Sun Mar 26 21:00:38 2006
Subject: [mod_python] [ANN] markup.py - 1.1 - an HTML/XML generator
Message-ID: <5f56302b0603261800x2245a39drf31753e0eb96b6ac@mail.gmail.com>

The 1.1 release of markup.py -- an intuitive, light-weight,
customizable and pythonic HTML/XML generator -- is available together
with documentation at

http://markup.sourceforge.net

The emphasis is on being light-weight; markup.py is not a web
framework or full blown templating engine or parser, it is actually a
single file with only three classes plus exceptions. And its only
purpose in life is to generate HTML/XML without cluttering your Python
code with tags.

The code is in the public domain.

Example:

import markup

    items = ( "Item one", "Item two", "Item three", "Item four" )
    paras = ( "This was a fantastic list.", "And now for something
completely different." )

    page = markup.page( )
    page.init( title="My title",
               css=( 'one.css', 'two.css' ),
               header="Something at the top",
               footer="The bitter end." )

    page.ul.open( klass='mylist' )
    page.li( items, klass='myitem' )
    page.ul.close( )

    page.p( paras )
    page.img( width=100, height=300, alt="Check this out", src="myfile.jpg" )

    print page

the above will output

        <!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01 Transitional//EN'>
        <html lang='en'>
        <head>
        <link href='one.css' type='text/css' rel='stylesheet' />
        <link href='two.css' type='text/css' rel='stylesheet' />
        <title>My title</title>
        </head>
        <body>
        Something at the top
        <ul class='mylist'>
        <li class='myitem'>Item one</li>
        <li class='myitem'>Item two</li>
        <li class='myitem'>Item three</li>
        <li class='myitem'>Item four</li>
        </ul>
        <p>This was a fantastic list.</p>
        <p>And now for something completely different.</p>
        <img src='myfile.jpg' alt='Check this out' height='300' width='100' />
        The bitter end.
        </body>
        </html>

From nlv11281 at natlab.research.philips.com  Mon Mar 27 00:52:26 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Mar 27 00:52:40 2006
Subject: [mod_python] Request sendfile question
In-Reply-To: <Pine.LNX.4.64.0603241413420.11098@wolf.ebi.ac.uk>
References: <Pine.LNX.4.64.0603241213590.11098@wolf.ebi.ac.uk>
	<4423F188.3060707@natlab.research.philips.com>
	<Pine.LNX.4.64.0603241413420.11098@wolf.ebi.ac.uk>
Message-ID: <44277D9A.1000704@natlab.research.philips.com>

I think the book is getting old - gzip decompression is built into IE 
and Netscape in versions around 4.0, so you can expect them all to 
support it. You can examine the 'accept' header sent by the browser to 
determine whether it will be capable of handling gzipped content.

--
Mike Looijmans
Philips Natlab / Topic Automation


Ville Silventoinen wrote:
> Hi Mike,
> 
> do all browsers support Gzip data? I've got a book called "Writing 
> Apache Modules with Perl and C" which states that only Unix browsers 
> would decompress Gzip data on-the-fly. We've got lot of Windows and Mac 
> users who wouldn't know how to open the .gz file. I know it wastes 
> network bandwidth to send the files uncompressed, but this application 
> is used mostly in our intranet.
> 
> Thanks for you advice,
> 
> Ville
> 
> 
> On Fri, 24 Mar 2006, Mike Looijmans wrote:
> 
>> There is shutil.copyfileobj() which basically does what you do here.
>>
>> If there's only one file in each archive file, your might want to try 
>> just setting the transfer-encoding (or so, not entirely sure here) to 
>> gzipped, just like mod_gzip does (the difference being that mod_gzip 
>> compresses your output, while your output is already compressed). If 
>> you do that right, you can send back the GZIP data without 
>> decompressing it and the client will decompress it on the fly (saving 
>> bandwidth in the process).
>>
>> -- 
>> Mike Looijmans
>> Philips Natlab / Topic Automation
>>
>>
>> Ville Silventoinen wrote:
>>
>>> Hi,
>>>
>>> is there a way to send a file using a file handle?
>>>
>>> I've got a file archive, which stores files in gzip format. When a 
>>> client downloads the file, I'd like to send the file uncompressed, 
>>> without creating a temporary file.
>>>
>>> I'm sending the file like this (bit simplified):
>>>
>>>     req.filename = fname
>>>     req.content_type = ctype
>>>     req.set_content_length = flen
>>>
>>>     fh = gzip.GzipFile(fpath, 'rb', 9)
>>>     block_size = 1024
>>>     while 1:
>>>         data = fh.read(block_size)
>>>         if not data:
>>>             break
>>>         req.write(data)
>>>     fh.close()
>>>
>>>     return apache.OK
>>>
>>> I've tested this with different files, it seems to work ok. I was 
>>> looking at the requestobject.c. Would it be easy to implement 
>>> something like req_sendfh in addition to req_sendfile?
>>>
>>> Thanks,
>>> Ville
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>

From mvanaswegen at gmail.com  Tue Mar 28 01:42:13 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Tue Mar 28 01:42:22 2006
Subject: [mod_python] Templates et. al.
Message-ID: <ffa39deb0603272242j10eff07vb0bbf4646d7d081a@mail.gmail.com>

Hi All

I'm trying to find a good pattern to do page updates. The use case is as
follow:
The user is presented with a page, the user enters data, the user is
provided with feedback e.g. validation errors, failure, success.

I have implemented this in two ways, but I'd like to hear how others have
approached this problem.

option 1:
create a page render function
create a page handler function
if there's validation problems call the render function with args e.g.
update status

option 2:
create a page render function
create a page handler function
if there's validation problems render the page using the handler function
e.g. update status

I prefer option 1, because it retains the user input and I don't have to
manually populate fields again (option 2) , however I get situations where
the new page is just appended below the previous page. Is there a way to
tell mod_python to clear the slate?

This is how I render pages:

    # load the appropriate templates, mangle and render
    req.content_type ='text/html'
    tmpl = psp.PSP(req, filename='template.html')
    content = psp.PSP(req, filename= 'welcome.html', vars = {} )
    tmpl.run ( vars = {'status': status, 'content': content } )
    return apache.OK


Cheers

Marinus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060328/3705a685/attachment.html
From albert at compuscan.co.za  Tue Mar 28 02:38:29 2006
From: albert at compuscan.co.za (Albert Leibbrandt)
Date: Tue Mar 28 02:38:36 2006
Subject: [mod_python] Stylesheets
Message-ID: <4428E7F5.2060701@compuscan.co.za>

Hi

I've configure my apache to use mod_python and it works correctly. My 
problem comes in when I try to access a stylesheet from the html, it 
simply refuses to apply the styles.
When I move the style sheet outside of the directory specified in the 
virtual host it works, it would seem that python is trying to execute 
everything in the directory?
Have you guys got any advice, I have attached the virtual host 
configuration:

<VirtualHost test>
   ServerAdmin test@test.test <mailto:evlangelis@gmail.com>
   DocumentRoot /www/test.chimeara
   DirectoryIndex index
   ServerName test.chimeara
   ErrorLog /www/logs/test.chimeara.error_log
   CustomLog /www/logs/test.chimeara.access_log common
   <Directory>
       SetHandler mod_python
       PythonHandler mod_python.publisher
       PythonDebug On
   </Directory>
</VirtualHost>

Thanks
Albert

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060328/251615da/attachment.html
From grahamd at dscpl.com.au  Tue Mar 28 02:46:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 28 02:47:15 2006
Subject: [mod_python] Stylesheets
In-Reply-To: <4428E7F5.2060701@compuscan.co.za>
References: <4428E7F5.2060701@compuscan.co.za>
Message-ID: <ED55C179-5DB4-420C-977B-7B487122F16E@dscpl.com.au>


On 28/03/2006, at 5:38 PM, Albert Leibbrandt wrote:

> Hi
>
> I've configure my apache to use mod_python and it works correctly.  
> My problem comes in when I try to access a stylesheet from the  
> html, it simply refuses to apply the styles.
> When I move the style sheet outside of the directory specified in  
> the virtual host it works, it would seem that python is trying to  
> execute everything in the directory?
> Have you guys got any advice, I have attached the virtual host  
> configuration:
>
> <VirtualHost test>
>    ServerAdmin test@test.test
>    DocumentRoot /www/test.chimeara
>    DirectoryIndex index
>    ServerName test.chimeara
>    ErrorLog /www/logs/test.chimeara.error_log
>    CustomLog /www/logs/test.chimeara.access_log common
>    <Directory>
>        SetHandler mod_python
>        PythonHandler mod_python.publisher
>        PythonDebug On

Add here:

   <Files *.css>
   SetHandler None
   </Files>

>    </Directory>
> </VirtualHost>
>

The SetHandler directive means to pass every request against  
directory through
mod_python. You thus have to undo this for *.css files, or use  
AddHandler with
a specific extension rather than SetHandler for mod_python stuff.

You might like to do some research of difference between AddHandler and
SetHandler.

Graham
From jcigar at ulb.ac.be  Tue Mar 28 05:36:46 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Mar 28 05:36:12 2006
Subject: [mod_python] little problem with my handler
Message-ID: <442911BE.5070906@ulb.ac.be>

Hello,

I'm writing my first home-made handler (inspired by mod_publisher).
I wanted to do a "ruby on rails"-like dispatcher, so when I call : 
http://somehost.com/foo/bar it should call the bar() method of the class 
(controller) foo which lives under controllers/
Please note that it is not at all complete, I'm just playing with it at 
the moment ..

I face a strange problem, when I render my html file with my template 
engine (clearsilver), the problem comes from the line:
...
<link rel="stylesheet" type="text/css" href="styles/screen.css"></link>
...

Here is the error :

[notice] mod_python: (Re)importing module 'handler'
[notice] mod_python: (Re)importing module 'controllers.default'
[error] PythonHandler handler: Traceback (most recent call last):, 
referer: http://canis/ias/default/
[error] PythonHandler handler:   File 
"/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in 
HandlerDispatch\n    result = object(req), referer: 
http://canis/ias/default/
[error] PythonHandler handler:   File 
"/home/jcigar/public_html/invasive_species/public/handler.py", line 35, 
in handler\n    object = getattr(module, method), referer: 
http://canis/ias/default/
[error] PythonHandler handler: AttributeError: 'module' object has no 
attribute 'styles', referer: http://canis/ias/default/


Here is the code of my handler:

#!/usr/bin/python

import sys

from mod_python import apache, util

sys.path.append('/home/jcigar/public_html/invasive_species/application')

def handler(req):

    req.allow_methods(["GET", "POST"])
   
    if req.method not in (["GET", "POST"]):
        raise apache.SERVER_RETURN, apache.HTTP_METHOD_NOT_ALLOWED
  
    (controller, method) = ("default", "index")

    if req.path_info:
        path_info = req.path_info.strip('/').split('/')

    if path_info[0].isalpha():
        controller = path_info[0]
       
        if len(path_info) > 1 and path_info[1].isalpha():
            method = path_info[1]
   
    config = req.get_config()
    (autoreload, log) = (int(config.get("PythonAutoReload", 1)), 
int(config.get("PythonDebug", 0)))
   
    try:
        module = apache.import_module('controllers.%s' % (controller, ), 
autoreload=autoreload, log=log)
    except ImportError:
        req.log_error('Cannot import controller %s' % (controller, ))

    object = getattr(module, method)

    if callable(object):
        req.params = util.FieldStorage(req, keep_blank_values=1)
        result = util.apply_fs_data(object, req.params, req=req)
    else:
        req.log_error('%s is not callable' % (object, ))
        return apache.HTTP_INTERNAL_SERVER_ERROR

    if result or req.bytes_sent or req.next:
        req.content_type = 'text/html'
        req.write(result)
        return apache.OK
    else:
        req.log_error('Nothing returned')
        return apache.HTTP_INTERNAL_SERVER_ERROR


In advance, thanks for support !
Julien

-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
Work: jcigar@ulb.ac.be
Personal: mage@mordor.ath.cx

From nogradi at gmail.com  Tue Mar 28 07:47:39 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Tue Mar 28 07:47:43 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <442911BE.5070906@ulb.ac.be>
References: <442911BE.5070906@ulb.ac.be>
Message-ID: <5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>

> <link rel="stylesheet" type="text/css" href="styles/screen.css"></link>
> ...
> [error] PythonHandler handler: AttributeError: 'module' object has no
> attribute 'styles', referer: http://canis/ias/default/

Perhaps you have the same problem as this:

http://modpython.org/pipermail/mod_python/2006-March/020671.html

It looks like mod_python wants to serve your stylesheets possibly
because you have used the SetHandler directive for the directory
containing those css files. Try the suggestions of Graham on the post
linked above to avoid mod_python interfering with files that are not
python files (stylesheets, images, etc).

From jcigar at ulb.ac.be  Tue Mar 28 08:19:06 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Mar 28 08:18:30 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>
References: <442911BE.5070906@ulb.ac.be>
	<5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>
Message-ID: <442937CA.6050704@ulb.ac.be>

Thanks for answer.
I don't think that it's the cause of the problem ..

Here is my Apache config is :

Alias /ias /home/jcigar/public_html/invasive_species/public/dispatch.py/
<Directory /home/jcigar/public_html/invasive_species/public>
    SetHandler mod_python
    PythonHandler dispatch
    PythonDebug on
    PythonInterpPerDirectory on

    <Files "\.(gif|jpe?g|png|css|html?)$">
        SetHandler None
    </Files>

</Directory>

... so mod_python should not serve those files.
I've added a .htaccess with a "SetHandler None" in the directory 
containing the css, pictures, ... but it doesn't resolve the problem ...


Daniel Nogradi wrote:
>> <link rel="stylesheet" type="text/css" href="styles/screen.css"></link>
>> ...
>> [error] PythonHandler handler: AttributeError: 'module' object has no
>> attribute 'styles', referer: http://canis/ias/default/
>>     
>
> Perhaps you have the same problem as this:
>
> http://modpython.org/pipermail/mod_python/2006-March/020671.html
>
> It looks like mod_python wants to serve your stylesheets possibly
> because you have used the SetHandler directive for the directory
> containing those css files. Try the suggestions of Graham on the post
> linked above to avoid mod_python interfering with files that are not
> python files (stylesheets, images, etc).
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>   


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
Work: jcigar@ulb.ac.be
Personal: mage@mordor.ath.cx

From amand.tihon at alrj.org  Tue Mar 28 08:45:25 2006
From: amand.tihon at alrj.org (Amand Tihon)
Date: Tue Mar 28 08:45:23 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <442937CA.6050704@ulb.ac.be>
References: <442911BE.5070906@ulb.ac.be>
	<5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>
	<442937CA.6050704@ulb.ac.be>
Message-ID: <200603281545.26487.amand.tihon@alrj.org>

Le Mardi 28 Mars 2006 15:19, Julien Cigar a ?crit?:
> ? ? <Files "\.(gif|jpe?g|png|css|html?)$">
> ? ? ? ? SetHandler None
> ? ? </Files>

I think you want a <FilesMatch ...> directive here, instead of a <Files ...>

The other solution is to use <Files ~ regexp> but FilesMatch is recommended in 
apache's documentation.

I hope this helps.

-- 
Amand Tihon
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060328/2b41d092/attachment.bin
From jcigar at ulb.ac.be  Tue Mar 28 09:16:01 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Mar 28 09:15:26 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <200603281545.26487.amand.tihon@alrj.org>
References: <442911BE.5070906@ulb.ac.be>	<5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>	<442937CA.6050704@ulb.ac.be>
	<200603281545.26487.amand.tihon@alrj.org>
Message-ID: <44294521.4040400@ulb.ac.be>

Same with <FilesMatch> ...
I think the problem comes from my handler itself .. it's my first one :)


Amand Tihon wrote:
> Le Mardi 28 Mars 2006 15:19, Julien Cigar a ?crit :
>   
>>     <Files "\.(gif|jpe?g|png|css|html?)$">
>>         SetHandler None
>>     </Files>
>>     
>
> I think you want a <FilesMatch ...> directive here, instead of a <Files ...>
>
> The other solution is to use <Files ~ regexp> but FilesMatch is recommended in 
> apache's documentation.
>
> I hope this helps.
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>   


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
Work: jcigar@ulb.ac.be
Personal: mage@mordor.ath.cx

From petersheldrick at googlemail.com  Tue Mar 28 10:21:57 2006
From: petersheldrick at googlemail.com (Peter Sheldrick)
Date: Tue Mar 28 10:22:03 2006
Subject: [mod_python] radio buttons
Message-ID: <1a5f2e680603280721na4298bbg7f779fa63e7f17ea@mail.gmail.com>

How must i tweak my python code so that mod_publisher successfully
understands radio buttons? atm i have two radio buttons that have the same
name="" attribute - but mod_publisher automatically maps name attributes to
python variables; if there are two input forms with the same name it gets
confused. But this is compulsory for radio buttons. Is there an easy way
out?

- Peter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060328/56c6f4ac/attachment.html
From list at joreybump.com  Tue Mar 28 10:43:30 2006
From: list at joreybump.com (Jorey Bump)
Date: Tue Mar 28 10:43:41 2006
Subject: [mod_python] radio buttons
In-Reply-To: <1a5f2e680603280721na4298bbg7f779fa63e7f17ea@mail.gmail.com>
References: <1a5f2e680603280721na4298bbg7f779fa63e7f17ea@mail.gmail.com>
Message-ID: <442959A2.5000108@joreybump.com>

Peter Sheldrick wrote:
> How must i tweak my python code so that mod_publisher successfully 
> understands radio buttons? atm i have two radio buttons that have the 
> same name="" attribute - but mod_publisher automatically maps name 
> attributes to  python variables; if there are two input forms with the 
> same name it gets confused. But this is compulsory for radio buttons. Is 
> there an easy way out?

You'll have to provide an example of the problem. When a form is 
submitted, req.form will contain only one value for a radio button, if 
one of the options was selected.

Publisher doesn't know what a radio button is, but form values are 
mapped to keys in req.form. If multiple values are submitted, the result 
will be a list, not a string, so you'll need to check the type of the 
value that corresponds to any given key. This wouldn't happen with a 
radio button group, though, because there will only be one choice, 
unless the name is used elsewhere (a hidden input or in the URL).

FWIW, I don't use the automatic mapping offered by publisher at all. I 
find that using req.form is more flexible and reliable (you don't have 
to worry about namespace collisions when you're using keys).


From jrraines at comcast.net  Tue Mar 28 10:58:56 2006
From: jrraines at comcast.net (John Raines)
Date: Tue Mar 28 10:59:02 2006
Subject: [mod_python] radio buttons
In-Reply-To: <1a5f2e680603280721na4298bbg7f779fa63e7f17ea@mail.gmail.com>
References: <1a5f2e680603280721na4298bbg7f779fa63e7f17ea@mail.gmail.com>
Message-ID: <1613B4D1-A10F-4210-A0F9-5CCA1A9DF91A@comcast.net>

  Your HTML looks something like this:
              <INPUT NAME="hysterect" Type="RADIO" Value="n">No<BR>
               <INPUT NAME="hysterect" Type="RADIO" Value="y">Yes<BR>
               <INPUT NAME="hysterect" Type="RADIO" Value="d">Don't  
Know'''
   #if you skip a radio item it doesn't get sent; if you skip a text  
field the key is sent with a null value.
  so you write something like "if answers.has_key("hysterect"):
                                                               
h=answers['hysterect']

The trick to figuring out these things is start with the minimum  
python form handler
def handleformx(req,**answers)
      return str(answers)

it'll show you exactly what got sent for various inputs or lack of  
filling things out etc.


On Mar 28, 2006, at 9:21 AM, Peter Sheldrick wrote:

> How must i tweak my python code so that mod_publisher successfully  
> understands radio buttons? atm i have two radio buttons that have  
> the same name="" attribute - but mod_publisher automatically maps  
> name attributes to  python variables; if there are two input forms  
> with the same name it gets confused. But this is compulsory for  
> radio buttons. Is there an easy way out?
>
> - Peter
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nogradi at gmail.com  Tue Mar 28 11:00:47 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Tue Mar 28 11:00:52 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <44294521.4040400@ulb.ac.be>
References: <442911BE.5070906@ulb.ac.be>
	<5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>
	<442937CA.6050704@ulb.ac.be> <200603281545.26487.amand.tihon@alrj.org>
	<44294521.4040400@ulb.ac.be>
Message-ID: <5f56302b0603280800x644d6e84l1592cd4e2cc9279d@mail.gmail.com>

> Same with <FilesMatch> ...
> I think the problem comes from my handler itself .. it's my first one :)

Try accessing the stylesheet from a browser directly and see if the
logs show any mod_python interference. If they do then you can be sure
that your apache directives are not okay and mod_python wakes up even
for .css files.

From dave at davebritton.com  Tue Mar 28 11:02:25 2006
From: dave at davebritton.com (Dave Britton)
Date: Tue Mar 28 11:02:51 2006
Subject: [mod_python] radio buttons
References: <1a5f2e680603280721na4298bbg7f779fa63e7f17ea@mail.gmail.com>
Message-ID: <002901c65281$0211d620$0500a8c0@brittonfamily.org>

http://www.davebritton.com/python/myexample

shows radio buttons with mod_python and publisher
Dave
  ----- Original Message ----- 
  From: Peter Sheldrick 
  To: mod_python@modpython.org 
  Sent: Tuesday, March 28, 2006 10:21 AM
  Subject: [mod_python] radio buttons


  How must i tweak my python code so that mod_publisher successfully understands radio buttons? atm i have two radio buttons that have the same name="" attribute - but mod_publisher automatically maps name attributes to  python variables; if there are two input forms with the same name it gets confused. But this is compulsory for radio buttons. Is there an easy way out?

  - Peter



------------------------------------------------------------------------------


  _______________________________________________
  Mod_python mailing list
  Mod_python@modpython.org
  http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060328/2f3e66ad/attachment.html
From jcigar at ulb.ac.be  Tue Mar 28 11:20:01 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Mar 28 11:20:16 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <5f56302b0603280800x644d6e84l1592cd4e2cc9279d@mail.gmail.com>
References: <442911BE.5070906@ulb.ac.be>	<5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>	<442937CA.6050704@ulb.ac.be>
	<200603281545.26487.amand.tihon@alrj.org>	<44294521.4040400@ulb.ac.be>
	<5f56302b0603280800x644d6e84l1592cd4e2cc9279d@mail.gmail.com>
Message-ID: <44296231.2040108@ulb.ac.be>

it works ! same for the pictures .. so the problem comes from my handler 
but I cannot find where I made a mistake ... ?

Thanks

Daniel Nogradi wrote:
>> Same with <FilesMatch> ...
>> I think the problem comes from my handler itself .. it's my first one :)
>>     
>
> Try accessing the stylesheet from a browser directly and see if the
> logs show any mod_python interference. If they do then you can be sure
> that your apache directives are not okay and mod_python wakes up even
> for .css files.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>   

From nogradi at gmail.com  Tue Mar 28 11:31:27 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Tue Mar 28 11:31:33 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <44296231.2040108@ulb.ac.be>
References: <442911BE.5070906@ulb.ac.be>
	<5f56302b0603280447g2c607300v24669639503e36a@mail.gmail.com>
	<442937CA.6050704@ulb.ac.be> <200603281545.26487.amand.tihon@alrj.org>
	<44294521.4040400@ulb.ac.be>
	<5f56302b0603280800x644d6e84l1592cd4e2cc9279d@mail.gmail.com>
	<44296231.2040108@ulb.ac.be>
Message-ID: <5f56302b0603280831u1e288304kd0157d8c9ea070ee@mail.gmail.com>

> it works ! same for the pictures .. so the problem comes from my handler
> but I cannot find where I made a mistake ... ?
>
> Thanks

Not that it should make any difference but

<link rel="stylesheet" type="text/css" href="styles/screen.css"></link>

should be

<link rel="stylesheet" type="text/css" href="styles/screen.css" />

and perhaps you can double check if you really want
'styles/screen.css' and not '/styles/screen.css'. Maybe your styles
directory is at the root of the document tree?

From jpg at jgassociates.ca  Tue Mar 28 11:50:55 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Mar 28 11:50:12 2006
Subject: [mod_python] Templates et. al.
In-Reply-To: <ffa39deb0603272242j10eff07vb0bbf4646d7d081a@mail.gmail.com>
References: <ffa39deb0603272242j10eff07vb0bbf4646d7d081a@mail.gmail.com>
Message-ID: <4429696F.8000605@jgassociates.ca>

marinus van aswegen wrote:
> Hi All
> 
> I'm trying to find a good pattern to do page updates. The use case is as
> follow:
> The user is presented with a page, the user enters data, the user is
> provided with feedback e.g. validation errors, failure, success.
> 
> I have implemented this in two ways, but I'd like to hear how others have
> approached this problem.
> 
> option 1:
> create a page render function
> create a page handler function
> if there's validation problems call the render function with args e.g.
> update status
> 
> option 2:
> create a page render function
> create a page handler function
> if there's validation problems render the page using the handler function
> e.g. update status
> 
> I prefer option 1, because it retains the user input and I don't have to
> manually populate fields again (option 2) , however I get situations where
> the new page is just appended below the previous page. Is there a way to
> tell mod_python to clear the slate?
> 
> This is how I render pages:
> 
>     # load the appropriate templates, mangle and render
>     req.content_type ='text/html'
>     tmpl = psp.PSP(req, filename='template.html')
>     content = psp.PSP(req, filename= 'welcome.html', vars = {} )
>     tmpl.run ( vars = {'status': status, 'content': content } )
>     return apache.OK
> 

I'm not sure what you mean by "clear the slate", but if your page is 
getting rendered twice then you are calling your render function twice 
in the same request. There is not enough context in the code snippet 
above to really tell what is happening. Perhaps you could post a more 
complete example?

Jim

From yess at hell.org.pl  Tue Mar 28 13:38:10 2006
From: yess at hell.org.pl (Tadeusz Andrzej =?iso-8859-2?Q?Kad=B3ubowski?=)
Date: Tue Mar 28 13:38:18 2006
Subject: [mod_python] mod_python and SOAP WebServices. The strangest bug
	I've seen in my entire life.
Message-ID: <20060328183810.GA8901@hell.org.pl>

Hello,

I use mod_python to do WebServices. The client (.NET C# application) POSTs me a
XML, I parse it with python XML goodies and send back a different XML.

Whenever I try to POST a message, once in every 7 times my script crashes when
my handler tries to call a function in my other module. I get TypeError telling
me that this function takes exactly 2 arguments, whereas 6 times in 7 it knows
how to pass 3 arguments to this function. What's more confusing is that this
imported module has incorrect syntax, so this behaviour reflects old versions.
I fill as confused as one can be.

For now I will check if everything is correct with all current and correct
modules. Blah...
-- 
tadeusz andrzej kad?ubowski
<przekaz podprogowy> kup mi iBooka </przekaz podprogowy>
From joeb at mit.edu  Tue Mar 28 14:25:14 2006
From: joeb at mit.edu (Joseph Barillari)
Date: Tue Mar 28 14:25:26 2006
Subject: [mod_python] mod_python and SOAP WebServices. The strangest bug
	I've seen in my entire life.
In-Reply-To: <20060328183810.GA8901@hell.org.pl>
References: <20060328183810.GA8901@hell.org.pl>
Message-ID: <20060328192513.GH25477@barillari.org>

On Tue, Mar 28, 2006 at 08:38:10PM +0200, Tadeusz Andrzej Kad?ubowski wrote:
> Hello,
> 
> I use mod_python to do WebServices. The client (.NET C# application) POSTs me a
> XML, I parse it with python XML goodies and send back a different XML.
> 
> Whenever I try to POST a message, once in every 7 times my script crashes when
> my handler tries to call a function in my other module. I get TypeError telling
> me that this function takes exactly 2 arguments, whereas 6 times in 7 it knows
> how to pass 3 arguments to this function. What's more confusing is that this
> imported module has incorrect syntax, so this behaviour reflects old versions.
> I fill as confused as one can be.
> 
> For now I will check if everything is correct with all current and correct
> modules. Blah...

I'd recommend checking if the exchange is different in round 7. You could do this with simpleproxy:

simpleproxy -L localhost:$proxied_port -R localhost:$modpython_port -t dump

Point your client to $proxied_port instead of $modpython_port, and
examine the file _dump_ afterwards to see if there was any difference
in the data transferred.

Joe

-- 
Joseph Barillari
joeb@mit.edu
107 Ave. Louis Pasteur, Vandy Box 121, Boston, MA 02115
617-519-9250 (mobile)
From ccbean at gmail.com  Tue Mar 28 14:43:47 2006
From: ccbean at gmail.com (Colin Bean)
Date: Tue Mar 28 14:43:52 2006
Subject: [SPAM] Re: [mod_python] mod_python and SOAP WebServices. The
	strangest bug I've seen in my entire life.
In-Reply-To: <29a6ca010603281143v6ae064bdi4f8f38f912003f69@mail.gmail.com>
References: <20060328183810.GA8901@hell.org.pl>
	<29a6ca010603281107r19e12de2o7fa0a25efab1a657@mail.gmail.com>
	<20060328191705.GA6048@hell.org.pl>
	<29a6ca010603281143v6ae064bdi4f8f38f912003f69@mail.gmail.com>
Message-ID: <29a6ca010603281143s11d79ee1hd00b7f40d9d9c085@mail.gmail.com>

Oops, forgot to cc list.
Original discussion is below.

On 3/28/06, Colin Bean <ccbean@gmail.com> wrote:
>
>
>
> Thought that was the problem ;)
>
> Here's more info about module importing  (these have been posted many
> times before, they're a good place to start)
>
> http://www.dscpl.com.au/articles/modpython-002.html
> http://www.dscpl.com.au/articles/modpython-003.html
>
> You'll also want to take a look at the apache.import_module function in
> the mod_python documentation if you haven't already.  Using this will make
> mod_python automatically reload your modules as they change on disk.
>
> -Colin
>
>
> On 3/28/06, Tadeusz Andrzej Kad?ubowski <yess@hell.org.pl> wrote:
>
> > Thus wrote Colin Bean:
> > > What platform / apache setup are you using?
> > > On a forked MPM, you'll have multiple interpreters, each with their
> > own copy
> > > of the code in memory.  It sounds like one of these is hanging on to
> > an old
> > > version of your code; since each request is handled by an arbitrary
> > > intepreter, this would explain the behavior that you're seeing (i.e.
> > one in
> > > every seven requests is handled by the 'bad' interpreter).
> > >
> > > Does restarting apache help the problem?
> >
> > Thanks for Your help.
> >
> > Sure it does help to restart apache. I have invented it on my own just a
> > moment
> > before. :)
> >
> > > This ties in to module importing / refreshing issues in mod_python,
> > which
> > > others on this list can explain better than I can.
> >
> > I don't know how and when mod_python decides it's time to reload a
> > module. I
> > would really appreciate further information / links to documentation.
> >
> > --
> > tadeusz andrzej kad?ubowski
> > <przekaz podprogowy> kup mi iBooka </przekaz podprogowy>
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060328/0c31c189/attachment.html
From grahamd at dscpl.com.au  Tue Mar 28 18:08:54 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 28 18:09:01 2006
Subject: [SPAM] Re: [mod_python] mod_python and SOAP WebServices. The
	strangest bug I've seen in my entire life.
Message-ID: <1143587334.14366@dscpl.user.openhosting.com>

I would tend to agree that original problem does sound like module
importer issues.

If one is feeling really brave, one could checkout latest development
version of mod_python from subversion and then in global Apache config
set:

  PythonOption mod_python.future.importer *

and try out the new module importer which will hopefully fix all the
problems which might be causing this.

There was a recent tarball snapshot of the subversion source code made,
but unfortunately I have made an important fix in repository version since
related to new module importer.

Graham

Colin Bean wrote ..
> Oops, forgot to cc list.
> Original discussion is below.
> 
> On 3/28/06, Colin Bean <ccbean@gmail.com> wrote:
> >
> >
> >
> > Thought that was the problem ;)
> >
> > Here's more info about module importing  (these have been posted many
> > times before, they're a good place to start)
> >
> > http://www.dscpl.com.au/articles/modpython-002.html
> > http://www.dscpl.com.au/articles/modpython-003.html
> >
> > You'll also want to take a look at the apache.import_module function
> in
> > the mod_python documentation if you haven't already.  Using this will
> make
> > mod_python automatically reload your modules as they change on disk.
> >
> > -Colin
> >
> >
> > On 3/28/06, Tadeusz Andrzej Kad?ubowski <yess@hell.org.pl> wrote:
> >
> > > Thus wrote Colin Bean:
> > > > What platform / apache setup are you using?
> > > > On a forked MPM, you'll have multiple interpreters, each with their
> > > own copy
> > > > of the code in memory.  It sounds like one of these is hanging on
> to
> > > an old
> > > > version of your code; since each request is handled by an arbitrary
> > > > intepreter, this would explain the behavior that you're seeing (i.e.
> > > one in
> > > > every seven requests is handled by the 'bad' interpreter).
> > > >
> > > > Does restarting apache help the problem?
> > >
> > > Thanks for Your help.
> > >
> > > Sure it does help to restart apache. I have invented it on my own just
> a
> > > moment
> > > before. :)
> > >
> > > > This ties in to module importing / refreshing issues in mod_python,
> > > which
> > > > others on this list can explain better than I can.
> > >
> > > I don't know how and when mod_python decides it's time to reload a
> > > module. I
> > > would really appreciate further information / links to documentation.
> > >
> > > --
> > > tadeusz andrzej kad?ubowski
> > > <przekaz podprogowy> kup mi iBooka </przekaz podprogowy>
> > >
> >
> >
From grahamd at dscpl.com.au  Tue Mar 28 18:19:52 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 28 18:19:56 2006
Subject: [mod_python] Re: little problem with my handler
Message-ID: <1143587992.19909@dscpl.user.openhosting.com>

There are possibly a few things in your handler which are questionable,
but I'll get to that in a seperate email. As to the "Files" directive, please
believe what people are telling you, the syntax you are using is plain
wrong for the "Files" directive. To make it obvious, use the Deny
directive so you get an obvious forbidden message back and try in
turn:

  <Files "*.css">
  Deny from all
  </Files>

  <FilesMatch "\.(gif|jpe?g|png|css|html?)$">
  Deny from all
  </FilesMatch>

  <Files ~ "\.(gif|jpe?g|png|css|html?)$">
  Deny from all
  </Files>

  <Files "\.(gif|jpe?g|png|css|html?)$">
  Deny from all
  </Files>

You will find that all will work to block access to the file except
what you were using.

Graham

Julien Cigar wrote ..
> Same with <FilesMatch> ...
> I think the problem comes from my handler itself .. it's my first one :)
> 
> 
> Amand Tihon wrote:
> > Le Mardi 28 Mars 2006 15:19, Julien Cigar a ?crit :
> >   
> >>     <Files "\.(gif|jpe?g|png|css|html?)$">
> >>         SetHandler None
> >>     </Files>
> >>     
> >
> > I think you want a <FilesMatch ...> directive here, instead of a <Files
> ...>
> >
> > The other solution is to use <Files ~ regexp> but FilesMatch is recommended
> in 
> > apache's documentation.
> >
> > I hope this helps.
> >
> >   
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >   
> 
> 
> -- 
> Julien Cigar
> Belgian Biodiversity Platform
> http://www.biodiversity.be
> Universit? Libre de Bruxelles
> Campus de la Plaine CP 257
> B?timent NO, Bureau 4 N4 115C (Niveau 4)
> Boulevard du Triomphe, entr?e ULB 2
> B-1050 Bruxelles
> Work: jcigar@ulb.ac.be
> Personal: mage@mordor.ath.cx
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From aditya.vrr at gmail.com  Tue Mar 28 18:42:54 2006
From: aditya.vrr at gmail.com (gOLeM)
Date: Tue Mar 28 18:42:58 2006
Subject: [mod_python] Mod Python problems
Message-ID: <ec2d07cf0603281542pc4de940yed67e551dcb29048@mail.gmail.com>

Hello,

I know that you guys must have got this mail a thousand times, but i
cant seem to find a solution anywhere. I have tried everything but
couldnt get mod_python running.

I've downloaded the psp_site.tgz and put it in /var/www/html/psp_site
and when i try to access it, i am getting the actual code instead of
the webpage.
The mod_python.so is loaded, but still i am not able to get psp running :(

Please help me.
Aditya

--
The Purpose of Life is a life of purpose -- Leider, Richard
Quitters never win and Winners never quit   -- Napolean Hill

From grahamd at dscpl.com.au  Tue Mar 28 19:11:20 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 28 19:11:25 2006
Subject: [mod_python] little problem with my handler
Message-ID: <1143591080.16032@dscpl.user.openhosting.com>

A few comments on your handler.

Julien Cigar wrote ..
> Hello,
> 
> I'm writing my first home-made handler (inspired by mod_publisher).

Writing a publisher like handler which allows arbitrary traversal of objects
is non trivial. Get it wrong and you can expose yourself to potential security
holes. Be warned, don't attempt it unless you appreciate what the issues
are. ;-)

I also think you mean't mod_python.publisher. The Apache mod_publisher
module is used to perform substitutions on XML/HTML as well as
implementing an alternative to SSI of mod_include.

> I wanted to do a "ruby on rails"-like dispatcher, so when I call : 
> http://somehost.com/foo/bar it should call the bar() method of the class
> (controller) foo which lives under controllers/
> Please note that it is not at all complete, I'm just playing with it at
> the moment ..

Why cant you just use mod_python.publisher?

> ...
> 
> Here is the code of my handler:
> 
> #!/usr/bin/python
> 
> import sys
> 
> from mod_python import apache, util
> 
> sys.path.append('/home/jcigar/public_html/invasive_species/application')

Modifying sys.path from handlers, even from global scope in module is
bad. It can cause problems in a multithreaded MPM if mod_python tries to
update sys.path at the same time.

Further, if module reloading is enabled, everytime the module is
reloaded the directory will be added to sys.path meaning it will grow
and grow and grow with multiple occurrences of the same directory
appearing.

> def handler(req):
> 
>     req.allow_methods(["GET", "POST"])
>    
>     if req.method not in (["GET", "POST"]):
>         raise apache.SERVER_RETURN, apache.HTTP_METHOD_NOT_ALLOWED
>   
>     (controller, method) = ("default", "index")
>
>     if req.path_info:
>         path_info = req.path_info.strip('/').split('/')
> 
>     if path_info[0].isalpha():
>         controller = path_info[0]
>
>         if len(path_info) > 1 and path_info[1].isalpha():
>             method = path_info[1]

Like mod_python.publisher, you have gone down the path of allowing
defaults and similarly don't deal with trailing slashes in a reasonable
way. This causes various problems due to the fact that different URLs
can be used to address the same resource. The different URLs can
have varying numbers of slashes in them, which makes calculating
relative URLs to another resource fiddly and error prone.

>     config = req.get_config()
>     (autoreload, log) = (int(config.get("PythonAutoReload", 1)), 
> int(config.get("PythonDebug", 0)))
>    
>     try:
>         module = apache.import_module('controllers.%s' % (controller, ),
> autoreload=autoreload, log=log)

Hope you don't expect autoreload to work on Python packages. It can be
unreliable at best in publically released versions of mod_python and new
module importer in future version will not support it. But then there
are better ways of doing what you are doing when new importer is
available as you will be able to load module by full path.

>     except ImportError:
>         req.log_error('Cannot import controller %s' % (controller, ))
>
>     object = getattr(module, method)

You don't reraise the ImportError exception or return any other sort
of explicit error status. Thus, when module can't be imported, it will
still try and access the method from the module, but module variable
will not exist and so it will die.

Luckily you don't allow arbitrary traversal and only allow method
name to start with alphabetic character, so no issue with notional
private stuff prefixed with underscore.

>     if callable(object):
>         req.params = util.FieldStorage(req, keep_blank_values=1)

It is traditional that if storing FieldStorage instance in request object
that it be stored as req.form.

>         result = util.apply_fs_data(object, req.params, req=req)
>     else:
>         req.log_error('%s is not callable' % (object, ))
>         return apache.HTTP_INTERNAL_SERVER_ERROR

Okay, so only allowing access to callable and not acess to data.
More safe than mod_python.publisher in that respect.

>     if result or req.bytes_sent or req.next:

Do you understand what req.next attribute is? It probably isn't
relevant to you and how you use it is probably wrong in this
case anyway. I should probably check that how mod_python.publisher
even uses it is sensible.

>         req.content_type = 'text/html'

If data has already been sent, ie., req.bytes_sent, is non zero,
then setting content length here will not do anything as it has
to be set before first write of data.

>         req.write(result)

Your callables must always ensure they return string objects.
In mod_python.publisher, it will at least convert non string objects
to strings and attempts to treat Unicode strings specially as well.

Problem with this code is if bytes were sent and result is None,
it will try and write result and die because it isn't a string.

>         return apache.OK
>     else:
>         req.log_error('Nothing returned')
>         return apache.HTTP_INTERNAL_SERVER_ERROR
> 
> 
> In advance, thanks for support !

Overall, I don't see why you couldn't use mod_python.publisher.
Yes, publisher provides more features, but if you set your code
up correctly, you would still get same result as what you are
aiming for without having to create your own handler.

Graham
From grahamd at dscpl.com.au  Tue Mar 28 19:20:30 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Mar 28 19:20:35 2006
Subject: [mod_python] Mod Python problems
Message-ID: <1143591630.21131@dscpl.user.openhosting.com>

gOLeM wrote ..
> Hello,
> 
> I know that you guys must have got this mail a thousand times, but i
> cant seem to find a solution anywhere. I have tried everything but
> couldnt get mod_python running.
> 
> I've downloaded the psp_site.tgz and put it in /var/www/html/psp_site
> and when i try to access it, i am getting the actual code instead of
> the webpage.
> The mod_python.so is loaded, but still i am not able to get psp running
> :(
> 
> Please help me.

Have you tried getting a simple test handler going first? Trying to
start out by using PSP site example is not a good way to go.

If you haven't tried a simple test handler first, work your way through:

  http://www.dscpl.com.au/articles/modpython-001.html

to get an idea how things work.

If you have got a simple test handler going, you need to be a bit more
specific about what snippet of Apache configuration you are using
to enable PSP example. Where it is, ie., global Apache config or in
.htaccess file etc.

Graham

From albert at compuscan.co.za  Wed Mar 29 02:17:08 2006
From: albert at compuscan.co.za (Albert Leibbrandt)
Date: Wed Mar 29 02:17:17 2006
Subject: [mod_python] Stylesheets
In-Reply-To: <ED55C179-5DB4-420C-977B-7B487122F16E@dscpl.com.au>
References: <4428E7F5.2060701@compuscan.co.za>
	<ED55C179-5DB4-420C-977B-7B487122F16E@dscpl.com.au>
Message-ID: <442A3474.90503@compuscan.co.za>


> >>  <Files *.css>
> >>  SetHandler None
> >> </Files>

Thanks Graham, that work like a charm

Cheers
Albert

From jcigar at ulb.ac.be  Wed Mar 29 02:21:47 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Wed Mar 29 02:21:50 2006
Subject: [mod_python] little problem with my handler
In-Reply-To: <1143591080.16032@dscpl.user.openhosting.com>
References: <1143591080.16032@dscpl.user.openhosting.com>
Message-ID: <442A358B.6010003@ulb.ac.be>

Many thanks for all those answers !


Graham Dumpleton wrote:
> A few comments on your handler.
>
> Julien Cigar wrote ..
>   
>> Hello,
>>
>> I'm writing my first home-made handler (inspired by mod_publisher).
>>     
>
> Writing a publisher like handler which allows arbitrary traversal of objects
> is non trivial. Get it wrong and you can expose yourself to potential security
> holes. Be warned, don't attempt it unless you appreciate what the issues
> are. ;-)
>
>   
I forgot to say that I don't want traversal of objects.
> I also think you mean't mod_python.publisher. The Apache mod_publisher
> module is used to perform substitutions on XML/HTML as well as
> implementing an alternative to SSI of mod_include.
>
>   
>> I wanted to do a "ruby on rails"-like dispatcher, so when I call : 
>> http://somehost.com/foo/bar it should call the bar() method of the class
>> (controller) foo which lives under controllers/
>> Please note that it is not at all complete, I'm just playing with it at
>> the moment ..
>>     
>
> Why cant you just use mod_python.publisher?
>
>   
I could (I've used it for a lot of projects here). In fact I wanted to 
understand mod_python more deeply by writing my own handler.
>> ...
>>
>> Here is the code of my handler:
>>
>> #!/usr/bin/python
>>
>> import sys
>>
>> from mod_python import apache, util
>>
>> sys.path.append('/home/jcigar/public_html/invasive_species/application')
>>     
>
> Modifying sys.path from handlers, even from global scope in module is
> bad. It can cause problems in a multithreaded MPM if mod_python tries to
> update sys.path at the same time.
>
> Further, if module reloading is enabled, everytime the module is
> reloaded the directory will be added to sys.path meaning it will grow
> and grow and grow with multiple occurrences of the same directory
> appearing.
>
>   
right... I forgot that
>> def handler(req):
>>
>>     req.allow_methods(["GET", "POST"])
>>    
>>     if req.method not in (["GET", "POST"]):
>>         raise apache.SERVER_RETURN, apache.HTTP_METHOD_NOT_ALLOWED
>>   
>>     (controller, method) = ("default", "index")
>>
>>     if req.path_info:
>>         path_info = req.path_info.strip('/').split('/')
>>
>>     if path_info[0].isalpha():
>>         controller = path_info[0]
>>
>>         if len(path_info) > 1 and path_info[1].isalpha():
>>             method = path_info[1]
>>     
>
> Like mod_python.publisher, you have gone down the path of allowing
> defaults and similarly don't deal with trailing slashes in a reasonable
> way. This causes various problems due to the fact that different URLs
> can be used to address the same resource. The different URLs can
> have varying numbers of slashes in them, which makes calculating
> relative URLs to another resource fiddly and error prone.
>   
Is there a "good" way to handle relative urls ?
>   
>>     config = req.get_config()
>>     (autoreload, log) = (int(config.get("PythonAutoReload", 1)), 
>> int(config.get("PythonDebug", 0)))
>>    
>>     try:
>>         module = apache.import_module('controllers.%s' % (controller, ),
>> autoreload=autoreload, log=log)
>>     
>
> Hope you don't expect autoreload to work on Python packages. It can be
> unreliable at best in publically released versions of mod_python and new
> module importer in future version will not support it. But then there
> are better ways of doing what you are doing when new importer is
> available as you will be able to load module by full path.
>
>   
so apache.import_module should not be used .. ?
>>     except ImportError:
>>         req.log_error('Cannot import controller %s' % (controller, ))
>>
>>     object = getattr(module, method)
>>     
>
> You don't reraise the ImportError exception or return any other sort
> of explicit error status. Thus, when module can't be imported, it will
> still try and access the method from the module, but module variable
> will not exist and so it will die.
>
>   
Yes, this handler is not complete at all (I was just playing a bit with)
> Luckily you don't allow arbitrary traversal and only allow method
> name to start with alphabetic character, so no issue with notional
> private stuff prefixed with underscore.
>
>   
>>     if callable(object):
>>         req.params = util.FieldStorage(req, keep_blank_values=1)
>>     
>
> It is traditional that if storing FieldStorage instance in request object
> that it be stored as req.form.
>
>   
ok :)
>>         result = util.apply_fs_data(object, req.params, req=req)
>>     else:
>>         req.log_error('%s is not callable' % (object, ))
>>         return apache.HTTP_INTERNAL_SERVER_ERROR
>>     
>
> Okay, so only allowing access to callable and not acess to data.
> More safe than mod_python.publisher in that respect.
>
>   
Yes, only to the function of the "controller" in fact. In the futur I'd 
like to do like Ruby on Rails or Django, with some regex patterns (see 
http://www.djangoproject.com/documentation/url_dispatch/)
>>     if result or req.bytes_sent or req.next:
>>     
>
> Do you understand what req.next attribute is? It probably isn't
> relevant to you and how you use it is probably wrong in this
> case anyway. I should probably check that how mod_python.publisher
> even uses it is sensible.
>
>   
>>         req.content_type = 'text/html'
>>     
>
> If data has already been sent, ie., req.bytes_sent, is non zero,
> then setting content length here will not do anything as it has
> to be set before first write of data.
>
>   
>>         req.write(result)
>>     
>
> Your callables must always ensure they return string objects.
> In mod_python.publisher, it will at least convert non string objects
> to strings and attempts to treat Unicode strings specially as well.
>
> Problem with this code is if bytes were sent and result is None,
> it will try and write result and die because it isn't a string.
>
>   
ok, so req.write(str(result))
>>         return apache.OK
>>     else:
>>         req.log_error('Nothing returned')
>>         return apache.HTTP_INTERNAL_SERVER_ERROR
>>
>>
>> In advance, thanks for support !
>>     
>
> Overall, I don't see why you couldn't use mod_python.publisher.
> Yes, publisher provides more features, but if you set your code
> up correctly, you would still get same result as what you are
> aiming for without having to create your own handler.
>
> Graham
>
>   


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
Work: jcigar@ulb.ac.be
Personal: mage@mordor.ath.cx

From jcigar at ulb.ac.be  Wed Mar 29 02:23:39 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Wed Mar 29 02:23:42 2006
Subject: [mod_python] Re: little problem with my handler
In-Reply-To: <1143587992.19909@dscpl.user.openhosting.com>
References: <1143587992.19909@dscpl.user.openhosting.com>
Message-ID: <442A35FB.1020008@ulb.ac.be>

The problem was that I used relative urls : "../css/screen.css", ... and 
that I didn't handle this in my handler ..
Is there a "good" way to do that easily ?

thanks

Graham Dumpleton wrote:
> There are possibly a few things in your handler which are questionable,
> but I'll get to that in a seperate email. As to the "Files" directive, please
> believe what people are telling you, the syntax you are using is plain
> wrong for the "Files" directive. To make it obvious, use the Deny
> directive so you get an obvious forbidden message back and try in
> turn:
>
>   <Files "*.css">
>   Deny from all
>   </Files>
>
>   <FilesMatch "\.(gif|jpe?g|png|css|html?)$">
>   Deny from all
>   </FilesMatch>
>
>   <Files ~ "\.(gif|jpe?g|png|css|html?)$">
>   Deny from all
>   </Files>
>
>   <Files "\.(gif|jpe?g|png|css|html?)$">
>   Deny from all
>   </Files>
>
> You will find that all will work to block access to the file except
> what you were using.
>
> Graham
>
> Julien Cigar wrote ..
>   
>> Same with <FilesMatch> ...
>> I think the problem comes from my handler itself .. it's my first one :)
>>
>>
>> Amand Tihon wrote:
>>     
>>> Le Mardi 28 Mars 2006 15:19, Julien Cigar a ?crit :
>>>   
>>>       
>>>>     <Files "\.(gif|jpe?g|png|css|html?)$">
>>>>         SetHandler None
>>>>     </Files>
>>>>     
>>>>         
>>> I think you want a <FilesMatch ...> directive here, instead of a <Files
>>>       
>> ...>
>>     
>>> The other solution is to use <Files ~ regexp> but FilesMatch is recommended
>>>       
>> in 
>>     
>>> apache's documentation.
>>>
>>> I hope this helps.
>>>
>>>   
>>> ------------------------------------------------------------------------
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>   
>>>       
>> -- 
>> Julien Cigar
>> Belgian Biodiversity Platform
>> http://www.biodiversity.be
>> Universit? Libre de Bruxelles
>> Campus de la Plaine CP 257
>> B?timent NO, Bureau 4 N4 115C (Niveau 4)
>> Boulevard du Triomphe, entr?e ULB 2
>> B-1050 Bruxelles
>> Work: jcigar@ulb.ac.be
>> Personal: mage@mordor.ath.cx
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>     


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
Work: jcigar@ulb.ac.be
Personal: mage@mordor.ath.cx

From mvanaswegen at gmail.com  Wed Mar 29 02:37:37 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Wed Mar 29 02:37:39 2006
Subject: [mod_python] Templates et. al.
In-Reply-To: <4429696F.8000605@jgassociates.ca>
References: <ffa39deb0603272242j10eff07vb0bbf4646d7d081a@mail.gmail.com>
	<4429696F.8000605@jgassociates.ca>
Message-ID: <ffa39deb0603282337k1993f694rdb52b02958b6cdfd@mail.gmail.com>

Hi Jim

Perhaps I need to rephrase the question. If you want to provide feedback to
the client based on his input you have options:
1. Use Javascript
2. Render a new page with feedback (reading the input variables and
presenting them)
3. Append to the feedback current page (request), without reading the
variables.

I've implemented two methods, I'm curios to see how other people have
approached and solved this problem.


Regards

Marinus


On 3/28/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
>
> marinus van aswegen wrote:
> > Hi All
> >
> > I'm trying to find a good pattern to do page updates. The use case is as
> > follow:
> > The user is presented with a page, the user enters data, the user is
> > provided with feedback e.g. validation errors, failure, success.
> >
> > I have implemented this in two ways, but I'd like to hear how others
> have
> > approached this problem.
> >
> > option 1:
> > create a page render function
> > create a page handler function
> > if there's validation problems call the render function with args e.g.
> > update status
> >
> > option 2:
> > create a page render function
> > create a page handler function
> > if there's validation problems render the page using the handler
> function
> > e.g. update status
> >
> > I prefer option 1, because it retains the user input and I don't have to
> > manually populate fields again (option 2) , however I get situations
> where
> > the new page is just appended below the previous page. Is there a way to
> > tell mod_python to clear the slate?
> >
> > This is how I render pages:
> >
> >     # load the appropriate templates, mangle and render
> >     req.content_type ='text/html'
> >     tmpl = psp.PSP(req, filename='template.html')
> >     content = psp.PSP(req, filename= 'welcome.html', vars = {} )
> >     tmpl.run ( vars = {'status': status, 'content': content } )
> >     return apache.OK
> >
>
> I'm not sure what you mean by "clear the slate", but if your page is
> getting rendered twice then you are calling your render function twice
> in the same request. There is not enough context in the code snippet
> above to really tell what is happening. Perhaps you could post a more
> complete example?
>
> Jim
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060329/b4747371/attachment.html
From grahamd at dscpl.com.au  Wed Mar 29 04:50:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Mar 29 04:50:53 2006
Subject: [mod_python] little problem with my handler
In-Reply-To: <442A358B.6010003@ulb.ac.be>
References: <1143591080.16032@dscpl.user.openhosting.com>
	<442A358B.6010003@ulb.ac.be>
Message-ID: <d62d35db84dfda4c587cf2430e229660@dscpl.com.au>

>>>     config = req.get_config()
>>>     (autoreload, log) = (int(config.get("PythonAutoReload", 1)), 
>>> int(config.get("PythonDebug", 0)))
>>>        try:
>>>         module = apache.import_module('controllers.%s' % 
>>> (controller, ),
>>> autoreload=autoreload, log=log)
>>>
>>
>> Hope you don't expect autoreload to work on Python packages. It can be
>> unreliable at best in publically released versions of mod_python and 
>> new
>> module importer in future version will not support it. But then there
>> are better ways of doing what you are doing when new importer is
>> available as you will be able to load module by full path.
>>
> so apache.import_module should not be used .. ?

Continue to use apache.import_module(), just accept that at the
moment it has a few issues which will hopefully be cleared up
in mod_python 3.3.

>>>     except ImportError:
>>>         req.log_error('Cannot import controller %s' % (controller, ))
>>>
>>>     object = getattr(module, method)
>>>
>>
>> You don't reraise the ImportError exception or return any other sort
>> of explicit error status. Thus, when module can't be imported, it will
>> still try and access the method from the module, but module variable
>> will not exist and so it will die.
>>
> Yes, this handler is not complete at all (I was just playing a bit 
> with)

Oh, forgot that if method doesn't exist, it will die. Better to
explicitly check and return not found error.

   if not hasattr(module, method):
     return apache.HTTP_NOT_FOUND

Another issue related to ImportError is that it doesn't distinguish
between the target file not being found and other sorts of import error
unless you try and match against the exception string looking for "No
module named". This is a short coming of apache.import_module() which
I'll have to check is addressed in the new importer. Ideally it should
return a derived exception of ImportError indicating not found, which is
distinct from other sorts of ImportError. That way you can use that
error as trigger for again returning HTTP not found. Only other way of
doing it at the moment is to check for the existence of the module code
file before it is imported.

>> Your callables must always ensure they return string objects.
>> In mod_python.publisher, it will at least convert non string objects
>> to strings and attempts to treat Unicode strings specially as well.
>>
>> Problem with this code is if bytes were sent and result is None,
>> it will try and write result and die because it isn't a string.
>>
>>
> ok, so req.write(str(result))

Probably better to use:

   if result is not None:
      req.write(str(result))

>> Like mod_python.publisher, you have gone down the path of allowing
>> defaults and similarly don't deal with trailing slashes in a 
>> reasonable
>> way. This causes various problems due to the fact that different URLs
>> can be used to address the same resource. The different URLs can
>> have varying numbers of slashes in them, which makes calculating
>> relative URLs to another resource fiddly and error prone.
>>
> Is there a "good" way to handle relative urls ?

Here is some code I have been playing with lately. I posted something
similar on list a while back, but it had one bug in it. Stick this in
a module somewhere and add to your Apache configuration:

   PythonHeaderParserHandler module_name::calculate_base_urls

It is intended to run as an earlier phase than content handler and it
will populate values in req.subprocess_env with absolute and relative
URLs to notional directory for script matched by Apache and directory
that the handler was configured to run for. Uses req.subprocess_env
instead of attributes of req as then can be used in files being
processed through SSI as well as Python handlers.

   <!--#if expr="${SIDEBAR_URL}" -->
   <link media="screen"\
    href="<!--#echo var="HANDLER_BASEURL_REL" 
-->styles/three_column.css"\
    type="text/css" rel="stylesheet" />'
   <!--#else -->
   <link media="screen"\
    href="<!--#echo var="HANDLER_BASEURL_REL" -->styles/two_column.css"\
    type="text/css" rel="stylesheet" />'
   <!--#endif -->
   <link media="print"\
    href="<!--#echo var="HANDLER_BASEURL_REL" -->styles/print_media.css"\
    type="text/css" rel="stylesheet" />'

Anyway, here is the actual code. The handler base url calculation will
not work if using mod_python 3.1.X on Win32. Thus, best to ensure you
are using mod_python 3.2.8. Note that for your code, the base url will
probably be above point in URL which names controller. You'll just have
to experiment with it.

import posixpath
import os

from mod_python import apache

def calculate_base_urls(req):

     # First normalise req.uri when using it as it will
     # preserve repeated slashes in it, whereas such
     # slashes are removed from req.path_info. We must
     # use normalisation function from posixpath and not
     # os.path as Apache always gaurantees to use POSIX
     # format and using os.path version will change
     # slashes to Win32 backslash.

     normalised_uri = posixpath.normpath(req.uri)

     # When normalising the path, it will throw away the
     # trailing slash, thus we need to put it back if it
     # appeared in the original.

     if normalised_uri:
         if normalised_uri != '/' and req.uri[-1] == '/':
             normalised_uri = normalised_uri + '/'

     # The req.path_info attribute was already normalised
     # above so can simply determine script path by
     # subtracting its length from normalised uri. Note
     # that the script path in this situation can be a
     # directory. In that situation it will have a
     # trailing slash to distinguish it from case whereby
     # script path identifies an actual file.

     if req.path_info:
         script_url = normalised_uri[:-len(req.path_info)]
     else:
         script_url = normalised_uri

     # A base url can now be calculated for the virtual
     # directory the script is contained in.

     script_baseurl_abs = posixpath.dirname(script_url)

     path = normalised_uri[len(script_baseurl_abs):]
     step = path.count('/') - 1

     if step:
         script_baseurl_rel = step * '../'
     else:
         script_baseurl_rel = './'

     # A base url can also be calculated which will
     # correspond to where the Python*Handler directive
     # was defined. This code will only work if
     # Python*Handler directive appeared in a Directory
     # directive and no wildcards were used in the path.
     # That is, it will not work if Python*Handler
     # directive appeared inside of a VirtualHost,
     # Location or Files directive. This is because
     # req.hlist.directory will not be set to a useable
     # value in the latter cases.

     if req.hlist.directory and os.path.isabs(req.hlist.directory):
         length = len(req.filename)
         length -= len(req.hlist.directory) - 1
         length += len(req.path_info or '')

         handler_baseurl_abs = normalised_uri[:-length] + '/'

     else:
         handler_baseurl_abs = '/'

     path = normalised_uri[len(handler_baseurl_abs):]
     step = path.count('/')

     if step:
         handler_baseurl_rel = step * '../'
     else:
         handler_baseurl_rel = './'

     # Populate the table of environment variables with
     # values. The environment variables table is used as
     # opposed to note tables or request object, as the
     # environment variables table is more easily useable
     # from SSI and other Apache modules.

     req.subprocess_env['SCRIPT_URL'] = script_url
     req.subprocess_env['SCRIPT_BASEURL_ABS'] = script_baseurl_abs
     req.subprocess_env['SCRIPT_BASEURL_REL'] = script_baseurl_rel
     req.subprocess_env['HANDLER_BASEURL_ABS'] = handler_baseurl_abs
     req.subprocess_env['HANDLER_BASEURL_REL'] = handler_baseurl_rel

     return apache.OK

From jim at qlf.com  Wed Mar 29 11:19:23 2006
From: jim at qlf.com (Jim Steil)
Date: Wed Mar 29 11:19:49 2006
Subject: [mod_python] Page display problems with FireFox
Message-ID: <000901c6534c$8db05000$800101df@qlf.local>

I'm having problems with my mod_python web app.  It works fine with IE, but
when I try to display my page in FireFox, I just see the HTML.  I realize
that this is probably not a mod_python issue, but recall seeing discussions
on this topic in the past.  I have taken the offending .html code and run it
through the http://validator.w3.org/ validator and it validates with no
errors.  If someone could give me a clue where to begin fighting this, I'd
really appreciate it.  I've checked the archives but can't seem to locate
the discussion that I remember reading.

 

            -Jim

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060329/1c6dc677/attachment.html
From jpg at jgassociates.ca  Wed Mar 29 11:24:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Mar 29 11:23:41 2006
Subject: [mod_python] Page display problems with FireFox
In-Reply-To: <000901c6534c$8db05000$800101df@qlf.local>
References: <000901c6534c$8db05000$800101df@qlf.local>
Message-ID: <442AB4C5.4050804@jgassociates.ca>

Jim Steil wrote:
> I'm having problems with my mod_python web app.  It works fine with IE, but
> when I try to display my page in FireFox, I just see the HTML.  I realize
> that this is probably not a mod_python issue, but recall seeing discussions
> on this topic in the past.  I have taken the offending .html code and run it
> through the http://validator.w3.org/ validator and it validates with no
> errors.  If someone could give me a clue where to begin fighting this, I'd
> really appreciate it.  I've checked the archives but can't seem to locate
> the discussion that I remember reading.

Have you set req.content_type = 'text/html'? IIRC Firefox is less 
forgiving if this is missing.

Jim
From jim at qlf.com  Wed Mar 29 11:49:28 2006
From: jim at qlf.com (Jim Steil)
Date: Wed Mar 29 11:51:57 2006
Subject: [mod_python] Page display problems with FireFox
In-Reply-To: <442AB4C5.4050804@jgassociates.ca>
Message-ID: <001c01c65350$c18d7480$800101df@qlf.local>

Thanks Jim, that was the problem.  Unfortunately, now I get to learn about
CSS inconsistencies between FireFox and IE.

	-Jim

Jim Steil
IT Manager
Quality Liquid Feeds
(608) 935-2345 x857
jim@qlf.com
 

-----Original Message-----
From: Jim Gallacher [mailto:jpg@jgassociates.ca] 
Sent: Wednesday, March 29, 2006 10:25 AM
To: Jim Steil
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Page display problems with FireFox

Jim Steil wrote:
> I'm having problems with my mod_python web app.  It works fine with IE,
but
> when I try to display my page in FireFox, I just see the HTML.  I realize
> that this is probably not a mod_python issue, but recall seeing
discussions
> on this topic in the past.  I have taken the offending .html code and run
it
> through the http://validator.w3.org/ validator and it validates with no
> errors.  If someone could give me a clue where to begin fighting this, I'd
> really appreciate it.  I've checked the archives but can't seem to locate
> the discussion that I remember reading.

Have you set req.content_type = 'text/html'? IIRC Firefox is less 
forgiving if this is missing.

Jim


From nlv11281 at natlab.research.philips.com  Thu Mar 30 04:27:18 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Thu Mar 30 04:27:49 2006
Subject: [mod_python] Templates et. al.
In-Reply-To: <ffa39deb0603282337k1993f694rdb52b02958b6cdfd@mail.gmail.com>
References: <ffa39deb0603272242j10eff07vb0bbf4646d7d081a@mail.gmail.com>	<4429696F.8000605@jgassociates.ca>
	<ffa39deb0603282337k1993f694rdb52b02958b6cdfd@mail.gmail.com>
Message-ID: <442BA476.9020507@natlab.research.philips.com>

I tend to do most work on the server side, for the simple reason that you have to (re)do your 
validation there anyway, because the client may be, deliberately or not, deceiving you.

The basic pattern I apply:
- Modifications are POSTed back to the same page handler (usually with an "action=insert" or similar 
item, usually attached to the submit button)
- The handler tries to apply the update/insert/delete. If there is any problem (e.g. concurrent 
update), this phase throws an exception. The exception is caught in the page handler and displayed 
near the top of the page. The page then renders as usual, with user-supplied input applied.
- The page redirects to the 'final' "thank you" style page. This prevents a user posting the same 
update twice with a reload.

-- 
Mike Looijmans
Philips Natlab / Topic Automation


marinus van aswegen wrote:

 > Hi Jim
 >
 > Perhaps I need to rephrase the question. If you want to provide feedback to the client based on 
his input you have options:
 > 1. Use Javascript
 > 2. Render a new page with feedback (reading the input variables and presenting them)
 > 3. Append to the feedback current page (request), without reading the variables.
 >
 > I've implemented two methods, I'm curios to see how other people have approached and solved this 
problem.
 >
 >
 > Regards
 >
 > Marinus
 >
 >
 > On 3/28/06, *Jim Gallacher* <jpg@jgassociates.ca <mailto:jpg@jgassociates.ca>> wrote:
 >
 >     marinus van aswegen wrote:
 >      > Hi All
 >      >
 >      > I'm trying to find a good pattern to do page updates. The use
 >     case is as
 >      > follow:
 >      > The user is presented with a page, the user enters data, the user is
 >      > provided with feedback e.g. validation errors, failure, success.
 >      >
 >      > I have implemented this in two ways, but I'd like to hear how
 >     others have
 >      > approached this problem.
 >      >
 >      > option 1:
 >      > create a page render function
 >      > create a page handler function
 >      > if there's validation problems call the render function with args
 >     e.g.
 >      > update status
 >      >
 >      > option 2:
 >      > create a page render function
 >      > create a page handler function
 >      > if there's validation problems render the page using the handler
 >     function
 >      > e.g. update status
 >      >
 >      > I prefer option 1, because it retains the user input and I don't
 >     have to
 >      > manually populate fields again (option 2) , however I get
 >     situations where
 >      > the new page is just appended below the previous page. Is there a
 >     way to
 >      > tell mod_python to clear the slate?
 >      >


From gdamjan at mail.net.mk  Thu Mar 30 08:52:17 2006
From: gdamjan at mail.net.mk (Damjan)
Date: Thu Mar 30 08:52:23 2006
Subject: [mod_python] WSGI server
Message-ID: <20060330135217.GA7738@legolas.on.net.mk>

I just added this to the mod_python FAQ
http://modpython.org/FAQ/faqw.py?req=show&file=faq03.029.htp
please review.

Also, will WSGI support become standard part of mod_python
(mod_python.wsgi)?


-- 
damjan | ??????
This is my jabber ID -->         damjan@bagra.net.mk 
 -- not my mail address, it's a Jabber ID --^ :)
From nick at dd.revealed.net  Thu Mar 30 09:43:26 2006
From: nick at dd.revealed.net (Nick)
Date: Thu Mar 30 09:43:39 2006
Subject: [mod_python] WSGI server
In-Reply-To: <20060330135217.GA7738@legolas.on.net.mk>
References: <20060330135217.GA7738@legolas.on.net.mk>
Message-ID: <442BEE8E.3000003@dd.revealed.net>

If anyone is interested in using WSGI with mod_python, I also have a generic
handler that I would appreciate any feedback on.

http://trac.gerf.org/pse/wiki/WSGIHandler

Thanks,
Nick

Damjan wrote:
> I just added this to the mod_python FAQ
> http://modpython.org/FAQ/faqw.py?req=show&file=faq03.029.htp
> please review.
> 
> Also, will WSGI support become standard part of mod_python
> (mod_python.wsgi)?
> 
> 

From crosseyedpenguin at cox.net  Thu Mar 30 10:35:07 2006
From: crosseyedpenguin at cox.net (Roger)
Date: Thu Mar 30 10:35:14 2006
Subject: [mod_python] Page display problems with FireFox
In-Reply-To: <000901c6534c$8db05000$800101df@qlf.local>
References: <000901c6534c$8db05000$800101df@qlf.local>
Message-ID: <442BFAAB.8060606@cox.net>

Jim Steil wrote:
>
> I?m having problems with my mod_python web app. It works fine with IE, 
> but when I try to display my page in FireFox, I just see the HTML. I 
> realize that this is probably not a mod_python issue, but recall 
> seeing discussions on this topic in the past. I have taken the 
> offending .html code and run it through the http://validator.w3.org/
>
>

You need to take a look at some of the Firefox development extensions. 
On Firefox, Tools, Extensions, Get More Extensions. Click on the 
Developer Tools and look around for the highly rated HTML, CSS, whatever 
you want tools. Once you have a few of these installed, you will never 
use IE for debugging again.

Roger

From jim at qlf.com  Thu Mar 30 10:39:22 2006
From: jim at qlf.com (Jim Steil)
Date: Thu Mar 30 10:39:44 2006
Subject: [mod_python] Page display problems with FireFox
In-Reply-To: <442BFAAB.8060606@cox.net>
Message-ID: <000301c65410$1e6eddf0$800101df@qlf.local>

Thanks Roger, I'll do that immediately!

	-Jim

Jim Steil
IT Manager
Quality Liquid Feeds

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Roger
Sent: Thursday, March 30, 2006 9:35 AM
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Page display problems with FireFox

Jim Steil wrote:
>
> I'm having problems with my mod_python web app. It works fine with IE, 
> but when I try to display my page in FireFox, I just see the HTML. I 
> realize that this is probably not a mod_python issue, but recall 
> seeing discussions on this topic in the past. I have taken the 
> offending .html code and run it through the http://validator.w3.org/
>
>

You need to take a look at some of the Firefox development extensions. 
On Firefox, Tools, Extensions, Get More Extensions. Click on the 
Developer Tools and look around for the highly rated HTML, CSS, whatever 
you want tools. Once you have a few of these installed, you will never 
use IE for debugging again.

Roger

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From al at ruiz.ws  Thu Mar 30 12:20:48 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Thu Mar 30 12:47:03 2006
Subject: [mod_python] from modPython import Cookie alternative in 2.7.11
Message-ID: <1143739248.3610.173.camel@localhost.localdomain>

Thanks a lot for helping me in my previous issue. I'm very impressed and
how clickly people reply.  I got the publisher handler working.

I have a different issue.  I migrated my existing working scripts from a
Debian system to:

Apache 1.3.33
Python 2.4.2
FreeBSD 4.7-RELEASE-p28
mod_python-2.7.11

But now the Cookie object does not exist. I'm assuming that the name
changed or the implementation is different.  What's the name of the new
object and how do I implement it?

Alberto



From fumanchu at amor.org  Thu Mar 30 12:57:48 2006
From: fumanchu at amor.org (Robert Brewer)
Date: Thu Mar 30 13:00:10 2006
Subject: [mod_python] WSGI server
Message-ID: <435DF58A933BA74397B42CDEB8145A8601143FEF@ex9.hostedexchange.local>

> Damjan wrote:
> > I just added this to the mod_python FAQ
> > http://modpython.org/FAQ/faqw.py?req=show&file=faq03.029.htp
> > please review.
> > 
> > Also, will WSGI support become standard part of mod_python
> > (mod_python.wsgi)?
> > 
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_pythonNick wrote:
> If anyone is interested in using WSGI with mod_python, I also 
> have a generic handler that I would appreciate any feedback on.
> 
> http://trac.gerf.org/pse/wiki/WSGIHandler




Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org 

From al at ruiz.ws  Thu Mar 30 12:38:06 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Thu Mar 30 13:04:16 2006
Subject: [mod_python] from modPython import Cookie alternative in 2.7.11
In-Reply-To: <1143739248.3610.173.camel@localhost.localdomain>
References: <1143739248.3610.173.camel@localhost.localdomain>
Message-ID: <1143740286.3610.177.camel@localhost.localdomain>

Ok, after reading some more it seems that the Cookie class is only part
of the 3.x version, but I thought that you needed to have Apache 2.x to
run the newer version.  Can I install modpython 3.1 on Apache 1.3?
could almost swear that my old server had that setup.  Or can I copy the
Cookie portion into a 2.7 setup?

On Thu, 2006-03-30 at 10:20 -0700, Alberto Ruiz wrote:
> Thanks a lot for helping me in my previous issue. I'm very impressed and
> how clickly people reply.  I got the publisher handler working.
> 
> I have a different issue.  I migrated my existing working scripts from a
> Debian system to:
> 
> Apache 1.3.33
> Python 2.4.2
> FreeBSD 4.7-RELEASE-p28
> mod_python-2.7.11
> 
> But now the Cookie object does not exist. I'm assuming that the name
> changed or the implementation is different.  What's the name of the new
> object and how do I implement it?
> 
> Alberto
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From fumanchu at amor.org  Thu Mar 30 13:02:44 2006
From: fumanchu at amor.org (Robert Brewer)
Date: Thu Mar 30 13:05:04 2006
Subject: [mod_python] WSGI server
Message-ID: <435DF58A933BA74397B42CDEB8145A860114401E@ex9.hostedexchange.local>

Bah. Frickin' Outlook.

Damjan wrote:
> I just added this to the mod_python FAQ
> http://modpython.org/FAQ/faqw.py?req=show&file=faq03.029.htp
> please review.
> 
> Also, will WSGI support become standard part of mod_python
> (mod_python.wsgi)?
 
and Nick replied:
> If anyone is interested in using WSGI with mod_python, I also 
> have a generic handler that I would appreciate any feedback on.
> 
> http://trac.gerf.org/pse/wiki/WSGIHandler

Looks good! A couple nits:

 1. mpm_query isn't available in all version of mod_python.
 2. I've found a passthrough file wrapper "plays nicer" with large
applications than a tempfile. YMMV.


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org 

From nick at dd.revealed.net  Thu Mar 30 14:08:56 2006
From: nick at dd.revealed.net (Nick)
Date: Thu Mar 30 14:09:02 2006
Subject: [mod_python] WSGI server
In-Reply-To: <435DF58A933BA74397B42CDEB8145A860114401E@ex9.hostedexchange.local>
References: <435DF58A933BA74397B42CDEB8145A860114401E@ex9.hostedexchange.local>
Message-ID: <442C2CC8.6040308@dd.revealed.net>

Hey, thanks for your feedback.

Robert Brewer wrote:
>  1. mpm_query isn't available in all version of mod_python.

Any versions of mod_python < 3.1?  If not, then I'm not particularly
interested in supporting them ;-)  But, point taken.  It's not going to work
with apache 1.3, even though it probably doesn't cost me much to check for
mpm_query to make it do so.  Oh, and the send_http_headers function.  Bah.

>  2. I've found a passthrough file wrapper "plays nicer" with large
> applications than a tempfile. YMMV.

Yeah, I have seen this mostly implemented that way and considered it.  The
main problem I have is that the spec says that wsgi.input is a file "like"
object.  A passthru wrapper doesn't let me seek or tell, and if you're
supporting large POST requests (e.g. file uploads), then a StringIO isn't
going to cut it.  I see where a passthru can be more efficient, but I prefer
the flexibility of the tempfile implementation.  You could put tempfiles on
a tmpfs mount, if you were interested in improving performance.

Nick






From amand.tihon at alrj.org  Thu Mar 30 15:41:25 2006
From: amand.tihon at alrj.org (Amand Tihon)
Date: Thu Mar 30 15:41:28 2006
Subject: [mod_python] Looking for mod_python debian packages
Message-ID: <200603302241.32883.amand.tihon@alrj.org>

Hi list.

I've recently been confronted with the obsolete status of current debian sid 
package of mod_python (version 3.1.3, probably with security fixes). 

Does anyone know of more up to date packages ?

I've built amd64 and i386 ones, but I'm not a Debian Developer and I don't 
know exactly how to use the various debhelper tools, or what to do to bump 
DH_COMPAT, etc. 

I would love to see that someone more with more knowledge in debian packaging 
than me has made correct packages :)

Thanks.

-- 
Amand Tihon
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060330/2c6a635b/attachment.bin
From nogradi at gmail.com  Thu Mar 30 16:57:07 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Thu Mar 30 16:57:11 2006
Subject: [mod_python] some statistics on mod_python
Message-ID: <5f56302b0603301357y33d3b912ubaa5572a7f62f74@mail.gmail.com>

I just came across this set of statistics listing the number of sites
using different Apache modules:

http://www.securityspace.com/s_survey/data/man.200602/apachemods.html

Php is way ahead, perl is 5th, mod_python is 12th which rank is not at
all bad concerning the not very long time mod_python has been around.
And the trend is also clear, mod_python is gaining momentum while perl
is on a sharp drop while php is declining slowly.

From jpg at jgassociates.ca  Thu Mar 30 17:24:10 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Mar 30 17:24:14 2006
Subject: [mod_python] from modPython import Cookie alternative in 2.7.11
In-Reply-To: <1143740286.3610.177.camel@localhost.localdomain>
References: <1143739248.3610.173.camel@localhost.localdomain>
	<1143740286.3610.177.camel@localhost.localdomain>
Message-ID: <442C5A8A.9040605@jgassociates.ca>

Alberto Ruiz wrote:
> Ok, after reading some more it seems that the Cookie class is only part
> of the 3.x version, but I thought that you needed to have Apache 2.x to
> run the newer version.  Can I install modpython 3.1 on Apache 1.3?

No.

> could almost swear that my old server had that setup.  Or can I copy the
> Cookie portion into a 2.7 setup?

I don't see anything in Cookie.py that is mod_python specific so go 
ahead and give it a shot. If you have any questions however, please make 
it clear that you are using Cookie.py from mod_python 3.x in mod_python 
2.7. It could get confusing otherwise.

Jim

> On Thu, 2006-03-30 at 10:20 -0700, Alberto Ruiz wrote:
> 
>>Thanks a lot for helping me in my previous issue. I'm very impressed and
>>how clickly people reply.  I got the publisher handler working.
>>
>>I have a different issue.  I migrated my existing working scripts from a
>>Debian system to:
>>
>>Apache 1.3.33
>>Python 2.4.2
>>FreeBSD 4.7-RELEASE-p28
>>mod_python-2.7.11
>>
>>But now the Cookie object does not exist. I'm assuming that the name
>>changed or the implementation is different.  What's the name of the new
>>object and how do I implement it?
>>
>>Alberto
>>
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Thu Mar 30 17:45:22 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Mar 30 17:45:24 2006
Subject: [mod_python] Looking for mod_python debian packages
In-Reply-To: <200603302241.32883.amand.tihon@alrj.org>
References: <200603302241.32883.amand.tihon@alrj.org>
Message-ID: <442C5F82.9070509@jgassociates.ca>

Amand Tihon wrote:
> Hi list.
> 
> I've recently been confronted with the obsolete status of current debian sid 
> package of mod_python (version 3.1.3, probably with security fixes). 

The 3.1.3 version in debian is actually the same as 3.1.4. For some 
reason they applied the security patch for 3.1.4 but didn't bump the 
version number.

> Does anyone know of more up to date packages ?

Not off hand.

> I've built amd64 and i386 ones, but I'm not a Debian Developer and I don't 
> know exactly how to use the various debhelper tools, or what to do to bump 
> DH_COMPAT, etc. 
> 
> I would love to see that someone more with more knowledge in debian packaging 
> than me has made correct packages :)

There was a thread about this late last year. Apparently the current 
maintainer no longer has the time. See:
http://www.modpython.org/pipermail/mod_python/2005-November/019548.html

Daniel Popowich indicated he might be interested in taking it over. I'm 
not sure if he had a chance to persue this any further, s perhaps he can 
comment?

Jim
From al at ruiz.ws  Thu Mar 30 17:50:43 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Thu Mar 30 18:16:56 2006
Subject: [mod_python] How do I specifiy a script called from a html include?
Message-ID: <1143759043.3610.204.camel@localhost.localdomain>

I have  another problem.  I have a html that calls a python script like
this:

<!--#include file="prop.py/index?type=2" -->

Apache does not know how to handle it.  I get the following error:

unable to include "prop.py/index?type=2" in parsed
file /home/john/www/mydomain.com/condos.html

Do I need to specify some path before the script or am I missing a
Apache directive?  

From grahamd at dscpl.com.au  Thu Mar 30 18:25:57 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 30 18:26:01 2006
Subject: [mod_python] How do I specifiy a script called from a html
	include?
Message-ID: <1143761157.374@dscpl.user.openhosting.com>

Alberto Ruiz wrote ..
> I have  another problem.  I have a html that calls a python script like
> this:
> 
> <!--#include file="prop.py/index?type=2" -->
> 
> Apache does not know how to handle it.  I get the following error:
> 
> unable to include "prop.py/index?type=2" in parsed
> file /home/john/www/mydomain.com/condos.html
> 
> Do I need to specify some path before the script or am I missing a
> Apache directive?  

You want "#include virtual", not "#include file".

  <!--#include virtual="/cgi-bin/example.cgi?argument=value" -->

The argument to "virtual" must be a full URL routed from root of web
server down, not a relative path.

Graham
From grahamd at dscpl.com.au  Thu Mar 30 18:35:07 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Mar 30 18:35:10 2006
Subject: [mod_python] How do I specifiy a script called from a htmlinclude?
Message-ID: <1143761707.5626@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> Alberto Ruiz wrote ..
> > I have  another problem.  I have a html that calls a python script like
> > this:
> > 
> > <!--#include file="prop.py/index?type=2" -->
> > 
> > Apache does not know how to handle it.  I get the following error:
> > 
> > unable to include "prop.py/index?type=2" in parsed
> > file /home/john/www/mydomain.com/condos.html
> > 
> > Do I need to specify some path before the script or am I missing a
> > Apache directive?  
> 
> You want "#include virtual", not "#include file".
> 
>   <!--#include virtual="/cgi-bin/example.cgi?argument=value" -->
> 
> The argument to "virtual" must be a full URL routed from root of web
> server down, not a relative path.

Whoops, it can be virtual:

  virtual
    The value is a (%-encoded) URL-path. If it does not begin with a
    slash (/) then it is taken to be relative to the current document.
    Note, that this does not print the size of any CGI output, but the
    size of the CGI script itself.

Graham
From al at ruiz.ws  Thu Mar 30 23:31:03 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Thu Mar 30 23:57:18 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
Message-ID: <1143779463.3610.236.camel@localhost.localdomain>

I'm getting a very wierd error when I call my python script.  Other
Python scripts seem to work fine but one in particular returns a 500
server error and the error does not show in the error-log under the
virtual domain that I'm working on but on the main error-log.  How can I
get additional debugging information to find out the problem?

In the error-log I get the following:
mod_python: (Re)importing mod_python.publisher from None

When I run my python script I get the following:

HTTP/1.1 500 Internal Server Error
Date: Fri, 31 Mar 2006 04:46:55 GMT
Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/2.4.2
mod_perl/1.29
Connection: close
Transfer-Encoding: chunked
Content-Type: text/html; charset=iso-8859-1

262
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML><HEAD>
<TITLE>500 Internal Server Error</TITLE>
</HEAD><BODY>
<H1>Internal Server Error</H1>
The server encountered an internal error or
misconfiguration and was unable to complete
your request.<P>
Please contact the server administrator,
 root@mydomain.com and inform them of the time the error occurred,
and anything you might have done that may have
caused the error.<P>
More information about this error may be available
in the server error log.<P>
<HR>
<ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
</BODY></HTML>

0

From grahamd at dscpl.com.au  Fri Mar 31 00:22:51 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 31 00:22:55 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
Message-ID: <1143782571.10074@dscpl.user.openhosting.com>

Alberto Ruiz wrote ..
> I'm getting a very wierd error when I call my python script.  Other
> Python scripts seem to work fine but one in particular returns a 500
> server error and the error does not show in the error-log under the
> virtual domain that I'm working on but on the main error-log.  How can
> I
> get additional debugging information to find out the problem?
> 
> In the error-log I get the following:
> mod_python: (Re)importing mod_python.publisher from None

In mod_python 2.7.11, this message possibly doesn't mean much.

> When I run my python script I get the following:
> 
> HTTP/1.1 500 Internal Server Error
> Date: Fri, 31 Mar 2006 04:46:55 GMT
> Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/2.4.2
> mod_perl/1.29
> Connection: close
> Transfer-Encoding: chunked
> Content-Type: text/html; charset=iso-8859-1
> 
> 262
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> <HTML><HEAD>
> <TITLE>500 Internal Server Error</TITLE>
> </HEAD><BODY>
> <H1>Internal Server Error</H1>
> The server encountered an internal error or
> misconfiguration and was unable to complete
> your request.<P>
> Please contact the server administrator,
>  root@mydomain.com and inform them of the time the error occurred,
> and anything you might have done that may have
> caused the error.<P>
> More information about this error may be available
> in the server error log.<P>
> <HR>
> <ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
> </BODY></HTML>
> 
> 0

This message in mod_python 2.7.11 with no message in error log
generally means that your published function doesn't return anything.

Can you post the most minimal publisher function which shows the
problem?

Graham
From grahamd at dscpl.com.au  Fri Mar 31 00:50:55 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 31 00:50:59 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
Message-ID: <1143784255.24663@dscpl.user.openhosting.com>

FWIW, a bug report related to this is:

  http://issues.apache.org/jira/browse/MODPYTHON-14

It is probably not the same issue as you have no content before
the 500 response, but all linked to the lack of a non empty non
None return value from the published function.

Graham

Graham Dumpleton wrote ..
> Alberto Ruiz wrote ..
> > I'm getting a very wierd error when I call my python script.  Other
> > Python scripts seem to work fine but one in particular returns a 500
> > server error and the error does not show in the error-log under the
> > virtual domain that I'm working on but on the main error-log.  How can
> > I
> > get additional debugging information to find out the problem?
> > 
> > In the error-log I get the following:
> > mod_python: (Re)importing mod_python.publisher from None
> 
> In mod_python 2.7.11, this message possibly doesn't mean much.
> 
> > When I run my python script I get the following:
> > 
> > HTTP/1.1 500 Internal Server Error
> > Date: Fri, 31 Mar 2006 04:46:55 GMT
> > Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/2.4.2
> > mod_perl/1.29
> > Connection: close
> > Transfer-Encoding: chunked
> > Content-Type: text/html; charset=iso-8859-1
> > 
> > 262
> > <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> > <HTML><HEAD>
> > <TITLE>500 Internal Server Error</TITLE>
> > </HEAD><BODY>
> > <H1>Internal Server Error</H1>
> > The server encountered an internal error or
> > misconfiguration and was unable to complete
> > your request.<P>
> > Please contact the server administrator,
> >  root@mydomain.com and inform them of the time the error occurred,
> > and anything you might have done that may have
> > caused the error.<P>
> > More information about this error may be available
> > in the server error log.<P>
> > <HR>
> > <ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
> > </BODY></HTML>
> > 
> > 0
> 
> This message in mod_python 2.7.11 with no message in error log
> generally means that your published function doesn't return anything.
> 
> Can you post the most minimal publisher function which shows the
> problem?
> 
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From al at ruiz.ws  Fri Mar 31 01:04:32 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Fri Mar 31 01:30:47 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <1143784255.24663@dscpl.user.openhosting.com>
References: <1143784255.24663@dscpl.user.openhosting.com>
Message-ID: <1143785072.3609.254.camel@localhost.localdomain>

Things are looking better.  I added the 'return " "' at the end of the
function and the 500 error went away. But now I get the following:

Using Firefox browser:

userq=update user set SID='jtNoKg8ts8BKtqe01rvBuFVIuN0z80Dg' where
name='test' and password='123'<head><meta http-equiv='refresh'
content='0;url=BB.html'></head>HTTP/1.1 200 OK
Date: Fri, 31 Mar 2006 06:21:02 GMT
Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/2.4.2
mod_perl/1.29
Cache-Control: no-cache="set-cookie"
Set-Cookie: sid=jtNoKg8ts8BKtqe01rvBuFVIuN0z80Dg; expires=Fri,
31-Mar-2006 16:21:02 GMT
Keep-Alive: timeout=15, max=100
Connection: Keep-Alive
Transfer-Encoding: chunked
Content-Type: text/html

1
 
0


And from MS Internet Explorer, I get a black page. Which tells me that
the <head><meta http-equiv='refresh' content='0;url=BB.html'></head>
is not working from within a script.  What am I missing to get it to
execute or is there another way to acomplish the same thing?

To complicate things a little bit more. The BB.html has just the
following:
<head><meta http-equiv='refresh' content='0;url=myscri.py/index'></head>

So I guess neither meta code is been evaluated.

On Fri, 2006-03-31 at 00:50 -0500, Graham Dumpleton wrote:
> FWIW, a bug report related to this is:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-14
> 
> It is probably not the same issue as you have no content before
> the 500 response, but all linked to the lack of a non empty non
> None return value from the published function.
> 
> Graham
> 
> Graham Dumpleton wrote ..
> > Alberto Ruiz wrote ..
> > > I'm getting a very wierd error when I call my python script.  Other
> > > Python scripts seem to work fine but one in particular returns a 500
> > > server error and the error does not show in the error-log under the
> > > virtual domain that I'm working on but on the main error-log.  How can
> > > I
> > > get additional debugging information to find out the problem?
> > > 
> > > In the error-log I get the following:
> > > mod_python: (Re)importing mod_python.publisher from None
> > 
> > In mod_python 2.7.11, this message possibly doesn't mean much.
> > 
> > > When I run my python script I get the following:
> > > 
> > > HTTP/1.1 500 Internal Server Error
> > > Date: Fri, 31 Mar 2006 04:46:55 GMT
> > > Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/2.4.2
> > > mod_perl/1.29
> > > Connection: close
> > > Transfer-Encoding: chunked
> > > Content-Type: text/html; charset=iso-8859-1
> > > 
> > > 262
> > > <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> > > <HTML><HEAD>
> > > <TITLE>500 Internal Server Error</TITLE>
> > > </HEAD><BODY>
> > > <H1>Internal Server Error</H1>
> > > The server encountered an internal error or
> > > misconfiguration and was unable to complete
> > > your request.<P>
> > > Please contact the server administrator,
> > >  root@mydomain.com and inform them of the time the error occurred,
> > > and anything you might have done that may have
> > > caused the error.<P>
> > > More information about this error may be available
> > > in the server error log.<P>
> > > <HR>
> > > <ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
> > > </BODY></HTML>
> > > 
> > > 0
> > 
> > This message in mod_python 2.7.11 with no message in error log
> > generally means that your published function doesn't return anything.
> > 
> > Can you post the most minimal publisher function which shows the
> > problem?
> > 
> > Graham
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Fri Mar 31 03:32:45 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 31 03:32:58 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <1143783308.3609.245.camel@localhost.localdomain>
References: <1143782571.10074@dscpl.user.openhosting.com>
	<1143783308.3609.245.camel@localhost.localdomain>
Message-ID: <A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>

Remember to keep followups on mailing list. :-)

A few comments on code:

On 31/03/2006, at 3:35 PM, Alberto Ruiz wrote:

> I added debug code in my Python script that writes to a file at
> different stages of the script.  The script executes successfully
> without any errors, and my debug writes show up fine in the debug  
> file.
> In any case here is a snippet of my script:
>
> global DB
> import sys
> sys.path.append('/home/john/www/mydomain.com')

You shouldn't append to sys.path explicitly in modules because every
time the module is reloaded, it will be extended, thus growing and
growing the path with the same directory.

> import DBconnectpropman
> import ZWF
> reload(ZWF)

Huh????

> import time,random,string
> global DATEBOX
> from mod_python import Cookie
>
> def index (req,LLRuser='',LLRpw=''):
> 	debugfile = open("/home/john/www/mydomain.com/debug.txt", "a")
> 	debugfile.write("Begining of index function\n")
> 	global R; R=req; R.content_type="text/html"

You should not store the request object in a global variable. If you  
ever move
to mod_python 3.X and use a multithreaded MPM it will break as multiple
threads may execute within the same module as the same time.

> 	cur=DBconnectpropman.DB.cursor()
> 	sidrefreshing=0
> 	ZWF.R=R
> 	global SID;SID=''
> 	global UID;UID=''
> 	cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
> secret='LLR14222222')
> 	if LLRuser!='' and LLRpw!='':  # login attempt
> 		if string.find(LLRuser,"@")!=-1: #client login attempt
> 			cur.execute("select clientid,name,password from client where
> email='"+LLRuser+"'")
> 			userrs=cur.fetchone()
> 			if str(userrs)!='None':
> 				LLRuser=userrs[1]
> 				usertable='client'
> 		else:
> 			debugfile.write("It is an admin user\n")
> 			cur.execute("select * from user where name='"+LLRuser+"' and
> password='"+LLRpw+"'")
> 			userrs=cur.fetchone()
> 			usertable='user'
> 			debugfile.write("admin user section.\n")
> 		if str(userrs)!='None': #login success create session key, update  
> user
> record, sett sid cookie
> 			debugfile.write("userrs is not None.\n")
> 			SID=''
> 			for n in range(0,32):
> 				x=random.randint(48,108)
> 				if x>57:x+=8
> 				if x>90:x+=6
> 				SID+=chr(x)
> 			cookie = Cookie.Cookie('sid', SID); cookie.expires = time.time() +
> 36000; Cookie.add_cookie(R, cookie)
> 			q="update "+usertable+" set SID='"+SID+"' where name='"+LLRuser+"'
> and password='"+LLRpw+"'"

In mod_python 2.7.X you must flush out the headers before you write  
any data
to the response. This is why the order of your stuff is mucked up.

   req.send_http_header()

> 			R.write("userq="+q)
> 			cur.execute(q)
> 			debugfile.write("Before calling BB.html.\n")
> 			#R.write("<head><meta http-equiv='refresh'
> content='0;url=BB.html'></head>")
> 			debugfile.write("AFTER calling BB.html.\n")
> 			sidrefreshing=1
> 			debugfile.write("END of userrs is not None.\n")
> 	debugfile.write("Before closing debug file\n")
> 	debugfile.close()
>
>
> I thought that maybe the meta http-equiv was the problem so I  
> commented
> out but I still get the error.
>
>
>
> On Fri, 2006-03-31 at 00:22 -0500, Graham Dumpleton wrote:
>> Alberto Ruiz wrote ..
>>> I'm getting a very wierd error when I call my python script.  Other
>>> Python scripts seem to work fine but one in particular returns a 500
>>> server error and the error does not show in the error-log under the
>>> virtual domain that I'm working on but on the main error-log.   
>>> How can
>>> I
>>> get additional debugging information to find out the problem?
>>>
>>> In the error-log I get the following:
>>> mod_python: (Re)importing mod_python.publisher from None
>>
>> In mod_python 2.7.11, this message possibly doesn't mean much.
>>
>>> When I run my python script I get the following:
>>>
>>> HTTP/1.1 500 Internal Server Error
>>> Date: Fri, 31 Mar 2006 04:46:55 GMT
>>> Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/ 
>>> 2.4.2
>>> mod_perl/1.29
>>> Connection: close
>>> Transfer-Encoding: chunked
>>> Content-Type: text/html; charset=iso-8859-1
>>>
>>> 262
>>> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
>>> <HTML><HEAD>
>>> <TITLE>500 Internal Server Error</TITLE>
>>> </HEAD><BODY>
>>> <H1>Internal Server Error</H1>
>>> The server encountered an internal error or
>>> misconfiguration and was unable to complete
>>> your request.<P>
>>> Please contact the server administrator,
>>>  root@mydomain.com and inform them of the time the error occurred,
>>> and anything you might have done that may have
>>> caused the error.<P>
>>> More information about this error may be available
>>> in the server error log.<P>
>>> <HR>
>>> <ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
>>> </BODY></HTML>
>>>
>>> 0
>>
>> This message in mod_python 2.7.11 with no message in error log
>> generally means that your published function doesn't return anything.
>>
>> Can you post the most minimal publisher function which shows the
>> problem?
>>
>> Graham
>>

From jpg at jgassociates.ca  Fri Mar 31 07:18:05 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 31 07:18:20 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
References: <1143782571.10074@dscpl.user.openhosting.com>	<1143783308.3609.245.camel@localhost.localdomain>
	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
Message-ID: <442D1DFD.9060305@jgassociates.ca>

Graham Dumpleton wrote:
> Remember to keep followups on mailing list. :-)
> 
> A few comments on code:
> 
> On 31/03/2006, at 3:35 PM, Alberto Ruiz wrote:
> 
>> I added debug code in my Python script that writes to a file at
>> different stages of the script.  The script executes successfully
>> without any errors, and my debug writes show up fine in the debug  file.
>> In any case here is a snippet of my script:
>>
>> global DB
>> import sys
>> sys.path.append('/home/john/www/mydomain.com')
> 
> 
> You shouldn't append to sys.path explicitly in modules because every
> time the module is reloaded, it will be extended, thus growing and
> growing the path with the same directory.
> 
>> import DBconnectpropman
>> import ZWF
>> reload(ZWF)
> 
> 
> Huh????
> 
>> import time,random,string
>> global DATEBOX
>> from mod_python import Cookie
>>
>> def index (req,LLRuser='',LLRpw=''):
>>     debugfile = open("/home/john/www/mydomain.com/debug.txt", "a")
>>     debugfile.write("Begining of index function\n")
>>     global R; R=req; R.content_type="text/html"
> 
> 
> You should not store the request object in a global variable. If you  
> ever move
> to mod_python 3.X and use a multithreaded MPM it will break as multiple
> threads may execute within the same module as the same time.
> 
>>     cur=DBconnectpropman.DB.cursor()
>>     sidrefreshing=0
>>     ZWF.R=R
>>     global SID;SID=''
>>     global UID;UID=''
>>     cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
>> secret='LLR14222222')
>>     if LLRuser!='' and LLRpw!='':  # login attempt
>>         if string.find(LLRuser,"@")!=-1: #client login attempt
>>             cur.execute("select clientid,name,password from client where
>> email='"+LLRuser+"'")
>>             userrs=cur.fetchone()
>>             if str(userrs)!='None':
>>                 LLRuser=userrs[1]
>>                 usertable='client'
>>         else:
>>             debugfile.write("It is an admin user\n")
>>             cur.execute("select * from user where name='"+LLRuser+"' and
>> password='"+LLRpw+"'")
>>             userrs=cur.fetchone()
>>             usertable='user'
>>             debugfile.write("admin user section.\n")
>>         if str(userrs)!='None': #login success create session key, 
>> update  user
>> record, sett sid cookie
>>             debugfile.write("userrs is not None.\n")
>>             SID=''
>>             for n in range(0,32):
>>                 x=random.randint(48,108)
>>                 if x>57:x+=8
>>                 if x>90:x+=6
>>                 SID+=chr(x)
>>             cookie = Cookie.Cookie('sid', SID); cookie.expires = 
>> time.time() +
>> 36000; Cookie.add_cookie(R, cookie)
>>             q="update "+usertable+" set SID='"+SID+"' where 
>> name='"+LLRuser+"'
>> and password='"+LLRpw+"'"
> 
> 
> In mod_python 2.7.X you must flush out the headers before you write  any 
> data
> to the response. This is why the order of your stuff is mucked up.
> 
>   req.send_http_header()
> 
>>             R.write("userq="+q)
>>             cur.execute(q)
>>             debugfile.write("Before calling BB.html.\n")
>>             #R.write("<head><meta http-equiv='refresh'
>> content='0;url=BB.html'></head>")
>>             debugfile.write("AFTER calling BB.html.\n")
>>             sidrefreshing=1
>>             debugfile.write("END of userrs is not None.\n")
>>     debugfile.write("Before closing debug file\n")
>>     debugfile.close()
>>
>>
>> I thought that maybe the meta http-equiv was the problem so I  commented
>> out but I still get the error.
>>
>>
>>
>> On Fri, 2006-03-31 at 00:22 -0500, Graham Dumpleton wrote:
>>
>>> Alberto Ruiz wrote ..
>>>
>>>> I'm getting a very wierd error when I call my python script.  Other
>>>> Python scripts seem to work fine but one in particular returns a 500
>>>> server error and the error does not show in the error-log under the
>>>> virtual domain that I'm working on but on the main error-log.   How can
>>>> I
>>>> get additional debugging information to find out the problem?
>>>>
>>>> In the error-log I get the following:
>>>> mod_python: (Re)importing mod_python.publisher from None
>>>
>>>
>>> In mod_python 2.7.11, this message possibly doesn't mean much.
>>>
>>>> When I run my python script I get the following:
>>>>
>>>> HTTP/1.1 500 Internal Server Error
>>>> Date: Fri, 31 Mar 2006 04:46:55 GMT
>>>> Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/ 2.4.2
>>>> mod_perl/1.29
>>>> Connection: close
>>>> Transfer-Encoding: chunked
>>>> Content-Type: text/html; charset=iso-8859-1
>>>>
>>>> 262
>>>> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
>>>> <HTML><HEAD>
>>>> <TITLE>500 Internal Server Error</TITLE>
>>>> </HEAD><BODY>
>>>> <H1>Internal Server Error</H1>
>>>> The server encountered an internal error or
>>>> misconfiguration and was unable to complete
>>>> your request.<P>
>>>> Please contact the server administrator,
>>>>  root@mydomain.com and inform them of the time the error occurred,
>>>> and anything you might have done that may have
>>>> caused the error.<P>
>>>> More information about this error may be available
>>>> in the server error log.<P>
>>>> <HR>
>>>> <ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
>>>> </BODY></HTML>
>>>>
>>>> 0
>>>
>>>
>>> This message in mod_python 2.7.11 with no message in error log
>>> generally means that your published function doesn't return anything.
>>>
>>> Can you post the most minimal publisher function which shows the
>>> problem?
>>>
>>> Graham
>>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Fri Mar 31 07:44:31 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 31 07:44:17 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
References: <1143782571.10074@dscpl.user.openhosting.com>	<1143783308.3609.245.camel@localhost.localdomain>
	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
Message-ID: <442D242F.7070202@jgassociates.ca>

(Oops, let me try that again).

Not directly related to your 500 error, but hopefully you'll find my 
suggestions useful in improving your code.

>> import time,random,string
>> global DATEBOX
>> from mod_python import Cookie
>>
>> def index (req,LLRuser='',LLRpw=''):
>>     debugfile = open("/home/john/www/mydomain.com/debug.txt", "a")
>>     debugfile.write("Begining of index function\n")
>>     global R; R=req; R.content_type="text/html"

Avoid putting multiple statements on one line, as it's not considered 
good python style. Personally I think it's bad C style as well. In my 
experience it makes it harder to track down bugs.

> 
> You should not store the request object in a global variable. If you  
> ever move
> to mod_python 3.X and use a multithreaded MPM it will break as multiple
> threads may execute within the same module as the same time.
> 
>>     cur=DBconnectpropman.DB.cursor()
>>     sidrefreshing=0
>>     ZWF.R=R
>>     global SID;SID=''
>>     global UID;UID=''
>>     cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
>> secret='LLR14222222')
>>     if LLRuser!='' and LLRpw!='':  # login attempt
>>         if string.find(LLRuser,"@")!=-1: #client login attempt
>>             cur.execute("select clientid,name,password from client where
>> email='"+LLRuser+"'")

WARING! Potential sql injection attack.

You are leaving yourself open to a sql injection attack. Never trust 
user provided data. You can avoid this problem by letting the python DBI 
do the work for you. This will properly escape the content of LLRuser:

cur.execute("select clientid,name,password from client where email=%s" 
,LLRuser)

Note that you don't need to enclose the %s in single quotes here. The 
DBI takes care of it for you.

>>                 x=random.randint(48,108)
>>                 if x>57:x+=8
>>                 if x>90:x+=6
>>                 SID+=chr(x)
>>             cookie = Cookie.Cookie('sid', SID); cookie.expires = 
>> time.time() +
>> 36000; Cookie.add_cookie(R, cookie)
>>             q="update "+usertable+" set SID='"+SID+"' where 
>> name='"+LLRuser+"'
>> and password='"+LLRpw+"'"

This gets hard to read (and debug) with all the single and double quotes 
mixed together. At a quick glance it's hard to differentiate the strings 
from the variables. Try something like this:

q = "update %s set SID = '%s' where name = '%s' and password = '%s'" % 
(usertable, SID, LLRuser, LLRpw)

Using "+" to concatenate strings is inefficient in python and generally 
avoid. For short strings it's not likely an issue, but I just want to 
make sure you are aware.

Of course *using* q in a sql query still leaves you open to a sql 
injection attack ;).

Jim


From al at ruiz.ws  Fri Mar 31 08:24:05 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Fri Mar 31 08:50:24 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <442D242F.7070202@jgassociates.ca>
References: <1143782571.10074@dscpl.user.openhosting.com>
	<1143783308.3609.245.camel@localhost.localdomain>
	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
	<442D242F.7070202@jgassociates.ca>
Message-ID: <1143811445.3610.268.camel@localhost.localdomain>

I really appreciate all of your feedback and help a lot on resolving my
issues.  I agree with the coding problems, but did I miss it somewhere?
Nobody addressed the issue why the meta tag is not being processed.  The
code was working fine on a Debian system as I mentioned in an earlier
thread.   I appreciate your patience, eventhough I'm a Python
programmer, I didn't write the code or had any previous experience on
writing web applications in Python.   I'm just helping a frustrated
friend who insists that the code was working before on a Debian system
and now it is not on a Freebsd one.    

  


On Fri, 2006-03-31 at 07:44 -0500, Jim Gallacher wrote:
> (Oops, let me try that again).
> 
> Not directly related to your 500 error, but hopefully you'll find my 
> suggestions useful in improving your code.
> 
> >> import time,random,string
> >> global DATEBOX
> >> from mod_python import Cookie
> >>
> >> def index (req,LLRuser='',LLRpw=''):
> >>     debugfile = open("/home/john/www/mydomain.com/debug.txt", "a")
> >>     debugfile.write("Begining of index function\n")
> >>     global R; R=req; R.content_type="text/html"
> 
> Avoid putting multiple statements on one line, as it's not considered 
> good python style. Personally I think it's bad C style as well. In my 
> experience it makes it harder to track down bugs.
> 
> > 
> > You should not store the request object in a global variable. If you  
> > ever move
> > to mod_python 3.X and use a multithreaded MPM it will break as multiple
> > threads may execute within the same module as the same time.
> > 
> >>     cur=DBconnectpropman.DB.cursor()
> >>     sidrefreshing=0
> >>     ZWF.R=R
> >>     global SID;SID=''
> >>     global UID;UID=''
> >>     cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
> >> secret='LLR14222222')
> >>     if LLRuser!='' and LLRpw!='':  # login attempt
> >>         if string.find(LLRuser,"@")!=-1: #client login attempt
> >>             cur.execute("select clientid,name,password from client where
> >> email='"+LLRuser+"'")
> 
> WARING! Potential sql injection attack.
> 
> You are leaving yourself open to a sql injection attack. Never trust 
> user provided data. You can avoid this problem by letting the python DBI 
> do the work for you. This will properly escape the content of LLRuser:
> 
> cur.execute("select clientid,name,password from client where email=%s" 
> ,LLRuser)
> 
> Note that you don't need to enclose the %s in single quotes here. The 
> DBI takes care of it for you.
> 
> >>                 x=random.randint(48,108)
> >>                 if x>57:x+=8
> >>                 if x>90:x+=6
> >>                 SID+=chr(x)
> >>             cookie = Cookie.Cookie('sid', SID); cookie.expires = 
> >> time.time() +
> >> 36000; Cookie.add_cookie(R, cookie)
> >>             q="update "+usertable+" set SID='"+SID+"' where 
> >> name='"+LLRuser+"'
> >> and password='"+LLRpw+"'"
> 
> This gets hard to read (and debug) with all the single and double quotes 
> mixed together. At a quick glance it's hard to differentiate the strings 
> from the variables. Try something like this:
> 
> q = "update %s set SID = '%s' where name = '%s' and password = '%s'" % 
> (usertable, SID, LLRuser, LLRpw)
> 
> Using "+" to concatenate strings is inefficient in python and generally 
> avoid. For short strings it's not likely an issue, but I just want to 
> make sure you are aware.
> 
> Of course *using* q in a sql query still leaves you open to a sql 
> injection attack ;).
> 
> Jim
> 
> 
> 

From al at ruiz.ws  Fri Mar 31 08:36:57 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Fri Mar 31 09:03:14 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <442D1DFD.9060305@jgassociates.ca>
References: <1143782571.10074@dscpl.user.openhosting.com>
	<1143783308.3609.245.camel@localhost.localdomain>
	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
	<442D1DFD.9060305@jgassociates.ca>
Message-ID: <1143812217.3610.279.camel@localhost.localdomain>

I had to append the path because I was getting the error that import
DBconnectpropman could not be found.  Somehow the path gets lost.  I
also try adding the following to the httpd.conf:

PythonPath "sys.path+['/home/brianheadrentals/www/brianheadrentals.com>'
]"

But it didn't make a difference.   They are about 10 python scripts for
the whole site and for each one if I don't do the sys.path.append it
fails to find it.  Is there another way to fix it?

In regards to flushing out the headers. You mean that before doing:

R.write("<head><meta http-equiv='refresh'
content='0;url=BB.html'></head>")

I should do:

R.send_http_header()

right?

On Fri, 2006-03-31 at 07:18 -0500, Jim Gallacher wrote:
> Graham Dumpleton wrote:
> > Remember to keep followups on mailing list. :-)
> > 
> > A few comments on code:
> > 
> > On 31/03/2006, at 3:35 PM, Alberto Ruiz wrote:
> > 
> >> I added debug code in my Python script that writes to a file at
> >> different stages of the script.  The script executes successfully
> >> without any errors, and my debug writes show up fine in the debug  file.
> >> In any case here is a snippet of my script:
> >>
> >> global DB
> >> import sys
> >> sys.path.append('/home/john/www/mydomain.com')
> > 
> > 
> > You shouldn't append to sys.path explicitly in modules because every
> > time the module is reloaded, it will be extended, thus growing and
> > growing the path with the same directory.
> > 
> >> import DBconnectpropman
> >> import ZWF
> >> reload(ZWF)
> > 
> > 
> > Huh????
> > 
> >> import time,random,string
> >> global DATEBOX
> >> from mod_python import Cookie
> >>
> >> def index (req,LLRuser='',LLRpw=''):
> >>     debugfile = open("/home/john/www/mydomain.com/debug.txt", "a")
> >>     debugfile.write("Begining of index function\n")
> >>     global R; R=req; R.content_type="text/html"
> > 
> > 
> > You should not store the request object in a global variable. If you  
> > ever move
> > to mod_python 3.X and use a multithreaded MPM it will break as multiple
> > threads may execute within the same module as the same time.
> > 
> >>     cur=DBconnectpropman.DB.cursor()
> >>     sidrefreshing=0
> >>     ZWF.R=R
> >>     global SID;SID=''
> >>     global UID;UID=''
> >>     cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
> >> secret='LLR14222222')
> >>     if LLRuser!='' and LLRpw!='':  # login attempt
> >>         if string.find(LLRuser,"@")!=-1: #client login attempt
> >>             cur.execute("select clientid,name,password from client where
> >> email='"+LLRuser+"'")
> >>             userrs=cur.fetchone()
> >>             if str(userrs)!='None':
> >>                 LLRuser=userrs[1]
> >>                 usertable='client'
> >>         else:
> >>             debugfile.write("It is an admin user\n")
> >>             cur.execute("select * from user where name='"+LLRuser+"' and
> >> password='"+LLRpw+"'")
> >>             userrs=cur.fetchone()
> >>             usertable='user'
> >>             debugfile.write("admin user section.\n")
> >>         if str(userrs)!='None': #login success create session key, 
> >> update  user
> >> record, sett sid cookie
> >>             debugfile.write("userrs is not None.\n")
> >>             SID=''
> >>             for n in range(0,32):
> >>                 x=random.randint(48,108)
> >>                 if x>57:x+=8
> >>                 if x>90:x+=6
> >>                 SID+=chr(x)
> >>             cookie = Cookie.Cookie('sid', SID); cookie.expires = 
> >> time.time() +
> >> 36000; Cookie.add_cookie(R, cookie)
> >>             q="update "+usertable+" set SID='"+SID+"' where 
> >> name='"+LLRuser+"'
> >> and password='"+LLRpw+"'"
> > 
> > 
> > In mod_python 2.7.X you must flush out the headers before you write  any 
> > data
> > to the response. This is why the order of your stuff is mucked up.
> > 
> >   req.send_http_header()
> > 
> >>             R.write("userq="+q)
> >>             cur.execute(q)
> >>             debugfile.write("Before calling BB.html.\n")
> >>             #R.write("<head><meta http-equiv='refresh'
> >> content='0;url=BB.html'></head>")
> >>             debugfile.write("AFTER calling BB.html.\n")
> >>             sidrefreshing=1
> >>             debugfile.write("END of userrs is not None.\n")
> >>     debugfile.write("Before closing debug file\n")
> >>     debugfile.close()
> >>
> >>
> >> I thought that maybe the meta http-equiv was the problem so I  commented
> >> out but I still get the error.
> >>
> >>
> >>
> >> On Fri, 2006-03-31 at 00:22 -0500, Graham Dumpleton wrote:
> >>
> >>> Alberto Ruiz wrote ..
> >>>
> >>>> I'm getting a very wierd error when I call my python script.  Other
> >>>> Python scripts seem to work fine but one in particular returns a 500
> >>>> server error and the error does not show in the error-log under the
> >>>> virtual domain that I'm working on but on the main error-log.   How can
> >>>> I
> >>>> get additional debugging information to find out the problem?
> >>>>
> >>>> In the error-log I get the following:
> >>>> mod_python: (Re)importing mod_python.publisher from None
> >>>
> >>>
> >>> In mod_python 2.7.11, this message possibly doesn't mean much.
> >>>
> >>>> When I run my python script I get the following:
> >>>>
> >>>> HTTP/1.1 500 Internal Server Error
> >>>> Date: Fri, 31 Mar 2006 04:46:55 GMT
> >>>> Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11 Python/ 2.4.2
> >>>> mod_perl/1.29
> >>>> Connection: close
> >>>> Transfer-Encoding: chunked
> >>>> Content-Type: text/html; charset=iso-8859-1
> >>>>
> >>>> 262
> >>>> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
> >>>> <HTML><HEAD>
> >>>> <TITLE>500 Internal Server Error</TITLE>
> >>>> </HEAD><BODY>
> >>>> <H1>Internal Server Error</H1>
> >>>> The server encountered an internal error or
> >>>> misconfiguration and was unable to complete
> >>>> your request.<P>
> >>>> Please contact the server administrator,
> >>>>  root@mydomain.com and inform them of the time the error occurred,
> >>>> and anything you might have done that may have
> >>>> caused the error.<P>
> >>>> More information about this error may be available
> >>>> in the server error log.<P>
> >>>> <HR>
> >>>> <ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
> >>>> </BODY></HTML>
> >>>>
> >>>> 0
> >>>
> >>>
> >>> This message in mod_python 2.7.11 with no message in error log
> >>> generally means that your published function doesn't return anything.
> >>>
> >>> Can you post the most minimal publisher function which shows the
> >>> problem?
> >>>
> >>> Graham
> >>>
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
> 
> 

From al at ruiz.ws  Fri Mar 31 08:53:45 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Fri Mar 31 09:20:02 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <1143811445.3610.268.camel@localhost.localdomain>
References: <1143782571.10074@dscpl.user.openhosting.com>
	<1143783308.3609.245.camel@localhost.localdomain>
	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
	<442D242F.7070202@jgassociates.ca>
	<1143811445.3610.268.camel@localhost.localdomain>
Message-ID: <1143813225.3610.282.camel@localhost.localdomain>

Never mind about the meta tag.  It works after I added the
send_http_header() method.

On Fri, 2006-03-31 at 06:24 -0700, Alberto Ruiz wrote:
> I really appreciate all of your feedback and help a lot on resolving my
> issues.  I agree with the coding problems, but did I miss it somewhere?
> Nobody addressed the issue why the meta tag is not being processed.  The
> code was working fine on a Debian system as I mentioned in an earlier
> thread.   I appreciate your patience, eventhough I'm a Python
> programmer, I didn't write the code or had any previous experience on
> writing web applications in Python.   I'm just helping a frustrated
> friend who insists that the code was working before on a Debian system
> and now it is not on a Freebsd one.    
> 
>   
> 
> 
> On Fri, 2006-03-31 at 07:44 -0500, Jim Gallacher wrote:
> > (Oops, let me try that again).
> > 
> > Not directly related to your 500 error, but hopefully you'll find my 
> > suggestions useful in improving your code.
> > 
> > >> import time,random,string
> > >> global DATEBOX
> > >> from mod_python import Cookie
> > >>
> > >> def index (req,LLRuser='',LLRpw=''):
> > >>     debugfile = open("/home/john/www/mydomain.com/debug.txt", "a")
> > >>     debugfile.write("Begining of index function\n")
> > >>     global R; R=req; R.content_type="text/html"
> > 
> > Avoid putting multiple statements on one line, as it's not considered 
> > good python style. Personally I think it's bad C style as well. In my 
> > experience it makes it harder to track down bugs.
> > 
> > > 
> > > You should not store the request object in a global variable. If you  
> > > ever move
> > > to mod_python 3.X and use a multithreaded MPM it will break as multiple
> > > threads may execute within the same module as the same time.
> > > 
> > >>     cur=DBconnectpropman.DB.cursor()
> > >>     sidrefreshing=0
> > >>     ZWF.R=R
> > >>     global SID;SID=''
> > >>     global UID;UID=''
> > >>     cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
> > >> secret='LLR14222222')
> > >>     if LLRuser!='' and LLRpw!='':  # login attempt
> > >>         if string.find(LLRuser,"@")!=-1: #client login attempt
> > >>             cur.execute("select clientid,name,password from client where
> > >> email='"+LLRuser+"'")
> > 
> > WARING! Potential sql injection attack.
> > 
> > You are leaving yourself open to a sql injection attack. Never trust 
> > user provided data. You can avoid this problem by letting the python DBI 
> > do the work for you. This will properly escape the content of LLRuser:
> > 
> > cur.execute("select clientid,name,password from client where email=%s" 
> > ,LLRuser)
> > 
> > Note that you don't need to enclose the %s in single quotes here. The 
> > DBI takes care of it for you.
> > 
> > >>                 x=random.randint(48,108)
> > >>                 if x>57:x+=8
> > >>                 if x>90:x+=6
> > >>                 SID+=chr(x)
> > >>             cookie = Cookie.Cookie('sid', SID); cookie.expires = 
> > >> time.time() +
> > >> 36000; Cookie.add_cookie(R, cookie)
> > >>             q="update "+usertable+" set SID='"+SID+"' where 
> > >> name='"+LLRuser+"'
> > >> and password='"+LLRpw+"'"
> > 
> > This gets hard to read (and debug) with all the single and double quotes 
> > mixed together. At a quick glance it's hard to differentiate the strings 
> > from the variables. Try something like this:
> > 
> > q = "update %s set SID = '%s' where name = '%s' and password = '%s'" % 
> > (usertable, SID, LLRuser, LLRpw)
> > 
> > Using "+" to concatenate strings is inefficient in python and generally 
> > avoid. For short strings it's not likely an issue, but I just want to 
> > make sure you are aware.
> > 
> > Of course *using* q in a sql query still leaves you open to a sql 
> > injection attack ;).
> > 
> > Jim
> > 
> > 
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From jpg at jgassociates.ca  Fri Mar 31 11:07:28 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Mar 31 11:06:56 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <1143812217.3610.279.camel@localhost.localdomain>
References: <1143782571.10074@dscpl.user.openhosting.com>	<1143783308.3609.245.camel@localhost.localdomain>	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>	<442D1DFD.9060305@jgassociates.ca>
	<1143812217.3610.279.camel@localhost.localdomain>
Message-ID: <442D53C0.50003@jgassociates.ca>

Alberto Ruiz wrote:
> I had to append the path because I was getting the error that import
> DBconnectpropman could not be found.  Somehow the path gets lost.  I
> also try adding the following to the httpd.conf:
> 
> PythonPath "sys.path+['/home/brianheadrentals/www/brianheadrentals.com>'
> ]"

There is a trailing ">" character in there. I don't know if that is in 
your config or it's just a typo in your message.

Jim

From al at ruiz.ws  Fri Mar 31 11:26:42 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Fri Mar 31 11:53:03 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <442D53C0.50003@jgassociates.ca>
References: <1143782571.10074@dscpl.user.openhosting.com>
	<1143783308.3609.245.camel@localhost.localdomain>
	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
	<442D1DFD.9060305@jgassociates.ca>
	<1143812217.3610.279.camel@localhost.localdomain>
	<442D53C0.50003@jgassociates.ca>
Message-ID: <1143822402.3609.286.camel@localhost.localdomain>

Just a typo. Thanks :)


On Fri, 2006-03-31 at 11:07 -0500, Jim Gallacher wrote:
> Alberto Ruiz wrote:
> > I had to append the path because I was getting the error that import
> > DBconnectpropman could not be found.  Somehow the path gets lost.  I
> > also try adding the following to the httpd.conf:
> > 
> > PythonPath "sys.path+['/home/brianheadrentals/www/brianheadrentals.com>'
> > ]"
> 
> There is a trailing ">" character in there. I don't know if that is in 
> your config or it's just a typo in your message.
> 
> Jim
> 
> 

From grahamd at dscpl.com.au  Fri Mar 31 16:57:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 31 16:57:47 2006
Subject: [mod_python] How do I troubleshoot a 500 Internal Server Error?
In-Reply-To: <1143812217.3610.279.camel@localhost.localdomain>
References: <1143782571.10074@dscpl.user.openhosting.com>
	<1143783308.3609.245.camel@localhost.localdomain>
	<A20D2593-B1D4-4411-B08F-558F21DBFBBA@dscpl.com.au>
	<442D1DFD.9060305@jgassociates.ca>
	<1143812217.3610.279.camel@localhost.localdomain>
Message-ID: <C45AE446-82EF-4B1E-B120-012BA0094610@dscpl.com.au>


On 31/03/2006, at 11:36 PM, Alberto Ruiz wrote:

> I had to append the path because I was getting the error that import
> DBconnectpropman could not be found.  Somehow the path gets lost.  I
> also try adding the following to the httpd.conf:
>
> PythonPath "sys.path+['/home/brianheadrentals/www/ 
> brianheadrentals.com>'
> ]"
>
> But it didn't make a difference.   They are about 10 python scripts  
> for
> the whole site and for each one if I don't do the sys.path.append it
> fails to find it.  Is there another way to fix it?

You might be able to use apache.import_module().

   DBconnectpropman = apache.import_module("DBconnectpropman",
     path=['/home/brianheadrentals/www/brianheadrentals.com'])

instead of:

   import DBconnectpropman

That way you can explicitly say where the module lives.

> In regards to flushing out the headers. You mean that before doing:
>
> R.write("<head><meta http-equiv='refresh'
> content='0;url=BB.html'></head>")
>
> I should do:
>
> R.send_http_header()
>
> right?
>
> On Fri, 2006-03-31 at 07:18 -0500, Jim Gallacher wrote:
>> Graham Dumpleton wrote:
>>> Remember to keep followups on mailing list. :-)
>>>
>>> A few comments on code:
>>>
>>> On 31/03/2006, at 3:35 PM, Alberto Ruiz wrote:
>>>
>>>> I added debug code in my Python script that writes to a file at
>>>> different stages of the script.  The script executes successfully
>>>> without any errors, and my debug writes show up fine in the  
>>>> debug  file.
>>>> In any case here is a snippet of my script:
>>>>
>>>> global DB
>>>> import sys
>>>> sys.path.append('/home/john/www/mydomain.com')
>>>
>>>
>>> You shouldn't append to sys.path explicitly in modules because every
>>> time the module is reloaded, it will be extended, thus growing and
>>> growing the path with the same directory.
>>>
>>>> import DBconnectpropman
>>>> import ZWF
>>>> reload(ZWF)
>>>
>>>
>>> Huh????
>>>
>>>> import time,random,string
>>>> global DATEBOX
>>>> from mod_python import Cookie
>>>>
>>>> def index (req,LLRuser='',LLRpw=''):
>>>>     debugfile = open("/home/john/www/mydomain.com/debug.txt", "a")
>>>>     debugfile.write("Begining of index function\n")
>>>>     global R; R=req; R.content_type="text/html"
>>>
>>>
>>> You should not store the request object in a global variable. If you
>>> ever move
>>> to mod_python 3.X and use a multithreaded MPM it will break as  
>>> multiple
>>> threads may execute within the same module as the same time.
>>>
>>>>     cur=DBconnectpropman.DB.cursor()
>>>>     sidrefreshing=0
>>>>     ZWF.R=R
>>>>     global SID;SID=''
>>>>     global UID;UID=''
>>>>     cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
>>>> secret='LLR14222222')
>>>>     if LLRuser!='' and LLRpw!='':  # login attempt
>>>>         if string.find(LLRuser,"@")!=-1: #client login attempt
>>>>             cur.execute("select clientid,name,password from  
>>>> client where
>>>> email='"+LLRuser+"'")
>>>>             userrs=cur.fetchone()
>>>>             if str(userrs)!='None':
>>>>                 LLRuser=userrs[1]
>>>>                 usertable='client'
>>>>         else:
>>>>             debugfile.write("It is an admin user\n")
>>>>             cur.execute("select * from user where name='"+LLRuser 
>>>> +"' and
>>>> password='"+LLRpw+"'")
>>>>             userrs=cur.fetchone()
>>>>             usertable='user'
>>>>             debugfile.write("admin user section.\n")
>>>>         if str(userrs)!='None': #login success create session key,
>>>> update  user
>>>> record, sett sid cookie
>>>>             debugfile.write("userrs is not None.\n")
>>>>             SID=''
>>>>             for n in range(0,32):
>>>>                 x=random.randint(48,108)
>>>>                 if x>57:x+=8
>>>>                 if x>90:x+=6
>>>>                 SID+=chr(x)
>>>>             cookie = Cookie.Cookie('sid', SID); cookie.expires =
>>>> time.time() +
>>>> 36000; Cookie.add_cookie(R, cookie)
>>>>             q="update "+usertable+" set SID='"+SID+"' where
>>>> name='"+LLRuser+"'
>>>> and password='"+LLRpw+"'"
>>>
>>>
>>> In mod_python 2.7.X you must flush out the headers before you  
>>> write  any
>>> data
>>> to the response. This is why the order of your stuff is mucked up.
>>>
>>>   req.send_http_header()
>>>
>>>>             R.write("userq="+q)
>>>>             cur.execute(q)
>>>>             debugfile.write("Before calling BB.html.\n")
>>>>             #R.write("<head><meta http-equiv='refresh'
>>>> content='0;url=BB.html'></head>")
>>>>             debugfile.write("AFTER calling BB.html.\n")
>>>>             sidrefreshing=1
>>>>             debugfile.write("END of userrs is not None.\n")
>>>>     debugfile.write("Before closing debug file\n")
>>>>     debugfile.close()
>>>>
>>>>
>>>> I thought that maybe the meta http-equiv was the problem so I   
>>>> commented
>>>> out but I still get the error.
>>>>
>>>>
>>>>
>>>> On Fri, 2006-03-31 at 00:22 -0500, Graham Dumpleton wrote:
>>>>
>>>>> Alberto Ruiz wrote ..
>>>>>
>>>>>> I'm getting a very wierd error when I call my python script.   
>>>>>> Other
>>>>>> Python scripts seem to work fine but one in particular returns  
>>>>>> a 500
>>>>>> server error and the error does not show in the error-log  
>>>>>> under the
>>>>>> virtual domain that I'm working on but on the main error- 
>>>>>> log.   How can
>>>>>> I
>>>>>> get additional debugging information to find out the problem?
>>>>>>
>>>>>> In the error-log I get the following:
>>>>>> mod_python: (Re)importing mod_python.publisher from None
>>>>>
>>>>>
>>>>> In mod_python 2.7.11, this message possibly doesn't mean much.
>>>>>
>>>>>> When I run my python script I get the following:
>>>>>>
>>>>>> HTTP/1.1 500 Internal Server Error
>>>>>> Date: Fri, 31 Mar 2006 04:46:55 GMT
>>>>>> Server: Apache/1.3.33 (Unix) PHP/4.4.2 mod_python/2.7.11  
>>>>>> Python/ 2.4.2
>>>>>> mod_perl/1.29
>>>>>> Connection: close
>>>>>> Transfer-Encoding: chunked
>>>>>> Content-Type: text/html; charset=iso-8859-1
>>>>>>
>>>>>> 262
>>>>>> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
>>>>>> <HTML><HEAD>
>>>>>> <TITLE>500 Internal Server Error</TITLE>
>>>>>> </HEAD><BODY>
>>>>>> <H1>Internal Server Error</H1>
>>>>>> The server encountered an internal error or
>>>>>> misconfiguration and was unable to complete
>>>>>> your request.<P>
>>>>>> Please contact the server administrator,
>>>>>>  root@mydomain.com and inform them of the time the error  
>>>>>> occurred,
>>>>>> and anything you might have done that may have
>>>>>> caused the error.<P>
>>>>>> More information about this error may be available
>>>>>> in the server error log.<P>
>>>>>> <HR>
>>>>>> <ADDRESS>Apache/1.3.33 Server at mydomain.com Port 80</ADDRESS>
>>>>>> </BODY></HTML>
>>>>>>
>>>>>> 0
>>>>>
>>>>>
>>>>> This message in mod_python 2.7.11 with no message in error log
>>>>> generally means that your published function doesn't return  
>>>>> anything.
>>>>>
>>>>> Can you post the most minimal publisher function which shows the
>>>>> problem?
>>>>>
>>>>> Graham
>>>>>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From al at ruiz.ws  Fri Mar 31 21:11:43 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Fri Mar 31 21:38:04 2006
Subject: [mod_python] Cookie.py problems
Message-ID: <1143857503.3609.307.camel@localhost.localdomain>

Something is wrong with the Cookie class because the web reply is not
sending the cookie properly.  Am I doing something wrong? This setup was
working fine on a Debian system.  It is now running on a FreeBSD.  I
sniffed the web server reply and this is what am getting:

HTTP/1.1  200 OK.
.Date: S at, 01 A
pr 2006  01:30:21
GMT..Se rver: Ap
ache/1.3 .33 (Uni
x) mod_p ython/2.
7.11 Pyt hon/2.4.
2 PHP/4. 4.2 mod_
perl/1.2 9..Keep-
Alive: t imeout=1
5, max=1 00..Conn
ection:  Keep-Ali
ve..Tran sfer-Enc
oding: c hunked..
Content- Type: te
xt/html. ...62 ..
userq=up date use
r set SI D='EndNx
nm0nnJEp Jtug4b2f
WjusIDRV 3Kw' whe
re name= 'lorim' 
and pass word='12
3'..41 . .<head><
meta htt p-equiv=
'refresh ' conten
t='0;url =/BB.htm
l'></hea d>..1  .
. ..0... .      

So as you can see I'm getting a 62 and then some wierd text from a sql
query and then the Cookie contents, as well as some other stuff.  But
'Cookie:' should be preappended to the cookie.  Here is a snippet of the
code handling the cookie:

.....
from mod_python import Cookie

def index (req,LLRuser='',LLRpw=''):
	global R; R=req; R.content_type="text/html"
	R.send_http_header()
	cur=DBconnectpropman.DB.cursor()
	sidrefreshing=0
	ZWF.R=R
	global SID;SID=''
	global UID;UID=''
	cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
secret='LLR14151111')
	
	if LLRuser!='' and LLRpw!='':  # login attempt
		if string.find(LLRuser,"@")!=-1: #client login attempt
			cur.execute("select clientid,name,password from client where
email='"+LLRuser+"'")
			userrs=cur.fetchone()
			if str(userrs)!='None':
				LLRuser=userrs[1]
				usertable='client'
		else:
			cur.execute("select * from user where name='"+LLRuser+"' and
password='"+LLRpw+"'") 
			userrs=cur.fetchone()
			usertable='user'
		if str(userrs)!='None': #login success create session key, update user
record, sett sid cookie
			SID=''
			for n in range(0,32):
				x=random.randint(48,108)
				if x>57:x+=8
				if x>90:x+=6
				SID+=chr(x)
			cookie = Cookie.Cookie('sid', SID); cookie.expires = time.time() +
36000; Cookie.add_cookie(R, cookie)
			q="update "+usertable+" set SID='"+SID+"' where name='"+LLRuser+"'
and password='"+LLRpw+"'"
			R.write("userq="+q)
			cur.execute(q)
			R.write("<head><meta http-equiv='refresh'
content='0;url=/BB.html'></head>")
			sidrefreshing=1
	if cookies.has_key('sid'):
		#we have a session id, is it valid?
		USER=ZWF.usercheck(R,cur)
		SID=USER.SID
		UID=USER.UID
		........

Let me know if you need any other info.

Can I use the regular python Cookie class instead?   

From al at ruiz.ws  Fri Mar 31 21:21:27 2006
From: al at ruiz.ws (Alberto Ruiz)
Date: Fri Mar 31 21:47:46 2006
Subject: [mod_python] Re: Cookie.py problems
In-Reply-To: <1143857503.3609.307.camel@localhost.localdomain>
References: <1143857503.3609.307.camel@localhost.localdomain>
Message-ID: <1143858087.3610.311.camel@localhost.localdomain>

Correction, it should send the header: 'Set-Cookie:'

Is the problem due that I'm calling R.send_http_header() before
constructing the cookie? 

On Fri, 2006-03-31 at 19:11 -0700, Alberto Ruiz wrote:
> Something is wrong with the Cookie class because the web reply is not
> sending the cookie properly.  Am I doing something wrong? This setup was
> working fine on a Debian system.  It is now running on a FreeBSD.  I
> sniffed the web server reply and this is what am getting:
> 
> HTTP/1.1  200 OK.
> .Date: S at, 01 A
> pr 2006  01:30:21
> GMT..Se rver: Ap
> ache/1.3 .33 (Uni
> x) mod_p ython/2.
> 7.11 Pyt hon/2.4.
> 2 PHP/4. 4.2 mod_
> perl/1.2 9..Keep-
> Alive: t imeout=1
> 5, max=1 00..Conn
> ection:  Keep-Ali
> ve..Tran sfer-Enc
> oding: c hunked..
> Content- Type: te
> xt/html. ...62 ..
> userq=up date use
> r set SI D='EndNx
> nm0nnJEp Jtug4b2f
> WjusIDRV 3Kw' whe
> re name= 'lorim' 
> and pass word='12
> 3'..41 . .<head><
> meta htt p-equiv=
> 'refresh ' conten
> t='0;url =/BB.htm
> l'></hea d>..1  .
> . ..0... .      
> 
> So as you can see I'm getting a 62 and then some wierd text from a sql
> query and then the Cookie contents, as well as some other stuff.  But
> 'Cookie:' should be preappended to the cookie.  Here is a snippet of the
> code handling the cookie:
> 
> .....
> from mod_python import Cookie
> 
> def index (req,LLRuser='',LLRpw=''):
> 	global R; R=req; R.content_type="text/html"
> 	R.send_http_header()
> 	cur=DBconnectpropman.DB.cursor()
> 	sidrefreshing=0
> 	ZWF.R=R
> 	global SID;SID=''
> 	global UID;UID=''
> 	cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
> secret='LLR14151111')
> 	
> 	if LLRuser!='' and LLRpw!='':  # login attempt
> 		if string.find(LLRuser,"@")!=-1: #client login attempt
> 			cur.execute("select clientid,name,password from client where
> email='"+LLRuser+"'")
> 			userrs=cur.fetchone()
> 			if str(userrs)!='None':
> 				LLRuser=userrs[1]
> 				usertable='client'
> 		else:
> 			cur.execute("select * from user where name='"+LLRuser+"' and
> password='"+LLRpw+"'") 
> 			userrs=cur.fetchone()
> 			usertable='user'
> 		if str(userrs)!='None': #login success create session key, update user
> record, sett sid cookie
> 			SID=''
> 			for n in range(0,32):
> 				x=random.randint(48,108)
> 				if x>57:x+=8
> 				if x>90:x+=6
> 				SID+=chr(x)
> 			cookie = Cookie.Cookie('sid', SID); cookie.expires = time.time() +
> 36000; Cookie.add_cookie(R, cookie)
> 			q="update "+usertable+" set SID='"+SID+"' where name='"+LLRuser+"'
> and password='"+LLRpw+"'"
> 			R.write("userq="+q)
> 			cur.execute(q)
> 			R.write("<head><meta http-equiv='refresh'
> content='0;url=/BB.html'></head>")
> 			sidrefreshing=1
> 	if cookies.has_key('sid'):
> 		#we have a session id, is it valid?
> 		USER=ZWF.usercheck(R,cur)
> 		SID=USER.SID
> 		UID=USER.UID
> 		........
> 
> Let me know if you need any other info.
> 
> Can I use the regular python Cookie class instead?   

From grahamd at dscpl.com.au  Fri Mar 31 22:46:30 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Mar 31 22:46:41 2006
Subject: [mod_python] Re: Cookie.py problems
In-Reply-To: <1143858087.3610.311.camel@localhost.localdomain>
References: <1143857503.3609.307.camel@localhost.localdomain>
	<1143858087.3610.311.camel@localhost.localdomain>
Message-ID: <113DEF11-8A29-4221-B7DF-639437FDA6ED@dscpl.com.au>


On 01/04/2006, at 12:21 PM, Alberto Ruiz wrote:

> Correction, it should send the header: 'Set-Cookie:'
>
> Is the problem due that I'm calling R.send_http_header() before
> constructing the cookie?

Yes.

Cookie must be done before send_http_header and before
anything content is written back for the response.

In short, anything which generates headers has to be done
first.

> On Fri, 2006-03-31 at 19:11 -0700, Alberto Ruiz wrote:
>> Something is wrong with the Cookie class because the web reply is not
>> sending the cookie properly.  Am I doing something wrong? This  
>> setup was
>> working fine on a Debian system.  It is now running on a FreeBSD.  I
>> sniffed the web server reply and this is what am getting:
>>
>> HTTP/1.1  200 OK.
>> .Date: S at, 01 A
>> pr 2006  01:30:21
>> GMT..Se rver: Ap
>> ache/1.3 .33 (Uni
>> x) mod_p ython/2.
>> 7.11 Pyt hon/2.4.
>> 2 PHP/4. 4.2 mod_
>> perl/1.2 9..Keep-
>> Alive: t imeout=1
>> 5, max=1 00..Conn
>> ection:  Keep-Ali
>> ve..Tran sfer-Enc
>> oding: c hunked..
>> Content- Type: te
>> xt/html. ...62 ..
>> userq=up date use
>> r set SI D='EndNx
>> nm0nnJEp Jtug4b2f
>> WjusIDRV 3Kw' whe
>> re name= 'lorim'
>> and pass word='12
>> 3'..41 . .<head><
>> meta htt p-equiv=
>> 'refresh ' conten
>> t='0;url =/BB.htm
>> l'></hea d>..1  .
>> . ..0... .
>>
>> So as you can see I'm getting a 62 and then some wierd text from a  
>> sql
>> query and then the Cookie contents, as well as some other stuff.  But
>> 'Cookie:' should be preappended to the cookie.  Here is a snippet  
>> of the
>> code handling the cookie:
>>
>> .....
>> from mod_python import Cookie
>>
>> def index (req,LLRuser='',LLRpw=''):
>> 	global R; R=req; R.content_type="text/html"
>> 	R.send_http_header()
>> 	cur=DBconnectpropman.DB.cursor()
>> 	sidrefreshing=0
>> 	ZWF.R=R
>> 	global SID;SID=''
>> 	global UID;UID=''
>> 	cookies = Cookie.get_cookies(R, Cookie.MarshalCookie,
>> secret='LLR14151111')
>> 	
>> 	if LLRuser!='' and LLRpw!='':  # login attempt
>> 		if string.find(LLRuser,"@")!=-1: #client login attempt
>> 			cur.execute("select clientid,name,password from client where
>> email='"+LLRuser+"'")
>> 			userrs=cur.fetchone()
>> 			if str(userrs)!='None':
>> 				LLRuser=userrs[1]
>> 				usertable='client'
>> 		else:
>> 			cur.execute("select * from user where name='"+LLRuser+"' and
>> password='"+LLRpw+"'")
>> 			userrs=cur.fetchone()
>> 			usertable='user'
>> 		if str(userrs)!='None': #login success create session key,  
>> update user
>> record, sett sid cookie
>> 			SID=''
>> 			for n in range(0,32):
>> 				x=random.randint(48,108)
>> 				if x>57:x+=8
>> 				if x>90:x+=6
>> 				SID+=chr(x)
>> 			cookie = Cookie.Cookie('sid', SID); cookie.expires = time.time() +
>> 36000; Cookie.add_cookie(R, cookie)
>> 			q="update "+usertable+" set SID='"+SID+"' where name='"+LLRuser+"'
>> and password='"+LLRpw+"'"
>> 			R.write("userq="+q)
>> 			cur.execute(q)
>> 			R.write("<head><meta http-equiv='refresh'
>> content='0;url=/BB.html'></head>")
>> 			sidrefreshing=1
>> 	if cookies.has_key('sid'):
>> 		#we have a session id, is it valid?
>> 		USER=ZWF.usercheck(R,cur)
>> 		SID=USER.SID
>> 		UID=USER.UID
>> 		........
>>
>> Let me know if you need any other info.
>>
>> Can I use the regular python Cookie class instead?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

