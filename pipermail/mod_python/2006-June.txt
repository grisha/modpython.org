From David.Bear at asu.edu  Thu Jun  1 00:07:07 2006
From: David.Bear at asu.edu (David Bear)
Date: Thu Jun  1 00:07:39 2006
Subject: [mod_python] using compile_code objects
Message-ID: <20060601040707.GB7825@asu.edu>

I am thinking of writing a validation code in the definition of a
field that I receive from a web form. For example, if I have a field
named 'state', I would define a dictionary like this:

_states = ['AZ', 'AL', 'MO']
_state = {'name': '',
          'max-length': 2,
	  'validator': 'in n in _states return true'
	  }
then when I read my req.form['state'] I can say something like

if eval(_state['validator']) == true:
  ok

I am wondering a coupling things:

1) has anyone else done something like this?
2) what kind of performance penalty is there for compile and eval
builtins
3) other issues unique to modpython that would make this undesireable
4) how to parameterize a python string that I would compile (so I
could pass in req.form['state'] to the _state['validator'] function.

Hopefully this makes sense.

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From ccbean at gmail.com  Thu Jun  1 02:28:03 2006
From: ccbean at gmail.com (Colin Bean)
Date: Thu Jun  1 02:28:07 2006
Subject: [mod_python] using compile_code objects
In-Reply-To: <20060601040707.GB7825@asu.edu>
References: <20060601040707.GB7825@asu.edu>
Message-ID: <29a6ca010605312328k6895f28saa5a915beef1a8c8@mail.gmail.com>

Hi David,

I think you can accomplish what you're trying to do without using
eval; correct me if I don't understand your problem.

In order to have a function that you can address from a dictionary,
you could do just that and use a function pointer; so something like:


_states = ['AZ', 'AL', 'MO']

def testState(name):
         return name in _states

_state = {'name': '',
         'max-length': 2,
         'validator':testState
         }
Then to validate a state name, you could use:
if _state['validator'](req.form['state']):
....

If you don't want to define a separate function for doing the
validation, you could change the above example to:

I think you can accomplish what you're trying to do without using
eval; correct me if I don't understand your problem.

In order to have a function that you can address from a dictionary,
you could do just that and use a function pointer; so something like:


_states = ['AZ', 'AL', 'MO']
_state = {'name': '',
         'max-length': 2,
         'validator':lambda n: n in _states
         }

Again, sorry if I'm missing something here, but I think this would do
what you're after.  I'd definitely avoid passing user input into an
eval statement.

HTH,
Colin

On 5/31/06, David Bear <David.Bear@asu.edu> wrote:
> I am thinking of writing a validation code in the definition of a
> field that I receive from a web form. For example, if I have a field
> named 'state', I would define a dictionary like this:
>
> _states = ['AZ', 'AL', 'MO']
> _state = {'name': '',
>           'max-length': 2,
>           'validator': 'in n in _states return true'
>           }
> then when I read my req.form['state'] I can say something like
>
> if eval(_state['validator']) == true:
>   ok
>
> I am wondering a coupling things:
>
> 1) has anyone else done something like this?
> 2) what kind of performance penalty is there for compile and eval
> builtins
> 3) other issues unique to modpython that would make this undesireable
> 4) how to parameterize a python string that I would compile (so I
> could pass in req.form['state'] to the _state['validator'] function.
>
> Hopefully this makes sense.
>
> --
> David Bear
> phone:  480-965-8257
> fax:    480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From wouter at squirrel-systems.com  Thu Jun  1 10:17:55 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu Jun  1 10:18:03 2006
Subject: [mod_python] psp without apache
Message-ID: <1149171475.6078.10.camel@cm222-167-159-88.hkcable.com.hk>

Hi all,

I'd like to use the psp templating module outside of the apache context:
this as I'm trying to create an off-line version of my website. But I
get errors when attempting to import psp. Instead of publishing the
resulting html code in apache, I want to save them to disk as static
html files.

But when importing psp on the command line I get an error:

>>> from mod_python import psp

Traceback (most recent call last):
  File "<pyshell#0>", line 1, in -toplevel-
    from mod_python import psp
  File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 20, in -toplevel-
    import apache, Session, util, _psp
  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 28, in -toplevel-
    import _apache
ImportError: No module named _apache

Any ideas?

Wouter.

From grojasy at puc.cl  Thu Jun  1 11:20:42 2006
From: grojasy at puc.cl (Gonzalo Rojas)
Date: Thu Jun  1 11:21:08 2006
Subject: [mod_python] installation problems...
Message-ID: <447F05CA.1070305@puc.cl>

Hi:

   I have a PC with Windows XP Pro, Apache HTTP Server 2.2.2, Python 2.4 
(all runs ok)... I downloaded ModPython version 3.2.8 
(mod_python-3.2.8.win32-py2.4.exe file)... I installed ModPython 
following the instructions of chapter 2 
(http://www.modpython.org/live/current/doc-html), but when I tried to 
restart Apache, appears the following error: "httpd.exe: Syntax error on 
line 107 of C:/Archivos de programa/Apache Software 
Foundation/Apache2.2/modules/mod_python.so into server: No se 
encontr\xf3 el proceso especificado"...

   I review, and I have mod_python.so file in the C:/Archivos de 
programa/Apache Software Foundation/Apache2.2/modules/ path...

   Which could be the problem ?...

   Sincerely,


Gonzalo Rojas Costa

From grojasy at puc.cl  Thu Jun  1 11:32:36 2006
From: grojasy at puc.cl (Gonzalo Rojas)
Date: Thu Jun  1 11:32:48 2006
Subject: [mod_python] installation problems...
Message-ID: <447F0894.1090902@puc.cl>

Hi:

   I have a PC with Windows XP Pro, Apache HTTP Server 2.2.2, Python 2.4 
(all runs ok)... I downloaded ModPython version 3.2.8 
(mod_python-3.2.8.win32-py2.4.exe file)... I installed ModPython 
following the instructions of chapter 2 
(http://www.modpython.org/live/current/doc-html), but when I tried to 
restart Apache, appears the following error: "httpd.exe: Syntax error on 
line 107 of C:/Archivos de programa/Apache Software 
Foundation/Apache2.2/modules/mod_python.so into server: No se 
encontr\xf3 el proceso especificado"...

   "no se encontro el proceso especificado" means "the specified process 
wasn't found"...

   I review, and I have mod_python.so file in the C:/Archivos de 
programa/Apache Software Foundation/Apache2.2/modules/ path...

   Which could be the problem ?...

   Sincerely,


Gonzalo Rojas Costa
From jpg at jgassociates.ca  Thu Jun  1 11:56:19 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Jun  1 11:55:25 2006
Subject: [mod_python] psp without apache
In-Reply-To: <1149171475.6078.10.camel@cm222-167-159-88.hkcable.com.hk>
References: <1149171475.6078.10.camel@cm222-167-159-88.hkcable.com.hk>
Message-ID: <447F0E23.7020904@jgassociates.ca>

Wouter van Marle wrote:
> Hi all,
> 
> I'd like to use the psp templating module outside of the apache context:
> this as I'm trying to create an off-line version of my website. But I
> get errors when attempting to import psp. Instead of publishing the
> resulting html code in apache, I want to save them to disk as static
> html files.
> 
> But when importing psp on the command line I get an error:
> 
>>>> from mod_python import psp
> 
> Traceback (most recent call last):
>   File "<pyshell#0>", line 1, in -toplevel-
>     from mod_python import psp
>   File "/usr/lib/python2.4/site-packages/mod_python/psp.py", line 20, in -toplevel-
>     import apache, Session, util, _psp
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 28, in -toplevel-
>     import _apache
> ImportError: No module named _apache
> 
> Any ideas?

Don't use psp directly. The really interesting stuff happens in the _psp 
parser module. Stripping away the mod_python specific code, PSP 
basically boils down to the following:

from mod_python import _psp

def external_psp_runner_thing():
     filename = 'test.psp'
     req = FakeRequestObject('output.txt')
     vars = {'req': req}
     source = _psp.parse(filename)
     code = compile(source, filename, "exec")
     global_scope = globals().copy()
     global_scope.update(vars)
     exec code in global_scope


class FakeRequestObject(object):
     ''' We need an object which has a write method that will take
         a length parameter the same as req.write(). For testing
         we'll just wrap a file object and write to that.
     '''
     def __init__(self, filename):
         self.fout = open(filename, 'w')

     def write(self, value, length):
         self.fout.write(value)

Jim
From wouter at squirrel-systems.com  Thu Jun  1 12:06:25 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu Jun  1 12:06:33 2006
Subject: [mod_python] psp without apache
In-Reply-To: <447F0E23.7020904@jgassociates.ca>
References: <1149171475.6078.10.camel@cm222-167-159-88.hkcable.com.hk>
	<447F0E23.7020904@jgassociates.ca>
Message-ID: <1149177985.6078.21.camel@cm222-167-159-88.hkcable.com.hk>

On Thu, 2006-06-01 at 11:56 -0400, Jim Gallacher wrote:
> Wouter van Marle wrote:
> > Hi all,
> > 
> > I'd like to use the psp templating module outside of the apache context:
> > this as I'm trying to create an off-line version of my website. But I
> > get errors when attempting to import psp. Instead of publishing the
> > resulting html code in apache, I want to save them to disk as static
> > html files.
> > 
> > But when importing psp on the command line I get an error:
> Don't use psp directly. The really interesting stuff happens in the _psp 
> parser module. Stripping away the mod_python specific code, PSP 
> basically boils down to the following:
> 
> from mod_python import _psp

Ah... stupid me... I import psp but don't even use it in the code :)
Copies a line too many from my web server scripts. My solution is as
follows. It allows me to give a psp file with variables and get back a
string with the page in html.

def psp2html(filename, variables={}):

    # Read the psp file in filename, run it through the parser and
    # the interpretor, and return the html code as result.
    directory, fname = os.path.split(filename)
    directory += "/"

    # invoke the parser
    pycode = _psp.parse(fname, directory).splitlines()
    pycode = [s.rstrip() for s in pycode]
    code = ""
    for s in pycode:
        code += s.replace(",0)", ")")+"\n"
        
    variables["req"] = StringIO.StringIO()
    exec code in variables
    return variables["req"].getvalue()


From David.Bear at asu.edu  Thu Jun  1 23:42:54 2006
From: David.Bear at asu.edu (David Bear)
Date: Thu Jun  1 23:43:05 2006
Subject: [mod_python] methods on req object
Message-ID: <20060602034254.GD15635@asu.edu>

I'm dense. I can seem to find any concise documentation on the methods
and attributes defined on the request ojbect. any pointers to
documentation?
-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From David.Bear at asu.edu  Fri Jun  2 00:02:11 2006
From: David.Bear at asu.edu (David Bear)
Date: Fri Jun  2 00:02:18 2006
Subject: [mod_python] methods on req object
In-Reply-To: <20060602034254.GD15635@asu.edu>
References: <20060602034254.GD15635@asu.edu>
Message-ID: <20060602040211.GE15635@asu.edu>

rats. nevermind. I found it.

On Thu, Jun 01, 2006 at 08:42:54PM -0700, David Bear wrote:
> I'm dense. I can seem to find any concise documentation on the methods
> and attributes defined on the request ojbect. any pointers to
> documentation?
> -- 
> David Bear
> phone: 	480-965-8257
> fax: 	480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From linux at qbox.es  Fri Jun  2 08:00:45 2006
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Fri Jun  2 08:01:07 2006
Subject: [mod_python] (no subject)
Message-ID: <1149249645.10002.30.camel@localhost>

Hi,

I am desperated, I can't see the origin of this problem:

I have code like the next, but I receive errors using a class
attribute. 
Sometimes in __init__ method in Cliente I receive an error  saying
variable count has not been initiated (but count=0 is there to
initialize it)

Other times the error is accesing c.count, saying that count is not a
member of Cliente.




-- modcli.py ----------------------------------------------------------
class Cliente:
	"Documentacion"
	count=0
			
	def __init__(self, name):
		self.__class__.count += 1   # Sometimes ERROR here
		self.nombre = name

-- modform.py ------------------------------------------------------
import modcli
class Form:
	def __init__(self, funcWrite):
		c = modcli.Cliente('NOMBRE')
		.
		.
		.
		#AND I TRY to verify here writing the expected value :

		funcWrite(c.count)    # HERE ERROR OCCURS with count

		# else tried:  modcli.Cliente.count 
		# and:  c.__class__.count

		return c

-- control.htm -----------------------------------------------------
<div> or
<%
modForm = apache.import_module('modform')

cli = modForm.Form(req.write)
%>
<%=cli.nombre%>
</div>

-- index.psp ----------------------------------------------------
<BODY ...
<HTML>
	<!-- include file="control.htm" -->
</HTML>	
		

From jeffh at dundeemt.com  Fri Jun  2 08:45:17 2006
From: jeffh at dundeemt.com (Jeff Hinrichs - DM&T)
Date: Fri Jun  2 08:45:20 2006
Subject: [mod_python] (no subject)
In-Reply-To: <1149249645.10002.30.camel@localhost>
References: <1149249645.10002.30.camel@localhost>
Message-ID: <5aaed53f0606020545q3ee364e5o30343ed51ac4a123@mail.gmail.com>

This line is requesting the value of the Instance Attribute count
 funcWrite(c.count)    # HERE ERROR OCCURS with count
as opposed to the Class Attribute count

see here:
#!/usr/bin/env python

class foo:
    a = 0     #Class Attribute
    def __init__(self):
        #self.__class__.__dict__['a'] += 1  #Another way to access
Class Attribute
        self.__class__.a += 1   # Inc Class Attribute
        self.a = -1   # Make the instance attribute something different

bar = foo()

print foo.a
print bar.a

foo.a += 1

print foo.a
print bar.a

baz = foo()
print foo.a
print bar.a
print baz.a

print foo.a
print bar.a
print baz.a


-Jeff
p.s. This is with python 2.4

On 6/2/06, S.R.Pard? <linux@qbox.es> wrote:
> Hi,
>
> I am desperated, I can't see the origin of this problem:
>
> I have code like the next, but I receive errors using a class
> attribute.
> Sometimes in __init__ method in Cliente I receive an error  saying
> variable count has not been initiated (but count=0 is there to
> initialize it)
>
> Other times the error is accesing c.count, saying that count is not a
> member of Cliente.
>
>
>
>
> -- modcli.py ----------------------------------------------------------
> class Cliente:
>         "Documentacion"
>         count=0
>
>         def __init__(self, name):
>                 self.__class__.count += 1   # Sometimes ERROR here
>                 self.nombre = name
>
> -- modform.py ------------------------------------------------------
> import modcli
> class Form:
>         def __init__(self, funcWrite):
>                 c = modcli.Cliente('NOMBRE')
>                 .
>                 .
>                 .
>                 #AND I TRY to verify here writing the expected value :
>
>                 funcWrite(c.count)    # HERE ERROR OCCURS with count
>
>                 # else tried:  modcli.Cliente.count
>                 # and:  c.__class__.count
>
>                 return c
>
> -- control.htm -----------------------------------------------------
> <div> or
> <%
> modForm = apache.import_module('modform')
>
> cli = modForm.Form(req.write)
> %>
> <%=cli.nombre%>
> </div>
>
> -- index.psp ----------------------------------------------------
> <BODY ...
> <HTML>
>         <!-- include file="control.htm" -->
> </HTML>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Jeff Hinrichs
Dundee Media & Technology, Inc
jeffh@dundeemt.com
402.320.0821

From gray at lu5t.net  Fri Jun  2 09:51:28 2006
From: gray at lu5t.net (Gray)
Date: Fri Jun  2 09:51:23 2006
Subject: [mod_python] Mod_python, Apache, and Mime Types.
Message-ID: <44804260.6080306@lu5t.net>

Greetings,

I'm having a little problem with a combination of my browser and apache 
while trying to use mod_python.

I'm running Debian stable, Apache 1.3, and mod_python 2.7. 

I'm trying to complete the initial setup test in the mod_python 
documentation, and I've followed those instructions.

When I would try to browse to http://myhost/mptest.py  my browser wants 
to download the file.  Initially I thought that mod_python just wasn't 
working, but upon downloading the file and viewing it contains:  Hello 
World!.  Mod_python is parsing and outputting correctly.

So I think it must be a mime-type issue.  I found the entry for in 
/etc/apache/mime.types to contain:

text/x-python      .py

I worked around the problem by changing said line to:

text/html         .py

And now the page is displayed correctly, in the browser, as Hello World! 

I know this can't be the right solution.  Can anyone tell me where my 
configuration is wrong?  This has proven to be a difficult problem for 
me to google.

Thanks.
From list at joreybump.com  Fri Jun  2 10:11:24 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Jun  2 10:11:35 2006
Subject: [mod_python] Mod_python, Apache, and Mime Types.
In-Reply-To: <44804260.6080306@lu5t.net>
References: <44804260.6080306@lu5t.net>
Message-ID: <4480470C.4030604@joreybump.com>

Gray wrote:
> Greetings,
> 
> I'm having a little problem with a combination of my browser and apache 
> while trying to use mod_python.
> 
> I'm running Debian stable, Apache 1.3, and mod_python 2.7.
> I'm trying to complete the initial setup test in the mod_python 
> documentation, and I've followed those instructions.
> 
> When I would try to browse to http://myhost/mptest.py  my browser wants 
> to download the file.  Initially I thought that mod_python just wasn't 
> working, but upon downloading the file and viewing it contains:  Hello 
> World!.  Mod_python is parsing and outputting correctly.
> 
> So I think it must be a mime-type issue.  I found the entry for in 
> /etc/apache/mime.types to contain:
> 
> text/x-python      .py
> 
> I worked around the problem by changing said line to:
> 
> text/html         .py

Delete it entirely, and see what happens. You don't want to commit to a 
single mime-type. For troubleshooting problems like this, I highly 
recommend installing the Live HTTP Headers plugin for Firefox.

> And now the page is displayed correctly, in the browser, as Hello World!
> I know this can't be the right solution.  Can anyone tell me where my 
> configuration is wrong?  This has proven to be a difficult problem for 
> me to google.

Show your mod_python configuration. Also, Debian goes a bit overboard in 
tweaking apache, so other factors could be at play. In any case, you're 
at a bit of a dead end with mod_python 2.7, which is no longer 
supported. If you can, switch to apache 2.0 to use a more recent 3.x 
version of mod_python (apache 2.2 support is also in the works).



From deron.meranda at gmail.com  Fri Jun  2 10:52:11 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Jun  2 10:52:23 2006
Subject: [mod_python] Mod_python, Apache, and Mime Types.
In-Reply-To: <44804260.6080306@lu5t.net>
References: <44804260.6080306@lu5t.net>
Message-ID: <5c06fa770606020752g454a1ca3wd8d07059c8d187fe@mail.gmail.com>

On 6/2/06, Gray <gray@lu5t.net> wrote:
> When I would try to browse to http://myhost/mptest.py  my browser wants
> to download the file.  Initially I thought that mod_python just wasn't
> working, but upon downloading the file and viewing it contains:  Hello
> World!.  Mod_python is parsing and outputting correctly.
>
> So I think it must be a mime-type issue.  I found the entry for in
> /etc/apache/mime.types to contain:

The mime types in Apache are only used when Apache is forced to
generate a Content-Type header because you forgot to do it.
Try doing something like,

   req.content_type = 'text/html'

near the top of your handler (before any of the content is written out).

There should be no need to edit your mime.types file, or the mime
type directives in the httpd.conf.

Oh, and in addition to using the LiveHeaders plugin for Firefox,
if you're on Linux, the command "curl" is a very useful debugging
tool.  Something like "curl -v http://your.host.com/" will show you
all the headers being exchanged back and forth.
-- 
Deron Meranda
From David.Bear at asu.edu  Fri Jun  2 15:06:32 2006
From: David.Bear at asu.edu (David Bear)
Date: Fri Jun  2 15:06:35 2006
Subject: [mod_python] debuging modpython publisher issues
Message-ID: <20060602190632.GH15635@asu.edu>

I'm getting really frustrated. I have a python program that works.
Then make modifications that should affect things -- then it breaks.

I've got to figure a better way of debugging.

Here's an example:

I have a python program:


def _return_psp(req, ad, tmpl="empty.pspml"):
    '''
    returns a psp template with all vars and whatever is in ad
    '''
    ad.setdefault('title', 'Empty Page')
    vars = {"ad": ad}
    return psp.PSP(req, tmpl, vars=vars)

def getDebug(req):
    '''
    returns values for debug and object introspection
    '''
    form = req.form
    info = []
    info.append('request uri %s ' % req.uri)
    info.append('req.connection.base_server: %s ' % req.connection.base_server)
    bodycontent = ''.join(info)
    return _return_psp(req, dict(body=bodycontent, title="Debug Page"), "empty.pspml")

# if __name__ == "__main__":
#    sys.exit(1)

I have a psp file called empty.pspml that looks like this:
-----------

<%
""" psp  """
try:
    title = ad['title']
except KeyError:
    title = "Key Error in AD"
try:
    dbg = ad['body']
except KeyError:
    dbg = 'Didnt have debug Info'
%>
<html>
<head>
  <title>
   <%= title %>
  </title>
</head>
<body>
<h1><%= title %></h1>
<hr>
<%= dbg %>
<hr>
</body>
</html>

----------

Okay. It all works the way I expect. Calling the url
mypython.py/getDebug

returns the results I expect.

Then I add a function like this:

def index(req):
     return _return_psp(req, dict(body="this is stupid", title="stupid
     title"))


Now everything apache returns is a 404 (but the apache not found page
is NOT returned, ie the body content of the http response is empty)

Looking in my apache logs all I see is the modpython is reimported a
module:


Fri Jun 02 11:51:21 2006] [notice] mod_python: (Re)importing module
'mod_python.publisher'
[Fri Jun 02 11:51:21 2006] [notice] mod_python: (Re)importing module
'mypthon' with path set to '['/htdocs/mp']'


There's got to be a better way. I comment out all the import
statements the are modpython specific, and use a command line python
session to import the module -- it imports without errors. I was
thinking importing it would reveal any syntactic errors... 

Any other pointers on debug methods?

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From jpg at jgassociates.ca  Fri Jun  2 17:10:56 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Jun  2 17:08:44 2006
Subject: [mod_python] debuging modpython publisher issues
In-Reply-To: <20060602190632.GH15635@asu.edu>
References: <20060602190632.GH15635@asu.edu>
Message-ID: <4480A960.9070802@jgassociates.ca>

David Bear wrote:
> I'm getting really frustrated. I have a python program that works.
> Then make modifications that should affect things -- then it breaks.
> 
> I've got to figure a better way of debugging.
> 
> Here's an example:
> 
> I have a python program:
> 
> 
> def _return_psp(req, ad, tmpl="empty.pspml"):
>     '''
>     returns a psp template with all vars and whatever is in ad
>     '''
>     ad.setdefault('title', 'Empty Page')
>     vars = {"ad": ad}
>     return psp.PSP(req, tmpl, vars=vars)
> 
> def getDebug(req):
>     '''
>     returns values for debug and object introspection
>     '''
>     form = req.form
>     info = []
>     info.append('request uri %s ' % req.uri)
>     info.append('req.connection.base_server: %s ' % req.connection.base_server)
>     bodycontent = ''.join(info)
>     return _return_psp(req, dict(body=bodycontent, title="Debug Page"), "empty.pspml")
> 
> # if __name__ == "__main__":
> #    sys.exit(1)
> 
> I have a psp file called empty.pspml that looks like this:
> -----------
> 
> <%
> """ psp  """
> try:
>     title = ad['title']
> except KeyError:
>     title = "Key Error in AD"
> try:
>     dbg = ad['body']
> except KeyError:
>     dbg = 'Didnt have debug Info'
> %>
> <html>
> <head>
>   <title>
>    <%= title %>
>   </title>
> </head>
> <body>
> <h1><%= title %></h1>
> <hr>
> <%= dbg %>
> <hr>
> </body>
> </html>
> 
> ----------
> 
> Okay. It all works the way I expect. Calling the url
> mypython.py/getDebug
> 
> returns the results I expect.
> 
> Then I add a function like this:
> 
> def index(req):
>      return _return_psp(req, dict(body="this is stupid", title="stupid
>      title"))
> 
> 
> Now everything apache returns is a 404 (but the apache not found page
> is NOT returned, ie the body content of the http response is empty)
> 
> Looking in my apache logs all I see is the modpython is reimported a
> module:
> 
> 
> Fri Jun 02 11:51:21 2006] [notice] mod_python: (Re)importing module
> 'mod_python.publisher'
> [Fri Jun 02 11:51:21 2006] [notice] mod_python: (Re)importing module
> 'mypthon' with path set to '['/htdocs/mp']'
> 
> 
> There's got to be a better way. I comment out all the import
> statements the are modpython specific, and use a command line python
> session to import the module -- it imports without errors. I was
> thinking importing it would reveal any syntactic errors... 
> 
> Any other pointers on debug methods?

Nothing earth shattering here, but you may find some of the following 
ideas useful if you are not already using them.

req.log_error(msg) is always helpful for stuffing debug messages into 
the apache error log.

Make sure your apache log configuration is not dropping any messages. 
You want: LogLevel debug

For a 404 response, check the access log to make sure you are actually 
requesting what you think you are requesting. Typos happen.

Use some tool (LiveHeaders in Firefox, curl, wget, lynx, whatever) to 
examine the headers being returned by apache. This may help you catch 
typos such as req.content_type = 'test/html'. Sometimes seeing a typo in 
a context different from your code will help you find it.

When you see a blank page in the browser, confirm that it really *is* 
blank. You may be generating some broken html which is obscuring the 
real output. For example "<hello world" will appear to be to be a blank 
page. Either "view source" in your browser or set req.content_type = 
'text/plain' to help debug.

Likewise, some content you are generating does not seem to be showing in 
your page, make sure it is not being obscured by some broken html.

Make sure you are not unintentionally catching exceptions and obscuring 
the real source of an error.

If it's late at night, go do bed. It's amazing how many bugs are 
magically gone when you get back to work after a good sleep. :)

Jim
From deron.meranda at gmail.com  Fri Jun  2 18:25:13 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Jun  2 18:25:15 2006
Subject: [mod_python] debuging modpython publisher issues
In-Reply-To: <4480A960.9070802@jgassociates.ca>
References: <20060602190632.GH15635@asu.edu> <4480A960.9070802@jgassociates.ca>
Message-ID: <5c06fa770606021525g5abc0a88h149b14845f788190@mail.gmail.com>

To add some more general debugging tips (although I don't know if these
will help much in David's case in this thread)...

If you are using Internet Explorer, do yourself a huge favor and
turn off the "Show friendly error messages" under the advanced
internet options panel. ... or use a different browser.

If you suspect malformed HTML, just try forcing the content type
to be text/plain, but leave everything else the same.  (Note,
this may not work under IE since it sometimes overrides the
content type with it's own guess...so use some other browser).

Firefox's LiveHeaders plugin (while a VERY useful tool to have),
can trick you in some borderline HTTP senarios.  Such as
when your webserver returns a 304 Not Modified, the LiveHeaders
will continue to show the headers from the previous cached
response, and not the one that returned the 304 (although the
"sent" headers are updated, the "received" headers are not).

Also be aware that under all browsers, the View Source, option is
not always exact.

  * IE can not view source for a transfer-encoded message (e.g.,
    compressed bodies).

  * IE just launches an external file viewer (notepad), so it does not
    correctly handle different charsets, etc.

  * Firefox/Mozilla, while much better, shows the source *after* it's
    been parsed, so you're really viewing the source that is
    reconstructed from the DOM tree.  Things like <br></br> show
    up as <br> for example.

Also View Source always shows you the complete document
(entity).  If you're doing partial or byterange requests, view source
won't show you what's going on under the covers.

If you want to see everything byte-for-byte exactly, learn to use
curl or wget or something similarly low-level.
-- 
Deron Meranda
From grojasy at puc.cl  Fri Jun  2 18:42:18 2006
From: grojasy at puc.cl (Gonzalo Rojas)
Date: Fri Jun  2 18:42:26 2006
Subject: [mod_python] installation problems...
Message-ID: <4480BECA.3070708@puc.cl>

Hi:

   I have a PC with Windows XP Pro, Apache HTTP Server 2.2.2, Python 2.4 
(all runs ok)... I downloaded ModPython version 3.2.8 
(mod_python-3.2.8.win32-py2.4.exe file)... I installed ModPython 
following the instructions of chapter 2 
(http://www.modpython.org/live/current/doc-html), but when I tried to 
restart Apache, appears the following error: "httpd.exe: Syntax error on 
line 107 of C:/Archivos de programa/Apache Software 
Foundation/Apache2.2/modules/mod_python.so into server: No se 
encontr\xf3 el proceso especificado"...

   "no se encontro el proceso especificado" means "the specified process 
wasn't found"...

   I review, and I have mod_python.so file in the C:/Archivos de 
programa/Apache Software Foundation/Apache2.2/modules/ path...

   Which could be the problem ?...

   Sincerely,


Gonzalo Rojas Costa
From linux at qbox.es  Sat Jun  3 03:54:03 2006
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Sat Jun  3 03:54:08 2006
Subject: [mod_python] [mod python] ABout Sessions
Message-ID: <1149321243.6305.45.camel@localhost>

Hi, 

Sorry to ask again.

I need some acclarations about the session object.


I have been developing VBScripts ASP pages from 1999. I have used a lot
the ASP's session and application objects. Now I'm decided to use PSP
Mod_Python instead.
I'm using Ubuntu, with Apache2 and Mod_Python for server and the Firefox
web client.


1st. Question :
Only One Session is created for various Firefox instances in the same
PC.
In ASP I could open 2 windows with different program views and data, on
different sessions (opening a new explorer. If you select New in menu
Archive with a page opened, you will have a another new page with same
session that the previous page)
Is possible to change how session works to make that ?
If not, can I make only one page could be open to reduce the possibility
of error (I Think in use target="APPL-WINDOW-NAME" in all the links,
that make IE open page in an explicit named window )


2nd. Question:
Usually, in ASP is possible to create a Session referencing a DB
Connection object. So you can use that object to access the server
during the session using that stored connection. In IIS ASP that is fast
and secure.
I have been reading about problems storing not sys objects in sessions,
so I am unsure about that.


3nd. Question:
All the sessions in IIS ASP would have the connection object (yes that I
mencioned in 2nd. point) previously stored because it was stored on a
Session_OnStart() event generated when a page uses Session object and no
Session is active for that petition, defined in global.asa web
configuration,  
So in the pages you can use :
	connectionForThePage = Session('connectionForTheSession')
and OLE! you will have a connection created , because if session not
exist when page load Event will be fired and my code inserted into
on_star will create an object and let it stored in session before the
page executed (so Sesssion('con...') always exist)

Is there a Session_OnStart equivalent in Mod_Python (remember I am using
PSP , I think Publisher can permit write my handler and check that , but
I wanted a transparent method not related to write a handler if it is
possible)


4nd. Question:
Because Apache is threaded, varios modules are opened by various
Mod_python server instances. So the same modules can be loaded more than
one time. So global variables of a module are different to each session,
and to make it hard  possibly different request on same session.
In IIS ASP I could  use application object to store data to be accesed
into different sessions in all the sessions of the server. And
Application object could be LOCKED and UNLOCKED to ensure thread
security.  
In Mod_Python, the only solution its to write a class, that servers
global variables from a Database with appropiate locking ?



Thank You for your patience, sorry if I haven't explained well.


	S.R.Pard?



From dm at julius.ling.ohio-state.edu  Sat Jun  3 14:36:00 2006
From: dm at julius.ling.ohio-state.edu (Detmar Meurers)
Date: Sat Jun  3 14:36:07 2006
Subject: [mod_python] erratic import errors with mod_python
Message-ID: <20060603183600.GA13085@ling.osu.edu>

Hi,

I'm using mod_python's publisher handler to load a .py file using
the usual

AddHandler python-program .py
PythonHandler mod_python.publisher
PythonDebug On

.htaccess specification in the directory in which the .py file
resides. That .py file imports some other modules, both standard ones
and some auxiliary functions I wrote and put into a separate file.

Usually the code executes fine, but every five or so times the page
is loaded (without changing anything, e.g. just doing several
reloads in a row), I get the error that mod_python for some reason
cannot find one of the modules that is being imported (namely the
file with the auxiliary functions, called tagarela_util.py, which is
in the same directory). I'm including an example error message
below.

This error never seems to appear for the standard modules I import,
(or when I put that file into the python2.4/site-packages which is 
in sys.path), so I suspect that it has something to do with the way
mod_python seems to use the .htaccess files to determine which
directory to add to the sys.path?

I very much hope someone can explain this erratic behavior and how I
can fix it - as it stands the only way I found to avoid these
occasional errors arising when importing modules is to put
everything into the same file, i.e. to avoid importing modules,
which naturally leads to massive code duplication and
non-modularity.

Any suggestions would be much appreciated!

Best,
Detmar

--
Detmar Meurers, Associate Professor, Dept. of Linguistics, OSU
201a Oxley Hall, 1712 Neil Avenue, Columbus OH 43210-1298, USA
http://ling.osu.edu/~dm/                 GnuPG key on web page

****Server used:

'SERVER_SOFTWARE': 'Apache/2.2.0 (Unix) mod_ssl/2.2.0 OpenSSL/0.9.8a DAV/2 mod_python/3.2.8 Python/2.4.2'

(Errors appears with a variety of browsers, so seems to be independent
of that.) 

****Error message:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/opt/local/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/opt/local/lib/python2.4/site-packages/mod_python/publisher.py", line 204, in handler
    module = page_cache[req]

  File "/opt/local/lib/python2.4/site-packages/mod_python/cache.py", line 82, in __getitem__
    return self._checkitem(name)[2]

  File "/opt/local/lib/python2.4/site-packages/mod_python/cache.py", line 124, in _checkitem
    value = self.build(key, name, opened, entry)

  File "/opt/local/lib/python2.4/site-packages/mod_python/publisher.py", line 77, in build
    return ModuleCache.build(self, key, req, opened, entry)

  File "/opt/local/lib/python2.4/site-packages/mod_python/cache.py", line 371, in build
    exec opened in module.__dict__

  File "/home/dm/public_html/icall/tagarela/activities/Reading/index.py", line 3, in ?
    from tagarela_util import _get_session, _file2string

ImportError: No module named tagarela_util

From jpg at jgassociates.ca  Sun Jun  4 10:01:55 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jun  4 10:02:30 2006
Subject: [mod_python] [mod python] ABout Sessions
In-Reply-To: <1149321243.6305.45.camel@localhost>
References: <1149321243.6305.45.camel@localhost>
Message-ID: <4482E7D3.7050608@jgassociates.ca>

S.R.Pard? wrote:
> Hi, 
> 
> Sorry to ask again.
> 
> I need some acclarations about the session object.
> 
> 
> I have been developing VBScripts ASP pages from 1999. I have used a lot
> the ASP's session and application objects. Now I'm decided to use PSP
> Mod_Python instead.
> I'm using Ubuntu, with Apache2 and Mod_Python for server and the Firefox
> web client.
> 
> 
> 1st. Question :
> Only One Session is created for various Firefox instances in the same
> PC.
> In ASP I could open 2 windows with different program views and data, on
> different sessions (opening a new explorer. If you select New in menu
> Archive with a page opened, you will have a another new page with same
> session that the previous page)
> Is possible to change how session works to make that ?
> If not, can I make only one page could be open to reduce the possibility
> of error (I Think in use target="APPL-WINDOW-NAME" in all the links,
> that make IE open page in an explicit named window )

Not directly, but you could likely subclass one of the session classes 
to do what you want.

> 
> 2nd. Question:
> Usually, in ASP is possible to create a Session referencing a DB
> Connection object. So you can use that object to access the server
> during the session using that stored connection. In IIS ASP that is fast
> and secure.
> I have been reading about problems storing not sys objects in sessions,
> so I am unsure about that.

You are correct. The session data is a python pickle (except for 
MemorySession on Windows) and you will have problems if you try to 
pickle the db connection object.

> 
> 3nd. Question:
> All the sessions in IIS ASP would have the connection object (yes that I
> mencioned in 2nd. point) previously stored because it was stored on a
> Session_OnStart() event generated when a page uses Session object and no
> Session is active for that petition, defined in global.asa web
> configuration,  
> So in the pages you can use :
> 	connectionForThePage = Session('connectionForTheSession')
> and OLE! you will have a connection created , because if session not
> exist when page load Event will be fired and my code inserted into
> on_star will create an object and let it stored in session before the
> page executed (so Sesssion('con...') always exist)
> 
> Is there a Session_OnStart equivalent in Mod_Python (remember I am using
> PSP , I think Publisher can permit write my handler and check that , but
> I wanted a transparent method not related to write a handler if it is
> possible)

As I understand your question I would say the answer is no. The best you 
can do is use sess.is_new() to test if it is an existing session. If 
not, you could then do your initialization.

> 
> 4nd. Question:
> Because Apache is threaded, varios modules are opened by various
> Mod_python server instances. So the same modules can be loaded more than
> one time. So global variables of a module are different to each session,
> and to make it hard  possibly different request on same session.
> In IIS ASP I could  use application object to store data to be accesed
> into different sessions in all the sessions of the server. And
> Application object could be LOCKED and UNLOCKED to ensure thread
> security.  
> In Mod_Python, the only solution its to write a class, that servers
> global variables from a Database with appropiate locking ?


As you have surmised, global variables are a problem when using apache. 
The easiest solution is to store you data in a session if possible, as 
locking is turned on by default. You can turn it off, as well as lock 
and unlock the session manually if required but generally you don't need 
to worry.

Jim

From jpg at jgassociates.ca  Sun Jun  4 10:09:11 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jun  4 10:10:09 2006
Subject: [mod_python] installation problems...
In-Reply-To: <4480BECA.3070708@puc.cl>
References: <4480BECA.3070708@puc.cl>
Message-ID: <4482E987.90404@jgassociates.ca>

Gonzalo Rojas wrote:
> Hi:
> 
>   I have a PC with Windows XP Pro, Apache HTTP Server 2.2.2, Python 2.4 
> (all runs ok)... I downloaded ModPython version 3.2.8 
> (mod_python-3.2.8.win32-py2.4.exe file)... I installed ModPython 
> following the instructions of chapter 2 
> (http://www.modpython.org/live/current/doc-html), but when I tried to 
> restart Apache, appears the following error: "httpd.exe: Syntax error on 
> line 107 of C:/Archivos de programa/Apache Software 
> Foundation/Apache2.2/modules/mod_python.so into server: No se 
> encontr\xf3 el proceso especificado"...
> 
>   "no se encontro el proceso especificado" means "the specified process 
> wasn't found"...
> 
>   I review, and I have mod_python.so file in the C:/Archivos de 
> programa/Apache Software Foundation/Apache2.2/modules/ path...
> 
>   Which could be the problem ?...
> 

Nicolas had some good Windows tips a few months ago.

Quote:

"""
One of the possible cause of your problem is that Apache does find
mod_python.so but not one of the DLL it relies on. Unfortunately the 
error reporting in this case is quite scarce and misguiding.

The candidates missing DLLs are python24.dll and the Microsoft Runtime 
DLLS (normally msvcr71.dll and msvcp71.dll).

Make sure that your Python directory and the runtime DLLs can be found 
on your PATH. The runtime DLLs are normaly copied in your Python 
directory, so putting the Python directory on your PATH variable should 
do the trick.

Also, make sure that the user which is running Apache has its PATH 
variable properly set. The best way to do this is to define it at the 
system-wide level, but logging it under the user and defining the 
variable at the user level is also possible.
"""

Jim

From jpg at jgassociates.ca  Sun Jun  4 10:18:53 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jun  4 10:18:48 2006
Subject: [mod_python] erratic import errors with mod_python
In-Reply-To: <20060603183600.GA13085@ling.osu.edu>
References: <20060603183600.GA13085@ling.osu.edu>
Message-ID: <4482EBCD.6050400@jgassociates.ca>

Detmar Meurers wrote:
> Hi,
> 
> I'm using mod_python's publisher handler to load a .py file using
> the usual
> 
> AddHandler python-program .py
> PythonHandler mod_python.publisher
> PythonDebug On
> 
> .htaccess specification in the directory in which the .py file
> resides. That .py file imports some other modules, both standard ones
> and some auxiliary functions I wrote and put into a separate file.
> 
> Usually the code executes fine, but every five or so times the page
> is loaded (without changing anything, e.g. just doing several
> reloads in a row), I get the error that mod_python for some reason
> cannot find one of the modules that is being imported (namely the
> file with the auxiliary functions, called tagarela_util.py, which is
> in the same directory). I'm including an example error message
> below.
> 
> This error never seems to appear for the standard modules I import,
> (or when I put that file into the python2.4/site-packages which is 
> in sys.path), so I suspect that it has something to do with the way
> mod_python seems to use the .htaccess files to determine which
> directory to add to the sys.path?
> 
> I very much hope someone can explain this erratic behavior and how I
> can fix it - as it stands the only way I found to avoid these
> occasional errors arising when importing modules is to put
> everything into the same file, i.e. to avoid importing modules,
> which naturally leads to massive code duplication and
> non-modularity.
> 
> Any suggestions would be much appreciated!
> 
> Best,
> Detmar
> 
> --
> Detmar Meurers, Associate Professor, Dept. of Linguistics, OSU
> 201a Oxley Hall, 1712 Neil Avenue, Columbus OH 43210-1298, USA
> http://ling.osu.edu/~dm/                 GnuPG key on web page
> 
> ****Server used:
> 
> 'SERVER_SOFTWARE': 'Apache/2.2.0 (Unix) mod_ssl/2.2.0 OpenSSL/0.9.8a DAV/2 mod_python/3.2.8 Python/2.4.2'
> 
> (Errors appears with a variety of browsers, so seems to be independent
> of that.) 
> 
> ****Error message:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/opt/local/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/opt/local/lib/python2.4/site-packages/mod_python/publisher.py", line 204, in handler
>     module = page_cache[req]
> 
>   File "/opt/local/lib/python2.4/site-packages/mod_python/cache.py", line 82, in __getitem__
>     return self._checkitem(name)[2]
> 
>   File "/opt/local/lib/python2.4/site-packages/mod_python/cache.py", line 124, in _checkitem
>     value = self.build(key, name, opened, entry)
> 
>   File "/opt/local/lib/python2.4/site-packages/mod_python/publisher.py", line 77, in build
>     return ModuleCache.build(self, key, req, opened, entry)
> 
>   File "/opt/local/lib/python2.4/site-packages/mod_python/cache.py", line 371, in build
>     exec opened in module.__dict__
> 
>   File "/home/dm/public_html/icall/tagarela/activities/Reading/index.py", line 3, in ?
>     from tagarela_util import _get_session, _file2string
> 
> ImportError: No module named tagarela_util

Is it possible that targarel_util is being imported by the standard 
python import statement, as well as by publisher? The importer is being 
revamped for 3.3 and will hopefully take care of this sort of problem, 
but I think the best plan is to move your util files outside of the 
document tree. Use PythonPath "['/path/to/your/utils'] + sys.path" and a 
standard "import targarela_util". The drawback here is that these 
modules won't get re-imported if they change, necessitating an Apache 
restart. In practice I don't find this to be a huge burden since my 
support files seldom change on the production machine.

Jim



From linux at qbox.es  Sun Jun  4 12:25:45 2006
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Sun Jun  4 12:25:52 2006
Subject: [mod_python] Destructors called more than Constructors
Message-ID: <1149438345.7726.20.camel@localhost>

Hi,

I'm having an unexpected behavior in destructor calls.

I have 1 class with class attributtes counting destructions and
constructions.

When I reload modules c.py (defining DEBUG as True) all works Ok.

If I don't reload (DEBUG as False), destructor is called more times 3
times for 2 constructors calls.

I don't understand why the different behavior.



--- index.psp ----------------------------------------
<%
DEBUG = False # or TRUE 

from c import C
if DEBUG: reload C
from f import F
if DEBUG: reload F

f = F()
c = f.c

req.write ('Constructed %s' % C.constcount)
req.write (' Destructed %s' % C.destrcount)
%>

--- f.py --------------------------------------------
from c import C
if DEBUG: reload C

class F:
	def __init__(self):
		...
		self.c = C()
		...

--- c.py ---------------------------------------------
class C:
   constcount = 0
   destrcount = 0

   def __init__(self):
	...
	constcount += 1
	...

   def __del__(self):
	...
	destrcount -= 1
	...

--------------------------------------------------------



Thank You

	S.R.Pard?


From linux at qbox.es  Sun Jun  4 13:14:42 2006
From: linux at qbox.es (=?ISO-8859-1?Q?S=2ER=2EPard=E1?=)
Date: Sun Jun  4 13:14:46 2006
Subject: [mod_python] destructor againsts constructor calls
Message-ID: <1149441283.7726.28.camel@localhost>

Hi,
 
Sorry to repeat:
I want to note that in module f: I'm using a session to save last state.


I'm having an unexpected behavior in destructor calls.

I have 1 class with class attributtes counting destructions and
constructions.

When I reload modules c.py (defining DEBUG as True) all works Ok.

If I don't reload (DEBUG as False), destructor is called more times 3
times for 2 constructors calls.

I don't understand why the different behavior.



--- index.psp ----------------------------------------
<%
DEBUG = False # or TRUE 

from c import C
if DEBUG: reload C
from f import F
if DEBUG: reload F

f = F()
c = f.c

req.write ('Constructed %s' % C.constcount)
req.write (' Destructed %s' % C.destrcount)
%>

--- f.py --------------------------------------------
from c import C
if DEBUG: reload C

class F:
        def __init__(self):
                ...
		if session.has_key('cstate'): 
			self.c = session('cstate')
                else:
			self.c = C()
		...                
		session('cstate') = self.c
		...

--- c.py ---------------------------------------------
class C:
   constcount = 0
   destrcount = 0

   def __init__(self):
        ...
        constcount += 1
        ...

   def __del__(self):
        ...
        destrcount -= 1
        ...

--------------------------------------------------------



Thank You

        S.R.Pard?

From richardlewis at fastmail.co.uk  Mon Jun  5 11:16:41 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Mon Jun  5 11:16:54 2006
Subject: [mod_python] Initial configuration and persistence
Message-ID: <200606051616.43515.richardlewis@fastmail.co.uk>

Hi there,

I'm new to mod_python and have nearly finished writing a module implementing a 
subset of Apache Cocoon's functionaiity, providing URI pattern matching, 
Berkeley DB XML-powered XQuery and libxslt-powered XSLT transformations.

There are a couple of things I'm stuck on, though.

My handler works fine when tested from the command line and it also works from 
Apache when I include my special XML configuration file directly in the 
handler source code. However, I'd like to be able to have the configuration 
file separate from the handler source code so that I can use the handler 
unaltered for multiple sites.

What I can't do is work out how to pass the file name of the XML configuration 
file as a parameter to mod_python from my Apache configuration file when my 
handler is initially loaded. I've added an Apache SetEnv directive and I can 
see it from apache.config_tree() but I can't work out how to get its value.

My VirtualHost configuration currently looks like this:

NameVirtualHost *
<VirtualHost *>
    ServerName www.studios.uea.ac.uk
    DocumentRoot /var/www-studio
    SetHandler mod_python
    PythonDebug On

    <Directory /var/www-studio>
        SetEnv sitemap_config sitemap.xml
        PythonHandler sitemap
    </Directory>
</VirtualHost>

Any ideas how to get that SetEnv's value from inside sitemap.py?

The other thing I'm stuck on is implementing persistence. I currently have my 
DB XML manager, some compiled XSLT stylesheets and other configuration data 
stored as global variables in my handler. However, from my Apache log, it 
looks as though it reloads my handler module every time a request is made, 
thus reloading the database connection, re-compiling the stylesheets etc. 
when I'd rather they just persisted between requests. Is there a way of 
making them persist? Or is it just my imagination that they are being 
reloaded?

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
-=-=-=-=-=-=-=-=-=-=-=-=-=-
From David.Bear at asu.edu  Mon Jun  5 12:21:56 2006
From: David.Bear at asu.edu (David Bear)
Date: Mon Jun  5 12:22:07 2006
Subject: [mod_python] global textual constants
Message-ID: <20060605162156.GB12231@asu.edu>

I am attempting to have modpython populate certain slots in a psp
template. 

Since publisher calls the function named on the url automagically, is
there  some init that I can call prior to that? I would like to have
my script read some files that would provide globally available text
-- something like a common footer disclaimer --

so I could do someting like

slot1 = open('slot1.txt', 'r').read()
slot2 = open('slot2.txt', 'r').read()

Then slot1 and slot2 would be available in any function that I need
them.

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From ccbean at gmail.com  Mon Jun  5 13:45:48 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Jun  5 13:45:52 2006
Subject: [mod_python] Initial configuration and persistence
In-Reply-To: <200606051616.43515.richardlewis@fastmail.co.uk>
References: <200606051616.43515.richardlewis@fastmail.co.uk>
Message-ID: <29a6ca010606051045l31efe60ib8b393a86a6a3ed2@mail.gmail.com>

Hi Richard,

Here's a couple of things to address your second question.  If you're
seeing messages in your error logs like "(re)importing module *your
handler*", this doesn't necessarily mean that the module was reloaded
and your global persistence was lost; it's a diagnostic message
generated when you've enabled PythonDebug.
One method that I've found useful for determining when global code is
executed is to add a print statement in the global scope right after
setting up your persistent stuff (to print to the error log without
having a request object available, you can do something like this:
http://www.modpython.org/FAQ/faqw.py?req=edit&file=faq02.003.htp ).
This will give you a much better idea of when your modules are being
reloaded.

This will behave differently depending on which platform you're using.
 With a prefork MPM, the first several requests after you've restarted
will create a new process with a new interpreter, so you'll see your
persistent objects get created several times before an existing
interpreter handles your request.  If you post your platform /
version, somebody can probably give you more specific advice.

HTH,
Colin


On 6/5/06, Richard Lewis <richardlewis@fastmail.co.uk> wrote:
> Hi there,
>
> I'm new to mod_python and have nearly finished writing a module implementing a
> subset of Apache Cocoon's functionaiity, providing URI pattern matching,
> Berkeley DB XML-powered XQuery and libxslt-powered XSLT transformations.
>
> There are a couple of things I'm stuck on, though.
>
> My handler works fine when tested from the command line and it also works from
> Apache when I include my special XML configuration file directly in the
> handler source code. However, I'd like to be able to have the configuration
> file separate from the handler source code so that I can use the handler
> unaltered for multiple sites.
>
> What I can't do is work out how to pass the file name of the XML configuration
> file as a parameter to mod_python from my Apache configuration file when my
> handler is initially loaded. I've added an Apache SetEnv directive and I can
> see it from apache.config_tree() but I can't work out how to get its value.
>
> My VirtualHost configuration currently looks like this:
>
> NameVirtualHost *
> <VirtualHost *>
>     ServerName www.studios.uea.ac.uk
>     DocumentRoot /var/www-studio
>     SetHandler mod_python
>     PythonDebug On
>
>     <Directory /var/www-studio>
>         SetEnv sitemap_config sitemap.xml
>         PythonHandler sitemap
>     </Directory>
> </VirtualHost>
>
> Any ideas how to get that SetEnv's value from inside sitemap.py?
>
> The other thing I'm stuck on is implementing persistence. I currently have my
> DB XML manager, some compiled XSLT stylesheets and other configuration data
> stored as global variables in my handler. However, from my Apache log, it
> looks as though it reloads my handler module every time a request is made,
> thus reloading the database connection, re-compiling the stylesheets etc.
> when I'd rather they just persisted between requests. Is there a way of
> making them persist? Or is it just my imagination that they are being
> reloaded?
>
> Cheers,
> Richard
> --
> -=-=-=-=-=-=-=-=-=-=-=-=-=-
> Richard Lewis
> Sonic Arts Research Archive
> http://www.sara.uea.ac.uk/
> -=-=-=-=-=-=-=-=-=-=-=-=-=-
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From ccbean at gmail.com  Mon Jun  5 13:52:38 2006
From: ccbean at gmail.com (Colin Bean)
Date: Mon Jun  5 13:52:41 2006
Subject: [mod_python] global textual constants
In-Reply-To: <20060605162156.GB12231@asu.edu>
References: <20060605162156.GB12231@asu.edu>
Message-ID: <29a6ca010606051052l269ab968yd0a0f1a959b0ce2c@mail.gmail.com>

I haven't used publisher extensively, but FWIW you should be able to
call your setup code in the global scope of the module (it'll be
executed when publisher imports the module), and reference slot1,
slot2, etc in as globals in your publisher code.

-Colin

(sorry for the duplicate, David, I forgot to re: list)

On 6/5/06, David Bear <David.Bear@asu.edu> wrote:
> I am attempting to have modpython populate certain slots in a psp
> template.
>
> Since publisher calls the function named on the url automagically, is
> there  some init that I can call prior to that? I would like to have
> my script read some files that would provide globally available text
> -- something like a common footer disclaimer --
>
> so I could do someting like
>
> slot1 = open('slot1.txt', 'r').read()
> slot2 = open('slot2.txt', 'r').read()
>
> Then slot1 and slot2 would be available in any function that I need
> them.
>
> --
> David Bear
> phone:  480-965-8257
> fax:    480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jpg at jgassociates.ca  Mon Jun  5 13:55:03 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Jun  5 13:53:35 2006
Subject: [mod_python] Initial configuration and persistence
In-Reply-To: <200606051616.43515.richardlewis@fastmail.co.uk>
References: <200606051616.43515.richardlewis@fastmail.co.uk>
Message-ID: <44846FF7.3060407@jgassociates.ca>

Richard Lewis wrote:
> Hi there,
> 
> I'm new to mod_python and have nearly finished writing a module implementing a 
> subset of Apache Cocoon's functionaiity, providing URI pattern matching, 
> Berkeley DB XML-powered XQuery and libxslt-powered XSLT transformations.
> 
> There are a couple of things I'm stuck on, though.
> 
> My handler works fine when tested from the command line and it also works from 
> Apache when I include my special XML configuration file directly in the 
> handler source code. However, I'd like to be able to have the configuration 
> file separate from the handler source code so that I can use the handler 
> unaltered for multiple sites.
> 
> What I can't do is work out how to pass the file name of the XML configuration 
> file as a parameter to mod_python from my Apache configuration file when my 
> handler is initially loaded. I've added an Apache SetEnv directive and I can 
> see it from apache.config_tree() but I can't work out how to get its value.
> 
> My VirtualHost configuration currently looks like this:
> 
> NameVirtualHost *
> <VirtualHost *>
>     ServerName www.studios.uea.ac.uk
>     DocumentRoot /var/www-studio
>     SetHandler mod_python
>     PythonDebug On
> 
>     <Directory /var/www-studio>
>         SetEnv sitemap_config sitemap.xml
>         PythonHandler sitemap
>     </Directory>
> </VirtualHost>
> 
> Any ideas how to get that SetEnv's value from inside sitemap.py?

Use
     req.add_common_vars()
     env_dict = req.subprocess_env

Note that the keys in subprocess_env will be pre-pended with REDIRECT_ 
if you do an internal redirect.

Another option would be to use PythonOption.
     PythonOption yournamespace.config /path/to/config

and retrieve with
    option_dict = req.get_options()

Note that both of these are only usable when the request is being 
processed, not when the module is being imported. You could have your 
handler check if everything is initialized before proceeding. A more 
transparent way would be to do this check in an earlier phase such as 
PythonFixupHandler. That way it will be transparent to your handler.

> The other thing I'm stuck on is implementing persistence. I currently have my 
> DB XML manager, some compiled XSLT stylesheets and other configuration data 
> stored as global variables in my handler. However, from my Apache log, it 
> looks as though it reloads my handler module every time a request is made, 
> thus reloading the database connection, re-compiling the stylesheets etc. 
> when I'd rather they just persisted between requests. Is there a way of 
> making them persist? Or is it just my imagination that they are being 
> reloaded?

You can turn off reloading with "PythonAutoReload Off".

Persistence is tricky, depending on which apache-mpm you are using. For 
mpm-worker or mpm-prefork you'll have multiple processes, each with it's 
own interpreter. You can cache data at the module level, but recognize 
that you may have multiple copies of that data - changes in the data in 
one interpreter will not be reflected in another.

Modules loaded with the standard python import statement will not be 
reloaded by mod_python. That combined with the fact that each 
interpreter gets it's own namespace may open some other options for you. 
Something like this may work, but it is totally untested:

For each VirtualHost (n) in your apache config:

PythonPath "['/path/to/site/virtualhost-n'] + sys.path"

Each virtualhost gets its own siteconfig.py, but in directory virutalhost-n

In your handler module use:

import siteconfig

Hopefully (I did say untested, right?) each interpreter will import the 
correct siteconfig module. You could the use that same module for 
caching bits of data. The drawback is that you'll need to restart apache 
when you make any changes to siteconfig.py

Either way, you'll need to make sure you are accessing your module data 
in a thread-safe manner for mpm-worker.

Jim

From jpg at jgassociates.ca  Mon Jun  5 13:56:19 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Jun  5 13:54:45 2006
Subject: [mod_python] global textual constants
In-Reply-To: <20060605162156.GB12231@asu.edu>
References: <20060605162156.GB12231@asu.edu>
Message-ID: <44847043.5070109@jgassociates.ca>

See my reply to Richard Lewis as it deals with a similar question.

Jim

David Bear wrote:
> I am attempting to have modpython populate certain slots in a psp
> template. 
> 
> Since publisher calls the function named on the url automagically, is
> there  some init that I can call prior to that? I would like to have
> my script read some files that would provide globally available text
> -- something like a common footer disclaimer --
> 
> so I could do someting like
> 
> slot1 = open('slot1.txt', 'r').read()
> slot2 = open('slot2.txt', 'r').read()
> 
> Then slot1 and slot2 would be available in any function that I need
> them.
> 

From webb.sprague at gmail.com  Mon Jun  5 18:34:09 2006
From: webb.sprague at gmail.com (Webb Sprague)
Date: Mon Jun  5 18:34:13 2006
Subject: [mod_python] weird error in mod_python (3.1.4.r1)
	/scipy(0.4.8)/gentoo (~x86) web application
In-Reply-To: <b11ea23c0604022106j6261bdaay4e8f02b001327938@mail.gmail.com>
References: <1144035392.2357@dscpl.user.openhosting.com>
	<b11ea23c0604022106j6261bdaay4e8f02b001327938@mail.gmail.com>
Message-ID: <b11ea23c0606051534y1e28f958yec54dac314469b96@mail.gmail.com>

Hi all,

I am using mod_python to send binary files and I would like the client
to know the length of the file (so their "percent downloaded" widget
can be used).  Is there a way to put the byte length in the headers
some how?

I did look in the request object docs, but couldn't find it.

Thx
W

On 4/2/06, Webb Sprague <webb.sprague@gmail.com> wrote:
> Thanks to Graham's help, I found the typo
> ("sys.path.append(os.getcwd)" should have been
> "sys.path.append(os.getcwd())"), and all is well.
>
> W
>
> On 4/2/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > Webb Sprague wrote ..
> > > This may be un-reproducible, and it does NOT happen within ipython
> > > shell, but I am getting the backtrace below when trying to import
> > > scipy within my application.  I would guess it has to do with the very
> > > outdated ebuild of mod_python, (see the gentoo bug:
> > > http://bugs.gentoo.org/show_bug.cgi?id=123852), but just in case
> > > anybody has any quick fixes, please let me know.
> > >
> > > I have restarted Apache numerous times to make sure there isn't some
> > > weird cache thing going on (the source of most of my phantom bug
> > > reports).  Scipy 0.3.2 does not have this problem.
> >
> > Looking through pkg_resources.py, critical bit of code seems to be:
> >
> > class WorkingSet(object):
> >     """A collection of active distributions on sys.path (or a similar list)"""
> >
> >     def __init__(self, entries=None):
> >         """Create working set from list of path entries (default=sys.path)"""
> >         self.entries = []
> >         self.entry_keys = {}
> >         self.by_key = {}
> >         self.callbacks = []
> >
> >         if entries is None:
> >             entries = sys.path
> >
> >         for entry in entries:
> >             self.add_entry(entry)
> >
> > Specifically, "entries" is set to 'sys.path' and then each entry in that is
> > processed. The final error suggests that one of the entries in 'sys.path'
> > is actually a function and not a string.
> >
> > Are you setting 'sys.path' using PythonPath directive in mod_python
> > and somehow stuffed it up, or are you setting 'sys.path' explicitly in
> > any other places?
> >
> > Graham
> >
> > > Backtrace follows. (6), with LcUtil.py, is where it tries to import
> > > and errors out.
> > >
> > > Mod_python error: "PythonHandler mod_python.publisher"
> > >
> > > Traceback (most recent call last):
> > >
> > > (1)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
> > > line 299, in HandlerDispatch
> > >     result = object(req)
> > >
> > > (2)  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",
> > > line 98, in handler
> > >     path=[path])
> > >
> > > (3)  File "/usr/lib/python2.4/site-packages/mod_python/apache.py",
> > > line 457, in import_module
> > >     module = imp.load_module(mname, f, p, d)
> > >
> > > (4)  File "/var/www/localhost/htdocs/larry/lc.py", line 32, in ?
> > >     import LcSinglePopObject
> > >
> > >  (5) File "/var/www/localhost/htdocs/larry/LcSinglePopObject.py", line
> > > 40, in ?
> > >     import LcUtil
> > >
> > > (6)  File "/var/www/localhost/htdocs/larry/LcUtil.py", line 8, in ?
> > >     import scipy as S
> > >
> > >   File "/usr/lib/python2.4/site-packages/scipy/__init__.py", line 18, in
> > > ?
> > >     import pkg_resources as _pr # activate namespace packages
> > > (manipulates __path__)
> > >
> > >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 2347,
> > > in ?
> > >     working_set = WorkingSet()
> > >
> > >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 343,
> > > in __init__
> > >     self.add_entry(entry)
> > >
> > >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 358,
> > > in add_entry
> > >     for dist in find_distributions(entry, True):
> > >
> > >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1450,
> > > in find_distributions
> > >     importer = get_importer(path_item)
> > >
> > >   File "/usr/lib/python2.4/site-packages/pkg_resources.py", line 1407,
> > > in get_importer
> > >     importer = hook(path_item)
> > >
> > > TypeError: zipimporter() argument 1 must be string, not
> > > builtin_function_or_method
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
From jpg at jgassociates.ca  Mon Jun  5 18:49:49 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Jun  5 18:46:53 2006
Subject: [mod_python] weird error in mod_python
	(3.1.4.r1)	/scipy(0.4.8)/gentoo (~x86) web application
In-Reply-To: <b11ea23c0606051534y1e28f958yec54dac314469b96@mail.gmail.com>
References: <1144035392.2357@dscpl.user.openhosting.com>	<b11ea23c0604022106j6261bdaay4e8f02b001327938@mail.gmail.com>
	<b11ea23c0606051534y1e28f958yec54dac314469b96@mail.gmail.com>
Message-ID: <4484B50D.30502@jgassociates.ca>

Webb Sprague wrote:
> Hi all,
> 
> I am using mod_python to send binary files and I would like the client
> to know the length of the file (so their "percent downloaded" widget
> can be used).  Is there a way to put the byte length in the headers
> some how?
> 
> I did look in the request object docs, but couldn't find it.

 From the docs:


set_content_length(len)
     Sets the value of req.clength and the "Content-Length" header to 
len. Note that after the headers have been sent out (which happens just 
before the first byte of the body is written, i.e. first call to 
req.write()), calling the method is meaningless.

Jim
From David.Bear at asu.edu  Mon Jun  5 20:11:56 2006
From: David.Bear at asu.edu (David Bear)
Date: Mon Jun  5 20:12:05 2006
Subject: [mod_python] example seems clumsy
Message-ID: <20060606001156.GF12231@asu.edu>

I've been looking at ways to get a full url into my script and all the
methods I see on the req object seem lacking in making this simple.

in the example on the web site there is a publisher script that has
this:


def _base_url(req, ssl=0):
    '''
    see psp_site example for this function '''
    host = req.headers_in.get('host', req.server.server_hostname)
    if not ':' in host:
        port = req.connection.local_addr[1]
        if port != 80 and not ssl:
            host = "%s:%d" % (host, req.connection.local_addr[1])
    if ssl:
        base = 'https://' + host + req.uri
    else:
        base = 'http://' + host + req.uri
    return os.path.split(base)[0]

this seems really clunky -- and it is using some attributes on the req
object that don't seem to be documented on the web site. I suppose the
easy way to test where a request was made over ssl/tls is ?? seems it
set in the funtion call. Is req.connection.local_addr[1] the port
number? I can't seem to find this documented on the modpython site.



-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From webb.sprague at gmail.com  Mon Jun  5 23:09:08 2006
From: webb.sprague at gmail.com (Webb Sprague)
Date: Mon Jun  5 23:09:12 2006
Subject: [mod_python] binary file, part II: name of file?
Message-ID: <b11ea23c0606052009p2eea971cu1d6cfd2245adf210@mail.gmail.com>

Hope this isn't as RTFM as my last post:

Is there anyway to specify programmatically a good default name for a
binary file?  My URL is /blah/objectDump?id=5, and the default
filename Windows gives for saving it is "objectDump"--I would like to
generate the filename and have it be something like
"forecast-object-5.txt'

Thx
From deron.meranda at gmail.com  Tue Jun  6 01:21:42 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Jun  6 01:21:45 2006
Subject: [mod_python] binary file, part II: name of file?
In-Reply-To: <b11ea23c0606052009p2eea971cu1d6cfd2245adf210@mail.gmail.com>
References: <b11ea23c0606052009p2eea971cu1d6cfd2245adf210@mail.gmail.com>
Message-ID: <5c06fa770606052221v12daeb17o179afecf426f8ed@mail.gmail.com>

On 6/5/06, Webb Sprague <webb.sprague@gmail.com> wrote:
> Is there anyway to specify programmatically a good default name for a
> binary file?  My URL is /blah/objectDump?id=5, and the default
> filename Windows gives for saving it is "objectDump"--I would like to
> generate the filename and have it be something like
> "forecast-object-5.txt'

Perhaps the best way is to send a Content-Disposition header
(in addition to your Content-Type header).  You'll usually send
one of these two variants:

  Content-Disposition: inline; filename=forecast-object-5.txt
  Content-Disposition: attachment; filename=forcast-object-5.txt

If the filename contains any HTTP special characters (called
"separators") then you'll need to quote the filename using
the HTTP quoted-string syntax.

The "inline" form will cause the browser to try to display the
file inline, if possible (e.g., displayed in the browser window).
The "attachment" form will cause the browser to open a
"save as" dialog, using the filename parameter as the
suggested filename.

The other (less desirable) way is to construct your URL
with extra unused path components at the end, such that
the last one is the filename.

You can also use some of the maps and functions in the
standard Python module "mimetypes" to help you construct
a proper filename (such as picking an extension given
a content-type).
-- 
Deron Meranda
From nicolas at lehuen.com  Tue Jun  6 01:55:01 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Jun  6 01:55:05 2006
Subject: [mod_python] example seems clumsy
In-Reply-To: <20060606001156.GF12231@asu.edu>
References: <20060606001156.GF12231@asu.edu>
Message-ID: <c298f2d70606052255x42e0aa8cx5cb7e1618a3cc7c8@mail.gmail.com>

Hi David,

There was a thread a while ago on the development mailing list :

http://mail-archives.apache.org/mod_mbox/httpd-python-dev/200511.mbox/%3cc298f2d70511290035g19150c0fx@mail.gmail.com%3e

It turns out that there is no other way than doing this yourself in
3.2.x and before. Graham has added a construct_url method to the
request object which exposes the ap_construct_url function from the
Apache API and does precisely what you want. Unfortunately it'll be
only present in mod_python 3.3, unless it is backported to the 3.2
branch.

Regards,
Nicolas

2006/6/6, David Bear <David.Bear@asu.edu>:
> I've been looking at ways to get a full url into my script and all the
> methods I see on the req object seem lacking in making this simple.
>
> in the example on the web site there is a publisher script that has
> this:
>
>
> def _base_url(req, ssl=0):
>     '''
>     see psp_site example for this function '''
>     host = req.headers_in.get('host', req.server.server_hostname)
>     if not ':' in host:
>         port = req.connection.local_addr[1]
>         if port != 80 and not ssl:
>             host = "%s:%d" % (host, req.connection.local_addr[1])
>     if ssl:
>         base = 'https://' + host + req.uri
>     else:
>         base = 'http://' + host + req.uri
>     return os.path.split(base)[0]
>
> this seems really clunky -- and it is using some attributes on the req
> object that don't seem to be documented on the web site. I suppose the
> easy way to test where a request was made over ssl/tls is ?? seems it
> set in the funtion call. Is req.connection.local_addr[1] the port
> number? I can't seem to find this documented on the modpython site.
>
>
>
> --
> David Bear
> phone:  480-965-8257
> fax:    480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From richardlewis at fastmail.co.uk  Tue Jun  6 06:29:28 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Jun  6 06:29:40 2006
Subject: [mod_python] Initial configuration and persistence
In-Reply-To: <44846FF7.3060407@jgassociates.ca>
References: <200606051616.43515.richardlewis@fastmail.co.uk>
	<44846FF7.3060407@jgassociates.ca>
Message-ID: <200606061129.30808.richardlewis@fastmail.co.uk>

On Monday 05 June 2006 18:55, Jim Gallacher wrote:
> Richard Lewis wrote:
> >
> > Any ideas how to get that SetEnv's value from inside sitemap.py?
>
> Use
>      req.add_common_vars()
>      env_dict = req.subprocess_env
>
> Note that the keys in subprocess_env will be pre-pended with REDIRECT_
> if you do an internal redirect.
>
> Another option would be to use PythonOption.
>      PythonOption yournamespace.config /path/to/config
>
> and retrieve with
>     option_dict = req.get_options()
>
> Note that both of these are only usable when the request is being
> processed, not when the module is being imported. You could have your
> handler check if everything is initialized before proceeding. A more
> transparent way would be to do this check in an earlier phase such as
> PythonFixupHandler. That way it will be transparent to your handler.
>
Thanks for this. I've added some to code to the beginning of my request 
handler which checks if the global persistant variables are empty and, if 
they are, it retrieves the name of the configuration file from the SetEnv 
directive using req.subprocess_env as you suggested and initialises the 
handler correctly.

> > The other thing I'm stuck on is implementing persistence.
>
> Modules loaded with the standard python import statement will not be
> reloaded by mod_python. That combined with the fact that each
> interpreter gets it's own namespace may open some other options for you.
> Something like this may work, but it is totally untested:
>
> For each VirtualHost (n) in your apache config:
>
> PythonPath "['/path/to/site/virtualhost-n'] + sys.path"
>
> Each virtualhost gets its own siteconfig.py, but in directory virutalhost-n
>
> In your handler module use:
>
> import siteconfig
>
> Hopefully (I did say untested, right?) each interpreter will import the
> correct siteconfig module. You could the use that same module for
> caching bits of data. The drawback is that you'll need to restart apache
> when you make any changes to siteconfig.py
>
> Either way, you'll need to make sure you are accessing your module data
> in a thread-safe manner for mpm-worker.
>
I have yet to test using my code on the main server which provides all the 
VirtualHosts I intend to use, but I'll keep this in mind in case I can't get 
it to work.

On Monday 05 June 2006 18:45, Colin Bean wrote:
> Hi Richard,
>
> Here's a couple of things to address your second question.  If you're
> seeing messages in your error logs like "(re)importing module *your
> handler*", this doesn't necessarily mean that the module was reloaded
> and your global persistence was lost; it's a diagnostic message
> generated when you've enabled PythonDebug.
> One method that I've found useful for determining when global code is
> executed is to add a print statement in the global scope right after
> setting up your persistent stuff (to print to the error log without
> having a request object available, you can do something like this:
> http://www.modpython.org/FAQ/faqw.py?req=edit&file=faq02.003.htp ).
> This will give you a much better idea of when your modules are being
> reloaded.

Yes, that is the message I was seeing. And I tested it further: if I make lots 
of requests to my handler, I only get a handful of "(re)importing module" 
entries, so that must be because of the multiple instances of Apache as you 
said. I also tried making changes to my XSLT stylesheet source files as a 
test. These are compiled when the module is loaded and stored as global 
variables. However, when I changed the stylesheet sources, the handler's 
response did not reflect the changes until I restarted Apache which means 
that they must be persisting correctly across requests.

Thanks for your help.

BTW, my set up is apache2.0.55-mpm-prefork, mod_python 3.2.8 both a supplied 
in Debian.

Cheers,
Richard

-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
-=-=-=-=-=-=-=-=-=-=-=-=-=-
From jcigar at ulb.ac.be  Tue Jun  6 08:26:42 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Jun  6 08:25:50 2006
Subject: [mod_python] segmentation fault
Message-ID: <44857482.9050305@ulb.ac.be>

Hello,

Any idea what could make Apache2 segfaulting when I have an: 
<%@ include file="/foo/bar/views/lol.html" %> in a PSP template ?

[Tue Jun 06 14:21:35 2006] [notice] child pid 28455 exit signal 
Segmentation fault (11)

If I remove the <%@ include %> statement, everything work fine.

(mod_python 3.2.8, apache 2.0.55)

Thanks

-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From jpg at jgassociates.ca  Tue Jun  6 08:38:39 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jun  6 08:38:35 2006
Subject: [mod_python] binary file, part II: name of file?
In-Reply-To: <5c06fa770606052221v12daeb17o179afecf426f8ed@mail.gmail.com>
References: <b11ea23c0606052009p2eea971cu1d6cfd2245adf210@mail.gmail.com>
	<5c06fa770606052221v12daeb17o179afecf426f8ed@mail.gmail.com>
Message-ID: <4485774F.8050908@jgassociates.ca>

Deron Meranda wrote:
> On 6/5/06, Webb Sprague <webb.sprague@gmail.com> wrote:
>> Is there anyway to specify programmatically a good default name for a
>> binary file?  My URL is /blah/objectDump?id=5, and the default
>> filename Windows gives for saving it is "objectDump"--I would like to
>> generate the filename and have it be something like
>> "forecast-object-5.txt'
> 
> Perhaps the best way is to send a Content-Disposition header
> (in addition to your Content-Type header).  You'll usually send
> one of these two variants:
> 
>  Content-Disposition: inline; filename=forecast-object-5.txt
>  Content-Disposition: attachment; filename=forcast-object-5.txt
> 
> If the filename contains any HTTP special characters (called
> "separators") then you'll need to quote the filename using
> the HTTP quoted-string syntax.
> 
> The "inline" form will cause the browser to try to display the
> file inline, if possible (e.g., displayed in the browser window).
> The "attachment" form will cause the browser to open a
> "save as" dialog, using the filename parameter as the
> suggested filename.
> 
> The other (less desirable) way is to construct your URL
> with extra unused path components at the end, such that
> the last one is the filename.
> 
> You can also use some of the maps and functions in the
> standard Python module "mimetypes" to help you construct
> a proper filename (such as picking an extension given
> a content-type).


And once you know the name of the header you are looking for, the RFCs 
become your friends.

http://rfc.net/rfc2616.html#s19.5.1
http://rfc.net/rfc2183.html

Jim
From jpg at jgassociates.ca  Tue Jun  6 08:47:52 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jun  6 08:47:44 2006
Subject: [mod_python] segmentation fault
In-Reply-To: <44857482.9050305@ulb.ac.be>
References: <44857482.9050305@ulb.ac.be>
Message-ID: <44857978.10301@jgassociates.ca>

Julien Cigar wrote:
> Hello,
> 
> Any idea what could make Apache2 segfaulting when I have an: <%@ include 
> file="/foo/bar/views/lol.html" %> in a PSP template ?
> 
> [Tue Jun 06 14:21:35 2006] [notice] child pid 28455 exit signal 
> Segmentation fault (11)
> 
> If I remove the <%@ include %> statement, everything work fine.
> 
> (mod_python 3.2.8, apache 2.0.55)

Is lol.html just html, or does it contain python or psp code as well?

Does lol.html parse correctly on its own? You can test it in a command 
line interpreter:

from mod_python import _psp

code = _psp.parse('lol.html')
print code

Jim

From jcigar at ulb.ac.be  Tue Jun  6 09:19:23 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Tue Jun  6 09:17:46 2006
Subject: [mod_python] segmentation fault
In-Reply-To: <44857978.10301@jgassociates.ca>
References: <44857482.9050305@ulb.ac.be> <44857978.10301@jgassociates.ca>
Message-ID: <448580DB.7090104@ulb.ac.be>

I found the problem.
The problem was that I have to put a relative path in place of an 
absolute path ...

Another question about the include directive, why can't I do:
mytemplate.run({'body' : 'invasive/list.psp'})

and in my template file :
<%@ include file="<%= body %>"%>

This doesn't work .. any idea ?

Jim Gallacher wrote:
> Julien Cigar wrote:
>> Hello,
>>
>> Any idea what could make Apache2 segfaulting when I have an: <%@ 
>> include file="/foo/bar/views/lol.html" %> in a PSP template ?
>>
>> [Tue Jun 06 14:21:35 2006] [notice] child pid 28455 exit signal 
>> Segmentation fault (11)
>>
>> If I remove the <%@ include %> statement, everything work fine.
>>
>> (mod_python 3.2.8, apache 2.0.55)
>
> Is lol.html just html, or does it contain python or psp code as well?
>
> Does lol.html parse correctly on its own? You can test it in a command 
> line interpreter:
>
> from mod_python import _psp
>
> code = _psp.parse('lol.html')
> print code
>
> Jim
>


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From grahamd at dscpl.com.au  Tue Jun  6 11:04:08 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun  6 11:11:21 2006
Subject: [mod_python] Tiny patch for better apr_stat usage in sendfile
Message-ID: <1149606247.5453@dscpl.user.openhosting.com>

Sergey A. Lipnevich wrote ..
> Hi All,
> 
> I'd like to offer the following patch for 3.2.8's sendfile function that
> asks APR to provide less information about a file (which is beneficial
> on Windows as APR doesn't have to construct POSIX protection flags),
> because the only field in use becomes file size. Incidentally, it also
> allows mod_python (plus Apache 2.2 patch) to work with the following
> tweak for APR 1.2.7 (required for Subversion), under Windows and Apache
> 2.2.2: http://article.gmane.org/gmane.comp.apache.apr.devel/9389/.
> 
> I didn't test the patch on anything but Windows XP. The error I was
> getting with the setup above was "Could not stat file for reading."
> I also have to mention that the whole thing was compiled with VS 2005
> compiler to support Python 2.4, although I think it's not relevant for
> the patch attached.
> 
> I hope all this patch citing is not too confusing :-).

Part of this patch may break UNIX systems. Specifically, when target is a
symbolic link, the size returned will be the length of the filename and
not the size of the target file when SIZE and not NORM is used. Thus
an incorrect amount of data is sent back.

Since I am on holidays I can't check into it any further at the moment.
If your truly believe there is a problem there to be fixed, log an issue
report on JIRA for mod_python to ensure it is addressed later.

  http://issues.apache.org/jira/browse/MODPYTHON

Graham
From jpg at jgassociates.ca  Tue Jun  6 12:03:37 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jun  6 12:02:41 2006
Subject: [mod_python] segmentation fault
In-Reply-To: <448580DB.7090104@ulb.ac.be>
References: <44857482.9050305@ulb.ac.be> <44857978.10301@jgassociates.ca>
	<448580DB.7090104@ulb.ac.be>
Message-ID: <4485A759.8010704@jgassociates.ca>

Julien Cigar wrote:
> I found the problem.
> The problem was that I have to put a relative path in place of an 
> absolute path ...

Interesting. I'm not sure if this is a know problem, but I'll 
investigate it as segmentation faults suck.

> Another question about the include directive, why can't I do:
> mytemplate.run({'body' : 'invasive/list.psp'})
> 
> and in my template file :
> <%@ include file="<%= body %>"%>
> 
> This doesn't work .. any idea ?

I assume it's a limitation of the parser but I don't know if this use 
case has come up before. I'm not sure how easy it would be to tweak the 
parser to work recursively or if it's worth the effort. Others are of 
course free to investigate. :)

As an alternative you could do:

body_template = psp.PSP(req, filename="list.psp")
mytemplate.run({'body' : body_template})

Jim

> Jim Gallacher wrote:
>> Julien Cigar wrote:
>>> Hello,
>>>
>>> Any idea what could make Apache2 segfaulting when I have an: <%@ 
>>> include file="/foo/bar/views/lol.html" %> in a PSP template ?
>>>
>>> [Tue Jun 06 14:21:35 2006] [notice] child pid 28455 exit signal 
>>> Segmentation fault (11)
>>>
>>> If I remove the <%@ include %> statement, everything work fine.
>>>
>>> (mod_python 3.2.8, apache 2.0.55)
>>
>> Is lol.html just html, or does it contain python or psp code as well?
>>
>> Does lol.html parse correctly on its own? You can test it in a command 
>> line interpreter:
>>
>> from mod_python import _psp
>>
>> code = _psp.parse('lol.html')
>> print code
>>
>> Jim
>>
> 
> 

From jpg at jgassociates.ca  Tue Jun  6 13:20:38 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jun  6 13:19:19 2006
Subject: [mod_python] Tiny patch for better apr_stat usage in sendfile
In-Reply-To: <1149606247.5453@dscpl.user.openhosting.com>
References: <1149606247.5453@dscpl.user.openhosting.com>
Message-ID: <4485B966.5060401@jgassociates.ca>

Graham Dumpleton wrote:
> Sergey A. Lipnevich wrote ..
>> Hi All,
>>
>> I'd like to offer the following patch for 3.2.8's sendfile function that
>> asks APR to provide less information about a file (which is beneficial
>> on Windows as APR doesn't have to construct POSIX protection flags),
>> because the only field in use becomes file size. Incidentally, it also
>> allows mod_python (plus Apache 2.2 patch) to work with the following
>> tweak for APR 1.2.7 (required for Subversion), under Windows and Apache
>> 2.2.2: http://article.gmane.org/gmane.comp.apache.apr.devel/9389/.
>>
>> I didn't test the patch on anything but Windows XP. The error I was
>> getting with the setup above was "Could not stat file for reading."
>> I also have to mention that the whole thing was compiled with VS 2005
>> compiler to support Python 2.4, although I think it's not relevant for
>> the patch attached.
>>
>> I hope all this patch citing is not too confusing :-).
> 
> Part of this patch may break UNIX systems. Specifically, when target is a
> symbolic link, the size returned will be the length of the filename and
> not the size of the target file when SIZE and not NORM is used. Thus
> an incorrect amount of data is sent back.

I applied this patch on my Linux development machine (apache 2.0.55) 
last week, and have not seen any problems - but then I've not really 
used sendfile in the interim, so why would I? ;)

Mention of the symlink issue twigged a memory of a prior problem, and 
sure enough APR_FINFO_NORM was introduced to fix this very issue.
See http://issues.apache.org/jira/browse/MODPYTHON-84. The patch for 
that issue looks like this:

--- httpd/mod_python/trunk/src/requestobject.c	2005/10/15 15:27:11	321348
+++ httpd/mod_python/trunk/src/requestobject.c	2005/10/15 15:31:46	321349
@@ -1024,7 +1024,7 @@

      Py_BEGIN_ALLOW_THREADS
      status=apr_stat(&finfo, fname,
-                    APR_READ, self->request_rec->pool);
+                    APR_FINFO_NORM, self->request_rec->pool);
      Py_END_ALLOW_THREADS
      if (status != APR_SUCCESS) {
          PyErr_SetString(PyExc_IOError, "Could not stat file for reading");

I don't recall dissecting that bug as it was a one line fix. Looking 
back at that issue, the previous code was incorrectly using APR_READ 
instead of one of the APR_FINFO_* macros. As it happens APR_READ has the 
same value as APR_FINFO_LINK, (which stats the link not the file itself, 
if it is link), thus resulting the reported bug.

We only need to stat the file to get the file size. APR_FINFO_NORM does 
this, but as Sergey points out it drags in alot of unwanted stuff as 
well. As I read it APR_FINFO_SIZE will do what we want, and his patch 
does not introduce a regression. The unit test seems to confirm this.

If this analysis seems correct I'll reopen MODPYTHON-84 and commit 
Sergey's patch against that issue. (I don't see the point in opening a 
new issue). I think this fix would be a good candidate for a backport to 
the 3.2.x branch for inclusion in 3.2.9.

Jim




From John.C.Cartwright at noaa.gov  Tue Jun  6 14:24:15 2006
From: John.C.Cartwright at noaa.gov (John Cartwright)
Date: Tue Jun  6 14:24:26 2006
Subject: [mod_python] ImportError on RedHat Enterprise Linux
Message-ID: <4485C84F.3080503@noaa.gov>

Hello All,

I'm trying to get started w/ mod_python on a RedHat Enterprise WS 3
system (which came installed w/ mod_python 3.3).

After adding the configuration:

<Directory /data1/htdocs/python>
  PythonPath "sys.path+['/usr/lib/python2.2/site-packages']"
  AddHandler mod_python .py
  PythonHandler mptest
  PythonDebug On
</Directory>


to /etc/httpd/conf.d/python.conf, I find that the handler is being
ignored and the apache error log shows:
ImportError: No module named mod_python.apache

mod_python itself seems to be loading OK as shown by /server-info. 
Listed below is my test script - can someone point out what I'm doing wrong?

Thanks!

-- john

=====================================================================================================
import mod_python
from mod_python import apache

def handler(req):
    req.send_http_header()
    req.write("Hello World!")
    return apache.OK




From David.Bear at asu.edu  Tue Jun  6 16:22:16 2006
From: David.Bear at asu.edu (David Bear)
Date: Tue Jun  6 16:22:26 2006
Subject: [mod_python] running templates, was segmentation fault
In-Reply-To: <4485A759.8010704@jgassociates.ca>
References: <44857482.9050305@ulb.ac.be> <44857978.10301@jgassociates.ca>
	<448580DB.7090104@ulb.ac.be> <4485A759.8010704@jgassociates.ca>
Message-ID: <20060606202216.GE19604@asu.edu>

On Tue, Jun 06, 2006 at 12:03:37PM -0400, Jim Gallacher wrote:
> 
> As an alternative you could do:
> 
> body_template = psp.PSP(req, filename="list.psp")
> mytemplate.run({'body' : body_template})

this syntax baffles me. where is 'mytemplate' defined? and what kind
of an object is it?


-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From elekis at gmail.com  Tue Jun  6 16:30:03 2006
From: elekis at gmail.com (elekis)
Date: Tue Jun  6 16:30:07 2006
Subject: [mod_python] file.py who is downloaded
Message-ID: <78316ea80606061330k3ec5f803p21edbc8580d3b477@mail.gmail.com>

hi, I ve just tried to installed mod_python,with apache2 I did all
what they said but I don't know why when I click on
localhost/public_html/file.py

if they are some errors in file.py he print the errors they want but
if the script is correct mozilla propose to me to download the script.

after litlle research it seems that is a prob with my mime in
/etc/apache2/mime.type

but I don't have that file and I didn't found what put in.


any help.

thanks


a+++

PS : it's maybe the second time this mail is in the listmail cause I
recieve a  who password a unprocessed etc...etc...
From jpg at jgassociates.ca  Tue Jun  6 16:35:58 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jun  6 16:33:49 2006
Subject: [mod_python] running templates, was segmentation fault
In-Reply-To: <20060606202216.GE19604@asu.edu>
References: <44857482.9050305@ulb.ac.be>
	<44857978.10301@jgassociates.ca>	<448580DB.7090104@ulb.ac.be>
	<4485A759.8010704@jgassociates.ca> <20060606202216.GE19604@asu.edu>
Message-ID: <4485E72E.1000702@jgassociates.ca>

David Bear wrote:
> On Tue, Jun 06, 2006 at 12:03:37PM -0400, Jim Gallacher wrote:
>> As an alternative you could do:
>>
>> body_template = psp.PSP(req, filename="list.psp")
>> mytemplate.run({'body' : body_template})
> 
> this syntax baffles me. where is 'mytemplate' defined? and what kind
> of an object is it?

It's a reference to snippet of code in Julien's message. Since the 
thread was discussing psp templates, one can assume his reference to 
mytemplate.run() refers to a PSP instance created elsewhere in his code 
which was not in the message but can be inferred.

Jim

From jpg at jgassociates.ca  Tue Jun  6 17:52:53 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jun  6 17:50:23 2006
Subject: [mod_python] file.py who is downloaded
In-Reply-To: <78316ea80606061330k3ec5f803p21edbc8580d3b477@mail.gmail.com>
References: <78316ea80606061330k3ec5f803p21edbc8580d3b477@mail.gmail.com>
Message-ID: <4485F935.2010406@jgassociates.ca>

Set the content type in your handler.

def handler(req):
     req.content_type = 'text/html'
     req.write('All good')
     return apache.OK

Jim

elekis wrote:
> hi, I ve just tried to installed mod_python,with apache2 I did all
> what they said but I don't know why when I click on
> localhost/public_html/file.py
> 
> if they are some errors in file.py he print the errors they want but
> if the script is correct mozilla propose to me to download the script.
> 
> after litlle research it seems that is a prob with my mime in
> /etc/apache2/mime.type
> 
> but I don't have that file and I didn't found what put in.
> 
> 
> any help.
> 
> thanks
> 
> 
> a+++
> 
> PS : it's maybe the second time this mail is in the listmail cause I
> recieve a  who password a unprocessed etc...etc...
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From David.Bear at asu.edu  Wed Jun  7 00:45:19 2006
From: David.Bear at asu.edu (David Bear)
Date: Wed Jun  7 00:45:24 2006
Subject: [mod_python] passing pickles
Message-ID: <20060607044519.GG19604@asu.edu>

I'm thinking of a simple way to pass form data between different
forms. For example, if I have page1 with form1 in it, and then for
page2 dynamically generate the form elements for form2 including data
from form1, how safe is it to put a python pickle in a form element?

for example, something like

<input type="hidden" name="priordata" value="pythonpicklegoeshere" >

when the form is submitted, I should get a req.form["priordata"] that
I can de-pickle right?


-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From elekis at gmail.com  Wed Jun  7 01:28:51 2006
From: elekis at gmail.com (elekis)
Date: Wed Jun  7 01:29:03 2006
Subject: [mod_python] file.py who is downloaded
In-Reply-To: <4485F935.2010406@jgassociates.ca>
References: <78316ea80606061330k3ec5f803p21edbc8580d3b477@mail.gmail.com>
	<4485F935.2010406@jgassociates.ca>
Message-ID: <78316ea80606062228x2d0c30ear30b3ab09770804de@mail.gmail.com>

thanks a lot all work

On 6/6/06, Jim Gallacher <jpg@jgassociates.ca> wrote:
> Set the content type in your handler.
>
> def handler(req):
>      req.content_type = 'text/html'
>      req.write('All good')
>      return apache.OK
>
> Jim
>
> elekis wrote:
> > hi, I ve just tried to installed mod_python,with apache2 I did all
> > what they said but I don't know why when I click on
> > localhost/public_html/file.py
> >
> > if they are some errors in file.py he print the errors they want but
> > if the script is correct mozilla propose to me to download the script.
> >
> > after litlle research it seems that is a prob with my mime in
> > /etc/apache2/mime.type
> >
> > but I don't have that file and I didn't found what put in.
> >
> >
> > any help.
> >
> > thanks
> >
> >
> > a+++
> >
> > PS : it's maybe the second time this mail is in the listmail cause I
> > recieve a  who password a unprocessed etc...etc...
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
>
From nlv11281 at natlab.research.philips.com  Wed Jun  7 01:35:27 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Wed Jun  7 01:35:31 2006
Subject: [mod_python] passing pickles
In-Reply-To: <20060607044519.GG19604@asu.edu>
References: <20060607044519.GG19604@asu.edu>
Message-ID: <4486659F.9050805@natlab.research.philips.com>

That would be very, very insecure. Once one knows it's a pickled object, someone can trick Python 
into doing quite some stuff that you never intended them to do.

It's much safer to use a set of hidden fields or something similar and map that to a dictionary (as 
req.form does already).

Mike Looijmans
Philips Natlab / Topic Automation


David Bear wrote:
> I'm thinking of a simple way to pass form data between different
> forms. For example, if I have page1 with form1 in it, and then for
> page2 dynamically generate the form elements for form2 including data
> from form1, how safe is it to put a python pickle in a form element?
> 
> for example, something like
> 
> <input type="hidden" name="priordata" value="pythonpicklegoeshere" >
> 
> when the form is submitted, I should get a req.form["priordata"] that
> I can de-pickle right?
> 
> 

From ccbean at gmail.com  Wed Jun  7 01:45:20 2006
From: ccbean at gmail.com (Colin Bean)
Date: Wed Jun  7 01:45:24 2006
Subject: [mod_python] passing pickles
In-Reply-To: <20060607044519.GG19604@asu.edu>
References: <20060607044519.GG19604@asu.edu>
Message-ID: <29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>

Hi David,

I wouldn't consider this method safe at all; a user could easily craft
their own pickled data that does something nasty and edit the source
of the form page to post it to your server.  Would it work to store a
user's prior form data in a session?  You could still use data from
the first form to generate the second page dynamically.

-Colin

On 6/6/06, David Bear <David.Bear@asu.edu> wrote:
> I'm thinking of a simple way to pass form data between different
> forms. For example, if I have page1 with form1 in it, and then for
> page2 dynamically generate the form elements for form2 including data
> from form1, how safe is it to put a python pickle in a form element?
>
> for example, something like
>
> <input type="hidden" name="priordata" value="pythonpicklegoeshere" >
>
> when the form is submitted, I should get a req.form["priordata"] that
> I can de-pickle right?
>
>
> --
> David Bear
> phone:  480-965-8257
> fax:    480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jcigar at ulb.ac.be  Wed Jun  7 03:21:50 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Wed Jun  7 03:20:16 2006
Subject: [mod_python] running templates, was segmentation fault
In-Reply-To: <4485E72E.1000702@jgassociates.ca>
References: <44857482.9050305@ulb.ac.be>	<44857978.10301@jgassociates.ca>	<448580DB.7090104@ulb.ac.be>	<4485A759.8010704@jgassociates.ca>
	<20060606202216.GE19604@asu.edu> <4485E72E.1000702@jgassociates.ca>
Message-ID: <44867E8E.70406@ulb.ac.be>

Jim's right, my idea was to do a kind of "main" template container, 
something like :

<html>
<head>...</head>
<body>
<div id="container">
  <div id="header"> ... </div>
  <div id="menu"> ... </div>
  <div id="anothercommonpart"> ... </div>

  <div id="main">
    <!-- MAIN STUFF GOES HERE -->
    <%@ include file = "..." %>
  </div>

  <div id="footer">...</div>
</div>

in my example "body_template = psp.PSP(req, filename="list.psp")" whould 
be the included file and the "mytemplate.run({'body' : body_template})" 
would be the "main" template.
Both are psp.PSP() instances. I thought I could to something like :

body_template = psp.PSP(file="foobar.psp")
main = psp.PSP(file="main_template.psp")
main.run(dict(body=body_template))

and later in the "main" template and <%@ include file="<%= body %>" %>, 
but as Jim said this doesn't work ...

Julien

Jim Gallacher wrote:
> David Bear wrote:
>> On Tue, Jun 06, 2006 at 12:03:37PM -0400, Jim Gallacher wrote:
>>> As an alternative you could do:
>>>
>>> body_template = psp.PSP(req, filename="list.psp")
>>> mytemplate.run({'body' : body_template})
>>
>> this syntax baffles me. where is 'mytemplate' defined? and what kind
>> of an object is it?
>
> It's a reference to snippet of code in Julien's message. Since the 
> thread was discussing psp templates, one can assume his reference to 
> mytemplate.run() refers to a PSP instance created elsewhere in his 
> code which was not in the message but can be inferred.
>
> Jim
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From wouter at squirrel-systems.com  Wed Jun  7 04:09:38 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed Jun  7 04:09:48 2006
Subject: [mod_python] running templates, was segmentation fault
In-Reply-To: <44867E8E.70406@ulb.ac.be>
References: <44857482.9050305@ulb.ac.be>	<44857978.10301@jgassociates.ca>
	<448580DB.7090104@ulb.ac.be>	<4485A759.8010704@jgassociates.ca>
	<20060606202216.GE19604@asu.edu> <4485E72E.1000702@jgassociates.ca>
	<44867E8E.70406@ulb.ac.be>
Message-ID: <1149667778.9926.13.camel@pistachio.squirrel>

This sounds very similar to my set-up.
I have a base template.psp, containing the html header with css
includes, and some divs, like:
<html><head>
	header stuff
</head><body>
	common banner
<div id=navbar><%=navbar%></div>
<div id=body><%=body%></div>
	common footer
</body></html>

Separately I have a python script, that parses the various parts. These
body and navbar parts are often psp files with variables to be entered
in their own right: I put them through the psp interpreter first, catch
back the html as string (use _psp instead of psp which causes the page
to be published), and put these strings in the variables as given above.
Works like a charm! Templates are in:
./templates/template.psp (the main template)
./templates/en/body.psp (the English body and other templates)
./templates/cncn/body.psp (the Chinese simplified body and other
templates)
./templates/cnhk/body.psp (the Chinese traditional body and other
templates)
Just keep a variable language set to the correct language, and with
"os.path.join(TEMPLATEPATH, language, templatefilename)" I can very
easily get the right template, add it in the main body, etc. 
Change the main body: changes are all over.
Change the css files: layout changes all over.

Hope it's useful for you.

Wouter.

On Wed, 2006-06-07 at 09:21 +0200, Julien Cigar wrote:
> Jim's right, my idea was to do a kind of "main" template container, 
> something like :
> 
> <html>
> <head>...</head>
> <body>
> <div id="container">
>   <div id="header"> ... </div>
>   <div id="menu"> ... </div>
>   <div id="anothercommonpart"> ... </div>
> 
>   <div id="main">
>     <!-- MAIN STUFF GOES HERE -->
>     <%@ include file = "..." %>
>   </div>
> 
>   <div id="footer">...</div>
> </div>
> 
> in my example "body_template = psp.PSP(req, filename="list.psp")" whould 
> be the included file and the "mytemplate.run({'body' : body_template})" 
> would be the "main" template.
> Both are psp.PSP() instances. I thought I could to something like :
> 
> body_template = psp.PSP(file="foobar.psp")
> main = psp.PSP(file="main_template.psp")
> main.run(dict(body=body_template))
> 
> and later in the "main" template and <%@ include file="<%= body %>" %>, 
> but as Jim said this doesn't work ...
> 
> Julien
> 
> Jim Gallacher wrote:
> > David Bear wrote:
> >> On Tue, Jun 06, 2006 at 12:03:37PM -0400, Jim Gallacher wrote:
> >>> As an alternative you could do:
> >>>
> >>> body_template = psp.PSP(req, filename="list.psp")
> >>> mytemplate.run({'body' : body_template})
> >>
> >> this syntax baffles me. where is 'mytemplate' defined? and what kind
> >> of an object is it?
> >
> > It's a reference to snippet of code in Julien's message. Since the 
> > thread was discussing psp templates, one can assume his reference to 
> > mytemplate.run() refers to a PSP instance created elsewhere in his 
> > code which was not in the message but can be inferred.
> >
> > Jim
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> 

From deron.meranda at gmail.com  Wed Jun  7 20:16:47 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Jun  7 20:17:01 2006
Subject: [mod_python] binary file, part II: name of file?
In-Reply-To: <b11ea23c0606071540t389c10afv9812b1c8475f9fe7@mail.gmail.com>
References: <b11ea23c0606052009p2eea971cu1d6cfd2245adf210@mail.gmail.com>
	<5c06fa770606052221v12daeb17o179afecf426f8ed@mail.gmail.com>
	<b11ea23c0606071540t389c10afv9812b1c8475f9fe7@mail.gmail.com>
Message-ID: <5c06fa770606071716h73467829t432c860d61575d4e@mail.gmail.com>

copying the list...

On 6/7/06, Webb Sprague <webb.sprague@gmail.com> wrote:
> > Perhaps the best way is to send a Content-Disposition header
> > (in addition to your Content-Type header).  You'll usually send
> > one of these two variants:
> >
> >   Content-Disposition: inline; filename=forecast-object-5.txt
> >   Content-Disposition: attachment; filename=forcast-object-5.txt
>
> Should I do this in mod_python by updating req.headers_out dict before
> calling req.write?  This is what I am going to try, just curious
> somebody's thoughts:
>
> req.headers['Content-Disposition'] = 'attachment; filename=forcast-object-5.txt'

Yes, that's what you do.  Be sure to set all your headers before
the first write.

Also, if you truly want to force a "save as", rather than perhaps an
"open or save"; you can also try to set the Content-Type header
to "application/octet-stream".  [Although your mileage may vary
with IE]
-- 
Deron Meranda
From Mika.Borner at clariden.com  Thu Jun  8 01:52:08 2006
From: Mika.Borner at clariden.com (Mika Borner)
Date: Thu Jun  8 01:52:47 2006
Subject: [mod_python] compiling mod_python with httpd 2.2.2
Message-ID: <4487D7280200001A000046FB@zh02.cbintra.net>

Hi

I have problems compiling mod_python against httpd 2.2.2. I tried out
the newest version under trunk as well as the 3.2.x tree under Branch...

My system runs Solaris 10 (Sparc). 

/usr/include/sys/feature_tests.h:188:1: warning: this is the location of
the previous definition
/u00/appl/apache2/apr-httpd/build-1/libtool --silent --mode=link gcc -o
mod_python.la  -rpath /u00/appl/apache2/modules -module -avoid-version  
 hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo
util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo
-L/u00/appl/python/lib/python2.4/config -lm -lpython2.4 -lresolv
-lsocket -lnsl -lrt -ldl -lm _eprintf.o _floatdidf.o _muldi3.o

*** Warning: Linking the shared library mod_python.la against the
non-libtool
*** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
Text relocation remains                         referenced
    against symbol                  offset      in file
<unknown>                           0x0        
/u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
<unknown>                           0x4        
/u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
<unknown>                           0x8        
/u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
...
Very Long List (ommitted)
...
ld: fatal: relocations remain against allocatable but non-writable
sections
collect2: ld returned 1 exit status
apxs:Error: Command failed with rc=65536

httpd was compiled with options:

./configure --prefix=/u00/appl/apache2 \
--enable-mods-shared=all \
--libdir=/usr/local/lib \
--with-apr=/u00/appl/apache2/apr-httpd \
--with-apr-util=/u00/appl/apache2/apr-util-httpd \
--enable-so

mod_python was compiled with options:

./configure --with-apxs=/u00/appl/apache2/bin/apxs
--with-python=/u00/appl/python/bin/python
--with-python-src=/usr/local/src/Python-2.4.3
--with-flex=/usr/local/bin/flex

During configure also this error is raised (might be a non issue):  

checking for --with-flex... /usr/local/bin/flex
found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
another.
checking flex version... awk: syntax error near line 1
awk: bailing out near line 1
awk: syntax error near line 1
awk: bailing out near line 1
awk: syntax error near line 1
awk: bailing out near line 1
./configure: line 3187: test: : integer expression expected
configure: WARNING: Flex version 2.5.31 found.
    Version 2.5.31 or greater is required.  You can generally ignore
this
    warning unless you need to regenerate psp_parser.c from psp_parse.l.
    If you do need regenerate psp_parser.c, use --with-flex to specify
the
    location of the correct flex version. See the README for more
information.


Any ideas?



-------------------------------------------------------------------------
This message is intended for the addressee only and may
contain confidential or privileged information. If you
are not the intended receiver, any disclosure, copying
to any person or any action taken or omitted to be taken
in reliance on this e-mail, is prohibited and may be un-
lawful. You must therefore delete this e-mail.
Internet communications may not be secure or error-free
and may contain viruses. They may be subject to possible
data corruption, accidental or on purpose. This e-mail is
not and should not be construed as an offer or the
solicitation of an offer to purchase or subscribe or sell
or redeem any investments.
-------------------------------------------------------------------------

From Mika.Borner at clariden.com  Thu Jun  8 02:48:41 2006
From: Mika.Borner at clariden.com (Mika Borner)
Date: Thu Jun  8 02:49:17 2006
Subject: [mod_python] compiling mod_python with httpd 2.2.2
In-Reply-To: <4487D7280200001A000046FB@zh02.cbintra.net>
References: <4487D7280200001A000046FB@zh02.cbintra.net>
Message-ID: <4487E4690200001A00004710@zh02.cbintra.net>

Hello again...

I just tried this with httpd 2.2.0. The problem is the same. Is there a
library missing (in the path)? How can I find out?

Thanx

Mika



>>> "Mika Borner" <Mika.Borner@clariden.com> 06/08/06 7:52 am >>>
Hi

I have problems compiling mod_python against httpd 2.2.2. I tried out
the newest version under trunk as well as the 3.2.x tree under
Branch...

My system runs Solaris 10 (Sparc). 

/usr/include/sys/feature_tests.h:188:1: warning: this is the location
of
the previous definition
/u00/appl/apache2/apr-httpd/build-1/libtool --silent --mode=link gcc
-o
mod_python.la  -rpath /u00/appl/apache2/modules -module -avoid-version 

 hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo
util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo
-L/u00/appl/python/lib/python2.4/config -lm -lpython2.4 -lresolv
-lsocket -lnsl -lrt -ldl -lm _eprintf.o _floatdidf.o _muldi3.o

*** Warning: Linking the shared library mod_python.la against the
non-libtool
*** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
Text relocation remains                         referenced
    against symbol                  offset      in file
<unknown>                           0x0        
/u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
<unknown>                           0x4        
/u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
<unknown>                           0x8        
/u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
...
Very Long List (ommitted)
...
ld: fatal: relocations remain against allocatable but non-writable
sections
collect2: ld returned 1 exit status
apxs:Error: Command failed with rc=65536

httpd was compiled with options:

./configure --prefix=/u00/appl/apache2 \
--enable-mods-shared=all \
--libdir=/usr/local/lib \
--with-apr=/u00/appl/apache2/apr-httpd \
--with-apr-util=/u00/appl/apache2/apr-util-httpd \
--enable-so

mod_python was compiled with options:

./configure --with-apxs=/u00/appl/apache2/bin/apxs
--with-python=/u00/appl/python/bin/python
--with-python-src=/usr/local/src/Python-2.4.3
--with-flex=/usr/local/bin/flex

During configure also this error is raised (might be a non issue):  

checking for --with-flex... /usr/local/bin/flex
found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
another.
checking flex version... awk: syntax error near line 1
awk: bailing out near line 1
awk: syntax error near line 1
awk: bailing out near line 1
awk: syntax error near line 1
awk: bailing out near line 1
./configure: line 3187: test: : integer expression expected
configure: WARNING: Flex version 2.5.31 found.
    Version 2.5.31 or greater is required.  You can generally ignore
this
    warning unless you need to regenerate psp_parser.c from
psp_parse.l.
    If you do need regenerate psp_parser.c, use --with-flex to specify
the
    location of the correct flex version. See the README for more
information.


Any ideas?



-------------------------------------------------------------------------
This message is intended for the addressee only and may
contain confidential or privileged information. If you
are not the intended receiver, any disclosure, copying
to any person or any action taken or omitted to be taken
in reliance on this e-mail, is prohibited and may be un-
lawful. You must therefore delete this e-mail.
Internet communications may not be secure or error-free
and may contain viruses. They may be subject to possible
data corruption, accidental or on purpose. This e-mail is
not and should not be construed as an offer or the
solicitation of an offer to purchase or subscribe or sell
or redeem any investments.
-------------------------------------------------------------------------

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
From jpg at jgassociates.ca  Thu Jun  8 08:12:38 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Jun  8 08:12:36 2006
Subject: [mod_python] compiling mod_python with httpd 2.2.2
In-Reply-To: <4487D7280200001A000046FB@zh02.cbintra.net>
References: <4487D7280200001A000046FB@zh02.cbintra.net>
Message-ID: <44881436.6090800@jgassociates.ca>

Mika Borner wrote:
> Hi
> 
> I have problems compiling mod_python against httpd 2.2.2. I tried out
> the newest version under trunk as well as the 3.2.x tree under Branch...
> 
> My system runs Solaris 10 (Sparc). 
> 
> /usr/include/sys/feature_tests.h:188:1: warning: this is the location of
> the previous definition
> /u00/appl/apache2/apr-httpd/build-1/libtool --silent --mode=link gcc -o
> mod_python.la  -rpath /u00/appl/apache2/modules -module -avoid-version  
>  hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo
> util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo
> -L/u00/appl/python/lib/python2.4/config -lm -lpython2.4 -lresolv
> -lsocket -lnsl -lrt -ldl -lm _eprintf.o _floatdidf.o _muldi3.o
> 
> *** Warning: Linking the shared library mod_python.la against the
> non-libtool
> *** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
> Text relocation remains                         referenced
>     against symbol                  offset      in file
> <unknown>                           0x0        
> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
> <unknown>                           0x4        
> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
> <unknown>                           0x8        
> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
> ...
> Vehis looks like a difference in the gawk vs you awk, as well as your shellry Long List (ommitted)
> ...
> ld: fatal: relocations remain against allocatable but non-writable
> sections
> collect2: ld returned 1 exit status
> apxs:Error: Command failed with rc=65536
> 
> httpd was compiled with options:
> 
> ./configure --prefix=/u00/appl/apache2 \
> --enable-mods-shared=all \
> --libdir=/usr/local/lib \
> --with-apr=/u00/appl/apache2/apr-httpd \
> --with-apr-util=/u00/appl/apache2/apr-util-httpd \
> --enable-so
> 
> mod_python was compiled with options:
> 
> ./configure --with-apxs=/u00/appl/apache2/bin/apxs
> --with-python=/u00/appl/python/bin/python
> --with-python-src=/usr/local/src/Python-2.4.3
> --with-flex=/usr/local/bin/flex


I can't help you with the libtool issues. I know Ron Reisor successfully 
built mod_python 3.2.7 on Solaris 10. (3.2.8 is essentially the same - 
just a small security fix for FileSession). Hopefully if Ron is still on 
the list he can offer you some insight.

You only need --with-python-src if you want to build the documentation. 
You don't need it, but it's not the cause of your problem.

> During configure also this error is raised (might be a non issue):  
> 
> checking for --with-flex... /usr/local/bin/flex
> found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
> another.
> checking flex version... awk: syntax error near line 1
> awk: bailing out near line 1
> awk: syntax error near line 1
> awk: bailing out near line 1
> awk: syntax error near line 1
> awk: bailing out near line 1
> ./configure: line 3187: test: : integer expression expected
> configure: WARNING: Flex version 2.5.31 found.
>     Version 2.5.31 or greater is required.  You can generally ignore
> this
>     warning unless you need to regenerate psp_parser.c from psp_parse.l.
>     If you do need regenerate psp_parser.c, use --with-flex to specify
> the
>     location of the correct flex version. See the README for more
> information.

Ignoring the syntax error for a minute, it is indeed not a problem if 
you don't have the correct flex version unless you want to modify 
psp_parse.l, but why would you want to do that when you haven't got 
mod_python working yet? ;)

It looks like the awk you are using is different from gawk. Could you 
check your version? Also what shell are you using? The comparison done 
in line 3187 works in bash, but may not be compatible in other shells.

Non of the flex errors will cause your libtool problem, as flex should 
not need to be called anyway. I would like to fix them so that configure 
runs smoothly however.

Jim
From ron at udel.edu  Thu Jun  8 10:16:28 2006
From: ron at udel.edu (Ron Reisor)
Date: Thu Jun  8 10:16:41 2006
Subject: [mod_python] compiling mod_python with httpd 2.2.2
In-Reply-To: <44881436.6090800@jgassociates.ca>
References: <4487D7280200001A000046FB@zh02.cbintra.net>
	<44881436.6090800@jgassociates.ca>
Message-ID: <Pine.OSX.4.62.0606080959130.418@zim.nss.udel.edu>

Mika,

    mod_python-3.2.7 is running here on Solaris 10 Sparc, but it's built 
for httpd-2.0.55. We haven't done much with httpd-2.2.x yet but maybe 
later this summer we'll try to move to it.

    The httpd configure we are using is like this:

./configure \
--prefix=/home/exp \
--exec-prefix=/home/exp \
--localstatedir=/home/exp/var \
--with-port=8080 \
--with-mpm=prefork \
--enable-mods-shared=all \
--enable-so \
--enable-ssl \
--with-ssl=/home/exp \
--enable-dav \
--enable-dav-fs \
--disable-suexec \
--with-z \
--without-gdbm \
--without-ndbm \
--with-berkeley-db=/home/exp/BerkeleyDB.4.2/ \

    and the mod_python configure is just:

./configure --with-apxs=/home/exp/bin/apxs

    The biggest problem is getting the configure and Makefile scripts to 
use the proper libtool. Building httpd will create a new libtool that 
matches what you specified to the httpd configure. You need to get your 
search path set up to make sure all of the other builds will use that 
libtool.

    The points Jim makes are all very good too. I didn't build a flex for 
Solaris, and didn't try to build documentation there either. So you may 
make it easier on yourself if you leave those out until you need them.

Ron


On Thu, 8 Jun 2006, Jim Gallacher wrote:

> Mika Borner wrote:
>> Hi
>> 
>> I have problems compiling mod_python against httpd 2.2.2. I tried out
>> the newest version under trunk as well as the 3.2.x tree under Branch...
>> 
>> My system runs Solaris 10 (Sparc). 
>> /usr/include/sys/feature_tests.h:188:1: warning: this is the location of
>> the previous definition
>> /u00/appl/apache2/apr-httpd/build-1/libtool --silent --mode=link gcc -o
>> mod_python.la  -rpath /u00/appl/apache2/modules -module -avoid-version 
>> hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo
>> util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo
>> -L/u00/appl/python/lib/python2.4/config -lm -lpython2.4 -lresolv
>> -lsocket -lnsl -lrt -ldl -lm _eprintf.o _floatdidf.o _muldi3.o
>> 
>> *** Warning: Linking the shared library mod_python.la against the
>> non-libtool
>> *** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
>> Text relocation remains                         referenced
>>     against symbol                  offset      in file
>> <unknown>                           0x0 
>> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
>> <unknown>                           0x4 
>> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
>> <unknown>                           0x8 
>> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
>> ...
>> Vehis looks like a difference in the gawk vs you awk, as well as your 
>> shellry Long List (ommitted)
>> ...
>> ld: fatal: relocations remain against allocatable but non-writable
>> sections
>> collect2: ld returned 1 exit status
>> apxs:Error: Command failed with rc=65536
>> 
>> httpd was compiled with options:
>> 
>> ./configure --prefix=/u00/appl/apache2 \
>> --enable-mods-shared=all \
>> --libdir=/usr/local/lib \
>> --with-apr=/u00/appl/apache2/apr-httpd \
>> --with-apr-util=/u00/appl/apache2/apr-util-httpd \
>> --enable-so
>> 
>> mod_python was compiled with options:
>> 
>> ./configure --with-apxs=/u00/appl/apache2/bin/apxs
>> --with-python=/u00/appl/python/bin/python
>> --with-python-src=/usr/local/src/Python-2.4.3
>> --with-flex=/usr/local/bin/flex
>
>
> I can't help you with the libtool issues. I know Ron Reisor successfully 
> built mod_python 3.2.7 on Solaris 10. (3.2.8 is essentially the same - just a 
> small security fix for FileSession). Hopefully if Ron is still on the list he 
> can offer you some insight.
>
> You only need --with-python-src if you want to build the documentation. You 
> don't need it, but it's not the cause of your problem.
>
>> During configure also this error is raised (might be a non issue): 
>> checking for --with-flex... /usr/local/bin/flex
>> found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
>> another.
>> checking flex version... awk: syntax error near line 1
>> awk: bailing out near line 1
>> awk: syntax error near line 1
>> awk: bailing out near line 1
>> awk: syntax error near line 1
>> awk: bailing out near line 1
>> ./configure: line 3187: test: : integer expression expected
>> configure: WARNING: Flex version 2.5.31 found.
>>     Version 2.5.31 or greater is required.  You can generally ignore
>> this
>>     warning unless you need to regenerate psp_parser.c from psp_parse.l.
>>     If you do need regenerate psp_parser.c, use --with-flex to specify
>> the
>>     location of the correct flex version. See the README for more
>> information.
>
> Ignoring the syntax error for a minute, it is indeed not a problem if you 
> don't have the correct flex version unless you want to modify psp_parse.l, 
> but why would you want to do that when you haven't got mod_python working 
> yet? ;)
>
> It looks like the awk you are using is different from gawk. Could you check 
> your version? Also what shell are you using? The comparison done in line 3187 
> works in bash, but may not be compatible in other shells.
>
> Non of the flex errors will cause your libtool problem, as flex should not 
> need to be called anyway. I would like to fix them so that configure runs 
> smoothly however.
>
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Ron Reisor <ron@udel.edu> (RWR3)
University of Delaware Information Technologies/Network and Systems Services
Computing Center/192 South Chapel Street/Newark DE, 19716
pgp finger print: 0D 73 06 6F D3 6A 99 D3  F5 D5 6E FF 3B B9 7C 2C
From grahamd at dscpl.com.au  Thu Jun  8 10:50:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun  8 10:50:05 2006
Subject: [mod_python] compiling mod_python with httpd 2.2.2
Message-ID: <1149778200.20467@dscpl.user.openhosting.com>

In certain circumstances, it may be necessary to force libtool to use the option:

  -mimpure-text

to the underlying linker.

Sorry, can't go into more details as Internet connection too slow and don't have
details of how to do this as stuff is at work. Will be next week before I can refer
to my mod_python configuration files at work.

Graham

Ron Reisor wrote ..
> Mika,
> 
>     mod_python-3.2.7 is running here on Solaris 10 Sparc, but it's built
> for httpd-2.0.55. We haven't done much with httpd-2.2.x yet but maybe 
> later this summer we'll try to move to it.
> 
>     The httpd configure we are using is like this:
> 
> ./configure \
> --prefix=/home/exp \
> --exec-prefix=/home/exp \
> --localstatedir=/home/exp/var \
> --with-port=8080 \
> --with-mpm=prefork \
> --enable-mods-shared=all \
> --enable-so \
> --enable-ssl \
> --with-ssl=/home/exp \
> --enable-dav \
> --enable-dav-fs \
> --disable-suexec \
> --with-z \
> --without-gdbm \
> --without-ndbm \
> --with-berkeley-db=/home/exp/BerkeleyDB.4.2/ \
> 
>     and the mod_python configure is just:
> 
> ./configure --with-apxs=/home/exp/bin/apxs
> 
>     The biggest problem is getting the configure and Makefile scripts to
> use the proper libtool. Building httpd will create a new libtool that 
> matches what you specified to the httpd configure. You need to get your
> search path set up to make sure all of the other builds will use that 
> libtool.
> 
>     The points Jim makes are all very good too. I didn't build a flex for
> Solaris, and didn't try to build documentation there either. So you may
> make it easier on yourself if you leave those out until you need them.
> 
> Ron
> 
> 
> On Thu, 8 Jun 2006, Jim Gallacher wrote:
> 
> > Mika Borner wrote:
> >> Hi
> >> 
> >> I have problems compiling mod_python against httpd 2.2.2. I tried out
> >> the newest version under trunk as well as the 3.2.x tree under Branch...
> >> 
> >> My system runs Solaris 10 (Sparc). 
> >> /usr/include/sys/feature_tests.h:188:1: warning: this is the location
> of
> >> the previous definition
> >> /u00/appl/apache2/apr-httpd/build-1/libtool --silent --mode=link gcc
> -o
> >> mod_python.la  -rpath /u00/appl/apache2/modules -module -avoid-version
> >> hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo
> >> util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo
> >> -L/u00/appl/python/lib/python2.4/config -lm -lpython2.4 -lresolv
> >> -lsocket -lnsl -lrt -ldl -lm _eprintf.o _floatdidf.o _muldi3.o
> >> 
> >> *** Warning: Linking the shared library mod_python.la against the
> >> non-libtool
> >> *** objects  _eprintf.o _floatdidf.o _muldi3.o is not portable!
> >> Text relocation remains                         referenced
> >>     against symbol                  offset      in file
> >> <unknown>                           0x0 
> >> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
> >> <unknown>                           0x4 
> >> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
> >> <unknown>                           0x8 
> >> /u00/appl/python/lib/python2.4/config/libpython2.4.a(floatobject.o)
> >> ...
> >> Vehis looks like a difference in the gawk vs you awk, as well as your
> >> shellry Long List (ommitted)
> >> ...
> >> ld: fatal: relocations remain against allocatable but non-writable
> >> sections
> >> collect2: ld returned 1 exit status
> >> apxs:Error: Command failed with rc=65536
> >> 
> >> httpd was compiled with options:
> >> 
> >> ./configure --prefix=/u00/appl/apache2 \
> >> --enable-mods-shared=all \
> >> --libdir=/usr/local/lib \
> >> --with-apr=/u00/appl/apache2/apr-httpd \
> >> --with-apr-util=/u00/appl/apache2/apr-util-httpd \
> >> --enable-so
> >> 
> >> mod_python was compiled with options:
> >> 
> >> ./configure --with-apxs=/u00/appl/apache2/bin/apxs
> >> --with-python=/u00/appl/python/bin/python
> >> --with-python-src=/usr/local/src/Python-2.4.3
> >> --with-flex=/usr/local/bin/flex
> >
> >
> > I can't help you with the libtool issues. I know Ron Reisor successfully
> > built mod_python 3.2.7 on Solaris 10. (3.2.8 is essentially the same
> - just a 
> > small security fix for FileSession). Hopefully if Ron is still on the
> list he 
> > can offer you some insight.
> >
> > You only need --with-python-src if you want to build the documentation.
> You 
> > don't need it, but it's not the cause of your problem.
> >
> >> During configure also this error is raised (might be a non issue): 
> >> checking for --with-flex... /usr/local/bin/flex
> >> found /usr/local/bin/flex, we'll use this. Use --with-flex to specify
> >> another.
> >> checking flex version... awk: syntax error near line 1
> >> awk: bailing out near line 1
> >> awk: syntax error near line 1
> >> awk: bailing out near line 1
> >> awk: syntax error near line 1
> >> awk: bailing out near line 1
> >> ./configure: line 3187: test: : integer expression expected
> >> configure: WARNING: Flex version 2.5.31 found.
> >>     Version 2.5.31 or greater is required.  You can generally ignore
> >> this
> >>     warning unless you need to regenerate psp_parser.c from psp_parse.l.
> >>     If you do need regenerate psp_parser.c, use --with-flex to specify
> >> the
> >>     location of the correct flex version. See the README for more
> >> information.
> >
> > Ignoring the syntax error for a minute, it is indeed not a problem if
> you 
> > don't have the correct flex version unless you want to modify psp_parse.l,
> > but why would you want to do that when you haven't got mod_python working
> > yet? ;)
> >
> > It looks like the awk you are using is different from gawk. Could you
> check 
> > your version? Also what shell are you using? The comparison done in line
> 3187 
> > works in bash, but may not be compatible in other shells.
> >
> > Non of the flex errors will cause your libtool problem, as flex should
> not 
> > need to be called anyway. I would like to fix them so that configure
> runs 
> > smoothly however.
> >
> > Jim
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> Ron Reisor <ron@udel.edu> (RWR3)
> University of Delaware Information Technologies/Network and Systems Services
> Computing Center/192 South Chapel Street/Newark DE, 19716
> pgp finger print: 0D 73 06 6F D3 6A 99 D3  F5 D5 6E FF 3B B9 7C 2C
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From rmcjustino at gmail.com  Fri Jun  9 09:53:58 2006
From: rmcjustino at gmail.com (Rui Miguel Justino)
Date: Fri Jun  9 09:54:09 2006
Subject: [mod_python] differentiate from where comes the request to a file
Message-ID: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>

Is it possible to differentiate between a request to a file of type
(pdf,png, etc) made by a psp page and a direct request made by a user who is
trying to access directly to this files?

Sorry  if it is confuse. The purpose here is to only give access to files
for users who have authenticate to the application, but Even those users
will only have access to files that show up in the application(webpage). And
if those users are trying to guess file names they ill not have access to
the files.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060609/fa2f453b/attachment.html
From nicolas at lehuen.com  Fri Jun  9 10:05:08 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Fri Jun  9 10:05:13 2006
Subject: [mod_python] differentiate from where comes the request to a file
In-Reply-To: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>
References: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>
Message-ID: <c298f2d70606090705h13ccfd29tc4af3d202baafb80@mail.gmail.com>

Hi,

You could use the Referer header, making sure that it refers to an
authenticated page, but it is not really secure, as it is quite easy
to forge an HTTP request with a given Referer header.

Unfortunately the only way to prevent unauthorized access is to
implement an authorization system... Which means having a way to say
"this user is allowed to access this file and the content of this
folder but nothing else". There are standard authorisation  modules in
Apache, but you can also roll your own using mod_python authz handler,
though it is not for the faint of heart.

Regards,
Nicolas

2006/6/9, Rui Miguel Justino <rmcjustino@gmail.com>:
> Is it possible to differentiate between a request to a file of type
> (pdf,png, etc) made by a psp page and a direct request made by a user who is
> trying to access directly to this files?
>
> Sorry  if it is confuse. The purpose here is to only give access to files
> for users who have authenticate to the application, but Even those users
> will only have access to files that show up in the application(webpage). And
> if those users are trying to guess file names they ill not have access to
> the files.
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From deron.meranda at gmail.com  Fri Jun  9 10:22:17 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Fri Jun  9 10:22:20 2006
Subject: [mod_python] differentiate from where comes the request to a file
In-Reply-To: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>
References: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>
Message-ID: <5c06fa770606090722g689a0b0fv356b8e44bc28b031@mail.gmail.com>

On 6/9/06, Rui Miguel Justino <rmcjustino@gmail.com> wrote:
> Is it possible to differentiate between a request to a file of type
> (pdf,png, etc) made by a psp page and a direct request made by a user who is
> trying to access directly to this files?
>
> Sorry  if it is confuse. The purpose here is to only give access to files
> for users who have authenticate to the application, but Even those users
> will only have access to files that show up in the application(webpage). And
> if those users are trying to guess file names they ill not have access to
> the files.

As Nicolas said, usually the Referer header is used as a simple check.
That can even be done using just Apache directives with no mod_python
work if you want.

However, if you're willing to put in more work and you don't want
to actually use authentication, you can make use of dynamically
generated hard-to-guess URLs for your images.

Essentially when you output the HTML page which contains the
<img> link (or other linking element) you generate URLs with
lots of random characters.  Then either record those URLs in
a database of sorts, or perhaps encrypt or sign them (the standard
Python 'hmac' module may be useful).  And finally have a mod_python
handler accept all those URLs and serve the file contents only if
the URL verification works.  Eventually you remove the valid
URLs from your database (or they expire if you recorded a
date in them before HMAC signing).

There's lots of details I left out, but it should give you the idea.
-- 
Deron Meranda
From list at joreybump.com  Fri Jun  9 11:04:38 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Jun  9 11:04:43 2006
Subject: [mod_python] differentiate from where comes the request to a file
In-Reply-To: <5c06fa770606090722g689a0b0fv356b8e44bc28b031@mail.gmail.com>
References: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>
	<5c06fa770606090722g689a0b0fv356b8e44bc28b031@mail.gmail.com>
Message-ID: <44898E06.4060107@joreybump.com>

To expand on Deron's advice:

You can store your download files outside of the DocumentRoot, and 
create symlinks or obfuscated URLs in a location accessible within your 
site. If you create an md5sum based on connection information, you can 
use that as part of the URL for the file download. I'd lean towards 
managing this in a handler, as Deron suggested, but if that's beyond 
you, the symlink approach is relatively simple and it would be nearly 
impossible to guess the URL.

If the download location is in the same authentication realm as the PSP 
page, you would also have that as an additional protection.

Deron Meranda wrote:
> On 6/9/06, Rui Miguel Justino <rmcjustino@gmail.com> wrote:
>> Is it possible to differentiate between a request to a file of type
>> (pdf,png, etc) made by a psp page and a direct request made by a user 
>> who is
>> trying to access directly to this files?
>>
>> Sorry  if it is confuse. The purpose here is to only give access to files
>> for users who have authenticate to the application, but Even those users
>> will only have access to files that show up in the 
>> application(webpage). And
>> if those users are trying to guess file names they ill not have access to
>> the files.
> 
> As Nicolas said, usually the Referer header is used as a simple check.
> That can even be done using just Apache directives with no mod_python
> work if you want.
> 
> However, if you're willing to put in more work and you don't want
> to actually use authentication, you can make use of dynamically
> generated hard-to-guess URLs for your images.
> 
> Essentially when you output the HTML page which contains the
> <img> link (or other linking element) you generate URLs with
> lots of random characters.  Then either record those URLs in
> a database of sorts, or perhaps encrypt or sign them (the standard
> Python 'hmac' module may be useful).  And finally have a mod_python
> handler accept all those URLs and serve the file contents only if
> the URL verification works.  Eventually you remove the valid
> URLs from your database (or they expire if you recorded a
> date in them before HMAC signing).
> 
> There's lots of details I left out, but it should give you the idea.

From rmcjustino at gmail.com  Fri Jun  9 11:06:17 2006
From: rmcjustino at gmail.com (Rui Miguel Justino)
Date: Fri Jun  9 11:06:23 2006
Subject: [mod_python] differentiate from where comes the request to a file
In-Reply-To: <5c06fa770606090722g689a0b0fv356b8e44bc28b031@mail.gmail.com>
References: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>
	<5c06fa770606090722g689a0b0fv356b8e44bc28b031@mail.gmail.com>
Message-ID: <5a8adb670606090806r131472f7gf789dd5a4c9abce2@mail.gmail.com>

Hello,
Thanks for the quick replies.I have been on this subject for the last couple
of days, and did not find a good answer to this. My project will be in top
of a python platform so is good to hear the opinion of people who also
understand the basics(apache).

I'm looking for some type of solution that is secure and easy to implement
and don't bring a bigger cost to the rest of the application. I will look
with more attention to the directions you both have pointed out, I will
definitively have to use authentication and then i can probably control the
access to files with Referer Header. I will study the viability of it.



On 6/9/06, Deron Meranda <deron.meranda@gmail.com> wrote:
>
> On 6/9/06, Rui Miguel Justino <rmcjustino@gmail.com> wrote:
> > Is it possible to differentiate between a request to a file of type
> > (pdf,png, etc) made by a psp page and a direct request made by a user
> who is
> > trying to access directly to this files?
> >
> > Sorry  if it is confuse. The purpose here is to only give access to
> files
> > for users who have authenticate to the application, but Even those users
> > will only have access to files that show up in the application(webpage).
> And
> > if those users are trying to guess file names they ill not have access
> to
> > the files.
>
> As Nicolas said, usually the Referer header is used as a simple check.
> That can even be done using just Apache directives with no mod_python
> work if you want.
>
> However, if you're willing to put in more work and you don't want
> to actually use authentication, you can make use of dynamically
> generated hard-to-guess URLs for your images.
>
> Essentially when you output the HTML page which contains the
> <img> link (or other linking element) you generate URLs with
> lots of random characters.  Then either record those URLs in
> a database of sorts, or perhaps encrypt or sign them (the standard
> Python 'hmac' module may be useful).  And finally have a mod_python
> handler accept all those URLs and serve the file contents only if
> the URL verification works.  Eventually you remove the valid
> URLs from your database (or they expire if you recorded a
> date in them before HMAC signing).
>
> There's lots of details I left out, but it should give you the idea.
> --
> Deron Meranda
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060609/19e28ab9/attachment.html
From David.Bear at asu.edu  Fri Jun  9 13:33:11 2006
From: David.Bear at asu.edu (David Bear)
Date: Fri Jun  9 13:33:18 2006
Subject: [mod_python] passing pickles
In-Reply-To: <29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>
References: <20060607044519.GG19604@asu.edu>
	<29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>
Message-ID: <20060609173311.GC15781@asu.edu>

Many thanks for all the great comments and suggestions.

I do see how passing a pickled in a form object is any less secure
then passing the same information in a string. It would be easy to
added two items to make it 'unbreakable'.

first, after base64 encoding the pickle, I could create an md5sum and
put that into a second form elment. Then, I could include one
non-pickled item in a third form element. So, it would look something
like this.

shorthand psuedo code (not python)
form1 = [name, address, phone]
pickledform1 = base64(pickle(form1))
check = md5sum(pickeldform1)
form1 = [pickkledform1, name(from form 1), ,check, additional form fields]

Really, the only point of pickling the items from the first form is
just to save effort when collecting and handling the form data from
the second form.

However, if that is the only thing that is gained from doing this..
then its not much.

I'm still hesitating using session objects as I don't understand
them.. and have read too many things about problems they cause.

On Tue, Jun 06, 2006 at 10:45:20PM -0700, Colin Bean wrote:
> Hi David,
> 
> I wouldn't consider this method safe at all; a user could easily craft
> their own pickled data that does something nasty and edit the source
> of the form page to post it to your server.  Would it work to store a
> user's prior form data in a session?  You could still use data from
> the first form to generate the second page dynamically.
> 
> -Colin
> 
> On 6/6/06, David Bear <David.Bear@asu.edu> wrote:
> >I'm thinking of a simple way to pass form data between different
> >forms. For example, if I have page1 with form1 in it, and then for
> >page2 dynamically generate the form elements for form2 including data
> >from form1, how safe is it to put a python pickle in a form element?
> >
> >for example, something like
> >
> ><input type="hidden" name="priordata" value="pythonpicklegoeshere" >
> >
> >when the form is submitted, I should get a req.form["priordata"] that
> >I can de-pickle right?
> >
> >
> >--
> >David Bear
> >phone:  480-965-8257
> >fax:    480-965-9189
> >College of Public Programs/ASU
> >Wilson Hall 232
> >Tempe, AZ 85287-0803
> > "Beware the IP portfolio, everyone will be suspect of trespassing"
> >_______________________________________________
> >Mod_python mailing list
> >Mod_python@modpython.org
> >http://mailman.modpython.org/mailman/listinfo/mod_python
> >

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From joeb at mit.edu  Fri Jun  9 13:48:18 2006
From: joeb at mit.edu (Joseph Barillari)
Date: Fri Jun  9 13:48:56 2006
Subject: [mod_python] passing pickles
In-Reply-To: <20060609173311.GC15781@asu.edu>
References: <20060607044519.GG19604@asu.edu>
	<29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>
	<20060609173311.GC15781@asu.edu>
Message-ID: <20060609174817.GC27804@barillari.org>

On Fri, Jun 09, 2006 at 10:33:11AM -0700, David Bear wrote:
> Many thanks for all the great comments and suggestions.
> 
> I do see how passing a pickled in a form object is any less secure
> then passing the same information in a string. It would be easy to
> added two items to make it 'unbreakable'.
> 
> first, after base64 encoding the pickle, I could create an md5sum and
> put that into a second form elment. Then, I could include one
> non-pickled item in a third form element. So, it would look something
> like this.
> 
> shorthand psuedo code (not python)
> form1 = [name, address, phone]
> pickledform1 = base64(pickle(form1))
> check = md5sum(pickeldform1)
> form1 = [pickkledform1, name(from form 1), ,check, additional form fields]

I assume you'd make sure that md5(base64(pickledform1)) == check after
each POST. This doesn't buy you any security. An adversary can just as
easily subsitute a poison pickle and the correct hash of the poison
pickle. Append a secret to your pickle before hashing it to prevent
this. (c.f. HMAC.)

> Really, the only point of pickling the items from the first form is
> just to save effort when collecting and handling the form data from
> the second form.
> 
> However, if that is the only thing that is gained from doing this..
> then its not much.
> 
> I'm still hesitating using session objects as I don't understand
> them.. and have read too many things about problems they cause.

Avoiding the complexity of session management is probably not a bad
idea, but there are less complex ways of doing it. Key management can
be a pain -- I suggest flattening your session data to a 'safe' format
-- perhaps to JSON or to XML.

Joe

-- 
Joseph Barillari
joeb@mit.edu
107 Ave. Louis Pasteur, Vandy Box 121, Boston, MA 02115
617-519-9250 (mobile)
From list at joreybump.com  Fri Jun  9 13:55:39 2006
From: list at joreybump.com (Jorey Bump)
Date: Fri Jun  9 13:55:43 2006
Subject: [mod_python] passing pickles
In-Reply-To: <20060609173311.GC15781@asu.edu>
References: <20060607044519.GG19604@asu.edu>	<29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>
	<20060609173311.GC15781@asu.edu>
Message-ID: <4489B61B.6090701@joreybump.com>

David Bear wrote:
> Many thanks for all the great comments and suggestions.
> 
> I do see how passing a pickled in a form object is any less secure
> then passing the same information in a string. It would be easy to
> added two items to make it 'unbreakable'.
> 
> first, after base64 encoding the pickle, I could create an md5sum and
> put that into a second form elment. Then, I could include one
> non-pickled item in a third form element. So, it would look something
> like this.
> 
> shorthand psuedo code (not python)
> form1 = [name, address, phone]
> pickledform1 = base64(pickle(form1))
> check = md5sum(pickeldform1)
> form1 = [pickkledform1, name(from form 1), ,check, additional form fields]

If I understand your pseudocode correctly, I could still unencode the 
pickle, alter it, reencode it, generate a new md5sum, then submit it.

You could mitigate this by storing the md5sum on the server only for 
comparison, but then you might as well just save the pickle on the 
server. Of course, you could extend this by using only the md5sum as a 
hidden form input value to locate/identify the pickle on the server, but 
an ordinary randomized string is good enough for that.

It all depends on the problem you're trying to solve, and the risks 
involved with exposing the pickle data or letting it be altered. Just 
keep in mind that exchanging the pickle with the client for the sake of 
offloading the storage won't save you much if it increases latency and 
the bandwidth used by your application. As a cookie replacement for 
session management, it's kind of interesting, though (as long as 
altering it doesn't allow access to other user accounts, for example).


From ccbean at gmail.com  Fri Jun  9 13:59:16 2006
From: ccbean at gmail.com (Colin Bean)
Date: Fri Jun  9 13:59:19 2006
Subject: [mod_python] passing pickles
In-Reply-To: <20060609173311.GC15781@asu.edu>
References: <20060607044519.GG19604@asu.edu>
	<29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>
	<20060609173311.GC15781@asu.edu>
Message-ID: <29a6ca010606091059i59110300qcf1e0248d3e9b77f@mail.gmail.com>

Hi David,

A picked object can contain other things than strings, so a malicious
pickle could contain arbitrary python objects or functions --
depending on how you'd use the pickle data, this could break your code
(i.e. if they provide "None" where you'd expect a string) or possibly
execute arbitrary code (i.e. if you used a function gotten from the
user pickle; not very likely but possible).  Again the problem here is
the ability of a clever user to create their own pickled object, embed
it in a form and upload it.  Using base64 and md5 is good, but IMHO
there's a possibility somebody would figure out that you've used
base64.  Unless you have a server side record of the md5 sum, a user
could create an md5 sum of their own data and subit that also.

Which problems are you referring to with sessions?  Certainly there
are some issues, but basic session use for this kind of data is easy,
stable and I think it would solve a lot of the problems you're working
on.

Pseudocode would be something like:
You'll always need

from apache import Session

In your page for form 1:

session = Session.Session(req)

session['name'] = username #Access it just like a dictionary, 'name'
can be whatever you want and username is the value from the form
upload.
#Once you're done adding user data to the session:
session.Save() #<-- This is imporant, or your data won't persist.

In your page for form 2:

session = Session.Session(req) #This should have everything you saved
from the previous page.

HTH,
Colin


On 6/9/06, David Bear <David.Bear@asu.edu> wrote:
> Many thanks for all the great comments and suggestions.
>
> I do see how passing a pickled in a form object is any less secure
> then passing the same information in a string. It would be easy to
> added two items to make it 'unbreakable'.
>
> first, after base64 encoding the pickle, I could create an md5sum and
> put that into a second form elment. Then, I could include one
> non-pickled item in a third form element. So, it would look something
> like this.
>
> shorthand psuedo code (not python)
> form1 = [name, address, phone]
> pickledform1 = base64(pickle(form1))
> check = md5sum(pickeldform1)
> form1 = [pickkledform1, name(from form 1), ,check, additional form fields]
>
> Really, the only point of pickling the items from the first form is
> just to save effort when collecting and handling the form data from
> the second form.
>
> However, if that is the only thing that is gained from doing this..
> then its not much.
>
> I'm still hesitating using session objects as I don't understand
> them.. and have read too many things about problems they cause.
>
> On Tue, Jun 06, 2006 at 10:45:20PM -0700, Colin Bean wrote:
> > Hi David,
> >
> > I wouldn't consider this method safe at all; a user could easily craft
> > their own pickled data that does something nasty and edit the source
> > of the form page to post it to your server.  Would it work to store a
> > user's prior form data in a session?  You could still use data from
> > the first form to generate the second page dynamically.
> >
> > -Colin
> >
> > On 6/6/06, David Bear <David.Bear@asu.edu> wrote:
> > >I'm thinking of a simple way to pass form data between different
> > >forms. For example, if I have page1 with form1 in it, and then for
> > >page2 dynamically generate the form elements for form2 including data
> > >from form1, how safe is it to put a python pickle in a form element?
> > >
> > >for example, something like
> > >
> > ><input type="hidden" name="priordata" value="pythonpicklegoeshere" >
> > >
> > >when the form is submitted, I should get a req.form["priordata"] that
> > >I can de-pickle right?
> > >
> > >
> > >--
> > >David Bear
> > >phone:  480-965-8257
> > >fax:    480-965-9189
> > >College of Public Programs/ASU
> > >Wilson Hall 232
> > >Tempe, AZ 85287-0803
> > > "Beware the IP portfolio, everyone will be suspect of trespassing"
> > >_______________________________________________
> > >Mod_python mailing list
> > >Mod_python@modpython.org
> > >http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
> --
> David Bear
> phone:  480-965-8257
> fax:    480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
>
From lblanquet at b2btechno.net  Sat Jun 10 12:47:41 2006
From: lblanquet at b2btechno.net (Laurent Blanquet)
Date: Sat Jun 10 12:48:18 2006
Subject: [mod_python] 3.2.8 - Memory leaks with   util.FieldStorage
Message-ID: <01c101c68cad$97b6d390$0f05a8c0@DELL2>

Hello,

I'm using MOD_APACHE 3.2.8 (from binary dist). with Apache 2.0.55 under Windows XP Pro.
I encounter memory leaks (~ 16 Ko per request) with a very basic handler like :

import mod_python
from mod_python import util

def handler(req):
    F=util.FieldStorage( req )   
    return mod_python.apache.OK

And sending an HTTP request like : 

====  Output from TCPWATCH ====
POST http://localhost:80/python/Alertes.py HTTP/1.0
Content-Type: multipart/form-data; boundary=--------061006144341906
Content-Length: 209
Proxy-Connection: keep-alive
Host: www.tx2-localhost
Accept: text/html, */*
User-Agent: Mozilla/3.0 (compatible; Indy Library)
Proxy-Authorization: Basic Og==

----------061006144341906
Content-Disposition: form-data; name="TYPE"

LAST_ALERTS
----------061006144341906
Content-Disposition: form-data; name="FILEAGE"

180

----------061006144341906--
====

Has somebody encountered the same problem ?
Is there a turn-around  or a fix that can be forecasted ?

Best regards,   Laurent.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060610/4fad439f/attachment.html
From jpg at jgassociates.ca  Sat Jun 10 14:29:13 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sat Jun 10 14:28:01 2006
Subject: [mod_python] 3.2.8 - Memory leaks with   util.FieldStorage
In-Reply-To: <01c101c68cad$97b6d390$0f05a8c0@DELL2>
References: <01c101c68cad$97b6d390$0f05a8c0@DELL2>
Message-ID: <448B0F79.3090308@jgassociates.ca>

I've replied to this on the developer's list. I suggest anyone who wants 
to participate in the discussion does so on that list and not here on 
the user's list. Otherwise this thread may get muddled.

Jim

Laurent Blanquet wrote:
> Hello,
> 
> I'm using MOD_APACHE 3.2.8 (from binary dist). with Apache 2.0.55 under Windows XP Pro.
> I encounter memory leaks (~ 16 Ko per request) with a very basic handler like :
> 
> import mod_python
> from mod_python import util
> 
> def handler(req):
>     F=util.FieldStorage( req )   
>     return mod_python.apache.OK
> 
> And sending an HTTP request like : 
> 
> ====  Output from TCPWATCH ====
> POST http://localhost:80/python/Alertes.py HTTP/1.0
> Content-Type: multipart/form-data; boundary=--------061006144341906
> Content-Length: 209
> Proxy-Connection: keep-alive
> Host: www.tx2-localhost
> Accept: text/html, */*
> User-Agent: Mozilla/3.0 (compatible; Indy Library)
> Proxy-Authorization: Basic Og==
> 
> ----------061006144341906
> Content-Disposition: form-data; name="TYPE"
> 
> LAST_ALERTS
> ----------061006144341906
> Content-Disposition: form-data; name="FILEAGE"
> 
> 180
> 
> ----------061006144341906--
> ====
> 
> Has somebody encountered the same problem ?
> Is there a turn-around  or a fix that can be forecasted ?
> 
> Best regards,   Laurent.
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nlv11281 at natlab.research.philips.com  Mon Jun 12 02:51:57 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Jun 12 02:52:15 2006
Subject: [mod_python] differentiate from where comes the request to a file
In-Reply-To: <5a8adb670606090806r131472f7gf789dd5a4c9abce2@mail.gmail.com>
References: <5a8adb670606090653t2a9fe6b4m74c720348edc4cbb@mail.gmail.com>	<5c06fa770606090722g689a0b0fv356b8e44bc28b031@mail.gmail.com>
	<5a8adb670606090806r131472f7gf789dd5a4c9abce2@mail.gmail.com>
Message-ID: <448D0F0D.1050105@natlab.research.philips.com>

Implementing an authentication handler is not so hard. You could also 
use a random(ish) cookie for authentication (only supply the file when 
the user has a cookie from an earlier request).

Another option is to embed that cookie in the file path, e.g. you make 
links like:
  http://myserver.my.domain/myplace/SGTY134S45SFT/document.pdf
A python handler verifies the weird 'SGTY134S45SFT' part of the request 
and uses the sendfile function if that checks out ok. Tip: Make sure 
that the generation creates the same code the next time the same user 
requests the same file (e.g. MD5 of soem secret, filename, IP address 
and user name).  This makes it possible for him to still cache the result.


On intranet networks, using something like SPNEGO for authentication is 
very user friendly as your users need only login to a Windows or Linux 
machine once, and need not type passwords or anything to authenticate 
(when using IE or Firefox). The administrative part is a pain to setup, 
but fortunately, that is a task system management must do and not the 
web master... It makes authentication as simple as just reading the 
req.user string value.



--
Mike Looijmans
Philips Natlab / Topic Automation


Rui Miguel Justino wrote:
> Hello,
> Thanks for the quick replies.I have been on this subject for the last 
> couple of days, and did not find a good answer to this. My project will 
> be in top of a python platform so is good to hear the opinion of people 
> who also understand the basics(apache).
> 
> I'm looking for some type of solution that is secure and easy to 
> implement and don't bring a bigger cost to the rest of the application. 
> I will look with more attention to the directions you both have pointed 
> out, I will definitively have to use authentication and then i can 
> probably control the access to files with Referer Header. I will study 
> the viability of it.
> 
> 
> 
> On 6/9/06, *Deron Meranda* <deron.meranda@gmail.com 
> <mailto:deron.meranda@gmail.com>> wrote:
> 
>     On 6/9/06, Rui Miguel Justino <rmcjustino@gmail.com
>     <mailto:rmcjustino@gmail.com>> wrote:
>      > Is it possible to differentiate between a request to a file of type
>      > (pdf,png, etc) made by a psp page and a direct request made by a
>     user who is
>      > trying to access directly to this files?
>      >
>      > Sorry  if it is confuse. The purpose here is to only give access
>     to files
>      > for users who have authenticate to the application, but Even
>     those users
>      > will only have access to files that show up in the
>     application(webpage). And
>      > if those users are trying to guess file names they ill not have
>     access to
>      > the files.
> 
>     As Nicolas said, usually the Referer header is used as a simple check.
>     That can even be done using just Apache directives with no mod_python
>     work if you want.
> 
>     However, if you're willing to put in more work and you don't want
>     to actually use authentication, you can make use of dynamically
>     generated hard-to-guess URLs for your images.
> 
>     Essentially when you output the HTML page which contains the
>     <img> link (or other linking element) you generate URLs with
>     lots of random characters.  Then either record those URLs in
>     a database of sorts, or perhaps encrypt or sign them (the standard
>     Python 'hmac' module may be useful).  And finally have a mod_python
>     handler accept all those URLs and serve the file contents only if
>     the URL verification works.  Eventually you remove the valid
>     URLs from your database (or they expire if you recorded a
>     date in them before HMAC signing).
> 
>     There's lots of details I left out, but it should give you the idea.
>     --
>     Deron Meranda
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From ziapannocchia at gmail.com  Mon Jun 12 04:35:41 2006
From: ziapannocchia at gmail.com (ziapannocchia@gmail.com)
Date: Mon Jun 12 04:36:24 2006
Subject: [mod_python] using nested blocks in psp
In-Reply-To: <ca4f20450606112327qa39d331s7400e0fb028a3d63@mail.gmail.com>
References: <ca4f20450606112327qa39d331s7400e0fb028a3d63@mail.gmail.com>
Message-ID: <ca4f20450606120135k3aac26ccu8998f3ddaf9b46f8@mail.gmail.com>

In the code at the and of the post, the for instruction flux depends
from the nested if.

Behaviour expected: for any item, the for instruction executes the if
instruction and
write the option tag.

Real behaviour: the for instruction runs well only if the control in
the if instruction fails. If the control is true, the flux jumps to the
next item and the option tag is not printed on html output.

I need to understand if that depends from a bad indentation or if
structures with more than one ":" are not supported in psp.

Sorry for my english.

[code]
<html>
<form>
 <select name="Elenco">
 <!--genera elenco usando un loop -->

<%
for i in range(50, 350, 50):
 if 'Elenco' in form and int(form['Elenco'])==i:
  sel='selected'
 else:
  sel=''
  #
 %>
 <option value="<%=i%>" <%=sel%> >
  <%=i%>
 </option>
 <%
%>
 </select>
 <input type="submit" value="acquisizione"/>
</form>
</html>
[/code]
From nlv11281 at natlab.research.philips.com  Mon Jun 12 04:51:14 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Mon Jun 12 04:53:16 2006
Subject: [mod_python] using nested blocks in psp
In-Reply-To: <ca4f20450606120135k3aac26ccu8998f3ddaf9b46f8@mail.gmail.com>
References: <ca4f20450606112327qa39d331s7400e0fb028a3d63@mail.gmail.com>
	<ca4f20450606120135k3aac26ccu8998f3ddaf9b46f8@mail.gmail.com>
Message-ID: <448D2B02.3040101@natlab.research.philips.com>

The way your code looks in my mailer, the indentation is flawed.

It should be like this (indenting the HTML is not needed but makes it 
better readable):

...
<select name="Elenco">
<%
for i in range(50, 350, 50):
     if 'Elenco' in form and int(form['Elenco'])==i:
         sel='selected'
     else:
         sel=''
     # end if
%>
     <option value="<%=i%>" <%=sel%> >
     <%=i%>
     </option>
<%
# end for
%>
</select>
<input type="submit" value="acquisizione"/>
...


Mike Looijmans
Philips Natlab / Topic Automation


ziapannocchia@gmail.com wrote:
> In the code at the and of the post, the for instruction flux depends
> from the nested if.
> 
> Behaviour expected: for any item, the for instruction executes the if
> instruction and
> write the option tag.
> 
> Real behaviour: the for instruction runs well only if the control in
> the if instruction fails. If the control is true, the flux jumps to the
> next item and the option tag is not printed on html output.
> 
> I need to understand if that depends from a bad indentation or if
> structures with more than one ":" are not supported in psp.
> 
> Sorry for my english.
> 
> [code]
> <html>
> <form>
> <select name="Elenco">
> <!--genera elenco usando un loop -->
> 
> <%
> for i in range(50, 350, 50):
> if 'Elenco' in form and int(form['Elenco'])==i:
>  sel='selected'
> else:
>  sel=''
>  #
> %>
> <option value="<%=i%>" <%=sel%> >
>  <%=i%>
> </option>
> <%
> %>
> </select>
> <input type="submit" value="acquisizione"/>
> </form>
> </html>
> [/code]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Mon Jun 12 04:56:37 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 12 04:56:59 2006
Subject: [mod_python] using nested blocks in psp
In-Reply-To: <ca4f20450606120135k3aac26ccu8998f3ddaf9b46f8@mail.gmail.com>
References: <ca4f20450606112327qa39d331s7400e0fb028a3d63@mail.gmail.com>
	<ca4f20450606120135k3aac26ccu8998f3ddaf9b46f8@mail.gmail.com>
Message-ID: <B08A6CD8-E8F2-49D3-B1B8-6946BB1C5215@dscpl.com.au>


On 12/06/2006, at 6:35 PM, ziapannocchia@gmail.com wrote:

> In the code at the and of the post, the for instruction flux depends
> from the nested if.
>
> Behaviour expected: for any item, the for instruction executes the if
> instruction and
> write the option tag.
>
> Real behaviour: the for instruction runs well only if the control in
> the if instruction fails. If the control is true, the flux jumps to  
> the
> next item and the option tag is not printed on html output.
>
> I need to understand if that depends from a bad indentation or if
> structures with more than one ":" are not supported in psp.
>
> Sorry for my english.
>
> [code]
> <html>
> <form>
> <select name="Elenco">
> <!--genera elenco usando un loop -->
>
> <%
> for i in range(50, 350, 50):
> if 'Elenco' in form and int(form['Elenco'])==i:
>  sel='selected'
> else:
>  sel=''
>  #

If I understand what you want, add:

# end for

at zero indent level.

The "#end for" indent hint was mentioned in link I already sent you in
response to comp.lang.python post.

Graham

> %>
> <option value="<%=i%>" <%=sel%> >
>  <%=i%>
> </option>
> <%
> %>
> </select>
> <input type="submit" value="acquisizione"/>
> </form>
> </html>
> [/code]
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Mon Jun 12 05:00:07 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 12 05:00:20 2006
Subject: [mod_python] using nested blocks in psp
In-Reply-To: <448D2B02.3040101@natlab.research.philips.com>
References: <ca4f20450606112327qa39d331s7400e0fb028a3d63@mail.gmail.com>
	<ca4f20450606120135k3aac26ccu8998f3ddaf9b46f8@mail.gmail.com>
	<448D2B02.3040101@natlab.research.philips.com>
Message-ID: <94BBB0EB-731C-4770-A0F6-E14C874C9D95@dscpl.com.au>

Whoops. Yes the "#end if", not "#end for" as I mentioned.

Not enough sleep the last couple of days. ;-)

BTW, I had already sent this person the link:

   http://www.modpython.org/pipermail/mod_python/2005-May/018102.html

which exhibits indent hinting.

Graham

On 12/06/2006, at 6:51 PM, Mike Looijmans wrote:

> The way your code looks in my mailer, the indentation is flawed.
>
> It should be like this (indenting the HTML is not needed but makes  
> it better readable):
>
> ...
> <select name="Elenco">
> <%
> for i in range(50, 350, 50):
>     if 'Elenco' in form and int(form['Elenco'])==i:
>         sel='selected'
>     else:
>         sel=''
>     # end if
> %>
>     <option value="<%=i%>" <%=sel%> >
>     <%=i%>
>     </option>
> <%
> # end for
> %>
> </select>
> <input type="submit" value="acquisizione"/>
> ...
>
>
> Mike Looijmans
> Philips Natlab / Topic Automation
>
>
> ziapannocchia@gmail.com wrote:
>> In the code at the and of the post, the for instruction flux depends
>> from the nested if.
>> Behaviour expected: for any item, the for instruction executes the if
>> instruction and
>> write the option tag.
>> Real behaviour: the for instruction runs well only if the control in
>> the if instruction fails. If the control is true, the flux jumps  
>> to the
>> next item and the option tag is not printed on html output.
>> I need to understand if that depends from a bad indentation or if
>> structures with more than one ":" are not supported in psp.
>> Sorry for my english.
>> [code]
>> <html>
>> <form>
>> <select name="Elenco">
>> <!--genera elenco usando un loop -->
>> <%
>> for i in range(50, 350, 50):
>> if 'Elenco' in form and int(form['Elenco'])==i:
>>  sel='selected'
>> else:
>>  sel=''
>>  #
>> %>
>> <option value="<%=i%>" <%=sel%> >
>>  <%=i%>
>> </option>
>> <%
>> %>
>> </select>
>> <input type="submit" value="acquisizione"/>
>> </form>
>> </html>
>> [/code]
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From richardlewis at fastmail.co.uk  Mon Jun 12 07:15:41 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Mon Jun 12 07:15:50 2006
Subject: [mod_python] __import__ error
Message-ID: <200606121215.43337.richardlewis@fastmail.co.uk>

Hello mod_pythoners,

I'm still working on that code to write a little Cocoon replacement which I 
posted regarding the other week. Its going quite well, but I've come up 
against another problem that I can't seem to find the answer to:

OK, this works:
_>>> module = "transforms.search_filter"
_>>> handler = "search_filter"
_>>> import os
_>>> os.chdir("/var/www-studio/")
_>>> sf = __import__(module.replace(".", os.sep)).__dict__[handler]()
_>>> dir(sf)
[..expected output...]

it corretly imports the module "/var/www-studio/transforms/search_filter.py" 
and creates an instance of its "search_filter" class.

However, the same code used in my application throws the following ImportError 
exception:
 
File "/usr/local/lib/python2.3/site-packages/pycoon/transformers/sax_handler_transformer.py", 
line 30, in __init__
    self.handler = __import__(module.replace(".", os.sep)).__dict__[handler]()
ImportError: No module named transforms/search_filter

I've tried giving it absolute paths, mixing various combinations of "." and 
os.sep and also using the imp.find_module and imp.load_module functions but I 
still get the same problem. (Actually, the imp.* functions tell me that there 
is no frozen module or some such bizarre error...)

As it works from the interpreter, I can only assume that it must be something 
to do with my application. However, I've been constantly re-designing as I 
work (one of the joys of Python!) and this also used to work in my 
application when I was using one *big* script file which lived in the same 
directory as "transforms/search_filter.py". I've now separated most of the 
classes out into their own files and split the "library"-like code away from 
the "program"-like code like this:

The "library"-like code:
/usr/local/lib/python2.3/site-packages/pycoon/
  __init__.py    # the handler(req) function is implemented here
  /sources/
    __init__.py
    xml_source.py
    ...
  /transformers/
    __init__.py
    xslt_transformer.py
    sax_handler_transformer.py   # this is where the problem is
    ...

the sax_handler_transformer.py module contains a sax_handler_transformer class 
whose __init__ method tries to import a variable named 
xml.sax.handler.ContentHandler class like this:

def __init__(self, module, handler):
  self.handler = __import__(module.replace(".", os.sep)).__dict__[handler]()


Then the website which is using the modules (the "program"-like code) is like 
this:

/var/www-studio/
  sitemap.xml # Specialised config file
  studio.conf   # Apache config: PythonHandler pycoon
  transforms/
    site2html.xslt
    search_filter.py   # this is where the problem is,
                              # contains search_filer class
                              # derived from xml.sax.handler.ContentHandler


I'm using mod_python, but I also get the same error when I use my command line 
testing script. Its Python 2.3.5 as supplied by Debian "unstable".

Um, I hope that makes sense. Any thoughts on why this isn't working would be 
very much appreciated.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
-=-=-=-=-=-=-=-=-=-=-=-=-=-
From jcigar at ulb.ac.be  Mon Jun 12 08:55:57 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Mon Jun 12 08:53:58 2006
Subject: [mod_python] psp
Message-ID: <448D645D.5000104@ulb.ac.be>

Hello list,

I have a little problem with psp (I'm using psp as a template engine)

In one of my templates I have :
<input type="text" class="scientific_name" name="scientific_name" 
value="<%= invasive.scientific_name %>" />

The problem I have is that I'm using this form in different context and 
sometimes the 'invasive' object doesn't exists.
Is there a way to "display-only-if-object-exist" ? What I would like to 
avoid is things like :

<%
try:
    # BEGIN
%>
    <%= invasive.scientific_name %>
<%
    #END
except:
    #BEGIN
%>
blabla
<%
# NED
%>

I tried something like :

def show_if_defined(s, obj=globals()):
    for part in s.split('.') :
        if not hasattr(obj, part):
            return ''
        obj = getattr(obj, part)
    return obj

and
<input type="text" class="scientific_name" name="scientific_name" 
value="<%= show_if_defined('invasive.scientific_name') %>" />

but without success ...

Any idea ?

Thanks

-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From slinger at cs.uu.nl  Mon Jun 12 08:58:24 2006
From: slinger at cs.uu.nl (drs. Slinger Jansen)
Date: Mon Jun 12 08:58:32 2006
Subject: [mod_python] File access is not the way it used to be
Message-ID: <448D64F0.2080804@cs.uu.nl>

Hey there,

if I run python just like that I can easily write to files, as you do, 
using such simple things as:
fp = open('debugCommCenter.out', 'w')

However, when these are in a server of mod_apache, nothing happens. Am I 
blocking file access or something? Is it a permission problem, and if 
so, how can I fix it? I've been looking for the solution on the list, 
and others say that adding the file dir to it should work. I did that 
too, but then still it doesn't work:
fp = open('d:\\xampp\\htdocs\\pytest\\debugCommCenter.out', 'w')

Where am I messing up?

Slinger

-- 
Slinger Remy Lokien Jansen

*email :* slinger@cs.uu.nl <mailto:slinger@cs.uu.nl>
*office :* CGN-B228
*telephone :* +31 (30) 253 6652
*faxnumber :* +31 (30) 251 3791

*Universiteit Utrecht*
Institute of Information and Computing Sciences
Centrumgebouw Noord, office B228
Padualaan 14, De Uithof
3584CH Utrecht

*scientific website : *http://www.cs.uu.nl/people/slinger/ 
<http://www.cs.uu.nl/people/slinger>
*personal website : *www.slingerjansen.nl <http://www.slingerjansen.nl>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060612/316004f8/attachment-0001.html
From jcigar at ulb.ac.be  Mon Jun 12 11:03:35 2006
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Mon Jun 12 11:01:55 2006
Subject: [mod_python] psp
In-Reply-To: <448D645D.5000104@ulb.ac.be>
References: <448D645D.5000104@ulb.ac.be>
Message-ID: <448D8247.4070000@ulb.ac.be>

With the help of a knowledge I resolved my problem with:

def access( path , current , default = '' ) :
    if not isinstance(current, dict):
        current = current.__dict__
    parts = path.split('.')
    if not parts:
        return default
    for part in parts[:-1]:
        if part not in current:
            return default
        current = current[part].__dict__
    return current.get(parts[-1] , default)

I think it could be a good idea in psp to have a predefined bunch of 
standard "template tags". I wondered whether somebody would have already 
thought to that ? I think It could improve the clearness of the 
templates a lot ...

Regards,
Julien


Julien Cigar wrote:
> Hello list,
>
> I have a little problem with psp (I'm using psp as a template engine)
>
> In one of my templates I have :
> <input type="text" class="scientific_name" name="scientific_name" 
> value="<%= invasive.scientific_name %>" />
>
> The problem I have is that I'm using this form in different context 
> and sometimes the 'invasive' object doesn't exists.
> Is there a way to "display-only-if-object-exist" ? What I would like 
> to avoid is things like :
>
> <%
> try:
>    # BEGIN
> %>
>    <%= invasive.scientific_name %>
> <%
>    #END
> except:
>    #BEGIN
> %>
> blabla
> <%
> # NED
> %>
>
> I tried something like :
>
> def show_if_defined(s, obj=globals()):
>    for part in s.split('.') :
>        if not hasattr(obj, part):
>            return ''
>        obj = getattr(obj, part)
>    return obj
>
> and
> <input type="text" class="scientific_name" name="scientific_name" 
> value="<%= show_if_defined('invasive.scientific_name') %>" />
>
> but without success ...
>
> Any idea ?
>
> Thanks
>


-- 
Julien Cigar
Belgian Biodiversity Platform
http://www.biodiversity.be
Universit? Libre de Bruxelles
Campus de la Plaine CP 257
B?timent NO, Bureau 4 N4 115C (Niveau 4)
Boulevard du Triomphe, entr?e ULB 2
B-1050 Bruxelles
office: jcigar@ulb.ac.be
home: mage@mordor.ath.cx

From deron.meranda at gmail.com  Mon Jun 12 11:30:42 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Jun 12 11:30:58 2006
Subject: [mod_python] File access is not the way it used to be
In-Reply-To: <448D64F0.2080804@cs.uu.nl>
References: <448D64F0.2080804@cs.uu.nl>
Message-ID: <5c06fa770606120830x43d55eal741b8911cb185f18@mail.gmail.com>

On 6/12/06, drs. Slinger Jansen <slinger@cs.uu.nl> wrote:
>  if I run python just like that I can easily write to files, as you do,
> using such simple things as:
>  fp = open('debugCommCenter.out', 'w')
>
>  However, when these are in a server of mod_apache, nothing happens. Am I
> blocking file access or something? Is it a permission problem, and if so,
> how can I fix it? I've been looking for the solution on the list, and others
> say that adding the file dir to it should work. I did that too, but then
> still it doesn't work:
>  fp =
> open('d:\\xampp\\htdocs\\pytest\\debugCommCenter.out', 'w')

Do you get any error messages?  Do your mod_python handlers work
correctly otherwise?  Anyway, it could be permissions, because
your handlers are running as the Apache user.

Under modern Linuxes, the most likely cause is SElinux profiles.
Check the /var/log/messages log file for avt: denied messages.

Under Windows it could perhaps be an ACL permission (although
I don't know Windows very well).

Try perhaps to open and write to a different pathname, one that is
likely to have open permissions such as /tmp or C:\\Windows\Temp.


One other thing, when writing to files from within a mod_python
handler, you need to worry about concurrent file access.  Both by
multiple threads as well as multiple processes.  Opening files
in append-mode and using appropriate locking mechanism is
probably warranted.

And if all you want is to output some debugging messages,
consider using mod_python's apache.log_error() function instead.
http://modpython.org/live/current/doc-html/pyapi-apmeth.html
-- 
Deron Meranda
From thomas at eforms.co.nz  Mon Jun 12 18:11:39 2006
From: thomas at eforms.co.nz (Thomas Thomas)
Date: Mon Jun 12 18:11:02 2006
Subject: [mod_python] mod python getting it work on apache 1.3
Message-ID: <047401c68e6d$30918360$346ea8c0@tintz.co.nz>

Hi All,

Did Anyone got mod_python working with apache 1.3 .. I am trying to set it up on my debian box.
Moving to apache 2 is not an option..

configuration I want to get it work..
 Server Version: Apache/1.3.33 (Debian GNU/Linux) mod_python/2.7.10
 Python/2.3.5

mod_python is installing fine .. when i try accessing the page seems like psp is not processes as it is returning me  source ..

I am unable to access the page "To see the collection of prior postings to the list, visit the Mod_python Archives"
http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/


any help..




-----------------------------------------------------
Thomas Thomas

phone  +64 7 855 8478
fax        +64 7 855 8871
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060613/543727d4/attachment.html
From grahamd at dscpl.com.au  Mon Jun 12 19:39:10 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 12 19:39:21 2006
Subject: [mod_python] __import__ error
In-Reply-To: <200606121215.43337.richardlewis@fastmail.co.uk>
References: <200606121215.43337.richardlewis@fastmail.co.uk>
Message-ID: <FA3FDAD8-2960-4857-820B-226AC5944AC3@dscpl.com.au>


On 12/06/2006, at 9:15 PM, Richard Lewis wrote:

> Hello mod_pythoners,
>
> I'm still working on that code to write a little Cocoon replacement  
> which I
> posted regarding the other week. Its going quite well, but I've  
> come up
> against another problem that I can't seem to find the answer to:
>
> OK, this works:
> _>>> module = "transforms.search_filter"
> _>>> handler = "search_filter"
> _>>> import os
> _>>> os.chdir("/var/www-studio/")

Don't use os.chdir() in mod_python or rely on what the current working
directory may be as there can be threaded MPMs for Apache and thus
each request thread can fight each other wanting to change the current
working directory thereby screwing each other up.

> _>>> sf = __import__(module.replace(".", os.sep)).__dict__[handler]()

Note that using 'os.sep' in module naming hierarchy only works on some
platforms when using __import__ and thus is not portable. It may work
on Linux, but doesn't work on Mac OS X. Don't know if it works on Win32
or not.

> _>>> dir(sf)
> [..expected output...]
>
> it corretly imports the module "/var/www-studio/transforms/ 
> search_filter.py"
> and creates an instance of its "search_filter" class.
>
> However, the same code used in my application throws the following  
> ImportError
> exception:
>
> File "/usr/local/lib/python2.3/site-packages/pycoon/transformers/ 
> sax_handler_transformer.py",
> line 30, in __init__
>     self.handler = __import__(module.replace(".", os.sep)).__dict__ 
> [handler]()
> ImportError: No module named transforms/search_filter
>
> I've tried giving it absolute paths, mixing various combinations of  
> "." and
> os.sep and also using the imp.find_module and imp.load_module  
> functions but I
> still get the same problem. (Actually, the imp.* functions tell me  
> that there
> is no frozen module or some such bizarre error...)

When import in mod_python is done, it will not necessarily look in  
current
working directory anyway. You need to add directory to Python PATH
explicitly using the directive:

  PythonPath 'sys.path+["/var/www-studio/"]'

in your Apache configuration for where you are using mod_python.

Graham

> As it works from the interpreter, I can only assume that it must be  
> something
> to do with my application. However, I've been constantly re- 
> designing as I
> work (one of the joys of Python!) and this also used to work in my
> application when I was using one *big* script file which lived in  
> the same
> directory as "transforms/search_filter.py". I've now separated most  
> of the
> classes out into their own files and split the "library"-like code  
> away from
> the "program"-like code like this:
>
> The "library"-like code:
> /usr/local/lib/python2.3/site-packages/pycoon/
>   __init__.py    # the handler(req) function is implemented here
>   /sources/
>     __init__.py
>     xml_source.py
>     ...
>   /transformers/
>     __init__.py
>     xslt_transformer.py
>     sax_handler_transformer.py   # this is where the problem is
>     ...
>
> the sax_handler_transformer.py module contains a  
> sax_handler_transformer class
> whose __init__ method tries to import a variable named
> xml.sax.handler.ContentHandler class like this:
>
> def __init__(self, module, handler):
>   self.handler = __import__(module.replace(".", os.sep)).__dict__ 
> [handler]()
>
>
> Then the website which is using the modules (the "program"-like  
> code) is like
> this:
>
> /var/www-studio/
>   sitemap.xml # Specialised config file
>   studio.conf   # Apache config: PythonHandler pycoon
>   transforms/
>     site2html.xslt
>     search_filter.py   # this is where the problem is,
>                               # contains search_filer class
>                               # derived from  
> xml.sax.handler.ContentHandler
>
>
> I'm using mod_python, but I also get the same error when I use my  
> command line
> testing script. Its Python 2.3.5 as supplied by Debian "unstable".
>
> Um, I hope that makes sense. Any thoughts on why this isn't working  
> would be
> very much appreciated.
>
> Cheers,
> Richard
> -- 
> -=-=-=-=-=-=-=-=-=-=-=-=-=-
> Richard Lewis
> Sonic Arts Research Archive
> http://www.sara.uea.ac.uk/
> -=-=-=-=-=-=-=-=-=-=-=-=-=-
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Mon Jun 12 19:45:21 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 12 19:45:51 2006
Subject: [mod_python] mod python getting it work on apache 1.3
In-Reply-To: <047401c68e6d$30918360$346ea8c0@tintz.co.nz>
References: <047401c68e6d$30918360$346ea8c0@tintz.co.nz>
Message-ID: <1C12787A-0BBC-437E-B0D6-FA2AD132CFC1@dscpl.com.au>

PSP is not available for mod_python 2.7.10. You only have basic handlers
and publisher. Read the correct documentation for the version you are
using.

Try writing a basic handler first to check your configuration. Read:

   http://www.dscpl.com.au/articles/modpython-001/html

Once you have that much going, then maybe start looking at publisher,
but PSP is not an option.

Graham

On 13/06/2006, at 8:11 AM, Thomas Thomas wrote:

> Hi All,
>
> Did Anyone got mod_python working with apache 1.3 .. I am trying to  
> set it up on my debian box.
> Moving to apache 2 is not an option..
>
> configuration I want to get it work..
>  Server Version: Apache/1.3.33 (Debian GNU/Linux) mod_python/2.7.10
>  Python/2.3.5
>
> mod_python is installing fine .. when i try accessing the page  
> seems like psp is not processes as it is returning me  source ..
>
> I am unable to access the page "To see the collection of prior  
> postings to the list, visit the Mod_python Archives"
> http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/ 
> mod_python/
>
>
> any help..
>
>
>
> -----------------------------------------------------
> Thomas Thomas
>
> phone  +64 7 855 8478
> fax        +64 7 855 8871
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060613/64fee4d6/attachment.html
From dm at julius.ling.ohio-state.edu  Mon Jun 12 21:34:17 2006
From: dm at julius.ling.ohio-state.edu (Detmar Meurers)
Date: Mon Jun 12 21:34:21 2006
Subject: [mod_python] __import__ error
In-Reply-To: <FA3FDAD8-2960-4857-820B-226AC5944AC3@dscpl.com.au>
References: <200606121215.43337.richardlewis@fastmail.co.uk>
	<FA3FDAD8-2960-4857-820B-226AC5944AC3@dscpl.com.au>
Message-ID: <20060613013417.GA2376@ling.osu.edu>

Hi Graham (et al.),

related to where you write:

    When import in mod_python is done, it will not necessarily look
    in current working directory anyway. You need to add directory
    to Python PATH explicitly using the directive:
    
    PythonPath 'sys.path+["/var/www-studio/"]'
    
    in your Apache configuration for where you are using mod_python.
    
I was wondering about the motivation for adding this as part of the
Apache configuration and whether there are alternatives. As
motivation for this question: During development, I have various
versions of code checked out (from cvs) to different directories, so
it's rather impractical to add each such directory to the Apache
configuration.

Instead, I call sys.path.append(dirname(__file__)) in each .py file
that's in a directory from which I want to import other code (or
actually sys.path.append(join(dirname(__file__), 'include')) since I
store other python modules in an include subdirectory).

As far as I can tell, this seems to work (i.e., I can then use
import or apache.import_module to load files from those directories)
but several replies on this topic only mention the PythonPath
solution in the apache configuration, which made me wonder whether
there are downsides to using sys.path.append in the python code for
this? 

Best,
Detmar


--
Detmar Meurers, Associate Professor, Dept. of Linguistics, OSU
201a Oxley Hall, 1712 Neil Avenue, Columbus OH 43210-1298, USA
http://ling.osu.edu/~dm/                 GnuPG key on web page
From grahamd at dscpl.com.au  Tue Jun 13 00:22:22 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 13 00:22:34 2006
Subject: [mod_python] __import__ error
In-Reply-To: <20060613013417.GA2376@ling.osu.edu>
References: <200606121215.43337.richardlewis@fastmail.co.uk>
	<FA3FDAD8-2960-4857-820B-226AC5944AC3@dscpl.com.au>
	<20060613013417.GA2376@ling.osu.edu>
Message-ID: <C9256129-28B7-4F8A-8155-20FBEF7B6C20@dscpl.com.au>


On 13/06/2006, at 11:34 AM, Detmar Meurers wrote:

> Hi Graham (et al.),
>
> related to where you write:
>
>     When import in mod_python is done, it will not necessarily look
>     in current working directory anyway. You need to add directory
>     to Python PATH explicitly using the directive:
>
>     PythonPath 'sys.path+["/var/www-studio/"]'
>
>     in your Apache configuration for where you are using mod_python.
>
> I was wondering about the motivation for adding this as part of the
> Apache configuration and whether there are alternatives.

There are alternatives, but I only wanted to go into the simplest one
because aspects of other options will/may change when new module
importer is available for use in next major version of mod_python.

> As
> motivation for this question: During development, I have various
> versions of code checked out (from cvs) to different directories, so
> it's rather impractical to add each such directory to the Apache
> configuration.
>
> Instead, I call sys.path.append(dirname(__file__)) in each .py file
> that's in a directory from which I want to import other code (or
> actually sys.path.append(join(dirname(__file__), 'include')) since I
> store other python modules in an include subdirectory).

This is actually not a good idea. This is because if the module doing  
this
is reimported because of autoreload being enabled (default), then the
path gets appended to sys.path again. Thus over time the same directory
could be added many many times to sys.path slowing down module
searches.

> As far as I can tell, this seems to work (i.e., I can then use
> import or apache.import_module to load files from those directories)
> but several replies on this topic only mention the PythonPath
> solution in the apache configuration, which made me wonder whether
> there are downsides to using sys.path.append in the python code for
> this?

If you are using apache.import_module() anyway, don't modify sys.path
at all, instead use the "path" argument to the function. Thus:

   __here__ = os.path.dirname(__file__)
   module = apache.import_module("mymodule", path=[__here__])

It will search those directories without them being added to sys.path.

If the child modules use the "import" statement to import a subsequent
module from the same directory, it will not find it though as  
sys.path has
not been changed to reference that directory. Thus need to use the
apache.import_module() function consistently for your own stuff in that
directory.

BTW, you might want to read:

   http://www.dscpl.com.au/articles/modpython-003.html

which details various module importer problems.

Graham
From grahamd at dscpl.com.au  Tue Jun 13 00:58:05 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 13 00:58:27 2006
Subject: [mod_python] mod python getting it work on apache 1.3
In-Reply-To: <055d01c68ea5$19aa0a40$346ea8c0@tintz.co.nz>
References: <047401c68e6d$30918360$346ea8c0@tintz.co.nz>
	<1C12787A-0BBC-437E-B0D6-FA2AD132CFC1@dscpl.com.au>
	<055d01c68ea5$19aa0a40$346ea8c0@tintz.co.nz>
Message-ID: <D79A9903-E6AA-4D13-B7A9-A2ADA52CDE16@dscpl.com.au>


On 13/06/2006, at 2:51 PM, Thomas Thomas wrote:

> Hi Graham,
>
> Thanks for the help.
> We needed this for integrating an application written using PSP and  
> python on our apache 1.3 debian box.
> Upgrading to apache2 is not option , so I guess we are stuck..
>
> is using mod_python 3.2 with apache 1.3 an option .. any suggestions..

Please keep followups on the list.

As to your question, mod_python 3.2 requires at least Apache 2.0.47  
(or thereabouts, I think).

So yes, you are stuck.

Graham

> cheers
> -----------------------------------------------------
> Thomas Thomas
>
> phone  +64 7 855 8478
> fax        +64 7 855 8871
> ----- Original Message -----
> From: Graham Dumpleton
> To: Thomas Thomas
> Cc: mod_python@modpython.org
> Sent: Tuesday, June 13, 2006 11:45 AM
> Subject: Re: [mod_python] mod python getting it work on apache 1.3
>
> PSP is not available for mod_python 2.7.10. You only have basic  
> handlers
> and publisher. Read the correct documentation for the version you are
> using.
>
> Try writing a basic handler first to check your configuration. Read:
>
>   http://www.dscpl.com.au/articles/modpython-001/html
>
> Once you have that much going, then maybe start looking at publisher,
> but PSP is not an option.
>
> Graham
>
> On 13/06/2006, at 8:11 AM, Thomas Thomas wrote:
>
>> Hi All,
>>
>> Did Anyone got mod_python working with apache 1.3 .. I am trying  
>> to set it up on my debian box.
>> Moving to apache 2 is not an option..
>>
>> configuration I want to get it work..
>>  Server Version: Apache/1.3.33 (Debian GNU/Linux) mod_python/2.7.10
>>  Python/2.3.5
>>
>> mod_python is installing fine .. when i try accessing the page  
>> seems like psp is not processes as it is returning me  source ..
>>
>> I am unable to access the page "To see the collection of prior  
>> postings to the list, visit the Mod_python Archives"
>> http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/ 
>> mod_python/
>>
>>
>> any help..
>>
>>
>>
>> -----------------------------------------------------
>> Thomas Thomas
>>
>> phone  +64 7 855 8478
>> fax        +64 7 855 8871
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060613/ecf7d814/attachment-0001.html
From slinger at cs.uu.nl  Tue Jun 13 02:31:17 2006
From: slinger at cs.uu.nl (drs. Slinger Jansen)
Date: Tue Jun 13 02:31:22 2006
Subject: [mod_python] File access is not the way it used to be
In-Reply-To: <5c06fa770606120830x43d55eal741b8911cb185f18@mail.gmail.com>
References: <448D64F0.2080804@cs.uu.nl>
	<5c06fa770606120830x43d55eal741b8911cb185f18@mail.gmail.com>
Message-ID: <448E5BB5.7070605@cs.uu.nl>

Dear Deron,

Thanks for your reply, I tried windows\temp and that worked like a 
charm! Thanks. Now I'm trying to deal with your other remark, with 
locking and stuff. Especially because my app will accept uploads from 
many different sources...

In case anyone is looking for a working directory quote in WinXP:
fpLog = open("D:/xampp/htdocs/Tool/CommCenter/CommCenter.log", 'a')

Thanks again,

Slinger Jansen


Deron Meranda schreef:
> On 6/12/06, drs. Slinger Jansen <slinger@cs.uu.nl> wrote:
>>  if I run python just like that I can easily write to files, as you do,
>> using such simple things as:
>>  fp = open('debugCommCenter.out', 'w')
>>
>>  However, when these are in a server of mod_apache, nothing happens. 
>> Am I
>> blocking file access or something? Is it a permission problem, and if 
>> so,
>> how can I fix it? I've been looking for the solution on the list, and 
>> others
>> say that adding the file dir to it should work. I did that too, but then
>> still it doesn't work:
>>  fp =
>> open('d:\\xampp\\htdocs\\pytest\\debugCommCenter.out', 'w')
>
> Do you get any error messages?  Do your mod_python handlers work
> correctly otherwise?  Anyway, it could be permissions, because
> your handlers are running as the Apache user.
>
> Under modern Linuxes, the most likely cause is SElinux profiles.
> Check the /var/log/messages log file for avt: denied messages.
>
> Under Windows it could perhaps be an ACL permission (although
> I don't know Windows very well).
>
> Try perhaps to open and write to a different pathname, one that is
> likely to have open permissions such as /tmp or C:\\Windows\Temp.
>
>
> One other thing, when writing to files from within a mod_python
> handler, you need to worry about concurrent file access.  Both by
> multiple threads as well as multiple processes.  Opening files
> in append-mode and using appropriate locking mechanism is
> probably warranted.
>
> And if all you want is to output some debugging messages,
> consider using mod_python's apache.log_error() function instead.
> http://modpython.org/live/current/doc-html/pyapi-apmeth.html


-- 
Slinger Remy Lokien Jansen

*email :* slinger@cs.uu.nl <mailto:slinger@cs.uu.nl>
*office :* CGN-B228
*telephone :* +31 (30) 253 6652
*faxnumber :* +31 (30) 251 3791

*Universiteit Utrecht*
Institute of Information and Computing Sciences
Centrumgebouw Noord, office B228
Padualaan 14, De Uithof
3584CH Utrecht

*scientific website : *http://www.cs.uu.nl/people/slinger/ 
<http://www.cs.uu.nl/people/slinger>
*personal website : *www.slingerjansen.nl <http://www.slingerjansen.nl>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060613/c30e6fae/attachment.html
From sandipm at talentica.com  Tue Jun 13 07:22:42 2006
From: sandipm at talentica.com (sandip more)
Date: Tue Jun 13 07:22:48 2006
Subject: [mod_python] Re: Mike's psp upload
Message-ID: <015801c68edb$b1dc88c0$c7010a0a@SANDIP>

hello all,
 I am also trying to implement file upload functionality with psp. I didn't get the use of callback function. 
I am able to access the data of uploaded file with following code.

frm = util.FieldStorage(req)
for afile in frm.getlist('UploadFile'):
    filedata = afile.file.read()
    #write filedata to some file in local directory with name afile.filename.

can someone explain me..what is the need of this callback function? also how it works?


Thanks 
Sandip 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060613/0b8f0247/attachment.html
From jcea at argo.es  Tue Jun 13 08:46:31 2006
From: jcea at argo.es (Jesus Cea)
Date: Tue Jun 13 08:46:35 2006
Subject: [mod_python] passing pickles
In-Reply-To: <29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>
References: <20060607044519.GG19604@asu.edu>
	<29a6ca010606062245x481fec9frccdf0d270d89571a@mail.gmail.com>
Message-ID: <448EB3A7.5090400@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Colin Bean wrote:
> Hi David,
> 
> I wouldn't consider this method safe at all; a user could easily craft
> their own pickled data that does something nasty and edit the source
> of the form page to post it to your server.

I use the pickle method, but the pickled string has a checksum using
HMAC and a "secret" key. So, if the pickle is changed, the server can
notice it.

So my only vulnerable path would be replaying previous pickles, not an
issue in my environment.

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea@jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI6zp5lgi5GaxT1NAQK8tAP/Vvi5oifgS5s7RaBDVLHMNgsV7YJfFaM9
x2e/NbFtW/amkIhe5g9502Xo5RsRQr1WfNVTcyRllX5cECZUO9w7timfIeXQ8PH6
a7AfT7AvklQnOfXnPXhOC0apLbsVgj84sVLJwBio8j6two3QEeDKs8IxQFmGRqRZ
37AM/dGIWHM=
=frBx
-----END PGP SIGNATURE-----
From jcea at argo.es  Tue Jun 13 08:52:04 2006
From: jcea at argo.es (Jesus Cea)
Date: Tue Jun 13 08:52:07 2006
Subject: [mod_python] 3.2.8 - Memory leaks with   util.FieldStorage
In-Reply-To: <448B0F79.3090308@jgassociates.ca>
References: <01c101c68cad$97b6d390$0f05a8c0@DELL2>
	<448B0F79.3090308@jgassociates.ca>
Message-ID: <448EB4F4.9050704@argo.es>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Jim Gallacher wrote:
> I've replied to this on the developer's list. I suggest anyone who wants
> to participate in the discussion does so on that list and not here on
> the user's list. Otherwise this thread may get muddled.

Where is the devel list?. http://mailman.modpython.org/mailman/listinfo/
only shows the user list...

- --
Jesus Cea Avion                         _/_/      _/_/_/        _/_/_/
jcea@argo.es http://www.argo.es/~jcea/ _/_/    _/_/  _/_/    _/_/  _/_/
jabber / xmpp:jcea@jabber.org         _/_/    _/_/          _/_/_/_/_/
                               _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iQCVAwUBRI609Jlgi5GaxT1NAQJuXAP9FJxMJngV9rtac3RzL2XDv9WM6GFijn/Y
cUs7xPZ0fmPZgV0s1l0ljn4qNvVboD63y2K6NceMvz9tvpIgfN5cV8bLNMRZZTkc
E/HMtYx52f1oXM+0s+HkquAlL4TC+pzjZoyCHbRreWfUGmNUc1LfsYTg37etiEBU
rq+AeZxiiak=
=LId8
-----END PGP SIGNATURE-----
From jpg at jgassociates.ca  Tue Jun 13 09:09:16 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Tue Jun 13 09:08:36 2006
Subject: [mod_python] 3.2.8 - Memory leaks with   util.FieldStorage
In-Reply-To: <448EB4F4.9050704@argo.es>
References: <01c101c68cad$97b6d390$0f05a8c0@DELL2>	<448B0F79.3090308@jgassociates.ca>
	<448EB4F4.9050704@argo.es>
Message-ID: <448EB8FC.3080700@jgassociates.ca>

Jesus Cea wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
> 
> Jim Gallacher wrote:
>> I've replied to this on the developer's list. I suggest anyone who wants
>> to participate in the discussion does so on that list and not here on
>> the user's list. Otherwise this thread may get muddled.
> 
> Where is the devel list?. http://mailman.modpython.org/mailman/listinfo/
> only shows the user list...

Developer info here:
http://people.apache.org/~jgallacher/mod_python/website-test/developers.html

Eventually my mod_python info pages will get moved to a more public 
place... no really I mean it... I've petitioned parliament to have the 
day extended to 25 hours... That should help. :)

Jim
From richardlewis at fastmail.co.uk  Tue Jun 13 09:08:48 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Tue Jun 13 09:08:56 2006
Subject: [mod_python] __import__ error
In-Reply-To: <FA3FDAD8-2960-4857-820B-226AC5944AC3@dscpl.com.au>
References: <200606121215.43337.richardlewis@fastmail.co.uk>
	<FA3FDAD8-2960-4857-820B-226AC5944AC3@dscpl.com.au>
Message-ID: <200606131408.49182.richardlewis@fastmail.co.uk>

On Tuesday 13 June 2006 00:39, Graham Dumpleton wrote:
> When import in mod_python is done, it will not necessarily look in
> current
> working directory anyway. You need to add directory to Python PATH
> explicitly using the directive:
>
>   PythonPath 'sys.path+["/var/www-studio/"]'
>
> in your Apache configuration for where you are using mod_python.

OK, I've added this and it works, but...

> > _>>> sf = __import__(module.replace(".", os.sep)).__dict__[handler]()
>
> Note that using 'os.sep' in module naming hierarchy only works on some
> platforms when using __import__ and thus is not portable. It may work
> on Linux, but doesn't work on Mac OS X. Don't know if it works on Win32
> or not.
>
...only if I continue to use os.sep. I've put it in a try block like this:

try:
  self.handler = __import__(module).__dict__[handler]()
except ImportError:
  self.handler = __import__(module.replace(".", os.sep)).__dict__[handler]()

but it always uses the exception case. I haven't tried it with OS X or Windows 
yet. Perhaps they'll use the first case properly.

Thanks for your help.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
-=-=-=-=-=-=-=-=-=-=-=-=-=-
From nlv11281 at natlab.research.philips.com  Tue Jun 13 09:57:35 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Jun 13 14:55:50 2006
Subject: [mod_python] Re: Mike's psp upload
In-Reply-To: <015801c68edb$b1dc88c0$c7010a0a@SANDIP>
References: <015801c68edb$b1dc88c0$c7010a0a@SANDIP>
Message-ID: <448EC44F.3020802@natlab.research.philips.com>

The default behaviour of FieldStorage is to place the uploaded file in 
some temp location. By providing the callback, you can prevent the file 
being stored twice (once on temp, once on the final location). This 
allows uploading files of many gigabytes without consuming diskspace or 
memory.

Note that by doing:
    filedata = afile.file.read()
you read the entire file into system memory. If a user sends you a 1GB 
file, your server is likely to "die" there. Use one of the 
shutil.copyfile functions to copy the file to where you want, without 
(potentially) consuming megabytes of memory.


Mike Looijmans
Philips Natlab / Topic Automation


sandip more wrote:
> hello all,
>  I am also trying to implement file upload functionality with psp. I 
> didn't get the use of callback function.
> I am able to access the data of uploaded file with following code.
>  
> frm = util.FieldStorage(req)
> for afile in frm.getlist('UploadFile'):
>     filedata = afile.file.read()
>     #write filedata to some file in local directory with name 
> afile.filename.
>  
> can someone explain me..what is the need of this callback function? also 
> how it works?
>  
>  
> Thanks
> Sandip
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From thomas.crawley at beacon-cs.com  Tue Jun 13 18:43:20 2006
From: thomas.crawley at beacon-cs.com (Thomas Crawley)
Date: Tue Jun 13 18:43:23 2006
Subject: [mod_python] Installation problems on x86_64 machines and a solution
Message-ID: <E039091C7906404AB786BDFDB23E659720C3CB@bcssvr01.beacon-cs.com>

Hi,

I was installing modpython on an AMD64 or X86_64 based machine today and
I ran into a problem which I solved but which might be of interest to
the list.

I had installed python 2.4.3 from source and then proceeded to install
modpython

I received the following error during the make phase of modpython
installation

"""""
/usr/include/features.h:150:1: warning: this is the location of the
previous definition
/bin/sh /usr/lib64/apr/build/libtool --silent --mode=link gcc -o
mod_python.la -I/tmp/modpython/mod_python-3.2.8/src/include
-I/usr/include/httpd -I/usr/local/include/python2.4  -rpath
/usr/lib64/httpd/modules -module -avoid-version    hlistobject.lo
hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo
tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo
-L/usr/local/lib/python2.4/config -Xlinker -export-dynamic -lm
-lpython2.4 -lpthread -ldl -lutil -lm
/usr/bin/ld: /usr/local/lib/python2.4/config/libpython2.4.a(abstract.o):
relocation R_X86_64_32 against `a local symbol' can not be used when
making a shared object; recompile with -fPIC
/usr/local/lib/python2.4/config/libpython2.4.a: could not read symbols:
Bad value
collect2: ld returned 1 exit status
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make: *** [do_dso] Error 2
"""""

The reason for this is that I had not installed python using the correct
options to the configure command.

You need to specify --enabled-shared option when running the configure
command which you use to generate the Python install files.

I reinstalled Python using this option and things went better with one
minor issue. I had to explicitly specify LD_LIBRARY_PATH in my bash
shell or Python would not load.

Modpython then installed fine.

This is not really a modpython problem but other people may have the
same issue so I hope this is useful.

Tom





From grahamd at dscpl.com.au  Tue Jun 13 18:57:39 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 13 18:57:43 2006
Subject: [mod_python] __import__ error
Message-ID: <1150239458.20846@dscpl.user.openhosting.com>

Richard Lewis wrote ..
> On Tuesday 13 June 2006 00:39, Graham Dumpleton wrote:
> > Note that using 'os.sep' in module naming hierarchy only works on some
> > platforms when using __import__ and thus is not portable. It may work
> > on Linux, but doesn't work on Mac OS X. Don't know if it works on Win32
> > or not.
> >
> ...only if I continue to use os.sep. I've put it in a try block like this:
> 
> try:
>   self.handler = __import__(module).__dict__[handler]()
> except ImportError:
>   self.handler = __import__(module.replace(".", os.sep)).__dict__[handler]()
> 
> but it always uses the exception case. I haven't tried it with OS X or
> Windows 
> yet. Perhaps they'll use the first case properly.

Where importing "a/b" targeting "a/b.py", is there also a "a/__init__.py"?

In other words, is the directory "a" properly setup as a Python package
with an "__init__.py" file? If not, then '.' notation wouldn't work but '/'
may (at least for that platform).

Graham
From ziapannocchia at gmail.com  Wed Jun 14 01:22:43 2006
From: ziapannocchia at gmail.com (ziapannocchia@gmail.com)
Date: Wed Jun 14 01:22:47 2006
Subject: [mod_python] Re: using nested blocks in psp
In-Reply-To: <94BBB0EB-731C-4770-A0F6-E14C874C9D95@dscpl.com.au>
References: <ca4f20450606112327qa39d331s7400e0fb028a3d63@mail.gmail.com>
	<ca4f20450606120135k3aac26ccu8998f3ddaf9b46f8@mail.gmail.com>
	<448D2B02.3040101@natlab.research.philips.com>
	<94BBB0EB-731C-4770-A0F6-E14C874C9D95@dscpl.com.au>
Message-ID: <ca4f20450606132222w3f415df1p89692831e6a8deba@mail.gmail.com>

2006/6/12, Graham Dumpleton <grahamd@dscpl.com.au>:

>
> BTW, I had already sent this person the link:
>
>    http://www.modpython.org/pipermail/mod_python/2005-May/018102.html
>
> which exhibits indent hinting.
>
Sorry for delayed answer on this topic.
Your example solves my problem.
From ziapannocchia at gmail.com  Wed Jun 14 01:56:27 2006
From: ziapannocchia at gmail.com (ziapannocchia@gmail.com)
Date: Wed Jun 14 01:56:31 2006
Subject: [mod_python]apache chroot
Message-ID: <ca4f20450606132256v1ac40257u109388a0cf5e47f7@mail.gmail.com>

I'm using a working chroot for apache, built with mod_security on a gentoo-box.

Using "SecChrootDir /chroot/apache" in 99_mod_security.conf, forced a
failure at any access to .psp files with this log:
[code]
make_obcallback: could not import mod_python.apache.\n
[/code]

I tried to populate chroot with a lot af files, but with a serious strategy.
What is needed to have a working chroot for mod_python?
From grahamd at dscpl.com.au  Wed Jun 14 02:09:52 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 14 02:09:57 2006
Subject: [mod_python]apache chroot
Message-ID: <1150265392.11047@dscpl.user.openhosting.com>

An installation of Python in the same perceived location as it exists
in real file system, including the mod_python components installed
in the Python site-packages directory.  It looks a bit like the latter
is missing.

ziapannocchia@gmail.com wrote ..
> I'm using a working chroot for apache, built with mod_security on a gentoo-box.
> 
> Using "SecChrootDir /chroot/apache" in 99_mod_security.conf, forced a
> failure at any access to .psp files with this log:
> [code]
> make_obcallback: could not import mod_python.apache.\n
> [/code]
> 
> I tried to populate chroot with a lot af files, but with a serious strategy.
> What is needed to have a working chroot for mod_python?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From richardlewis at fastmail.co.uk  Wed Jun 14 04:23:12 2006
From: richardlewis at fastmail.co.uk (Richard Lewis)
Date: Wed Jun 14 04:23:17 2006
Subject: [mod_python] __import__ error
In-Reply-To: <1150239458.20846@dscpl.user.openhosting.com>
References: <1150239458.20846@dscpl.user.openhosting.com>
Message-ID: <200606140923.13004.richardlewis@fastmail.co.uk>

On Tuesday 13 June 2006 23:57, Graham Dumpleton wrote:
> Richard Lewis wrote ..
>
> > On Tuesday 13 June 2006 00:39, Graham Dumpleton wrote:
> > > Note that using 'os.sep' in module naming hierarchy only works on some
> > > platforms when using __import__ and thus is not portable. It may work
> > > on Linux, but doesn't work on Mac OS X. Don't know if it works on Win32
> > > or not.
> >
> > ...only if I continue to use os.sep. I've put it in a try block like
> > this:
> >
> > try:
> >   self.handler = __import__(module).__dict__[handler]()
> > except ImportError:
> >   self.handler = __import__(module.replace(".",
> > os.sep)).__dict__[handler]()
> >
> > but it always uses the exception case. I haven't tried it with OS X or
> > Windows
> > yet. Perhaps they'll use the first case properly.
>
> Where importing "a/b" targeting "a/b.py", is there also a "a/__init__.py"?
>
No, there isn't.

> In other words, is the directory "a" properly setup as a Python package
> with an "__init__.py" file? If not, then '.' notation wouldn't work but '/'
> may (at least for that platform).
>
I see. I hand't really understood that that was necessary before.

I think I'll try and leave it as it is, though. Because the Python code being 
imported here is a custom, optional user-defined module which implements a 
xml.sax.handler.ContenHandler class. Its in a directory which also contains 
user-defined XSLT stylesheets and is named by the user in the sitemap.xml 
configuration file as a "transformer" for a "pipeline". So its not really a 
package, just an imported class.

Thanks for your help.

Cheers,
Richard
-- 
-=-=-=-=-=-=-=-=-=-=-=-=-=-
Richard Lewis
Sonic Arts Research Archive
http://www.sara.uea.ac.uk/
-=-=-=-=-=-=-=-=-=-=-=-=-=-
From grahamd at dscpl.com.au  Wed Jun 14 04:29:37 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 14 04:29:58 2006
Subject: [mod_python] __import__ error
In-Reply-To: <200606140922.00244.richardlewis@fastmail.co.uk>
References: <1150239458.20846@dscpl.user.openhosting.com>
	<200606140922.00244.richardlewis@fastmail.co.uk>
Message-ID: <D4A78C68-A4A7-4721-B21F-4EB25CD697B7@dscpl.com.au>


On 14/06/2006, at 6:21 PM, Richard Lewis wrote:

> On Tuesday 13 June 2006 23:57, Graham Dumpleton wrote:
>> Richard Lewis wrote ..
>>
>>> On Tuesday 13 June 2006 00:39, Graham Dumpleton wrote:
>>>> Note that using 'os.sep' in module naming hierarchy only works  
>>>> on some
>>>> platforms when using __import__ and thus is not portable. It may  
>>>> work
>>>> on Linux, but doesn't work on Mac OS X. Don't know if it works  
>>>> on Win32
>>>> or not.
>>>
>>> ...only if I continue to use os.sep. I've put it in a try block like
>>> this:
>>>
>>> try:
>>>   self.handler = __import__(module).__dict__[handler]()
>>> except ImportError:
>>>   self.handler = __import__(module.replace(".",
>>> os.sep)).__dict__[handler]()
>>>
>>> but it always uses the exception case. I haven't tried it with OS  
>>> X or
>>> Windows
>>> yet. Perhaps they'll use the first case properly.
>>
>> Where importing "a/b" targeting "a/b.py", is there also a "a/ 
>> __init__.py"?
>>
> No, there isn't.
>
>> In other words, is the directory "a" properly setup as a Python  
>> package
>> with an "__init__.py" file? If not, then '.' notation wouldn't  
>> work but '/'
>> may (at least for that platform).
>>
> I see. I hand't really understood that that was necessary before.
>
> I think I'll try and leave it as it is, though. Because the Python  
> code being
> imported here is a custom, optional user-defined module which  
> implements a
> xml.sax.handler.ContenHandler class. Its in a directory which also  
> contains
> user-defined XSLT stylesheets and is named by the user in the  
> sitemap.xml
> configuration file as a "transformer" for a "pipeline". So its not  
> really a
> package, just an imported class.

Fair enough, just be aware of the portability issue.

FWIW, the new module importer to be included in future version of  
mod_python
will have added extra flexibility as far as defining where modules  
can be
imported from and modules will be able to be specified by full or  
relative
pathnames, a style of use which should make putting modules in a common
directory but avoiding use of an actual package somewhat easier and more
deterministic.

Graham


From sandipm at talentica.com  Wed Jun 14 04:55:30 2006
From: sandipm at talentica.com (sandip more)
Date: Wed Jun 14 04:55:50 2006
Subject: [mod_python] Re: Mike's psp upload
References: <015801c68edb$b1dc88c0$c7010a0a@SANDIP>
	<448EC44F.3020802@natlab.research.philips.com>
Message-ID: <026e01c68f90$4c432810$c7010a0a@SANDIP>



----- Original Message ----- 
From: "Mike Looijmans" <nlv11281@natlab.research.philips.com>
To: "sandip more" <sandipm@talentica.com>
Cc: <mod_python@modpython.org>
Sent: Tuesday, June 13, 2006 7:27 PM
Subject: Re: [mod_python] Re: Mike's psp upload


> The default behaviour of FieldStorage is to place the uploaded file in 
> some temp location. By providing the callback, you can prevent the file 
> being stored twice (once on temp, once on the final location). This allows 
> uploading files of many gigabytes without consuming diskspace or memory.
>
> Note that by doing:
>    filedata = afile.file.read()
> you read the entire file into system memory. If a user sends you a 1GB 
> file, your server is likely to "die" there. Use one of the
> shutil.copyfile functions to copy the file to where you want, without 
> (potentially) consuming megabytes of memory.

Thanks Mike for explaination, I got the point. but i didn't got the callback 
function's implementation..
can you give me some link to it?

and for memory thing, I am not clear about role of apache in this.
I think Apache should handle basic http request protocol.
it should store data in some file on disc rather than in-memory and
then should give mod_python handler a pointer to that file location.?
because anyway in the case of multiple requests, apache might fall short of 
memory
and might crash? please can you clear my doubts.

sandip




>
>
> Mike Looijmans
> Philips Natlab / Topic Automation
>
>
> sandip more wrote:
>> hello all,
>>  I am also trying to implement file upload functionality with psp. I 
>> didn't get the use of callback function.
>> I am able to access the data of uploaded file with following code.
>>  frm = util.FieldStorage(req)
>> for afile in frm.getlist('UploadFile'):
>>     filedata = afile.file.read()
>>     #write filedata to some file in local directory with name 
>> afile.filename.
>>  can someone explain me..what is the need of this callback function? also 
>> how it works?
>>  Thanks
>> Sandip
>>
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From i.d.mcdowall at gmail.com  Wed Jun 14 05:40:22 2006
From: i.d.mcdowall at gmail.com (ian McDowall)
Date: Wed Jun 14 05:40:28 2006
Subject: [mod_python] Which recent version of mod_python will work on Win2K
Message-ID: <fd78e04b0606140240w4ddaed22p642f1c12417dc08d@mail.gmail.com>

Hi,
I am trying to do install mod_python on win2K and I have some compatibility
problems.

I downloaded the Win32 installer for v3.2.8 of mod_python and installed it
(also using v2.4 of Python and 2.0.55 of Apache, both from installers rather
than source, at least so far...).  I got mod_python.so in the right place
for Apache and added the LoadModule to the config.  When I ran Apache it
complained that it cannot find mod_python.so.  After a bit of research on
similar problems, I guessed that it might be a missing dependency so I ran a
dependency checker.  This led to me installing the .Net runtime but I still
got the same error.  Further use of the dependency checker and Google showed
that mod_pythin.so depends on a component that is only present on Win XP,
not earlier versions of Windows.

Therefore, I guess that the Win32 installer v3.2.8 of mod_python is built on
and for Win XP only.  I don't know if this was a deliberrate choice by the
person who built the installer or accidental.

I searched for mentions of Win2K and mod_python but just found some old
references to Win2K threading issues.  There is a mention of using
mod_python with Win2K in the FAQ but it avoids specifying versions (for good
reason in general but not helpful to me in this particular case)

I tried to rebuild mod-python from source and got an error telling me that
mod_python has to be built using the same version of MS Visual Studio as was
used to build Python.  I don't actually have a copy of Studio on this
machine although I could use another machine.

I have the same version of mod_python working fine on a Linux machine but
the Win2K one is more convenient for development (I prefer Linux but the
Win2K machine is a laptop so the convenience is physical).

Before I start rebuilding Apache, Python and mod_python from source, please
can anyone tell me if there is a reason why mod
_python v3.2.8 was built to rely on Win XP ?  Also, does anyone know the
latest version of mod_python that has Win32 installers built that will work
on Win2K ?

Thanks in advance.
-- 
Ian McDowall
i.d.mcdowall@gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060614/65f57241/attachment-0001.html
From nicolas at lehuen.com  Wed Jun 14 06:17:27 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Wed Jun 14 06:17:31 2006
Subject: [mod_python] Which recent version of mod_python will work on Win2K
In-Reply-To: <fd78e04b0606140240w4ddaed22p642f1c12417dc08d@mail.gmail.com>
References: <fd78e04b0606140240w4ddaed22p642f1c12417dc08d@mail.gmail.com>
Message-ID: <c298f2d70606140317y22e4c808lc7644703060746dc@mail.gmail.com>

Hi Ian,

You may encounter difficulties due to the fact that the MS runtime
DLLs are not packaged in the Win32 installer. Try downloading them
from http://nicolas.lehuen.com/download/pytst/ (the msvcp71.dll and
msvcr71.dll) and put them in your PATH if this is not the case.

Another thing to check is that the PATH variable associated to the
account Apache is running under is correctly configured. You should
find the above mentioned DLLs on the PATH, as well as the Python DLLs.

If you have to change the PATH variable for the user account running
Apache, make sure to fully restart (stop + start) the Apache server
afterwards, as a simple apache -k restart will not restart the parent
process, so the environment variable won't be refreshed. The best way
to make sure everything is correct is to reboot the server, but then
again this may not be possible on a production server.

In any case, all the mod_python Win32 binaries that have been
officially released have been built and tested by me both on Windows
XP SP2 and Windows 2000 Server SP4, so Windows 2000 should pose no
problem except from those minor PATH issues. Plus, I've got two
production servers running mod_python 3.2.8 with Python 2.4.1 and
Apache 2.0.55 on a Windows 2000 Server SP4, so I'm fairly confident it
does work.

Regards,
Nicolas

2006/6/14, ian McDowall <i.d.mcdowall@gmail.com>:
> Hi,
>  I am trying to do install mod_python on win2K and I have some compatibility
> problems.
>
>  I downloaded the Win32 installer for v3.2.8 of mod_python and installed it
> (also using v2.4 of Python and 2.0.55 of Apache, both from installers rather
> than source, at least so far...).  I got mod_python.so in the right place
> for Apache and added the LoadModule to the config.  When I ran Apache it
> complained that it cannot find mod_python.so.  After a bit of research on
> similar problems, I guessed that it might be a missing dependency so I ran a
> dependency checker.  This led to me installing the .Net runtime but I still
> got the same error.  Further use of the dependency checker and Google showed
> that mod_pythin.so depends on a component that is only present on Win XP,
> not earlier versions of Windows.
>
>  Therefore, I guess that the Win32 installer v3.2.8 of mod_python is built
> on and for Win XP only.  I don't know if this was a deliberrate choice by
> the person who built the installer or accidental.
>
>  I searched for mentions of Win2K and mod_python but just found some old
> references to Win2K threading issues.  There is a mention of using
> mod_python with Win2K in the FAQ but it avoids specifying versions (for good
> reason in general but not helpful to me in this particular case)
>
>  I tried to rebuild mod-python from source and got an error telling me that
> mod_python has to be built using the same version of MS Visual Studio as was
> used to build Python.  I don't actually have a copy of Studio on this
> machine although I could use another machine.
>
>  I have the same version of mod_python working fine on a Linux machine but
> the Win2K one is more convenient for development (I prefer Linux but the
> Win2K machine is a laptop so the convenience is physical).
>
>  Before I start rebuilding Apache, Python and mod_python from source, please
> can anyone tell me if there is a reason why mod
>  _python v3.2.8 was built to rely on Win XP ?  Also, does anyone know the
> latest version of mod_python that has Win32 installers built that will work
> on Win2K ?
>
>  Thanks in advance.
> --
> Ian McDowall
> i.d.mcdowall@gmail.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
From i.d.mcdowall at gmail.com  Wed Jun 14 06:33:04 2006
From: i.d.mcdowall at gmail.com (ian McDowall)
Date: Wed Jun 14 06:33:07 2006
Subject: [mod_python] Which recent version of mod_python will work on Win2K
In-Reply-To: <c298f2d70606140317y22e4c808lc7644703060746dc@mail.gmail.com>
References: <fd78e04b0606140240w4ddaed22p642f1c12417dc08d@mail.gmail.com>
	<c298f2d70606140317y22e4c808lc7644703060746dc@mail.gmail.com>
Message-ID: <fd78e04b0606140333w7842023au925b42f6db2a9f03@mail.gmail.com>

Thanks Nicholas, that did it.

I already had those DLLs and they were in the path but I added the
Python24\DLLs directory to the path and Apache now starts up successfully.

Cheers
Ian

On 14/06/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
>
> Hi Ian,
>
> You may encounter difficulties due to the fact that the MS runtime
> DLLs are not packaged in the Win32 installer. Try downloading them
> from http://nicolas.lehuen.com/download/pytst/ (the msvcp71.dll and
> msvcr71.dll) and put them in your PATH if this is not the case.
>
> Another thing to check is that the PATH variable associated to the
> account Apache is running under is correctly configured. You should
> find the above mentioned DLLs on the PATH, as well as the Python DLLs.
>
> If you have to change the PATH variable for the user account running
> Apache, make sure to fully restart (stop + start) the Apache server
> afterwards, as a simple apache -k restart will not restart the parent
> process, so the environment variable won't be refreshed. The best way
> to make sure everything is correct is to reboot the server, but then
> again this may not be possible on a production server.
>
> In any case, all the mod_python Win32 binaries that have been
> officially released have been built and tested by me both on Windows
> XP SP2 and Windows 2000 Server SP4, so Windows 2000 should pose no
> problem except from those minor PATH issues. Plus, I've got two
> production servers running mod_python 3.2.8 with Python 2.4.1 and
> Apache 2.0.55 on a Windows 2000 Server SP4, so I'm fairly confident it
> does work.
>
> Regards,
> Nicolas
>
> 2006/6/14, ian McDowall <i.d.mcdowall@gmail.com>:
> > Hi,
> >  I am trying to do install mod_python on win2K and I have some
> compatibility
> > problems.
> >
> >  I downloaded the Win32 installer for v3.2.8 of mod_python and installed
> it
> > (also using v2.4 of Python and 2.0.55 of Apache, both from installers
> rather
> > than source, at least so far...).  I got mod_python.so in the right
> place
> > for Apache and added the LoadModule to the config.  When I ran Apache it
> > complained that it cannot find mod_python.so.  After a bit of research
> on
> > similar problems, I guessed that it might be a missing dependency so I
> ran a
> > dependency checker.  This led to me installing the .Net runtime but I
> still
> > got the same error.  Further use of the dependency checker and Google
> showed
> > that mod_pythin.so depends on a component that is only present on Win
> XP,
> > not earlier versions of Windows.
> >
> >  Therefore, I guess that the Win32 installer v3.2.8 of mod_python is
> built
> > on and for Win XP only.  I don't know if this was a deliberrate choice
> by
> > the person who built the installer or accidental.
> >
> >  I searched for mentions of Win2K and mod_python but just found some old
> > references to Win2K threading issues.  There is a mention of using
> > mod_python with Win2K in the FAQ but it avoids specifying versions (for
> good
> > reason in general but not helpful to me in this particular case)
> >
> >  I tried to rebuild mod-python from source and got an error telling me
> that
> > mod_python has to be built using the same version of MS Visual Studio as
> was
> > used to build Python.  I don't actually have a copy of Studio on this
> > machine although I could use another machine.
> >
> >  I have the same version of mod_python working fine on a Linux machine
> but
> > the Win2K one is more convenient for development (I prefer Linux but the
> > Win2K machine is a laptop so the convenience is physical).
> >
> >  Before I start rebuilding Apache, Python and mod_python from source,
> please
> > can anyone tell me if there is a reason why mod
> >  _python v3.2.8 was built to rely on Win XP ?  Also, does anyone know
> the
> > latest version of mod_python that has Win32 installers built that will
> work
> > on Win2K ?
> >
> >  Thanks in advance.
> > --
> > Ian McDowall
> > i.d.mcdowall@gmail.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
>



-- 
Ian McDowall
i.d.mcdowall@gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060614/332e5e8c/attachment.html
From jpg at jgassociates.ca  Wed Jun 14 09:01:58 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jun 14 09:01:58 2006
Subject: [mod_python] Re: Mike's psp upload
In-Reply-To: <026e01c68f90$4c432810$c7010a0a@SANDIP>
References: <015801c68edb$b1dc88c0$c7010a0a@SANDIP>	<448EC44F.3020802@natlab.research.philips.com>
	<026e01c68f90$4c432810$c7010a0a@SANDIP>
Message-ID: <449008C6.1060602@jgassociates.ca>

sandip more wrote:
> 
> 
> ----- Original Message ----- From: "Mike Looijmans" 
> <nlv11281@natlab.research.philips.com>
> To: "sandip more" <sandipm@talentica.com>
> Cc: <mod_python@modpython.org>
> Sent: Tuesday, June 13, 2006 7:27 PM
> Subject: Re: [mod_python] Re: Mike's psp upload
> 
> 
>> The default behaviour of FieldStorage is to place the uploaded file in 
>> some temp location. By providing the callback, you can prevent the 
>> file being stored twice (once on temp, once on the final location). 
>> This allows uploading files of many gigabytes without consuming 
>> diskspace or memory.
>>
>> Note that by doing:
>>    filedata = afile.file.read()
>> you read the entire file into system memory. If a user sends you a 1GB 
>> file, your server is likely to "die" there. Use one of the
>> shutil.copyfile functions to copy the file to where you want, without 
>> (potentially) consuming megabytes of memory.
> 
> Thanks Mike for explaination, I got the point. but i didn't got the 
> callback function's implementation..
> can you give me some link to it?

The following examples will be included in version 3.3.


Simple file control using class constructor

     This example uses the FieldStorage class constructor to create the 
file object, allowing simple control. It is not advisable to add class 
variables to this if serving multiple sites from apache. In that case 
use the factory method instead.

     class Storage(file):

         def __init__(self, advisory_filename):
             self.advisory_filename = advisory_filename
             self.delete_on_close = True
             self.already_deleted = False
             self.real_filename = '/someTempDir/thingy-unique-thingy'
             super(Storage, self).__init__(self.real_filename, 'w+b')

         def close(self):
             if self.already_deleted:
                 return
             super(Storage, self).close()
             if self.delete_on_close:
                 self.already_deleted = True
                 os.remove(self.real_filename)

     request_data = util.FieldStorage(request, keep_blank_values=True, 
file_callback=Storage)

Advanced file control using object factory

     Using a object factory can provide greater control over the 
constructor parameters.

     import os

     class Storage(file):

         def __init__(self, directory, advisory_filename):
             self.advisory_filename = advisory_filename
             self.delete_on_close = True
             self.already_deleted = False
             self.real_filename = directory + '/thingy-unique-thingy'
             super(Storage, self).__init__(self.real_filename, 'w+b')

         def close(self):
             if self.already_deleted:
                 return
             super(Storage, self).close()
             if self.delete_on_close:
                 self.already_deleted = True
                 os.remove(self.real_filename)

     class StorageFactory:

         def __init__(self, directory):
             self.dir = directory

         def create(self, advisory_filename):
             return Storage(self.dir, advisory_filename)

     file_factory = StorageFactory(someDirectory)
     [...sometime later...]
     request_data = util.FieldStorage(request, keep_blank_values=True,
                                     file_callback=file_factory.create)



> and for memory thing, I am not clear about role of apache in this.
> I think Apache should handle basic http request protocol.
> it should store data in some file on disc rather than in-memory and
> then should give mod_python handler a pointer to that file location.?

Except that is not the way it works. Apache accepts the connection and 
dispatches the request to the appropriate handlers for each phase of the 
request. It's up to the handlers to decide what to do in each phase. 
There may be default modules that will handle a particular phase, but 
you can also register other handlers for a given phase. That is what the 
Python*Handler directives do.

Apache gives your handler a pointer to the incoming file stream and it 
then becomes the responsibility of the handler to deal with it. If no 
handlers consume the stream it gets discarded (I assume). This is the 
nature of handlers.

> because anyway in the case of multiple requests, apache might fall short 
> of memory
> and might crash? 

Pretty much. This is why the handler should not hold a copy of a large 
file in-memory.

Jim

From ziapannocchia at gmail.com  Wed Jun 14 16:43:08 2006
From: ziapannocchia at gmail.com (ziapannocchia@gmail.com)
Date: Wed Jun 14 16:43:16 2006
Subject: [mod_python] Re: apache chroot
In-Reply-To: <1150265392.11047@dscpl.user.openhosting.com>
References: <1150265392.11047@dscpl.user.openhosting.com>
Message-ID: <ca4f20450606141343s16bb5e43yf0a28ac01d668a1e@mail.gmail.com>

2006/6/14, Graham Dumpleton <grahamd@dscpl.com.au>:
> An installation of Python in the same perceived location as it exists
> in real file system, including the mod_python components installed
> in the Python site-packages directory.  It looks a bit like the latter
> is missing.
>

Thank you.
Solved simply with:
[code]
# ROOT="/chroot/apache" emerge --nodeps python mod_python
[/code]
From herschel at panix.com  Wed Jun 14 16:46:53 2006
From: herschel at panix.com (Clemens Herschel)
Date: Wed Jun 14 16:47:04 2006
Subject: [mod_python] Which mod_python & apache versions
Message-ID: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>

I  have been unable to have apache load mod_python.so. I have tried many
version combinations.

I am running Red Hat 9.0

I am thinking of swithing to Debian-3.1 as package dependencies seem to be
taken care of.

What version of mod_python works with what version of apache.

I have enjoyed reading the mod_python mail and would like to get started
with modpython.

Thanks for any suggestions

Clemens Herschel

From grahamd at dscpl.com.au  Wed Jun 14 19:12:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 14 19:12:57 2006
Subject: [mod_python] Re: Mike's psp upload
In-Reply-To: <449008C6.1060602@jgassociates.ca>
References: <015801c68edb$b1dc88c0$c7010a0a@SANDIP>	<448EC44F.3020802@natlab.research.philips.com>
	<026e01c68f90$4c432810$c7010a0a@SANDIP>
	<449008C6.1060602@jgassociates.ca>
Message-ID: <B13EFAF7-F414-4360-813C-7386DB803B78@dscpl.com.au>


On 14/06/2006, at 11:01 PM, Jim Gallacher wrote:

> Apache gives your handler a pointer to the incoming file stream and  
> it then becomes the responsibility of the handler to deal with it.  
> If no handlers consume the stream it gets discarded (I assume).

Yes discarded, although that can entail still reading it from the  
client socket
because of fact that HTTP 1.1 allows pipelining of requests and thus  
there
may be a request following the data which has to be handled and Apache
has to be able to get to that. Thus for large content, Apache may  
still have
to read it even if not used and therefore resources (time) will be  
consumed in
doing so.

Graham

From grahamd at dscpl.com.au  Wed Jun 14 19:18:31 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 14 19:18:38 2006
Subject: [mod_python] Which mod_python & apache versions
In-Reply-To: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>
References: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>
Message-ID: <3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>


On 15/06/2006, at 6:46 AM, Clemens Herschel wrote:

> I  have been unable to have apache load mod_python.so. I have tried  
> many
> version combinations.
>
> I am running Red Hat 9.0
>
> I am thinking of swithing to Debian-3.1 as package dependencies  
> seem to be
> taken care of.
>
> What version of mod_python works with what version of apache.
>
> I have enjoyed reading the mod_python mail and would like to get  
> started
> with modpython.
>
> Thanks for any suggestions
>
> Clemens Herschel

Might be easier if you tell us which version of Apache you want to  
use and
then we say which version of mod_python.

In general though:

   Apache 1.3 --> mod_python 2.7.11
   Apache 2.0 --> mod_python 3.2.8

You might be using at least Apache 2.0.47 (ish) though for mod_python  
3.2.8.

You can't currently use Apache 2.2 unless you patch your code or use dev
version of mod_python 3.3 from subversion.

Also, you should post the specific problem/errors you are having.  
More often
than not it is configuration problems, especially if you have  
multiple versions
of Python installed.

Graham
From fritcher at corp.earthlink.net  Wed Jun 14 19:40:45 2006
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Wed Jun 14 19:41:01 2006
Subject: [mod_python] Which mod_python & apache versions
In-Reply-To: <3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>
References: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>
	<3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>
Message-ID: <44909E7D.2090803@corp.earthlink.net>

Graham Dumpleton wrote:
> You can't currently use Apache 2.2 unless you patch your code or use dev
> version of mod_python 3.3 from subversion.

I'm currently using stock Apache 2.2.2 and stock mod_python 3.2.8 on Mac OS X 10.4.6 and the basic apache module functionality is working quite nicely. I haven't gone so far as to use the psp or publisher modules, but so far everything from the apache module is running great.

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher@corp.earthlink.net
(404) 748-7262, x22262

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060614/f487426a/signature.bin
From jpg at jgassociates.ca  Wed Jun 14 22:12:30 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jun 14 22:10:20 2006
Subject: [mod_python] Which mod_python & apache versions
In-Reply-To: <44909E7D.2090803@corp.earthlink.net>
References: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>	<3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>
	<44909E7D.2090803@corp.earthlink.net>
Message-ID: <4490C20E.7040605@jgassociates.ca>

Jason Fritcher wrote:
> Graham Dumpleton wrote:
>> You can't currently use Apache 2.2 unless you patch your code or use dev
>> version of mod_python 3.3 from subversion.
> 
> I'm currently using stock Apache 2.2.2 and stock mod_python 3.2.8 on Mac OS X 10.4.6 and the basic apache module functionality is working quite nicely. I haven't gone so far as to use the psp or publisher modules, but so far everything from the apache module is running great.
> 

You must have patched 3.2.8, possibly with the patch attached to
http://issues.apache.org/jira/browse/MODPYTHON-78

Jim
From fritcher at corp.earthlink.net  Wed Jun 14 22:53:43 2006
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Wed Jun 14 22:54:13 2006
Subject: [mod_python] Which mod_python & apache versions
In-Reply-To: <4490C20E.7040605@jgassociates.ca>
References: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>	<3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>	<44909E7D.2090803@corp.earthlink.net>
	<4490C20E.7040605@jgassociates.ca>
Message-ID: <4490CBB7.1090900@corp.earthlink.net>

Jim Gallacher wrote:
> Jason Fritcher wrote:
>> Graham Dumpleton wrote:
>>> You can't currently use Apache 2.2 unless you patch your code or use dev
>>> version of mod_python 3.3 from subversion.
>>
>> I'm currently using stock Apache 2.2.2 and stock mod_python 3.2.8 on
>> Mac OS X 10.4.6 and the basic apache module functionality is working
>> quite nicely. I haven't gone so far as to use the psp or publisher
>> modules, but so far everything from the apache module is running great.
> 
> You must have patched 3.2.8, possibly with the patch attached to
> http://issues.apache.org/jira/browse/MODPYTHON-78

Negative. Just to verify, I re-downloaded the apache and mod_python tarballs and recompiled everything. It built and runs my modules just fine.

After looking at that bug entry, its possible I just haven't triggered the bug yet, and the weak lazy linking that Mac OS X does has enabled the rest of the code to function in the absence of that missing symbol.

I had thought that the previous problem had been fixed in 3.2.8, after seeing the code, obviously it hasn't. Guess I'll need to patch the code before running this on my Linux box. :)

-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher@corp.earthlink.net
(404) 748-7262, x22262

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060614/6a6581fd/signature.bin
From dm at julius.ling.ohio-state.edu  Wed Jun 14 22:55:00 2006
From: dm at julius.ling.ohio-state.edu (Detmar Meurers)
Date: Wed Jun 14 22:55:04 2006
Subject: [mod_python] Which mod_python & apache versions
In-Reply-To: <4490C20E.7040605@jgassociates.ca>
References: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>
	<3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>
	<44909E7D.2090803@corp.earthlink.net>
	<4490C20E.7040605@jgassociates.ca>
Message-ID: <20060615025500.GA2383@ling.osu.edu>

Hi,

    Jason Fritcher wrote:
    >Graham Dumpleton wrote:
    >>You can't currently use Apache 2.2 unless you patch your code or use dev
    >>version of mod_python 3.3 from subversion.
    >
    >I'm currently using stock Apache 2.2.2 and stock mod_python 3.2.8 on Mac 
    >OS X 10.4.6 and the basic apache module functionality is working quite 
    >nicely. I haven't gone so far as to use the psp or publisher modules, but 
    >so far everything from the apache module is running great.
    >
    
    You must have patched 3.2.8, possibly with the patch attached to
    http://issues.apache.org/jira/browse/MODPYTHON-78
    

Hm, reality seems to be better than usual then ;-) On (Intel-based)
Mac OS X, I've done a straight Darwin port install with mod_python
3.2.8_1 and apache2 2.2.0_0 and things seem to be working just fine
with rather extensive use of publisher and psp in the past weeks.
(Upgrading to apache 2.2.1 didn't work though.) 

[Wed Jun 14 22:50:53 2006] [info] Server: Apache/2.2.0, Interface: mod_ssl/2.2.0, Library: OpenSSL/0.9.8b
[Wed Jun 14 22:50:53 2006] [notice] mod_python: Creating 8 session mutexes based on 256 max processes and 0 max threads.
[Wed Jun 14 22:50:53 2006] [notice] Digest: generating secret for digest authentication ...
[Wed Jun 14 22:50:53 2006] [notice] Digest: done
[Wed Jun 14 22:50:53 2006] [notice] Apache/2.2.0 (Unix) mod_ssl/2.2.0 OpenSSL/0.9.8b DAV/2 mod_python/3.2.8 Python/2.4.2 configured -- resuming normal operations
[Wed Jun 14 22:50:53 2006] [info] Server built: Apr 17 2006 14:30:01 [Wed Jun 14 22:50:53 2006] [debug] prefork.c(991): AcceptMutex: sysvsem (default: sysvsem)
[Wed Jun 14 22:50:53 2006] [debug] proxy_util.c(1681): proxy: initialized single connection worker 0 in child 2407 for (*)

Best,
Detmar
From grahamd at dscpl.com.au  Wed Jun 14 23:47:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 14 23:47:50 2006
Subject: [mod_python] Which mod_python & apache versions
In-Reply-To: <4490CBB7.1090900@corp.earthlink.net>
References: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>	<3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>	<44909E7D.2090803@corp.earthlink.net>
	<4490C20E.7040605@jgassociates.ca>
	<4490CBB7.1090900@corp.earthlink.net>
Message-ID: <447A5308-B084-4986-B6F2-D48ABD75E1E6@dscpl.com.au>


On 15/06/2006, at 12:53 PM, Jason Fritcher wrote:

> Jim Gallacher wrote:
>> Jason Fritcher wrote:
>>> Graham Dumpleton wrote:
>>>> You can't currently use Apache 2.2 unless you patch your code or  
>>>> use dev
>>>> version of mod_python 3.3 from subversion.
>>>
>>> I'm currently using stock Apache 2.2.2 and stock mod_python 3.2.8 on
>>> Mac OS X 10.4.6 and the basic apache module functionality is working
>>> quite nicely. I haven't gone so far as to use the psp or publisher
>>> modules, but so far everything from the apache module is running  
>>> great.
>>
>> You must have patched 3.2.8, possibly with the patch attached to
>> http://issues.apache.org/jira/browse/MODPYTHON-78
>
> Negative. Just to verify, I re-downloaded the apache and mod_python  
> tarballs and recompiled everything. It built and runs my modules  
> just fine.
>
> After looking at that bug entry, its possible I just haven't  
> triggered the bug yet, and the weak lazy linking that Mac OS X does  
> has enabled the rest of the code to function in the absence of that  
> missing symbol.
>
> I had thought that the previous problem had been fixed in 3.2.8,  
> after seeing the code, obviously it hasn't. Guess I'll need to  
> patch the code before running this on my Linux box. :)

It all actually depends on what version of Apache Runtime libraries  
are being used.
It is possible that the older version of APR which had these things  
is being used
when code is compiled, but that probably have required you to say to  
use the older
version of APR, plus I would have thought newer Apache would have  
required the
newer version to work. Strange???
From fritcher at corp.earthlink.net  Wed Jun 14 23:54:48 2006
From: fritcher at corp.earthlink.net (Jason Fritcher)
Date: Wed Jun 14 23:55:13 2006
Subject: [mod_python] Which mod_python & apache versions
In-Reply-To: <447A5308-B084-4986-B6F2-D48ABD75E1E6@dscpl.com.au>
References: <1590.68.167.134.140.1150318013.squirrel@mail.panix.com>	<3AD8B479-87A6-4F5A-AF30-924B8323BFCF@dscpl.com.au>	<44909E7D.2090803@corp.earthlink.net>
	<4490C20E.7040605@jgassociates.ca>
	<4490CBB7.1090900@corp.earthlink.net>
	<447A5308-B084-4986-B6F2-D48ABD75E1E6@dscpl.com.au>
Message-ID: <4490DA08.4010900@corp.earthlink.net>

Graham Dumpleton wrote:
> It all actually depends on what version of Apache Runtime libraries are
> being used.
> It is possible that the older version of APR which had these things is
> being used
> when code is compiled, but that probably have required you to say to use
> the older
> version of APR, plus I would have thought newer Apache would have
> required the
> newer version to work. Strange???

I just finished some digging and testing, and the lazy linking was correct. Apache is linking against the 1.0 version of APR, but OS X is not binding symbols until the first time each function is called. I've never attempted to lookup the (local|remote)_addr attributes on the connection object, so I never triggered a call to makesockaddr() and the resultant apr_sockaddr_get_port() call. I hacked the hello world example to retrieve that attribute, and the apache child process bombed and was killed. Error log excerpt and test script below.



from mod_python import apache

def handler(req):


    apache.log_error('req.connection.local_addr = %s' % req.connection.local_addr);
    req.content_type = "text/plain"
    req.write("Hello World!")

    return apache.OK



[Wed Jun 14 23:41:19 2006] [notice] mod_python: (Re)importing module 'hello'
dyld: lazy symbol binding failed: Symbol not found: _apr_sockaddr_port_get
  Referenced from: /Users/jkf/apache2/modules/mod_python.so
  Expected in: flat namespace

dyld: Symbol not found: _apr_sockaddr_port_get
  Referenced from: /Users/jkf/apache2/modules/mod_python.so
  Expected in: flat namespace


-- 
Jason Fritcher
Software Engineer
Core Infrastructure Services & Strategy
Earthlink, Inc
fritcher@corp.earthlink.net
(404) 748-7262, x22262

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 249 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060614/867ea5ab/signature-0001.bin
From David.Bear at asu.edu  Thu Jun 15 00:14:56 2006
From: David.Bear at asu.edu (David Bear)
Date: Thu Jun 15 00:15:01 2006
Subject: [mod_python] popen or os.system call
Message-ID: <20060615041456.GA3210@asu.edu>

I have a need to call a peice of perl code from modpython. Is one
method preferred over another, i.e. os.system or os.popen ? Is one
considered 'more safe' or 'faster'?

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From grahamd at dscpl.com.au  Thu Jun 15 01:57:24 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 15 01:58:23 2006
Subject: [mod_python] popen or os.system call
In-Reply-To: <20060615041456.GA3210@asu.edu>
References: <20060615041456.GA3210@asu.edu>
Message-ID: <0C96A48B-B7E1-4DCF-B1F5-B33CF7AFB0F4@dscpl.com.au>

If the perl code was factored as a handler, you could use  
req.internal_redirect()
with some psudeo URL to trigger it. Anyway, just thought. :-)


On 15/06/2006, at 2:14 PM, David Bear wrote:

> I have a need to call a peice of perl code from modpython. Is one
> method preferred over another, i.e. os.system or os.popen ? Is one
> considered 'more safe' or 'faster'?
>
> -- 
> David Bear
> phone: 	480-965-8257
> fax: 	480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From John.C.Cartwright at noaa.gov  Thu Jun 15 12:24:13 2006
From: John.C.Cartwright at noaa.gov (John Cartwright)
Date: Thu Jun 15 12:24:24 2006
Subject: [mod_python] setup problem - apache not recognizing python script
Message-ID: <449189AD.2000909@noaa.gov>

Hello All,

for some reason apache is not recognizing my python handler, returning
only the text of the python program.  Can someone please tell me what's
wrong in my configuration below:

alias /python "/mnt/data1/htdocs/python"
<Directory /data1/htdocs/python>
  SetHandler python-program
  PythonPath "sys.path+['/mnt/data1/htdocs/python']"
  PythonHandler mptest
  PythonDebug On
</Directory>



Here's the code for the handler (/data1/htdocs/python/mptest.py):

import mod_python
from mod_python import apache

def handler(req):
    req.send_http_header()
    req.write("Hello World!")
    return apache.OK

--------------------------------------------------------------------------------------------------------------------------------
This is apache 2.0.46, mod_python 3.0.3, and RHEL WS 4.

Thanks!

-- john

From listspam at flowtheory.net  Thu Jun 15 12:42:27 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Thu Jun 15 12:42:40 2006
Subject: [mod_python] setup problem - apache not recognizing python script
In-Reply-To: <449189AD.2000909@noaa.gov>
References: <449189AD.2000909@noaa.gov>
Message-ID: <1150389747.30930.3.camel@localhost.localdomain>

Your Alias and your Python path both have /mnt at the begining. Your
Directory tag does not. Is that it?

-jag

On Thu, 2006-06-15 at 10:24 -0600, John Cartwright wrote:
> Hello All,
> 
> for some reason apache is not recognizing my python handler, returning
> only the text of the python program.  Can someone please tell me what's
> wrong in my configuration below:
> 
> alias /python "/mnt/data1/htdocs/python"
> <Directory /data1/htdocs/python>
>   SetHandler python-program
>   PythonPath "sys.path+['/mnt/data1/htdocs/python']"
>   PythonHandler mptest
>   PythonDebug On
> </Directory>
> 
> 
> 
> Here's the code for the handler (/data1/htdocs/python/mptest.py):
> 
> import mod_python
> from mod_python import apache
> 
> def handler(req):
>     req.send_http_header()
>     req.write("Hello World!")
>     return apache.OK
> 
> --------------------------------------------------------------------------------------------------------------------------------
> This is apache 2.0.46, mod_python 3.0.3, and RHEL WS 4.
> 
> Thanks!
> 
> -- john
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From John.C.Cartwright at noaa.gov  Thu Jun 15 13:11:30 2006
From: John.C.Cartwright at noaa.gov (John Cartwright)
Date: Thu Jun 15 13:11:45 2006
Subject: [mod_python] setup problem - apache not recognizing python	script
In-Reply-To: <1150389747.30930.3.camel@localhost.localdomain>
References: <449189AD.2000909@noaa.gov>
	<1150389747.30930.3.camel@localhost.localdomain>
Message-ID: <449194C2.7000005@noaa.gov>

Hi Joshua,

thanks for your prompt reply!  You're right - that was part of the
problem.  However, now it's complaining that it cannot import
"mod_python.apache".  Shouldn't the PYTHONPATH variable be set by the
PythonPath directive and inherited by the handler script?  I've
added

PythonPath "sys.path+['/usr/lib']"
PythonPath "sys.path+['/usr/lib/python2.2/site-packages']"

and confirmed that  /usr/lib/python2.2/site-packages/mod_python contains
the python module. 

thanks again for your help.

-- john


Joshua Ginsberg wrote:
> Your Alias and your Python path both have /mnt at the begining. Your
> Directory tag does not. Is that it?
>
> -jag
>
> On Thu, 2006-06-15 at 10:24 -0600, John Cartwright wrote:
>   
>> Hello All,
>>
>> for some reason apache is not recognizing my python handler, returning
>> only the text of the python program.  Can someone please tell me what's
>> wrong in my configuration below:
>>
>> alias /python "/mnt/data1/htdocs/python"
>> <Directory /data1/htdocs/python>
>>   SetHandler python-program
>>   PythonPath "sys.path+['/mnt/data1/htdocs/python']"
>>   PythonHandler mptest
>>   PythonDebug On
>> </Directory>
>>
>>
>>
>> Here's the code for the handler (/data1/htdocs/python/mptest.py):
>>
>> import mod_python
>> from mod_python import apache
>>
>> def handler(req):
>>     req.send_http_header()
>>     req.write("Hello World!")
>>     return apache.OK
>>
>> --------------------------------------------------------------------------------------------------------------------------------
>> This is apache 2.0.46, mod_python 3.0.3, and RHEL WS 4.
>>
>> Thanks!
>>
>> -- john
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>     
>
>   
From grahamd at dscpl.com.au  Thu Jun 15 20:00:56 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 15 20:01:20 2006
Subject: [mod_python] setup problem - apache not recognizing python	script
In-Reply-To: <449194C2.7000005@noaa.gov>
References: <449189AD.2000909@noaa.gov>
	<1150389747.30930.3.camel@localhost.localdomain>
	<449194C2.7000005@noaa.gov>
Message-ID: <D3C4E2C4-6FE5-4BA1-B9B2-94A4E11CC3B6@dscpl.com.au>

I can't give a more detailed answer right now, but at least have a  
read of:

   http://www.dscpl.com.au/articles/modpython-001.html

This gives an alternate set of instructions to follow through for a  
first handler
which covers some of the gotchas and points out where to look if  
there are
problems.

This may not help as it looks like the site-packages components of  
mod_python
are not installed for the version of Python being used by Apache when  
running
mod_python. This can occur where it simply isn't installed or where  
you have
multiple versions of Python and Apache is using the wrong one.

Anyway, try some of the suggestions in that article and see what you  
can come
up with.

Graham

On 16/06/2006, at 3:11 AM, John Cartwright wrote:

> Hi Joshua,
>
> thanks for your prompt reply!  You're right - that was part of the
> problem.  However, now it's complaining that it cannot import
> "mod_python.apache".  Shouldn't the PYTHONPATH variable be set by the
> PythonPath directive and inherited by the handler script?  I've
> added
>
> PythonPath "sys.path+['/usr/lib']"
> PythonPath "sys.path+['/usr/lib/python2.2/site-packages']"
>
> and confirmed that  /usr/lib/python2.2/site-packages/mod_python  
> contains
> the python module.
>
> thanks again for your help.
>
> -- john
>
>
> Joshua Ginsberg wrote:
>> Your Alias and your Python path both have /mnt at the begining. Your
>> Directory tag does not. Is that it?
>>
>> -jag
>>
>> On Thu, 2006-06-15 at 10:24 -0600, John Cartwright wrote:
>>
>>> Hello All,
>>>
>>> for some reason apache is not recognizing my python handler,  
>>> returning
>>> only the text of the python program.  Can someone please tell me  
>>> what's
>>> wrong in my configuration below:
>>>
>>> alias /python "/mnt/data1/htdocs/python"
>>> <Directory /data1/htdocs/python>
>>>   SetHandler python-program
>>>   PythonPath "sys.path+['/mnt/data1/htdocs/python']"
>>>   PythonHandler mptest
>>>   PythonDebug On
>>> </Directory>
>>>
>>>
>>>
>>> Here's the code for the handler (/data1/htdocs/python/mptest.py):
>>>
>>> import mod_python
>>> from mod_python import apache
>>>
>>> def handler(req):
>>>     req.send_http_header()
>>>     req.write("Hello World!")
>>>     return apache.OK
>>>
>>> -------------------------------------------------------------------- 
>>> ------------------------------------------------------------
>>> This is apache 2.0.46, mod_python 3.0.3, and RHEL WS 4.
>>>
>>> Thanks!
>>>
>>> -- john
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From David.Bear at asu.edu  Fri Jun 16 13:04:55 2006
From: David.Bear at asu.edu (David Bear)
Date: Fri Jun 16 13:05:20 2006
Subject: [mod_python] under names
Message-ID: <20060616170455.GA13447@asu.edu>

I know that using an underscore in an identifier 'hides' that name
from being accessible to a url. I am wondering if that applies to
identifiers that are imported as well.

For example if, 

from mydefines import *

makes an identifier mydefines.myvariable available in the namespace as
'myvariable', is it still possible to 'call' myvariable via url as in 

http://myserver/pythonapp.py/myvariable

I am starting to wonder about the best way to keep certain functions
and variables obaque to prying web eyes, and if putting them in
modules offers any protection.

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From rsynnott at gmail.com  Fri Jun 16 15:03:29 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Fri Jun 16 15:03:34 2006
Subject: [mod_python] under names
In-Reply-To: <20060616170455.GA13447@asu.edu>
References: <20060616170455.GA13447@asu.edu>
Message-ID: <24f203480606161203s4c775f89hf809b434d7df2f5d@mail.gmail.com>

On 6/16/06, David Bear <David.Bear@asu.edu> wrote:
> I know that using an underscore in an identifier 'hides' that name
> from being accessible to a url. I am wondering if that applies to
> identifiers that are imported as well.
>
> For example if,
>
> from mydefines import *
>
> makes an identifier mydefines.myvariable available in the namespace as
> 'myvariable', is it still possible to 'call' myvariable via url as in
>
> http://myserver/pythonapp.py/myvariable
>
> I am starting to wonder about the best way to keep certain functions
> and variables obaque to prying web eyes, and if putting them in
> modules offers any protection.
>
> --
> David Bear
> phone:  480-965-8257
> fax:    480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

There was an issue in early versions where functions from modules were
exposed, but I THINK they're now hidden. May be wrong though.
Rob
From karl.kobata at syncira.com  Fri Jun 16 17:12:52 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Jun 16 17:13:13 2006
Subject: [mod_python] apxs for apache
Message-ID: <20060616211301.STPR144.rrcs-fep-10.hrndva.rr.com@syncirakklap>

 

 

  _____  

From: Karl Kobata [mailto:karl.kobata@syncira.com] 
Sent: Thursday, June 15, 2006 4:22 PM
To: 'mod_python@modpython.org'
Subject: apxs for apache

 

We have redhat's version of apache running on our server - rhel3 ES.  Redhat
has not provided updates to python newer than 2.2.3, and mod_python newer
than 3.0.4.  I have downloaded 3.2.8 and found that I am missing 2 items -
flex and apxs.

The newest flex from redhat is 2.5.4, but I found the source for debian, and
compiled 2.5.33.  So now I am down to finding apxs.

 

Does anyone know where I can get the apxs rpm or source?  If I can get it
from redhat - what rpm package do I download?

If it is not from redhat, where will I be able to get the source?

 

Please help. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060616/360ceb8a/attachment.html
From karl.kobata at syncira.com  Fri Jun 16 17:13:15 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Jun 16 17:13:27 2006
Subject: [mod_python] Windows mod_python installation verification problem
Message-ID: <20060616211323.STSG144.rrcs-fep-10.hrndva.rr.com@syncirakklap>

 

 

  _____  

From: Karl Kobata [mailto:karl.kobata@syncira.com] 
Sent: Monday, June 12, 2006 10:31 AM
To: 'mod_python@modpython.org'
Subject: Windows mod_python installation verification problem

 

I have used the windows installer to install mod_python 3.2.8 to Apache
2.0.55.  The installer log file shows it storing files into python 2.4
library(lib) directory.  It also found the module directory of the web
server and stored mod_python.so file.  The installer completed without
giving me any error/warning messages.  It gave me a final pop-up to add the
directory directives, and reference to testing.  I have added the directory
information

 

1)       confusion on "AddHandler" directive for mod_python 3.2.8 - should
it be python-program or mod_python?

2)       in my httpd.conf I have added the following directive, then
restarted the web server.  Is the syntax for path directory correct for
windows?

 <Directory "E:\LINUX\Develop\web\ModPython">

      AddHandler python-program .py

      PythonHandler mptest

      PythonDebug On 

 </Directory>

3)       in windows the .htaccess is not accepted, so added ht.acl file to
list under "AccessFileName" directive in the httpd.conf file.  In this file
I have added the following.  Is this all I need in the "AccessFile" found in
the same directory as the mptest.py program?

AddHandler mod_python .py

PythonHandler mptest

PythonDebug On 

AllowOverride FileInfo

4)       will there be a confusion on having both directives at the same
time?  the "Directory" directive in the httpd.conf file vs the ht.acl
directives?

5)       Does mod_python require any other files, installation, or
resources?

 

Note: error logs have no error information.

 

Please help.  I have struggled with this for several days.

 

karl

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060616/f9961c0d/attachment.html
From karl.kobata at syncira.com  Fri Jun 16 17:13:26 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Jun 16 17:13:41 2006
Subject: [mod_python] search through the archives for relavent subjects
Message-ID: <20060616211334.STTO144.rrcs-fep-10.hrndva.rr.com@syncirakklap>

 

 

  _____  

From: Karl Kobata [mailto:karl.kobata@syncira.com] 
Sent: Sunday, June 11, 2006 10:16 PM
To: 'mod_python@modpython.org'
Subject: search through the archives for relavent subjects

 

Am trying to figure mod_python out.  Found the archive but no global way of
searching the subjects.  Please advise how this is done?

 

Suppose the other alternative is to email the question.  Thought I could use
the archives for some of the more generic or obvious questions, then post
the more involved questions.

 

Please advise.

karl

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060616/d1882662/attachment-0001.html
From karl.kobata at syncira.com  Fri Jun 16 17:13:38 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Jun 16 17:13:49 2006
Subject: [mod_python] Newbie - problem running mptest.py
Message-ID: <20060616211346.STVC144.rrcs-fep-10.hrndva.rr.com@syncirakklap>

 

 

  _____  

From: Karl Kobata [mailto:karl.kobata@syncira.com] 
Sent: Wednesday, March 01, 2006 2:15 PM
To: 'mod_python@modpython.org'
Subject: FW: Newbie - problem running mptest.py

 

Please help.

 

thanks

 

  _____  

From: Karl Kobata [mailto:karl.kobata@syncira.com] 
Sent: Tuesday, February 28, 2006 3:00 PM
To: 'mod_python@modpython.org'
Subject: Newbie - problem running mptest.py

 

I am new to mod_python.

This DSO module was included in Redhat RHEL 3, but I do not seem to be able
to get this working with the simple example test program.  See questions
below.

 

Redhat Linux RHEL 3

Apache 2.0.46

Mod_python 3.0.3

 

RHEL 3 configuration:

/etc/httpd/conf/httpd.conf

-          in this file it includes external configuration files

-          For mod_python, it httpd.conf includes
/etc/httpd/conf.d/python.conf

-          In python.conf, these directives were added:

 

LoadModule python_module modules/mod_python.so

<Directory  /<DocumentRoot path>/Python>

    AddHandler python-program .py

    PythonHandler mptest

    PythonDebug On

</Directory>

 

Example file:

Mptest.py

from mod_python import apache

 

def handler(req):

    req.write("Hello World!")

    return apache.OK

 

URL reference:

http://localhost/Python/mptest.py

 

Results:

1)    the content of mptest.py was displayed, and not executed.

2)    Error message in error.log for apache

[Tue Feb 28 14:24:35 2006] [error] make_obcallback: could not import
mod_python.apache.!

Could not find platform independent libraries <prefix>

Could not find platform dependent libraries <exec_prefix>

Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]

'import site' failed; use -v for traceback

'import site' failed; use -v for traceback

ImportError: No module named mod_python.apache

 

Question:

1)    what did I do wrong?

2)    How to you use -v for traceback

3)    Any other suggestion

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060616/cd2d56dc/attachment.html
From karl.kobata at syncira.com  Fri Jun 16 17:13:51 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Jun 16 17:14:02 2006
Subject: [mod_python] Newbie - problem running mptest.py
Message-ID: <20060616211359.STWN144.rrcs-fep-10.hrndva.rr.com@syncirakklap>

 

 

  _____  

From: Karl Kobata [mailto:karl.kobata@syncira.com] 
Sent: Tuesday, February 28, 2006 3:00 PM
To: 'mod_python@modpython.org'
Subject: Newbie - problem running mptest.py

 

I am new to mod_python.

This DSO module was included in Redhat RHEL 3, but I do not seem to be able
to get this working with the simple example test program.  See questions
below.

 

Redhat Linux RHEL 3

Apache 2.0.46

Mod_python 3.0.3

 

RHEL 3 configuration:

/etc/httpd/conf/httpd.conf

-          in this file it includes external configuration files

-          For mod_python, it httpd.conf includes
/etc/httpd/conf.d/python.conf

-          In python.conf, these directives were added:

 

LoadModule python_module modules/mod_python.so

<Directory  /<DocumentRoot path>/Python>

    AddHandler python-program .py

    PythonHandler mptest

    PythonDebug On

</Directory>

 

Example file:

Mptest.py

from mod_python import apache

 

def handler(req):

    req.write("Hello World!")

    return apache.OK

 

URL reference:

http://localhost/Python/mptest.py

 

Results:

1)    the content of mptest.py was displayed, and not executed.

2)    Error message in error.log for apache

[Tue Feb 28 14:24:35 2006] [error] make_obcallback: could not import
mod_python.apache.!

Could not find platform independent libraries <prefix>

Could not find platform dependent libraries <exec_prefix>

Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]

'import site' failed; use -v for traceback

'import site' failed; use -v for traceback

ImportError: No module named mod_python.apache

 

Question:

1)    what did I do wrong?

2)    How to you use -v for traceback

3)    Any other suggestion

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060616/4801d1c4/attachment-0001.html
From John.C.Cartwright at noaa.gov  Fri Jun 16 17:39:52 2006
From: John.C.Cartwright at noaa.gov (John Cartwright)
Date: Fri Jun 16 17:39:56 2006
Subject: [mod_python] Newbie - problem running mptest.py
In-Reply-To: <20060616211359.STWN144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
References: <20060616211359.STWN144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
Message-ID: <44932528.90403@noaa.gov>

Hi Karl,

I'm having precisely the same problems in the same environment, but have
not found an answer. Please keep me posted if you sort it out and I'll
do likewise.

-- john


Karl Kobata wrote:
>
> ------------------------------------------------------------------------
>
> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
> *Sent:* Tuesday, February 28, 2006 3:00 PM
> *To:* 'mod_python@modpython.org'
> *Subject:* Newbie - problem running mptest.py
>
> I am new to mod_python.
>
> This DSO module was included in Redhat RHEL 3, but I do not seem to be
> able to get this working with the simple example test program. See
> questions below.
>
> Redhat Linux RHEL 3
>
> Apache 2.0.46
>
> Mod_python 3.0.3
>
> RHEL 3 configuration:
>
> /etc/httpd/conf/httpd.conf
>
> - in this file it includes external configuration files
>
> - For mod_python, it httpd.conf includes /etc/httpd/conf.d/python.conf
>
> - In python.conf, these directives were added:
>
> LoadModule python_module modules/mod_python.so
>
> <Directory /<DocumentRoot path>/Python>
>
> AddHandler python-program .py
>
> PythonHandler mptest
>
> PythonDebug On
>
> </Directory>
>
> Example file:
>
> Mptest.py
>
> from mod_python import apache
>
> def handler(req):
>
> req.write("Hello World!")
>
> return apache.OK
>
> URL reference:
>
> http://localhost/Python/mptest.py
>
> Results:
>
> 1) the content of mptest.py was displayed, and not executed.
>
> 2) Error message in error.log for apache
>
> [Tue Feb 28 14:24:35 2006] [error] make_obcallback: could not import
> mod_python.apache.!
>
> Could not find platform independent libraries <prefix>
>
> Could not find platform dependent libraries <exec_prefix>
>
> Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
>
> 'import site' failed; use -v for traceback
>
> 'import site' failed; use -v for traceback
>
> ImportError: No module named mod_python.apache
>
> Question:
>
> 1) what did I do wrong?
>
> 2) How to you use ?v for traceback
>
> 3) Any other suggestion
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>   
From grahamd at dscpl.com.au  Fri Jun 16 17:54:54 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 16 17:55:03 2006
Subject: [mod_python] search through the archives for relavent subjects
In-Reply-To: <20060616211334.STTO144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
References: <20060616211334.STTO144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
Message-ID: <E19CE2E4-C11A-4751-844A-FB16A724F0B8@dscpl.com.au>

Use the search box on www.modpython.org.

Use a search term such as:

   inurl:pipermail mptest

The inurl:pipermail bit will restrict it to mailing list.

Graham

On 17/06/2006, at 7:13 AM, Karl Kobata wrote:

>
>
>
>
> From: Karl Kobata [mailto:karl.kobata@syncira.com]
> Sent: Sunday, June 11, 2006 10:16 PM
> To: 'mod_python@modpython.org'
> Subject: search through the archives for relavent subjects
>
>
>
> Am trying to figure mod_python out.  Found the archive but no  
> global way of searching the subjects.  Please advise how this is done?
>
>
>
> Suppose the other alternative is to email the question.  Thought I  
> could use the archives for some of the more generic or obvious  
> questions, then post the more involved questions.
>
>
>
> Please advise.
>
> karl
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060617/0afc48ac/attachment.html
From John.C.Cartwright at noaa.gov  Fri Jun 16 18:30:18 2006
From: John.C.Cartwright at noaa.gov (John Cartwright)
Date: Fri Jun 16 18:30:22 2006
Subject: [mod_python] Newbie - problem running mptest.py
In-Reply-To: <20060616211346.STVC144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
References: <20060616211346.STVC144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
Message-ID: <449330FA.3070109@noaa.gov>

Hi Karl,

I'm not sure why, but for me it makes a difference if you restart apache
with:
/sbin/service httpd restart
vs.
/etc/rc.d/init.d/httpd restart

The former seems to work w/ mod_python, the latter doesn't.

-- john


Karl Kobata wrote:
>
> ------------------------------------------------------------------------
>
> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
> *Sent:* Wednesday, March 01, 2006 2:15 PM
> *To:* 'mod_python@modpython.org'
> *Subject:* FW: Newbie - problem running mptest.py
>
> Please help.
>
> thanks
>
> ------------------------------------------------------------------------
>
> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
> *Sent:* Tuesday, February 28, 2006 3:00 PM
> *To:* 'mod_python@modpython.org'
> *Subject:* Newbie - problem running mptest.py
>
> I am new to mod_python.
>
> This DSO module was included in Redhat RHEL 3, but I do not seem to be
> able to get this working with the simple example test program. See
> questions below.
>
> Redhat Linux RHEL 3
>
> Apache 2.0.46
>
> Mod_python 3.0.3
>
> RHEL 3 configuration:
>
> /etc/httpd/conf/httpd.conf
>
> - in this file it includes external configuration files
>
> - For mod_python, it httpd.conf includes /etc/httpd/conf.d/python.conf
>
> - In python.conf, these directives were added:
>
> LoadModule python_module modules/mod_python.so
>
> <Directory /<DocumentRoot path>/Python>
>
> AddHandler python-program .py
>
> PythonHandler mptest
>
> PythonDebug On
>
> </Directory>
>
> Example file:
>
> Mptest.py
>
> from mod_python import apache
>
> def handler(req):
>
> req.write("Hello World!")
>
> return apache.OK
>
> URL reference:
>
> http://localhost/Python/mptest.py
>
> Results:
>
> 1) the content of mptest.py was displayed, and not executed.
>
> 2) Error message in error.log for apache
>
> [Tue Feb 28 14:24:35 2006] [error] make_obcallback: could not import
> mod_python.apache.!
>
> Could not find platform independent libraries <prefix>
>
> Could not find platform dependent libraries <exec_prefix>
>
> Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
>
> 'import site' failed; use -v for traceback
>
> 'import site' failed; use -v for traceback
>
> ImportError: No module named mod_python.apache
>
> Question:
>
> 1) what did I do wrong?
>
> 2) How to you use ?v for traceback
>
> 3) Any other suggestion
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>   
From karl.kobata at syncira.com  Fri Jun 16 20:13:33 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Fri Jun 16 20:13:47 2006
Subject: [mod_python] search through the archives for relavent subjects
In-Reply-To: <E19CE2E4-C11A-4751-844A-FB16A724F0B8@dscpl.com.au>
Message-ID: <20060617001342.TRZL144.rrcs-fep-10.hrndva.rr.com@syncirakklap>

Thank you this works great.

 

  _____  

From: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Sent: Friday, June 16, 2006 2:55 PM
To: Karl Kobata
Cc: mod_python@modpython.org
Subject: Re: [mod_python] search through the archives for relavent subjects

 

Use the search box on www.modpython.org.

 

Use a search term such as:

 

inurl:pipermail mptest

 

The inurl:pipermail bit will restrict it to mailing list.

 

Graham

 

On 17/06/2006, at 7:13 AM, Karl Kobata wrote:





  _____  

size=2 width="100%" align=center tabindex=-1> 

From: Karl Kobata [mailto:karl.kobata@syncira.com] 
Sent: Sunday, June 11, 2006 10:16 PM
To: 'mod_python@modpython.org'
Subject: search through the archives for relavent subjects

Am trying to figure mod_python out. Found the archive but no global way of
searching the subjects. Please advise how this is done?

Suppose the other alternative is to email the question. Thought I could use
the archives for some of the more generic or obvious questions, then post
the more involved questions.

Please advise.

karl

_______________________________________________

Mod_python mailing list

Mod_python@modpython.org

http://mailman.modpython.org/mailman/listinfo/mod_python

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060616/e8349f19/attachment.html
From grahamd at dscpl.com.au  Fri Jun 16 21:52:48 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 16 21:53:05 2006
Subject: [mod_python] Newbie - problem running mptest.py
In-Reply-To: <449330FA.3070109@noaa.gov>
References: <20060616211346.STVC144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
	<449330FA.3070109@noaa.gov>
Message-ID: <0101C998-039F-447A-AF5B-6F3276375221@dscpl.com.au>

Most likely because you have more than one version of Python installed.
When you use the "rc" script it is hardwiring path to look in only  
standard
locations but the version of Python found in PATH when that is done  
hasn't
had mod_python installed. When you use /sbin/service it is probably
using your own PATH which is finding a different version of Python for
which mod_python has been installed.

So, work out how many versions of Python you have installed, what their
respective version numbers are and whether mod_python got installed
for each version or not. The PATH environment used when Apache is
run must find the one for which mod_python was installed.

Graham

On 17/06/2006, at 8:30 AM, John Cartwright wrote:

> Hi Karl,
>
> I'm not sure why, but for me it makes a difference if you restart  
> apache
> with:
> /sbin/service httpd restart
> vs.
> /etc/rc.d/init.d/httpd restart
>
> The former seems to work w/ mod_python, the latter doesn't.
>
> -- john
>
>
> Karl Kobata wrote:
>>
>> --------------------------------------------------------------------- 
>> ---
>>
>> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
>> *Sent:* Wednesday, March 01, 2006 2:15 PM
>> *To:* 'mod_python@modpython.org'
>> *Subject:* FW: Newbie - problem running mptest.py
>>
>> Please help.
>>
>> thanks
>>
>> --------------------------------------------------------------------- 
>> ---
>>
>> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
>> *Sent:* Tuesday, February 28, 2006 3:00 PM
>> *To:* 'mod_python@modpython.org'
>> *Subject:* Newbie - problem running mptest.py
>>
>> I am new to mod_python.
>>
>> This DSO module was included in Redhat RHEL 3, but I do not seem  
>> to be
>> able to get this working with the simple example test program. See
>> questions below.
>>
>> Redhat Linux RHEL 3
>>
>> Apache 2.0.46
>>
>> Mod_python 3.0.3
>>
>> RHEL 3 configuration:
>>
>> /etc/httpd/conf/httpd.conf
>>
>> - in this file it includes external configuration files
>>
>> - For mod_python, it httpd.conf includes /etc/httpd/conf.d/ 
>> python.conf
>>
>> - In python.conf, these directives were added:
>>
>> LoadModule python_module modules/mod_python.so
>>
>> <Directory /<DocumentRoot path>/Python>
>>
>> AddHandler python-program .py
>>
>> PythonHandler mptest
>>
>> PythonDebug On
>>
>> </Directory>
>>
>> Example file:
>>
>> Mptest.py
>>
>> from mod_python import apache
>>
>> def handler(req):
>>
>> req.write("Hello World!")
>>
>> return apache.OK
>>
>> URL reference:
>>
>> http://localhost/Python/mptest.py
>>
>> Results:
>>
>> 1) the content of mptest.py was displayed, and not executed.
>>
>> 2) Error message in error.log for apache
>>
>> [Tue Feb 28 14:24:35 2006] [error] make_obcallback: could not import
>> mod_python.apache.!
>>
>> Could not find platform independent libraries <prefix>
>>
>> Could not find platform dependent libraries <exec_prefix>
>>
>> Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
>>
>> 'import site' failed; use -v for traceback
>>
>> 'import site' failed; use -v for traceback
>>
>> ImportError: No module named mod_python.apache
>>
>> Question:
>>
>> 1) what did I do wrong?
>>
>> 2) How to you use ?v for traceback
>>
>> 3) Any other suggestion
>>
>> --------------------------------------------------------------------- 
>> ---
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Fri Jun 16 21:56:27 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 16 21:57:13 2006
Subject: [mod_python] under names
In-Reply-To: <20060616170455.GA13447@asu.edu>
References: <20060616170455.GA13447@asu.edu>
Message-ID: <7CABBC69-4C58-4CA0-97F7-78D9F7FAE820@dscpl.com.au>


On 17/06/2006, at 3:04 AM, David Bear wrote:

> I know that using an underscore in an identifier 'hides' that name
> from being accessible to a url.

The underscore rule only applies if you are using mod_python.publisher.
It doesn't apply if you are defining your own basic handler or are using
mod_python.psp.

> I am wondering if that applies to
> identifiers that are imported as well.
>
> For example if,
>
> from mydefines import *
>
> makes an identifier mydefines.myvariable available in the namespace as
> 'myvariable', is it still possible to 'call' myvariable via url as in
>
> http://myserver/pythonapp.py/myvariable
>
> I am starting to wonder about the best way to keep certain functions
> and variables obaque to prying web eyes, and if putting them in
> modules offers any protection.

When mod_python.publisher is used, any variable, function etc,  
whether it
be local or imported from another module as above is hidden if a leading
underscore is used for the name.

Note that make sure you are using recent version of mod_python (3.2.7+)
though, as 3.1.X has a bug in it that results in underscore prefix  
values
being visible in a certain error situation.

Graham

> -- 
> David Bear
> phone: 	480-965-8257
> fax: 	480-965-9189
> College of Public Programs/ASU
> Wilson Hall 232
> Tempe, AZ 85287-0803
>  "Beware the IP portfolio, everyone will be suspect of trespassing"
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Fri Jun 16 21:59:53 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Jun 16 22:00:00 2006
Subject: [mod_python] Newbie - problem running mptest.py
In-Reply-To: <20060616211359.STWN144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
References: <20060616211359.STWN144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
Message-ID: <65F6AFDE-9414-4434-AEBF-DEB16C889F4A@dscpl.com.au>


> [Tue Feb 28 14:24:35 2006] [error] make_obcallback: could not  
> import mod_python.apache.!
>
> Could not find platform independent libraries <prefix>
>
> Could not find platform dependent libraries <exec_prefix>
>
> Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
>
> 'import site' failed; use -v for traceback
>
> 'import site' failed; use -v for traceback
>
> ImportError: No module named mod_python.apache
>
>
>
> Question:
>
> 1)    what did I do wrong?
>
> 2)    How to you use ?v for traceback
>
> 3)    Any other suggestion
Most likely you have multiple versions of Python installed and the  
one being found
by Apache has been broken because someone has removed the parts of it  
installed
into the "lib" area of the file system.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060617/9a7c754a/attachment.html
From rsynnott at gmail.com  Sat Jun 17 11:00:18 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Sat Jun 17 11:00:26 2006
Subject: [mod_python] apxs for apache
In-Reply-To: <20060616211301.STPR144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
References: <20060616211301.STPR144.rrcs-fep-10.hrndva.rr.com@syncirakklap>
Message-ID: <24f203480606170800u7f4ba8dbye431ed662c1effbe@mail.gmail.com>

On 6/16/06, Karl Kobata <karl.kobata@syncira.com> wrote:
>
>
>
>
>
>
>
>
>  ________________________________
>
>
> From: Karl Kobata [mailto:karl.kobata@syncira.com]
>  Sent: Thursday, June 15, 2006 4:22 PM
>  To: 'mod_python@modpython.org'
>  Subject: apxs for apache
>
>
>
> We have redhat's version of apache running on our server ? rhel3 ES.  Redhat
> has not provided updates to python newer than 2.2.3, and mod_python newer
> than 3.0.4.  I have downloaded 3.2.8 and found that I am missing 2 items ?
> flex and apxs.
>
> The newest flex from redhat is 2.5.4, but I found the source for debian, and
> compiled 2.5.33.  So now I am down to finding apxs.
>
>
>
> Does anyone know where I can get the apxs rpm or source?  If I can get it
> from redhat ? what rpm package do I download?
>
> If it is not from redhat, where will I be able to get the source?
>
>
>
> Please help.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

It's probably in an rpm called 'apache-devel' or similar.
Rob

From i.d.mcdowall at gmail.com  Sat Jun 17 17:06:26 2006
From: i.d.mcdowall at gmail.com (ian McDowall)
Date: Sat Jun 17 17:06:31 2006
Subject: [mod_python] Possible partial answer to Windows config problems
Message-ID: <fd78e04b0606171406q66ed07bcv7a819ebfd29e3271@mail.gmail.com>

There have been questions from Karl Kobata and John Cartwright and I may
have a partial answer.

In particular, one of the problems that I spent a little time over was the
use of the Apache <Directory> tag to control mod_python configuration.

The example in the mod_python tutorial is slightly ambiguous, particularly
as it is written from a Unix / Linux perspective.  I suspect that this is
bog-standard Apache configuration rather than anything peculiar to
mod_python but I guess that people are coming fairly new to both at the same
time (as was I).

The directory in the <Directory> tag has to be an absolute Windows directory
that should include a drive letter.  This will have to map to a directory
under the Apache root directory.  I was expecting the reference to be
relative to the Apache root directory.

For example, suppose that you have an Apache configuration with the Apache
root set to E:\ApacheRoot and you have a sub-directory testdir in which you
have placed mod_python sources.  Then you can refer to URIs in this
directory from the browser as http://yourdomain/testdir/test.py if you have
a set of Apache directives such as the folliowing
<Directory "E:\ApacheRoot\testdir">

      AddHandler mod_python .py

      PythonHandler mptest

      PythonDebug On

 </Directory>
In this case, my confusion was to assume that I would have a tag as follows:
<Directory "/testdir">
...

BTW, if you are really struggling with set-up, I got some initial progress
by omitting the <Directory> tag and just having the AddHandler etc. at the
root level.  Of course, this is not wise for a real implementaton but, if
you are trying to find out if your mod_python installation is OK then it
gave me some information.  of course, I had to put the .py file in the
Python Lib directory in the installation so it could be imported but that
did get me some basics working.

I hope that this helps.  if it is misleading or irrelevant then please
ignore it and accept my apologies.

-- 
Ian McDowall
i.d.mcdowall@gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060617/7667de96/attachment.html
From grahamd at dscpl.com.au  Sat Jun 17 19:47:54 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jun 17 19:48:04 2006
Subject: [mod_python] Possible partial answer to Windows config problems
In-Reply-To: <fd78e04b0606171406q66ed07bcv7a819ebfd29e3271@mail.gmail.com>
References: <fd78e04b0606171406q66ed07bcv7a819ebfd29e3271@mail.gmail.com>
Message-ID: <967FCE35-C86E-4DA1-BA85-EF65FB479661@dscpl.com.au>


On 18/06/2006, at 7:06 AM, ian McDowall wrote:

> There have been questions from Karl Kobata and John Cartwright and  
> I may have a partial answer.
>
> In particular, one of the problems that I spent a little time over  
> was the use of the Apache <Directory> tag to control mod_python  
> configuration.
>
> The example in the mod_python tutorial is slightly ambiguous,  
> particularly as it is written from a Unix / Linux perspective.  I  
> suspect that this is bog-standard Apache configuration rather than  
> anything peculiar to mod_python but I guess that people are coming  
> fairly new to both at the same time (as was I).
>
> The directory in the <Directory> tag has to be an absolute Windows  
> directory that should include a drive letter.  This will have to  
> map to a directory under the Apache root directory.  I was  
> expecting the reference to be relative to the Apache root directory.
>
> For example, suppose that you have an Apache configuration with the  
> Apache root set to E:\ApacheRoot and you have a sub-directory  
> testdir in which you have placed mod_python sources.  Then you can  
> refer to URIs in this directory from the browser as http:// 
> yourdomain/testdir/test.py if you have a set of Apache directives  
> such as the folliowing
> <Directory "E:\ApacheRoot\testdir">
>       AddHandler mod_python .py
>
>       PythonHandler mptest
>
>       PythonDebug On
>
>  </Directory>
>
> In this case, my confusion was to assume that I would have a tag as  
> follows:
> <Directory "/testdir">
> ...
>
> BTW, if you are really struggling with set-up, I got some initial  
> progress by omitting the <Directory> tag and just having the  
> AddHandler etc. at the root level.  Of course, this is not wise for  
> a real implementaton but, if you are trying to find out if your  
> mod_python installation is OK then it gave me some information.  of  
> course, I had to put the .py file in the Python Lib directory in  
> the installation so it could be imported but that did get me some  
> basics working.
>
> I hope that this helps.  if it is misleading or irrelevant then  
> please ignore it and accept my apologies.

The best way to avoid the confusion is not to set it up in the main  
Apache configuration
file but do it in a specific directory within a .htaccess file. That  
way the whole issue of
how to set Directory directive goes away. Where mod_python is already  
installed and
you just want to start playing, it also avoids the whole issue of  
pestering some administrator
to fiddle with the main Apache configuration unnecessarily. This is  
why the instructions
I post a reference to occasionally use a .htaccess file. It is  
generally easier to get going
and shows more problems in setup more quickly and more easily.

Those alternate instructions again are:

   http://www.dscpl.com.au/articles/modpython-001.html

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060618/197f8b65/attachment.html
From modpython at redry.net  Sun Jun 18 17:39:07 2006
From: modpython at redry.net (eoghan)
Date: Sun Jun 18 19:26:06 2006
Subject: [mod_python] modpython.org
Message-ID: <4495C7FB.7000106@redry.net>

Hi
Is there a problem with the http://www.modpython.org/ site?
Have been trying to get to the list section for a while...
Eoghan
From grahamd at dscpl.com.au  Sun Jun 18 19:43:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 18 19:43:52 2006
Subject: [mod_python] modpython.org
Message-ID: <1150674229.31405@dscpl.user.openhosting.com>

eoghan wrote ..
> Hi
> Is there a problem with the http://www.modpython.org/ site?
> Have been trying to get to the list section for a while...
> Eoghan

The ISP it is hosted on just had a DNS outage.

Should be okay now as I host through the same people and my site
is back now after also having a problem for a while.

Graham
From administrator at leebrown.org  Mon Jun 19 12:00:32 2006
From: administrator at leebrown.org (Lee Brown)
Date: Mon Jun 19 12:01:18 2006
Subject: [mod_python] Possible partial answer to Windows config problems
In-Reply-To: <967FCE35-C86E-4DA1-BA85-EF65FB479661@dscpl.com.au>
Message-ID: <006401c693b9$7e61f6a0$0301a8c0@uberbox>

Greetings!
 
Just to clear up an ambiguity and to augment what Ian and Graham wrote:
 
Yes, both the Directory directive and the Alias directive must be absolute
Windows paths including a drive letter.  However, they must be a subpath of
of DocumentRoot (which is not necessarily a subpath of Apache root) OR they
must be aliased into the document root with the Alias directive.  For
example, given an Apache server installed at "C:/Program Files/Apache
Group/Apache2" and a web site located at "C:\webdev\sites\crashtest" the
following Directory directives are valid for the following VirtualHost
snippet:
 
<VirtualHost *:80>
 
    ServerName "crashtest.leebrown.org"
    DocumentRoot "C:/webdev/sites/crashtest/content"
        AddHandler mod_python .py
 
    <Directory "C:/webdev/sites/crashtest/content">
        PythonHandler content_handler
    </Directory>
 
    Alias /error "C:/webdev/sites/crashtest/error"
 
    <Directory "C:/webdev/sites/crashtest/error">
        PythonHandler error_handler
    </Directory>
 
</VirtualHost>
 
(Now one would think that after declaring "/error" as an Alias you could
then refer to "/error" in the Directory directive, but Noooooooo.......)
 
I prefer to set things up in the Vhost instead of using htaccess files, but
I'm just weird like that.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)


 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Graham Dumpleton
Sent: Saturday, June 17, 2006 7:48 PM
To: ian McDowall
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Possible partial answer to Windows config problems



On 18/06/2006, at 7:06 AM, ian McDowall wrote:


There have been questions from Karl Kobata and John Cartwright and I may
have a partial answer.

In particular, one of the problems that I spent a little time over was the
use of the Apache <Directory> tag to control mod_python configuration.

The example in the mod_python tutorial is slightly ambiguous, particularly
as it is written from a Unix / Linux perspective. I suspect that this is
bog-standard Apache configuration rather than anything peculiar to
mod_python but I guess that people are coming fairly new to both at the same
time (as was I).

The directory in the <Directory> tag has to be an absolute Windows directory
that should include a drive letter. This will have to map to a directory
under the Apache root directory. I was expecting the reference to be
relative to the Apache root directory.

For example, suppose that you have an Apache configuration with the Apache
root set to E:\ApacheRoot and you have a sub-directory testdir in which you
have placed mod_python sources. Then you can refer to URIs in this directory
from the browser as http://yourdomain/testdir/test.py if you have a set of
Apache directives such as the folliowing
<Directory "E:\ApacheRoot\testdir"> 

AddHandler mod_python .py

PythonHandler mptest

PythonDebug On 

</Directory>

In this case, my confusion was to assume that I would have a tag as follows:
<Directory "/testdir"> 
...

BTW, if you are really struggling with set-up, I got some initial progress
by omitting the <Directory> tag and just having the AddHandler etc. at the
root level. Of course, this is not wise for a real implementaton but, if you
are trying to find out if your mod_python installation is OK then it gave me
some information. of course, I had to put the .py file in the Python Lib
directory in the installation so it could be imported but that did get me
some basics working.

I hope that this helps. if it is misleading or irrelevant then please ignore
it and accept my apologies.



The best way to avoid the confusion is not to set it up in the main Apache
configuration
file but do it in a specific directory within a .htaccess file. That way the
whole issue of
how to set Directory directive goes away. Where mod_python is already
installed and
you just want to start playing, it also avoids the whole issue of pestering
some administrator
to fiddle with the main Apache configuration unnecessarily. This is why the
instructions
I post a reference to occasionally use a .htaccess file. It is generally
easier to get going
and shows more problems in setup more quickly and more easily.

Those alternate instructions again are:

http://www.dscpl.com.au/articles/modpython-001.html

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060619/8976f6ba/attachment.html
From arnaudsj at emedialibrary.org  Mon Jun 19 16:00:49 2006
From: arnaudsj at emedialibrary.org (=?ISO-8859-1?Q?S=E9bastien_Arnaud?=)
Date: Mon Jun 19 16:01:27 2006
Subject: [mod_python] MySQL Session implementation?
Message-ID: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>

Hello to all,

I was wondering if anybody had worked on a clean integration of MySQL  
for session storage in opposition to the default local db file  
mp_session that gets written in /tmp

I have wrote a nice little web based app last year using mod_python  
and now the traffic is so that it is in a load balancing  
configuration, but the LB does not seem to work very well and "stick"  
a specific client to a specific server, which is causing users to get  
logged out of the app.

Anyway, before I decided to start to reinvent the wheel here, I  
thought I would ask, since it seemed to me like the easiest way to  
share the sessions across multiple webapp servers would be to extend  
the mod_python Session class to use a DB connection such as MySQL.

Also, is there a way to rename the python session cookie as of 3.2.8?

Thanks!

S?bastien



From David.Bear at asu.edu  Mon Jun 19 17:44:48 2006
From: David.Bear at asu.edu (David Bear)
Date: Mon Jun 19 17:44:55 2006
Subject: [mod_python] getting a pickled form object returned
Message-ID: <20060619214448.GA400@asu.edu>

I would like to test some different methods on a req.form object, (not
built ins, but different ways to access form data)

Is there a quick and dirty way to get a form object returned as a
pickle? I would like to take that pickle of a web page, the paste it
into another python script for more work.. (Unless there is a better
way to get parts of the req object outside of a modpython invocation,
i.e. want a standard python environment to do some testing of
algorthms in)

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From jpg at jgassociates.ca  Mon Jun 19 17:49:03 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Jun 19 17:48:34 2006
Subject: [mod_python] MySQL Session implementation?
In-Reply-To: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>
References: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>
Message-ID: <44971BCF.7060104@jgassociates.ca>

S?bastien Arnaud wrote:
> Hello to all,
> 
> I was wondering if anybody had worked on a clean integration of MySQL 
> for session storage in opposition to the default local db file 
> mp_session that gets written in /tmp
> 
> I have wrote a nice little web based app last year using mod_python and 
> now the traffic is so that it is in a load balancing configuration, but 
> the LB does not seem to work very well and "stick" a specific client to 
> a specific server, which is causing users to get logged out of the app.
> 
> Anyway, before I decided to start to reinvent the wheel here, I thought 
> I would ask, since it seemed to me like the easiest way to share the 
> sessions across multiple webapp servers would be to extend the 
> mod_python Session class to use a DB connection such as MySQL.

Nicolas wrote an experimental SQLite backend which would likely be a 
good starting point for you. Take a look at:
http://svn.apache.org/viewvc/httpd/mod_python/branches/nlehuen/sandbox/SQLiteSession.py

> Also, is there a way to rename the python session cookie as of 3.2.8?

PythonOption session_cookie_name your-cookie-name

This was added in 3.2.

Jim

From elekis at gmail.com  Tue Jun 20 01:11:49 2006
From: elekis at gmail.com (elekis)
Date: Tue Jun 20 01:11:53 2006
Subject: [mod_python] other file than .py
Message-ID: <78316ea80606192211g43ce5c67idb11ee747f812708@mail.gmail.com>

hi,

I continue my little way in the magic world of python script under web
and after installeing, testing and begin really to program a
interractive site , I confronted with a little problem. I cannot touch
other file than .py

exemple. there is my .htaccess

----------------------------------
SetHandler mod_python
PythonHandler mod_python.publisher
PythonDebug On
----------------------------------


here is my event.css

--------------------------------
h6 { font-size: 50pt ; }
-------------------------------
but when he trie to load the event.css I have a 500 error

-->http://localhost/public_html/add_event.css and it's the same thing
for other file. is there a thing than I must put on my htacces???

other thing. I very like the publisher mod.  cause we
http://localhost/public_html/balbla/ link (and that 's cool.

but on modpython.org they say that is not the fastest way.

 Standard CGI:               23 requests/s
    Mod_python cgihandler:     385 requests/s
    Mod_python publisher:      476 requests/s
    Mod_python handler:       1203 requests/s

is it possible to have the publisher link mod and the handler request???


thanks

a+++
From grahamd at dscpl.com.au  Tue Jun 20 01:48:33 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 20 01:48:40 2006
Subject: [mod_python] other file than .py
Message-ID: <1150782513.25289@dscpl.user.openhosting.com>

elekis wrote ..
> hi,
> 
> I continue my little way in the magic world of python script under web
> and after installeing, testing and begin really to program a
> interractive site , I confronted with a little problem. I cannot touch
> other file than .py
> 
> exemple. there is my .htaccess
> 
> ----------------------------------
> SetHandler mod_python
> PythonHandler mod_python.publisher
> PythonDebug On
> ----------------------------------
> 
> 
> here is my event.css
> 
> --------------------------------
> h6 { font-size: 50pt ; }
> -------------------------------
> but when he trie to load the event.css I have a 500 error
> 
> -->http://localhost/public_html/add_event.css and it's the same thing
> for other file. is there a thing than I must put on my htacces???

Use "AddHandler" instead of "SetHandler" directive. For example:

  AddHandler mod_python .py
  PythonHandler mod_python.publisher

What this says is that only requests with a .py in URL will be routed
through to mod_python.publisher and not every request in that
directory. This will allow you to place .css, .html, .jpg, .gif, etc files
in the same directory.

Depending on which version of mod_python you are using, you should
also use:

  <Files *.pyc>
  deny from all
  </Files>

For older versions of mod_python this will ensure that compiled Python
byte code files are not downloadable. In mod_python 3.2.X these byte
code files are no longer generated for mod_python.publisher but can
for basic handlers, but still good to use it regardless.

> other thing. I very like the publisher mod.  cause we
> http://localhost/public_html/balbla/ link (and that 's cool.

If you are talking about the ability to not have .py in the URL, ie the
multiviews feature of Apache, then you also need to include additional
configuration to get it to work when using the AddHandler directive.
These additional directives are:

  Options +MultiViews
  MultiviewsMatch Handlers

  AddType text/html;qs=1.0 .py
  AddType text/html;qs=0.9 .html
  AddType text/plain;qs=0.8 .txt

If you don't have this, you will find that you can't leave off the .py
in the URL. Note that you may have to have Apache 2.0 and most
recent version of mod_python (3.2.X) for this all to work properly.

One last issue with using "AddHandler" over "SetHandler". When
using "SetHandler", mod_python.publisher will automatically map
a request against a directory to the 'index.py' file in the directory.
When using "AddHandler" this will not happen by default. If you
want this to happen, you must also include:

  DirectoryIndex index.py

This will cause Apache to take 'index.py' as a candidate index
directory when request is against the directory.

In summary, use the configuration:

  AddHandler mod_python .py
  PythonHandler mod_python.publisher
  PythonDebug On

  <Files *.pyc>
  deny from all
  </Files>

  Options +MultiViews
  MultiviewsMatch Handlers

  AddType text/html;qs=1.0 .py
  AddType text/html;qs=0.9 .html
  AddType text/plain;qs=0.8 .txt

  DirectoryIndex index.py

> but on modpython.org they say that is not the fastest way.
> 
>  Standard CGI:               23 requests/s
>     Mod_python cgihandler:     385 requests/s
>     Mod_python publisher:      476 requests/s
>     Mod_python handler:       1203 requests/s
> 
> is it possible to have the publisher link mod and the handler request???

Both mod_python.publisher and mod_python.cgihandler are merely
instances of mod_python handlers. There are slower because of the
extra work they do on top of the basic handler interface.

I would suggest you don't worry about speed issues, most sites do not need
to be blindingly fast and you are probably going to have enough to contend
with as it is, plus find it fast enough anyway.

FWIW, those figures were probably based on really old hardware as well
and can be ignored due to that fact. New hardware should perform much
better.

Graham
From arnaudsj at emedialibrary.org  Tue Jun 20 15:04:38 2006
From: arnaudsj at emedialibrary.org (=?ISO-8859-1?Q?S=E9bastien_Arnaud?=)
Date: Tue Jun 20 15:05:18 2006
Subject: [mod_python] MySQL Session implementation?
In-Reply-To: <44971BCF.7060104@jgassociates.ca>
References: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>
	<44971BCF.7060104@jgassociates.ca>
Message-ID: <242EB7C3-5B4D-4EC2-91F6-57FBD816D661@emedialibrary.org>

Thanks Jim, it looks like SQLiteSession is a good start for what I  
want to do.

If I am successful I will share with everybody whatever I come up with.

Thanks!

S?bastien


On Jun 19, 2006, at 4:49 PM, Jim Gallacher wrote:

> S?bastien Arnaud wrote:
>> Hello to all,
>> I was wondering if anybody had worked on a clean integration of  
>> MySQL for session storage in opposition to the default local db  
>> file mp_session that gets written in /tmp
>> I have wrote a nice little web based app last year using  
>> mod_python and now the traffic is so that it is in a load  
>> balancing configuration, but the LB does not seem to work very  
>> well and "stick" a specific client to a specific server, which is  
>> causing users to get logged out of the app.
>> Anyway, before I decided to start to reinvent the wheel here, I  
>> thought I would ask, since it seemed to me like the easiest way to  
>> share the sessions across multiple webapp servers would be to  
>> extend the mod_python Session class to use a DB connection such as  
>> MySQL.
>
> Nicolas wrote an experimental SQLite backend which would likely be  
> a good starting point for you. Take a look at:
> http://svn.apache.org/viewvc/httpd/mod_python/branches/nlehuen/ 
> sandbox/SQLiteSession.py
>
>> Also, is there a way to rename the python session cookie as of 3.2.8?
>
> PythonOption session_cookie_name your-cookie-name
>
> This was added in 3.2.
>
> Jim
>


From nicolas at lehuen.com  Tue Jun 20 15:37:23 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Jun 20 15:37:27 2006
Subject: [mod_python] MySQL Session implementation?
In-Reply-To: <242EB7C3-5B4D-4EC2-91F6-57FBD816D661@emedialibrary.org>
References: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>
	<44971BCF.7060104@jgassociates.ca>
	<242EB7C3-5B4D-4EC2-91F6-57FBD816D661@emedialibrary.org>
Message-ID: <c298f2d70606201237o5fd83bd5l96616b03411c4cb0@mail.gmail.com>

2006/6/20, S?bastien Arnaud <arnaudsj@emedialibrary.org>:
> Thanks Jim, it looks like SQLiteSession is a good start for what I
> want to do.
>
> If I am successful I will share with everybody whatever I come up with.
>
> Thanks!
>
> S?bastien

Hi S?bastien,

One important thing not to overlook if you are going to implement a
MySQLSession class is database connection pooling.

In SQLiteSession, I deliberately did not handle this issue because it
is written in the documentation that connections created in a thread
should not be reused in another thread (see
http://www.sqlite.org/cvstrac/wiki?p=MultiThreading : "# On some
operating systems, a database connection should always be used in the
same thread in which it was originally created. ").

As a result, each and every session load or saved forces a database
connection, which means opening files, reading data structures
(indexes and tables) and syncing them when the connection is closed.
No wonder then that SQLiteSession is slower than FileSession...

As a minimum effort, I could have used thread local variables to make
sure that only one connection is opened by thread, but thread local
variables are a Python 2.4 feature and we need to support Python 2.3.
So I've just let it as is for the moment, since anyway we decided to
put this code in the sandbox until better times.

With MySQL or other DBMS, however, connection pooling can and should
be used for better performances. Writing a connection pool is not very
difficult, but writing it in a stable and resilient way, both
thread-safe and multi-process safe, is a little bit more effort.

One thing to consider is to try to build the connection pool and the
session management code in two different, orthogonal modules, so that
one day we'll be able to release the connection pool for general
purpose.

Regards,
Nicolas

From rsynnott at gmail.com  Tue Jun 20 18:45:27 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Tue Jun 20 18:45:32 2006
Subject: [mod_python] MySQL Session implementation?
In-Reply-To: <c298f2d70606201237o5fd83bd5l96616b03411c4cb0@mail.gmail.com>
References: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>
	<44971BCF.7060104@jgassociates.ca>
	<242EB7C3-5B4D-4EC2-91F6-57FBD816D661@emedialibrary.org>
	<c298f2d70606201237o5fd83bd5l96616b03411c4cb0@mail.gmail.com>
Message-ID: <24f203480606201545h22577492oc9ee601dd7c2b616@mail.gmail.com>

On 6/20/06, Nicolas Lehuen <nicolas@lehuen.com> wrote:
> 2006/6/20, S?bastien Arnaud <arnaudsj@emedialibrary.org>:
> > Thanks Jim, it looks like SQLiteSession is a good start for what I
> > want to do.
> >
> > If I am successful I will share with everybody whatever I come up with.
> >
> > Thanks!
> >
> > S?bastien
>
> Hi S?bastien,
>
> One important thing not to overlook if you are going to implement a
> MySQLSession class is database connection pooling.
>
> In SQLiteSession, I deliberately did not handle this issue because it
> is written in the documentation that connections created in a thread
> should not be reused in another thread (see
> http://www.sqlite.org/cvstrac/wiki?p=MultiThreading : "# On some
> operating systems, a database connection should always be used in the
> same thread in which it was originally created. ").
>
> As a result, each and every session load or saved forces a database
> connection, which means opening files, reading data structures
> (indexes and tables) and syncing them when the connection is closed.
> No wonder then that SQLiteSession is slower than FileSession...
>
> As a minimum effort, I could have used thread local variables to make
> sure that only one connection is opened by thread, but thread local
> variables are a Python 2.4 feature and we need to support Python 2.3.
> So I've just let it as is for the moment, since anyway we decided to
> put this code in the sandbox until better times.
>
> With MySQL or other DBMS, however, connection pooling can and should
> be used for better performances. Writing a connection pool is not very
> difficult, but writing it in a stable and resilient way, both
> thread-safe and multi-process safe, is a little bit more effort.
>
> One thing to consider is to try to build the connection pool and the
> session management code in two different, orthogonal modules, so that
> one day we'll be able to release the connection pool for general
> purpose.
>
> Regards,
> Nicolas
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Of course, if you're running non-threaded apache and will be doing so
for the forseeable future, things get a lot easier.
Rob

From karl.kobata at syncira.com  Tue Jun 20 23:14:02 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Tue Jun 20 23:14:16 2006
Subject: [mod_python] apxs for apache
In-Reply-To: <24f203480606170800u7f4ba8dbye431ed662c1effbe@mail.gmail.com>
Message-ID: <20060621031409.CRYJ21285.rrcs-fep-10.hrndva.rr.com@syncirakklap>

Thanks, it was in this rpm.
>From redhat for rhel3, the package is called
httpd-devel-2.0.46-56.ent

for users of rhel3, the 2.0.46-56.ent part of this rpm should match your
apache server package number.  Example for our server it is:
httpd-2.0.46-56.ent

thanks for the help.


-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Robert Synnott
Sent: Saturday, June 17, 2006 8:00 AM
To: Karl Kobata
Cc: mod_python@modpython.org
Subject: Re: [mod_python] apxs for apache

On 6/16/06, Karl Kobata <karl.kobata@syncira.com> wrote:
>
>
>
>
>
>
>
>
>  ________________________________
>
>
> From: Karl Kobata [mailto:karl.kobata@syncira.com]
>  Sent: Thursday, June 15, 2006 4:22 PM
>  To: 'mod_python@modpython.org'
>  Subject: apxs for apache
>
>
>
> We have redhat's version of apache running on our server - rhel3 ES.
Redhat
> has not provided updates to python newer than 2.2.3, and mod_python newer
> than 3.0.4.  I have downloaded 3.2.8 and found that I am missing 2 items -
> flex and apxs.
>
> The newest flex from redhat is 2.5.4, but I found the source for debian,
and
> compiled 2.5.33.  So now I am down to finding apxs.
>
>
>
> Does anyone know where I can get the apxs rpm or source?  If I can get it
> from redhat - what rpm package do I download?
>
> If it is not from redhat, where will I be able to get the source?
>
>
>
> Please help.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

It's probably in an rpm called 'apache-devel' or similar.
Rob

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


From arnaudsj at emedialibrary.org  Tue Jun 20 23:19:56 2006
From: arnaudsj at emedialibrary.org (=?ISO-8859-1?Q?S=E9bastien_Arnaud?=)
Date: Tue Jun 20 23:20:54 2006
Subject: [mod_python] MySQL Session implementation?
In-Reply-To: <c298f2d70606201237o5fd83bd5l96616b03411c4cb0@mail.gmail.com>
References: <15E1E37C-9981-4EBA-A6A0-B8D4CC5DA10F@emedialibrary.org>
	<44971BCF.7060104@jgassociates.ca>
	<242EB7C3-5B4D-4EC2-91F6-57FBD816D661@emedialibrary.org>
	<c298f2d70606201237o5fd83bd5l96616b03411c4cb0@mail.gmail.com>
Message-ID: <C318E202-D3D0-49FF-AB29-E9532F388919@emedialibrary.org>

Hi Nicolas,

Thank you for all the pointers. I have already cooked a fairly simple  
connection pool in my own baked framework which I use mostly now when  
developing for mod_python. Graham had helped me a while back to try  
to get it right, so as soon as I have a chance to write a draft of a  
MySQLSession module, I'll try to make it work with connection pooling  
and post it to the list for review.

Thanks again.

S?bastien


On Jun 20, 2006, at 2:37 PM, Nicolas Lehuen wrote:

> 2006/6/20, S?bastien Arnaud <arnaudsj@emedialibrary.org>:
>> Thanks Jim, it looks like SQLiteSession is a good start for what I
>> want to do.
>>
>> If I am successful I will share with everybody whatever I come up  
>> with.
>>
>> Thanks!
>>
>> S?bastien
>
> Hi S?bastien,
>
> One important thing not to overlook if you are going to implement a
> MySQLSession class is database connection pooling.
>
> In SQLiteSession, I deliberately did not handle this issue because it
> is written in the documentation that connections created in a thread
> should not be reused in another thread (see
> http://www.sqlite.org/cvstrac/wiki?p=MultiThreading : "# On some
> operating systems, a database connection should always be used in the
> same thread in which it was originally created. ").
>
> As a result, each and every session load or saved forces a database
> connection, which means opening files, reading data structures
> (indexes and tables) and syncing them when the connection is closed.
> No wonder then that SQLiteSession is slower than FileSession...
>
> As a minimum effort, I could have used thread local variables to make
> sure that only one connection is opened by thread, but thread local
> variables are a Python 2.4 feature and we need to support Python 2.3.
> So I've just let it as is for the moment, since anyway we decided to
> put this code in the sandbox until better times.
>
> With MySQL or other DBMS, however, connection pooling can and should
> be used for better performances. Writing a connection pool is not very
> difficult, but writing it in a stable and resilient way, both
> thread-safe and multi-process safe, is a little bit more effort.
>
> One thing to consider is to try to build the connection pool and the
> session management code in two different, orthogonal modules, so that
> one day we'll be able to release the connection pool for general
> purpose.
>
> Regards,
> Nicolas


From karl.kobata at syncira.com  Tue Jun 20 23:45:34 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Tue Jun 20 23:45:49 2006
Subject: [mod_python] Newbie - problem running mptest.py
In-Reply-To: <449330FA.3070109@noaa.gov>
Message-ID: <20060621034541.CVKQ21285.rrcs-fep-10.hrndva.rr.com@syncirakklap>

Hi John,

In rhel3 the scripts executed are effectively the same.  The only difference
is that in /sbin/service fixes the path to a default.  In my case:
PATH="/sbin:/usr/sbin:/bin:/usr/bin:/usr/X11R6/bin"

Our users path declaration includes these, and more.

Also:
/sbin/service calls /etc/init.d/httpd which eventually called the binary at
/usr/sbin/httpd.
In my case, if I compare the two files, there is no difference. 
diff /etc/rc.d/init.d/httpd /etc/init.d/httpd

I hope this help.  I agree with others that there my be a conflict in
multiple versions of python installed on your system.

Thanks
karl

-----Original Message-----
From: John Cartwright [mailto:John.C.Cartwright@noaa.gov] 
Sent: Friday, June 16, 2006 3:30 PM
To: Karl Kobata
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Newbie - problem running mptest.py

Hi Karl,

I'm not sure why, but for me it makes a difference if you restart apache
with:
/sbin/service httpd restart
vs.
/etc/rc.d/init.d/httpd restart

The former seems to work w/ mod_python, the latter doesn't.

-- john


Karl Kobata wrote:
>
> ------------------------------------------------------------------------
>
> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
> *Sent:* Wednesday, March 01, 2006 2:15 PM
> *To:* 'mod_python@modpython.org'
> *Subject:* FW: Newbie - problem running mptest.py
>
> Please help.
>
> thanks
>
> ------------------------------------------------------------------------
>
> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
> *Sent:* Tuesday, February 28, 2006 3:00 PM
> *To:* 'mod_python@modpython.org'
> *Subject:* Newbie - problem running mptest.py
>
> I am new to mod_python.
>
> This DSO module was included in Redhat RHEL 3, but I do not seem to be
> able to get this working with the simple example test program. See
> questions below.
>
> Redhat Linux RHEL 3
>
> Apache 2.0.46
>
> Mod_python 3.0.3
>
> RHEL 3 configuration:
>
> /etc/httpd/conf/httpd.conf
>
> - in this file it includes external configuration files
>
> - For mod_python, it httpd.conf includes /etc/httpd/conf.d/python.conf
>
> - In python.conf, these directives were added:
>
> LoadModule python_module modules/mod_python.so
>
> <Directory /<DocumentRoot path>/Python>
>
> AddHandler python-program .py
>
> PythonHandler mptest
>
> PythonDebug On
>
> </Directory>
>
> Example file:
>
> Mptest.py
>
> from mod_python import apache
>
> def handler(req):
>
> req.write("Hello World!")
>
> return apache.OK
>
> URL reference:
>
> http://localhost/Python/mptest.py
>
> Results:
>
> 1) the content of mptest.py was displayed, and not executed.
>
> 2) Error message in error.log for apache
>
> [Tue Feb 28 14:24:35 2006] [error] make_obcallback: could not import
> mod_python.apache.!
>
> Could not find platform independent libraries <prefix>
>
> Could not find platform dependent libraries <exec_prefix>
>
> Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
>
> 'import site' failed; use -v for traceback
>
> 'import site' failed; use -v for traceback
>
> ImportError: No module named mod_python.apache
>
> Question:
>
> 1) what did I do wrong?
>
> 2) How to you use -v for traceback
>
> 3) Any other suggestion
>
> ------------------------------------------------------------------------
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>   


From karl.kobata at syncira.com  Wed Jun 21 01:22:46 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Wed Jun 21 01:22:55 2006
Subject: [mod_python] Newbie - problem running mptest.py
In-Reply-To: <44932528.90403@noaa.gov>
Message-ID: <20060621052253.DITG21285.rrcs-fep-10.hrndva.rr.com@syncirakklap>

John,
I was able to resolve the installation problem using many suggestions and
references by others.
For Redhat's RHEL3:
1) here are the stats from my server:
> cat /etc/redhat-release
Red Hat Enterprise Linux ES release 3 (Taroon Update 7)

> rpm -qa | grep httpd
httpd-devel-2.0.46-56.ent
httpd-2.0.46-56.ent
redhat-config-httpd-1.1.0-4.30.2

> rpm -qa | grep mod_python
mod_python-3.0.3-5.ent
===NOTE: if this message does not show, either it means that mod_python is
not installed, or there is an installation error or it was installed using
"make install"

2) test if mod_python is being loaded or not.  Assumption is that there are
no error message in the log file or to the screen when restarting the apache
server (httpd).
> su root
> /sbin/service httpd stop
> httpd -X -e DEBUG
===NOTE: This command will list all modules being loaded and any error or
warnings.  Look to make sure one entry in the list that scrolls by is:
"[Tue Jun 20 18:58:53 2006] [debug] mod_so.c(290): loaded module
python_module"

2a) use graham's test.  Launch python, and in interactive mode enter
import mod_python.psp
the return message will give you a good clue if mod_python is loaded and
operatin.

3) once python executables have been resolved. Then do the following from
gnome or kde desktop:
> su root
> rpm -e mod_python
===NOTE: removes installed mod_python.
> up2date mod_python
===NOTE: this command will search RHN for the latest version of mod_python
for your server release.  It will also resolve dependencies required for
this application.  For me "mod_python 3.0.3-5.ent" was installed to work
with "Python 2.2.3 (#1, Feb  6 2006, 10:44:13)"

> cd /etc/httpd/conf.d

> vi python.conf
==NOTE: add the following.  I have had the most difficulty in this area.
Mostly because of my lack of understanding the details of the directives and
its syntax.  To start, cut and paste these into python.conf.  change the
path as reqired.  Must be absolute reference.
------------ cut& paste into python.conf ------------------
LoadModule python_module modules/mod_python.so

Alias /ModPython "/home/karl/projects/Mod_Python "

<Directory /home/karl/projects/Mod_Python>
  AllowOverride FileInfo
</Directory>
------------ end cut& paste into python.conf ------------------
===NOTE: alias makes url reference -> http://localhost/ModPython/mptest.py
===NOTE: the directory directive allows .htaccess to be read and executed in
"/home/karl/projects/Mod_Python"

> cd /home/karl/projects/Mod_Python

> vi .htaccess
===NOTE: cut and paste the following
------------ cut& paste into .htaccess ------------------
  AddHandler python-program .py
  PythonHandler mptest
  PythonDebug On
------------ end cut& paste into .htaccess ------------------

> /sbin/service httpd restart

4) create mptest.py in "/home/karl/projects/Mod_Python" directory as in the
installation/test section of mod_python users manual or graham's writeup.


Please note, graham's write up at
http://www.dscpl.com.au/articles/modpython-001.html is very useful.  In
Redhats rhel3, the log file does not contain the message references.  This
may be due to either version of mod_python or apache server that is
available from redhat.  Otherwise very useful.

Hope this helps.  Please email if you have questions.
Karl

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of John Cartwright
Sent: Friday, June 16, 2006 2:40 PM
To: Karl Kobata
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Newbie - problem running mptest.py

Hi Karl,

I'm having precisely the same problems in the same environment, but have
not found an answer. Please keep me posted if you sort it out and I'll
do likewise.

-- john


Karl Kobata wrote:
>
> ------------------------------------------------------------------------
>
> *From:* Karl Kobata [mailto:karl.kobata@syncira.com]
> *Sent:* Tuesday, February 28, 2006 3:00 PM
> *To:* 'mod_python@modpython.org'
> *Subject:* Newbie - problem running mptest.py
>
> I am new to mod_python.
> ------------------------------------------------------------------------


From karl.kobata at syncira.com  Wed Jun 21 02:12:50 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Wed Jun 21 02:13:15 2006
Subject: [mod_python] Possible partial answer to Windows config problems
In-Reply-To: <006401c693b9$7e61f6a0$0301a8c0@uberbox>
Message-ID: <20060621061257.DPNB21285.rrcs-fep-10.hrndva.rr.com@syncirakklap>

Thanks all.  The input was very helpful.  I was able to use the information
to get mod_python to work on my laptop using portablewebap.

Thanks

karl

 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Lee Brown
Sent: Monday, June 19, 2006 9:01 AM
To: 'Graham Dumpleton'; 'ian McDowall'
Cc: mod_python@modpython.org
Subject: RE: [mod_python] Possible partial answer to Windows config problems

 

Greetings!

 

Just to clear up an ambiguity and to augment what Ian and Graham wrote:

 

Yes, both the Directory directive and the Alias directive must be absolute
Windows paths including a drive letter.  However, they must be a subpath of
of DocumentRoot (which is not necessarily a subpath of Apache root) OR they
must be aliased into the document root with the Alias directive.  For
example, given an Apache server installed at "C:/Program Files/Apache
Group/Apache2" and a web site located at "C:\webdev\sites\crashtest" the
following Directory directives are valid for the following VirtualHost
snippet:

 

<VirtualHost *:80>

 

    ServerName "crashtest.leebrown.org"
    DocumentRoot "C:/webdev/sites/crashtest/content"

        AddHandler mod_python .py

 

    <Directory "C:/webdev/sites/crashtest/content">

        PythonHandler content_handler
    </Directory>

 

    Alias /error "C:/webdev/sites/crashtest/error"

 

    <Directory "C:/webdev/sites/crashtest/error">

        PythonHandler error_handler

    </Directory>

 

</VirtualHost>

 

(Now one would think that after declaring "/error" as an Alias you could
then refer to "/error" in the Directory directive, but Noooooooo.......)

 

I prefer to set things up in the Vhost instead of using htaccess files, but
I'm just weird like that.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

 

 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Graham Dumpleton
Sent: Saturday, June 17, 2006 7:48 PM
To: ian McDowall
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Possible partial answer to Windows config problems

 

On 18/06/2006, at 7:06 AM, ian McDowall wrote:





There have been questions from Karl Kobata and John Cartwright and I may
have a partial answer.

In particular, one of the problems that I spent a little time over was the
use of the Apache <Directory> tag to control mod_python configuration.

The example in the mod_python tutorial is slightly ambiguous, particularly
as it is written from a Unix / Linux perspective. I suspect that this is
bog-standard Apache configuration rather than anything peculiar to
mod_python but I guess that people are coming fairly new to both at the same
time (as was I).

The directory in the <Directory> tag has to be an absolute Windows directory
that should include a drive letter. This will have to map to a directory
under the Apache root directory. I was expecting the reference to be
relative to the Apache root directory.

For example, suppose that you have an Apache configuration with the Apache
root set to E:\ApacheRoot and you have a sub-directory testdir in which you
have placed mod_python sources. Then you can refer to URIs in this directory
from the browser as http://yourdomain/testdir/test.py if you have a set of
Apache directives such as the folliowing
<Directory "E:\ApacheRoot\testdir"> 

AddHandler mod_python .py

PythonHandler mptest

PythonDebug On 

</Directory>

In this case, my confusion was to assume that I would have a tag as follows:
<Directory "/testdir"> 
...

BTW, if you are really struggling with set-up, I got some initial progress
by omitting the <Directory> tag and just having the AddHandler etc. at the
root level. Of course, this is not wise for a real implementaton but, if you
are trying to find out if your mod_python installation is OK then it gave me
some information. of course, I had to put the .py file in the Python Lib
directory in the installation so it could be imported but that did get me
some basics working.

I hope that this helps. if it is misleading or irrelevant then please ignore
it and accept my apologies.

 

The best way to avoid the confusion is not to set it up in the main Apache
configuration

file but do it in a specific directory within a .htaccess file. That way the
whole issue of

how to set Directory directive goes away. Where mod_python is already
installed and

you just want to start playing, it also avoids the whole issue of pestering
some administrator

to fiddle with the main Apache configuration unnecessarily. This is why the
instructions

I post a reference to occasionally use a .htaccess file. It is generally
easier to get going

and shows more problems in setup more quickly and more easily.

 

Those alternate instructions again are:

 

http://www.dscpl.com.au/articles/modpython-001.html

 

Graham

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060620/2e8d2556/attachment.html
From rsynnott at gmail.com  Wed Jun 21 07:31:27 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Wed Jun 21 07:31:31 2006
Subject: [mod_python] Unicode Oddity
Message-ID: <24f203480606210431l1491bb36w207e0c88fe28a0fd@mail.gmail.com>

I'm having a bit of trouble with Unicode. On a linux system, python 2.4.2,
mod_python 3.2.8, inputting and outputting unicode strings to and from a
mysql database works perfectly, with no particular extra work except
use_unicode=True in the mysqldb parameters. Also, unicode values from a .py
file can be outputted happily.

However, when I try the same software on a MacOS X machine, same versions of
python and mod_python, I get 'UnicodeEncodeError: 'ascii' codec can't encode
characters in...'

Is there anything special I should be doing to handle unicode? Any idea why
I'm seeing this error?
Thanks
Rob
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060621/296ce0aa/attachment.html
From mvanaswegen at gmail.com  Wed Jun 21 10:23:07 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Wed Jun 21 10:25:49 2006
Subject: [mod_python] File Sessions security problem?
Message-ID: <ffa39deb0606210723ifbd5027t1324fc1b5d86cecc@mail.gmail.com>

Hi

I have been playing with mod_python (ubuntu std, breezy build) and I
noticed that the sessions db is stored in the /tmp dir with
permissions that will permit any user to read the file. I'm not to
happy with this since I store some very sensitive info in the session
object.

It's easy to chmod it, but perhaps it would be better to create the
file with more restrictive permissions?

Marinus
From deron.meranda at gmail.com  Wed Jun 21 10:42:19 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Wed Jun 21 10:42:22 2006
Subject: [mod_python] Unicode Oddity
In-Reply-To: <24f203480606210431l1491bb36w207e0c88fe28a0fd@mail.gmail.com>
References: <24f203480606210431l1491bb36w207e0c88fe28a0fd@mail.gmail.com>
Message-ID: <5c06fa770606210742sef1ea7an2fb7a5fb88e7b223@mail.gmail.com>

On 6/21/06, Robert Synnott <rsynnott@gmail.com> wrote:
> I'm having a bit of trouble with Unicode. On a linux system, python 2.4.2,
> mod_python 3.2.8, inputting and outputting unicode strings to and from a
> mysql database works perfectly, with no particular extra work except
> use_unicode=True in the mysqldb parameters. Also, unicode values from a .py
> file can be outputted happily.
>
> However, when I try the same software on a MacOS X machine, same versions of
> python and mod_python, I get 'UnicodeEncodeError: 'ascii' codec can't encode
> characters in...'
>
> Is there anything special I should be doing to handle unicode? Any idea why
> I'm seeing this error?

When you say "output", what you mean is that you're writing a
sequence of bytes to the HTTP output stream.  You can't actually
write characters to it.  So when you have a Python Unicode string,
it must convert it to a byte string to output it.  (This is actually one
of the type warts in Python, and the python dev list is theorizing
about how to fix it, maybe by unifying 'str' and 'unicode' into just
a single character string type, and introducing a real byte-string
type...but that's speculation and doesn't help you now.)

Your problem is probably due to the "default" character set of your
Python installation--which is what is used to convert Unicode strings
to byte strings if you don't explicitly do it yourself.  In particular
it's the setencoding() function in the site.py file, which then calls
sys.setdefaultencoding().  It's probably defaulting to 'ascii', which
is the Python factory-default encoding.

The only fixes are to change the site.py (you can't just call those
functions afterwards, since they are removed from all namespaces
immediately after Python initialization).  Or, you can convert
strings from one codec to another in a more explicit manner, such as:

   bytes = u'abc\u2012xyz'.encode('utf8')

Search this list, there have been several Unicode discussions
on it.
-- 
Deron Meranda
From listspam at flowtheory.net  Wed Jun 21 11:54:45 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Wed Jun 21 11:54:57 2006
Subject: [mod_python] Unicode Oddity
In-Reply-To: <24f203480606210431l1491bb36w207e0c88fe28a0fd@mail.gmail.com>
References: <24f203480606210431l1491bb36w207e0c88fe28a0fd@mail.gmail.com>
Message-ID: <1150905286.30297.0.camel@localhost.localdomain>

For the love of God, please make sure you read:

http://www.joelonsoftware.com/articles/Unicode.html

and (shameless plug):

http://starboard.flowtheory.net/blog/?q=node/206

-jag

On Wed, 2006-06-21 at 12:31 +0100, Robert Synnott wrote:
> I'm having a bit of trouble with Unicode. On a linux system, python
> 2.4.2, mod_python 3.2.8, inputting and outputting unicode strings to
> and from a mysql database works perfectly, with no particular extra
> work except use_unicode=True in the mysqldb parameters. Also, unicode
> values from a .py file can be outputted happily. 
> 
> However, when I try the same software on a MacOS X machine, same
> versions of python and mod_python, I get 'UnicodeEncodeError: 'ascii'
> codec can't encode characters in...'
> 
> Is there anything special I should be doing to handle unicode? Any
> idea why I'm seeing this error? 
> Thanks
> Rob
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Wed Jun 21 15:16:07 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Wed Jun 21 15:15:40 2006
Subject: [mod_python] File Sessions security problem?
In-Reply-To: <ffa39deb0606210723ifbd5027t1324fc1b5d86cecc@mail.gmail.com>
References: <ffa39deb0606210723ifbd5027t1324fc1b5d86cecc@mail.gmail.com>
Message-ID: <44999AF7.2020504@jgassociates.ca>

marinus van aswegen wrote:
> Hi
> 
> I have been playing with mod_python (ubuntu std, breezy build) and I
> noticed that the sessions db is stored in the /tmp dir with
> permissions that will permit any user to read the file. I'm not to
> happy with this since I store some very sensitive info in the session
> object.
> 
> It's easy to chmod it, but perhaps it would be better to create the
> file with more restrictive permissions?

What version of mod_python are you using? Version 3.2.8 allows you to 
specify the the path and filename. Check the docs.

Jim

From grahamd at dscpl.com.au  Wed Jun 21 18:31:18 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 21 18:31:26 2006
Subject: [mod_python] File Sessions security problem?
Message-ID: <1150929078.380@dscpl.user.openhosting.com>

marinus van aswegen wrote ..
> Hi
> 
> I have been playing with mod_python (ubuntu std, breezy build) and I
> noticed that the sessions db is stored in the /tmp dir with
> permissions that will permit any user to read the file. I'm not to
> happy with this since I store some very sensitive info in the session
> object.
> 
> It's easy to chmod it, but perhaps it would be better to create the
> file with more restrictive permissions?

The FileSession code uses file() to create the file. As such the file
permissions are dictated by the umask of the user that Apache runs as.

Unfortunately file() doesn't allow a more constrained umask to be
provided when creating a file and calling os.chmod() after the fact
still allows a window, albeit small, where things could be done with the
file.

Thus, the code should perhaps instead us os.open(). Thus something like:

  os.open(filename, os.O_RDWR | os.O_CREAT, 0600)

But then that returns a file descriptor ID and not a file like object
and it can't just be passed straight into cPickle.dump(), thus before
doing that, probably need to send it through os.fdopen() to create
a file like object.

Anyway, doing this would allow one to constrain the umask.

Comments??

Graham
From mvanaswegen at gmail.com  Thu Jun 22 05:31:24 2006
From: mvanaswegen at gmail.com (marinus van aswegen)
Date: Thu Jun 22 05:31:28 2006
Subject: [mod_python] CAPCHA
Message-ID: <ffa39deb0606220231m6aeb40e2l1cc96ff1a933e5c3@mail.gmail.com>

Hi All

I'm about to strat working on a CAPCHA module for mod_python using
libimagemagick.
Before I reinvent the wheel and anyone tried this yet?

Marinus
From jpg at jgassociates.ca  Thu Jun 22 08:47:54 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Jun 22 08:47:30 2006
Subject: [mod_python] File Sessions security problem?
In-Reply-To: <1150929078.380@dscpl.user.openhosting.com>
References: <1150929078.380@dscpl.user.openhosting.com>
Message-ID: <449A917A.9060405@jgassociates.ca>

Graham Dumpleton wrote:
> marinus van aswegen wrote ..
>> Hi
>>
>> I have been playing with mod_python (ubuntu std, breezy build) and I
>> noticed that the sessions db is stored in the /tmp dir with
>> permissions that will permit any user to read the file. I'm not to
>> happy with this since I store some very sensitive info in the session
>> object.
>>
>> It's easy to chmod it, but perhaps it would be better to create the
>> file with more restrictive permissions?
> 
> The FileSession code uses file() to create the file. As such the file
> permissions are dictated by the umask of the user that Apache runs as.
> 
> Unfortunately file() doesn't allow a more constrained umask to be
> provided when creating a file and calling os.chmod() after the fact
> still allows a window, albeit small, where things could be done with the
> file.
> 
> Thus, the code should perhaps instead us os.open(). Thus something like:
> 
>   os.open(filename, os.O_RDWR | os.O_CREAT, 0600)
> 
> But then that returns a file descriptor ID and not a file like object
> and it can't just be passed straight into cPickle.dump(), thus before
> doing that, probably need to send it through os.fdopen() to create
> a file like object.
> 
> Anyway, doing this would allow one to constrain the umask.

I think there may be some confusion here. Is Marinus referring to 
FileSession files, or the db file created by DbmSession?

In the case of FileSession, the individual files are arranged in a 
directory structure under the main session directory (mp_sess by 
default). Mp_sess and its subdirectories are created with mode 0750, so 
although the individual files may be world readable their parent 
directories are not.

The dbm file created by DbmSession is indeed created world readable. I 
actually thought this had been fixed early in 3.2, but the code does not 
lie - it's still using the default anydbm default mode. I'll fix this 
unless anyone can see a reason why we are currently not passing the file 
creation mode to the dbm open() call.

As a temporary workaround and you are using mod_python 3.2.8, you could use:

   PythonOption session_directory /path/to/some/directory

to specify the location where the db file is created, and set the 
permissions of /path/to/some/directory to 0700.

Jim
From deron.meranda at gmail.com  Thu Jun 22 10:12:41 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Thu Jun 22 10:12:46 2006
Subject: [mod_python] CAPCHA
In-Reply-To: <ffa39deb0606220231m6aeb40e2l1cc96ff1a933e5c3@mail.gmail.com>
References: <ffa39deb0606220231m6aeb40e2l1cc96ff1a933e5c3@mail.gmail.com>
Message-ID: <5c06fa770606220712w3347b3fahca3aad2e23e4a09b@mail.gmail.com>

If you're talking about a visual captcha, yes, I've developed several
before.  However I used PIL (Python Imaging Library
<http://www.pythonware.com/products/pil/>), since it's a native
Python module and you can manitpulate the images directly in memory
without having to pass things around in files.  I even serve up the
images directly from mod_python; so at no time do I mess with
actual files.

Note that developing captchas which are secure is much harder
than you may think.  Developing captchas which are usable even
more so.  There are many things you can do wrong that leave
them vulnerable without even considering how you create the
images.  Read up on them <http://en.wikipedia.org/wiki/Captcha>
including the references linked from there.  Also like most cryptographic
techniques, pay attention to the true entropy of your random number
sources.  The Wikipedia article also contains some pointers to some
Python implementations that you may or may not want to consider.

Also, just so you're aware, captchas are bad for accesibility.
So consider your audience/users too.
-- 
Deron Meranda
From sanja at bougakov.com  Fri Jun 23 06:00:40 2006
From: sanja at bougakov.com (sanja@bougakov.com)
Date: Fri Jun 23 05:59:21 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely on registry
	key?
Message-ID: <8792.195.16.47.253.1151056840.squirrel@www.bougakov.com>

Hello,

I've installed mod_python/2.7.6 and Python/2.4.3 on Apache 1.3.36 (Windows).

"Hello, World!" example works fine. My httpd.conf contains:

===cut here===
SetEnv PYTHONHOME "c:/python24/"
SetEnv PYTHONPATH
"C:/Python24/Lib;C:/Python24/Lib/mod_python;C:/Python24/DLLs;C:/Python24/Lib/lib-tk"
LoadModule python_module c:/python24/mod_python.dll

<VirtualHost         127.0.0.1>
..skipped...
<Directory "c:/Apache_Swissknife/Websites/localhost01/html/python/">
AddHandler python-program .py
PythonHandler test
PythonDebug on
</Directory>
===cut here===

(note that environment variables are set using Apache's SetEnv directives).

The problem is that mod_python doesn't look at these env. variables. It
checks only HKCU\Software\Python registry hive. If I remove it and restart
Apache, I get "error 500".

I am not happy of this behaviour because I need pocket version of Apache
and mod_python on my USB drive and do not want any modifications to the
Registry. Mod_perl works this way, why mod_python doesn't? Is there any
workaround?

Yours,
Sanja

From nogradi at gmail.com  Fri Jun 23 16:41:56 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Fri Jun 23 16:42:02 2006
Subject: [mod_python] return type of parse method of class SignedCookie
Message-ID: <5f56302b0606231341n6bd69b9cj7ce82d179151ed4e@mail.gmail.com>

I'm slightly confused about the return type of the parse method of
SignedCookie and the way one should check if the cookie was signed
correctly. Cookie.py defines the parse method as

class SignedCookie(Cookie):
    ....
    def parse(Class, s, secret):

        dict = _parse_cookie(s, Class)
        ....
        return dict

and the function _parse_cookie is defined something like

def _parse_cookie(str, Class):
    ....
    result = {}
    ....
    return result

so it seems to me that the return type of the parse method of
SignedCookie is dict so I don't really know what to make of the docs
saying

  Note: Always check the types of objects returned by
SignedCookie.parse().If it is an instance
  of Cookie (as opposed to SignedCookie), the signature verification has failed:

  # assume spam is supposed to be a signed cookie
  if type(spam) is not Cookie.SignedCookie:
      # do something that indicates cookie isn't signed correctly

Isn't the return type always dict and never Cookie.SignedCookie? Or am
I misunderstanding something somewhere?
From jpg at jgassociates.ca  Fri Jun 23 17:22:22 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Fri Jun 23 17:20:39 2006
Subject: [mod_python] return type of parse method of class SignedCookie
In-Reply-To: <5f56302b0606231341n6bd69b9cj7ce82d179151ed4e@mail.gmail.com>
References: <5f56302b0606231341n6bd69b9cj7ce82d179151ed4e@mail.gmail.com>
Message-ID: <449C5B8E.6050107@jgassociates.ca>

Daniel Nogradi wrote:
> I'm slightly confused about the return type of the parse method of
> SignedCookie and the way one should check if the cookie was signed
> correctly. Cookie.py defines the parse method as
> 
> class SignedCookie(Cookie):
>    ....
>    def parse(Class, s, secret):
> 
>        dict = _parse_cookie(s, Class)
>        ....
>        return dict
> 
> and the function _parse_cookie is defined something like
> 
> def _parse_cookie(str, Class):
>    ....
>    result = {}
>    ....
>    return result
> 
> so it seems to me that the return type of the parse method of
> SignedCookie is dict so I don't really know what to make of the docs
> saying
> 
>  Note: Always check the types of objects returned by
> SignedCookie.parse().If it is an instance
>  of Cookie (as opposed to SignedCookie), the signature verification has
> failed:
> 
>  # assume spam is supposed to be a signed cookie
>  if type(spam) is not Cookie.SignedCookie:
>      # do something that indicates cookie isn't signed correctly
> 
> Isn't the return type always dict and never Cookie.SignedCookie? Or am
> I misunderstanding something somewhere?

The documentation for SignedCookie.parse is a little misleading (or
maybe it's just completely wrong). Take a look at the description for
Cookie.parse() which is a little clearer:

"""
parse(string)

This method returns a dictionary of Cookie instances, not a single
Cookie instance.

Here is an example of getting a single Cookie instance:

mycookies = Cookie.parse("spam=eggs; expires=Sat, 14-Jun-2003 02:42:36 GMT")
spamcookie = mycookies["spam"]
"""

So for SignedCookie, you would test spamcookie rather that mycookies.


Jim
From grahamd at dscpl.com.au  Sat Jun 24 02:39:06 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jun 24 02:39:21 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely on
	registry key?
In-Reply-To: <8792.195.16.47.253.1151056840.squirrel@www.bougakov.com>
References: <8792.195.16.47.253.1151056840.squirrel@www.bougakov.com>
Message-ID: <BA23D91E-0DCE-4801-9EFD-BB40F9BF9133@dscpl.com.au>

The SetEnv directive only affects environment variables inherited by
CGI scripts. It does not affect the environment of Apache itself and
thus does not affect the environment of mod_python. In order to add
extra directories into the Python module search path, use the
PythonPath directive as documented in the mod_python documentation.

Graham

On 23/06/2006, at 8:00 PM, sanja@bougakov.com wrote:

> Hello,
>
> I've installed mod_python/2.7.6 and Python/2.4.3 on Apache 1.3.36  
> (Windows).
>
> "Hello, World!" example works fine. My httpd.conf contains:
>
> ===cut here===
> SetEnv PYTHONHOME "c:/python24/"
> SetEnv PYTHONPATH
> "C:/Python24/Lib;C:/Python24/Lib/mod_python;C:/Python24/DLLs;C:/ 
> Python24/Lib/lib-tk"
> LoadModule python_module c:/python24/mod_python.dll
>
> <VirtualHost         127.0.0.1>
> ..skipped...
> <Directory "c:/Apache_Swissknife/Websites/localhost01/html/python/">
> AddHandler python-program .py
> PythonHandler test
> PythonDebug on
> </Directory>
> ===cut here===
>
> (note that environment variables are set using Apache's SetEnv  
> directives).
>
> The problem is that mod_python doesn't look at these env.  
> variables. It
> checks only HKCU\Software\Python registry hive. If I remove it and  
> restart
> Apache, I get "error 500".
>
> I am not happy of this behaviour because I need pocket version of  
> Apache
> and mod_python on my USB drive and do not want any modifications to  
> the
> Registry. Mod_perl works this way, why mod_python doesn't? Is there  
> any
> workaround?
>
> Yours,
> Sanja
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nogradi at gmail.com  Sat Jun 24 04:39:46 2006
From: nogradi at gmail.com (Daniel Nogradi)
Date: Sat Jun 24 04:40:04 2006
Subject: [mod_python] Re: return type of parse method of class SignedCookie
In-Reply-To: <449C5B8E.6050107@jgassociates.ca>
References: <5f56302b0606231341n6bd69b9cj7ce82d179151ed4e@mail.gmail.com>
	<449C5B8E.6050107@jgassociates.ca>
Message-ID: <5f56302b0606240139q5a6dd08g6a91c0aeafb59dc9@mail.gmail.com>

> > I'm slightly confused about the return type of the parse method of
> > SignedCookie and the way one should check if the cookie was signed
> > correctly. Cookie.py defines the parse method as
> >
> > class SignedCookie(Cookie):
> >    ....
> >    def parse(Class, s, secret):
> >
> >        dict = _parse_cookie(s, Class)
> >        ....
> >        return dict
> >
> > and the function _parse_cookie is defined something like
> >
> > def _parse_cookie(str, Class):
> >    ....
> >    result = {}
> >    ....
> >    return result
> >
> > so it seems to me that the return type of the parse method of
> > SignedCookie is dict so I don't really know what to make of the docs
> > saying
> >
> >  Note: Always check the types of objects returned by
> > SignedCookie.parse().If it is an instance
> >  of Cookie (as opposed to SignedCookie), the signature verification has
> > failed:
> >
> >  # assume spam is supposed to be a signed cookie
> >  if type(spam) is not Cookie.SignedCookie:
> >      # do something that indicates cookie isn't signed correctly
> >
> > Isn't the return type always dict and never Cookie.SignedCookie? Or am
> > I misunderstanding something somewhere?
>
> The documentation for SignedCookie.parse is a little misleading (or
> maybe it's just completely wrong). Take a look at the description for
> Cookie.parse() which is a little clearer:
>
> """
> parse(string)
>
> This method returns a dictionary of Cookie instances, not a single
> Cookie instance.
>
> Here is an example of getting a single Cookie instance:
>
> mycookies = Cookie.parse("spam=eggs; expires=Sat, 14-Jun-2003 02:42:36 GMT")
> spamcookie = mycookies["spam"]
> """
>
> So for SignedCookie, you would test spamcookie rather that mycookies.

Thanks a lot Jim, in this way it makes perfect sense.

Daniel
From JWang at fhsu.edu  Sat Jun 24 12:09:23 2006
From: JWang at fhsu.edu (JWang@fhsu.edu)
Date: Sat Jun 24 12:10:08 2006
Subject: [mod_python] A newbie question
Message-ID: <OF81A0E80C.5CDC43C3-ON86257197.00585445-86257197.0058BDA0@tiger.fhsu.edu>

Hi,
I attempted to install Apache 2.0.54 (or Apache 2.2), python 2.4 and 
mod_python 3.2.8 on AS 4 from source codes, but I failed. The mod_python 
does not generate mod_python.so. Does anyone  run into the same problem 
and have a solution to fix it? Thanks! JW
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060624/fd686827/attachment.html
From john.keyes at secantus.com  Sat Jun 24 12:26:40 2006
From: john.keyes at secantus.com (John Keyes)
Date: Sat Jun 24 12:26:43 2006
Subject: [mod_python] A newbie question
In-Reply-To: <OF81A0E80C.5CDC43C3-ON86257197.00585445-86257197.0058BDA0@tiger.fhsu.edu>
References: <OF81A0E80C.5CDC43C3-ON86257197.00585445-86257197.0058BDA0@tiger.fhsu.edu>
Message-ID: <449D67C0.5060909@secantus.com>

Does the build run successfully for you?  If you include
the build output in an email someone may be able to help
you out.

-John K

JWang@fhsu.edu wrote:
> 
> Hi,
> I attempted to install Apache 2.0.54 (or Apache 2.2), python 2.4 and 
>  mod_python 3.2.8 on AS 4 from source codes, but I failed. The 
> mod_python does not generate mod_python.so. Does anyone  run into the 
> same problem and have a solution to fix it? Thanks! JW
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Sat Jun 24 19:35:03 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Jun 24 19:35:21 2006
Subject: [mod_python] A newbie question
In-Reply-To: <OF81A0E80C.5CDC43C3-ON86257197.00585445-86257197.0058BDA0@tiger.fhsu.edu>
References: <OF81A0E80C.5CDC43C3-ON86257197.00585445-86257197.0058BDA0@tiger.fhsu.edu>
Message-ID: <3E73F789-617A-4706-B9E2-DAA219ED5633@dscpl.com.au>


On 25/06/2006, at 2:09 AM, JWang@fhsu.edu wrote:

>
> Hi,
> I attempted to install Apache 2.0.54 (or Apache 2.2), python 2.4  
> and  mod_python 3.2.8 on AS 4 from source codes, but I failed. The  
> mod_python does not generate mod_python.so. Does anyone  run into  
> the same problem and have a solution to fix it? Thanks! JW

You can't use Apache 2.2 for a start, can only use Apache 2.0 at the  
moment.

What command line did you use when you ran "configure" to make sure it
picked up correct "apxs" and "python" for versions you wanted etc? Is  
the
Python you want to use the first one found in your PATH? If Python  
was installed
from an RPM, did you install the corresponding "dev" RPM for it. Also  
pardon my
ignorance, but what is "AS 4" referring to?

More information is required about what errors may have been displayed
when "configure" was run and when main build was run. Check through your
output carefully looking for such errors and warnings.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060625/636b2635/attachment.html
From b3nder at yandex.ru  Sun Jun 25 08:10:57 2006
From: b3nder at yandex.ru (b3nder)
Date: Sun Jun 25 08:04:03 2006
Subject: [mod_python] mod_python and unicode
Message-ID: <449E7D51.4040904@yandex.ru>

Hi, list.

Tell me please how to use utf-8 in ouput?

from mod_python         import apache
import codecs
import os


def handler(req):
    req.content_type = 'text/plain; charset=utf-8'
    req.send_http_header()
    file = codecs.open(
        os.path.dirname(__file__) + "/myfile.txt", "r", "utf-8")
    a = file.read()
    req.write(a)

    return apache.OK


gives error UnicodeEncodeError: 'ascii' codec can't encode
characters in position 0-5: ordinal not in range(128)

Thanks.
From grahamd at dscpl.com.au  Sun Jun 25 08:11:09 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 25 08:11:59 2006
Subject: [mod_python] mod_python and unicode
In-Reply-To: <449E7D51.4040904@yandex.ru>
References: <449E7D51.4040904@yandex.ru>
Message-ID: <3ED8B466-3486-4D5C-A430-B3BE59F2EB07@dscpl.com.au>


On 25/06/2006, at 10:10 PM, b3nder wrote:

> Hi, list.
>
> Tell me please how to use utf-8 in ouput?
>
> from mod_python         import apache
> import codecs
> import os
>
>
> def handler(req):
>     req.content_type = 'text/plain; charset=utf-8'
>     req.send_http_header()
>     file = codecs.open(
>         os.path.dirname(__file__) + "/myfile.txt", "r", "utf-8")
>     a = file.read()
>     req.write(a)
>
>     return apache.OK
>
>
> gives error UnicodeEncodeError: 'ascii' codec can't encode
> characters in position 0-5: ordinal not in range(128)

Explicitly convert the Unicode string to a byte string before writing  
it out.

   req.write(a.encode('utf-8'))

Play with it at Python command line prompt by doing:

   >>> a=u"\u1234"
   >>> a.encode('utf-8')
   '\xe1\x88\xb4'

Graham
From nicolas at lehuen.com  Sun Jun 25 09:37:16 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Sun Jun 25 09:37:22 2006
Subject: [mod_python] mod_python and unicode
In-Reply-To: <449E7D51.4040904@yandex.ru>
References: <449E7D51.4040904@yandex.ru>
Message-ID: <c298f2d70606250637q6d826e32pb4f8475bf0722137@mail.gmail.com>

Hi,

I suppose you did it as an example, but if you've got a file encoded
in UTF-8, you don't need to decode it and reencode it. Just send the
bytes to the client, making sure that the Content-Type header mentions
that UTF-8 is used :

def handler(req):
    req.content_type = 'text/plain; charset=utf-8'
    req.sendfile(os.path.dirname(__file__) + "/myfile.txt")

Using sendfile is advertised to be the most efficient way to send a
file to the client.

Regards,
Nicolas

2006/6/25, b3nder <b3nder@yandex.ru>:
> Hi, list.
>
> Tell me please how to use utf-8 in ouput?
>
> from mod_python         import apache
> import codecs
> import os
>
>
> def handler(req):
>     req.content_type = 'text/plain; charset=utf-8'
>     req.send_http_header()
>     file = codecs.open(
>         os.path.dirname(__file__) + "/myfile.txt", "r", "utf-8")
>     a = file.read()
>     req.write(a)
>
>     return apache.OK
>
>
> gives error UnicodeEncodeError: 'ascii' codec can't encode
> characters in position 0-5: ordinal not in range(128)
>
> Thanks.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From rsynnott at gmail.com  Sun Jun 25 10:16:12 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Sun Jun 25 10:16:45 2006
Subject: [mod_python] mod_python and unicode
In-Reply-To: <c298f2d70606250637q6d826e32pb4f8475bf0722137@mail.gmail.com>
References: <449E7D51.4040904@yandex.ru>
	<c298f2d70606250637q6d826e32pb4f8475bf0722137@mail.gmail.com>
Message-ID: <24f203480606250716g2b48dc27i2fa1e148bd4c70f7@mail.gmail.com>

Alternatively, as a disgusting hack, change python's default encoding...
From listspam at flowtheory.net  Sun Jun 25 10:16:48 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Sun Jun 25 10:17:04 2006
Subject: [mod_python] mod_python and unicode
In-Reply-To: <449E7D51.4040904@yandex.ru>
References: <449E7D51.4040904@yandex.ru>
Message-ID: <fb3f046e79c9c898cc436ef5da59a3ab@flowtheory.net>

I'll repeat my previous post...

http://mailman.modpython.org/pipermail/mod_python/2006-June/021447.html

For the love of God, please make sure you read:

http://www.joelonsoftware.com/articles/Unicode.html

and (shameless plug):

http://starboard.flowtheory.net/blog/?q=node/206

-jag


On Jun 25, 2006, at 8:10 AM, b3nder wrote:

> Hi, list.
>
> Tell me please how to use utf-8 in ouput?
>
> from mod_python         import apache
> import codecs
> import os
>
>
> def handler(req):
>     req.content_type = 'text/plain; charset=utf-8'
>     req.send_http_header()
>     file = codecs.open(
>         os.path.dirname(__file__) + "/myfile.txt", "r", "utf-8")
>     a = file.read()
>     req.write(a)
>
>     return apache.OK
>
>
> gives error UnicodeEncodeError: 'ascii' codec can't encode
> characters in position 0-5: ordinal not in range(128)
>
> Thanks.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jpg at jgassociates.ca  Sun Jun 25 10:26:32 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jun 25 10:26:34 2006
Subject: [mod_python] mod_python and unicode
In-Reply-To: <fb3f046e79c9c898cc436ef5da59a3ab@flowtheory.net>
References: <449E7D51.4040904@yandex.ru>
	<fb3f046e79c9c898cc436ef5da59a3ab@flowtheory.net>
Message-ID: <449E9D18.2080609@jgassociates.ca>

Joshua Ginsberg wrote:
> I'll repeat my previous post...
> 
> http://mailman.modpython.org/pipermail/mod_python/2006-June/021447.html
> 
> For the love of God, please make sure you read:
> 
> http://www.joelonsoftware.com/articles/Unicode.html

And I did, and it was good. :)

> and (shameless plug):
> 
> http://starboard.flowtheory.net/blog/?q=node/206

I'll read this one with my morning coffee.

Jim
From karl.kobata at syncira.com  Sun Jun 25 10:42:03 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Sun Jun 25 10:42:19 2006
Subject: [mod_python] A newbie question
In-Reply-To: <OF81A0E80C.5CDC43C3-ON86257197.00585445-86257197.0058BDA0@tiger.fhsu.edu>
Message-ID: <20060625144213.OYYR20587.rrcs-fep-12.hrndva.rr.com@syncirakklap>

Initial thought.  To compile and install 3.2.8, I believe needs flex 2.5.33
or newer.  RHN has flex 2.5.4.  you will need to make sure that this is
current.  I would suggest when using the .configure, that options for flex,
python, and apxs be fully specified to insure that you know which versions
have be used to build mod_python.

 

It may be easier to start with what RHN provides for their servers.  ES
packages should work on AS.  The latest released for ES is python 2.3.4-14.x
and mod_python 3.1.3-5.x.

- rename or move flex, and python binaries if applicable from /usr/local/bin
.  if the default paths have not been modified, this directory will be
searched before /usr/bin.

- install python first - "up2date python" - if up2date fails, one strong
possibilities is that the python it files does not have the correct scripts
in the site-packages directory under the pythonx.x directory.  Next, using
this command will also resolve any dependencies needed to make python work.
All should be done as root.

- next install mod_python - "up2date python" - this should address
installing and resolving dependencies.

- check install and version

- "python -V" - see version above

- "which python" - should show "/usr/bin/python"

- check if mod_python.so installed in "/etc/httpd/modules"

- add the required changes into the .conf file -
/etc/httpd/conf.d/python.conf.

            - add the load directive for mod_python.so

            - test if the server will read the .so file correctly

                        - stop the server - "/sbin/service httpd stop"

                        - execute "/usr/sbin/httpd -X -e DEBUG - the list of
.so files loading should scroll by, mod_python.so should be in this list.

- assuming no errors/warnings to this point, restart the web server -
"/sbin/service httpd restart

- now you will need to add into "python.conf" the <Directory.> directives,
the restart server.

 

Hope this helps.

Good luck.

karl

 

  _____  

From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of JWang@fhsu.edu
Sent: Saturday, June 24, 2006 9:09 AM
To: mod_python@modpython.org
Subject: [mod_python] A newbie question

 


Hi, 
I attempted to install Apache 2.0.54 (or Apache 2.2), python 2.4 and
mod_python 3.2.8 on AS 4 from source codes, but I failed. The mod_python
does not generate mod_python.so. Does anyone  run into the same problem and
have a solution to fix it? Thanks! JW 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060625/2b59ef17/attachment-0001.html
From jpg at jgassociates.ca  Sun Jun 25 11:00:02 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jun 25 10:59:57 2006
Subject: [mod_python] A newbie question
In-Reply-To: <20060625144213.OYYR20587.rrcs-fep-12.hrndva.rr.com@syncirakklap>
References: <20060625144213.OYYR20587.rrcs-fep-12.hrndva.rr.com@syncirakklap>
Message-ID: <449EA4F2.3060502@jgassociates.ca>

Karl Kobata wrote:
> Initial thought.  To compile and install 3.2.8, I believe needs flex 2.5.33
> or newer.  RHN has flex 2.5.4.  you will need to make sure that this is
> current.  

You only need flex if you are modifying psp_parser.l (which *very* few
people will ever do, let alone a newbie) since a copy of psp_parser.c,
which is created by flex, is included with the source distribution.
Configure will generate a warning if it can't find flex, or finds the
wrong version, but as long as you don't touch psp_parser.l flex will
never be called and you won't have a problem.

> I would suggest when using the .configure, that options for flex,
> python, and apxs be fully specified to insure that you know which versions
> have be used to build mod_python.
> 
> It may be easier to start with what RHN provides for their servers.  ES
> packages should work on AS.  The latest released for ES is python 2.3.4-14.x
> and mod_python 3.1.3-5.x.
> 
> - rename or move flex, and python binaries if applicable from /usr/local/bin
> .  if the default paths have not been modified, this directory will be
> searched before /usr/bin.

As stated above, you don't need to worry about flex.

Jim
From bluszcz at jabberpl.org  Sun Jun 25 12:00:28 2006
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Sun Jun 25 11:59:58 2006
Subject: [mod_python] Simple benchmark (mod python, psp, fastcgi)
Message-ID: <200606251800.33189.bluszcz@jabberpl.org>

I made a very simple performance test (as in the subject).
You can't find it here:

http://wiki.bluszcz.net/Benchmarks_cgi_fastcgi_modpython_psp

Cheers,
-- 
 __     __   Rafa? Zawadzki [jid/mail: bluszcz@jabberpl.org, skype: blvszcz]
|  |--.|  |.--.--.-----.-----.----.-----. [www: http://bluszcz.jabberpl.org]
|  _  ||  ||  |  |__ --|-- __|  __|-- __| [ http://pyrss.jabberstudio.org/ ]
|_____||__||_____|_____|_____|____|_____|                 ?? 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 191 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060625/d7237887/attachment.bin
From jpg at jgassociates.ca  Sun Jun 25 12:14:01 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Sun Jun 25 12:13:37 2006
Subject: [mod_python] Simple benchmark (mod python, psp, fastcgi)
In-Reply-To: <200606251800.33189.bluszcz@jabberpl.org>
References: <200606251800.33189.bluszcz@jabberpl.org>
Message-ID: <449EB649.5080903@jgassociates.ca>

Rafal Zawadzki wrote:
> I made a very simple performance test (as in the subject).
> You can't find it here:
> 
> http://wiki.bluszcz.net/Benchmarks_cgi_fastcgi_modpython_psp
> 
> Cheers,

Nice page.

For what it's worth, req.send_http_header() is a noop in mod_python 3.x,
but I doubt that would have much impact on the results.

Jim
From karl.kobata at syncira.com  Sun Jun 25 12:41:44 2006
From: karl.kobata at syncira.com (Karl Kobata)
Date: Sun Jun 25 12:42:02 2006
Subject: [mod_python] A newbie question
In-Reply-To: <449EA4F2.3060502@jgassociates.ca>
Message-ID: <20060625164155.PAOV20587.rrcs-fep-12.hrndva.rr.com@syncirakklap>

Thanks for the correction.
karl

-----Original Message-----
From: Jim Gallacher [mailto:jpg@jgassociates.ca] 
Sent: Sunday, June 25, 2006 8:00 AM
To: Karl Kobata
Cc: JWang@fhsu.edu; mod_python@modpython.org
Subject: Re: [mod_python] A newbie question

Karl Kobata wrote:
> Initial thought.  To compile and install 3.2.8, I believe needs flex
2.5.33
> or newer.  RHN has flex 2.5.4.  you will need to make sure that this is
> current.  

You only need flex if you are modifying psp_parser.l (which *very* few
people will ever do, let alone a newbie) since a copy of psp_parser.c,
which is created by flex, is included with the source distribution.
Configure will generate a warning if it can't find flex, or finds the
wrong version, but as long as you don't touch psp_parser.l flex will
never be called and you won't have a problem.

> I would suggest when using the .configure, that options for flex,
> python, and apxs be fully specified to insure that you know which versions
> have be used to build mod_python.
> 
> It may be easier to start with what RHN provides for their servers.  ES
> packages should work on AS.  The latest released for ES is python
2.3.4-14.x
> and mod_python 3.1.3-5.x.
> 
> - rename or move flex, and python binaries if applicable from
/usr/local/bin
> .  if the default paths have not been modified, this directory will be
> searched before /usr/bin.

As stated above, you don't need to worry about flex.

Jim


From JWang at fhsu.edu  Sun Jun 25 15:53:23 2006
From: JWang at fhsu.edu (JWang@fhsu.edu)
Date: Sun Jun 25 15:54:14 2006
Subject: [mod_python] A newbie question
In-Reply-To: <20060625144213.OYYR20587.rrcs-fep-12.hrndva.rr.com@syncirakklap>
Message-ID: <OF8A69F0ED.FB34FEE4-ON86257198.006CA907-86257198.006D3FEE@tiger.fhsu.edu>

Karl, Graham,
I have no problem with installing mod_python by using rpm (httpd and 
python) on Linux AS 4. But, I would like to install Apache 2.0.54 or 
2.2.2, Python 2.4 and mod_python 3.2.8 with source codes. The following 
output of "make install" bothers me because it does not create 
mod_python.so at /usr/local/apache/module. In fact, it does not create 
mod_python.so anywhere at all. 

I found /usr/local/src/mod_python-3.2.8/src/mod_python.so is a link 
/usr/local/src/mod_python-3.2.8/src/mod_python.so -> .libs/mod_python.so. 
Under  /usr/local/src/mod_python-3.2.8/src/.libs/mod_python.so there is no 
mod_python.so at all. I appreciate it if someone has a solution to fix it.

Now su and make install
  (or, if you only want to perform a partial install,
   you can use make install_dso and make install_py_lib)


Performing DSO installation.

/usr/bin/install -c -d /usr/local/apache/modules
/usr/bin/install -c src/mod_python.so /usr/local/apache/modules
/usr/bin/install: cannot stat `src/mod_python.so': No such file or 
directory
make[1]: *** [install_dso] Error 1
make[1]: Leaving directory `/usr/local/src/mod_python-3.2.8'
make[1]: Entering directory `/usr/local/src/mod_python-3.2.8'
cd dist && make install_py_lib
make[2]: Entering directory `/usr/local/src/mod_python-3.2.8/dist'
make[3]: Entering directory `/usr/local/src/mod_python-3.2.8/src'
make[3]: `psp_parser.c' is up to date.
make[3]: Leaving directory `/usr/local/src/mod_python-3.2.8/src'
if test -z "" ; then \
        /usr/local/bin/python2.4 setup.py install --optimize 2 --force ; \
else \
        /usr/local/bin/python2.4 setup.py install --optimize 2 --force 
--root  ; \
fi
running install
running build
running build_py
running build_ext
running install_lib
copying build/lib.linux-i686-2.4/mod_python/__init__.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/Cookie.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/_psp.so -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/psp.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/testhandler.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/util.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/python22.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/Session.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/cgihandler.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/publisher.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/apache.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
copying build/lib.linux-i686-2.4/mod_python/cache.py -> 
/usr/local/lib/python2.4/site-packages/mod_python
byte-compiling 
/usr/local/lib/python2.4/site-packages/mod_python/__init__.py to 
__init__.pyc
byte-compiling /usr/local/lib/python2.4/site-packages/mod_python/Cookie.py 
to Cookie.pyc
byte-compiling /usr/local/lib/python2.4/site-packages/mod_python/psp.py to 
psp.pyc
byte-compiling 
/usr/local/lib/python2.4/site-packages/mod_python/testhandler.py to 
testhandler.pyc
byte-compiling /usr/local/lib/python2.4/site-packages/mod_python/util.py 
to util.pyc
byte-compiling 
/usr/local/lib/python2.4/site-packages/mod_python/python22.py to 
python22.pyc
byte-compiling 
/usr/local/lib/python2.4/site-packages/mod_python/Session.py to 
Session.pyc
byte-compiling 
/usr/local/lib/python2.4/site-packages/mod_python/cgihandler.py to 
cgihandler.pyc
byte-compiling 
/usr/local/lib/python2.4/site-packages/mod_python/publisher.py to 
publisher.pyc
byte-compiling /usr/local/lib/python2.4/site-packages/mod_python/apache.py 
to apache.pyc
byte-compiling /usr/local/lib/python2.4/site-packages/mod_python/cache.py 
to cache.pyc
writing byte-compilation script '/tmp/tmpUcdLEa.py'
/usr/local/bin/python2.4 -OO /tmp/tmpUcdLEa.py
removing /tmp/tmpUcdLEa.py
make[2]: Leaving directory `/usr/local/src/mod_python-3.2.8/dist'
make[1]: Leaving directory `/usr/local/src/mod_python-3.2.8'





"Karl Kobata" <karl.kobata@syncira.com> 
06/25/2006 09:42 AM

To
<JWang@fhsu.edu>, <mod_python@modpython.org>
cc

Subject
RE: [mod_python] A newbie question






Initial thought.  To compile and install 3.2.8, I believe needs flex 
2.5.33 or newer.  RHN has flex 2.5.4.  you will need to make sure that 
this is current.  I would suggest when using the .configure, that options 
for flex, python, and apxs be fully specified to insure that you know 
which versions have be used to build mod_python.
 
It may be easier to start with what RHN provides for their servers.  ES 
packages should work on AS.  The latest released for ES is python 
2.3.4-14.x and mod_python 3.1.3-5.x.
- rename or move flex, and python binaries if applicable from 
/usr/local/bin .  if the default paths have not been modified, this 
directory will be searched before /usr/bin.
- install python first ? ?up2date python? ? if up2date fails, one strong 
possibilities is that the python it files does not have the correct 
scripts in the site-packages directory under the pythonx.x directory. 
Next, using this command will also resolve any dependencies needed to make 
python work.  All should be done as root.
- next install mod_python ? ?up2date python? ? this should address 
installing and resolving dependencies.
- check install and version
- ?python ?V? ? see version above
- ?which python? ? should show ?/usr/bin/python?
- check if mod_python.so installed in ?/etc/httpd/modules?
- add the required changes into the .conf file - 
/etc/httpd/conf.d/python.conf.
            - add the load directive for mod_python.so
            - test if the server will read the .so file correctly
                        - stop the server ? ?/sbin/service httpd stop?
                        - execute ?/usr/sbin/httpd ?X ?e DEBUG ? the list 
of .so files loading should scroll by, mod_python.so should be in this 
list.
- assuming no errors/warnings to this point, restart the web server ? 
?/sbin/service httpd restart
- now you will need to add into ?python.conf? the <Directory?> directives, 
the restart server.
 
Hope this helps.
Good luck.
karl
 

From: mod_python-bounces@modpython.org 
[mailto:mod_python-bounces@modpython.org] On Behalf Of JWang@fhsu.edu
Sent: Saturday, June 24, 2006 9:09 AM
To: mod_python@modpython.org
Subject: [mod_python] A newbie question
 

Hi, 
I attempted to install Apache 2.0.54 (or Apache 2.2), python 2.4 and 
mod_python 3.2.8 on AS 4 from source codes, but I failed. The mod_python 
does not generate mod_python.so. Does anyone  run into the same problem 
and have a solution to fix it? Thanks! JW 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20060625/2ef2b860/attachment-0001.html
From elekis at gmail.com  Sun Jun 25 17:02:56 2006
From: elekis at gmail.com (elekis)
Date: Sun Jun 25 17:02:59 2006
Subject: Fwd: [mod_python] other file than .py
In-Reply-To: <78316ea80606192341p5f5f8a8epb78196341ecfbf20@mail.gmail.com>
References: <1150782513.25289@dscpl.user.openhosting.com>
	<78316ea80606192341p5f5f8a8epb78196341ecfbf20@mail.gmail.com>
Message-ID: <78316ea80606251402k68694dc2mfcc991e8741f1676@mail.gmail.com>

a in fact I always has a 500 error.


so there here all file.

.htaccess (thanks Dumpleton)
-----------------------------------------------------------

AddHandler mod_python .py
PythonHandler mod_python.publisher
PythonDebug On

<Files *.pyc>
deny from all
</Files>

Options +MultiViews
MultiviewsMatch Handlers

AddType text/html;qs=1.0 .py
AddType text/html;qs=0.9 .html
AddType text/plain;qs=0.8 .txt

DirectoryIndex index.py


-----------------------------------
there is my add_event.py

def index(req):
	s = """
		<html>
			<head>
			<link rel="stylesheet" type= "text/css" href="./add_event.css">
			</head>	
			<body>
			<div>ceci est un div</div>"""
	return s + """<h6>Ici H6 est le s&eacute;lecteur de ce paragraphe en vert :
			Enfin un gain de poids non n&eacu44444444444444444444te;gligeable est souvent
			obtenu par ce langage, bien que le d&eacute;tail du contenu soit $
			aussi un &eacute;l&eacute;ment qui va plus ou moins modifier ce gain. </h6>
			</body>
			</html>
			"""

-------------------------------------------------------------

and there is  the directory tag in the apache2.conf

<Directory /var/www/public_html>
        AllowOverride FileInfo AuthConfig Limit
        Options Indexes SymLinksIfOwnerMatch IncludesNoExec
</Directory>
-----------------------------------------------------------------------
I trie with this adress (the public_html is a simple directory it's just for me

http://localhost/public_html/add_event

thanks a lot




---------- Forwarded message ----------
From: elekis <elekis@gmail.com>
Date: Jun 20, 2006 8:41 AM
Subject: Re: [mod_python] other file than .py
To: Graham Dumpleton <grahamd@dscpl.com.au>


thanks a lot


On 6/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> elekis wrote ..
> > hi,
> >
> > I continue my little way in the magic world of python script under web
> > and after installeing, testing and begin really to program a
> > interractive site , I confronted with a little problem. I cannot touch
> > other file than .py
> >
> > exemple. there is my .htaccess
> >
> > ----------------------------------
> > SetHandler mod_python
> > PythonHandler mod_python.publisher
> > PythonDebug On
> > ----------------------------------
> >
> >
> > here is my event.css
> >
> > --------------------------------
> > h6 { font-size: 50pt ; }
> > -------------------------------
> > but when he trie to load the event.css I have a 500 error
> >
> > -->http://localhost/public_html/add_event.css and it's the same thing
> > for other file. is there a thing than I must put on my htacces???
>
> Use "AddHandler" instead of "SetHandler" directive. For example:
>
>   AddHandler mod_python .py
>   PythonHandler mod_python.publisher
>
> What this says is that only requests with a .py in URL will be routed
> through to mod_python.publisher and not every request in that
> directory. This will allow you to place .css, .html, .jpg, .gif, etc files
> in the same directory.
>
> Depending on which version of mod_python you are using, you should
> also use:
>
>   <Files *.pyc>
>   deny from all
>   </Files>
>
> For older versions of mod_python this will ensure that compiled Python
> byte code files are not downloadable. In mod_python 3.2.X these byte
> code files are no longer generated for mod_python.publisher but can
> for basic handlers, but still good to use it regardless.
>
> > other thing. I very like the publisher mod.  cause we
> > http://localhost/public_html/balbla/ link (and that 's cool.
>
> If you are talking about the ability to not have .py in the URL, ie the
> multiviews feature of Apache, then you also need to include additional
> configuration to get it to work when using the AddHandler directive.
> These additional directives are:
>
>   Options +MultiViews
>   MultiviewsMatch Handlers
>
>   AddType text/html;qs=1.0 .py
>   AddType text/html;qs=0.9 .html
>   AddType text/plain;qs=0.8 .txt
>
> If you don't have this, you will find that you can't leave off the .py
> in the URL. Note that you may have to have Apache 2.0 and most
> recent version of mod_python (3.2.X) for this all to work properly.
>
> One last issue with using "AddHandler" over "SetHandler". When
> using "SetHandler", mod_python.publisher will automatically map
> a request against a directory to the 'index.py' file in the directory.
> When using "AddHandler" this will not happen by default. If you
> want this to happen, you must also include:
>
>   DirectoryIndex index.py
>
> This will cause Apache to take 'index.py' as a candidate index
> directory when request is against the directory.
>
> In summary, use the configuration:
>
>   AddHandler mod_python .py
>   PythonHandler mod_python.publisher
>   PythonDebug On
>
>   <Files *.pyc>
>   deny from all
>   </Files>
>
>   Options +MultiViews
>   MultiviewsMatch Handlers
>
>   AddType text/html;qs=1.0 .py
>   AddType text/html;qs=0.9 .html
>   AddType text/plain;qs=0.8 .txt
>
>   DirectoryIndex index.py
>
> > but on modpython.org they say that is not the fastest way.
> >
> >  Standard CGI:               23 requests/s
> >     Mod_python cgihandler:     385 requests/s
> >     Mod_python publisher:      476 requests/s
> >     Mod_python handler:       1203 requests/s
> >
> > is it possible to have the publisher link mod and the handler request???
>
> Both mod_python.publisher and mod_python.cgihandler are merely
> instances of mod_python handlers. There are slower because of the
> extra work they do on top of the basic handler interface.
>
> I would suggest you don't worry about speed issues, most sites do not need
> to be blindingly fast and you are probably going to have enough to contend
> with as it is, plus find it fast enough anyway.
>
> FWIW, those figures were probably based on really old hardware as well
> and can be ignored due to that fact. New hardware should perform much
> better.
>
> Graham
>


--
---------------------------------------------------------
nom : Jabon
prenom : Julien
matricule ulb :035890-72
---------------------------------------------------------


-- 
---------------------------------------------------------
nom : Jabon
prenom : Julien
matricule ulb :035890-72
---------------------------------------------------------
From grahamd at dscpl.com.au  Sun Jun 25 18:46:28 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 25 18:46:36 2006
Subject: [mod_python] A newbie question
Message-ID: <1151275588.14498@dscpl.user.openhosting.com>

Jim Gallacher wrote ..
> Karl Kobata wrote:
> > Initial thought.  To compile and install 3.2.8, I believe needs flex
> 2.5.33
> > or newer.  RHN has flex 2.5.4.  you will need to make sure that this
> is
> > current.  
> 
> You only need flex if you are modifying psp_parser.l (which *very* few
> people will ever do, let alone a newbie) since a copy of psp_parser.c,
> which is created by flex, is included with the source distribution.
> Configure will generate a warning if it can't find flex, or finds the
> wrong version, but as long as you don't touch psp_parser.l flex will
> never be called and you won't have a problem.
> 
> > I would suggest when using the .configure, that options for flex,
> > python, and apxs be fully specified to insure that you know which versions
> > have be used to build mod_python.
> > 
> > It may be easier to start with what RHN provides for their servers. 
> ES
> > packages should work on AS.  The latest released for ES is python 2.3.4-14.x
> > and mod_python 3.1.3-5.x.
> > 
> > - rename or move flex, and python binaries if applicable from /usr/local/bin
> > .  if the default paths have not been modified, this directory will be
> > searched before /usr/bin.
> 
> As stated above, you don't need to worry about flex.

Just for the record, there is one situation which you have to be mindful of.
If you check out source code from the subversion repository directly, one
can find that the src/psp_parser.c file will not have a newer time than the
src/psp_parser.l file. This is a pain if you don't have the newer version of
flex (like on Mac OS X) as it will try and rebuild the src/psp_parser.c file.
In this situation it is a simple matter of updating the time stamp on the
src/psp_parser.c file by running:

  touch src/psp_parser.c

This way it will use the src/psp_parser.c file from the repository.

Graham
From grahamd at dscpl.com.au  Sun Jun 25 18:50:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 25 18:50:53 2006
Subject: Fwd: [mod_python] other file than .py
Message-ID: <1151275849.16539@dscpl.user.openhosting.com>

But what error message is being logged in the Apache error_log file
when this occurs? It should give you some indication of what the
problem is.

Also, what version of mod_python/Apache are you using?

elekis wrote ..
> a in fact I always has a 500 error.
> 
> 
> so there here all file.
> 
> .htaccess (thanks Dumpleton)
> -----------------------------------------------------------
> 
> AddHandler mod_python .py
> PythonHandler mod_python.publisher
> PythonDebug On
> 
> <Files *.pyc>
> deny from all
> </Files>
> 
> Options +MultiViews
> MultiviewsMatch Handlers
> 
> AddType text/html;qs=1.0 .py
> AddType text/html;qs=0.9 .html
> AddType text/plain;qs=0.8 .txt
> 
> DirectoryIndex index.py
> 
> 
> -----------------------------------
> there is my add_event.py
> 
> def index(req):
> 	s = """
> 		<html>
> 			<head>
> 			<link rel="stylesheet" type= "text/css" href="./add_event.css">
> 			</head>	
> 			<body>
> 			<div>ceci est un div</div>"""
> 	return s + """<h6>Ici H6 est le s&eacute;lecteur de ce paragraphe en vert
> :
> 			Enfin un gain de poids non n&eacu44444444444444444444te;gligeable est
> souvent
> 			obtenu par ce langage, bien que le d&eacute;tail du contenu soit $
> 			aussi un &eacute;l&eacute;ment qui va plus ou moins modifier ce gain.
> </h6>
> 			</body>
> 			</html>
> 			"""
> 
> -------------------------------------------------------------
> 
> and there is  the directory tag in the apache2.conf
> 
> <Directory /var/www/public_html>
>         AllowOverride FileInfo AuthConfig Limit
>         Options Indexes SymLinksIfOwnerMatch IncludesNoExec
> </Directory>
> -----------------------------------------------------------------------
> I trie with this adress (the public_html is a simple directory it's just
> for me
> 
> http://localhost/public_html/add_event
> 
> thanks a lot
> 
> 
> 
> 
> ---------- Forwarded message ----------
> From: elekis <elekis@gmail.com>
> Date: Jun 20, 2006 8:41 AM
> Subject: Re: [mod_python] other file than .py
> To: Graham Dumpleton <grahamd@dscpl.com.au>
> 
> 
> thanks a lot
> 
> 
> On 6/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > elekis wrote ..
> > > hi,
> > >
> > > I continue my little way in the magic world of python script under
> web
> > > and after installeing, testing and begin really to program a
> > > interractive site , I confronted with a little problem. I cannot touch
> > > other file than .py
> > >
> > > exemple. there is my .htaccess
> > >
> > > ----------------------------------
> > > SetHandler mod_python
> > > PythonHandler mod_python.publisher
> > > PythonDebug On
> > > ----------------------------------
> > >
> > >
> > > here is my event.css
> > >
> > > --------------------------------
> > > h6 { font-size: 50pt ; }
> > > -------------------------------
> > > but when he trie to load the event.css I have a 500 error
> > >
> > > -->http://localhost/public_html/add_event.css and it's the same thing
> > > for other file. is there a thing than I must put on my htacces???
> >
> > Use "AddHandler" instead of "SetHandler" directive. For example:
> >
> >   AddHandler mod_python .py
> >   PythonHandler mod_python.publisher
> >
> > What this says is that only requests with a .py in URL will be routed
> > through to mod_python.publisher and not every request in that
> > directory. This will allow you to place .css, .html, .jpg, .gif, etc
> files
> > in the same directory.
> >
> > Depending on which version of mod_python you are using, you should
> > also use:
> >
> >   <Files *.pyc>
> >   deny from all
> >   </Files>
> >
> > For older versions of mod_python this will ensure that compiled Python
> > byte code files are not downloadable. In mod_python 3.2.X these byte
> > code files are no longer generated for mod_python.publisher but can
> > for basic handlers, but still good to use it regardless.
> >
> > > other thing. I very like the publisher mod.  cause we
> > > http://localhost/public_html/balbla/ link (and that 's cool.
> >
> > If you are talking about the ability to not have .py in the URL, ie the
> > multiviews feature of Apache, then you also need to include additional
> > configuration to get it to work when using the AddHandler directive.
> > These additional directives are:
> >
> >   Options +MultiViews
> >   MultiviewsMatch Handlers
> >
> >   AddType text/html;qs=1.0 .py
> >   AddType text/html;qs=0.9 .html
> >   AddType text/plain;qs=0.8 .txt
> >
> > If you don't have this, you will find that you can't leave off the .py
> > in the URL. Note that you may have to have Apache 2.0 and most
> > recent version of mod_python (3.2.X) for this all to work properly.
> >
> > One last issue with using "AddHandler" over "SetHandler". When
> > using "SetHandler", mod_python.publisher will automatically map
> > a request against a directory to the 'index.py' file in the directory.
> > When using "AddHandler" this will not happen by default. If you
> > want this to happen, you must also include:
> >
> >   DirectoryIndex index.py
> >
> > This will cause Apache to take 'index.py' as a candidate index
> > directory when request is against the directory.
> >
> > In summary, use the configuration:
> >
> >   AddHandler mod_python .py
> >   PythonHandler mod_python.publisher
> >   PythonDebug On
> >
> >   <Files *.pyc>
> >   deny from all
> >   </Files>
> >
> >   Options +MultiViews
> >   MultiviewsMatch Handlers
> >
> >   AddType text/html;qs=1.0 .py
> >   AddType text/html;qs=0.9 .html
> >   AddType text/plain;qs=0.8 .txt
> >
> >   DirectoryIndex index.py
> >
> > > but on modpython.org they say that is not the fastest way.
> > >
> > >  Standard CGI:               23 requests/s
> > >     Mod_python cgihandler:     385 requests/s
> > >     Mod_python publisher:      476 requests/s
> > >     Mod_python handler:       1203 requests/s
> > >
> > > is it possible to have the publisher link mod and the handler request???
> >
> > Both mod_python.publisher and mod_python.cgihandler are merely
> > instances of mod_python handlers. There are slower because of the
> > extra work they do on top of the basic handler interface.
> >
> > I would suggest you don't worry about speed issues, most sites do not
> need
> > to be blindingly fast and you are probably going to have enough to contend
> > with as it is, plus find it fast enough anyway.
> >
> > FWIW, those figures were probably based on really old hardware as well
> > and can be ignored due to that fact. New hardware should perform much
> > better.
> >
> > Graham
> >
> 
> 
> --
> ---------------------------------------------------------
> nom : Jabon
> prenom : Julien
> matricule ulb :035890-72
> ---------------------------------------------------------
> 
> 
> -- 
> ---------------------------------------------------------
> nom : Jabon
> prenom : Julien
> matricule ulb :035890-72
> ---------------------------------------------------------
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From emlynj at gmail.com  Sun Jun 25 19:50:35 2006
From: emlynj at gmail.com (Emlyn Jones)
Date: Sun Jun 25 19:50:40 2006
Subject: [mod_python] Seg Fault when using session object
Message-ID: <200606260050.36017.emlynj@gmail.com>

Hello,
I've got this simple piece of mod_python/psp; If I uncomment the foo=session 
line I get a seg fault. Has anyone seen this before and can direct me towards 
finding out what the problem is please?
I'm running Apache/2.0.50, mod_python 3.2.8 and Python 2.4.
I've confirmed that it isn't the known expat and mysql/php problems.

<%
#foo = session
done_login = False
if(form.has_key("username")):
	username = form["username"]
	password = form["password"]
	req.write("%s" % (username,))
%>

Cheers,
Emlyn.
From grahamd at dscpl.com.au  Sun Jun 25 20:13:38 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Jun 25 20:13:43 2006
Subject: [mod_python] Seg Fault when using session object
Message-ID: <1151280818.26672@dscpl.user.openhosting.com>

Emlyn Jones wrote ..
> Hello,
> I've got this simple piece of mod_python/psp; If I uncomment the foo=session
> line I get a seg fault. Has anyone seen this before and can direct me towards
> finding out what the problem is please?
> I'm running Apache/2.0.50, mod_python 3.2.8 and Python 2.4.
> I've confirmed that it isn't the known expat and mysql/php problems.
> 
> <%
> #foo = session
> done_login = False
> if(form.has_key("username")):
> 	username = form["username"]
> 	password = form["password"]
> 	req.write("%s" % (username,))
> %>

What PSP does is that if it sees that the variable "session" is referenced
from inside of PSP code, then it will do what is necessary to create the
session, or if the session already exists, it will retrieve it from the 
session database.

Two problems could be occurring here. The first is that if this is occurring
on the very first time the session needs to be created, that the session
database it tries to use is corrupt in some way and therefore crashing.
The second is that the session already exists in the database, but something
was stored in the session object that probably shouldn't have and when the
session object is being restored, it is triggering some code (possibly C
code) which is then subsequently crashing.

First thing you need to do is get out of PSP and write a simple handler that
creates a session object just to validate that sessions work and that the
session database is okay. Use a handler such as:

  from mod_python import Session
  from mod_python import apache

  def handler(req):
    session = Session.Session(req)
    session['data'] = 1
    session.save()
    req.content_type = 'text/plain'
    req.write('hello')
    return apache .OK

If this dies, then there is possibly a problem with the session
database, or your Python DBM modules are stuffed somehow. You need to
work out what type of session database is being used. It will probably
be DBM database and it will be stored in "/tmp" as "/tmp/mp_sess.dbm". I
am guessing you aren't on Win32 as in that case an in memory session
database is being used and it would be almost impossible to crash. Which
is might be is dictated by the MPM which Apache was configured with.

Assuming it is DBM, check who owns the database in "/tmp". The owner
should match the user that Apache runs as. If you have multiple versions
of Apache running and they run as different users, you could have problems
because of that. If it is the wrong user and you only have one Apache
instance, you could try deleting the database and restarting Apache.
If you have multiple versions of Apache running as different users, you
may have to use PythonOption to change location where session database
is stored. See documentation for mod_python.

If this is all okay, may be what you are storing in the session object. This
is where you need to show your code as to what you are sticking in the
session object before we can really comment. Also read:

  http://www.dscpl.com.au/articles/modpython-005.html

Graham


From emlynj at gmail.com  Sun Jun 25 20:34:53 2006
From: emlynj at gmail.com (Emlyn Jones)
Date: Sun Jun 25 20:34:59 2006
Subject: [mod_python] Seg Fault when using session object
In-Reply-To: <1151280818.26672@dscpl.user.openhosting.com>
References: <1151280818.26672@dscpl.user.openhosting.com>
Message-ID: <200606260134.54067.emlynj@gmail.com>

On Monday 26 Jun 2006 01:13, Graham Dumpleton wrote:
> Emlyn Jones wrote ..
>
> > Hello,
> > I've got this simple piece of mod_python/psp; If I uncomment the
> > foo=session line I get a seg fault. Has anyone seen this before and can
> > direct me towards finding out what the problem is please?
> > I'm running Apache/2.0.50, mod_python 3.2.8 and Python 2.4.
> > I've confirmed that it isn't the known expat and mysql/php problems.
> >
> > <%
> > #foo = session
> > done_login = False
> > if(form.has_key("username")):
> > ??????username = form["username"]
> > ??????password = form["password"]
> > ??????req.write("%s" % (username,))
> > %>
>
> What PSP does is that if it sees that the variable "session" is referenced
> from inside of PSP code, then it will do what is necessary to create the
> session, or if the session already exists, it will retrieve it from the
> session database.
>
> Two problems could be occurring here. The first is that if this is
> occurring on the very first time the session needs to be created, that the
> session database it tries to use is corrupt in some way and therefore
> crashing. The second is that the session already exists in the database,
> but something was stored in the session object that probably shouldn't have
> and when the session object is being restored, it is triggering some code
> (possibly C code) which is then subsequently crashing.
>
> First thing you need to do is get out of PSP and write a simple handler
> that creates a session object just to validate that sessions work and that
> the session database is okay. Use a handler such as:
>
> ? from mod_python import Session
> ? from mod_python import apache
>
> ? def handler(req):
> ? ? session = Session.Session(req)
> ? ? session['data'] = 1
> ? ? session.save()
> ? ? req.content_type = 'text/plain'
> ? ? req.write('hello')
> ? ? return apache .OK
>
> If this dies, then there is possibly a problem with the session
> database, or your Python DBM modules are stuffed somehow. You need to
> work out what type of session database is being used. It will probably
> be DBM database and it will be stored in "/tmp" as "/tmp/mp_sess.dbm". I
> am guessing you aren't on Win32 as in that case an in memory session
> database is being used and it would be almost impossible to crash. Which
> is might be is dictated by the MPM which Apache was configured with.
>
> Assuming it is DBM, check who owns the database in "/tmp". The owner
> should match the user that Apache runs as. If you have multiple versions
> of Apache running and they run as different users, you could have problems
> because of that. If it is the wrong user and you only have one Apache
> instance, you could try deleting the database and restarting Apache.
> If you have multiple versions of Apache running as different users, you
> may have to use PythonOption to change location where session database
> is stored. See documentation for mod_python.
>
> If this is all okay, may be what you are storing in the session object.
> This is where you need to show your code as to what you are sticking in the
> session object before we can really comment. Also read:
>
> ? http://www.dscpl.com.au/articles/modpython-005.html
>
> Graham

Hi Graham, thanks for the reply and explanation.
That simple handler does die. The dbm file in /tmp checks out ok, it's the 
correct user and I haven't actually managed to store anything in it yet. This 
is the first use of it; In fact, If I rename it (the dbm file) and restart 
apache it doesn't get recreated so I guess that leaves me with the python DBM 
modules. 
I'll have a dig around and see what I can come up with. 
I do vaguely remember a caffeine fuelled evening running into problems with 
sleepycat which sounds like it might be connected (maybe library versions?). 
Is there any extra debugging info I can turn on to point me in the right 
direction? Otherwise I suppose it's trying to test out the dbm stuff in a 
python shell first and take it from there.

Cheers,
Emlyn.

From grahamd at dscpl.com.au  Mon Jun 26 02:45:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 26 02:45:47 2006
Subject: Fwd: [mod_python] other file than .py
Message-ID: <1151304344.4940@dscpl.user.openhosting.com>

Please keep followups on mailing list, don't send them just to me.


In your main config change it to:

 <Directory /var/www/public_html>
         AllowOverride FileInfo AuthConfig Limit
         Options Indexes SymLinksIfOwnerMatch IncludesNoExec MultiViews
 </Directory>

and drop "Options" directive from .htaccess.

Otherwise, change main config to use:

 <Directory /var/www/public_html>
         AllowOverride All
         Options Indexes SymLinksIfOwnerMatch IncludesNoExec MultiViews
 </Directory>

In other words, the permissions are such that you can't enable
MultiViews in .htaccess context as main configuration wasn't
allowing it. You therefore need to allow override for everything,
or work out what specific override value is to allow that option
to be set from .htaccess file.

Graham  

elekis wrote ..
> sorry I forgot to say.
> 
> for version
> 
> Apache/2.0.55 (Ubuntu) mod_python/3.1.4 Python/2.4.3 PHP/5.1.2 Server
> at localhost Port 80
> 
> 
> for the log.
> 
> it is what he put in /var/log/apache2/error.log
> 
> [Mon Jun 26 07:56:05 2006] [alert] [client 127.0.0.1]
> /var/www/public_html/.htaccess: Options not allowed here
> 
> and in apache2/access.log
> 
> 127.0.0.1 - - [26/Jun/2006:07:56:05 +0200] "GET /public_html/add_event
> HTTP/1.1" 500 654 "-" "Mozilla/5.0 (X11; U; Linux i686; fr;
> rv:1.8.0.4) Gecko/20060608 Ubuntu/dapper-security Firefox/1.5.0.4"
> 
> 
> is there any others log elsewhere??
> 
> 
> thanks a lot.
> 
> a+++
> 
> 
> 
> 
> On 6/26/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > But what error message is being logged in the Apache error_log file
> > when this occurs? It should give you some indication of what the
> > problem is.
> >
> > Also, what version of mod_python/Apache are you using?
> >
> > elekis wrote ..
> > > a in fact I always has a 500 error.
> > >
> > >
> > > so there here all file.
> > >
> > > .htaccess (thanks Dumpleton)
> > > -----------------------------------------------------------
> > >
> > > AddHandler mod_python .py
> > > PythonHandler mod_python.publisher
> > > PythonDebug On
> > >
> > > <Files *.pyc>
> > > deny from all
> > > </Files>
> > >
> > > Options +MultiViews
> > > MultiviewsMatch Handlers
> > >
> > > AddType text/html;qs=1.0 .py
> > > AddType text/html;qs=0.9 .html
> > > AddType text/plain;qs=0.8 .txt
> > >
> > > DirectoryIndex index.py
> > >
> > >
> > > -----------------------------------
> > > there is my add_event.py
> > >
> > > def index(req):
> > >       s = """
> > >               <html>
> > >                       <head>
> > >                       <link rel="stylesheet" type= "text/css" href="./add_event.css">
> > >                       </head>
> > >                       <body>
> > >                       <div>ceci est un div</div>"""
> > >       return s + """<h6>Ici H6 est le s&eacute;lecteur de ce paragraphe
> en vert
> > > :
> > >                       Enfin un gain de poids non n&eacu44444444444444444444te;gligeable
> est
> > > souvent
> > >                       obtenu par ce langage, bien que le d&eacute;tail
> du contenu soit $
> > >                       aussi un &eacute;l&eacute;ment qui va plus ou
> moins modifier ce gain.
> > > </h6>
> > >                       </body>
> > >                       </html>
> > >                       """
> > >
> > > -------------------------------------------------------------
> > >
> > > and there is  the directory tag in the apache2.conf
> > >
> > > <Directory /var/www/public_html>
> > >         AllowOverride FileInfo AuthConfig Limit
> > >         Options Indexes SymLinksIfOwnerMatch IncludesNoExec
> > > </Directory>
> > > -----------------------------------------------------------------------
> > > I trie with this adress (the public_html is a simple directory it's
> just
> > > for me
> > >
> > > http://localhost/public_html/add_event
> > >
> > > thanks a lot
> > >
> > >
> > >
> > >
> > > ---------- Forwarded message ----------
> > > From: elekis <elekis@gmail.com>
> > > Date: Jun 20, 2006 8:41 AM
> > > Subject: Re: [mod_python] other file than .py
> > > To: Graham Dumpleton <grahamd@dscpl.com.au>
> > >
> > >
> > > thanks a lot
> > >
> > >
> > > On 6/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > elekis wrote ..
> > > > > hi,
> > > > >
> > > > > I continue my little way in the magic world of python script under
> > > web
> > > > > and after installeing, testing and begin really to program a
> > > > > interractive site , I confronted with a little problem. I cannot
> touch
> > > > > other file than .py
> > > > >
> > > > > exemple. there is my .htaccess
> > > > >
> > > > > ----------------------------------
> > > > > SetHandler mod_python
> > > > > PythonHandler mod_python.publisher
> > > > > PythonDebug On
> > > > > ----------------------------------
> > > > >
> > > > >
> > > > > here is my event.css
> > > > >
> > > > > --------------------------------
> > > > > h6 { font-size: 50pt ; }
> > > > > -------------------------------
> > > > > but when he trie to load the event.css I have a 500 error
> > > > >
> > > > > -->http://localhost/public_html/add_event.css and it's the same
> thing
> > > > > for other file. is there a thing than I must put on my htacces???
> > > >
> > > > Use "AddHandler" instead of "SetHandler" directive. For example:
> > > >
> > > >   AddHandler mod_python .py
> > > >   PythonHandler mod_python.publisher
> > > >
> > > > What this says is that only requests with a .py in URL will be routed
> > > > through to mod_python.publisher and not every request in that
> > > > directory. This will allow you to place .css, .html, .jpg, .gif,
> etc
> > > files
> > > > in the same directory.
> > > >
> > > > Depending on which version of mod_python you are using, you should
> > > > also use:
> > > >
> > > >   <Files *.pyc>
> > > >   deny from all
> > > >   </Files>
> > > >
> > > > For older versions of mod_python this will ensure that compiled Python
> > > > byte code files are not downloadable. In mod_python 3.2.X these byte
> > > > code files are no longer generated for mod_python.publisher but can
> > > > for basic handlers, but still good to use it regardless.
> > > >
> > > > > other thing. I very like the publisher mod.  cause we
> > > > > http://localhost/public_html/balbla/ link (and that 's cool.
> > > >
> > > > If you are talking about the ability to not have .py in the URL,
> ie the
> > > > multiviews feature of Apache, then you also need to include additional
> > > > configuration to get it to work when using the AddHandler directive.
> > > > These additional directives are:
> > > >
> > > >   Options +MultiViews
> > > >   MultiviewsMatch Handlers
> > > >
> > > >   AddType text/html;qs=1.0 .py
> > > >   AddType text/html;qs=0.9 .html
> > > >   AddType text/plain;qs=0.8 .txt
> > > >
> > > > If you don't have this, you will find that you can't leave off the
> .py
> > > > in the URL. Note that you may have to have Apache 2.0 and most
> > > > recent version of mod_python (3.2.X) for this all to work properly.
> > > >
> > > > One last issue with using "AddHandler" over "SetHandler". When
> > > > using "SetHandler", mod_python.publisher will automatically map
> > > > a request against a directory to the 'index.py' file in the directory.
> > > > When using "AddHandler" this will not happen by default. If you
> > > > want this to happen, you must also include:
> > > >
> > > >   DirectoryIndex index.py
> > > >
> > > > This will cause Apache to take 'index.py' as a candidate index
> > > > directory when request is against the directory.
> > > >
> > > > In summary, use the configuration:
> > > >
> > > >   AddHandler mod_python .py
> > > >   PythonHandler mod_python.publisher
> > > >   PythonDebug On
> > > >
> > > >   <Files *.pyc>
> > > >   deny from all
> > > >   </Files>
> > > >
> > > >   Options +MultiViews
> > > >   MultiviewsMatch Handlers
> > > >
> > > >   AddType text/html;qs=1.0 .py
> > > >   AddType text/html;qs=0.9 .html
> > > >   AddType text/plain;qs=0.8 .txt
> > > >
> > > >   DirectoryIndex index.py
> > > >
> > > > > but on modpython.org they say that is not the fastest way.
> > > > >
> > > > >  Standard CGI:               23 requests/s
> > > > >     Mod_python cgihandler:     385 requests/s
> > > > >     Mod_python publisher:      476 requests/s
> > > > >     Mod_python handler:       1203 requests/s
> > > > >
> > > > > is it possible to have the publisher link mod and the handler request???
> > > >
> > > > Both mod_python.publisher and mod_python.cgihandler are merely
> > > > instances of mod_python handlers. There are slower because of the
> > > > extra work they do on top of the basic handler interface.
> > > >
> > > > I would suggest you don't worry about speed issues, most sites do
> not
> > > need
> > > > to be blindingly fast and you are probably going to have enough to
> contend
> > > > with as it is, plus find it fast enough anyway.
> > > >
> > > > FWIW, those figures were probably based on really old hardware as
> well
> > > > and can be ignored due to that fact. New hardware should perform
> much
> > > > better.
> > > >
> > > > Graham
> > > >
> > >
> > >
> > > --
> > > ---------------------------------------------------------
> > > nom : Jabon
> > > prenom : Julien
> > > matricule ulb :035890-72
> > > ---------------------------------------------------------
> > >
> > >
> > > --
> > > ---------------------------------------------------------
> > > nom : Jabon
> > > prenom : Julien
> > > matricule ulb :035890-72
> > > ---------------------------------------------------------
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> 
> -- 
> ---------------------------------------------------------
> nom : Jabon
> prenom : Julien
> matricule ulb :035890-72
> ---------------------------------------------------------
From elekis at gmail.com  Mon Jun 26 05:00:30 2006
From: elekis at gmail.com (elekis)
Date: Mon Jun 26 05:00:35 2006
Subject: Fwd: [mod_python] other file than .py
In-Reply-To: <1151304344.4940@dscpl.user.openhosting.com>
References: <1151304344.4940@dscpl.user.openhosting.com>
Message-ID: <78316ea80606260200m247b2216x911752704708e9bf@mail.gmail.com>

On 6/26/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Please keep followups on mailing list, don't send them just to me.

oh I m sorry, it's gmail,  I just put a simple reply .

>
>
> In your main config change it to:
>
>  <Directory /var/www/public_html>
>          AllowOverride FileInfo AuthConfig Limit
>          Options Indexes SymLinksIfOwnerMatch IncludesNoExec MultiViews
>  </Directory>
>
> and drop "Options" directive from .htaccess.
>
> Otherwise, change main config to use:
>
>  <Directory /var/www/public_html>
>          AllowOverride All
>          Options Indexes SymLinksIfOwnerMatch IncludesNoExec MultiViews
>  </Directory>
>

thanks, now all wrk perfectly

a+++

> In other words, the permissions are such that you can't enable
> MultiViews in .htaccess context as main configuration wasn't
> allowing it. You therefore need to allow override for everything,
> or work out what specific override value is to allow that option
> to be set from .htaccess file.
>
> Graham
>
> elekis wrote ..
> > sorry I forgot to say.
> >
> > for version
> >
> > Apache/2.0.55 (Ubuntu) mod_python/3.1.4 Python/2.4.3 PHP/5.1.2 Server
> > at localhost Port 80
> >
> >
> > for the log.
> >
> > it is what he put in /var/log/apache2/error.log
> >
> > [Mon Jun 26 07:56:05 2006] [alert] [client 127.0.0.1]
> > /var/www/public_html/.htaccess: Options not allowed here
> >
> > and in apache2/access.log
> >
> > 127.0.0.1 - - [26/Jun/2006:07:56:05 +0200] "GET /public_html/add_event
> > HTTP/1.1" 500 654 "-" "Mozilla/5.0 (X11; U; Linux i686; fr;
> > rv:1.8.0.4) Gecko/20060608 Ubuntu/dapper-security Firefox/1.5.0.4"
> >
> >
> > is there any others log elsewhere??
> >
> >
> > thanks a lot.
> >
> > a+++
> >
> >
> >
> >
> > On 6/26/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > But what error message is being logged in the Apache error_log file
> > > when this occurs? It should give you some indication of what the
> > > problem is.
> > >
> > > Also, what version of mod_python/Apache are you using?
> > >
> > > elekis wrote ..
> > > > a in fact I always has a 500 error.
> > > >
> > > >
> > > > so there here all file.
> > > >
> > > > .htaccess (thanks Dumpleton)
> > > > -----------------------------------------------------------
> > > >
> > > > AddHandler mod_python .py
> > > > PythonHandler mod_python.publisher
> > > > PythonDebug On
> > > >
> > > > <Files *.pyc>
> > > > deny from all
> > > > </Files>
> > > >
> > > > Options +MultiViews
> > > > MultiviewsMatch Handlers
> > > >
> > > > AddType text/html;qs=1.0 .py
> > > > AddType text/html;qs=0.9 .html
> > > > AddType text/plain;qs=0.8 .txt
> > > >
> > > > DirectoryIndex index.py
> > > >
> > > >
> > > > -----------------------------------
> > > > there is my add_event.py
> > > >
> > > > def index(req):
> > > >       s = """
> > > >               <html>
> > > >                       <head>
> > > >                       <link rel="stylesheet" type= "text/css" href="./add_event.css">
> > > >                       </head>
> > > >                       <body>
> > > >                       <div>ceci est un div</div>"""
> > > >       return s + """<h6>Ici H6 est le s&eacute;lecteur de ce paragraphe
> > en vert
> > > > :
> > > >                       Enfin un gain de poids non n&eacu44444444444444444444te;gligeable
> > est
> > > > souvent
> > > >                       obtenu par ce langage, bien que le d&eacute;tail
> > du contenu soit $
> > > >                       aussi un &eacute;l&eacute;ment qui va plus ou
> > moins modifier ce gain.
> > > > </h6>
> > > >                       </body>
> > > >                       </html>
> > > >                       """
> > > >
> > > > -------------------------------------------------------------
> > > >
> > > > and there is  the directory tag in the apache2.conf
> > > >
> > > > <Directory /var/www/public_html>
> > > >         AllowOverride FileInfo AuthConfig Limit
> > > >         Options Indexes SymLinksIfOwnerMatch IncludesNoExec
> > > > </Directory>
> > > > -----------------------------------------------------------------------
> > > > I trie with this adress (the public_html is a simple directory it's
> > just
> > > > for me
> > > >
> > > > http://localhost/public_html/add_event
> > > >
> > > > thanks a lot
> > > >
> > > >
> > > >
> > > >
> > > > ---------- Forwarded message ----------
> > > > From: elekis <elekis@gmail.com>
> > > > Date: Jun 20, 2006 8:41 AM
> > > > Subject: Re: [mod_python] other file than .py
> > > > To: Graham Dumpleton <grahamd@dscpl.com.au>
> > > >
> > > >
> > > > thanks a lot
> > > >
> > > >
> > > > On 6/20/06, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > > > elekis wrote ..
> > > > > > hi,
> > > > > >
> > > > > > I continue my little way in the magic world of python script under
> > > > web
> > > > > > and after installeing, testing and begin really to program a
> > > > > > interractive site , I confronted with a little problem. I cannot
> > touch
> > > > > > other file than .py
> > > > > >
> > > > > > exemple. there is my .htaccess
> > > > > >
> > > > > > ----------------------------------
> > > > > > SetHandler mod_python
> > > > > > PythonHandler mod_python.publisher
> > > > > > PythonDebug On
> > > > > > ----------------------------------
> > > > > >
> > > > > >
> > > > > > here is my event.css
> > > > > >
> > > > > > --------------------------------
> > > > > > h6 { font-size: 50pt ; }
> > > > > > -------------------------------
> > > > > > but when he trie to load the event.css I have a 500 error
> > > > > >
> > > > > > -->http://localhost/public_html/add_event.css and it's the same
> > thing
> > > > > > for other file. is there a thing than I must put on my htacces???
> > > > >
> > > > > Use "AddHandler" instead of "SetHandler" directive. For example:
> > > > >
> > > > >   AddHandler mod_python .py
> > > > >   PythonHandler mod_python.publisher
> > > > >
> > > > > What this says is that only requests with a .py in URL will be routed
> > > > > through to mod_python.publisher and not every request in that
> > > > > directory. This will allow you to place .css, .html, .jpg, .gif,
> > etc
> > > > files
> > > > > in the same directory.
> > > > >
> > > > > Depending on which version of mod_python you are using, you should
> > > > > also use:
> > > > >
> > > > >   <Files *.pyc>
> > > > >   deny from all
> > > > >   </Files>
> > > > >
> > > > > For older versions of mod_python this will ensure that compiled Python
> > > > > byte code files are not downloadable. In mod_python 3.2.X these byte
> > > > > code files are no longer generated for mod_python.publisher but can
> > > > > for basic handlers, but still good to use it regardless.
> > > > >
> > > > > > other thing. I very like the publisher mod.  cause we
> > > > > > http://localhost/public_html/balbla/ link (and that 's cool.
> > > > >
> > > > > If you are talking about the ability to not have .py in the URL,
> > ie the
> > > > > multiviews feature of Apache, then you also need to include additional
> > > > > configuration to get it to work when using the AddHandler directive.
> > > > > These additional directives are:
> > > > >
> > > > >   Options +MultiViews
> > > > >   MultiviewsMatch Handlers
> > > > >
> > > > >   AddType text/html;qs=1.0 .py
> > > > >   AddType text/html;qs=0.9 .html
> > > > >   AddType text/plain;qs=0.8 .txt
> > > > >
> > > > > If you don't have this, you will find that you can't leave off the
> > .py
> > > > > in the URL. Note that you may have to have Apache 2.0 and most
> > > > > recent version of mod_python (3.2.X) for this all to work properly.
> > > > >
> > > > > One last issue with using "AddHandler" over "SetHandler". When
> > > > > using "SetHandler", mod_python.publisher will automatically map
> > > > > a request against a directory to the 'index.py' file in the directory.
> > > > > When using "AddHandler" this will not happen by default. If you
> > > > > want this to happen, you must also include:
> > > > >
> > > > >   DirectoryIndex index.py
> > > > >
> > > > > This will cause Apache to take 'index.py' as a candidate index
> > > > > directory when request is against the directory.
> > > > >
> > > > > In summary, use the configuration:
> > > > >
> > > > >   AddHandler mod_python .py
> > > > >   PythonHandler mod_python.publisher
> > > > >   PythonDebug On
> > > > >
> > > > >   <Files *.pyc>
> > > > >   deny from all
> > > > >   </Files>
> > > > >
> > > > >   Options +MultiViews
> > > > >   MultiviewsMatch Handlers
> > > > >
> > > > >   AddType text/html;qs=1.0 .py
> > > > >   AddType text/html;qs=0.9 .html
> > > > >   AddType text/plain;qs=0.8 .txt
> > > > >
> > > > >   DirectoryIndex index.py
> > > > >
> > > > > > but on modpython.org they say that is not the fastest way.
> > > > > >
> > > > > >  Standard CGI:               23 requests/s
> > > > > >     Mod_python cgihandler:     385 requests/s
> > > > > >     Mod_python publisher:      476 requests/s
> > > > > >     Mod_python handler:       1203 requests/s
> > > > > >
> > > > > > is it possible to have the publisher link mod and the handler request???
> > > > >
> > > > > Both mod_python.publisher and mod_python.cgihandler are merely
> > > > > instances of mod_python handlers. There are slower because of the
> > > > > extra work they do on top of the basic handler interface.
> > > > >
> > > > > I would suggest you don't worry about speed issues, most sites do
> > not
> > > > need
> > > > > to be blindingly fast and you are probably going to have enough to
> > contend
> > > > > with as it is, plus find it fast enough anyway.
> > > > >
> > > > > FWIW, those figures were probably based on really old hardware as
> > well
> > > > > and can be ignored due to that fact. New hardware should perform
> > much
> > > > > better.
> > > > >
> > > > > Graham
> > > > >
> > > >
> > > >
> > > > --
> > > > ---------------------------------------------------------
> > > > nom : Jabon
> > > > prenom : Julien
> > > > matricule ulb :035890-72
> > > > ---------------------------------------------------------
> > > >
> > > >
> > > > --
> > > > ---------------------------------------------------------
> > > > nom : Jabon
> > > > prenom : Julien
> > > > matricule ulb :035890-72
> > > > ---------------------------------------------------------
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> >
> > --
> > ---------------------------------------------------------
> > nom : Jabon
> > prenom : Julien
> > matricule ulb :035890-72
> > ---------------------------------------------------------
>


-- 
---------------------------------------------------------
nom : Jabon
prenom : Julien
matricule ulb :035890-72
---------------------------------------------------------
From sanja at bougakov.com  Mon Jun 26 08:10:04 2006
From: sanja at bougakov.com (sanja@bougakov.com)
Date: Mon Jun 26 08:08:32 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely on 
	registry key?
Message-ID: <25431.195.16.47.253.1151323804.squirrel@www.bougakov.com>

Hello, Graham,

The problem is that adding the

   PythonPath "sys.path +
['C:/Python24/Lib','C:/Python24/Lib/mod_python','C:/Python24/DLLs','C:/Python24/Lib/lib-tk']"

line in httpd.conf doesn't help - I still get the

  [Mon Jun 26 15:56:04 2006] [error] [client 127.0.0.1] python_handler:
  make_obcallback returned no obCallBack!

in Apache's error.log file. But when I restore the
HKCU\Software\Python\PythonCore\2.4\PythonPath Registry hive and restart
Apache, everything works OK.

>The SetEnv directive only affects environment variables inherited by
>CGI scripts. It does not affect the environment of Apache itself and
>thus does not affect the environment of mod_python. In order to add
>extra directories into the Python module search path, use the
>PythonPath directive as documented in the mod_python documentation.
>Graham
>On 23/06/2006, at 8:00 PM, sanja at bougakov.com wrote:
>> The problem is that mod_python doesn't look at these env.
>> variables. It checks only HKCU\Software\Python registry hive.
>> If I remove it and restart Apache, I get "error 500".

From nikl at nikl.net  Mon Jun 26 10:10:31 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Mon Jun 26 10:09:33 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
Message-ID: <200606261610.31835.nikl@nikl.net>

hi,

for some reason the md5-module produces incorrect hashes for me. what seems 
particularly odd:
 * there are always leading zeros:
   * 8 leading zeros on a debian sid (32-bit)
   * 16 leading zeros on an ubuntu edgy (64-bit)
 * when calculating hashes distinct values, the hashes are all the same ...

substituting md5 with sha solves the problem for me on - well, rather a hack 
than a solution... but as md5 is used in other software, i'm wondering how 
this can be fixed.

unfortunately i couldn't find anything answers on this in google - is this a 
known bug? or possibly a counfiguration issue that I overlooked?
-- 
cheers,

	Nikl
From nikl at nikl.net  Mon Jun 26 10:18:24 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Mon Jun 26 10:17:30 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <200606261610.31835.nikl@nikl.net>
References: <200606261610.31835.nikl@nikl.net>
Message-ID: <200606261618.24138.nikl@nikl.net>

what i forgot to add: using the md5-module any other way in python works just 
fine - only in modpy it is not...
-- 
cheers,

	Nikl
From deron.meranda at gmail.com  Mon Jun 26 10:47:50 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Jun 26 10:48:02 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <200606261610.31835.nikl@nikl.net>
References: <200606261610.31835.nikl@nikl.net>
Message-ID: <5c06fa770606260747x17736d61vd1ff048f5b8e3540@mail.gmail.com>

On 6/26/06, Nikolaus Schlemm <nikl@nikl.net> wrote:
> for some reason the md5-module produces incorrect hashes for me. what seems
> particularly odd:
>  * there are always leading zeros:
>    * 8 leading zeros on a debian sid (32-bit)
>    * 16 leading zeros on an ubuntu edgy (64-bit)
>  * when calculating hashes distinct values, the hashes are all the same ...

What version of python do you have, and what version of
mod_python?  Can you provide an simple example of how
you're importing the module and calling it?

Are you calling the hexdigest() method, or just digest() to get
the value?

Are you sure you're not picking up some other module that
may be named "md5", or that you're not overloading the
variable.  Try displaying the value of md5.__file__

Also there should have been a file called "test_md5.py" which came
with your python (perhaps as /usr/lib/python2.4/test/test_md5.py).
Run it from a shell prompt and make sure all the tests pass.

Also to there are several official test vectors listed at the end
of RFC 1321, which you should use to make sure you're getting
the correct hash values: http://www.ietf.org/rfc/rfc1321.txt
-- 
Deron Meranda
From emlynj at gmail.com  Mon Jun 26 10:58:22 2006
From: emlynj at gmail.com (Emlyn Jones)
Date: Mon Jun 26 11:01:47 2006
Subject: [mod_python] Seg Fault when using session object
In-Reply-To: <200606260134.54067.emlynj@gmail.com>
References: <1151280818.26672@dscpl.user.openhosting.com>
	<200606260134.54067.emlynj@gmail.com>
Message-ID: <f4b5a9620606260758x1e5e89d0tf292543a60c4af9c@mail.gmail.com>

On 6/26/06, Emlyn Jones <emlynj@gmail.com> wrote:
> On Monday 26 Jun 2006 01:13, Graham Dumpleton wrote:
> > Emlyn Jones wrote ..
> >
> > > Hello,
> > > I've got this simple piece of mod_python/psp; If I uncomment the
> > > foo=session line I get a seg fault. Has anyone seen this before and can
> > > direct me towards finding out what the problem is please?
> > > I'm running Apache/2.0.50, mod_python 3.2.8 and Python 2.4.
> > > I've confirmed that it isn't the known expat and mysql/php problems.
> > >
> > > <%
> > > #foo = session
> > > done_login = False
> > > if(form.has_key("username")):
> > > username = form["username"]
> > > password = form["password"]
> > > req.write("%s" % (username,))
> > > %>
> >
> > What PSP does is that if it sees that the variable "session" is referenced
> > from inside of PSP code, then it will do what is necessary to create the
> > session, or if the session already exists, it will retrieve it from the
> > session database.
> >
> > Two problems could be occurring here. The first is that if this is
> > occurring on the very first time the session needs to be created, that the
> > session database it tries to use is corrupt in some way and therefore
> > crashing. The second is that the session already exists in the database,
> > but something was stored in the session object that probably shouldn't have
> > and when the session object is being restored, it is triggering some code
> > (possibly C code) which is then subsequently crashing.
> >
> > First thing you need to do is get out of PSP and write a simple handler
> > that creates a session object just to validate that sessions work and that
> > the session database is okay. Use a handler such as:
> >
> > from mod_python import Session
> > from mod_python import apache
> >
> > def handler(req):
> > session = Session.Session(req)
> > session['data'] = 1
> > session.save()
> > req.content_type = 'text/plain'
> > req.write('hello')
> > return apache .OK
> >
> > If this dies, then there is possibly a problem with the session
> > database, or your Python DBM modules are stuffed somehow. You need to
> > work out what type of session database is being used. It will probably
> > be DBM database and it will be stored in "/tmp" as "/tmp/mp_sess.dbm". I
> > am guessing you aren't on Win32 as in that case an in memory session
> > database is being used and it would be almost impossible to crash. Which
> > is might be is dictated by the MPM which Apache was configured with.
> >
> > Assuming it is DBM, check who owns the database in "/tmp". The owner
> > should match the user that Apache runs as. If you have multiple versions
> > of Apache running and they run as different users, you could have problems
> > because of that. If it is the wrong user and you only have one Apache
> > instance, you could try deleting the database and restarting Apache.
> > If you have multiple versions of Apache running as different users, you
> > may have to use PythonOption to change location where session database
> > is stored. See documentation for mod_python.
> >
> > If this is all okay, may be what you are storing in the session object.
> > This is where you need to show your code as to what you are sticking in the
> > session object before we can really comment. Also read:
> >
> > http://www.dscpl.com.au/articles/modpython-005.html
> >
> > Graham
>
> Hi Graham, thanks for the reply and explanation.
> That simple handler does die. The dbm file in /tmp checks out ok, it's the
> correct user and I haven't actually managed to store anything in it yet. This
> is the first use of it; In fact, If I rename it (the dbm file) and restart
> apache it doesn't get recreated so I guess that leaves me with the python DBM
> modules.
> I'll have a dig around and see what I can come up with.
> I do vaguely remember a caffeine fuelled evening running into problems with
> sleepycat which sounds like it might be connected (maybe library versions?).
> Is there any extra debugging info I can turn on to point me in the right
> direction? Otherwise I suppose it's trying to test out the dbm stuff in a
> python shell first and take it from there.
>
> Cheers,
> Emlyn.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
Hello,
I'm not sure if I'm heading in the right direction here.
I can see from a python shell that the dbm module is using the
"Berkeley DB" library (dbm.library).
lsof -p <http pid> | grep dbm shows that it is linked to libgdbm.so.3.0.0.
I'm a little confused but could this be the root of my problems?

Cheers,
Emlyn.

/usr/lib/libgdbm.so.3.0.0
From nikl at nikl.net  Mon Jun 26 11:32:07 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Mon Jun 26 11:31:03 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <5c06fa770606260747x17736d61vd1ff048f5b8e3540@mail.gmail.com>
References: <200606261610.31835.nikl@nikl.net>
	<5c06fa770606260747x17736d61vd1ff048f5b8e3540@mail.gmail.com>
Message-ID: <200606261732.07798.nikl@nikl.net>

"Deron Meranda" <deron.meranda@gmail.com> responded offlist:
> What version of python do you have, and what version of
> mod_python?  Can you provide an simple example of how
> you're importing the module and calling it?

i'm using python 2.4.3-1ubuntu1 and libapache2-mod-python-3.1.4-0ubuntu1 on my 
ubuntu box and python 2.3.5-11 and libapache2-mod-python-3.2.8-1 on debian.

tested both with the following snippet:

    from mod_python import apache 
 
    # from http://www.ietf.org/rfc/rfc1321.txt
    MD5_TESTS = { 
        "": "d41d8cd98f00b204e9800998ecf8427e", 
        "a": "0cc175b9c0f1b6a831c399e269772661", 
        "abc": "900150983cd24fb0d6963f7d28e17f72", 
        "message digest": "f96b697d7cb7938d525a2f31aaf161d0", 
        "abcdefghijklmnopqrstuvwxyz": "c3fcd3d76192e4007dfb496cca67e13b", 
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789": "d174ab98d277d9f5a5611c2c9f419d9f", 
        "12345678901234567890123456789012345678901234567890123456789012345678901234567890": "57edf4a22be3c955ac49da2e2107b67a" 
    } 
 
    def handler(req): 
        import md5 
        req.content_type = 'text/plain' 
        req.write('md5: %s\n' % md5.__file__) 
        for k, v in MD5_TESTS.items(): 
            m = md5.new(k).hexdigest() 
            req.write('"%s" -> "%s" ? %s\n' % (k, m, (m == v)))  
        return apache.OK 

which e.g. leads to:

    md5: /usr/lib/python2.4/lib-dynload/md5.so
    "" -> "0000000000000000d09215a3e97561b3" ? False
    "a" -> "0000000000000000d09215a3e97561b3" ? False
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789" -> "0000000000000000d09215a3e97561b3" ? 
False
    "12345678901234567890123456789012345678901234567890123456789012345678901234567890" -> "0000000000000000d09215a3e97561b3" ? 
False
    "message digest" -> "0000000000000000d09215a3e97561b3" ? False
    "abc" -> "0000000000000000d09215a3e97561b3" ? False
    "abcdefghijklmnopqrstuvwxyz" -> "0000000000000000d09215a3e97561b3" ? False

> Are you calling the hexdigest() method, or just digest() to get
> the value?
hexdigest()

> Are you sure you're not picking up some other module that
> may be named "md5", or that you're not overloading the
> variable.  Try displaying the value of md5.__file__
/usr/lib/python2.4/lib-dynload/md5.so on ubuntu (the same but 2.3 on debian)

> Also there should have been a file called "test_md5.py" which came
> with your python (perhaps as /usr/lib/python2.4/test/test_md5.py).
> Run it from a shell prompt and make sure all the tests pass.
neither distro has a test_md5.py - but using the module _anywhere_ outside of 
modpy works..

> Also to there are several official test vectors listed at the end
> of RFC 1321, which you should use to make sure you're getting
> the correct hash values: http://www.ietf.org/rfc/rfc1321.txt
running those hash-calculations e.g. in the interpreter works totally fine...
-- 
cheers,

	Nikl
From deron.meranda at gmail.com  Mon Jun 26 11:54:11 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Jun 26 11:54:18 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <200606261732.07798.nikl@nikl.net>
References: <200606261610.31835.nikl@nikl.net>
	<5c06fa770606260747x17736d61vd1ff048f5b8e3540@mail.gmail.com>
	<200606261732.07798.nikl@nikl.net>
Message-ID: <5c06fa770606260854l5d9742d3tfcd61c359f6089bb@mail.gmail.com>

On 6/26/06, Nikolaus Schlemm <nikl@nikl.net> wrote:
> i'm using python 2.4.3-1ubuntu1 and libapache2-mod-python-3.1.4-0ubuntu1 on my
> ubuntu box and python 2.3.5-11 and libapache2-mod-python-3.2.8-1 on debian.

Wow, your MD5s definitely are messed up.  I don't off hand know what
could be causing it, your Python code looks fine to me.

But it is interesting that all the hex values are the same regardless
of the digest input.  I don't have an ubuntu or debian setup .... does
anybody else on the list have this same setup and can confirm this
behavior?

Is there a chance that perhaps some other module may be conflicting?
Try to also output this:

   import sys
   req.write( repr(sys.modules) )

BTW, what processors do your machines have?
-- 
Deron Meranda
From nikl at nikl.net  Mon Jun 26 12:48:55 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Mon Jun 26 12:47:54 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <5c06fa770606260854l5d9742d3tfcd61c359f6089bb@mail.gmail.com>
References: <200606261610.31835.nikl@nikl.net>
	<200606261732.07798.nikl@nikl.net>
	<5c06fa770606260854l5d9742d3tfcd61c359f6089bb@mail.gmail.com>
Message-ID: <200606261848.55967.nikl@nikl.net>

> But it is interesting that all the hex values are the same regardless
> of the digest input.  I don't have an ubuntu or debian setup .... does
also note that the hex-values change each request.

> Is there a chance that perhaps some other module may be conflicting?
> Try to also output this:
>
>    import sys
>    req.write( repr(sys.modules) )
looks ok to me:
{'cStringIO': <module 'cStringIO' 
from '/usr/lib/python2.4/lib-dynload/cStringIO.so'>, 'cmd': <module 'cmd' 
from '/usr/lib/python2.4/cmd.pyc'>, 'copy_reg': <module 'copy_reg' 
from '/usr/lib/python2.4/copy_reg.pyc'>, 'sre_compile': <module 'sre_compile' 
from '/usr/lib/python2.4/sre_compile.pyc'>, 'mod_python.stat': None, '_sre': 
<module '_sre' (built-in)>, 'site': <module 'site' 
from '/usr/lib/python2.4/site.pyc'>, '__builtin__': <module '__builtin__' 
(built-in)>, 'syslog': <module 'syslog' 
from '/usr/lib/python2.4/lib-dynload/syslog.so'>, '__main__': 
<module '__main__' (built-in)>, 'mod_python': <module 'mod_python' 
from '/usr/lib/python2.4/site-packages/mod_python/__init__.pyc'>, 'posixpath': 
<module 'posixpath' from '/usr/lib/python2.4/posixpath.pyc'>, 'bdb': 
<module 'bdb' from '/usr/lib/python2.4/bdb.pyc'>, 'mod_python.sys': 
None, 'pprint': <module 'pprint' 
from '/usr/lib/python2.4/pprint.pyc'>, 'sre_constants': 
<module 'sre_constants' from '/usr/lib/python2.4/sre_constants.pyc'>, 're': 
<module 're' from '/usr/lib/python2.4/re.pyc'>, 'mod_python.imp': 
None, 'os.path': <module 'posixpath' 
from '/usr/lib/python2.4/posixpath.pyc'>, 'mod_python.pdb': 
None, 'mod_python.traceback': None, 'md5': <module 'md5' 
from '/usr/lib/python2.4/lib-dynload/md5.so'>, 'stat': <module 'stat' 
from '/usr/lib/python2.4/stat.pyc'>, 'zipimport': <module 'zipimport' 
(built-in)>, 'mod_python.types': None, 'string': <module 'string' 
from '/usr/lib/python2.4/string.pyc'>, 'mptest': <module 'mptest' 
from '/home/nikl/dev/modpython/mptest.py'>, 'UserDict': <module 'UserDict' 
from '/usr/lib/python2.4/UserDict.pyc'>, 'repr': <module 'repr' 
from '/usr/lib/python2.4/repr.pyc'>, 'mod_python.os': 
None, 'mod_python.apache': <module 'mod_python.apache' 
from '/usr/lib/python2.4/site-packages/mod_python/apache.pyc'>, 'imp': 
<module 'imp' (built-in)>, 'types': <module 'types' 
from '/usr/lib/python2.4/types.pyc'>, 'strop': <module 'strop' 
from '/usr/lib/python2.4/lib-dynload/strop.so'>, 'sys': <module 'sys' 
(built-in)>, 'sre': <module 'sre' 
from '/usr/lib/python2.4/sre.pyc'>, 'traceback': <module 'traceback' 
from '/usr/lib/python2.4/traceback.pyc'>, 'mod_python._apache': 
None, '_apache': <module '_apache' (built-in)>, 'linecache': 
<module 'linecache' from '/usr/lib/python2.4/linecache.pyc'>, 'itertools': 
<module 'itertools' 
from '/usr/lib/python2.4/lib-dynload/itertools.so'>, 'posix': <module 'posix' 
(built-in)>, 'mod_python.time': None, 'time': <module 'time' 
from '/usr/lib/python2.4/lib-dynload/time.so'>, 'sre_parse': 
<module 'sre_parse' 
from '/usr/lib/python2.4/sre_parse.pyc'>, 'mod_python.syslog': None, 'os': 
<module 'os' from '/usr/lib/python2.4/os.pyc'>, 'pdb': <module 'pdb' 
from '/usr/lib/python2.4/pdb.pyc'>}

> BTW, what processors do your machines have?
the debian box runs on a celeron 2ghz, the ubuntu box on an opteron 144
-- 
MfG

	Nikl
From deron.meranda at gmail.com  Mon Jun 26 13:25:05 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Jun 26 13:25:10 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <200606261848.55967.nikl@nikl.net>
References: <200606261610.31835.nikl@nikl.net>
	<200606261732.07798.nikl@nikl.net>
	<5c06fa770606260854l5d9742d3tfcd61c359f6089bb@mail.gmail.com>
	<200606261848.55967.nikl@nikl.net>
Message-ID: <5c06fa770606261025l178b493dn95a433b7eeebe630@mail.gmail.com>

On 6/26/06, Nikolaus Schlemm <nikl@nikl.net> wrote:
> >    import sys
> >    req.write( repr(sys.modules) )
> looks ok to me:
> {'cStringIO': <module 'cStringIO' ...

sys.modules looks fine to me as well.  I really don't know what is
going on.  I've checked the Python buglist too, and found nothing
similar.  The md5 module is all C based, and after reviewing the
code for it I can not yet see how running in the mod_python
environment could be affecting it.

Perhaps as just another sanity check for a conflicting library, find
one of your httpd processes (that you know has run your handler
at least once) and type out it's file mappings, e.g., as root for
process #12345:

   cat /proc/12345/maps

Also, please review the Apache error logs, just to make sure
nothing unusual is showing up in them.

And just to be clear, is all the software (python, apache, mod_python)
as-is from the linux distribution; or have you attempted to compile
or install any of the components yourself from source?
-- 
Deron Meranda
From emlynj at gmail.com  Mon Jun 26 13:29:02 2006
From: emlynj at gmail.com (Emlyn Jones)
Date: Mon Jun 26 13:29:05 2006
Subject: [mod_python] Seg Fault when using session object
In-Reply-To: <f4b5a9620606260758x1e5e89d0tf292543a60c4af9c@mail.gmail.com>
References: <1151280818.26672@dscpl.user.openhosting.com>
	<200606260134.54067.emlynj@gmail.com>
	<f4b5a9620606260758x1e5e89d0tf292543a60c4af9c@mail.gmail.com>
Message-ID: <f4b5a9620606261029t20edb087j97af1a2386cbb1d9@mail.gmail.com>

On 6/26/06, Emlyn Jones <emlynj@gmail.com> wrote:
> On 6/26/06, Emlyn Jones <emlynj@gmail.com> wrote:
> > On Monday 26 Jun 2006 01:13, Graham Dumpleton wrote:
> > > Emlyn Jones wrote ..
> > >
> > > > Hello,
> > > > I've got this simple piece of mod_python/psp; If I uncomment the
> > > > foo=session line I get a seg fault. Has anyone seen this before and can
> > > > direct me towards finding out what the problem is please?
> > > > I'm running Apache/2.0.50, mod_python 3.2.8 and Python 2.4.
> > > > I've confirmed that it isn't the known expat and mysql/php problems.
> > > >
> > > > <%
> > > > #foo = session
> > > > done_login = False
> > > > if(form.has_key("username")):
> > > > username = form["username"]
> > > > password = form["password"]
> > > > req.write("%s" % (username,))
> > > > %>
> > >
> > > What PSP does is that if it sees that the variable "session" is referenced
> > > from inside of PSP code, then it will do what is necessary to create the
> > > session, or if the session already exists, it will retrieve it from the
> > > session database.
> > >
> > > Two problems could be occurring here. The first is that if this is
> > > occurring on the very first time the session needs to be created, that the
> > > session database it tries to use is corrupt in some way and therefore
> > > crashing. The second is that the session already exists in the database,
> > > but something was stored in the session object that probably shouldn't have
> > > and when the session object is being restored, it is triggering some code
> > > (possibly C code) which is then subsequently crashing.
> > >
> > > First thing you need to do is get out of PSP and write a simple handler
> > > that creates a session object just to validate that sessions work and that
> > > the session database is okay. Use a handler such as:
> > >
> > > from mod_python import Session
> > > from mod_python import apache
> > >
> > > def handler(req):
> > > session = Session.Session(req)
> > > session['data'] = 1
> > > session.save()
> > > req.content_type = 'text/plain'
> > > req.write('hello')
> > > return apache .OK
> > >
> > > If this dies, then there is possibly a problem with the session
> > > database, or your Python DBM modules are stuffed somehow. You need to
> > > work out what type of session database is being used. It will probably
> > > be DBM database and it will be stored in "/tmp" as "/tmp/mp_sess.dbm". I
> > > am guessing you aren't on Win32 as in that case an in memory session
> > > database is being used and it would be almost impossible to crash. Which
> > > is might be is dictated by the MPM which Apache was configured with.
> > >
> > > Assuming it is DBM, check who owns the database in "/tmp". The owner
> > > should match the user that Apache runs as. If you have multiple versions
> > > of Apache running and they run as different users, you could have problems
> > > because of that. If it is the wrong user and you only have one Apache
> > > instance, you could try deleting the database and restarting Apache.
> > > If you have multiple versions of Apache running as different users, you
> > > may have to use PythonOption to change location where session database
> > > is stored. See documentation for mod_python.
> > >
> > > If this is all okay, may be what you are storing in the session object.
> > > This is where you need to show your code as to what you are sticking in the
> > > session object before we can really comment. Also read:
> > >
> > > http://www.dscpl.com.au/articles/modpython-005.html
> > >
> > > Graham
> >
> > Hi Graham, thanks for the reply and explanation.
> > That simple handler does die. The dbm file in /tmp checks out ok, it's the
> > correct user and I haven't actually managed to store anything in it yet. This
> > is the first use of it; In fact, If I rename it (the dbm file) and restart
> > apache it doesn't get recreated so I guess that leaves me with the python DBM
> > modules.
> > I'll have a dig around and see what I can come up with.
> > I do vaguely remember a caffeine fuelled evening running into problems with
> > sleepycat which sounds like it might be connected (maybe library versions?).
> > Is there any extra debugging info I can turn on to point me in the right
> > direction? Otherwise I suppose it's trying to test out the dbm stuff in a
> > python shell first and take it from there.
> >
> > Cheers,
> > Emlyn.
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> Hello,
> I'm not sure if I'm heading in the right direction here.
> I can see from a python shell that the dbm module is using the
> "Berkeley DB" library (dbm.library).
> lsof -p <http pid> | grep dbm shows that it is linked to libgdbm.so.3.0.0.
> I'm a little confused but could this be the root of my problems?
>
> Cheers,
> Emlyn.
>
> /usr/lib/libgdbm.so.3.0.0
>
Ok, now I'm really stuck.
I've rebuilt a vanilla version of Python2.4 and recompiled Apache and
mod_python. I then removed the existing dbm file in /tmp and restarted
everything.
Still get a seg fault when I try to use the session. No new dbm file
has been created.
Is there a way to make mod_python/psp use a FileSession instead of
DBM? At least then I can confirm that it is some kind of dbm problem.
Maybe there are some tests I can do from the shell to see if the dbm
stuff is working in python (a simple test of creating a new db and
saving stuff to it suggests that it is)?
It's definitely not what I'm storing in the session, I can't get close
to storing anything.
Any more pointers would save what little hair I have left.

Cheers,
Emlyn.
From jpg at jgassociates.ca  Mon Jun 26 14:12:27 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Jun 26 14:12:14 2006
Subject: [mod_python] Seg Fault when using session object
In-Reply-To: <f4b5a9620606261029t20edb087j97af1a2386cbb1d9@mail.gmail.com>
References: <1151280818.26672@dscpl.user.openhosting.com>	<200606260134.54067.emlynj@gmail.com>	<f4b5a9620606260758x1e5e89d0tf292543a60c4af9c@mail.gmail.com>
	<f4b5a9620606261029t20edb087j97af1a2386cbb1d9@mail.gmail.com>
Message-ID: <44A0238B.8080409@jgassociates.ca>

Emlyn Jones wrote:
> On 6/26/06, Emlyn Jones <emlynj@gmail.com> wrote:
>> On 6/26/06, Emlyn Jones <emlynj@gmail.com> wrote:
>> > On Monday 26 Jun 2006 01:13, Graham Dumpleton wrote:
>> > > Emlyn Jones wrote ..
>> > >
>> > > > Hello,
>> > > > I've got this simple piece of mod_python/psp; If I uncomment the
>> > > > foo=session line I get a seg fault. Has anyone seen this before
>> and can
>> > > > direct me towards finding out what the problem is please?
>> > > > I'm running Apache/2.0.50, mod_python 3.2.8 and Python 2.4.
>> > > > I've confirmed that it isn't the known expat and mysql/php
>> problems.
>> > > >
>> > > > <%
>> > > > #foo = session
>> > > > done_login = False
>> > > > if(form.has_key("username")):
>> > > > username = form["username"]
>> > > > password = form["password"]
>> > > > req.write("%s" % (username,))
>> > > > %>
>> > >
>> > > What PSP does is that if it sees that the variable "session" is
>> referenced
>> > > from inside of PSP code, then it will do what is necessary to
>> create the
>> > > session, or if the session already exists, it will retrieve it
>> from the
>> > > session database.
>> > >
>> > > Two problems could be occurring here. The first is that if this is
>> > > occurring on the very first time the session needs to be created,
>> that the
>> > > session database it tries to use is corrupt in some way and therefore
>> > > crashing. The second is that the session already exists in the
>> database,
>> > > but something was stored in the session object that probably
>> shouldn't have
>> > > and when the session object is being restored, it is triggering
>> some code
>> > > (possibly C code) which is then subsequently crashing.
>> > >
>> > > First thing you need to do is get out of PSP and write a simple
>> handler
>> > > that creates a session object just to validate that sessions work
>> and that
>> > > the session database is okay. Use a handler such as:
>> > >
>> > > from mod_python import Session
>> > > from mod_python import apache
>> > >
>> > > def handler(req):
>> > > session = Session.Session(req)
>> > > session['data'] = 1
>> > > session.save()
>> > > req.content_type = 'text/plain'
>> > > req.write('hello')
>> > > return apache .OK
>> > >
>> > > If this dies, then there is possibly a problem with the session
>> > > database, or your Python DBM modules are stuffed somehow. You need to
>> > > work out what type of session database is being used. It will
>> probably
>> > > be DBM database and it will be stored in "/tmp" as
>> "/tmp/mp_sess.dbm". I
>> > > am guessing you aren't on Win32 as in that case an in memory session
>> > > database is being used and it would be almost impossible to crash.
>> Which
>> > > is might be is dictated by the MPM which Apache was configured with.
>> > >
>> > > Assuming it is DBM, check who owns the database in "/tmp". The owner
>> > > should match the user that Apache runs as. If you have multiple
>> versions
>> > > of Apache running and they run as different users, you could have
>> problems
>> > > because of that. If it is the wrong user and you only have one Apache
>> > > instance, you could try deleting the database and restarting Apache.
>> > > If you have multiple versions of Apache running as different
>> users, you
>> > > may have to use PythonOption to change location where session
>> database
>> > > is stored. See documentation for mod_python.
>> > >
>> > > If this is all okay, may be what you are storing in the session
>> object.
>> > > This is where you need to show your code as to what you are
>> sticking in the
>> > > session object before we can really comment. Also read:
>> > >
>> > > http://www.dscpl.com.au/articles/modpython-005.html
>> > >
>> > > Graham
>> >
>> > Hi Graham, thanks for the reply and explanation.
>> > That simple handler does die. The dbm file in /tmp checks out ok,
>> it's the
>> > correct user and I haven't actually managed to store anything in it
>> yet. This
>> > is the first use of it; In fact, If I rename it (the dbm file) and
>> restart
>> > apache it doesn't get recreated so I guess that leaves me with the
>> python DBM
>> > modules.
>> > I'll have a dig around and see what I can come up with.
>> > I do vaguely remember a caffeine fuelled evening running into
>> problems with
>> > sleepycat which sounds like it might be connected (maybe library
>> versions?).
>> > Is there any extra debugging info I can turn on to point me in the
>> right
>> > direction? Otherwise I suppose it's trying to test out the dbm stuff
>> in a
>> > python shell first and take it from there.
>> >
>> > Cheers,
>> > Emlyn.
>> >
>> > _______________________________________________
>> > Mod_python mailing list
>> > Mod_python@modpython.org
>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>> >
>> Hello,
>> I'm not sure if I'm heading in the right direction here.
>> I can see from a python shell that the dbm module is using the
>> "Berkeley DB" library (dbm.library).
>> lsof -p <http pid> | grep dbm shows that it is linked to
>> libgdbm.so.3.0.0.
>> I'm a little confused but could this be the root of my problems?
>>
>> Cheers,
>> Emlyn.
>>
>> /usr/lib/libgdbm.so.3.0.0
>>
> Ok, now I'm really stuck.
> I've rebuilt a vanilla version of Python2.4 and recompiled Apache and
> mod_python. I then removed the existing dbm file in /tmp and restarted
> everything.
> Still get a seg fault when I try to use the session. No new dbm file
> has been created.
> Is there a way to make mod_python/psp use a FileSession instead of
> DBM? At least then I can confirm that it is some kind of dbm problem.
> Maybe there are some tests I can do from the shell to see if the dbm
> stuff is working in python (a simple test of creating a new db and
> saving stuff to it suggests that it is)?
> It's definitely not what I'm storing in the session, I can't get close
> to storing anything.
> Any more pointers would save what little hair I have left.

To use FileSession rather than the default DbmSession use:

PythonOption session FileSession

Jim

From jpg at jgassociates.ca  Mon Jun 26 14:39:19 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Mon Jun 26 14:38:51 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <200606261732.07798.nikl@nikl.net>
References: <200606261610.31835.nikl@nikl.net>	<5c06fa770606260747x17736d61vd1ff048f5b8e3540@mail.gmail.com>
	<200606261732.07798.nikl@nikl.net>
Message-ID: <44A029D7.2010907@jgassociates.ca>

Nikolaus Schlemm wrote:
> "Deron Meranda" <deron.meranda@gmail.com> responded offlist:
>> What version of python do you have, and what version of
>> mod_python?  Can you provide an simple example of how
>> you're importing the module and calling it?
> 
> i'm using python 2.4.3-1ubuntu1 and libapache2-mod-python-3.1.4-0ubuntu1 on my 
> ubuntu box and python 2.3.5-11 and libapache2-mod-python-3.2.8-1 on debian.
> 
> tested both with the following snippet:
> 
>     from mod_python import apache 
>  
>     # from http://www.ietf.org/rfc/rfc1321.txt
>     MD5_TESTS = { 
>         "": "d41d8cd98f00b204e9800998ecf8427e", 
>         "a": "0cc175b9c0f1b6a831c399e269772661", 
>         "abc": "900150983cd24fb0d6963f7d28e17f72", 
>         "message digest": "f96b697d7cb7938d525a2f31aaf161d0", 
>         "abcdefghijklmnopqrstuvwxyz": "c3fcd3d76192e4007dfb496cca67e13b", 
>         "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789": "d174ab98d277d9f5a5611c2c9f419d9f", 
>         "12345678901234567890123456789012345678901234567890123456789012345678901234567890": "57edf4a22be3c955ac49da2e2107b67a" 
>     } 
>  
>     def handler(req): 
>         import md5 
>         req.content_type = 'text/plain' 
>         req.write('md5: %s\n' % md5.__file__) 
>         for k, v in MD5_TESTS.items(): 
>             m = md5.new(k).hexdigest() 
>             req.write('"%s" -> "%s" ? %s\n' % (k, m, (m == v)))  
>         return apache.OK 
> 
> which e.g. leads to:
> 
>     md5: /usr/lib/python2.4/lib-dynload/md5.so
>     "" -> "0000000000000000d09215a3e97561b3" ? False
>     "a" -> "0000000000000000d09215a3e97561b3" ? False
>     "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789" -> "0000000000000000d09215a3e97561b3" ? 
> False
>     "12345678901234567890123456789012345678901234567890123456789012345678901234567890" -> "0000000000000000d09215a3e97561b3" ? 
> False
>     "message digest" -> "0000000000000000d09215a3e97561b3" ? False
>     "abc" -> "0000000000000000d09215a3e97561b3" ? False
>     "abcdefghijklmnopqrstuvwxyz" -> "0000000000000000d09215a3e97561b3" ? False
> 

Running your test script on Ubuntu 6.06  (Apache/2.0.55 (Ubuntu)
mod_python/3.3.0-dev-20060520 Python/2.4.3) I get:

md5: /usr/lib/python2.4/lib-dynload/md5.so
"" -> "d41d8cd98f00b204e9800998ecf8427e" ? True
"a" -> "0cc175b9c0f1b6a831c399e269772661" ? True
"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789" ->
"d174ab98d277d9f5a5611c2c9f419d9f" ? True
"12345678901234567890123456789012345678901234567890123456789012345678901234567890"
-> "57edf4a22be3c955ac49da2e2107b67a" ? True
"message digest" -> "f96b697d7cb7938d525a2f31aaf161d0" ? True
"abc" -> "900150983cd24fb0d6963f7d28e17f72" ? True
"abcdefghijklmnopqrstuvwxyz" -> "c3fcd3d76192e4007dfb496cca67e13b" ? True


Beyond that, I don't know what to say.

Jim

From listspam at flowtheory.net  Mon Jun 26 14:54:54 2006
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Mon Jun 26 14:55:06 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <5c06fa770606261025l178b493dn95a433b7eeebe630@mail.gmail.com>
References: <200606261610.31835.nikl@nikl.net>
	<200606261732.07798.nikl@nikl.net>
	<5c06fa770606260854l5d9742d3tfcd61c359f6089bb@mail.gmail.com>
	<200606261848.55967.nikl@nikl.net>
	<5c06fa770606261025l178b493dn95a433b7eeebe630@mail.gmail.com>
Message-ID: <1151348095.10984.8.camel@localhost.localdomain>

Opteron? This isn't a 32bit vs. 64 bit memory allocation crap problem,
is it?

-jag

On Mon, 2006-06-26 at 13:25 -0400, Deron Meranda wrote:
> On 6/26/06, Nikolaus Schlemm <nikl@nikl.net> wrote:
> > >    import sys
> > >    req.write( repr(sys.modules) )
> > looks ok to me:
> > {'cStringIO': <module 'cStringIO' ...
> 
> sys.modules looks fine to me as well.  I really don't know what is
> going on.  I've checked the Python buglist too, and found nothing
> similar.  The md5 module is all C based, and after reviewing the
> code for it I can not yet see how running in the mod_python
> environment could be affecting it.
> 
> Perhaps as just another sanity check for a conflicting library, find
> one of your httpd processes (that you know has run your handler
> at least once) and type out it's file mappings, e.g., as root for
> process #12345:
> 
>    cat /proc/12345/maps
> 
> Also, please review the Apache error logs, just to make sure
> nothing unusual is showing up in them.
> 
> And just to be clear, is all the software (python, apache, mod_python)
> as-is from the linux distribution; or have you attempted to compile
> or install any of the components yourself from source?

From deron.meranda at gmail.com  Mon Jun 26 17:36:53 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Mon Jun 26 17:37:00 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <200606262205.42113.nikl@nikl.net>
References: <200606261610.31835.nikl@nikl.net>
	<200606261848.55967.nikl@nikl.net>
	<5c06fa770606261025l178b493dn95a433b7eeebe630@mail.gmail.com>
	<200606262205.42113.nikl@nikl.net>
Message-ID: <5c06fa770606261436qbf8c934h5e9e19ffbb025913@mail.gmail.com>

On 6/26/06, Nikolaus Schlemm <nikl@nikl.net> wrote:
> [ .... cut (cat /proc/12345/map) output here--included below .... ]

So we're dealing with a 64-bit Linux process!

That platform probably doesn't get nearly as much testing as 32-bit.
Are both of your broken machines 64-bit?  Unfortunately I don't have
access to a 64-bit Intel machine; does anybody else on this list?

Otherwise nothing looks obviously wrong with your process map
(no mixed-up python versions, etc.)

You do however have a lot of PHP libraries loaded, and even
X11 is linked in there for some reason.  I can't see how those could
affect the python md5 module; but is it possible for you to run a
much leaner Apache with most of the optional modules disabled
(perhaps even on a different port if needed), just to try to eliminate
some sort of library conflict.

> > Also, please review the Apache error logs, just to make sure
> > nothing unusual is showing up in them.
> nothing unfortunately..

> > And just to be clear, is all the software (python, apache, mod_python)
> > as-is from the linux distribution; or have you attempted to compile
> > or install any of the components yourself from source?
> nope - all coming straight from the distros

Hmmm.  Just for some more information, could you get
 * Which Apache MPM are you using?  (If it's a threaded one,
    could you change to say "prefork" and retest?)
 * kernel version (cat /proc/version)
 * exec shield config
       cat /proc/sys/randomize_va_space
       cat /proc/sys/exec-shield
 * SELinux status
       sestatus

Also, I suspect that perhaps it might be time to get this report
into the bug database if you wouldn't mind.
   http://issues.apache.org/jira/browse/MODPYTHON
If you need help with Jira or prefer not to use it, just let us know.

Thanks for hanging in there Nikolaus, I know this must be frustrating.
-- 
Deron Meranda


Here's Nikolaus' /proc/xxxx/map output:
> >    cat /proc/12345/maps
> 00400000-0046a000 r-xp 00000000 09:01
> 4325479                            /usr/sbin/apache2
> 00569000-0056e000 rw-p 00069000 09:01
> 4325479                            /usr/sbin/apache2
> 0056e000-00914000 rw-p 0056e000 00:00 0
> [heap]
> 2aaaaaaab000-2aaaaaac7000 r-xp 00000000 09:01
> 5128222                    /lib/ld-2.4.so
> 2aaaaaac7000-2aaaaab0b000 rw-p 2aaaaaac7000 00:00 0
> 2aaaaab0c000-2aaaaab7e000 rw-p 2aaaaab0c000 00:00 0
> 2aaaaabc6000-2aaaaabc8000 rw-p 0001b000 09:01
> 5128222                    /lib/ld-2.4.so
> 2aaaaabc8000-2aaaaabdf000 r-xp 00000000 09:01
> 4333742                    /usr/lib/libpcre.so.3.12.0
> 2aaaaabdf000-2aaaaacde000 ---p 00017000 09:01
> 4333742                    /usr/lib/libpcre.so.3.12.0
> 2aaaaacde000-2aaaaacf5000 rw-p 00016000 09:01
> 4333742                    /usr/lib/libpcre.so.3.12.0
> 2aaaaacf5000-2aaaaad0b000 r-xp 00000000 09:01
> 4326499                    /usr/lib/libz.so.1.2.3
> 2aaaaad0b000-2aaaaae0a000 ---p 00016000 09:01
> 4326499                    /usr/lib/libz.so.1.2.3
> 2aaaaae0a000-2aaaaae0b000 rw-p 00015000 09:01
> 4326499                    /usr/lib/libz.so.1.2.3
> 2aaaaae0b000-2aaaaae4c000 r-xp 00000000 09:01
> 4327023                    /usr/lib/libssl.so.0.9.8
> 2aaaaae4c000-2aaaaaf4c000 ---p 00041000 09:01
> 4327023                    /usr/lib/libssl.so.0.9.8
> 2aaaaaf4c000-2aaaaaf52000 rw-p 00041000 09:01
> 4327023                    /usr/lib/libssl.so.0.9.8
> 2aaaaaf52000-2aaaab09e000 r-xp 00000000 09:01
> 4326878                    /usr/lib/libcrypto.so.0.9.8
> 2aaaab09e000-2aaaab19e000 ---p 0014c000 09:01
> 4326878                    /usr/lib/libcrypto.so.0.9.8
> 2aaaab19e000-2aaaab1c0000 rw-p 0014c000 09:01
> 4326878                    /usr/lib/libcrypto.so.0.9.8
> 2aaaab1c0000-2aaaab1c5000 rw-p 2aaaab1c0000 00:00 0
> 2aaaab1c5000-2aaaab1dc000 r-xp 00000000 09:01
> 4328616                    /usr/lib/libaprutil-0.so.0.9.7
> 2aaaab1dc000-2aaaab2dc000 ---p 00017000 09:01
> 4328616                    /usr/lib/libaprutil-0.so.0.9.7
> 2aaaab2dc000-2aaaab2dd000 rw-p 00017000 09:01
> 4328616                    /usr/lib/libaprutil-0.so.0.9.7
> 2aaaab2dd000-2aaaab316000 r-xp 00000000 09:01
> 4330063                    /usr/lib/libldap_r.so.2.0.130
> 2aaaab316000-2aaaab416000 ---p 00039000 09:01
> 4330063                    /usr/lib/libldap_r.so.2.0.130
> 2aaaab416000-2aaaab418000 rw-p 00039000 09:01
> 4330063                    /usr/lib/libldap_r.so.2.0.130
> 2aaaab418000-2aaaab425000 r-xp 00000000 09:01
> 4330062                    /usr/lib/liblber.so.2.0.130
> 2aaaab425000-2aaaab525000 ---p 0000d000 09:01
> 4330062                    /usr/lib/liblber.so.2.0.130
> 2aaaab525000-2aaaab526000 rw-p 0000d000 09:01
> 4330062                    /usr/lib/liblber.so.2.0.130
> 2aaaab526000-2aaaab527000 rw-p 2aaaab526000 00:00 0
> 2aaaab527000-2aaaab616000 r-xp 00000000 09:01
> 4326487                    /usr/lib/libdb-4.3.so
> 2aaaab616000-2aaaab716000 ---p 000ef000 09:01
> 4326487                    /usr/lib/libdb-4.3.so
> 2aaaab716000-2aaaab71b000 rw-p 000ef000 09:01
> 4326487                    /usr/lib/libdb-4.3.so
> 2aaaab71b000-2aaaab73b000 r-xp 00000000 09:01
> 4327985                    /usr/lib/libexpat.so.1.0.0
> 2aaaab73b000-2aaaab83b000 ---p 00020000 09:01
> 4327985                    /usr/lib/libexpat.so.1.0.0
> 2aaaab83b000-2aaaab83d000 rw-p 00020000 09:01
> 4327985                    /usr/lib/libexpat.so.1.0.0
> 2aaaab83d000-2aaaab861000 r-xp 00000000 09:01
> 4326893                    /usr/lib/libapr-0.so.0.9.7
> 2aaaab861000-2aaaab961000 ---p 00024000 09:01
> 4326893                    /usr/lib/libapr-0.so.0.9.7
> 2aaaab961000-2aaaab962000 rw-p 00024000 09:01
> 4326893                    /usr/lib/libapr-0.so.0.9.7
> 2aaaab962000-2aaaab964000 rw-p 2aaaab962000 00:00 0
> 2aaaab964000-2aaaab96c000 r-xp 00000000 09:01
> 5130307                    /lib/librt-2.4.so
> 2aaaab96c000-2aaaaba6b000 ---p 00008000 09:01
> 5130307                    /lib/librt-2.4.so
> 2aaaaba6b000-2aaaaba6d000 rw-p 00007000 09:01
> 5130307                    /lib/librt-2.4.so
> 2aaaaba6d000-2aaaabaee000 r-xp 00000000 09:01
> 5128477                    /lib/libm-2.4.so
> 2aaaabaee000-2aaaabbed000 ---p 00081000 09:01
> 5128477                    /lib/libm-2.4.so
> 2aaaabbed000-2aaaabbef000 rw-p 00080000 09:01
> 5128477                    /lib/libm-2.4.so
> 2aaaabbef000-2aaaabbf4000 r-xp 00000000 09:01
> 5128448                    /lib/libcrypt-2.4.so
> 2aaaabbf4000-2aaaabcf3000 ---p 00005000 09:01
> 5128448                    /lib/libcrypt-2.4.so
> 2aaaabcf3000-2aaaabcf5000 rw-p 00004000 09:01
> 5128448                    /lib/libcrypt-2.4.so
> 2aaaabcf5000-2aaaabd24000 rw-p 2aaaabcf5000 00:00 0
> 2aaaabd24000-2aaaabd37000 r-xp 00000000 09:01
> 5128537                    /lib/libnsl-2.4.so
> 2aaaabd37000-2aaaabe37000 ---p 00013000 09:01
> 5128537                    /lib/libnsl-2.4.so
> 2aaaabe37000-2aaaabe39000 rw-p 00013000 09:01
> 5128537                    /lib/libnsl-2.4.so
> 2aaaabe39000-2aaaabe3b000 rw-p 2aaaabe39000 00:00 0
> 2aaaabe3b000-2aaaabe4c000 r-xp 00000000 09:01
> 5128561                    /lib/libpthread-2.4.so
> 2aaaabe4c000-2aaaabf4b000 ---p 00011000 09:01
> 5128561                    /lib/libpthread-2.4.so
> 2aaaabf4b000-2aaaabf4d000 rw-p 00010000 09:01
> 5128561                    /lib/libpthread-2.4.so
> 2aaaabf4d000-2aaaabf51000 rw-p 2aaaabf4d000 00:00 0
> 2aaaabf51000-2aaaabf53000 r-xp 00000000 09:01
> 5128468                    /lib/libdl-2.4.so
> 2aaaabf53000-2aaaac053000 ---p 00002000 09:01
> 5128468                    /lib/libdl-2.4.so
> 2aaaac053000-2aaaac055000 rw-p 00002000 09:01
> 5128468                    /lib/libdl-2.4.so
> 2aaaac055000-2aaaac056000 rw-p 2aaaac055000 00:00 0
> 2aaaac056000-2aaaac18b000 r-xp 00000000 09:01
> 5128262                    /lib/libc-2.4.so
> 2aaaac18b000-2aaaac28b000 ---p 00135000 09:01
> 5128262                    /lib/libc-2.4.so
> 2aaaac28b000-2aaaac28e000 r--p 00135000 09:01
> 5128262                    /lib/libc-2.4.so
> 2aaaac28e000-2aaaac290000 rw-p 00138000 09:01
> 5128262                    /lib/libc-2.4.so
> 2aaaac290000-2aaaac295000 rw-p 2aaaac290000 00:00 0
> 2aaaac295000-2aaaac2a6000 r-xp 00000000 09:01
> 5128562                    /lib/libresolv-2.4.so
> 2aaaac2a6000-2aaaac3a6000 ---p 00011000 09:01
> 5128562                    /lib/libresolv-2.4.so
> 2aaaac3a6000-2aaaac3a8000 rw-p 00011000 09:01
> 5128562                    /lib/libresolv-2.4.so
> 2aaaac3a8000-2aaaac3aa000 rw-p 2aaaac3a8000 00:00 0
> 2aaaac3aa000-2aaaac3c0000 r-xp 00000000 09:01
> 4326813                    /usr/lib/libsasl2.so.2.0.19
> 2aaaac3c0000-2aaaac4c0000 ---p 00016000 09:01
> 4326813                    /usr/lib/libsasl2.so.2.0.19
> 2aaaac4c0000-2aaaac4c1000 rw-p 00016000 09:01
> 4326813                    /usr/lib/libsasl2.so.2.0.19
> 2aaaac4c1000-2aaaac4c2000 rw-p 2aaaac4c1000 00:00 0
> 2aaaac4c2000-2aaaac534000 r-xp 00000000 09:01
> 4330056                    /usr/lib/libgnutls.so.12.3.6
> 2aaaac534000-2aaaac634000 ---p 00072000 09:01
> 4330056                    /usr/lib/libgnutls.so.12.3.6
> 2aaaac634000-2aaaac63e000 rw-p 00072000 09:01
> 4330056                    /usr/lib/libgnutls.so.12.3.6
> 2aaaac63e000-2aaaac64f000 r-xp 00000000 09:01
> 4329876                    /usr/lib/libtasn1.so.2.0.17
> 2aaaac64f000-2aaaac74e000 ---p 00011000 09:01
> 4329876                    /usr/lib/libtasn1.so.2.0.17
> 2aaaac74e000-2aaaac74f000 rw-p 00010000 09:01
> 4329876                    /usr/lib/libtasn1.so.2.0.17
> 2aaaac74f000-2aaaac750000 rw-p 2aaaac74f000 00:00 0
> 2aaaac750000-2aaaac797000 r-xp 00000000 09:01
> 4327989                    /usr/lib/libgcrypt.so.11.2.1
> 2aaaac797000-2aaaac897000 ---p 00047000 09:01
> 4327989                    /usr/lib/libgcrypt.so.11.2.1
> 2aaaac897000-2aaaac89d000 rw-p 00047000 09:01
> 4327989                    /usr/lib/libgcrypt.so.11.2.1
> 2aaaac89d000-2aaaac8a0000 r-xp 00000000 09:01
> 4325393                    /usr/lib/libgpg-error.so.0.2.0
> 2aaaac8a0000-2aaaac99f000 ---p 00003000 09:01
> 4325393                    /usr/lib/libgpg-error.so.0.2.0
> 2aaaac99f000-2aaaac9a0000 rw-p 00002000 09:01
> 4325393                    /usr/lib/libgpg-error.so.0.2.0
> 2aaaac9a0000-2aaaac9a2000 rw-p 2aaaac9a0000 00:00 0
> 2aaaac9a2000-2aaaac9a4000 r-xp 00000000 09:01
> 4391361                    /usr/lib/apache2/modules/mod_actions.so
> 2aaaac9a4000-2aaaacaa3000 ---p 00002000 09:01
> 4391361                    /usr/lib/apache2/modules/mod_actions.so
> 2aaaacaa3000-2aaaacaa4000 rw-p 00001000 09:01
> 4391361                    /usr/lib/apache2/modules/mod_actions.so
> 2aaaacaa4000-2aaaacaaa000 r-xp 00000000 09:01
> 4391357                    /usr/lib/apache2/modules/mod_cgi.so
> 2aaaacaaa000-2aaaacba9000 ---p 00006000 09:01
> 4391357                    /usr/lib/apache2/modules/mod_cgi.so
> 2aaaacba9000-2aaaacbaa000 rw-p 00005000 09:01
> 4391357                    /usr/lib/apache2/modules/mod_cgi.so
> 2aaaacbaa000-2aaaacbbf000 r-xp 00000000 09:01
> 4391352                    /usr/lib/apache2/modules/mod_dav.so
> 2aaaacbbf000-2aaaaccbf000 ---p 00015000 09:01
> 4391352                    /usr/lib/apache2/modules/mod_dav.so
> 2aaaaccbf000-2aaaaccc0000 rw-p 00015000 09:01
> 4391352                    /usr/lib/apache2/modules/mod_dav.so
> 2aaaaccc0000-2aaaacccb000 r-xp 00000000 09:01
> 4391358                    /usr/lib/apache2/modules/mod_dav_fs.so
> 2aaaacccb000-2aaaacdcb000 ---p 0000b000 09:01
> 4391358                    /usr/lib/apache2/modules/mod_dav_fs.so
> 2aaaacdcb000-2aaaacdcc000 rw-p 0000b000 09:01
> 4391358                    /usr/lib/apache2/modules/mod_dav_fs.so
> 2aaaacdcc000-2aaaacde9000 r-xp 00000000 09:01
> 4391618                    /usr/lib/apache2/modules/mod_dav_svn.so
> 2aaaacde9000-2aaaacee8000 ---p 0001d000 09:01
> 4391618                    /usr/lib/apache2/modules/mod_dav_svn.so
> 2aaaacee8000-2aaaaceea000 rw-p 0001c000 09:01
> 4391618                    /usr/lib/apache2/modules/mod_dav_svn.so
> 2aaaacef0000-2aaaacf0f000 r-xp 00000000 09:01
> 4326983                    /usr/lib/libsvn_repos-1.so.0.0.0
> 2aaaacf0f000-2aaaad00e000 ---p 0001f000 09:01
> 4326983                    /usr/lib/libsvn_repos-1.so.0.0.0
> 2aaaad00e000-2aaaad00f000 rw-p 0001e000 09:01
> 4326983                    /usr/lib/libsvn_repos-1.so.0.0.0
> 2aaaad00f000-2aaaad014000 r-xp 00000000 09:01
> 4325697                    /usr/lib/libsvn_fs-1.so.0.0.0
> 2aaaad014000-2aaaad114000 ---p 00005000 09:01
> 4325697                    /usr/lib/libsvn_fs-1.so.0.0.0
> 2aaaad114000-2aaaad115000 rw-p 00005000 09:01
> 4325697                    /usr/lib/libsvn_fs-1.so.0.0.0
> 2aaaad115000-2aaaad11d000 r-xp 00000000 09:01
> 4326980                    /usr/lib/libsvn_delta-1.so.0.0.0
> 2aaaad11d000-2aaaad21d000 ---p 00008000 09:01
> 4326980                    /usr/lib/libsvn_delta-1.so.0.0.0
> 2aaaad21d000-2aaaad21e000 rw-p 00008000 09:01
> 4326980                    /usr/lib/libsvn_delta-1.so.0.0.0
> 2aaaad21e000-2aaaad24a000 r-xp 00000000 09:01
> 4326981                    /usr/lib/libsvn_subr-1.so.0.0.0
> 2aaaad24a000-2aaaad349000 ---p 0002c000 09:01
> 4326981                    /usr/lib/libsvn_subr-1.so.0.0.0
> 2aaaad349000-2aaaad34b000 rw-p 0002b000 09:01
> 4326981                    /usr/lib/libsvn_subr-1.so.0.0.0
> 2aaaad34b000-2aaaad367000 r-xp 00000000 09:01
> 4325699                    /usr/lib/libsvn_fs_fs-1.so.0.0.0
> 2aaaad367000-2aaaad467000 ---p 0001c000 09:01
> 4325699                    /usr/lib/libsvn_fs_fs-1.so.0.0.0
> 2aaaad467000-2aaaad468000 rw-p 0001c000 09:01
> 4325699                    /usr/lib/libsvn_fs_fs-1.so.0.0.0
> 2aaaad468000-2aaaad490000 r-xp 00000000 09:01
> 4325698                    /usr/lib/libsvn_fs_base-1.so.0.0.0
> 2aaaad490000-2aaaad590000 ---p 00028000 09:01
> 4325698                    /usr/lib/libsvn_fs_base-1.so.0.0.0
> 2aaaad590000-2aaaad591000 rw-p 00028000 09:01
> 4325698                    /usr/lib/libsvn_fs_base-1.so.0.0.0
> 2aaaad591000-2aaaad593000 r-xp 00000000 09:01
> 4391617                    /usr/lib/apache2/modules/mod_authz_svn.so
> 2aaaad593000-2aaaad693000 ---p 00002000 09:01
> 4391617                    /usr/lib/apache2/modules/mod_authz_svn.so
> 2aaaad693000-2aaaad694000 rw-p 00002000 09:01
> 4391617                    /usr/lib/apache2/modules/mod_authz_svn.so
> 2aaaad694000-2aaaad697000 r-xp 00000000 09:01
> 4391354                    /usr/lib/apache2/modules/mod_info.so
> 2aaaad697000-2aaaad796000 ---p 00003000 09:01
> 4391354                    /usr/lib/apache2/modules/mod_info.so
> 2aaaad796000-2aaaad797000 rw-p 00002000 09:01
> 4391354                    /usr/lib/apache2/modules/mod_info.so
> 2aaaad797000-2aaaad7a9000 r-xp 00000000 09:01
> 4391690                    /usr/lib/apache2/modules/mod_security.so
> 2aaaad7a9000-2aaaad8a9000 ---p 00012000 09:01
> 4391690                    /usr/lib/apache2/modules/mod_security.so
> 2aaaad8a9000-2aaaad8ab000 rw-p 00012000 09:01
> 4391690                    /usr/lib/apache2/modules/mod_security.so
> 2aaaad8ab000-2aaaad8c2000 r-xp 00000000 09:01
> 4391665                    /usr/lib/apache2/modules/mod_python.so
> 2aaaad8c2000-2aaaad9c2000 ---p 00017000 09:01
> 4391665                    /usr/lib/apache2/modules/mod_python.so
> 2aaaad9c2000-2aaaad9c6000 rw-p 00017000 09:01
> 4391665                    /usr/lib/apache2/modules/mod_python.so
> 2aaaad9cc000-2aaaadad4000 r-xp 00000000 09:01
> 4330715                    /usr/lib/libpython2.4.so.1.0
> 2aaaadad4000-2aaaadbd4000 ---p 00108000 09:01
> 4330715                    /usr/lib/libpython2.4.so.1.0
> 2aaaadbd4000-2aaaadc07000 rw-p 00108000 09:01
> 4330715                    /usr/lib/libpython2.4.so.1.0
> 2aaaadc07000-2aaaadc0b000 rw-p 2aaaadc07000 00:00 0
> 2aaaadc0b000-2aaaadc0d000 r-xp 00000000 09:01
> 5130310                    /lib/libutil-2.4.so
> 2aaaadc0d000-2aaaadd0c000 ---p 00002000 09:01
> 5130310                    /lib/libutil-2.4.so
> 2aaaadd0c000-2aaaadd0e000 rw-p 00001000 09:01
> 5130310                    /lib/libutil-2.4.so
> 2aaaadd0e000-2aaaae1df000 r-xp 00000000 09:01
> 4391987                    /usr/lib/apache2/modules/libphp5.so
> 2aaaae1df000-2aaaae2de000 ---p 004d1000 09:01
> 4391987                    /usr/lib/apache2/modules/libphp5.so
> 2aaaae2de000-2aaaae395000 rw-p 004d0000 09:01
> 4391987                    /usr/lib/apache2/modules/libphp5.so
> 2aaaae395000-2aaaae3a2000 rw-p 2aaaae395000 00:00 0
> 2aaaae3a8000-2aaaae3ad000 r-xp 00000000 09:01
> 4325497                    /usr/lib/libgdbm.so.3.0.0
> 2aaaae3ad000-2aaaae4ac000 ---p 00005000 09:01
> 4325497                    /usr/lib/libgdbm.so.3.0.0
> 2aaaae4ac000-2aaaae4ad000 rw-p 00004000 09:01
> 4325497                    /usr/lib/libgdbm.so.3.0.0
> 2aaaae4ad000-2aaaae4bc000 r-xp 00000000 09:01
> 5128266                    /lib/libbz2.so.1.0.3
> 2aaaae4bc000-2aaaae5bb000 ---p 0000f000 09:01
> 5128266                    /lib/libbz2.so.1.0.3
> 2aaaae5bb000-2aaaae5bd000 rw-p 0000e000 09:01
> 5128266                    /lib/libbz2.so.1.0.3
> 2aaaae5bd000-2aaaae5d9000 r-xp 00000000 09:01
> 4328618                    /usr/lib/libgssapi_krb5.so.2.2
> 2aaaae5d9000-2aaaae6d9000 ---p 0001c000 09:01
> 4328618                    /usr/lib/libgssapi_krb5.so.2.2
> 2aaaae6d9000-2aaaae6da000 rw-p 0001c000 09:01
> 4328618                    /usr/lib/libgssapi_krb5.so.2.2
> 2aaaae6da000-2aaaae75c000 r-xp 00000000 09:01
> 4328625                    /usr/lib/libkrb5.so.3.2
> 2aaaae75c000-2aaaae85c000 ---p 00082000 09:01
> 4328625                    /usr/lib/libkrb5.so.3.2
> 2aaaae85c000-2aaaae860000 rw-p 00082000 09:01
> 4328625                    /usr/lib/libkrb5.so.3.2
> 2aaaae860000-2aaaae884000 r-xp 00000000 09:01
> 4328623                    /usr/lib/libk5crypto.so.3.0
> 2aaaae884000-2aaaae983000 ---p 00024000 09:01
> 4328623                    /usr/lib/libk5crypto.so.3.0
> 2aaaae983000-2aaaae985000 rw-p 00023000 09:01
> 4328623                    /usr/lib/libk5crypto.so.3.0
> 2aaaae985000-2aaaae987000 r-xp 00000000 09:01
> 5128196                    /lib/libcom_err.so.2.1
> 2aaaae987000-2aaaaea86000 ---p 00002000 09:01
> 5128196                    /lib/libcom_err.so.2.1
> 2aaaaea86000-2aaaaea87000 rw-p 00001000 09:01
> 5128196                    /lib/libcom_err.so.2.1
> 2aaaaea87000-2aaaaebba000 r-xp 00000000 09:01
> 4327920                    /usr/lib/libxml2.so.2.6.26
> 2aaaaebba000-2aaaaecba000 ---p 00133000 09:01
> 4327920                    /usr/lib/libxml2.so.2.6.26
> 2aaaaecba000-2aaaaecc3000 rw-p 00133000 09:01
> 4327920                    /usr/lib/libxml2.so.2.6.26
> 2aaaaecc3000-2aaaaecc4000 rw-p 2aaaaecc3000 00:00 0
> 2aaaaecc4000-2aaaaecc8000 r-xp 00000000 09:01
> 4328626                    /usr/lib/libkrb5support.so.0.0
> 2aaaaecc8000-2aaaaedc7000 ---p 00004000 09:01
> 4328626                    /usr/lib/libkrb5support.so.0.0
> 2aaaaedc7000-2aaaaedc8000 rw-p 00003000 09:01
> 4328626                    /usr/lib/libkrb5support.so.0.0
> 2aaaaedc8000-2aaaaedce000 r-xp 00000000 09:01
> 4391333                    /usr/lib/apache2/modules/mod_cache.so
> 2aaaaedce000-2aaaaeecd000 ---p 00006000 09:01
> 4391333                    /usr/lib/apache2/modules/mod_cache.so
> 2aaaaeecd000-2aaaaeece000 rw-p 00005000 09:01
> 4391333                    /usr/lib/apache2/modules/mod_cache.so
> 2aaaaeece000-2aaaaeed2000 r-xp 00000000 09:01
> 4391334                    /usr/lib/apache2/modules/mod_disk_cache.so
> 2aaaaeed2000-2aaaaefd1000 ---p 00004000 09:01
> 4391334                    /usr/lib/apache2/modules/mod_disk_cache.so
> 2aaaaefd1000-2aaaaefd2000 rw-p 00003000 09:01
> 4391334                    /usr/lib/apache2/modules/mod_disk_cache.so
> 2aaaaefd2000-2aaaaefdc000 r-xp 00000000 09:01
> 4391347                    /usr/lib/apache2/modules/mod_proxy.so
> 2aaaaefdc000-2aaaaf0db000 ---p 0000a000 09:01
> 4391347                    /usr/lib/apache2/modules/mod_proxy.so
> 2aaaaf0db000-2aaaaf0dc000 rw-p 00009000 09:01
> 4391347                    /usr/lib/apache2/modules/mod_proxy.so
> 2aaaaf0dc000-2aaaaf0e3000 r-xp 00000000 09:01
> 4391350                    /usr/lib/apache2/modules/mod_proxy_http.so
> 2aaaaf0e3000-2aaaaf1e2000 ---p 00007000 09:01
> 4391350                    /usr/lib/apache2/modules/mod_proxy_http.so
> 2aaaaf1e2000-2aaaaf1e3000 rw-p 00006000 09:01
> 4391350                    /usr/lib/apache2/modules/mod_proxy_http.so
> 2aaaaf1e3000-2aaaaf1f1000 r-xp 00000000 09:01
> 4391364                    /usr/lib/apache2/modules/mod_rewrite.so
> 2aaaaf1f1000-2aaaaf2f0000 ---p 0000e000 09:01
> 4391364                    /usr/lib/apache2/modules/mod_rewrite.so
> 2aaaaf2f0000-2aaaaf2f1000 rw-p 0000d000 09:01
> 4391364                    /usr/lib/apache2/modules/mod_rewrite.so
> 2aaaaf2f1000-2aaaaf31d000 r-xp 00000000 09:01
> 4391351                    /usr/lib/apache2/modules/mod_ssl.so
> 2aaaaf31d000-2aaaaf41d000 ---p 0002c000 09:01
> 4391351                    /usr/lib/apache2/modules/mod_ssl.so
> 2aaaaf41d000-2aaaaf41f000 rw-p 0002c000 09:01
> 4391351                    /usr/lib/apache2/modules/mod_ssl.so
> 2aaaaf41f000-2aaaaf421000 rw-p 2aaaaf41f000 00:00 0
> 2aaaaf421000-2aaaaf423000 r-xp 00000000 09:01
> 4391363                    /usr/lib/apache2/modules/mod_userdir.so
> 2aaaaf423000-2aaaaf522000 ---p 00002000 09:01
> 4391363                    /usr/lib/apache2/modules/mod_userdir.so
> 2aaaaf522000-2aaaaf523000 rw-p 00001000 09:01
> 4391363                    /usr/lib/apache2/modules/mod_userdir.so
> 2aaaaf529000-2aaaaf530000 r-xp 00000000 09:01
> 5128538                    /lib/libnss_compat-2.4.so
> 2aaaaf530000-2aaaaf630000 ---p 00007000 09:01
> 5128538                    /lib/libnss_compat-2.4.so
> 2aaaaf630000-2aaaaf632000 rw-p 00007000 09:01
> 5128538                    /lib/libnss_compat-2.4.so
> 2aaaaf632000-2aaaaf63b000 r-xp 00000000 09:01
> 5128558                    /lib/libnss_nis-2.4.so
> 2aaaaf63b000-2aaaaf73b000 ---p 00009000 09:01
> 5128558                    /lib/libnss_nis-2.4.so
> 2aaaaf73b000-2aaaaf73d000 rw-p 00009000 09:01
> 5128558                    /lib/libnss_nis-2.4.so
> 2aaaaf73d000-2aaaaf747000 r-xp 00000000 09:01
> 5128556                    /lib/libnss_files-2.4.so
> 2aaaaf747000-2aaaaf846000 ---p 0000a000 09:01
> 5128556                    /lib/libnss_files-2.4.so
> 2aaaaf846000-2aaaaf848000 rw-p 00009000 09:01
> 5128556                    /lib/libnss_files-2.4.so
> 2aaaaf848000-2aaaaf85f000 r-xp 00000000 09:01
> 4489516                    /usr/lib/php5/20051025/gd.so
> 2aaaaf85f000-2aaaaf95e000 ---p 00017000 09:01
> 4489516                    /usr/lib/php5/20051025/gd.so
> 2aaaaf95e000-2aaaaf960000 rw-p 00016000 09:01
> 4489516                    /usr/lib/php5/20051025/gd.so
> 2aaaaf966000-2aaaaf986000 r-xp 00000000 09:01
> 4325577                    /usr/lib/libgd.so.2.0.33
> 2aaaaf986000-2aaaafa85000 ---p 00020000 09:01
> 4325577                    /usr/lib/libgd.so.2.0.33
> 2aaaafa85000-2aaaafaa6000 rw-p 0001f000 09:01
> 4325577                    /usr/lib/libgd.so.2.0.33
> 2aaaafaa6000-2aaaafaba000 rw-p 2aaaafaa6000 00:00 0
> 2aaaafaba000-2aaaafafb000 r-xp 00000000 09:01
> 4326417                    /usr/lib/libt1.so.5.1.0
> 2aaaafafb000-2aaaafbfb000 ---p 00041000 09:01
> 4326417                    /usr/lib/libt1.so.5.1.0
> 2aaaafbfb000-2aaaafbff000 rw-p 00041000 09:01
> 4326417                    /usr/lib/libt1.so.5.1.0
> 2aaaafbff000-2aaaafc15000 rw-p 2aaaafbff000 00:00 0
> 2aaaafc15000-2aaaafc8c000 r-xp 00000000 09:01
> 4327192                    /usr/lib/libfreetype.so.6.3.8
> 2aaaafc8c000-2aaaafd8b000 ---p 00077000 09:01
> 4327192                    /usr/lib/libfreetype.so.6.3.8
> 2aaaafd8b000-2aaaafd90000 rw-p 00076000 09:01
> 4327192                    /usr/lib/libfreetype.so.6.3.8
> 2aaaafd90000-2aaaafe91000 r-xp 00000000 09:01
> 4330051                    /usr/lib/libX11.so.6.2.0
> 2aaaafe91000-2aaaaff90000 ---p 00101000 09:01
> 4330051                    /usr/lib/libX11.so.6.2.0
> 2aaaaff90000-2aaaaff97000 rw-p 00100000 09:01
> 4330051                    /usr/lib/libX11.so.6.2.0
> 2aaaaff97000-2aaaaff98000 rw-p 2aaaaff97000 00:00 0
> 2aaaaff98000-2aaaaffae000 r-xp 00000000 09:01
> 4326255                    /usr/lib/libXpm.so.4.11.0
> 2aaaaffae000-2aaab00ad000 ---p 00016000 09:01
> 4326255                    /usr/lib/libXpm.so.4.11.0
> 2aaab00ad000-2aaab00ae000 rw-p 00015000 09:01
> 4326255                    /usr/lib/libXpm.so.4.11.0
> 2aaab00ae000-2aaab00d1000 r-xp 00000000 09:01
> 4329464                    /usr/lib/libpng12.so.0.1.2.8
> 2aaab00d1000-2aaab01d0000 ---p 00023000 09:01
> 4329464                    /usr/lib/libpng12.so.0.1.2.8
> 2aaab01d0000-2aaab01d1000 rw-p 00022000 09:01
> 4329464                    /usr/lib/libpng12.so.0.1.2.8
> 2aaab01d1000-2aaab01f2000 r-xp 00000000 09:01
> 4329459                    /usr/lib/libjpeg.so.62.0.0
> 2aaab01f2000-2aaab02f2000 ---p 00021000 09:01
> 4329459                    /usr/lib/libjpeg.so.62.0.0
> 2aaab02f2000-2aaab02f3000 rw-p 00021000 09:01
> 4329459                    /usr/lib/libjpeg.so.62.0.0
> 2aaab02f3000-2aaab0329000 r-xp 00000000 09:01
> 4333034                    /usr/lib/libfontconfig.so.1.0.4
> 2aaab0329000-2aaab0428000 ---p 00036000 09:01
> 4333034                    /usr/lib/libfontconfig.so.1.0.4
> 2aaab0428000-2aaab0430000 rw-p 00035000 09:01
> 4333034                    /usr/lib/libfontconfig.so.1.0.4
> 2aaab0430000-2aaab0432000 rw-p 2aaab0430000 00:00 0
> 2aaab0432000-2aaab0434000 r-xp 00000000 09:01
> 4330043                    /usr/lib/libXau.so.6.0.0
> 2aaab0434000-2aaab0533000 ---p 00002000 09:01
> 4330043                    /usr/lib/libXau.so.6.0.0
> 2aaab0533000-2aaab0534000 rw-p 00001000 09:01
> 4330043                    /usr/lib/libXau.so.6.0.0
> 2aaab0534000-2aaab0540000 r-xp 00000000 09:01
> 4489518                    /usr/lib/php5/20051025/mysql.so
> 2aaab0540000-2aaab063f000 ---p 0000c000 09:01
> 4489518                    /usr/lib/php5/20051025/mysql.so
> 2aaab063f000-2aaab0641000 rw-p 0000b000 09:01
> 4489518                    /usr/lib/php5/20051025/mysql.so
> 2aaab0647000-2aaab06a2000 r-xp 00000000 09:01
> 4325468                    /usr/lib/libmysqlclient.so.15.0.0
> 2aaab06a2000-2aaab07a1000 ---p 0005b000 09:01
> 4325468                    /usr/lib/libmysqlclient.so.15.0.0
> 2aaab07a1000-2aaab08b3000 rw-p 0005a000 09:01
> 4325468                    /usr/lib/libmysqlclient.so.15.0.0
> 2aaab08b3000-2aaab08b4000 rw-p 2aaab08b3000 00:00 0
> 2aaab08b4000-2aaab08c0000 r-xp 00000000 09:01
> 4489515                    /usr/lib/php5/20051025/curl.so
> 2aaab08c0000-2aaab09bf000 ---p 0000c000 09:01
> 4489515                    /usr/lib/php5/20051025/curl.so
> 2aaab09bf000-2aaab09c0000 rw-p 0000b000 09:01
> 4489515                    /usr/lib/php5/20051025/curl.so
> 2aaab09c6000-2aaab09f9000 r-xp 00000000 09:01
> 4333028                    /usr/lib/libcurl.so.3.0.0
> 2aaab09f9000-2aaab0af9000 ---p 00033000 09:01
> 4333028                    /usr/lib/libcurl.so.3.0.0
> 2aaab0af9000-2aaab0afb000 rw-p 00033000 09:01
> 4333028                    /usr/lib/libcurl.so.3.0.0
> 2aaab0afb000-2aaab0b2b000 r-xp 00000000 09:01
> 4329027                    /usr/lib/libidn.so.11.5.11
> 2aaab0b2b000-2aaab0c2b000 ---p 00030000 09:01
> 4329027                    /usr/lib/libidn.so.11.5.11
> 2aaab0c2b000-2aaab0c2c000 rw-p 00030000 09:01
> 4329027                    /usr/lib/libidn.so.11.5.11
> 2aaab0c2c000-2aaab0c43000 r-xp 00000000 09:01
> 4489514                    /usr/lib/php5/20051025/imap.so
> 2aaab0c43000-2aaab0d42000 ---p 00017000 09:01
> 4489514                    /usr/lib/php5/20051025/imap.so
> 2aaab0d42000-2aaab0d44000 rw-p 00016000 09:01
> 4489514                    /usr/lib/php5/20051025/imap.so
> 2aaab0d4a000-2aaab0e0d000 r-xp 00000000 09:01
> 4332672                    /usr/lib/libc-client.so.2002edebian.1
> 2aaab0e0d000-2aaab0f0c000 ---p 000c3000 09:01
> 4332672                    /usr/lib/libc-client.so.2002edebian.1
> 2aaab0f0c000-2aaab0f13000 rw-p 000c2000 09:01
> 4332672                    /usr/lib/libc-client.so.2002edebian.1
> 2aaab0f13000-2aaab0f1b000 r-xp 00000000 09:01
> 5128220                    /lib/libpam.so.0.79
> 2aaab0f1b000-2aaab101a000 ---p 00008000 09:01
> 5128220                    /lib/libpam.so.0.79
> 2aaab101a000-2aaab101b000 rw-p 00007000 09:01
> 5128220                    /lib/libpam.so.0.79
> 2aaab101b000-2aaab101d000 r-xp 00000000 09:01
> 4489517                    /usr/lib/php5/20051025/mhash.so
> 2aaab101d000-2aaab111c000 ---p 00002000 09:01
> 4489517                    /usr/lib/php5/20051025/mhash.so
> 2aaab111c000-2aaab111d000 rw-p 00001000 09:01
> 4489517                    /usr/lib/php5/20051025/mhash.so
> 2aaab1123000-2aaab114f000 r-xp 00000000 09:01
> 4329462                    /usr/lib/libmhash.so.2.0.0
> 2aaab114f000-2aaab124e000 ---p 0002c000 09:01
> 4329462                    /usr/lib/libmhash.so.2.0.0
> 2aaab124e000-2aaab124f000 rw-p 0002b000 09:01
> 4329462                    /usr/lib/libmhash.so.2.0.0
> 2aaab124f000-2aaab1257000 r-xp 00000000 09:01
> 4489735                    /usr/lib/php5/20051025/mcrypt.so
> 2aaab1257000-2aaab1357000 ---p 00008000 09:01
> 4489735                    /usr/lib/php5/20051025/mcrypt.so
> 2aaab1357000-2aaab1358000 rw-p 00008000 09:01
> 4489735                    /usr/lib/php5/20051025/mcrypt.so
> 2aaab135e000-2aaab1382000 r-xp 00000000 09:01
> 4330809                    /usr/lib/libmcrypt.so.4.4.7
> 2aaab1382000-2aaab1482000 ---p 00024000 09:01
> 4330809                    /usr/lib/libmcrypt.so.4.4.7
> 2aaab1482000-2aaab1489000 rw-p 00024000 09:01
> 4330809                    /usr/lib/libmcrypt.so.4.4.7
> 2aaab1489000-2aaab148e000 rw-p 2aaab1489000 00:00 0
> 2aaab148e000-2aaab1494000 r-xp 00000000 09:01
> 4326278                    /usr/lib/libltdl.so.3.1.4
> 2aaab1494000-2aaab1594000 ---p 00006000 09:01
> 4326278                    /usr/lib/libltdl.so.3.1.4
> 2aaab1594000-2aaab1595000 rw-p 00006000 09:01
> 4326278                    /usr/lib/libltdl.so.3.1.4
> 2aaab1595000-2aaab15af000 r-xp 00000000 09:01
> 4489519                    /usr/lib/php5/20051025/mysqli.so
> 2aaab15af000-2aaab16af000 ---p 0001a000 09:01
> 4489519                    /usr/lib/php5/20051025/mysqli.so
> 2aaab16af000-2aaab16b2000 rw-p 0001a000 09:01
> 4489519                    /usr/lib/php5/20051025/mysqli.so
> 2aaab16b8000-2aaab16bd000 r-xp 00000000 09:01
> 4329154                    /usr/lib/libnss_db-2.2.3.so
> 2aaab16bd000-2aaab17bd000 ---p 00005000 09:01
> 4329154                    /usr/lib/libnss_db-2.2.3.so
> 2aaab17bd000-2aaab17be000 rw-p 00005000 09:01
> 4329154                    /usr/lib/libnss_db-2.2.3.so
> 2aaab17be000-2aaab17d0000 rw-s 00000000 00:07
> 1069470                    /dev/zero (deleted)
> 7fffffa42000-7fffffa58000 rw-p 7fffffa42000 00:00 0
> [stack]
> ffffffffff600000-ffffffffffe00000 ---p 00000000 00:00 0
> [vdso]
>
> --
> cheers,
>
>         Nikl
>
From grahamd at dscpl.com.au  Mon Jun 26 18:17:44 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 26 18:17:52 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely on
	registry key?
Message-ID: <1151360264.9720@dscpl.user.openhosting.com>

sanja@bougakov.com wrote ..
> Hello, Graham,
> 
> The problem is that adding the
> 
>    PythonPath "sys.path +
> ['C:/Python24/Lib','C:/Python24/Lib/mod_python','C:/Python24/DLLs','C:/Python24/Lib/lib-tk']"
> 
> line in httpd.conf doesn't help - I still get the
> 
>   [Mon Jun 26 15:56:04 2006] [error] [client 127.0.0.1] python_handler:
>   make_obcallback returned no obCallBack!
> 
> in Apache's error.log file. But when I restore the
> HKCU\Software\Python\PythonCore\2.4\PythonPath Registry hive and restart
> Apache, everything works OK.

I don't know what happens on Win32, but on UNIX mod_python gets
installed in a 'site-packages' directory and the 'site-packages'
directory only would be in sys.path, and not the mod_python package
directory.

Where is the mod_python package installed?

Does the user which Apache runs as have permission to read the stuff in
the mod_python package directory?

Can people who know Win32 better than I help out at this point.

Graham

> >The SetEnv directive only affects environment variables inherited by
> >CGI scripts. It does not affect the environment of Apache itself and
> >thus does not affect the environment of mod_python. In order to add
> >extra directories into the Python module search path, use the
> >PythonPath directive as documented in the mod_python documentation.
> >Graham
> >On 23/06/2006, at 8:00 PM, sanja at bougakov.com wrote:
> >> The problem is that mod_python doesn't look at these env.
> >> variables. It checks only HKCU\Software\Python registry hive.
> >> If I remove it and restart Apache, I get "error 500".
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From john.keyes at secantus.com  Mon Jun 26 18:51:56 2006
From: john.keyes at secantus.com (John Keyes)
Date: Mon Jun 26 18:52:03 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely
	on	registry key?
In-Reply-To: <1151360264.9720@dscpl.user.openhosting.com>
References: <1151360264.9720@dscpl.user.openhosting.com>
Message-ID: <44A0650C.3020200@secantus.com>

Sanja,

Try setting the PYTHON_HOME environment variable:
   set PYTHON_HOME=c:/Python24

-John K

Graham Dumpleton wrote:
> sanja@bougakov.com wrote ..
>> Hello, Graham,
>>
>> The problem is that adding the
>>
>>    PythonPath "sys.path +
>> ['C:/Python24/Lib','C:/Python24/Lib/mod_python','C:/Python24/DLLs','C:/Python24/Lib/lib-tk']"
>>
>> line in httpd.conf doesn't help - I still get the
>>
>>   [Mon Jun 26 15:56:04 2006] [error] [client 127.0.0.1] python_handler:
>>   make_obcallback returned no obCallBack!
>>
>> in Apache's error.log file. But when I restore the
>> HKCU\Software\Python\PythonCore\2.4\PythonPath Registry hive and restart
>> Apache, everything works OK.
> 
> I don't know what happens on Win32, but on UNIX mod_python gets
> installed in a 'site-packages' directory and the 'site-packages'
> directory only would be in sys.path, and not the mod_python package
> directory.
> 
> Where is the mod_python package installed?
> 
> Does the user which Apache runs as have permission to read the stuff in
> the mod_python package directory?
> 
> Can people who know Win32 better than I help out at this point.
> 
> Graham
> 
>>> The SetEnv directive only affects environment variables inherited by
>>> CGI scripts. It does not affect the environment of Apache itself and
>>> thus does not affect the environment of mod_python. In order to add
>>> extra directories into the Python module search path, use the
>>> PythonPath directive as documented in the mod_python documentation.
>>> Graham
>>> On 23/06/2006, at 8:00 PM, sanja at bougakov.com wrote:
>>>> The problem is that mod_python doesn't look at these env.
>>>> variables. It checks only HKCU\Software\Python registry hive.
>>>> If I remove it and restart Apache, I get "error 500".
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
From grahamd at dscpl.com.au  Mon Jun 26 19:07:16 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Jun 26 19:07:31 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely
	onregistrykey?
Message-ID: <1151363236.2708@dscpl.user.openhosting.com>

For what he was trying to do, this was not an option. See:

  http://www.modpython.org/pipermail/mod_python/2006-June/021453.html
  http://www.modpython.org/pipermail/mod_python/2006-June/021456.html

In short, he wants to be able to run stuff off a USB drive and avoid
having to make modifications to the Win32 registry or anywhere'
else outside of the Apache configuration itself.

I unfortunately don't know anything about how Python is configured
on Win32 so it knows where to find things.

If anyone else has suggestions, would be appreciated.

Graham

John Keyes wrote ..
> Sanja,
> 
> Try setting the PYTHON_HOME environment variable:
>    set PYTHON_HOME=c:/Python24
> 
> -John K
> 
> Graham Dumpleton wrote:
> > sanja@bougakov.com wrote ..
> >> Hello, Graham,
> >>
> >> The problem is that adding the
> >>
> >>    PythonPath "sys.path +
> >> ['C:/Python24/Lib','C:/Python24/Lib/mod_python','C:/Python24/DLLs','C:/Python24/Lib/lib-tk']"
> >>
> >> line in httpd.conf doesn't help - I still get the
> >>
> >>   [Mon Jun 26 15:56:04 2006] [error] [client 127.0.0.1] python_handler:
> >>   make_obcallback returned no obCallBack!
> >>
> >> in Apache's error.log file. But when I restore the
> >> HKCU\Software\Python\PythonCore\2.4\PythonPath Registry hive and restart
> >> Apache, everything works OK.
> > 
> > I don't know what happens on Win32, but on UNIX mod_python gets
> > installed in a 'site-packages' directory and the 'site-packages'
> > directory only would be in sys.path, and not the mod_python package
> > directory.
> > 
> > Where is the mod_python package installed?
> > 
> > Does the user which Apache runs as have permission to read the stuff
> in
> > the mod_python package directory?
> > 
> > Can people who know Win32 better than I help out at this point.
> > 
> > Graham
> > 
> >>> The SetEnv directive only affects environment variables inherited by
> >>> CGI scripts. It does not affect the environment of Apache itself and
> >>> thus does not affect the environment of mod_python. In order to add
> >>> extra directories into the Python module search path, use the
> >>> PythonPath directive as documented in the mod_python documentation.
> >>> Graham
> >>> On 23/06/2006, at 8:00 PM, sanja at bougakov.com wrote:
> >>>> The problem is that mod_python doesn't look at these env.
> >>>> variables. It checks only HKCU\Software\Python registry hive.
> >>>> If I remove it and restart Apache, I get "error 500".
> >> _______________________________________________
> >> Mod_python mailing list
> >> Mod_python@modpython.org
> >> http://mailman.modpython.org/mailman/listinfo/mod_python
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> > 
From nlv11281 at natlab.research.philips.com  Tue Jun 27 02:02:14 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Jun 27 02:02:22 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <5c06fa770606261436qbf8c934h5e9e19ffbb025913@mail.gmail.com>
References: <200606261610.31835.nikl@nikl.net>	<200606261848.55967.nikl@nikl.net>	<5c06fa770606261025l178b493dn95a433b7eeebe630@mail.gmail.com>	<200606262205.42113.nikl@nikl.net>
	<5c06fa770606261436qbf8c934h5e9e19ffbb025913@mail.gmail.com>
Message-ID: <44A0C9E6.5080701@natlab.research.philips.com>

I'm using a 64-bit AMD linux machine here - and I'm doing lots of MD5 
checksumming without problems  while processing terabytes of data.

I can probably use some 64 bit intel as well, but in the hundreds of 
mails I got during my vacation, I lost track of the original post for 
this problem.

Let me know how I can help.


Mike Looijmans
Philips Natlab / Topic Automation


Deron Meranda wrote:
> On 6/26/06, Nikolaus Schlemm <nikl@nikl.net> wrote:
> 
>> [ .... cut (cat /proc/12345/map) output here--included below .... ]
> 
> 
> So we're dealing with a 64-bit Linux process!
> 
> That platform probably doesn't get nearly as much testing as 32-bit.
> Are both of your broken machines 64-bit?  Unfortunately I don't have
> access to a 64-bit Intel machine; does anybody else on this list?
> 
> Otherwise nothing looks obviously wrong with your process map
> (no mixed-up python versions, etc.)
> 
> You do however have a lot of PHP libraries loaded, and even
> X11 is linked in there for some reason.  I can't see how those could
> affect the python md5 module; but is it possible for you to run a
> much leaner Apache with most of the optional modules disabled
> (perhaps even on a different port if needed), just to try to eliminate
> some sort of library conflict.
> 
>> > Also, please review the Apache error logs, just to make sure
>> > nothing unusual is showing up in them.
>> nothing unfortunately..
> 
> 
>> > And just to be clear, is all the software (python, apache, mod_python)
>> > as-is from the linux distribution; or have you attempted to compile
>> > or install any of the components yourself from source?
>> nope - all coming straight from the distros
> 
> 
> Hmmm.  Just for some more information, could you get
> * Which Apache MPM are you using?  (If it's a threaded one,
>    could you change to say "prefork" and retest?)
> * kernel version (cat /proc/version)
> * exec shield config
>       cat /proc/sys/randomize_va_space
>       cat /proc/sys/exec-shield
> * SELinux status
>       sestatus
> 
> Also, I suspect that perhaps it might be time to get this report
> into the bug database if you wouldn't mind.
>   http://issues.apache.org/jira/browse/MODPYTHON
> If you need help with Jira or prefer not to use it, just let us know.
> 
> Thanks for hanging in there Nikolaus, I know this must be frustrating.

From deron.meranda at gmail.com  Tue Jun 27 03:04:05 2006
From: deron.meranda at gmail.com (Deron Meranda)
Date: Tue Jun 27 03:04:08 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <44A0C9E6.5080701@natlab.research.philips.com>
References: <200606261610.31835.nikl@nikl.net>
	<200606261848.55967.nikl@nikl.net>
	<5c06fa770606261025l178b493dn95a433b7eeebe630@mail.gmail.com>
	<200606262205.42113.nikl@nikl.net>
	<5c06fa770606261436qbf8c934h5e9e19ffbb025913@mail.gmail.com>
	<44A0C9E6.5080701@natlab.research.philips.com>
Message-ID: <5c06fa770606270004m63bcb3d9rcd2b1b7483421480@mail.gmail.com>

On 6/27/06, Mike Looijmans <nlv11281@natlab.research.philips.com> wrote:
> I'm using a 64-bit AMD linux machine here - and I'm doing lots of MD5
> checksumming without problems  while processing terabytes of data.
>
> I can probably use some 64 bit intel as well, but in the hundreds of
> mails I got during my vacation, I lost track of the original post for
> this problem.

Good to hear it's working for you on AMD 64-bit.

Just a quick summary of of the emails so far about what Nikolaus is
seeing, on two machines I believe.  (Nikl, correct me if I'm wrong)

One is a debian Linux (celeron 2ghz), the other ubuntu Linux (opteron
144).  The Ubuntu Linux is 64-bit with python 2.4.3-1ubuntu1 and
libapache2-mod-python-3.1.4-0ubuntu1 (both stock from the distro).

When he does MD5s, he always gets the same bogus hexdigest value
regardless of input, namely 0000000000000000d09215a3e97561b3 in his
report.  Supposedly the value will be different on each mod_python
request (but constant for every MD5 within the same request).  Also,
although random the initial half is always zeros.  The confusing part
is that when he runs Python outside of mod_python (such as
interactively) MD5s always work correctly.  Supposedly SHAs work
regardless.

He ran a simple test handler:

  def handler(req):
       import md5
       req.content_type = 'text/plain'
       req.write('md5: %s\n' % md5.__file__)
       for k, v in MD5_TESTS.items():
           m = md5.new(k).hexdigest()
           req.write('"%s" -> "%s" ? %s\n' % (k, m, (m == v)))
       return apache.OK

Using RFC 1321 test vectors.  MD5s were all wrong.

I had him dump sys.modules, as well as looking at /proc/xxxx/map for
the httpd process, and saw nothing unusual.  The md5.so module is
loaded into the process from the expected Python lib-dynload standard
path.

I did see that his Apache has a ton of modules loaded though (many
PHP, MySQL, X11, etc), so I've recommended he run a stripped-down
apache.  Haven't heard results yet.

I've never seen anything like this, so if you have any ideas that
would be great.
-- 
Deron Meranda
From john.keyes at secantus.com  Tue Jun 27 05:07:46 2006
From: john.keyes at secantus.com (John Keyes)
Date: Tue Jun 27 05:08:04 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely
	onregistrykey?
In-Reply-To: <1151363236.2708@dscpl.user.openhosting.com>
References: <1151363236.2708@dscpl.user.openhosting.com>
Message-ID: <44A0F562.2050408@secantus.com>

I think he can still do it if he launches apache from a batch
file.  Inside this batch file set the PYTHON_HOME.  This
is the setup I use for an application I need to distribute
across machines, but do not want to make the installer
more complicated than a basic unzip.

Here's an example batch file that I use:

== SOF ==
setlocal

set PATH=C:\Python;%PATH%
set PYTHONHOME=C:\Python

start "c:\Apache\bin\apache.exe

endlocal
== EOF ==

-John K

Graham Dumpleton wrote:
> For what he was trying to do, this was not an option. See:
> 
>   http://www.modpython.org/pipermail/mod_python/2006-June/021453.html
>   http://www.modpython.org/pipermail/mod_python/2006-June/021456.html
> 
> In short, he wants to be able to run stuff off a USB drive and avoid
> having to make modifications to the Win32 registry or anywhere'
> else outside of the Apache configuration itself.
> 
> I unfortunately don't know anything about how Python is configured
> on Win32 so it knows where to find things.
> 
> If anyone else has suggestions, would be appreciated.
> 
> Graham
> 
> John Keyes wrote ..
>> Sanja,
>>
>> Try setting the PYTHON_HOME environment variable:
>>    set PYTHON_HOME=c:/Python24
>>
>> -John K
>>
>> Graham Dumpleton wrote:
>>> sanja@bougakov.com wrote ..
>>>> Hello, Graham,
>>>>
>>>> The problem is that adding the
>>>>
>>>>    PythonPath "sys.path +
>>>> ['C:/Python24/Lib','C:/Python24/Lib/mod_python','C:/Python24/DLLs','C:/Python24/Lib/lib-tk']"
>>>>
>>>> line in httpd.conf doesn't help - I still get the
>>>>
>>>>   [Mon Jun 26 15:56:04 2006] [error] [client 127.0.0.1] python_handler:
>>>>   make_obcallback returned no obCallBack!
>>>>
>>>> in Apache's error.log file. But when I restore the
>>>> HKCU\Software\Python\PythonCore\2.4\PythonPath Registry hive and restart
>>>> Apache, everything works OK.
>>> I don't know what happens on Win32, but on UNIX mod_python gets
>>> installed in a 'site-packages' directory and the 'site-packages'
>>> directory only would be in sys.path, and not the mod_python package
>>> directory.
>>>
>>> Where is the mod_python package installed?
>>>
>>> Does the user which Apache runs as have permission to read the stuff
>> in
>>> the mod_python package directory?
>>>
>>> Can people who know Win32 better than I help out at this point.
>>>
>>> Graham
>>>
>>>>> The SetEnv directive only affects environment variables inherited by
>>>>> CGI scripts. It does not affect the environment of Apache itself and
>>>>> thus does not affect the environment of mod_python. In order to add
>>>>> extra directories into the Python module search path, use the
>>>>> PythonPath directive as documented in the mod_python documentation.
>>>>> Graham
>>>>> On 23/06/2006, at 8:00 PM, sanja at bougakov.com wrote:
>>>>>> The problem is that mod_python doesn't look at these env.
>>>>>> variables. It checks only HKCU\Software\Python registry hive.
>>>>>> If I remove it and restart Apache, I get "error 500".
>>>> _______________________________________________
>>>> Mod_python mailing list
>>>> Mod_python@modpython.org
>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
> 
From nikl at nikl.net  Tue Jun 27 06:54:44 2006
From: nikl at nikl.net (Nikolaus Schlemm)
Date: Tue Jun 27 06:53:47 2006
Subject: [mod_python] odd behaviour of the md5-module in modpy
In-Reply-To: <5c06fa770606270004m63bcb3d9rcd2b1b7483421480@mail.gmail.com>
References: <200606261610.31835.nikl@nikl.net>
	<44A0C9E6.5080701@natlab.research.philips.com>
	<5c06fa770606270004m63bcb3d9rcd2b1b7483421480@mail.gmail.com>
Message-ID: <200606271254.44892.nikl@nikl.net>

Am Dienstag, 27. Juni 2006 09:04 schrieb Deron Meranda:
> On 6/27/06, Mike Looijmans <nlv11281@natlab.research.philips.com> wrote:
> > I'm using a 64-bit AMD linux machine here - and I'm doing lots of MD5
> > checksumming without problems  while processing terabytes of data.
in modpython? I only have the problem there not in "regular" python..

> > I can probably use some 64 bit intel as well, but in the hundreds of
> > mails I got during my vacation, I lost track of the original post for
> > this problem.
I found the problem while moving a django powered site from django's builtin 
dev-server to an modpy setup - it was complaining that I had tampered with 
the session cookies. md5 is used in django for generating a) session ids and 
b) as a checksum for the session data. when I saw that the session ids looked 
odd, I first tried to generate some md5-hashes in django and when they were 
flawed, I wrote the little test-handler Deron quoted.

In django I got "solved" the problem by generating the hashes with sha instead 
of md5 - but that's only a little hack, not a solution ;) but at least this 
is not a blocker right now. also not that other django-users on irc have the 
same problem. unfortunately, I forgot to ask them for details like arch, 
distro, versions.

> Good to hear it's working for you on AMD 64-bit.
>
> Just a quick summary of of the emails so far about what Nikolaus is
> seeing, on two machines I believe.  (Nikl, correct me if I'm wrong)
yep

> One is a debian Linux (celeron 2ghz), the other ubuntu Linux (opteron
> 144).  The Ubuntu Linux is 64-bit with python 2.4.3-1ubuntu1 and
> libapache2-mod-python-3.1.4-0ubuntu1 (both stock from the distro).
>
> When he does MD5s, he always gets the same bogus hexdigest value
> regardless of input, namely 0000000000000000d09215a3e97561b3 in his
> report.  Supposedly the value will be different on each mod_python
> request (but constant for every MD5 within the same request).  Also,
> although random the initial half is always zeros.  The confusing part
> is that when he runs Python outside of mod_python (such as
> interactively) MD5s always work correctly.  Supposedly SHAs work
> regardless.
>
> He ran a simple test handler:
>
>   def handler(req):
>        import md5
>        req.content_type = 'text/plain'
>        req.write('md5: %s\n' % md5.__file__)
>        for k, v in MD5_TESTS.items():
>            m = md5.new(k).hexdigest()
>            req.write('"%s" -> "%s" ? %s\n' % (k, m, (m == v)))
>        return apache.OK
>
> Using RFC 1321 test vectors.  MD5s were all wrong.
>
> I had him dump sys.modules, as well as looking at /proc/xxxx/map for
> the httpd process, and saw nothing unusual.  The md5.so module is
> loaded into the process from the expected Python lib-dynload standard
> path.
>
> I did see that his Apache has a ton of modules loaded though (many
> PHP, MySQL, X11, etc), so I've recommended he run a stripped-down
> apache.  Haven't heard results yet.
unfortunately I can't strip down the apache as those dependencies are used by 
my clients and I don't have any spare machines right now... :( might be 
possible in a couple days though :)
-- 
cheers

	Nikl
From nicolas at lehuen.com  Tue Jun 27 10:50:02 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Jun 27 10:50:13 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely
	onregistrykey?
In-Reply-To: <44A0F562.2050408@secantus.com>
References: <1151363236.2708@dscpl.user.openhosting.com>
	<44A0F562.2050408@secantus.com>
Message-ID: <c298f2d70606270750i72837f79qce87fb87601e293a@mail.gmail.com>

I think that's the way to go, because it looks like Python doesn't
like the environment variables set by Apache. I need to investigate
more, but your solution, John, is a sure bet.

Regards,
Nicolas

2006/6/27, John Keyes <john.keyes@secantus.com>:
> I think he can still do it if he launches apache from a batch
> file.  Inside this batch file set the PYTHON_HOME.  This
> is the setup I use for an application I need to distribute
> across machines, but do not want to make the installer
> more complicated than a basic unzip.
>
> Here's an example batch file that I use:
>
> == SOF ==
> setlocal
>
> set PATH=C:\Python;%PATH%
> set PYTHONHOME=C:\Python
>
> start "c:\Apache\bin\apache.exe
>
> endlocal
> == EOF ==
>
> -John K
>
> Graham Dumpleton wrote:
> > For what he was trying to do, this was not an option. See:
> >
> >   http://www.modpython.org/pipermail/mod_python/2006-June/021453.html
> >   http://www.modpython.org/pipermail/mod_python/2006-June/021456.html
> >
> > In short, he wants to be able to run stuff off a USB drive and avoid
> > having to make modifications to the Win32 registry or anywhere'
> > else outside of the Apache configuration itself.
> >
> > I unfortunately don't know anything about how Python is configured
> > on Win32 so it knows where to find things.
> >
> > If anyone else has suggestions, would be appreciated.
> >
> > Graham
> >
> > John Keyes wrote ..
> >> Sanja,
> >>
> >> Try setting the PYTHON_HOME environment variable:
> >>    set PYTHON_HOME=c:/Python24
> >>
> >> -John K
> >>
> >> Graham Dumpleton wrote:
> >>> sanja@bougakov.com wrote ..
> >>>> Hello, Graham,
> >>>>
> >>>> The problem is that adding the
> >>>>
> >>>>    PythonPath "sys.path +
> >>>> ['C:/Python24/Lib','C:/Python24/Lib/mod_python','C:/Python24/DLLs','C:/Python24/Lib/lib-tk']"
> >>>>
> >>>> line in httpd.conf doesn't help - I still get the
> >>>>
> >>>>   [Mon Jun 26 15:56:04 2006] [error] [client 127.0.0.1] python_handler:
> >>>>   make_obcallback returned no obCallBack!
> >>>>
> >>>> in Apache's error.log file. But when I restore the
> >>>> HKCU\Software\Python\PythonCore\2.4\PythonPath Registry hive and restart
> >>>> Apache, everything works OK.
> >>> I don't know what happens on Win32, but on UNIX mod_python gets
> >>> installed in a 'site-packages' directory and the 'site-packages'
> >>> directory only would be in sys.path, and not the mod_python package
> >>> directory.
> >>>
> >>> Where is the mod_python package installed?
> >>>
> >>> Does the user which Apache runs as have permission to read the stuff
> >> in
> >>> the mod_python package directory?
> >>>
> >>> Can people who know Win32 better than I help out at this point.
> >>>
> >>> Graham
> >>>
> >>>>> The SetEnv directive only affects environment variables inherited by
> >>>>> CGI scripts. It does not affect the environment of Apache itself and
> >>>>> thus does not affect the environment of mod_python. In order to add
> >>>>> extra directories into the Python module search path, use the
> >>>>> PythonPath directive as documented in the mod_python documentation.
> >>>>> Graham
> >>>>> On 23/06/2006, at 8:00 PM, sanja at bougakov.com wrote:
> >>>>>> The problem is that mod_python doesn't look at these env.
> >>>>>> variables. It checks only HKCU\Software\Python registry hive.
> >>>>>> If I remove it and restart Apache, I get "error 500".
> >>>> _______________________________________________
> >>>> Mod_python mailing list
> >>>> Mod_python@modpython.org
> >>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>> _______________________________________________
> >>> Mod_python mailing list
> >>> Mod_python@modpython.org
> >>> http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From sanja at bougakov.com  Tue Jun 27 10:59:19 2006
From: sanja at bougakov.com (sanja@bougakov.com)
Date: Tue Jun 27 10:58:01 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely 
	onregistrykey?
Message-ID: <42995.195.16.47.253.1151420359.squirrel@www.bougakov.com>

It doesn't seem to be the perfect option - it will keep ugly DOS window
open all the time Apache works.

Maybe someone will suggest how to patch mod_python sources to specify
PYTHONPATH relative to the location of mod_python.dll?

Yours,
Sanja


> I think that's the way to go, because it looks like Python doesn't
> like the environment variables set by Apache. I need to investigate
> more, but your solution, John, is a sure bet.
>
> Regards,
> Nicolas
>
> 2006/6/27, John Keyes <john.keyes@secantus.com>:
>> I think he can still do it if he launches apache from a batch
>> file.  Inside this batch file set the PYTHON_HOME.  This


From nicolas at lehuen.com  Tue Jun 27 11:16:11 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Tue Jun 27 11:16:15 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely
	onregistrykey?
In-Reply-To: <42995.195.16.47.253.1151420359.squirrel@www.bougakov.com>
References: <42995.195.16.47.253.1151420359.squirrel@www.bougakov.com>
Message-ID: <c298f2d70606270816i7e50b836h18be6a0c9b197a68@mail.gmail.com>

I'm not sure this is a mod_python problem, rather a Python problem.
There is a "Movable Python" project which is precisely what you may
want : a Python distribution that doesn't need to be installed.
Apparently the server is down right now, but you'll find it here :

http://www.voidspace.org.uk/python/movpy/

Anyway, let me get things clear : what you would like is to be able to
specify relative paths in the PythonPath directive, right ? So it's
not related anymore with the need to set environment variable.

Have you just tried to use the PythonPath directive, and NOT the
environment variable, providing it absolute paths for a starter ? We
must first check whether the PythonPath directive solves the problem
if provided with absolute paths, before trying to patch it to accept
relative paths.

Regards,
Nicolas

2006/6/27, sanja@bougakov.com <sanja@bougakov.com>:
> It doesn't seem to be the perfect option - it will keep ugly DOS window
> open all the time Apache works.
>
> Maybe someone will suggest how to patch mod_python sources to specify
> PYTHONPATH relative to the location of mod_python.dll?
>
> Yours,
> Sanja
>
>
> > I think that's the way to go, because it looks like Python doesn't
> > like the environment variables set by Apache. I need to investigate
> > more, but your solution, John, is a sure bet.
> >
> > Regards,
> > Nicolas
> >
> > 2006/6/27, John Keyes <john.keyes@secantus.com>:
> >> I think he can still do it if he launches apache from a batch
> >> file.  Inside this batch file set the PYTHON_HOME.  This
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Tue Jun 27 18:18:49 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Jun 27 18:18:59 2006
Subject: [mod_python] How to make mod_python (Win32) not to
	relyonregistrykey?
Message-ID: <1151446728.2470@dscpl.user.openhosting.com>

Nicolas Lehuen wrote ..
> I'm not sure this is a mod_python problem, rather a Python problem.
> There is a "Movable Python" project which is precisely what you may
> want : a Python distribution that doesn't need to be installed.
> Apparently the server is down right now, but you'll find it here :
> 
> http://www.voidspace.org.uk/python/movpy/
> 
> Anyway, let me get things clear : what you would like is to be able to
> specify relative paths in the PythonPath directive, right ? So it's
> not related anymore with the need to set environment variable.
> 
> Have you just tried to use the PythonPath directive, and NOT the
> environment variable, providing it absolute paths for a starter ? We
> must first check whether the PythonPath directive solves the problem
> if provided with absolute paths, before trying to patch it to accept
> relative paths.

PythonPath is what I suggested in the first place. Apparently it didn't
work as mod_python callback creation failed. See:

  http://www.modpython.org/pipermail/mod_python/2006-June/021495.html

Unfortunately it is a bit hard to debug why with mod_python 3.2.8
whereas if there was 3.2.9rc? as Win32 package to try, it now generates
lots of debug when callback creation fails to help track down why.

I've wandered in the past whether a PythonHome directive might be
useful. The intent being that mod_python takes that value and populates
PYTHONHOME environment variable before it actually calls init functions
for Python. I saw its use as quite limited so hadn't done anything about
it, but maybe it might have helped in this situation.

Graham

> 2006/6/27, sanja@bougakov.com <sanja@bougakov.com>:
> > It doesn't seem to be the perfect option - it will keep ugly DOS window
> > open all the time Apache works.
> >
> > Maybe someone will suggest how to patch mod_python sources to specify
> > PYTHONPATH relative to the location of mod_python.dll?
> >
> > Yours,
> > Sanja
> >
> >
> > > I think that's the way to go, because it looks like Python doesn't
> > > like the environment variables set by Apache. I need to investigate
> > > more, but your solution, John, is a sure bet.
> > >
> > > Regards,
> > > Nicolas
> > >
> > > 2006/6/27, John Keyes <john.keyes@secantus.com>:
> > >> I think he can still do it if he launches apache from a batch
> > >> file.  Inside this batch file set the PYTHON_HOME.  This
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From administrator at leebrown.org  Tue Jun 27 21:09:34 2006
From: administrator at leebrown.org (Lee Brown)
Date: Tue Jun 27 21:08:06 2006
Subject: [mod_python] How to make mod_python (Win32) not to
	relyonregistrykey?
In-Reply-To: <c298f2d70606270816i7e50b836h18be6a0c9b197a68@mail.gmail.com>
Message-ID: <003c01c69a4f$851a1210$0301a8c0@uberbox>

Greetings!

BINGO!  This is a PYTHON problem, and I doubt that you'll solve it without
patching python's source code.

However, I have seen a python module that manipulates Windows Registry data.
I suspect that your most expedient solution will be to write a small program
to add the needed information to the registry, convert that program to an
EXE file, and then execute that from a batch file when you plug your 'usb
based' server into the host machine.


Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Nicolas Lehuen
Sent: Tuesday, June 27, 2006 11:16 AM
To: sanja@bougakov.com
Cc: mod_python@modpython.org
Subject: Re: [mod_python] How to make mod_python (Win32) not to
relyonregistrykey?

I'm not sure this is a mod_python problem, rather a Python problem.
There is a "Movable Python" project which is precisely what you may want : a
Python distribution that doesn't need to be installed.
Apparently the server is down right now, but you'll find it here :

http://www.voidspace.org.uk/python/movpy/

Anyway, let me get things clear : what you would like is to be able to
specify relative paths in the PythonPath directive, right ? So it's not
related anymore with the need to set environment variable.

Have you just tried to use the PythonPath directive, and NOT the environment
variable, providing it absolute paths for a starter ? We must first check
whether the PythonPath directive solves the problem if provided with
absolute paths, before trying to patch it to accept relative paths.

Regards,
Nicolas

2006/6/27, sanja@bougakov.com <sanja@bougakov.com>:
> It doesn't seem to be the perfect option - it will keep ugly DOS 
> window open all the time Apache works.
>
> Maybe someone will suggest how to patch mod_python sources to specify 
> PYTHONPATH relative to the location of mod_python.dll?
>
> Yours,
> Sanja
>
>
> > I think that's the way to go, because it looks like Python doesn't 
> > like the environment variables set by Apache. I need to investigate 
> > more, but your solution, John, is a sure bet.
> >
> > Regards,
> > Nicolas
> >
> > 2006/6/27, John Keyes <john.keyes@secantus.com>:
> >> I think he can still do it if he launches apache from a batch file.  
> >> Inside this batch file set the PYTHON_HOME.  This
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From wouter at squirrel-systems.com  Wed Jun 28 00:59:45 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed Jun 28 00:59:56 2006
Subject: [mod_python] "Internal Server Error"
Message-ID: <1151470786.8322.168.camel@pistachio.squirrel>

Hi all,

Looking through my stats I see some of my users still get an "500
internal server error". Is there any easy way to prevent this?

I've cut down on this already seriously by doing some POST checks (if
the parameter does not exist, reroute to the section's home page instead
of serving an empty page - which causes Apache to serve an "internal
server error").

The current errors are usually from so malformed input I get a crash
(I've to look into that, I know), or more frequently from mistypings in
the URL (http://host/python/main.py/pagename). 

Wouter.

From grahamd at dscpl.com.au  Wed Jun 28 01:21:23 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 28 01:21:27 2006
Subject: [mod_python] "Internal Server Error"
Message-ID: <1151472083.24427@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
> Hi all,
> 
> Looking through my stats I see some of my users still get an "500
> internal server error". Is there any easy way to prevent this?
> 
> I've cut down on this already seriously by doing some POST checks (if
> the parameter does not exist, reroute to the section's home page instead
> of serving an empty page - which causes Apache to serve an "internal
> server error").
> 
> The current errors are usually from so malformed input I get a crash
> (I've to look into that, I know), or more frequently from mistypings in
> the URL (http://host/python/main.py/pagename). 

Is it definitely coming from mod_python code? Does it generate any sort
of Python stack trace in the Apache error log or any other message? If
using mod_python 3.2.8, pretty well all of the places in mod_python
which generate a 500 error should log a stack trace or some other
informative message as to why the 500 error was generated. Also, when
you say crash, do you mean the 500 error, or an actual Apache crash
due to a segmentation fault or something?

Graham



From nicolas at lehuen.com  Wed Jun 28 01:23:58 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Wed Jun 28 01:24:02 2006
Subject: [mod_python] How to make mod_python (Win32) not to
	relyonregistrykey?
In-Reply-To: <003c01c69a4f$851a1210$0301a8c0@uberbox>
References: <c298f2d70606270816i7e50b836h18be6a0c9b197a68@mail.gmail.com>
	<003c01c69a4f$851a1210$0301a8c0@uberbox>
Message-ID: <c298f2d70606272223g436fa066saa0099810acde782@mail.gmail.com>

And that, my friend, is what we call an installer :).

See Inno Setup et al. But I don't think this is what Sanja wants.

Is the SetEnv directive correctly working on Win32 ? For example, if I
have a CGI program, does it effectively receive the environment
variables set in the .conf file ? If so, I don't understand why Python
is more cooperative...

Regards,
Nicolas

2006/6/28, Lee Brown <administrator@leebrown.org>:
> Greetings!
>
> BINGO!  This is a PYTHON problem, and I doubt that you'll solve it without
> patching python's source code.
>
> However, I have seen a python module that manipulates Windows Registry data.
> I suspect that your most expedient solution will be to write a small program
> to add the needed information to the registry, convert that program to an
> EXE file, and then execute that from a batch file when you plug your 'usb
> based' server into the host machine.
>
>
> Best Regards,
> Lee E. Brown
> (administrator@leebrown.org)
>
> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Nicolas Lehuen
> Sent: Tuesday, June 27, 2006 11:16 AM
> To: sanja@bougakov.com
> Cc: mod_python@modpython.org
> Subject: Re: [mod_python] How to make mod_python (Win32) not to
> relyonregistrykey?
>
> I'm not sure this is a mod_python problem, rather a Python problem.
> There is a "Movable Python" project which is precisely what you may want : a
> Python distribution that doesn't need to be installed.
> Apparently the server is down right now, but you'll find it here :
>
> http://www.voidspace.org.uk/python/movpy/
>
> Anyway, let me get things clear : what you would like is to be able to
> specify relative paths in the PythonPath directive, right ? So it's not
> related anymore with the need to set environment variable.
>
> Have you just tried to use the PythonPath directive, and NOT the environment
> variable, providing it absolute paths for a starter ? We must first check
> whether the PythonPath directive solves the problem if provided with
> absolute paths, before trying to patch it to accept relative paths.
>
> Regards,
> Nicolas
>
> 2006/6/27, sanja@bougakov.com <sanja@bougakov.com>:
> > It doesn't seem to be the perfect option - it will keep ugly DOS
> > window open all the time Apache works.
> >
> > Maybe someone will suggest how to patch mod_python sources to specify
> > PYTHONPATH relative to the location of mod_python.dll?
> >
> > Yours,
> > Sanja
> >
> >
> > > I think that's the way to go, because it looks like Python doesn't
> > > like the environment variables set by Apache. I need to investigate
> > > more, but your solution, John, is a sure bet.
> > >
> > > Regards,
> > > Nicolas
> > >
> > > 2006/6/27, John Keyes <john.keyes@secantus.com>:
> > >> I think he can still do it if he launches apache from a batch file.
> > >> Inside this batch file set the PYTHON_HOME.  This
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
From nicolas at lehuen.com  Wed Jun 28 01:26:48 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Wed Jun 28 01:27:35 2006
Subject: [mod_python] How to make mod_python (Win32) not to
	relyonregistrykey?
In-Reply-To: <c298f2d70606272223g436fa066saa0099810acde782@mail.gmail.com>
References: <c298f2d70606270816i7e50b836h18be6a0c9b197a68@mail.gmail.com>
	<003c01c69a4f$851a1210$0301a8c0@uberbox>
	<c298f2d70606272223g436fa066saa0099810acde782@mail.gmail.com>
Message-ID: <c298f2d70606272226m7aae3967x965fb51c6e50291c@mail.gmail.com>

BTW, I've been bitten by this at work, so I might as well share the
pain : it looks like there is no way to benefit from Autorun with an
USB key.

Regards,
Nicolas

2006/6/28, Nicolas Lehuen <nicolas@lehuen.com>:
> And that, my friend, is what we call an installer :).
>
> See Inno Setup et al. But I don't think this is what Sanja wants.
>
> Is the SetEnv directive correctly working on Win32 ? For example, if I
> have a CGI program, does it effectively receive the environment
> variables set in the .conf file ? If so, I don't understand why Python
> is more cooperative...
>
> Regards,
> Nicolas
>
> 2006/6/28, Lee Brown <administrator@leebrown.org>:
> > Greetings!
> >
> > BINGO!  This is a PYTHON problem, and I doubt that you'll solve it without
> > patching python's source code.
> >
> > However, I have seen a python module that manipulates Windows Registry data.
> > I suspect that your most expedient solution will be to write a small program
> > to add the needed information to the registry, convert that program to an
> > EXE file, and then execute that from a batch file when you plug your 'usb
> > based' server into the host machine.
> >
> >
> > Best Regards,
> > Lee E. Brown
> > (administrator@leebrown.org)
> >
> > -----Original Message-----
> > From: mod_python-bounces@modpython.org
> > [mailto:mod_python-bounces@modpython.org] On Behalf Of Nicolas Lehuen
> > Sent: Tuesday, June 27, 2006 11:16 AM
> > To: sanja@bougakov.com
> > Cc: mod_python@modpython.org
> > Subject: Re: [mod_python] How to make mod_python (Win32) not to
> > relyonregistrykey?
> >
> > I'm not sure this is a mod_python problem, rather a Python problem.
> > There is a "Movable Python" project which is precisely what you may want : a
> > Python distribution that doesn't need to be installed.
> > Apparently the server is down right now, but you'll find it here :
> >
> > http://www.voidspace.org.uk/python/movpy/
> >
> > Anyway, let me get things clear : what you would like is to be able to
> > specify relative paths in the PythonPath directive, right ? So it's not
> > related anymore with the need to set environment variable.
> >
> > Have you just tried to use the PythonPath directive, and NOT the environment
> > variable, providing it absolute paths for a starter ? We must first check
> > whether the PythonPath directive solves the problem if provided with
> > absolute paths, before trying to patch it to accept relative paths.
> >
> > Regards,
> > Nicolas
> >
> > 2006/6/27, sanja@bougakov.com <sanja@bougakov.com>:
> > > It doesn't seem to be the perfect option - it will keep ugly DOS
> > > window open all the time Apache works.
> > >
> > > Maybe someone will suggest how to patch mod_python sources to specify
> > > PYTHONPATH relative to the location of mod_python.dll?
> > >
> > > Yours,
> > > Sanja
> > >
> > >
> > > > I think that's the way to go, because it looks like Python doesn't
> > > > like the environment variables set by Apache. I need to investigate
> > > > more, but your solution, John, is a sure bet.
> > > >
> > > > Regards,
> > > > Nicolas
> > > >
> > > > 2006/6/27, John Keyes <john.keyes@secantus.com>:
> > > >> I think he can still do it if he launches apache from a batch file.
> > > >> Inside this batch file set the PYTHON_HOME.  This
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
From grahamd at dscpl.com.au  Wed Jun 28 01:34:43 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 28 01:34:56 2006
Subject: [mod_python] How to make mod_python (Win32) not
	torelyonregistrykey?
Message-ID: <1151472883.31574@dscpl.user.openhosting.com>

Nicolas Lehuen wrote ..
> And that, my friend, is what we call an installer :).
> 
> See Inno Setup et al. But I don't think this is what Sanja wants.
> 
> Is the SetEnv directive correctly working on Win32 ? For example, if I
> have a CGI program, does it effectively receive the environment
> variables set in the .conf file ? If so, I don't understand why Python
> is more cooperative...

As I pointed out in very first followup (and no one corrected me to say
I was wrong), my understanding is that the Apache SetEnv directory
merely sets an entry in a table object which is then used to populate
the environment of CGI scripts when run. That is, SetEnv doesn't actually
change the environment of Apache itself, thus mod_python wouldn't see
any values set by SetEnv in sys.environ.

  http://httpd.apache.org/docs/2.0/mod/mod_env.html#setenv

Code from httpd which is triggered by SetEnv is:

static const char *add_env_module_vars_set(cmd_parms *cmd, void *sconf_,
                                           const char *name, const char *value)
{
    env_dir_config_rec *sconf = sconf_;

    /* name is mandatory, value is optional.  no value means
     * set the variable to an empty string
     */
    apr_table_setn(sconf->vars, name, value ? value : "");

    return NULL;
}

In other words, doesn't call putenv() so can't be used to set PYTHONHOME or
PYTHONPATH.

Graham

> Regards,
> Nicolas
> 
> 2006/6/28, Lee Brown <administrator@leebrown.org>:
> > Greetings!
> >
> > BINGO!  This is a PYTHON problem, and I doubt that you'll solve it without
> > patching python's source code.
> >
> > However, I have seen a python module that manipulates Windows Registry
> data.
> > I suspect that your most expedient solution will be to write a small
> program
> > to add the needed information to the registry, convert that program to
> an
> > EXE file, and then execute that from a batch file when you plug your
> 'usb
> > based' server into the host machine.
> >
> >
> > Best Regards,
> > Lee E. Brown
> > (administrator@leebrown.org)
> >
> > -----Original Message-----
> > From: mod_python-bounces@modpython.org
> > [mailto:mod_python-bounces@modpython.org] On Behalf Of Nicolas Lehuen
> > Sent: Tuesday, June 27, 2006 11:16 AM
> > To: sanja@bougakov.com
> > Cc: mod_python@modpython.org
> > Subject: Re: [mod_python] How to make mod_python (Win32) not to
> > relyonregistrykey?
> >
> > I'm not sure this is a mod_python problem, rather a Python problem.
> > There is a "Movable Python" project which is precisely what you may want
> : a
> > Python distribution that doesn't need to be installed.
> > Apparently the server is down right now, but you'll find it here :
> >
> > http://www.voidspace.org.uk/python/movpy/
> >
> > Anyway, let me get things clear : what you would like is to be able to
> > specify relative paths in the PythonPath directive, right ? So it's not
> > related anymore with the need to set environment variable.
> >
> > Have you just tried to use the PythonPath directive, and NOT the environment
> > variable, providing it absolute paths for a starter ? We must first check
> > whether the PythonPath directive solves the problem if provided with
> > absolute paths, before trying to patch it to accept relative paths.
> >
> > Regards,
> > Nicolas
> >
> > 2006/6/27, sanja@bougakov.com <sanja@bougakov.com>:
> > > It doesn't seem to be the perfect option - it will keep ugly DOS
> > > window open all the time Apache works.
> > >
> > > Maybe someone will suggest how to patch mod_python sources to specify
> > > PYTHONPATH relative to the location of mod_python.dll?
> > >
> > > Yours,
> > > Sanja
> > >
> > >
> > > > I think that's the way to go, because it looks like Python doesn't
> > > > like the environment variables set by Apache. I need to investigate
> > > > more, but your solution, John, is a sure bet.
> > > >
> > > > Regards,
> > > > Nicolas
> > > >
> > > > 2006/6/27, John Keyes <john.keyes@secantus.com>:
> > > >> I think he can still do it if he launches apache from a batch file.
> > > >> Inside this batch file set the PYTHON_HOME.  This
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From nlv11281 at natlab.research.philips.com  Wed Jun 28 06:13:04 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Wed Jun 28 06:13:13 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely
	onregistrykey?
In-Reply-To: <42995.195.16.47.253.1151420359.squirrel@www.bougakov.com>
References: <42995.195.16.47.253.1151420359.squirrel@www.bougakov.com>
Message-ID: <44A25630.4010905@natlab.research.philips.com>

sanja@bougakov.com wrote:
> It doesn't seem to be the perfect option - it will keep ugly DOS window
> open all the time Apache works.

You can prevent this by starting the apache server with the START command, just prefix the word 
'start' to the apache startup commandline.

Mike

From wouter at squirrel-systems.com  Wed Jun 28 06:15:05 2006
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed Jun 28 06:15:17 2006
Subject: [mod_python] "Internal Server Error"
In-Reply-To: <1151472083.24427@dscpl.user.openhosting.com>
References: <1151472083.24427@dscpl.user.openhosting.com>
Message-ID: <1151489705.8322.275.camel@pistachio.squirrel>

On Wed, 2006-06-28 at 01:21 -0400, Graham Dumpleton wrote:
> Wouter van Marle wrote ..
> > Hi all,
> > 
> > Looking through my stats I see some of my users still get an "500
> > internal server error". Is there any easy way to prevent this?
> > 
> > I've cut down on this already seriously by doing some POST checks (if
> > the parameter does not exist, reroute to the section's home page instead
> > of serving an empty page - which causes Apache to serve an "internal
> > server error").
> > 
> > The current errors are usually from so malformed input I get a crash
> > (I've to look into that, I know), or more frequently from mistypings in
> > the URL (http://host/python/main.py/pagename). 
> 
> Is it definitely coming from mod_python code? Does it generate any sort
> of Python stack trace in the Apache error log or any other message? If
> using mod_python 3.2.8, pretty well all of the places in mod_python
> which generate a 500 error should log a stack trace or some other
> informative message as to why the 500 error was generated. Also, when
> you say crash, do you mean the 500 error, or an actual Apache crash
> due to a segmentation fault or something?

For example:
72.30.252.145 - - [25/Jun/2006:18:19:35 +0800] "GET /show_page.py/main
HTTP/1.0" 500 538 "-" "Mozilla/5.0 (compatible; Yahoo! Slurp;
http://help.yahoo.com/help/us/ysearch/slurp)"

This is an invalid URL, but instead of a 404 it gives a 500 error. As
it's asking for a .py file, it's passed on to the python interpreter. No
info in the logs - neither from Python, neither from Apache that it's
restarting.

Wouter.

> 
> Graham
> 
> 
> 
> 

From sanja at bougakov.com  Wed Jun 28 08:20:54 2006
From: sanja at bougakov.com (sanja@bougakov.com)
Date: Wed Jun 28 08:19:15 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely 
	onregistrykey?
In-Reply-To: <44A25630.4010905@natlab.research.philips.com>
References: <42995.195.16.47.253.1151420359.squirrel@www.bougakov.com>
	<44A25630.4010905@natlab.research.philips.com>
Message-ID: <37622.195.16.47.253.1151497254.squirrel@www.bougakov.com>

> sanja@bougakov.com wrote:
>> It doesn't seem to be the perfect option - it will keep ugly DOS window
>> open all the time Apache works.
>
> You can prevent this by starting the apache server with the START command,
> just prefix the word
> 'start' to the apache startup commandline.

I'm currenly using another solution - to call Apache from small utility
that will pass new environment variable as the parameter to CreateProcess
API function.

Thanks to everyone who replied for suggestions.

Yours,
Sanja

From nicolas at lehuen.com  Wed Jun 28 08:24:04 2006
From: nicolas at lehuen.com (Nicolas Lehuen)
Date: Wed Jun 28 08:24:37 2006
Subject: [mod_python] How to make mod_python (Win32) not to rely
	onregistrykey?
In-Reply-To: <37622.195.16.47.253.1151497254.squirrel@www.bougakov.com>
References: <42995.195.16.47.253.1151420359.squirrel@www.bougakov.com>
	<44A25630.4010905@natlab.research.philips.com>
	<37622.195.16.47.253.1151497254.squirrel@www.bougakov.com>
Message-ID: <c298f2d70606280524n73f255f1wc0367cc378ef4921@mail.gmail.com>

It looks like mod_python could eventually do something about that :

http://docs.python.org/api/embedding.html

But if you found a solution that doesn't involve hacking deep into
mod_python, that's perfect.

Regards,
Nicolas

2006/6/28, sanja@bougakov.com <sanja@bougakov.com>:
> > sanja@bougakov.com wrote:
> >> It doesn't seem to be the perfect option - it will keep ugly DOS window
> >> open all the time Apache works.
> >
> > You can prevent this by starting the apache server with the START command,
> > just prefix the word
> > 'start' to the apache startup commandline.
>
> I'm currenly using another solution - to call Apache from small utility
> that will pass new environment variable as the parameter to CreateProcess
> API function.
>
> Thanks to everyone who replied for suggestions.
>
> Yours,
> Sanja
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From max.luebbe at gmail.com  Wed Jun 28 16:41:25 2006
From: max.luebbe at gmail.com (Max Luebbe)
Date: Wed Jun 28 16:41:33 2006
Subject: [mod_python] Problem with Mod Python Appending HTML
Message-ID: <1151527285.9771.11.camel@localhost>

I am having problems with my mod_python scripts appending HTML together,
when having req.write() create a new page is what I am after.

I have an authentication handler for a blank html page that queries a
database for a user/pass, and then generates HTML based off of who
logged in.

The HTML generated is a form, and the user information is used to
populate the default values. When the user submits the form, and my
formHandler is called, the HTML it generates is appended to the current
page, instead of starting a new one. I have <html> and </html> tags at
the appropriate places to mark where documents are starting and
stopping.

I did not have this problem on any of the other pages/scripts I have
written, and I think that adding authentication into the mix is the
variable in the equation.

What I am after is the following sequence:
(1) user login 
(2) new page w/form with default fields grabbed from db (generated html)
(3) another new page w/confirmation info (values and corrections from
form) (generated html)

Any suggestions?
I would greatly appreciate any help I could get.

-- 
Max Luebbe <max.luebbe@gmail.com>

From fumanchu at amor.org  Wed Jun 28 16:57:21 2006
From: fumanchu at amor.org (Robert Brewer)
Date: Wed Jun 28 16:58:14 2006
Subject: [mod_python] Problem with Mod Python Appending HTML
Message-ID: <435DF58A933BA74397B42CDEB8145A8603299D34@ex9.hostedexchange.local>

Max Luebbe wrote:
> I am having problems with my mod_python scripts appending 
> HTML together, > when having req.write() create a new page
> is what I am after.

Sounds like you might have the same problem I discussed at:
http://www.aminus.org/blogs/index.php/fumanchu/2005/11/21/oh_so_very_stu
mped

My solution was to always set "req.status = 200" (or other integer HTTP
code) and always "return apache.OK". Returning a status code from the
handler is most likely what was screwing me up. See
http://projects.amor.org/misc/changeset/20 for the changeset to
modpython_gateway that resolved my issue.


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org

From grahamd at dscpl.com.au  Wed Jun 28 18:30:32 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 28 18:30:36 2006
Subject: [mod_python] Problem with Mod Python Appending HTML
Message-ID: <1151533832.16981@dscpl.user.openhosting.com>

Max Luebbe wrote ..
> I am having problems with my mod_python scripts appending HTML together,
> when having req.write() create a new page is what I am after.
> 
> I have an authentication handler for a blank html page that queries a
> database for a user/pass, and then generates HTML based off of who
> logged in.

When you say you have a "authentication handler", do you mean that it
is triggered by PythonAuthenHandler directive. If it is and you are returning
HTML from it and it represents the complete response for the request,
you must return apache.DONE and not apache.OK. If you do not return
apache.DONE, the content handler will still be executed and thus any
HTML that the content handler itself generates will be appended to the
result.

The only other time you would likely see HTML from two places being
concatenated together, is when you are generating HTML but then returning
an error status such as apache.HTTP_UNAUTHORIZED. In other words, 
you were wanting to generate a custom error response page. If you simply
return apache.HTTP_UNAUTHORIZED in that situation, then Apache will
still go on to generate an error document page which gets appended to
your output. In that situation you should instead use:

  req.status = apache.HTTP_UNAUTHORIZED
  # generate HTML
  return apache.OK

If this is a handler other than PythonHandler, again, you should be
returning apache.DONE and not apache.OK.

I would suggest that you post what your Apache configuration directives
are so it is clear what handlers are being executed and in what phases.

Show a cut done version of what your handlers are doing would also
be helpful.

Graham

> The HTML generated is a form, and the user information is used to
> populate the default values. When the user submits the form, and my
> formHandler is called, the HTML it generates is appended to the current
> page, instead of starting a new one. I have <html> and </html> tags at
> the appropriate places to mark where documents are starting and
> stopping.
> 
> I did not have this problem on any of the other pages/scripts I have
> written, and I think that adding authentication into the mix is the
> variable in the equation.
> 
> What I am after is the following sequence:
> (1) user login 
> (2) new page w/form with default fields grabbed from db (generated html)
> (3) another new page w/confirmation info (values and corrections from
> form) (generated html)
> 
> Any suggestions?
> I would greatly appreciate any help I could get.
> 
> -- 
> Max Luebbe <max.luebbe@gmail.com>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Wed Jun 28 18:40:29 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Jun 28 18:40:37 2006
Subject: [mod_python] "Internal Server Error"
Message-ID: <1151534429.21908@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
> On Wed, 2006-06-28 at 01:21 -0400, Graham Dumpleton wrote:
> > Wouter van Marle wrote ..
> > > Hi all,
> > > 
> > > Looking through my stats I see some of my users still get an "500
> > > internal server error". Is there any easy way to prevent this?
> > > 
> > > I've cut down on this already seriously by doing some POST checks (if
> > > the parameter does not exist, reroute to the section's home page instead
> > > of serving an empty page - which causes Apache to serve an "internal
> > > server error").
> > > 
> > > The current errors are usually from so malformed input I get a crash
> > > (I've to look into that, I know), or more frequently from mistypings
> in
> > > the URL (http://host/python/main.py/pagename). 
> > 
> > Is it definitely coming from mod_python code? Does it generate any sort
> > of Python stack trace in the Apache error log or any other message? If
> > using mod_python 3.2.8, pretty well all of the places in mod_python
> > which generate a 500 error should log a stack trace or some other
> > informative message as to why the 500 error was generated. Also, when
> > you say crash, do you mean the 500 error, or an actual Apache crash
> > due to a segmentation fault or something?
> 
> For example:
> 72.30.252.145 - - [25/Jun/2006:18:19:35 +0800] "GET /show_page.py/main
> HTTP/1.0" 500 538 "-" "Mozilla/5.0 (compatible; Yahoo! Slurp;
> http://help.yahoo.com/help/us/ysearch/slurp)"
> 
> This is an invalid URL, but instead of a 404 it gives a 500 error. As
> it's asking for a .py file, it's passed on to the python interpreter. No
> info in the logs - neither from Python, neither from Apache that it's
> restarting.

Nothing in "error_log" file at all????

What handler are you using? Is this when using mod_python.publisher
or some custom handler? Is this with mod_python 3.2.8? In publisher
prior to 3.2.8, if the function returned None it would cause a 500 error
but not log anything, but current publisher would log a message in
the error log.

Graham
From grahamd at dscpl.com.au  Thu Jun 29 01:41:35 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 29 01:41:53 2006
Subject: [mod_python] "Internal Server Error"
Message-ID: <1151559694.19094@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
> 
> > > For example:
> > > 72.30.252.145 - - [25/Jun/2006:18:19:35 +0800] "GET /show_page.py/main
> > > HTTP/1.0" 500 538 "-" "Mozilla/5.0 (compatible; Yahoo! Slurp;
> > > http://help.yahoo.com/help/us/ysearch/slurp)"
> > > 
> > > This is an invalid URL, but instead of a 404 it gives a 500 error.
> As
> > > it's asking for a .py file, it's passed on to the python interpreter.
> No
> > > info in the logs - neither from Python, neither from Apache that it's
> > > restarting.
> > 
> > Nothing in "error_log" file at all????
> 
> Sorry didn't look there. This is the relevant part of the error_log of
> this error:
> 
> [Sun Jun 25 18:19:35 2006] [error] [client 72.30.252.145] PythonHandler
> mod_python.publisher: Traceback (most recent call last):
> [Sun Jun 25 18:19:35 2006] [error] [client 72.30.252.145] PythonHandler
> mod_python.publisher:   File
> "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in
> HandlerDispatch\n    result = object(req)
> [Sun Jun 25 18:19:35 2006] [error] [client 72.30.252.145] PythonHandler
> mod_python.publisher:   File
> "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 98, in
> handler\n    path=[path])
> [Sun Jun 25 18:19:35 2006] [error] [client 72.30.252.145] PythonHandler
> mod_python.publisher:   File
> "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 454, in
> import_module\n    f, p, d = imp.find_module(parts[i], path)
> [Sun Jun 25 18:19:35 2006] [error] [client 72.30.252.145] PythonHandler
> mod_python.publisher: ImportError: No module named show_page

This is normal for mod_python 3.1.3. Ie., instead of 404 NOT_FOUND
it returns 500 instead. In mod_python 3.2.8, it should return 404 NOT
FOUND as one would expect.

> > What handler are you using? Is this when using mod_python.publisher
> > or some custom handler? 
> 
> mod_python.publisher; no custom handlers.
> 
> > Is this with mod_python 3.2.8? In publisher
> > prior to 3.2.8, if the function returned None it would cause a 500 error
> > but not log anything, but current publisher would log a message in
> > the error log.
> 
> It's mod_python 3.1.3 (Debian Sarge). Doesn't seem to have a later
> version available.

Only choice would be to compile source for mod_python 3.2.8 from
scratch then.

> I used to have the problem that in some cases my function would return
> None (resulting in the Error 500); that I think is solved now. I haven't
> found any error-500's recently that I can directly link back to my own
> programming.

Graham
From asteele at directcd.com.au  Thu Jun 29 03:11:42 2006
From: asteele at directcd.com.au (Andrew Steele)
Date: Thu Jun 29 03:11:58 2006
Subject: [mod_python] compiling mod_python with httpd 2.2.2
In-Reply-To: <1151363236.2708@dscpl.user.openhosting.com>
References: <1151363236.2708@dscpl.user.openhosting.com>
Message-ID: <Pine.LNX.4.61.0606291655520.1269@office.directcd.com.au>

I am also having problems compiling mod_python 3.2.8 against httpd 2.2.2 
on Redhat Linux 7.3 with an updated version of flex and Python 2.4.3

Here are the last few lines


/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la 
-rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo 
hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo 
tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo 
-L/usr/local/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 
-lpthread -ldl -lutil -lm -Wl,--rpath -Wl, -L -ldb-4.4

/usr/bin/ld: cannot open mod_python.so: No such file or directory
collect2: ld returned 1 exit status
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory 
`/home/misc/python-packages/mod_python-3.2.8/src'
make: *** [do_dso] Error 2



Andrew
From grahamd at dscpl.com.au  Thu Jun 29 06:43:37 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 29 06:45:02 2006
Subject: [mod_python] compiling mod_python with httpd 2.2.2
In-Reply-To: <Pine.LNX.4.61.0606291655520.1269@office.directcd.com.au>
References: <1151363236.2708@dscpl.user.openhosting.com>
	<Pine.LNX.4.61.0606291655520.1269@office.directcd.com.au>
Message-ID: <D56E16FF-E7C2-46E9-9A21-33D362693DC0@dscpl.com.au>

You can't use Apache 2.2.2 with mod_python 3.2.8. You can only use  
Apache 2.0.47 < Apache 2.1.

Apache 2.2 support will be in mod_python 3.2.9, which is going  
through process of final testing.

If you really want to try out the mod_python 3.2.9 release candidate  
see:

   http://people.apache.org/~jgallacher/mod_python/dist/

You would be better off perhaps waiting though.

Graham

On 29/06/2006, at 5:11 PM, Andrew Steele wrote:

> I am also having problems compiling mod_python 3.2.8 against httpd  
> 2.2.2 on Redhat Linux 7.3 with an updated version of flex and  
> Python 2.4.3
>
> Here are the last few lines
>
>
> /usr/local/apache2/build/libtool --silent --mode=link gcc -o  
> mod_python.la -rpath /usr/local/apache2/modules -module -avoid- 
> version    hlistobject.lo hlist.lo filterobject.lo connobject.lo  
> serverobject.lo util.lo tableobject.lo requestobject.lo  
> _apachemodule.lo mod_python.lo -L/usr/local/lib/python2.4/config - 
> Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm - 
> Wl,--rpath -Wl, -L -ldb-4.4
>
> /usr/bin/ld: cannot open mod_python.so: No such file or directory
> collect2: ld returned 1 exit status
> apxs:Error: Command failed with rc=65536
> .
> make[1]: *** [mod_python.so] Error 1
> make[1]: Leaving directory `/home/misc/python-packages/ 
> mod_python-3.2.8/src'
> make: *** [do_dso] Error 2
>
>
>
> Andrew
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From dsavitsk at gmail.com  Thu Jun 29 18:09:36 2006
From: dsavitsk at gmail.com (douglas savitsky)
Date: Thu Jun 29 18:09:56 2006
Subject: [mod_python] COM errors on Win2K3
Message-ID: <9a46cf80606291509y2ffd60ffk4a28fde0ad1eed24@mail.gmail.com>

I have an application that runs on mod_python/apache using the publisher
handler.  It uses an Access db as the backend (yes, I know, but the
amount of data is small so it should be fine) and connects via ADO.
In a
test environment on XP it runs fine, but when on a win2k3 server it will
load one page, but all subsequent page loads throw a
pythoncom.CoInitialize error until I restart the apache.

The structure is that the python script imports a module that contains
the ADO code.

Presumably, this is a threading issue, but I am not sure what the best
approach to fixing it is.  I tried putting
pythoncom.CoInitialize/pythoncom.CoUninitialize calls in the __init__
and __del__ methods of the modules, but this did not work.  Is this
something that needs to be done at a lower level? Should I wrap every
COM call or can I turn off threading somewhere?

This is mod_python 3.2, Python 2.3.5, apache2.0.*, win2k3, ado 2.8, and the
server has 2 processors in case that matters.


The error I get is:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "C:\Python23\Lib\site-packages\mod_python\apache.py", line 299, in
HandlerDispatch
    result = object(req)

  File "C:\Python23\Lib\site-packages\mod_python\publisher.py", line 213, in
handler
    published = publish_object(req, object)

  File "C:\Python23\Lib\site-packages\mod_python\publisher.py", line 410, in
publish_object
    return publish_object(req,util.apply_fs_data(object, req.form, req=req))

  File "C:\Python23\Lib\site-packages\mod_python\util.py", line 439, in
apply_fs_data
    return object(**args)

  File "E:\http_server\timeslips\index.py", line 84, in index
    rtn.append(ts_widget.make_employee_picker())

  File "C:\Python23\lib\site-packages\ecptimeslips\ts_widget.py", line 128,
in make_employee_picker
    rs = win32com.client.Dispatch("ADODB.Recordset")

  File "C:\Python23\Lib\site-packages\win32com\client\__init__.py", line 95,
in Dispatch
    dispatch, userName =
dynamic._GetGoodDispatchAndUserName(dispatch,userName,clsctx)

  File "C:\Python23\Lib\site-packages\win32com\client\dynamic.py", line 91,
in _GetGoodDispatchAndUserName
    return (_GetGoodDispatch(IDispatch, clsctx), userName)

  File "C:\Python23\Lib\site-packages\win32com\client\dynamic.py", line 79,
in _GetGoodDispatch
    IDispatch = pythoncom.CoCreateInstance(IDispatch, None, clsctx,
pythoncom.IID_IDispatch)

com_error: (-2147221008, 'CoInitialize has not been called.', None, None)


Even more strangely, with IE it will work for a bit and then die (but
only for one user), with Firefox it never works, and with Mozilla it
is in the middle -- maybe one page and then an error.

?

Thanks,

-d
From grahamd at dscpl.com.au  Thu Jun 29 18:43:00 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 29 18:43:04 2006
Subject: [mod_python] COM errors on Win2K3
Message-ID: <1151620980.27151@dscpl.user.openhosting.com>

douglas savitsky wrote ..
> I have an application that runs on mod_python/apache using the publisher
> handler.  It uses an Access db as the backend (yes, I know, but the
> amount of data is small so it should be fine) and connects via ADO.
> In a
> test environment on XP it runs fine, but when on a win2k3 server it will
> load one page, but all subsequent page loads throw a
> pythoncom.CoInitialize error until I restart the apache.
> 
> The structure is that the python script imports a module that contains
> the ADO code.
> 
> Presumably, this is a threading issue, but I am not sure what the best
> approach to fixing it is.  I tried putting
> pythoncom.CoInitialize/pythoncom.CoUninitialize calls in the __init__
> and __del__ methods of the modules, but this did not work. 

Modules do not have __init__ and __del__ methods, so that cannot work.

If you need to ensure that a specific bit of code is executed when Apache
starts up and that it is only executed once, you should stick it in a module
of its own and then use the PythonImport directive to tell mod_python
that that module should be loaded right at the start when mod_python
is initialised and before any requests are processed.

The code you put in this special module should be executed as a side
effect of the module import itself. In that way it acts like an __init__
method although there is not one. There is no safe way to have the
equivalent of __del__. Ie., no way you can have special code run when
Apache is being shutdown. Before you think that apache.register_cleanup()
or req.server.register_cleanup() might do it, it will not as that code has
been found to be unreliable and can cause Apache child process to
lock up on shutdown.

Also note that this special module imported using PythonImport should
not contain any handlers and should NOT be imported from handler code
using apache.import_module() otherwise it might be reloaded at run time
with initialisation then being performed more than once. Thus, use "import"
to import it instead. It is possible to have code within the module to protect
against reloading issues, but simply best to avoid it in the first place.

Graham

> Is this
> something that needs to be done at a lower level? Should I wrap every
> COM call or can I turn off threading somewhere?
> 
> This is mod_python 3.2, Python 2.3.5, apache2.0.*, win2k3, ado 2.8, and
> the
> server has 2 processors in case that matters.
> 
> 
> The error I get is:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "C:\Python23\Lib\site-packages\mod_python\apache.py", line 299,
> in
> HandlerDispatch
>     result = object(req)
> 
>   File "C:\Python23\Lib\site-packages\mod_python\publisher.py", line 213,
> in
> handler
>     published = publish_object(req, object)
> 
>   File "C:\Python23\Lib\site-packages\mod_python\publisher.py", line 410,
> in
> publish_object
>     return publish_object(req,util.apply_fs_data(object, req.form, req=req))
> 
>   File "C:\Python23\Lib\site-packages\mod_python\util.py", line 439, in
> apply_fs_data
>     return object(**args)
> 
>   File "E:\http_server\timeslips\index.py", line 84, in index
>     rtn.append(ts_widget.make_employee_picker())
> 
>   File "C:\Python23\lib\site-packages\ecptimeslips\ts_widget.py", line
> 128,
> in make_employee_picker
>     rs = win32com.client.Dispatch("ADODB.Recordset")
> 
>   File "C:\Python23\Lib\site-packages\win32com\client\__init__.py", line
> 95,
> in Dispatch
>     dispatch, userName =
> dynamic._GetGoodDispatchAndUserName(dispatch,userName,clsctx)
> 
>   File "C:\Python23\Lib\site-packages\win32com\client\dynamic.py", line
> 91,
> in _GetGoodDispatchAndUserName
>     return (_GetGoodDispatch(IDispatch, clsctx), userName)
> 
>   File "C:\Python23\Lib\site-packages\win32com\client\dynamic.py", line
> 79,
> in _GetGoodDispatch
>     IDispatch = pythoncom.CoCreateInstance(IDispatch, None, clsctx,
> pythoncom.IID_IDispatch)
> 
> com_error: (-2147221008, 'CoInitialize has not been called.', None, None)
> 
> 
> Even more strangely, with IE it will work for a bit and then die (but
> only for one user), with Firefox it never works, and with Mozilla it
> is in the middle -- maybe one page and then an error.
> 
> ?
> 
> Thanks,
> 
> -d
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From max.luebbe at gmail.com  Thu Jun 29 18:53:35 2006
From: max.luebbe at gmail.com (Max Luebbe)
Date: Thu Jun 29 18:53:37 2006
Subject: [mod_python] Problem with Mod Python Appending HTML
In-Reply-To: <1151533832.16981@dscpl.user.openhosting.com>
References: <1151533832.16981@dscpl.user.openhosting.com>
Message-ID: <1151621615.22773.8.camel@localhost>

I think I understand what you are talking about but still can't get what
I'm looking for to work. When I use apache.DONE instead of apache.OK, no
further html is generated, and when I submit the form created by the
displayAccountOptions function, it redisplays the same page, just
without any css to make it look presentable. This is also not
acceptable.

This is an authenhandler
Here's a cut version of the code:

def authenhandler(req):
	'''Point of entry for this script.'''

	# Get Authentication information from the user
	password = req.get_basic_auth_pw()
	user = req.user

	# Check user info against the database
	db = anydbm.open(accountsDBPath, 'r')
	if not db.has_key(user):
		return apache.HTTP_UNAUTHORIZED
	else:
		record = db[user]
		# Decode entry
		initRecord = RECORD_SIZE * ['0']
		data = eval(db.setdefault(user, initRecord)) 
		# Check Password
		if not password == data[PASSWORD_HASH]:
			db.close()
			return apache.HTTP_UNAUTHORIZED

		# User is authorized!
		record = {}
		record['loginName'] = user
		record['firstName'] = data[FIRST_NAME]
		record['lastName'] = data[LAST_NAME]
		record['forwardingAddress'] = data[FORWARDING_ADDRESS]

		db.close()
		displayAccountOptions(req,user,record)
		return apache.OK

displayAccountOptions displays an html form that posts to another
function called commitChanges, that displays additional html.

The html produced by commitChanges is getting appended to the html
generated by displayAccountOptions, which is what not what I want.

Does this clarify things?

Would I be better served by just implementing my own password system for
accessing my database (using password fields in a form) instead of using
the authentication methods? 

On Wed, 2006-06-28 at 18:30 -0400, Graham Dumpleton wrote:
> Max Luebbe wrote ..
> > I am having problems with my mod_python scripts appending HTML together,
> > when having req.write() create a new page is what I am after.
> > 
> > I have an authentication handler for a blank html page that queries a
> > database for a user/pass, and then generates HTML based off of who
> > logged in.
> 
> When you say you have a "authentication handler", do you mean that it
> is triggered by PythonAuthenHandler directive. If it is and you are returning
> HTML from it and it represents the complete response for the request,
> you must return apache.DONE and not apache.OK. If you do not return
> apache.DONE, the content handler will still be executed and thus any
> HTML that the content handler itself generates will be appended to the
> result.
> 
> The only other time you would likely see HTML from two places being
> concatenated together, is when you are generating HTML but then returning
> an error status such as apache.HTTP_UNAUTHORIZED. In other words, 
> you were wanting to generate a custom error response page. If you simply
> return apache.HTTP_UNAUTHORIZED in that situation, then Apache will
> still go on to generate an error document page which gets appended to
> your output. In that situation you should instead use:
> 
>   req.status = apache.HTTP_UNAUTHORIZED
>   # generate HTML
>   return apache.OK
> 
> If this is a handler other than PythonHandler, again, you should be
> returning apache.DONE and not apache.OK.
> 
> I would suggest that you post what your Apache configuration directives
> are so it is clear what handlers are being executed and in what phases.
> 
> Show a cut done version of what your handlers are doing would also
> be helpful.
> 
> Graham
> 
> > The HTML generated is a form, and the user information is used to
> > populate the default values. When the user submits the form, and my
> > formHandler is called, the HTML it generates is appended to the current
> > page, instead of starting a new one. I have <html> and </html> tags at
> > the appropriate places to mark where documents are starting and
> > stopping.
> > 
> > I did not have this problem on any of the other pages/scripts I have
> > written, and I think that adding authentication into the mix is the
> > variable in the equation.
> > 
> > What I am after is the following sequence:
> > (1) user login 
> > (2) new page w/form with default fields grabbed from db (generated html)
> > (3) another new page w/confirmation info (values and corrections from
> > form) (generated html)
> > 
> > Any suggestions?
> > I would greatly appreciate any help I could get.
> > 
> > -- 
> > Max Luebbe <max.luebbe@gmail.com>
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Max Luebbe <max.luebbe@gmail.com>

From grahamd at dscpl.com.au  Thu Jun 29 19:24:46 2006
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Jun 29 19:24:50 2006
Subject: [mod_python] Problem with Mod Python Appending HTML
Message-ID: <1151623485.18608@dscpl.user.openhosting.com>

Max Luebbe wrote ..
> I think I understand what you are talking about but still can't get what
> I'm looking for to work. When I use apache.DONE instead of apache.OK, no
> further html is generated, and when I submit the form created by the
> displayAccountOptions function, it redisplays the same page, just
> without any css to make it look presentable. This is also not
> acceptable.
> 
> This is an authenhandler
> Here's a cut version of the code:
> 
> def authenhandler(req):
> 	'''Point of entry for this script.'''
> 
> 	# Get Authentication information from the user
> 	password = req.get_basic_auth_pw()
> 	user = req.user
> 
> 	# Check user info against the database
> 	db = anydbm.open(accountsDBPath, 'r')
> 	if not db.has_key(user):
> 		return apache.HTTP_UNAUTHORIZED
> 	else:
> 		record = db[user]
> 		# Decode entry
> 		initRecord = RECORD_SIZE * ['0']
> 		data = eval(db.setdefault(user, initRecord)) 
> 		# Check Password
> 		if not password == data[PASSWORD_HASH]:
> 			db.close()
> 			return apache.HTTP_UNAUTHORIZED
> 
> 		# User is authorized!
> 		record = {}
> 		record['loginName'] = user
> 		record['firstName'] = data[FIRST_NAME]
> 		record['lastName'] = data[LAST_NAME]
> 		record['forwardingAddress'] = data[FORWARDING_ADDRESS]
> 
> 		db.close()
> 		displayAccountOptions(req,user,record)
> 		return apache.OK
> 
> displayAccountOptions displays an html form that posts to another
> function called commitChanges, that displays additional html.
> 
> The html produced by commitChanges is getting appended to the html
> generated by displayAccountOptions, which is what not what I want.
> 
> Does this clarify things?

Not entirely.

> Would I be better served by just implementing my own password system for
> accessing my database (using password fields in a form) instead of using
> the authentication methods? 

First off, use of basic authentication is not intrinsically linked with
authenhandler in the sense that form/session based authentication
mechanisms can still use an authenhandler, although having not
yet available mod_python 3.3 helps. :-)

That said, my main comment is that when using basic authentication
as you are, one would not generally be generating a HTML page from the
authenhandler. Instead the authenhandler would simply be verifying
the user has appropriate access privileges and then the content handler
for whatever URL was requested would be executed to deliver up the
actual response. Thus I don't understand what you are trying to do by
way of highjacking the normal process by which URLs match to handlers
in order to produce some special account options page when the
user credentials are accepted.

If what you are trying to do is recognise the first time a user requests
access for a session that they be sent to a special page, then what
would normally be done is to issue a redirect response to send them
to that other page. That other page would then perhaps provide a
link to allow them then to get back to the page they wanted. To do
all this though would required use of sessions for it to work properly
as you need to retain some state so you know when first access occurs
and what page user should be sent back to after reviewing their
account options page.

Thus I think the general approach you are using is possibly the
wrong way of going about it anyway. As to you actual problem
of concatenated HTML, can tell from the above and really need to
see what displayAccountOptions() and commitChanges() are doing.

Graham

> On Wed, 2006-06-28 at 18:30 -0400, Graham Dumpleton wrote:
> > Max Luebbe wrote ..
> > > I am having problems with my mod_python scripts appending HTML together,
> > > when having req.write() create a new page is what I am after.
> > > 
> > > I have an authentication handler for a blank html page that queries
> a
> > > database for a user/pass, and then generates HTML based off of who
> > > logged in.
> > 
> > When you say you have a "authentication handler", do you mean that it
> > is triggered by PythonAuthenHandler directive. If it is and you are returning
> > HTML from it and it represents the complete response for the request,
> > you must return apache.DONE and not apache.OK. If you do not return
> > apache.DONE, the content handler will still be executed and thus any
> > HTML that the content handler itself generates will be appended to the
> > result.
> > 
> > The only other time you would likely see HTML from two places being
> > concatenated together, is when you are generating HTML but then returning
> > an error status such as apache.HTTP_UNAUTHORIZED. In other words, 
> > you were wanting to generate a custom error response page. If you simply
> > return apache.HTTP_UNAUTHORIZED in that situation, then Apache will
> > still go on to generate an error document page which gets appended to
> > your output. In that situation you should instead use:
> > 
> >   req.status = apache.HTTP_UNAUTHORIZED
> >   # generate HTML
> >   return apache.OK
> > 
> > If this is a handler other than PythonHandler, again, you should be
> > returning apache.DONE and not apache.OK.
> > 
> > I would suggest that you post what your Apache configuration directives
> > are so it is clear what handlers are being executed and in what phases.
> > 
> > Show a cut done version of what your handlers are doing would also
> > be helpful.
> > 
> > Graham
> > 
> > > The HTML generated is a form, and the user information is used to
> > > populate the default values. When the user submits the form, and my
> > > formHandler is called, the HTML it generates is appended to the current
> > > page, instead of starting a new one. I have <html> and </html> tags
> at
> > > the appropriate places to mark where documents are starting and
> > > stopping.
> > > 
> > > I did not have this problem on any of the other pages/scripts I have
> > > written, and I think that adding authentication into the mix is the
> > > variable in the equation.
> > > 
> > > What I am after is the following sequence:
> > > (1) user login 
> > > (2) new page w/form with default fields grabbed from db (generated
> html)
> > > (3) another new page w/confirmation info (values and corrections from
> > > form) (generated html)
> > > 
> > > Any suggestions?
> > > I would greatly appreciate any help I could get.
> > > 
> > > -- 
> > > Max Luebbe <max.luebbe@gmail.com>
> > > 
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> -- 
> Max Luebbe <max.luebbe@gmail.com>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From jpg at jgassociates.ca  Thu Jun 29 19:39:53 2006
From: jpg at jgassociates.ca (Jim Gallacher)
Date: Thu Jun 29 19:37:56 2006
Subject: [mod_python] Problem with Mod Python Appending HTML
In-Reply-To: <1151621615.22773.8.camel@localhost>
References: <1151533832.16981@dscpl.user.openhosting.com>
	<1151621615.22773.8.camel@localhost>
Message-ID: <44A464C9.70204@jgassociates.ca>

Max Luebbe wrote:
> I think I understand what you are talking about but still can't get what
> I'm looking for to work. When I use apache.DONE instead of apache.OK, no
> further html is generated,

But isn't that precisely the problem you are trying to solve?

> and when I submit the form created by the
> displayAccountOptions function, it redisplays the same page, just
> without any css to make it look presentable. This is also not
> acceptable.

My guess is you are using relative urls for your form action and
stylesheet. Check your apache access log and check what is actually
being requested. My guess is you'll see something like
GET /some/directory/yourscript.py/commitChanges/yourstylesheet.css
but what you really want is /some/directory/yourstylesheet.css.


> This is an authenhandler
> Here's a cut version of the code:
> 
> def authenhandler(req):
> 	'''Point of entry for this script.'''
> 
> 	# Get Authentication information from the user
> 	password = req.get_basic_auth_pw()
> 	user = req.user
> 
> 	# Check user info against the database
> 	db = anydbm.open(accountsDBPath, 'r')
> 	if not db.has_key(user):
> 		return apache.HTTP_UNAUTHORIZED
> 	else:
> 		record = db[user]
> 		# Decode entry
> 		initRecord = RECORD_SIZE * ['0']
> 		data = eval(db.setdefault(user, initRecord)) 
> 		# Check Password
> 		if not password == data[PASSWORD_HASH]:
> 			db.close()
> 			return apache.HTTP_UNAUTHORIZED
> 
> 		# User is authorized!
> 		record = {}
> 		record['loginName'] = user
> 		record['firstName'] = data[FIRST_NAME]
> 		record['lastName'] = data[LAST_NAME]
> 		record['forwardingAddress'] = data[FORWARDING_ADDRESS]
> 
> 		db.close()
> 		displayAccountOptions(req,user,record)
> 		return apache.OK
> 
> displayAccountOptions displays an html form that posts to another
> function called commitChanges, that displays additional html.
> 
> The html produced by commitChanges is getting appended to the html
> generated by displayAccountOptions, which is what not what I want.
> 
> Does this clarify things?

Not really. ;)

> Would I be better served by just implementing my own password system for
> accessing my database (using password fields in a form) instead of using
> the authentication methods? 

I'd leave your auth code in the authenhandler, but move
displayAccountOptions into your request handler as I don't see that it
is actually required for authentication.

    req.record = {}
    req.record['loginName'] = user
    req.record['firstName'] = data[FIRST_NAME]
    req.record['lastName'] = data[LAST_NAME]
    req.record['forwardingAddress'] = data[FORWARDING_ADDRESS]

That way the db record is available for the request handler. I don't see
what handler you are using, but if it's publisher you could then have
separate methods for displayAccountOptions and commitChanges.

Jim

> On Wed, 2006-06-28 at 18:30 -0400, Graham Dumpleton wrote:
>> Max Luebbe wrote ..
>>> I am having problems with my mod_python scripts appending HTML together,
>>> when having req.write() create a new page is what I am after.
>>>
>>> I have an authentication handler for a blank html page that queries a
>>> database for a user/pass, and then generates HTML based off of who
>>> logged in.
>> When you say you have a "authentication handler", do you mean that it
>> is triggered by PythonAuthenHandler directive. If it is and you are returning
>> HTML from it and it represents the complete response for the request,
>> you must return apache.DONE and not apache.OK. If you do not return
>> apache.DONE, the content handler will still be executed and thus any
>> HTML that the content handler itself generates will be appended to the
>> result.
>>
>> The only other time you would likely see HTML from two places being
>> concatenated together, is when you are generating HTML but then returning
>> an error status such as apache.HTTP_UNAUTHORIZED. In other words, 
>> you were wanting to generate a custom error response page. If you simply
>> return apache.HTTP_UNAUTHORIZED in that situation, then Apache will
>> still go on to generate an error document page which gets appended to
>> your output. In that situation you should instead use:
>>
>>   req.status = apache.HTTP_UNAUTHORIZED
>>   # generate HTML
>>   return apache.OK
>>
>> If this is a handler other than PythonHandler, again, you should be
>> returning apache.DONE and not apache.OK.
>>
>> I would suggest that you post what your Apache configuration directives
>> are so it is clear what handlers are being executed and in what phases.
>>
>> Show a cut done version of what your handlers are doing would also
>> be helpful.
>>
>> Graham
>>
>>> The HTML generated is a form, and the user information is used to
>>> populate the default values. When the user submits the form, and my
>>> formHandler is called, the HTML it generates is appended to the current
>>> page, instead of starting a new one. I have <html> and </html> tags at
>>> the appropriate places to mark where documents are starting and
>>> stopping.
>>>
>>> I did not have this problem on any of the other pages/scripts I have
>>> written, and I think that adding authentication into the mix is the
>>> variable in the equation.
>>>
>>> What I am after is the following sequence:
>>> (1) user login 
>>> (2) new page w/form with default fields grabbed from db (generated html)
>>> (3) another new page w/confirmation info (values and corrections from
>>> form) (generated html)
>>>
>>> Any suggestions?
>>> I would greatly appreciate any help I could get.
>>>
>>> -- 
>>> Max Luebbe <max.luebbe@gmail.com>
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python

From nlv11281 at natlab.research.philips.com  Fri Jun 30 07:56:25 2006
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Fri Jun 30 08:01:17 2006
Subject: [Fwd: Re: [mod_python] Re: Mike's psp upload]
Message-ID: <44A51169.4040009@natlab.research.philips.com>

Well, the HTTP RFC says that the server is free to close the connection at any time. The "lost"
request in the pipeline is the client's responsibility then - the keep-alive is only supported if
the server sent a response to the request but didn't include a "Connection: Close" header in the
response - and even then, the server may still close the connection.

IE since version 4.0 supports this just fine. Only netscape (up to 6.0) used to fail on this
particular test.


Mike Looijmans
Philips Natlab / Topic Automation


Graham Dumpleton wrote:
> 
> On 14/06/2006, at 11:01 PM, Jim Gallacher wrote:
> 
>> Apache gives your handler a pointer to the incoming file stream and  
>> it then becomes the responsibility of the handler to deal with it.  If 
>> no handlers consume the stream it gets discarded (I assume).
> 
> 
> Yes discarded, although that can entail still reading it from the  
> client socket
> because of fact that HTTP 1.1 allows pipelining of requests and thus  there
> may be a request following the data which has to be handled and Apache
> has to be able to get to that. Thus for large content, Apache may  still 
> have
> to read it even if not used and therefore resources (time) will be  
> consumed in
> doing so.
> 
> Graham
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


-- 
Mike Looijmans
Philips Natlab / Topic Automation

From tommys at eden.rutgers.edu  Fri Jun 30 14:44:28 2006
From: tommys at eden.rutgers.edu (Thomas J. Schirripa)
Date: Fri Jun 30 14:44:33 2006
Subject: [mod_python] File upload - AttributeError using the FieldStorage
	object
Message-ID: <14070869.149091151693067831.JavaMail.tomcat@silhouette>

Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.

I am new to mod_python and even python itself, but I am trying to upload a file and it's not working. Right now I wanted to write a practice program that just dumps the text in the file to a webpage, but eventually I would like to manipulate the data in the file someway and output something different. I am certain my html is fine... I have:
<form action='upload.py' method='post' enctype='multipart/form-data'>
	<input type='file' name='input_file'><br><br>
	<input type='submit'>
</form>

Originally I tried using the publisher handler, so my "action" was pointing to a different file and method that handles the request. To access the FieldStorage object I used req.form. But to correspond to the html above, I made "upload" my PythonHandler and created my own FieldStorage object as follows:

def handler(req):
    fields = util.FieldStorage(req)
    f = fields['input_file']

>From my understanding, the variable "f" should contain a Field object, NOT a FieldString as I am getting. So when I say f.file or f.filename, an AttributeError is raised because (of course) a FieldString does not have the attributes file or filename.

I looked around a lot online, but this seems to be an old problem with earlier versions of mod_python, but I am running 3.2.8. Could there still be a problem witht the __getitem__ method or the FieldStorage not being able to recognize the mime type (although the documentation states this problem has been fixed).

Help would be much appreciated, so thanks in advance

From rsynnott at gmail.com  Fri Jun 30 15:33:30 2006
From: rsynnott at gmail.com (Robert Synnott)
Date: Fri Jun 30 15:33:34 2006
Subject: [mod_python] File upload - AttributeError using the FieldStorage
	object
In-Reply-To: <14070869.149091151693067831.JavaMail.tomcat@silhouette>
References: <14070869.149091151693067831.JavaMail.tomcat@silhouette>
Message-ID: <24f203480606301233y4d0de4d7haf6a30bad98f80bf@mail.gmail.com>

On 6/30/06, Thomas J. Schirripa <tommys@eden.rutgers.edu> wrote:
> Before stating my problem, let me say that I am running apache version 2.0.52, mod_python 3.2.8, python 2.3, all on Redhat Enterprise Linux WS release 4.
>
> I am new to mod_python and even python itself, but I am trying to upload a file and it's not working. Right now I wanted to write a practice program that just dumps the text in the file to a webpage, but eventually I would like to manipulate the data in the file someway and output something different. I am certain my html is fine... I have:
> <form action='upload.py' method='post' enctype='multipart/form-data'>
>         <input type='file' name='input_file'><br><br>
>         <input type='submit'>
> </form>
>
> Originally I tried using the publisher handler, so my "action" was pointing to a different file and method that handles the request. To access the FieldStorage object I used req.form. But to correspond to the html above, I made "upload" my PythonHandler and created my own FieldStorage object as follows:
>
> def handler(req):
>     fields = util.FieldStorage(req)
>     f = fields['input_file']
>
> >From my understanding, the variable "f" should contain a Field object, NOT a FieldString as I am getting. So when I say f.file or f.filename, an AttributeError is raised because (of course) a FieldString does not have the attributes file or filename.
>
> I looked around a lot online, but this seems to be an old problem with earlier versions of mod_python, but I am running 3.2.8. Could there still be a problem witht the __getitem__ method or the FieldStorage not being able to recognize the mime type (although the documentation states this problem has been fixed).
>
> Help would be much appreciated, so thanks in advance
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

f.data, I think.
Rob
