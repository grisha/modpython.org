From cblunck2000 at yahoo.com  Thu May  1 20:23:12 2003
From: cblunck2000 at yahoo.com (Christopher Blunck)
Date: Fri Jan  9 21:47:21 2004
Subject: [mod_python] restricted execution mode and PyXML
Message-ID: <20030502032312.16834.qmail@web10604.mail.yahoo.com>

Hi all-

Am working with ZSI under mod_python.  The problem I'm
running into is that ZSI imports PyXML, which uses
dynamic module importing to load encoders for various
xml codecs (UTF-8 being the most common encoder). 
When the PyXML code tries to do the dynamic module
import, the Python interpretter prevents it with an
error something like "cannot dynamically import module
during restricted execution mode".  Forgive me for not
quoting the exact error, as I'm currently upgrading
the OS on that box right now to RH 9.

This occurs with the latest mod_python (3.0.3) with
PyXML 0.7.1 and httpd 2.0.40.

Has anyone else had success in importing PyXML modules
within code run by modpython?

Or, does anyone have any information they'd be willing
to share to help me out (e.g. "you might try and check
out XXX or YYY").  Anything would be useful to me at
this point.




-c

__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From max.zhang at converzal.com  Fri May  2 19:28:36 2003
From: max.zhang at converzal.com (max.zhang)
Date: Fri Jan  9 21:47:21 2004
Subject: [mod_python] restricted execution mode and PyXML
References: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <003a01c3109d$f8fc9ac0$1700a8c0@converzamax>

I met the same problem while calling raw_data.encode('utf-8','replace') 


System :
            RH 8
            mod_python 3.0.3
            python2.2
            apache 2.0

----- Original Message ----- 
From: "Christopher Blunck" <cblunck2000@yahoo.com>
To: <mod_python@modpython.org>
Sent: Friday, May 02, 2003 11:23 AM
Subject: [mod_python] restricted execution mode and PyXML


> Hi all-
> 
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder). 
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
> 
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
> 
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
> 
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
> 
> 
> 
> 
> -c
> 
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
From vjb at vuit.com  Fri May  2 07:36:11 2003
From: vjb at vuit.com (Vincent J. Buonassisi)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>

hi,

i had the same problem w/ the same environment (rh 8, python 2.2.1, 
mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
problem was to install python 2.2.2.

cheers,

On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:

> Hi all-
>
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder).
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
>
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
>
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
>
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
>
>
>
>
> -c
>
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mpmlopes at clix.pt  Fri May  2 17:52:48 2003
From: mpmlopes at clix.pt (Marco Lopes)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] problem using apache.parse_qsl
Message-ID: <3EB2A260.7050702@clix.pt>

I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying 
to use apache.parse_qsl to parse que contents of the POST, but i'm 
getting this error message:

Mod_python error: "PythonHandler template"

Traceback (most recent call last):

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
320, in HandlerDispatch
     module = import_module(module_name, config)

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
499, in import_module
     module = imp.load_module(mname, f, p, d)

   File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
     parse_qsl = apache.parse_qsl

AttributeError: 'module' object has no attribute 'parse_qsl'

I looked trough the documentation and the didn't find any reference to 
the function beeing deprecated so i think i'm doing something wrong, the 
code i'm using and that is causing the error is:


from mod_python import apache
 

parse_qsl = apache.parse_qsl


Can anyone give me a clue of what am i doing wrong?

From grisha at modpython.org  Fri May  2 14:12:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] problem using apache.parse_qsl
In-Reply-To: <3EB2A260.7050702@clix.pt>
Message-ID: <20030502141049.O87074-100000@oldchief.reply.net>


http://www.modpython.org/live/current/doc-html/pyapi-util-funcs.html

from mod_python import util

parse_qsl = util.parse_qsl

:-)

On Fri, 2 May 2003, Marco Lopes wrote:

> I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying
> to use apache.parse_qsl to parse que contents of the POST, but i'm
> getting this error message:
>
> Mod_python error: "PythonHandler template"
>
> Traceback (most recent call last):
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 320, in HandlerDispatch
>      module = import_module(module_name, config)
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 499, in import_module
>      module = imp.load_module(mname, f, p, d)
>
>    File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
>      parse_qsl = apache.parse_qsl
>
> AttributeError: 'module' object has no attribute 'parse_qsl'
>
> I looked trough the documentation and the didn't find any reference to
> the function beeing deprecated so i think i'm doing something wrong, the
> code i'm using and that is causing the error is:
>
>
> from mod_python import apache
>
>
> parse_qsl = apache.parse_qsl
>
>
> Can anyone give me a clue of what am i doing wrong?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 14:36:19 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
Message-ID: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>

Hi,

I'm new to this list and apologize in advance if I've missed the obvious.
I've searched the archives and found a couple similar instances of my
problem but also think that recent changes should have fixed what I'm
seeing. Hence, this post.

I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
point I get:

Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"

Before installing, I updated the entire ports collection source so I should
be current in that regard. As far as I can tell from reading the port
Makefile in Apache2, threads are enabled. So I didn't modify anything, just
ran make, make install.

I remain confused about how to modify httpd.conf, in spite of the message at
the end of the make install of mod_python, which talks about setting
PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
of the error I'm seeing? Or is something else wrong?

Also, could someone show me a slightly more explicit (so to speak) snippet
of httpd.conf that correctly modifies the standard one placed by a ports
installation on FreeBSD? I just want the minimum mods to httpd.conf to
confirm functionality before proceeding to other setups.

Again, sorry if I'm missing the obvious. Anyone with the time to help, many
thanks in advance.

Steve Holmlund

From grisha at modpython.org  Sat May  3 22:40:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>
Message-ID: <20030503223914.T10690-100000@oldchief.reply.net>


You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"
>
> Before installing, I updated the entire ports collection source so I should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything, just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help, many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 22:36:29 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <20030503223914.T10690-100000@oldchief.reply.net>
Message-ID: <ACECLHIPFJLGGDMIIFBGMEJJCKAA.sholmlund@coastside.net>

Thank you! That worked.

I did see that message but my review of the Apache Makefile had me convinced
that the standard port for Apache had threads enabled. Sorry for my
ignorance. I should have tried that first. Not being a programmer, one of
the appeals of FreeBSD is the ports collection. I get in trouble when I have
to step beyond those bounds.

Appreciate the response.
Steve



-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Saturday, May 03, 2003 7:41 PM
To: Steve Holmlund
Cc: mod_python@modpython.org
Subject: Re: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue



You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"
>
> Before installing, I updated the entire ports collection source so I
should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything,
just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message
at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the
cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help,
many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From conrad at hep.caltech.edu  Sun May  4 00:47:59 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
References: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
Message-ID: <1052034479.4050.13.camel@Presario>

Hi

This didn't work for me: on Redhat 9 (which comes with Python 2.2.2) the
only way I could solve the problem was to pre-import the offending files
outside the handler function. E.g. in my case

# Added to avoid the error:
# 'RuntimeError: cannot unmarshal code objects in restricted execution mode'
# That means that other encodings will make the query fail!
mod = __import__('encodings.utf_8',globals(),locals(),'*')
mod = __import__('encodings.utf_16_be',globals(),locals(),'*')

which is a hack since it allows only these two encodings to be used.

If anybody has a better fix, please let me know!

Cheers

Conrad

On Fri, 2003-05-02 at 07:36, Vincent J. Buonassisi wrote:
> hi,
> 
> i had the same problem w/ the same environment (rh 8, python 2.2.1, 
> mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
> problem was to install python 2.2.2.
> 
> cheers,
> 
> On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:
> 
> > Hi all-
> >
> > Am working with ZSI under mod_python.  The problem I'm
> > running into is that ZSI imports PyXML, which uses
> > dynamic module importing to load encoders for various
> > xml codecs (UTF-8 being the most common encoder).
> > When the PyXML code tries to do the dynamic module
> > import, the Python interpretter prevents it with an
> > error something like "cannot dynamically import module
> > during restricted execution mode".  Forgive me for not
> > quoting the exact error, as I'm currently upgrading
> > the OS on that box right now to RH 9.
> >
> > This occurs with the latest mod_python (3.0.3) with
> > PyXML 0.7.1 and httpd 2.0.40.
> >
> > Has anyone else had success in importing PyXML modules
> > within code run by modpython?
> >
> > Or, does anyone have any information they'd be willing
> > to share to help me out (e.g. "you might try and check
> > out XXX or YYY").  Anything would be useful to me at
> > this point.
> >
> >
> >
> >
> > -c
> >
> > __________________________________
> > Do you Yahoo!?
> > The New Yahoo! Search - Faster. Easier. Bingo.
> > http://search.yahoo.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From conrad at hep.caltech.edu  Tue May  6 01:36:26 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
Message-ID: <1052210186.2757.57.camel@Presario>

Hi

Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
src/requestobject.c to allow mod_python programs to send files
efficiently using the available Apache machinery for both unencrypted
and SSL/TLS connections.

What does it do?
----------------

Implements a file_write() method for the Request object. It does NOT
write headers, only the file.

E.g.

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while 
  req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

The first argument is the filename, the second is the offset to start
reading in the file, the third argument is the number of bytes to write.
The last two arguments are optional.

The return value is the number of bytes written, which may be less than
the total number of bytes in the file. See the manpage of sendfile for
more details.

The patch is NOT OS- or architecture dependent, it merely lets Apache
call its output handler, in the same way that req.write() does for
string data.

If there is interest, the patch can developed further to also set the
content-type, send headers and iterate until the whole file is sent.

Cheers

Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From conrad at hep.caltech.edu  Tue May  6 01:49:51 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210186.2757.57.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
Message-ID: <1052210991.2757.61.camel@Presario>

Ugh, pressed the send button before finishing the code snippet:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

Conrad

On Tue, 2003-05-06 at 01:36, Conrad Steenberg wrote:
> Hi
> 
> Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
> src/requestobject.c to allow mod_python programs to send files
> efficiently using the available Apache machinery for both unencrypted
> and SSL/TLS connections.
> 
> What does it do?
> ----------------
> 
> Implements a file_write() method for the Request object. It does NOT
> write headers, only the file.
> 
> E.g.
> 
> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while 
>   req.write_file("/var/www/html/index.html",0,-1)
>   return apache.OK
> 
> The first argument is the filename, the second is the offset to start
> reading in the file, the third argument is the number of bytes to write.
> The last two arguments are optional.
> 
> The return value is the number of bytes written, which may be less than
> the total number of bytes in the file. See the manpage of sendfile for
> more details.
> 
> The patch is NOT OS- or architecture dependent, it merely lets Apache
> call its output handler, in the same way that req.write() does for
> string data.
> 
> If there is interest, the patch can developed further to also set the
> content-type, send headers and iterate until the whole file is sent.
> 
> Cheers
> 
> Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From gdamjan at mail.net.mk  Tue May  6 11:51:53 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210991.2757.61.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
	<1052210991.2757.61.camel@Presario>
Message-ID: <20030506095153.GA12597@legolas.on.net.mk>

> Ugh, pressed the send button before finishing the code snippet:

too fast on the keyboard.

> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while sent>=0:
>     sent = req.write_file("/var/www/html/index.html",0,-1)
                                                     ^^^^^

I guess it should be "sent" there too:

    sent = req.write_file("/var/www/html/index.html", sent, -1)


-- 
Damjan Georgievski
jabberid: damjan@bagra.net.mk
From grisha at ispol.com  Wed May  7 13:46:04 2003
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] test - please ignore
Message-ID: <20030507134354.V62572-100000@oldchief.reply.net>


this is a test (the list moved to a different server) - please ignore

grisha


From kemu at sdf-eu.org  Sat May 10 16:33:34 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] won't run 
Message-ID: <004301c31701$2349a160$be00a8c0@kemu3jve3zxvcw>

I installed mod_python the test example worked. 
Now I would like to learn to use it.
When I add this to my apache config file:
   1077 <Directory /home/linhost/control>
   1078         SetHandler python-program
   1079         PythonHandler mod_python.publisher
   1080 </Directory>

and in /home/linhost/control I place a file test.py with contents:
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what


I get this http://62.221.205.240/control/hello.py/say
Please help me out Regards Jonas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/de621b90/attachment.htm
From kemu at sdf-eu.org  Sat May 10 17:52:20 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] upload file script
Message-ID: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>

I'm looking on how to upload a file in mod_python are there any examples ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/5fcf56e6/attachment.htm
From mike_verdone at shaw.ca  Sat May 10 15:51:05 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] upload file script
In-Reply-To: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
Message-ID: <200305101551.05815.mike_verdone@shaw.ca>

Here you go!

Files sent to an Apache server via an HTTP request appear as file-like objects 
to mod_python. They support the read() method to get their contents. Assuming 
you're running the publisher handler, this function can receive the contents 
of a file sent by a user in an HTTP request (where the file's field is named 
"file").

  def getFile(req, file=None):
      if file is None:   # There was no file sent.
          return "Error! There was no file!"
      if type(file) is str:   # File was sent as a regular field, which is 
bad.
          return "Error! File was a string!"
      fileData = file.read()    # Get the file data into a Python variable.
      # ... process file data ...
      return "Ok, file received."

The HTML that calls this function is as follows. Not the enctype attribute of 
the form tag.

  <form action="getFile" method="post" enctype="multipart/form-data">
  <input type="file" name="file" />
  <input type="submit" name="submit" value="Submit" />
  </form>



Could someone who knows the FAQ password please add this, if it's useful. 
Thanks.

Mike.


On May 10, 2003 09:52 am, Jonas Geiregat wrote:
> I'm looking on how to upload a file in mod_python are there any examples ?

From vmilitaru at sympatico.ca  Mon May 12 23:53:03 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] Threads...
Message-ID: <3EC06C1F.4070602@sympatico.ca>

Greetings,
since python adaptors to the 3 RDBMS I've tried so far all require
python "with" thread support, I've recompiled python "without-threads"
specifically for mod_python (but without "installing" it).

Then

./configure
--with-apache=/q/apache_1.3.27
--with-python=/q/Python-2.2.2
--with-apxs=/usr/local/apache/bin/apxs

compiles OK, installs OK.
But then apache chokes on new mod_python with:

.../apachectl start

Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
Cannot load /usr/local/apache/libexec/mod_python.so into server:
/usr/local/apache/libexec/mod_python.so: undefined symbol: openpty

Line 210 of httpd.conf is simply the 'LoadModule' directive for
mod_python.so


So, provided this error is related to the thread support issue (from my
corner of the globe it sure smell like it), how is the list juggling
with different versions of python (some apps depending on python "with"
thread support, some depending on python "without" ... and I needing
"both")? Or is there a simpler solution I simply missed while going
through the docs?

Cheers,
Vio



From aturner at neteconomist.com  Tue May 13 09:02:25 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] mod_python slowness
Message-ID: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>


I have a scripts that takes an XML document, munges it and turns it into
HTML to be outputed to the user.  It's setup so that it will run either as
a request handler in mod_python or as a stand alone application.  I am
having extreme problem with the script being slow when running in
mod_python.  I have done some timings, and it is 10-20 times slower
that it is standalone.  The program makes calls to a Postgresql database
using the stock pg module.  The system is running mod_python 3.0.3
w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.

I can't seem to use the profiler to narrow down the problem at all because 
I can't seem to figure out how to execute the profiler on a function that 
takes arguments, and all the functions take at least the HTTP request 
object as an argument, which makes it hard to use the python profiler.  
Even so the script runs fine stand alone.  The one page I am looking at 
goes from 2.2 seconds to 23 seconds.

Has anyone had any similar issues?

Alex Turner
NetEconomist

From grisha at modpython.org  Tue May 13 10:24:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC06C1F.4070602@sympatico.ca>
Message-ID: <20030513102310.H56353-100000@oldchief.reply.net>


IIRC this has to do with -lutil missing from the compile command on some
systems - try hacking the Makefile and adding it manually.

Grisha

On Mon, 12 May 2003, Vio wrote:

> Greetings,
> since python adaptors to the 3 RDBMS I've tried so far all require
> python "with" thread support, I've recompiled python "without-threads"
> specifically for mod_python (but without "installing" it).
>
> Then
>
> ./configure
> --with-apache=/q/apache_1.3.27
> --with-python=/q/Python-2.2.2
> --with-apxs=/usr/local/apache/bin/apxs
>
> compiles OK, installs OK.
> But then apache chokes on new mod_python with:
>
> .../apachectl start
>
> Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
> Cannot load /usr/local/apache/libexec/mod_python.so into server:
> /usr/local/apache/libexec/mod_python.so: undefined symbol: openpty
>
> Line 210 of httpd.conf is simply the 'LoadModule' directive for
> mod_python.so
>
>
> So, provided this error is related to the thread support issue (from my
> corner of the globe it sure smell like it), how is the list juggling
> with different versions of python (some apps depending on python "with"
> thread support, some depending on python "without" ... and I needing
> "both")? Or is there a simpler solution I simply missed while going
> through the docs?
>
> Cheers,
> Vio
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grisha at modpython.org  Tue May 13 10:31:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513102833.C56353-100000@oldchief.reply.net>


I'd first make sure it is not a DNS problem - probably the easiest thing
is to run tcpdump on port 53 to what DNS activity takes place when a
request comes in. Make sure that apache does not resolve host names, also
watch out for postgres using tcpwrappers to resolve host names for
incoming connections.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I have a scripts that takes an XML document, munges it and turns it into
> HTML to be outputed to the user.  It's setup so that it will run either as
> a request handler in mod_python or as a stand alone application.  I am
> having extreme problem with the script being slow when running in
> mod_python.  I have done some timings, and it is 10-20 times slower
> that it is standalone.  The program makes calls to a Postgresql database
> using the stock pg module.  The system is running mod_python 3.0.3
> w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
>
> I can't seem to use the profiler to narrow down the problem at all because
> I can't seem to figure out how to execute the profiler on a function that
> takes arguments, and all the functions take at least the HTTP request
> object as an argument, which makes it hard to use the python profiler.
> Even so the script runs fine stand alone.  The one page I am looking at
> goes from 2.2 seconds to 23 seconds.
>
> Has anyone had any similar issues?
>
> Alex Turner
> NetEconomist
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From rpinder at usc.edu  Tue May 13 08:29:19 2003
From: rpinder at usc.edu (rpinder)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <200305101551.05815.mike_verdone@shaw.ca>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
 <200305101551.05815.mike_verdone@shaw.ca>
Message-ID: <3EC10F4F.4000300@usc.edu>

Hi all,

I'm trying to plan the most efficient way to implement an apache 
project.  And I have a really basic question about how mod_python (or 
any apache 'mod 'kind of framework, probably) works.  I think i've read 
that a major advantage of mod_python is the fact you dont have to 
re'load the interpreter for each instance... but i'm wondering if this 
also equates to having a global, accessible, code space that python is 
operating in.... 

I'm following the examples in the documentation, and am using the 
'handler' example, and have a python script with functions defined that 
do the work  (there is a database connection happening with an Interbase 
server). 

What I"m trying to do is to have a dictionary created and available to 
all users - without having to re'create the dictionary for each apache 
visitor.  I have a reason to NOT want to accomplish this using a 
database table - even though the dictionary is quite large, and requires 
a lot of overhead each time it's created.

So my feeble question involves whether or not theres a way to do 
something like this with modpython, or is it impossible since each 
instance of the python script gets called in its entirety each time a 
request comes in from Apache.

Thanks for any thoughts

Rich

From mod_python at mikebell.org  Tue May 13 09:39:22 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <20030513163921.GT19515@netvista.mikebell.org>

On Tue, May 13, 2003 at 08:29:19AM -0700, rpinder wrote:
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.

Each seperate apache process has its own interpreter, so you might have 10
of them at once. So it's great for things like database connection pooling
(10 database connections is not much different from one, certainly a lot
better than creating a new one for each request) but it's not a single
globally consistant namespace. Unless you use apache2, a thread mpm,
and only one process. But that's not recommended. Maybe you could use
something like berkeley db to back your dictionary?
From francoislepoutre at compuserve.com  Tue May 13 18:13:40 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] _really_ Basic concept question
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx>

Hi

> I'm trying to plan the most efficient way to implement an apache
> project.  And I have a really basic question about how mod_python (or
> any apache 'mod 'kind of framework, probably) works.  I think i've read
> that a major advantage of mod_python is the fact you dont have to
> re'load the interpreter for each instance... but i'm wondering if this
> also equates to having a global, accessible, code space that python is
> operating in....

Nearly so. Depending on your platform.

on win32:
    You will one workspace on win32 with shared code space
    (beware of that apache/win32 is threaded you will have to
    organize some locking when updating the python data structures)
on linux:
    not one python interpreter but a series of them depending on the
    context (apache setup and stress level)

> I'm following the examples in the documentation, and am using the
> 'handler' example, and have a python script with functions defined that
> do the work  (there is a database connection happening with an Interbase
> server).
>
> What I"m trying to do is to have a dictionary created and available to
> all users - without having to re'create the dictionary for each apache
> visitor.  I have a reason to NOT want to accomplish this using a
> database table - even though the dictionary is quite large, and requires
> a lot of overhead each time it's created.

Sure, you can build your code in such way that your apache mod_python
handler downloads what is necessary at loadtime and keep that stuff
(dictionnaries and the db handler ) buffered within the python "memory
space".

Only once in a while the python interperter be restarted (depending on
apache
setup), your memory workspace will be recreated from the db
(possibly a couple of seconds).

Perf will be excellent in this situation. At later calls to your stuff
apache
will be "python-driven". That's what we do.

We rely heavily on highly secure but time-consuming db-based datastructure.

The possibily to smartly buffer your db stuff within python was our reason
to
switch  into python/mod_python (from iis/isapi).

Welcome onboard :)

Fran?ois

PS
If you wish to organize session-handling this way, it is doable as well but
it
will be a bit more complex as you will need to resync your set of apache
instances (each one handling its own session pool).


From aturner at neteconomist.com  Tue May 13 12:49:18 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
Message-ID: <Pine.LNX.4.44.0305131247280.10997-100000@mx1.neteconomist.com>


I would assume that because each request is handled by a different apache
fork the answer would be that you can't just 'share' variable between
instances because apache doesn't share memory (other than shmem).  This is
also assuming you have apache configured to fork not to thread.  I don't 
know if Python has an interface to shmem, but it probably does, and I 
would imagine you could set it up using that.

Of course, I'm new at mod_python and therefore this is my best guest!

Alex Turner
NetEconomist

On Tue, 13 May 2003, rpinder wrote:

> Hi all,
> 
> I'm trying to plan the most efficient way to implement an apache 
> project.  And I have a really basic question about how mod_python (or 
> any apache 'mod 'kind of framework, probably) works.  I think i've read 
> that a major advantage of mod_python is the fact you dont have to 
> re'load the interpreter for each instance... but i'm wondering if this 
> also equates to having a global, accessible, code space that python is 
> operating in.... 
> 
> I'm following the examples in the documentation, and am using the 
> 'handler' example, and have a python script with functions defined that 
> do the work  (there is a database connection happening with an Interbase 
> server). 
> 
> What I"m trying to do is to have a dictionary created and available to 
> all users - without having to re'create the dictionary for each apache 
> visitor.  I have a reason to NOT want to accomplish this using a 
> database table - even though the dictionary is quite large, and requires 
> a lot of overhead each time it's created.
> 
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.
> 
> Thanks for any thoughts
> 
> Rich
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From aturner at neteconomist.com  Tue May 13 12:51:54 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513102833.C56353-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>


I'm pretty sure this is not a DNS problem.  I can break down each loop
that calls the database, and it shows 0.7 seconds per row returning
instead of like 0.03 seconds.  The dns servers are all configured
correctly for both forward and reverse lookups, and I do not have the same
problems in PHP (other the fact that PHP is crap compared to python - but
it's not this slow).

Alex Turner
NetEconomist

On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> I'd first make sure it is not a DNS problem - probably the easiest thing
> is to run tcpdump on port 53 to what DNS activity takes place when a
> request comes in. Make sure that apache does not resolve host names, also
> watch out for postgres using tcpwrappers to resolve host names for
> incoming connections.
> 
> Grisha
> 
> On Tue, 13 May 2003, Alex Turner wrote:
> 
> >
> > I have a scripts that takes an XML document, munges it and turns it into
> > HTML to be outputed to the user.  It's setup so that it will run either as
> > a request handler in mod_python or as a stand alone application.  I am
> > having extreme problem with the script being slow when running in
> > mod_python.  I have done some timings, and it is 10-20 times slower
> > that it is standalone.  The program makes calls to a Postgresql database
> > using the stock pg module.  The system is running mod_python 3.0.3
> > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> >
> > I can't seem to use the profiler to narrow down the problem at all because
> > I can't seem to figure out how to execute the profiler on a function that
> > takes arguments, and all the functions take at least the HTTP request
> > object as an argument, which makes it hard to use the python profiler.
> > Even so the script runs fine stand alone.  The one page I am looking at
> > goes from 2.2 seconds to 23 seconds.
> >
> > Has anyone had any similar issues?
> >
> > Alex Turner
> > NetEconomist
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grisha at modpython.org  Tue May 13 13:22:18 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513132042.F57186-100000@oldchief.reply.net>


Hmm... Well I'm kinda short on ideas. If it's any reassurance - I'm using
pg with mod_python for a small project right now, and it's very very fast,
i.e. I am not aware of any problems with combination of mod_python and
postgresql.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > I'd first make sure it is not a DNS problem - probably the easiest thing
> > is to run tcpdump on port 53 to what DNS activity takes place when a
> > request comes in. Make sure that apache does not resolve host names, also
> > watch out for postgres using tcpwrappers to resolve host names for
> > incoming connections.
> >
> > Grisha
> >
> > On Tue, 13 May 2003, Alex Turner wrote:
> >
> > >
> > > I have a scripts that takes an XML document, munges it and turns it into
> > > HTML to be outputed to the user.  It's setup so that it will run either as
> > > a request handler in mod_python or as a stand alone application.  I am
> > > having extreme problem with the script being slow when running in
> > > mod_python.  I have done some timings, and it is 10-20 times slower
> > > that it is standalone.  The program makes calls to a Postgresql database
> > > using the stock pg module.  The system is running mod_python 3.0.3
> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> > >
> > > I can't seem to use the profiler to narrow down the problem at all because
> > > I can't seem to figure out how to execute the profiler on a function that
> > > takes arguments, and all the functions take at least the HTTP request
> > > object as an argument, which makes it hard to use the python profiler.
> > > Even so the script runs fine stand alone.  The one page I am looking at
> > > goes from 2.2 seconds to 23 seconds.
> > >
> > > Has anyone had any similar issues?
> > >
> > > Alex Turner
> > > NetEconomist
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jwyant at sfbcic.com  Tue May 13 13:03:45 2003
From: jwyant at sfbcic.com (Wyant, Jaime)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] mod_python slowness
Message-ID: <D2B0A0EB8839D711B63300902784B052187DE0@MS-EXCHANGE>

I used pg / mod_python on my site too and it ran well.  My customer wanted
MySql though and we moved to it.  Thanks to DB-API 2.0 I had only a small
amount of code changes necessary...

jw

>>-----Original Message-----
>>From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
>>Sent: Tuesday, May 13, 2003 12:22 PM
>>To: alex@neteconomist.com
>>Cc: mod_python@modpython.org
>>Subject: Re: [mod_python] mod_python slowness
>>
>>
>>
>>Hmm... Well I'm kinda short on ideas. If it's any reassurance 
>>- I'm using
>>pg with mod_python for a small project right now, and it's 
>>very very fast,
>>i.e. I am not aware of any problems with combination of mod_python and
>>postgresql.
>>
>>Grisha
>>
>>On Tue, 13 May 2003, Alex Turner wrote:
>>
>>>
>>> I'm pretty sure this is not a DNS problem.  I can break 
>>down each loop
>>> that calls the database, and it shows 0.7 seconds per row returning
>>> instead of like 0.03 seconds.  The dns servers are all configured
>>> correctly for both forward and reverse lookups, and I do 
>>not have the same
>>> problems in PHP (other the fact that PHP is crap compared 
>>to python - but
>>> it's not this slow).
>>>
>>> Alex Turner
>>> NetEconomist
>>>
>>> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>>>
>>> >
>>> > I'd first make sure it is not a DNS problem - probably 
>>the easiest thing
>>> > is to run tcpdump on port 53 to what DNS activity takes 
>>place when a
>>> > request comes in. Make sure that apache does not resolve 
>>host names, also
>>> > watch out for postgres using tcpwrappers to resolve host names for
>>> > incoming connections.
>>> >
>>> > Grisha
>>> >
>>> > On Tue, 13 May 2003, Alex Turner wrote:
>>> >
>>> > >
>>> > > I have a scripts that takes an XML document, munges it 
>>and turns it into
>>> > > HTML to be outputed to the user.  It's setup so that it 
>>will run either as
>>> > > a request handler in mod_python or as a stand alone 
>>application.  I am
>>> > > having extreme problem with the script being slow when 
>>running in
>>> > > mod_python.  I have done some timings, and it is 10-20 
>>times slower
>>> > > that it is standalone.  The program makes calls to a 
>>Postgresql database
>>> > > using the stock pg module.  The system is running 
>>mod_python 3.0.3
>>> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 
>>to see if that would
>>> > > help and it didn't.  Everything else is stock RedHat 
>>8.0 - python-2.2.1-17.
>>> > >
>>> > > I can't seem to use the profiler to narrow down the 
>>problem at all because
>>> > > I can't seem to figure out how to execute the profiler 
>>on a function that
>>> > > takes arguments, and all the functions take at least 
>>the HTTP request
>>> > > object as an argument, which makes it hard to use the 
>>python profiler.
>>> > > Even so the script runs fine stand alone.  The one page 
>>I am looking at
>>> > > goes from 2.2 seconds to 23 seconds.
>>> > >
>>> > > Has anyone had any similar issues?
>>> > >
>>> > > Alex Turner
>>> > > NetEconomist
>>> > >
>>> > > _______________________________________________
>>> > > Mod_python mailing list
>>> > > Mod_python@modpython.org
>>> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> > >
>>> >
>>> > _______________________________________________
>>> > Mod_python mailing list
>>> > Mod_python@modpython.org
>>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> >
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From vmilitaru at sympatico.ca  Tue May 13 11:43:51 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
Message-ID: <3EC112B7.2010405@sympatico.ca>

Gregory (Grisha) Trubetskoy wrote:

>IIRC this has to do with -lutil missing from the compile command on some
>systems - try hacking the Makefile and adding it manually.
>  
>

Thanks for the tip. That seems to do it. For the record, I simply edited
mod_python-2.7.8/src/Makefile as:
...
LIBS=-lm  /q/Python-2.2.2/libpython2.2.a  -lutil


Now apache starts ok, and I can access 'mysql' from python prompt just 
as nicely from the python prompt.
 >>> import MySQLdb

But this puzzles me: importing MySQLdb from within PythonHandler still 
gives me the old 'threads' error:

-------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", 
line 193, in Dispatch
    result = object(req)

  File "/usr/local/apache/htdocs/server/test.py", line 20, in handler
    import MySQLdb

  File "/usr/local/lib/python2.2/site-packages/MySQLdb/__init__.py", 
line 27, in ?
    import _mysql

ImportError: /usr/local/lib/python2.2/site-packages/_mysql.so: undefined 
symbol: pthread_key_create
--------------------------


This is puzzling because I recompiled/reinstalled both mod_python and 
MySQLdb, manually zapped _mysql.so (just to be sure), obviously 
restarted apache, and still get this pthreads error. Seems to me like 
mod_python and the python interactive interpreter are not using the same 
"_mysql.so" somehow. Is mod_python cache somewhere ?
Any ideas?

Vio


From jack_diederich at email.com  Tue May 13 15:35:10 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:47:22 2004
Subject: [mod_python] mod_python slowness
Message-ID: <20030513203511.32703.qmail@email.com>

> 
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).

Are you doing anything wierd like running apache or progres
through inetd (so it has to start a new process for every
request)?  Or are you doing a new database connection for
each row?

If the identical python program takes 1/10th the time running
stand-alone I think the DNS was one the right track - it must
be a network related problem.

You might also want to print to the resulting page the time
the process took from start to finish.  If the page is very
complicated it might look slower even if it isn't.

You can also try commenting out all the database calls and
timing the stand alone and mod_python versions.  That will
at least allow you to narrow down the problem.  Also consider
using 'strace' on the stand alone and the apache version.
Compare the system calls between the two to see if something
pathological is happening in the mod_python case.

-jack
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

From vmilitaru at sympatico.ca  Tue May 13 14:46:21 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca>
Message-ID: <3EC13D7D.7030406@sympatico.ca>

Followup ...

On possibility that this may be 'mysql'-related, I am getting similar 
error with Oracle8i:

------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
193, in Dispatch
result = object(req)

File "/usr/local/apache/htdocs/server/test.py", line 21, in handler
import DCOracle2

File "/usr/local/lib/python2.2/site-packages/DCOracle2/__init__.py", 
line 37, in ?
from DCOracle2 import *

File "/usr/local/lib/python2.2/site-packages/DCOracle2/DCOracle2.py", 
line 104, in ?
import dco2

ImportError: /usr/local/lib/python2.2/site-packages/DCOracle2/dco2.so: 
undefined symbol: PyThread_get_thread_ident
-----------------------

But going through the list archives, I didn't see previous mentions of 
this threads-related problem, so I am totally puzzled. Maybe this is 
mod_python 2.7 related? Without better alternative, I'll give a shot at  
mod_python 3.0, although in doing so I'm losing mod_ssl, as it's not 
available (last time I checked) for apache 2.x.

If of any interest, I'm running:
Linux version 2.4.18-bf2.4  (gcc version 2.95.4 20011002 (Debian 
prerelease))

Vio



From chip at cyan.com  Tue May 13 16:02:18 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC13D7D.7030406@sympatico.ca>
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
Message-ID: <20030513230218.M9562@cyan.com>

> But going through the list archives, I didn't see previous mentions 
> of this threads-related problem, so I am totally puzzled. Maybe this 
> is mod_python 2.7 related? Without better alternative, I'll give a 
> shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
> it's not available (last time I checked) for apache 2.x.

mod_ssl is included in apache2(no longer a seperate project...)

http://httpd.apache.org/docs-2.0/mod/mod_ssl.html

-chip

From vmilitaru at sympatico.ca  Tue May 13 16:47:38 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
	<20030513230218.M9562@cyan.com>
Message-ID: <3EC159EA.2090107@sympatico.ca>

As I later discovered:)
I guess the mod_ssl maintainer should mention this fact (for clueless 
users like me) on the mod_ssl page. [Mistakingly] believing otherwise, 
that was my main reason for not migrating to apache2. But all is well 
which ends well, and all threads errors previously mentionned are 
definitely confined to mod_python2.7

Thanks Paul and Grisha for helpful tips.
Sorry for the noise, though.
Vio



Paul Querna wrote:

>>But going through the list archives, I didn't see previous mentions 
>>of this threads-related problem, so I am totally puzzled. Maybe this 
>>is mod_python 2.7 related? Without better alternative, I'll give a 
>>shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
>>it's not available (last time I checked) for apache 2.x.
>>    
>>
>
>mod_ssl is included in apache2(no longer a seperate project...)
>
>http://httpd.apache.org/docs-2.0/mod/mod_ssl.html
>
>-chip
>
>
>  
>



From francoislepoutre at compuserve.com  Wed May 14 08:14:39 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Database connectivity
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
	<001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx> <3EC14706.8000507@usc.edu>
Message-ID: <002801c319e0$19ef7cc0$0d6e4351@mixio7jpsmlatx>

Hi

> So... the script that is referenced in my handler..... if it has an
> _init_ section, will that do the trick ?? and it'll only get run once,
> when the interpreter calls the handler for the first time ???

No _init_  section or objectified kind of code required.
Some plain python stuff will do :)

An example... not tested here. Hope you pick the idea
You just need to dive in now .. Good luck.

Fran?ois

############################
#! C:\Python22\python.exe

# mod_python handling
from mod_python import apache,util

# database connectivity
from mx import DateTime,ODBC

# your database connectivity here
# this is mxODBC/ODBC code
# will depend on your midlle ware...

# this code will run rarely..
# a couple of 1/n of seconds upon setup
database_handle = ODBC.iODBC.Connect("my_connectionion","dba","sql",0)
cursor_handle  = database_handle.cursor()
cursor_handle.execute("select * from customers")
my_shared_data = cursor_handle.fetchall()
cursor_handle.close()

################################
def handler(req):

    # should be long the first time
    # very fast the next one...
    req.content_type = "text/plain"
    req.send_http_header()
    req.write(str(my_shared_data))

    return apache.OK




From majbritt37 at hotmail.com  Fri May 16 00:03:49 2003
From: majbritt37 at hotmail.com (=?iso-8859-1?B?TeVydGVuIEFzaw==?=)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] mod_python for python 2.3
Message-ID: <BAY1-F171sTgirt0KZt0001b438@hotmail.com>

Hello.

I'm having some trouble. It seems that either apache or mod_python doesn't 
realise that I'm using python 2.3, instead they insist that I have python 
2.2.2 installed. The apache error logs show:

make_obcallback: could not import mod_python.apache.

It seems like mod_python is linked to the python22.dll in my system32 
folder. I tried removing it so that it might try to use the python23.dll 
that's also there, but apache then refuses to start.

So how do I fix this? Do I need to recompile either apache or mod_python 
(which I have no idea how to do) or can I find binaries somewhere that might 
work?

Help help.

_________________________________________________________________
L?ttare att hitta dr?mresan med MSN Resor http://www.msn.se/resor/

From aturner at neteconomist.com  Fri May 16 10:34:39 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513203511.32703.qmail@email.com>
Message-ID: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>


It's very unlikely to be a network problem because both the database and 
the web server are running on the same host.  The timings that I took were 
done by placing a start=time.time() at the top of the code section that 
executes 
the file, and a print time.time()-start at the end, so I'm fairly 
convinced that these are accurate.  I then placed more time tests around 
other parts of the mechanism which allowed me to gauge how long each 
segment of the run takes.  I have found a serious flaw in my database 
class, having corrected that though, I found something interesting:

This is my init routine for by DBResult class:

def __init__(self,query):
 start=time.time()
 self.query=query
 self.counter=0;
 self.lresults_l=self.query.getresult()
 self.dresults_l=self.query.dictresult()
 self.fresults_l=[]

 # Copy the indexed/dict values into fresults
 for a in range(len(self.lresults_l)):
   x=0
   self.fresults_l.append({})
   for b in self.lresults_l[a]:
      self.fresults_l[a][x]=b
      x=x+1

   for b in self.dresults_l[a].keys():
      self.fresults_l[a][b]=self.dresults_l[a][b]

 print "Init time %f<br>\n" % (time.time()-start)

It's not pretty, but it does show something wierd:

inside apache this gives a time of: 0.178554 secs
outside apache this gives a time of: 0.093750 secs

almost twice as fast.

Maybe this is a pg module problem, I don't know, but it's certainly wierd!

Alex Turner
NetEconomist

On Tue, 13 May 2003, Jack Diederich wrote:

> > 
> > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > that calls the database, and it shows 0.7 seconds per row returning
> > instead of like 0.03 seconds.  The dns servers are all configured
> > correctly for both forward and reverse lookups, and I do not have the same
> > problems in PHP (other the fact that PHP is crap compared to python - but
> > it's not this slow).
> 
> Are you doing anything wierd like running apache or progres
> through inetd (so it has to start a new process for every
> request)?  Or are you doing a new database connection for
> each row?
> 
> If the identical python program takes 1/10th the time running
> stand-alone I think the DNS was one the right track - it must
> be a network related problem.
> 
> You might also want to print to the resulting page the time
> the process took from start to finish.  If the page is very
> complicated it might look slower even if it isn't.
> 
> You can also try commenting out all the database calls and
> timing the stand alone and mod_python versions.  That will
> at least allow you to narrow down the problem.  Also consider
> using 'strace' on the stand alone and the apache version.
> Compare the system calls between the two to see if something
> pathological is happening in the mod_python case.
> 
> -jack
> 

From grisha at modpython.org  Fri May 16 12:07:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>
Message-ID: <20030516120158.K6045-100000@oldchief.reply.net>


The times listed below, are these averages of multiple iterations (e.g.
10000) or just a one time try?

Anyway - it doesn't look like this is where the bottleneck is - you
mentioned before that a page that took 2.2 seconds to load takes 23
seconds - that's almost 21 seconds of difference whereas below you have a
slowdown of 0.8 secs.

Grisha


On Fri, 16 May 2003, Alex Turner wrote:

>
> It's very unlikely to be a network problem because both the database and
> the web server are running on the same host.  The timings that I took were
> done by placing a start=time.time() at the top of the code section that
> executes
> the file, and a print time.time()-start at the end, so I'm fairly
> convinced that these are accurate.  I then placed more time tests around
> other parts of the mechanism which allowed me to gauge how long each
> segment of the run takes.  I have found a serious flaw in my database
> class, having corrected that though, I found something interesting:
>
> This is my init routine for by DBResult class:
>
> def __init__(self,query):
>  start=time.time()
>  self.query=query
>  self.counter=0;
>  self.lresults_l=self.query.getresult()
>  self.dresults_l=self.query.dictresult()
>  self.fresults_l=[]
>
>  # Copy the indexed/dict values into fresults
>  for a in range(len(self.lresults_l)):
>    x=0
>    self.fresults_l.append({})
>    for b in self.lresults_l[a]:
>       self.fresults_l[a][x]=b
>       x=x+1
>
>    for b in self.dresults_l[a].keys():
>       self.fresults_l[a][b]=self.dresults_l[a][b]
>
>  print "Init time %f<br>\n" % (time.time()-start)
>
> It's not pretty, but it does show something wierd:
>
> inside apache this gives a time of: 0.178554 secs
> outside apache this gives a time of: 0.093750 secs
>
> almost twice as fast.
>
> Maybe this is a pg module problem, I don't know, but it's certainly wierd!
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Jack Diederich wrote:
>
> > >
> > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > that calls the database, and it shows 0.7 seconds per row returning
> > > instead of like 0.03 seconds.  The dns servers are all configured
> > > correctly for both forward and reverse lookups, and I do not have the same
> > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > it's not this slow).
> >
> > Are you doing anything wierd like running apache or progres
> > through inetd (so it has to start a new process for every
> > request)?  Or are you doing a new database connection for
> > each row?
> >
> > If the identical python program takes 1/10th the time running
> > stand-alone I think the DNS was one the right track - it must
> > be a network related problem.
> >
> > You might also want to print to the resulting page the time
> > the process took from start to finish.  If the page is very
> > complicated it might look slower even if it isn't.
> >
> > You can also try commenting out all the database calls and
> > timing the stand alone and mod_python versions.  That will
> > at least allow you to narrow down the problem.  Also consider
> > using 'strace' on the stand alone and the apache version.
> > Compare the system calls between the two to see if something
> > pathological is happening in the mod_python case.
> >
> > -jack
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From aturner at neteconomist.com  Fri May 16 12:27:38 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030516120158.K6045-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305161221570.29332-100000@mx1.neteconomist.com>


DOH!

I found the problem.  And can easily explain the discrepancy between
running the script stand alone vs in apache.  There is one major
difference between apache, and standalone: Cookies.  My Container object
that is passed to each tag function was fetching the cookies from the
request object for each execution! I moved the code into the right place,
i.e. where the request object initialy get's dealt with, and that has
of course cured the problem!

Many thanks to all who have replied.

And as a random editorial, I have to say that I enjoy working with 
mod_python/python as a web platform far more than any other I've used 
previously including php, perl, java and coldfusion.  It has both the 
flexibility and the power to make web development fast and easy (thank 
goodness for proper stack traces and a consistance language API!)

Alex Turner
NetEconomist

On Fri, 16 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> The times listed below, are these averages of multiple iterations (e.g.
> 10000) or just a one time try?
> 
> Anyway - it doesn't look like this is where the bottleneck is - you
> mentioned before that a page that took 2.2 seconds to load takes 23
> seconds - that's almost 21 seconds of difference whereas below you have a
> slowdown of 0.8 secs.
> 
> Grisha
> 
> 
> On Fri, 16 May 2003, Alex Turner wrote:
> 
> >
> > It's very unlikely to be a network problem because both the database and
> > the web server are running on the same host.  The timings that I took were
> > done by placing a start=time.time() at the top of the code section that
> > executes
> > the file, and a print time.time()-start at the end, so I'm fairly
> > convinced that these are accurate.  I then placed more time tests around
> > other parts of the mechanism which allowed me to gauge how long each
> > segment of the run takes.  I have found a serious flaw in my database
> > class, having corrected that though, I found something interesting:
> >
> > This is my init routine for by DBResult class:
> >
> > def __init__(self,query):
> >  start=time.time()
> >  self.query=query
> >  self.counter=0;
> >  self.lresults_l=self.query.getresult()
> >  self.dresults_l=self.query.dictresult()
> >  self.fresults_l=[]
> >
> >  # Copy the indexed/dict values into fresults
> >  for a in range(len(self.lresults_l)):
> >    x=0
> >    self.fresults_l.append({})
> >    for b in self.lresults_l[a]:
> >       self.fresults_l[a][x]=b
> >       x=x+1
> >
> >    for b in self.dresults_l[a].keys():
> >       self.fresults_l[a][b]=self.dresults_l[a][b]
> >
> >  print "Init time %f<br>\n" % (time.time()-start)
> >
> > It's not pretty, but it does show something wierd:
> >
> > inside apache this gives a time of: 0.178554 secs
> > outside apache this gives a time of: 0.093750 secs
> >
> > almost twice as fast.
> >
> > Maybe this is a pg module problem, I don't know, but it's certainly wierd!
> >
> > Alex Turner
> > NetEconomist
> >
> > On Tue, 13 May 2003, Jack Diederich wrote:
> >
> > > >
> > > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > > that calls the database, and it shows 0.7 seconds per row returning
> > > > instead of like 0.03 seconds.  The dns servers are all configured
> > > > correctly for both forward and reverse lookups, and I do not have the same
> > > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > > it's not this slow).
> > >
> > > Are you doing anything wierd like running apache or progres
> > > through inetd (so it has to start a new process for every
> > > request)?  Or are you doing a new database connection for
> > > each row?
> > >
> > > If the identical python program takes 1/10th the time running
> > > stand-alone I think the DNS was one the right track - it must
> > > be a network related problem.
> > >
> > > You might also want to print to the resulting page the time
> > > the process took from start to finish.  If the page is very
> > > complicated it might look slower even if it isn't.
> > >
> > > You can also try commenting out all the database calls and
> > > timing the stand alone and mod_python versions.  That will
> > > at least allow you to narrow down the problem.  Also consider
> > > using 'strace' on the stand alone and the apache version.
> > > Compare the system calls between the two to see if something
> > > pathological is happening in the mod_python case.
> > >
> > > -jack
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 

From philipj at telia.com  Fri May 16 23:18:19 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <20030516231819.3bf2a966.philipj@telia.com>

Hello.

My subject is bad, because I can't figure out what to call what I want
to do.

I'm writing a wiki-ish application, where currently I'm writing URIs
like http://site.org/?page=cow&group=animals. I don't much like this
approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result. The ideal
thing would be if I could get mod_python to handle _all_ requests, for
any type of file (not just .py) in a directory, so that I could just
read req.uri and manually figure out what to do -- if the given group or
page doesn't exist, return 404 or something.

So, how could I achieve something like this with mod_python? The key
issue is getting mod_python to handle everything really, but if that's
not a good way to go about the problem, please tell what else I could
do. I've heard so much talk about twisted and zope, which I think might
do something like this, but both of those libraries/frameworks appear to
be so much more than I need -- I want to continue using mod_python.

Ideas?

// Philip J?genstedt
From mike at mapvision.com  Fri May 16 14:43:17 2003
From: mike at mapvision.com (Michael Gibbs)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Please help me  :)
Message-ID: <200305161443.17917.mike@mapvision.com>

Thanks in advance for any guidance you can provide.

Our problem is that we are trying to maintain a counter using a global 
variable. However the script returns different values when multiple browser 
form requests are being submitted. The counter seems to get changed by 
different requests but not as expected. Are we doing something wrong?

Thanks,
Mike. 


This is the HTML form we use to make the mod_python request. 

<HTML>
        <form action="http://localhost/form2" method="POST">
                <input type="submit">
        </form>
</HTML>


This is the python script (form2.py)

#Why does this script return different values for _count?
#This happens when two browsers are opened and multiple
#forms are submitted. Going back and forth between browsers
#seems to mess up/reset the count on different requests.

from mod_python import apache
_count = 0
def handler(req):
        global _count
        _count += 1
        req.content_type = "text/html"
        req.send_http_header()
        req.write('_count = %d' %_count)
        return apache.OK
From vlindberg at verio.net  Fri May 16 15:57:38 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <3EC55ED2.2010900@verio.net>

Philip J?genstedt wrote:
I don't much like this approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result.


What you  want has been termed object publishing by the Zope community, 
and that usage has been (fairly) widely adopted.  I have been 
researching this lately; AFAIK, you have three options that do this with 
mod_python:

1. mod_python publisher handler.  See the documentation on the 
mod_python site.  Advantage: built in, as close to apache as you can 
get.  Disadvantage: as close to apache as you can get.  Any supporting 
infrastructure will need to be written by you.

2. albatross + mod_python.  Albatross allows this sort of thing, see 
their "Random*Apps" and the associated documentation. Advantage: nice 
session management, page processing model. Disadvantage: the 
implementation of the Random Apps leaves a little to be desired -- it 
moves the user around through http redirects.

3. quixote + mod_python. This is a central feature of quixote, and they 
do it very nicely. Advantage: the mapping of the URL-space to the 
code-space is very elegant.  Disadvantage (at least for me): I don't 
like ptl (their html generation system) as much.


VanL

From mod_python at mikebell.org  Sat May 17 00:15:50 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <20030517071549.GU19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 11:18:19PM +0200, Philip J?genstedt wrote:
> So, how could I achieve something like this with mod_python? The key
> issue is getting mod_python to handle everything really, but if that's
> not a good way to go about the problem, please tell what else I could
> do.

Give this a try, in your apache configs do something like:

<Location /URL/>
SetHandler python-program
PythonHandler MyHandler
</Location>
From mod_python at mikebell.org  Sat May 17 00:18:56 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <200305161443.17917.mike@mapvision.com>
References: <200305161443.17917.mike@mapvision.com>
Message-ID: <20030517071855.GV19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
> Our problem is that we are trying to maintain a counter using a global 
> variable. However the script returns different values when multiple browser 
> form requests are being submitted. The counter seems to get changed by 
> different requests but not as expected. Are we doing something wrong?

Your global variables will only be shared by requests handled by the
same interpreter. Each apache process forked has its own. You need to
use some form of shared memory to get multiple processes to share a
counter, be it by mmaping a file or using a database connection or
whatever.
From etienne at cs.vu.nl  Sat May 17 15:29:25 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC55ED2.2010900@verio.net>
Message-ID: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
> 3. quixote + mod_python. This is a central feature of quixote, and 
> they do it very nicely. Advantage: the mapping of the URL-space to the 
> code-space is very elegant.  Disadvantage (at least for me): I don't 
> like ptl (their html generation system) as much.

BTW, you could also use other template systems with Quixote, for 
example there is the standalone  SimpleTAL which looked quite good. (I 
haven't used it yet, the author claims extensive Zope TAL and METAL 
compatibility)

EP

From etienne at cs.vu.nl  Sat May 17 15:34:55 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
wrote:
> My subject is bad, because I can't figure out what to call what I want
> to do.


The name for it is REST.
So to rephrase your question: "How can I make my application more 
REST-like?"

regards

EP

From news at exultants.org  Sat May 17 17:58:11 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
References: <20030516231819.3bf2a966.philipj@telia.com>
	<5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6lnr$e0n$1@main.gmane.org>

Etienne Posthumus wrote:
> 
> On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
> wrote:
> 
>> My subject is bad, because I can't figure out what to call what I want
>> to do.
> 
> 
> 
> The name for it is REST.
> So to rephrase your question: "How can I make my application more 
> REST-like?"
> 

For the benefit of Philip:

REST = "REpresentational State Transfer"

See <http://internet.conveyor.com/RESTwiki/moin.cgi> for a wiki 
describing the REST architectural style.

Here's an interesting looking project that tries to build an even higher 
level REST architecture on top of Quixote, 
<http://www.rexx.com/~dkuhlman/fsmGenerate_howto.html>

The end of that page has some other good links to other python + quixote 
+ REST resources.


From news at exultants.org  Sat May 17 17:47:08 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
References: <3EC55ED2.2010900@verio.net>
	<93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6l35$chi$1@main.gmane.org>

Etienne Posthumus wrote:
> On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
 >>
>> 3. quixote + mod_python. This is a central feature of quixote, and 
>> they do it very nicely. Advantage: the mapping of the URL-space to the 
>> code-space is very elegant.  Disadvantage (at least for me): I don't 
>> like ptl (their html generation system) as much.
> 
> 
> BTW, you could also use other template systems with Quixote, for example 
> there is the standalone  SimpleTAL which looked quite good. (I haven't 
> used it yet, the author claims extensive Zope TAL and METAL compatibility)

This is close to the approach I'm going to use.

I'll use Quixote for the object publishing, session handling, etc.  For 
templating I'll use PTL for generating programmed web-pages (e.g. RSS 
feeds) and PyMeld for pages that need to be "designed".

Van


From sury.ondrej at globe.cz  Mon May 19 14:35:55 2003
From: sury.ondrej at globe.cz (Ondrej Sury)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <20030517071855.GV19515@netvista.mikebell.org> (mod python's
 message of "Sat, 17 May 2003 00:18:56 -0700")
References: <200305161443.17917.mike@mapvision.com>
	<20030517071855.GV19515@netvista.mikebell.org>
Message-ID: <87llx36rmc.fsf@globe.cz>

mod_python@mikebell.org writes:

> On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
>> Our problem is that we are trying to maintain a counter using a global 
>> variable. However the script returns different values when multiple browser 
>> form requests are being submitted. The counter seems to get changed by 
>> different requests but not as expected. Are we doing something wrong?
>
> Your global variables will only be shared by requests handled by the
> same interpreter. Each apache process forked has its own. You need to
> use some form of shared memory to get multiple processes to share a
> counter, be it by mmaping a file or using a database connection or
> whatever.

I had some success when using threaded mpm model (per_child f.e.) in apache 2.x
which starts only on python interpreter for all threads in the same process group.

O.

-- 
Ondrej Sury - co/CTO                Globe Internet s.r.o. http://globe.cz/
Tel: +420(2)35365000 Fax: +420(2)35365009     Planickova 1, 162 00 Praha 6
From mike.looijmans at asml.com  Mon May 19 14:51:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <01c31e05$4f438280$926a1e6e@wsasd464>

I chose option #4: Build your own.

I just have /xx scriptaliased to point to a single .py handler. That one takes
the uri (request.path_info) and uses that to make the proper call.

I made it so that the request is like:

/xx/session/script...


(session could be a session ID, or name of database to use, and such).

The figures out which module to (re)import (the one named "script" in this
case), loads it, firgures out the parameters (usually the request object,
authorization information and a database connection) and calls its "main"
function.

Took about an hour to invent, implement and test and has been working
flawlessly for months. I like this language :-)
And it's backwards compatible with CGI too, at least, to the extent that I
need, so that servers without mod_python can use the same codebase (only the
initial handler differs).

Mike.


From davidf at sjsoft.com  Mon May 19 16:06:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <3EC8E4FB.90104@sjsoft.com>

Mike Looijmans wrote:

>I chose option #4: Build your own.
>
>I just have /xx scriptaliased to point to a single .py handler. That one takes
>the uri (request.path_info) and uses that to make the proper call.
>
Very cool. Is this with Apache directives?

>I made it so that the request is like:
>
>/xx/session/script...
>
>
>(session could be a session ID, or name of database to use, and such).
>
>The figures out which module to (re)import (the one named "script" in this
>case), loads it, firgures out the parameters (usually the request object,
>authorization information and a database connection) and calls its "main"
>function.
>
Presume you mean "The handler figures out"...?

>Took about an hour to invent, implement and test and has been working
>flawlessly for months. I like this language :-)
>And it's backwards compatible with CGI too, at least, to the extent that I
>need, so that servers without mod_python can use the same codebase (only the
>initial handler differs).
>
Very nice...
I think a description of how to do this would be a great addition to the 
modpython manual...

David

From philipj at telia.com  Mon May 19 18:53:11 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <20030519185311.17d2a126.philipj@telia.com>

> I chose option #4: Build your own.

It's interresting that you should say that, because I eventually came to
the same conclusion. It took a litter longer for me to invent (because
the last thing in the URI can be either a "group" or "node", which takes
some code to figure out which). Anyway, it's just 16 lines long, so that
feels better than importing quixote modules or something.

However, there is one flaw which it sounds you may have overcome. Since
I have DirectoryIndex index.py for my / on the server, just writing
http://site.org/ gives me a URI of /index.py. I resolve this by checking
if the last (and only!) element of the URI is the same as the filename
of the executing script. The downside is that it makes it impossible to
have a group or node called "index.py". Also, because I have my css in
the root (A special exception from the SetHandler python-progam is made
for the css file), no node can be called "stdb.css" Nor can I have a
"lib" node or dir, because of the "lib" dir containing all the modules
of my application.

You get the point... in practice, this isn't a very big problem, but
it's just not clean -- I'd like to get around it. So the question: does

> I just have /xx scriptaliased to point to a single .py handler.

mean that you use SetHandler python-program for entire dir, or are you
doing something smarter that might help me evade the issues I'm having?

// Philip J?genstedt
From gmurali at cs.uchicago.edu  Mon May 19 15:59:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
Message-ID: <3EC945B4.1050907@cs.uchicago.edu>

Sorry for not replying earlier... Here is the code, we use...
I have removed pieces of the code which deal with other stuff.
I hope I have not removed too many things...
This code is due to Dustin Mitchell who setup our site
initially.

We use translate.py as our translate handler, which as you can
see creates a req.url, which has lots of information about the
requested url. The check_dont_handle function, allows us to not
handle certain file types or certain subtrees of the DOCROOT.

Hope you find the code useful.

- Murali

------ translate.py ------------
from mod_python import apache, util
from utils import urls
import os, string, config

# This module is responsible for translating the URL space as designed
# into a filename, which Apache will use to control further processing
# of the request.
#
# It does lots of other things too, basically to process the request
# into a nice, Python-ish format.

def transhandler(req):
   # First check if we're configured not to handle this request.
   check_dont_handle(req)

   # Otherwise begin handling this normally
   try:
     # We use the URL class to calculate all of the parts of the URL
     # we were given
     req.url = urls.URL(req)

     # Check if this is a secure connection
     req.secure = is_secure(req)

     # Copy some important values into req
     req.filename, req.modpath = req.url.filename, req.url.modpath

     # Grab any relevant form data,
     req.form_data = util.FieldStorage(req, keep_blank_values=1, 
strict_parsing=1)

     # and register the next handler
     req.add_handler("PythonHandler", "handlers.dispatch")

   # And handle any errors during that time by logging and sending the
   # usual Apache 404 message.
   except:
     return apache.HTTP_NOT_FOUND

   return apache.OK

def check_dont_handle(req):
   """Supports the PythonOption DontHandle Apache configuration option:

PythonOption DontHandle initial-uri[:initial-uri[:initial-uri...]]

which causes the Python site to decline to handle any requests beginning
with one of the specified initial-uri's.  In that case, normal Apache
behavior will apply.
"""
   options = req.get_options()
   uri = req.uri
   if options.has_key('DontHandle'):
     dont_handle = string.split(options['DontHandle'], ':')
     for prefix in dont_handle:
       if prefix == uri[:len(prefix)]:
         raise apache.SERVER_RETURN, apache.DECLINED

def is_secure(req):
   # This seems the best way to do this
   return req.server.port == 443

-----end of translate.py ---------

------ urls.py ---------------

import config
from mod_python import util
import os, string, copy
import re

# This module is responsible for translating the URL space as designed
# into its components:
#
# http://py.cs.uchicago.edu/path/to/program/args1/args2?internal+data
# ----   ------------------ --------------- ----------- -------------
# |      server             \ script_path   \ args_path \ internal
# \ scheme

# All of these fields are member variables of the URL class. Further,
# args_path is available in list form as url.arguments.
# url.internal is a dictionary representing the value of internal as
# a standard URL query string.  url.special contains the characters
# from internal if it contains no '=', and is empty otherwise.

# the module sets the following fields in req:
#  filename -- the filename of the file which will produce the final
#     response.  Apache cares about this.
#  modpath -- a list of nested Python modules which will succeed in
#     representing the script.
#
# It's important to note that the latter two options define the file
# which will produce the final page, while the annotations on the URL
# are produced regardless of the Python program that will eventually
# produce the data.
#
# In particular, Apache is depending on this module to provide
# req.filename.  Apache config commands (e.g. <Directory>) will look
# at this result to determine what to do next.  To help out down the
# road, we also keep track of a module path to get to the relevant .py
# file, and the portion of the URI which specified that file.

# Python script files are:
#   'docroot'/'script_path'.py
# or
#   'docroot'/'script_path'/index.py
# And this program will find the longest possible match among those
# possibilities.

class URL:
   "Object to represent the URL for a given hit on the site."

   def __init__(self, req):
     # get the scheme (e.g., http or https)
     if req.server.port == 443:
       self.scheme = 'https'
     else:
       self.scheme = 'http'

     # Get the method (e.g., 'GET', 'POST', 'HEAD')
     self.method = req.method

     # server name (just to be safe)
     self.server = req.server.server_hostname

     # parse the path, finding the longest part that still refers to a
     # Python script.
     self._parse_path(req.uri)

   # ----
   # Helper functions

   def _parse_path(self, path):
     # Strip that initial slash
     path = path[1:]

     # Break the path into components
     components = []
     if path:
       components = string.split(path, '/')

     # We operate on 4-tuples:
     current = (
       config.docroot,                   # filename
       config.docmod,                    # modpath
       "/",                              # script_path
       components )                      # arguments
     FILENAME = 0
     MODPATH = 1
     SCRIPT_PATH = 2
     ARGUMENTS = 3

     best = None

     # Loop over those components
     while 1:
       # Try two variations of current, in order of length.
       # 'filename'.py
       fn = current[FILENAME] + '.py'
       if self._intree(fn, config.docroot) and \
          os.path.isfile(fn):
         best = ( fn, current[1], current[2], current[3] )

       # If it's a directory we can try 'filename'/index.py
       if os.path.isdir(current[FILENAME]):
         fn = os.path.join(current[FILENAME], 'index.py')
         if self._intree(fn, config.docroot) and \
            os.path.isfile(fn):
           best = ( fn, current[1] + ( 'index', ),
                    current[2], current[3] )

         # And since it's a directory, we can try the next level of
         # directory nesting
         if current[ARGUMENTS]:
           # Get the first component (that used to be an argument)
           comp = current[ARGUMENTS][0]
           # Break out on any funny business
           if comp == '..' or comp == '.' or comp == '':
             break

           # Ignore '.php', for compatibility
           if comp[-4:] == '.php':
             comp = comp[:-4]

           # Move to a new 'current'
           current = (
             os.path.join(current[FILENAME], comp),
             current[MODPATH] + ( comp, ),
             os.path.join(current[SCRIPT_PATH], comp),
             current[ARGUMENTS][1:] )
           continue

       break

     ( self.filename, self.modpath,
       self.script_path, self.arguments ) = best

     # and touch up the arguments a little bit...
     # filter out any empty elements
     self.arguments = filter(None, self.arguments)
     # and include a slash in the args_path only if necessary
     if self.script_path[-1] == '/':
       self.args_path = string.join(self.arguments, '/')
     else:
       self.args_path = '/' + string.join(self.arguments, '/')

   # Returns boolean indicating if PATH is in the directory tree rooted
   # at ROOT.  Also checks that PATH is absolute, and invariant under
   # normpath(), catching things like '../' and './'.  This class uses
   # this function as a sanity check.
   def _intree(self, path, root):
     return path == os.path.abspath(path) and \
            path == os.path.normpath(path) and \
            path[:len(root)] == root

---- end of urls.py -----


From conrad at hep.caltech.edu  Mon May 19 14:08:43 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
Message-ID: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>

Hi

Here is a patch to mod_python version 2.7.x that adds the method
write_file to the request object.

This method writes the named file to the client using the Apache
ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
(https) connections, with the former using the sendfile() system call
where available. This significantly improves performance and reduces CPU
usage relative to reading data into a buffer and writing it to the
client using the req.write() method.

Usage e.g.:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",sent,-1)
  return apache.OK


This is the companion patch to the 3.0.x version (also attached).

Please consider applying the patch(es) to the main tree.

Regards

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- src/requestobject.c.orig	Mon May 19 11:38:46 2003
+++ src/requestobject.c	Mon May 19 11:51:03 2003
@@ -781,6 +781,52 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    FILE *fd;
+    size_t offset=0, len=-1, nbytes;
+    struct stat status;
+    PyObject * py_result = NULL;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    rc=stat(fname,&status);
+    if (rc !=0) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    fd=fopen(fname,"r");
+    if (!fd) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=status.st_size;
+    if (offset!=0){
+      rc=fseek(fd,offset,SEEK_SET);
+      if (rc!=0){
+        PyErr_SetString(PyExc_IOError, "Could not seek to specified offset");
+        fclose(fd);
+        return NULL;      
+      }
+    }
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    nbytes = ap_send_fd_length(fd, self->request_rec, len);
+    
+    Py_END_ALLOW_THREADS
+    
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef requestobjectmethods[] = {
     {"add_common_vars",      (PyCFunction) req_add_common_vars,      METH_VARARGS},
     {"add_handler",          (PyCFunction) req_add_handler,          METH_VARARGS},
@@ -797,6 +843,7 @@
     {"register_cleanup",     (PyCFunction) req_register_cleanup,     METH_VARARGS},
     {"send_http_header",     (PyCFunction) req_send_http_header,     METH_VARARGS},
     {"write",                (PyCFunction) req_write,                METH_VARARGS},
+    {"write_file",           (PyCFunction) req_write_file,           METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From davidf at sjsoft.com  Tue May 20 09:30:22 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <3EC9D98E.6040707@sjsoft.com>

ganapathy murali krishnan wrote:

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.
>
> We use translate.py as our translate handler, which as you can
> see creates a req.url, which has lots of information about the
> requested url. The check_dont_handle function, allows us to not
> handle certain file types or certain subtrees of the DOCROOT.
>
> Hope you find the code useful.
>
> - Murali

I have found that we need to create physical directories in the Apache 
html directory corresponding to any subdirectories we want to handle in 
the Python script, otherwise we get a 404 error. Has anyone else found 
this? Is the SetLocation the answer for this?
The reason I would like to know is we would like to use dynamically 
generated path names without them existing on the disk

Thanks for the code
David

From dustin at ywlcs.org  Tue May 20 06:40:36 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC9D98E.6040707@sjsoft.com>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
Message-ID: <20030520114036.GS25467@eleanor.internal.ywlcs.org>

On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
> 
> I have found that we need to create physical directories in the Apache 
> html directory corresponding to any subdirectories we want to handle in 
> the Python script, otherwise we get a 404 error. Has anyone else found 
> this? Is the SetLocation the answer for this?
> The reason I would like to know is we would like to use dynamically 
> generated path names without them existing on the disk

For some unknown reason Apache checks that req.filename exists.  I usually
just point it at the translation script itself (__file__).

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From davidf at sjsoft.com  Tue May 20 14:12:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520114036.GS25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA1BB7.3020803@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>  
>
>>I have found that we need to create physical directories in the Apache 
>>html directory corresponding to any subdirectories we want to handle in 
>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>this? Is the SetLocation the answer for this?
>>The reason I would like to know is we would like to use dynamically 
>>generated path names without them existing on the disk
>>    
>>
>
>For some unknown reason Apache checks that req.filename exists.  I usually
>just point it at the translation script itself (__file__).
>
>Dustin
>
>  
>
Thanks, where does the check happen, and where do you do the pointing?
Looking at the docs, I guess it could happen in PythonTransHandler, 
PythonHeaderParserHandler or PythonInitHandler
It doesn't seem clear to me exactly where the path resolution is done in 
Apache relative to these handlers... Looking at the mod_python source 
didn't seem to indicate either
PythonTransHandler is designed to resolve the URI to a filename, but the 
resolution is actually correct, so it would be nice not to interfere 
before the actual .htaccess file is used...

Thanks again
David

From ballums at swbell.net  Tue May 20 10:02:26 2003
From: ballums at swbell.net (Ben Allums)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>
Message-ID: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>

On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:

> Here is a patch to mod_python version 2.7.x that adds the method
> write_file to the request object.
> 
> This method writes the named file to the client using the Apache
> ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> (https) connections, with the former using the sendfile() system call
> where available. This significantly improves performance and reduces
> CPU usage relative to reading data into a buffer and writing it to
> the client using the req.write() method.

Thank you Conrad.  I current use a series of "req.write()" calls to do
this exact operation.


Ben
From davidf at sjsoft.com  Tue May 20 17:19:34 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:23 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520131332.GU25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
	<3ECA1BB7.3020803@sjsoft.com>
	<20030520131332.GU25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA4786.3060705@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 02:12:39PM +0200, David Fraser wrote:
>  
>
>>Dustin Mitchell wrote:
>>
>>    
>>
>>>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>>>
>>>
>>>      
>>>
>>>>I have found that we need to create physical directories in the Apache 
>>>>html directory corresponding to any subdirectories we want to handle in 
>>>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>>>this? Is the SetLocation the answer for this?
>>>>The reason I would like to know is we would like to use dynamically 
>>>>generated path names without them existing on the disk
>>>>  
>>>>
>>>>        
>>>>
>>>For some unknown reason Apache checks that req.filename exists.  I usually
>>>just point it at the translation script itself (__file__).
>>>
>>>Dustin
>>>
>>>
>>>
>>>      
>>>
>>Thanks, where does the check happen, and where do you do the pointing?
>>Looking at the docs, I guess it could happen in PythonTransHandler, 
>>    
>>
>
>It's the transhandler's job to set req.filename, actually.  I think, if it
>doesn't get set, the Apache handler gets triggered, which gives you the 404.
>So set req.filename in your transhandler.
>
>  
>
>>PythonHeaderParserHandler or PythonInitHandler
>>It doesn't seem clear to me exactly where the path resolution is done in 
>>Apache relative to these handlers... Looking at the mod_python source 
>>didn't seem to indicate either
>>    
>>
>
>Path resolution is the stated goal of the transhandler.
>
>  
>
>>PythonTransHandler is designed to resolve the URI to a filename, but the 
>>resolution is actually correct, so it would be nice not to interfere 
>>before the actual .htaccess file is used...
>>    
>>
>
>You can't mess with .htaccess if you're going to do transhandlers.  You'll
>have to put your config in the httpd.conf file, or some derivative thereof.
>Apache's transhandler is the one that *finds* the .htaccess files.  You can't
>have it both ways -- Apache finds your .htaccess, then lets you redo the
>translation phase.
>
>Dustin
>
>  
>
Thanks Dustin, all clear now...
David

From philipj at telia.com  Tue May 20 22:02:40 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
	<3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <20030520220240.6aa38c9b.philipj@telia.com>

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.

Thank you for that information. Your code does much more than I need,
but it certainly did help me write a transhandler of my own. I have a
few questions which I hope you can answer for me:

A: Does the code have a licensed attached to it, if I decide to use any
of it at a later date? (GPL, public domain... ?)

B: As it is now (just did this 5 minutes ago) I have the following in my
httpd.conf:
<IfModule mod_python.c>
    PythonPath "sys.path + ['/home/philip/htdocs/stdb']"
    PythonTransHandler index
</IfModule>

<Directory /home/philip/htdocs/stdb>
    Options FollowSymLinks
    AddHandler python-program .py
    PythonHandler index
    PythonDebug On
    PythonAutoReload On
</Directory>

Now I've come to understand that the PythonTransHandler must not be in a
<Directory>, <File>, .htacces or the like, so I put it in the very root
of my httpd.conf. Is this the correct way to go about it? Right now I'm
serving the mod_python pages out from /stdb/, so I only want to apply
PythonTransification for that dir, which then involves checking if the
URI begins with the /stdb. Can I add something to httpd.conf to make
PythonTransHandler apply only to /stdb, or am I then trapped in already
being past the Trans phase?

Thank you for you kind help!
// Philip J?genstedt
From conrad at hep.caltech.edu  Tue May 20 15:39:40 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
References: 
	 <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
Message-ID: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>

On Tue, 2003-05-20 at 08:02, Ben Allums wrote:
> On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:
> 
> > Here is a patch to mod_python version 2.7.x that adds the method
> > write_file to the request object.
> > 
> > This method writes the named file to the client using the Apache
> > ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> > (https) connections, with the former using the sendfile() system call
> > where available. This significantly improves performance and reduces
> > CPU usage relative to reading data into a buffer and writing it to
> > the client using the req.write() method.
> 
> Thank you Conrad.  I current use a series of "req.write()" calls to do
> this exact operation.

:-)

Maybe we can convince Grisha to apply the patches in the next release?

Conrad

> 
> 
> Ben
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From gmurali at cs.uchicago.edu  Tue May 20 17:48:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>	<3EC945B4.1050907@cs.uchicago.edu>
	<20030520220240.6aa38c9b.philipj@telia.com>
Message-ID: <3ECAB0C0.4000408@cs.uchicago.edu>

Philip J?genstedt wrote:
 > Thank you for that information. Your code does much more than I need,
 > but it certainly did help me write a transhandler of my own. I have a
 > few questions which I hope you can answer for me:
 >
 > A: Does the code have a licensed attached to it, if I decide to use any
 > of it at a later date? (GPL, public domain... ?)
 >

That was a no strings attached code.
Dustin: You have anything you want to add?

 > B: As it is now (just did this 5 minutes ago) I have the following in 
--snip --
 > URI begins with the /stdb. Can I add something to httpd.conf to make
 > PythonTransHandler apply only to /stdb, or am I then trapped in already
 > being past the Trans phase?

In the code you see, there is a check_dont_handle function, which
looks at the specified URI and decides if it should handle. Our handler
decides to handle it, based on the extension of the file requested. In
another web server, we also decline to handle if the requested URI lies
in some specific subtrees of the DOCROOT. If your handler declines to
handle it, then the default apache handler will take over. So all you 
need to do is to check if the requested URI is in the stdb subtree, else
decline to handle it, and the normal Apache Handler should kick in.

- Murali

From grisha at modpython.org  Tue May 20 20:18:54 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>
Message-ID: <20030520201614.O75374-100000@oldchief.reply.net>



On 20 May 2003, Conrad Steenberg wrote:

> Maybe we can convince Grisha to apply the patches in the next release?

Well, unless something changes, the next 2.7 release will happen if (and
only if) there is a serious issue such as a security problem, and it will
contain a fix only.

But we will certainly try to include this in the next 3.x release. :-)

Grisha

From dorellik1 at inwind.it  Wed May 21 17:19:50 2003
From: dorellik1 at inwind.it (dorellik1)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Error in make dso
Message-ID: <002101c31fac$6cc52040$0100a8c0@y5k4k1>

I have the following result after

$ make dso
make[1]: Entering directory `/home/bill/mod_python-2.7.8/src'
gcc  -I/home/bill/mod_python-2.7.8/src/include -I/usr/src/apache_1.3.26/src/include -I/usr/src/apache_1.3.26/src/os/unix -I/usr/include/python2.2    -c -o mod_python.o mod_python.c
In file included from /usr/src/apache_1.3.26/src/include/httpd.h:72,
                 from /home/bill/mod_python-2.7.8/src/include/mod_python.h:63,
                 from mod_python.c:54:
/usr/src/apache_1.3.26/src/include/ap_config.h:77:28: ap_config_auto.h: No such file or directory
make[1]: *** [mod_python.o] Error 1
make[1]: Leaving directory `/home/bill/mod_python-2.7.8/src'
make: *** [do_dso] Error 2

$ find /usr -name "ap_config_auto.h" gives me

/usr/include/apache/ap_config_auto.h

[root@.... mod_python-2.7.8]# ./configure  --with-apache=/usr/src/apache_1.3.26
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ranlib... (cached) ranlib
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr//bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) /usr/sbin/apxs
found /usr/sbin/apxs, we'll use this. Use --with-apxs to specify another.
checking for Apache libexec directory... /usr/lib/apache
checking for Apache include directory... -I/usr/include/apache
checking for --with-apache... /usr/src/apache_1.3.26
checking for --with-python... no
checking for python... (cached) /usr//bin/python
checking Python version... 2.2
checking whether Python is compiled with thread support... no threads, good
checking Python install prefix... /usr
checking what libraries Python was linked with... /usr/lib/python2.2/config/libpython2.2.a -ldl -lutil -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/include/python2.2
checking for mkdep... (cached) /usr/X11R6/bin/makedepend
creating ./config.status
creating Makefile
creating src/Makefile
creating src/libpython.module
creating Doc/Makefile
analyzing dependencies



Why make don't find an existing file ?

                                                                                             Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030521/3e06d4f9/attachment.htm
From brianh at exelixis.com  Wed May 21 19:22:49 2003
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] object isclass test in publisher
Message-ID: <3ECC3479.4050401@exelixis.com>

hello,
i noticed today while poking around in publisher.py that line 165,
testing if the resolved object is a class, needs updating.  it checks if
str(type(object)) == "<type 'class'>"; but that is not true for
new-style classes, as shown below:

  >>> class A: pass
...
  >>> str(type(A))
"<type 'class'>"
  >>> class B (object): pass
...
  >>> str(type(B))
"<type 'type'>"


brian hawthorne

From terry at i3technologies.co.uk  Thu May 22 13:45:55 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.
Message-ID: <1053607555.1100.37.camel@bigmac>

Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

===============================================================================================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

===============================================================================================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




From Hans.Yandle at cingular.com  Thu May 22 09:17:30 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23A9B@s30342g004005>

I am a newbie myself but would say that it appears you have a problem with
your Python22 install. The sys module is a builtin(internal) module--just
look at os.py. Maybe Redhat has mixed up several versions of Python (such as
1.5.X with 2.X) on the same machine and paths and/or environmental variables
are crossed.

I would suggest running Python standalone (commandline) and perform some
small actions using modules sys and os. Once that is working, build a simple
ordinary straight cgi script using the cgi module and launch it via Apache
/cgi-bin/ folder. Once that works, convert the script to accelerated
mod_python and execute it.

It might be helpful to us if you could provide more details on the Apache
server version (1.3.X or 2.X) and mod_python (2.7.X or 3.X) version you are
running along with the scripts (sample.py, two html files, form.html, and
template.html) you mentioned and references to the tutorial(s) that you feel
do not work. 

Hans

-----Original Message-----
From: Terry MacDonald [mailto:terry@i3technologies.co.uk]
Sent: Thursday, May 22, 2003 8:46 AM
To: mod_python@modpython.org
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
saga.


Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

============================================================================
===================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

============================================================================
===================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/31cbf2fb/attachment.htm
From dustin at ywlcs.org  Thu May 22 08:56:20 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:47:24 2004
Subject: [dustin@ywlcs.org: Re: [mod_python] Tutorials, FieldStorage and
	sys.py. A depressing saga.]
Message-ID: <20030522135619.GN25467@eleanor.internal.ywlcs.org>

Sorry, meant to send this to the list.

----- Forwarded message from Dustin Mitchell <dustin@ywlcs.org> -----

From: Dustin Mitchell <dustin@ywlcs.org>
To: Terry MacDonald <terry@i3technologies.co.uk>
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.

On Thu, May 22, 2003 at 01:45:55PM +0100, Terry MacDonald wrote:
>   File "/var/www/html/python/sample.py", line 90, in ?
>     form = cgi.FieldStorage()
> 
>   File "/usr/lib/python2.2/cgi.py", line 448, in __init__
>     elif sys.argv[1:]:

You're using the CGI module, but you're not using a CGI script.  The mod_python distribution has a FieldStorage class, but it's (subtly) different from the one in the Python standard 'cgi' module.

import mod_python.util
form = mod_python.util.FieldStorage(req)

Read the docs on that module for more info.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

----- End forwarded message -----

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From terry at i3technologies.co.uk  Thu May 22 19:36:24 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030522134004.GA25157@mx1.neteconomist.com>
References: <1053607555.1100.37.camel@bigmac>
	 <20030522134004.GA25157@mx1.neteconomist.com>
Message-ID: <1053628584.1100.63.camel@bigmac>

Hi again,

Thankyou very much for your replies, You seem a nice bunch in here. 
I look forward to conversing with you over time (hopefully not all bug related!)

Anyways your advice solved one issue but unfortunately moved me on to the next.  
I am reaching the end of my patience as I have tried various work arounds to my 
ills and I just go up more garden paths to more problems (this should not be that 
difficult I know!).

Forgive me but I have decided to post the code to see if you can tell what is wrong 
cos I just can't get it to work as it is supposed to. The code is primarily example 
code but has been rejigged a little while trying to get it to work.

Problems occuring now is that the subn function is giving a mulitple repeat error.
When I comment out the offending code I just get Object not found in the browser. 
Also I have to put full pathnames in for the html files otherwise they cannot be 
found (I know this can't be right - but i'm trying anything to get this to work)

Ultimately the example should print a form, fetch the contents and display them 
back to you in another page (I think!) not exactly rocket science.

Below is the .py file and the two basic html files. Enjoy !

Cheers

Terry

================================================================================
#!/usr/bin/python
                                                                                                              
from mod_python import apache
from mod_python import util
import re
                                                                                                              
# specify the filename of the template file
TemplateFile = "/var/www/html/python/template.html"
                                                                                                              
# Display  takes one parameter - a string to Display
def Display(Content):
    TemplateHandle = open(TemplateFile, "r")  # open in read only mode
    # read the entire file as a string
    TemplateInput = TemplateHandle.read()
    TemplateHandle.close()                    # close the file
                                                                                                              
    # this defines an exception string in case our
    # template file is messed up
    BadTemplateException = "There was a problem with the HTML template."
                                                                                                              
    SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
    if SubResult[1] == 0:
        raise BadTemplateException
                                                                                                              
    print "Content-Type: text/html\n\n"
    print SubResult[0]
                                                                                                              
                                                                                                              
def ProcessForm(req):
                                                                                                              
    form = util.FieldStorage(req)
                                                                                                              
    # extract the information from the form in easily digestible format
    try:
        name = form["name"].value
    except:
        # name is required, so output an error if
        # not given and exit script
        Display("You need to at least supply a name. Please go back.")
        raise SystemExit
    try:
        email = form["email"].value
    except:
        email = None
    try:
        color = form["color"].value
    except:
        color = None
    try:
        comment = form["comment"].value
    except:
        comment = None
                                                                                                              
    Output = ""  # our output buffer, empty at first
                                                                                                              
    Output = Output + "Hello, "
                                                                                                              
    if email != None:
        Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
    else:
        Output = Output + name + ".<P>"
                                                                                                              
    if color == "swallow":
        Output = Output + "You must be a Monty Python fan.<P>"
    elif color != None:
        Output = Output + "Your favorite color was " + color + "<P>"
    else:
        Output = Output + "You cheated!  You didn't specify a color!<P>"
                                                                                                              
    if comment != None:
        Output = Output + "In addition, you said:<BR>" + comment + "<P>"
                                                                                                              
    Display(Output)
                                                                                                              
###
### Begin actual script
###
                                                                                                              
#### "key" is a hidden form element with an
### action command such as "process"
#try:
#    key = form["key"].value
#    key = form["key"].value
##except:
#    key = None
                                                                                                              
#if key == "process":
#    ProcessForm(form)
#else:
#    DisplayForm()
                                                                                                              
# Open and display the form
FormFile = "/var/www/html/python/form2.html"
FormHandle = open(FormFile, "r")
FormInput = FormHandle.read()
FormHandle.close()
Display(FormInput)
                                                                         
=======================================================================================

Form2.html.........

<FORM METHOD="POST" ACTION="sample.py/processform">
      <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
      Your name:<BR>
      <INPUT TYPE=TEXT NAME="name" size=60>
      <BR>
      Email: (optional)<BR>
      <INPUT TYPE=TEXT NAME="email" size=60>
      <BR>
      Favorite Color:<BR>
      <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
      <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
      <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
      <P>
      Comments:<BR>
      <TEXTAREA NAME="comment" ROWS=8 COLS=60>
      </TEXTAREA>
      <P>
        <INPUT TYPE="SUBMIT" VALUE="Okay">
</FORM>
=======================================================================================
Template.html........

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!-- *** INSERT CONTENT HERE *** -->
  </body>
</html>
                                                                                                              


From grisha at modpython.org  Thu May 22 15:11:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
 saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
Message-ID: <20030522150301.W4076-100000@oldchief.reply.net>


Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the next.
> I am reaching the end of my patience as I have tried various work arounds to my
> ills and I just go up more garden paths to more problems (this should not be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what is wrong
> cos I just can't get it to work as it is supposed to. The code is primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple repeat error.
> When I comment out the offending code I just get Object not found in the browser.
> Also I have to put full pathnames in for the html files otherwise they cannot be
> found (I know this can't be right - but i'm trying anything to get this to work)
>
> Ultimately the example should print a form, fetch the contents and display them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
> ================================================================================
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
> =======================================================================================
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
> =======================================================================================
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From skremer at q.cis.uoguelph.ca  Thu May 22 16:39:24 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Interpreters
Message-ID: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>


Hi,

I just finished re-reading Section 4.1 yet again (for the 12th? time).  
(Wow, is that ever densly packed with important info.)

Each time I read it, I think I'm getting a clearer picture of what's going
on.  Also this list has helped me sort things out as well, but I'm still
surprised at times.  I'm wondering if the following synopsis makes sense.  
I am willing to summarize a corrected version at the end if people are
interested (let me know).

When I start Apapche mod_python not yet initialized.
  It only gets initialized when someone accesses a web-page 
  associated with a directory directive that requires mod_python.
Is that right?

When mod_python is initialized it creates an interpreter called 
"main_interpreter".  This interpreter doesn't actually run your python 
code it just generates sub interpreters which it keeps in a dictionay.

Where is the main interpreter named "main_interpreter"?  Can I access that 
somewhere?

If apache is running as multiple processes and maybe multiple threads how 
many main_interpreters are there?  Just one?


Asside: req.interpreter doesn't work for me (under 3.0.0 (was it 
added in 3.0.1 or 3.0.2) or am I confused?

[  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 76, 
[in __getattr__
[    raise AttributeError, attr
[
[AttributeError: interpreter

When do the sub-interpreters get created?

The sub-interpreters are, by default, associated associated with a virtual 
server name (but there can be more than one sub-interpreter per virtual 
server name).

Is that right?

If there are mutliple processes of apache with multiple threads, are the 
sub-interpreters shared betweenn processes and/or threads?

When a http request comes in that uses a mod_python handler, it is
assigned to a sub-interpreter.  It might be assigned to a brand new
sub-interpreter (usually if traffic on the server is reaching a new high
level), or a previously used sub-interpreter (if traffic is less than it 
was at peak).  (Assuming we keep hitting the same virtual 
server/directory/etc.)

Is that right?

Sub-interpreters are never destoryed, so the number of sub-interpreters 
increases monotonically from when apache is started until it dies and 
your chances of getting a used sub-interpreter goes up the longer apache 
has been running.  Also the longer apache is running the more memory 
mod_python would proabely use.

Is that right?

If apache reduces (kills) the processes it is running, are any
sub-interpreters affected?

If you happen to get a re-used sub-interpreter, you will also get saddled 
with stuff that was defined in it before.  

This can be a good thing or a bad thing.  If you are accessing a database, 
the sub-interpreter may already have an open DB connection which can save 
you time.  It may also have already loaded some of the modules that your 
code calls, which can save time.  Unfortunately this can be bad as well.

One case occurs when you modify python code that is included as a module.
If you get a sub-interpreter where the original version of the module
has already been included, it will use that instead of the new one.

Another example of when getting a used sub-interpreter is bad might be:  
User 1 writes a script that changes the sys.path variable and loads a
module that they have written called MyModule.  User 2 writes a script
that changes the sys.path variable and loads a different module that thay
have written called MyModule also!  Someone requests a page from User 1
and the first version of MyModule is loaded.  Then someone else requests a
page from user 2, but the second version of MyModule is not loaded since
the sub-interpreter thinks it has already loaded MyModule.  User 2's
script then goes uses the function in the wrong version of MyModule.

Is this something that could happen?  I'm 
wondering if there is an exploit that could be accomplished this way?

Obviously the solution to the above problem is to use a different 
sub-interpreter naming scheme with "PythonInterpPerDirectory or 
PythonInterpPerDirective".

Does that make sense?

Any corrections and/or comments much appreciated.

	Stefan

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca

From ireneponti at yahoo.com  Thu May 22 14:05:02 2003
From: ireneponti at yahoo.com (Irene Ponti)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] mod_python file uploading question.
Message-ID: <20030522210502.71765.qmail@web40701.mail.yahoo.com>

Hi to all.

How can I tell to mod_python to stop uploading a file
larger than 1Mb?

Thank you.


__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From grisha at modpython.org  Thu May 22 17:30:49 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Interpreters
In-Reply-To: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>
Message-ID: <20030522171106.I5079-100000@oldchief.reply.net>



On Thu, 22 May 2003, Stefan C. Kremer wrote:

> When I start Apapche mod_python not yet initialized.
>   It only gets initialized when someone accesses a web-page
>   associated with a directory directive that requires mod_python.
> Is that right?

yes

> When mod_python is initialized it creates an interpreter called
> "main_interpreter".  This interpreter doesn't actually run your python
> code it just generates sub interpreters which it keeps in a dictionay.

correct

> Where is the main interpreter named "main_interpreter"?  Can I access that
> somewhere?

It is named inside the C code for mod_python. If force your interpreter
name by using "PythonInterpreter main_interpreter", then mod_python won't
create subinterpreters, it will just select "main_interpreter" to run
things.

> If apache is running as multiple processes and maybe multiple threads how
> many main_interpreters are there?  Just one?

As many as there are processes.

> Asside: req.interpreter doesn't work for me (under 3.0.0 (was it
> added in 3.0.1 or 3.0.2) or am I confused?

3.0.0 is a beta version, you should stay away from it anyway.

> When do the sub-interpreters get created?

on first use

> The sub-interpreters are, by default, associated associated with a virtual
> server name (but there can be more than one sub-interpreter per virtual
> server name).
>
> Is that right?

yes, if you use InterpPerDirective or InterpPerDirectory

> If there are mutliple processes of apache with multiple threads, are the
> sub-interpreters shared betweenn processes and/or threads?

between threads within a process - yes, between processes - no.

> When a http request comes in that uses a mod_python handler, it is
> assigned to a sub-interpreter.  It might be assigned to a brand new
> sub-interpreter (usually if traffic on the server is reaching a new high
> level), or a previously used sub-interpreter (if traffic is less than it
> was at peak).  (Assuming we keep hitting the same virtual
> server/directory/etc.)
>
> Is that right?

sort-of... Apache will assign a request to one of it's children/threads to
be serviced. Mod_python will determine subinterpreter name based on
config, if this this subinterpreter already exists within this child, it's
reused, otherwise a new one is created. Server load is only one of a few
reasons why there may be a new child process.

> Sub-interpreters are never destoryed, so the number of sub-interpreters
> increases monotonically from when apache is started until it dies and
> your chances of getting a used sub-interpreter goes up the longer apache
> has been running.

true (note though that there is a finite number of subinterpeters, e.g. if
you're using the default interp per vrtual host, then there will only be
as many subinterpreters per process as there are virtual hosts - thus it
increases up to a point when all possible subinterpeters are created, then
it stops)

> Also the longer apache is running the more memory mod_python would
> proabely use.

this depends on how your code is written. mod_python itself has no known
memory leaks - but if you fnd any, let us know!

> If apache reduces (kills) the processes it is running, are any
> sub-interpreters affected?

well - everything in the process (inclduing subinterpreters) is affected.

> If you happen to get a re-used sub-interpreter, you will also get saddled
> with stuff that was defined in it before.

yes

> This can be a good thing or a bad thing.  If you are accessing a database,
> the sub-interpreter may already have an open DB connection which can save
> you time.  It may also have already loaded some of the modules that your
> code calls, which can save time.  Unfortunately this can be bad as well.
>
> One case occurs when you modify python code that is included as a module.
> If you get a sub-interpreter where the original version of the module
> has already been included, it will use that instead of the new one.

But how is this bad? This is one of the main reasons mod_python is so fast
- module code is only interpreted once (as opposed to every request with
CGI).

> Another example of when getting a used sub-interpreter is bad might be:
> User 1 writes a script that changes the sys.path variable and loads a
> module that they have written called MyModule.  User 2 writes a script
> that changes the sys.path variable and loads a different module that thay
> have written called MyModule also!

this is precisely why you have subinterpreters - you need to make sure
that the users are running in separate subinterpreters.

> Obviously the solution to the above problem is to use a different
> sub-interpreter naming scheme with "PythonInterpPerDirectory or
> PythonInterpPerDirective".

exactly!

Grisha

From Hans.Yandle at cingular.com  Thu May 22 17:55:14 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23AA7@s30342g004005>

Well, I decided to make a working sample out of your code so here is my
working version. Use at will. By no means is this perfect but it does work
for me. Example URL:
http://localhost/test/sample/ProcessForm/?name=Hans&color=swallow

=== sample.py ===
from mod_python import apache
import string

### File Parameter Options ###
Template = "/usr/local/python/template.html" # filename of template file

def EvalTemplate(Content):
    (Result, ErrorMsg) = (None, None)
    try:
        TemplateFile = file(Template, "r") # open in read only mode
        TemplateData = TemplateFile.read() # read in the contents of the
file
        TemplateFile.close() # close the file
    except IOError, e:
        ErrorMsg = "Error! Unable to read contents of template file %s.
<br>%s" % (Template, e)
    except:
        ErrorMsg = "Error! Unknown error has occured."
    if not ErrorMsg:
        if string.find(TemplateData, "<!--*** INSERT CONTENT HERE ***-->")
is not -1:
            Result = string.replace(TemplateData, "<!--*** INSERT CONTENT
HERE ***-->", Content)
        else:
            ErrorMsg = "Invalid template file format. Missing insert comment
tag. Please fix %s." % Template
    return (Result, ErrorMsg)

def SendHTML(Output=None, ErrorMsg=None):
    if not ErrorMsg:
        s, ErrorMsg = EvalTemplate(Output)
    if ErrorMsg:
        s = """<html><head><title>Mod_Python Sample Using a Template: Error
Message</title></head>
               <body><p>An error has occured. Please correct the
problem.</p>
               <pre>%s</pre></body></html>""" % ErrorMsg
    return s

def ProcessForm(req, name=None, email=None, color=None, comment=None):
    ErrorMsg = None
    Output = "Hello, "
            
    if name:
        if email:
            Output = Output + "<a href=mailto:%s>%s</a>.<p>" % (email, name)
        else:
            Output = Output + "%s.<p>" % name
    else:
        ErrorMsg="You need to at least supply a name. Please go back."
        
    if color=="swallow":
        Output = Output + "You must be a Monte Python fan.<p>"
    elif color != None:
        Output = Output + "Your favorite color was %s<p>" % color
    else:
        Output = Output + "You cheated! You didn't specify a color!<p>"
        
    if comment:
        Output = Output + "In addition, you said: <br>%s<p>" % comment
        
    req.content_type = "text/html"
    req.send_http_header()
    
    return SendHTML(Output, ErrorMsg)
=== end ===
=== template.html ===
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!--*** INSERT CONTENT HERE ***-->
  </body>
</html>
=== end ===

Have fun,

Hans

-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Thursday, May 22, 2003 3:11 PM
To: Terry MacDonald
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A
depressing saga.



Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug
related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the
next.
> I am reaching the end of my patience as I have tried various work arounds
to my
> ills and I just go up more garden paths to more problems (this should not
be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what
is wrong
> cos I just can't get it to work as it is supposed to. The code is
primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple
repeat error.
> When I comment out the offending code I just get Object not found in the
browser.
> Also I have to put full pathnames in for the html files otherwise they
cannot be
> found (I know this can't be right - but i'm trying anything to get this to
work)
>
> Ultimately the example should print a form, fetch the contents and display
them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
>
============================================================================
====
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content,
TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name +
"</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
>
============================================================================
===========
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an
African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
>
============================================================================
===========
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/50bf5078/attachment.htm
From dustin at ywlcs.org  Thu May 22 19:09:17 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
Message-ID: <20030523000917.GV25467@eleanor.internal.ywlcs.org>

>     print "Content-Type: text/html\n\n"
>     print SubResult[0]

It looks like you're still writing a CGI script, since you're using 'print'.
If you're taking the time to install and use mod_python, I would suggest
using the publisher handler or writing your own handlers, as those truly take
advantage of the status of mod_python as a handler.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From rk at dat.cz  Fri May 23 09:21:51 2003
From: rk at dat.cz (Radek Kanovsky)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030523000917.GV25467@eleanor.internal.ywlcs.org>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
	<20030523000917.GV25467@eleanor.internal.ywlcs.org>
Message-ID: <20030523072151.GB549@dat.cz>

On Thu, May 22, 2003 at 07:09:17PM -0500, Dustin Mitchell wrote:

> >     print "Content-Type: text/html\n\n"
> >     print SubResult[0]
> 
> It looks like you're still writing a CGI script, since you're using 'print'.
> If you're taking the time to install and use mod_python, I would suggest
> using the publisher handler or writing your own handlers, as those truly take
> advantage of the status of mod_python as a handler.

You can easily force print statement to work in mod_python. Request
object has method 'write' and it is only method that print statement
calls on destination object. So you can replace sys.stdout with req.


from mod_python import apache
import sys

def handler(req):
    sys.stdout = req
    print 'hello world'
    return apache.OK


Regards,

Radek Kanovsky
From mike.looijmans at asml.com  Fri May 23 09:47:33 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A
	depressingsaga.
Message-ID: <01c320ff$91b7d880$926a1e6e@wsasd464>

>You can easily force print statement to work in mod_python. Request
>object has method 'write' and it is only method that print statement
>calls on destination object. So you can replace sys.stdout with req.


Drawback is that there is only ONE sys.stdout per interpreter. So make very
sure that only ONE thread can write to sys.stdout...
cgihandler does this, and the result is that only one thread can be active.
With the worker mpm on apache, the python/cgi system will effectively become
single-threaded.

The other way around is much better: let all your handlers receive a file like
"output" object, and write to that object. When using CGI, you assign
sys.stdout, and in mod_python, you can use the request object. This allows
multithreading in mod_python, a must-have if you use any thread-based apache
MPM.

In fact, I let the CGI version of the handler create a Request-like object
(mimic) based on environ strings, which I pass to the mod_python based
scripts. This yields max performance on mod_python, and an unnoticable drop on
CGI based Python scripting (the overhead of starting a new interpreter process
is much, much bigger than the creation of the reqeust object).

Mike.


From simen at lunarlounge.org  Mon May 26 01:52:17 2003
From: simen at lunarlounge.org (Simen Brekken)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] 
	Strange behaviour using PythonHandler module::ClassName.method
Message-ID: <001901c32318$aca09c20$0200000a@MOONRAKER>

Running Apache 2.0 on Windows XP

I'm having some wierd behaviour with the PythonHandler module::ClassName.method directive:

.htaccess:
-----------
AddHandler python-program .py
PythonFixupHandler pso.modpython::fixup
PythonLogHandler pso.modpython::cleanup

PythonHandler test::TestHandler.handle

test.py:
-----------
class TestHandler:
 def __init__(self, req):
  pass

 def handle(self, req):
  req.pso().send_http_header()

  print "Hello world from TestHandler3!"
  return OK

def handler(self, req):
 pass


Now for the wierd part, if I try the url http://localhost/test.py everything works as planned, prints out everything, but if I comment out the "handler" function of the module i get a 404 error. What eludes me is why it is required since it's not referenced anywhere? The pso fixups only add sessions and a reference to that session object on the request so it shouldn't interfere.

Also I'm searching for a way to make mod_python reload *everything* for each request, I find myself having to restart the webserver even after making changes.

And lastly, the error handling/reporting seems very flawed, even if a handler method is required in the actual method, I get no messages in the error log about it.

___
SIMEN BREKKEN / born to synthesize.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030526/6443b8ed/attachment.htm
From i at mindlace.net  Tue May 27 13:30:44 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] publisher frustration
Message-ID: <3ED3CAF4.1060108@mindlace.net>

I'm trying to make a simple function work using the publisher; I get a 
404 if I try to access a function in the method I want to use.

Here is what I think should be the appropriate entry in my <VirtualHost> 
directive:

     <Directory /slideshow/>
         AddHandler python-program .py
	#I added to the python path in frustration...
         PythonPath "sys.path+['/home/mindlace/site/slideshow']"
         PythonHandler mod_python.publisher
         PythonDebug on
     </Directory>

This is (the relevant portion of) slide_view.py:

body = ("<html><head><title>resolution</title>"
         "<body><p>The resolution is %s</p></body>"
         "</html>")

def showResolution(req):
     if 'Cookie' in req.headers_in:
         Cookies = SmartCookie().load(req.headers_in['Cookie'])
         if 'resolution' in Cookies:
             resolution = Cookies['resolution'].split('x')
     else:
         resolution = "Not Found"
     return body % resolution

So why does this do nothing?

http://mindlace.net/slideshow/slide_view.py/showResolution

Thanks for any pointers,

~mindlace


From graeme_matthew at hotmail.com  Wed May 28 13:18:09 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>

Hi all

sorry to bug you all, but I am at the point of giving up. I have taken off 2 
days so I can do some python development and in true fashion I still after 
bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
windows !!! and I hate windows !!!!! this make me even more angry :-)

I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
installed by default and it is causing lots of headaches !

I cannot run the ./configure file as apxs is nowhere to be found on the 
machine, yet there is dso support as they have included mod_perl etc. I have 
now spent the last 3 hours trying to get the httpd-devel files, and this is 
even worse as each time you get an rpm then there is another 50 rpms 
dependencies (well not that much)

Does anyone know where one can get a mod_python binary install for linux 
just like the one that exists for Windows as I cannot afford to spend my 2 
coding days trying to get mod_python working, if there is no such file then 
thats fine, ill forget it all together.

Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
installation and getting building apache from scratch to get all the devel 
files etc for modPython ?

Any help will be appreciated as I do not know what to do now ...

Many thanks

_________________________________________________________________
ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
great for sharing photos and documents. Go to  
http://join.msn.com/?page=dept/home&pgmarket=en-au

From jdavis-mod-python at empires.org  Tue May 27 21:47:26 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
References: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <200305272147.26380.jdavis-mod-python@empires.org>

On Tuesday 27 May 2003 08:18 pm, Graeme Matthew wrote:
> Hi all
>
> sorry to bug you all, but I am at the point of giving up. I have taken off
> 2 days so I can do some python development and in true fashion I still
> after bloody 8 hours cannot get modpython to work on linux that took 5
> minutes on windows !!! and I hate windows !!!!! this make me even more
> angry :-)
>
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is
> installed by default and it is causing lots of headaches !
>
> I cannot run the ./configure file as apxs is nowhere to be found on the
> machine, yet there is dso support as they have included mod_perl etc. I

The first thing that comes to my mind is that you should be able to install 
apxs through some kind of apache development package. Check around for some 
rpms, and then it should configure fine.

Good luck,
	Jeff Davis

From j.healy at ugrad.unimelb.edu.au  Wed May 28 16:55:37 2003
From: j.healy at ugrad.unimelb.edu.au (Joseph Hepburne Healy)
Date: Fri Jan  9 21:47:24 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <Pine.OSF.4.10.10305281648590.19441-100000@cassius.its.unimelb.edu.au>


Hi,

I have gone through similar difficulties with mandrake 9.0 and found it
was simplest to uninstall mandrakes apache and download source for apache
2 and modpython 3 and build
both of them. It was relatively easy, the only issue was the location of
the configuration files (/usr/local/apache2/conf i think) rather than /etc
but that is just a configure option (haven't had time to fix it)

If you install httpd-devel or apache-devel (can't remember what mandrake
calls it) you might get the apxs file. To find out which package doing:

urpmf apxs

should tell you what package to install. When using mandrake the easiest
way to install packages is to use (as root):

urpmi packagename

this should solve the dependencies and prompt you for the correct cds to
insert.

Hope this helps

Joe

On Wed, 28 May 2003, Graeme Matthew wrote:

> Hi all
> 
> sorry to bug you all, but I am at the point of giving up. I have taken
off 2 
> days so I can do some python development and in true fashion I still after 
> bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
> windows !!! and I hate windows !!!!! this make me even more angry :-)
> 
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
> installed by default and it is causing lots of headaches !
> 
> I cannot run the ./configure file as apxs is nowhere to be found on the 
> machine, yet there is dso support as they have included mod_perl etc. I have 
> now spent the last 3 hours trying to get the httpd-devel files, and this is 
> even worse as each time you get an rpm then there is another 50 rpms 
> dependencies (well not that much)
> 
> Does anyone know where one can get a mod_python binary install for linux 
> just like the one that exists for Windows as I cannot afford to spend my 2 
> coding days trying to get mod_python working, if there is no such file then 
> thats fine, ill forget it all together.
> 
> Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
> installation and getting building apache from scratch to get all the devel 
> files etc for modPython ?
> 
> Any help will be appreciated as I do not know what to do now ...
> 
> Many thanks
> 
> _________________________________________________________________
> ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
> great for sharing photos and documents. Go to  
> http://join.msn.com/?page=dept/home&pgmarket=en-au
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From kaback at kaback.de  Wed May 28 12:57:54 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] strange util.FieldStorage() behavior
Message-ID: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>

I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

i wrote a simple handler script that only parses its "cgi parameters"
using util.FieldStorage() and returns apache.OK

the script worked fine so far, but everytime the script runs, the memory
used by apache rises a few kbyte.

next i removed the util.FieldStorage() function from the script, with the
result, that the memory usage remains constant.

because of that i searched for an other way to get access to the committed
form parameters and found the mod_python.publisher handler.

i added the publisher handler to my apache config and wrote a file 
"hello.py" with the following content:
--------
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what
-------

now a request with the url http://localhost/hello/say?what=blahblah
returns the expected "I am saying blahblah

i wrote a script, that calls wget on that url within an endless loop:
------- getit.pl
while(1) {
        system("wget -O test.htm http://localhost/hello/say?what=blah");
}
-------

next i wrote a verry simple "tool" that monitors memory usage of my
http-servers
------- memwatch.pl
while(1)
{
  open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
  while(<OUTPUT>)
  {
    chomp();
    my($first, $second) = split();
    my($sec, $min, $hour) = localtime(time);
    print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
  }
  sleep(1);
}
-------

and, the unexpected happens, runnig memwatch.pl while running getit.pl
shows the constant growing memory usage of the httpd processes.

the longer the string after http://localhost/hello/say?what= is, the
more the memory seems to grow each time.

reading the docs, i found, that even mod_python.publisher uses the
functionality of util.FieldStorage(), which i wanted not to use
because of the strange things i figured out during my first test
(abovementioned)

for me at the moment this looks like a amemory leakage in 
util.FieldStorage. i searched the archive and did not found anything 
regarding that behavior.

so my question is: Am I doing something wrong? 

thanks in advance
Karsten

From graeme_matthew at hotmail.com  Wed May 28 21:31:11 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F493Bo1hyOwlZz00027cd1@hotmail.com>

Hi all me again after so many hours, jeez im thinking of just using windows 
but I can convince myself !!!

ok I got the apache source (2.0.45) installed like adream and is up and 
running but when I run the modpython source install it wont even work here 
is an extract

mod_python.c: In function `PythonPostReadRequestHandler':
mod_python.c:1719: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1726: parse error before '*' token
mod_python.c: In function `PythonTransHandler':
mod_python.c:1727: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1729: parse error before '*' token
mod_python.c: In function `PythonTypeHandler':
mod_python.c:1730: `req' undeclared (first use in this function)
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/isixhosa/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
[root@amazulu mod_python-3.0.3]#


please any help is good

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From neo at https.ru  Wed May 28 15:43:38 2003
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <354390192.20030528154338@https.ru>


  I also suspect some memory leakage caused by mod_python3. I do not
have time to investigate what and where is going on. I use mod_python
with much more complicated code (internet shop, for example), and I
saw constant memory growth. Though it's small, as compared to the
total memory apache2 + mod_python3 take, that gives rise to somewhat
bad feeling. :)


> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK

> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.

> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.

> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.

> i added the publisher handler to my apache config and wrote a file 
> "hello.py" with the following content:
> --------
> """ Publisher example """

> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------

> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah

> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------

> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------

> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.

> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.

> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)

> for me at the moment this looks like a amemory leakage in 
> util.FieldStorage. i searched the archive and did not found anything 
> regarding that behavior.

> so my question is: Am I doing something wrong? 

> thanks in advance
> Karsten


--- 
Neo Eureka / mailto:neo@https.ru

From kaback at kaback.de  Wed May 28 14:16:00 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <354390192.20030528154338@https.ru>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
Message-ID: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>

hi

On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
> 
>   I also suspect some memory leakage caused by mod_python3. I do not
> have time to investigate what and where is going on. I use mod_python
> with much more complicated code (internet shop, for example), and I
> saw constant memory growth. Though it's small, as compared to the
> total memory apache2 + mod_python3 take, that gives rise to somewhat
> bad feeling. :)
>

well, i'am using  python within much more complicated code too, in fact,
that code is so complicated, that each time it is requested the memory
usage of my apache is rising about 64kb. i'am using POST method to
submit xml content and the code is called many times within one second.

are there other methods to get POSTed form data from within an mod_python 
script than util.FieldStorage()?

Karsten

From davidf at sjsoft.com  Wed May 28 15:24:08 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
	<20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <3ED4B878.3020608@sjsoft.com>

Karsten Backhaus wrote:

>hi
>
>On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
>  
>
>>  I also suspect some memory leakage caused by mod_python3. I do not
>>have time to investigate what and where is going on. I use mod_python
>>with much more complicated code (internet shop, for example), and I
>>saw constant memory growth. Though it's small, as compared to the
>>total memory apache2 + mod_python3 take, that gives rise to somewhat
>>bad feeling. :)
>>    
>>
>well, i'am using  python within much more complicated code too, in fact,
>that code is so complicated, that each time it is requested the memory
>usage of my apache is rising about 64kb. i'am using POST method to
>submit xml content and the code is called many times within one second.
>  
>
Hmmm ... never noticed this before, looks like our app is doing the same ...

>are there other methods to get POSTed form data from within an mod_python 
>script than util.FieldStorage()?
>
>Karsten
>
util.FieldStorage is implemented in pure Python, so you can look at 
exactly what it does to either debug the memory growth or write your own 
implementation.

David

From grisha at modpython.org  Wed May 28 10:47:25 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <20030528104439.O96588-100000@oldchief.reply.net>


I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
I used ab (nice tool that comes with Apache) to run 100000 requests, and I
have not seen any grwoth (except initally, but that's normal) in httpd's
memory consumption.

Grisha

On Wed, 28 May 2003, Karsten Backhaus wrote:

> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2
>
> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK
>
> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.
>
> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.
>
> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.
>
> i added the publisher handler to my apache config and wrote a file
> "hello.py" with the following content:
> --------
> """ Publisher example """
>
> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------
>
> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah
>
> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------
>
> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------
>
> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.
>
> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.
>
> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)
>
> for me at the moment this looks like a amemory leakage in
> util.FieldStorage. i searched the archive and did not found anything
> regarding that behavior.
>
> so my question is: Am I doing something wrong?
>
> thanks in advance
> Karsten
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dustin at ywlcs.org  Wed May 28 10:34:44 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528104439.O96588-100000@oldchief.reply.net>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<20030528104439.O96588-100000@oldchief.reply.net>
Message-ID: <20030528153444.GI22286@eleanor.internal.ywlcs.org>

On Wed, May 28, 2003 at 10:47:25AM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
> I used ab (nice tool that comes with Apache) to run 100000 requests, and I
> have not seen any grwoth (except initally, but that's normal) in httpd's
> memory consumption.

Is it possible there's a reference cycle buried within the FieldStorage
class?  Perhaps some strategic application of the weakref module could
straighten things out..

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From graeme_matthew at hotmail.com  Thu May 29 10:25:18 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] Cannot find mod_python.so 
Message-ID: <BAY1-F23HYt2gYCL6nt000050c0@hotmail.com>

Hi all me again

well im still trying to get this stuff working and it aint happening ... sob

I have installed apache from source with --enable-so

I have run modpython from source using
--with-python
--with-apxs

it all seemed to go fine

I have added all the appropriate directives in httpd.conf

But when I start the apache server I get this

Cannot load /usr/local/apache2/modules/mod_python.so into server

Please, any help will be appreciated

Graeme

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From graeme_matthew at hotmail.com  Thu May 29 21:37:35 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] ImportError: Cannot find _apache
Message-ID: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>

Hi all me again ....

Im almost there ...

I keep on getting the following error in my cgi-script, on the command line, 
I have included my httpd.conf directives and some additional information...

Any help would be much appreciated ...

Ta


PYTHON INTERPRETER:

[root@amazulu cgi-bin]# /usr/local/bin/python2.2
Python 2.2.2 (#1, May 29 2003, 17:09:39)
[GCC 3.2.2 (Mandrake Linux 9.1 3.2.2-3mdk)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>>from mod_python import apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
67, in ?
    import _apache
ImportError: No module named _apache
>>>import mod_python
>>>from mod_python import apache
>>>

Wierd !!!

### HTTPD CONF
<Directory "/www/bi/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
    #AddHandler python-program .py this was a problem
    AddHandler cgi-script .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

#SCRIPT

#! /usr/local/bin/python2.2


import MySQLdb
import sys
sys.path.append('/www/bi/classes')

from mod_python import apache
from HtmWindow import getHtmlWindow

def query(req):

blah blah blah

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From dustin at ywlcs.org  Thu May 29 08:45:00 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] ImportError: Cannot find _apache
In-Reply-To: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
References: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
Message-ID: <20030529134459.GR22286@eleanor.internal.ywlcs.org>

On Thu, May 29, 2003 at 09:37:35PM +1000, Graeme Matthew wrote:
> >>>from mod_python import apache
> Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
> 67, in ?
>    import _apache
> ImportError: No module named _apache
> >>>import mod_python
> >>>from mod_python import apache

The reason you don't get an error the next time is this:  During the first
import, Python partially loads and constructs the mod_python.apache module,
until it gets to "import _apache", which causes an exception.  However, at
that point the mod_python.apache module is *loaded*, it's just not completely
initialized.  So when you get to the second from..import, Python finds that
mod_python.apache is already loaded and simply returns a reference to the
loaded (but still not initialized) module.

The reason _apache can't be found is that it's the mechanism by which Python
can communicate with the Apache process in which it is running.  Since, at
the command line, you're not running in an Apache process, there's no such
module.  Specifically, that module is provided by mod_python.so, which is
loaded by Apache when it starts up, but not loaded or even referenced by the
command-line-invoked Python.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From poeml at suse.de  Fri May 30 13:47:32 2003
From: poeml at suse.de (Peter Poeml)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] LONG_LONG -> PY_LONG_LONG in python-2.3b1
Message-ID: <20030530114732.GK3798@suse.de>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030530/168caf14/attachment.bin
From tohmas.ash at takashi.zzn.com  Fri May 30 17:37:57 2003
From: tohmas.ash at takashi.zzn.com (tohmas ash)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] force download and content-disposition
Message-ID: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>

hello, I'm a mod_python's newbie , and I use it with postgresql for 
a web application...

In my software, I upload some files with a form to a bytea in 
postgresql, no problems for that. But after, I want to force the 
download via a link...

Before I use PHP for my web application, I know how do that in php 
it's like that:
"
header("Content-type: application/force-download");
header("Content-Disposition: attachment; filename=$filename");
readfile("$path"); 
"

I know how set the configuration of the "content-type" with 
mod_python,
But I don't know how do the same whith the "Content-Disposition" ...
I have found the same question in the mailing list but without 
answer ...

so if you can help me, thanks in advance for your answer.

ps: sorry for my english, I'm a french boy ^_^


Get your Free E-mail at http://takashi.zzn.com
___________________________________________________________
Get your own Web-based E-mail Service at http://www.zzn.com
From grisha at modpython.org  Fri May 30 19:12:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] force download and content-disposition
In-Reply-To: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>
Message-ID: <20030530191059.N36634-100000@oldchief.reply.net>



On Fri, 30 May 2003, tohmas ash wrote:

> Before I use PHP for my web application, I know how do that in php
> it's like that:
> "
> header("Content-type: application/force-download");
> header("Content-Disposition: attachment; filename=$filename");

In mod_python it's:

req.headers_out["Content-type"] = "application/force-download"
req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename

Grisha

From i at mindlace.net  Sat May 31 22:04:25 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <2147483647.1054418665@[10.0.1.2]>

--On 19 Monday, May 2003 15:59 -0500 ganapathy murali krishnan 
<gmurali@cs.uchicago.edu> wrote:

> Hope you find the code useful.
>
> - Murali
>
> ------ translate.py ------------
> from mod_python import apache, util
> from utils import urls
> import os, string, config

This code is very useful, but I get an import error on utils; What utils 
module are you using?

Thanks,
~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/9f7825bc/attachment.bin
From i at mindlace.net  Sat May 31 22:47:23 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 21:47:25 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <2147483647.1054418665@[10.0.1.2]>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu> <2147483647.1054418665@[10.0.1.2]>
Message-ID: <2147483647.1054421243@[10.0.1.2]>

--On 31 Saturday, May 2003 22:04 -0700 emf <i@mindlace.net> wrote:
>> ------ translate.py ------------
>> from mod_python import apache, util
>> from utils import urls
>> import os, string, config
>
> This code is very useful, but I get an import error on utils; What utils
> module are you using?

Sigh. Obviously i should just use urls.py.

I assume you mean to use req.get_config() instead of trying to import 
config?

~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/c0066a84/attachment.bin
From cblunck2000 at yahoo.com  Thu May  1 20:23:12 2003
From: cblunck2000 at yahoo.com (Christopher Blunck)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] restricted execution mode and PyXML
Message-ID: <20030502032312.16834.qmail@web10604.mail.yahoo.com>

Hi all-

Am working with ZSI under mod_python.  The problem I'm
running into is that ZSI imports PyXML, which uses
dynamic module importing to load encoders for various
xml codecs (UTF-8 being the most common encoder). 
When the PyXML code tries to do the dynamic module
import, the Python interpretter prevents it with an
error something like "cannot dynamically import module
during restricted execution mode".  Forgive me for not
quoting the exact error, as I'm currently upgrading
the OS on that box right now to RH 9.

This occurs with the latest mod_python (3.0.3) with
PyXML 0.7.1 and httpd 2.0.40.

Has anyone else had success in importing PyXML modules
within code run by modpython?

Or, does anyone have any information they'd be willing
to share to help me out (e.g. "you might try and check
out XXX or YYY").  Anything would be useful to me at
this point.




-c

__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From max.zhang at converzal.com  Fri May  2 19:28:36 2003
From: max.zhang at converzal.com (max.zhang)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] restricted execution mode and PyXML
References: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <003a01c3109d$f8fc9ac0$1700a8c0@converzamax>

I met the same problem while calling raw_data.encode('utf-8','replace') 


System :
            RH 8
            mod_python 3.0.3
            python2.2
            apache 2.0

----- Original Message ----- 
From: "Christopher Blunck" <cblunck2000@yahoo.com>
To: <mod_python@modpython.org>
Sent: Friday, May 02, 2003 11:23 AM
Subject: [mod_python] restricted execution mode and PyXML


> Hi all-
> 
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder). 
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
> 
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
> 
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
> 
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
> 
> 
> 
> 
> -c
> 
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
From vjb at vuit.com  Fri May  2 07:36:11 2003
From: vjb at vuit.com (Vincent J. Buonassisi)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>

hi,

i had the same problem w/ the same environment (rh 8, python 2.2.1, 
mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
problem was to install python 2.2.2.

cheers,

On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:

> Hi all-
>
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder).
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
>
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
>
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
>
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
>
>
>
>
> -c
>
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mpmlopes at clix.pt  Fri May  2 17:52:48 2003
From: mpmlopes at clix.pt (Marco Lopes)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] problem using apache.parse_qsl
Message-ID: <3EB2A260.7050702@clix.pt>

I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying 
to use apache.parse_qsl to parse que contents of the POST, but i'm 
getting this error message:

Mod_python error: "PythonHandler template"

Traceback (most recent call last):

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
320, in HandlerDispatch
     module = import_module(module_name, config)

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
499, in import_module
     module = imp.load_module(mname, f, p, d)

   File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
     parse_qsl = apache.parse_qsl

AttributeError: 'module' object has no attribute 'parse_qsl'

I looked trough the documentation and the didn't find any reference to 
the function beeing deprecated so i think i'm doing something wrong, the 
code i'm using and that is causing the error is:


from mod_python import apache
 

parse_qsl = apache.parse_qsl


Can anyone give me a clue of what am i doing wrong?

From grisha at modpython.org  Fri May  2 14:12:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] problem using apache.parse_qsl
In-Reply-To: <3EB2A260.7050702@clix.pt>
Message-ID: <20030502141049.O87074-100000@oldchief.reply.net>


http://www.modpython.org/live/current/doc-html/pyapi-util-funcs.html

from mod_python import util

parse_qsl = util.parse_qsl

:-)

On Fri, 2 May 2003, Marco Lopes wrote:

> I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying
> to use apache.parse_qsl to parse que contents of the POST, but i'm
> getting this error message:
>
> Mod_python error: "PythonHandler template"
>
> Traceback (most recent call last):
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 320, in HandlerDispatch
>      module = import_module(module_name, config)
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 499, in import_module
>      module = imp.load_module(mname, f, p, d)
>
>    File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
>      parse_qsl = apache.parse_qsl
>
> AttributeError: 'module' object has no attribute 'parse_qsl'
>
> I looked trough the documentation and the didn't find any reference to
> the function beeing deprecated so i think i'm doing something wrong, the
> code i'm using and that is causing the error is:
>
>
> from mod_python import apache
>
>
> parse_qsl = apache.parse_qsl
>
>
> Can anyone give me a clue of what am i doing wrong?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 14:36:19 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
Message-ID: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>

Hi,

I'm new to this list and apologize in advance if I've missed the obvious.
I've searched the archives and found a couple similar instances of my
problem but also think that recent changes should have fixed what I'm
seeing. Hence, this post.

I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
point I get:

Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"

Before installing, I updated the entire ports collection source so I should
be current in that regard. As far as I can tell from reading the port
Makefile in Apache2, threads are enabled. So I didn't modify anything, just
ran make, make install.

I remain confused about how to modify httpd.conf, in spite of the message at
the end of the make install of mod_python, which talks about setting
PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
of the error I'm seeing? Or is something else wrong?

Also, could someone show me a slightly more explicit (so to speak) snippet
of httpd.conf that correctly modifies the standard one placed by a ports
installation on FreeBSD? I just want the minimum mods to httpd.conf to
confirm functionality before proceeding to other setups.

Again, sorry if I'm missing the obvious. Anyone with the time to help, many
thanks in advance.

Steve Holmlund

From grisha at modpython.org  Sat May  3 22:40:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>
Message-ID: <20030503223914.T10690-100000@oldchief.reply.net>


You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"
>
> Before installing, I updated the entire ports collection source so I should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything, just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help, many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 22:36:29 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <20030503223914.T10690-100000@oldchief.reply.net>
Message-ID: <ACECLHIPFJLGGDMIIFBGMEJJCKAA.sholmlund@coastside.net>

Thank you! That worked.

I did see that message but my review of the Apache Makefile had me convinced
that the standard port for Apache had threads enabled. Sorry for my
ignorance. I should have tried that first. Not being a programmer, one of
the appeals of FreeBSD is the ports collection. I get in trouble when I have
to step beyond those bounds.

Appreciate the response.
Steve



-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Saturday, May 03, 2003 7:41 PM
To: Steve Holmlund
Cc: mod_python@modpython.org
Subject: Re: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue



You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"
>
> Before installing, I updated the entire ports collection source so I
should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything,
just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message
at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the
cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help,
many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From conrad at hep.caltech.edu  Sun May  4 00:47:59 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
References: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
Message-ID: <1052034479.4050.13.camel@Presario>

Hi

This didn't work for me: on Redhat 9 (which comes with Python 2.2.2) the
only way I could solve the problem was to pre-import the offending files
outside the handler function. E.g. in my case

# Added to avoid the error:
# 'RuntimeError: cannot unmarshal code objects in restricted execution mode'
# That means that other encodings will make the query fail!
mod = __import__('encodings.utf_8',globals(),locals(),'*')
mod = __import__('encodings.utf_16_be',globals(),locals(),'*')

which is a hack since it allows only these two encodings to be used.

If anybody has a better fix, please let me know!

Cheers

Conrad

On Fri, 2003-05-02 at 07:36, Vincent J. Buonassisi wrote:
> hi,
> 
> i had the same problem w/ the same environment (rh 8, python 2.2.1, 
> mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
> problem was to install python 2.2.2.
> 
> cheers,
> 
> On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:
> 
> > Hi all-
> >
> > Am working with ZSI under mod_python.  The problem I'm
> > running into is that ZSI imports PyXML, which uses
> > dynamic module importing to load encoders for various
> > xml codecs (UTF-8 being the most common encoder).
> > When the PyXML code tries to do the dynamic module
> > import, the Python interpretter prevents it with an
> > error something like "cannot dynamically import module
> > during restricted execution mode".  Forgive me for not
> > quoting the exact error, as I'm currently upgrading
> > the OS on that box right now to RH 9.
> >
> > This occurs with the latest mod_python (3.0.3) with
> > PyXML 0.7.1 and httpd 2.0.40.
> >
> > Has anyone else had success in importing PyXML modules
> > within code run by modpython?
> >
> > Or, does anyone have any information they'd be willing
> > to share to help me out (e.g. "you might try and check
> > out XXX or YYY").  Anything would be useful to me at
> > this point.
> >
> >
> >
> >
> > -c
> >
> > __________________________________
> > Do you Yahoo!?
> > The New Yahoo! Search - Faster. Easier. Bingo.
> > http://search.yahoo.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From conrad at hep.caltech.edu  Tue May  6 01:36:26 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
Message-ID: <1052210186.2757.57.camel@Presario>

Hi

Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
src/requestobject.c to allow mod_python programs to send files
efficiently using the available Apache machinery for both unencrypted
and SSL/TLS connections.

What does it do?
----------------

Implements a file_write() method for the Request object. It does NOT
write headers, only the file.

E.g.

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while 
  req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

The first argument is the filename, the second is the offset to start
reading in the file, the third argument is the number of bytes to write.
The last two arguments are optional.

The return value is the number of bytes written, which may be less than
the total number of bytes in the file. See the manpage of sendfile for
more details.

The patch is NOT OS- or architecture dependent, it merely lets Apache
call its output handler, in the same way that req.write() does for
string data.

If there is interest, the patch can developed further to also set the
content-type, send headers and iterate until the whole file is sent.

Cheers

Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From conrad at hep.caltech.edu  Tue May  6 01:49:51 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210186.2757.57.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
Message-ID: <1052210991.2757.61.camel@Presario>

Ugh, pressed the send button before finishing the code snippet:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

Conrad

On Tue, 2003-05-06 at 01:36, Conrad Steenberg wrote:
> Hi
> 
> Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
> src/requestobject.c to allow mod_python programs to send files
> efficiently using the available Apache machinery for both unencrypted
> and SSL/TLS connections.
> 
> What does it do?
> ----------------
> 
> Implements a file_write() method for the Request object. It does NOT
> write headers, only the file.
> 
> E.g.
> 
> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while 
>   req.write_file("/var/www/html/index.html",0,-1)
>   return apache.OK
> 
> The first argument is the filename, the second is the offset to start
> reading in the file, the third argument is the number of bytes to write.
> The last two arguments are optional.
> 
> The return value is the number of bytes written, which may be less than
> the total number of bytes in the file. See the manpage of sendfile for
> more details.
> 
> The patch is NOT OS- or architecture dependent, it merely lets Apache
> call its output handler, in the same way that req.write() does for
> string data.
> 
> If there is interest, the patch can developed further to also set the
> content-type, send headers and iterate until the whole file is sent.
> 
> Cheers
> 
> Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From gdamjan at mail.net.mk  Tue May  6 11:51:53 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210991.2757.61.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
	<1052210991.2757.61.camel@Presario>
Message-ID: <20030506095153.GA12597@legolas.on.net.mk>

> Ugh, pressed the send button before finishing the code snippet:

too fast on the keyboard.

> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while sent>=0:
>     sent = req.write_file("/var/www/html/index.html",0,-1)
                                                     ^^^^^

I guess it should be "sent" there too:

    sent = req.write_file("/var/www/html/index.html", sent, -1)


-- 
Damjan Georgievski
jabberid: damjan@bagra.net.mk
From grisha at ispol.com  Wed May  7 13:46:04 2003
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] test - please ignore
Message-ID: <20030507134354.V62572-100000@oldchief.reply.net>


this is a test (the list moved to a different server) - please ignore

grisha


From kemu at sdf-eu.org  Sat May 10 16:33:34 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] won't run 
Message-ID: <004301c31701$2349a160$be00a8c0@kemu3jve3zxvcw>

I installed mod_python the test example worked. 
Now I would like to learn to use it.
When I add this to my apache config file:
   1077 <Directory /home/linhost/control>
   1078         SetHandler python-program
   1079         PythonHandler mod_python.publisher
   1080 </Directory>

and in /home/linhost/control I place a file test.py with contents:
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what


I get this http://62.221.205.240/control/hello.py/say
Please help me out Regards Jonas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/de621b90/attachment-0001.htm
From kemu at sdf-eu.org  Sat May 10 17:52:20 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] upload file script
Message-ID: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>

I'm looking on how to upload a file in mod_python are there any examples ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/5fcf56e6/attachment-0001.htm
From mike_verdone at shaw.ca  Sat May 10 15:51:05 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] upload file script
In-Reply-To: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
Message-ID: <200305101551.05815.mike_verdone@shaw.ca>

Here you go!

Files sent to an Apache server via an HTTP request appear as file-like objects 
to mod_python. They support the read() method to get their contents. Assuming 
you're running the publisher handler, this function can receive the contents 
of a file sent by a user in an HTTP request (where the file's field is named 
"file").

  def getFile(req, file=None):
      if file is None:   # There was no file sent.
          return "Error! There was no file!"
      if type(file) is str:   # File was sent as a regular field, which is 
bad.
          return "Error! File was a string!"
      fileData = file.read()    # Get the file data into a Python variable.
      # ... process file data ...
      return "Ok, file received."

The HTML that calls this function is as follows. Not the enctype attribute of 
the form tag.

  <form action="getFile" method="post" enctype="multipart/form-data">
  <input type="file" name="file" />
  <input type="submit" name="submit" value="Submit" />
  </form>



Could someone who knows the FAQ password please add this, if it's useful. 
Thanks.

Mike.


On May 10, 2003 09:52 am, Jonas Geiregat wrote:
> I'm looking on how to upload a file in mod_python are there any examples ?

From vmilitaru at sympatico.ca  Mon May 12 23:53:03 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] Threads...
Message-ID: <3EC06C1F.4070602@sympatico.ca>

Greetings,
since python adaptors to the 3 RDBMS I've tried so far all require
python "with" thread support, I've recompiled python "without-threads"
specifically for mod_python (but without "installing" it).

Then

./configure
--with-apache=/q/apache_1.3.27
--with-python=/q/Python-2.2.2
--with-apxs=/usr/local/apache/bin/apxs

compiles OK, installs OK.
But then apache chokes on new mod_python with:

.../apachectl start

Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
Cannot load /usr/local/apache/libexec/mod_python.so into server:
/usr/local/apache/libexec/mod_python.so: undefined symbol: openpty

Line 210 of httpd.conf is simply the 'LoadModule' directive for
mod_python.so


So, provided this error is related to the thread support issue (from my
corner of the globe it sure smell like it), how is the list juggling
with different versions of python (some apps depending on python "with"
thread support, some depending on python "without" ... and I needing
"both")? Or is there a simpler solution I simply missed while going
through the docs?

Cheers,
Vio



From aturner at neteconomist.com  Tue May 13 09:02:25 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] mod_python slowness
Message-ID: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>


I have a scripts that takes an XML document, munges it and turns it into
HTML to be outputed to the user.  It's setup so that it will run either as
a request handler in mod_python or as a stand alone application.  I am
having extreme problem with the script being slow when running in
mod_python.  I have done some timings, and it is 10-20 times slower
that it is standalone.  The program makes calls to a Postgresql database
using the stock pg module.  The system is running mod_python 3.0.3
w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.

I can't seem to use the profiler to narrow down the problem at all because 
I can't seem to figure out how to execute the profiler on a function that 
takes arguments, and all the functions take at least the HTTP request 
object as an argument, which makes it hard to use the python profiler.  
Even so the script runs fine stand alone.  The one page I am looking at 
goes from 2.2 seconds to 23 seconds.

Has anyone had any similar issues?

Alex Turner
NetEconomist

From grisha at modpython.org  Tue May 13 10:24:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC06C1F.4070602@sympatico.ca>
Message-ID: <20030513102310.H56353-100000@oldchief.reply.net>


IIRC this has to do with -lutil missing from the compile command on some
systems - try hacking the Makefile and adding it manually.

Grisha

On Mon, 12 May 2003, Vio wrote:

> Greetings,
> since python adaptors to the 3 RDBMS I've tried so far all require
> python "with" thread support, I've recompiled python "without-threads"
> specifically for mod_python (but without "installing" it).
>
> Then
>
> ./configure
> --with-apache=/q/apache_1.3.27
> --with-python=/q/Python-2.2.2
> --with-apxs=/usr/local/apache/bin/apxs
>
> compiles OK, installs OK.
> But then apache chokes on new mod_python with:
>
> .../apachectl start
>
> Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
> Cannot load /usr/local/apache/libexec/mod_python.so into server:
> /usr/local/apache/libexec/mod_python.so: undefined symbol: openpty
>
> Line 210 of httpd.conf is simply the 'LoadModule' directive for
> mod_python.so
>
>
> So, provided this error is related to the thread support issue (from my
> corner of the globe it sure smell like it), how is the list juggling
> with different versions of python (some apps depending on python "with"
> thread support, some depending on python "without" ... and I needing
> "both")? Or is there a simpler solution I simply missed while going
> through the docs?
>
> Cheers,
> Vio
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grisha at modpython.org  Tue May 13 10:31:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513102833.C56353-100000@oldchief.reply.net>


I'd first make sure it is not a DNS problem - probably the easiest thing
is to run tcpdump on port 53 to what DNS activity takes place when a
request comes in. Make sure that apache does not resolve host names, also
watch out for postgres using tcpwrappers to resolve host names for
incoming connections.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I have a scripts that takes an XML document, munges it and turns it into
> HTML to be outputed to the user.  It's setup so that it will run either as
> a request handler in mod_python or as a stand alone application.  I am
> having extreme problem with the script being slow when running in
> mod_python.  I have done some timings, and it is 10-20 times slower
> that it is standalone.  The program makes calls to a Postgresql database
> using the stock pg module.  The system is running mod_python 3.0.3
> w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
>
> I can't seem to use the profiler to narrow down the problem at all because
> I can't seem to figure out how to execute the profiler on a function that
> takes arguments, and all the functions take at least the HTTP request
> object as an argument, which makes it hard to use the python profiler.
> Even so the script runs fine stand alone.  The one page I am looking at
> goes from 2.2 seconds to 23 seconds.
>
> Has anyone had any similar issues?
>
> Alex Turner
> NetEconomist
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From rpinder at usc.edu  Tue May 13 08:29:19 2003
From: rpinder at usc.edu (rpinder)
Date: Fri Jan  9 21:53:29 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <200305101551.05815.mike_verdone@shaw.ca>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
 <200305101551.05815.mike_verdone@shaw.ca>
Message-ID: <3EC10F4F.4000300@usc.edu>

Hi all,

I'm trying to plan the most efficient way to implement an apache 
project.  And I have a really basic question about how mod_python (or 
any apache 'mod 'kind of framework, probably) works.  I think i've read 
that a major advantage of mod_python is the fact you dont have to 
re'load the interpreter for each instance... but i'm wondering if this 
also equates to having a global, accessible, code space that python is 
operating in.... 

I'm following the examples in the documentation, and am using the 
'handler' example, and have a python script with functions defined that 
do the work  (there is a database connection happening with an Interbase 
server). 

What I"m trying to do is to have a dictionary created and available to 
all users - without having to re'create the dictionary for each apache 
visitor.  I have a reason to NOT want to accomplish this using a 
database table - even though the dictionary is quite large, and requires 
a lot of overhead each time it's created.

So my feeble question involves whether or not theres a way to do 
something like this with modpython, or is it impossible since each 
instance of the python script gets called in its entirety each time a 
request comes in from Apache.

Thanks for any thoughts

Rich

From mod_python at mikebell.org  Tue May 13 09:39:22 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <20030513163921.GT19515@netvista.mikebell.org>

On Tue, May 13, 2003 at 08:29:19AM -0700, rpinder wrote:
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.

Each seperate apache process has its own interpreter, so you might have 10
of them at once. So it's great for things like database connection pooling
(10 database connections is not much different from one, certainly a lot
better than creating a new one for each request) but it's not a single
globally consistant namespace. Unless you use apache2, a thread mpm,
and only one process. But that's not recommended. Maybe you could use
something like berkeley db to back your dictionary?
From francoislepoutre at compuserve.com  Tue May 13 18:13:40 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] _really_ Basic concept question
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx>

Hi

> I'm trying to plan the most efficient way to implement an apache
> project.  And I have a really basic question about how mod_python (or
> any apache 'mod 'kind of framework, probably) works.  I think i've read
> that a major advantage of mod_python is the fact you dont have to
> re'load the interpreter for each instance... but i'm wondering if this
> also equates to having a global, accessible, code space that python is
> operating in....

Nearly so. Depending on your platform.

on win32:
    You will one workspace on win32 with shared code space
    (beware of that apache/win32 is threaded you will have to
    organize some locking when updating the python data structures)
on linux:
    not one python interpreter but a series of them depending on the
    context (apache setup and stress level)

> I'm following the examples in the documentation, and am using the
> 'handler' example, and have a python script with functions defined that
> do the work  (there is a database connection happening with an Interbase
> server).
>
> What I"m trying to do is to have a dictionary created and available to
> all users - without having to re'create the dictionary for each apache
> visitor.  I have a reason to NOT want to accomplish this using a
> database table - even though the dictionary is quite large, and requires
> a lot of overhead each time it's created.

Sure, you can build your code in such way that your apache mod_python
handler downloads what is necessary at loadtime and keep that stuff
(dictionnaries and the db handler ) buffered within the python "memory
space".

Only once in a while the python interperter be restarted (depending on
apache
setup), your memory workspace will be recreated from the db
(possibly a couple of seconds).

Perf will be excellent in this situation. At later calls to your stuff
apache
will be "python-driven". That's what we do.

We rely heavily on highly secure but time-consuming db-based datastructure.

The possibily to smartly buffer your db stuff within python was our reason
to
switch  into python/mod_python (from iis/isapi).

Welcome onboard :)

Fran?ois

PS
If you wish to organize session-handling this way, it is doable as well but
it
will be a bit more complex as you will need to resync your set of apache
instances (each one handling its own session pool).


From aturner at neteconomist.com  Tue May 13 12:49:18 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
Message-ID: <Pine.LNX.4.44.0305131247280.10997-100000@mx1.neteconomist.com>


I would assume that because each request is handled by a different apache
fork the answer would be that you can't just 'share' variable between
instances because apache doesn't share memory (other than shmem).  This is
also assuming you have apache configured to fork not to thread.  I don't 
know if Python has an interface to shmem, but it probably does, and I 
would imagine you could set it up using that.

Of course, I'm new at mod_python and therefore this is my best guest!

Alex Turner
NetEconomist

On Tue, 13 May 2003, rpinder wrote:

> Hi all,
> 
> I'm trying to plan the most efficient way to implement an apache 
> project.  And I have a really basic question about how mod_python (or 
> any apache 'mod 'kind of framework, probably) works.  I think i've read 
> that a major advantage of mod_python is the fact you dont have to 
> re'load the interpreter for each instance... but i'm wondering if this 
> also equates to having a global, accessible, code space that python is 
> operating in.... 
> 
> I'm following the examples in the documentation, and am using the 
> 'handler' example, and have a python script with functions defined that 
> do the work  (there is a database connection happening with an Interbase 
> server). 
> 
> What I"m trying to do is to have a dictionary created and available to 
> all users - without having to re'create the dictionary for each apache 
> visitor.  I have a reason to NOT want to accomplish this using a 
> database table - even though the dictionary is quite large, and requires 
> a lot of overhead each time it's created.
> 
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.
> 
> Thanks for any thoughts
> 
> Rich
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From aturner at neteconomist.com  Tue May 13 12:51:54 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513102833.C56353-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>


I'm pretty sure this is not a DNS problem.  I can break down each loop
that calls the database, and it shows 0.7 seconds per row returning
instead of like 0.03 seconds.  The dns servers are all configured
correctly for both forward and reverse lookups, and I do not have the same
problems in PHP (other the fact that PHP is crap compared to python - but
it's not this slow).

Alex Turner
NetEconomist

On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> I'd first make sure it is not a DNS problem - probably the easiest thing
> is to run tcpdump on port 53 to what DNS activity takes place when a
> request comes in. Make sure that apache does not resolve host names, also
> watch out for postgres using tcpwrappers to resolve host names for
> incoming connections.
> 
> Grisha
> 
> On Tue, 13 May 2003, Alex Turner wrote:
> 
> >
> > I have a scripts that takes an XML document, munges it and turns it into
> > HTML to be outputed to the user.  It's setup so that it will run either as
> > a request handler in mod_python or as a stand alone application.  I am
> > having extreme problem with the script being slow when running in
> > mod_python.  I have done some timings, and it is 10-20 times slower
> > that it is standalone.  The program makes calls to a Postgresql database
> > using the stock pg module.  The system is running mod_python 3.0.3
> > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> >
> > I can't seem to use the profiler to narrow down the problem at all because
> > I can't seem to figure out how to execute the profiler on a function that
> > takes arguments, and all the functions take at least the HTTP request
> > object as an argument, which makes it hard to use the python profiler.
> > Even so the script runs fine stand alone.  The one page I am looking at
> > goes from 2.2 seconds to 23 seconds.
> >
> > Has anyone had any similar issues?
> >
> > Alex Turner
> > NetEconomist
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grisha at modpython.org  Tue May 13 13:22:18 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513132042.F57186-100000@oldchief.reply.net>


Hmm... Well I'm kinda short on ideas. If it's any reassurance - I'm using
pg with mod_python for a small project right now, and it's very very fast,
i.e. I am not aware of any problems with combination of mod_python and
postgresql.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > I'd first make sure it is not a DNS problem - probably the easiest thing
> > is to run tcpdump on port 53 to what DNS activity takes place when a
> > request comes in. Make sure that apache does not resolve host names, also
> > watch out for postgres using tcpwrappers to resolve host names for
> > incoming connections.
> >
> > Grisha
> >
> > On Tue, 13 May 2003, Alex Turner wrote:
> >
> > >
> > > I have a scripts that takes an XML document, munges it and turns it into
> > > HTML to be outputed to the user.  It's setup so that it will run either as
> > > a request handler in mod_python or as a stand alone application.  I am
> > > having extreme problem with the script being slow when running in
> > > mod_python.  I have done some timings, and it is 10-20 times slower
> > > that it is standalone.  The program makes calls to a Postgresql database
> > > using the stock pg module.  The system is running mod_python 3.0.3
> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> > >
> > > I can't seem to use the profiler to narrow down the problem at all because
> > > I can't seem to figure out how to execute the profiler on a function that
> > > takes arguments, and all the functions take at least the HTTP request
> > > object as an argument, which makes it hard to use the python profiler.
> > > Even so the script runs fine stand alone.  The one page I am looking at
> > > goes from 2.2 seconds to 23 seconds.
> > >
> > > Has anyone had any similar issues?
> > >
> > > Alex Turner
> > > NetEconomist
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jwyant at sfbcic.com  Tue May 13 13:03:45 2003
From: jwyant at sfbcic.com (Wyant, Jaime)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python slowness
Message-ID: <D2B0A0EB8839D711B63300902784B052187DE0@MS-EXCHANGE>

I used pg / mod_python on my site too and it ran well.  My customer wanted
MySql though and we moved to it.  Thanks to DB-API 2.0 I had only a small
amount of code changes necessary...

jw

>>-----Original Message-----
>>From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
>>Sent: Tuesday, May 13, 2003 12:22 PM
>>To: alex@neteconomist.com
>>Cc: mod_python@modpython.org
>>Subject: Re: [mod_python] mod_python slowness
>>
>>
>>
>>Hmm... Well I'm kinda short on ideas. If it's any reassurance 
>>- I'm using
>>pg with mod_python for a small project right now, and it's 
>>very very fast,
>>i.e. I am not aware of any problems with combination of mod_python and
>>postgresql.
>>
>>Grisha
>>
>>On Tue, 13 May 2003, Alex Turner wrote:
>>
>>>
>>> I'm pretty sure this is not a DNS problem.  I can break 
>>down each loop
>>> that calls the database, and it shows 0.7 seconds per row returning
>>> instead of like 0.03 seconds.  The dns servers are all configured
>>> correctly for both forward and reverse lookups, and I do 
>>not have the same
>>> problems in PHP (other the fact that PHP is crap compared 
>>to python - but
>>> it's not this slow).
>>>
>>> Alex Turner
>>> NetEconomist
>>>
>>> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>>>
>>> >
>>> > I'd first make sure it is not a DNS problem - probably 
>>the easiest thing
>>> > is to run tcpdump on port 53 to what DNS activity takes 
>>place when a
>>> > request comes in. Make sure that apache does not resolve 
>>host names, also
>>> > watch out for postgres using tcpwrappers to resolve host names for
>>> > incoming connections.
>>> >
>>> > Grisha
>>> >
>>> > On Tue, 13 May 2003, Alex Turner wrote:
>>> >
>>> > >
>>> > > I have a scripts that takes an XML document, munges it 
>>and turns it into
>>> > > HTML to be outputed to the user.  It's setup so that it 
>>will run either as
>>> > > a request handler in mod_python or as a stand alone 
>>application.  I am
>>> > > having extreme problem with the script being slow when 
>>running in
>>> > > mod_python.  I have done some timings, and it is 10-20 
>>times slower
>>> > > that it is standalone.  The program makes calls to a 
>>Postgresql database
>>> > > using the stock pg module.  The system is running 
>>mod_python 3.0.3
>>> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 
>>to see if that would
>>> > > help and it didn't.  Everything else is stock RedHat 
>>8.0 - python-2.2.1-17.
>>> > >
>>> > > I can't seem to use the profiler to narrow down the 
>>problem at all because
>>> > > I can't seem to figure out how to execute the profiler 
>>on a function that
>>> > > takes arguments, and all the functions take at least 
>>the HTTP request
>>> > > object as an argument, which makes it hard to use the 
>>python profiler.
>>> > > Even so the script runs fine stand alone.  The one page 
>>I am looking at
>>> > > goes from 2.2 seconds to 23 seconds.
>>> > >
>>> > > Has anyone had any similar issues?
>>> > >
>>> > > Alex Turner
>>> > > NetEconomist
>>> > >
>>> > > _______________________________________________
>>> > > Mod_python mailing list
>>> > > Mod_python@modpython.org
>>> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> > >
>>> >
>>> > _______________________________________________
>>> > Mod_python mailing list
>>> > Mod_python@modpython.org
>>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> >
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From vmilitaru at sympatico.ca  Tue May 13 11:43:51 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
Message-ID: <3EC112B7.2010405@sympatico.ca>

Gregory (Grisha) Trubetskoy wrote:

>IIRC this has to do with -lutil missing from the compile command on some
>systems - try hacking the Makefile and adding it manually.
>  
>

Thanks for the tip. That seems to do it. For the record, I simply edited
mod_python-2.7.8/src/Makefile as:
...
LIBS=-lm  /q/Python-2.2.2/libpython2.2.a  -lutil


Now apache starts ok, and I can access 'mysql' from python prompt just 
as nicely from the python prompt.
 >>> import MySQLdb

But this puzzles me: importing MySQLdb from within PythonHandler still 
gives me the old 'threads' error:

-------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", 
line 193, in Dispatch
    result = object(req)

  File "/usr/local/apache/htdocs/server/test.py", line 20, in handler
    import MySQLdb

  File "/usr/local/lib/python2.2/site-packages/MySQLdb/__init__.py", 
line 27, in ?
    import _mysql

ImportError: /usr/local/lib/python2.2/site-packages/_mysql.so: undefined 
symbol: pthread_key_create
--------------------------


This is puzzling because I recompiled/reinstalled both mod_python and 
MySQLdb, manually zapped _mysql.so (just to be sure), obviously 
restarted apache, and still get this pthreads error. Seems to me like 
mod_python and the python interactive interpreter are not using the same 
"_mysql.so" somehow. Is mod_python cache somewhere ?
Any ideas?

Vio


From jack_diederich at email.com  Tue May 13 15:35:10 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python slowness
Message-ID: <20030513203511.32703.qmail@email.com>

> 
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).

Are you doing anything wierd like running apache or progres
through inetd (so it has to start a new process for every
request)?  Or are you doing a new database connection for
each row?

If the identical python program takes 1/10th the time running
stand-alone I think the DNS was one the right track - it must
be a network related problem.

You might also want to print to the resulting page the time
the process took from start to finish.  If the page is very
complicated it might look slower even if it isn't.

You can also try commenting out all the database calls and
timing the stand alone and mod_python versions.  That will
at least allow you to narrow down the problem.  Also consider
using 'strace' on the stand alone and the apache version.
Compare the system calls between the two to see if something
pathological is happening in the mod_python case.

-jack
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

From vmilitaru at sympatico.ca  Tue May 13 14:46:21 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca>
Message-ID: <3EC13D7D.7030406@sympatico.ca>

Followup ...

On possibility that this may be 'mysql'-related, I am getting similar 
error with Oracle8i:

------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
193, in Dispatch
result = object(req)

File "/usr/local/apache/htdocs/server/test.py", line 21, in handler
import DCOracle2

File "/usr/local/lib/python2.2/site-packages/DCOracle2/__init__.py", 
line 37, in ?
from DCOracle2 import *

File "/usr/local/lib/python2.2/site-packages/DCOracle2/DCOracle2.py", 
line 104, in ?
import dco2

ImportError: /usr/local/lib/python2.2/site-packages/DCOracle2/dco2.so: 
undefined symbol: PyThread_get_thread_ident
-----------------------

But going through the list archives, I didn't see previous mentions of 
this threads-related problem, so I am totally puzzled. Maybe this is 
mod_python 2.7 related? Without better alternative, I'll give a shot at  
mod_python 3.0, although in doing so I'm losing mod_ssl, as it's not 
available (last time I checked) for apache 2.x.

If of any interest, I'm running:
Linux version 2.4.18-bf2.4  (gcc version 2.95.4 20011002 (Debian 
prerelease))

Vio



From chip at cyan.com  Tue May 13 16:02:18 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC13D7D.7030406@sympatico.ca>
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
Message-ID: <20030513230218.M9562@cyan.com>

> But going through the list archives, I didn't see previous mentions 
> of this threads-related problem, so I am totally puzzled. Maybe this 
> is mod_python 2.7 related? Without better alternative, I'll give a 
> shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
> it's not available (last time I checked) for apache 2.x.

mod_ssl is included in apache2(no longer a seperate project...)

http://httpd.apache.org/docs-2.0/mod/mod_ssl.html

-chip

From vmilitaru at sympatico.ca  Tue May 13 16:47:38 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
	<20030513230218.M9562@cyan.com>
Message-ID: <3EC159EA.2090107@sympatico.ca>

As I later discovered:)
I guess the mod_ssl maintainer should mention this fact (for clueless 
users like me) on the mod_ssl page. [Mistakingly] believing otherwise, 
that was my main reason for not migrating to apache2. But all is well 
which ends well, and all threads errors previously mentionned are 
definitely confined to mod_python2.7

Thanks Paul and Grisha for helpful tips.
Sorry for the noise, though.
Vio



Paul Querna wrote:

>>But going through the list archives, I didn't see previous mentions 
>>of this threads-related problem, so I am totally puzzled. Maybe this 
>>is mod_python 2.7 related? Without better alternative, I'll give a 
>>shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
>>it's not available (last time I checked) for apache 2.x.
>>    
>>
>
>mod_ssl is included in apache2(no longer a seperate project...)
>
>http://httpd.apache.org/docs-2.0/mod/mod_ssl.html
>
>-chip
>
>
>  
>



From francoislepoutre at compuserve.com  Wed May 14 08:14:39 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Database connectivity
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
	<001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx> <3EC14706.8000507@usc.edu>
Message-ID: <002801c319e0$19ef7cc0$0d6e4351@mixio7jpsmlatx>

Hi

> So... the script that is referenced in my handler..... if it has an
> _init_ section, will that do the trick ?? and it'll only get run once,
> when the interpreter calls the handler for the first time ???

No _init_  section or objectified kind of code required.
Some plain python stuff will do :)

An example... not tested here. Hope you pick the idea
You just need to dive in now .. Good luck.

Fran?ois

############################
#! C:\Python22\python.exe

# mod_python handling
from mod_python import apache,util

# database connectivity
from mx import DateTime,ODBC

# your database connectivity here
# this is mxODBC/ODBC code
# will depend on your midlle ware...

# this code will run rarely..
# a couple of 1/n of seconds upon setup
database_handle = ODBC.iODBC.Connect("my_connectionion","dba","sql",0)
cursor_handle  = database_handle.cursor()
cursor_handle.execute("select * from customers")
my_shared_data = cursor_handle.fetchall()
cursor_handle.close()

################################
def handler(req):

    # should be long the first time
    # very fast the next one...
    req.content_type = "text/plain"
    req.send_http_header()
    req.write(str(my_shared_data))

    return apache.OK




From majbritt37 at hotmail.com  Fri May 16 00:03:49 2003
From: majbritt37 at hotmail.com (=?iso-8859-1?B?TeVydGVuIEFzaw==?=)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python for python 2.3
Message-ID: <BAY1-F171sTgirt0KZt0001b438@hotmail.com>

Hello.

I'm having some trouble. It seems that either apache or mod_python doesn't 
realise that I'm using python 2.3, instead they insist that I have python 
2.2.2 installed. The apache error logs show:

make_obcallback: could not import mod_python.apache.

It seems like mod_python is linked to the python22.dll in my system32 
folder. I tried removing it so that it might try to use the python23.dll 
that's also there, but apache then refuses to start.

So how do I fix this? Do I need to recompile either apache or mod_python 
(which I have no idea how to do) or can I find binaries somewhere that might 
work?

Help help.

_________________________________________________________________
L?ttare att hitta dr?mresan med MSN Resor http://www.msn.se/resor/

From aturner at neteconomist.com  Fri May 16 10:34:39 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513203511.32703.qmail@email.com>
Message-ID: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>


It's very unlikely to be a network problem because both the database and 
the web server are running on the same host.  The timings that I took were 
done by placing a start=time.time() at the top of the code section that 
executes 
the file, and a print time.time()-start at the end, so I'm fairly 
convinced that these are accurate.  I then placed more time tests around 
other parts of the mechanism which allowed me to gauge how long each 
segment of the run takes.  I have found a serious flaw in my database 
class, having corrected that though, I found something interesting:

This is my init routine for by DBResult class:

def __init__(self,query):
 start=time.time()
 self.query=query
 self.counter=0;
 self.lresults_l=self.query.getresult()
 self.dresults_l=self.query.dictresult()
 self.fresults_l=[]

 # Copy the indexed/dict values into fresults
 for a in range(len(self.lresults_l)):
   x=0
   self.fresults_l.append({})
   for b in self.lresults_l[a]:
      self.fresults_l[a][x]=b
      x=x+1

   for b in self.dresults_l[a].keys():
      self.fresults_l[a][b]=self.dresults_l[a][b]

 print "Init time %f<br>\n" % (time.time()-start)

It's not pretty, but it does show something wierd:

inside apache this gives a time of: 0.178554 secs
outside apache this gives a time of: 0.093750 secs

almost twice as fast.

Maybe this is a pg module problem, I don't know, but it's certainly wierd!

Alex Turner
NetEconomist

On Tue, 13 May 2003, Jack Diederich wrote:

> > 
> > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > that calls the database, and it shows 0.7 seconds per row returning
> > instead of like 0.03 seconds.  The dns servers are all configured
> > correctly for both forward and reverse lookups, and I do not have the same
> > problems in PHP (other the fact that PHP is crap compared to python - but
> > it's not this slow).
> 
> Are you doing anything wierd like running apache or progres
> through inetd (so it has to start a new process for every
> request)?  Or are you doing a new database connection for
> each row?
> 
> If the identical python program takes 1/10th the time running
> stand-alone I think the DNS was one the right track - it must
> be a network related problem.
> 
> You might also want to print to the resulting page the time
> the process took from start to finish.  If the page is very
> complicated it might look slower even if it isn't.
> 
> You can also try commenting out all the database calls and
> timing the stand alone and mod_python versions.  That will
> at least allow you to narrow down the problem.  Also consider
> using 'strace' on the stand alone and the apache version.
> Compare the system calls between the two to see if something
> pathological is happening in the mod_python case.
> 
> -jack
> 

From grisha at modpython.org  Fri May 16 12:07:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>
Message-ID: <20030516120158.K6045-100000@oldchief.reply.net>


The times listed below, are these averages of multiple iterations (e.g.
10000) or just a one time try?

Anyway - it doesn't look like this is where the bottleneck is - you
mentioned before that a page that took 2.2 seconds to load takes 23
seconds - that's almost 21 seconds of difference whereas below you have a
slowdown of 0.8 secs.

Grisha


On Fri, 16 May 2003, Alex Turner wrote:

>
> It's very unlikely to be a network problem because both the database and
> the web server are running on the same host.  The timings that I took were
> done by placing a start=time.time() at the top of the code section that
> executes
> the file, and a print time.time()-start at the end, so I'm fairly
> convinced that these are accurate.  I then placed more time tests around
> other parts of the mechanism which allowed me to gauge how long each
> segment of the run takes.  I have found a serious flaw in my database
> class, having corrected that though, I found something interesting:
>
> This is my init routine for by DBResult class:
>
> def __init__(self,query):
>  start=time.time()
>  self.query=query
>  self.counter=0;
>  self.lresults_l=self.query.getresult()
>  self.dresults_l=self.query.dictresult()
>  self.fresults_l=[]
>
>  # Copy the indexed/dict values into fresults
>  for a in range(len(self.lresults_l)):
>    x=0
>    self.fresults_l.append({})
>    for b in self.lresults_l[a]:
>       self.fresults_l[a][x]=b
>       x=x+1
>
>    for b in self.dresults_l[a].keys():
>       self.fresults_l[a][b]=self.dresults_l[a][b]
>
>  print "Init time %f<br>\n" % (time.time()-start)
>
> It's not pretty, but it does show something wierd:
>
> inside apache this gives a time of: 0.178554 secs
> outside apache this gives a time of: 0.093750 secs
>
> almost twice as fast.
>
> Maybe this is a pg module problem, I don't know, but it's certainly wierd!
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Jack Diederich wrote:
>
> > >
> > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > that calls the database, and it shows 0.7 seconds per row returning
> > > instead of like 0.03 seconds.  The dns servers are all configured
> > > correctly for both forward and reverse lookups, and I do not have the same
> > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > it's not this slow).
> >
> > Are you doing anything wierd like running apache or progres
> > through inetd (so it has to start a new process for every
> > request)?  Or are you doing a new database connection for
> > each row?
> >
> > If the identical python program takes 1/10th the time running
> > stand-alone I think the DNS was one the right track - it must
> > be a network related problem.
> >
> > You might also want to print to the resulting page the time
> > the process took from start to finish.  If the page is very
> > complicated it might look slower even if it isn't.
> >
> > You can also try commenting out all the database calls and
> > timing the stand alone and mod_python versions.  That will
> > at least allow you to narrow down the problem.  Also consider
> > using 'strace' on the stand alone and the apache version.
> > Compare the system calls between the two to see if something
> > pathological is happening in the mod_python case.
> >
> > -jack
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From aturner at neteconomist.com  Fri May 16 12:27:38 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030516120158.K6045-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305161221570.29332-100000@mx1.neteconomist.com>


DOH!

I found the problem.  And can easily explain the discrepancy between
running the script stand alone vs in apache.  There is one major
difference between apache, and standalone: Cookies.  My Container object
that is passed to each tag function was fetching the cookies from the
request object for each execution! I moved the code into the right place,
i.e. where the request object initialy get's dealt with, and that has
of course cured the problem!

Many thanks to all who have replied.

And as a random editorial, I have to say that I enjoy working with 
mod_python/python as a web platform far more than any other I've used 
previously including php, perl, java and coldfusion.  It has both the 
flexibility and the power to make web development fast and easy (thank 
goodness for proper stack traces and a consistance language API!)

Alex Turner
NetEconomist

On Fri, 16 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> The times listed below, are these averages of multiple iterations (e.g.
> 10000) or just a one time try?
> 
> Anyway - it doesn't look like this is where the bottleneck is - you
> mentioned before that a page that took 2.2 seconds to load takes 23
> seconds - that's almost 21 seconds of difference whereas below you have a
> slowdown of 0.8 secs.
> 
> Grisha
> 
> 
> On Fri, 16 May 2003, Alex Turner wrote:
> 
> >
> > It's very unlikely to be a network problem because both the database and
> > the web server are running on the same host.  The timings that I took were
> > done by placing a start=time.time() at the top of the code section that
> > executes
> > the file, and a print time.time()-start at the end, so I'm fairly
> > convinced that these are accurate.  I then placed more time tests around
> > other parts of the mechanism which allowed me to gauge how long each
> > segment of the run takes.  I have found a serious flaw in my database
> > class, having corrected that though, I found something interesting:
> >
> > This is my init routine for by DBResult class:
> >
> > def __init__(self,query):
> >  start=time.time()
> >  self.query=query
> >  self.counter=0;
> >  self.lresults_l=self.query.getresult()
> >  self.dresults_l=self.query.dictresult()
> >  self.fresults_l=[]
> >
> >  # Copy the indexed/dict values into fresults
> >  for a in range(len(self.lresults_l)):
> >    x=0
> >    self.fresults_l.append({})
> >    for b in self.lresults_l[a]:
> >       self.fresults_l[a][x]=b
> >       x=x+1
> >
> >    for b in self.dresults_l[a].keys():
> >       self.fresults_l[a][b]=self.dresults_l[a][b]
> >
> >  print "Init time %f<br>\n" % (time.time()-start)
> >
> > It's not pretty, but it does show something wierd:
> >
> > inside apache this gives a time of: 0.178554 secs
> > outside apache this gives a time of: 0.093750 secs
> >
> > almost twice as fast.
> >
> > Maybe this is a pg module problem, I don't know, but it's certainly wierd!
> >
> > Alex Turner
> > NetEconomist
> >
> > On Tue, 13 May 2003, Jack Diederich wrote:
> >
> > > >
> > > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > > that calls the database, and it shows 0.7 seconds per row returning
> > > > instead of like 0.03 seconds.  The dns servers are all configured
> > > > correctly for both forward and reverse lookups, and I do not have the same
> > > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > > it's not this slow).
> > >
> > > Are you doing anything wierd like running apache or progres
> > > through inetd (so it has to start a new process for every
> > > request)?  Or are you doing a new database connection for
> > > each row?
> > >
> > > If the identical python program takes 1/10th the time running
> > > stand-alone I think the DNS was one the right track - it must
> > > be a network related problem.
> > >
> > > You might also want to print to the resulting page the time
> > > the process took from start to finish.  If the page is very
> > > complicated it might look slower even if it isn't.
> > >
> > > You can also try commenting out all the database calls and
> > > timing the stand alone and mod_python versions.  That will
> > > at least allow you to narrow down the problem.  Also consider
> > > using 'strace' on the stand alone and the apache version.
> > > Compare the system calls between the two to see if something
> > > pathological is happening in the mod_python case.
> > >
> > > -jack
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 

From philipj at telia.com  Fri May 16 23:18:19 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <20030516231819.3bf2a966.philipj@telia.com>

Hello.

My subject is bad, because I can't figure out what to call what I want
to do.

I'm writing a wiki-ish application, where currently I'm writing URIs
like http://site.org/?page=cow&group=animals. I don't much like this
approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result. The ideal
thing would be if I could get mod_python to handle _all_ requests, for
any type of file (not just .py) in a directory, so that I could just
read req.uri and manually figure out what to do -- if the given group or
page doesn't exist, return 404 or something.

So, how could I achieve something like this with mod_python? The key
issue is getting mod_python to handle everything really, but if that's
not a good way to go about the problem, please tell what else I could
do. I've heard so much talk about twisted and zope, which I think might
do something like this, but both of those libraries/frameworks appear to
be so much more than I need -- I want to continue using mod_python.

Ideas?

// Philip J?genstedt
From mike at mapvision.com  Fri May 16 14:43:17 2003
From: mike at mapvision.com (Michael Gibbs)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Please help me  :)
Message-ID: <200305161443.17917.mike@mapvision.com>

Thanks in advance for any guidance you can provide.

Our problem is that we are trying to maintain a counter using a global 
variable. However the script returns different values when multiple browser 
form requests are being submitted. The counter seems to get changed by 
different requests but not as expected. Are we doing something wrong?

Thanks,
Mike. 


This is the HTML form we use to make the mod_python request. 

<HTML>
        <form action="http://localhost/form2" method="POST">
                <input type="submit">
        </form>
</HTML>


This is the python script (form2.py)

#Why does this script return different values for _count?
#This happens when two browsers are opened and multiple
#forms are submitted. Going back and forth between browsers
#seems to mess up/reset the count on different requests.

from mod_python import apache
_count = 0
def handler(req):
        global _count
        _count += 1
        req.content_type = "text/html"
        req.send_http_header()
        req.write('_count = %d' %_count)
        return apache.OK
From vlindberg at verio.net  Fri May 16 15:57:38 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <3EC55ED2.2010900@verio.net>

Philip J?genstedt wrote:
I don't much like this approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result.


What you  want has been termed object publishing by the Zope community, 
and that usage has been (fairly) widely adopted.  I have been 
researching this lately; AFAIK, you have three options that do this with 
mod_python:

1. mod_python publisher handler.  See the documentation on the 
mod_python site.  Advantage: built in, as close to apache as you can 
get.  Disadvantage: as close to apache as you can get.  Any supporting 
infrastructure will need to be written by you.

2. albatross + mod_python.  Albatross allows this sort of thing, see 
their "Random*Apps" and the associated documentation. Advantage: nice 
session management, page processing model. Disadvantage: the 
implementation of the Random Apps leaves a little to be desired -- it 
moves the user around through http redirects.

3. quixote + mod_python. This is a central feature of quixote, and they 
do it very nicely. Advantage: the mapping of the URL-space to the 
code-space is very elegant.  Disadvantage (at least for me): I don't 
like ptl (their html generation system) as much.


VanL

From mod_python at mikebell.org  Sat May 17 00:15:50 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <20030517071549.GU19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 11:18:19PM +0200, Philip J?genstedt wrote:
> So, how could I achieve something like this with mod_python? The key
> issue is getting mod_python to handle everything really, but if that's
> not a good way to go about the problem, please tell what else I could
> do.

Give this a try, in your apache configs do something like:

<Location /URL/>
SetHandler python-program
PythonHandler MyHandler
</Location>
From mod_python at mikebell.org  Sat May 17 00:18:56 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <200305161443.17917.mike@mapvision.com>
References: <200305161443.17917.mike@mapvision.com>
Message-ID: <20030517071855.GV19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
> Our problem is that we are trying to maintain a counter using a global 
> variable. However the script returns different values when multiple browser 
> form requests are being submitted. The counter seems to get changed by 
> different requests but not as expected. Are we doing something wrong?

Your global variables will only be shared by requests handled by the
same interpreter. Each apache process forked has its own. You need to
use some form of shared memory to get multiple processes to share a
counter, be it by mmaping a file or using a database connection or
whatever.
From etienne at cs.vu.nl  Sat May 17 15:29:25 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC55ED2.2010900@verio.net>
Message-ID: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
> 3. quixote + mod_python. This is a central feature of quixote, and 
> they do it very nicely. Advantage: the mapping of the URL-space to the 
> code-space is very elegant.  Disadvantage (at least for me): I don't 
> like ptl (their html generation system) as much.

BTW, you could also use other template systems with Quixote, for 
example there is the standalone  SimpleTAL which looked quite good. (I 
haven't used it yet, the author claims extensive Zope TAL and METAL 
compatibility)

EP

From etienne at cs.vu.nl  Sat May 17 15:34:55 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
wrote:
> My subject is bad, because I can't figure out what to call what I want
> to do.


The name for it is REST.
So to rephrase your question: "How can I make my application more 
REST-like?"

regards

EP

From news at exultants.org  Sat May 17 17:58:11 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
References: <20030516231819.3bf2a966.philipj@telia.com>
	<5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6lnr$e0n$1@main.gmane.org>

Etienne Posthumus wrote:
> 
> On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
> wrote:
> 
>> My subject is bad, because I can't figure out what to call what I want
>> to do.
> 
> 
> 
> The name for it is REST.
> So to rephrase your question: "How can I make my application more 
> REST-like?"
> 

For the benefit of Philip:

REST = "REpresentational State Transfer"

See <http://internet.conveyor.com/RESTwiki/moin.cgi> for a wiki 
describing the REST architectural style.

Here's an interesting looking project that tries to build an even higher 
level REST architecture on top of Quixote, 
<http://www.rexx.com/~dkuhlman/fsmGenerate_howto.html>

The end of that page has some other good links to other python + quixote 
+ REST resources.


From news at exultants.org  Sat May 17 17:47:08 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
References: <3EC55ED2.2010900@verio.net>
	<93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6l35$chi$1@main.gmane.org>

Etienne Posthumus wrote:
> On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
 >>
>> 3. quixote + mod_python. This is a central feature of quixote, and 
>> they do it very nicely. Advantage: the mapping of the URL-space to the 
>> code-space is very elegant.  Disadvantage (at least for me): I don't 
>> like ptl (their html generation system) as much.
> 
> 
> BTW, you could also use other template systems with Quixote, for example 
> there is the standalone  SimpleTAL which looked quite good. (I haven't 
> used it yet, the author claims extensive Zope TAL and METAL compatibility)

This is close to the approach I'm going to use.

I'll use Quixote for the object publishing, session handling, etc.  For 
templating I'll use PTL for generating programmed web-pages (e.g. RSS 
feeds) and PyMeld for pages that need to be "designed".

Van


From sury.ondrej at globe.cz  Mon May 19 14:35:55 2003
From: sury.ondrej at globe.cz (Ondrej Sury)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <20030517071855.GV19515@netvista.mikebell.org> (mod python's
 message of "Sat, 17 May 2003 00:18:56 -0700")
References: <200305161443.17917.mike@mapvision.com>
	<20030517071855.GV19515@netvista.mikebell.org>
Message-ID: <87llx36rmc.fsf@globe.cz>

mod_python@mikebell.org writes:

> On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
>> Our problem is that we are trying to maintain a counter using a global 
>> variable. However the script returns different values when multiple browser 
>> form requests are being submitted. The counter seems to get changed by 
>> different requests but not as expected. Are we doing something wrong?
>
> Your global variables will only be shared by requests handled by the
> same interpreter. Each apache process forked has its own. You need to
> use some form of shared memory to get multiple processes to share a
> counter, be it by mmaping a file or using a database connection or
> whatever.

I had some success when using threaded mpm model (per_child f.e.) in apache 2.x
which starts only on python interpreter for all threads in the same process group.

O.

-- 
Ondrej Sury - co/CTO                Globe Internet s.r.o. http://globe.cz/
Tel: +420(2)35365000 Fax: +420(2)35365009     Planickova 1, 162 00 Praha 6
From mike.looijmans at asml.com  Mon May 19 14:51:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <01c31e05$4f438280$926a1e6e@wsasd464>

I chose option #4: Build your own.

I just have /xx scriptaliased to point to a single .py handler. That one takes
the uri (request.path_info) and uses that to make the proper call.

I made it so that the request is like:

/xx/session/script...


(session could be a session ID, or name of database to use, and such).

The figures out which module to (re)import (the one named "script" in this
case), loads it, firgures out the parameters (usually the request object,
authorization information and a database connection) and calls its "main"
function.

Took about an hour to invent, implement and test and has been working
flawlessly for months. I like this language :-)
And it's backwards compatible with CGI too, at least, to the extent that I
need, so that servers without mod_python can use the same codebase (only the
initial handler differs).

Mike.


From davidf at sjsoft.com  Mon May 19 16:06:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <3EC8E4FB.90104@sjsoft.com>

Mike Looijmans wrote:

>I chose option #4: Build your own.
>
>I just have /xx scriptaliased to point to a single .py handler. That one takes
>the uri (request.path_info) and uses that to make the proper call.
>
Very cool. Is this with Apache directives?

>I made it so that the request is like:
>
>/xx/session/script...
>
>
>(session could be a session ID, or name of database to use, and such).
>
>The figures out which module to (re)import (the one named "script" in this
>case), loads it, firgures out the parameters (usually the request object,
>authorization information and a database connection) and calls its "main"
>function.
>
Presume you mean "The handler figures out"...?

>Took about an hour to invent, implement and test and has been working
>flawlessly for months. I like this language :-)
>And it's backwards compatible with CGI too, at least, to the extent that I
>need, so that servers without mod_python can use the same codebase (only the
>initial handler differs).
>
Very nice...
I think a description of how to do this would be a great addition to the 
modpython manual...

David

From philipj at telia.com  Mon May 19 18:53:11 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 21:53:30 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <20030519185311.17d2a126.philipj@telia.com>

> I chose option #4: Build your own.

It's interresting that you should say that, because I eventually came to
the same conclusion. It took a litter longer for me to invent (because
the last thing in the URI can be either a "group" or "node", which takes
some code to figure out which). Anyway, it's just 16 lines long, so that
feels better than importing quixote modules or something.

However, there is one flaw which it sounds you may have overcome. Since
I have DirectoryIndex index.py for my / on the server, just writing
http://site.org/ gives me a URI of /index.py. I resolve this by checking
if the last (and only!) element of the URI is the same as the filename
of the executing script. The downside is that it makes it impossible to
have a group or node called "index.py". Also, because I have my css in
the root (A special exception from the SetHandler python-progam is made
for the css file), no node can be called "stdb.css" Nor can I have a
"lib" node or dir, because of the "lib" dir containing all the modules
of my application.

You get the point... in practice, this isn't a very big problem, but
it's just not clean -- I'd like to get around it. So the question: does

> I just have /xx scriptaliased to point to a single .py handler.

mean that you use SetHandler python-program for entire dir, or are you
doing something smarter that might help me evade the issues I'm having?

// Philip J?genstedt
From gmurali at cs.uchicago.edu  Mon May 19 15:59:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
Message-ID: <3EC945B4.1050907@cs.uchicago.edu>

Sorry for not replying earlier... Here is the code, we use...
I have removed pieces of the code which deal with other stuff.
I hope I have not removed too many things...
This code is due to Dustin Mitchell who setup our site
initially.

We use translate.py as our translate handler, which as you can
see creates a req.url, which has lots of information about the
requested url. The check_dont_handle function, allows us to not
handle certain file types or certain subtrees of the DOCROOT.

Hope you find the code useful.

- Murali

------ translate.py ------------
from mod_python import apache, util
from utils import urls
import os, string, config

# This module is responsible for translating the URL space as designed
# into a filename, which Apache will use to control further processing
# of the request.
#
# It does lots of other things too, basically to process the request
# into a nice, Python-ish format.

def transhandler(req):
   # First check if we're configured not to handle this request.
   check_dont_handle(req)

   # Otherwise begin handling this normally
   try:
     # We use the URL class to calculate all of the parts of the URL
     # we were given
     req.url = urls.URL(req)

     # Check if this is a secure connection
     req.secure = is_secure(req)

     # Copy some important values into req
     req.filename, req.modpath = req.url.filename, req.url.modpath

     # Grab any relevant form data,
     req.form_data = util.FieldStorage(req, keep_blank_values=1, 
strict_parsing=1)

     # and register the next handler
     req.add_handler("PythonHandler", "handlers.dispatch")

   # And handle any errors during that time by logging and sending the
   # usual Apache 404 message.
   except:
     return apache.HTTP_NOT_FOUND

   return apache.OK

def check_dont_handle(req):
   """Supports the PythonOption DontHandle Apache configuration option:

PythonOption DontHandle initial-uri[:initial-uri[:initial-uri...]]

which causes the Python site to decline to handle any requests beginning
with one of the specified initial-uri's.  In that case, normal Apache
behavior will apply.
"""
   options = req.get_options()
   uri = req.uri
   if options.has_key('DontHandle'):
     dont_handle = string.split(options['DontHandle'], ':')
     for prefix in dont_handle:
       if prefix == uri[:len(prefix)]:
         raise apache.SERVER_RETURN, apache.DECLINED

def is_secure(req):
   # This seems the best way to do this
   return req.server.port == 443

-----end of translate.py ---------

------ urls.py ---------------

import config
from mod_python import util
import os, string, copy
import re

# This module is responsible for translating the URL space as designed
# into its components:
#
# http://py.cs.uchicago.edu/path/to/program/args1/args2?internal+data
# ----   ------------------ --------------- ----------- -------------
# |      server             \ script_path   \ args_path \ internal
# \ scheme

# All of these fields are member variables of the URL class. Further,
# args_path is available in list form as url.arguments.
# url.internal is a dictionary representing the value of internal as
# a standard URL query string.  url.special contains the characters
# from internal if it contains no '=', and is empty otherwise.

# the module sets the following fields in req:
#  filename -- the filename of the file which will produce the final
#     response.  Apache cares about this.
#  modpath -- a list of nested Python modules which will succeed in
#     representing the script.
#
# It's important to note that the latter two options define the file
# which will produce the final page, while the annotations on the URL
# are produced regardless of the Python program that will eventually
# produce the data.
#
# In particular, Apache is depending on this module to provide
# req.filename.  Apache config commands (e.g. <Directory>) will look
# at this result to determine what to do next.  To help out down the
# road, we also keep track of a module path to get to the relevant .py
# file, and the portion of the URI which specified that file.

# Python script files are:
#   'docroot'/'script_path'.py
# or
#   'docroot'/'script_path'/index.py
# And this program will find the longest possible match among those
# possibilities.

class URL:
   "Object to represent the URL for a given hit on the site."

   def __init__(self, req):
     # get the scheme (e.g., http or https)
     if req.server.port == 443:
       self.scheme = 'https'
     else:
       self.scheme = 'http'

     # Get the method (e.g., 'GET', 'POST', 'HEAD')
     self.method = req.method

     # server name (just to be safe)
     self.server = req.server.server_hostname

     # parse the path, finding the longest part that still refers to a
     # Python script.
     self._parse_path(req.uri)

   # ----
   # Helper functions

   def _parse_path(self, path):
     # Strip that initial slash
     path = path[1:]

     # Break the path into components
     components = []
     if path:
       components = string.split(path, '/')

     # We operate on 4-tuples:
     current = (
       config.docroot,                   # filename
       config.docmod,                    # modpath
       "/",                              # script_path
       components )                      # arguments
     FILENAME = 0
     MODPATH = 1
     SCRIPT_PATH = 2
     ARGUMENTS = 3

     best = None

     # Loop over those components
     while 1:
       # Try two variations of current, in order of length.
       # 'filename'.py
       fn = current[FILENAME] + '.py'
       if self._intree(fn, config.docroot) and \
          os.path.isfile(fn):
         best = ( fn, current[1], current[2], current[3] )

       # If it's a directory we can try 'filename'/index.py
       if os.path.isdir(current[FILENAME]):
         fn = os.path.join(current[FILENAME], 'index.py')
         if self._intree(fn, config.docroot) and \
            os.path.isfile(fn):
           best = ( fn, current[1] + ( 'index', ),
                    current[2], current[3] )

         # And since it's a directory, we can try the next level of
         # directory nesting
         if current[ARGUMENTS]:
           # Get the first component (that used to be an argument)
           comp = current[ARGUMENTS][0]
           # Break out on any funny business
           if comp == '..' or comp == '.' or comp == '':
             break

           # Ignore '.php', for compatibility
           if comp[-4:] == '.php':
             comp = comp[:-4]

           # Move to a new 'current'
           current = (
             os.path.join(current[FILENAME], comp),
             current[MODPATH] + ( comp, ),
             os.path.join(current[SCRIPT_PATH], comp),
             current[ARGUMENTS][1:] )
           continue

       break

     ( self.filename, self.modpath,
       self.script_path, self.arguments ) = best

     # and touch up the arguments a little bit...
     # filter out any empty elements
     self.arguments = filter(None, self.arguments)
     # and include a slash in the args_path only if necessary
     if self.script_path[-1] == '/':
       self.args_path = string.join(self.arguments, '/')
     else:
       self.args_path = '/' + string.join(self.arguments, '/')

   # Returns boolean indicating if PATH is in the directory tree rooted
   # at ROOT.  Also checks that PATH is absolute, and invariant under
   # normpath(), catching things like '../' and './'.  This class uses
   # this function as a sanity check.
   def _intree(self, path, root):
     return path == os.path.abspath(path) and \
            path == os.path.normpath(path) and \
            path[:len(root)] == root

---- end of urls.py -----


From conrad at hep.caltech.edu  Mon May 19 14:08:43 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
Message-ID: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>

Hi

Here is a patch to mod_python version 2.7.x that adds the method
write_file to the request object.

This method writes the named file to the client using the Apache
ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
(https) connections, with the former using the sendfile() system call
where available. This significantly improves performance and reduces CPU
usage relative to reading data into a buffer and writing it to the
client using the req.write() method.

Usage e.g.:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",sent,-1)
  return apache.OK


This is the companion patch to the 3.0.x version (also attached).

Please consider applying the patch(es) to the main tree.

Regards

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- src/requestobject.c.orig	Mon May 19 11:38:46 2003
+++ src/requestobject.c	Mon May 19 11:51:03 2003
@@ -781,6 +781,52 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    FILE *fd;
+    size_t offset=0, len=-1, nbytes;
+    struct stat status;
+    PyObject * py_result = NULL;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    rc=stat(fname,&status);
+    if (rc !=0) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    fd=fopen(fname,"r");
+    if (!fd) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=status.st_size;
+    if (offset!=0){
+      rc=fseek(fd,offset,SEEK_SET);
+      if (rc!=0){
+        PyErr_SetString(PyExc_IOError, "Could not seek to specified offset");
+        fclose(fd);
+        return NULL;      
+      }
+    }
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    nbytes = ap_send_fd_length(fd, self->request_rec, len);
+    
+    Py_END_ALLOW_THREADS
+    
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef requestobjectmethods[] = {
     {"add_common_vars",      (PyCFunction) req_add_common_vars,      METH_VARARGS},
     {"add_handler",          (PyCFunction) req_add_handler,          METH_VARARGS},
@@ -797,6 +843,7 @@
     {"register_cleanup",     (PyCFunction) req_register_cleanup,     METH_VARARGS},
     {"send_http_header",     (PyCFunction) req_send_http_header,     METH_VARARGS},
     {"write",                (PyCFunction) req_write,                METH_VARARGS},
+    {"write_file",           (PyCFunction) req_write_file,           METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From davidf at sjsoft.com  Tue May 20 09:30:22 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <3EC9D98E.6040707@sjsoft.com>

ganapathy murali krishnan wrote:

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.
>
> We use translate.py as our translate handler, which as you can
> see creates a req.url, which has lots of information about the
> requested url. The check_dont_handle function, allows us to not
> handle certain file types or certain subtrees of the DOCROOT.
>
> Hope you find the code useful.
>
> - Murali

I have found that we need to create physical directories in the Apache 
html directory corresponding to any subdirectories we want to handle in 
the Python script, otherwise we get a 404 error. Has anyone else found 
this? Is the SetLocation the answer for this?
The reason I would like to know is we would like to use dynamically 
generated path names without them existing on the disk

Thanks for the code
David

From dustin at ywlcs.org  Tue May 20 06:40:36 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC9D98E.6040707@sjsoft.com>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
Message-ID: <20030520114036.GS25467@eleanor.internal.ywlcs.org>

On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
> 
> I have found that we need to create physical directories in the Apache 
> html directory corresponding to any subdirectories we want to handle in 
> the Python script, otherwise we get a 404 error. Has anyone else found 
> this? Is the SetLocation the answer for this?
> The reason I would like to know is we would like to use dynamically 
> generated path names without them existing on the disk

For some unknown reason Apache checks that req.filename exists.  I usually
just point it at the translation script itself (__file__).

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From davidf at sjsoft.com  Tue May 20 14:12:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520114036.GS25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA1BB7.3020803@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>  
>
>>I have found that we need to create physical directories in the Apache 
>>html directory corresponding to any subdirectories we want to handle in 
>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>this? Is the SetLocation the answer for this?
>>The reason I would like to know is we would like to use dynamically 
>>generated path names without them existing on the disk
>>    
>>
>
>For some unknown reason Apache checks that req.filename exists.  I usually
>just point it at the translation script itself (__file__).
>
>Dustin
>
>  
>
Thanks, where does the check happen, and where do you do the pointing?
Looking at the docs, I guess it could happen in PythonTransHandler, 
PythonHeaderParserHandler or PythonInitHandler
It doesn't seem clear to me exactly where the path resolution is done in 
Apache relative to these handlers... Looking at the mod_python source 
didn't seem to indicate either
PythonTransHandler is designed to resolve the URI to a filename, but the 
resolution is actually correct, so it would be nice not to interfere 
before the actual .htaccess file is used...

Thanks again
David

From ballums at swbell.net  Tue May 20 10:02:26 2003
From: ballums at swbell.net (Ben Allums)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>
Message-ID: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>

On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:

> Here is a patch to mod_python version 2.7.x that adds the method
> write_file to the request object.
> 
> This method writes the named file to the client using the Apache
> ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> (https) connections, with the former using the sendfile() system call
> where available. This significantly improves performance and reduces
> CPU usage relative to reading data into a buffer and writing it to
> the client using the req.write() method.

Thank you Conrad.  I current use a series of "req.write()" calls to do
this exact operation.


Ben
From davidf at sjsoft.com  Tue May 20 17:19:34 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520131332.GU25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
	<3ECA1BB7.3020803@sjsoft.com>
	<20030520131332.GU25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA4786.3060705@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 02:12:39PM +0200, David Fraser wrote:
>  
>
>>Dustin Mitchell wrote:
>>
>>    
>>
>>>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>>>
>>>
>>>      
>>>
>>>>I have found that we need to create physical directories in the Apache 
>>>>html directory corresponding to any subdirectories we want to handle in 
>>>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>>>this? Is the SetLocation the answer for this?
>>>>The reason I would like to know is we would like to use dynamically 
>>>>generated path names without them existing on the disk
>>>>  
>>>>
>>>>        
>>>>
>>>For some unknown reason Apache checks that req.filename exists.  I usually
>>>just point it at the translation script itself (__file__).
>>>
>>>Dustin
>>>
>>>
>>>
>>>      
>>>
>>Thanks, where does the check happen, and where do you do the pointing?
>>Looking at the docs, I guess it could happen in PythonTransHandler, 
>>    
>>
>
>It's the transhandler's job to set req.filename, actually.  I think, if it
>doesn't get set, the Apache handler gets triggered, which gives you the 404.
>So set req.filename in your transhandler.
>
>  
>
>>PythonHeaderParserHandler or PythonInitHandler
>>It doesn't seem clear to me exactly where the path resolution is done in 
>>Apache relative to these handlers... Looking at the mod_python source 
>>didn't seem to indicate either
>>    
>>
>
>Path resolution is the stated goal of the transhandler.
>
>  
>
>>PythonTransHandler is designed to resolve the URI to a filename, but the 
>>resolution is actually correct, so it would be nice not to interfere 
>>before the actual .htaccess file is used...
>>    
>>
>
>You can't mess with .htaccess if you're going to do transhandlers.  You'll
>have to put your config in the httpd.conf file, or some derivative thereof.
>Apache's transhandler is the one that *finds* the .htaccess files.  You can't
>have it both ways -- Apache finds your .htaccess, then lets you redo the
>translation phase.
>
>Dustin
>
>  
>
Thanks Dustin, all clear now...
David

From philipj at telia.com  Tue May 20 22:02:40 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
	<3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <20030520220240.6aa38c9b.philipj@telia.com>

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.

Thank you for that information. Your code does much more than I need,
but it certainly did help me write a transhandler of my own. I have a
few questions which I hope you can answer for me:

A: Does the code have a licensed attached to it, if I decide to use any
of it at a later date? (GPL, public domain... ?)

B: As it is now (just did this 5 minutes ago) I have the following in my
httpd.conf:
<IfModule mod_python.c>
    PythonPath "sys.path + ['/home/philip/htdocs/stdb']"
    PythonTransHandler index
</IfModule>

<Directory /home/philip/htdocs/stdb>
    Options FollowSymLinks
    AddHandler python-program .py
    PythonHandler index
    PythonDebug On
    PythonAutoReload On
</Directory>

Now I've come to understand that the PythonTransHandler must not be in a
<Directory>, <File>, .htacces or the like, so I put it in the very root
of my httpd.conf. Is this the correct way to go about it? Right now I'm
serving the mod_python pages out from /stdb/, so I only want to apply
PythonTransification for that dir, which then involves checking if the
URI begins with the /stdb. Can I add something to httpd.conf to make
PythonTransHandler apply only to /stdb, or am I then trapped in already
being past the Trans phase?

Thank you for you kind help!
// Philip J?genstedt
From conrad at hep.caltech.edu  Tue May 20 15:39:40 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
References: 
	 <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
Message-ID: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>

On Tue, 2003-05-20 at 08:02, Ben Allums wrote:
> On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:
> 
> > Here is a patch to mod_python version 2.7.x that adds the method
> > write_file to the request object.
> > 
> > This method writes the named file to the client using the Apache
> > ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> > (https) connections, with the former using the sendfile() system call
> > where available. This significantly improves performance and reduces
> > CPU usage relative to reading data into a buffer and writing it to
> > the client using the req.write() method.
> 
> Thank you Conrad.  I current use a series of "req.write()" calls to do
> this exact operation.

:-)

Maybe we can convince Grisha to apply the patches in the next release?

Conrad

> 
> 
> Ben
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From gmurali at cs.uchicago.edu  Tue May 20 17:48:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>	<3EC945B4.1050907@cs.uchicago.edu>
	<20030520220240.6aa38c9b.philipj@telia.com>
Message-ID: <3ECAB0C0.4000408@cs.uchicago.edu>

Philip J?genstedt wrote:
 > Thank you for that information. Your code does much more than I need,
 > but it certainly did help me write a transhandler of my own. I have a
 > few questions which I hope you can answer for me:
 >
 > A: Does the code have a licensed attached to it, if I decide to use any
 > of it at a later date? (GPL, public domain... ?)
 >

That was a no strings attached code.
Dustin: You have anything you want to add?

 > B: As it is now (just did this 5 minutes ago) I have the following in 
--snip --
 > URI begins with the /stdb. Can I add something to httpd.conf to make
 > PythonTransHandler apply only to /stdb, or am I then trapped in already
 > being past the Trans phase?

In the code you see, there is a check_dont_handle function, which
looks at the specified URI and decides if it should handle. Our handler
decides to handle it, based on the extension of the file requested. In
another web server, we also decline to handle if the requested URI lies
in some specific subtrees of the DOCROOT. If your handler declines to
handle it, then the default apache handler will take over. So all you 
need to do is to check if the requested URI is in the stdb subtree, else
decline to handle it, and the normal Apache Handler should kick in.

- Murali

From grisha at modpython.org  Tue May 20 20:18:54 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>
Message-ID: <20030520201614.O75374-100000@oldchief.reply.net>



On 20 May 2003, Conrad Steenberg wrote:

> Maybe we can convince Grisha to apply the patches in the next release?

Well, unless something changes, the next 2.7 release will happen if (and
only if) there is a serious issue such as a security problem, and it will
contain a fix only.

But we will certainly try to include this in the next 3.x release. :-)

Grisha

From dorellik1 at inwind.it  Wed May 21 17:19:50 2003
From: dorellik1 at inwind.it (dorellik1)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Error in make dso
Message-ID: <002101c31fac$6cc52040$0100a8c0@y5k4k1>

I have the following result after

$ make dso
make[1]: Entering directory `/home/bill/mod_python-2.7.8/src'
gcc  -I/home/bill/mod_python-2.7.8/src/include -I/usr/src/apache_1.3.26/src/include -I/usr/src/apache_1.3.26/src/os/unix -I/usr/include/python2.2    -c -o mod_python.o mod_python.c
In file included from /usr/src/apache_1.3.26/src/include/httpd.h:72,
                 from /home/bill/mod_python-2.7.8/src/include/mod_python.h:63,
                 from mod_python.c:54:
/usr/src/apache_1.3.26/src/include/ap_config.h:77:28: ap_config_auto.h: No such file or directory
make[1]: *** [mod_python.o] Error 1
make[1]: Leaving directory `/home/bill/mod_python-2.7.8/src'
make: *** [do_dso] Error 2

$ find /usr -name "ap_config_auto.h" gives me

/usr/include/apache/ap_config_auto.h

[root@.... mod_python-2.7.8]# ./configure  --with-apache=/usr/src/apache_1.3.26
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ranlib... (cached) ranlib
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr//bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) /usr/sbin/apxs
found /usr/sbin/apxs, we'll use this. Use --with-apxs to specify another.
checking for Apache libexec directory... /usr/lib/apache
checking for Apache include directory... -I/usr/include/apache
checking for --with-apache... /usr/src/apache_1.3.26
checking for --with-python... no
checking for python... (cached) /usr//bin/python
checking Python version... 2.2
checking whether Python is compiled with thread support... no threads, good
checking Python install prefix... /usr
checking what libraries Python was linked with... /usr/lib/python2.2/config/libpython2.2.a -ldl -lutil -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/include/python2.2
checking for mkdep... (cached) /usr/X11R6/bin/makedepend
creating ./config.status
creating Makefile
creating src/Makefile
creating src/libpython.module
creating Doc/Makefile
analyzing dependencies



Why make don't find an existing file ?

                                                                                             Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030521/3e06d4f9/attachment-0001.htm
From brianh at exelixis.com  Wed May 21 19:22:49 2003
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] object isclass test in publisher
Message-ID: <3ECC3479.4050401@exelixis.com>

hello,
i noticed today while poking around in publisher.py that line 165,
testing if the resolved object is a class, needs updating.  it checks if
str(type(object)) == "<type 'class'>"; but that is not true for
new-style classes, as shown below:

  >>> class A: pass
...
  >>> str(type(A))
"<type 'class'>"
  >>> class B (object): pass
...
  >>> str(type(B))
"<type 'type'>"


brian hawthorne

From terry at i3technologies.co.uk  Thu May 22 13:45:55 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.
Message-ID: <1053607555.1100.37.camel@bigmac>

Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

===============================================================================================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

===============================================================================================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




From Hans.Yandle at cingular.com  Thu May 22 09:17:30 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23A9B@s30342g004005>

I am a newbie myself but would say that it appears you have a problem with
your Python22 install. The sys module is a builtin(internal) module--just
look at os.py. Maybe Redhat has mixed up several versions of Python (such as
1.5.X with 2.X) on the same machine and paths and/or environmental variables
are crossed.

I would suggest running Python standalone (commandline) and perform some
small actions using modules sys and os. Once that is working, build a simple
ordinary straight cgi script using the cgi module and launch it via Apache
/cgi-bin/ folder. Once that works, convert the script to accelerated
mod_python and execute it.

It might be helpful to us if you could provide more details on the Apache
server version (1.3.X or 2.X) and mod_python (2.7.X or 3.X) version you are
running along with the scripts (sample.py, two html files, form.html, and
template.html) you mentioned and references to the tutorial(s) that you feel
do not work. 

Hans

-----Original Message-----
From: Terry MacDonald [mailto:terry@i3technologies.co.uk]
Sent: Thursday, May 22, 2003 8:46 AM
To: mod_python@modpython.org
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
saga.


Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

============================================================================
===================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

============================================================================
===================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/31cbf2fb/attachment-0001.htm
From dustin at ywlcs.org  Thu May 22 08:56:20 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:53:31 2004
Subject: [dustin@ywlcs.org: Re: [mod_python] Tutorials, FieldStorage and
	sys.py. A depressing saga.]
Message-ID: <20030522135619.GN25467@eleanor.internal.ywlcs.org>

Sorry, meant to send this to the list.

----- Forwarded message from Dustin Mitchell <dustin@ywlcs.org> -----

From: Dustin Mitchell <dustin@ywlcs.org>
To: Terry MacDonald <terry@i3technologies.co.uk>
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.

On Thu, May 22, 2003 at 01:45:55PM +0100, Terry MacDonald wrote:
>   File "/var/www/html/python/sample.py", line 90, in ?
>     form = cgi.FieldStorage()
> 
>   File "/usr/lib/python2.2/cgi.py", line 448, in __init__
>     elif sys.argv[1:]:

You're using the CGI module, but you're not using a CGI script.  The mod_python distribution has a FieldStorage class, but it's (subtly) different from the one in the Python standard 'cgi' module.

import mod_python.util
form = mod_python.util.FieldStorage(req)

Read the docs on that module for more info.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

----- End forwarded message -----

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From terry at i3technologies.co.uk  Thu May 22 19:36:24 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030522134004.GA25157@mx1.neteconomist.com>
References: <1053607555.1100.37.camel@bigmac>
	 <20030522134004.GA25157@mx1.neteconomist.com>
Message-ID: <1053628584.1100.63.camel@bigmac>

Hi again,

Thankyou very much for your replies, You seem a nice bunch in here. 
I look forward to conversing with you over time (hopefully not all bug related!)

Anyways your advice solved one issue but unfortunately moved me on to the next.  
I am reaching the end of my patience as I have tried various work arounds to my 
ills and I just go up more garden paths to more problems (this should not be that 
difficult I know!).

Forgive me but I have decided to post the code to see if you can tell what is wrong 
cos I just can't get it to work as it is supposed to. The code is primarily example 
code but has been rejigged a little while trying to get it to work.

Problems occuring now is that the subn function is giving a mulitple repeat error.
When I comment out the offending code I just get Object not found in the browser. 
Also I have to put full pathnames in for the html files otherwise they cannot be 
found (I know this can't be right - but i'm trying anything to get this to work)

Ultimately the example should print a form, fetch the contents and display them 
back to you in another page (I think!) not exactly rocket science.

Below is the .py file and the two basic html files. Enjoy !

Cheers

Terry

================================================================================
#!/usr/bin/python
                                                                                                              
from mod_python import apache
from mod_python import util
import re
                                                                                                              
# specify the filename of the template file
TemplateFile = "/var/www/html/python/template.html"
                                                                                                              
# Display  takes one parameter - a string to Display
def Display(Content):
    TemplateHandle = open(TemplateFile, "r")  # open in read only mode
    # read the entire file as a string
    TemplateInput = TemplateHandle.read()
    TemplateHandle.close()                    # close the file
                                                                                                              
    # this defines an exception string in case our
    # template file is messed up
    BadTemplateException = "There was a problem with the HTML template."
                                                                                                              
    SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
    if SubResult[1] == 0:
        raise BadTemplateException
                                                                                                              
    print "Content-Type: text/html\n\n"
    print SubResult[0]
                                                                                                              
                                                                                                              
def ProcessForm(req):
                                                                                                              
    form = util.FieldStorage(req)
                                                                                                              
    # extract the information from the form in easily digestible format
    try:
        name = form["name"].value
    except:
        # name is required, so output an error if
        # not given and exit script
        Display("You need to at least supply a name. Please go back.")
        raise SystemExit
    try:
        email = form["email"].value
    except:
        email = None
    try:
        color = form["color"].value
    except:
        color = None
    try:
        comment = form["comment"].value
    except:
        comment = None
                                                                                                              
    Output = ""  # our output buffer, empty at first
                                                                                                              
    Output = Output + "Hello, "
                                                                                                              
    if email != None:
        Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
    else:
        Output = Output + name + ".<P>"
                                                                                                              
    if color == "swallow":
        Output = Output + "You must be a Monty Python fan.<P>"
    elif color != None:
        Output = Output + "Your favorite color was " + color + "<P>"
    else:
        Output = Output + "You cheated!  You didn't specify a color!<P>"
                                                                                                              
    if comment != None:
        Output = Output + "In addition, you said:<BR>" + comment + "<P>"
                                                                                                              
    Display(Output)
                                                                                                              
###
### Begin actual script
###
                                                                                                              
#### "key" is a hidden form element with an
### action command such as "process"
#try:
#    key = form["key"].value
#    key = form["key"].value
##except:
#    key = None
                                                                                                              
#if key == "process":
#    ProcessForm(form)
#else:
#    DisplayForm()
                                                                                                              
# Open and display the form
FormFile = "/var/www/html/python/form2.html"
FormHandle = open(FormFile, "r")
FormInput = FormHandle.read()
FormHandle.close()
Display(FormInput)
                                                                         
=======================================================================================

Form2.html.........

<FORM METHOD="POST" ACTION="sample.py/processform">
      <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
      Your name:<BR>
      <INPUT TYPE=TEXT NAME="name" size=60>
      <BR>
      Email: (optional)<BR>
      <INPUT TYPE=TEXT NAME="email" size=60>
      <BR>
      Favorite Color:<BR>
      <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
      <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
      <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
      <P>
      Comments:<BR>
      <TEXTAREA NAME="comment" ROWS=8 COLS=60>
      </TEXTAREA>
      <P>
        <INPUT TYPE="SUBMIT" VALUE="Okay">
</FORM>
=======================================================================================
Template.html........

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!-- *** INSERT CONTENT HERE *** -->
  </body>
</html>
                                                                                                              


From grisha at modpython.org  Thu May 22 15:11:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
 saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
Message-ID: <20030522150301.W4076-100000@oldchief.reply.net>


Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the next.
> I am reaching the end of my patience as I have tried various work arounds to my
> ills and I just go up more garden paths to more problems (this should not be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what is wrong
> cos I just can't get it to work as it is supposed to. The code is primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple repeat error.
> When I comment out the offending code I just get Object not found in the browser.
> Also I have to put full pathnames in for the html files otherwise they cannot be
> found (I know this can't be right - but i'm trying anything to get this to work)
>
> Ultimately the example should print a form, fetch the contents and display them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
> ================================================================================
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
> =======================================================================================
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
> =======================================================================================
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From skremer at q.cis.uoguelph.ca  Thu May 22 16:39:24 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Interpreters
Message-ID: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>


Hi,

I just finished re-reading Section 4.1 yet again (for the 12th? time).  
(Wow, is that ever densly packed with important info.)

Each time I read it, I think I'm getting a clearer picture of what's going
on.  Also this list has helped me sort things out as well, but I'm still
surprised at times.  I'm wondering if the following synopsis makes sense.  
I am willing to summarize a corrected version at the end if people are
interested (let me know).

When I start Apapche mod_python not yet initialized.
  It only gets initialized when someone accesses a web-page 
  associated with a directory directive that requires mod_python.
Is that right?

When mod_python is initialized it creates an interpreter called 
"main_interpreter".  This interpreter doesn't actually run your python 
code it just generates sub interpreters which it keeps in a dictionay.

Where is the main interpreter named "main_interpreter"?  Can I access that 
somewhere?

If apache is running as multiple processes and maybe multiple threads how 
many main_interpreters are there?  Just one?


Asside: req.interpreter doesn't work for me (under 3.0.0 (was it 
added in 3.0.1 or 3.0.2) or am I confused?

[  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 76, 
[in __getattr__
[    raise AttributeError, attr
[
[AttributeError: interpreter

When do the sub-interpreters get created?

The sub-interpreters are, by default, associated associated with a virtual 
server name (but there can be more than one sub-interpreter per virtual 
server name).

Is that right?

If there are mutliple processes of apache with multiple threads, are the 
sub-interpreters shared betweenn processes and/or threads?

When a http request comes in that uses a mod_python handler, it is
assigned to a sub-interpreter.  It might be assigned to a brand new
sub-interpreter (usually if traffic on the server is reaching a new high
level), or a previously used sub-interpreter (if traffic is less than it 
was at peak).  (Assuming we keep hitting the same virtual 
server/directory/etc.)

Is that right?

Sub-interpreters are never destoryed, so the number of sub-interpreters 
increases monotonically from when apache is started until it dies and 
your chances of getting a used sub-interpreter goes up the longer apache 
has been running.  Also the longer apache is running the more memory 
mod_python would proabely use.

Is that right?

If apache reduces (kills) the processes it is running, are any
sub-interpreters affected?

If you happen to get a re-used sub-interpreter, you will also get saddled 
with stuff that was defined in it before.  

This can be a good thing or a bad thing.  If you are accessing a database, 
the sub-interpreter may already have an open DB connection which can save 
you time.  It may also have already loaded some of the modules that your 
code calls, which can save time.  Unfortunately this can be bad as well.

One case occurs when you modify python code that is included as a module.
If you get a sub-interpreter where the original version of the module
has already been included, it will use that instead of the new one.

Another example of when getting a used sub-interpreter is bad might be:  
User 1 writes a script that changes the sys.path variable and loads a
module that they have written called MyModule.  User 2 writes a script
that changes the sys.path variable and loads a different module that thay
have written called MyModule also!  Someone requests a page from User 1
and the first version of MyModule is loaded.  Then someone else requests a
page from user 2, but the second version of MyModule is not loaded since
the sub-interpreter thinks it has already loaded MyModule.  User 2's
script then goes uses the function in the wrong version of MyModule.

Is this something that could happen?  I'm 
wondering if there is an exploit that could be accomplished this way?

Obviously the solution to the above problem is to use a different 
sub-interpreter naming scheme with "PythonInterpPerDirectory or 
PythonInterpPerDirective".

Does that make sense?

Any corrections and/or comments much appreciated.

	Stefan

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca

From ireneponti at yahoo.com  Thu May 22 14:05:02 2003
From: ireneponti at yahoo.com (Irene Ponti)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] mod_python file uploading question.
Message-ID: <20030522210502.71765.qmail@web40701.mail.yahoo.com>

Hi to all.

How can I tell to mod_python to stop uploading a file
larger than 1Mb?

Thank you.


__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From grisha at modpython.org  Thu May 22 17:30:49 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:31 2004
Subject: [mod_python] Interpreters
In-Reply-To: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>
Message-ID: <20030522171106.I5079-100000@oldchief.reply.net>



On Thu, 22 May 2003, Stefan C. Kremer wrote:

> When I start Apapche mod_python not yet initialized.
>   It only gets initialized when someone accesses a web-page
>   associated with a directory directive that requires mod_python.
> Is that right?

yes

> When mod_python is initialized it creates an interpreter called
> "main_interpreter".  This interpreter doesn't actually run your python
> code it just generates sub interpreters which it keeps in a dictionay.

correct

> Where is the main interpreter named "main_interpreter"?  Can I access that
> somewhere?

It is named inside the C code for mod_python. If force your interpreter
name by using "PythonInterpreter main_interpreter", then mod_python won't
create subinterpreters, it will just select "main_interpreter" to run
things.

> If apache is running as multiple processes and maybe multiple threads how
> many main_interpreters are there?  Just one?

As many as there are processes.

> Asside: req.interpreter doesn't work for me (under 3.0.0 (was it
> added in 3.0.1 or 3.0.2) or am I confused?

3.0.0 is a beta version, you should stay away from it anyway.

> When do the sub-interpreters get created?

on first use

> The sub-interpreters are, by default, associated associated with a virtual
> server name (but there can be more than one sub-interpreter per virtual
> server name).
>
> Is that right?

yes, if you use InterpPerDirective or InterpPerDirectory

> If there are mutliple processes of apache with multiple threads, are the
> sub-interpreters shared betweenn processes and/or threads?

between threads within a process - yes, between processes - no.

> When a http request comes in that uses a mod_python handler, it is
> assigned to a sub-interpreter.  It might be assigned to a brand new
> sub-interpreter (usually if traffic on the server is reaching a new high
> level), or a previously used sub-interpreter (if traffic is less than it
> was at peak).  (Assuming we keep hitting the same virtual
> server/directory/etc.)
>
> Is that right?

sort-of... Apache will assign a request to one of it's children/threads to
be serviced. Mod_python will determine subinterpreter name based on
config, if this this subinterpreter already exists within this child, it's
reused, otherwise a new one is created. Server load is only one of a few
reasons why there may be a new child process.

> Sub-interpreters are never destoryed, so the number of sub-interpreters
> increases monotonically from when apache is started until it dies and
> your chances of getting a used sub-interpreter goes up the longer apache
> has been running.

true (note though that there is a finite number of subinterpeters, e.g. if
you're using the default interp per vrtual host, then there will only be
as many subinterpreters per process as there are virtual hosts - thus it
increases up to a point when all possible subinterpeters are created, then
it stops)

> Also the longer apache is running the more memory mod_python would
> proabely use.

this depends on how your code is written. mod_python itself has no known
memory leaks - but if you fnd any, let us know!

> If apache reduces (kills) the processes it is running, are any
> sub-interpreters affected?

well - everything in the process (inclduing subinterpreters) is affected.

> If you happen to get a re-used sub-interpreter, you will also get saddled
> with stuff that was defined in it before.

yes

> This can be a good thing or a bad thing.  If you are accessing a database,
> the sub-interpreter may already have an open DB connection which can save
> you time.  It may also have already loaded some of the modules that your
> code calls, which can save time.  Unfortunately this can be bad as well.
>
> One case occurs when you modify python code that is included as a module.
> If you get a sub-interpreter where the original version of the module
> has already been included, it will use that instead of the new one.

But how is this bad? This is one of the main reasons mod_python is so fast
- module code is only interpreted once (as opposed to every request with
CGI).

> Another example of when getting a used sub-interpreter is bad might be:
> User 1 writes a script that changes the sys.path variable and loads a
> module that they have written called MyModule.  User 2 writes a script
> that changes the sys.path variable and loads a different module that thay
> have written called MyModule also!

this is precisely why you have subinterpreters - you need to make sure
that the users are running in separate subinterpreters.

> Obviously the solution to the above problem is to use a different
> sub-interpreter naming scheme with "PythonInterpPerDirectory or
> PythonInterpPerDirective".

exactly!

Grisha

From Hans.Yandle at cingular.com  Thu May 22 17:55:14 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23AA7@s30342g004005>

Well, I decided to make a working sample out of your code so here is my
working version. Use at will. By no means is this perfect but it does work
for me. Example URL:
http://localhost/test/sample/ProcessForm/?name=Hans&color=swallow

=== sample.py ===
from mod_python import apache
import string

### File Parameter Options ###
Template = "/usr/local/python/template.html" # filename of template file

def EvalTemplate(Content):
    (Result, ErrorMsg) = (None, None)
    try:
        TemplateFile = file(Template, "r") # open in read only mode
        TemplateData = TemplateFile.read() # read in the contents of the
file
        TemplateFile.close() # close the file
    except IOError, e:
        ErrorMsg = "Error! Unable to read contents of template file %s.
<br>%s" % (Template, e)
    except:
        ErrorMsg = "Error! Unknown error has occured."
    if not ErrorMsg:
        if string.find(TemplateData, "<!--*** INSERT CONTENT HERE ***-->")
is not -1:
            Result = string.replace(TemplateData, "<!--*** INSERT CONTENT
HERE ***-->", Content)
        else:
            ErrorMsg = "Invalid template file format. Missing insert comment
tag. Please fix %s." % Template
    return (Result, ErrorMsg)

def SendHTML(Output=None, ErrorMsg=None):
    if not ErrorMsg:
        s, ErrorMsg = EvalTemplate(Output)
    if ErrorMsg:
        s = """<html><head><title>Mod_Python Sample Using a Template: Error
Message</title></head>
               <body><p>An error has occured. Please correct the
problem.</p>
               <pre>%s</pre></body></html>""" % ErrorMsg
    return s

def ProcessForm(req, name=None, email=None, color=None, comment=None):
    ErrorMsg = None
    Output = "Hello, "
            
    if name:
        if email:
            Output = Output + "<a href=mailto:%s>%s</a>.<p>" % (email, name)
        else:
            Output = Output + "%s.<p>" % name
    else:
        ErrorMsg="You need to at least supply a name. Please go back."
        
    if color=="swallow":
        Output = Output + "You must be a Monte Python fan.<p>"
    elif color != None:
        Output = Output + "Your favorite color was %s<p>" % color
    else:
        Output = Output + "You cheated! You didn't specify a color!<p>"
        
    if comment:
        Output = Output + "In addition, you said: <br>%s<p>" % comment
        
    req.content_type = "text/html"
    req.send_http_header()
    
    return SendHTML(Output, ErrorMsg)
=== end ===
=== template.html ===
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!--*** INSERT CONTENT HERE ***-->
  </body>
</html>
=== end ===

Have fun,

Hans

-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Thursday, May 22, 2003 3:11 PM
To: Terry MacDonald
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A
depressing saga.



Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug
related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the
next.
> I am reaching the end of my patience as I have tried various work arounds
to my
> ills and I just go up more garden paths to more problems (this should not
be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what
is wrong
> cos I just can't get it to work as it is supposed to. The code is
primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple
repeat error.
> When I comment out the offending code I just get Object not found in the
browser.
> Also I have to put full pathnames in for the html files otherwise they
cannot be
> found (I know this can't be right - but i'm trying anything to get this to
work)
>
> Ultimately the example should print a form, fetch the contents and display
them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
>
============================================================================
====
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content,
TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name +
"</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
>
============================================================================
===========
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an
African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
>
============================================================================
===========
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/50bf5078/attachment-0001.htm
From dustin at ywlcs.org  Thu May 22 19:09:17 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
Message-ID: <20030523000917.GV25467@eleanor.internal.ywlcs.org>

>     print "Content-Type: text/html\n\n"
>     print SubResult[0]

It looks like you're still writing a CGI script, since you're using 'print'.
If you're taking the time to install and use mod_python, I would suggest
using the publisher handler or writing your own handlers, as those truly take
advantage of the status of mod_python as a handler.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From rk at dat.cz  Fri May 23 09:21:51 2003
From: rk at dat.cz (Radek Kanovsky)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030523000917.GV25467@eleanor.internal.ywlcs.org>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
	<20030523000917.GV25467@eleanor.internal.ywlcs.org>
Message-ID: <20030523072151.GB549@dat.cz>

On Thu, May 22, 2003 at 07:09:17PM -0500, Dustin Mitchell wrote:

> >     print "Content-Type: text/html\n\n"
> >     print SubResult[0]
> 
> It looks like you're still writing a CGI script, since you're using 'print'.
> If you're taking the time to install and use mod_python, I would suggest
> using the publisher handler or writing your own handlers, as those truly take
> advantage of the status of mod_python as a handler.

You can easily force print statement to work in mod_python. Request
object has method 'write' and it is only method that print statement
calls on destination object. So you can replace sys.stdout with req.


from mod_python import apache
import sys

def handler(req):
    sys.stdout = req
    print 'hello world'
    return apache.OK


Regards,

Radek Kanovsky
From mike.looijmans at asml.com  Fri May 23 09:47:33 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A
	depressingsaga.
Message-ID: <01c320ff$91b7d880$926a1e6e@wsasd464>

>You can easily force print statement to work in mod_python. Request
>object has method 'write' and it is only method that print statement
>calls on destination object. So you can replace sys.stdout with req.


Drawback is that there is only ONE sys.stdout per interpreter. So make very
sure that only ONE thread can write to sys.stdout...
cgihandler does this, and the result is that only one thread can be active.
With the worker mpm on apache, the python/cgi system will effectively become
single-threaded.

The other way around is much better: let all your handlers receive a file like
"output" object, and write to that object. When using CGI, you assign
sys.stdout, and in mod_python, you can use the request object. This allows
multithreading in mod_python, a must-have if you use any thread-based apache
MPM.

In fact, I let the CGI version of the handler create a Request-like object
(mimic) based on environ strings, which I pass to the mod_python based
scripts. This yields max performance on mod_python, and an unnoticable drop on
CGI based Python scripting (the overhead of starting a new interpreter process
is much, much bigger than the creation of the reqeust object).

Mike.


From simen at lunarlounge.org  Mon May 26 01:52:17 2003
From: simen at lunarlounge.org (Simen Brekken)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] 
	Strange behaviour using PythonHandler module::ClassName.method
Message-ID: <001901c32318$aca09c20$0200000a@MOONRAKER>

Running Apache 2.0 on Windows XP

I'm having some wierd behaviour with the PythonHandler module::ClassName.method directive:

.htaccess:
-----------
AddHandler python-program .py
PythonFixupHandler pso.modpython::fixup
PythonLogHandler pso.modpython::cleanup

PythonHandler test::TestHandler.handle

test.py:
-----------
class TestHandler:
 def __init__(self, req):
  pass

 def handle(self, req):
  req.pso().send_http_header()

  print "Hello world from TestHandler3!"
  return OK

def handler(self, req):
 pass


Now for the wierd part, if I try the url http://localhost/test.py everything works as planned, prints out everything, but if I comment out the "handler" function of the module i get a 404 error. What eludes me is why it is required since it's not referenced anywhere? The pso fixups only add sessions and a reference to that session object on the request so it shouldn't interfere.

Also I'm searching for a way to make mod_python reload *everything* for each request, I find myself having to restart the webserver even after making changes.

And lastly, the error handling/reporting seems very flawed, even if a handler method is required in the actual method, I get no messages in the error log about it.

___
SIMEN BREKKEN / born to synthesize.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030526/6443b8ed/attachment-0001.htm
From i at mindlace.net  Tue May 27 13:30:44 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] publisher frustration
Message-ID: <3ED3CAF4.1060108@mindlace.net>

I'm trying to make a simple function work using the publisher; I get a 
404 if I try to access a function in the method I want to use.

Here is what I think should be the appropriate entry in my <VirtualHost> 
directive:

     <Directory /slideshow/>
         AddHandler python-program .py
	#I added to the python path in frustration...
         PythonPath "sys.path+['/home/mindlace/site/slideshow']"
         PythonHandler mod_python.publisher
         PythonDebug on
     </Directory>

This is (the relevant portion of) slide_view.py:

body = ("<html><head><title>resolution</title>"
         "<body><p>The resolution is %s</p></body>"
         "</html>")

def showResolution(req):
     if 'Cookie' in req.headers_in:
         Cookies = SmartCookie().load(req.headers_in['Cookie'])
         if 'resolution' in Cookies:
             resolution = Cookies['resolution'].split('x')
     else:
         resolution = "Not Found"
     return body % resolution

So why does this do nothing?

http://mindlace.net/slideshow/slide_view.py/showResolution

Thanks for any pointers,

~mindlace


From graeme_matthew at hotmail.com  Wed May 28 13:18:09 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>

Hi all

sorry to bug you all, but I am at the point of giving up. I have taken off 2 
days so I can do some python development and in true fashion I still after 
bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
windows !!! and I hate windows !!!!! this make me even more angry :-)

I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
installed by default and it is causing lots of headaches !

I cannot run the ./configure file as apxs is nowhere to be found on the 
machine, yet there is dso support as they have included mod_perl etc. I have 
now spent the last 3 hours trying to get the httpd-devel files, and this is 
even worse as each time you get an rpm then there is another 50 rpms 
dependencies (well not that much)

Does anyone know where one can get a mod_python binary install for linux 
just like the one that exists for Windows as I cannot afford to spend my 2 
coding days trying to get mod_python working, if there is no such file then 
thats fine, ill forget it all together.

Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
installation and getting building apache from scratch to get all the devel 
files etc for modPython ?

Any help will be appreciated as I do not know what to do now ...

Many thanks

_________________________________________________________________
ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
great for sharing photos and documents. Go to  
http://join.msn.com/?page=dept/home&pgmarket=en-au

From jdavis-mod-python at empires.org  Tue May 27 21:47:26 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
References: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <200305272147.26380.jdavis-mod-python@empires.org>

On Tuesday 27 May 2003 08:18 pm, Graeme Matthew wrote:
> Hi all
>
> sorry to bug you all, but I am at the point of giving up. I have taken off
> 2 days so I can do some python development and in true fashion I still
> after bloody 8 hours cannot get modpython to work on linux that took 5
> minutes on windows !!! and I hate windows !!!!! this make me even more
> angry :-)
>
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is
> installed by default and it is causing lots of headaches !
>
> I cannot run the ./configure file as apxs is nowhere to be found on the
> machine, yet there is dso support as they have included mod_perl etc. I

The first thing that comes to my mind is that you should be able to install 
apxs through some kind of apache development package. Check around for some 
rpms, and then it should configure fine.

Good luck,
	Jeff Davis

From j.healy at ugrad.unimelb.edu.au  Wed May 28 16:55:37 2003
From: j.healy at ugrad.unimelb.edu.au (Joseph Hepburne Healy)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <Pine.OSF.4.10.10305281648590.19441-100000@cassius.its.unimelb.edu.au>


Hi,

I have gone through similar difficulties with mandrake 9.0 and found it
was simplest to uninstall mandrakes apache and download source for apache
2 and modpython 3 and build
both of them. It was relatively easy, the only issue was the location of
the configuration files (/usr/local/apache2/conf i think) rather than /etc
but that is just a configure option (haven't had time to fix it)

If you install httpd-devel or apache-devel (can't remember what mandrake
calls it) you might get the apxs file. To find out which package doing:

urpmf apxs

should tell you what package to install. When using mandrake the easiest
way to install packages is to use (as root):

urpmi packagename

this should solve the dependencies and prompt you for the correct cds to
insert.

Hope this helps

Joe

On Wed, 28 May 2003, Graeme Matthew wrote:

> Hi all
> 
> sorry to bug you all, but I am at the point of giving up. I have taken
off 2 
> days so I can do some python development and in true fashion I still after 
> bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
> windows !!! and I hate windows !!!!! this make me even more angry :-)
> 
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
> installed by default and it is causing lots of headaches !
> 
> I cannot run the ./configure file as apxs is nowhere to be found on the 
> machine, yet there is dso support as they have included mod_perl etc. I have 
> now spent the last 3 hours trying to get the httpd-devel files, and this is 
> even worse as each time you get an rpm then there is another 50 rpms 
> dependencies (well not that much)
> 
> Does anyone know where one can get a mod_python binary install for linux 
> just like the one that exists for Windows as I cannot afford to spend my 2 
> coding days trying to get mod_python working, if there is no such file then 
> thats fine, ill forget it all together.
> 
> Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
> installation and getting building apache from scratch to get all the devel 
> files etc for modPython ?
> 
> Any help will be appreciated as I do not know what to do now ...
> 
> Many thanks
> 
> _________________________________________________________________
> ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
> great for sharing photos and documents. Go to  
> http://join.msn.com/?page=dept/home&pgmarket=en-au
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From kaback at kaback.de  Wed May 28 12:57:54 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] strange util.FieldStorage() behavior
Message-ID: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>

I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

i wrote a simple handler script that only parses its "cgi parameters"
using util.FieldStorage() and returns apache.OK

the script worked fine so far, but everytime the script runs, the memory
used by apache rises a few kbyte.

next i removed the util.FieldStorage() function from the script, with the
result, that the memory usage remains constant.

because of that i searched for an other way to get access to the committed
form parameters and found the mod_python.publisher handler.

i added the publisher handler to my apache config and wrote a file 
"hello.py" with the following content:
--------
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what
-------

now a request with the url http://localhost/hello/say?what=blahblah
returns the expected "I am saying blahblah

i wrote a script, that calls wget on that url within an endless loop:
------- getit.pl
while(1) {
        system("wget -O test.htm http://localhost/hello/say?what=blah");
}
-------

next i wrote a verry simple "tool" that monitors memory usage of my
http-servers
------- memwatch.pl
while(1)
{
  open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
  while(<OUTPUT>)
  {
    chomp();
    my($first, $second) = split();
    my($sec, $min, $hour) = localtime(time);
    print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
  }
  sleep(1);
}
-------

and, the unexpected happens, runnig memwatch.pl while running getit.pl
shows the constant growing memory usage of the httpd processes.

the longer the string after http://localhost/hello/say?what= is, the
more the memory seems to grow each time.

reading the docs, i found, that even mod_python.publisher uses the
functionality of util.FieldStorage(), which i wanted not to use
because of the strange things i figured out during my first test
(abovementioned)

for me at the moment this looks like a amemory leakage in 
util.FieldStorage. i searched the archive and did not found anything 
regarding that behavior.

so my question is: Am I doing something wrong? 

thanks in advance
Karsten

From graeme_matthew at hotmail.com  Wed May 28 21:31:11 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F493Bo1hyOwlZz00027cd1@hotmail.com>

Hi all me again after so many hours, jeez im thinking of just using windows 
but I can convince myself !!!

ok I got the apache source (2.0.45) installed like adream and is up and 
running but when I run the modpython source install it wont even work here 
is an extract

mod_python.c: In function `PythonPostReadRequestHandler':
mod_python.c:1719: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1726: parse error before '*' token
mod_python.c: In function `PythonTransHandler':
mod_python.c:1727: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1729: parse error before '*' token
mod_python.c: In function `PythonTypeHandler':
mod_python.c:1730: `req' undeclared (first use in this function)
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/isixhosa/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
[root@amazulu mod_python-3.0.3]#


please any help is good

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From neo at https.ru  Wed May 28 15:43:38 2003
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <354390192.20030528154338@https.ru>


  I also suspect some memory leakage caused by mod_python3. I do not
have time to investigate what and where is going on. I use mod_python
with much more complicated code (internet shop, for example), and I
saw constant memory growth. Though it's small, as compared to the
total memory apache2 + mod_python3 take, that gives rise to somewhat
bad feeling. :)


> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK

> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.

> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.

> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.

> i added the publisher handler to my apache config and wrote a file 
> "hello.py" with the following content:
> --------
> """ Publisher example """

> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------

> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah

> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------

> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------

> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.

> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.

> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)

> for me at the moment this looks like a amemory leakage in 
> util.FieldStorage. i searched the archive and did not found anything 
> regarding that behavior.

> so my question is: Am I doing something wrong? 

> thanks in advance
> Karsten


--- 
Neo Eureka / mailto:neo@https.ru

From kaback at kaback.de  Wed May 28 14:16:00 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <354390192.20030528154338@https.ru>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
Message-ID: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>

hi

On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
> 
>   I also suspect some memory leakage caused by mod_python3. I do not
> have time to investigate what and where is going on. I use mod_python
> with much more complicated code (internet shop, for example), and I
> saw constant memory growth. Though it's small, as compared to the
> total memory apache2 + mod_python3 take, that gives rise to somewhat
> bad feeling. :)
>

well, i'am using  python within much more complicated code too, in fact,
that code is so complicated, that each time it is requested the memory
usage of my apache is rising about 64kb. i'am using POST method to
submit xml content and the code is called many times within one second.

are there other methods to get POSTed form data from within an mod_python 
script than util.FieldStorage()?

Karsten

From davidf at sjsoft.com  Wed May 28 15:24:08 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
	<20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <3ED4B878.3020608@sjsoft.com>

Karsten Backhaus wrote:

>hi
>
>On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
>  
>
>>  I also suspect some memory leakage caused by mod_python3. I do not
>>have time to investigate what and where is going on. I use mod_python
>>with much more complicated code (internet shop, for example), and I
>>saw constant memory growth. Though it's small, as compared to the
>>total memory apache2 + mod_python3 take, that gives rise to somewhat
>>bad feeling. :)
>>    
>>
>well, i'am using  python within much more complicated code too, in fact,
>that code is so complicated, that each time it is requested the memory
>usage of my apache is rising about 64kb. i'am using POST method to
>submit xml content and the code is called many times within one second.
>  
>
Hmmm ... never noticed this before, looks like our app is doing the same ...

>are there other methods to get POSTed form data from within an mod_python 
>script than util.FieldStorage()?
>
>Karsten
>
util.FieldStorage is implemented in pure Python, so you can look at 
exactly what it does to either debug the memory growth or write your own 
implementation.

David

From grisha at modpython.org  Wed May 28 10:47:25 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <20030528104439.O96588-100000@oldchief.reply.net>


I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
I used ab (nice tool that comes with Apache) to run 100000 requests, and I
have not seen any grwoth (except initally, but that's normal) in httpd's
memory consumption.

Grisha

On Wed, 28 May 2003, Karsten Backhaus wrote:

> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2
>
> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK
>
> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.
>
> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.
>
> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.
>
> i added the publisher handler to my apache config and wrote a file
> "hello.py" with the following content:
> --------
> """ Publisher example """
>
> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------
>
> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah
>
> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------
>
> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------
>
> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.
>
> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.
>
> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)
>
> for me at the moment this looks like a amemory leakage in
> util.FieldStorage. i searched the archive and did not found anything
> regarding that behavior.
>
> so my question is: Am I doing something wrong?
>
> thanks in advance
> Karsten
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dustin at ywlcs.org  Wed May 28 10:34:44 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528104439.O96588-100000@oldchief.reply.net>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<20030528104439.O96588-100000@oldchief.reply.net>
Message-ID: <20030528153444.GI22286@eleanor.internal.ywlcs.org>

On Wed, May 28, 2003 at 10:47:25AM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
> I used ab (nice tool that comes with Apache) to run 100000 requests, and I
> have not seen any grwoth (except initally, but that's normal) in httpd's
> memory consumption.

Is it possible there's a reference cycle buried within the FieldStorage
class?  Perhaps some strategic application of the weakref module could
straighten things out..

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From graeme_matthew at hotmail.com  Thu May 29 10:25:18 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Cannot find mod_python.so 
Message-ID: <BAY1-F23HYt2gYCL6nt000050c0@hotmail.com>

Hi all me again

well im still trying to get this stuff working and it aint happening ... sob

I have installed apache from source with --enable-so

I have run modpython from source using
--with-python
--with-apxs

it all seemed to go fine

I have added all the appropriate directives in httpd.conf

But when I start the apache server I get this

Cannot load /usr/local/apache2/modules/mod_python.so into server

Please, any help will be appreciated

Graeme

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From graeme_matthew at hotmail.com  Thu May 29 21:37:35 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] ImportError: Cannot find _apache
Message-ID: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>

Hi all me again ....

Im almost there ...

I keep on getting the following error in my cgi-script, on the command line, 
I have included my httpd.conf directives and some additional information...

Any help would be much appreciated ...

Ta


PYTHON INTERPRETER:

[root@amazulu cgi-bin]# /usr/local/bin/python2.2
Python 2.2.2 (#1, May 29 2003, 17:09:39)
[GCC 3.2.2 (Mandrake Linux 9.1 3.2.2-3mdk)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>>from mod_python import apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
67, in ?
    import _apache
ImportError: No module named _apache
>>>import mod_python
>>>from mod_python import apache
>>>

Wierd !!!

### HTTPD CONF
<Directory "/www/bi/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
    #AddHandler python-program .py this was a problem
    AddHandler cgi-script .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

#SCRIPT

#! /usr/local/bin/python2.2


import MySQLdb
import sys
sys.path.append('/www/bi/classes')

from mod_python import apache
from HtmWindow import getHtmlWindow

def query(req):

blah blah blah

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From dustin at ywlcs.org  Thu May 29 08:45:00 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] ImportError: Cannot find _apache
In-Reply-To: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
References: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
Message-ID: <20030529134459.GR22286@eleanor.internal.ywlcs.org>

On Thu, May 29, 2003 at 09:37:35PM +1000, Graeme Matthew wrote:
> >>>from mod_python import apache
> Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
> 67, in ?
>    import _apache
> ImportError: No module named _apache
> >>>import mod_python
> >>>from mod_python import apache

The reason you don't get an error the next time is this:  During the first
import, Python partially loads and constructs the mod_python.apache module,
until it gets to "import _apache", which causes an exception.  However, at
that point the mod_python.apache module is *loaded*, it's just not completely
initialized.  So when you get to the second from..import, Python finds that
mod_python.apache is already loaded and simply returns a reference to the
loaded (but still not initialized) module.

The reason _apache can't be found is that it's the mechanism by which Python
can communicate with the Apache process in which it is running.  Since, at
the command line, you're not running in an Apache process, there's no such
module.  Specifically, that module is provided by mod_python.so, which is
loaded by Apache when it starts up, but not loaded or even referenced by the
command-line-invoked Python.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From poeml at suse.de  Fri May 30 13:47:32 2003
From: poeml at suse.de (Peter Poeml)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] LONG_LONG -> PY_LONG_LONG in python-2.3b1
Message-ID: <20030530114732.GK3798@suse.de>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030530/168caf14/attachment-0001.bin
From tohmas.ash at takashi.zzn.com  Fri May 30 17:37:57 2003
From: tohmas.ash at takashi.zzn.com (tohmas ash)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] force download and content-disposition
Message-ID: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>

hello, I'm a mod_python's newbie , and I use it with postgresql for 
a web application...

In my software, I upload some files with a form to a bytea in 
postgresql, no problems for that. But after, I want to force the 
download via a link...

Before I use PHP for my web application, I know how do that in php 
it's like that:
"
header("Content-type: application/force-download");
header("Content-Disposition: attachment; filename=$filename");
readfile("$path"); 
"

I know how set the configuration of the "content-type" with 
mod_python,
But I don't know how do the same whith the "Content-Disposition" ...
I have found the same question in the mailing list but without 
answer ...

so if you can help me, thanks in advance for your answer.

ps: sorry for my english, I'm a french boy ^_^


Get your Free E-mail at http://takashi.zzn.com
___________________________________________________________
Get your own Web-based E-mail Service at http://www.zzn.com
From grisha at modpython.org  Fri May 30 19:12:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] force download and content-disposition
In-Reply-To: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>
Message-ID: <20030530191059.N36634-100000@oldchief.reply.net>



On Fri, 30 May 2003, tohmas ash wrote:

> Before I use PHP for my web application, I know how do that in php
> it's like that:
> "
> header("Content-type: application/force-download");
> header("Content-Disposition: attachment; filename=$filename");

In mod_python it's:

req.headers_out["Content-type"] = "application/force-download"
req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename

Grisha

From i at mindlace.net  Sat May 31 22:04:25 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <2147483647.1054418665@[10.0.1.2]>

--On 19 Monday, May 2003 15:59 -0500 ganapathy murali krishnan 
<gmurali@cs.uchicago.edu> wrote:

> Hope you find the code useful.
>
> - Murali
>
> ------ translate.py ------------
> from mod_python import apache, util
> from utils import urls
> import os, string, config

This code is very useful, but I get an import error on utils; What utils 
module are you using?

Thanks,
~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/9f7825bc/attachment-0001.bin
From i at mindlace.net  Sat May 31 22:47:23 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 21:53:32 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <2147483647.1054418665@[10.0.1.2]>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu> <2147483647.1054418665@[10.0.1.2]>
Message-ID: <2147483647.1054421243@[10.0.1.2]>

--On 31 Saturday, May 2003 22:04 -0700 emf <i@mindlace.net> wrote:
>> ------ translate.py ------------
>> from mod_python import apache, util
>> from utils import urls
>> import os, string, config
>
> This code is very useful, but I get an import error on utils; What utils
> module are you using?

Sigh. Obviously i should just use urls.py.

I assume you mean to use req.get_config() instead of trying to import 
config?

~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/c0066a84/attachment-0001.bin
From cblunck2000 at yahoo.com  Thu May  1 20:23:12 2003
From: cblunck2000 at yahoo.com (Christopher Blunck)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] restricted execution mode and PyXML
Message-ID: <20030502032312.16834.qmail@web10604.mail.yahoo.com>

Hi all-

Am working with ZSI under mod_python.  The problem I'm
running into is that ZSI imports PyXML, which uses
dynamic module importing to load encoders for various
xml codecs (UTF-8 being the most common encoder). 
When the PyXML code tries to do the dynamic module
import, the Python interpretter prevents it with an
error something like "cannot dynamically import module
during restricted execution mode".  Forgive me for not
quoting the exact error, as I'm currently upgrading
the OS on that box right now to RH 9.

This occurs with the latest mod_python (3.0.3) with
PyXML 0.7.1 and httpd 2.0.40.

Has anyone else had success in importing PyXML modules
within code run by modpython?

Or, does anyone have any information they'd be willing
to share to help me out (e.g. "you might try and check
out XXX or YYY").  Anything would be useful to me at
this point.




-c

__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From max.zhang at converzal.com  Fri May  2 19:28:36 2003
From: max.zhang at converzal.com (max.zhang)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] restricted execution mode and PyXML
References: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <003a01c3109d$f8fc9ac0$1700a8c0@converzamax>

I met the same problem while calling raw_data.encode('utf-8','replace') 


System :
            RH 8
            mod_python 3.0.3
            python2.2
            apache 2.0

----- Original Message ----- 
From: "Christopher Blunck" <cblunck2000@yahoo.com>
To: <mod_python@modpython.org>
Sent: Friday, May 02, 2003 11:23 AM
Subject: [mod_python] restricted execution mode and PyXML


> Hi all-
> 
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder). 
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
> 
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
> 
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
> 
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
> 
> 
> 
> 
> -c
> 
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
From vjb at vuit.com  Fri May  2 07:36:11 2003
From: vjb at vuit.com (Vincent J. Buonassisi)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>

hi,

i had the same problem w/ the same environment (rh 8, python 2.2.1, 
mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
problem was to install python 2.2.2.

cheers,

On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:

> Hi all-
>
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder).
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
>
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
>
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
>
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
>
>
>
>
> -c
>
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mpmlopes at clix.pt  Fri May  2 17:52:48 2003
From: mpmlopes at clix.pt (Marco Lopes)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] problem using apache.parse_qsl
Message-ID: <3EB2A260.7050702@clix.pt>

I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying 
to use apache.parse_qsl to parse que contents of the POST, but i'm 
getting this error message:

Mod_python error: "PythonHandler template"

Traceback (most recent call last):

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
320, in HandlerDispatch
     module = import_module(module_name, config)

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
499, in import_module
     module = imp.load_module(mname, f, p, d)

   File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
     parse_qsl = apache.parse_qsl

AttributeError: 'module' object has no attribute 'parse_qsl'

I looked trough the documentation and the didn't find any reference to 
the function beeing deprecated so i think i'm doing something wrong, the 
code i'm using and that is causing the error is:


from mod_python import apache
 

parse_qsl = apache.parse_qsl


Can anyone give me a clue of what am i doing wrong?

From grisha at modpython.org  Fri May  2 14:12:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] problem using apache.parse_qsl
In-Reply-To: <3EB2A260.7050702@clix.pt>
Message-ID: <20030502141049.O87074-100000@oldchief.reply.net>


http://www.modpython.org/live/current/doc-html/pyapi-util-funcs.html

from mod_python import util

parse_qsl = util.parse_qsl

:-)

On Fri, 2 May 2003, Marco Lopes wrote:

> I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying
> to use apache.parse_qsl to parse que contents of the POST, but i'm
> getting this error message:
>
> Mod_python error: "PythonHandler template"
>
> Traceback (most recent call last):
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 320, in HandlerDispatch
>      module = import_module(module_name, config)
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 499, in import_module
>      module = imp.load_module(mname, f, p, d)
>
>    File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
>      parse_qsl = apache.parse_qsl
>
> AttributeError: 'module' object has no attribute 'parse_qsl'
>
> I looked trough the documentation and the didn't find any reference to
> the function beeing deprecated so i think i'm doing something wrong, the
> code i'm using and that is causing the error is:
>
>
> from mod_python import apache
>
>
> parse_qsl = apache.parse_qsl
>
>
> Can anyone give me a clue of what am i doing wrong?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 14:36:19 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
Message-ID: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>

Hi,

I'm new to this list and apologize in advance if I've missed the obvious.
I've searched the archives and found a couple similar instances of my
problem but also think that recent changes should have fixed what I'm
seeing. Hence, this post.

I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
point I get:

Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"

Before installing, I updated the entire ports collection source so I should
be current in that regard. As far as I can tell from reading the port
Makefile in Apache2, threads are enabled. So I didn't modify anything, just
ran make, make install.

I remain confused about how to modify httpd.conf, in spite of the message at
the end of the make install of mod_python, which talks about setting
PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
of the error I'm seeing? Or is something else wrong?

Also, could someone show me a slightly more explicit (so to speak) snippet
of httpd.conf that correctly modifies the standard one placed by a ports
installation on FreeBSD? I just want the minimum mods to httpd.conf to
confirm functionality before proceeding to other setups.

Again, sorry if I'm missing the obvious. Anyone with the time to help, many
thanks in advance.

Steve Holmlund

From grisha at modpython.org  Sat May  3 22:40:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>
Message-ID: <20030503223914.T10690-100000@oldchief.reply.net>


You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"
>
> Before installing, I updated the entire ports collection source so I should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything, just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help, many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 22:36:29 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <20030503223914.T10690-100000@oldchief.reply.net>
Message-ID: <ACECLHIPFJLGGDMIIFBGMEJJCKAA.sholmlund@coastside.net>

Thank you! That worked.

I did see that message but my review of the Apache Makefile had me convinced
that the standard port for Apache had threads enabled. Sorry for my
ignorance. I should have tried that first. Not being a programmer, one of
the appeals of FreeBSD is the ports collection. I get in trouble when I have
to step beyond those bounds.

Appreciate the response.
Steve



-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Saturday, May 03, 2003 7:41 PM
To: Steve Holmlund
Cc: mod_python@modpython.org
Subject: Re: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue



You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"
>
> Before installing, I updated the entire ports collection source so I
should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything,
just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message
at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the
cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help,
many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From conrad at hep.caltech.edu  Sun May  4 00:47:59 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
References: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
Message-ID: <1052034479.4050.13.camel@Presario>

Hi

This didn't work for me: on Redhat 9 (which comes with Python 2.2.2) the
only way I could solve the problem was to pre-import the offending files
outside the handler function. E.g. in my case

# Added to avoid the error:
# 'RuntimeError: cannot unmarshal code objects in restricted execution mode'
# That means that other encodings will make the query fail!
mod = __import__('encodings.utf_8',globals(),locals(),'*')
mod = __import__('encodings.utf_16_be',globals(),locals(),'*')

which is a hack since it allows only these two encodings to be used.

If anybody has a better fix, please let me know!

Cheers

Conrad

On Fri, 2003-05-02 at 07:36, Vincent J. Buonassisi wrote:
> hi,
> 
> i had the same problem w/ the same environment (rh 8, python 2.2.1, 
> mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
> problem was to install python 2.2.2.
> 
> cheers,
> 
> On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:
> 
> > Hi all-
> >
> > Am working with ZSI under mod_python.  The problem I'm
> > running into is that ZSI imports PyXML, which uses
> > dynamic module importing to load encoders for various
> > xml codecs (UTF-8 being the most common encoder).
> > When the PyXML code tries to do the dynamic module
> > import, the Python interpretter prevents it with an
> > error something like "cannot dynamically import module
> > during restricted execution mode".  Forgive me for not
> > quoting the exact error, as I'm currently upgrading
> > the OS on that box right now to RH 9.
> >
> > This occurs with the latest mod_python (3.0.3) with
> > PyXML 0.7.1 and httpd 2.0.40.
> >
> > Has anyone else had success in importing PyXML modules
> > within code run by modpython?
> >
> > Or, does anyone have any information they'd be willing
> > to share to help me out (e.g. "you might try and check
> > out XXX or YYY").  Anything would be useful to me at
> > this point.
> >
> >
> >
> >
> > -c
> >
> > __________________________________
> > Do you Yahoo!?
> > The New Yahoo! Search - Faster. Easier. Bingo.
> > http://search.yahoo.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From conrad at hep.caltech.edu  Tue May  6 01:36:26 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
Message-ID: <1052210186.2757.57.camel@Presario>

Hi

Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
src/requestobject.c to allow mod_python programs to send files
efficiently using the available Apache machinery for both unencrypted
and SSL/TLS connections.

What does it do?
----------------

Implements a file_write() method for the Request object. It does NOT
write headers, only the file.

E.g.

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while 
  req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

The first argument is the filename, the second is the offset to start
reading in the file, the third argument is the number of bytes to write.
The last two arguments are optional.

The return value is the number of bytes written, which may be less than
the total number of bytes in the file. See the manpage of sendfile for
more details.

The patch is NOT OS- or architecture dependent, it merely lets Apache
call its output handler, in the same way that req.write() does for
string data.

If there is interest, the patch can developed further to also set the
content-type, send headers and iterate until the whole file is sent.

Cheers

Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From conrad at hep.caltech.edu  Tue May  6 01:49:51 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210186.2757.57.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
Message-ID: <1052210991.2757.61.camel@Presario>

Ugh, pressed the send button before finishing the code snippet:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

Conrad

On Tue, 2003-05-06 at 01:36, Conrad Steenberg wrote:
> Hi
> 
> Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
> src/requestobject.c to allow mod_python programs to send files
> efficiently using the available Apache machinery for both unencrypted
> and SSL/TLS connections.
> 
> What does it do?
> ----------------
> 
> Implements a file_write() method for the Request object. It does NOT
> write headers, only the file.
> 
> E.g.
> 
> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while 
>   req.write_file("/var/www/html/index.html",0,-1)
>   return apache.OK
> 
> The first argument is the filename, the second is the offset to start
> reading in the file, the third argument is the number of bytes to write.
> The last two arguments are optional.
> 
> The return value is the number of bytes written, which may be less than
> the total number of bytes in the file. See the manpage of sendfile for
> more details.
> 
> The patch is NOT OS- or architecture dependent, it merely lets Apache
> call its output handler, in the same way that req.write() does for
> string data.
> 
> If there is interest, the patch can developed further to also set the
> content-type, send headers and iterate until the whole file is sent.
> 
> Cheers
> 
> Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From gdamjan at mail.net.mk  Tue May  6 11:51:53 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210991.2757.61.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
	<1052210991.2757.61.camel@Presario>
Message-ID: <20030506095153.GA12597@legolas.on.net.mk>

> Ugh, pressed the send button before finishing the code snippet:

too fast on the keyboard.

> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while sent>=0:
>     sent = req.write_file("/var/www/html/index.html",0,-1)
                                                     ^^^^^

I guess it should be "sent" there too:

    sent = req.write_file("/var/www/html/index.html", sent, -1)


-- 
Damjan Georgievski
jabberid: damjan@bagra.net.mk
From grisha at ispol.com  Wed May  7 13:46:04 2003
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] test - please ignore
Message-ID: <20030507134354.V62572-100000@oldchief.reply.net>


this is a test (the list moved to a different server) - please ignore

grisha


From kemu at sdf-eu.org  Sat May 10 16:33:34 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] won't run 
Message-ID: <004301c31701$2349a160$be00a8c0@kemu3jve3zxvcw>

I installed mod_python the test example worked. 
Now I would like to learn to use it.
When I add this to my apache config file:
   1077 <Directory /home/linhost/control>
   1078         SetHandler python-program
   1079         PythonHandler mod_python.publisher
   1080 </Directory>

and in /home/linhost/control I place a file test.py with contents:
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what


I get this http://62.221.205.240/control/hello.py/say
Please help me out Regards Jonas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/de621b90/attachment-0002.htm
From kemu at sdf-eu.org  Sat May 10 17:52:20 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] upload file script
Message-ID: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>

I'm looking on how to upload a file in mod_python are there any examples ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/5fcf56e6/attachment-0002.htm
From mike_verdone at shaw.ca  Sat May 10 15:51:05 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 22:00:00 2004
Subject: [mod_python] upload file script
In-Reply-To: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
Message-ID: <200305101551.05815.mike_verdone@shaw.ca>

Here you go!

Files sent to an Apache server via an HTTP request appear as file-like objects 
to mod_python. They support the read() method to get their contents. Assuming 
you're running the publisher handler, this function can receive the contents 
of a file sent by a user in an HTTP request (where the file's field is named 
"file").

  def getFile(req, file=None):
      if file is None:   # There was no file sent.
          return "Error! There was no file!"
      if type(file) is str:   # File was sent as a regular field, which is 
bad.
          return "Error! File was a string!"
      fileData = file.read()    # Get the file data into a Python variable.
      # ... process file data ...
      return "Ok, file received."

The HTML that calls this function is as follows. Not the enctype attribute of 
the form tag.

  <form action="getFile" method="post" enctype="multipart/form-data">
  <input type="file" name="file" />
  <input type="submit" name="submit" value="Submit" />
  </form>



Could someone who knows the FAQ password please add this, if it's useful. 
Thanks.

Mike.


On May 10, 2003 09:52 am, Jonas Geiregat wrote:
> I'm looking on how to upload a file in mod_python are there any examples ?

From vmilitaru at sympatico.ca  Mon May 12 23:53:03 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] Threads...
Message-ID: <3EC06C1F.4070602@sympatico.ca>

Greetings,
since python adaptors to the 3 RDBMS I've tried so far all require
python "with" thread support, I've recompiled python "without-threads"
specifically for mod_python (but without "installing" it).

Then

./configure
--with-apache=/q/apache_1.3.27
--with-python=/q/Python-2.2.2
--with-apxs=/usr/local/apache/bin/apxs

compiles OK, installs OK.
But then apache chokes on new mod_python with:

.../apachectl start

Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
Cannot load /usr/local/apache/libexec/mod_python.so into server:
/usr/local/apache/libexec/mod_python.so: undefined symbol: openpty

Line 210 of httpd.conf is simply the 'LoadModule' directive for
mod_python.so


So, provided this error is related to the thread support issue (from my
corner of the globe it sure smell like it), how is the list juggling
with different versions of python (some apps depending on python "with"
thread support, some depending on python "without" ... and I needing
"both")? Or is there a simpler solution I simply missed while going
through the docs?

Cheers,
Vio



From aturner at neteconomist.com  Tue May 13 09:02:25 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
Message-ID: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>


I have a scripts that takes an XML document, munges it and turns it into
HTML to be outputed to the user.  It's setup so that it will run either as
a request handler in mod_python or as a stand alone application.  I am
having extreme problem with the script being slow when running in
mod_python.  I have done some timings, and it is 10-20 times slower
that it is standalone.  The program makes calls to a Postgresql database
using the stock pg module.  The system is running mod_python 3.0.3
w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.

I can't seem to use the profiler to narrow down the problem at all because 
I can't seem to figure out how to execute the profiler on a function that 
takes arguments, and all the functions take at least the HTTP request 
object as an argument, which makes it hard to use the python profiler.  
Even so the script runs fine stand alone.  The one page I am looking at 
goes from 2.2 seconds to 23 seconds.

Has anyone had any similar issues?

Alex Turner
NetEconomist

From grisha at modpython.org  Tue May 13 10:24:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC06C1F.4070602@sympatico.ca>
Message-ID: <20030513102310.H56353-100000@oldchief.reply.net>


IIRC this has to do with -lutil missing from the compile command on some
systems - try hacking the Makefile and adding it manually.

Grisha

On Mon, 12 May 2003, Vio wrote:

> Greetings,
> since python adaptors to the 3 RDBMS I've tried so far all require
> python "with" thread support, I've recompiled python "without-threads"
> specifically for mod_python (but without "installing" it).
>
> Then
>
> ./configure
> --with-apache=/q/apache_1.3.27
> --with-python=/q/Python-2.2.2
> --with-apxs=/usr/local/apache/bin/apxs
>
> compiles OK, installs OK.
> But then apache chokes on new mod_python with:
>
> .../apachectl start
>
> Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
> Cannot load /usr/local/apache/libexec/mod_python.so into server:
> /usr/local/apache/libexec/mod_python.so: undefined symbol: openpty
>
> Line 210 of httpd.conf is simply the 'LoadModule' directive for
> mod_python.so
>
>
> So, provided this error is related to the thread support issue (from my
> corner of the globe it sure smell like it), how is the list juggling
> with different versions of python (some apps depending on python "with"
> thread support, some depending on python "without" ... and I needing
> "both")? Or is there a simpler solution I simply missed while going
> through the docs?
>
> Cheers,
> Vio
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grisha at modpython.org  Tue May 13 10:31:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513102833.C56353-100000@oldchief.reply.net>


I'd first make sure it is not a DNS problem - probably the easiest thing
is to run tcpdump on port 53 to what DNS activity takes place when a
request comes in. Make sure that apache does not resolve host names, also
watch out for postgres using tcpwrappers to resolve host names for
incoming connections.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I have a scripts that takes an XML document, munges it and turns it into
> HTML to be outputed to the user.  It's setup so that it will run either as
> a request handler in mod_python or as a stand alone application.  I am
> having extreme problem with the script being slow when running in
> mod_python.  I have done some timings, and it is 10-20 times slower
> that it is standalone.  The program makes calls to a Postgresql database
> using the stock pg module.  The system is running mod_python 3.0.3
> w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
>
> I can't seem to use the profiler to narrow down the problem at all because
> I can't seem to figure out how to execute the profiler on a function that
> takes arguments, and all the functions take at least the HTTP request
> object as an argument, which makes it hard to use the python profiler.
> Even so the script runs fine stand alone.  The one page I am looking at
> goes from 2.2 seconds to 23 seconds.
>
> Has anyone had any similar issues?
>
> Alex Turner
> NetEconomist
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From rpinder at usc.edu  Tue May 13 08:29:19 2003
From: rpinder at usc.edu (rpinder)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <200305101551.05815.mike_verdone@shaw.ca>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
 <200305101551.05815.mike_verdone@shaw.ca>
Message-ID: <3EC10F4F.4000300@usc.edu>

Hi all,

I'm trying to plan the most efficient way to implement an apache 
project.  And I have a really basic question about how mod_python (or 
any apache 'mod 'kind of framework, probably) works.  I think i've read 
that a major advantage of mod_python is the fact you dont have to 
re'load the interpreter for each instance... but i'm wondering if this 
also equates to having a global, accessible, code space that python is 
operating in.... 

I'm following the examples in the documentation, and am using the 
'handler' example, and have a python script with functions defined that 
do the work  (there is a database connection happening with an Interbase 
server). 

What I"m trying to do is to have a dictionary created and available to 
all users - without having to re'create the dictionary for each apache 
visitor.  I have a reason to NOT want to accomplish this using a 
database table - even though the dictionary is quite large, and requires 
a lot of overhead each time it's created.

So my feeble question involves whether or not theres a way to do 
something like this with modpython, or is it impossible since each 
instance of the python script gets called in its entirety each time a 
request comes in from Apache.

Thanks for any thoughts

Rich

From mod_python at mikebell.org  Tue May 13 09:39:22 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <20030513163921.GT19515@netvista.mikebell.org>

On Tue, May 13, 2003 at 08:29:19AM -0700, rpinder wrote:
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.

Each seperate apache process has its own interpreter, so you might have 10
of them at once. So it's great for things like database connection pooling
(10 database connections is not much different from one, certainly a lot
better than creating a new one for each request) but it's not a single
globally consistant namespace. Unless you use apache2, a thread mpm,
and only one process. But that's not recommended. Maybe you could use
something like berkeley db to back your dictionary?
From francoislepoutre at compuserve.com  Tue May 13 18:13:40 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] _really_ Basic concept question
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx>

Hi

> I'm trying to plan the most efficient way to implement an apache
> project.  And I have a really basic question about how mod_python (or
> any apache 'mod 'kind of framework, probably) works.  I think i've read
> that a major advantage of mod_python is the fact you dont have to
> re'load the interpreter for each instance... but i'm wondering if this
> also equates to having a global, accessible, code space that python is
> operating in....

Nearly so. Depending on your platform.

on win32:
    You will one workspace on win32 with shared code space
    (beware of that apache/win32 is threaded you will have to
    organize some locking when updating the python data structures)
on linux:
    not one python interpreter but a series of them depending on the
    context (apache setup and stress level)

> I'm following the examples in the documentation, and am using the
> 'handler' example, and have a python script with functions defined that
> do the work  (there is a database connection happening with an Interbase
> server).
>
> What I"m trying to do is to have a dictionary created and available to
> all users - without having to re'create the dictionary for each apache
> visitor.  I have a reason to NOT want to accomplish this using a
> database table - even though the dictionary is quite large, and requires
> a lot of overhead each time it's created.

Sure, you can build your code in such way that your apache mod_python
handler downloads what is necessary at loadtime and keep that stuff
(dictionnaries and the db handler ) buffered within the python "memory
space".

Only once in a while the python interperter be restarted (depending on
apache
setup), your memory workspace will be recreated from the db
(possibly a couple of seconds).

Perf will be excellent in this situation. At later calls to your stuff
apache
will be "python-driven". That's what we do.

We rely heavily on highly secure but time-consuming db-based datastructure.

The possibily to smartly buffer your db stuff within python was our reason
to
switch  into python/mod_python (from iis/isapi).

Welcome onboard :)

Fran?ois

PS
If you wish to organize session-handling this way, it is doable as well but
it
will be a bit more complex as you will need to resync your set of apache
instances (each one handling its own session pool).


From aturner at neteconomist.com  Tue May 13 12:49:18 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
Message-ID: <Pine.LNX.4.44.0305131247280.10997-100000@mx1.neteconomist.com>


I would assume that because each request is handled by a different apache
fork the answer would be that you can't just 'share' variable between
instances because apache doesn't share memory (other than shmem).  This is
also assuming you have apache configured to fork not to thread.  I don't 
know if Python has an interface to shmem, but it probably does, and I 
would imagine you could set it up using that.

Of course, I'm new at mod_python and therefore this is my best guest!

Alex Turner
NetEconomist

On Tue, 13 May 2003, rpinder wrote:

> Hi all,
> 
> I'm trying to plan the most efficient way to implement an apache 
> project.  And I have a really basic question about how mod_python (or 
> any apache 'mod 'kind of framework, probably) works.  I think i've read 
> that a major advantage of mod_python is the fact you dont have to 
> re'load the interpreter for each instance... but i'm wondering if this 
> also equates to having a global, accessible, code space that python is 
> operating in.... 
> 
> I'm following the examples in the documentation, and am using the 
> 'handler' example, and have a python script with functions defined that 
> do the work  (there is a database connection happening with an Interbase 
> server). 
> 
> What I"m trying to do is to have a dictionary created and available to 
> all users - without having to re'create the dictionary for each apache 
> visitor.  I have a reason to NOT want to accomplish this using a 
> database table - even though the dictionary is quite large, and requires 
> a lot of overhead each time it's created.
> 
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.
> 
> Thanks for any thoughts
> 
> Rich
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From aturner at neteconomist.com  Tue May 13 12:51:54 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513102833.C56353-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>


I'm pretty sure this is not a DNS problem.  I can break down each loop
that calls the database, and it shows 0.7 seconds per row returning
instead of like 0.03 seconds.  The dns servers are all configured
correctly for both forward and reverse lookups, and I do not have the same
problems in PHP (other the fact that PHP is crap compared to python - but
it's not this slow).

Alex Turner
NetEconomist

On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> I'd first make sure it is not a DNS problem - probably the easiest thing
> is to run tcpdump on port 53 to what DNS activity takes place when a
> request comes in. Make sure that apache does not resolve host names, also
> watch out for postgres using tcpwrappers to resolve host names for
> incoming connections.
> 
> Grisha
> 
> On Tue, 13 May 2003, Alex Turner wrote:
> 
> >
> > I have a scripts that takes an XML document, munges it and turns it into
> > HTML to be outputed to the user.  It's setup so that it will run either as
> > a request handler in mod_python or as a stand alone application.  I am
> > having extreme problem with the script being slow when running in
> > mod_python.  I have done some timings, and it is 10-20 times slower
> > that it is standalone.  The program makes calls to a Postgresql database
> > using the stock pg module.  The system is running mod_python 3.0.3
> > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> >
> > I can't seem to use the profiler to narrow down the problem at all because
> > I can't seem to figure out how to execute the profiler on a function that
> > takes arguments, and all the functions take at least the HTTP request
> > object as an argument, which makes it hard to use the python profiler.
> > Even so the script runs fine stand alone.  The one page I am looking at
> > goes from 2.2 seconds to 23 seconds.
> >
> > Has anyone had any similar issues?
> >
> > Alex Turner
> > NetEconomist
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grisha at modpython.org  Tue May 13 13:22:18 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513132042.F57186-100000@oldchief.reply.net>


Hmm... Well I'm kinda short on ideas. If it's any reassurance - I'm using
pg with mod_python for a small project right now, and it's very very fast,
i.e. I am not aware of any problems with combination of mod_python and
postgresql.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > I'd first make sure it is not a DNS problem - probably the easiest thing
> > is to run tcpdump on port 53 to what DNS activity takes place when a
> > request comes in. Make sure that apache does not resolve host names, also
> > watch out for postgres using tcpwrappers to resolve host names for
> > incoming connections.
> >
> > Grisha
> >
> > On Tue, 13 May 2003, Alex Turner wrote:
> >
> > >
> > > I have a scripts that takes an XML document, munges it and turns it into
> > > HTML to be outputed to the user.  It's setup so that it will run either as
> > > a request handler in mod_python or as a stand alone application.  I am
> > > having extreme problem with the script being slow when running in
> > > mod_python.  I have done some timings, and it is 10-20 times slower
> > > that it is standalone.  The program makes calls to a Postgresql database
> > > using the stock pg module.  The system is running mod_python 3.0.3
> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> > >
> > > I can't seem to use the profiler to narrow down the problem at all because
> > > I can't seem to figure out how to execute the profiler on a function that
> > > takes arguments, and all the functions take at least the HTTP request
> > > object as an argument, which makes it hard to use the python profiler.
> > > Even so the script runs fine stand alone.  The one page I am looking at
> > > goes from 2.2 seconds to 23 seconds.
> > >
> > > Has anyone had any similar issues?
> > >
> > > Alex Turner
> > > NetEconomist
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jwyant at sfbcic.com  Tue May 13 13:03:45 2003
From: jwyant at sfbcic.com (Wyant, Jaime)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
Message-ID: <D2B0A0EB8839D711B63300902784B052187DE0@MS-EXCHANGE>

I used pg / mod_python on my site too and it ran well.  My customer wanted
MySql though and we moved to it.  Thanks to DB-API 2.0 I had only a small
amount of code changes necessary...

jw

>>-----Original Message-----
>>From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
>>Sent: Tuesday, May 13, 2003 12:22 PM
>>To: alex@neteconomist.com
>>Cc: mod_python@modpython.org
>>Subject: Re: [mod_python] mod_python slowness
>>
>>
>>
>>Hmm... Well I'm kinda short on ideas. If it's any reassurance 
>>- I'm using
>>pg with mod_python for a small project right now, and it's 
>>very very fast,
>>i.e. I am not aware of any problems with combination of mod_python and
>>postgresql.
>>
>>Grisha
>>
>>On Tue, 13 May 2003, Alex Turner wrote:
>>
>>>
>>> I'm pretty sure this is not a DNS problem.  I can break 
>>down each loop
>>> that calls the database, and it shows 0.7 seconds per row returning
>>> instead of like 0.03 seconds.  The dns servers are all configured
>>> correctly for both forward and reverse lookups, and I do 
>>not have the same
>>> problems in PHP (other the fact that PHP is crap compared 
>>to python - but
>>> it's not this slow).
>>>
>>> Alex Turner
>>> NetEconomist
>>>
>>> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>>>
>>> >
>>> > I'd first make sure it is not a DNS problem - probably 
>>the easiest thing
>>> > is to run tcpdump on port 53 to what DNS activity takes 
>>place when a
>>> > request comes in. Make sure that apache does not resolve 
>>host names, also
>>> > watch out for postgres using tcpwrappers to resolve host names for
>>> > incoming connections.
>>> >
>>> > Grisha
>>> >
>>> > On Tue, 13 May 2003, Alex Turner wrote:
>>> >
>>> > >
>>> > > I have a scripts that takes an XML document, munges it 
>>and turns it into
>>> > > HTML to be outputed to the user.  It's setup so that it 
>>will run either as
>>> > > a request handler in mod_python or as a stand alone 
>>application.  I am
>>> > > having extreme problem with the script being slow when 
>>running in
>>> > > mod_python.  I have done some timings, and it is 10-20 
>>times slower
>>> > > that it is standalone.  The program makes calls to a 
>>Postgresql database
>>> > > using the stock pg module.  The system is running 
>>mod_python 3.0.3
>>> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 
>>to see if that would
>>> > > help and it didn't.  Everything else is stock RedHat 
>>8.0 - python-2.2.1-17.
>>> > >
>>> > > I can't seem to use the profiler to narrow down the 
>>problem at all because
>>> > > I can't seem to figure out how to execute the profiler 
>>on a function that
>>> > > takes arguments, and all the functions take at least 
>>the HTTP request
>>> > > object as an argument, which makes it hard to use the 
>>python profiler.
>>> > > Even so the script runs fine stand alone.  The one page 
>>I am looking at
>>> > > goes from 2.2 seconds to 23 seconds.
>>> > >
>>> > > Has anyone had any similar issues?
>>> > >
>>> > > Alex Turner
>>> > > NetEconomist
>>> > >
>>> > > _______________________________________________
>>> > > Mod_python mailing list
>>> > > Mod_python@modpython.org
>>> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> > >
>>> >
>>> > _______________________________________________
>>> > Mod_python mailing list
>>> > Mod_python@modpython.org
>>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> >
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From vmilitaru at sympatico.ca  Tue May 13 11:43:51 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
Message-ID: <3EC112B7.2010405@sympatico.ca>

Gregory (Grisha) Trubetskoy wrote:

>IIRC this has to do with -lutil missing from the compile command on some
>systems - try hacking the Makefile and adding it manually.
>  
>

Thanks for the tip. That seems to do it. For the record, I simply edited
mod_python-2.7.8/src/Makefile as:
...
LIBS=-lm  /q/Python-2.2.2/libpython2.2.a  -lutil


Now apache starts ok, and I can access 'mysql' from python prompt just 
as nicely from the python prompt.
 >>> import MySQLdb

But this puzzles me: importing MySQLdb from within PythonHandler still 
gives me the old 'threads' error:

-------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", 
line 193, in Dispatch
    result = object(req)

  File "/usr/local/apache/htdocs/server/test.py", line 20, in handler
    import MySQLdb

  File "/usr/local/lib/python2.2/site-packages/MySQLdb/__init__.py", 
line 27, in ?
    import _mysql

ImportError: /usr/local/lib/python2.2/site-packages/_mysql.so: undefined 
symbol: pthread_key_create
--------------------------


This is puzzling because I recompiled/reinstalled both mod_python and 
MySQLdb, manually zapped _mysql.so (just to be sure), obviously 
restarted apache, and still get this pthreads error. Seems to me like 
mod_python and the python interactive interpreter are not using the same 
"_mysql.so" somehow. Is mod_python cache somewhere ?
Any ideas?

Vio


From jack_diederich at email.com  Tue May 13 15:35:10 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
Message-ID: <20030513203511.32703.qmail@email.com>

> 
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).

Are you doing anything wierd like running apache or progres
through inetd (so it has to start a new process for every
request)?  Or are you doing a new database connection for
each row?

If the identical python program takes 1/10th the time running
stand-alone I think the DNS was one the right track - it must
be a network related problem.

You might also want to print to the resulting page the time
the process took from start to finish.  If the page is very
complicated it might look slower even if it isn't.

You can also try commenting out all the database calls and
timing the stand alone and mod_python versions.  That will
at least allow you to narrow down the problem.  Also consider
using 'strace' on the stand alone and the apache version.
Compare the system calls between the two to see if something
pathological is happening in the mod_python case.

-jack
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

From vmilitaru at sympatico.ca  Tue May 13 14:46:21 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca>
Message-ID: <3EC13D7D.7030406@sympatico.ca>

Followup ...

On possibility that this may be 'mysql'-related, I am getting similar 
error with Oracle8i:

------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
193, in Dispatch
result = object(req)

File "/usr/local/apache/htdocs/server/test.py", line 21, in handler
import DCOracle2

File "/usr/local/lib/python2.2/site-packages/DCOracle2/__init__.py", 
line 37, in ?
from DCOracle2 import *

File "/usr/local/lib/python2.2/site-packages/DCOracle2/DCOracle2.py", 
line 104, in ?
import dco2

ImportError: /usr/local/lib/python2.2/site-packages/DCOracle2/dco2.so: 
undefined symbol: PyThread_get_thread_ident
-----------------------

But going through the list archives, I didn't see previous mentions of 
this threads-related problem, so I am totally puzzled. Maybe this is 
mod_python 2.7 related? Without better alternative, I'll give a shot at  
mod_python 3.0, although in doing so I'm losing mod_ssl, as it's not 
available (last time I checked) for apache 2.x.

If of any interest, I'm running:
Linux version 2.4.18-bf2.4  (gcc version 2.95.4 20011002 (Debian 
prerelease))

Vio



From chip at cyan.com  Tue May 13 16:02:18 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC13D7D.7030406@sympatico.ca>
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
Message-ID: <20030513230218.M9562@cyan.com>

> But going through the list archives, I didn't see previous mentions 
> of this threads-related problem, so I am totally puzzled. Maybe this 
> is mod_python 2.7 related? Without better alternative, I'll give a 
> shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
> it's not available (last time I checked) for apache 2.x.

mod_ssl is included in apache2(no longer a seperate project...)

http://httpd.apache.org/docs-2.0/mod/mod_ssl.html

-chip

From vmilitaru at sympatico.ca  Tue May 13 16:47:38 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
	<20030513230218.M9562@cyan.com>
Message-ID: <3EC159EA.2090107@sympatico.ca>

As I later discovered:)
I guess the mod_ssl maintainer should mention this fact (for clueless 
users like me) on the mod_ssl page. [Mistakingly] believing otherwise, 
that was my main reason for not migrating to apache2. But all is well 
which ends well, and all threads errors previously mentionned are 
definitely confined to mod_python2.7

Thanks Paul and Grisha for helpful tips.
Sorry for the noise, though.
Vio



Paul Querna wrote:

>>But going through the list archives, I didn't see previous mentions 
>>of this threads-related problem, so I am totally puzzled. Maybe this 
>>is mod_python 2.7 related? Without better alternative, I'll give a 
>>shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
>>it's not available (last time I checked) for apache 2.x.
>>    
>>
>
>mod_ssl is included in apache2(no longer a seperate project...)
>
>http://httpd.apache.org/docs-2.0/mod/mod_ssl.html
>
>-chip
>
>
>  
>



From francoislepoutre at compuserve.com  Wed May 14 08:14:39 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] Database connectivity
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
	<001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx> <3EC14706.8000507@usc.edu>
Message-ID: <002801c319e0$19ef7cc0$0d6e4351@mixio7jpsmlatx>

Hi

> So... the script that is referenced in my handler..... if it has an
> _init_ section, will that do the trick ?? and it'll only get run once,
> when the interpreter calls the handler for the first time ???

No _init_  section or objectified kind of code required.
Some plain python stuff will do :)

An example... not tested here. Hope you pick the idea
You just need to dive in now .. Good luck.

Fran?ois

############################
#! C:\Python22\python.exe

# mod_python handling
from mod_python import apache,util

# database connectivity
from mx import DateTime,ODBC

# your database connectivity here
# this is mxODBC/ODBC code
# will depend on your midlle ware...

# this code will run rarely..
# a couple of 1/n of seconds upon setup
database_handle = ODBC.iODBC.Connect("my_connectionion","dba","sql",0)
cursor_handle  = database_handle.cursor()
cursor_handle.execute("select * from customers")
my_shared_data = cursor_handle.fetchall()
cursor_handle.close()

################################
def handler(req):

    # should be long the first time
    # very fast the next one...
    req.content_type = "text/plain"
    req.send_http_header()
    req.write(str(my_shared_data))

    return apache.OK




From majbritt37 at hotmail.com  Fri May 16 00:03:49 2003
From: majbritt37 at hotmail.com (=?iso-8859-1?B?TeVydGVuIEFzaw==?=)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python for python 2.3
Message-ID: <BAY1-F171sTgirt0KZt0001b438@hotmail.com>

Hello.

I'm having some trouble. It seems that either apache or mod_python doesn't 
realise that I'm using python 2.3, instead they insist that I have python 
2.2.2 installed. The apache error logs show:

make_obcallback: could not import mod_python.apache.

It seems like mod_python is linked to the python22.dll in my system32 
folder. I tried removing it so that it might try to use the python23.dll 
that's also there, but apache then refuses to start.

So how do I fix this? Do I need to recompile either apache or mod_python 
(which I have no idea how to do) or can I find binaries somewhere that might 
work?

Help help.

_________________________________________________________________
L?ttare att hitta dr?mresan med MSN Resor http://www.msn.se/resor/

From aturner at neteconomist.com  Fri May 16 10:34:39 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513203511.32703.qmail@email.com>
Message-ID: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>


It's very unlikely to be a network problem because both the database and 
the web server are running on the same host.  The timings that I took were 
done by placing a start=time.time() at the top of the code section that 
executes 
the file, and a print time.time()-start at the end, so I'm fairly 
convinced that these are accurate.  I then placed more time tests around 
other parts of the mechanism which allowed me to gauge how long each 
segment of the run takes.  I have found a serious flaw in my database 
class, having corrected that though, I found something interesting:

This is my init routine for by DBResult class:

def __init__(self,query):
 start=time.time()
 self.query=query
 self.counter=0;
 self.lresults_l=self.query.getresult()
 self.dresults_l=self.query.dictresult()
 self.fresults_l=[]

 # Copy the indexed/dict values into fresults
 for a in range(len(self.lresults_l)):
   x=0
   self.fresults_l.append({})
   for b in self.lresults_l[a]:
      self.fresults_l[a][x]=b
      x=x+1

   for b in self.dresults_l[a].keys():
      self.fresults_l[a][b]=self.dresults_l[a][b]

 print "Init time %f<br>\n" % (time.time()-start)

It's not pretty, but it does show something wierd:

inside apache this gives a time of: 0.178554 secs
outside apache this gives a time of: 0.093750 secs

almost twice as fast.

Maybe this is a pg module problem, I don't know, but it's certainly wierd!

Alex Turner
NetEconomist

On Tue, 13 May 2003, Jack Diederich wrote:

> > 
> > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > that calls the database, and it shows 0.7 seconds per row returning
> > instead of like 0.03 seconds.  The dns servers are all configured
> > correctly for both forward and reverse lookups, and I do not have the same
> > problems in PHP (other the fact that PHP is crap compared to python - but
> > it's not this slow).
> 
> Are you doing anything wierd like running apache or progres
> through inetd (so it has to start a new process for every
> request)?  Or are you doing a new database connection for
> each row?
> 
> If the identical python program takes 1/10th the time running
> stand-alone I think the DNS was one the right track - it must
> be a network related problem.
> 
> You might also want to print to the resulting page the time
> the process took from start to finish.  If the page is very
> complicated it might look slower even if it isn't.
> 
> You can also try commenting out all the database calls and
> timing the stand alone and mod_python versions.  That will
> at least allow you to narrow down the problem.  Also consider
> using 'strace' on the stand alone and the apache version.
> Compare the system calls between the two to see if something
> pathological is happening in the mod_python case.
> 
> -jack
> 

From grisha at modpython.org  Fri May 16 12:07:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:01 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>
Message-ID: <20030516120158.K6045-100000@oldchief.reply.net>


The times listed below, are these averages of multiple iterations (e.g.
10000) or just a one time try?

Anyway - it doesn't look like this is where the bottleneck is - you
mentioned before that a page that took 2.2 seconds to load takes 23
seconds - that's almost 21 seconds of difference whereas below you have a
slowdown of 0.8 secs.

Grisha


On Fri, 16 May 2003, Alex Turner wrote:

>
> It's very unlikely to be a network problem because both the database and
> the web server are running on the same host.  The timings that I took were
> done by placing a start=time.time() at the top of the code section that
> executes
> the file, and a print time.time()-start at the end, so I'm fairly
> convinced that these are accurate.  I then placed more time tests around
> other parts of the mechanism which allowed me to gauge how long each
> segment of the run takes.  I have found a serious flaw in my database
> class, having corrected that though, I found something interesting:
>
> This is my init routine for by DBResult class:
>
> def __init__(self,query):
>  start=time.time()
>  self.query=query
>  self.counter=0;
>  self.lresults_l=self.query.getresult()
>  self.dresults_l=self.query.dictresult()
>  self.fresults_l=[]
>
>  # Copy the indexed/dict values into fresults
>  for a in range(len(self.lresults_l)):
>    x=0
>    self.fresults_l.append({})
>    for b in self.lresults_l[a]:
>       self.fresults_l[a][x]=b
>       x=x+1
>
>    for b in self.dresults_l[a].keys():
>       self.fresults_l[a][b]=self.dresults_l[a][b]
>
>  print "Init time %f<br>\n" % (time.time()-start)
>
> It's not pretty, but it does show something wierd:
>
> inside apache this gives a time of: 0.178554 secs
> outside apache this gives a time of: 0.093750 secs
>
> almost twice as fast.
>
> Maybe this is a pg module problem, I don't know, but it's certainly wierd!
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Jack Diederich wrote:
>
> > >
> > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > that calls the database, and it shows 0.7 seconds per row returning
> > > instead of like 0.03 seconds.  The dns servers are all configured
> > > correctly for both forward and reverse lookups, and I do not have the same
> > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > it's not this slow).
> >
> > Are you doing anything wierd like running apache or progres
> > through inetd (so it has to start a new process for every
> > request)?  Or are you doing a new database connection for
> > each row?
> >
> > If the identical python program takes 1/10th the time running
> > stand-alone I think the DNS was one the right track - it must
> > be a network related problem.
> >
> > You might also want to print to the resulting page the time
> > the process took from start to finish.  If the page is very
> > complicated it might look slower even if it isn't.
> >
> > You can also try commenting out all the database calls and
> > timing the stand alone and mod_python versions.  That will
> > at least allow you to narrow down the problem.  Also consider
> > using 'strace' on the stand alone and the apache version.
> > Compare the system calls between the two to see if something
> > pathological is happening in the mod_python case.
> >
> > -jack
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From aturner at neteconomist.com  Fri May 16 12:27:38 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030516120158.K6045-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305161221570.29332-100000@mx1.neteconomist.com>


DOH!

I found the problem.  And can easily explain the discrepancy between
running the script stand alone vs in apache.  There is one major
difference between apache, and standalone: Cookies.  My Container object
that is passed to each tag function was fetching the cookies from the
request object for each execution! I moved the code into the right place,
i.e. where the request object initialy get's dealt with, and that has
of course cured the problem!

Many thanks to all who have replied.

And as a random editorial, I have to say that I enjoy working with 
mod_python/python as a web platform far more than any other I've used 
previously including php, perl, java and coldfusion.  It has both the 
flexibility and the power to make web development fast and easy (thank 
goodness for proper stack traces and a consistance language API!)

Alex Turner
NetEconomist

On Fri, 16 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> The times listed below, are these averages of multiple iterations (e.g.
> 10000) or just a one time try?
> 
> Anyway - it doesn't look like this is where the bottleneck is - you
> mentioned before that a page that took 2.2 seconds to load takes 23
> seconds - that's almost 21 seconds of difference whereas below you have a
> slowdown of 0.8 secs.
> 
> Grisha
> 
> 
> On Fri, 16 May 2003, Alex Turner wrote:
> 
> >
> > It's very unlikely to be a network problem because both the database and
> > the web server are running on the same host.  The timings that I took were
> > done by placing a start=time.time() at the top of the code section that
> > executes
> > the file, and a print time.time()-start at the end, so I'm fairly
> > convinced that these are accurate.  I then placed more time tests around
> > other parts of the mechanism which allowed me to gauge how long each
> > segment of the run takes.  I have found a serious flaw in my database
> > class, having corrected that though, I found something interesting:
> >
> > This is my init routine for by DBResult class:
> >
> > def __init__(self,query):
> >  start=time.time()
> >  self.query=query
> >  self.counter=0;
> >  self.lresults_l=self.query.getresult()
> >  self.dresults_l=self.query.dictresult()
> >  self.fresults_l=[]
> >
> >  # Copy the indexed/dict values into fresults
> >  for a in range(len(self.lresults_l)):
> >    x=0
> >    self.fresults_l.append({})
> >    for b in self.lresults_l[a]:
> >       self.fresults_l[a][x]=b
> >       x=x+1
> >
> >    for b in self.dresults_l[a].keys():
> >       self.fresults_l[a][b]=self.dresults_l[a][b]
> >
> >  print "Init time %f<br>\n" % (time.time()-start)
> >
> > It's not pretty, but it does show something wierd:
> >
> > inside apache this gives a time of: 0.178554 secs
> > outside apache this gives a time of: 0.093750 secs
> >
> > almost twice as fast.
> >
> > Maybe this is a pg module problem, I don't know, but it's certainly wierd!
> >
> > Alex Turner
> > NetEconomist
> >
> > On Tue, 13 May 2003, Jack Diederich wrote:
> >
> > > >
> > > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > > that calls the database, and it shows 0.7 seconds per row returning
> > > > instead of like 0.03 seconds.  The dns servers are all configured
> > > > correctly for both forward and reverse lookups, and I do not have the same
> > > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > > it's not this slow).
> > >
> > > Are you doing anything wierd like running apache or progres
> > > through inetd (so it has to start a new process for every
> > > request)?  Or are you doing a new database connection for
> > > each row?
> > >
> > > If the identical python program takes 1/10th the time running
> > > stand-alone I think the DNS was one the right track - it must
> > > be a network related problem.
> > >
> > > You might also want to print to the resulting page the time
> > > the process took from start to finish.  If the page is very
> > > complicated it might look slower even if it isn't.
> > >
> > > You can also try commenting out all the database calls and
> > > timing the stand alone and mod_python versions.  That will
> > > at least allow you to narrow down the problem.  Also consider
> > > using 'strace' on the stand alone and the apache version.
> > > Compare the system calls between the two to see if something
> > > pathological is happening in the mod_python case.
> > >
> > > -jack
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 

From philipj at telia.com  Fri May 16 23:18:19 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <20030516231819.3bf2a966.philipj@telia.com>

Hello.

My subject is bad, because I can't figure out what to call what I want
to do.

I'm writing a wiki-ish application, where currently I'm writing URIs
like http://site.org/?page=cow&group=animals. I don't much like this
approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result. The ideal
thing would be if I could get mod_python to handle _all_ requests, for
any type of file (not just .py) in a directory, so that I could just
read req.uri and manually figure out what to do -- if the given group or
page doesn't exist, return 404 or something.

So, how could I achieve something like this with mod_python? The key
issue is getting mod_python to handle everything really, but if that's
not a good way to go about the problem, please tell what else I could
do. I've heard so much talk about twisted and zope, which I think might
do something like this, but both of those libraries/frameworks appear to
be so much more than I need -- I want to continue using mod_python.

Ideas?

// Philip J?genstedt
From mike at mapvision.com  Fri May 16 14:43:17 2003
From: mike at mapvision.com (Michael Gibbs)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Please help me  :)
Message-ID: <200305161443.17917.mike@mapvision.com>

Thanks in advance for any guidance you can provide.

Our problem is that we are trying to maintain a counter using a global 
variable. However the script returns different values when multiple browser 
form requests are being submitted. The counter seems to get changed by 
different requests but not as expected. Are we doing something wrong?

Thanks,
Mike. 


This is the HTML form we use to make the mod_python request. 

<HTML>
        <form action="http://localhost/form2" method="POST">
                <input type="submit">
        </form>
</HTML>


This is the python script (form2.py)

#Why does this script return different values for _count?
#This happens when two browsers are opened and multiple
#forms are submitted. Going back and forth between browsers
#seems to mess up/reset the count on different requests.

from mod_python import apache
_count = 0
def handler(req):
        global _count
        _count += 1
        req.content_type = "text/html"
        req.send_http_header()
        req.write('_count = %d' %_count)
        return apache.OK
From vlindberg at verio.net  Fri May 16 15:57:38 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <3EC55ED2.2010900@verio.net>

Philip J?genstedt wrote:
I don't much like this approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result.


What you  want has been termed object publishing by the Zope community, 
and that usage has been (fairly) widely adopted.  I have been 
researching this lately; AFAIK, you have three options that do this with 
mod_python:

1. mod_python publisher handler.  See the documentation on the 
mod_python site.  Advantage: built in, as close to apache as you can 
get.  Disadvantage: as close to apache as you can get.  Any supporting 
infrastructure will need to be written by you.

2. albatross + mod_python.  Albatross allows this sort of thing, see 
their "Random*Apps" and the associated documentation. Advantage: nice 
session management, page processing model. Disadvantage: the 
implementation of the Random Apps leaves a little to be desired -- it 
moves the user around through http redirects.

3. quixote + mod_python. This is a central feature of quixote, and they 
do it very nicely. Advantage: the mapping of the URL-space to the 
code-space is very elegant.  Disadvantage (at least for me): I don't 
like ptl (their html generation system) as much.


VanL

From mod_python at mikebell.org  Sat May 17 00:15:50 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <20030517071549.GU19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 11:18:19PM +0200, Philip J?genstedt wrote:
> So, how could I achieve something like this with mod_python? The key
> issue is getting mod_python to handle everything really, but if that's
> not a good way to go about the problem, please tell what else I could
> do.

Give this a try, in your apache configs do something like:

<Location /URL/>
SetHandler python-program
PythonHandler MyHandler
</Location>
From mod_python at mikebell.org  Sat May 17 00:18:56 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <200305161443.17917.mike@mapvision.com>
References: <200305161443.17917.mike@mapvision.com>
Message-ID: <20030517071855.GV19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
> Our problem is that we are trying to maintain a counter using a global 
> variable. However the script returns different values when multiple browser 
> form requests are being submitted. The counter seems to get changed by 
> different requests but not as expected. Are we doing something wrong?

Your global variables will only be shared by requests handled by the
same interpreter. Each apache process forked has its own. You need to
use some form of shared memory to get multiple processes to share a
counter, be it by mmaping a file or using a database connection or
whatever.
From etienne at cs.vu.nl  Sat May 17 15:29:25 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC55ED2.2010900@verio.net>
Message-ID: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
> 3. quixote + mod_python. This is a central feature of quixote, and 
> they do it very nicely. Advantage: the mapping of the URL-space to the 
> code-space is very elegant.  Disadvantage (at least for me): I don't 
> like ptl (their html generation system) as much.

BTW, you could also use other template systems with Quixote, for 
example there is the standalone  SimpleTAL which looked quite good. (I 
haven't used it yet, the author claims extensive Zope TAL and METAL 
compatibility)

EP

From etienne at cs.vu.nl  Sat May 17 15:34:55 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
wrote:
> My subject is bad, because I can't figure out what to call what I want
> to do.


The name for it is REST.
So to rephrase your question: "How can I make my application more 
REST-like?"

regards

EP

From news at exultants.org  Sat May 17 17:58:11 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
References: <20030516231819.3bf2a966.philipj@telia.com>
	<5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6lnr$e0n$1@main.gmane.org>

Etienne Posthumus wrote:
> 
> On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
> wrote:
> 
>> My subject is bad, because I can't figure out what to call what I want
>> to do.
> 
> 
> 
> The name for it is REST.
> So to rephrase your question: "How can I make my application more 
> REST-like?"
> 

For the benefit of Philip:

REST = "REpresentational State Transfer"

See <http://internet.conveyor.com/RESTwiki/moin.cgi> for a wiki 
describing the REST architectural style.

Here's an interesting looking project that tries to build an even higher 
level REST architecture on top of Quixote, 
<http://www.rexx.com/~dkuhlman/fsmGenerate_howto.html>

The end of that page has some other good links to other python + quixote 
+ REST resources.


From news at exultants.org  Sat May 17 17:47:08 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
References: <3EC55ED2.2010900@verio.net>
	<93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6l35$chi$1@main.gmane.org>

Etienne Posthumus wrote:
> On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
 >>
>> 3. quixote + mod_python. This is a central feature of quixote, and 
>> they do it very nicely. Advantage: the mapping of the URL-space to the 
>> code-space is very elegant.  Disadvantage (at least for me): I don't 
>> like ptl (their html generation system) as much.
> 
> 
> BTW, you could also use other template systems with Quixote, for example 
> there is the standalone  SimpleTAL which looked quite good. (I haven't 
> used it yet, the author claims extensive Zope TAL and METAL compatibility)

This is close to the approach I'm going to use.

I'll use Quixote for the object publishing, session handling, etc.  For 
templating I'll use PTL for generating programmed web-pages (e.g. RSS 
feeds) and PyMeld for pages that need to be "designed".

Van


From sury.ondrej at globe.cz  Mon May 19 14:35:55 2003
From: sury.ondrej at globe.cz (Ondrej Sury)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <20030517071855.GV19515@netvista.mikebell.org> (mod python's
 message of "Sat, 17 May 2003 00:18:56 -0700")
References: <200305161443.17917.mike@mapvision.com>
	<20030517071855.GV19515@netvista.mikebell.org>
Message-ID: <87llx36rmc.fsf@globe.cz>

mod_python@mikebell.org writes:

> On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
>> Our problem is that we are trying to maintain a counter using a global 
>> variable. However the script returns different values when multiple browser 
>> form requests are being submitted. The counter seems to get changed by 
>> different requests but not as expected. Are we doing something wrong?
>
> Your global variables will only be shared by requests handled by the
> same interpreter. Each apache process forked has its own. You need to
> use some form of shared memory to get multiple processes to share a
> counter, be it by mmaping a file or using a database connection or
> whatever.

I had some success when using threaded mpm model (per_child f.e.) in apache 2.x
which starts only on python interpreter for all threads in the same process group.

O.

-- 
Ondrej Sury - co/CTO                Globe Internet s.r.o. http://globe.cz/
Tel: +420(2)35365000 Fax: +420(2)35365009     Planickova 1, 162 00 Praha 6
From mike.looijmans at asml.com  Mon May 19 14:51:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <01c31e05$4f438280$926a1e6e@wsasd464>

I chose option #4: Build your own.

I just have /xx scriptaliased to point to a single .py handler. That one takes
the uri (request.path_info) and uses that to make the proper call.

I made it so that the request is like:

/xx/session/script...


(session could be a session ID, or name of database to use, and such).

The figures out which module to (re)import (the one named "script" in this
case), loads it, firgures out the parameters (usually the request object,
authorization information and a database connection) and calls its "main"
function.

Took about an hour to invent, implement and test and has been working
flawlessly for months. I like this language :-)
And it's backwards compatible with CGI too, at least, to the extent that I
need, so that servers without mod_python can use the same codebase (only the
initial handler differs).

Mike.


From davidf at sjsoft.com  Mon May 19 16:06:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <3EC8E4FB.90104@sjsoft.com>

Mike Looijmans wrote:

>I chose option #4: Build your own.
>
>I just have /xx scriptaliased to point to a single .py handler. That one takes
>the uri (request.path_info) and uses that to make the proper call.
>
Very cool. Is this with Apache directives?

>I made it so that the request is like:
>
>/xx/session/script...
>
>
>(session could be a session ID, or name of database to use, and such).
>
>The figures out which module to (re)import (the one named "script" in this
>case), loads it, firgures out the parameters (usually the request object,
>authorization information and a database connection) and calls its "main"
>function.
>
Presume you mean "The handler figures out"...?

>Took about an hour to invent, implement and test and has been working
>flawlessly for months. I like this language :-)
>And it's backwards compatible with CGI too, at least, to the extent that I
>need, so that servers without mod_python can use the same codebase (only the
>initial handler differs).
>
Very nice...
I think a description of how to do this would be a great addition to the 
modpython manual...

David

From philipj at telia.com  Mon May 19 18:53:11 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <20030519185311.17d2a126.philipj@telia.com>

> I chose option #4: Build your own.

It's interresting that you should say that, because I eventually came to
the same conclusion. It took a litter longer for me to invent (because
the last thing in the URI can be either a "group" or "node", which takes
some code to figure out which). Anyway, it's just 16 lines long, so that
feels better than importing quixote modules or something.

However, there is one flaw which it sounds you may have overcome. Since
I have DirectoryIndex index.py for my / on the server, just writing
http://site.org/ gives me a URI of /index.py. I resolve this by checking
if the last (and only!) element of the URI is the same as the filename
of the executing script. The downside is that it makes it impossible to
have a group or node called "index.py". Also, because I have my css in
the root (A special exception from the SetHandler python-progam is made
for the css file), no node can be called "stdb.css" Nor can I have a
"lib" node or dir, because of the "lib" dir containing all the modules
of my application.

You get the point... in practice, this isn't a very big problem, but
it's just not clean -- I'd like to get around it. So the question: does

> I just have /xx scriptaliased to point to a single .py handler.

mean that you use SetHandler python-program for entire dir, or are you
doing something smarter that might help me evade the issues I'm having?

// Philip J?genstedt
From gmurali at cs.uchicago.edu  Mon May 19 15:59:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
Message-ID: <3EC945B4.1050907@cs.uchicago.edu>

Sorry for not replying earlier... Here is the code, we use...
I have removed pieces of the code which deal with other stuff.
I hope I have not removed too many things...
This code is due to Dustin Mitchell who setup our site
initially.

We use translate.py as our translate handler, which as you can
see creates a req.url, which has lots of information about the
requested url. The check_dont_handle function, allows us to not
handle certain file types or certain subtrees of the DOCROOT.

Hope you find the code useful.

- Murali

------ translate.py ------------
from mod_python import apache, util
from utils import urls
import os, string, config

# This module is responsible for translating the URL space as designed
# into a filename, which Apache will use to control further processing
# of the request.
#
# It does lots of other things too, basically to process the request
# into a nice, Python-ish format.

def transhandler(req):
   # First check if we're configured not to handle this request.
   check_dont_handle(req)

   # Otherwise begin handling this normally
   try:
     # We use the URL class to calculate all of the parts of the URL
     # we were given
     req.url = urls.URL(req)

     # Check if this is a secure connection
     req.secure = is_secure(req)

     # Copy some important values into req
     req.filename, req.modpath = req.url.filename, req.url.modpath

     # Grab any relevant form data,
     req.form_data = util.FieldStorage(req, keep_blank_values=1, 
strict_parsing=1)

     # and register the next handler
     req.add_handler("PythonHandler", "handlers.dispatch")

   # And handle any errors during that time by logging and sending the
   # usual Apache 404 message.
   except:
     return apache.HTTP_NOT_FOUND

   return apache.OK

def check_dont_handle(req):
   """Supports the PythonOption DontHandle Apache configuration option:

PythonOption DontHandle initial-uri[:initial-uri[:initial-uri...]]

which causes the Python site to decline to handle any requests beginning
with one of the specified initial-uri's.  In that case, normal Apache
behavior will apply.
"""
   options = req.get_options()
   uri = req.uri
   if options.has_key('DontHandle'):
     dont_handle = string.split(options['DontHandle'], ':')
     for prefix in dont_handle:
       if prefix == uri[:len(prefix)]:
         raise apache.SERVER_RETURN, apache.DECLINED

def is_secure(req):
   # This seems the best way to do this
   return req.server.port == 443

-----end of translate.py ---------

------ urls.py ---------------

import config
from mod_python import util
import os, string, copy
import re

# This module is responsible for translating the URL space as designed
# into its components:
#
# http://py.cs.uchicago.edu/path/to/program/args1/args2?internal+data
# ----   ------------------ --------------- ----------- -------------
# |      server             \ script_path   \ args_path \ internal
# \ scheme

# All of these fields are member variables of the URL class. Further,
# args_path is available in list form as url.arguments.
# url.internal is a dictionary representing the value of internal as
# a standard URL query string.  url.special contains the characters
# from internal if it contains no '=', and is empty otherwise.

# the module sets the following fields in req:
#  filename -- the filename of the file which will produce the final
#     response.  Apache cares about this.
#  modpath -- a list of nested Python modules which will succeed in
#     representing the script.
#
# It's important to note that the latter two options define the file
# which will produce the final page, while the annotations on the URL
# are produced regardless of the Python program that will eventually
# produce the data.
#
# In particular, Apache is depending on this module to provide
# req.filename.  Apache config commands (e.g. <Directory>) will look
# at this result to determine what to do next.  To help out down the
# road, we also keep track of a module path to get to the relevant .py
# file, and the portion of the URI which specified that file.

# Python script files are:
#   'docroot'/'script_path'.py
# or
#   'docroot'/'script_path'/index.py
# And this program will find the longest possible match among those
# possibilities.

class URL:
   "Object to represent the URL for a given hit on the site."

   def __init__(self, req):
     # get the scheme (e.g., http or https)
     if req.server.port == 443:
       self.scheme = 'https'
     else:
       self.scheme = 'http'

     # Get the method (e.g., 'GET', 'POST', 'HEAD')
     self.method = req.method

     # server name (just to be safe)
     self.server = req.server.server_hostname

     # parse the path, finding the longest part that still refers to a
     # Python script.
     self._parse_path(req.uri)

   # ----
   # Helper functions

   def _parse_path(self, path):
     # Strip that initial slash
     path = path[1:]

     # Break the path into components
     components = []
     if path:
       components = string.split(path, '/')

     # We operate on 4-tuples:
     current = (
       config.docroot,                   # filename
       config.docmod,                    # modpath
       "/",                              # script_path
       components )                      # arguments
     FILENAME = 0
     MODPATH = 1
     SCRIPT_PATH = 2
     ARGUMENTS = 3

     best = None

     # Loop over those components
     while 1:
       # Try two variations of current, in order of length.
       # 'filename'.py
       fn = current[FILENAME] + '.py'
       if self._intree(fn, config.docroot) and \
          os.path.isfile(fn):
         best = ( fn, current[1], current[2], current[3] )

       # If it's a directory we can try 'filename'/index.py
       if os.path.isdir(current[FILENAME]):
         fn = os.path.join(current[FILENAME], 'index.py')
         if self._intree(fn, config.docroot) and \
            os.path.isfile(fn):
           best = ( fn, current[1] + ( 'index', ),
                    current[2], current[3] )

         # And since it's a directory, we can try the next level of
         # directory nesting
         if current[ARGUMENTS]:
           # Get the first component (that used to be an argument)
           comp = current[ARGUMENTS][0]
           # Break out on any funny business
           if comp == '..' or comp == '.' or comp == '':
             break

           # Ignore '.php', for compatibility
           if comp[-4:] == '.php':
             comp = comp[:-4]

           # Move to a new 'current'
           current = (
             os.path.join(current[FILENAME], comp),
             current[MODPATH] + ( comp, ),
             os.path.join(current[SCRIPT_PATH], comp),
             current[ARGUMENTS][1:] )
           continue

       break

     ( self.filename, self.modpath,
       self.script_path, self.arguments ) = best

     # and touch up the arguments a little bit...
     # filter out any empty elements
     self.arguments = filter(None, self.arguments)
     # and include a slash in the args_path only if necessary
     if self.script_path[-1] == '/':
       self.args_path = string.join(self.arguments, '/')
     else:
       self.args_path = '/' + string.join(self.arguments, '/')

   # Returns boolean indicating if PATH is in the directory tree rooted
   # at ROOT.  Also checks that PATH is absolute, and invariant under
   # normpath(), catching things like '../' and './'.  This class uses
   # this function as a sanity check.
   def _intree(self, path, root):
     return path == os.path.abspath(path) and \
            path == os.path.normpath(path) and \
            path[:len(root)] == root

---- end of urls.py -----


From conrad at hep.caltech.edu  Mon May 19 14:08:43 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
Message-ID: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>

Hi

Here is a patch to mod_python version 2.7.x that adds the method
write_file to the request object.

This method writes the named file to the client using the Apache
ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
(https) connections, with the former using the sendfile() system call
where available. This significantly improves performance and reduces CPU
usage relative to reading data into a buffer and writing it to the
client using the req.write() method.

Usage e.g.:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",sent,-1)
  return apache.OK


This is the companion patch to the 3.0.x version (also attached).

Please consider applying the patch(es) to the main tree.

Regards

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- src/requestobject.c.orig	Mon May 19 11:38:46 2003
+++ src/requestobject.c	Mon May 19 11:51:03 2003
@@ -781,6 +781,52 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    FILE *fd;
+    size_t offset=0, len=-1, nbytes;
+    struct stat status;
+    PyObject * py_result = NULL;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    rc=stat(fname,&status);
+    if (rc !=0) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    fd=fopen(fname,"r");
+    if (!fd) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=status.st_size;
+    if (offset!=0){
+      rc=fseek(fd,offset,SEEK_SET);
+      if (rc!=0){
+        PyErr_SetString(PyExc_IOError, "Could not seek to specified offset");
+        fclose(fd);
+        return NULL;      
+      }
+    }
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    nbytes = ap_send_fd_length(fd, self->request_rec, len);
+    
+    Py_END_ALLOW_THREADS
+    
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef requestobjectmethods[] = {
     {"add_common_vars",      (PyCFunction) req_add_common_vars,      METH_VARARGS},
     {"add_handler",          (PyCFunction) req_add_handler,          METH_VARARGS},
@@ -797,6 +843,7 @@
     {"register_cleanup",     (PyCFunction) req_register_cleanup,     METH_VARARGS},
     {"send_http_header",     (PyCFunction) req_send_http_header,     METH_VARARGS},
     {"write",                (PyCFunction) req_write,                METH_VARARGS},
+    {"write_file",           (PyCFunction) req_write_file,           METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From davidf at sjsoft.com  Tue May 20 09:30:22 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <3EC9D98E.6040707@sjsoft.com>

ganapathy murali krishnan wrote:

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.
>
> We use translate.py as our translate handler, which as you can
> see creates a req.url, which has lots of information about the
> requested url. The check_dont_handle function, allows us to not
> handle certain file types or certain subtrees of the DOCROOT.
>
> Hope you find the code useful.
>
> - Murali

I have found that we need to create physical directories in the Apache 
html directory corresponding to any subdirectories we want to handle in 
the Python script, otherwise we get a 404 error. Has anyone else found 
this? Is the SetLocation the answer for this?
The reason I would like to know is we would like to use dynamically 
generated path names without them existing on the disk

Thanks for the code
David

From dustin at ywlcs.org  Tue May 20 06:40:36 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC9D98E.6040707@sjsoft.com>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
Message-ID: <20030520114036.GS25467@eleanor.internal.ywlcs.org>

On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
> 
> I have found that we need to create physical directories in the Apache 
> html directory corresponding to any subdirectories we want to handle in 
> the Python script, otherwise we get a 404 error. Has anyone else found 
> this? Is the SetLocation the answer for this?
> The reason I would like to know is we would like to use dynamically 
> generated path names without them existing on the disk

For some unknown reason Apache checks that req.filename exists.  I usually
just point it at the translation script itself (__file__).

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From davidf at sjsoft.com  Tue May 20 14:12:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520114036.GS25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA1BB7.3020803@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>  
>
>>I have found that we need to create physical directories in the Apache 
>>html directory corresponding to any subdirectories we want to handle in 
>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>this? Is the SetLocation the answer for this?
>>The reason I would like to know is we would like to use dynamically 
>>generated path names without them existing on the disk
>>    
>>
>
>For some unknown reason Apache checks that req.filename exists.  I usually
>just point it at the translation script itself (__file__).
>
>Dustin
>
>  
>
Thanks, where does the check happen, and where do you do the pointing?
Looking at the docs, I guess it could happen in PythonTransHandler, 
PythonHeaderParserHandler or PythonInitHandler
It doesn't seem clear to me exactly where the path resolution is done in 
Apache relative to these handlers... Looking at the mod_python source 
didn't seem to indicate either
PythonTransHandler is designed to resolve the URI to a filename, but the 
resolution is actually correct, so it would be nice not to interfere 
before the actual .htaccess file is used...

Thanks again
David

From ballums at swbell.net  Tue May 20 10:02:26 2003
From: ballums at swbell.net (Ben Allums)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>
Message-ID: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>

On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:

> Here is a patch to mod_python version 2.7.x that adds the method
> write_file to the request object.
> 
> This method writes the named file to the client using the Apache
> ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> (https) connections, with the former using the sendfile() system call
> where available. This significantly improves performance and reduces
> CPU usage relative to reading data into a buffer and writing it to
> the client using the req.write() method.

Thank you Conrad.  I current use a series of "req.write()" calls to do
this exact operation.


Ben
From davidf at sjsoft.com  Tue May 20 17:19:34 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520131332.GU25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
	<3ECA1BB7.3020803@sjsoft.com>
	<20030520131332.GU25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA4786.3060705@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 02:12:39PM +0200, David Fraser wrote:
>  
>
>>Dustin Mitchell wrote:
>>
>>    
>>
>>>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>>>
>>>
>>>      
>>>
>>>>I have found that we need to create physical directories in the Apache 
>>>>html directory corresponding to any subdirectories we want to handle in 
>>>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>>>this? Is the SetLocation the answer for this?
>>>>The reason I would like to know is we would like to use dynamically 
>>>>generated path names without them existing on the disk
>>>>  
>>>>
>>>>        
>>>>
>>>For some unknown reason Apache checks that req.filename exists.  I usually
>>>just point it at the translation script itself (__file__).
>>>
>>>Dustin
>>>
>>>
>>>
>>>      
>>>
>>Thanks, where does the check happen, and where do you do the pointing?
>>Looking at the docs, I guess it could happen in PythonTransHandler, 
>>    
>>
>
>It's the transhandler's job to set req.filename, actually.  I think, if it
>doesn't get set, the Apache handler gets triggered, which gives you the 404.
>So set req.filename in your transhandler.
>
>  
>
>>PythonHeaderParserHandler or PythonInitHandler
>>It doesn't seem clear to me exactly where the path resolution is done in 
>>Apache relative to these handlers... Looking at the mod_python source 
>>didn't seem to indicate either
>>    
>>
>
>Path resolution is the stated goal of the transhandler.
>
>  
>
>>PythonTransHandler is designed to resolve the URI to a filename, but the 
>>resolution is actually correct, so it would be nice not to interfere 
>>before the actual .htaccess file is used...
>>    
>>
>
>You can't mess with .htaccess if you're going to do transhandlers.  You'll
>have to put your config in the httpd.conf file, or some derivative thereof.
>Apache's transhandler is the one that *finds* the .htaccess files.  You can't
>have it both ways -- Apache finds your .htaccess, then lets you redo the
>translation phase.
>
>Dustin
>
>  
>
Thanks Dustin, all clear now...
David

From philipj at telia.com  Tue May 20 22:02:40 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
	<3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <20030520220240.6aa38c9b.philipj@telia.com>

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.

Thank you for that information. Your code does much more than I need,
but it certainly did help me write a transhandler of my own. I have a
few questions which I hope you can answer for me:

A: Does the code have a licensed attached to it, if I decide to use any
of it at a later date? (GPL, public domain... ?)

B: As it is now (just did this 5 minutes ago) I have the following in my
httpd.conf:
<IfModule mod_python.c>
    PythonPath "sys.path + ['/home/philip/htdocs/stdb']"
    PythonTransHandler index
</IfModule>

<Directory /home/philip/htdocs/stdb>
    Options FollowSymLinks
    AddHandler python-program .py
    PythonHandler index
    PythonDebug On
    PythonAutoReload On
</Directory>

Now I've come to understand that the PythonTransHandler must not be in a
<Directory>, <File>, .htacces or the like, so I put it in the very root
of my httpd.conf. Is this the correct way to go about it? Right now I'm
serving the mod_python pages out from /stdb/, so I only want to apply
PythonTransification for that dir, which then involves checking if the
URI begins with the /stdb. Can I add something to httpd.conf to make
PythonTransHandler apply only to /stdb, or am I then trapped in already
being past the Trans phase?

Thank you for you kind help!
// Philip J?genstedt
From conrad at hep.caltech.edu  Tue May 20 15:39:40 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
References: 
	 <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
Message-ID: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>

On Tue, 2003-05-20 at 08:02, Ben Allums wrote:
> On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:
> 
> > Here is a patch to mod_python version 2.7.x that adds the method
> > write_file to the request object.
> > 
> > This method writes the named file to the client using the Apache
> > ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> > (https) connections, with the former using the sendfile() system call
> > where available. This significantly improves performance and reduces
> > CPU usage relative to reading data into a buffer and writing it to
> > the client using the req.write() method.
> 
> Thank you Conrad.  I current use a series of "req.write()" calls to do
> this exact operation.

:-)

Maybe we can convince Grisha to apply the patches in the next release?

Conrad

> 
> 
> Ben
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From gmurali at cs.uchicago.edu  Tue May 20 17:48:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>	<3EC945B4.1050907@cs.uchicago.edu>
	<20030520220240.6aa38c9b.philipj@telia.com>
Message-ID: <3ECAB0C0.4000408@cs.uchicago.edu>

Philip J?genstedt wrote:
 > Thank you for that information. Your code does much more than I need,
 > but it certainly did help me write a transhandler of my own. I have a
 > few questions which I hope you can answer for me:
 >
 > A: Does the code have a licensed attached to it, if I decide to use any
 > of it at a later date? (GPL, public domain... ?)
 >

That was a no strings attached code.
Dustin: You have anything you want to add?

 > B: As it is now (just did this 5 minutes ago) I have the following in 
--snip --
 > URI begins with the /stdb. Can I add something to httpd.conf to make
 > PythonTransHandler apply only to /stdb, or am I then trapped in already
 > being past the Trans phase?

In the code you see, there is a check_dont_handle function, which
looks at the specified URI and decides if it should handle. Our handler
decides to handle it, based on the extension of the file requested. In
another web server, we also decline to handle if the requested URI lies
in some specific subtrees of the DOCROOT. If your handler declines to
handle it, then the default apache handler will take over. So all you 
need to do is to check if the requested URI is in the stdb subtree, else
decline to handle it, and the normal Apache Handler should kick in.

- Murali

From grisha at modpython.org  Tue May 20 20:18:54 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>
Message-ID: <20030520201614.O75374-100000@oldchief.reply.net>



On 20 May 2003, Conrad Steenberg wrote:

> Maybe we can convince Grisha to apply the patches in the next release?

Well, unless something changes, the next 2.7 release will happen if (and
only if) there is a serious issue such as a security problem, and it will
contain a fix only.

But we will certainly try to include this in the next 3.x release. :-)

Grisha

From dorellik1 at inwind.it  Wed May 21 17:19:50 2003
From: dorellik1 at inwind.it (dorellik1)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Error in make dso
Message-ID: <002101c31fac$6cc52040$0100a8c0@y5k4k1>

I have the following result after

$ make dso
make[1]: Entering directory `/home/bill/mod_python-2.7.8/src'
gcc  -I/home/bill/mod_python-2.7.8/src/include -I/usr/src/apache_1.3.26/src/include -I/usr/src/apache_1.3.26/src/os/unix -I/usr/include/python2.2    -c -o mod_python.o mod_python.c
In file included from /usr/src/apache_1.3.26/src/include/httpd.h:72,
                 from /home/bill/mod_python-2.7.8/src/include/mod_python.h:63,
                 from mod_python.c:54:
/usr/src/apache_1.3.26/src/include/ap_config.h:77:28: ap_config_auto.h: No such file or directory
make[1]: *** [mod_python.o] Error 1
make[1]: Leaving directory `/home/bill/mod_python-2.7.8/src'
make: *** [do_dso] Error 2

$ find /usr -name "ap_config_auto.h" gives me

/usr/include/apache/ap_config_auto.h

[root@.... mod_python-2.7.8]# ./configure  --with-apache=/usr/src/apache_1.3.26
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ranlib... (cached) ranlib
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr//bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) /usr/sbin/apxs
found /usr/sbin/apxs, we'll use this. Use --with-apxs to specify another.
checking for Apache libexec directory... /usr/lib/apache
checking for Apache include directory... -I/usr/include/apache
checking for --with-apache... /usr/src/apache_1.3.26
checking for --with-python... no
checking for python... (cached) /usr//bin/python
checking Python version... 2.2
checking whether Python is compiled with thread support... no threads, good
checking Python install prefix... /usr
checking what libraries Python was linked with... /usr/lib/python2.2/config/libpython2.2.a -ldl -lutil -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/include/python2.2
checking for mkdep... (cached) /usr/X11R6/bin/makedepend
creating ./config.status
creating Makefile
creating src/Makefile
creating src/libpython.module
creating Doc/Makefile
analyzing dependencies



Why make don't find an existing file ?

                                                                                             Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030521/3e06d4f9/attachment-0002.htm
From brianh at exelixis.com  Wed May 21 19:22:49 2003
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] object isclass test in publisher
Message-ID: <3ECC3479.4050401@exelixis.com>

hello,
i noticed today while poking around in publisher.py that line 165,
testing if the resolved object is a class, needs updating.  it checks if
str(type(object)) == "<type 'class'>"; but that is not true for
new-style classes, as shown below:

  >>> class A: pass
...
  >>> str(type(A))
"<type 'class'>"
  >>> class B (object): pass
...
  >>> str(type(B))
"<type 'type'>"


brian hawthorne

From terry at i3technologies.co.uk  Thu May 22 13:45:55 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 22:00:02 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.
Message-ID: <1053607555.1100.37.camel@bigmac>

Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

===============================================================================================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

===============================================================================================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




From Hans.Yandle at cingular.com  Thu May 22 09:17:30 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23A9B@s30342g004005>

I am a newbie myself but would say that it appears you have a problem with
your Python22 install. The sys module is a builtin(internal) module--just
look at os.py. Maybe Redhat has mixed up several versions of Python (such as
1.5.X with 2.X) on the same machine and paths and/or environmental variables
are crossed.

I would suggest running Python standalone (commandline) and perform some
small actions using modules sys and os. Once that is working, build a simple
ordinary straight cgi script using the cgi module and launch it via Apache
/cgi-bin/ folder. Once that works, convert the script to accelerated
mod_python and execute it.

It might be helpful to us if you could provide more details on the Apache
server version (1.3.X or 2.X) and mod_python (2.7.X or 3.X) version you are
running along with the scripts (sample.py, two html files, form.html, and
template.html) you mentioned and references to the tutorial(s) that you feel
do not work. 

Hans

-----Original Message-----
From: Terry MacDonald [mailto:terry@i3technologies.co.uk]
Sent: Thursday, May 22, 2003 8:46 AM
To: mod_python@modpython.org
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
saga.


Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

============================================================================
===================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

============================================================================
===================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/31cbf2fb/attachment-0002.htm
From dustin at ywlcs.org  Thu May 22 08:56:20 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:00:03 2004
Subject: [dustin@ywlcs.org: Re: [mod_python] Tutorials, FieldStorage and
	sys.py. A depressing saga.]
Message-ID: <20030522135619.GN25467@eleanor.internal.ywlcs.org>

Sorry, meant to send this to the list.

----- Forwarded message from Dustin Mitchell <dustin@ywlcs.org> -----

From: Dustin Mitchell <dustin@ywlcs.org>
To: Terry MacDonald <terry@i3technologies.co.uk>
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.

On Thu, May 22, 2003 at 01:45:55PM +0100, Terry MacDonald wrote:
>   File "/var/www/html/python/sample.py", line 90, in ?
>     form = cgi.FieldStorage()
> 
>   File "/usr/lib/python2.2/cgi.py", line 448, in __init__
>     elif sys.argv[1:]:

You're using the CGI module, but you're not using a CGI script.  The mod_python distribution has a FieldStorage class, but it's (subtly) different from the one in the Python standard 'cgi' module.

import mod_python.util
form = mod_python.util.FieldStorage(req)

Read the docs on that module for more info.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

----- End forwarded message -----

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From terry at i3technologies.co.uk  Thu May 22 19:36:24 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030522134004.GA25157@mx1.neteconomist.com>
References: <1053607555.1100.37.camel@bigmac>
	 <20030522134004.GA25157@mx1.neteconomist.com>
Message-ID: <1053628584.1100.63.camel@bigmac>

Hi again,

Thankyou very much for your replies, You seem a nice bunch in here. 
I look forward to conversing with you over time (hopefully not all bug related!)

Anyways your advice solved one issue but unfortunately moved me on to the next.  
I am reaching the end of my patience as I have tried various work arounds to my 
ills and I just go up more garden paths to more problems (this should not be that 
difficult I know!).

Forgive me but I have decided to post the code to see if you can tell what is wrong 
cos I just can't get it to work as it is supposed to. The code is primarily example 
code but has been rejigged a little while trying to get it to work.

Problems occuring now is that the subn function is giving a mulitple repeat error.
When I comment out the offending code I just get Object not found in the browser. 
Also I have to put full pathnames in for the html files otherwise they cannot be 
found (I know this can't be right - but i'm trying anything to get this to work)

Ultimately the example should print a form, fetch the contents and display them 
back to you in another page (I think!) not exactly rocket science.

Below is the .py file and the two basic html files. Enjoy !

Cheers

Terry

================================================================================
#!/usr/bin/python
                                                                                                              
from mod_python import apache
from mod_python import util
import re
                                                                                                              
# specify the filename of the template file
TemplateFile = "/var/www/html/python/template.html"
                                                                                                              
# Display  takes one parameter - a string to Display
def Display(Content):
    TemplateHandle = open(TemplateFile, "r")  # open in read only mode
    # read the entire file as a string
    TemplateInput = TemplateHandle.read()
    TemplateHandle.close()                    # close the file
                                                                                                              
    # this defines an exception string in case our
    # template file is messed up
    BadTemplateException = "There was a problem with the HTML template."
                                                                                                              
    SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
    if SubResult[1] == 0:
        raise BadTemplateException
                                                                                                              
    print "Content-Type: text/html\n\n"
    print SubResult[0]
                                                                                                              
                                                                                                              
def ProcessForm(req):
                                                                                                              
    form = util.FieldStorage(req)
                                                                                                              
    # extract the information from the form in easily digestible format
    try:
        name = form["name"].value
    except:
        # name is required, so output an error if
        # not given and exit script
        Display("You need to at least supply a name. Please go back.")
        raise SystemExit
    try:
        email = form["email"].value
    except:
        email = None
    try:
        color = form["color"].value
    except:
        color = None
    try:
        comment = form["comment"].value
    except:
        comment = None
                                                                                                              
    Output = ""  # our output buffer, empty at first
                                                                                                              
    Output = Output + "Hello, "
                                                                                                              
    if email != None:
        Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
    else:
        Output = Output + name + ".<P>"
                                                                                                              
    if color == "swallow":
        Output = Output + "You must be a Monty Python fan.<P>"
    elif color != None:
        Output = Output + "Your favorite color was " + color + "<P>"
    else:
        Output = Output + "You cheated!  You didn't specify a color!<P>"
                                                                                                              
    if comment != None:
        Output = Output + "In addition, you said:<BR>" + comment + "<P>"
                                                                                                              
    Display(Output)
                                                                                                              
###
### Begin actual script
###
                                                                                                              
#### "key" is a hidden form element with an
### action command such as "process"
#try:
#    key = form["key"].value
#    key = form["key"].value
##except:
#    key = None
                                                                                                              
#if key == "process":
#    ProcessForm(form)
#else:
#    DisplayForm()
                                                                                                              
# Open and display the form
FormFile = "/var/www/html/python/form2.html"
FormHandle = open(FormFile, "r")
FormInput = FormHandle.read()
FormHandle.close()
Display(FormInput)
                                                                         
=======================================================================================

Form2.html.........

<FORM METHOD="POST" ACTION="sample.py/processform">
      <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
      Your name:<BR>
      <INPUT TYPE=TEXT NAME="name" size=60>
      <BR>
      Email: (optional)<BR>
      <INPUT TYPE=TEXT NAME="email" size=60>
      <BR>
      Favorite Color:<BR>
      <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
      <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
      <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
      <P>
      Comments:<BR>
      <TEXTAREA NAME="comment" ROWS=8 COLS=60>
      </TEXTAREA>
      <P>
        <INPUT TYPE="SUBMIT" VALUE="Okay">
</FORM>
=======================================================================================
Template.html........

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!-- *** INSERT CONTENT HERE *** -->
  </body>
</html>
                                                                                                              


From grisha at modpython.org  Thu May 22 15:11:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
 saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
Message-ID: <20030522150301.W4076-100000@oldchief.reply.net>


Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the next.
> I am reaching the end of my patience as I have tried various work arounds to my
> ills and I just go up more garden paths to more problems (this should not be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what is wrong
> cos I just can't get it to work as it is supposed to. The code is primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple repeat error.
> When I comment out the offending code I just get Object not found in the browser.
> Also I have to put full pathnames in for the html files otherwise they cannot be
> found (I know this can't be right - but i'm trying anything to get this to work)
>
> Ultimately the example should print a form, fetch the contents and display them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
> ================================================================================
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
> =======================================================================================
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
> =======================================================================================
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From skremer at q.cis.uoguelph.ca  Thu May 22 16:39:24 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Interpreters
Message-ID: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>


Hi,

I just finished re-reading Section 4.1 yet again (for the 12th? time).  
(Wow, is that ever densly packed with important info.)

Each time I read it, I think I'm getting a clearer picture of what's going
on.  Also this list has helped me sort things out as well, but I'm still
surprised at times.  I'm wondering if the following synopsis makes sense.  
I am willing to summarize a corrected version at the end if people are
interested (let me know).

When I start Apapche mod_python not yet initialized.
  It only gets initialized when someone accesses a web-page 
  associated with a directory directive that requires mod_python.
Is that right?

When mod_python is initialized it creates an interpreter called 
"main_interpreter".  This interpreter doesn't actually run your python 
code it just generates sub interpreters which it keeps in a dictionay.

Where is the main interpreter named "main_interpreter"?  Can I access that 
somewhere?

If apache is running as multiple processes and maybe multiple threads how 
many main_interpreters are there?  Just one?


Asside: req.interpreter doesn't work for me (under 3.0.0 (was it 
added in 3.0.1 or 3.0.2) or am I confused?

[  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 76, 
[in __getattr__
[    raise AttributeError, attr
[
[AttributeError: interpreter

When do the sub-interpreters get created?

The sub-interpreters are, by default, associated associated with a virtual 
server name (but there can be more than one sub-interpreter per virtual 
server name).

Is that right?

If there are mutliple processes of apache with multiple threads, are the 
sub-interpreters shared betweenn processes and/or threads?

When a http request comes in that uses a mod_python handler, it is
assigned to a sub-interpreter.  It might be assigned to a brand new
sub-interpreter (usually if traffic on the server is reaching a new high
level), or a previously used sub-interpreter (if traffic is less than it 
was at peak).  (Assuming we keep hitting the same virtual 
server/directory/etc.)

Is that right?

Sub-interpreters are never destoryed, so the number of sub-interpreters 
increases monotonically from when apache is started until it dies and 
your chances of getting a used sub-interpreter goes up the longer apache 
has been running.  Also the longer apache is running the more memory 
mod_python would proabely use.

Is that right?

If apache reduces (kills) the processes it is running, are any
sub-interpreters affected?

If you happen to get a re-used sub-interpreter, you will also get saddled 
with stuff that was defined in it before.  

This can be a good thing or a bad thing.  If you are accessing a database, 
the sub-interpreter may already have an open DB connection which can save 
you time.  It may also have already loaded some of the modules that your 
code calls, which can save time.  Unfortunately this can be bad as well.

One case occurs when you modify python code that is included as a module.
If you get a sub-interpreter where the original version of the module
has already been included, it will use that instead of the new one.

Another example of when getting a used sub-interpreter is bad might be:  
User 1 writes a script that changes the sys.path variable and loads a
module that they have written called MyModule.  User 2 writes a script
that changes the sys.path variable and loads a different module that thay
have written called MyModule also!  Someone requests a page from User 1
and the first version of MyModule is loaded.  Then someone else requests a
page from user 2, but the second version of MyModule is not loaded since
the sub-interpreter thinks it has already loaded MyModule.  User 2's
script then goes uses the function in the wrong version of MyModule.

Is this something that could happen?  I'm 
wondering if there is an exploit that could be accomplished this way?

Obviously the solution to the above problem is to use a different 
sub-interpreter naming scheme with "PythonInterpPerDirectory or 
PythonInterpPerDirective".

Does that make sense?

Any corrections and/or comments much appreciated.

	Stefan

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca

From ireneponti at yahoo.com  Thu May 22 14:05:02 2003
From: ireneponti at yahoo.com (Irene Ponti)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] mod_python file uploading question.
Message-ID: <20030522210502.71765.qmail@web40701.mail.yahoo.com>

Hi to all.

How can I tell to mod_python to stop uploading a file
larger than 1Mb?

Thank you.


__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From grisha at modpython.org  Thu May 22 17:30:49 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Interpreters
In-Reply-To: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>
Message-ID: <20030522171106.I5079-100000@oldchief.reply.net>



On Thu, 22 May 2003, Stefan C. Kremer wrote:

> When I start Apapche mod_python not yet initialized.
>   It only gets initialized when someone accesses a web-page
>   associated with a directory directive that requires mod_python.
> Is that right?

yes

> When mod_python is initialized it creates an interpreter called
> "main_interpreter".  This interpreter doesn't actually run your python
> code it just generates sub interpreters which it keeps in a dictionay.

correct

> Where is the main interpreter named "main_interpreter"?  Can I access that
> somewhere?

It is named inside the C code for mod_python. If force your interpreter
name by using "PythonInterpreter main_interpreter", then mod_python won't
create subinterpreters, it will just select "main_interpreter" to run
things.

> If apache is running as multiple processes and maybe multiple threads how
> many main_interpreters are there?  Just one?

As many as there are processes.

> Asside: req.interpreter doesn't work for me (under 3.0.0 (was it
> added in 3.0.1 or 3.0.2) or am I confused?

3.0.0 is a beta version, you should stay away from it anyway.

> When do the sub-interpreters get created?

on first use

> The sub-interpreters are, by default, associated associated with a virtual
> server name (but there can be more than one sub-interpreter per virtual
> server name).
>
> Is that right?

yes, if you use InterpPerDirective or InterpPerDirectory

> If there are mutliple processes of apache with multiple threads, are the
> sub-interpreters shared betweenn processes and/or threads?

between threads within a process - yes, between processes - no.

> When a http request comes in that uses a mod_python handler, it is
> assigned to a sub-interpreter.  It might be assigned to a brand new
> sub-interpreter (usually if traffic on the server is reaching a new high
> level), or a previously used sub-interpreter (if traffic is less than it
> was at peak).  (Assuming we keep hitting the same virtual
> server/directory/etc.)
>
> Is that right?

sort-of... Apache will assign a request to one of it's children/threads to
be serviced. Mod_python will determine subinterpreter name based on
config, if this this subinterpreter already exists within this child, it's
reused, otherwise a new one is created. Server load is only one of a few
reasons why there may be a new child process.

> Sub-interpreters are never destoryed, so the number of sub-interpreters
> increases monotonically from when apache is started until it dies and
> your chances of getting a used sub-interpreter goes up the longer apache
> has been running.

true (note though that there is a finite number of subinterpeters, e.g. if
you're using the default interp per vrtual host, then there will only be
as many subinterpreters per process as there are virtual hosts - thus it
increases up to a point when all possible subinterpeters are created, then
it stops)

> Also the longer apache is running the more memory mod_python would
> proabely use.

this depends on how your code is written. mod_python itself has no known
memory leaks - but if you fnd any, let us know!

> If apache reduces (kills) the processes it is running, are any
> sub-interpreters affected?

well - everything in the process (inclduing subinterpreters) is affected.

> If you happen to get a re-used sub-interpreter, you will also get saddled
> with stuff that was defined in it before.

yes

> This can be a good thing or a bad thing.  If you are accessing a database,
> the sub-interpreter may already have an open DB connection which can save
> you time.  It may also have already loaded some of the modules that your
> code calls, which can save time.  Unfortunately this can be bad as well.
>
> One case occurs when you modify python code that is included as a module.
> If you get a sub-interpreter where the original version of the module
> has already been included, it will use that instead of the new one.

But how is this bad? This is one of the main reasons mod_python is so fast
- module code is only interpreted once (as opposed to every request with
CGI).

> Another example of when getting a used sub-interpreter is bad might be:
> User 1 writes a script that changes the sys.path variable and loads a
> module that they have written called MyModule.  User 2 writes a script
> that changes the sys.path variable and loads a different module that thay
> have written called MyModule also!

this is precisely why you have subinterpreters - you need to make sure
that the users are running in separate subinterpreters.

> Obviously the solution to the above problem is to use a different
> sub-interpreter naming scheme with "PythonInterpPerDirectory or
> PythonInterpPerDirective".

exactly!

Grisha

From Hans.Yandle at cingular.com  Thu May 22 17:55:14 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23AA7@s30342g004005>

Well, I decided to make a working sample out of your code so here is my
working version. Use at will. By no means is this perfect but it does work
for me. Example URL:
http://localhost/test/sample/ProcessForm/?name=Hans&color=swallow

=== sample.py ===
from mod_python import apache
import string

### File Parameter Options ###
Template = "/usr/local/python/template.html" # filename of template file

def EvalTemplate(Content):
    (Result, ErrorMsg) = (None, None)
    try:
        TemplateFile = file(Template, "r") # open in read only mode
        TemplateData = TemplateFile.read() # read in the contents of the
file
        TemplateFile.close() # close the file
    except IOError, e:
        ErrorMsg = "Error! Unable to read contents of template file %s.
<br>%s" % (Template, e)
    except:
        ErrorMsg = "Error! Unknown error has occured."
    if not ErrorMsg:
        if string.find(TemplateData, "<!--*** INSERT CONTENT HERE ***-->")
is not -1:
            Result = string.replace(TemplateData, "<!--*** INSERT CONTENT
HERE ***-->", Content)
        else:
            ErrorMsg = "Invalid template file format. Missing insert comment
tag. Please fix %s." % Template
    return (Result, ErrorMsg)

def SendHTML(Output=None, ErrorMsg=None):
    if not ErrorMsg:
        s, ErrorMsg = EvalTemplate(Output)
    if ErrorMsg:
        s = """<html><head><title>Mod_Python Sample Using a Template: Error
Message</title></head>
               <body><p>An error has occured. Please correct the
problem.</p>
               <pre>%s</pre></body></html>""" % ErrorMsg
    return s

def ProcessForm(req, name=None, email=None, color=None, comment=None):
    ErrorMsg = None
    Output = "Hello, "
            
    if name:
        if email:
            Output = Output + "<a href=mailto:%s>%s</a>.<p>" % (email, name)
        else:
            Output = Output + "%s.<p>" % name
    else:
        ErrorMsg="You need to at least supply a name. Please go back."
        
    if color=="swallow":
        Output = Output + "You must be a Monte Python fan.<p>"
    elif color != None:
        Output = Output + "Your favorite color was %s<p>" % color
    else:
        Output = Output + "You cheated! You didn't specify a color!<p>"
        
    if comment:
        Output = Output + "In addition, you said: <br>%s<p>" % comment
        
    req.content_type = "text/html"
    req.send_http_header()
    
    return SendHTML(Output, ErrorMsg)
=== end ===
=== template.html ===
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!--*** INSERT CONTENT HERE ***-->
  </body>
</html>
=== end ===

Have fun,

Hans

-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Thursday, May 22, 2003 3:11 PM
To: Terry MacDonald
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A
depressing saga.



Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug
related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the
next.
> I am reaching the end of my patience as I have tried various work arounds
to my
> ills and I just go up more garden paths to more problems (this should not
be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what
is wrong
> cos I just can't get it to work as it is supposed to. The code is
primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple
repeat error.
> When I comment out the offending code I just get Object not found in the
browser.
> Also I have to put full pathnames in for the html files otherwise they
cannot be
> found (I know this can't be right - but i'm trying anything to get this to
work)
>
> Ultimately the example should print a form, fetch the contents and display
them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
>
============================================================================
====
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content,
TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name +
"</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
>
============================================================================
===========
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an
African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
>
============================================================================
===========
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/50bf5078/attachment-0002.htm
From dustin at ywlcs.org  Thu May 22 19:09:17 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
Message-ID: <20030523000917.GV25467@eleanor.internal.ywlcs.org>

>     print "Content-Type: text/html\n\n"
>     print SubResult[0]

It looks like you're still writing a CGI script, since you're using 'print'.
If you're taking the time to install and use mod_python, I would suggest
using the publisher handler or writing your own handlers, as those truly take
advantage of the status of mod_python as a handler.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From rk at dat.cz  Fri May 23 09:21:51 2003
From: rk at dat.cz (Radek Kanovsky)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030523000917.GV25467@eleanor.internal.ywlcs.org>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
	<20030523000917.GV25467@eleanor.internal.ywlcs.org>
Message-ID: <20030523072151.GB549@dat.cz>

On Thu, May 22, 2003 at 07:09:17PM -0500, Dustin Mitchell wrote:

> >     print "Content-Type: text/html\n\n"
> >     print SubResult[0]
> 
> It looks like you're still writing a CGI script, since you're using 'print'.
> If you're taking the time to install and use mod_python, I would suggest
> using the publisher handler or writing your own handlers, as those truly take
> advantage of the status of mod_python as a handler.

You can easily force print statement to work in mod_python. Request
object has method 'write' and it is only method that print statement
calls on destination object. So you can replace sys.stdout with req.


from mod_python import apache
import sys

def handler(req):
    sys.stdout = req
    print 'hello world'
    return apache.OK


Regards,

Radek Kanovsky
From mike.looijmans at asml.com  Fri May 23 09:47:33 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A
	depressingsaga.
Message-ID: <01c320ff$91b7d880$926a1e6e@wsasd464>

>You can easily force print statement to work in mod_python. Request
>object has method 'write' and it is only method that print statement
>calls on destination object. So you can replace sys.stdout with req.


Drawback is that there is only ONE sys.stdout per interpreter. So make very
sure that only ONE thread can write to sys.stdout...
cgihandler does this, and the result is that only one thread can be active.
With the worker mpm on apache, the python/cgi system will effectively become
single-threaded.

The other way around is much better: let all your handlers receive a file like
"output" object, and write to that object. When using CGI, you assign
sys.stdout, and in mod_python, you can use the request object. This allows
multithreading in mod_python, a must-have if you use any thread-based apache
MPM.

In fact, I let the CGI version of the handler create a Request-like object
(mimic) based on environ strings, which I pass to the mod_python based
scripts. This yields max performance on mod_python, and an unnoticable drop on
CGI based Python scripting (the overhead of starting a new interpreter process
is much, much bigger than the creation of the reqeust object).

Mike.


From simen at lunarlounge.org  Mon May 26 01:52:17 2003
From: simen at lunarlounge.org (Simen Brekken)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] 
	Strange behaviour using PythonHandler module::ClassName.method
Message-ID: <001901c32318$aca09c20$0200000a@MOONRAKER>

Running Apache 2.0 on Windows XP

I'm having some wierd behaviour with the PythonHandler module::ClassName.method directive:

.htaccess:
-----------
AddHandler python-program .py
PythonFixupHandler pso.modpython::fixup
PythonLogHandler pso.modpython::cleanup

PythonHandler test::TestHandler.handle

test.py:
-----------
class TestHandler:
 def __init__(self, req):
  pass

 def handle(self, req):
  req.pso().send_http_header()

  print "Hello world from TestHandler3!"
  return OK

def handler(self, req):
 pass


Now for the wierd part, if I try the url http://localhost/test.py everything works as planned, prints out everything, but if I comment out the "handler" function of the module i get a 404 error. What eludes me is why it is required since it's not referenced anywhere? The pso fixups only add sessions and a reference to that session object on the request so it shouldn't interfere.

Also I'm searching for a way to make mod_python reload *everything* for each request, I find myself having to restart the webserver even after making changes.

And lastly, the error handling/reporting seems very flawed, even if a handler method is required in the actual method, I get no messages in the error log about it.

___
SIMEN BREKKEN / born to synthesize.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030526/6443b8ed/attachment-0002.htm
From i at mindlace.net  Tue May 27 13:30:44 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] publisher frustration
Message-ID: <3ED3CAF4.1060108@mindlace.net>

I'm trying to make a simple function work using the publisher; I get a 
404 if I try to access a function in the method I want to use.

Here is what I think should be the appropriate entry in my <VirtualHost> 
directive:

     <Directory /slideshow/>
         AddHandler python-program .py
	#I added to the python path in frustration...
         PythonPath "sys.path+['/home/mindlace/site/slideshow']"
         PythonHandler mod_python.publisher
         PythonDebug on
     </Directory>

This is (the relevant portion of) slide_view.py:

body = ("<html><head><title>resolution</title>"
         "<body><p>The resolution is %s</p></body>"
         "</html>")

def showResolution(req):
     if 'Cookie' in req.headers_in:
         Cookies = SmartCookie().load(req.headers_in['Cookie'])
         if 'resolution' in Cookies:
             resolution = Cookies['resolution'].split('x')
     else:
         resolution = "Not Found"
     return body % resolution

So why does this do nothing?

http://mindlace.net/slideshow/slide_view.py/showResolution

Thanks for any pointers,

~mindlace


From graeme_matthew at hotmail.com  Wed May 28 13:18:09 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>

Hi all

sorry to bug you all, but I am at the point of giving up. I have taken off 2 
days so I can do some python development and in true fashion I still after 
bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
windows !!! and I hate windows !!!!! this make me even more angry :-)

I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
installed by default and it is causing lots of headaches !

I cannot run the ./configure file as apxs is nowhere to be found on the 
machine, yet there is dso support as they have included mod_perl etc. I have 
now spent the last 3 hours trying to get the httpd-devel files, and this is 
even worse as each time you get an rpm then there is another 50 rpms 
dependencies (well not that much)

Does anyone know where one can get a mod_python binary install for linux 
just like the one that exists for Windows as I cannot afford to spend my 2 
coding days trying to get mod_python working, if there is no such file then 
thats fine, ill forget it all together.

Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
installation and getting building apache from scratch to get all the devel 
files etc for modPython ?

Any help will be appreciated as I do not know what to do now ...

Many thanks

_________________________________________________________________
ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
great for sharing photos and documents. Go to  
http://join.msn.com/?page=dept/home&pgmarket=en-au

From jdavis-mod-python at empires.org  Tue May 27 21:47:26 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
References: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <200305272147.26380.jdavis-mod-python@empires.org>

On Tuesday 27 May 2003 08:18 pm, Graeme Matthew wrote:
> Hi all
>
> sorry to bug you all, but I am at the point of giving up. I have taken off
> 2 days so I can do some python development and in true fashion I still
> after bloody 8 hours cannot get modpython to work on linux that took 5
> minutes on windows !!! and I hate windows !!!!! this make me even more
> angry :-)
>
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is
> installed by default and it is causing lots of headaches !
>
> I cannot run the ./configure file as apxs is nowhere to be found on the
> machine, yet there is dso support as they have included mod_perl etc. I

The first thing that comes to my mind is that you should be able to install 
apxs through some kind of apache development package. Check around for some 
rpms, and then it should configure fine.

Good luck,
	Jeff Davis

From j.healy at ugrad.unimelb.edu.au  Wed May 28 16:55:37 2003
From: j.healy at ugrad.unimelb.edu.au (Joseph Hepburne Healy)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <Pine.OSF.4.10.10305281648590.19441-100000@cassius.its.unimelb.edu.au>


Hi,

I have gone through similar difficulties with mandrake 9.0 and found it
was simplest to uninstall mandrakes apache and download source for apache
2 and modpython 3 and build
both of them. It was relatively easy, the only issue was the location of
the configuration files (/usr/local/apache2/conf i think) rather than /etc
but that is just a configure option (haven't had time to fix it)

If you install httpd-devel or apache-devel (can't remember what mandrake
calls it) you might get the apxs file. To find out which package doing:

urpmf apxs

should tell you what package to install. When using mandrake the easiest
way to install packages is to use (as root):

urpmi packagename

this should solve the dependencies and prompt you for the correct cds to
insert.

Hope this helps

Joe

On Wed, 28 May 2003, Graeme Matthew wrote:

> Hi all
> 
> sorry to bug you all, but I am at the point of giving up. I have taken
off 2 
> days so I can do some python development and in true fashion I still after 
> bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
> windows !!! and I hate windows !!!!! this make me even more angry :-)
> 
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
> installed by default and it is causing lots of headaches !
> 
> I cannot run the ./configure file as apxs is nowhere to be found on the 
> machine, yet there is dso support as they have included mod_perl etc. I have 
> now spent the last 3 hours trying to get the httpd-devel files, and this is 
> even worse as each time you get an rpm then there is another 50 rpms 
> dependencies (well not that much)
> 
> Does anyone know where one can get a mod_python binary install for linux 
> just like the one that exists for Windows as I cannot afford to spend my 2 
> coding days trying to get mod_python working, if there is no such file then 
> thats fine, ill forget it all together.
> 
> Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
> installation and getting building apache from scratch to get all the devel 
> files etc for modPython ?
> 
> Any help will be appreciated as I do not know what to do now ...
> 
> Many thanks
> 
> _________________________________________________________________
> ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
> great for sharing photos and documents. Go to  
> http://join.msn.com/?page=dept/home&pgmarket=en-au
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From kaback at kaback.de  Wed May 28 12:57:54 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] strange util.FieldStorage() behavior
Message-ID: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>

I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

i wrote a simple handler script that only parses its "cgi parameters"
using util.FieldStorage() and returns apache.OK

the script worked fine so far, but everytime the script runs, the memory
used by apache rises a few kbyte.

next i removed the util.FieldStorage() function from the script, with the
result, that the memory usage remains constant.

because of that i searched for an other way to get access to the committed
form parameters and found the mod_python.publisher handler.

i added the publisher handler to my apache config and wrote a file 
"hello.py" with the following content:
--------
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what
-------

now a request with the url http://localhost/hello/say?what=blahblah
returns the expected "I am saying blahblah

i wrote a script, that calls wget on that url within an endless loop:
------- getit.pl
while(1) {
        system("wget -O test.htm http://localhost/hello/say?what=blah");
}
-------

next i wrote a verry simple "tool" that monitors memory usage of my
http-servers
------- memwatch.pl
while(1)
{
  open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
  while(<OUTPUT>)
  {
    chomp();
    my($first, $second) = split();
    my($sec, $min, $hour) = localtime(time);
    print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
  }
  sleep(1);
}
-------

and, the unexpected happens, runnig memwatch.pl while running getit.pl
shows the constant growing memory usage of the httpd processes.

the longer the string after http://localhost/hello/say?what= is, the
more the memory seems to grow each time.

reading the docs, i found, that even mod_python.publisher uses the
functionality of util.FieldStorage(), which i wanted not to use
because of the strange things i figured out during my first test
(abovementioned)

for me at the moment this looks like a amemory leakage in 
util.FieldStorage. i searched the archive and did not found anything 
regarding that behavior.

so my question is: Am I doing something wrong? 

thanks in advance
Karsten

From graeme_matthew at hotmail.com  Wed May 28 21:31:11 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F493Bo1hyOwlZz00027cd1@hotmail.com>

Hi all me again after so many hours, jeez im thinking of just using windows 
but I can convince myself !!!

ok I got the apache source (2.0.45) installed like adream and is up and 
running but when I run the modpython source install it wont even work here 
is an extract

mod_python.c: In function `PythonPostReadRequestHandler':
mod_python.c:1719: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1726: parse error before '*' token
mod_python.c: In function `PythonTransHandler':
mod_python.c:1727: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1729: parse error before '*' token
mod_python.c: In function `PythonTypeHandler':
mod_python.c:1730: `req' undeclared (first use in this function)
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/isixhosa/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
[root@amazulu mod_python-3.0.3]#


please any help is good

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From neo at https.ru  Wed May 28 15:43:38 2003
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <354390192.20030528154338@https.ru>


  I also suspect some memory leakage caused by mod_python3. I do not
have time to investigate what and where is going on. I use mod_python
with much more complicated code (internet shop, for example), and I
saw constant memory growth. Though it's small, as compared to the
total memory apache2 + mod_python3 take, that gives rise to somewhat
bad feeling. :)


> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK

> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.

> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.

> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.

> i added the publisher handler to my apache config and wrote a file 
> "hello.py" with the following content:
> --------
> """ Publisher example """

> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------

> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah

> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------

> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------

> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.

> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.

> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)

> for me at the moment this looks like a amemory leakage in 
> util.FieldStorage. i searched the archive and did not found anything 
> regarding that behavior.

> so my question is: Am I doing something wrong? 

> thanks in advance
> Karsten


--- 
Neo Eureka / mailto:neo@https.ru

From kaback at kaback.de  Wed May 28 14:16:00 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <354390192.20030528154338@https.ru>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
Message-ID: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>

hi

On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
> 
>   I also suspect some memory leakage caused by mod_python3. I do not
> have time to investigate what and where is going on. I use mod_python
> with much more complicated code (internet shop, for example), and I
> saw constant memory growth. Though it's small, as compared to the
> total memory apache2 + mod_python3 take, that gives rise to somewhat
> bad feeling. :)
>

well, i'am using  python within much more complicated code too, in fact,
that code is so complicated, that each time it is requested the memory
usage of my apache is rising about 64kb. i'am using POST method to
submit xml content and the code is called many times within one second.

are there other methods to get POSTed form data from within an mod_python 
script than util.FieldStorage()?

Karsten

From davidf at sjsoft.com  Wed May 28 15:24:08 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
	<20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <3ED4B878.3020608@sjsoft.com>

Karsten Backhaus wrote:

>hi
>
>On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
>  
>
>>  I also suspect some memory leakage caused by mod_python3. I do not
>>have time to investigate what and where is going on. I use mod_python
>>with much more complicated code (internet shop, for example), and I
>>saw constant memory growth. Though it's small, as compared to the
>>total memory apache2 + mod_python3 take, that gives rise to somewhat
>>bad feeling. :)
>>    
>>
>well, i'am using  python within much more complicated code too, in fact,
>that code is so complicated, that each time it is requested the memory
>usage of my apache is rising about 64kb. i'am using POST method to
>submit xml content and the code is called many times within one second.
>  
>
Hmmm ... never noticed this before, looks like our app is doing the same ...

>are there other methods to get POSTed form data from within an mod_python 
>script than util.FieldStorage()?
>
>Karsten
>
util.FieldStorage is implemented in pure Python, so you can look at 
exactly what it does to either debug the memory growth or write your own 
implementation.

David

From grisha at modpython.org  Wed May 28 10:47:25 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <20030528104439.O96588-100000@oldchief.reply.net>


I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
I used ab (nice tool that comes with Apache) to run 100000 requests, and I
have not seen any grwoth (except initally, but that's normal) in httpd's
memory consumption.

Grisha

On Wed, 28 May 2003, Karsten Backhaus wrote:

> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2
>
> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK
>
> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.
>
> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.
>
> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.
>
> i added the publisher handler to my apache config and wrote a file
> "hello.py" with the following content:
> --------
> """ Publisher example """
>
> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------
>
> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah
>
> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------
>
> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------
>
> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.
>
> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.
>
> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)
>
> for me at the moment this looks like a amemory leakage in
> util.FieldStorage. i searched the archive and did not found anything
> regarding that behavior.
>
> so my question is: Am I doing something wrong?
>
> thanks in advance
> Karsten
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dustin at ywlcs.org  Wed May 28 10:34:44 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528104439.O96588-100000@oldchief.reply.net>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<20030528104439.O96588-100000@oldchief.reply.net>
Message-ID: <20030528153444.GI22286@eleanor.internal.ywlcs.org>

On Wed, May 28, 2003 at 10:47:25AM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
> I used ab (nice tool that comes with Apache) to run 100000 requests, and I
> have not seen any grwoth (except initally, but that's normal) in httpd's
> memory consumption.

Is it possible there's a reference cycle buried within the FieldStorage
class?  Perhaps some strategic application of the weakref module could
straighten things out..

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From graeme_matthew at hotmail.com  Thu May 29 10:25:18 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] Cannot find mod_python.so 
Message-ID: <BAY1-F23HYt2gYCL6nt000050c0@hotmail.com>

Hi all me again

well im still trying to get this stuff working and it aint happening ... sob

I have installed apache from source with --enable-so

I have run modpython from source using
--with-python
--with-apxs

it all seemed to go fine

I have added all the appropriate directives in httpd.conf

But when I start the apache server I get this

Cannot load /usr/local/apache2/modules/mod_python.so into server

Please, any help will be appreciated

Graeme

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From graeme_matthew at hotmail.com  Thu May 29 21:37:35 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:00:03 2004
Subject: [mod_python] ImportError: Cannot find _apache
Message-ID: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>

Hi all me again ....

Im almost there ...

I keep on getting the following error in my cgi-script, on the command line, 
I have included my httpd.conf directives and some additional information...

Any help would be much appreciated ...

Ta


PYTHON INTERPRETER:

[root@amazulu cgi-bin]# /usr/local/bin/python2.2
Python 2.2.2 (#1, May 29 2003, 17:09:39)
[GCC 3.2.2 (Mandrake Linux 9.1 3.2.2-3mdk)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>>from mod_python import apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
67, in ?
    import _apache
ImportError: No module named _apache
>>>import mod_python
>>>from mod_python import apache
>>>

Wierd !!!

### HTTPD CONF
<Directory "/www/bi/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
    #AddHandler python-program .py this was a problem
    AddHandler cgi-script .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

#SCRIPT

#! /usr/local/bin/python2.2


import MySQLdb
import sys
sys.path.append('/www/bi/classes')

from mod_python import apache
from HtmWindow import getHtmlWindow

def query(req):

blah blah blah

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From dustin at ywlcs.org  Thu May 29 08:45:00 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:00:04 2004
Subject: [mod_python] ImportError: Cannot find _apache
In-Reply-To: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
References: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
Message-ID: <20030529134459.GR22286@eleanor.internal.ywlcs.org>

On Thu, May 29, 2003 at 09:37:35PM +1000, Graeme Matthew wrote:
> >>>from mod_python import apache
> Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
> 67, in ?
>    import _apache
> ImportError: No module named _apache
> >>>import mod_python
> >>>from mod_python import apache

The reason you don't get an error the next time is this:  During the first
import, Python partially loads and constructs the mod_python.apache module,
until it gets to "import _apache", which causes an exception.  However, at
that point the mod_python.apache module is *loaded*, it's just not completely
initialized.  So when you get to the second from..import, Python finds that
mod_python.apache is already loaded and simply returns a reference to the
loaded (but still not initialized) module.

The reason _apache can't be found is that it's the mechanism by which Python
can communicate with the Apache process in which it is running.  Since, at
the command line, you're not running in an Apache process, there's no such
module.  Specifically, that module is provided by mod_python.so, which is
loaded by Apache when it starts up, but not loaded or even referenced by the
command-line-invoked Python.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From poeml at suse.de  Fri May 30 13:47:32 2003
From: poeml at suse.de (Peter Poeml)
Date: Fri Jan  9 22:00:04 2004
Subject: [mod_python] LONG_LONG -> PY_LONG_LONG in python-2.3b1
Message-ID: <20030530114732.GK3798@suse.de>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030530/168caf14/attachment-0002.bin
From tohmas.ash at takashi.zzn.com  Fri May 30 17:37:57 2003
From: tohmas.ash at takashi.zzn.com (tohmas ash)
Date: Fri Jan  9 22:00:04 2004
Subject: [mod_python] force download and content-disposition
Message-ID: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>

hello, I'm a mod_python's newbie , and I use it with postgresql for 
a web application...

In my software, I upload some files with a form to a bytea in 
postgresql, no problems for that. But after, I want to force the 
download via a link...

Before I use PHP for my web application, I know how do that in php 
it's like that:
"
header("Content-type: application/force-download");
header("Content-Disposition: attachment; filename=$filename");
readfile("$path"); 
"

I know how set the configuration of the "content-type" with 
mod_python,
But I don't know how do the same whith the "Content-Disposition" ...
I have found the same question in the mailing list but without 
answer ...

so if you can help me, thanks in advance for your answer.

ps: sorry for my english, I'm a french boy ^_^


Get your Free E-mail at http://takashi.zzn.com
___________________________________________________________
Get your own Web-based E-mail Service at http://www.zzn.com
From grisha at modpython.org  Fri May 30 19:12:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:00:04 2004
Subject: [mod_python] force download and content-disposition
In-Reply-To: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>
Message-ID: <20030530191059.N36634-100000@oldchief.reply.net>



On Fri, 30 May 2003, tohmas ash wrote:

> Before I use PHP for my web application, I know how do that in php
> it's like that:
> "
> header("Content-type: application/force-download");
> header("Content-Disposition: attachment; filename=$filename");

In mod_python it's:

req.headers_out["Content-type"] = "application/force-download"
req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename

Grisha

From i at mindlace.net  Sat May 31 22:04:25 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 22:00:04 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <2147483647.1054418665@[10.0.1.2]>

--On 19 Monday, May 2003 15:59 -0500 ganapathy murali krishnan 
<gmurali@cs.uchicago.edu> wrote:

> Hope you find the code useful.
>
> - Murali
>
> ------ translate.py ------------
> from mod_python import apache, util
> from utils import urls
> import os, string, config

This code is very useful, but I get an import error on utils; What utils 
module are you using?

Thanks,
~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/9f7825bc/attachment-0002.bin
From i at mindlace.net  Sat May 31 22:47:23 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 22:00:04 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <2147483647.1054418665@[10.0.1.2]>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu> <2147483647.1054418665@[10.0.1.2]>
Message-ID: <2147483647.1054421243@[10.0.1.2]>

--On 31 Saturday, May 2003 22:04 -0700 emf <i@mindlace.net> wrote:
>> ------ translate.py ------------
>> from mod_python import apache, util
>> from utils import urls
>> import os, string, config
>
> This code is very useful, but I get an import error on utils; What utils
> module are you using?

Sigh. Obviously i should just use urls.py.

I assume you mean to use req.get_config() instead of trying to import 
config?

~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/c0066a84/attachment-0002.bin
From cblunck2000 at yahoo.com  Thu May  1 20:23:12 2003
From: cblunck2000 at yahoo.com (Christopher Blunck)
Date: Fri Jan  9 22:03:49 2004
Subject: [mod_python] restricted execution mode and PyXML
Message-ID: <20030502032312.16834.qmail@web10604.mail.yahoo.com>

Hi all-

Am working with ZSI under mod_python.  The problem I'm
running into is that ZSI imports PyXML, which uses
dynamic module importing to load encoders for various
xml codecs (UTF-8 being the most common encoder). 
When the PyXML code tries to do the dynamic module
import, the Python interpretter prevents it with an
error something like "cannot dynamically import module
during restricted execution mode".  Forgive me for not
quoting the exact error, as I'm currently upgrading
the OS on that box right now to RH 9.

This occurs with the latest mod_python (3.0.3) with
PyXML 0.7.1 and httpd 2.0.40.

Has anyone else had success in importing PyXML modules
within code run by modpython?

Or, does anyone have any information they'd be willing
to share to help me out (e.g. "you might try and check
out XXX or YYY").  Anything would be useful to me at
this point.




-c

__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From max.zhang at converzal.com  Fri May  2 19:28:36 2003
From: max.zhang at converzal.com (max.zhang)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] restricted execution mode and PyXML
References: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <003a01c3109d$f8fc9ac0$1700a8c0@converzamax>

I met the same problem while calling raw_data.encode('utf-8','replace') 


System :
            RH 8
            mod_python 3.0.3
            python2.2
            apache 2.0

----- Original Message ----- 
From: "Christopher Blunck" <cblunck2000@yahoo.com>
To: <mod_python@modpython.org>
Sent: Friday, May 02, 2003 11:23 AM
Subject: [mod_python] restricted execution mode and PyXML


> Hi all-
> 
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder). 
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
> 
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
> 
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
> 
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
> 
> 
> 
> 
> -c
> 
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
> 
From vjb at vuit.com  Fri May  2 07:36:11 2003
From: vjb at vuit.com (Vincent J. Buonassisi)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <20030502032312.16834.qmail@web10604.mail.yahoo.com>
Message-ID: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>

hi,

i had the same problem w/ the same environment (rh 8, python 2.2.1, 
mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
problem was to install python 2.2.2.

cheers,

On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:

> Hi all-
>
> Am working with ZSI under mod_python.  The problem I'm
> running into is that ZSI imports PyXML, which uses
> dynamic module importing to load encoders for various
> xml codecs (UTF-8 being the most common encoder).
> When the PyXML code tries to do the dynamic module
> import, the Python interpretter prevents it with an
> error something like "cannot dynamically import module
> during restricted execution mode".  Forgive me for not
> quoting the exact error, as I'm currently upgrading
> the OS on that box right now to RH 9.
>
> This occurs with the latest mod_python (3.0.3) with
> PyXML 0.7.1 and httpd 2.0.40.
>
> Has anyone else had success in importing PyXML modules
> within code run by modpython?
>
> Or, does anyone have any information they'd be willing
> to share to help me out (e.g. "you might try and check
> out XXX or YYY").  Anything would be useful to me at
> this point.
>
>
>
>
> -c
>
> __________________________________
> Do you Yahoo!?
> The New Yahoo! Search - Faster. Easier. Bingo.
> http://search.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>


From mpmlopes at clix.pt  Fri May  2 17:52:48 2003
From: mpmlopes at clix.pt (Marco Lopes)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] problem using apache.parse_qsl
Message-ID: <3EB2A260.7050702@clix.pt>

I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying 
to use apache.parse_qsl to parse que contents of the POST, but i'm 
getting this error message:

Mod_python error: "PythonHandler template"

Traceback (most recent call last):

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
320, in HandlerDispatch
     module = import_module(module_name, config)

   File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 
499, in import_module
     module = imp.load_module(mname, f, p, d)

   File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
     parse_qsl = apache.parse_qsl

AttributeError: 'module' object has no attribute 'parse_qsl'

I looked trough the documentation and the didn't find any reference to 
the function beeing deprecated so i think i'm doing something wrong, the 
code i'm using and that is causing the error is:


from mod_python import apache
 

parse_qsl = apache.parse_qsl


Can anyone give me a clue of what am i doing wrong?

From grisha at modpython.org  Fri May  2 14:12:00 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] problem using apache.parse_qsl
In-Reply-To: <3EB2A260.7050702@clix.pt>
Message-ID: <20030502141049.O87074-100000@oldchief.reply.net>


http://www.modpython.org/live/current/doc-html/pyapi-util-funcs.html

from mod_python import util

parse_qsl = util.parse_qsl

:-)

On Fri, 2 May 2003, Marco Lopes wrote:

> I'm trying to use mod_python 3.0.3 with apache 2.0.45, and i was trying
> to use apache.parse_qsl to parse que contents of the POST, but i'm
> getting this error message:
>
> Mod_python error: "PythonHandler template"
>
> Traceback (most recent call last):
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 320, in HandlerDispatch
>      module = import_module(module_name, config)
>
>    File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
> 499, in import_module
>      module = imp.load_module(mname, f, p, d)
>
>    File "/usr/local/apache2/htdocs/python/template.py", line 4, in ?
>      parse_qsl = apache.parse_qsl
>
> AttributeError: 'module' object has no attribute 'parse_qsl'
>
> I looked trough the documentation and the didn't find any reference to
> the function beeing deprecated so i think i'm doing something wrong, the
> code i'm using and that is causing the error is:
>
>
> from mod_python import apache
>
>
> parse_qsl = apache.parse_qsl
>
>
> Can anyone give me a clue of what am i doing wrong?
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 14:36:19 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
Message-ID: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>

Hi,

I'm new to this list and apologize in advance if I've missed the obvious.
I've searched the archives and found a couple similar instances of my
problem but also think that recent changes should have fixed what I'm
seeing. Hence, this post.

I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
point I get:

Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
Cannot load /usr/local/libexec/apache2/mod_python.so into server:
/usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"

Before installing, I updated the entire ports collection source so I should
be current in that regard. As far as I can tell from reading the port
Makefile in Apache2, threads are enabled. So I didn't modify anything, just
ran make, make install.

I remain confused about how to modify httpd.conf, in spite of the message at
the end of the make install of mod_python, which talks about setting
PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
of the error I'm seeing? Or is something else wrong?

Also, could someone show me a slightly more explicit (so to speak) snippet
of httpd.conf that correctly modifies the standard one placed by a ports
installation on FreeBSD? I just want the minimum mods to httpd.conf to
confirm functionality before proceeding to other setups.

Again, sorry if I'm missing the obvious. Anyone with the time to help, many
thanks in advance.

Steve Holmlund

From grisha at modpython.org  Sat May  3 22:40:53 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <ACECLHIPFJLGGDMIIFBGIEJICKAA.sholmlund@coastside.net>
Message-ID: <20030503223914.T10690-100000@oldchief.reply.net>


You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol "pthread_create"
>
> Before installing, I updated the entire ports collection source so I should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything, just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help, many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From sholmlund at coastside.net  Sat May  3 22:36:29 2003
From: sholmlund at coastside.net (Steve Holmlund)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue
In-Reply-To: <20030503223914.T10690-100000@oldchief.reply.net>
Message-ID: <ACECLHIPFJLGGDMIIFBGMEJJCKAA.sholmlund@coastside.net>

Thank you! That worked.

I did see that message but my review of the Apache Makefile had me convinced
that the standard port for Apache had threads enabled. Sorry for my
ignorance. I should have tried that first. Not being a programmer, one of
the appeals of FreeBSD is the ports collection. I get in trouble when I have
to step beyond those bounds.

Appreciate the response.
Steve



-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Saturday, May 03, 2003 7:41 PM
To: Steve Holmlund
Cc: mod_python@modpython.org
Subject: Re: [mod_python] FreeBSD/Apache2/mod_python3.0.3 install issue



You probably didn't read the note that shows up at the very end of the
FreeBSD port install :-)

[snip]

 And, if you built apache without thread support, you may need to add the
 following lines to $PREFIX/sbin/envvars:

 LD_PRELOAD=/usr/lib/libc_r.so
 export LD_PRELOAD

[snip]

Grisha


On Sat, 3 May 2003, Steve Holmlund wrote:

> Hi,
>
> I'm new to this list and apologize in advance if I've missed the obvious.
> I've searched the archives and found a couple similar instances of my
> problem but also think that recent changes should have fixed what I'm
> seeing. Hence, this post.
>
> I've installed mod_python 3.0.3 with Apache 2.0.45 on both FreeBSD 4.8 and
> 5.0. I add the LoadModule line to httpd.conf and restart Apache, at which
> point I get:
>
> Syntax error on line 274 of /usr/local/etc/apache2/httpd.conf:
> Cannot load /usr/local/libexec/apache2/mod_python.so into server:
> /usr/local/libexec/apache2/mod_python.so: Undefined symbol
"pthread_create"
>
> Before installing, I updated the entire ports collection source so I
should
> be current in that regard. As far as I can tell from reading the port
> Makefile in Apache2, threads are enabled. So I didn't modify anything,
just
> ran make, make install.
>
> I remain confused about how to modify httpd.conf, in spite of the message
at
> the end of the make install of mod_python, which talks about setting
> PythonPath, etc. Could my incomplete modification of httpd.conf be the
cause
> of the error I'm seeing? Or is something else wrong?
>
> Also, could someone show me a slightly more explicit (so to speak) snippet
> of httpd.conf that correctly modifies the standard one placed by a ports
> installation on FreeBSD? I just want the minimum mods to httpd.conf to
> confirm functionality before proceeding to other setups.
>
> Again, sorry if I'm missing the obvious. Anyone with the time to help,
many
> thanks in advance.
>
> Steve Holmlund
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
>

From conrad at hep.caltech.edu  Sun May  4 00:47:59 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] restricted execution mode and PyXML
In-Reply-To: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
References: <6B6F821A-7CAB-11D7-801C-000A95682CD2@vuit.com>
Message-ID: <1052034479.4050.13.camel@Presario>

Hi

This didn't work for me: on Redhat 9 (which comes with Python 2.2.2) the
only way I could solve the problem was to pre-import the offending files
outside the handler function. E.g. in my case

# Added to avoid the error:
# 'RuntimeError: cannot unmarshal code objects in restricted execution mode'
# That means that other encodings will make the query fail!
mod = __import__('encodings.utf_8',globals(),locals(),'*')
mod = __import__('encodings.utf_16_be',globals(),locals(),'*')

which is a hack since it allows only these two encodings to be used.

If anybody has a better fix, please let me know!

Cheers

Conrad

On Fri, 2003-05-02 at 07:36, Vincent J. Buonassisi wrote:
> hi,
> 
> i had the same problem w/ the same environment (rh 8, python 2.2.1, 
> mod_python 3.0.3, PyXML 0.8.2).  the only way i was able to solve this 
> problem was to install python 2.2.2.
> 
> cheers,
> 
> On Gioved?, mag 1, 2003, at 20:23 US/Pacific, Christopher Blunck wrote:
> 
> > Hi all-
> >
> > Am working with ZSI under mod_python.  The problem I'm
> > running into is that ZSI imports PyXML, which uses
> > dynamic module importing to load encoders for various
> > xml codecs (UTF-8 being the most common encoder).
> > When the PyXML code tries to do the dynamic module
> > import, the Python interpretter prevents it with an
> > error something like "cannot dynamically import module
> > during restricted execution mode".  Forgive me for not
> > quoting the exact error, as I'm currently upgrading
> > the OS on that box right now to RH 9.
> >
> > This occurs with the latest mod_python (3.0.3) with
> > PyXML 0.7.1 and httpd 2.0.40.
> >
> > Has anyone else had success in importing PyXML modules
> > within code run by modpython?
> >
> > Or, does anyone have any information they'd be willing
> > to share to help me out (e.g. "you might try and check
> > out XXX or YYY").  Anything would be useful to me at
> > this point.
> >
> >
> >
> >
> > -c
> >
> > __________________________________
> > Do you Yahoo!?
> > The New Yahoo! Search - Faster. Easier. Bingo.
> > http://search.yahoo.com
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://www.modpython.org/mailman/listinfo/mod_python
> >
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://www.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From conrad at hep.caltech.edu  Tue May  6 01:36:26 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
Message-ID: <1052210186.2757.57.camel@Presario>

Hi

Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
src/requestobject.c to allow mod_python programs to send files
efficiently using the available Apache machinery for both unencrypted
and SSL/TLS connections.

What does it do?
----------------

Implements a file_write() method for the Request object. It does NOT
write headers, only the file.

E.g.

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while 
  req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

The first argument is the filename, the second is the offset to start
reading in the file, the third argument is the number of bytes to write.
The last two arguments are optional.

The return value is the number of bytes written, which may be less than
the total number of bytes in the file. See the manpage of sendfile for
more details.

The patch is NOT OS- or architecture dependent, it merely lets Apache
call its output handler, in the same way that req.write() does for
string data.

If there is interest, the patch can developed further to also set the
content-type, send headers and iterate until the whole file is sent.

Cheers

Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From conrad at hep.caltech.edu  Tue May  6 01:49:51 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210186.2757.57.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
Message-ID: <1052210991.2757.61.camel@Presario>

Ugh, pressed the send button before finishing the code snippet:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",0,-1)
  return apache.OK

Conrad

On Tue, 2003-05-06 at 01:36, Conrad Steenberg wrote:
> Hi
> 
> Attached is a patch (against 3.0.1 but probably works for all 3.0.x) for
> src/requestobject.c to allow mod_python programs to send files
> efficiently using the available Apache machinery for both unencrypted
> and SSL/TLS connections.
> 
> What does it do?
> ----------------
> 
> Implements a file_write() method for the Request object. It does NOT
> write headers, only the file.
> 
> E.g.
> 
> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while 
>   req.write_file("/var/www/html/index.html",0,-1)
>   return apache.OK
> 
> The first argument is the filename, the second is the offset to start
> reading in the file, the third argument is the number of bytes to write.
> The last two arguments are optional.
> 
> The return value is the number of bytes written, which may be less than
> the total number of bytes in the file. See the manpage of sendfile for
> more details.
> 
> The patch is NOT OS- or architecture dependent, it merely lets Apache
> call its output handler, in the same way that req.write() does for
> string data.
> 
> If there is interest, the patch can developed further to also set the
> content-type, send headers and iterate until the whole file is sent.
> 
> Cheers
> 
> Conrad
-- 
Conrad Steenberg <conrad@hep.caltech.edu>
From gdamjan at mail.net.mk  Tue May  6 11:51:53 2003
From: gdamjan at mail.net.mk (Damjan)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] [Patch] req.write_file for 3.0.x
In-Reply-To: <1052210991.2757.61.camel@Presario>
References: <1052210186.2757.57.camel@Presario>
	<1052210991.2757.61.camel@Presario>
Message-ID: <20030506095153.GA12597@legolas.on.net.mk>

> Ugh, pressed the send button before finishing the code snippet:

too fast on the keyboard.

> def handler(req):
>   req.content_type='text/html'
>   req.send_http_header()
>   sent=0
>   while sent>=0:
>     sent = req.write_file("/var/www/html/index.html",0,-1)
                                                     ^^^^^

I guess it should be "sent" there too:

    sent = req.write_file("/var/www/html/index.html", sent, -1)


-- 
Damjan Georgievski
jabberid: damjan@bagra.net.mk
From grisha at ispol.com  Wed May  7 13:46:04 2003
From: grisha at ispol.com (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] test - please ignore
Message-ID: <20030507134354.V62572-100000@oldchief.reply.net>


this is a test (the list moved to a different server) - please ignore

grisha


From kemu at sdf-eu.org  Sat May 10 16:33:34 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] won't run 
Message-ID: <004301c31701$2349a160$be00a8c0@kemu3jve3zxvcw>

I installed mod_python the test example worked. 
Now I would like to learn to use it.
When I add this to my apache config file:
   1077 <Directory /home/linhost/control>
   1078         SetHandler python-program
   1079         PythonHandler mod_python.publisher
   1080 </Directory>

and in /home/linhost/control I place a file test.py with contents:
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what


I get this http://62.221.205.240/control/hello.py/say
Please help me out Regards Jonas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/de621b90/attachment-0003.htm
From kemu at sdf-eu.org  Sat May 10 17:52:20 2003
From: kemu at sdf-eu.org (Jonas Geiregat)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] upload file script
Message-ID: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>

I'm looking on how to upload a file in mod_python are there any examples ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030510/5fcf56e6/attachment-0003.htm
From mike_verdone at shaw.ca  Sat May 10 15:51:05 2003
From: mike_verdone at shaw.ca (Mike Verdone)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] upload file script
In-Reply-To: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
Message-ID: <200305101551.05815.mike_verdone@shaw.ca>

Here you go!

Files sent to an Apache server via an HTTP request appear as file-like objects 
to mod_python. They support the read() method to get their contents. Assuming 
you're running the publisher handler, this function can receive the contents 
of a file sent by a user in an HTTP request (where the file's field is named 
"file").

  def getFile(req, file=None):
      if file is None:   # There was no file sent.
          return "Error! There was no file!"
      if type(file) is str:   # File was sent as a regular field, which is 
bad.
          return "Error! File was a string!"
      fileData = file.read()    # Get the file data into a Python variable.
      # ... process file data ...
      return "Ok, file received."

The HTML that calls this function is as follows. Not the enctype attribute of 
the form tag.

  <form action="getFile" method="post" enctype="multipart/form-data">
  <input type="file" name="file" />
  <input type="submit" name="submit" value="Submit" />
  </form>



Could someone who knows the FAQ password please add this, if it's useful. 
Thanks.

Mike.


On May 10, 2003 09:52 am, Jonas Geiregat wrote:
> I'm looking on how to upload a file in mod_python are there any examples ?

From vmilitaru at sympatico.ca  Mon May 12 23:53:03 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] Threads...
Message-ID: <3EC06C1F.4070602@sympatico.ca>

Greetings,
since python adaptors to the 3 RDBMS I've tried so far all require
python "with" thread support, I've recompiled python "without-threads"
specifically for mod_python (but without "installing" it).

Then

./configure
--with-apache=/q/apache_1.3.27
--with-python=/q/Python-2.2.2
--with-apxs=/usr/local/apache/bin/apxs

compiles OK, installs OK.
But then apache chokes on new mod_python with:

.../apachectl start

Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
Cannot load /usr/local/apache/libexec/mod_python.so into server:
/usr/local/apache/libexec/mod_python.so: undefined symbol: openpty

Line 210 of httpd.conf is simply the 'LoadModule' directive for
mod_python.so


So, provided this error is related to the thread support issue (from my
corner of the globe it sure smell like it), how is the list juggling
with different versions of python (some apps depending on python "with"
thread support, some depending on python "without" ... and I needing
"both")? Or is there a simpler solution I simply missed while going
through the docs?

Cheers,
Vio



From aturner at neteconomist.com  Tue May 13 09:02:25 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] mod_python slowness
Message-ID: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>


I have a scripts that takes an XML document, munges it and turns it into
HTML to be outputed to the user.  It's setup so that it will run either as
a request handler in mod_python or as a stand alone application.  I am
having extreme problem with the script being slow when running in
mod_python.  I have done some timings, and it is 10-20 times slower
that it is standalone.  The program makes calls to a Postgresql database
using the stock pg module.  The system is running mod_python 3.0.3
w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.

I can't seem to use the profiler to narrow down the problem at all because 
I can't seem to figure out how to execute the profiler on a function that 
takes arguments, and all the functions take at least the HTTP request 
object as an argument, which makes it hard to use the python profiler.  
Even so the script runs fine stand alone.  The one page I am looking at 
goes from 2.2 seconds to 23 seconds.

Has anyone had any similar issues?

Alex Turner
NetEconomist

From grisha at modpython.org  Tue May 13 10:24:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC06C1F.4070602@sympatico.ca>
Message-ID: <20030513102310.H56353-100000@oldchief.reply.net>


IIRC this has to do with -lutil missing from the compile command on some
systems - try hacking the Makefile and adding it manually.

Grisha

On Mon, 12 May 2003, Vio wrote:

> Greetings,
> since python adaptors to the 3 RDBMS I've tried so far all require
> python "with" thread support, I've recompiled python "without-threads"
> specifically for mod_python (but without "installing" it).
>
> Then
>
> ./configure
> --with-apache=/q/apache_1.3.27
> --with-python=/q/Python-2.2.2
> --with-apxs=/usr/local/apache/bin/apxs
>
> compiles OK, installs OK.
> But then apache chokes on new mod_python with:
>
> .../apachectl start
>
> Syntax error on line 210 of /usr/local/apache/conf/httpd.conf:
> Cannot load /usr/local/apache/libexec/mod_python.so into server:
> /usr/local/apache/libexec/mod_python.so: undefined symbol: openpty
>
> Line 210 of httpd.conf is simply the 'LoadModule' directive for
> mod_python.so
>
>
> So, provided this error is related to the thread support issue (from my
> corner of the globe it sure smell like it), how is the list juggling
> with different versions of python (some apps depending on python "with"
> thread support, some depending on python "without" ... and I needing
> "both")? Or is there a simpler solution I simply missed while going
> through the docs?
>
> Cheers,
> Vio
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grisha at modpython.org  Tue May 13 10:31:58 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305130857230.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513102833.C56353-100000@oldchief.reply.net>


I'd first make sure it is not a DNS problem - probably the easiest thing
is to run tcpdump on port 53 to what DNS activity takes place when a
request comes in. Make sure that apache does not resolve host names, also
watch out for postgres using tcpwrappers to resolve host names for
incoming connections.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I have a scripts that takes an XML document, munges it and turns it into
> HTML to be outputed to the user.  It's setup so that it will run either as
> a request handler in mod_python or as a stand alone application.  I am
> having extreme problem with the script being slow when running in
> mod_python.  I have done some timings, and it is 10-20 times slower
> that it is standalone.  The program makes calls to a Postgresql database
> using the stock pg module.  The system is running mod_python 3.0.3
> w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
>
> I can't seem to use the profiler to narrow down the problem at all because
> I can't seem to figure out how to execute the profiler on a function that
> takes arguments, and all the functions take at least the HTTP request
> object as an argument, which makes it hard to use the python profiler.
> Even so the script runs fine stand alone.  The one page I am looking at
> goes from 2.2 seconds to 23 seconds.
>
> Has anyone had any similar issues?
>
> Alex Turner
> NetEconomist
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From rpinder at usc.edu  Tue May 13 08:29:19 2003
From: rpinder at usc.edu (rpinder)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <200305101551.05815.mike_verdone@shaw.ca>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
 <200305101551.05815.mike_verdone@shaw.ca>
Message-ID: <3EC10F4F.4000300@usc.edu>

Hi all,

I'm trying to plan the most efficient way to implement an apache 
project.  And I have a really basic question about how mod_python (or 
any apache 'mod 'kind of framework, probably) works.  I think i've read 
that a major advantage of mod_python is the fact you dont have to 
re'load the interpreter for each instance... but i'm wondering if this 
also equates to having a global, accessible, code space that python is 
operating in.... 

I'm following the examples in the documentation, and am using the 
'handler' example, and have a python script with functions defined that 
do the work  (there is a database connection happening with an Interbase 
server). 

What I"m trying to do is to have a dictionary created and available to 
all users - without having to re'create the dictionary for each apache 
visitor.  I have a reason to NOT want to accomplish this using a 
database table - even though the dictionary is quite large, and requires 
a lot of overhead each time it's created.

So my feeble question involves whether or not theres a way to do 
something like this with modpython, or is it impossible since each 
instance of the python script gets called in its entirety each time a 
request comes in from Apache.

Thanks for any thoughts

Rich

From mod_python at mikebell.org  Tue May 13 09:39:22 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <20030513163921.GT19515@netvista.mikebell.org>

On Tue, May 13, 2003 at 08:29:19AM -0700, rpinder wrote:
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.

Each seperate apache process has its own interpreter, so you might have 10
of them at once. So it's great for things like database connection pooling
(10 database connections is not much different from one, certainly a lot
better than creating a new one for each request) but it's not a single
globally consistant namespace. Unless you use apache2, a thread mpm,
and only one process. But that's not recommended. Maybe you could use
something like berkeley db to back your dictionary?
From francoislepoutre at compuserve.com  Tue May 13 18:13:40 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] _really_ Basic concept question
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
Message-ID: <001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx>

Hi

> I'm trying to plan the most efficient way to implement an apache
> project.  And I have a really basic question about how mod_python (or
> any apache 'mod 'kind of framework, probably) works.  I think i've read
> that a major advantage of mod_python is the fact you dont have to
> re'load the interpreter for each instance... but i'm wondering if this
> also equates to having a global, accessible, code space that python is
> operating in....

Nearly so. Depending on your platform.

on win32:
    You will one workspace on win32 with shared code space
    (beware of that apache/win32 is threaded you will have to
    organize some locking when updating the python data structures)
on linux:
    not one python interpreter but a series of them depending on the
    context (apache setup and stress level)

> I'm following the examples in the documentation, and am using the
> 'handler' example, and have a python script with functions defined that
> do the work  (there is a database connection happening with an Interbase
> server).
>
> What I"m trying to do is to have a dictionary created and available to
> all users - without having to re'create the dictionary for each apache
> visitor.  I have a reason to NOT want to accomplish this using a
> database table - even though the dictionary is quite large, and requires
> a lot of overhead each time it's created.

Sure, you can build your code in such way that your apache mod_python
handler downloads what is necessary at loadtime and keep that stuff
(dictionnaries and the db handler ) buffered within the python "memory
space".

Only once in a while the python interperter be restarted (depending on
apache
setup), your memory workspace will be recreated from the db
(possibly a couple of seconds).

Perf will be excellent in this situation. At later calls to your stuff
apache
will be "python-driven". That's what we do.

We rely heavily on highly secure but time-consuming db-based datastructure.

The possibily to smartly buffer your db stuff within python was our reason
to
switch  into python/mod_python (from iis/isapi).

Welcome onboard :)

Fran?ois

PS
If you wish to organize session-handling this way, it is doable as well but
it
will be a bit more complex as you will need to resync your set of apache
instances (each one handling its own session pool).


From aturner at neteconomist.com  Tue May 13 12:49:18 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] _really_ Basic concept question
In-Reply-To: <3EC10F4F.4000300@usc.edu>
Message-ID: <Pine.LNX.4.44.0305131247280.10997-100000@mx1.neteconomist.com>


I would assume that because each request is handled by a different apache
fork the answer would be that you can't just 'share' variable between
instances because apache doesn't share memory (other than shmem).  This is
also assuming you have apache configured to fork not to thread.  I don't 
know if Python has an interface to shmem, but it probably does, and I 
would imagine you could set it up using that.

Of course, I'm new at mod_python and therefore this is my best guest!

Alex Turner
NetEconomist

On Tue, 13 May 2003, rpinder wrote:

> Hi all,
> 
> I'm trying to plan the most efficient way to implement an apache 
> project.  And I have a really basic question about how mod_python (or 
> any apache 'mod 'kind of framework, probably) works.  I think i've read 
> that a major advantage of mod_python is the fact you dont have to 
> re'load the interpreter for each instance... but i'm wondering if this 
> also equates to having a global, accessible, code space that python is 
> operating in.... 
> 
> I'm following the examples in the documentation, and am using the 
> 'handler' example, and have a python script with functions defined that 
> do the work  (there is a database connection happening with an Interbase 
> server). 
> 
> What I"m trying to do is to have a dictionary created and available to 
> all users - without having to re'create the dictionary for each apache 
> visitor.  I have a reason to NOT want to accomplish this using a 
> database table - even though the dictionary is quite large, and requires 
> a lot of overhead each time it's created.
> 
> So my feeble question involves whether or not theres a way to do 
> something like this with modpython, or is it impossible since each 
> instance of the python script gets called in its entirety each time a 
> request comes in from Apache.
> 
> Thanks for any thoughts
> 
> Rich
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From aturner at neteconomist.com  Tue May 13 12:51:54 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513102833.C56353-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>


I'm pretty sure this is not a DNS problem.  I can break down each loop
that calls the database, and it shows 0.7 seconds per row returning
instead of like 0.03 seconds.  The dns servers are all configured
correctly for both forward and reverse lookups, and I do not have the same
problems in PHP (other the fact that PHP is crap compared to python - but
it's not this slow).

Alex Turner
NetEconomist

On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> I'd first make sure it is not a DNS problem - probably the easiest thing
> is to run tcpdump on port 53 to what DNS activity takes place when a
> request comes in. Make sure that apache does not resolve host names, also
> watch out for postgres using tcpwrappers to resolve host names for
> incoming connections.
> 
> Grisha
> 
> On Tue, 13 May 2003, Alex Turner wrote:
> 
> >
> > I have a scripts that takes an XML document, munges it and turns it into
> > HTML to be outputed to the user.  It's setup so that it will run either as
> > a request handler in mod_python or as a stand alone application.  I am
> > having extreme problem with the script being slow when running in
> > mod_python.  I have done some timings, and it is 10-20 times slower
> > that it is standalone.  The program makes calls to a Postgresql database
> > using the stock pg module.  The system is running mod_python 3.0.3
> > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> >
> > I can't seem to use the profiler to narrow down the problem at all because
> > I can't seem to figure out how to execute the profiler on a function that
> > takes arguments, and all the functions take at least the HTTP request
> > object as an argument, which makes it hard to use the python profiler.
> > Even so the script runs fine stand alone.  The one page I am looking at
> > goes from 2.2 seconds to 23 seconds.
> >
> > Has anyone had any similar issues?
> >
> > Alex Turner
> > NetEconomist
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grisha at modpython.org  Tue May 13 13:22:18 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305131249380.10997-100000@mx1.neteconomist.com>
Message-ID: <20030513132042.F57186-100000@oldchief.reply.net>


Hmm... Well I'm kinda short on ideas. If it's any reassurance - I'm using
pg with mod_python for a small project right now, and it's very very fast,
i.e. I am not aware of any problems with combination of mod_python and
postgresql.

Grisha

On Tue, 13 May 2003, Alex Turner wrote:

>
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>
> >
> > I'd first make sure it is not a DNS problem - probably the easiest thing
> > is to run tcpdump on port 53 to what DNS activity takes place when a
> > request comes in. Make sure that apache does not resolve host names, also
> > watch out for postgres using tcpwrappers to resolve host names for
> > incoming connections.
> >
> > Grisha
> >
> > On Tue, 13 May 2003, Alex Turner wrote:
> >
> > >
> > > I have a scripts that takes an XML document, munges it and turns it into
> > > HTML to be outputed to the user.  It's setup so that it will run either as
> > > a request handler in mod_python or as a stand alone application.  I am
> > > having extreme problem with the script being slow when running in
> > > mod_python.  I have done some timings, and it is 10-20 times slower
> > > that it is standalone.  The program makes calls to a Postgresql database
> > > using the stock pg module.  The system is running mod_python 3.0.3
> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 to see if that would
> > > help and it didn't.  Everything else is stock RedHat 8.0 - python-2.2.1-17.
> > >
> > > I can't seem to use the profiler to narrow down the problem at all because
> > > I can't seem to figure out how to execute the profiler on a function that
> > > takes arguments, and all the functions take at least the HTTP request
> > > object as an argument, which makes it hard to use the python profiler.
> > > Even so the script runs fine stand alone.  The one page I am looking at
> > > goes from 2.2 seconds to 23 seconds.
> > >
> > > Has anyone had any similar issues?
> > >
> > > Alex Turner
> > > NetEconomist
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From jwyant at sfbcic.com  Tue May 13 13:03:45 2003
From: jwyant at sfbcic.com (Wyant, Jaime)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] mod_python slowness
Message-ID: <D2B0A0EB8839D711B63300902784B052187DE0@MS-EXCHANGE>

I used pg / mod_python on my site too and it ran well.  My customer wanted
MySql though and we moved to it.  Thanks to DB-API 2.0 I had only a small
amount of code changes necessary...

jw

>>-----Original Message-----
>>From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
>>Sent: Tuesday, May 13, 2003 12:22 PM
>>To: alex@neteconomist.com
>>Cc: mod_python@modpython.org
>>Subject: Re: [mod_python] mod_python slowness
>>
>>
>>
>>Hmm... Well I'm kinda short on ideas. If it's any reassurance 
>>- I'm using
>>pg with mod_python for a small project right now, and it's 
>>very very fast,
>>i.e. I am not aware of any problems with combination of mod_python and
>>postgresql.
>>
>>Grisha
>>
>>On Tue, 13 May 2003, Alex Turner wrote:
>>
>>>
>>> I'm pretty sure this is not a DNS problem.  I can break 
>>down each loop
>>> that calls the database, and it shows 0.7 seconds per row returning
>>> instead of like 0.03 seconds.  The dns servers are all configured
>>> correctly for both forward and reverse lookups, and I do 
>>not have the same
>>> problems in PHP (other the fact that PHP is crap compared 
>>to python - but
>>> it's not this slow).
>>>
>>> Alex Turner
>>> NetEconomist
>>>
>>> On Tue, 13 May 2003, Gregory (Grisha) Trubetskoy wrote:
>>>
>>> >
>>> > I'd first make sure it is not a DNS problem - probably 
>>the easiest thing
>>> > is to run tcpdump on port 53 to what DNS activity takes 
>>place when a
>>> > request comes in. Make sure that apache does not resolve 
>>host names, also
>>> > watch out for postgres using tcpwrappers to resolve host names for
>>> > incoming connections.
>>> >
>>> > Grisha
>>> >
>>> > On Tue, 13 May 2003, Alex Turner wrote:
>>> >
>>> > >
>>> > > I have a scripts that takes an XML document, munges it 
>>and turns it into
>>> > > HTML to be outputed to the user.  It's setup so that it 
>>will run either as
>>> > > a request handler in mod_python or as a stand alone 
>>application.  I am
>>> > > having extreme problem with the script being slow when 
>>running in
>>> > > mod_python.  I have done some timings, and it is 10-20 
>>times slower
>>> > > that it is standalone.  The program makes calls to a 
>>Postgresql database
>>> > > using the stock pg module.  The system is running 
>>mod_python 3.0.3
>>> > > w/apache 2.0.43.  I just upgraded to mod_python 3.0.3 
>>to see if that would
>>> > > help and it didn't.  Everything else is stock RedHat 
>>8.0 - python-2.2.1-17.
>>> > >
>>> > > I can't seem to use the profiler to narrow down the 
>>problem at all because
>>> > > I can't seem to figure out how to execute the profiler 
>>on a function that
>>> > > takes arguments, and all the functions take at least 
>>the HTTP request
>>> > > object as an argument, which makes it hard to use the 
>>python profiler.
>>> > > Even so the script runs fine stand alone.  The one page 
>>I am looking at
>>> > > goes from 2.2 seconds to 23 seconds.
>>> > >
>>> > > Has anyone had any similar issues?
>>> > >
>>> > > Alex Turner
>>> > > NetEconomist
>>> > >
>>> > > _______________________________________________
>>> > > Mod_python mailing list
>>> > > Mod_python@modpython.org
>>> > > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> > >
>>> >
>>> > _______________________________________________
>>> > Mod_python mailing list
>>> > Mod_python@modpython.org
>>> > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> >
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>

From vmilitaru at sympatico.ca  Tue May 13 11:43:51 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:03:50 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
Message-ID: <3EC112B7.2010405@sympatico.ca>

Gregory (Grisha) Trubetskoy wrote:

>IIRC this has to do with -lutil missing from the compile command on some
>systems - try hacking the Makefile and adding it manually.
>  
>

Thanks for the tip. That seems to do it. For the record, I simply edited
mod_python-2.7.8/src/Makefile as:
...
LIBS=-lm  /q/Python-2.2.2/libpython2.2.a  -lutil


Now apache starts ok, and I can access 'mysql' from python prompt just 
as nicely from the python prompt.
 >>> import MySQLdb

But this puzzles me: importing MySQLdb from within PythonHandler still 
gives me the old 'threads' error:

-------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", 
line 193, in Dispatch
    result = object(req)

  File "/usr/local/apache/htdocs/server/test.py", line 20, in handler
    import MySQLdb

  File "/usr/local/lib/python2.2/site-packages/MySQLdb/__init__.py", 
line 27, in ?
    import _mysql

ImportError: /usr/local/lib/python2.2/site-packages/_mysql.so: undefined 
symbol: pthread_key_create
--------------------------


This is puzzling because I recompiled/reinstalled both mod_python and 
MySQLdb, manually zapped _mysql.so (just to be sure), obviously 
restarted apache, and still get this pthreads error. Seems to me like 
mod_python and the python interactive interpreter are not using the same 
"_mysql.so" somehow. Is mod_python cache somewhere ?
Any ideas?

Vio


From jack_diederich at email.com  Tue May 13 15:35:10 2003
From: jack_diederich at email.com (Jack Diederich)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] mod_python slowness
Message-ID: <20030513203511.32703.qmail@email.com>

> 
> I'm pretty sure this is not a DNS problem.  I can break down each loop
> that calls the database, and it shows 0.7 seconds per row returning
> instead of like 0.03 seconds.  The dns servers are all configured
> correctly for both forward and reverse lookups, and I do not have the same
> problems in PHP (other the fact that PHP is crap compared to python - but
> it's not this slow).

Are you doing anything wierd like running apache or progres
through inetd (so it has to start a new process for every
request)?  Or are you doing a new database connection for
each row?

If the identical python program takes 1/10th the time running
stand-alone I think the DNS was one the right track - it must
be a network related problem.

You might also want to print to the resulting page the time
the process took from start to finish.  If the page is very
complicated it might look slower even if it isn't.

You can also try commenting out all the database calls and
timing the stand alone and mod_python versions.  That will
at least allow you to narrow down the problem.  Also consider
using 'strace' on the stand alone and the apache version.
Compare the system calls between the two to see if something
pathological is happening in the mod_python case.

-jack
-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

From vmilitaru at sympatico.ca  Tue May 13 14:46:21 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca>
Message-ID: <3EC13D7D.7030406@sympatico.ca>

Followup ...

On possibility that this may be 'mysql'-related, I am getting similar 
error with Oracle8i:

------------------------
Mod_python error: "PythonHandler test"

Traceback (most recent call last):

File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
193, in Dispatch
result = object(req)

File "/usr/local/apache/htdocs/server/test.py", line 21, in handler
import DCOracle2

File "/usr/local/lib/python2.2/site-packages/DCOracle2/__init__.py", 
line 37, in ?
from DCOracle2 import *

File "/usr/local/lib/python2.2/site-packages/DCOracle2/DCOracle2.py", 
line 104, in ?
import dco2

ImportError: /usr/local/lib/python2.2/site-packages/DCOracle2/dco2.so: 
undefined symbol: PyThread_get_thread_ident
-----------------------

But going through the list archives, I didn't see previous mentions of 
this threads-related problem, so I am totally puzzled. Maybe this is 
mod_python 2.7 related? Without better alternative, I'll give a shot at  
mod_python 3.0, although in doing so I'm losing mod_ssl, as it's not 
available (last time I checked) for apache 2.x.

If of any interest, I'm running:
Linux version 2.4.18-bf2.4  (gcc version 2.95.4 20011002 (Debian 
prerelease))

Vio



From chip at cyan.com  Tue May 13 16:02:18 2003
From: chip at cyan.com (Paul Querna)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Threads...
In-Reply-To: <3EC13D7D.7030406@sympatico.ca>
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
Message-ID: <20030513230218.M9562@cyan.com>

> But going through the list archives, I didn't see previous mentions 
> of this threads-related problem, so I am totally puzzled. Maybe this 
> is mod_python 2.7 related? Without better alternative, I'll give a 
> shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
> it's not available (last time I checked) for apache 2.x.

mod_ssl is included in apache2(no longer a seperate project...)

http://httpd.apache.org/docs-2.0/mod/mod_ssl.html

-chip

From vmilitaru at sympatico.ca  Tue May 13 16:47:38 2003
From: vmilitaru at sympatico.ca (Vio)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Threads...
References: <20030513102310.H56353-100000@oldchief.reply.net>
	<3EC112B7.2010405@sympatico.ca> <3EC13D7D.7030406@sympatico.ca>
	<20030513230218.M9562@cyan.com>
Message-ID: <3EC159EA.2090107@sympatico.ca>

As I later discovered:)
I guess the mod_ssl maintainer should mention this fact (for clueless 
users like me) on the mod_ssl page. [Mistakingly] believing otherwise, 
that was my main reason for not migrating to apache2. But all is well 
which ends well, and all threads errors previously mentionned are 
definitely confined to mod_python2.7

Thanks Paul and Grisha for helpful tips.
Sorry for the noise, though.
Vio



Paul Querna wrote:

>>But going through the list archives, I didn't see previous mentions 
>>of this threads-related problem, so I am totally puzzled. Maybe this 
>>is mod_python 2.7 related? Without better alternative, I'll give a 
>>shot at mod_python 3.0, although in doing so I'm losing mod_ssl, as 
>>it's not available (last time I checked) for apache 2.x.
>>    
>>
>
>mod_ssl is included in apache2(no longer a seperate project...)
>
>http://httpd.apache.org/docs-2.0/mod/mod_ssl.html
>
>-chip
>
>
>  
>



From francoislepoutre at compuserve.com  Wed May 14 08:14:39 2003
From: francoislepoutre at compuserve.com (francois lepoutre)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Database connectivity
References: <011b01c3170c$243ade30$be00a8c0@kemu3jve3zxvcw>
	<200305101551.05815.mike_verdone@shaw.ca> <3EC10F4F.4000300@usc.edu>
	<001d01c3196a$a71e1460$0d6e4351@mixio7jpsmlatx> <3EC14706.8000507@usc.edu>
Message-ID: <002801c319e0$19ef7cc0$0d6e4351@mixio7jpsmlatx>

Hi

> So... the script that is referenced in my handler..... if it has an
> _init_ section, will that do the trick ?? and it'll only get run once,
> when the interpreter calls the handler for the first time ???

No _init_  section or objectified kind of code required.
Some plain python stuff will do :)

An example... not tested here. Hope you pick the idea
You just need to dive in now .. Good luck.

Fran?ois

############################
#! C:\Python22\python.exe

# mod_python handling
from mod_python import apache,util

# database connectivity
from mx import DateTime,ODBC

# your database connectivity here
# this is mxODBC/ODBC code
# will depend on your midlle ware...

# this code will run rarely..
# a couple of 1/n of seconds upon setup
database_handle = ODBC.iODBC.Connect("my_connectionion","dba","sql",0)
cursor_handle  = database_handle.cursor()
cursor_handle.execute("select * from customers")
my_shared_data = cursor_handle.fetchall()
cursor_handle.close()

################################
def handler(req):

    # should be long the first time
    # very fast the next one...
    req.content_type = "text/plain"
    req.send_http_header()
    req.write(str(my_shared_data))

    return apache.OK




From majbritt37 at hotmail.com  Fri May 16 00:03:49 2003
From: majbritt37 at hotmail.com (=?iso-8859-1?B?TeVydGVuIEFzaw==?=)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] mod_python for python 2.3
Message-ID: <BAY1-F171sTgirt0KZt0001b438@hotmail.com>

Hello.

I'm having some trouble. It seems that either apache or mod_python doesn't 
realise that I'm using python 2.3, instead they insist that I have python 
2.2.2 installed. The apache error logs show:

make_obcallback: could not import mod_python.apache.

It seems like mod_python is linked to the python22.dll in my system32 
folder. I tried removing it so that it might try to use the python23.dll 
that's also there, but apache then refuses to start.

So how do I fix this? Do I need to recompile either apache or mod_python 
(which I have no idea how to do) or can I find binaries somewhere that might 
work?

Help help.

_________________________________________________________________
L?ttare att hitta dr?mresan med MSN Resor http://www.msn.se/resor/

From aturner at neteconomist.com  Fri May 16 10:34:39 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030513203511.32703.qmail@email.com>
Message-ID: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>


It's very unlikely to be a network problem because both the database and 
the web server are running on the same host.  The timings that I took were 
done by placing a start=time.time() at the top of the code section that 
executes 
the file, and a print time.time()-start at the end, so I'm fairly 
convinced that these are accurate.  I then placed more time tests around 
other parts of the mechanism which allowed me to gauge how long each 
segment of the run takes.  I have found a serious flaw in my database 
class, having corrected that though, I found something interesting:

This is my init routine for by DBResult class:

def __init__(self,query):
 start=time.time()
 self.query=query
 self.counter=0;
 self.lresults_l=self.query.getresult()
 self.dresults_l=self.query.dictresult()
 self.fresults_l=[]

 # Copy the indexed/dict values into fresults
 for a in range(len(self.lresults_l)):
   x=0
   self.fresults_l.append({})
   for b in self.lresults_l[a]:
      self.fresults_l[a][x]=b
      x=x+1

   for b in self.dresults_l[a].keys():
      self.fresults_l[a][b]=self.dresults_l[a][b]

 print "Init time %f<br>\n" % (time.time()-start)

It's not pretty, but it does show something wierd:

inside apache this gives a time of: 0.178554 secs
outside apache this gives a time of: 0.093750 secs

almost twice as fast.

Maybe this is a pg module problem, I don't know, but it's certainly wierd!

Alex Turner
NetEconomist

On Tue, 13 May 2003, Jack Diederich wrote:

> > 
> > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > that calls the database, and it shows 0.7 seconds per row returning
> > instead of like 0.03 seconds.  The dns servers are all configured
> > correctly for both forward and reverse lookups, and I do not have the same
> > problems in PHP (other the fact that PHP is crap compared to python - but
> > it's not this slow).
> 
> Are you doing anything wierd like running apache or progres
> through inetd (so it has to start a new process for every
> request)?  Or are you doing a new database connection for
> each row?
> 
> If the identical python program takes 1/10th the time running
> stand-alone I think the DNS was one the right track - it must
> be a network related problem.
> 
> You might also want to print to the resulting page the time
> the process took from start to finish.  If the page is very
> complicated it might look slower even if it isn't.
> 
> You can also try commenting out all the database calls and
> timing the stand alone and mod_python versions.  That will
> at least allow you to narrow down the problem.  Also consider
> using 'strace' on the stand alone and the apache version.
> Compare the system calls between the two to see if something
> pathological is happening in the mod_python case.
> 
> -jack
> 

From grisha at modpython.org  Fri May 16 12:07:27 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <Pine.LNX.4.44.0305160945040.29332-100000@mx1.neteconomist.com>
Message-ID: <20030516120158.K6045-100000@oldchief.reply.net>


The times listed below, are these averages of multiple iterations (e.g.
10000) or just a one time try?

Anyway - it doesn't look like this is where the bottleneck is - you
mentioned before that a page that took 2.2 seconds to load takes 23
seconds - that's almost 21 seconds of difference whereas below you have a
slowdown of 0.8 secs.

Grisha


On Fri, 16 May 2003, Alex Turner wrote:

>
> It's very unlikely to be a network problem because both the database and
> the web server are running on the same host.  The timings that I took were
> done by placing a start=time.time() at the top of the code section that
> executes
> the file, and a print time.time()-start at the end, so I'm fairly
> convinced that these are accurate.  I then placed more time tests around
> other parts of the mechanism which allowed me to gauge how long each
> segment of the run takes.  I have found a serious flaw in my database
> class, having corrected that though, I found something interesting:
>
> This is my init routine for by DBResult class:
>
> def __init__(self,query):
>  start=time.time()
>  self.query=query
>  self.counter=0;
>  self.lresults_l=self.query.getresult()
>  self.dresults_l=self.query.dictresult()
>  self.fresults_l=[]
>
>  # Copy the indexed/dict values into fresults
>  for a in range(len(self.lresults_l)):
>    x=0
>    self.fresults_l.append({})
>    for b in self.lresults_l[a]:
>       self.fresults_l[a][x]=b
>       x=x+1
>
>    for b in self.dresults_l[a].keys():
>       self.fresults_l[a][b]=self.dresults_l[a][b]
>
>  print "Init time %f<br>\n" % (time.time()-start)
>
> It's not pretty, but it does show something wierd:
>
> inside apache this gives a time of: 0.178554 secs
> outside apache this gives a time of: 0.093750 secs
>
> almost twice as fast.
>
> Maybe this is a pg module problem, I don't know, but it's certainly wierd!
>
> Alex Turner
> NetEconomist
>
> On Tue, 13 May 2003, Jack Diederich wrote:
>
> > >
> > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > that calls the database, and it shows 0.7 seconds per row returning
> > > instead of like 0.03 seconds.  The dns servers are all configured
> > > correctly for both forward and reverse lookups, and I do not have the same
> > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > it's not this slow).
> >
> > Are you doing anything wierd like running apache or progres
> > through inetd (so it has to start a new process for every
> > request)?  Or are you doing a new database connection for
> > each row?
> >
> > If the identical python program takes 1/10th the time running
> > stand-alone I think the DNS was one the right track - it must
> > be a network related problem.
> >
> > You might also want to print to the resulting page the time
> > the process took from start to finish.  If the page is very
> > complicated it might look slower even if it isn't.
> >
> > You can also try commenting out all the database calls and
> > timing the stand alone and mod_python versions.  That will
> > at least allow you to narrow down the problem.  Also consider
> > using 'strace' on the stand alone and the apache version.
> > Compare the system calls between the two to see if something
> > pathological is happening in the mod_python case.
> >
> > -jack
> >
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From aturner at neteconomist.com  Fri May 16 12:27:38 2003
From: aturner at neteconomist.com (Alex Turner)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] mod_python slowness
In-Reply-To: <20030516120158.K6045-100000@oldchief.reply.net>
Message-ID: <Pine.LNX.4.44.0305161221570.29332-100000@mx1.neteconomist.com>


DOH!

I found the problem.  And can easily explain the discrepancy between
running the script stand alone vs in apache.  There is one major
difference between apache, and standalone: Cookies.  My Container object
that is passed to each tag function was fetching the cookies from the
request object for each execution! I moved the code into the right place,
i.e. where the request object initialy get's dealt with, and that has
of course cured the problem!

Many thanks to all who have replied.

And as a random editorial, I have to say that I enjoy working with 
mod_python/python as a web platform far more than any other I've used 
previously including php, perl, java and coldfusion.  It has both the 
flexibility and the power to make web development fast and easy (thank 
goodness for proper stack traces and a consistance language API!)

Alex Turner
NetEconomist

On Fri, 16 May 2003, Gregory (Grisha) Trubetskoy wrote:

> 
> The times listed below, are these averages of multiple iterations (e.g.
> 10000) or just a one time try?
> 
> Anyway - it doesn't look like this is where the bottleneck is - you
> mentioned before that a page that took 2.2 seconds to load takes 23
> seconds - that's almost 21 seconds of difference whereas below you have a
> slowdown of 0.8 secs.
> 
> Grisha
> 
> 
> On Fri, 16 May 2003, Alex Turner wrote:
> 
> >
> > It's very unlikely to be a network problem because both the database and
> > the web server are running on the same host.  The timings that I took were
> > done by placing a start=time.time() at the top of the code section that
> > executes
> > the file, and a print time.time()-start at the end, so I'm fairly
> > convinced that these are accurate.  I then placed more time tests around
> > other parts of the mechanism which allowed me to gauge how long each
> > segment of the run takes.  I have found a serious flaw in my database
> > class, having corrected that though, I found something interesting:
> >
> > This is my init routine for by DBResult class:
> >
> > def __init__(self,query):
> >  start=time.time()
> >  self.query=query
> >  self.counter=0;
> >  self.lresults_l=self.query.getresult()
> >  self.dresults_l=self.query.dictresult()
> >  self.fresults_l=[]
> >
> >  # Copy the indexed/dict values into fresults
> >  for a in range(len(self.lresults_l)):
> >    x=0
> >    self.fresults_l.append({})
> >    for b in self.lresults_l[a]:
> >       self.fresults_l[a][x]=b
> >       x=x+1
> >
> >    for b in self.dresults_l[a].keys():
> >       self.fresults_l[a][b]=self.dresults_l[a][b]
> >
> >  print "Init time %f<br>\n" % (time.time()-start)
> >
> > It's not pretty, but it does show something wierd:
> >
> > inside apache this gives a time of: 0.178554 secs
> > outside apache this gives a time of: 0.093750 secs
> >
> > almost twice as fast.
> >
> > Maybe this is a pg module problem, I don't know, but it's certainly wierd!
> >
> > Alex Turner
> > NetEconomist
> >
> > On Tue, 13 May 2003, Jack Diederich wrote:
> >
> > > >
> > > > I'm pretty sure this is not a DNS problem.  I can break down each loop
> > > > that calls the database, and it shows 0.7 seconds per row returning
> > > > instead of like 0.03 seconds.  The dns servers are all configured
> > > > correctly for both forward and reverse lookups, and I do not have the same
> > > > problems in PHP (other the fact that PHP is crap compared to python - but
> > > > it's not this slow).
> > >
> > > Are you doing anything wierd like running apache or progres
> > > through inetd (so it has to start a new process for every
> > > request)?  Or are you doing a new database connection for
> > > each row?
> > >
> > > If the identical python program takes 1/10th the time running
> > > stand-alone I think the DNS was one the right track - it must
> > > be a network related problem.
> > >
> > > You might also want to print to the resulting page the time
> > > the process took from start to finish.  If the page is very
> > > complicated it might look slower even if it isn't.
> > >
> > > You can also try commenting out all the database calls and
> > > timing the stand alone and mod_python versions.  That will
> > > at least allow you to narrow down the problem.  Also consider
> > > using 'strace' on the stand alone and the apache version.
> > > Compare the system calls between the two to see if something
> > > pathological is happening in the mod_python case.
> > >
> > > -jack
> > >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 

From philipj at telia.com  Fri May 16 23:18:19 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <20030516231819.3bf2a966.philipj@telia.com>

Hello.

My subject is bad, because I can't figure out what to call what I want
to do.

I'm writing a wiki-ish application, where currently I'm writing URIs
like http://site.org/?page=cow&group=animals. I don't much like this
approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result. The ideal
thing would be if I could get mod_python to handle _all_ requests, for
any type of file (not just .py) in a directory, so that I could just
read req.uri and manually figure out what to do -- if the given group or
page doesn't exist, return 404 or something.

So, how could I achieve something like this with mod_python? The key
issue is getting mod_python to handle everything really, but if that's
not a good way to go about the problem, please tell what else I could
do. I've heard so much talk about twisted and zope, which I think might
do something like this, but both of those libraries/frameworks appear to
be so much more than I need -- I want to continue using mod_python.

Ideas?

// Philip J?genstedt
From mike at mapvision.com  Fri May 16 14:43:17 2003
From: mike at mapvision.com (Michael Gibbs)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Please help me  :)
Message-ID: <200305161443.17917.mike@mapvision.com>

Thanks in advance for any guidance you can provide.

Our problem is that we are trying to maintain a counter using a global 
variable. However the script returns different values when multiple browser 
form requests are being submitted. The counter seems to get changed by 
different requests but not as expected. Are we doing something wrong?

Thanks,
Mike. 


This is the HTML form we use to make the mod_python request. 

<HTML>
        <form action="http://localhost/form2" method="POST">
                <input type="submit">
        </form>
</HTML>


This is the python script (form2.py)

#Why does this script return different values for _count?
#This happens when two browsers are opened and multiple
#forms are submitted. Going back and forth between browsers
#seems to mess up/reset the count on different requests.

from mod_python import apache
_count = 0
def handler(req):
        global _count
        _count += 1
        req.content_type = "text/html"
        req.send_http_header()
        req.write('_count = %d' %_count)
        return apache.OK
From vlindberg at verio.net  Fri May 16 15:57:38 2003
From: vlindberg at verio.net (VanL)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <3EC55ED2.2010900@verio.net>

Philip J?genstedt wrote:
I don't much like this approach, and would like to instead have an URI like
http://site.org/animals/cow, which would give the same result.


What you  want has been termed object publishing by the Zope community, 
and that usage has been (fairly) widely adopted.  I have been 
researching this lately; AFAIK, you have three options that do this with 
mod_python:

1. mod_python publisher handler.  See the documentation on the 
mod_python site.  Advantage: built in, as close to apache as you can 
get.  Disadvantage: as close to apache as you can get.  Any supporting 
infrastructure will need to be written by you.

2. albatross + mod_python.  Albatross allows this sort of thing, see 
their "Random*Apps" and the associated documentation. Advantage: nice 
session management, page processing model. Disadvantage: the 
implementation of the Random Apps leaves a little to be desired -- it 
moves the user around through http redirects.

3. quixote + mod_python. This is a central feature of quixote, and they 
do it very nicely. Advantage: the mapping of the URL-space to the 
code-space is very elegant.  Disadvantage (at least for me): I don't 
like ptl (their html generation system) as much.


VanL

From mod_python at mikebell.org  Sat May 17 00:15:50 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
References: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <20030517071549.GU19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 11:18:19PM +0200, Philip J?genstedt wrote:
> So, how could I achieve something like this with mod_python? The key
> issue is getting mod_python to handle everything really, but if that's
> not a good way to go about the problem, please tell what else I could
> do.

Give this a try, in your apache configs do something like:

<Location /URL/>
SetHandler python-program
PythonHandler MyHandler
</Location>
From mod_python at mikebell.org  Sat May 17 00:18:56 2003
From: mod_python at mikebell.org (mod_python@mikebell.org)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <200305161443.17917.mike@mapvision.com>
References: <200305161443.17917.mike@mapvision.com>
Message-ID: <20030517071855.GV19515@netvista.mikebell.org>

On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
> Our problem is that we are trying to maintain a counter using a global 
> variable. However the script returns different values when multiple browser 
> form requests are being submitted. The counter seems to get changed by 
> different requests but not as expected. Are we doing something wrong?

Your global variables will only be shared by requests handled by the
same interpreter. Each apache process forked has its own. You need to
use some form of shared memory to get multiple processes to share a
counter, be it by mmaping a file or using a database connection or
whatever.
From etienne at cs.vu.nl  Sat May 17 15:29:25 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC55ED2.2010900@verio.net>
Message-ID: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
> 3. quixote + mod_python. This is a central feature of quixote, and 
> they do it very nicely. Advantage: the mapping of the URL-space to the 
> code-space is very elegant.  Disadvantage (at least for me): I don't 
> like ptl (their html generation system) as much.

BTW, you could also use other template systems with Quixote, for 
example there is the standalone  SimpleTAL which looked quite good. (I 
haven't used it yet, the author claims extensive Zope TAL and METAL 
compatibility)

EP

From etienne at cs.vu.nl  Sat May 17 15:34:55 2003
From: etienne at cs.vu.nl (Etienne Posthumus)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030516231819.3bf2a966.philipj@telia.com>
Message-ID: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>


On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
wrote:
> My subject is bad, because I can't figure out what to call what I want
> to do.


The name for it is REST.
So to rephrase your question: "How can I make my application more 
REST-like?"

regards

EP

From news at exultants.org  Sat May 17 17:58:11 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
References: <20030516231819.3bf2a966.philipj@telia.com>
	<5875D4AE-886C-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6lnr$e0n$1@main.gmane.org>

Etienne Posthumus wrote:
> 
> On Friday, May 16, 2003, at 23:18 Europe/Amsterdam, Philip J?genstedt 
> wrote:
> 
>> My subject is bad, because I can't figure out what to call what I want
>> to do.
> 
> 
> 
> The name for it is REST.
> So to rephrase your question: "How can I make my application more 
> REST-like?"
> 

For the benefit of Philip:

REST = "REpresentational State Transfer"

See <http://internet.conveyor.com/RESTwiki/moin.cgi> for a wiki 
describing the REST architectural style.

Here's an interesting looking project that tries to build an even higher 
level REST architecture on top of Quixote, 
<http://www.rexx.com/~dkuhlman/fsmGenerate_howto.html>

The end of that page has some other good links to other python + quixote 
+ REST resources.


From news at exultants.org  Sat May 17 17:47:08 2003
From: news at exultants.org (Van Gale)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Re: Mapping a URI to pages dynamically.
In-Reply-To: <93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
References: <3EC55ED2.2010900@verio.net>
	<93D32296-886B-11D7-B822-0003935458F6@cs.vu.nl>
Message-ID: <ba6l35$chi$1@main.gmane.org>

Etienne Posthumus wrote:
> On Friday, May 16, 2003, at 23:57 Europe/Amsterdam, VanL wrote:
 >>
>> 3. quixote + mod_python. This is a central feature of quixote, and 
>> they do it very nicely. Advantage: the mapping of the URL-space to the 
>> code-space is very elegant.  Disadvantage (at least for me): I don't 
>> like ptl (their html generation system) as much.
> 
> 
> BTW, you could also use other template systems with Quixote, for example 
> there is the standalone  SimpleTAL which looked quite good. (I haven't 
> used it yet, the author claims extensive Zope TAL and METAL compatibility)

This is close to the approach I'm going to use.

I'll use Quixote for the object publishing, session handling, etc.  For 
templating I'll use PTL for generating programmed web-pages (e.g. RSS 
feeds) and PyMeld for pages that need to be "designed".

Van


From sury.ondrej at globe.cz  Mon May 19 14:35:55 2003
From: sury.ondrej at globe.cz (Ondrej Sury)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Please help me  :)
In-Reply-To: <20030517071855.GV19515@netvista.mikebell.org> (mod python's
 message of "Sat, 17 May 2003 00:18:56 -0700")
References: <200305161443.17917.mike@mapvision.com>
	<20030517071855.GV19515@netvista.mikebell.org>
Message-ID: <87llx36rmc.fsf@globe.cz>

mod_python@mikebell.org writes:

> On Fri, May 16, 2003 at 02:43:17PM -0700, Michael Gibbs wrote:
>> Our problem is that we are trying to maintain a counter using a global 
>> variable. However the script returns different values when multiple browser 
>> form requests are being submitted. The counter seems to get changed by 
>> different requests but not as expected. Are we doing something wrong?
>
> Your global variables will only be shared by requests handled by the
> same interpreter. Each apache process forked has its own. You need to
> use some form of shared memory to get multiple processes to share a
> counter, be it by mmaping a file or using a database connection or
> whatever.

I had some success when using threaded mpm model (per_child f.e.) in apache 2.x
which starts only on python interpreter for all threads in the same process group.

O.

-- 
Ondrej Sury - co/CTO                Globe Internet s.r.o. http://globe.cz/
Tel: +420(2)35365000 Fax: +420(2)35365009     Planickova 1, 162 00 Praha 6
From mike.looijmans at asml.com  Mon May 19 14:51:05 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
Message-ID: <01c31e05$4f438280$926a1e6e@wsasd464>

I chose option #4: Build your own.

I just have /xx scriptaliased to point to a single .py handler. That one takes
the uri (request.path_info) and uses that to make the proper call.

I made it so that the request is like:

/xx/session/script...


(session could be a session ID, or name of database to use, and such).

The figures out which module to (re)import (the one named "script" in this
case), loads it, firgures out the parameters (usually the request object,
authorization information and a database connection) and calls its "main"
function.

Took about an hour to invent, implement and test and has been working
flawlessly for months. I like this language :-)
And it's backwards compatible with CGI too, at least, to the extent that I
need, so that servers without mod_python can use the same codebase (only the
initial handler differs).

Mike.


From davidf at sjsoft.com  Mon May 19 16:06:51 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <3EC8E4FB.90104@sjsoft.com>

Mike Looijmans wrote:

>I chose option #4: Build your own.
>
>I just have /xx scriptaliased to point to a single .py handler. That one takes
>the uri (request.path_info) and uses that to make the proper call.
>
Very cool. Is this with Apache directives?

>I made it so that the request is like:
>
>/xx/session/script...
>
>
>(session could be a session ID, or name of database to use, and such).
>
>The figures out which module to (re)import (the one named "script" in this
>case), loads it, firgures out the parameters (usually the request object,
>authorization information and a database connection) and calls its "main"
>function.
>
Presume you mean "The handler figures out"...?

>Took about an hour to invent, implement and test and has been working
>flawlessly for months. I like this language :-)
>And it's backwards compatible with CGI too, at least, to the extent that I
>need, so that servers without mod_python can use the same codebase (only the
>initial handler differs).
>
Very nice...
I think a description of how to do this would be a great addition to the 
modpython manual...

David

From philipj at telia.com  Mon May 19 18:53:11 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <01c31e05$4f438280$926a1e6e@wsasd464>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
Message-ID: <20030519185311.17d2a126.philipj@telia.com>

> I chose option #4: Build your own.

It's interresting that you should say that, because I eventually came to
the same conclusion. It took a litter longer for me to invent (because
the last thing in the URI can be either a "group" or "node", which takes
some code to figure out which). Anyway, it's just 16 lines long, so that
feels better than importing quixote modules or something.

However, there is one flaw which it sounds you may have overcome. Since
I have DirectoryIndex index.py for my / on the server, just writing
http://site.org/ gives me a URI of /index.py. I resolve this by checking
if the last (and only!) element of the URI is the same as the filename
of the executing script. The downside is that it makes it impossible to
have a group or node called "index.py". Also, because I have my css in
the root (A special exception from the SetHandler python-progam is made
for the css file), no node can be called "stdb.css" Nor can I have a
"lib" node or dir, because of the "lib" dir containing all the modules
of my application.

You get the point... in practice, this isn't a very big problem, but
it's just not clean -- I'd like to get around it. So the question: does

> I just have /xx scriptaliased to point to a single .py handler.

mean that you use SetHandler python-program for entire dir, or are you
doing something smarter that might help me evade the issues I'm having?

// Philip J?genstedt
From gmurali at cs.uchicago.edu  Mon May 19 15:59:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
Message-ID: <3EC945B4.1050907@cs.uchicago.edu>

Sorry for not replying earlier... Here is the code, we use...
I have removed pieces of the code which deal with other stuff.
I hope I have not removed too many things...
This code is due to Dustin Mitchell who setup our site
initially.

We use translate.py as our translate handler, which as you can
see creates a req.url, which has lots of information about the
requested url. The check_dont_handle function, allows us to not
handle certain file types or certain subtrees of the DOCROOT.

Hope you find the code useful.

- Murali

------ translate.py ------------
from mod_python import apache, util
from utils import urls
import os, string, config

# This module is responsible for translating the URL space as designed
# into a filename, which Apache will use to control further processing
# of the request.
#
# It does lots of other things too, basically to process the request
# into a nice, Python-ish format.

def transhandler(req):
   # First check if we're configured not to handle this request.
   check_dont_handle(req)

   # Otherwise begin handling this normally
   try:
     # We use the URL class to calculate all of the parts of the URL
     # we were given
     req.url = urls.URL(req)

     # Check if this is a secure connection
     req.secure = is_secure(req)

     # Copy some important values into req
     req.filename, req.modpath = req.url.filename, req.url.modpath

     # Grab any relevant form data,
     req.form_data = util.FieldStorage(req, keep_blank_values=1, 
strict_parsing=1)

     # and register the next handler
     req.add_handler("PythonHandler", "handlers.dispatch")

   # And handle any errors during that time by logging and sending the
   # usual Apache 404 message.
   except:
     return apache.HTTP_NOT_FOUND

   return apache.OK

def check_dont_handle(req):
   """Supports the PythonOption DontHandle Apache configuration option:

PythonOption DontHandle initial-uri[:initial-uri[:initial-uri...]]

which causes the Python site to decline to handle any requests beginning
with one of the specified initial-uri's.  In that case, normal Apache
behavior will apply.
"""
   options = req.get_options()
   uri = req.uri
   if options.has_key('DontHandle'):
     dont_handle = string.split(options['DontHandle'], ':')
     for prefix in dont_handle:
       if prefix == uri[:len(prefix)]:
         raise apache.SERVER_RETURN, apache.DECLINED

def is_secure(req):
   # This seems the best way to do this
   return req.server.port == 443

-----end of translate.py ---------

------ urls.py ---------------

import config
from mod_python import util
import os, string, copy
import re

# This module is responsible for translating the URL space as designed
# into its components:
#
# http://py.cs.uchicago.edu/path/to/program/args1/args2?internal+data
# ----   ------------------ --------------- ----------- -------------
# |      server             \ script_path   \ args_path \ internal
# \ scheme

# All of these fields are member variables of the URL class. Further,
# args_path is available in list form as url.arguments.
# url.internal is a dictionary representing the value of internal as
# a standard URL query string.  url.special contains the characters
# from internal if it contains no '=', and is empty otherwise.

# the module sets the following fields in req:
#  filename -- the filename of the file which will produce the final
#     response.  Apache cares about this.
#  modpath -- a list of nested Python modules which will succeed in
#     representing the script.
#
# It's important to note that the latter two options define the file
# which will produce the final page, while the annotations on the URL
# are produced regardless of the Python program that will eventually
# produce the data.
#
# In particular, Apache is depending on this module to provide
# req.filename.  Apache config commands (e.g. <Directory>) will look
# at this result to determine what to do next.  To help out down the
# road, we also keep track of a module path to get to the relevant .py
# file, and the portion of the URI which specified that file.

# Python script files are:
#   'docroot'/'script_path'.py
# or
#   'docroot'/'script_path'/index.py
# And this program will find the longest possible match among those
# possibilities.

class URL:
   "Object to represent the URL for a given hit on the site."

   def __init__(self, req):
     # get the scheme (e.g., http or https)
     if req.server.port == 443:
       self.scheme = 'https'
     else:
       self.scheme = 'http'

     # Get the method (e.g., 'GET', 'POST', 'HEAD')
     self.method = req.method

     # server name (just to be safe)
     self.server = req.server.server_hostname

     # parse the path, finding the longest part that still refers to a
     # Python script.
     self._parse_path(req.uri)

   # ----
   # Helper functions

   def _parse_path(self, path):
     # Strip that initial slash
     path = path[1:]

     # Break the path into components
     components = []
     if path:
       components = string.split(path, '/')

     # We operate on 4-tuples:
     current = (
       config.docroot,                   # filename
       config.docmod,                    # modpath
       "/",                              # script_path
       components )                      # arguments
     FILENAME = 0
     MODPATH = 1
     SCRIPT_PATH = 2
     ARGUMENTS = 3

     best = None

     # Loop over those components
     while 1:
       # Try two variations of current, in order of length.
       # 'filename'.py
       fn = current[FILENAME] + '.py'
       if self._intree(fn, config.docroot) and \
          os.path.isfile(fn):
         best = ( fn, current[1], current[2], current[3] )

       # If it's a directory we can try 'filename'/index.py
       if os.path.isdir(current[FILENAME]):
         fn = os.path.join(current[FILENAME], 'index.py')
         if self._intree(fn, config.docroot) and \
            os.path.isfile(fn):
           best = ( fn, current[1] + ( 'index', ),
                    current[2], current[3] )

         # And since it's a directory, we can try the next level of
         # directory nesting
         if current[ARGUMENTS]:
           # Get the first component (that used to be an argument)
           comp = current[ARGUMENTS][0]
           # Break out on any funny business
           if comp == '..' or comp == '.' or comp == '':
             break

           # Ignore '.php', for compatibility
           if comp[-4:] == '.php':
             comp = comp[:-4]

           # Move to a new 'current'
           current = (
             os.path.join(current[FILENAME], comp),
             current[MODPATH] + ( comp, ),
             os.path.join(current[SCRIPT_PATH], comp),
             current[ARGUMENTS][1:] )
           continue

       break

     ( self.filename, self.modpath,
       self.script_path, self.arguments ) = best

     # and touch up the arguments a little bit...
     # filter out any empty elements
     self.arguments = filter(None, self.arguments)
     # and include a slash in the args_path only if necessary
     if self.script_path[-1] == '/':
       self.args_path = string.join(self.arguments, '/')
     else:
       self.args_path = '/' + string.join(self.arguments, '/')

   # Returns boolean indicating if PATH is in the directory tree rooted
   # at ROOT.  Also checks that PATH is absolute, and invariant under
   # normpath(), catching things like '../' and './'.  This class uses
   # this function as a sanity check.
   def _intree(self, path, root):
     return path == os.path.abspath(path) and \
            path == os.path.normpath(path) and \
            path[:len(root)] == root

---- end of urls.py -----


From conrad at hep.caltech.edu  Mon May 19 14:08:43 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
Message-ID: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>

Hi

Here is a patch to mod_python version 2.7.x that adds the method
write_file to the request object.

This method writes the named file to the client using the Apache
ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
(https) connections, with the former using the sendfile() system call
where available. This significantly improves performance and reduces CPU
usage relative to reading data into a buffer and writing it to the
client using the req.write() method.

Usage e.g.:

def handler(req):
  req.content_type='text/html'
  req.send_http_header()
  sent=0
  while sent>=0:
    sent = req.write_file("/var/www/html/index.html",sent,-1)
  return apache.OK


This is the companion patch to the 3.0.x version (also attached).

Please consider applying the patch(es) to the main tree.

Regards

Conrad

-- 
Conrad Steenberg <conrad@hep.caltech.edu>
-------------- next part --------------
--- src/requestobject.c.orig	Mon May 19 11:38:46 2003
+++ src/requestobject.c	Mon May 19 11:51:03 2003
@@ -781,6 +781,52 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    FILE *fd;
+    size_t offset=0, len=-1, nbytes;
+    struct stat status;
+    PyObject * py_result = NULL;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    rc=stat(fname,&status);
+    if (rc !=0) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    fd=fopen(fname,"r");
+    if (!fd) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=status.st_size;
+    if (offset!=0){
+      rc=fseek(fd,offset,SEEK_SET);
+      if (rc!=0){
+        PyErr_SetString(PyExc_IOError, "Could not seek to specified offset");
+        fclose(fd);
+        return NULL;      
+      }
+    }
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    nbytes = ap_send_fd_length(fd, self->request_rec, len);
+    
+    Py_END_ALLOW_THREADS
+    
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef requestobjectmethods[] = {
     {"add_common_vars",      (PyCFunction) req_add_common_vars,      METH_VARARGS},
     {"add_handler",          (PyCFunction) req_add_handler,          METH_VARARGS},
@@ -797,6 +843,7 @@
     {"register_cleanup",     (PyCFunction) req_register_cleanup,     METH_VARARGS},
     {"send_http_header",     (PyCFunction) req_send_http_header,     METH_VARARGS},
     {"write",                (PyCFunction) req_write,                METH_VARARGS},
+    {"write_file",           (PyCFunction) req_write_file,           METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
-------------- next part --------------
--- requestobject.c.orig	2003-05-05 12:13:07.000000000 -0700
+++ requestobject.c	2003-05-05 13:34:50.000000000 -0700
@@ -808,6 +808,54 @@
 
 }
 
+static PyObject * req_write_file(requestobject *self, PyObject *args)
+{
+    int rc;
+    char *fname;
+    apr_file_t *fd;
+    apr_size_t offset=0, len=-1, nbytes;
+    apr_status_t status;
+    PyObject * py_result = NULL;
+    apr_finfo_t finfo;
+    
+    
+    if (! PyArg_ParseTuple(args, "s|ll", &fname, &offset, &len))
+        return NULL;  /* bad args */
+
+    status=apr_stat(&finfo, fname,
+                    APR_READ, self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not stat file for reading");
+        return NULL;
+    }
+    
+    status=apr_file_open(&fd, fname,
+                         APR_READ, finfo.protection,
+                         self->request_rec->pool);
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Could not open file for reading");
+        return NULL;
+    }                         
+
+    if (len==-1) len=finfo.size;
+        
+    Py_BEGIN_ALLOW_THREADS                         
+    status = ap_send_fd(fd, self->request_rec, offset, 
+             len, &nbytes);
+    
+    Py_END_ALLOW_THREADS
+    
+    if (status != APR_SUCCESS) {
+        PyErr_SetString(PyExc_IOError, "Write failed, client closed connection.");
+        return NULL;
+    }
+
+    py_result = PyLong_FromLong (nbytes);
+    Py_INCREF(py_result);
+    return py_result;
+
+}
+
 static PyMethodDef request_methods[] = {
     {"add_common_vars",       (PyCFunction) req_add_common_vars,       METH_NOARGS},
     {"add_handler",           (PyCFunction) req_add_handler,           METH_VARARGS},
@@ -827,6 +875,7 @@
     {"send_http_header",      (PyCFunction) req_send_http_header,      METH_NOARGS},
     {"set_content_length",    (PyCFunction) req_set_content_length,    METH_VARARGS},
     {"write",                 (PyCFunction) req_write,                 METH_VARARGS},
+    {"write_file",            (PyCFunction) req_write_file,            METH_VARARGS},
     { NULL, NULL } /* sentinel */
 };
 
From davidf at sjsoft.com  Tue May 20 09:30:22 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <3EC9D98E.6040707@sjsoft.com>

ganapathy murali krishnan wrote:

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.
>
> We use translate.py as our translate handler, which as you can
> see creates a req.url, which has lots of information about the
> requested url. The check_dont_handle function, allows us to not
> handle certain file types or certain subtrees of the DOCROOT.
>
> Hope you find the code useful.
>
> - Murali

I have found that we need to create physical directories in the Apache 
html directory corresponding to any subdirectories we want to handle in 
the Python script, otherwise we get a 404 error. Has anyone else found 
this? Is the SetLocation the answer for this?
The reason I would like to know is we would like to use dynamically 
generated path names without them existing on the disk

Thanks for the code
David

From dustin at ywlcs.org  Tue May 20 06:40:36 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC9D98E.6040707@sjsoft.com>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
Message-ID: <20030520114036.GS25467@eleanor.internal.ywlcs.org>

On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
> 
> I have found that we need to create physical directories in the Apache 
> html directory corresponding to any subdirectories we want to handle in 
> the Python script, otherwise we get a 404 error. Has anyone else found 
> this? Is the SetLocation the answer for this?
> The reason I would like to know is we would like to use dynamically 
> generated path names without them existing on the disk

For some unknown reason Apache checks that req.filename exists.  I usually
just point it at the translation script itself (__file__).

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From davidf at sjsoft.com  Tue May 20 14:12:39 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520114036.GS25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA1BB7.3020803@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>  
>
>>I have found that we need to create physical directories in the Apache 
>>html directory corresponding to any subdirectories we want to handle in 
>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>this? Is the SetLocation the answer for this?
>>The reason I would like to know is we would like to use dynamically 
>>generated path names without them existing on the disk
>>    
>>
>
>For some unknown reason Apache checks that req.filename exists.  I usually
>just point it at the translation script itself (__file__).
>
>Dustin
>
>  
>
Thanks, where does the check happen, and where do you do the pointing?
Looking at the docs, I guess it could happen in PythonTransHandler, 
PythonHeaderParserHandler or PythonInitHandler
It doesn't seem clear to me exactly where the path resolution is done in 
Apache relative to these handlers... Looking at the mod_python source 
didn't seem to indicate either
PythonTransHandler is designed to resolve the URI to a filename, but the 
resolution is actually correct, so it would be nice not to interfere 
before the actual .htaccess file is used...

Thanks again
David

From ballums at swbell.net  Tue May 20 10:02:26 2003
From: ballums at swbell.net (Ben Allums)
Date: Fri Jan  9 22:03:51 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053378523.28032.20.camel@heppc22.hep.caltech.edu>
Message-ID: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>

On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:

> Here is a patch to mod_python version 2.7.x that adds the method
> write_file to the request object.
> 
> This method writes the named file to the client using the Apache
> ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> (https) connections, with the former using the sendfile() system call
> where available. This significantly improves performance and reduces
> CPU usage relative to reading data into a buffer and writing it to
> the client using the req.write() method.

Thank you Conrad.  I current use a series of "req.write()" calls to do
this exact operation.


Ben
From davidf at sjsoft.com  Tue May 20 17:19:34 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <20030520131332.GU25467@eleanor.internal.ywlcs.org>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com> <3EC945B4.1050907@cs.uchicago.edu>
	<3EC9D98E.6040707@sjsoft.com>
	<20030520114036.GS25467@eleanor.internal.ywlcs.org>
	<3ECA1BB7.3020803@sjsoft.com>
	<20030520131332.GU25467@eleanor.internal.ywlcs.org>
Message-ID: <3ECA4786.3060705@sjsoft.com>

Dustin Mitchell wrote:

>On Tue, May 20, 2003 at 02:12:39PM +0200, David Fraser wrote:
>  
>
>>Dustin Mitchell wrote:
>>
>>    
>>
>>>On Tue, May 20, 2003 at 09:30:22AM +0200, David Fraser wrote:
>>>
>>>
>>>      
>>>
>>>>I have found that we need to create physical directories in the Apache 
>>>>html directory corresponding to any subdirectories we want to handle in 
>>>>the Python script, otherwise we get a 404 error. Has anyone else found 
>>>>this? Is the SetLocation the answer for this?
>>>>The reason I would like to know is we would like to use dynamically 
>>>>generated path names without them existing on the disk
>>>>  
>>>>
>>>>        
>>>>
>>>For some unknown reason Apache checks that req.filename exists.  I usually
>>>just point it at the translation script itself (__file__).
>>>
>>>Dustin
>>>
>>>
>>>
>>>      
>>>
>>Thanks, where does the check happen, and where do you do the pointing?
>>Looking at the docs, I guess it could happen in PythonTransHandler, 
>>    
>>
>
>It's the transhandler's job to set req.filename, actually.  I think, if it
>doesn't get set, the Apache handler gets triggered, which gives you the 404.
>So set req.filename in your transhandler.
>
>  
>
>>PythonHeaderParserHandler or PythonInitHandler
>>It doesn't seem clear to me exactly where the path resolution is done in 
>>Apache relative to these handlers... Looking at the mod_python source 
>>didn't seem to indicate either
>>    
>>
>
>Path resolution is the stated goal of the transhandler.
>
>  
>
>>PythonTransHandler is designed to resolve the URI to a filename, but the 
>>resolution is actually correct, so it would be nice not to interfere 
>>before the actual .htaccess file is used...
>>    
>>
>
>You can't mess with .htaccess if you're going to do transhandlers.  You'll
>have to put your config in the httpd.conf file, or some derivative thereof.
>Apache's transhandler is the one that *finds* the .htaccess files.  You can't
>have it both ways -- Apache finds your .htaccess, then lets you redo the
>translation phase.
>
>Dustin
>
>  
>
Thanks Dustin, all clear now...
David

From philipj at telia.com  Tue May 20 22:02:40 2003
From: philipj at telia.com (Philip =?ISO-8859-1?B?SuRnZW5zdGVkdA==?=)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>
	<3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <20030520220240.6aa38c9b.philipj@telia.com>

> Sorry for not replying earlier... Here is the code, we use...
> I have removed pieces of the code which deal with other stuff.
> I hope I have not removed too many things...
> This code is due to Dustin Mitchell who setup our site
> initially.

Thank you for that information. Your code does much more than I need,
but it certainly did help me write a transhandler of my own. I have a
few questions which I hope you can answer for me:

A: Does the code have a licensed attached to it, if I decide to use any
of it at a later date? (GPL, public domain... ?)

B: As it is now (just did this 5 minutes ago) I have the following in my
httpd.conf:
<IfModule mod_python.c>
    PythonPath "sys.path + ['/home/philip/htdocs/stdb']"
    PythonTransHandler index
</IfModule>

<Directory /home/philip/htdocs/stdb>
    Options FollowSymLinks
    AddHandler python-program .py
    PythonHandler index
    PythonDebug On
    PythonAutoReload On
</Directory>

Now I've come to understand that the PythonTransHandler must not be in a
<Directory>, <File>, .htacces or the like, so I put it in the very root
of my httpd.conf. Is this the correct way to go about it? Right now I'm
serving the mod_python pages out from /stdb/, so I only want to apply
PythonTransification for that dir, which then involves checking if the
URI begins with the /stdb. Can I add something to httpd.conf to make
PythonTransHandler apply only to /stdb, or am I then trapped in already
being past the Trans phase?

Thank you for you kind help!
// Philip J?genstedt
From conrad at hep.caltech.edu  Tue May 20 15:39:40 2003
From: conrad at hep.caltech.edu (Conrad Steenberg)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
References: 
	 <r01050400-1026-12170E0C8AD411D787BB003065489174@[216.141.190.72]>
Message-ID: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>

On Tue, 2003-05-20 at 08:02, Ben Allums wrote:
> On 5/19/03 at 2:08 PM, conrad@hep.caltech.edu (Conrad Steenberg) wrote:
> 
> > Here is a patch to mod_python version 2.7.x that adds the method
> > write_file to the request object.
> > 
> > This method writes the named file to the client using the Apache
> > ap_send_fd_length() call. It works for both normal (http) and SSL/TLS
> > (https) connections, with the former using the sendfile() system call
> > where available. This significantly improves performance and reduces
> > CPU usage relative to reading data into a buffer and writing it to
> > the client using the req.write() method.
> 
> Thank you Conrad.  I current use a series of "req.write()" calls to do
> this exact operation.

:-)

Maybe we can convince Grisha to apply the patches in the next release?

Conrad

> 
> 
> Ben
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 
Conrad Steenberg <conrad@hep.caltech.edu>

From gmurali at cs.uchicago.edu  Tue May 20 17:48:32 2003
From: gmurali at cs.uchicago.edu (ganapathy murali krishnan)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
References: <01c31e05$4f438280$926a1e6e@wsasd464>
	<20030519185311.17d2a126.philipj@telia.com>	<3EC945B4.1050907@cs.uchicago.edu>
	<20030520220240.6aa38c9b.philipj@telia.com>
Message-ID: <3ECAB0C0.4000408@cs.uchicago.edu>

Philip J?genstedt wrote:
 > Thank you for that information. Your code does much more than I need,
 > but it certainly did help me write a transhandler of my own. I have a
 > few questions which I hope you can answer for me:
 >
 > A: Does the code have a licensed attached to it, if I decide to use any
 > of it at a later date? (GPL, public domain... ?)
 >

That was a no strings attached code.
Dustin: You have anything you want to add?

 > B: As it is now (just did this 5 minutes ago) I have the following in 
--snip --
 > URI begins with the /stdb. Can I add something to httpd.conf to make
 > PythonTransHandler apply only to /stdb, or am I then trapped in already
 > being past the Trans phase?

In the code you see, there is a check_dont_handle function, which
looks at the specified URI and decides if it should handle. Our handler
decides to handle it, based on the extension of the file requested. In
another web server, we also decline to handle if the requested URI lies
in some specific subtrees of the DOCROOT. If your handler declines to
handle it, then the default apache handler will take over. So all you 
need to do is to check if the requested URI is in the stdb subtree, else
decline to handle it, and the normal Apache Handler should kick in.

- Murali

From grisha at modpython.org  Tue May 20 20:18:54 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] [Patch] req.write_file for 2.7.x
In-Reply-To: <1053470379.3148.6.camel@heppc22.hep.caltech.edu>
Message-ID: <20030520201614.O75374-100000@oldchief.reply.net>



On 20 May 2003, Conrad Steenberg wrote:

> Maybe we can convince Grisha to apply the patches in the next release?

Well, unless something changes, the next 2.7 release will happen if (and
only if) there is a serious issue such as a security problem, and it will
contain a fix only.

But we will certainly try to include this in the next 3.x release. :-)

Grisha

From dorellik1 at inwind.it  Wed May 21 17:19:50 2003
From: dorellik1 at inwind.it (dorellik1)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Error in make dso
Message-ID: <002101c31fac$6cc52040$0100a8c0@y5k4k1>

I have the following result after

$ make dso
make[1]: Entering directory `/home/bill/mod_python-2.7.8/src'
gcc  -I/home/bill/mod_python-2.7.8/src/include -I/usr/src/apache_1.3.26/src/include -I/usr/src/apache_1.3.26/src/os/unix -I/usr/include/python2.2    -c -o mod_python.o mod_python.c
In file included from /usr/src/apache_1.3.26/src/include/httpd.h:72,
                 from /home/bill/mod_python-2.7.8/src/include/mod_python.h:63,
                 from mod_python.c:54:
/usr/src/apache_1.3.26/src/include/ap_config.h:77:28: ap_config_auto.h: No such file or directory
make[1]: *** [mod_python.o] Error 1
make[1]: Leaving directory `/home/bill/mod_python-2.7.8/src'
make: *** [do_dso] Error 2

$ find /usr -name "ap_config_auto.h" gives me

/usr/include/apache/ap_config_auto.h

[root@.... mod_python-2.7.8]# ./configure  --with-apache=/usr/src/apache_1.3.26
loading cache ./config.cache
checking for gcc... (cached) gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for ranlib... (cached) ranlib
checking for ar... (cached) ar
checking for a BSD compatible install... (cached) /usr//bin/install -c
checking whether make sets ${MAKE}... (cached) yes
checking for main in -lm... (cached) yes
checking for working const... (cached) yes
checking your blood pressure... a bit high, but we can proceed
checking whether apxs is available
checking for --with-apxs... no
checking for apxs in /usr/local/apache/sbin... no
checking for apxs in your PATH... checking for apxs... (cached) /usr/sbin/apxs
found /usr/sbin/apxs, we'll use this. Use --with-apxs to specify another.
checking for Apache libexec directory... /usr/lib/apache
checking for Apache include directory... -I/usr/include/apache
checking for --with-apache... /usr/src/apache_1.3.26
checking for --with-python... no
checking for python... (cached) /usr//bin/python
checking Python version... 2.2
checking whether Python is compiled with thread support... no threads, good
checking Python install prefix... /usr
checking what libraries Python was linked with... /usr/lib/python2.2/config/libpython2.2.a -ldl -lutil -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/include/python2.2
checking for mkdep... (cached) /usr/X11R6/bin/makedepend
creating ./config.status
creating Makefile
creating src/Makefile
creating src/libpython.module
creating Doc/Makefile
analyzing dependencies



Why make don't find an existing file ?

                                                                                             Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030521/3e06d4f9/attachment-0003.htm
From brianh at exelixis.com  Wed May 21 19:22:49 2003
From: brianh at exelixis.com (Brian Hawthorne)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] object isclass test in publisher
Message-ID: <3ECC3479.4050401@exelixis.com>

hello,
i noticed today while poking around in publisher.py that line 165,
testing if the resolved object is a class, needs updating.  it checks if
str(type(object)) == "<type 'class'>"; but that is not true for
new-style classes, as shown below:

  >>> class A: pass
...
  >>> str(type(A))
"<type 'class'>"
  >>> class B (object): pass
...
  >>> str(type(B))
"<type 'type'>"


brian hawthorne

From terry at i3technologies.co.uk  Thu May 22 13:45:55 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.
Message-ID: <1053607555.1100.37.camel@bigmac>

Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

===============================================================================================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

===============================================================================================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




From Hans.Yandle at cingular.com  Thu May 22 09:17:30 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23A9B@s30342g004005>

I am a newbie myself but would say that it appears you have a problem with
your Python22 install. The sys module is a builtin(internal) module--just
look at os.py. Maybe Redhat has mixed up several versions of Python (such as
1.5.X with 2.X) on the same machine and paths and/or environmental variables
are crossed.

I would suggest running Python standalone (commandline) and perform some
small actions using modules sys and os. Once that is working, build a simple
ordinary straight cgi script using the cgi module and launch it via Apache
/cgi-bin/ folder. Once that works, convert the script to accelerated
mod_python and execute it.

It might be helpful to us if you could provide more details on the Apache
server version (1.3.X or 2.X) and mod_python (2.7.X or 3.X) version you are
running along with the scripts (sample.py, two html files, form.html, and
template.html) you mentioned and references to the tutorial(s) that you feel
do not work. 

Hans

-----Original Message-----
From: Terry MacDonald [mailto:terry@i3technologies.co.uk]
Sent: Thursday, May 22, 2003 8:46 AM
To: mod_python@modpython.org
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
saga.


Hi all,

I come from a hardened UNIX C/C++ programming background and after being
made redundant ages ago and doing nothing much for a good while I felt
my brain needed fodder again and decided to actively dive into the Open
source/Linux world which I have grown to love.  Anyway moving on I have
decided as a first project to build a database backed website for my
local cricket league.  I have chosen Postgres as the database and python
as the programming language (not C anymore, boohoo!) and HTML as the
front end running on an Apache web server. Now the grit.

I'm running Red Hat 9 with the versions of Apache, Python etc that come
with that release.

I have followed a few python tutorials and have had no success with any
in getting a working tutorial at the end.

Problem: I have Apache configured with mod_python. I have a python
script called sample.py and two html files, form.html and template.html
Basically I point the browser at form.html and enter the relevant form
data.  The form then actions the script sample.py and I then get the
following error trace ....

============================================================================
===================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
335, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.2/site-packages/mod_python/publisher.py", line
149, in handler
    module = apache.import_module(module_name, req.get_config(), [path])

  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line
502, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/python/sample.py", line 90, in ?
    form = cgi.FieldStorage()

  File "/usr/lib/python2.2/cgi.py", line 448, in __init__
    elif sys.argv[1:]:

AttributeError: 'module' object has no attribute 'argv'

============================================================================
===================
I have looked all around this and am moving towards the fact that I
cannot find sys.py anywhere on my linux system which surely cannot be so
as other modules appear to work fine and pretty much everything imports
this sys.py file.  Why am I getting this error? is their a problem with
the FieldStorage function?

Why can't any python tutorials actually work properly? (they all seem to
have niggly bugs in them)

Anybody know of any good examples/resources for what I want to do.
Preferably working tutorials (;3)

Any help gratefully received!

cheers

Terry




_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/31cbf2fb/attachment-0003.htm
From dustin at ywlcs.org  Thu May 22 08:56:20 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:03:52 2004
Subject: [dustin@ywlcs.org: Re: [mod_python] Tutorials, FieldStorage and
	sys.py. A depressing saga.]
Message-ID: <20030522135619.GN25467@eleanor.internal.ywlcs.org>

Sorry, meant to send this to the list.

----- Forwarded message from Dustin Mitchell <dustin@ywlcs.org> -----

From: Dustin Mitchell <dustin@ywlcs.org>
To: Terry MacDonald <terry@i3technologies.co.uk>
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A depressing saga.

On Thu, May 22, 2003 at 01:45:55PM +0100, Terry MacDonald wrote:
>   File "/var/www/html/python/sample.py", line 90, in ?
>     form = cgi.FieldStorage()
> 
>   File "/usr/lib/python2.2/cgi.py", line 448, in __init__
>     elif sys.argv[1:]:

You're using the CGI module, but you're not using a CGI script.  The mod_python distribution has a FieldStorage class, but it's (subtly) different from the one in the Python standard 'cgi' module.

import mod_python.util
form = mod_python.util.FieldStorage(req)

Read the docs on that module for more info.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/

----- End forwarded message -----

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From terry at i3technologies.co.uk  Thu May 22 19:36:24 2003
From: terry at i3technologies.co.uk (Terry MacDonald)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030522134004.GA25157@mx1.neteconomist.com>
References: <1053607555.1100.37.camel@bigmac>
	 <20030522134004.GA25157@mx1.neteconomist.com>
Message-ID: <1053628584.1100.63.camel@bigmac>

Hi again,

Thankyou very much for your replies, You seem a nice bunch in here. 
I look forward to conversing with you over time (hopefully not all bug related!)

Anyways your advice solved one issue but unfortunately moved me on to the next.  
I am reaching the end of my patience as I have tried various work arounds to my 
ills and I just go up more garden paths to more problems (this should not be that 
difficult I know!).

Forgive me but I have decided to post the code to see if you can tell what is wrong 
cos I just can't get it to work as it is supposed to. The code is primarily example 
code but has been rejigged a little while trying to get it to work.

Problems occuring now is that the subn function is giving a mulitple repeat error.
When I comment out the offending code I just get Object not found in the browser. 
Also I have to put full pathnames in for the html files otherwise they cannot be 
found (I know this can't be right - but i'm trying anything to get this to work)

Ultimately the example should print a form, fetch the contents and display them 
back to you in another page (I think!) not exactly rocket science.

Below is the .py file and the two basic html files. Enjoy !

Cheers

Terry

================================================================================
#!/usr/bin/python
                                                                                                              
from mod_python import apache
from mod_python import util
import re
                                                                                                              
# specify the filename of the template file
TemplateFile = "/var/www/html/python/template.html"
                                                                                                              
# Display  takes one parameter - a string to Display
def Display(Content):
    TemplateHandle = open(TemplateFile, "r")  # open in read only mode
    # read the entire file as a string
    TemplateInput = TemplateHandle.read()
    TemplateHandle.close()                    # close the file
                                                                                                              
    # this defines an exception string in case our
    # template file is messed up
    BadTemplateException = "There was a problem with the HTML template."
                                                                                                              
    SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
    if SubResult[1] == 0:
        raise BadTemplateException
                                                                                                              
    print "Content-Type: text/html\n\n"
    print SubResult[0]
                                                                                                              
                                                                                                              
def ProcessForm(req):
                                                                                                              
    form = util.FieldStorage(req)
                                                                                                              
    # extract the information from the form in easily digestible format
    try:
        name = form["name"].value
    except:
        # name is required, so output an error if
        # not given and exit script
        Display("You need to at least supply a name. Please go back.")
        raise SystemExit
    try:
        email = form["email"].value
    except:
        email = None
    try:
        color = form["color"].value
    except:
        color = None
    try:
        comment = form["comment"].value
    except:
        comment = None
                                                                                                              
    Output = ""  # our output buffer, empty at first
                                                                                                              
    Output = Output + "Hello, "
                                                                                                              
    if email != None:
        Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
    else:
        Output = Output + name + ".<P>"
                                                                                                              
    if color == "swallow":
        Output = Output + "You must be a Monty Python fan.<P>"
    elif color != None:
        Output = Output + "Your favorite color was " + color + "<P>"
    else:
        Output = Output + "You cheated!  You didn't specify a color!<P>"
                                                                                                              
    if comment != None:
        Output = Output + "In addition, you said:<BR>" + comment + "<P>"
                                                                                                              
    Display(Output)
                                                                                                              
###
### Begin actual script
###
                                                                                                              
#### "key" is a hidden form element with an
### action command such as "process"
#try:
#    key = form["key"].value
#    key = form["key"].value
##except:
#    key = None
                                                                                                              
#if key == "process":
#    ProcessForm(form)
#else:
#    DisplayForm()
                                                                                                              
# Open and display the form
FormFile = "/var/www/html/python/form2.html"
FormHandle = open(FormFile, "r")
FormInput = FormHandle.read()
FormHandle.close()
Display(FormInput)
                                                                         
=======================================================================================

Form2.html.........

<FORM METHOD="POST" ACTION="sample.py/processform">
      <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
      Your name:<BR>
      <INPUT TYPE=TEXT NAME="name" size=60>
      <BR>
      Email: (optional)<BR>
      <INPUT TYPE=TEXT NAME="email" size=60>
      <BR>
      Favorite Color:<BR>
      <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
      <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
      <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
      <P>
      Comments:<BR>
      <TEXTAREA NAME="comment" ROWS=8 COLS=60>
      </TEXTAREA>
      <P>
        <INPUT TYPE="SUBMIT" VALUE="Okay">
</FORM>
=======================================================================================
Template.html........

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!-- *** INSERT CONTENT HERE *** -->
  </body>
</html>
                                                                                                              


From grisha at modpython.org  Thu May 22 15:11:15 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
 saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
Message-ID: <20030522150301.W4076-100000@oldchief.reply.net>


Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the next.
> I am reaching the end of my patience as I have tried various work arounds to my
> ills and I just go up more garden paths to more problems (this should not be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what is wrong
> cos I just can't get it to work as it is supposed to. The code is primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple repeat error.
> When I comment out the offending code I just get Object not found in the browser.
> Also I have to put full pathnames in for the html files otherwise they cannot be
> found (I know this can't be right - but i'm trying anything to get this to work)
>
> Ultimately the example should print a form, fetch the contents and display them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
> ================================================================================
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content, TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name + "</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
> =======================================================================================
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
> =======================================================================================
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From skremer at q.cis.uoguelph.ca  Thu May 22 16:39:24 2003
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Interpreters
Message-ID: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>


Hi,

I just finished re-reading Section 4.1 yet again (for the 12th? time).  
(Wow, is that ever densly packed with important info.)

Each time I read it, I think I'm getting a clearer picture of what's going
on.  Also this list has helped me sort things out as well, but I'm still
surprised at times.  I'm wondering if the following synopsis makes sense.  
I am willing to summarize a corrected version at the end if people are
interested (let me know).

When I start Apapche mod_python not yet initialized.
  It only gets initialized when someone accesses a web-page 
  associated with a directory directive that requires mod_python.
Is that right?

When mod_python is initialized it creates an interpreter called 
"main_interpreter".  This interpreter doesn't actually run your python 
code it just generates sub interpreters which it keeps in a dictionay.

Where is the main interpreter named "main_interpreter"?  Can I access that 
somewhere?

If apache is running as multiple processes and maybe multiple threads how 
many main_interpreters are there?  Just one?


Asside: req.interpreter doesn't work for me (under 3.0.0 (was it 
added in 3.0.1 or 3.0.2) or am I confused?

[  File "/usr/lib/python2.2/site-packages/mod_python/apache.py", line 76, 
[in __getattr__
[    raise AttributeError, attr
[
[AttributeError: interpreter

When do the sub-interpreters get created?

The sub-interpreters are, by default, associated associated with a virtual 
server name (but there can be more than one sub-interpreter per virtual 
server name).

Is that right?

If there are mutliple processes of apache with multiple threads, are the 
sub-interpreters shared betweenn processes and/or threads?

When a http request comes in that uses a mod_python handler, it is
assigned to a sub-interpreter.  It might be assigned to a brand new
sub-interpreter (usually if traffic on the server is reaching a new high
level), or a previously used sub-interpreter (if traffic is less than it 
was at peak).  (Assuming we keep hitting the same virtual 
server/directory/etc.)

Is that right?

Sub-interpreters are never destoryed, so the number of sub-interpreters 
increases monotonically from when apache is started until it dies and 
your chances of getting a used sub-interpreter goes up the longer apache 
has been running.  Also the longer apache is running the more memory 
mod_python would proabely use.

Is that right?

If apache reduces (kills) the processes it is running, are any
sub-interpreters affected?

If you happen to get a re-used sub-interpreter, you will also get saddled 
with stuff that was defined in it before.  

This can be a good thing or a bad thing.  If you are accessing a database, 
the sub-interpreter may already have an open DB connection which can save 
you time.  It may also have already loaded some of the modules that your 
code calls, which can save time.  Unfortunately this can be bad as well.

One case occurs when you modify python code that is included as a module.
If you get a sub-interpreter where the original version of the module
has already been included, it will use that instead of the new one.

Another example of when getting a used sub-interpreter is bad might be:  
User 1 writes a script that changes the sys.path variable and loads a
module that they have written called MyModule.  User 2 writes a script
that changes the sys.path variable and loads a different module that thay
have written called MyModule also!  Someone requests a page from User 1
and the first version of MyModule is loaded.  Then someone else requests a
page from user 2, but the second version of MyModule is not loaded since
the sub-interpreter thinks it has already loaded MyModule.  User 2's
script then goes uses the function in the wrong version of MyModule.

Is this something that could happen?  I'm 
wondering if there is an exploit that could be accomplished this way?

Obviously the solution to the above problem is to use a different 
sub-interpreter naming scheme with "PythonInterpPerDirectory or 
PythonInterpPerDirective".

Does that make sense?

Any corrections and/or comments much appreciated.

	Stefan

-- 
--
Dr. Stefan C. Kremer, Associate Prof.
Reynolds Building, 106
Dept. of Computing and Information Science
University of Guelph, Guelph, Ontario	N1G 2W1

WWW: http://q.cis.uoguelph.ca/~skremer
Tel: (519)824-4120 Ext.58913  Fax: (519)837-0323
E-mail:  skremer@uoguelph.ca

From ireneponti at yahoo.com  Thu May 22 14:05:02 2003
From: ireneponti at yahoo.com (Irene Ponti)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] mod_python file uploading question.
Message-ID: <20030522210502.71765.qmail@web40701.mail.yahoo.com>

Hi to all.

How can I tell to mod_python to stop uploading a file
larger than 1Mb?

Thank you.


__________________________________
Do you Yahoo!?
The New Yahoo! Search - Faster. Easier. Bingo.
http://search.yahoo.com
From grisha at modpython.org  Thu May 22 17:30:49 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Interpreters
In-Reply-To: <Pine.LNX.4.44.0305221458230.25006-100000@q.cis.uoguelph.ca>
Message-ID: <20030522171106.I5079-100000@oldchief.reply.net>



On Thu, 22 May 2003, Stefan C. Kremer wrote:

> When I start Apapche mod_python not yet initialized.
>   It only gets initialized when someone accesses a web-page
>   associated with a directory directive that requires mod_python.
> Is that right?

yes

> When mod_python is initialized it creates an interpreter called
> "main_interpreter".  This interpreter doesn't actually run your python
> code it just generates sub interpreters which it keeps in a dictionay.

correct

> Where is the main interpreter named "main_interpreter"?  Can I access that
> somewhere?

It is named inside the C code for mod_python. If force your interpreter
name by using "PythonInterpreter main_interpreter", then mod_python won't
create subinterpreters, it will just select "main_interpreter" to run
things.

> If apache is running as multiple processes and maybe multiple threads how
> many main_interpreters are there?  Just one?

As many as there are processes.

> Asside: req.interpreter doesn't work for me (under 3.0.0 (was it
> added in 3.0.1 or 3.0.2) or am I confused?

3.0.0 is a beta version, you should stay away from it anyway.

> When do the sub-interpreters get created?

on first use

> The sub-interpreters are, by default, associated associated with a virtual
> server name (but there can be more than one sub-interpreter per virtual
> server name).
>
> Is that right?

yes, if you use InterpPerDirective or InterpPerDirectory

> If there are mutliple processes of apache with multiple threads, are the
> sub-interpreters shared betweenn processes and/or threads?

between threads within a process - yes, between processes - no.

> When a http request comes in that uses a mod_python handler, it is
> assigned to a sub-interpreter.  It might be assigned to a brand new
> sub-interpreter (usually if traffic on the server is reaching a new high
> level), or a previously used sub-interpreter (if traffic is less than it
> was at peak).  (Assuming we keep hitting the same virtual
> server/directory/etc.)
>
> Is that right?

sort-of... Apache will assign a request to one of it's children/threads to
be serviced. Mod_python will determine subinterpreter name based on
config, if this this subinterpreter already exists within this child, it's
reused, otherwise a new one is created. Server load is only one of a few
reasons why there may be a new child process.

> Sub-interpreters are never destoryed, so the number of sub-interpreters
> increases monotonically from when apache is started until it dies and
> your chances of getting a used sub-interpreter goes up the longer apache
> has been running.

true (note though that there is a finite number of subinterpeters, e.g. if
you're using the default interp per vrtual host, then there will only be
as many subinterpreters per process as there are virtual hosts - thus it
increases up to a point when all possible subinterpeters are created, then
it stops)

> Also the longer apache is running the more memory mod_python would
> proabely use.

this depends on how your code is written. mod_python itself has no known
memory leaks - but if you fnd any, let us know!

> If apache reduces (kills) the processes it is running, are any
> sub-interpreters affected?

well - everything in the process (inclduing subinterpreters) is affected.

> If you happen to get a re-used sub-interpreter, you will also get saddled
> with stuff that was defined in it before.

yes

> This can be a good thing or a bad thing.  If you are accessing a database,
> the sub-interpreter may already have an open DB connection which can save
> you time.  It may also have already loaded some of the modules that your
> code calls, which can save time.  Unfortunately this can be bad as well.
>
> One case occurs when you modify python code that is included as a module.
> If you get a sub-interpreter where the original version of the module
> has already been included, it will use that instead of the new one.

But how is this bad? This is one of the main reasons mod_python is so fast
- module code is only interpreted once (as opposed to every request with
CGI).

> Another example of when getting a used sub-interpreter is bad might be:
> User 1 writes a script that changes the sys.path variable and loads a
> module that they have written called MyModule.  User 2 writes a script
> that changes the sys.path variable and loads a different module that thay
> have written called MyModule also!

this is precisely why you have subinterpreters - you need to make sure
that the users are running in separate subinterpreters.

> Obviously the solution to the above problem is to use a different
> sub-interpreter naming scheme with "PythonInterpPerDirectory or
> PythonInterpPerDirective".

exactly!

Grisha

From Hans.Yandle at cingular.com  Thu May 22 17:55:14 2003
From: Hans.Yandle at cingular.com (Yandle, Hans)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	 saga.
Message-ID: <D31B04F24EDE7644BB169BB4F080778A06C23AA7@s30342g004005>

Well, I decided to make a working sample out of your code so here is my
working version. Use at will. By no means is this perfect but it does work
for me. Example URL:
http://localhost/test/sample/ProcessForm/?name=Hans&color=swallow

=== sample.py ===
from mod_python import apache
import string

### File Parameter Options ###
Template = "/usr/local/python/template.html" # filename of template file

def EvalTemplate(Content):
    (Result, ErrorMsg) = (None, None)
    try:
        TemplateFile = file(Template, "r") # open in read only mode
        TemplateData = TemplateFile.read() # read in the contents of the
file
        TemplateFile.close() # close the file
    except IOError, e:
        ErrorMsg = "Error! Unable to read contents of template file %s.
<br>%s" % (Template, e)
    except:
        ErrorMsg = "Error! Unknown error has occured."
    if not ErrorMsg:
        if string.find(TemplateData, "<!--*** INSERT CONTENT HERE ***-->")
is not -1:
            Result = string.replace(TemplateData, "<!--*** INSERT CONTENT
HERE ***-->", Content)
        else:
            ErrorMsg = "Invalid template file format. Missing insert comment
tag. Please fix %s." % Template
    return (Result, ErrorMsg)

def SendHTML(Output=None, ErrorMsg=None):
    if not ErrorMsg:
        s, ErrorMsg = EvalTemplate(Output)
    if ErrorMsg:
        s = """<html><head><title>Mod_Python Sample Using a Template: Error
Message</title></head>
               <body><p>An error has occured. Please correct the
problem.</p>
               <pre>%s</pre></body></html>""" % ErrorMsg
    return s

def ProcessForm(req, name=None, email=None, color=None, comment=None):
    ErrorMsg = None
    Output = "Hello, "
            
    if name:
        if email:
            Output = Output + "<a href=mailto:%s>%s</a>.<p>" % (email, name)
        else:
            Output = Output + "%s.<p>" % name
    else:
        ErrorMsg="You need to at least supply a name. Please go back."
        
    if color=="swallow":
        Output = Output + "You must be a Monte Python fan.<p>"
    elif color != None:
        Output = Output + "Your favorite color was %s<p>" % color
    else:
        Output = Output + "You cheated! You didn't specify a color!<p>"
        
    if comment:
        Output = Output + "In addition, you said: <br>%s<p>" % comment
        
    req.content_type = "text/html"
    req.send_http_header()
    
    return SendHTML(Output, ErrorMsg)
=== end ===
=== template.html ===
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <META NAME="keywords" CONTENT="blah blah -- your ad here">
    <title>Python is Fun!</title>
  </head>
  <body>
                <!--*** INSERT CONTENT HERE ***-->
  </body>
</html>
=== end ===

Have fun,

Hans

-----Original Message-----
From: Gregory (Grisha) Trubetskoy [mailto:grisha@modpython.org]
Sent: Thursday, May 22, 2003 3:11 PM
To: Terry MacDonald
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Tutorials, FieldStorage and sys.py. A
depressing saga.



Terry -

Thanks for your compliments.

You didn't specify what's in your apache config, so it's hard to tell
what's going on there. My recommendation would be to reserve an hour or so
and read the tutorial carefully.

One of the things that caught my eye was the ".value" attribute you're
using - the mod_python version of FieldStorage does not require it. But
more likely than not you just need to use the publisher handler, in which
case you wouldn't need to concern yourself with FieldStorage at all, and
your ProcessForm function would look something like:

def ProcessForm(req, name="", email="", color="", comment=""):

	if not name:

		return "Name is required"


	... etc ...


	return SubResult[0]


Note that print statements are useless in mod_python, also your URL is
lower case, but function names are mixed-case - since Python is
case-sensitive, that would cause a problem.

HTH.

Grisha


On 22 May 2003, Terry MacDonald wrote:

> Hi again,
>
> Thankyou very much for your replies, You seem a nice bunch in here.
> I look forward to conversing with you over time (hopefully not all bug
related!)
>
> Anyways your advice solved one issue but unfortunately moved me on to the
next.
> I am reaching the end of my patience as I have tried various work arounds
to my
> ills and I just go up more garden paths to more problems (this should not
be that
> difficult I know!).
>
> Forgive me but I have decided to post the code to see if you can tell what
is wrong
> cos I just can't get it to work as it is supposed to. The code is
primarily example
> code but has been rejigged a little while trying to get it to work.
>
> Problems occuring now is that the subn function is giving a mulitple
repeat error.
> When I comment out the offending code I just get Object not found in the
browser.
> Also I have to put full pathnames in for the html files otherwise they
cannot be
> found (I know this can't be right - but i'm trying anything to get this to
work)
>
> Ultimately the example should print a form, fetch the contents and display
them
> back to you in another page (I think!) not exactly rocket science.
>
> Below is the .py file and the two basic html files. Enjoy !
>
> Cheers
>
> Terry
>
>
============================================================================
====
> #!/usr/bin/python
>
> from mod_python import apache
> from mod_python import util
> import re
>
> # specify the filename of the template file
> TemplateFile = "/var/www/html/python/template.html"
>
> # Display  takes one parameter - a string to Display
> def Display(Content):
>     TemplateHandle = open(TemplateFile, "r")  # open in read only mode
>     # read the entire file as a string
>     TemplateInput = TemplateHandle.read()
>     TemplateHandle.close()                    # close the file
>
>     # this defines an exception string in case our
>     # template file is messed up
>     BadTemplateException = "There was a problem with the HTML template."
>
>     SubResult = re.subn( "<!-- *** INSERT CONTENT HERE *** -->", Content,
TemplateInput )
>     if SubResult[1] == 0:
>         raise BadTemplateException
>
>     print "Content-Type: text/html\n\n"
>     print SubResult[0]
>
>
> def ProcessForm(req):
>
>     form = util.FieldStorage(req)
>
>     # extract the information from the form in easily digestible format
>     try:
>         name = form["name"].value
>     except:
>         # name is required, so output an error if
>         # not given and exit script
>         Display("You need to at least supply a name. Please go back.")
>         raise SystemExit
>     try:
>         email = form["email"].value
>     except:
>         email = None
>     try:
>         color = form["color"].value
>     except:
>         color = None
>     try:
>         comment = form["comment"].value
>     except:
>         comment = None
>
>     Output = ""  # our output buffer, empty at first
>
>     Output = Output + "Hello, "
>
>     if email != None:
>         Output = Output + "<A HREF=mailto:" + email + ">" + name +
"</A>.<P>"
>     else:
>         Output = Output + name + ".<P>"
>
>     if color == "swallow":
>         Output = Output + "You must be a Monty Python fan.<P>"
>     elif color != None:
>         Output = Output + "Your favorite color was " + color + "<P>"
>     else:
>         Output = Output + "You cheated!  You didn't specify a color!<P>"
>
>     if comment != None:
>         Output = Output + "In addition, you said:<BR>" + comment + "<P>"
>
>     Display(Output)
>
> ###
> ### Begin actual script
> ###
>
> #### "key" is a hidden form element with an
> ### action command such as "process"
> #try:
> #    key = form["key"].value
> #    key = form["key"].value
> ##except:
> #    key = None
>
> #if key == "process":
> #    ProcessForm(form)
> #else:
> #    DisplayForm()
>
> # Open and display the form
> FormFile = "/var/www/html/python/form2.html"
> FormHandle = open(FormFile, "r")
> FormInput = FormHandle.read()
> FormHandle.close()
> Display(FormInput)
>
>
============================================================================
===========
>
> Form2.html.........
>
> <FORM METHOD="POST" ACTION="sample.py/processform">
>       <INPUT TYPE=HIDDEN NAME="key" VALUE="process">
>       Your name:<BR>
>       <INPUT TYPE=TEXT NAME="name" size=60>
>       <BR>
>       Email: (optional)<BR>
>       <INPUT TYPE=TEXT NAME="email" size=60>
>       <BR>
>       Favorite Color:<BR>
>       <INPUT TYPE=RADIO NAME="color" VALUE="blue" CHECKED>Blue
>       <INPUT TYPE=RADIO NAME="color" VALUE="yellow">No, Yellow...
>       <INPUT TYPE=RADIO NAME="color" VALUE="swallow">What do you mean, an
African or European swallow?
>       <P>
>       Comments:<BR>
>       <TEXTAREA NAME="comment" ROWS=8 COLS=60>
>       </TEXTAREA>
>       <P>
>         <INPUT TYPE="SUBMIT" VALUE="Okay">
> </FORM>
>
============================================================================
===========
> Template.html........
>
> <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
> <html>
>   <head>
>     <META NAME="keywords" CONTENT="blah blah -- your ad here">
>     <title>Python is Fun!</title>
>   </head>
>   <body>
>                 <!-- *** INSERT CONTENT HERE *** -->
>   </body>
> </html>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030522/50bf5078/attachment-0003.htm
From dustin at ywlcs.org  Thu May 22 19:09:17 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <1053628584.1100.63.camel@bigmac>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
Message-ID: <20030523000917.GV25467@eleanor.internal.ywlcs.org>

>     print "Content-Type: text/html\n\n"
>     print SubResult[0]

It looks like you're still writing a CGI script, since you're using 'print'.
If you're taking the time to install and use mod_python, I would suggest
using the publisher handler or writing your own handlers, as those truly take
advantage of the status of mod_python as a handler.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From rk at dat.cz  Fri May 23 09:21:51 2003
From: rk at dat.cz (Radek Kanovsky)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A depressing
	saga.
In-Reply-To: <20030523000917.GV25467@eleanor.internal.ywlcs.org>
References: <1053607555.1100.37.camel@bigmac>
	<20030522134004.GA25157@mx1.neteconomist.com>
	<1053628584.1100.63.camel@bigmac>
	<20030523000917.GV25467@eleanor.internal.ywlcs.org>
Message-ID: <20030523072151.GB549@dat.cz>

On Thu, May 22, 2003 at 07:09:17PM -0500, Dustin Mitchell wrote:

> >     print "Content-Type: text/html\n\n"
> >     print SubResult[0]
> 
> It looks like you're still writing a CGI script, since you're using 'print'.
> If you're taking the time to install and use mod_python, I would suggest
> using the publisher handler or writing your own handlers, as those truly take
> advantage of the status of mod_python as a handler.

You can easily force print statement to work in mod_python. Request
object has method 'write' and it is only method that print statement
calls on destination object. So you can replace sys.stdout with req.


from mod_python import apache
import sys

def handler(req):
    sys.stdout = req
    print 'hello world'
    return apache.OK


Regards,

Radek Kanovsky
From mike.looijmans at asml.com  Fri May 23 09:47:33 2003
From: mike.looijmans at asml.com (Mike Looijmans)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Tutorials, FieldStorage and sys.py. A
	depressingsaga.
Message-ID: <01c320ff$91b7d880$926a1e6e@wsasd464>

>You can easily force print statement to work in mod_python. Request
>object has method 'write' and it is only method that print statement
>calls on destination object. So you can replace sys.stdout with req.


Drawback is that there is only ONE sys.stdout per interpreter. So make very
sure that only ONE thread can write to sys.stdout...
cgihandler does this, and the result is that only one thread can be active.
With the worker mpm on apache, the python/cgi system will effectively become
single-threaded.

The other way around is much better: let all your handlers receive a file like
"output" object, and write to that object. When using CGI, you assign
sys.stdout, and in mod_python, you can use the request object. This allows
multithreading in mod_python, a must-have if you use any thread-based apache
MPM.

In fact, I let the CGI version of the handler create a Request-like object
(mimic) based on environ strings, which I pass to the mod_python based
scripts. This yields max performance on mod_python, and an unnoticable drop on
CGI based Python scripting (the overhead of starting a new interpreter process
is much, much bigger than the creation of the reqeust object).

Mike.


From simen at lunarlounge.org  Mon May 26 01:52:17 2003
From: simen at lunarlounge.org (Simen Brekken)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] 
	Strange behaviour using PythonHandler module::ClassName.method
Message-ID: <001901c32318$aca09c20$0200000a@MOONRAKER>

Running Apache 2.0 on Windows XP

I'm having some wierd behaviour with the PythonHandler module::ClassName.method directive:

.htaccess:
-----------
AddHandler python-program .py
PythonFixupHandler pso.modpython::fixup
PythonLogHandler pso.modpython::cleanup

PythonHandler test::TestHandler.handle

test.py:
-----------
class TestHandler:
 def __init__(self, req):
  pass

 def handle(self, req):
  req.pso().send_http_header()

  print "Hello world from TestHandler3!"
  return OK

def handler(self, req):
 pass


Now for the wierd part, if I try the url http://localhost/test.py everything works as planned, prints out everything, but if I comment out the "handler" function of the module i get a 404 error. What eludes me is why it is required since it's not referenced anywhere? The pso fixups only add sessions and a reference to that session object on the request so it shouldn't interfere.

Also I'm searching for a way to make mod_python reload *everything* for each request, I find myself having to restart the webserver even after making changes.

And lastly, the error handling/reporting seems very flawed, even if a handler method is required in the actual method, I get no messages in the error log about it.

___
SIMEN BREKKEN / born to synthesize.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mailman.modpython.org/pipermail/mod_python/attachments/20030526/6443b8ed/attachment-0003.htm
From i at mindlace.net  Tue May 27 13:30:44 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] publisher frustration
Message-ID: <3ED3CAF4.1060108@mindlace.net>

I'm trying to make a simple function work using the publisher; I get a 
404 if I try to access a function in the method I want to use.

Here is what I think should be the appropriate entry in my <VirtualHost> 
directive:

     <Directory /slideshow/>
         AddHandler python-program .py
	#I added to the python path in frustration...
         PythonPath "sys.path+['/home/mindlace/site/slideshow']"
         PythonHandler mod_python.publisher
         PythonDebug on
     </Directory>

This is (the relevant portion of) slide_view.py:

body = ("<html><head><title>resolution</title>"
         "<body><p>The resolution is %s</p></body>"
         "</html>")

def showResolution(req):
     if 'Cookie' in req.headers_in:
         Cookies = SmartCookie().load(req.headers_in['Cookie'])
         if 'resolution' in Cookies:
             resolution = Cookies['resolution'].split('x')
     else:
         resolution = "Not Found"
     return body % resolution

So why does this do nothing?

http://mindlace.net/slideshow/slide_view.py/showResolution

Thanks for any pointers,

~mindlace


From graeme_matthew at hotmail.com  Wed May 28 13:18:09 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>

Hi all

sorry to bug you all, but I am at the point of giving up. I have taken off 2 
days so I can do some python development and in true fashion I still after 
bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
windows !!! and I hate windows !!!!! this make me even more angry :-)

I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
installed by default and it is causing lots of headaches !

I cannot run the ./configure file as apxs is nowhere to be found on the 
machine, yet there is dso support as they have included mod_perl etc. I have 
now spent the last 3 hours trying to get the httpd-devel files, and this is 
even worse as each time you get an rpm then there is another 50 rpms 
dependencies (well not that much)

Does anyone know where one can get a mod_python binary install for linux 
just like the one that exists for Windows as I cannot afford to spend my 2 
coding days trying to get mod_python working, if there is no such file then 
thats fine, ill forget it all together.

Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
installation and getting building apache from scratch to get all the devel 
files etc for modPython ?

Any help will be appreciated as I do not know what to do now ...

Many thanks

_________________________________________________________________
ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
great for sharing photos and documents. Go to  
http://join.msn.com/?page=dept/home&pgmarket=en-au

From jdavis-mod-python at empires.org  Tue May 27 21:47:26 2003
From: jdavis-mod-python at empires.org (Jeff Davis)
Date: Fri Jan  9 22:03:52 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
References: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <200305272147.26380.jdavis-mod-python@empires.org>

On Tuesday 27 May 2003 08:18 pm, Graeme Matthew wrote:
> Hi all
>
> sorry to bug you all, but I am at the point of giving up. I have taken off
> 2 days so I can do some python development and in true fashion I still
> after bloody 8 hours cannot get modpython to work on linux that took 5
> minutes on windows !!! and I hate windows !!!!! this make me even more
> angry :-)
>
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is
> installed by default and it is causing lots of headaches !
>
> I cannot run the ./configure file as apxs is nowhere to be found on the
> machine, yet there is dso support as they have included mod_perl etc. I

The first thing that comes to my mind is that you should be able to install 
apxs through some kind of apache development package. Check around for some 
rpms, and then it should configure fine.

Good luck,
	Jeff Davis

From j.healy at ugrad.unimelb.edu.au  Wed May 28 16:55:37 2003
From: j.healy at ugrad.unimelb.edu.au (Joseph Hepburne Healy)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] Urgent Help Needed
In-Reply-To: <BAY1-F165Vp20N39x6H00002eb6@hotmail.com>
Message-ID: <Pine.OSF.4.10.10305281648590.19441-100000@cassius.its.unimelb.edu.au>


Hi,

I have gone through similar difficulties with mandrake 9.0 and found it
was simplest to uninstall mandrakes apache and download source for apache
2 and modpython 3 and build
both of them. It was relatively easy, the only issue was the location of
the configuration files (/usr/local/apache2/conf i think) rather than /etc
but that is just a configure option (haven't had time to fix it)

If you install httpd-devel or apache-devel (can't remember what mandrake
calls it) you might get the apxs file. To find out which package doing:

urpmf apxs

should tell you what package to install. When using mandrake the easiest
way to install packages is to use (as root):

urpmi packagename

this should solve the dependencies and prompt you for the correct cds to
insert.

Hope this helps

Joe

On Wed, 28 May 2003, Graeme Matthew wrote:

> Hi all
> 
> sorry to bug you all, but I am at the point of giving up. I have taken
off 2 
> days so I can do some python development and in true fashion I still after 
> bloody 8 hours cannot get modpython to work on linux that took 5 minutes on 
> windows !!! and I hate windows !!!!! this make me even more angry :-)
> 
> I am using Mandrake 9.1 with this new Advanced Extranet Server that is 
> installed by default and it is causing lots of headaches !
> 
> I cannot run the ./configure file as apxs is nowhere to be found on the 
> machine, yet there is dso support as they have included mod_perl etc. I have 
> now spent the last 3 hours trying to get the httpd-devel files, and this is 
> even worse as each time you get an rpm then there is another 50 rpms 
> dependencies (well not that much)
> 
> Does anyone know where one can get a mod_python binary install for linux 
> just like the one that exists for Windows as I cannot afford to spend my 2 
> coding days trying to get mod_python working, if there is no such file then 
> thats fine, ill forget it all together.
> 
> Is it worthwhile me blowing the entire Advanced Extranet Server (ADVX) 
> installation and getting building apache from scratch to get all the devel 
> files etc for modPython ?
> 
> Any help will be appreciated as I do not know what to do now ...
> 
> Many thanks
> 
> _________________________________________________________________
> ninemsn Extra Storage is now available. 30MB of storage on ninemsn Groups - 
> great for sharing photos and documents. Go to  
> http://join.msn.com/?page=dept/home&pgmarket=en-au
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From kaback at kaback.de  Wed May 28 12:57:54 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] strange util.FieldStorage() behavior
Message-ID: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>

I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

i wrote a simple handler script that only parses its "cgi parameters"
using util.FieldStorage() and returns apache.OK

the script worked fine so far, but everytime the script runs, the memory
used by apache rises a few kbyte.

next i removed the util.FieldStorage() function from the script, with the
result, that the memory usage remains constant.

because of that i searched for an other way to get access to the committed
form parameters and found the mod_python.publisher handler.

i added the publisher handler to my apache config and wrote a file 
"hello.py" with the following content:
--------
""" Publisher example """

def say(req, what="NOTHING"):
    return "I am saying %s" % what
-------

now a request with the url http://localhost/hello/say?what=blahblah
returns the expected "I am saying blahblah

i wrote a script, that calls wget on that url within an endless loop:
------- getit.pl
while(1) {
        system("wget -O test.htm http://localhost/hello/say?what=blah");
}
-------

next i wrote a verry simple "tool" that monitors memory usage of my
http-servers
------- memwatch.pl
while(1)
{
  open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
  while(<OUTPUT>)
  {
    chomp();
    my($first, $second) = split();
    my($sec, $min, $hour) = localtime(time);
    print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
  }
  sleep(1);
}
-------

and, the unexpected happens, runnig memwatch.pl while running getit.pl
shows the constant growing memory usage of the httpd processes.

the longer the string after http://localhost/hello/say?what= is, the
more the memory seems to grow each time.

reading the docs, i found, that even mod_python.publisher uses the
functionality of util.FieldStorage(), which i wanted not to use
because of the strange things i figured out during my first test
(abovementioned)

for me at the moment this looks like a amemory leakage in 
util.FieldStorage. i searched the archive and did not found anything 
regarding that behavior.

so my question is: Am I doing something wrong? 

thanks in advance
Karsten

From graeme_matthew at hotmail.com  Wed May 28 21:31:11 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] Urgent Help Needed
Message-ID: <BAY1-F493Bo1hyOwlZz00027cd1@hotmail.com>

Hi all me again after so many hours, jeez im thinking of just using windows 
but I can convince myself !!!

ok I got the apache source (2.0.45) installed like adream and is up and 
running but when I run the modpython source install it wont even work here 
is an extract

mod_python.c: In function `PythonPostReadRequestHandler':
mod_python.c:1719: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1726: parse error before '*' token
mod_python.c: In function `PythonTransHandler':
mod_python.c:1727: `req' undeclared (first use in this function)
mod_python.c: At top level:
mod_python.c:1729: parse error before '*' token
mod_python.c: In function `PythonTypeHandler':
mod_python.c:1730: `req' undeclared (first use in this function)
apxs:Error: Command failed with rc=65536
.
make[1]: *** [mod_python.so] Error 1
make[1]: Leaving directory `/home/isixhosa/mod_python-3.0.3/src'
make: *** [do_dso] Error 2
[root@amazulu mod_python-3.0.3]#


please any help is good

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From neo at https.ru  Wed May 28 15:43:38 2003
From: neo at https.ru (Neo Eureka)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <354390192.20030528154338@https.ru>


  I also suspect some memory leakage caused by mod_python3. I do not
have time to investigate what and where is going on. I use mod_python
with much more complicated code (internet shop, for example), and I
saw constant memory growth. Though it's small, as compared to the
total memory apache2 + mod_python3 take, that gives rise to somewhat
bad feeling. :)


> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2

> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK

> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.

> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.

> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.

> i added the publisher handler to my apache config and wrote a file 
> "hello.py" with the following content:
> --------
> """ Publisher example """

> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------

> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah

> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------

> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------

> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.

> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.

> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)

> for me at the moment this looks like a amemory leakage in 
> util.FieldStorage. i searched the archive and did not found anything 
> regarding that behavior.

> so my question is: Am I doing something wrong? 

> thanks in advance
> Karsten


--- 
Neo Eureka / mailto:neo@https.ru

From kaback at kaback.de  Wed May 28 14:16:00 2003
From: kaback at kaback.de (Karsten Backhaus)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <354390192.20030528154338@https.ru>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
Message-ID: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>

hi

On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
> 
>   I also suspect some memory leakage caused by mod_python3. I do not
> have time to investigate what and where is going on. I use mod_python
> with much more complicated code (internet shop, for example), and I
> saw constant memory growth. Though it's small, as compared to the
> total memory apache2 + mod_python3 take, that gives rise to somewhat
> bad feeling. :)
>

well, i'am using  python within much more complicated code too, in fact,
that code is so complicated, that each time it is requested the memory
usage of my apache is rising about 64kb. i'am using POST method to
submit xml content and the code is called many times within one second.

are there other methods to get POSTed form data from within an mod_python 
script than util.FieldStorage()?

Karsten

From davidf at sjsoft.com  Wed May 28 15:24:08 2003
From: davidf at sjsoft.com (David Fraser)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<354390192.20030528154338@https.ru>
	<20030528141600.A3777@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <3ED4B878.3020608@sjsoft.com>

Karsten Backhaus wrote:

>hi
>
>On Wed, May 28, 2003 at 03:43:38PM +0400, Neo Eureka wrote:
>  
>
>>  I also suspect some memory leakage caused by mod_python3. I do not
>>have time to investigate what and where is going on. I use mod_python
>>with much more complicated code (internet shop, for example), and I
>>saw constant memory growth. Though it's small, as compared to the
>>total memory apache2 + mod_python3 take, that gives rise to somewhat
>>bad feeling. :)
>>    
>>
>well, i'am using  python within much more complicated code too, in fact,
>that code is so complicated, that each time it is requested the memory
>usage of my apache is rising about 64kb. i'am using POST method to
>submit xml content and the code is called many times within one second.
>  
>
Hmmm ... never noticed this before, looks like our app is doing the same ...

>are there other methods to get POSTed form data from within an mod_python 
>script than util.FieldStorage()?
>
>Karsten
>
util.FieldStorage is implemented in pure Python, so you can look at 
exactly what it does to either debug the memory growth or write your own 
implementation.

David

From grisha at modpython.org  Wed May 28 10:47:25 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
Message-ID: <20030528104439.O96588-100000@oldchief.reply.net>


I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
I used ab (nice tool that comes with Apache) to run 100000 requests, and I
have not seen any grwoth (except initally, but that's normal) in httpd's
memory consumption.

Grisha

On Wed, 28 May 2003, Karsten Backhaus wrote:

> I'm using mod_python 2.7.8 with apache 1.3.27 under SuSE Linux 8.2
>
> i wrote a simple handler script that only parses its "cgi parameters"
> using util.FieldStorage() and returns apache.OK
>
> the script worked fine so far, but everytime the script runs, the memory
> used by apache rises a few kbyte.
>
> next i removed the util.FieldStorage() function from the script, with the
> result, that the memory usage remains constant.
>
> because of that i searched for an other way to get access to the committed
> form parameters and found the mod_python.publisher handler.
>
> i added the publisher handler to my apache config and wrote a file
> "hello.py" with the following content:
> --------
> """ Publisher example """
>
> def say(req, what="NOTHING"):
>     return "I am saying %s" % what
> -------
>
> now a request with the url http://localhost/hello/say?what=blahblah
> returns the expected "I am saying blahblah
>
> i wrote a script, that calls wget on that url within an endless loop:
> ------- getit.pl
> while(1) {
>         system("wget -O test.htm http://localhost/hello/say?what=blah");
> }
> -------
>
> next i wrote a verry simple "tool" that monitors memory usage of my
> http-servers
> ------- memwatch.pl
> while(1)
> {
>   open(OUTPUT, "ps -C httpd -o \"size= pid=\" |") or die "error: $!\n";
>   while(<OUTPUT>)
>   {
>     chomp();
>     my($first, $second) = split();
>     my($sec, $min, $hour) = localtime(time);
>     print "$hour:$min:$sec ", $first, "\t(", $second, ")\n";
>   }
>   sleep(1);
> }
> -------
>
> and, the unexpected happens, runnig memwatch.pl while running getit.pl
> shows the constant growing memory usage of the httpd processes.
>
> the longer the string after http://localhost/hello/say?what= is, the
> more the memory seems to grow each time.
>
> reading the docs, i found, that even mod_python.publisher uses the
> functionality of util.FieldStorage(), which i wanted not to use
> because of the strange things i figured out during my first test
> (abovementioned)
>
> for me at the moment this looks like a amemory leakage in
> util.FieldStorage. i searched the archive and did not found anything
> regarding that behavior.
>
> so my question is: Am I doing something wrong?
>
> thanks in advance
> Karsten
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From dustin at ywlcs.org  Wed May 28 10:34:44 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] strange util.FieldStorage() behavior
In-Reply-To: <20030528104439.O96588-100000@oldchief.reply.net>
References: <20030528125754.B3291@dagobert.e-technik.fh-schmalkalden.de>
	<20030528104439.O96588-100000@oldchief.reply.net>
Message-ID: <20030528153444.GI22286@eleanor.internal.ywlcs.org>

On Wed, May 28, 2003 at 10:47:25AM -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> I just ran this test using mod_python 3.0.3 and Apache 2.0.45 (on RH 8.0),
> I used ab (nice tool that comes with Apache) to run 100000 requests, and I
> have not seen any grwoth (except initally, but that's normal) in httpd's
> memory consumption.

Is it possible there's a reference cycle buried within the FieldStorage
class?  Perhaps some strategic application of the weakref module could
straighten things out..

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From graeme_matthew at hotmail.com  Thu May 29 10:25:18 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] Cannot find mod_python.so 
Message-ID: <BAY1-F23HYt2gYCL6nt000050c0@hotmail.com>

Hi all me again

well im still trying to get this stuff working and it aint happening ... sob

I have installed apache from source with --enable-so

I have run modpython from source using
--with-python
--with-apxs

it all seemed to go fine

I have added all the appropriate directives in httpd.conf

But when I start the apache server I get this

Cannot load /usr/local/apache2/modules/mod_python.so into server

Please, any help will be appreciated

Graeme

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From graeme_matthew at hotmail.com  Thu May 29 21:37:35 2003
From: graeme_matthew at hotmail.com (Graeme Matthew)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] ImportError: Cannot find _apache
Message-ID: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>

Hi all me again ....

Im almost there ...

I keep on getting the following error in my cgi-script, on the command line, 
I have included my httpd.conf directives and some additional information...

Any help would be much appreciated ...

Ta


PYTHON INTERPRETER:

[root@amazulu cgi-bin]# /usr/local/bin/python2.2
Python 2.2.2 (#1, May 29 2003, 17:09:39)
[GCC 3.2.2 (Mandrake Linux 9.1 3.2.2-3mdk)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>>from mod_python import apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
67, in ?
    import _apache
ImportError: No module named _apache
>>>import mod_python
>>>from mod_python import apache
>>>

Wierd !!!

### HTTPD CONF
<Directory "/www/bi/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
    #AddHandler python-program .py this was a problem
    AddHandler cgi-script .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

#SCRIPT

#! /usr/local/bin/python2.2


import MySQLdb
import sys
sys.path.append('/www/bi/classes')

from mod_python import apache
from HtmWindow import getHtmlWindow

def query(req):

blah blah blah

_________________________________________________________________
ninemsn Extra Storage is now available. Get larger attachments - 
send/receive up to 2MB attachments (up to 100 percent more per e-mail). Go 
to  http://join.msn.com/?page=dept/home&pgmarket=en-au

From dustin at ywlcs.org  Thu May 29 08:45:00 2003
From: dustin at ywlcs.org (Dustin Mitchell)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] ImportError: Cannot find _apache
In-Reply-To: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
References: <BAY1-F149Pf3efdKzaX00005a12@hotmail.com>
Message-ID: <20030529134459.GR22286@eleanor.internal.ywlcs.org>

On Thu, May 29, 2003 at 09:37:35PM +1000, Graeme Matthew wrote:
> >>>from mod_python import apache
> Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>  File "/usr/local/lib/python2.2/site-packages/mod_python/apache.py", line 
> 67, in ?
>    import _apache
> ImportError: No module named _apache
> >>>import mod_python
> >>>from mod_python import apache

The reason you don't get an error the next time is this:  During the first
import, Python partially loads and constructs the mod_python.apache module,
until it gets to "import _apache", which causes an exception.  However, at
that point the mod_python.apache module is *loaded*, it's just not completely
initialized.  So when you get to the second from..import, Python finds that
mod_python.apache is already loaded and simply returns a reference to the
loaded (but still not initialized) module.

The reason _apache can't be found is that it's the mechanism by which Python
can communicate with the Apache process in which it is running.  Since, at
the command line, you're not running in an Apache process, there's no such
module.  Specifically, that module is provided by mod_python.so, which is
loaded by Apache when it starts up, but not loaded or even referenced by the
command-line-invoked Python.

Dustin

-- 

  Dustin Mitchell
  dustin@ywlcs.org/djmitche@alumni.uchicago.edu
  http://people.cs.uchicago.edu/~dustin/
From poeml at suse.de  Fri May 30 13:47:32 2003
From: poeml at suse.de (Peter Poeml)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] LONG_LONG -> PY_LONG_LONG in python-2.3b1
Message-ID: <20030530114732.GK3798@suse.de>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 198 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030530/168caf14/attachment-0003.bin
From tohmas.ash at takashi.zzn.com  Fri May 30 17:37:57 2003
From: tohmas.ash at takashi.zzn.com (tohmas ash)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] force download and content-disposition
Message-ID: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>

hello, I'm a mod_python's newbie , and I use it with postgresql for 
a web application...

In my software, I upload some files with a form to a bytea in 
postgresql, no problems for that. But after, I want to force the 
download via a link...

Before I use PHP for my web application, I know how do that in php 
it's like that:
"
header("Content-type: application/force-download");
header("Content-Disposition: attachment; filename=$filename");
readfile("$path"); 
"

I know how set the configuration of the "content-type" with 
mod_python,
But I don't know how do the same whith the "Content-Disposition" ...
I have found the same question in the mailing list but without 
answer ...

so if you can help me, thanks in advance for your answer.

ps: sorry for my english, I'm a french boy ^_^


Get your Free E-mail at http://takashi.zzn.com
___________________________________________________________
Get your own Web-based E-mail Service at http://www.zzn.com
From grisha at modpython.org  Fri May 30 19:12:44 2003
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] force download and content-disposition
In-Reply-To: <B287F62A4D8A9F846B41C8FD7903E012@tohmas.ash.takashi.zzn.com>
Message-ID: <20030530191059.N36634-100000@oldchief.reply.net>



On Fri, 30 May 2003, tohmas ash wrote:

> Before I use PHP for my web application, I know how do that in php
> it's like that:
> "
> header("Content-type: application/force-download");
> header("Content-Disposition: attachment; filename=$filename");

In mod_python it's:

req.headers_out["Content-type"] = "application/force-download"
req.headers_out["Content-Disposition"] = "attachment; filename=%s" % filename

Grisha

From i at mindlace.net  Sat May 31 22:04:25 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <3EC945B4.1050907@cs.uchicago.edu>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu>
Message-ID: <2147483647.1054418665@[10.0.1.2]>

--On 19 Monday, May 2003 15:59 -0500 ganapathy murali krishnan 
<gmurali@cs.uchicago.edu> wrote:

> Hope you find the code useful.
>
> - Murali
>
> ------ translate.py ------------
> from mod_python import apache, util
> from utils import urls
> import os, string, config

This code is very useful, but I get an import error on utils; What utils 
module are you using?

Thanks,
~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/9f7825bc/attachment-0003.bin
From i at mindlace.net  Sat May 31 22:47:23 2003
From: i at mindlace.net (emf)
Date: Fri Jan  9 22:03:53 2004
Subject: [mod_python] Mapping a URI to pages dynamically.
In-Reply-To: <2147483647.1054418665@[10.0.1.2]>
References: <01c31e05$4f438280$926a1e6e@wsasd464>
 	<20030519185311.17d2a126.philipj@telia.com>
 <3EC945B4.1050907@cs.uchicago.edu> <2147483647.1054418665@[10.0.1.2]>
Message-ID: <2147483647.1054421243@[10.0.1.2]>

--On 31 Saturday, May 2003 22:04 -0700 emf <i@mindlace.net> wrote:
>> ------ translate.py ------------
>> from mod_python import apache, util
>> from utils import urls
>> import os, string, config
>
> This code is very useful, but I get an import error on utils; What utils
> module are you using?

Sigh. Obviously i should just use urls.py.

I assume you mean to use req.get_config() instead of trying to import 
config?

~mindlace
http://mindlace.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://mailman.modpython.org/pipermail/mod_python/attachments/20030531/c0066a84/attachment-0003.bin
