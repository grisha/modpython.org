From huzaifa at hostway.com  Mon Nov  1 10:43:18 2004
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon Nov  1 10:48:47 2004
Subject: [mod_python] ImportError: No module named _apache
In-Reply-To: <4182BCA7.8000102@sjsoft.com>
Message-ID: <20041101154705.779E7C979@fiona.siteprotect.com>

David, I am running the latest version of Debian on my computer.  Also there
is no error when compiling the _apache module into mod_python and that is
what my original concern was that there seems to be no exception raised if
the compilation fails for _apache.

Here is what I am talking about:

_apacheModule.c: void init_apache(): line 533

Mp_ServerReturn = PyErr_NewException("_apache.SERVER_RETURN", NULL, NULL);
if (Mp_ServerReturn = NULL)
	return;

_apacheModule does not seem to be raising any exceptions when that occurs.

Brian, I just signed up with the list before I posted this message.  How can
I check all the previous list entries to find out how this problem was
covered.

As far as not running this through mod_python on the apache server, as far
as I am concerned, I am.  I pretty much followed exactly what is written in
the documentation including the test file they have to test mod_python, in
which the call to import apache fails:

from mod_python import apache

Any ideas guys?

Huzaifa

-----Original Message-----
From: David Fraser [mailto:davidf@sjsoft.com] 
Sent: Friday, October 29, 2004 4:57 PM
To: Huzaifa Tapal
Cc: mod_python@modpython.org
Subject: Re: [mod_python] ImportError: No module named _apache

Huzaifa Tapal wrote:

> I have followed all the steps outlined in your documentation for 
> mod_python 3.1.3 for apache 2.0. however, when executing the test 
> script I am running into a problem where I get the following error:
>
> Traceback (most recent call last):
>
> File "mptest.py", line 1, in ?
>
> from mod_python import apache
>
> File 
> "/usr/local/python2.3.4/lib/python2.3/site-packages/mod_python/apache.py",

> line 28, in ?
>
> import _apache
>
> ImportError: No module named _apache
>
> After digging around a whole lot, I see that the _/apachemodule.c /is 
> getting compiled into the mod_python.so binary. I checked the 
> init_apache() method in _apachmodule.c and at one point if there is an 
> error compiling the _apache module into mod_python, it errors out 
> silently without any exceptions being raised.
>
> I am afraid that the _apache module might be erroring out and as a 
> result mod_python is not functioning.
>
> Can you please shed some light?
>
It would be great if you could say what platform you are using, and what 
the error compiling the _apache module into mod_python is ...

David

From johna at johnaherne.co.uk  Mon Nov  1 16:12:56 2004
From: johna at johnaherne.co.uk (John Aherne)
Date: Mon Nov  1 16:16:37 2004
Subject: [mod_python] servlets and cookies
Message-ID: <4186A6D8.2040509@johnaherne.co.uk>

Hi all,

I am hoping someone can tell me what I am doing wrong. with setting 
cookies in the following code snippet.

I am using the mps servlet classes for calling scripts but for the 
cookies I use the mod_python cookie class

I have a simple bit of script that checks for a cookie and if not 
present will set it.

If I include the last line to redirect to another page, the script will 
not set the cookie and redirect to the next page.

If I comment out the last line to redirect to another page, the script 
will set the cookie - the browser is set to warn if a cookie is being 
set -  and I will see a message asking if I want to accept the cookie.

The redirected page checks for the cookie and displays a line if the 
cookie is found.

What I can't work out is why the cookie is not set if I uncomment the 
redirect line in the block that is supposed to add the cookie.

Code snippet follows:--

# -*- python -*-
from mod_python import Cookie
from mod_python import apache

from mod_python.servlet import *
from _HTML import *


class incook2(HTMLPage):
 title = 'JAH table test'
 css_links = ['jah.css']
# query_vars = ['action']

 
 def write_content(self):
 
 
  checkout = Cookie.get_cookies(self.req)
  if checkout.has_key('user'):
     self.external_redirect('cookmps')
   
  else:
 
      check = Cookie.Cookie('user','niven')
      Cookie.add_cookie(self.req, check)
      self.external_redirect('cookmps')
    

  I hope someone can give me a clue as to what the problem is.

John Aherne

 




From bje at apnic.net  Mon Nov  1 23:01:26 2004
From: bje at apnic.net (Byron Ellacott)
Date: Mon Nov  1 23:00:18 2004
Subject: [mod_python] servlets and cookies
In-Reply-To: <4186A6D8.2040509@johnaherne.co.uk>
References: <4186A6D8.2040509@johnaherne.co.uk>
Message-ID: <41870696.6000600@apnic.net>

John Aherne wrote:
>      check = Cookie.Cookie('user','niven')
>      Cookie.add_cookie(self.req, check)
>      self.external_redirect('cookmps')
>  I hope someone can give me a clue as to what the problem is.

I believe that this is due to the way Apache only uses the headers_out 
structure for OK return values.  For all other return values, including 
redirects, it will use the headers_err_out (or similarly named?) 
structure instead.

Cookie.add_cookie() will be modifying headers_out, not headers_err_out. 
  Let me verify what I'm saying...

Uh, err_headers_out.

So, you could use:

     req.err_headers_out.add('Set-Cookie', check)

-- 
bje
From eret at ucar.edu  Tue Nov  2 12:10:57 2004
From: eret at ucar.edu (Mark Eret)
Date: Tue Nov  2 12:10:58 2004
Subject: [mod_python] mod_python problem
Message-ID: <2997662E-2CF2-11D9-8B88-000D93340C0E@ucar.edu>

Hello there,

I have Apache 1.3.31 running and mod_python 2.7.10-3 (I believe) on 
Debian's testing distrubution ('sarge').  I installed mod_python and 
Apache using 'apt-get' (apt-get install apache, apt-get install 
libapache-mod-python).  I tried to follow the instructions for testing 
my installation given in 
http://www.modpython.org/live/mod_python-2.7/doc/inst-testing.html, but 
I can't get it to work.  I followed them to the letter.

My httpd.conf contains the following:
<Directory /var/www/test>
         AddHandler mod_python .py
         PythonHandler mptest
         PythonDebug On
</Directory>

I restarted apache.  I put a file called mptest.py with the permissions 
644 in my /var/www/test directory.  mptest.py contains the following:

from mod_python import apache
def handler(req):
         req.write("Hello World!")
         return apache.OK

I point my browser to http://lambdacalcul.us/test/mptest.py and all I 
see is the source code for mptest.py.  The apache logs show nothing 
happening.  It just reports a GET and that is it.  I tried running 
'/usr/sbin/apache -X' and that doesn't show anything useful.  Does 
anyone have any idea how I can fix this?  Thanks in advance.

Mark Eret

"Yields falsehood when appended to its own quotation," yields falsehood 
when appended to its own quotation.

From list at joreybump.com  Tue Nov  2 13:13:28 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov  2 13:13:33 2004
Subject: [mod_python] mod_python problem
In-Reply-To: <2997662E-2CF2-11D9-8B88-000D93340C0E@ucar.edu>
References: <2997662E-2CF2-11D9-8B88-000D93340C0E@ucar.edu>
Message-ID: <4187CE48.7040800@joreybump.com>

Mark Eret wrote:
> Hello there,
> 
> I have Apache 1.3.31 running and mod_python 2.7.10-3 (I believe) on 
> Debian's testing distrubution ('sarge').  I installed mod_python and 
> Apache using 'apt-get' (apt-get install apache, apt-get install 
> libapache-mod-python).  I tried to follow the instructions for testing 
> my installation given in 
> http://www.modpython.org/live/mod_python-2.7/doc/inst-testing.html, but 
> I can't get it to work.  I followed them to the letter.
> 
> My httpd.conf contains the following:
> <Directory /var/www/test>
>         AddHandler mod_python .py
>         PythonHandler mptest
>         PythonDebug On
> </Directory>

Are you loading the module? httpd.conf should contain something like the 
following:

  LoadModule python_module /usr/lib/apache/1.3/mod_python.so

This is the path on woody, but it may have changed on sarge.

From eret at ucar.edu  Tue Nov  2 13:26:57 2004
From: eret at ucar.edu (Mark Eret)
Date: Tue Nov  2 13:26:57 2004
Subject: [mod_python] mod_python problem
In-Reply-To: <4187CE48.7040800@joreybump.com>
References: <2997662E-2CF2-11D9-8B88-000D93340C0E@ucar.edu>
	<4187CE48.7040800@joreybump.com>
Message-ID: <C74F0AB0-2CFC-11D9-B0A6-000D93340C0E@ucar.edu>

I forgot to include that.  I am indeed loading the module in 
/etc/apache/modules.conf.  The line is as follows:LoadModule 
python_module /usr/lib/apache/1.3/mod_python.so

On Nov 2, 2004, at 11:13 AM, Jorey Bump wrote:

> Mark Eret wrote:
>> Hello there,
>> I have Apache 1.3.31 running and mod_python 2.7.10-3 (I believe) on 
>> Debian's testing distrubution ('sarge').  I installed mod_python and 
>> Apache using 'apt-get' (apt-get install apache, apt-get install 
>> libapache-mod-python).  I tried to follow the instructions for 
>> testing my installation given in 
>> http://www.modpython.org/live/mod_python-2.7/doc/inst-testing.html, 
>> but I can't get it to work.  I followed them to the letter.
>> My httpd.conf contains the following:
>> <Directory /var/www/test>
>>         AddHandler mod_python .py
>>         PythonHandler mptest
>>         PythonDebug On
>> </Directory>
>
> Are you loading the module? httpd.conf should contain something like 
> the following:
>
>  LoadModule python_module /usr/lib/apache/1.3/mod_python.so
>
> This is the path on woody, but it may have changed on sarge.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Mark Eret

"Yields falsehood when appended to its own quotation," yields falsehood 
when appended to its own quotation.

From list at joreybump.com  Tue Nov  2 15:08:20 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov  2 15:08:25 2004
Subject: [mod_python] mod_python problem
In-Reply-To: <C74F0AB0-2CFC-11D9-B0A6-000D93340C0E@ucar.edu>
References: <2997662E-2CF2-11D9-8B88-000D93340C0E@ucar.edu>	<4187CE48.7040800@joreybump.com>
	<C74F0AB0-2CFC-11D9-B0A6-000D93340C0E@ucar.edu>
Message-ID: <4187E934.6080909@joreybump.com>

Mark Eret wrote:

> I forgot to include that.  I am indeed loading the module in 
> /etc/apache/modules.conf.  The line is as follows:LoadModule 
> python_module /usr/lib/apache/1.3/mod_python.so
> 
> On Nov 2, 2004, at 11:13 AM, Jorey Bump wrote:
> 
>> Mark Eret wrote:
>>
>>> Hello there,
>>> I have Apache 1.3.31 running and mod_python 2.7.10-3 (I believe) on 
>>> Debian's testing distrubution ('sarge').  I installed mod_python and 
>>> Apache using 'apt-get' (apt-get install apache, apt-get install 
>>> libapache-mod-python).  I tried to follow the instructions for 
>>> testing my installation given in 
>>> http://www.modpython.org/live/mod_python-2.7/doc/inst-testing.html, 
>>> but I can't get it to work.  I followed them to the letter.
>>> My httpd.conf contains the following:
>>> <Directory /var/www/test>
>>>         AddHandler mod_python .py
>>>         PythonHandler mptest
>>>         PythonDebug On
>>> </Directory>

Try this instead:

<Directory /var/www/documentroot>
    AddHandler python-program .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

Create test.py:

def hello(req):
     x = "Hello, world!"
     return x

Restart apache, point your browser to test.py, and see if that works.

If it doesn't, check your apache error log. You should see a line like 
this in /var/log/apache/error.log (default location in woody) right 
after restarting apache:

  [notice] mod_python: (Re)importing mod_python.publisher from None

From johna at johnaherne.co.uk  Tue Nov  2 15:15:57 2004
From: johna at johnaherne.co.uk (John Aherne)
Date: Tue Nov  2 15:19:49 2004
Subject: [mod_python] mod_python problem
In-Reply-To: <C74F0AB0-2CFC-11D9-B0A6-000D93340C0E@ucar.edu>
References: <2997662E-2CF2-11D9-8B88-000D93340C0E@ucar.edu>	<4187CE48.7040800@joreybump.com>
	<C74F0AB0-2CFC-11D9-B0A6-000D93340C0E@ucar.edu>
Message-ID: <4187EAFD.2000400@johnaherne.co.uk>

Mark Eret wrote:

> I forgot to include that.  I am indeed loading the module in 
> /etc/apache/modules.conf.  The line is as follows:LoadModule 
> python_module /usr/lib/apache/1.3/mod_python.so
>
> On Nov 2, 2004, at 11:13 AM, Jorey Bump wrote:
>
>> Mark Eret wrote:
>>
>>> Hello there,
>>> I have Apache 1.3.31 running and mod_python 2.7.10-3 (I believe) on 
>>> Debian's testing distrubution ('sarge').  I installed mod_python and 
>>> Apache using 'apt-get' (apt-get install apache, apt-get install 
>>> libapache-mod-python).  I tried to follow the instructions for 
>>> testing my installation given in 
>>> http://www.modpython.org/live/mod_python-2.7/doc/inst-testing.html, 
>>> but I can't get it to work.  I followed them to the letter.
>>> My httpd.conf contains the following:
>>> <Directory /var/www/test>
>>>         AddHandler mod_python .py
>>>         PythonHandler mptest
>>>         PythonDebug On
>>> </Directory>
>>
>>
>> Are you loading the module? httpd.conf should contain something like 
>> the following:
>>
>>  LoadModule python_module /usr/lib/apache/1.3/mod_python.so
>>
>> This is the path on woody, but it may have changed on sarge.
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
> Mark Eret
>
> "Yields falsehood when appended to its own quotation," yields 
> falsehood when appended to its own quotation.
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
Thanks for the info. Much appreciated.

It looks like redirect is not a good option if you want to use cookies. 
I'll have to take a look at doing it some other way.

If anyone has got any ideas of a better way of moving from page to page 
I'll be glad to hear.

Thanks

John Aherne
From eret at ucar.edu  Tue Nov  2 16:46:50 2004
From: eret at ucar.edu (Mark Eret)
Date: Tue Nov  2 16:46:52 2004
Subject: [mod_python] mod_python problem
Message-ID: <B4296B76-2D18-11D9-B0A6-000D93340C0E@ucar.edu>

Hey,

So, we have a little bit of an improvement, but it is doing something 
now, but it is still broken.

I did what you said.  Now, when I point my browser at 
http://lambdacalcul.us/test/test.py, I get a "Not Found" page.  I 
checked and /var/www/test/test.py most definitely exists.  When I 
checked out my error.log file, there were the following lines:

[Tue Nov  2 12:03:22 2004] [notice] Apache/1.3.31 (Debian GNU/Linux) 
mod_python/2.7.10 Python/2.3.4 mod_ruby/1.2.4 Ruby/1.8.2(2004-08-24) 
PHP/4.3.9-1 configured -- resuming normal operations
[Tue Nov  2 12:03:22 2004] [notice] Accept mutex: sysvsem (Default: 
sysvsem)
[Tue Nov  2 12:03:31 2004] [notice] mod_python: (Re)importing 
mod_python.publisher from None
[Tue Nov  2 12:03:31 2004] [notice] mod_python: (Re)importing test from 
['/var/www/test']

So, I did get that line, but something else is apparently wrong.

Any ideas?  Thanks in advance.

On Nov 2, 2004, at 1:08 PM, Jorey Bump wrote:
> Try this instead:
>
> <Directory /var/www/documentroot>
>    AddHandler python-program .py
>    PythonHandler mod_python.publisher
>    PythonDebug On
> </Directory>
>
> Create test.py:
>
> def hello(req):
>     x = "Hello, world!"
>     return x
>
> Restart apache, point your browser to test.py, and see if that works.
>
> If it doesn't, check your apache error log. You should see a line like 
> this in /var/log/apache/error.log (default location in woody) right 
> after restarting apache:
>
>  [notice] mod_python: (Re)importing mod_python.publisher from None
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Mark Eret

"Yields falsehood when appended to its own quotation," yields falsehood 
when appended to its own quotation.

From list at joreybump.com  Tue Nov  2 17:21:41 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov  2 17:21:45 2004
Subject: [mod_python] mod_python problem
In-Reply-To: <B4296B76-2D18-11D9-B0A6-000D93340C0E@ucar.edu>
References: <B4296B76-2D18-11D9-B0A6-000D93340C0E@ucar.edu>
Message-ID: <41880875.5070505@joreybump.com>

Mark Eret wrote:

> Hey,
> 
> So, we have a little bit of an improvement, but it is doing something 
> now, but it is still broken.
> 
> I did what you said.  Now, when I point my browser at 
> http://lambdacalcul.us/test/test.py, I get a "Not Found" page.  I 
> checked and /var/www/test/test.py most definitely exists.  When I 
> checked out my error.log file, there were the following lines:
> 
> [Tue Nov  2 12:03:22 2004] [notice] Apache/1.3.31 (Debian GNU/Linux) 
> mod_python/2.7.10 Python/2.3.4 mod_ruby/1.2.4 Ruby/1.8.2(2004-08-24) 
> PHP/4.3.9-1 configured -- resuming normal operations
> [Tue Nov  2 12:03:22 2004] [notice] Accept mutex: sysvsem (Default: 
> sysvsem)
> [Tue Nov  2 12:03:31 2004] [notice] mod_python: (Re)importing 
> mod_python.publisher from None
> [Tue Nov  2 12:03:31 2004] [notice] mod_python: (Re)importing test from 
> ['/var/www/test']
> 
> So, I did get that line, but something else is apparently wrong.
> 
> Any ideas?  Thanks in advance.

Congratulations! It works:

  http://lambdacalcul.us/test/test.py/hello

I forgot to give you the proper URL. :P
From eret at ucar.edu  Tue Nov  2 17:35:50 2004
From: eret at ucar.edu (Mark Eret)
Date: Tue Nov  2 17:35:51 2004
Subject: [mod_python] mod_python problem
In-Reply-To: <41880875.5070505@joreybump.com>
References: <B4296B76-2D18-11D9-B0A6-000D93340C0E@ucar.edu>
	<41880875.5070505@joreybump.com>
Message-ID: <8C342714-2D1F-11D9-B0A6-000D93340C0E@ucar.edu>

Awesome!

Quick question, is there a way for http://lambdacalcul.us/test/test.py 
(without the method name on the end) to return a webpage?  Thanks for 
all the help!

On Nov 2, 2004, at 3:21 PM, Jorey Bump wrote:

> Mark Eret wrote:
>
>> Hey,
>> So, we have a little bit of an improvement, but it is doing something 
>> now, but it is still broken.
>> I did what you said.  Now, when I point my browser at 
>> http://lambdacalcul.us/test/test.py, I get a "Not Found" page.  I 
>> checked and /var/www/test/test.py most definitely exists.  When I 
>> checked out my error.log file, there were the following lines:
>> [Tue Nov  2 12:03:22 2004] [notice] Apache/1.3.31 (Debian GNU/Linux) 
>> mod_python/2.7.10 Python/2.3.4 mod_ruby/1.2.4 Ruby/1.8.2(2004-08-24) 
>> PHP/4.3.9-1 configured -- resuming normal operations
>> [Tue Nov  2 12:03:22 2004] [notice] Accept mutex: sysvsem (Default: 
>> sysvsem)
>> [Tue Nov  2 12:03:31 2004] [notice] mod_python: (Re)importing 
>> mod_python.publisher from None
>> [Tue Nov  2 12:03:31 2004] [notice] mod_python: (Re)importing test 
>> from ['/var/www/test']
>> So, I did get that line, but something else is apparently wrong.
>> Any ideas?  Thanks in advance.
>
> Congratulations! It works:
>
>  http://lambdacalcul.us/test/test.py/hello
>
> I forgot to give you the proper URL. :P
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

Mark Eret

"Yields falsehood when appended to its own quotation," yields falsehood 
when appended to its own quotation.

From list at joreybump.com  Tue Nov  2 19:06:11 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov  2 19:06:16 2004
Subject: [mod_python] mod_python problem
In-Reply-To: <8C342714-2D1F-11D9-B0A6-000D93340C0E@ucar.edu>
References: <B4296B76-2D18-11D9-B0A6-000D93340C0E@ucar.edu>	<41880875.5070505@joreybump.com>
	<8C342714-2D1F-11D9-B0A6-000D93340C0E@ucar.edu>
Message-ID: <418820F3.6040409@joreybump.com>

Mark Eret wrote:


> Quick question, is there a way for http://lambdacalcul.us/test/test.py 
> (without the method name on the end) to return a webpage?  

Not with Publisher. But you can write your own handler. Now that you 
know mod_python is working, you can try to get the mptest.py example to 
work again and start from there.

Personally, I find that Publisher does almost everything I need. 
Combined with mod_negotiation, you can turn on MultiViews and access 
your test function like this:

  http://lambdacalcul.us/test/test/hello

which is the same as:

  http://lambdacalcul.us/test/test.py/hello


From quinn at evilgeniusgames.com  Tue Nov  2 19:38:41 2004
From: quinn at evilgeniusgames.com (Quinn Buchanan)
Date: Tue Nov  2 19:38:46 2004
Subject: [mod_python] POST Data Problems
Message-ID: <41882891.8080402@evilgeniusgames.com>

Hi,
I am new to mod_python but it seems to be really nice to use, but an 
having a really frustrating problem.  I am writing a paypal notification 
handler in it and am running into some problems.  Here is what I need to 
do.  The paypal notification system will POST data to my script and in 
order to verify the order, I need to POST all the post data back to a 
specific URL at paypal with a var, cmd=_notify-validate, appended to the 
end of my POST request.  Thats it, pretty simple, except that I can not 
figure out how to get it to work.  And here is the problem that I am 
running into, the POST data has to be in exactly the same order as 
before.   When I use mod_python.publisher it places all of this data 
into a dictionary and the order is changed.  I have tried to follow a 
couple posts from various message boards on how to get the raw POST data 
string, but to no avail.  Can anyone please tell me how to get that 
information.
    TIA
       Quinn
From francois.lepoutre at noos.fr  Wed Nov  3 05:06:36 2004
From: francois.lepoutre at noos.fr (francois lepoutre)
Date: Wed Nov  3 04:57:06 2004
Subject: [mod_python] Is there a mod_python way into this
Message-ID: <000801c4c18c$d00ece70$1ac64151@mixio7jpsmlatx>

Hi all modpython users,

I have built and delivered a very useful mod_python
script in the past in the form a highly dynamic servlet,
delivering http strings "on the fly"

This mod_python thing has been running nicely for a 
couple of years with practically no admin. My renewed
thanks to Grisha for this marvellous piece of software.

I feel comfortable with the standard mod_python handler.
Now we have a new set of issues. And i really do 
not know if mod_python could be "the way to go".

Basically my client is looking for a way to deliver
static web content within the framework of 
mod_python. 

The whole thing would imply a way to trigger a
"server process" whenever a static resource 
(html only)  is requested.

The client insist that the html content
should be served "as is". So no translation 
mechanism (asp, php or psp...) should 
occur on the server.

The server process would have to:
- push the html content of the directory "as is",
- deliver or maintain "session" through http cookie,
- handle some real-time python-based logging 
    (dbms-based)

So, is there a plain way to handle leverage the with 
mod_python framework whilst delivering plain html? 
Should we use the standard handler in some way?
Any hint welcome.

Franck
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041103/22d3ebe7/attachment-0001.html
From grahamd at dscpl.com.au  Wed Nov  3 05:17:30 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov  3 05:17:35 2004
Subject: [mod_python] Is there a mod_python way into this
In-Reply-To: <000801c4c18c$d00ece70$1ac64151@mixio7jpsmlatx>
References: <000801c4c18c$d00ece70$1ac64151@mixio7jpsmlatx>
Message-ID: <918D6681-2D81-11D9-A0CB-000393DCF16E@dscpl.com.au>

On 03/11/2004, at 9:06 PM, francois lepoutre wrote:

> Hi all modpython users,
> ?
> I have built and delivered a very useful mod_python
> script in the past in the form a highly dynamic servlet,
> delivering?http strings "on the fly"
> ?
> This mod_python thing has been running nicely for a
>  couple of years  with practically no admin. My renewed
> thanks to Grisha for this marvellous piece of software.
> ?
> I feel comfortable with the standard mod_python handler.
> Now we have a new set of issues. And i really do
>  not know if mod_python?could be?"the way to go".
> ?
> Basically my client is looking for a way to deliver
> static?web content within the framework of
>  mod_python.


You might perhaps look at Vampire. Vampire makes it easy to mix static
files as well as dynamically generated data within the same directory
hierarchy.

For example, you might have a static index.html file but
in the same directory a dynamically generated file referenced using
the URL clients.html and which is generated entirely by code in a
content handler defined in the clients.py file. Alternatively, the
clients.html file could still exist, but be processed by code in the
clients.py file to fill in additional data.

Thus, you can have static files, files which are completely generated
by code, or static files which are processed by code on the fly to
generate a result.

You can find out more about Vampire at:

   http://www.dscpl.com.au/projects/vampire


--
Graham Dumpleton (grahamd@dscpl.com.au)

From smkeesle at syr.edu  Wed Nov  3 07:50:53 2004
From: smkeesle at syr.edu (Sean Keesler)
Date: Wed Nov  3 07:51:03 2004
Subject: [mod_python] Query Strings
Message-ID: <4188D42D.2060403@syr.edu>

Looking through the docs I can't find much about how to handle variables 
passed thought the url in a query string.  I did see that 
request.subprocess_env['QUERY_STRING'] returns the query string, but 
isn't their a library written to create a dictionary or assign variables 
values from the query string?  I saw reference to publisher's ability to 
do this, but I can't find it in the docs...

Here's what I am doing...

def text(req):
    req.content_type = "text/html"
    parseduri = req.subprocess_env['QUERY_STRING']
    req.write(repr(parseduri) + '<br>')
    pairlist = string.split(parseduri, '&')
    for pair in pairlist:
        k,v = string.split(pair, '=')
        if k == 'myvariable':
              myvariable = v
    req.write(myvariable)
From jubafre at atlas.ucpel.tche.br  Wed Nov  3 07:05:58 2004
From: jubafre at atlas.ucpel.tche.br (Juliano Freitas)
Date: Wed Nov  3 08:03:48 2004
Subject: [mod_python] Upload files to server?
Message-ID: <1099483557.8806.1.camel@swdb>

Hello!!!

How can i do a upload function to copy a local image files to a server??
can i do that using cgi??


Juliano Freitas

From rune.hansen at scanmine.com  Wed Nov  3 09:58:27 2004
From: rune.hansen at scanmine.com (Rune Hansen)
Date: Wed Nov  3 09:58:30 2004
Subject: [mod_python] Multiple calls to authenhandler()
Message-ID: <D172EB5F-2DA8-11D9-B8A5-000A956CC60E@scanmine.com>

Hi,
I get one call to authenthandler() when I access http://www.mysite.com/
I get two calls to authenthandler() when I access 
http://www.mysite.com/myHandler.py/search
and..
I get three(!) calls to authenthandler() when I access 
http://www.mysite.com/search.html, where search.html is an Apache 
Rewrite of myHandler.py/search.

Does anyone know how to avoid this?

My Apache directory directive is:
<VirtualHost *:80>
	ServerName www.myhost.com
	ServerAdmin root@host
	DocumentRoot /var/www/html/search
	.
</VirtualHost>
<Directory "/var/www/html/search">
	.
	RewriteEngine On
	RewriteBase /
	RewriteRule search.html "myHandler.py/search"
	DirectoryIndex myHandler.py
	AddHandler mod_python .py
	PythonHandler mod_python.publisher
	PythonAuthenHandler AuthentHandler
	AuthType Basic
	AuthName "Restricted Area"
	require valid-user
	PythonPath "sys.path+['...']"
	PythonDebug On
</Directory>

It will kill performance if I have to re-verify the user three times 
for each request. Sessions are, unfortunately, not an option.

Any suggestions will be most welcome :)

regards

/rune


"So as far as I'm concerned, SOAP is not XML, nor is it useful to even a
fraction of the degree to which it is destructive."
- Uche Ogbuji 

From gustavo.cordova at q-voz.com  Wed Nov  3 10:02:46 2004
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Wed Nov  3 09:59:15 2004
Subject: [mod_python] POST Data Problems
In-Reply-To: <41882891.8080402@evilgeniusgames.com>
References: <41882891.8080402@evilgeniusgames.com>
Message-ID: <4188F316.3020601@q-voz.com>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041103/8320545f/signature.bin
From list at joreybump.com  Wed Nov  3 10:40:45 2004
From: list at joreybump.com (Jorey Bump)
Date: Wed Nov  3 10:40:51 2004
Subject: [mod_python] Multiple calls to authenhandler()
In-Reply-To: <D172EB5F-2DA8-11D9-B8A5-000A956CC60E@scanmine.com>
References: <D172EB5F-2DA8-11D9-B8A5-000A956CC60E@scanmine.com>
Message-ID: <4188FBFD.3050502@joreybump.com>

Rune Hansen wrote:
> Hi,
> I get one call to authenthandler() when I access http://www.mysite.com/
> I get two calls to authenthandler() when I access 
> http://www.mysite.com/myHandler.py/search
> and..
> I get three(!) calls to authenthandler() when I access 
> http://www.mysite.com/search.html, where search.html is an Apache 
> Rewrite of myHandler.py/search.
> 
> Does anyone know how to avoid this?
> 
> My Apache directory directive is:
> <VirtualHost *:80>
>     ServerName www.myhost.com
>     ServerAdmin root@host
>     DocumentRoot /var/www/html/search
>     .
> </VirtualHost>
> <Directory "/var/www/html/search">
>     .
>     RewriteEngine On
>     RewriteBase /
>     RewriteRule search.html "myHandler.py/search"
>     DirectoryIndex myHandler.py
>     AddHandler mod_python .py
>     PythonHandler mod_python.publisher
>     PythonAuthenHandler AuthentHandler
>     AuthType Basic
>     AuthName "Restricted Area"
>     require valid-user
>     PythonPath "sys.path+['...']"
>     PythonDebug On
> </Directory>
> 
> It will kill performance if I have to re-verify the user three times for 
> each request. Sessions are, unfortunately, not an option.
> 
> Any suggestions will be most welcome :)

Are the results any different if you use this instead of a rewrite?

  Redirect /search.html http:/www.mysite.com/myHandler.py/search

From rune.hansen at scanmine.com  Wed Nov  3 11:50:32 2004
From: rune.hansen at scanmine.com (Rune Hansen)
Date: Wed Nov  3 11:50:38 2004
Subject: [mod_python] Multiple calls to authenhandler()
In-Reply-To: <4188FBFD.3050502@joreybump.com>
References: <D172EB5F-2DA8-11D9-B8A5-000A956CC60E@scanmine.com>
	<4188FBFD.3050502@joreybump.com>
Message-ID: <79F7C65C-2DB8-11D9-9241-000A956CC60E@scanmine.com>


On 3. nov 2004, at 16.40, Jorey Bump wrote:

> Rune Hansen wrote:
>> Hi,
>> I get one call to authenthandler() when I access 
>> http://www.mysite.com/
>> I get two calls to authenthandler() when I access 
>> http://www.mysite.com/myHandler.py/search
>> and..
>> I get three(!) calls to authenthandler() when I access 
>> http://www.mysite.com/search.html, where search.html is an Apache 
>> Rewrite of myHandler.py/search.
>> Does anyone know how to avoid this?
>> My Apache directory directive is:
>> <VirtualHost *:80>
>>     ServerName www.myhost.com
>>     ServerAdmin root@host
>>     DocumentRoot /var/www/html/search
>>     .
>> </VirtualHost>
>> <Directory "/var/www/html/search">
>>     .
>>     RewriteEngine On
>>     RewriteBase /
>>     RewriteRule search.html "myHandler.py/search"
>>     DirectoryIndex myHandler.py
>>     AddHandler mod_python .py
>>     PythonHandler mod_python.publisher
>>     PythonAuthenHandler AuthentHandler
>>     AuthType Basic
>>     AuthName "Restricted Area"
>>     require valid-user
>>     PythonPath "sys.path+['...']"
>>     PythonDebug On
>> </Directory>
>> It will kill performance if I have to re-verify the user three times 
>> for each request. Sessions are, unfortunately, not an option.
>> Any suggestions will be most welcome :)
>
> Are the results any different if you use this instead of a rewrite?
>
>  Redirect /search.html http:/www.mysite.com/myHandler.py/search
>
Hi Jorey,
It seems to work and although it "solves" the problem, it's not at all 
what I want(the client(s) accessing the service might not be able to 
respond to a 303).

There has to be a way to control how and when the authenthandler() is 
invoked...?

regards

/rune


"So as far as I'm concerned, SOAP is not XML, nor is it useful to even a
fraction of the degree to which it is destructive."
- Uche Ogbuji

From bje at apnic.net  Wed Nov  3 18:32:19 2004
From: bje at apnic.net (Byron Ellacott)
Date: Wed Nov  3 18:31:12 2004
Subject: [mod_python] Upload files to server?
In-Reply-To: <1099483557.8806.1.camel@swdb>
References: <1099483557.8806.1.camel@swdb>
Message-ID: <41896A83.60406@apnic.net>

Juliano Freitas wrote:
> How can i do a upload function to copy a local image files to a server??
> can i do that using cgi??

You need to have an appropriate form field on your page, with 
type="file".  You need to have that form submit using method="POST", 
since you cannot deliver a file's contents via GET.  You also need to 
set the form's enctype="multipart/form-data" to allow the file(s) to be 
encoded properly.  Example:

-----
<form action="upload.py" method="POST" enctype="multipart/form-data">
     File to upload: <input name="Image" type="file">
     <input type="submit" value="Go!">
</form>
-----

Then, you can have code to handle this:

from mod_python import apache, util

def handler(req):
     fs = util.FieldStorage(req)
     img = fs.getfirst('Image')
     print "Content-Type: text/plain\n\n"
     print "Filename: %s\n" % img.filename
     print "Content-Type: %s\n" % img.type
     data = img.value
     print "Content-Length: %s\n" % len(data)
     return apache.OK

-- 
bje
From rune.hansen at scanmine.com  Thu Nov  4 05:39:31 2004
From: rune.hansen at scanmine.com (Rune Hansen)
Date: Thu Nov  4 05:39:34 2004
Subject: [mod_python] Multiple calls to authenhandler()
In-Reply-To: <79F7C65C-2DB8-11D9-9241-000A956CC60E@scanmine.com>
References: <D172EB5F-2DA8-11D9-B8A5-000A956CC60E@scanmine.com>
	<4188FBFD.3050502@joreybump.com>
	<79F7C65C-2DB8-11D9-9241-000A956CC60E@scanmine.com>
Message-ID: <CF9E5BC5-2E4D-11D9-8AC9-000A956CC60E@scanmine.com>


On 3. nov 2004, at 17.50, Rune Hansen wrote:

>
> On 3. nov 2004, at 16.40, Jorey Bump wrote:
>
>> Rune Hansen wrote:
>>> Hi,
>>> I get one call to authenthandler() when I access 
>>> http://www.mysite.com/
>>> I get two calls to authenthandler() when I access 
>>> http://www.mysite.com/myHandler.py/search
>>> and..
>>> I get three(!) calls to authenthandler() when I access 
>>> http://www.mysite.com/search.html, where search.html is an Apache 
>>> Rewrite of myHandler.py/search.
>>> Does anyone know how to avoid this?
>>> My Apache directory directive is:
>>> <VirtualHost *:80>
>>>     ServerName www.myhost.com
>>>     ServerAdmin root@host
>>>     DocumentRoot /var/www/html/search
>>>     .
>>> </VirtualHost>
>>> <Directory "/var/www/html/search">
>>>     .
>>>     RewriteEngine On
>>>     RewriteBase /
>>>     RewriteRule search.html "myHandler.py/search"
>>>     DirectoryIndex myHandler.py
>>>     AddHandler mod_python .py
>>>     PythonHandler mod_python.publisher
>>>     PythonAuthenHandler AuthentHandler
>>>     AuthType Basic
>>>     AuthName "Restricted Area"
>>>     require valid-user
>>>     PythonPath "sys.path+['...']"
>>>     PythonDebug On
>>> </Directory>
>>> It will kill performance if I have to re-verify the user three times 
>>> for each request. Sessions are, unfortunately, not an option.
>>> Any suggestions will be most welcome :)
>>
>> Are the results any different if you use this instead of a rewrite?
>>
>>  Redirect /search.html http:/www.mysite.com/myHandler.py/search
>>
> Hi Jorey,
> It seems to work and although it "solves" the problem, it's not at all 
> what I want(the client(s) accessing the service might not be able to 
> respond to a 303).
>
> There has to be a way to control how and when the authenthandler() is 
> invoked...?
>
> regards
>
> /rune
>

[For clarity I've included the thread that led up to this ]

Problem:
For each URI path element a mod_python handler is invoked. This applies 
to PythonAuthenHandler, PythonHeaderParserHandler and so on.
For me, this is a problem. I would like to avoid re-verifying the user 
three times for each request, regardless of verification method.

So,
a) I've got a miss-configuration which results in multiple calls to 
handlers, it's a local error that can be corrected or,
b) This is expected behavior and that  there is a technique to avoid 
this or,
c) This is expected and, for reasons that escapes me, desired behavior.

I'd greatly appreciate any help and suggestion

regards

/rune


"So as far as I'm concerned, SOAP is not XML, nor is it useful to even a
fraction of the degree to which it is destructive."
- Uche Ogbuji

From list at joreybump.com  Thu Nov  4 07:07:18 2004
From: list at joreybump.com (Jorey Bump)
Date: Thu Nov  4 07:07:24 2004
Subject: [mod_python] Multiple calls to authenhandler()
In-Reply-To: <CF9E5BC5-2E4D-11D9-8AC9-000A956CC60E@scanmine.com>
References: <D172EB5F-2DA8-11D9-B8A5-000A956CC60E@scanmine.com>	<4188FBFD.3050502@joreybump.com>	<79F7C65C-2DB8-11D9-9241-000A956CC60E@scanmine.com>
	<CF9E5BC5-2E4D-11D9-8AC9-000A956CC60E@scanmine.com>
Message-ID: <418A1B76.7070403@joreybump.com>

Rune Hansen wrote:

>> There has to be a way to control how and when the authenthandler() is 
>> invoked...?

That function name you mention is incorrect. It must be authenhandler(). 
Perhaps that is the problem? For more details, see:

  http://www.modpython.org/live/current/doc-html/tut-what-it-do.html

> Problem:
> For each URI path element a mod_python handler is invoked. This applies 
> to PythonAuthenHandler, PythonHeaderParserHandler and so on.
> For me, this is a problem. I would like to avoid re-verifying the user 
> three times for each request, regardless of verification method.
> 
> So,
> a) I've got a miss-configuration which results in multiple calls to 
> handlers, it's a local error that can be corrected or,
> b) This is expected behavior and that  there is a technique to avoid 
> this or,
> c) This is expected and, for reasons that escapes me, desired behavior.
> 
> I'd greatly appreciate any help and suggestion

I don't use PythonAuthenHandler, but if you post the contents of your 
module, someone might be able to help.
From rune.hansen at scanmine.com  Thu Nov  4 09:51:06 2004
From: rune.hansen at scanmine.com (Rune Hansen)
Date: Thu Nov  4 09:51:10 2004
Subject: [mod_python] Multiple calls to authenhandler()
In-Reply-To: <418A1B76.7070403@joreybump.com>
References: <D172EB5F-2DA8-11D9-B8A5-000A956CC60E@scanmine.com>	<4188FBFD.3050502@joreybump.com>	<79F7C65C-2DB8-11D9-9241-000A956CC60E@scanmine.com>
	<CF9E5BC5-2E4D-11D9-8AC9-000A956CC60E@scanmine.com>
	<418A1B76.7070403@joreybump.com>
Message-ID: <F4A969E4-2E70-11D9-8AC9-000A956CC60E@scanmine.com>


On 4. nov 2004, at 13.07, Jorey Bump wrote:

> Rune Hansen wrote:
>
>>> There has to be a way to control how and when the authenthandler() 
>>> is invoked...?
>
> That function name you mention is incorrect. It must be 
> authenhandler(). Perhaps that is the problem? For more details, see:
>
>  http://www.modpython.org/live/current/doc-html/tut-what-it-do.html
>
>> Problem:
>> For each URI path element a mod_python handler is invoked. This 
>> applies to PythonAuthenHandler, PythonHeaderParserHandler and so on.
>> For me, this is a problem. I would like to avoid re-verifying the 
>> user three times for each request, regardless of verification method.
>> So,
>> a) I've got a miss-configuration which results in multiple calls to 
>> handlers, it's a local error that can be corrected or,
>> b) This is expected behavior and that  there is a technique to avoid 
>> this or,
>> c) This is expected and, for reasons that escapes me, desired 
>> behavior.
>> I'd greatly appreciate any help and suggestion
>
> I don't use PythonAuthenHandler, but if you post the contents of your 
> module, someone might be able to help.

Hi Jorey,
I do appreciate the help and tips you have given me. The 
"authenthandler()" was a typo - the handler in AuthenHandler.py is in 
fact "authenhandler()". Sorry about that.

I've posted a small subset of the files that I'm working on that 
produces the uhm.."error" (btw. my development platform is OS X Client 
10.3.5, Apache/2.0.51 - mod_python 3.1.3 - OS X provided Python2.3) :

httpd.conf:
"""
<VirtualHost *:80>
	ServerName lucene.moonspawn.scanmine.com
	ServerAdmin rune.hansen@scanmine.com
	DocumentRoot /Users/roderik/Sites/Lucene
	ErrorLog logs/lucene_error.log
	CustomLog logs/lucene_access.log common
</VirtualHost>
<Directory "/Users/roderik/Sites/Lucene">
	Options Indexes FollowSymLinks
         AllowOverride None
         Order allow,deny
         Allow from all
         RewriteEngine On
         RewriteBase /
         RewriteRule search.html "SearchHandler.py/search"
	AddHandler mod_python .py
         DirectoryIndex SearchHandler.py
	PythonHandler mod_python.publisher
         PythonAuthenHandler AuthenHandler
         AuthType Basic
         AuthName "Restricted Area"
         require valid-user	
         PythonPath "sys.path+['/Users/roderik/Sites/Lucene']"
	PythonDebug On
</Directory>
"""

AuthenHandler.py
"""
from mod_python import apache

count=0

def authenhandler(req,**args):
     global count

     count +=1
     req.write("AuthenHandler::authenhandler called: "+str(count)+"\n")

     pw = req.get_basic_auth_pw()
     user = req.user

     if user == "mrX" and pw == "1234":
         return apache.OK
     else:
         return apache.HTTP_UNAUTHORIZED
"""

SearchHandler.py
"""
from mod_python import apache

def index(req,**args):
     req.content_type = "text/html"
     req.write("<html><head><title>Search Index 
Page</title><head><body>## 'index' got called once</body></html>")

def search(req,**args):
     req.content_type = "text/html"
     req.write("<html><head><title>Search /search 
Page</title><head><body>## '/search' got called once</body></html>")
"""

Result of:
1) http://lucene.moonspawn.scanmine.com/ =>
	AuthenHandler::authenhandler called: 1
	## 'index' got called once

2) http://lucene.moonspawn.scanmine.com/SearchHandler.py/search =>
	AuthenHandler::authenhandler called: 1
	AuthenHandler::authenhandler called: 2
	## '/search' got called once

3) http://lucene.moonspawn.scanmine.com/search.html => (using 
mod_rewrite)
	AuthenHandler::authenhandler called: 1
	AuthenHandler::authenhandler called: 2
	AuthenHandler::authenhandler called: 3
	## '/search' got called once

regards
/rune


"So as far as I'm concerned, SOAP is not XML, nor is it useful to even a
fraction of the degree to which it is destructive."
- Uche Ogbuji

From JFeghhi at visa.com  Thu Nov  4 09:54:09 2004
From: JFeghhi at visa.com (Feghhi, Jalil)
Date: Thu Nov  4 09:54:43 2004
Subject: [mod_python] Utils.redirect
Message-ID: <8C53AAFA2050EE40BDCDB9455DA7D6340121C815@sw720ex020.visa.com>

It seems when we use utils.redirect method a new session is created. Why this is happening exactly? Any way to prevent this?

Regards,

-jalil

From l.trejtnar at open.ac.uk  Thu Nov  4 12:47:32 2004
From: l.trejtnar at open.ac.uk (Lukas Trejtnar)
Date: Thu Nov  4 12:47:41 2004
Subject: [mod_python] Access to Request Object from CGI Script
Message-ID: <418A6B34.8070203@open.ac.uk>

Hi

I'm currently migrating existing CGI code to mod_python where I use 
cgihandler for handling the existing code meanwhile. Prior calling any 
CGI script, I do an authorisation step, where some data is saved into an 
request object.

How can I access the request object from within my existing CGI scripts?

Best Regards,
Lukas Trejtnar
From Almad at Include.cz  Thu Nov  4 17:19:58 2004
From: Almad at Include.cz (Lukas Linhart)
Date: Thu Nov  4 17:20:20 2004
Subject: [mod_python] script seems to run under root dir instead of
	actual-script dir
Message-ID: <200411042320.08086.Almad@Include.cz>

Hello, 

I run this script with mod_python.publisher: 

from mod_python import apache
import os

def index(req):
 for soubor in os.listdir(os.curdir):
  req.write(soubor)
  req.write("\n")

Well, output is same as 
ls / 
:-/

I have following VirtualHost configuration: 

<VirtualHost almad.nerv:80>
    DocumentRoot /var/www/webroot/almad.net
    ServerName almad.nerv
    AddHandler mod_python .py
    SetHandler mod_python
    PythonHandler mod_python.publisher
    PythonDebug On
</VirtualHost>


What can I do for "chrooting" to mod_python's script actual directory? 

Thank You for hints, 

-- 

Lukas "Almad" Linhart

[:: http://www.Include.cz/ ::]
[:: Including Your wishes ::]
[:: Almad@Include.cz ::]
[:: PGP/GNUPg key: http://download.almad.net/pubkey.asc ::]
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 190 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041104/551b5f6d/attachment.bin
From gnb at itga.com.au  Thu Nov  4 18:13:08 2004
From: gnb at itga.com.au (Gregory Bond)
Date: Thu Nov  4 18:13:17 2004
Subject: [mod_python] script seems to run under root dir instead
	of	actual-script dir
In-Reply-To: <200411042320.08086.Almad@Include.cz>
References: <200411042320.08086.Almad@Include.cz>
Message-ID: <418AB784.4030201@itga.com.au>

The FAQ mentions this (admittedly not easy to find!)

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.005.htp
http://www.modpython.org/FAQ/faqw.py?req=show&file=faq03.006.htp
From robert at worksofmagic.com  Thu Nov  4 19:51:06 2004
From: robert at worksofmagic.com (Robert Geller)
Date: Thu Nov  4 19:51:08 2004
Subject: [mod_python] The referer environment variable
Message-ID: <002601c4c2d1$8858a240$1e02a8c0@leet>

Hello --
 
Am I just stupid or is mod_python missing a referer member for the
req(uest) object??? I can't seem to get the referer of a client!!! And,
of course, importing the cgi module doesn't work.
 
 
Any clues?
 

Robert Geller

robert@worksofmagic.com

 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041104/2fd4779a/attachment.html
From johna at johnaherne.co.uk  Fri Nov  5 02:18:05 2004
From: johna at johnaherne.co.uk (John Aherne)
Date: Fri Nov  5 02:22:07 2004
Subject: [mod_python] cookies and redirects
Message-ID: <418B292D.4020909@johnaherne.co.uk>

John Aherne wrote:

> Byron Ellacott wrote:
>
>>     req.err_headers_out.add('Set-Cookie', check)
>
> It looks like redirect is not a good option if you want to use 
> cookies. I'll have to take a look at doing it some other way.


External redirect, particularly a 307 redirect for HTTP/1.1 clients, is 
generally the best way to handle changing a location in response to a 
request.  Using a 307 means the client's back button works right, reload 
works right, and the URL location bar works right.

If you're doing a redirect, and you want to keep your cookies, you can 
always use the line I showed above to save them into 
req.err_headers_out, which should solve the problem.

-- 

Byron

Thanks for the extra information.

I tried your suggestion and it does the trick.

I haven't worked out how to do a 307 yet, but hopefully I'll find this 
out over the next few days.

I may be naive or missing the point but:--

I have a script in PHP that I run against the same process. When I do a 
redirect in PHP it has no problems doing the redirect and saving the 
cookie. I assume it must by default put the cookie into the error 
handler to apache. I assume it must think this ought to be the default 
behaviour required.

Naturally, since your post I have now found endless discussion on this 
very subject in the mail archives. God knows how I missed these when 
trawling through them before.

John Aherne
From gustavo.cordova at q-voz.com  Fri Nov  5 09:22:40 2004
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri Nov  5 09:19:00 2004
Subject: [mod_python] The referer environment variable
In-Reply-To: <002601c4c2d1$8858a240$1e02a8c0@leet>
References: <002601c4c2d1$8858a240$1e02a8c0@leet>
Message-ID: <418B8CB0.8070804@q-voz.com>

Skipped content of type multipart/mixed-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041105/fe14e69b/signature.bin
From reitz at inworks.de  Fri Nov  5 11:01:56 2004
From: reitz at inworks.de (Andre Reitz)
Date: Fri Nov  5 10:00:17 2004
Subject: [mod_python] TEST
Message-ID: <418BA3F4.8010205@inworks.de>


From nick at dd.revealed.net  Fri Nov  5 10:50:19 2004
From: nick at dd.revealed.net (Nick)
Date: Fri Nov  5 10:50:39 2004
Subject: [mod_python] The referer environment variable
In-Reply-To: <418B8CB0.8070804@q-voz.com>
References: <002601c4c2d1$8858a240$1e02a8c0@leet> <418B8CB0.8070804@q-voz.com>
Message-ID: <418BA13B.3080500@dd.revealed.net>

Gustavo C?rdova Avila wrote:
> Robert Geller wrote:
> 
>> Am I just stupid or is mod_python missing a referer member for the
>> req(uest) object??? I can't seem to get the referer of a client!!! And,
>> of course, importing the cgi module doesn't work.
>>
> Check out:
> 
>    request.headers_in["referer"]
> 

You can also get the HTTP_REFERER CGI variable in the request.subprocess_env 
after a call to request.add_common_vars()

Nick
From mike_mp at zzzcomputing.com  Fri Nov  5 11:31:26 2004
From: mike_mp at zzzcomputing.com (mike bayer)
Date: Fri Nov  5 11:31:28 2004
Subject: [mod_python] cookies and redirects
In-Reply-To: <418B292D.4020909@johnaherne.co.uk>
References: <418B292D.4020909@johnaherne.co.uk>
Message-ID: <18579.66.192.34.8.1099672286.squirrel@66.192.34.8>

> John Aherne wrote:
> External redirect, particularly a 307 redirect for HTTP/1.1 clients, is
> generally the best way to handle changing a location in response to a
> request.  Using a 307 means the client's back button works right, reload
> works right, and the URL location bar works right.
>

I have never seen a 307 redirect used before, so I will admit my ignorance
of it as well as its usablity.  But big sites like Yahoo! etc. use "302
Found" combined with the Location: header (I just double checked) to send
the client elsewhere, as does the "Redirect" directive in Apache.

Which is not to say the 307 is not a better way, but is it very well
supported and predictable across all browsers ?

If you really want a seamless redirect with zero side effects, an internal
redirect, i.e. an server-side change of output within the scope of one
request, is best, if your application can support them.

Also, an external redirect is often used specifically to prevent reloads
and back button usage, as in the case of an ecommerce submit form that you
dont want submitted a second time by accident.

I tend to use external redirects only for that reason, i.e. to prevent
form reloads, and otherwise internal redirects for everything else, which
are particularly useful since you can more easily preserve the request
state among the original and redirected pages.

- mike

From johna at johnaherne.co.uk  Sat Nov  6 04:28:35 2004
From: johna at johnaherne.co.uk (John Aherne)
Date: Sat Nov  6 04:32:15 2004
Subject: [mod_python] cookies and redirects
In-Reply-To: <18579.66.192.34.8.1099672286.squirrel@66.192.34.8>
References: <418B292D.4020909@johnaherne.co.uk>
	<18579.66.192.34.8.1099672286.squirrel@66.192.34.8>
Message-ID: <418C9943.7040604@johnaherne.co.uk>

mike bayer wrote:

>>John Aherne wrote:
>>External redirect, particularly a 307 redirect for HTTP/1.1 clients, is
>>generally the best way to handle changing a location in response to a
>>request.  Using a 307 means the client's back button works right, reload
>>works right, and the URL location bar works right.
>>
>>    
>>
>
>I have never seen a 307 redirect used before, so I will admit my ignorance
>of it as well as its usablity.  But big sites like Yahoo! etc. use "302
>Found" combined with the Location: header (I just double checked) to send
>the client elsewhere, as does the "Redirect" directive in Apache.
>
>Which is not to say the 307 is not a better way, but is it very well
>supported and predictable across all browsers ?
>
>If you really want a seamless redirect with zero side effects, an internal
>redirect, i.e. an server-side change of output within the scope of one
>request, is best, if your application can support them.
>
>Also, an external redirect is often used specifically to prevent reloads
>and back button usage, as in the case of an ecommerce submit form that you
>dont want submitted a second time by accident.
>
>I tend to use external redirects only for that reason, i.e. to prevent
>form reloads, and otherwise internal redirects for everything else, which
>are particularly useful since you can more easily preserve the request
>state among the original and redirected pages.
>
>- mike
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>  
>
Am I mistaken. But I thought I needed to do an external rediect to get 
back the cookie I had just set from the browser.

I assumed that an internal redirect would not do this.

John Aherne


From mike_mp at zzzcomputing.com  Sat Nov  6 11:11:03 2004
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Sat Nov  6 11:11:09 2004
Subject: [mod_python] cookies and redirects
In-Reply-To: <418C9943.7040604@johnaherne.co.uk>
References: <418B292D.4020909@johnaherne.co.uk>
	<18579.66.192.34.8.1099672286.squirrel@66.192.34.8>
	<418C9943.7040604@johnaherne.co.uk>
Message-ID: <7508E5F7-300E-11D9-8A30-000A95DA37D6@zzzcomputing.com>


an internal redirect is within the context of a single request; apache 
hasnt closed the original connection or anything.  If you want to see a 
cookie you just set, its still there in the response headers you set 
up...just pull it out again !

but i guess you are looking to see that the browser successfully 
accepted the cookie by seeing if it comes back again.  in that case you 
have to use an external redirect of some kind, yes.



On Nov 6, 2004, at 4:28 AM, John Aherne wrote:

> mike bayer wrote:
>
>>> John Aherne wrote:
>>> External redirect, particularly a 307 redirect for HTTP/1.1 clients, 
>>> is
>>> generally the best way to handle changing a location in response to a
>>> request.  Using a 307 means the client's back button works right, 
>>> reload
>>> works right, and the URL location bar works right.
>>>
>>>
>>
>> I have never seen a 307 redirect used before, so I will admit my 
>> ignorance
>> of it as well as its usablity.  But big sites like Yahoo! etc. use 
>> "302
>> Found" combined with the Location: header (I just double checked) to 
>> send
>> the client elsewhere, as does the "Redirect" directive in Apache.
>>
>> Which is not to say the 307 is not a better way, but is it very well
>> supported and predictable across all browsers ?
>>
>> If you really want a seamless redirect with zero side effects, an 
>> internal
>> redirect, i.e. an server-side change of output within the scope of one
>> request, is best, if your application can support them.
>>
>> Also, an external redirect is often used specifically to prevent 
>> reloads
>> and back button usage, as in the case of an ecommerce submit form 
>> that you
>> dont want submitted a second time by accident.
>>
>> I tend to use external redirects only for that reason, i.e. to prevent
>> form reloads, and otherwise internal redirects for everything else, 
>> which
>> are particularly useful since you can more easily preserve the request
>> state among the original and redirected pages.
>>
>> - mike
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> Am I mistaken. But I thought I needed to do an external rediect to get 
> back the cookie I had just set from the browser.
>
> I assumed that an internal redirect would not do this.
>
> John Aherne
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From dagurp at heimsnet.is  Sat Nov  6 17:12:57 2004
From: dagurp at heimsnet.is (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Sat Nov  6 16:54:02 2004
Subject: [mod_python] Joining template objects
Message-ID: <418D4C69.10701@heimsnet.is>

I have a complete beginners question for you.
Here's a stupid example but I hope it explains what I'm trying to do. 
Let's say I have this template

people.html

|<h2>
   Here is a list of people
   <%= people %>
</h2>|

Then there's another template:

person.html

|<p>
   Name: <%= name %>
   Occupation: <%= job %>
   Email <%= email %>
</p>|

Now let's say I want to use person.html on a list of several people and 
I use psp.PSP() to do it.
How can I join the objects together and put them into the single 
'people' varible for the outer 'people.html' template so I get this?


|<h2>
   Here is a list of people
   |
|<p>
   Name: John
   Occupation: programmer
   Email john@microsoft.com
</p>||

||<p>
   Name: Steven
   Occupation: Student
   Email steven@fbi.com
</p>

..etc

||</h2>

|






From robert at worksofmagic.com  Sun Nov  7 22:50:57 2004
From: robert at worksofmagic.com (Robert Geller)
Date: Sun Nov  7 22:50:58 2004
Subject: [mod_python] Very frustrating problem... MySQL UPDATE syntax
Message-ID: <005001c4c546$27fab1a0$1e02a8c0@leet>

Hello.
 
This is extremely weird. All my select statements work perfectly fine
using 'userid', which is the value of a MarshalCookie decoded, as means
to reference a specific row (entry) in the table.
However, when using 'UPDATE' and trying to use %s with the variable
'userid', it just doesn't WORK! I have been spending hours on this
tonight, so I finally decided to post on the mailing list with hopes
someone would be able to help.
 
                cookie = Cookie.get_cookies(req, Cookie.MarshalCookie,
secret='rob3')
                if cookie.has_key('userid'):
                        uidcookie = cookie['userid']
                        userid = uidcookie.value
                fs = util.FieldStorage(req)
                name = fs.getfirst("name")
                email = fs.getfirst("email")
                db_connect.db_query_update("UPDATE users SET fname='%s',
email='%s' WHERE id = '%s'" % (name, email, id))

First I get the signed MarshalCookie. I assign the value of the 'userid'
cookie to 'userid'. Then I use fieldstorage to get the variables in
POST, and I am simply trying to update the corresponding user's row with
his updated information. (This is a profile/information page for my
application)
 
db_query_update is a function in another module, db_connect, which I use
to execute queries. It looks like this:
 
def db_query_update(query):
        db = MySQLdb.connect(user='root', host='localhost',
db='imagehost')
        c = db.cursor()
        c.execute(query)
        c.close()
        db.close()
 
 
 
It just won't execute the query properly! Strangely, select statements
further down work FINE, such as:
 
username = db_connect.db_query_select("SELECT username FROM users WHERE
id = %s" % userid)
 
db_query_select looks like:
 
def db_query_select(query):
        db = MySQLdb.connect(user='root', passwd='tux5098nyu',
host='localhost', db='imagehost')
        c = db.cursor()
        c.execute(query)
        results = c.fetchone()
        c.close()
        db.close()
        return results[0]
 
 
Oddly, If I manually put in an arbitrary existing value for id, such as
26, it works perfectly fine...
 
You probably won't understand the context of my code, but here is the
entire editprofile function:
 
def editprofile(req):
        sess = Session.Session(req, secret='s3kr3t')
        sess.load()
        if sess.is_new():
                sess.delete()
                util.redirect(req, '/login')
        if not req.method == "POST":
                userid = getIDCookie(req)
                reload(profile)
                reload(db_connect)
                form = profile.FORM
                username = db_connect.db_query_select("SELECT username
FROM users WHERE id = %s" % userid)
                email = db_connect.db_query_select("SELECT email FROM
users WHERE id = %s" % userid)
                password = db_connect.db_query_select("SELECT password
FROM users WHERE id = %s" % userid)
                fname = db_connect.db_query_select("SELECT fname FROM
users WHERE id = %s" % userid)
                premium_query = db_connect.db_query_select("SELECT
premium FROM users WHERE id = %s" % userid)
                if premium_query == "no":
                        premium = "No. <a href='/premium'>Click here</a>
to become a premium member!"
                else:
                        premium = "Yes!"
                msg = ""
                req.write(form % locals())
        else:
                reload(profile)
                reload(db_connect)
                cookie = Cookie.get_cookies(req, Cookie.MarshalCookie,
secret='rob3')
                if cookie.has_key('userid'):
                         uidcookie = cookie['userid']
                        userid = uidcookie.value
                form = profile.FORM
                fs = util.FieldStorage(req)
                name = fs.getfirst("name")
                email = fs.getfirst("email")
                db_connect.db_query_update("UPDATE users SET fname='%s',
email='%s' WHERE id = '%s'" % (name, email, id))
                # db_connect.db_query_update("INSERT INTO users (id,
fname, email) VALUES (%s, '%s', '%s')" % (userid, name, email))
                form = profile.FORM
                username = db_connect.db_query_select("SELECT username
FROM users WHERE id = %s" % userid)
                email = db_connect.db_query_select("SELECT email FROM
users WHERE id = %s" % userid)
                password = db_connect.db_query_select("SELECT password
FROM users WHERE id = %s" % userid)
                fname = db_connect.db_query_select("SELECT fname FROM
users WHERE id = %s" % userid)
                premium_query = db_connect.db_query_select("SELECT
premium FROM users WHERE id = %s" % userid)
                if premium_query == "no":
                        premium = "No. <a href='/premium'>Click here</a>
to become a premium member!"
                else:
                        premium = "Yes!"
                msg = "<b><center>Your information has been
changed!</center></b>"
                req.write(form % locals())

What do you guys think?
 
Thanks a lot in advance, this problem is really buggin' me!

 

Robert Geller

robert@worksofmagic.com

 

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041107/d9daf4f8/attachment.html
From fumanchu at amor.org  Mon Nov  8 00:34:50 2004
From: fumanchu at amor.org (Robert Brewer)
Date: Mon Nov  8 00:36:11 2004
Subject: [mod_python] Very frustrating problem... MySQL UPDATE syntax
Message-ID: <3A81C87DC164034AA4E2DDFE11D258E3245188@exchange.hqamor.amorhq.net>

Robert Geller wrote:
> db_connect.db_query_update("UPDATE users SET fname='%s',
> email='%s' WHERE id = '%s'" % (name, email, id))

First guess: where does this "id" value come from and why is it in
single quotes when none of the others are?


Robert Brewer
MIS
Amor Ministries
fumanchu@amor.org

From dagurp at heimsnet.is  Mon Nov  8 05:53:25 2004
From: dagurp at heimsnet.is (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Mon Nov  8 05:50:18 2004
Subject: [mod_python] Joining template objects
In-Reply-To: <20041107185423.GB8628@fincos.homeip.net>
References: <418D4C69.10701@heimsnet.is>
	<20041107185423.GB8628@fincos.homeip.net>
Message-ID: <418F5025.3020906@heimsnet.is>

I tried that but I get:

TypeError: cannot concatenate 'str' and 'instance' objects


Daniele Cruciani wrote:

> Hi,
>
> simply bottom-up way:
>
> people=''
> for p in peopledict:
>     # call psp.PSP for each person
>     dic={'name':p['name'],....}
>     people=people+ psp.PSP(req,'person.html',vars=dic)
>
> dic={'people':people}
> yourpage=psp.PSP(req,'people.html',vars=dic)
>
> and return it, or you can do it inside the people template or make a
> function which return parsed person-s, called people a call it from
> people.html template
>
> Daniele.
>
> On Sat, Nov 06, 2004 at 10:12:57PM +0000, Dagur P?ll Ammendrup wrote:
>  
>
>> I have a complete beginners question for you.
>> Here's a stupid example but I hope it explains what I'm trying to do. 
>> Let's say I have this template
>>
>> people.html
>>
>> |<h2>
>>  Here is a list of people
>>  <%= people %>
>> </h2>|
>>
>> Then there's another template:
>>
>> person.html
>>
>> |<p>
>>  Name: <%= name %>
>>  Occupation: <%= job %>
>>  Email <%= email %>
>> </p>|
>>
>> Now let's say I want to use person.html on a list of several people 
>> and I use psp.PSP() to do it.
>> How can I join the objects together and put them into the single 
>> 'people' varible for the outer 'people.html' template so I get this?
>>
>>
>> |<h2>
>>  Here is a list of people
>>  |
>> |<p>
>>  Name: John
>>  Occupation: programmer
>>  Email john@microsoft.com
>> </p>||
>>
>> ||<p>
>>  Name: Steven
>>  Occupation: Student
>>  Email steven@fbi.com
>> </p>
>>
>> ..etc
>>
>> ||</h2>
>>
>> |
>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>   
>
>
>  
>

From terry.macdonald at dsl.pipex.com  Mon Nov  8 06:32:24 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Mon Nov  8 06:32:29 2004
Subject: [mod_python] Very frustrating problem... MySQL UPDATE syntax
In-Reply-To: <005001c4c546$27fab1a0$1e02a8c0@leet>
References: <005001c4c546$27fab1a0$1e02a8c0@leet>
Message-ID: <1099913544.5689.6.camel@bigmac.taumu.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: rule-blue-right.png
Type: image/png
Size: 207 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041108/29a193b5/rule-blue-right-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: transparent.png
Type: image/png
Size: 144 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041108/29a193b5/transparent-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rule-blue-center.png
Type: image/png
Size: 160 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041108/29a193b5/rule-blue-center-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rule-blue-left.png
Type: image/png
Size: 207 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041108/29a193b5/rule-blue-left-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smiley-3.png
Type: image/png
Size: 819 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041108/29a193b5/smiley-3-0001.png
From eric at ericwalstad.com  Mon Nov  8 11:12:54 2004
From: eric at ericwalstad.com (Eric Walstad)
Date: Mon Nov  8 11:12:58 2004
Subject: [mod_python] Very frustrating problem... MySQL UPDATE syntax
In-Reply-To: <005001c4c546$27fab1a0$1e02a8c0@leet>
References: <005001c4c546$27fab1a0$1e02a8c0@leet>
Message-ID: <200411080812.55954.eric@ericwalstad.com>

On Sunday 07 November 2004 07:50 pm, Robert Geller wrote:
> Hello.
[...]
> However, when using 'UPDATE' and trying to use %s with the variable
> 'userid', it just doesn't WORK!
[...]
Have you had a look at the actual SQL statement being sent to MySQL?  
Perhaps it's not what you expect.

Good luck,

Eric.
From bert at tela.com  Mon Nov  8 11:14:29 2004
From: bert at tela.com (berth)
Date: Mon Nov  8 11:14:32 2004
Subject: [mod_python] R.Geller: Frustrating problem
Message-ID: <20041108161206.M76019@tela.com>



--
Are you getting an error message?  I don't see a "commit()" in there, just
before the db.close(), insert a db.commit().
 
Bert Hughes



>>>>>>>>>>>>>>>>>>>>>>


Hello.
 
This is extremely weird. All my select statements work perfectly fine using
'userid', which is the value of a MarshalCookie decoded, as means to reference
a specific row (entry) in the table.
However, when using 'UPDATE' and trying to use %s with the variable 'userid',
it just doesn't WORK! I have been spending hours on this tonight, so I finally
decided to post on the mailing list with hopes someone would be able to help.
 
                cookie = Cookie.get_cookies(req, Cookie.MarshalCookie,
secret='rob3')
                if cookie.has_key('userid'):
                        uidcookie = cookie['userid']
                        userid = uidcookie.value
                fs = util.FieldStorage(req)
                name = fs.getfirst("name")
                email = fs.getfirst("email")
                db_connect.db_query_update("UPDATE users SET fname='%s',
email='%s' WHERE id = '%s'" % (name, email, id))

First I get the signed MarshalCookie. I assign the value of the 'userid'
cookie to 'userid'. Then I use fieldstorage to get the variables in POST, and
I am simply trying to update the corresponding user's row with his updated
information. (This is a profile/information page for my application)
 
db_query_update is a function in another module, db_connect, which I use to
execute queries. It looks like this:
 
def db_query_update(query):
        db = MySQLdb.connect(user='root', host='localhost', db='imagehost')
        c = db.cursor()
        c.execute(query)
        c.close()
        db.close()
 
 
 
It just won't execute the query properly! Strangely, select statements further
down work FINE, such as:
 
username = db_connect.db_query_select("SELECT username FROM users WHERE id =
%s" % userid)
 
db_query_select looks like:
 
def db_query_select(query):
        db = MySQLdb.connect(user='root', passwd='tux5098nyu',
host='localhost', db='imagehost')
        c = db.cursor()
        c.execute(query)
        results = c.fetchone()
        c.close()
        db.close()
        return results[0]
 
 
Oddly, If I manually put in an arbitrary existing value for id, such as 26, it
works perfectly fine...
 
You probably won't understand the context of my code, but here is the entire
editprofile function:
 
def editprofile(req):
        sess = Session.Session(req, secret='s3kr3t')
        sess.load()
        if sess.is_new():
                sess.delete()
                util.redirect(req, '/login')
        if not req.method == "POST":
                userid = getIDCookie(req)
                reload(profile)
                reload(db_connect)
                form = profile.FORM
                username = db_connect.db_query_select("SELECT username FROM
users WHERE id = %s" % userid)
                email = db_connect.db_query_select("SELECT email FROM users
WHERE id = %s" % userid)
                password = db_connect.db_query_select("SELECT password FROM
users WHERE id = %s" % userid)
                fname = db_connect.db_query_select("SELECT fname FROM users
WHERE id = %s" % userid)
                premium_query = db_connect.db_query_select("SELECT premium
FROM users WHERE id = %s" % userid)
                if premium_query == "no":
                        premium = "No. <a href='/premium'>Click here</a> to
become a premium member!"
                else:
                        premium = "Yes!"
                msg = ""
                req.write(form % locals())
        else:
                reload(profile)
                reload(db_connect)
                cookie = Cookie.get_cookies(req, Cookie.MarshalCookie,
secret='rob3')
                if cookie.has_key('userid'):
                         uidcookie = cookie['userid']
                        userid = uidcookie.value
                form = profile.FORM
                fs = util.FieldStorage(req)
                name = fs.getfirst("name")
                email = fs.getfirst("email")
                db_connect.db_query_update("UPDATE users SET fname='%s',
email='%s' WHERE id = '%s'" % (name, email, id))
                # db_connect.db_query_update("INSERT INTO users (id, fname,
email) VALUES (%s, '%s', '%s')" % (userid, name, email))
                form = profile.FORM
                username = db_connect.db_query_select("SELECT username FROM
users WHERE id = %s" % userid)
                email = db_connect.db_query_select("SELECT email FROM users
WHERE id = %s" % userid)
                password = db_connect.db_query_select("SELECT password FROM
users WHERE id = %s" % userid)
                fname = db_connect.db_query_select("SELECT fname FROM users
WHERE id = %s" % userid)
                premium_query = db_connect.db_query_select("SELECT premium
FROM users WHERE id = %s" % userid)
                if premium_query == "no":
                        premium = "No. <a href='/premium'>Click here</a> to
become a premium member!"
                else:
                        premium = "Yes!"
                msg = "<b><center>Your information has been changed!</center></b>"
                req.write(form % locals())

What do you guys think?
 
Thanks a lot in advance, this problem is really buggin' me!


 
Robert Geller

robert@worksofmagic.com

 


From gah at research.att.com  Mon Nov  8 12:16:42 2004
From: gah at research.att.com (Glenn Hochberg)
Date: Mon Nov  8 12:19:06 2004
Subject: [mod_python] Very frustrating problem... MySQL UPDATE syntax
In-Reply-To: <200411081132.iA8BWeoE032411@modpython.org>
References: <200411081132.iA8BWeoE032411@modpython.org>
Message-ID: <F5B645BA-31A9-11D9-B5E2-000D93C1F0D2@research.att.com>

Perhaps this was just a mis-swipe in the email, but it looks like 
there's no passwd specified for db_query_update().

If that's not it, you might want to try adding a "c.fetchall()" after 
the "c.execute(query)"--perhaps the update is terminating because 
you're not reading back the result.

	-Glenn Hochberg

On Nov 8, 2004, at 6:32 AM, mod_python-request@modpython.org wrote:

> def db_query_update(query):
>         db = MySQLdb.connect(user='root', host='localhost',
> db='imagehost')
>         c = db.cursor()
>         c.execute(query)
>         c.close()
>         db.close()

From gustavo.cordova at q-voz.com  Mon Nov  8 12:56:18 2004
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Mon Nov  8 12:52:13 2004
Subject: [mod_python] The referer environment variable
In-Reply-To: <E1CRClz-0007kg-6c@host227.ipowerweb.com>
References: <E1CRClz-0007kg-6c@host227.ipowerweb.com>
Message-ID: <418FB342.9090403@q-voz.com>

Robert Geller wrote:

>Whoops! Sorry about that, I use Outlook, the client of death. :D
>
>How does mod python realize that Q, in your case, is the request object 
>though? That's what confuses me.
>
>All this you have said is new to me, and I've definitely learned a lot!
>
>I can't quite figure out what that example does though. ;-)
>  
>
Ewww, client of death indeed  ;-)

mod_python simply puts the apache request object into the first
argument to the handler function, it's name is of no matter,
so I can call it "Q" with absolute impunity; I could call it
"req" or "request", or "Mr_X", since mod_python doesn't care
about it's name, only that it's the handler's first argument.

This handler is very simple:

1. Get list of attributes in request object ("dir(Q)").
2. Iterate through that list with variable "k".
3. For each attribute name:
    3a. Get attribute's value ("v = getattr(Q,k)")
    3b. Print it's name, type, and depending on it's
        type, an external representation (or a blank).

And done.  I did omit a "return apache.OK" at the end
though, you'll have to fill in the blanks.

hth!
-- 
Gustavo C?rdova Avila <gustavo.cordova@q-voz.com> 
<mailto:gustavo.cordova@q-voz.com>
*Tel:* +52 (81) 8130-1919 ext. 127
Integraciones del Norte, S.A. de C.V.
Padua #6047, Colonia Sat?lite Acueducto
Monterrey, Nuevo Le?n, M?xico.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041108/43d6dcd5/signature.bin
From dagurp at heimsnet.is  Mon Nov  8 13:29:15 2004
From: dagurp at heimsnet.is (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Mon Nov  8 13:19:30 2004
Subject: [mod_python] Joining template objects
In-Reply-To: <20041108163051.GB11339@fincos.homeip.net>
References: <418D4C69.10701@heimsnet.is>
	<20041107185423.GB8628@fincos.homeip.net>
	<418EA302.2020805@heimsnet.is>
	<20041108163051.GB11339@fincos.homeip.net>
Message-ID: <418FBAFB.2070309@heimsnet.is>

I ended up doing that too. Thanks though :-)



Daniele Cruciani wrote:

>Yes, because I was wrong, sorry.
>
>try in other way. (put the code in template)
>
>Sorry, I am new to modpython, what I propose to you is what I want to
>make myself. Right now I have used a dirty way:
>
><%
>for i in range(int(begin),min(int(begin)+ncom,last+1)):
>    out="""
><tr>
><td>
><span style="font-size: 13px;font-family:courier;text-decoration:underline;">%s</span> il %s era %s e ha scritto:
></td>
></tr>
><td style="border: thin dashed #FFdeFF;background-color:#dddddd">%s
></td>
></tr>
><tr><td>
><hr align="center" width="30%%" noshade size="1">
></td>
></tr>
>""" % (commenti[i]['nome'],commenti[i]['data'],statodanimo[commenti[i]['sda']],commenti[i]['commento'])
>    req.write(out)
># (end for)
>%>
>
>(this is for http://fincos.homeip.net/ )
>
>I just used a formatted text, you can make use your person.html as
>template in your code, but I do not know how to use psp.PSP class,
>documentation is your power.
>
>Daniele.
>
>On Sun, Nov 07, 2004 at 10:34:42PM +0000, Dagur P?ll Ammendrup wrote:
>  
>
>>I tried that but I get:
>>
>>TypeError: cannot concatenate 'str' and 'instance' objects
>>
>>
>>Daniele Cruciani wrote:
>>
>>    
>>
>>>Hi,
>>>
>>>simply bottom-up way:
>>>
>>>people=''
>>>for p in peopledict:
>>>	# call psp.PSP for each person
>>>	dic={'name':p['name'],....}
>>>	people=people+ psp.PSP(req,'person.html',vars=dic)
>>>
>>>dic={'people':people}
>>>yourpage=psp.PSP(req,'people.html',vars=dic)
>>>
>>>and return it, or you can do it inside the people template or make a
>>>function which return parsed person-s, called people a call it from
>>>people.html template
>>>
>>>Daniele.
>>>
>>>On Sat, Nov 06, 2004 at 10:12:57PM +0000, Dagur P?ll Ammendrup wrote:
>>>
>>>
>>>      
>>>
>>>>I have a complete beginners question for you.
>>>>Here's a stupid example but I hope it explains what I'm trying to do. 
>>>>Let's say I have this template
>>>>
>>>>people.html
>>>>
>>>>|<h2>
>>>>Here is a list of people
>>>><%= people %>
>>>></h2>|
>>>>
>>>>Then there's another template:
>>>>
>>>>person.html
>>>>
>>>>|<p>
>>>>Name: <%= name %>
>>>>Occupation: <%= job %>
>>>>Email <%= email %>
>>>></p>|
>>>>
>>>>Now let's say I want to use person.html on a list of several people and 
>>>>I use psp.PSP() to do it.
>>>>How can I join the objects together and put them into the single 
>>>>'people' varible for the outer 'people.html' template so I get this?
>>>>
>>>>
>>>>|<h2>
>>>>Here is a list of people
>>>>|
>>>>|<p>
>>>>Name: John
>>>>Occupation: programmer
>>>>Email john@microsoft.com
>>>></p>||
>>>>
>>>>||<p>
>>>>Name: Steven
>>>>Occupation: Student
>>>>Email steven@fbi.com
>>>></p>
>>>>
>>>>..etc
>>>>
>>>>||</h2>
>>>>
>>>>|
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>_______________________________________________
>>>>Mod_python mailing list
>>>>Mod_python@modpython.org
>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>  
>>>>
>>>>        
>>>>
>>>
>>>      
>>>
>
>  
>
From bje at apnic.net  Mon Nov  8 19:16:44 2004
From: bje at apnic.net (Byron Ellacott)
Date: Mon Nov  8 19:15:22 2004
Subject: [mod_python] cookies and redirects
In-Reply-To: <18579.66.192.34.8.1099672286.squirrel@66.192.34.8>
References: <418B292D.4020909@johnaherne.co.uk>
	<18579.66.192.34.8.1099672286.squirrel@66.192.34.8>
Message-ID: <41900C6C.5030707@apnic.net>

mike bayer wrote:
> I have never seen a 307 redirect used before, so I will admit my ignorance
> of it as well as its usablity.  But big sites like Yahoo! etc. use "302
> Found" combined with the Location: header (I just double checked) to send
> the client elsewhere, as does the "Redirect" directive in Apache.

Hmm, looks like I've gotten my codes a little mixed up again, I'm 
afraid.  (The following discussion is for HTTP/1.1 communication, see 
further below for more on this.)  The 307 return code, or "Temporary 
Redirect," indicates to the client that the request should be redirected 
to the given Location.

The code I meant to give was the 303 code, which is the HTTP "See Other" 
code.  This code instructs the client that the response to their request 
is at the given Location, and that the client should use GET to fetch 
that URI.  To directly quote the HTTP/1.1 spec:

   This method exists primarily to allow the output of a POST-activated
   script to redirect the user agent to a selected resource.

> Which is not to say the 307 is not a better way, but is it very well
> supported and predictable across all browsers ?

The 303 (and 307) return codes are supported by HTTP/1.1 browsers.  Even 
Internet Explorer appears to handle them correctly.

Since they're HTTP/1.1 codes, you should only return them to HTTP/1.1 
clients.  I don't have any Python code currently doing this, though I do 
have Perl code that is.  I'll attempt to show you what the Python code 
might look like:

   def _redirect(req, uri):
       if req.proto_num >= 1001:
           req.err_headers_out.add('Location', uri)
           raise apache.SERVER_RETURN, apache.HTTP_SEE_OTHER
       else:
           req.internal_redirect(uri)

> If you really want a seamless redirect with zero side effects, an internal
> redirect, i.e. an server-side change of output within the scope of one
> request, is best, if your application can support them.

That depends on what you mean by 'zero side effects.'  Chances are, when 
you do a redirect what you're really saying is that the user should be 
looking at the new URI.  If you do an internal redirect, the user will 
still be seeing the original URI in their address bar.  If they reload, 
they will be reloading that original URI.  If they go forward/back in 
history, they will be visiting that original URI.  If they bookmark, 
they will be bookmarking the original URI.

At best, this means they'll be seeing the wrong URI and possibly the 
wrong output (think bookmarked pages).  At worst, this means they'll do 
an action twice when they try to refresh what they're seeing.

A 303 redirect, on the other hand, 'seamlessly' tells the client browser 
that it should be using the new URI to show the user what's happening. 
In all recent browsers that I've tested (Opera, Safari, Gecko, and IE >= 
5) this is exactly what happens - the new URI is shown in the Location 
bar, going back/forward in history goes to the new URI, and reloading 
does another GET of the new URI.  The original, probably POSTED URI is 
no longer visible or seen, which is IMO almost always what you want when 
you're doing a dynamic redirect.

> Also, an external redirect is often used specifically to prevent reloads
> and back button usage, as in the case of an ecommerce submit form that you
> dont want submitted a second time by accident.

We-eel, it's a little more than that.  Consider a database of clients, 
identified by an ID of some sort.  You have a page to fetch a client by 
ID, where you can enter the client's ID and POST to the server to find 
the client's details page.  This is a fairly typical sort of thing to 
do, as far as I'm aware.

Let's say, just for kicks, that client #44's details can be found at 
/clients/44/ and that the search page is at /clients/.

So, your user visits /clients/ and POSTs their request to view #44.  If 
you're doing an internal redirect, their URL bar will probably still 
show '/clients/' or some other URL where the search handler exists.  If 
you're doing a 303 redirect, their URL bar will show '/clients/44'. 
They can bookmark this, reload it without worrying about POST resubmits, 
and leap around their history with unsurprising results.

It works if you use '/clients/display.html?id=44' as well, but there's a 
number of difficulties in using query fragments to track resources that 
I'm sure most of you have already encountered.  (What happens when you 
POST to '/clients/display.html?id=44'?  Shouldn't you have put the id 
into a hidden form field?  Whatever you do, don't put it into a cookie! :)

> I tend to use external redirects only for that reason, i.e. to prevent
> form reloads, and otherwise internal redirects for everything else, which
> are particularly useful since you can more easily preserve the request
> state among the original and redirected pages.

The only reason [that I can see] to do a redirect, other than after a 
form submission, is to show a resource other than the one requested.  If 
you're loosely following REST priciples, this shouldn't arise at all. :)

(As a side note, one of the web apps I've helped develop does a redirect 
when you GET its index page, to a start page that exists in the users 
preferences.  In this case, I still recommend a 303 redirect, since the 
URL location bar /should/ be updated to reflect the 'real' location.)

-- 
bje
From grahamd at dscpl.com.au  Tue Nov  9 03:50:31 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov  9 03:50:37 2004
Subject: [mod_python] Directory separator in uri/filename on Win32.
Message-ID: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>

Can someone who uses mod_python on the Win32 platform, confirm for me 
what
directory separator is used in req.uri and req.filename on Win32.

On UNIX (POSIX) one would get something like:

   req.uri : /projects/vampire/index.html
   req.filename = /usr/local/etc/httpd/htdocs/projects/vampire/index.html

I am presuming that on Win32, the URI still uses a forward slash, but 
that
the filename will use backward slash in line with convention for 
platform
and what os.path.sep is set to. Ie.,

   req.uri : /projects/vampire/index.html
   req.filename = \usr\local\etc\httpd\htdocs\projects\vampire\index.html

Is this correct, or does Apache normalise it to the POSIX convention on
the Win32 platform?

--
Graham Dumpleton (grahamd@dscpl.com.au)

From davidf at sjsoft.com  Tue Nov  9 05:08:17 2004
From: davidf at sjsoft.com (David Fraser)
Date: Tue Nov  9 05:08:22 2004
Subject: [mod_python] Directory separator in uri/filename on Win32.
In-Reply-To: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>
References: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>
Message-ID: <41909711.2050908@sjsoft.com>

Graham Dumpleton wrote:

> Can someone who uses mod_python on the Win32 platform, confirm for me 
> what
> directory separator is used in req.uri and req.filename on Win32.
>
> On UNIX (POSIX) one would get something like:
>
>   req.uri : /projects/vampire/index.html
>   req.filename = /usr/local/etc/httpd/htdocs/projects/vampire/index.html
>
> I am presuming that on Win32, the URI still uses a forward slash, but 
> that
> the filename will use backward slash in line with convention for platform
> and what os.path.sep is set to. Ie.,
>
>   req.uri : /projects/vampire/index.html
>   req.filename = \usr\local\etc\httpd\htdocs\projects\vampire\index.html
>
> Is this correct, or does Apache normalise it to the POSIX convention on
> the Win32 platform?

No, Apache normalises it to the POSIX convention (as is done in apache 
config files):
req.uri: /demo/css/nounderlinelinks.css
req.filename: C:/Temp/jSuite.py/jLogbook/html/demo
(where my handler is set with SetHandler in the demo directory, thats 
why its truncated)
Hope that helps

David
From dagurp at heimsnet.is  Tue Nov  9 05:28:45 2004
From: dagurp at heimsnet.is (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Tue Nov  9 05:15:04 2004
Subject: [mod_python] Directory separator in uri/filename on Win32.
In-Reply-To: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>
References: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>
Message-ID: <41909BDD.6090104@heimsnet.is>

If you're going to use os.path.join() or anything similar it doesn't 
matter what os.sep or os.path.sep are set to. Instead you will have to use

import posixpath
posixpath.join()

for the URI's to have the forward slash on windows.


Graham Dumpleton wrote:

> Can someone who uses mod_python on the Win32 platform, confirm for me 
> what
> directory separator is used in req.uri and req.filename on Win32.
>
> On UNIX (POSIX) one would get something like:
>
>   req.uri : /projects/vampire/index.html
>   req.filename = /usr/local/etc/httpd/htdocs/projects/vampire/index.html
>
> I am presuming that on Win32, the URI still uses a forward slash, but 
> that
> the filename will use backward slash in line with convention for platform
> and what os.path.sep is set to. Ie.,
>
>   req.uri : /projects/vampire/index.html
>   req.filename = \usr\local\etc\httpd\htdocs\projects\vampire\index.html
>
> Is this correct, or does Apache normalise it to the POSIX convention on
> the Win32 platform?
>
> -- 
> Graham Dumpleton (grahamd@dscpl.com.au)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Tue Nov  9 05:20:56 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Nov  9 05:21:00 2004
Subject: [mod_python] Directory separator in uri/filename on Win32.
In-Reply-To: <41909711.2050908@sjsoft.com>
References: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>
	<41909711.2050908@sjsoft.com>
Message-ID: <0AE001DC-3239-11D9-89D9-000393DCF16E@dscpl.com.au>


On 09/11/2004, at 9:08 PM, David Fraser wrote:

> Graham Dumpleton wrote:
>
>> Can someone who uses mod_python on the Win32 platform, confirm for me 
>> what
>> directory separator is used in req.uri and req.filename on Win32.
>>
>> On UNIX (POSIX) one would get something like:
>>
>>   req.uri : /projects/vampire/index.html
>>   req.filename = 
>> /usr/local/etc/httpd/htdocs/projects/vampire/index.html
>>
>> I am presuming that on Win32, the URI still uses a forward slash, but 
>> that
>> the filename will use backward slash in line with convention for 
>> platform
>> and what os.path.sep is set to. Ie.,
>>
>>   req.uri : /projects/vampire/index.html
>>   req.filename = 
>> \usr\local\etc\httpd\htdocs\projects\vampire\index.html
>>
>> Is this correct, or does Apache normalise it to the POSIX convention 
>> on
>> the Win32 platform?
>
> No, Apache normalises it to the POSIX convention (as is done in apache 
> config files):
> req.uri: /demo/css/nounderlinelinks.css
> req.filename: C:/Temp/jSuite.py/jLogbook/html/demo
> (where my handler is set with SetHandler in the demo directory, thats 
> why its truncated)
> Hope that helps

Thanks, that does help.

One more question though. Does the use of POSIX path conventions extend 
to
other areas where a path might be defined internally by mod_python?

For example, I use the following code to effectively determine the 
directory
where the PythonHandler which applies to the request being serviced was 
set.

     if hasattr(req,"hlist"):
       # In mod_python 3.X have the req.hlist member.
       root = req.hlist.directory

     elif hasattr(req,"get_dirs"):
       # In mod_python 2.X have the req.get_dirs() method.
       root = req.get_dirs()["PythonHandler"]

Is "root" going to also use POSIX path convention. This may depend more 
on how
mod_python is implemented than Apache depending on how mod_python 
determines
what value is used for this.

--
Graham Dumpleton (grahamd@dscpl.com.au)

From crxop at tiscali.it  Tue Nov  9 06:54:23 2004
From: crxop at tiscali.it (Daniele Cruciani)
Date: Tue Nov  9 06:54:34 2004
Subject: [mod_python] silly question
Message-ID: <20041109115423.GB14167@fincos.homeip.net>

Hello.

I just want something to make /robots.txt available with get method. I
already make a directory robots.txt and

/.htaccess  : #this is in the main dir

SetHandler mod_python
PythonHandler mod_python.publisher

/robots.txt/index.py
def index(req):
    req.content_type="text/plain"
    return """
User-agent: *
Disallow:
"""

This works for client but I think a spider will get a 404 (telnet
does). Also this make great confution and apache replace the index
function for / too, so request "GET /" return the same as "GET
/robots.txt/", I guess this is a know problem.

I've tried "RemoveHandler .txt" but it don't works (with SetHandler I
suppose).

So, there is a method for making robots.txt available?

Thank you,
Daniele.

From Administrator at leebrown.org  Tue Nov  9 07:39:35 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Tue Nov  9 07:39:56 2004
Subject: [mod_python] silly question
References: <20041109115423.GB14167@fincos.homeip.net>
Message-ID: <005501c4c659$2d7b49a0$0202a8c0@UberBox>


----- Original Message ----- 
From: "Daniele Cruciani" <crxop@tiscali.it>
To: "mod_python list" <mod_python@modpython.org>
Sent: Tuesday, November 09, 2004 6:54 AM
Subject: [mod_python] silly question


> Hello.
>
> I just want something to make /robots.txt available with get method. I
> already make a directory robots.txt and
>
> /.htaccess  : #this is in the main dir
>
> SetHandler mod_python
> PythonHandler mod_python.publisher
>
> /robots.txt/index.py
> def index(req):
>    req.content_type="text/plain"
>    return """
> User-agent: *
> Disallow:
> """
>
> This works for client but I think a spider will get a 404 (telnet
> does). Also this make great confution and apache replace the index
> function for / too, so request "GET /" return the same as "GET
> /robots.txt/", I guess this is a know problem.
>
> I've tried "RemoveHandler .txt" but it don't works (with SetHandler I
> suppose).
>
> So, there is a method for making robots.txt available?

The easiest way I can think of is to have a normal 'robots.txt' file 
available in the document root directory
and then in your handler simply test for the presence of "robots.txt" in the 
request URI.  If true,
exit the handler with the return code "apache.DECLINED"

You can use this trick any time you want a particular document to be 
processed in the 'normal' apache
way - that is, as if mod_python didn't exist on the server. 

From crxop at tiscali.it  Tue Nov  9 10:47:22 2004
From: crxop at tiscali.it (Daniele Cruciani)
Date: Tue Nov  9 10:48:03 2004
Subject: [mod_python] silly question
In-Reply-To: <4190D8C0.9090305@rangerelf.is-a-geek.org>
References: <20041109115423.GB14167@fincos.homeip.net>
	<4190D8C0.9090305@rangerelf.is-a-geek.org>
Message-ID: <20041109154722.GA15326@fincos.homeip.net>

On Tue, Nov 09, 2004 at 08:48:32AM -0600, Gustavo C?rdova Avila wrote:
> Daniele Cruciani wrote:
<my message here>
> Naaaaa, actually, you'se wanna define a Location
> inside apache's httpd.conf, like so:
> 
> <Location "/robots.txt">
>    SetHandler python-program
>    PythonHandler robots
>    PythonPath "sys.path + [\"/path/to/your/mod-python/handlers\"]"
> </Location>
> 

Location! ok, and without mod_python I write this:
<Location "/robots.txt">
   SetHandler default-handler
</Location>

this works and don't call mod_python, not really a great advance for
running, but I can just change the content of a text file or upload
it.

thank you (I'll consider to write handler, but I'm busy and this is
just an "hobby" for me)

Daniele.

> I don't think you can use publisher, since there's no mention
> of a ".py" file anywhere in the location, which would foil the
> handler-invoking stuff, but I may be wrong.
> 
> Then, in "robots.py", just do something like:
> 
>    from mod_python import apache
>    def handler(R):
>       R.content_type = "text/plain"
>       R.write("User-agent: *\nDisallow:\n")
>       return apache.OK
> 
> Caveat: I haven't tested it, but I see no reason for it to fail.
> 
> See, it's even a bit easier.  I prefer to write handlers, instead
> of publisher functions, but I suppose it's dependant on each one's
> taste.
> 
> HTH!
> -- 
> Gustavo C?rdova Avila <gustavo.cordova@q-voz.com> 
> <mailto:gustavo.cordova@q-voz.com>
> *Tel:* +52 (81) 8130-1919 ext. 127
> Integraciones del Norte, S.A. de C.V.
> Padua #6047, Colonia Sat?lite Acueducto
> Monterrey, Nuevo Le?n, M?xico.


From grahamd at dscpl.com.au  Wed Nov 10 03:24:25 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 10 03:24:30 2004
Subject: [mod_python] Directory separator in uri/filename on Win32.
In-Reply-To: <0AE001DC-3239-11D9-89D9-000393DCF16E@dscpl.com.au>
References: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>
	<41909711.2050908@sjsoft.com>
	<0AE001DC-3239-11D9-89D9-000393DCF16E@dscpl.com.au>
Message-ID: <EE8F2B04-32F1-11D9-BE19-000393DCF16E@dscpl.com.au>


On 09/11/2004, at 9:20 PM, Graham Dumpleton wrote:

>
>> No, Apache normalises it to the POSIX convention (as is done in 
>> apache config files):
>> req.uri: /demo/css/nounderlinelinks.css
>> req.filename: C:/Temp/jSuite.py/jLogbook/html/demo
>> (where my handler is set with SetHandler in the demo directory, thats 
>> why its truncated)
>> Hope that helps
>
> Thanks, that does help.
>
> One more question though. Does the use of POSIX path conventions 
> extend to
> other areas where a path might be defined internally by mod_python?
>
> For example, I use the following code to effectively determine the 
> directory
> where the PythonHandler which applies to the request being serviced 
> was set.
>
>     if hasattr(req,"hlist"):
>       # In mod_python 3.X have the req.hlist member.
>       root = req.hlist.directory
>
>     elif hasattr(req,"get_dirs"):
>       # In mod_python 2.X have the req.get_dirs() method.
>       root = req.get_dirs()["PythonHandler"]
>
> Is "root" going to also use POSIX path convention. This may depend 
> more on how
> mod_python is implemented than Apache depending on how mod_python 
> determines
> what value is used for this.

Is anyone able to run the check for me to answer my extra question about
what the handler directory is set to on Win32 platform? Ie., 
confirmation
that it also still uses POSIX directory separate convention and not 
Win32.

The required publisher code is:

def index(req):

   root = "???"

   if hasattr(req,"hlist"):
     # In mod_python 3.X have the req.hlist member.
     root = req.hlist.directory

   elif hasattr(req,"get_dirs"):
     # In mod_python 2.X have the req.get_dirs() method.
     root = req.get_dirs()["PythonHandler"]

   return root

Thanks in advance.



--
Graham Dumpleton (grahamd@dscpl.com.au)

From davidf at sjsoft.com  Wed Nov 10 10:32:04 2004
From: davidf at sjsoft.com (David Fraser)
Date: Wed Nov 10 10:32:13 2004
Subject: [mod_python] Directory separator in uri/filename on Win32.
In-Reply-To: <EE8F2B04-32F1-11D9-BE19-000393DCF16E@dscpl.com.au>
References: <696B566A-322C-11D9-89D9-000393DCF16E@dscpl.com.au>	<41909711.2050908@sjsoft.com>	<0AE001DC-3239-11D9-89D9-000393DCF16E@dscpl.com.au>
	<EE8F2B04-32F1-11D9-BE19-000393DCF16E@dscpl.com.au>
Message-ID: <41923474.1070403@sjsoft.com>

Graham Dumpleton wrote:

>
> On 09/11/2004, at 9:20 PM, Graham Dumpleton wrote:
>
>>
>>> No, Apache normalises it to the POSIX convention (as is done in 
>>> apache config files):
>>> req.uri: /demo/css/nounderlinelinks.css
>>> req.filename: C:/Temp/jSuite.py/jLogbook/html/demo
>>> (where my handler is set with SetHandler in the demo directory, 
>>> thats why its truncated)
>>> Hope that helps
>>
>>
>> Thanks, that does help.
>>
>> One more question though. Does the use of POSIX path conventions 
>> extend to
>> other areas where a path might be defined internally by mod_python?
>>
>> For example, I use the following code to effectively determine the 
>> directory
>> where the PythonHandler which applies to the request being serviced 
>> was set.
>>
>>     if hasattr(req,"hlist"):
>>       # In mod_python 3.X have the req.hlist member.
>>       root = req.hlist.directory
>>
>>     elif hasattr(req,"get_dirs"):
>>       # In mod_python 2.X have the req.get_dirs() method.
>>       root = req.get_dirs()["PythonHandler"]
>>
>> Is "root" going to also use POSIX path convention. This may depend 
>> more on how
>> mod_python is implemented than Apache depending on how mod_python 
>> determines
>> what value is used for this.
>
>
> Is anyone able to run the check for me to answer my extra question about
> what the handler directory is set to on Win32 platform? Ie., confirmation
> that it also still uses POSIX directory separate convention and not 
> Win32.
>
> The required publisher code is:
>
> def index(req):
>
>   root = "???"
>
>   if hasattr(req,"hlist"):
>     # In mod_python 3.X have the req.hlist member.
>     root = req.hlist.directory
>
>   elif hasattr(req,"get_dirs"):
>     # In mod_python 2.X have the req.get_dirs() method.
>     root = req.get_dirs()["PythonHandler"]
>
>   return root
>
> Thanks in advance.

Ran this on my Windows machine: displayed the following in my browser:

C:/Temp/jSuite.py/jLogbook/html/pubtest/\

Not sure what the extra \ is for

Cheers
David
From trevorw at qalabs.com  Wed Nov 10 16:24:25 2004
From: trevorw at qalabs.com (Trevor West)
Date: Wed Nov 10 16:22:55 2004
Subject: [mod_python] 
	Hello all, Questions about Mod Python sessions on Linux
Message-ID: <41928709.7080708@qalabs.com>

Setups for use in the below discussion:
Machine 1:
Windows 2000
Apache 2.0.52
Mod Python 3.1.3
MySQL_Python
Python 2.3
wxPython


Machine 2:
Fedora Core 2
Apache 2.0.52
Mod Python 3.1.3
MySQL_Python
Python 2.3
wxPython

I'm writing a thin-client to a wxPython application and when I run the 
thin client on Machine 1(the windows box) everything works great, no 
problem. While when I try to move it to what is now the production box, 
Machine 2 (linux box), I get this error:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/local/lib/python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
    return object(**args)

  File "/usr/local/apache2/htdocs/test/mptest.py", line 42, in login
    sess.save()

  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", line 204, in save
    self.do_save(dict)

  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", line 329, in do_save
    dbm[self._sid] = cPickle.dumps(dict)

  File "/usr/local/lib/python2.3/copy_reg.py", line 69, in _reduce_ex
    raise TypeError, "can't pickle %s objects" % base.__name__

TypeError: can't pickle module objects

So, as far as I can tell, on my Windows box I'm able to add class 
instances to the session (in this case, I'm sure it's my database class 
that is causing this) but on Linux, it won't add it to the session.

If anyone can give him a heads up that would be great. I've been beating 
my head against the wall with the linux box because the windows setup 
was SO easy, and being a big linux fan I was disappointed in the strange 
problems I've run into.

Anyway, thanks in advance.

Trevor West
------------------------
Developer for QA Labs

From grahamd at dscpl.com.au  Wed Nov 10 17:18:59 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 10 17:19:02 2004
Subject: [mod_python] Bug in setting up of config_dir from Handler
	directives.
In-Reply-To: <41923474.1070403@sjsoft.com>
Message-ID: <1100125136.29704@dscpl.com.au>

On Nov 10 17:32, David Fraser <davidf@sjsoft.com> wrote:
>
> Subject: Re: [mod_python] Directory separator in uri/filename on Win32.
>
> Graham Dumpleton wrote:
> 
> >> One more question though. Does the use of POSIX path conventions 
> >> extend to
> >> other areas where a path might be defined internally by mod_python?
> >>
> >> For example, I use the following code to effectively determine the 
> >> directory
> >> where the PythonHandler which applies to the request being serviced 
> >> was set.
> >>
> >>     if hasattr(req,"hlist"):
> >>       # In mod_python 3.X have the req.hlist member.
> >>       root = req.hlist.directory
> >>
> >>     elif hasattr(req,"get_dirs"):
> >>       # In mod_python 2.X have the req.get_dirs() method.
> >>       root = req.get_dirs()["PythonHandler"]
> >>
> >> Is "root" going to also use POSIX path convention. This may depend 
> >> more on how
> >> mod_python is implemented than Apache depending on how mod_python 
> >> determines
> >> what value is used for this.
> >
> >
> > Is anyone able to run the check for me to answer my extra question about
> > what the handler directory is set to on Win32 platform? Ie., confirmation
> > that it also still uses POSIX directory separate convention and not 
> > Win32.
> >
> > The required publisher code is:
> >
> > def index(req):
> >
> >   root = "???"
> >
> >   if hasattr(req,"hlist"):
> >     # In mod_python 3.X have the req.hlist member.
> >     root = req.hlist.directory
> >
> >   elif hasattr(req,"get_dirs"):
> >     # In mod_python 2.X have the req.get_dirs() method.
> >     root = req.get_dirs()["PythonHandler"]
> >
> >   return root
> >
> > Thanks in advance.
> 
> Ran this on my Windows machine: displayed the following in my browser:
> 
> C:/Temp/jSuite.py/jLogbook/html/pubtest/\
> 
> Not sure what the extra \ is for

The trailing '\' is there because mod_python has a bug in it.

The problem is that mod_python doesn't seem to take into account that the
directory is given to it by Apache in POSIX directory naming convention.
Instead, because mod_python knows it is on Win32, it looks for a trailing '\'
and since it doesn't see one, because it is actually '/', it goes and adds a '\'.

The code in mod_python.c is:

static void *python_create_dir_config(apr_pool_t *p, char *dir)  
{
 
    py_config *conf = python_create_config(p);
 
    /* make sure directory ends with a slash */
    if (dir && (dir[strlen(dir) - 1] != SLASH)) 
        conf->config_dir = apr_pstrcat(p, dir, SLASH_S, NULL);
    else
        conf->config_dir = apr_pstrdup(p, dir);
 
    return conf;
}

It should in this case ignore whether it is on Win32 and instead use:

static void *python_create_dir_config(apr_pool_t *p, char *dir)  
{
 
    py_config *conf = python_create_config(p);
 
    /* make sure directory ends with a slash */
    if (dir && (dir[strlen(dir) - 1] != '/')) 
        conf->config_dir = apr_pstrcat(p, dir, "/", NULL);
    else
        conf->config_dir = apr_pstrdup(p, dir);
 
    return conf;
}

BTW, the definitions of SLASH and SLASH_S are in mod_python.h.

#ifdef WIN32
#define SLASH '\\'
#define SLASH_S "\\"
#else
#define SLASH '/'
#define SLASH_S "/"
#endif

I wander where else there are little mistakes like this in mod_python
where it doesn't take into consideration that Apache passed it POSIX
style pathnames and not Win32 ones.

Anyway, possibly another one for the TODO list of things to fix. Someone
want to confirm this analysis or make the change and see what happens
then.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From grahamd at dscpl.com.au  Wed Nov 10 17:44:26 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 10 17:44:29 2004
Subject: [mod_python] Directory separator in uri/filename on Win32.
In-Reply-To: <41923474.1070403@sjsoft.com>
Message-ID: <1100126662.32289@dscpl.com.au>

On Nov 10 17:32, David Fraser <davidf@sjsoft.com> wrote:
>
> Subject: Re: [mod_python] Directory separator in uri/filename on Win32.
>
> Graham Dumpleton wrote:
> 
> > The required publisher code is:
> >
> > def index(req):
> >
> >   root = "???"
> >
> >   if hasattr(req,"hlist"):
> >     # In mod_python 3.X have the req.hlist member.
> >     root = req.hlist.directory
> >
> >   elif hasattr(req,"get_dirs"):
> >     # In mod_python 2.X have the req.get_dirs() method.
> >     root = req.get_dirs()["PythonHandler"]
> >
> >   return root
> >
> > Thanks in advance.
> 
> Ran this on my Windows machine: displayed the following in my browser:
> 
> C:/Temp/jSuite.py/jLogbook/html/pubtest/\
> 
> Not sure what the extra \ is for

I have mentioned the possible reason for the extra '\' in separate email,
but I guess that the only thing I would want to clarify was in what way
was the PythonHandler directive set up.

If it was done in a .htaccess file, then Apache is probably creating the
handler path all by itself. If the httpd.conf file was used and someone
used '\' within the name of the directory governing the PythonHandler
directive, does Apache always force it back to POSIX naming convention.

In other words, if the httpd.conf directive was set as:

    <Directory C:\Temp\jSuite.py\jLogbook\html\pubtest>
    SetHandler mod_python
    PythonHandler mod_python.publisher
    </Directory>

does it still come through as POSIX convention. That is presuming that
Apache on Win32 will accept both Win32 and POSIX style names in the
config file in the first place.

After the clarification as mail didn't say that I could see whether the
Directory directive used a POSIX or Win32 naming convention in the
first place.

BTW, do you really have a directory called "jSuite.py" as this suggests?
I thought this would have been mightly confusing given Python uses
that extension on files. :-)

--
Graham Dumpleton (grahamd@dscpl.com.au)
From mike_mp at zzzcomputing.com  Wed Nov 10 18:09:43 2004
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Wed Nov 10 18:09:53 2004
Subject: [mod_python]  Hello all,
	Questions about Mod Python sessions on Linux
In-Reply-To: <41928709.7080708@qalabs.com>
References: <41928709.7080708@qalabs.com>
Message-ID: <9B74C86A-336D-11D9-9530-000A95DA37D6@zzzcomputing.com>

seems like you are trying to store a Python module in the Session, and 
Pickle isnt able to do that.

regardless of which platforms this may or may not work on, it generally 
doesn't make sense to store a module in the session, since a Python 
module and its instance variables, assuming normal usage via "import", 
are all shared amongst many requests and possibly across multiple 
concurrent threads, whereas the Session stores information specific to 
one user and that user's subset of requests.

you probably want to figure out what application state it is exactly 
you want to store on a per-session basis, and stick it into an object 
instance that you can safely pickle away.

if you are unsure what object in your Session is a module, you can 
always try walking through all the elements in the session and test 
obj.__class__.__name__ == 'module' to see who the offending element is.

On Nov 10, 2004, at 4:24 PM, Trevor West wrote:

> Setups for use in the below discussion:
> Machine 1:
> Windows 2000
> Apache 2.0.52
> Mod Python 3.1.3
> MySQL_Python
> Python 2.3
> wxPython
>
>
> Machine 2:
> Fedora Core 2
> Apache 2.0.52
> Mod Python 3.1.3
> MySQL_Python
> Python 2.3
> wxPython
>
> I'm writing a thin-client to a wxPython application and when I run the 
> thin client on Machine 1(the windows box) everything works great, no 
> problem. While when I try to move it to what is now the production 
> box, Machine 2 (linux box), I get this error:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", 
> line 299, in HandlerDispatch
>    result = object(req)
>
>  File 
> "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", line 
> 136, in handler
>    result = util.apply_fs_data(object, req.form, req=req)
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/util.py", 
> line 361, in apply_fs_data
>    return object(**args)
>
>  File "/usr/local/apache2/htdocs/test/mptest.py", line 42, in login
>    sess.save()
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", 
> line 204, in save
>    self.do_save(dict)
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", 
> line 329, in do_save
>    dbm[self._sid] = cPickle.dumps(dict)
>
>  File "/usr/local/lib/python2.3/copy_reg.py", line 69, in _reduce_ex
>    raise TypeError, "can't pickle %s objects" % base.__name__
>
> TypeError: can't pickle module objects
>
> So, as far as I can tell, on my Windows box I'm able to add class 
> instances to the session (in this case, I'm sure it's my database 
> class that is causing this) but on Linux, it won't add it to the 
> session.
>
> If anyone can give him a heads up that would be great. I've been 
> beating my head against the wall with the linux box because the 
> windows setup was SO easy, and being a big linux fan I was 
> disappointed in the strange problems I've run into.
>
> Anyway, thanks in advance.
>
> Trevor West
> ------------------------
> Developer for QA Labs
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From davidf at sjsoft.com  Thu Nov 11 05:51:51 2004
From: davidf at sjsoft.com (David Fraser)
Date: Thu Nov 11 05:51:57 2004
Subject: [mod_python] Strange bug in req.sendfile
Message-ID: <41934447.8060302@sjsoft.com>

I'm having a wierd bug on Windows XP with sendfile.
I'm trying to send an image and the image gets corrupted. Sending the 
bytes directly through write works fine.
I've simplified my handler down to bare-bones level and the bug still 
happens.
Even leaving out content_type and send_http_header doesn't fix it...
I've tried to reproduce this problem on Linux and Windows 2000 to no 
avail ... not sure if it is the platform or a bug on this particular 
machine, but it sure is odd.
The file that is sent has exactly the same length but certain bytes are 
changed in it. They seem to be at fairly regular offsets, so it may be a 
bug in Apache's sendfile routine. The mod_python req.sendfile method 
looks fairly simple so I doubt its that.
In at least one case (animals2_corrupted1.jpg), it was exact 8k chunks 
of files being replaced with zeroes, but it didn't seem to be consistent.
In another case, (animals2_corrupted2.jpg), 4 bytes at n*0x1000+0x10 
where replaced with 0x90008112, for various n, and one 8k block was 
replaced by 0s and sent in place of the next 8k block.
I have tested with Firefox and wget to confirm that the problem is not 
browser-related. I couldn't find any significant difference in the 
headers between the host that worked and the one that didn't (both using 
Transfer-Encoding: chunked).
Using latest Apache 2.0.52 and mod_python 3.1.3 (with some minor mods 
but all python, none to the sendfile method.)

Here's the handler:

def handler(req):
    """return a page that will be sent to the user"""
    req.content_type = "image/jpeg"
    req.send_http_header()
    jpegfile = os.path.join(os.path.dirname(__file__), 'animals2.jpg')
    req.sendfile(jpegfile)
    # req.write(open(jpegfile, 'rb').read())
    return apache.OK

The original file, animals2.jpg and some munged versions of it, 
animals2_corrupted{1,2,3,4}.jpg are available here:
http://davidf.sjsoft.com/files/sendfile_corruption/
There are also hex dumps and diffs between the hex dumps in case they're 
useful

Any ideas appreciated

David
From grahamd at dscpl.com.au  Thu Nov 11 21:59:27 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Nov 11 21:59:30 2004
Subject: [mod_python] Bug in setting interpreter name with
	PythonInterpPerDirectory.
In-Reply-To: <1100125136.29704@dscpl.com.au>
Message-ID: <1100228362.39016@dscpl.com.au>

On Nov 10 15:18, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Subject: [mod_python] Bug in setting up of config_dir from Handler directives.
>
> I wander where else there are little mistakes like this in mod_python
> where it doesn't take into consideration that Apache passed it POSIX
> style pathnames and not Win32 ones.
> 
> Anyway, possibly another one for the TODO list of things to fix. Someone
> want to confirm this analysis or make the change and see what happens
> then.

Having a very quick look at mod_python.c, the SLASH macros get used in only
one other spot. It is mentioned in other places, but that code is commented
out.

The code in this case is in select_interp_name() and it to is wrong, although
it has a couple of problems and gives slightly undesirable results on UNIX
platforms as well in certain cirsumstances.

Consider a publisher based content handler containing:

  def index(req):
    return req.interpreter

If you do not have the PythonInterPerDirectory diective turned on, accessing
that page will generate the virtual/actual host of the web server. Eg.

  grumpy.company.com

If you turn on the PythonInterpPerDirectory and access the page explicitly
as for example:

  http://localhost:8080/~grahamd/publisher/index.py

You get something like:

  /Users/grahamd/Sites/publisher/

The trailing slash "/" is put there by the select_interp_name() function. If this
were on Win32, you probably end up with:

  /Users/grahamd/Sites/publisher\

Now, if the actual directory is accessed instead and the automagic mapping to
the index() method in the file is relied upon, ie., request as:

  http://localhost:8080/~grahamd/publisher

You first get redirected to:

  http://localhost:8080/~grahamd/publisher/

and the result you get back is:

  /Users/grahamd/Sites/publisher//

Again, the final trailing '/' is put there by select_interp_name(). On Win32, this is
thus likely to be:

  /Users/grahamd/Sites/publisher/\

In summary, there are two problems here.

First is that on Win32 it is most likely going to use '\' even though rest of the path
uses POSIX naming style.

Second is that the code doesn't check to see if there already is a trailing slash with
the result that although access to the directory and the file should result in the
same interpreter name, it doesn't.

This latter problem means that the same index() method can get executed within
the context of two different interpreters dependent on which URL you used. This
shouldn't be the case and could cause problems in some applications.

I haven't worked out the actual patch required in this case because of there being
two issues and because I haven't looked through the code enough to know where
to look to see if there already is a trailing slash. At the minimum, the use of SLASH_S
should be changed to "/" in that part of the select_interp_name() method.

Anyone on Win32 want to see if my assumptions about what happens there is
correct?

--
Graham Dumpleton (grahamd@dscpl.com.au)
From trevorw at qalabs.com  Fri Nov 12 18:54:54 2004
From: trevorw at qalabs.com (Trevor West)
Date: Fri Nov 12 18:53:24 2004
Subject: [mod_python]  Hello all,	Questions about Mod Python sessions
	on Linux
In-Reply-To: <9B74C86A-336D-11D9-9530-000A95DA37D6@zzzcomputing.com>
References: <41928709.7080708@qalabs.com>
	<9B74C86A-336D-11D9-9530-000A95DA37D6@zzzcomputing.com>
Message-ID: <41954D4E.5050101@qalabs.com>

Hi Michael,

The really funny thing is that it should be an instance, and it is the 
user specific information instance that I want to keep in the session. 
Something is really strange between my linux and windows build though. I 
can do very little with sessions on Linux for some reason. I've pulled 
apart my instance so that I'm now only trying to save the database 
connection (again something that works on Windows) and I get this error 
instead:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/local/lib/python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
    return object(**args)

  File "/usr/local/apache2/htdocs/test/mptest.py", line 43, in login
    sess.save()

  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", line 204, in save
    self.do_save(dict)

  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", line 329, in do_save
    dbm[self._sid] = cPickle.dumps(dict)

  File "/usr/local/lib/python2.3/copy_reg.py", line 70, in _reduce_ex
    state = base(self)

TypeError: connect() argument 1 must be string, not Connection

I'm wondering if my installation should be done again, or if I'm not 
doing the configuration of apache correctly, because as far as I can 
tell I'm writing the code correctly, and I'm running it on another OS 
and it works fine (I pulled it apart like you suggested so that all I'm 
saving now is the database connection, the username and a couple other 
small pieces of data).

Cheers

Trevor West


michael bayer wrote:

> seems like you are trying to store a Python module in the Session, and 
> Pickle isnt able to do that.
>
> regardless of which platforms this may or may not work on, it 
> generally doesn't make sense to store a module in the session, since a 
> Python module and its instance variables, assuming normal usage via 
> "import", are all shared amongst many requests and possibly across 
> multiple concurrent threads, whereas the Session stores information 
> specific to one user and that user's subset of requests.
>
> you probably want to figure out what application state it is exactly 
> you want to store on a per-session basis, and stick it into an object 
> instance that you can safely pickle away.
>
> if you are unsure what object in your Session is a module, you can 
> always try walking through all the elements in the session and test 
> obj.__class__.__name__ == 'module' to see who the offending element is.
>
> On Nov 10, 2004, at 4:24 PM, Trevor West wrote:
>
>> Setups for use in the below discussion:
>> Machine 1:
>> Windows 2000
>> Apache 2.0.52
>> Mod Python 3.1.3
>> MySQL_Python
>> Python 2.3
>> wxPython
>>
>>
>> Machine 2:
>> Fedora Core 2
>> Apache 2.0.52
>> Mod Python 3.1.3
>> MySQL_Python
>> Python 2.3
>> wxPython
>>
>> I'm writing a thin-client to a wxPython application and when I run 
>> the thin client on Machine 1(the windows box) everything works great, 
>> no problem. While when I try to move it to what is now the production 
>> box, Machine 2 (linux box), I get this error:
>>
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", 
>> line 299, in HandlerDispatch
>>    result = object(req)
>>
>>  File 
>> "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", 
>> line 136, in handler
>>    result = util.apply_fs_data(object, req.form, req=req)
>>
>>  File "/usr/local/lib/python2.3/site-packages/mod_python/util.py", 
>> line 361, in apply_fs_data
>>    return object(**args)
>>
>>  File "/usr/local/apache2/htdocs/test/mptest.py", line 42, in login
>>    sess.save()
>>
>>  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", 
>> line 204, in save
>>    self.do_save(dict)
>>
>>  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", 
>> line 329, in do_save
>>    dbm[self._sid] = cPickle.dumps(dict)
>>
>>  File "/usr/local/lib/python2.3/copy_reg.py", line 69, in _reduce_ex
>>    raise TypeError, "can't pickle %s objects" % base.__name__
>>
>> TypeError: can't pickle module objects
>>
>> So, as far as I can tell, on my Windows box I'm able to add class 
>> instances to the session (in this case, I'm sure it's my database 
>> class that is causing this) but on Linux, it won't add it to the 
>> session.
>>
>> If anyone can give him a heads up that would be great. I've been 
>> beating my head against the wall with the linux box because the 
>> windows setup was SO easy, and being a big linux fan I was 
>> disappointed in the strange problems I've run into.
>>
>> Anyway, thanks in advance.
>>
>> Trevor West
>> ------------------------
>> Developer for QA Labs
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From mike_mp at zzzcomputing.com  Sat Nov 13 14:53:44 2004
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Sat Nov 13 14:53:49 2004
Subject: [mod_python]  Hello all,
	Questions about Mod Python sessions on Linux
In-Reply-To: <41954D4E.5050101@qalabs.com>
References: <41928709.7080708@qalabs.com>
	<9B74C86A-336D-11D9-9530-000A95DA37D6@zzzcomputing.com>
	<41954D4E.5050101@qalabs.com>
Message-ID: <B9A9F51E-35AD-11D9-9530-000A95DA37D6@zzzcomputing.com>

yikes !   a database connection is an active network connection to a 
database server in the current application's process space.  if you 
pack it up into a file, which is what the session really is, and pull 
it out again, its meaningless.

I would make a bet that your windows installation is working better 
than the linux one becuase the windows session is probably storing 
everything in memory.  but then, if you are holding one database 
connection per user in each user's session, what if you have 50,000 
users all visit your site in a day ?  youd be storing 50,000 database 
connections.  actually you wouldnt since your app would crash long 
before you got there.

just store user data only in the session...a good rule of thumb for 
starters is, if its not a string, dont store it.  don't put any kind of 
application resources in there.

On Nov 12, 2004, at 6:54 PM, Trevor West wrote:

> Hi Michael,
>
> The really funny thing is that it should be an instance, and it is the 
> user specific information instance that I want to keep in the session. 
> Something is really strange between my linux and windows build though. 
> I can do very little with sessions on Linux for some reason. I've 
> pulled apart my instance so that I'm now only trying to save the 
> database connection (again something that works on Windows) and I get 
> this error instead:
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", 
> line 299, in HandlerDispatch
>    result = object(req)
>
>  File 
> "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", line 
> 136, in handler
>    result = util.apply_fs_data(object, req.form, req=req)
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/util.py", 
> line 361, in apply_fs_data
>    return object(**args)
>
>  File "/usr/local/apache2/htdocs/test/mptest.py", line 43, in login
>    sess.save()
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", 
> line 204, in save
>    self.do_save(dict)
>
>  File "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", 
> line 329, in do_save
>    dbm[self._sid] = cPickle.dumps(dict)
>
>  File "/usr/local/lib/python2.3/copy_reg.py", line 70, in _reduce_ex
>    state = base(self)
>
> TypeError: connect() argument 1 must be string, not Connection
>
> I'm wondering if my installation should be done again, or if I'm not 
> doing the configuration of apache correctly, because as far as I can 
> tell I'm writing the code correctly, and I'm running it on another OS 
> and it works fine (I pulled it apart like you suggested so that all 
> I'm saving now is the database connection, the username and a couple 
> other small pieces of data).
>
> Cheers
>
> Trevor West
>
>
> michael bayer wrote:
>
>> seems like you are trying to store a Python module in the Session, 
>> and Pickle isnt able to do that.
>>
>> regardless of which platforms this may or may not work on, it 
>> generally doesn't make sense to store a module in the session, since 
>> a Python module and its instance variables, assuming normal usage via 
>> "import", are all shared amongst many requests and possibly across 
>> multiple concurrent threads, whereas the Session stores information 
>> specific to one user and that user's subset of requests.
>>
>> you probably want to figure out what application state it is exactly 
>> you want to store on a per-session basis, and stick it into an object 
>> instance that you can safely pickle away.
>>
>> if you are unsure what object in your Session is a module, you can 
>> always try walking through all the elements in the session and test 
>> obj.__class__.__name__ == 'module' to see who the offending element 
>> is.
>>
>> On Nov 10, 2004, at 4:24 PM, Trevor West wrote:
>>
>>> Setups for use in the below discussion:
>>> Machine 1:
>>> Windows 2000
>>> Apache 2.0.52
>>> Mod Python 3.1.3
>>> MySQL_Python
>>> Python 2.3
>>> wxPython
>>>
>>>
>>> Machine 2:
>>> Fedora Core 2
>>> Apache 2.0.52
>>> Mod Python 3.1.3
>>> MySQL_Python
>>> Python 2.3
>>> wxPython
>>>
>>> I'm writing a thin-client to a wxPython application and when I run 
>>> the thin client on Machine 1(the windows box) everything works 
>>> great, no problem. While when I try to move it to what is now the 
>>> production box, Machine 2 (linux box), I get this error:
>>>
>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>
>>> Traceback (most recent call last):
>>>
>>>  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", 
>>> line 299, in HandlerDispatch
>>>    result = object(req)
>>>
>>>  File 
>>> "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", 
>>> line 136, in handler
>>>    result = util.apply_fs_data(object, req.form, req=req)
>>>
>>>  File "/usr/local/lib/python2.3/site-packages/mod_python/util.py", 
>>> line 361, in apply_fs_data
>>>    return object(**args)
>>>
>>>  File "/usr/local/apache2/htdocs/test/mptest.py", line 42, in login
>>>    sess.save()
>>>
>>>  File 
>>> "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", line 
>>> 204, in save
>>>    self.do_save(dict)
>>>
>>>  File 
>>> "/usr/local/lib/python2.3/site-packages/mod_python/Session.py", line 
>>> 329, in do_save
>>>    dbm[self._sid] = cPickle.dumps(dict)
>>>
>>>  File "/usr/local/lib/python2.3/copy_reg.py", line 69, in _reduce_ex
>>>    raise TypeError, "can't pickle %s objects" % base.__name__
>>>
>>> TypeError: can't pickle module objects
>>>
>>> So, as far as I can tell, on my Windows box I'm able to add class 
>>> instances to the session (in this case, I'm sure it's my database 
>>> class that is causing this) but on Linux, it won't add it to the 
>>> session.
>>>
>>> If anyone can give him a heads up that would be great. I've been 
>>> beating my head against the wall with the linux box because the 
>>> windows setup was SO easy, and being a big linux fan I was 
>>> disappointed in the strange problems I've run into.
>>>
>>> Anyway, thanks in advance.
>>>
>>> Trevor West
>>> ------------------------
>>> Developer for QA Labs
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
From tim at johnsons-web.com  Sat Nov 13 15:44:17 2004
From: tim at johnsons-web.com (Tim Johnson)
Date: Sat Nov 13 15:43:39 2004
Subject: [mod_python] Converting code from standard CGI
Message-ID: <20041113204417.GR17056@johnsons-web.com>

Hello List:

I have a very large project now running as standard CGI.  I wish to
convert that project for mod_python.  Intially, I would like that
conversion to entail as little code rewriting as possible. In time, I
could then learn about and better utilize the resources of mod_python.

I would welcome tips, hints and pointers to documentation on this
matter.

Thanks
tim
-- 
Tim Johnson <tim@johnsons-web.com>
      http://www.alaska-internet-solutions.com
From crankycoder at gmail.com  Sun Nov 14 20:14:16 2004
From: crankycoder at gmail.com (Victor Ng)
Date: Sun Nov 14 20:14:19 2004
Subject: [mod_python] install problems under Fink and OSX 10.3 Panther
Message-ID: <a8bfd74c041114171436644e32@mail.gmail.com>

Hi all, I'm having problems getting mod_python to run using Apache2
using Fink 0.23.2.

I have the following lines in my httpd.conf file:

   1123 <Directory /Users/victorng/Sites>
   1124     AddHandler mod_python .py
   1125     PythonHandler mod_python.publisher
   1126     PythonDebug On
   1127 </Directory>

When I try running the mptest.py I get a 500 internal server error and
the following lines show up in my Apache error log:

[Sun Nov 14 20:13:11 2004] [error] make_obcallback: could not import
mod_python.apache.\n
[Sun Nov 14 20:13:11 2004] [error] Optional hook test said: GET
/~victorng/mptest.py HTTP/1.1
[Sun Nov 14 20:13:11 2004] [error] Optional function test said: GET
/~victorng/mptest.py HTTP/1.1

I have no idea what I'm doing wrong - anyone have a tip?

vic
From jubafre at atlas.ucpel.tche.br  Sun Nov 14 22:29:50 2004
From: jubafre at atlas.ucpel.tche.br (Juliano Freitas)
Date: Sun Nov 14 22:28:32 2004
Subject: [mod_python] form question
Message-ID: <1100489390.5886.11.camel@swdb>

I have 7 different pages, how can i get the form information of each one
and join all together usin cgi?? For example i click to insert visual
information about a sign (i'm doiing a database of the sign language
used by deasf people) after to submit this i want to insert linguistic
information about a sing and then join the information about the both
forms, how can i get this??


Juliano Freitas

From godoy at ieee.org  Sun Nov 14 22:37:48 2004
From: godoy at ieee.org (Jorge Godoy)
Date: Sun Nov 14 22:40:23 2004
Subject: [mod_python] Re: form question
References: <1100489390.5886.11.camel@swdb>
Message-ID: <m31xev4wab.fsf@g2ctech.com>

Juliano Freitas <jubafre@atlas.ucpel.tche.br> writes:

> I have 7 different pages, how can i get the form information of each one
> and join all together usin cgi?? For example i click to insert visual
> information about a sign (i'm doiing a database of the sign language
> used by deasf people) after to submit this i want to insert linguistic
> information about a sing and then join the information about the both
> forms, how can i get this??

You can use invisible controls and keep posting the data across the
pages and using them on the end.

-- 
Godoy.     <godoy@ieee.org>

From jryan at qutang.net  Mon Nov 15 13:37:17 2004
From: jryan at qutang.net (Justin Ryan)
Date: Mon Nov 15 13:37:21 2004
Subject: [mod_python] install problems under Fink and OSX 10.3 Panther
In-Reply-To: <a8bfd74c041114171436644e32@mail.gmail.com>
References: <a8bfd74c041114171436644e32@mail.gmail.com>
Message-ID: <60535EF7-3735-11D9-8FBE-000D93AD1DB8@qutang.net>

Please explain how you've installed mod_python...

On Nov 14, 2004, at 5:14 PM, Victor Ng wrote:

> Hi all, I'm having problems getting mod_python to run using Apache2
> using Fink 0.23.2.
>
> I have the following lines in my httpd.conf file:
>
>    1123 <Directory /Users/victorng/Sites>
>    1124     AddHandler mod_python .py
>    1125     PythonHandler mod_python.publisher
>    1126     PythonDebug On
>    1127 </Directory>
>
> When I try running the mptest.py I get a 500 internal server error and
> the following lines show up in my Apache error log:
>
> [Sun Nov 14 20:13:11 2004] [error] make_obcallback: could not import
> mod_python.apache.\n
> [Sun Nov 14 20:13:11 2004] [error] Optional hook test said: GET
> /~victorng/mptest.py HTTP/1.1
> [Sun Nov 14 20:13:11 2004] [error] Optional function test said: GET
> /~victorng/mptest.py HTTP/1.1
>
> I have no idea what I'm doing wrong - anyone have a tip?
>
> vic
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From crankycoder at gmail.com  Mon Nov 15 14:47:36 2004
From: crankycoder at gmail.com (Victor Ng)
Date: Mon Nov 15 14:47:39 2004
Subject: [mod_python] install problems under Fink and OSX 10.3 Panther
In-Reply-To: <60535EF7-3735-11D9-8FBE-000D93AD1DB8@qutang.net>
References: <a8bfd74c041114171436644e32@mail.gmail.com>
	<60535EF7-3735-11D9-8FBE-000D93AD1DB8@qutang.net>
Message-ID: <a8bfd74c04111511474d6bfcbb@mail.gmail.com>

There's really not much to it is there?  I just did the usual
configure; make; make install

$ ./configure --with-apxs=/sw/sbin/apxs --with-python=/sw/bin/python
$ make clean; make; sudo make install

I added :

LoadModule python_module /sw/lib/apache2/modules/mod_python.so

to my httpd.conf file for Apache2, then I added the couple lines of
config to run the mptest.py script.

> >    1123 <Directory /Users/victorng/Sites>
> >    1124     AddHandler mod_python .py
> >    1125     PythonHandler mod_python.publisher
> >    1126     PythonDebug On
> >    1127 </Directory>

Did I miss something?

vic



On Mon, 15 Nov 2004 10:37:17 -0800, Justin Ryan <jryan@qutang.net> wrote:
> Please explain how you've installed mod_python...
> 
> 
> 
> On Nov 14, 2004, at 5:14 PM, Victor Ng wrote:
> 
> > Hi all, I'm having problems getting mod_python to run using Apache2
> > using Fink 0.23.2.
> >
> > I have the following lines in my httpd.conf file:
> >
> >    1123 <Directory /Users/victorng/Sites>
> >    1124     AddHandler mod_python .py
> >    1125     PythonHandler mod_python.publisher
> >    1126     PythonDebug On
> >    1127 </Directory>
> >
> > When I try running the mptest.py I get a 500 internal server error and
> > the following lines show up in my Apache error log:
> >
> > [Sun Nov 14 20:13:11 2004] [error] make_obcallback: could not import
> > mod_python.apache.\n
> > [Sun Nov 14 20:13:11 2004] [error] Optional hook test said: GET
> > /~victorng/mptest.py HTTP/1.1
> > [Sun Nov 14 20:13:11 2004] [error] Optional function test said: GET
> > /~victorng/mptest.py HTTP/1.1
> >
> > I have no idea what I'm doing wrong - anyone have a tip?
> >
> > vic
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From toby at rcsreg.com  Mon Nov 15 08:12:19 2004
From: toby at rcsreg.com (Tobiah)
Date: Mon Nov 15 15:09:39 2004
Subject: [mod_python] Re: form question
In-Reply-To: <m31xev4wab.fsf@g2ctech.com>
References: <1100489390.5886.11.camel@swdb> <m31xev4wab.fsf@g2ctech.com>
Message-ID: <4198AB33.7090804@rcsreg.com>

> You can use invisible controls and keep posting the data across the
> pages and using them on the end.
> 

In case you are not familiar with this suggestion, the inputs
look like this:

<INPUT TYPE=hidden NAME=my_variable VALUE='xxx'>

where 'xxx' is the posted value of 'my_variable'
reiterated by python.

The use of a session is better, but more difficult
with mod_python.

Tobiah
From jg.lists at sympatico.ca  Mon Nov 15 17:08:44 2004
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Nov 15 17:08:01 2004
Subject: [mod_python] Documentation patch for Cookie example
Message-ID: <419928EC.6090800@sympatico.ca>

Howdy

Attached is a patch for the Cookie example in the documentation. This 
patch is against CVS.

I don't see a bug tracker for mod_python, so I assume bug reports / 
patches go to the list?

Thanks for a great module.

Jim
-------------- next part --------------
--- modpython4.tex.old	2004-11-15 16:30:57.000000000 -0500
+++ modpython4.tex	2004-11-15 16:31:29.000000000 -0500
@@ -1801,7 +1801,7 @@
 
 def handler(req):
     
-    cookies = Cookie.get_cookie(req, Cookie.MarshalCookie,
+    cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
                                     secret='secret007')
     if cookies.has_key('spam'):
         spamcookie = cookies['spam']
From list at joreybump.com  Mon Nov 15 17:50:48 2004
From: list at joreybump.com (Jorey Bump)
Date: Mon Nov 15 17:51:01 2004
Subject: [mod_python] install problems under Fink and OSX 10.3 Panther
In-Reply-To: <a8bfd74c04111511474d6bfcbb@mail.gmail.com>
References: <a8bfd74c041114171436644e32@mail.gmail.com>	<60535EF7-3735-11D9-8FBE-000D93AD1DB8@qutang.net>
	<a8bfd74c04111511474d6bfcbb@mail.gmail.com>
Message-ID: <419932C8.5060603@joreybump.com>

Victor Ng wrote:

> There's really not much to it is there?  I just did the usual
> configure; make; make install
> 
> $ ./configure --with-apxs=/sw/sbin/apxs --with-python=/sw/bin/python
> $ make clean; make; sudo make install
> 
> I added :
> 
> LoadModule python_module /sw/lib/apache2/modules/mod_python.so
> 
> to my httpd.conf file for Apache2, then I added the couple lines of
> config to run the mptest.py script.
> 
> 
>>>   1123 <Directory /Users/victorng/Sites>
>>>   1124     AddHandler mod_python .py
>>>   1125     PythonHandler mod_python.publisher
>>>   1126     PythonDebug On
>>>   1127 </Directory>
> 
> 
> Did I miss something?

You seem to be mixing up your examples. To test publisher, try something 
like this:

<Directory /var/www/documentroot>
    AddHandler python-program .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

Create test.py:

def hello(req):
     x = "Hello, world!"
     return x

Restart apache (if you modified httpd.conf), point your browser to:

  http://localhost/test.py/hello

and see if that works.


From bje at apnic.net  Mon Nov 15 18:54:23 2004
From: bje at apnic.net (Byron Ellacott)
Date: Mon Nov 15 18:52:50 2004
Subject: [mod_python] Re: form question
In-Reply-To: <4198AB33.7090804@rcsreg.com>
References: <1100489390.5886.11.camel@swdb> <m31xev4wab.fsf@g2ctech.com>
	<4198AB33.7090804@rcsreg.com>
Message-ID: <419941AF.1060107@apnic.net>

Tobiah wrote:
> The use of a session is better, but more difficult
> with mod_python.

I'd have to disagree with both of these :)

Using a session:

from mod_python import Session

sess = Session.Session(req)
# ... handle response ...
sess.save()

Pretty trivial! :)

As for the use of a session being better, that's generally not true, or 
at least, not if the session is being tracked by a cookie.  A session 
consists of all transactions performed by a user[0] with the same 
tracking ID.  If that tracking ID is in a cookie, that means /all/ 
transactions done by a user are part of the same session.

Over time, people typically become more comfortable with doing multiple 
things with their browsers at once, using tabbed browsing or multiple 
windows.  But cookies are global to all browser pages, so to a user it 
may seem like they're working two or three separate threads of 
transactions, but to the server, those threads are indistiguishable via 
cookie.

Thus, any system using cookie based sessions to track progress through 
that system will be unable to cope with multiple threads of progress; if 
that's a limitation you can live with, cookie based sessions are trivial 
to use, if it's not there are plenty of ways to work around it.

I'd strongly recommend[1] using path info to track a session:

http://www.example.com/forms/example/8vdsalk342/page1.html
http://www.example.com/forms/example/8vdsalk342/page2.html

The URL will be generated to include the session ID, and from there if 
you're using relative URLs in your markup you can ignore it.  You'll 
need to extract the session ID and pass it as the second argument to 
Session.Session(), but that's pretty trivial too[2].

-- 
bje

[0] For the pedants, read "user" as "useragent, on behalf of the user, "
[1] See http://mlm.bpa.nu/weblog/dev/web/trackingids.writeback
[2] It's marginally harder to create the session initially and get the
     SID out.
From Administrator at leebrown.org  Tue Nov 16 00:56:24 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Tue Nov 16 00:56:39 2004
Subject: [mod_python] install problems under Fink and OSX 10.3 Panther
References: <a8bfd74c041114171436644e32@mail.gmail.com>
Message-ID: <001b01c4cba1$01c5a600$0202a8c0@UberBox>

 
From: "Victor Ng" <crankycoder@gmail.com>
To: <mod_python@modpython.org>
Sent: Sunday, November 14, 2004 8:14 PM
Subject: [mod_python] install problems under Fink and OSX 10.3 Panther


> Hi all, I'm having problems getting mod_python to run using Apache2
> using Fink 0.23.2.

Please pardon my rampant newbie-osity, but what the heck is Fink?
From grisha at modpython.org  Tue Nov 16 16:37:38 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Tue Nov 16 16:37:45 2004
Subject: [mod_python] Documentation patch for Cookie example
In-Reply-To: <419928EC.6090800@sympatico.ca>
References: <419928EC.6090800@sympatico.ca>
Message-ID: <20041116163728.J83703@grisha.dyndns.org>


thanks!

On Mon, 15 Nov 2004, Jim Gallacher wrote:

> Howdy
>
> Attached is a patch for the Cookie example in the documentation. This patch 
> is against CVS.
>
> I don't see a bug tracker for mod_python, so I assume bug reports / patches 
> go to the list?
>
> Thanks for a great module.
>
> Jim
>
From bram-lists at phoenux.org  Wed Nov 17 10:27:21 2004
From: bram-lists at phoenux.org (Bram)
Date: Wed Nov 17 10:27:29 2004
Subject: [mod_python] Sessions and Cookies with mod_python and more
Message-ID: <419B6DD9.9060700@phoenux.org>

Hello All,

First of I would like to thank the mod_python team for providing a great 
module for apache...

That being said, I am a newbie to mod_python, although I have been using 
python for quite some time now and have plenty of experience with 
Perl/mod_perl (but would like to stop using them all together :) ). I 
would like to get any input for you all out there in mod_python land on 
two things:

1. The proper use of Session and Cookie in mod_python - I am really 
looking for folks to make some general comments about their usage of 
these modules, and how they worked out. I would be very thankful to 
anyone who could give some mid to advanced level usage of these. I think 
allot of folks on the list (including myself) could use this kind of info.

2. Any ideas on how to write a mod_python XMLRPC handler that is capable 
of sending/receiving multipart/related data. For those of you not 
familiar with multi part messages, see this: 
http://www.xml.com/lpt/a/98/07/binary/binary.html . multipart messages 
were created for use with email systems, and have been used to send 
binary payloads along with XML messages like XMLRPC. I have implemented 
this type of handler in mod_perl, but I am looking for any mod_python 
related insight into this before porting. Anyone?

Thanks in advance, and keep up the great work!

Bram.

From grahamd at dscpl.com.au  Wed Nov 17 16:30:17 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 17 16:31:41 2004
Subject: [mod_python] Sessions and Cookies with mod_python and more
In-Reply-To: <419B6DD9.9060700@phoenux.org>
Message-ID: <1100727014.80064@dscpl.com.au>

On Nov 17 10:27, Bram <bram-lists@phoenux.org> wrote:
>
> Subject: [mod_python] Sessions and Cookies with mod_python and more
> 2. Any ideas on how to write a mod_python XMLRPC handler that is capable 
> of sending/receiving multipart/related data. For those of you not 
> familiar with multi part messages, see this: 
> http://www.xml.com/lpt/a/98/07/binary/binary.html . multipart messages 
> were created for use with email systems, and have been used to send 
> binary payloads along with XML messages like XMLRPC. I have implemented 
> this type of handler in mod_perl, but I am looking for any mod_python 
> related insight into this before porting. Anyone?

Be careful about referring to this as XMLRPC as people will possibly think
you are talking about XML-RPC which is different. The original RPC over
HTTP protocol called "XML-RPC" has no support for multipart messages.

Information about XML-RPC can be found at:

  http://www.xmlrpc.com

Anyway, you might as a start, look at:

  mod_python.utils.FieldStorage

This is primarily intended for handing HTML forms, but if one is doing file
uploads one uses a form encoding type of "multipart/form-data" which starts
to be more like what you want as boundaries will be put in the posted data
allowing elements of different types to be include in the one POST request.
You may be able to fit what you are doing into this model and use that
class as a base or at least get ideas from it.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From bram-lists at phoenux.org  Wed Nov 17 17:44:50 2004
From: bram-lists at phoenux.org (Bram)
Date: Wed Nov 17 17:44:58 2004
Subject: [mod_python] Sessions and Cookies with mod_python and more
In-Reply-To: <1100727014.80064@dscpl.com.au>
References: <1100727014.80064@dscpl.com.au>
Message-ID: <419BD462.3010504@phoenux.org>

Graham,

You hit the nail on the head, as I am speaking of XML-RPC. Your form 
example is a good one, and I will take a closer look at 
mod_python.utils.FieldStorage. Thanks for that bit of info. Although, I 
am not sure that it will meet my needs completely. That being said I 
will explain further. I am currently using a mod_perl XML-RPC server 
that was modified to handle large binary files. I have found that 
passing large binary strings in XML via XML-RPC (or any other protocol 
for that matter) even with careful attention to the encoding can lead to 
problems. I know that with XML-RPC one may use the <base64> tag to 
encapsulate binary data directly within the XML document. However, is 
this the best way to handle this when dealing with large files? In my 
mod_perl implementation, I have a multipart/related handing situation 
setup, i.e. the first part of the multipart/related message would be the 
XML-RPC request/reply and the second (and 3rd, 4th, etc. if need) part 
is binary data referenced by the XML-RPC data. I am not saying this is 
the best solution, and may not even adhere to any specification, but I 
haven't found a better one to date. I admit it is a little hackish. :) 
Any suggestions to improve upon this, or even suggestions totally 
rethinking it? In short, what would be an efficient way to transfer 
large files via an XML based, standards based web service like XML-RPC?

Thanks again, and in advance!
Bram.

Graham Dumpleton wrote:

>On Nov 17 10:27, Bram <bram-lists@phoenux.org> wrote:
>  
>
>>Subject: [mod_python] Sessions and Cookies with mod_python and more
>>2. Any ideas on how to write a mod_python XMLRPC handler that is capable 
>>of sending/receiving multipart/related data. For those of you not 
>>familiar with multi part messages, see this: 
>>http://www.xml.com/lpt/a/98/07/binary/binary.html . multipart messages 
>>were created for use with email systems, and have been used to send 
>>binary payloads along with XML messages like XMLRPC. I have implemented 
>>this type of handler in mod_perl, but I am looking for any mod_python 
>>related insight into this before porting. Anyone?
>>    
>>
>
>Be careful about referring to this as XMLRPC as people will possibly think
>you are talking about XML-RPC which is different. The original RPC over
>HTTP protocol called "XML-RPC" has no support for multipart messages.
>
>Information about XML-RPC can be found at:
>
>  http://www.xmlrpc.com
>
>Anyway, you might as a start, look at:
>
>  mod_python.utils.FieldStorage
>
>This is primarily intended for handing HTML forms, but if one is doing file
>uploads one uses a form encoding type of "multipart/form-data" which starts
>to be more like what you want as boundaries will be put in the posted data
>allowing elements of different types to be include in the one POST request.
>You may be able to fit what you are doing into this model and use that
>class as a base or at least get ideas from it.
>
>--
>Graham Dumpleton (grahamd@dscpl.com.au)
>  
>
From grahamd at dscpl.com.au  Wed Nov 17 18:57:27 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 17 18:57:30 2004
Subject: [mod_python] Sessions and Cookies with mod_python and more
In-Reply-To: <419BD462.3010504@phoenux.org>
Message-ID: <1100735842.93022@dscpl.com.au>

On Nov 17 17:44, Bram <bram-lists@phoenux.org> wrote:
>
> Subject: Re: [mod_python] Sessions and Cookies with mod_python and more
>
> Graham,
> 
> You hit the nail on the head, as I am speaking of XML-RPC. Your form 
> example is a good one, and I will take a closer look at 
> mod_python.utils.FieldStorage. Thanks for that bit of info. Although, I 
> am not sure that it will meet my needs completely. That being said I 
> will explain further. I am currently using a mod_perl XML-RPC server 
> that was modified to handle large binary files. I have found that 
> passing large binary strings in XML via XML-RPC (or any other protocol 
> for that matter) even with careful attention to the encoding can lead to 
> problems. I know that with XML-RPC one may use the <base64> tag to 
> encapsulate binary data directly within the XML document. However, is 
> this the best way to handle this when dealing with large files? In my 
> mod_perl implementation, I have a multipart/related handing situation 
> setup, i.e. the first part of the multipart/related message would be the 
> XML-RPC request/reply and the second (and 3rd, 4th, etc. if need) part 
> is binary data referenced by the XML-RPC data. I am not saying this is 
> the best solution, and may not even adhere to any specification, but I 
> haven't found a better one to date. I admit it is a little hackish. :) 
> Any suggestions to improve upon this, or even suggestions totally 
> rethinking it? In short, what would be an efficient way to transfer 
> large files via an XML based, standards based web service like XML-RPC?

Hmmm, not really XML-RPC. More like SOAP with attachments.

Since though you are still trying to use the simpler XML-RPC for
the structured data component, also have a look at SimpleXMLRPCServer
and xmlrpclib modules.

It isn't too hard to use SimpleXMLRPCServer as a base to construct a
XML-RPC handler for mod_python. See vampire/xmlrpc.py in my Vampire
package at "http://www.dscpl.com.au/projects/vampire" as an example.

In your case, you would need to change things though so as to use the
convention you want to to indicate that you are returning attachments
to the response or a multipart response.

Ie., normally xmlrpclib/SimpleXMLRPCServer will try and encode the
complete result of the method called. You might modify it such that if
you returned a class object of specific type, which had named components
in it and how to encode each, that the basic XML-RPC handler behaved
a bit different and put it back as multipart data. Obviously a standard
XML-RPC client can't be used to talk to it, but you already know that.

As well as looking at SimpleXMLRPCServer and xmlrpclib, Python also has
the cgi module. It also has a version of FieldStorage in it as well as some
more basic functions for parsing multipart messages. This would be
useful on the client side as the FieldStorage class in mod_python isn't
going to be usable outside of the context of a mod_python handler.

Having said all that, the REST folks would probably say that you shouldn't
return multipart data and that instead you should return a response
which then enumerates the links to each part and a subsequent request
made to get each bit. :-)

BTW, mean't "mod_python.util.FieldStorage". Ie., "util", not "utils".

--
Graham Dumpleton (grahamd@dscpl.com.au)
From kd7spq at gmail.com  Wed Nov 17 22:22:25 2004
From: kd7spq at gmail.com (Josh Goldsmith)
Date: Wed Nov 17 22:22:39 2004
Subject: [mod_python] Help converting cgi to mod_python
Message-ID: <dd11696704111719227a335bd@mail.gmail.com>

Hi all,

  I'm sure that this is a very common question (though after looking
thru a few months of the archives maybe not) but is there an easy way
to convert a cgi written around the cgi module to work in  mod_python?

 I've spent the last couple of weeks teaching myself python (and
MySQL) while writing a cgi and it is running slower than I'd like (15
tps on a 1ghz Athlon).  In looking to speed it up, I observed that
starting Python was where most of the delay came from.  With further
poking, I found mod_python and have been poking at it to get a feel
for it.  Unfortunately I have not found nearly enough examples to
fully get it.

  Any pointers, links, or other help would be appreciated!

-Josh

PS.  Using Python 2.3, Apache 2.0.52, and mod_python 3.1.3
From gustavo.cordova at q-voz.com  Thu Nov 18 09:42:18 2004
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Thu Nov 18 09:37:10 2004
Subject: [mod_python] Help converting cgi to mod_python
In-Reply-To: <dd11696704111719227a335bd@mail.gmail.com>
References: <dd11696704111719227a335bd@mail.gmail.com>
Message-ID: <419CB4CA.3040701@q-voz.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041118/adeee45d/signature.bin
From bray at sent.com  Thu Nov 18 09:46:21 2004
From: bray at sent.com (Brian Ray)
Date: Thu Nov 18 09:46:31 2004
Subject: [mod_python] Help converting cgi to mod_python
In-Reply-To: <dd11696704111719227a335bd@mail.gmail.com>
References: <dd11696704111719227a335bd@mail.gmail.com>
Message-ID: <9C992EDC-3970-11D9-9479-000A95BF3560@sent.com>


On Nov 17, 2004, at 9:22 PM, Josh Goldsmith wrote:
>
>
>   Any pointers, links, or other help would be appreciated!
>
> -Josh
>

This tutorial as well and project (mpservlets) uses a mod-python 
integration and has helped be get up and stated:

http://home.comcast.net/~d.popowich/mpservlets/

Check out the live tutorial:

http://lnx1.blue-fox.com/~dpopowich/mpstutorial/

From nick at dd.revealed.net  Thu Nov 18 09:46:44 2004
From: nick at dd.revealed.net (Nick)
Date: Thu Nov 18 09:47:11 2004
Subject: [mod_python] Help converting cgi to mod_python
In-Reply-To: <419CB4CA.3040701@q-voz.com>
References: <dd11696704111719227a335bd@mail.gmail.com>
	<419CB4CA.3040701@q-voz.com>
Message-ID: <419CB5D4.3000306@dd.revealed.net>

Gustavo C?rdova Avila wrote:
>
>    4. Some equivalencies:
>             environ["QUERY_STRING"]   --> request.args
>             environ["PATH_INFO"]   --> request.path_info
>             environ["HTTP_METHOD"] --> request.method
>             environ["CONTENT_LENGTH"] --> request.content_length
...
>   10. Instead of looking for environ["HTTP_<header-name>"], use 
> request.headers_in["header-name"]

You can actually get ALL The CGI variables in the req.subprocess_env dict 
after calling req.add_common_vars().  It's much easier to use this if all 
you're doing is converting CGIs.

Nick
From kd7spq at gmail.com  Thu Nov 18 10:00:43 2004
From: kd7spq at gmail.com (Josh Goldsmith)
Date: Thu Nov 18 10:00:55 2004
Subject: [mod_python] Help converting cgi to mod_python
In-Reply-To: <419CB4CA.3040701@q-voz.com>
References: <dd11696704111719227a335bd@mail.gmail.com>
	<419CB4CA.3040701@q-voz.com>
Message-ID: <dd1169670411180700561f0962@mail.gmail.com>

Thank you Gustavo!  That's exactly what I was looking for!

-Josh


On Thu, 18 Nov 2004 08:42:18 -0600, Gustavo C?rdova Avila
<gustavo.cordova@q-voz.com> wrote:
> Josh Goldsmith wrote: 
> 
> 
> Hi all,

 I'm sure that this is a very common question (though after
> looking
thru a few months of the archives maybe not) but is there an easy
> way
to convert a cgi written around the cgi module to work in mod_python?

> I've spent the last couple of weeks teaching myself python (and
MySQL) while
> writing a cgi and it is running slower than I'd like (15
tps on a 1ghz
> Athlon). In looking to speed it up, I observed that
starting Python was
> where most of the delay came from. With further
poking, I found mod_python
> and have been poking at it to get a feel
for it. Unfortunately I have not
> found nearly enough examples to
fully get it.

 Any pointers, links, or
> other help would be appreciated!

-Josh

PS. Using Python 2.3, Apache
> 2.0.52, and mod_python
> 3.1.3
_______________________________________________
Mod_python mailing
> list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

> It's isn't much trouble converting a CGI to a mod_python handler, the ten
> points you need to know:
> 
>     1. At the top: from mod_python import apache, util
>     2. Encapsulate all your processing in functions, no inline-script stuff
> should do request processing.
>     3. Your program's entry point is a function called "handler" which takes
> a single parameter (the request object).
>     4. Some equivalencies:
>              environ["QUERY_STRING"]   --> request.args
>              environ["PATH_INFO"]   --> request.path_info
>              environ["HTTP_METHOD"] --> request.method
>              environ["CONTENT_LENGTH"] --> request.content_length
> 
>     5. For posted data, instead of stdin.read() do request.read()
>     6. To return data, instead of print or stdout.write(), do
> request.write()
>     7. Instead of cgi.FieldStorage(stdin) use util.FieldStorage(request)
>     8. Use request.content_type = "content/type" instead of printing it
> before the content.
>     9. Instead of printing out headers, use request.headers_out["name"] =
> "value"
>    10. Instead of looking for environ["HTTP_<header-name>"], use
> request.headers_in["header-name"]
> 
> Or, you could also use mod_python's cgi emulator and not have to do all
> this, but since you talk about maximizing performance, using a handler
> function is about 5 to 10 times quicker than using mod_python's builtin cgi
> emulator.
> 
> Good luck, hope this helps...
> 
> 
> -- 
> Gustavo C?rdova Avila <gustavo.cordova@q-voz.com> 
> Tel: +52 (81) 8130-1919 ext. 127
> Integraciones del Norte, S.A. de C.V.
> Padua #6047, Colonia Sat?lite Acueducto
> Monterrey, Nuevo Le?n, M?xico.
> 
>

From skremer at q.cis.uoguelph.ca  Thu Nov 18 17:42:24 2004
From: skremer at q.cis.uoguelph.ca (Stefan C. Kremer)
Date: Thu Nov 18 17:45:03 2004
Subject: [mod_python] Segmentation Fault
Message-ID: <200411182242.iAIMgOSw012162@q.cis.uoguelph.ca>

I am able to generate a segmentation fault within mod python by executing:

getattr( req, 'boundary' )

Can anyone confirm or refute this behaviour on python2.3.4, apache2.0.52, momod_python2.3.

Or also,

req.boundary

-Stefan

From dg at sponsera.com  Sat Nov 20 10:30:24 2004
From: dg at sponsera.com (David Geller)
Date: Sat Nov 20 10:31:21 2004
Subject: [mod_python] globals, and MaxRequestsPerChild behavior: weird
Message-ID: <419F6310.5000104@sponsera.com>

Hi,

I am setting a global dictionary (at the module level). Every time the
handler is executed, I check the global to see if it needs to be
initialized, and if so, I set it to some value.

If MaxRequestsPerChild (apache directive) is 0, or a large number, you
get what you would expect: the global needs to be initialized the first
time after an apache restart, and seldom on subsequent requests.

If I set it to 1, however, the same thing happens. I.e., it seems as if
the module is not being re-loaded for each request, which is what I
thought was the implication for MaxRequestsPerChild = 1.

However, if I set MaxKeepAliveRequests to 1 as well, then the global
needs to be initialized on *alternate* requests. I.e., first time, yes.
2nd time, no, etc.

Does anyone have an explanation for this? I am quite puzzled.

(this is for MPM = prefork (as far as I know), on linux, apache 2.0.48,
mod_python 3.1.3, python 2.3.4)

Thanks!

David Geller

From lbradley at hush.com  Sun Nov 21 05:00:12 2004
From: lbradley at hush.com (lbradley@hush.com)
Date: Sun Nov 21 05:00:17 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache
Message-ID: <200411211000.iALA0EAd097035@mailserver2.hushmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I'm trying to get mod python working on a unix host. When I set
it up according to the instructions, I get a 500 error and the
following in my error log:
make_obcallback: could not import mod_python.apache

On Apache 2 on my local computer (running XP) the exact same setup
works fine.
The problem system is running:
 Apache/2.0.49 (Unix) mod_ssl/2.0.49 OpenSSL/0.9.7d DAV/2 PHP/4.3.6
mod_python/3.1.3 Python/2.3.4

Any ideas?
-----BEGIN PGP SIGNATURE-----
Note: This signature can be verified at https://www.hushtools.com/verify
Version: Hush 2.4

wkYEARECAAYFAkGgZyMACgkQhiYrq+nRF6o1hQCeNttxRexOD8OsGoqEe3V6WWBlw+wA
niKHjqZZP0phoKPnVh56uq7KMkGD
=RMS5
-----END PGP SIGNATURE-----




Concerned about your privacy? Follow this link to get
secure FREE email: http://www.hushmail.com/?l=2

Free, ultra-private instant messaging with Hush Messenger
http://www.hushmail.com/services-messenger?l=434

Promote security and make money with the Hushmail Affiliate Program: 
http://www.hushmail.com/about-affiliate?l=427
From grahamd at dscpl.com.au  Sun Nov 21 16:24:32 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Nov 21 16:24:43 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache
In-Reply-To: <200411211000.iALA0EAd097035@mailserver2.hushmail.com>
Message-ID: <1101072269.8058@dscpl.com.au>

On Nov 21 02:00, <lbradley@hush.com> wrote:
>
> I'm trying to get mod python working on a unix host. When I set
> it up according to the instructions, I get a 500 error and the
> following in my error log:
> make_obcallback: could not import mod_python.apache
> 
> On Apache 2 on my local computer (running XP) the exact same setup
> works fine.
> The problem system is running:
>  Apache/2.0.49 (Unix) mod_ssl/2.0.49 OpenSSL/0.9.7d DAV/2 PHP/4.3.6
> mod_python/3.1.3 Python/2.3.4
> 
> Any ideas?

One of the reasons you will get that error is if the Python modules for mod_python
are not actually installed, or not installed in the location where the version of
Python used by mod_python expects them to be.

What happens when you run Python on the command line and try and import
mod_python?

/usr/local/apache-2.0/logs [509]$ python
Python 2.3 (#1, Sep 13 2003, 00:49:11) 
[GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import mod_python.apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
ImportError: No module named mod_python.apache
>>>

Do you get whats above or what is below?

/usr/local/apache-2.0/logs [510]$ python
Python 2.3 (#1, Sep 13 2003, 00:49:11) 
[GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import mod_python.apache
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/
mod_python/apache.py", line 28, in ?
    import _apache
ImportError: No module named _apache
>>> 

If you get the first error then mod_python isn't even installed correctly for the
version of Python being used. Get the second error and it is at least installed.
You will get the error about "_apache" as it only exists when modules are
imported within the contect of a running Apache process under mod_python
Apache handler.

If you have multiple versions of Python installed, make sure you do this with
the exact version that mod_python handler for Apache is actually using.

If you want further help you are going to have to say which UNIX platform you
are on. Also, show the full error messages appearing around the make_obcallback
error in the logs. Ie., include the mod_python extension loading message.

[Mon Nov 22 08:12:39 2004] [notice] mod_python: Creating 32 session mutexes based on 6 max 
processes and 25 max threads.
[Mon Nov 22 08:12:40 2004] [notice] Apache/2.0.51 (Unix) mod_python/3.1.3 Python/2.3 configured 
-- resuming normal operations
[Mon Nov 22 08:13:24 2004] [error] make_obcallback: could not import mod_python.apache.\n 

--
Graham Dumpleton (grahamd@dscpl.com.au)
From rednelb at chello.sk  Sun Nov 21 16:59:49 2004
From: rednelb at chello.sk (rednelb)
Date: Sun Nov 21 16:45:24 2004
Subject: [mod_python] Refresh browser's images on server's request
Message-ID: <41A10FD5.8030002@chello.sk>

Hi all,
Please can someone tell me if it is possible, and if so - how, to 
refresh images in client's browser only when they change on server? I'm 
not thinking of a cache, rather imagine following: a few people are 
looking on the same web page. It has a few images. A user can change an 
image. When this happens, the others should immediately see the changes, 
e.g. their browsers have to refresh the page automatically.
Can Mod_python do this?
I will be very thankful for any help, tip, hint, example, strategy, ....
Thank you in advance.
From bje at apnic.net  Sun Nov 21 18:08:55 2004
From: bje at apnic.net (Byron Ellacott)
Date: Sun Nov 21 18:07:21 2004
Subject: [mod_python] Refresh browser's images on server's request
In-Reply-To: <41A10FD5.8030002@chello.sk>
References: <41A10FD5.8030002@chello.sk>
Message-ID: <41A12007.2050901@apnic.net>

rednelb wrote:
> Please can someone tell me if it is possible, and if so - how, to 
> refresh images in client's browser only when they change on server? I'm 
> not thinking of a cache, rather imagine following: a few people are 
> looking on the same web page. It has a few images. A user can change an 
> image. When this happens, the others should immediately see the changes, 
> e.g. their browsers have to refresh the page automatically.
> Can Mod_python do this?

HTTP cannot do this.

HTTP is a pull mechanism: the client issues a request, the server 
provides a response.  Server side events cannot cause the client to 
issue a new request, because the client remains blissfully unaware of them.

You can work around it.  You can send an animated GIF, hold the 
connection open and send the new image as a new frame when you receive 
it.  You can send a Java applet, and have that applet maintain a 
connection to the server.  You can have the client refresh the image 
periodically, via JavaScript or a Refresh header.  You can maintain the 
connection for a surrounding HTML page, and continuously send inline 
<script> elements to change an image's source.

But just be aware, they are all hacks, and they will all cause their own 
problems.

-- 
bje
From lbradley at hush.com  Sun Nov 21 20:26:30 2004
From: lbradley at hush.com (lbradley@hush.com)
Date: Sun Nov 21 20:26:34 2004
Subject: [mod_python] make_obcallback: could not import mod_python.apache
Message-ID: <200411220126.iAM1QVBY066050@mailserver2.hushmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Thanks for your response. I'm able to import the modules from the
python interpreter invoked from the command line, and yes I can't
import _apache, which is apparently normal. You asked what version
of Unix I'm using. Its on a remote host where I don't have root,
netcraft.com says "Linux" and I'm not sure how to find out from the
command line. The host is grokthis.net, and he gives you your own
apache configuration files...But there seems to be a shared version
of mod_python so it looks at this point like its beyond my control,
its not my fault. So I'm going to go ahead and take it up with my
sysadmin. Thanks for you help!

On Sun, 21 Nov 2004 13:24:32 -0800 Graham Dumpleton
<grahamd@dscpl.com.au> wrote:
>On Nov 21 02:00, <lbradley@hush.com> wrote:
>>
>> I'm trying to get mod python working on a unix host. When I set
>> it up according to the instructions, I get a 500 error and the
>> following in my error log:
>> make_obcallback: could not import mod_python.apache
>>
>> On Apache 2 on my local computer (running XP) the exact same
>setup
>> works fine.
>> The problem system is running:
>>  Apache/2.0.49 (Unix) mod_ssl/2.0.49 OpenSSL/0.9.7d DAV/2
>PHP/4.3.6
>> mod_python/3.1.3 Python/2.3.4
>>
>> Any ideas?
>
>One of the reasons you will get that error is if the Python
>modules for mod_python
>are not actually installed, or not installed in the location where
>the version of
>Python used by mod_python expects them to be.
>
>What happens when you run Python on the command line and try and
>import
>mod_python?
>
>/usr/local/apache-2.0/logs [509]$ python
>Python 2.3 (#1, Sep 13 2003, 00:49:11)
>[GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
>Type "help", "copyright", "credits" or "license" for more
>information.
>>>> import mod_python.apache
>Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>ImportError: No module named mod_python.apache
>>>>
>
>Do you get whats above or what is below?
>
>/usr/local/apache-2.0/logs [510]$ python
>Python 2.3 (#1, Sep 13 2003, 00:49:11)
>[GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
>Type "help", "copyright", "credits" or "license" for more
>information.
>>>> import mod_python.apache
>Traceback (most recent call last):
>  File "<stdin>", line 1, in ?
>  File
>"/System/Library/Frameworks/Python.framework/Versions/2.3/lib/pytho
>n2.3/site-packages/
>mod_python/apache.py", line 28, in ?
>    import _apache
>ImportError: No module named _apache
>>>>
>
>If you get the first error then mod_python isn't even installed
>correctly for the
>version of Python being used. Get the second error and it is at
>least installed.
>You will get the error about "_apache" as it only exists when
>modules are
>imported within the contect of a running Apache process under
>mod_python
>Apache handler.
>
>If you have multiple versions of Python installed, make sure you
>do this with
>the exact version that mod_python handler for Apache is actually
>using.
>
>If you want further help you are going to have to say which UNIX
>platform you
>are on. Also, show the full error messages appearing around the
>make_obcallback
>error in the logs. Ie., include the mod_python extension loading
>message.
>
>[Mon Nov 22 08:12:39 2004] [notice] mod_python: Creating 32
>session mutexes based on 6 max
>processes and 25 max threads.
>[Mon Nov 22 08:12:40 2004] [notice] Apache/2.0.51 (Unix)
>mod_python/3.1.3 Python/2.3 configured
>-- resuming normal operations
>[Mon Nov 22 08:13:24 2004] [error] make_obcallback: could not
>import mod_python.apache.\n
>
>--
>Graham Dumpleton (grahamd@dscpl.com.au)
-----BEGIN PGP SIGNATURE-----
Note: This signature can be verified at https://www.hushtools.com/verify
Version: Hush 2.4

wkYEARECAAYFAkGhQD8ACgkQhiYrq+nRF6p6YACeP1e1MWAzUSgHbFFjYyR8vloRa7gA
n1fHAF88Z+C0nYPZKxvatwJylaKX
=ZYGg
-----END PGP SIGNATURE-----




Concerned about your privacy? Follow this link to get
secure FREE email: http://www.hushmail.com/?l=2

Free, ultra-private instant messaging with Hush Messenger
http://www.hushmail.com/services-messenger?l=434

Promote security and make money with the Hushmail Affiliate Program: 
http://www.hushmail.com/about-affiliate?l=427
From jar at ipac.caltech.edu  Mon Nov 22 00:09:06 2004
From: jar at ipac.caltech.edu (John Rector)
Date: Mon Nov 22 00:07:53 2004
Subject: [mod_python] warning: "_POSIX_C_SOURCE" redefined - is this a
	significant problem?
Message-ID: <A2B830C0-3C44-11D9-B923-0003930E7CA8@ipac.caltech.edu>

Environment:

RedHat Linux Enterprise 3

 > gcc -v
Reading specs from /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/specs
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man  
--infodir=/usr/share/info --enable-shared --enable-threads=posix  
--disable-checking --with-system-zlib --enable-__cxa_atexit  
--host=i386-redhat-linux
Thread model: posix
gcc version 3.2.3 20030502 (Red Hat Linux 3.2.3-42)


I build Apache httpd, Python and then mod_python, and I get

  warning: "_POSIX_C_SOURCE" redefined

Here's the build scenario with reported errors. Can anyone comment on  
the significance of this?

# =========== make clean
rm -rf /tmp/httpd-2.0.52 /tmp/python

# =========== make httpd
cd ~/src
rm -rf httpd-2.0.52
tar zxvf ~/downloads/httpd-2.0.52.tar.gz
cd httpd-2.0.52
./configure --prefix=/tmp/httpd-2.0.52 \
     --enable-mods-shared=most \
     --enable-so

make
sudo make install

# =========== make Python
cd ~/src
rm -rf Python-2.3.4
tar zxvf ~/downloads/Python-2.3.4.tgz
cd Python-2.3.4
./configure --prefix=/tmp/python --enable-shared
make
make test
sudo make install

# ========== update environment
sudo chown -R auser: /tmp/httpd-2.0.52 /tmp/python
export  
LD_LIBRARY_PATH=/tmp/httpd-2.0.52/lib:/tmp/python-2.3.4/ 
lib:$LD_LIBRARY_PATH

# ========== make mod_python
cd ~/src
rm -rf mod_python-3.1.3
tar zxvf ~/downloads/mod_python-3.1.3.tgz
cd mod_python-3.1.3
./configure --with-apxs=/tmp/httpd-2.0.52/bin/apxs  
--with-python=/tmp/python/bin/python2.3
make

make[1]: Entering directory `/data/home/auser/src/mod_python-3.1.3/src'

Compiling for DSO.

/tmp/httpd-2.0.52/bin/apxs  
-I/home/auser/src/mod_python-3.1.3/src/include  
-I/tmp/httpd-2.0.52/include -I/tmp/python/include/python2.3 -c  
mod_python.c _apachemodule.c requestobject.c tableobject.c util.c  
serverobject.c connobject.c filterobject.c hlist.c hlistobject.c  
-L/tmp/python/lib/python2.3/config  -Xlinker -export-dynamic      -lm   
-lpython2.3 -lpthread -ldl -lutil -lm
/tmp/httpd-2.0.52/build/libtool --silent --mode=compile gcc -prefer-pic  
  -DAP_HAVE_DESIGNATED_INITIALIZER -DLINUX=2 -D_REENTRANT  
-D_XOPEN_SOURCE=500 -D_BSD_SOURCE -D_SVID_SOURCE -D_GNU_SOURCE -g -O2  
-pthread -I/tmp/httpd-2.0.52/include  -I/tmp/httpd-2.0.52/include    
-I/tmp/httpd-2.0.52/include   
-I/home/auser/src/mod_python-3.1.3/src/include  
-I/tmp/httpd-2.0.52/include -I/tmp/python/include/python2.3  -c -o  
mod_python.lo mod_python.c && touch mod_python.slo
In file included from /tmp/python/include/python2.3/Python.h:8,
                  from  
/home/auser/src/mod_python-3.1.3/src/include/mod_python.h:57,
                  from mod_python.c:28:
/tmp/python/include/python2.3/pyconfig.h:850:1: warning:  
"_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                  from /tmp/httpd-2.0.52/include/apr.h:112,
                  from /tmp/httpd-2.0.52/include/ap_config.h:19,
                  from /tmp/httpd-2.0.52/include/httpd.h:29,
                  from  
/home/auser/src/mod_python-3.1.3/src/include/mod_python.h:32,
                  from mod_python.c:28:
/usr/include/features.h:131:1: warning: this is the location of the  
previous definition
/tmp/httpd-2.0.52/build/libtool --silent --mode=compile gcc -prefer-pic  
  -DAP_HAVE_DESIGNATED_INITIALIZER -DLINUX=2 -D_REENTRANT  
-D_XOPEN_SOURCE=500 -D_BSD_SOURCE -D_SVID_SOURCE -D_GNU_SOURCE -g -O2  
-pthread -I/tmp/httpd-2.0.52/include  -I/tmp/httpd-2.0.52/include    
-I/tmp/httpd-2.0.52/include   
-I/home/auser/src/mod_python-3.1.3/src/include  
-I/tmp/httpd-2.0.52/include -I/tmp/python/include/python2.3  -c -o  
_apachemodule.lo _apachemodule.c && touch _apachemodule.slo
In file included from /tmp/python/include/python2.3/Python.h:8,
                  from  
/home/auser/src/mod_python-3.1.3/src/include/mod_python.h:57,
                  from _apachemodule.c:25:
/tmp/python/include/python2.3/pyconfig.h:850:1: warning:  
"_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                  from /tmp/httpd-2.0.52/include/apr.h:112,
                  from /tmp/httpd-2.0.52/include/ap_config.h:19,
                  from /tmp/httpd-2.0.52/include/httpd.h:29,
                  from  
/home/auser/src/mod_python-3.1.3/src/include/mod_python.h:32,
                  from _apachemodule.c:25:
/usr/include/features.h:131:1: warning: this is the location of the  
previous definition
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 4448 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041121/65fa94b0/attachment.bin
From grisha at modpython.org  Mon Nov 22 10:16:36 2004
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon Nov 22 10:16:58 2004
Subject: [mod_python] warning: "_POSIX_C_SOURCE" redefined - is this a
	significant problem?
In-Reply-To: <A2B830C0-3C44-11D9-B923-0003930E7CA8@ipac.caltech.edu>
References: <A2B830C0-3C44-11D9-B923-0003930E7CA8@ipac.caltech.edu>
Message-ID: <20041122101516.K14222@grisha.dyndns.org>


I haven't heard it cause any problems for anyone so far. This is part of 
Python, so not much can be done about it from mod_python.

Grisha

On Sun, 21 Nov 2004, John Rector wrote:

> Environment:
>
> RedHat Linux Enterprise 3
>
>> gcc -v
> Reading specs from /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/specs
> Configured with: ../configure --prefix=/usr --mandir=/usr/share/man 
> --infodir=/usr/share/info --enable-shared --enable-threads=posix 
> --disable-checking --with-system-zlib --enable-__cxa_atexit 
> --host=i386-redhat-linux
> Thread model: posix
> gcc version 3.2.3 20030502 (Red Hat Linux 3.2.3-42)
>
>
> I build Apache httpd, Python and then mod_python, and I get
>
> warning: "_POSIX_C_SOURCE" redefined
>
> Here's the build scenario with reported errors. Can anyone comment on the 
> significance of this?
>
> # =========== make clean
> rm -rf /tmp/httpd-2.0.52 /tmp/python
>
> # =========== make httpd
> cd ~/src
> rm -rf httpd-2.0.52
> tar zxvf ~/downloads/httpd-2.0.52.tar.gz
> cd httpd-2.0.52
> ./configure --prefix=/tmp/httpd-2.0.52 \
>    --enable-mods-shared=most \
>    --enable-so
>
> make
> sudo make install
>
> # =========== make Python
> cd ~/src
> rm -rf Python-2.3.4
> tar zxvf ~/downloads/Python-2.3.4.tgz
> cd Python-2.3.4
> ./configure --prefix=/tmp/python --enable-shared
> make
> make test
> sudo make install
>
> # ========== update environment
> sudo chown -R auser: /tmp/httpd-2.0.52 /tmp/python
> export LD_LIBRARY_PATH=/tmp/httpd-2.0.52/lib:/tmp/python-2.3.4/ 
> lib:$LD_LIBRARY_PATH
>
> # ========== make mod_python
> cd ~/src
> rm -rf mod_python-3.1.3
> tar zxvf ~/downloads/mod_python-3.1.3.tgz
> cd mod_python-3.1.3
> ./configure --with-apxs=/tmp/httpd-2.0.52/bin/apxs 
> --with-python=/tmp/python/bin/python2.3
> make
>
> make[1]: Entering directory `/data/home/auser/src/mod_python-3.1.3/src'
>
> Compiling for DSO.
>
> /tmp/httpd-2.0.52/bin/apxs -I/home/auser/src/mod_python-3.1.3/src/include 
> -I/tmp/httpd-2.0.52/include -I/tmp/python/include/python2.3 -c mod_python.c 
> _apachemodule.c requestobject.c tableobject.c util.c serverobject.c 
> connobject.c filterobject.c hlist.c hlistobject.c 
> -L/tmp/python/lib/python2.3/config  -Xlinker -export-dynamic      -lm 
> -lpython2.3 -lpthread -ldl -lutil -lm
> /tmp/httpd-2.0.52/build/libtool --silent --mode=compile gcc -prefer-pic 
> -DAP_HAVE_DESIGNATED_INITIALIZER -DLINUX=2 -D_REENTRANT -D_XOPEN_SOURCE=500 
> -D_BSD_SOURCE -D_SVID_SOURCE -D_GNU_SOURCE -g -O2 -pthread 
> -I/tmp/httpd-2.0.52/include  -I/tmp/httpd-2.0.52/include 
> -I/tmp/httpd-2.0.52/include  -I/home/auser/src/mod_python-3.1.3/src/include 
> -I/tmp/httpd-2.0.52/include -I/tmp/python/include/python2.3  -c -o 
> mod_python.lo mod_python.c && touch mod_python.slo
> In file included from /tmp/python/include/python2.3/Python.h:8,
>                 from 
> /home/auser/src/mod_python-3.1.3/src/include/mod_python.h:57,
>                 from mod_python.c:28:
> /tmp/python/include/python2.3/pyconfig.h:850:1: warning: "_POSIX_C_SOURCE" 
> redefined
> In file included from /usr/include/sys/types.h:27,
>                 from /tmp/httpd-2.0.52/include/apr.h:112,
>                 from /tmp/httpd-2.0.52/include/ap_config.h:19,
>                 from /tmp/httpd-2.0.52/include/httpd.h:29,
>                 from 
> /home/auser/src/mod_python-3.1.3/src/include/mod_python.h:32,
>                 from mod_python.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous 
> definition
> /tmp/httpd-2.0.52/build/libtool --silent --mode=compile gcc -prefer-pic 
> -DAP_HAVE_DESIGNATED_INITIALIZER -DLINUX=2 -D_REENTRANT -D_XOPEN_SOURCE=500 
> -D_BSD_SOURCE -D_SVID_SOURCE -D_GNU_SOURCE -g -O2 -pthread 
> -I/tmp/httpd-2.0.52/include  -I/tmp/httpd-2.0.52/include 
> -I/tmp/httpd-2.0.52/include  -I/home/auser/src/mod_python-3.1.3/src/include 
> -I/tmp/httpd-2.0.52/include -I/tmp/python/include/python2.3  -c -o 
> _apachemodule.lo _apachemodule.c && touch _apachemodule.slo
> In file included from /tmp/python/include/python2.3/Python.h:8,
>                 from 
> /home/auser/src/mod_python-3.1.3/src/include/mod_python.h:57,
>                 from _apachemodule.c:25:
> /tmp/python/include/python2.3/pyconfig.h:850:1: warning: "_POSIX_C_SOURCE" 
> redefined
> In file included from /usr/include/sys/types.h:27,
>                 from /tmp/httpd-2.0.52/include/apr.h:112,
>                 from /tmp/httpd-2.0.52/include/ap_config.h:19,
>                 from /tmp/httpd-2.0.52/include/httpd.h:29,
>                 from 
> /home/auser/src/mod_python-3.1.3/src/include/mod_python.h:32,
>                 from _apachemodule.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous 
> definition
>
From alan.ezust at gmail.com  Mon Nov 22 13:30:31 2004
From: alan.ezust at gmail.com (Alan Ezust)
Date: Mon Nov 22 13:30:34 2004
Subject: [mod_python] ImportError: No module named _apache
Message-ID: <f377591c041122103016f76601@mail.gmail.com>

I am getting the same error message. I am using the pre-installed
apache version 1, and I apt-got apache-mod-python.

my apache log looks like this:

Traceback (most recent call last):
  File "/home/ezust/alan/school/uvic/phd/distquery/bin/modtest.py", line 3, in ?
    from mod_python import apache
  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 55, in ?
    import _apache
ImportError: No module named _apache

Which package is the module _apache supposed to come from?


(root@lazarus) /etc (root) > apache -v
Server version: Apache/1.3.31 (Debian GNU/Linux)
Server built:   Oct 29 2004 12:52:40
(root@lazarus) /etc (root) > python -V
Python 2.3.4
(root@lazarus) /etc (root) > uname -a
Linux lazarus 2.4.27 #2 SMP Mo Aug 9 00:39:37 CEST 2004 i686 GNU/Linux
(root@lazarus) /etc (root) >    

-------------------------------------------------
Huzaifa Tapal huzaifa at hostway.com Mon Nov 1 10:43:18 EST 2004
posted to this list:
------------------------------------------------
David, I am running the latest version of Debian on my computer.  Also there
is no error when compiling the _apache module into mod_python and that is
what my original concern was that there seems to be no exception raised if
the compilation fails for _apache.

Here is what I am talking about:

_apacheModule.c: void init_apache(): line 533

Mp_ServerReturn = PyErr_NewException("_apache.SERVER_RETURN", NULL, NULL);
if (Mp_ServerReturn = NULL)
	return;

_apacheModule does not seem to be raising any exceptions when that occurs.

Brian, I just signed up with the list before I posted this message.  How can
I check all the previous list entries to find out how this problem was
covered.

As far as not running this through mod_python on the apache server, as far
as I am concerned, I am.  I pretty much followed exactly what is written in
the documentation including the test file they have to test mod_python, in
which the call to import apache fails:

from mod_python import apache

Any ideas guys?

Huzaifa
From grahamd at dscpl.com.au  Mon Nov 22 16:22:05 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Nov 22 16:22:15 2004
Subject: [mod_python] ImportError: No module named _apache
In-Reply-To: <f377591c041122103016f76601@mail.gmail.com>
Message-ID: <1101158521.81291@dscpl.com.au>

On Nov 22 13:30, Alan Ezust <alan.ezust@gmail.com> wrote:
>
> Subject: Re: [mod_python] ImportError: No module named _apache
>
> I am getting the same error message. I am using the pre-installed
> apache version 1, and I apt-got apache-mod-python.
> 
> my apache log looks like this:
> 
> Traceback (most recent call last):
>   File "/home/ezust/alan/school/uvic/phd/distquery/bin/modtest.py", line 3, in ?
>     from mod_python import apache
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 55, in ?
>     import _apache
> ImportError: No module named _apache
> 
> Which package is the module _apache supposed to come from?

It is installed by the mod_python module when it is loaded by Apache at startup.
Thus, only scripts which are executing under mod_python will actually be able
to import it.

The _apache module will not be available to a Python script which is executed
by Apache as a CGI script.

I raise this specific issue as this is the main reason one can see this error.
Specifically, that the Apache configuration is such that your script is actually
getting executed as a CGI script and not as a mod_python content handler.

One can generally tell this by looking at the messages in the Apache error log
file. You list some of the messages from your error log, but what comes just
after that. Do you also get an error messages talking about "Premature end
of script headers" as shown below.

Traceback (most recent call last):  
  File "/usr/local/etc/httpd/cgi-bin/cgi-env.cgi", line 3, in ?
    from mod_python import apache
  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 55, i
n ?
    import _apache
ImportError: No module named _apache
[Mon Nov 22 14:09:52 2004] [error] [client 163.189.217.36] Premature end of scri
pt headers: /usr/local/etc/httpd/cgi-bin/cgi-env.cgi

This is what I get if I try and import mod_python.apache into a Python CGI script.

> David, I am running the latest version of Debian on my computer.  Also there
> is no error when compiling the _apache module into mod_python and that is
> what my original concern was that there seems to be no exception raised if
> the compilation fails for _apache.
> 
> Here is what I am talking about:
> 
> _apacheModule.c: void init_apache(): line 533
> 
> Mp_ServerReturn = PyErr_NewException("_apache.SERVER_RETURN", NULL, NULL);
> if (Mp_ServerReturn = NULL)
> 	return;
> 
> _apacheModule does not seem to be raising any exceptions when that occurs.

I wouldn't be too concerned about that as it is unlikely to raise an exception as
it is compiled C code which is a part of mod_python itself.

> Brian, I just signed up with the list before I posted this message.  How can
> I check all the previous list entries to find out how this problem was
> covered.

FAQ: http://www.modpython.org/FAQ/faqw.py
ML ARCHIVE: http://www.modpython.org/pipermail/mod_python/

> As far as not running this through mod_python on the apache server, as far
> as I am concerned, I am.  I pretty much followed exactly what is written in
> the documentation including the test file they have to test mod_python, in
> which the call to import apache fails:
> 
> from mod_python import apache
> 
> Any ideas guys?

Ensure that you haven't put your Python code file in a directory which has some
sort of overriding directive that says that all stuff there should be executed as a
CGI script. Alternatively make sure there is no mapping in place which marks a
.py file as a CGI script.

You might also post how you have set up you httpd.conf and/or .htaccess file
and the contents of your Python code file you are using to test so it can be
confirmed that it is correct.

Although the documentation seems to emphasise enabling mod_python for a
directory from the httpd.conf file, this seems to cause more problems that good.
Try instead doing it from a .htaccess file if you are doing it from httpd.conf. At
least then you don't usually have to restart Apache to see if it is going to work.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From grahamd at dscpl.com.au  Mon Nov 22 19:04:32 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Nov 22 19:04:39 2004
Subject: [mod_python] ImportError: No module named _apache
In-Reply-To: <f377591c04112215242533262a@mail.gmail.com>
Message-ID: <1101168269.97092@dscpl.com.au>

On Nov 22 18:24, Alan Ezust <alan.ezust@gmail.com> wrote:
>
> Subject: Re: [mod_python] ImportError: No module named _apache
>
> Thanks for the reply. I got rid of the execCGI permissions in that
> directory (I added it before because apache server was complaining
> about how the permissions were not correct).
> 
> Now I point my browser to the modtest.py (a helloworld application),
> and it asks me to open the URL with an external application, and
> attempts to open it as text. When I do that, I can see that the script
> has executed and the output is in the text file, but why is it not
> opening in my browser?
> 
>  Is there MIME-type preamble I must spit out first?

Try this handler example:

def handler(req):
  req.content_type = "text/plain"
  req.send_http_header()
  req.write("Hello World!")
  return apache.OK

Thus setting "req.content_type" is how you set the mime type.

If you don't set it, Apache will return whatever it may have set as
its default mime type, or perhaps nothing at all depending on your
configuration. If it is sends back nothing at all, you will be at the
mercy of your browsers interpretation of any extension on the
URL you used.

Ensure that you have "req.send_http_header()" if you are using
mod_python 2.X. From memory, in mod_python 3.X it will emit
the headers automatically even if you don't make that call, but
in 2.X it will not.

--
Graham Dumpleton (grahamd@dscpl.com.au)
From jcamden at muel.com  Tue Nov 23 13:00:13 2004
From: jcamden at muel.com (Jerry Camden)
Date: Tue Nov 23 13:00:47 2004
Subject: [mod_python] Getting mod_python to run in apache on an IBM AS/400
	(iSeries)
Message-ID: <!~!UENERkVCMDkAAQACAAAAAAAAAAAAAAAAABgAAAAAAAAAqS1N+rk3IkSFEO/dglgbK8KAAAAQAAAAI/D1rIJvFUCA/G7aMnsxxgEAAAAA@muel.com>

Has anyone had any experience getting mod_python compiled and running on an
IBM AS/400 (iSeries).

OS/400: V5R2
We have ILE C++ and both qshell & PASE installed but don't understand how to
compile the c code from the IFS.

TIA.

Jerry Camden
Paul Mueller Company
Springfield, MO 


-------------- next part --------------
A non-text attachment was scrubbed...
Name: winmail.dat
Type: application/ms-tnef
Size: 1576 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041123/c5e4ed09/winmail.bin
From huzaifa at hostway.com  Tue Nov 23 18:57:50 2004
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Tue Nov 23 19:02:34 2004
Subject: [mod_python] module caching problem
Message-ID: <20041124000232.06D9AB526@fiona.siteprotect.com>

I am running into a problem with mod_python in that, I am importing a module
in the handler which creates a singleton in memory.  I am using the module
to hold cache information for any other modules that import the same module.

 

I started testing the cache mechanism when I noticed that the module was
being imported multiple times and not just once after the first request
after apache had started.  To test this, I put a few lines of code in the
module to write to a file the time it was last imported.  I noticed that
after restarting apache, the first time it writes to the file.  If I hit
refresh on my page immediately, multiple times, it doesn't write.  If I wait
like 10 seconds or more and then hit refresh again, it reimports that module
that should have been cached.

 

Also, If I make a request for a page from two different clients, it
reimports the module from each client.  Am I mistaken in thinking that any
module imported in the handler then is cached in mod_python's module cache
and subsequent imports of that module then are simply served up from the
cache.  Under what conditions then would the same module get reimported if
no modifications were made to that module?

 

Any help would be appreciated.

 

Hozi

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041123/3485afd4/attachment.html
From sanders at apache.org  Tue Nov 23 19:11:53 2004
From: sanders at apache.org (Scott Sanders)
Date: Tue Nov 23 19:17:32 2004
Subject: [mod_python] module caching problem
In-Reply-To: <20041124000232.06D9AB526@fiona.siteprotect.com>
References: <20041124000232.06D9AB526@fiona.siteprotect.com>
Message-ID: <7222FAFE-3DAD-11D9-8FFD-000A95D2D288@apache.org>

If you are running a forked apache, the module has to be imported once 
per process.  If threaded, should only be imported once.  Also make 
sure that PythonReload is off.

Scott

On Nov 23, 2004, at 3:57 PM, Huzaifa Tapal wrote:

> I am running into a problem with mod_python in that, I am importing a 
> module in the handler which creates a singleton in memory.? I am using 
> the module to hold cache information for any other modules that import 
> the same module.
>
> ?
>
> I started testing the cache mechanism when I noticed that the module 
> was being imported multiple times and not just once after the first 
> request after apache had started.? To test this, I put a few lines of 
> code in the module to write to a file the time it was last imported.? 
> I noticed that after restarting apache, the first time it writes to 
> the file.? If I hit refresh on my page immediately, multiple times, it 
> doesn?t write.? If I wait like 10 seconds or more and then hit refresh 
> again, it reimports that module that should have been cached.
>
> ?
>
> Also, If I make a request for a page from two different clients, it 
> reimports the module from each client.? Am I mistaken in thinking that 
> any module imported in the handler then is cached in mod_python?s 
> module cache and subsequent imports of that module then are simply 
> served up from the cache.? Under what conditions then would the same 
> module get reimported if no modifications were made to that module?
>
> ?
>
> Any help would be appreciated.
>
> ?
>
> Hozi
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 2323 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041123/283a8f26/attachment.bin
From sanders at apache.org  Tue Nov 23 19:34:46 2004
From: sanders at apache.org (Scott Sanders)
Date: Tue Nov 23 19:34:52 2004
Subject: [mod_python] Anyone been working on the WSGI version?
Message-ID: <A43D2359-3DB0-11D9-8FFD-000A95D2D288@apache.org>

I am assuming that WSGI is pretty close to real world, judging from 
WebWare now being retrofitted.  Has anyone worked on this?

Scott

From huzaifa at hostway.com  Tue Nov 23 19:43:26 2004
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Tue Nov 23 19:43:35 2004
Subject: [mod_python] module caching problem
In-Reply-To: <7222FAFE-3DAD-11D9-8FFD-000A95D2D288@apache.org>
Message-ID: <20041124004333.9705CB8E1@fiona.siteprotect.com>

How can I check if I am running a forked apache or a threaded apache.  Also
when you say "PythonReload is off" did you mean the PythonAutoReload
configuration directive in the mod_python handler declaration?

 

Hozi

 

  _____  

From: Scott Sanders [mailto:sanders@apache.org] 
Sent: Tuesday, November 23, 2004 6:12 PM
To: Huzaifa Tapal
Cc: mod_python@modpython.org
Subject: Re: [mod_python] module caching problem

 

If you are running a forked apache, the module has to be imported once per
process. If threaded, should only be imported once. Also make sure that
PythonReload is off.

Scott

On Nov 23, 2004, at 3:57 PM, Huzaifa Tapal wrote:

I am running into a problem with mod_python in that, I am importing a module
in the handler which creates a singleton in memory.  I am using the module
to hold cache information for any other modules that import the same module.

 

I started testing the cache mechanism when I noticed that the module was
being imported multiple times and not just once after the first request
after apache had started.  To test this, I put a few lines of code in the
module to write to a file the time it was last imported.  I noticed that
after restarting apache, the first time it writes to the file.  If I hit
refresh on my page immediately, multiple times, it doesn't write.  If I wait
like 10 seconds or more and then hit refresh again, it reimports that module
that should have been cached.

 

Also, If I make a request for a page from two different clients, it
reimports the module from each client.  Am I mistaken in thinking that any
module imported in the handler then is cached in mod_python's module cache
and subsequent imports of that module then are simply served up from the
cache.  Under what conditions then would the same module get reimported if
no modifications were made to that module?

 

Any help would be appreciated.

 

Hozi
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041123/e1ee7e51/attachment.html
From gdamjan at mail.net.mk  Tue Nov 23 19:49:06 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Tue Nov 23 19:49:09 2004
Subject: [mod_python] module caching problem
In-Reply-To: <20041124000232.06D9AB526@fiona.siteprotect.com>
References: <20041124000232.06D9AB526@fiona.siteprotect.com>
Message-ID: <20041124004906.GA27362@legolas.on.net.mk>

> I am running into a problem with mod_python in that, I am importing a module
> in the handler which creates a singleton in memory.  I am using the module
> to hold cache information for any other modules that import the same module.
> 
> I started testing the cache mechanism when I noticed that the module was
> being imported multiple times and not just once after the first request
> after apache had started.  To test this, I put a few lines of code in the
> module to write to a file the time it was last imported.  I noticed that
> after restarting apache, the first time it writes to the file.  If I hit
> refresh on my page immediately, multiple times, it doesn't write.  If I wait
> like 10 seconds or more and then hit refresh again, it reimports that module
> that should have been cached.
> 
> Also, If I make a request for a page from two different clients, it
> reimports the module from each client.  Am I mistaken in thinking that any
> module imported in the handler then is cached in mod_python's module cache
> and subsequent imports of that module then are simply served up from the
> cache.  Under what conditions then would the same module get reimported if
> no modifications were made to that module?

I guess your are runnig Apache with mpm_prefork? 
In that case there's a completely different python interpreter for each
Apache process, so your caching module is loaded in each of them.

Your testing showed how apache processes get to serve requests, if it gets
two simultaneus requests two apache processes will be active, each
serving one of the request. But if you only generate one request after
another, its most likely that the same process will serve  both
requests... of course this depends on OS implementation... I think you
are running on Linux, no?

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From sanders at apache.org  Tue Nov 23 19:52:30 2004
From: sanders at apache.org (Scott Sanders)
Date: Tue Nov 23 19:52:37 2004
Subject: [mod_python] module caching problem
In-Reply-To: <20041124004333.9705CB8E1@fiona.siteprotect.com>
References: <20041124004333.9705CB8E1@fiona.siteprotect.com>
Message-ID: <1E59857E-3DB3-11D9-8FFD-000A95D2D288@apache.org>

If you enable the /server-info link in httpd.conf, it should tell you 
something like:

erver Version: Apache/2.0.49 (Unix) DAV/2 mod_python/3.1.3 Python/2.3.3 
PHP/5.0.0RC3
Server Built: Jun 21 2004 06:45:14
API Version: 20020903:7
Hostname/port: sis:80
Timeouts: connection: 300 ?? keep-alive: 300
MPM Name: Worker
MPM Information: Max Daemons: 1 Threaded: yes Forked: yes
Server Root: /usr/local/apache2
Config File: /usr/local/apache2/conf/httpd.conf

You can see the Threaded: yes and forked: yes variables.  My server is 
threaded and forked (the worker MPM).  I think the default used to be 
prefork, which was forked but not threaded.
And yes, it is PythonAutoReload off.

Scott

On Nov 23, 2004, at 4:43 PM, Huzaifa Tapal wrote:

> How can I check if I am running a forked apache or a threaded apache.? 
> Also when you say ?PythonReload is off? did you mean the 
> PythonAutoReload configuration directive in the mod_python handler 
> declaration?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 3352 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041123/c305a6f5/attachment.bin
From rune.hansen at scanmine.com  Wed Nov 24 04:35:52 2004
From: rune.hansen at scanmine.com (Rune Hansen)
Date: Wed Nov 24 04:35:58 2004
Subject: [mod_python] mod_python, best practices
Message-ID: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>

Hi,
I've written a rather long and winding document which I've called 
"mod_python, best practices".

A better name would be "mod_python, assumptions made on shaky ground - 
kept in a light tone to mask my inherent fear of making a complete fool 
of my self." Obviously, that title is to long.

Anyway, the document can be found here http://www.scanmine.com/mp/

I'd really like thoughts, comments and corrections... keep your smirks 
and laughs to your self :)

As you read the document it will become apparent that english is not my 
native tongue, feel free to comment on that too.

regards

/rune

From dagurp at heimsnet.is  Wed Nov 24 05:23:30 2004
From: dagurp at heimsnet.is (=?ISO-8859-1?Q?Dagur_P=E1ll_Ammendrup?=)
Date: Wed Nov 24 05:18:54 2004
Subject: [mod_python] mod_python, best practices
In-Reply-To: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>
References: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>
Message-ID: <41A46122.9030607@heimsnet.is>

Brilliant! Thank you



Rune Hansen wrote:

> Hi,
> I've written a rather long and winding document which I've called 
> "mod_python, best practices".
>
> A better name would be "mod_python, assumptions made on shaky ground - 
> kept in a light tone to mask my inherent fear of making a complete 
> fool of my self." Obviously, that title is to long.
>
> Anyway, the document can be found here http://www.scanmine.com/mp/
>
> I'd really like thoughts, comments and corrections... keep your smirks 
> and laughs to your self :)
>
> As you read the document it will become apparent that english is not 
> my native tongue, feel free to comment on that too.
>
> regards
>
> /rune
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From grahamd at dscpl.com.au  Wed Nov 24 05:36:39 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 24 05:36:46 2004
Subject: [mod_python] mod_python, best practices
In-Reply-To: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>
Message-ID: <B966F18B-3E04-11D9-9EF8-000393BB31F6@dscpl.com.au>


On Wednesday, November 24, 2004, at 08:35  PM, Rune Hansen wrote:

> Hi,
> I've written a rather long and winding document which I've called 
> "mod_python, best practices".
>
> A better name would be "mod_python, assumptions made on shaky ground - 
> kept in a light tone to mask my inherent fear of making a complete 
> fool of my self." Obviously, that title is to long.
>
> Anyway, the document can be found here http://www.scanmine.com/mp/
>
> I'd really like thoughts, comments and corrections... keep your smirks 
> and laughs to your self :)
>
> As you read the document it will become apparent that english is not 
> my native tongue, feel free to comment on that too.

You sent this at a really bad time as am just about to go on week and
a half holiday and will not have internet access. I also don't have
the time now to respond to your posting properly. A few quick points
though.

On the first issue, you really seem to complicate things using the
RewriteRule directive. Have a look at Vampire and how it works.
You should be able to avoid the rewrite rule using Vampire as it
will automatically map a "search.html" request to "search.py".
You will have to write your handlers in the default content handler
style and not mod_python.publisher style though. Thus something
like:

# index.py

from mod_python import apache

def handler_html(req,**args):
     req.content_type = "text/html"
     req.send_http_header()
     req.write("<html><head><title>Search Index 
Page</title><head><body>## 'index' got called once</body></html>")
     return apache.OK

# search.py

from mod_python import apache

def handler_html(req,**args):
     req.content_type = "text/html"
     req.send_http_header()
     req.write("<html><head><title>Search /search 
Page</title><head><body>## '/search' got called once</body></html>")
     return apache.OK

Not sure what may happen if PythonAuthenHandler is used though and
whether you will still see excessive calls to it.

On the issue of authorisation, when using mod_python.publisher did
you look at the the __auth__, __auth_realm__ etc support it provides
whereby authorisation could be handled in each Python code file
rather than by PythonAuthenHandler? Vampire provides the same sort
of authentication hooks in each content handler file.

On the issue of configuration files, again, look at Vampire. It
provides a mechanism for configuration which also uses ConfigParser.
It has though a smart search ability to find the config file. Ie.,
rather than having to specify the exact location of the config file,
you simply ask for config file of certain name, and using the req
object will search back up the directory hierarchy until found,
or will stop searching if go up as far as where the PythonHandler
definition was found. Thus instead of writing:

def handler(req):
     global CONFIG,cfgfile
     if not CONFIG:
        CONFIG = 
Cfgparser("/".join([os.path.dirname(__file__),cfgfile]),req.server)
        CONFIG.getConfig()
     req.CONFIG = CONFIG

one can write something like:

def handler_html(req):
     config = vampire.loadConfig(req,"Globals.cfg")

This means that you don't have to specify fixed relative pathnames in
subdirectory content handlers to refer to a config somewhere above
that directory, instead it will be automatically found. This allows
one to freely move stuff around and not have to fix up any fixed
location paths.

The config object you get back also has some default values set which
allow one to easily create URLs which reference back to the root of
your application, again avoiding issues of having hardcoded relative
paths. Unfortunately, haven't yet released a newer version of Vampire I
have which takes this a bit further and makes it even more useful.

Configs are cached automatically, but the cache will also reload them
automatically when it detects that the actual config file has changed.

Anyway, could probably go on longer and provide better examples, but
no time to do so. I realise the above doesn't adequately explain stuff
either, so all I can suggest is you have a dig through Vampire and
see what you can work out and I'll see where things are at when I get
back from holidays.

Vampire can be found at:

   http://www.dscpl.com.au/projects/vampire

--
Graham Dumpleton (grahamd@dscpl.com.au)

From grahamd at dscpl.com.au  Wed Nov 24 06:27:29 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 24 06:27:33 2004
Subject: [mod_python] Vampire 1.3 is now available.
Message-ID: <D30F1CD6-3E0B-11D9-A19C-000393DCF16E@dscpl.com.au>

In a mad rush just prior to going on holidays, I have decided to push 
out
Vampire 1.3. As far as I remember the last time I touched it it was 
ready,
but have just been too busy to do anything about it. The post by Rune
mentioning config files has made me decide to throw it out now as the
changes in Vampire 1.3 in that area may be mildly interesting to that
discussion. I'll post more about the config support as followup to that
separate discussion.

Vampire can be found at:

   http://www.dscpl.com.au/projects/vampire

Check the web site for a full description of what Vampire is, but in 
short
it provides a way of better organising content handlers, plus various 
other
bits and pieces.

Changes in version 1.3 are listed below.

Enjoy.

Changes in Vampire 1.3
======================

   - Include a workaround for a bug which is present in mod_python when
     running on Win32 platform which would have caused search algorithm 
for
     config file to fail. Problem with mod_python is that it errornously
     adds a trailing '\' to the name of the directory where the original
     PythonHandler directive was declared, when it should have been '/' 
and
     should only have been added when a trailing '/' wasn't already 
present.
     The remainder of the path as supplied by Apache uses the POSIX path
     separator and this was being depended upon, but mod_python was 
breaking
     that. A separate patch is not provided in PATCHES because a 
workaround
     is possible. Bug was posted on the mod_python mailing list, although
     no one has acknowledged it is a valid problem.

   - The names of the special predefined variables defined within the
     configuration system and which are available for string 
interpolation
     in configuration have changed. New names are as follows:

       __root__  --> __config_root__
       __file__  --> __config_file__
       __mtime__ --> __config_mtime__
       __base__  --> __baseurl_abs__

     Although these are officially the new names, some tricks are done
     to ensure the old names still work for now. The names are also no
     longer added to the DEFAULT section of the config object, but are
     made available for string interpolation in another way. They thus
     will not appear in any section of the config object if names defined
     in a section are iterated over.

     The following extra special variables have also now been added.

       __handler_root__ --> Where PythonHandler directive was defined.
       __baseurl_rel__  --> Base URL relative to the current request.

     Although the names are no longer added into the DEFAULT section of
     the config file, they can still be accessed using the "defaults()"
     method of the config object returned by "loadConfig()".

     Any variables defined in a .htaccess file or httpd.conf file using
     the PythonOption directive are now automatically loaded into the
     config in a way that they are also available for string 
interpolation
     without the need to explicitly specify them using the "vars" 
variable
     when getting the value of a configuration option.

     Variables defined in the .htaccess file using the PythonOption
     directive will themselves have string interpolation performed upon
     them when used via the configuration mechanism. Thus, one could
     actually define:

       PythonOption LayoutRoot %(__handler_root__)s

     Then in the configuration file, one can use:

       [Handlers]

       handler_html = %(LayoutRoot)s/layout/handler_html.py
       handler_pdf = %(LayoutRoot)s/layout/handler_pdf.py

     In this examples, this would be equivalent to having used:

       [Handlers]

       handler_html = %(__handler_root__)s/layout/handler_html.py
       handler_pdf = %(__handler_root__)s/layout/handler_pdf.py

     Doing it this way though, means that the .htaccess file can be used
     to set explicit values, or reference back to the dynamic values
     generated when the search for the config file was performed.

   - When turning on default content handlers using the directive:

       PythonOption VampireDefaultHandlers On

     it is now possible to override the default name of the configuration
     file used to find the default handlers and what section in that
     configuration file is consulted. Thus:

       PythonOption VampireHandlersConfig .vampire
       PythonOption VampireHandlersSection Handlers

     The values ".vampire" and "Handlers" represent the inbuilt defaults,
     but by setting these, they can be overridden.



--
Graham Dumpleton (grahamd@dscpl.com.au)

From grahamd at dscpl.com.au  Wed Nov 24 07:04:11 2004
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Nov 24 07:04:16 2004
Subject: [mod_python] mod_python, best practices
In-Reply-To: <B966F18B-3E04-11D9-9EF8-000393BB31F6@dscpl.com.au>
References: <B966F18B-3E04-11D9-9EF8-000393BB31F6@dscpl.com.au>
Message-ID: <F40EF951-3E10-11D9-A19C-000393DCF16E@dscpl.com.au>


On 24/11/2004, at 9:36 PM, Graham Dumpleton wrote:

>
> On Wednesday, November 24, 2004, at 08:35  PM, Rune Hansen wrote:
>
>> Hi,
>> I've written a rather long and winding document which I've called  
>> "mod_python, best practices".
>>
>> A better name would be "mod_python, assumptions made on shaky ground  
>> - kept in a light tone to mask my inherent fear of making a complete  
>> fool of my self." Obviously, that title is to long.
>>
>> Anyway, the document can be found here http://www.scanmine.com/mp/
>>
>> I'd really like thoughts, comments and corrections... keep your  
>> smirks and laughs to your self :)
>>
>> As you read the document it will become apparent that english is not  
>> my native tongue, feel free to comment on that too.
>
> ...

> On the issue of configuration files, again, look at Vampire. It
> provides a mechanism for configuration which also uses ConfigParser.
> It has though a smart search ability to find the config file. Ie.,
> rather than having to specify the exact location of the config file,
> you simply ask for config file of certain name, and using the req
> object will search back up the directory hierarchy until found,
> or will stop searching if go up as far as where the PythonHandler
> definition was found. Thus instead of writing:
>
> def handler(req):
>     global CONFIG,cfgfile
>     if not CONFIG:
>        CONFIG =  
> Cfgparser("/".join([os.path.dirname(__file__),cfgfile]),req.server)
>        CONFIG.getConfig()
>     req.CONFIG = CONFIG
>
> one can write something like:
>
> def handler_html(req):
>     config = vampire.loadConfig(req,"Globals.cfg")
>
> This means that you don't have to specify fixed relative pathnames in
> subdirectory content handlers to refer to a config somewhere above
> that directory, instead it will be automatically found. This allows
> one to freely move stuff around and not have to fix up any fixed
> location paths.
>
> The config object you get back also has some default values set which
> allow one to easily create URLs which reference back to the root of
> your application, again avoiding issues of having hardcoded relative
> paths. Unfortunately, haven't yet released a newer version of Vampire I
> have which takes this a bit further and makes it even more useful.
>
> Configs are cached automatically, but the cache will also reload them
> automatically when it detects that the actual config file has changed.

In a rush of madness, I have released Vampire 1.3 which has the changes
to the config support I alluded to above.

As an quick illustration of how the config mechanism supplied with
Vampire can work, the Vampire web site tree has a ".htaccess" and
".vampire" file in its root directory. You can see the content of
the .vampire file as:

   http://www.dscpl.com.au/projects/vampire/source/.vampire

The .htaccess file has various PythonOption settings:

   PythonOption VampireHandlersSection Handlers
   PythonOption VampireHandlersConfig .vampire
   PythonOption VisibleSourceExtensions .html .psp .py .rml .vampire
   PythonOption VampireDirectoryIndex index.html

In a subdirectory I have a content handler example which will display  
the
config as will be available when loaded. This example, will look for the
.vampire file starting in its directory and moving upwards. The source
code for this content handler is:

    
http://www.dscpl.com.au/projects/vampire/source/examples-01/vampire- 
config.py
    
http://www.dscpl.com.au/projects/vampire/source/examples-01/vampire- 
config.html

You can see what it produces by accessing:

    
http://www.dscpl.com.au/projects/vampire/examples-01/vampire- 
config.html
    
http://www.dscpl.com.au/projects/vampire/examples-01/vampire- 
config.html?mode=raw

Note this is actually an example designed to show what config is  
available,
you don't need to browse other like this example does, just get the  
variable
you need and your done. I just happen to use the HTMLTemplate package to
render pages, but you could be using mpservlets, psp or anything else  
for
that matter.

As you have used ConfigParser already you will understand the difference
between interpolated values and raw mode which shows values before being
interpolated.

As is standard with ConfigParser, interpolation will take values from  
the
same section in the config file. Vampire also sets things up though so  
that
values used for interpolation can be sourced from PythonOption settings  
in
the .htaccess file, although the example does use these as such in any  
of
the config file value strings.

Also, Vampire sets up some magic variables which can be used in string
interpolation. These are:

       __config_root__ --> Absolute path to directory config file is in.
       __config_file__ --> Absolute path to the actual config file.
       __config_mtime__ --> Modification time of the config file.
       __baseurl_abs__ --> Base URL of the directory where config file  
is in.
       __handler_root__ --> Where PythonHandler directive was defined.
       __baseurl_rel__  --> Base URL relative to the current request.

The base URL variables are useful as they relate to the URL used in a  
request.
One can thus put a config file at the top of your web application.  
Under that
you would have an "images" and "styles" directory. Your config can then  
have:

   images = %(__baseurl_rel__)s/images
   styles = %(__baseurl_rel__)s/styles

In content handlers anywhere in nested subdiretories, they can get the  
config
and grab those values and relative path will always be setup correctly  
to
reference the images and styles directory. This can be used to then  
fill out
content in HTML as appropriate. One could have used __baseurl_abs__ as  
well,
but then someone who scrapes your site into static files would have  
links
which reference a location which wouldn't exist if they hosted it in a  
different
location, thus relative paths preferable.

Hopefully you can see where I am going with this.

Bit more information in CHANGES file for Vampire 1.3.

   http://www.dscpl.com.au/projects/vampire/CHANGES

I really got to log off now. Not sure when I'll be able to next read  
email. :-(

--
Graham Dumpleton (grahamd@dscpl.com.au)

From sanders at apache.org  Wed Nov 24 12:03:07 2004
From: sanders at apache.org (Scott Sanders)
Date: Wed Nov 24 12:03:14 2004
Subject: [mod_python] mod_python, best practices
In-Reply-To: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>
References: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>
Message-ID: <B6967E17-3E3A-11D9-8FFD-000A95D2D288@apache.org>

In session handling, what is wrong with just using 
Session.Session(req)?  This will get the existing session, if it 
exists.  Then you could just add the session.isnew stuff in a helper 
method.  I would say that the only reason for this is if you aren't 
allowing cookies, and you are doing your own style of url-rewriting ala 
java servlets.

The only gotcha in this:  If you end up redirecting for login or 
something similar, the cookie won't get set, so the session won't get 
picked up.

The other thing I wanted to note with the sessions is that it is not 
necessary to unlock the session, UNLESS you are going to do an internal 
redirect.

Or so go my experiences on Mac OS X and Windows XP/ Apache 2.0.49|50, 
mod_python 3.1.3, python 2.3.4

Scott Sanders

On Nov 24, 2004, at 1:35 AM, Rune Hansen wrote:

> Hi,
> I've written a rather long and winding document which I've called 
> "mod_python, best practices".
>
> A better name would be "mod_python, assumptions made on shaky ground - 
> kept in a light tone to mask my inherent fear of making a complete 
> fool of my self." Obviously, that title is to long.
>
> Anyway, the document can be found here http://www.scanmine.com/mp/
>
> I'd really like thoughts, comments and corrections... keep your smirks 
> and laughs to your self :)
>
> As you read the document it will become apparent that english is not 
> my native tongue, feel free to comment on that too.
>
> regards
>
> /rune
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From sanders at apache.org  Wed Nov 24 12:07:45 2004
From: sanders at apache.org (Scott Sanders)
Date: Wed Nov 24 12:14:08 2004
Subject: [mod_python] mod_python, best practices
In-Reply-To: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>
References: <3B607FC3-3DFC-11D9-B86F-000A956CC60E@scanmine.com>
Message-ID: <5BEF204C-3E3B-11D9-8FFD-000A95D2D288@apache.org>

Also, is there really a reason to use CfgParser if all you want is a 
few simple globals?  Why not just use PythonOption and retreive them 
from req.get_options()?

Scott

On Nov 24, 2004, at 1:35 AM, Rune Hansen wrote:

> Hi,
> I've written a rather long and winding document which I've called 
> "mod_python, best practices".
>
> A better name would be "mod_python, assumptions made on shaky ground - 
> kept in a light tone to mask my inherent fear of making a complete 
> fool of my self." Obviously, that title is to long.
>
> Anyway, the document can be found here http://www.scanmine.com/mp/
>
> I'd really like thoughts, comments and corrections... keep your smirks 
> and laughs to your self :)
>
> As you read the document it will become apparent that english is not 
> my native tongue, feel free to comment on that too.
>
> regards
>
> /rune
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From list at joreybump.com  Wed Nov 24 12:47:58 2004
From: list at joreybump.com (Jorey Bump)
Date: Wed Nov 24 12:48:03 2004
Subject: [mod_python] Secure storage of sensitive variables,
	such as passwords
Message-ID: <41A4C94E.70702@joreybump.com>

I'd like to know if anyone has any recommendations for securely storing 
information such as db passwords. I don't like to include login 
information anywhere within the DocumentRoot, in case an interpreter 
failure or server misconfiguration exposes the code. To this end, I'm 
using the following system:

1. I create a different user for each VirtualHost. Within the user's 
home directory, I create a site directory that serves as the DocumentRoot.

2. I then create a Python directory in the home directory, and add it to 
the VirtualHost's PYTHONPATH using:

  PythonPath "sys.path + ['/var/www/virtual/user/Python']"

Or one could do this within the script itself:

  sys.path.append('/var/www/virtual/user/Python')

This gives me a safe place outside of the DocumentRoot to store settings 
in modules, without placing them in the default PYTHONPATH of every 
other user on the system.

3. To store settings, I create a package structure:

  cd ~/Python
  mkdir Conf
  cd Conf
  touch __init__.py

This allows me to create files with settings specific to an application 
and import them. So, for application foo, I would create foo.py here and 
list the values I need, or even wrap them up neatly in a function:

  # ~/Python/Conf/foo.py
  import MySQLdb

  bees = 0
  eric = 0.5

  def get_dbh():
      """
      Set up db connection and return handle.
      """
      dbhost = "localhost"
      dbuser = "cyril"
      dbpwd  = "ladidi123"
      dbname = "menagerie"
      dbh = MySQLdb.connect(dbhost, dbuser, dbpwd, dbname)
      return dbh

Then, in my mod_python application, I import the values:

  # ~/site/foo.py
  from Conf.foo import *

  bees += eric
  dbh = get_dbh()
  # db handle is now ready to use for queries/updates

I find this approach a lot simpler than using a configuration parser, 
especially because there is no new syntax to learn and the resources are 
immediately available to the application. Creating a package to hold the 
settings also helps to avoid namespace clashes.

The usual caveats apply here as they do to any embedded interpreter, 
with the main concern being that other system users now theoretically 
have access to the code, which must be readable by the user apache runs 
as. The main payoff is that the application is a bit more resistant to 
remote exploits, because the code is stored outside the DocumentRoot.

I'd be interested in how others handle sensitive information or in any 
suggestions for hardening the approach I've outlined above. I generally 
use Publisher in a prefork environment, if that helps.


From sanders at apache.org  Wed Nov 24 13:00:38 2004
From: sanders at apache.org (Scott Sanders)
Date: Wed Nov 24 13:00:44 2004
Subject: [mod_python] Secure storage of sensitive variables,
	such as passwords
In-Reply-To: <41A4C94E.70702@joreybump.com>
References: <41A4C94E.70702@joreybump.com>
Message-ID: <BF5936F2-3E42-11D9-8FFD-000A95D2D288@apache.org>

Maybe I am less paranoid, but I just store that info in the .htaccess 
under PythonOption directives.   If the .htaccess file were to become 
exploited, I have bigger problems :)

Scott

On Nov 24, 2004, at 9:47 AM, Jorey Bump wrote:

> I'd like to know if anyone has any recommendations for securely 
> storing information such as db passwords. I don't like to include 
> login information anywhere within the DocumentRoot, in case an 
> interpreter failure or server misconfiguration exposes the code. To 
> this end, I'm using the following system:
>
> 1. I create a different user for each VirtualHost. Within the user's 
> home directory, I create a site directory that serves as the 
> DocumentRoot.
>
> 2. I then create a Python directory in the home directory, and add it 
> to the VirtualHost's PYTHONPATH using:
>
>  PythonPath "sys.path + ['/var/www/virtual/user/Python']"
>
> Or one could do this within the script itself:
>
>  sys.path.append('/var/www/virtual/user/Python')
>
> This gives me a safe place outside of the DocumentRoot to store 
> settings in modules, without placing them in the default PYTHONPATH of 
> every other user on the system.
>
> 3. To store settings, I create a package structure:
>
>  cd ~/Python
>  mkdir Conf
>  cd Conf
>  touch __init__.py
>
> This allows me to create files with settings specific to an 
> application and import them. So, for application foo, I would create 
> foo.py here and list the values I need, or even wrap them up neatly in 
> a function:
>
>  # ~/Python/Conf/foo.py
>  import MySQLdb
>
>  bees = 0
>  eric = 0.5
>
>  def get_dbh():
>      """
>      Set up db connection and return handle.
>      """
>      dbhost = "localhost"
>      dbuser = "cyril"
>      dbpwd  = "ladidi123"
>      dbname = "menagerie"
>      dbh = MySQLdb.connect(dbhost, dbuser, dbpwd, dbname)
>      return dbh
>
> Then, in my mod_python application, I import the values:
>
>  # ~/site/foo.py
>  from Conf.foo import *
>
>  bees += eric
>  dbh = get_dbh()
>  # db handle is now ready to use for queries/updates
>
> I find this approach a lot simpler than using a configuration parser, 
> especially because there is no new syntax to learn and the resources 
> are immediately available to the application. Creating a package to 
> hold the settings also helps to avoid namespace clashes.
>
> The usual caveats apply here as they do to any embedded interpreter, 
> with the main concern being that other system users now theoretically 
> have access to the code, which must be readable by the user apache 
> runs as. The main payoff is that the application is a bit more 
> resistant to remote exploits, because the code is stored outside the 
> DocumentRoot.
>
> I'd be interested in how others handle sensitive information or in any 
> suggestions for hardening the approach I've outlined above. I 
> generally use Publisher in a prefork environment, if that helps.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From list at joreybump.com  Wed Nov 24 14:55:17 2004
From: list at joreybump.com (Jorey Bump)
Date: Wed Nov 24 14:55:22 2004
Subject: [mod_python] Secure storage of sensitive variables,
	such as passwords
In-Reply-To: <BF5936F2-3E42-11D9-8FFD-000A95D2D288@apache.org>
References: <41A4C94E.70702@joreybump.com>
	<BF5936F2-3E42-11D9-8FFD-000A95D2D288@apache.org>
Message-ID: <41A4E725.9070507@joreybump.com>

Scott Sanders wrote:

> Maybe I am less paranoid, but I just store that info in the .htaccess 
> under PythonOption directives.   If the .htaccess file were to become 
> exploited, I have bigger problems :)

Well said. Although it puts the passwords and such back in the 
DocumentRoot, apache is typically configured to deny direct access to 
^.ht files, making it a nonissue (but this still doesn't prevent me from 
storing .htpasswd files outside the DocumentRoot -- yes, I *am* more 
paranoid).

The only thing I don't like about it is that it can make applications 
directory-dependent or force them to share a single config file (as 
opposed to importing settings from a specific module). On the other 
hand, it makes it *really* easy to develop a standalone mod_python 
application for distribution. All you'd need to do is untar the 
application directory in your DocumentRoot and edit .htaccess. It opens 
up a lot of possibilities... Thanks!


From josh-modpython at valleyfree.com  Wed Nov 24 16:03:51 2004
From: josh-modpython at valleyfree.com (josh-modpython@valleyfree.com)
Date: Wed Nov 24 16:31:08 2004
Subject: [mod_python] Controlled output bufferring with psp
Message-ID: <20041124210351.GA24597@www1.valleyfree.com>

Hello folks

I'm new to mod_python (trying to migrate from php) and, being used to 
php, have liked php's output buffering features.

Specifically what I was looking for was a way to buffer all output and 
still control it (clear it inside an error handler, run it through a 
filter, etc.) Initially this is easy to acheive just using a StringIO 
object, but when I began using PSP I found this no longer worked, since 
PSP outputs to the request object directly, and once output is sent to 
the request object I saw no way to "take it back" or modify it.

So, for all the people in my boat, here is some code that will allow you 
do just that. This comes in very handy if you expect to have errors 
occur after or during a psp template is run, or if you want to do 
something like filter the final output.

I would appreciate it if any mod_python gurus could point out any 
pitfalls in this approach.

Thanks for any feedback, and I hope this helps a few people out there.  
(I assume this is kosher to post code straight to the list, if not 
please slap my hand and inform me of list protocol)

import sys
import cStringIO
import traceback
from mod_python import apache
from mod_python import psp

class bufferProxy:  
    """This proxy class is used to supply a write() method
    to replace req.write(), including the optional flush
    parameter, which is ignored and only present to prevent
    an exception being raised for its presence. If it
    weren't for the flush parameter, you wouldn't need this
    proxy class at all, you could just assign req.write to
    the StringIO object's write method."""
    
    def __init__(self,outputBuffer):
        self.outputBuffer = outputBuffer
        
    def write(self,data,flush=None):
        """Writes data to the output buffer. The flush
        argument is simply ignored; the buffer is only
        flushed at the end of the handler in the finally
        clause. Though, you could allow flushing by sending
        the contents of the buffer to the oldReqWrite
        method and then clearing it."""
        
        self.outputBuffer.write(data)

def handler(req):
    """A request handler that illustrates the use of a 
    StringIO output buffer instead of using the Apache 
    buffer normally written to by req.write, which allows 
    for simultaneous use of all of the following:
    
    1. print statements (redirecting sys.stdout)
    2. psp templates (that use req.write)
    3. error handlers that can erase/override/filter all 
    output even after it has been written to the buffer
    
    """
    
    req.content_type = "text/html"
    
    outputBuffer = cStringIO.StringIO()
    outputBufferProxy = bufferProxy(outputBuffer)
    
    oldStdout = sys.stdout
    oldReqWrite = req.write
    
    sys.stdout = outputBuffer
    req.write = outputBufferProxy.write
    
    try: # outer try block used for finally clause
        
        try: # inner block used for exception handling
            
            # this works
            print 'Hello world!<br>'
            
            # and this works
            req.write('Hello, again!<br>\n')
            
            # and PSP works, too, just put a real psp
            # template in there and uncomment it, of course
            # also placing any needed vars in run()...
            
            # template = psp.PSP(req, \
            #    filename='mytemplate.psp')
            # template.run()
            
            # raise and catch the an exception or do error
            # handling however you like...
            raise "some error"
            
        except:
            
            # on error, clear the buffer and show an error, 
            # do stuff, show a stack trace, etc, you can 
            # even show everything output up to this point:
            
            allOutputUpToNow = outputBuffer.getvalue()
            outputBuffer.seek(0)
            outputBuffer.truncate(0)
            print '<h1>An exception has occurred...</h1>'
            print '<pre>'
            traceback.print_exc(None,outputBuffer)
            print '</pre>'
            print '<hr>'
            print '<h2>Here is all the output up to the point' \
                ' of the exception:</h2>'
            print allOutputUpToNow
            # note that it would be a good idea to html 
            # entity quote the contents of allOutputUpToNow
            
    finally:
        
        # restore IO streams and send final output
        sys.stdout = oldStdout
        req.write = oldReqWrite
        req.write(outputBuffer.getvalue())
        outputBuffer.close()
        return apache.OK
From trevorw at qalabs.com  Wed Nov 24 18:00:06 2004
From: trevorw at qalabs.com (Trevor West)
Date: Wed Nov 24 18:00:45 2004
Subject: [mod_python] mysql_python connections
Message-ID: <41A51276.3060105@qalabs.com>

I'm creating a python web-app using MySQL and mod_python. I'm running 
into a problem where database connections are staying open even if I 
close them. I'm opening a database connection on each page, but close it 
as soon as I'm done all that I want to do. I was wondering if my 
connection was staying active because of threads.

When I log into my application then log out again there are 3 more MySQL 
processes running when I check "ps -ef | grep mysql " then there were 
before. Does anyone have any good ways to connect to the mysql database 
on a python website, or should I continue to connect on everypage, and 
if so, do I specifically have to make it thread safe (I don't have much 
experience with threads, but I'll do it if that's the problem).

Thanks for the help.

Cheers

Trevor
From gdamjan at mail.net.mk  Wed Nov 24 19:21:16 2004
From: gdamjan at mail.net.mk (Damjan)
Date: Wed Nov 24 19:21:19 2004
Subject: [mod_python] mysql_python connections
In-Reply-To: <41A51276.3060105@qalabs.com>
References: <41A51276.3060105@qalabs.com>
Message-ID: <20041125002116.GA5856@legolas.on.net.mk>

> as soon as I'm done all that I want to do. I was wondering if my 
> connection was staying active because of threads.

What threads?
 
> When I log into my application then log out again there are 3 more MySQL 
> processes running when I check "ps -ef | grep mysql " then there were 
> before. 

Which doesn't mean that mod_python is still connected to the database.
It just means that MySQL will not kill those processes, since they might
be needed again pretty soon.

To see how many connections are there to the DB, and what each is doing,
use 'mysqladmin -p processlist'.

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From trevorw at qalabs.com  Thu Nov 25 12:21:46 2004
From: trevorw at qalabs.com (Trevor West)
Date: Thu Nov 25 12:26:13 2004
Subject: [mod_python] mysql_python connections
In-Reply-To: <20041125002116.GA5856@legolas.on.net.mk>
References: <41A51276.3060105@qalabs.com>
	<20041125002116.GA5856@legolas.on.net.mk>
Message-ID: <41A614AA.7060901@qalabs.com>

Hi, thanks for the advice, when I do the command you advised "mysqladmin 
-p processlist', These are the responses I get

Before Login:
0

First pages after login screen (choice page):
1 Connection to database12

Main screen with list:
4 connections to database12

Logout:
5 connections to database12

Now I know that I'm doing something wrong here, but I just can't figure 
it out. I close all the database connections that I open (or I think I 
do) but this still seems a bit much. Also it's now been 5 minutes and 
they still show up as open. Do you have any idea what I can do to help 
this. When I first tried to do this app I tried to put a single database 
connection in the session, but that didn't work at all (I think I even 
successfully crashed apache once I'm proud to say), so I started opening 
a connection on every page and closing them at the end of the page 
generation. The problem seems to be though that some aren't getting closed.

Cheers

Trevor



 

Damjan wrote:

>>as soon as I'm done all that I want to do. I was wondering if my 
>>connection was staying active because of threads.
>>    
>>
>
>What threads?
> 
>  
>
>>When I log into my application then log out again there are 3 more MySQL 
>>processes running when I check "ps -ef | grep mysql " then there were 
>>before. 
>>    
>>
>
>Which doesn't mean that mod_python is still connected to the database.
>It just means that MySQL will not kill those processes, since they might
>be needed again pretty soon.
>
>To see how many connections are there to the DB, and what each is doing,
>use 'mysqladmin -p processlist'.
>
>  
>
From almad at include.cz  Thu Nov 25 19:33:05 2004
From: almad at include.cz (Lukas Linhart)
Date: Thu Nov 25 19:33:22 2004
Subject: [mod_python] Form data handling (newbie question)
Message-ID: <200411260133.12673.almad@include.cz>

Hello, 

I'm beginning with mod_python and using mod_python.publisher. 

I've programmed in php before and I'm used to handle large forms in way of 
arrays (tuples): 

<input name="in[0]" value="blabla" />
<input name="in[1] value="blabla" />

I generate form like this in php and then on next page handle it in very 
comfortable way. 

Well, I'm asking if there is any way to handle forms in mod_python like this? 
I expected to work it like this: 

def form_handler(req, *everyURIParams)

but this don't work, as like this:

def form_handler(req, in)

or

def form_handler(req.*in)

I understand why it won't work (problably) and asking if there is any other 
way / workaround / more standard way. 

I'm very thankful for your help. 

Lukas "Almad" Linhart

[:: http://www.Include.cz/ ::]
[:: Including Your wishes ::]
[:: PGP/GNUPg key: http://download.almad.net/pubkey.asc ::]
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 190 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/36611204/attachment.bin
From Administrator at leebrown.org  Thu Nov 25 22:18:29 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Thu Nov 25 22:18:54 2004
Subject: [mod_python] Form data handling (newbie question)
References: <200411260133.12673.almad@include.cz>
Message-ID: <014601c4d366$9bd7e9c0$0202a8c0@UberBox>

Greetings!

In mod_python, form data is returned as a mapping type (dictionary) instead of a sequence type (tuple or list.)

A very handy way to get the form data is to import the util module from mod python:

    from mod_python import util

and then within your handler instantiate an object of the FieldStorage Class:

    def myhandler(req):
        ...(stuff)...
        formdata = util.FieldStorage(req)
        ...(stuff)...

You can then get any of the form's values by name.  Say your form is...

    <input name="age"...
    <input name="gender"...
    <input name="shoe_size"...

...you can then get all your form data from the formdata object:

    if formdata['gender'] == 'male':
        oddness_coefficient = formdata['age'] + formdata['shoe_size']

In my opinion, accessing your form data by name instead of by sequence offsets makes your code a LOT easier to read.

I hope this is of some help.

Best Regards,
Lee E. Brown

----- Original Message ----- 
From: "Lukas Linhart" <almad@include.cz>
To: <mod_python@modpython.org>
Sent: Thursday, November 25, 2004 7:33 PM
Subject: [mod_python] Form data handling (newbie question)
Hello, 

I'm beginning with mod_python and using mod_python.publisher. 

I've programmed in php before and I'm used to handle large forms in way of 
arrays (tuples): 

<input name="in[0]" value="blabla" />
<input name="in[1] value="blabla" />

I generate form like this in php and then on next page handle it in very 
comfortable way. 

Well, I'm asking if there is any way to handle forms in mod_python like this? 
I expected to work it like this: 

def form_handler(req, *everyURIParams)

but this don't work, as like this:

def form_handler(req, in)

or

def form_handler(req.*in)

I understand why it won't work (problably) and asking if there is any other 
way / workaround / more standard way. 

I'm very thankful for your help. 

Lukas "Almad" Linhart
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041125/ac75a066/attachment.html
From crxop at tiscali.it  Fri Nov 26 05:11:05 2004
From: crxop at tiscali.it (Daniele Cruciani)
Date: Fri Nov 26 05:11:11 2004
Subject: [mod_python] mysql_python connections
In-Reply-To: <41A614AA.7060901@qalabs.com>
References: <41A51276.3060105@qalabs.com>
	<20041125002116.GA5856@legolas.on.net.mk>
	<41A614AA.7060901@qalabs.com>
Message-ID: <20041126101105.GB4649@fincos.homeip.net>

On Thu, Nov 25, 2004 at 10:21:46AM -0700, Trevor West wrote:
> Hi, thanks for the advice, when I do the command you advised "mysqladmin 
> -p processlist', These are the responses I get
> 
> Before Login:
> 0
> 
> First pages after login screen (choice page):
> 1 Connection to database12
> 
> Main screen with list:
> 4 connections to database12
> 
> Logout:
> 5 connections to database12
> 
> Now I know that I'm doing something wrong here, but I just can't figure 
> it out. I close all the database connections that I open (or I think I 
> do) but this still seems a bit much. Also it's now been 5 minutes
> and 

Try to check branch, your code don't call close() on connection for
some reason.

> they still show up as open. Do you have any idea what I can do to help 
> this. When I first tried to do this app I tried to put a single database 
> connection in the session, but that didn't work at all (I think I even 
> successfully crashed apache once I'm proud to say), so I started opening 
> a connection on every page and closing them at the end of the page 
> generation. The problem seems to be though that some aren't getting
> closed.

I suppose you open more than a connection per page, and this is not
what you want, probably you have a complex page to show

> 
> Cheers
> 
> Trevor
> 
> 
> 
> 
> 
> Damjan wrote:
> 
> >>as soon as I'm done all that I want to do. I was wondering if my 
> >>connection was staying active because of threads.
> >>   
> >>
> >
> >What threads?
> >
> > 
> >
> >>When I log into my application then log out again there are 3 more MySQL 
> >>processes running when I check "ps -ef | grep mysql " then there were 
> >>before. 
> >>   
> >>
> >
> >Which doesn't mean that mod_python is still connected to the database.
> >It just means that MySQL will not kill those processes, since they might
> >be needed again pretty soon.
> >
> >To see how many connections are there to the DB, and what each is doing,
> >use 'mysqladmin -p processlist'.
> >
> > 
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From terry.macdonald at dsl.pipex.com  Fri Nov 26 10:16:34 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Fri Nov 26 10:17:04 2004
Subject: [mod_python] Form data handling (newbie question)
In-Reply-To: <014601c4d366$9bd7e9c0$0202a8c0@UberBox>
References: <200411260133.12673.almad@include.cz>
	<014601c4d366$9bd7e9c0$0202a8c0@UberBox>
Message-ID: <1101482193.14830.25.camel@bigmac.taumu.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: rule-blue-right.png
Type: image/png
Size: 207 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/3bf66aaa/rule-blue-right-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: transparent.png
Type: image/png
Size: 144 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/3bf66aaa/transparent-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rule-blue-center.png
Type: image/png
Size: 160 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/3bf66aaa/rule-blue-center-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rule-blue-left.png
Type: image/png
Size: 207 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/3bf66aaa/rule-blue-left-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smiley-3.png
Type: image/png
Size: 819 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/3bf66aaa/smiley-3-0001.png
From terry.macdonald at dsl.pipex.com  Fri Nov 26 10:26:41 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Fri Nov 26 10:27:09 2004
Subject: [mod_python] Form data handling (newbie question)
In-Reply-To: <1101482193.14830.25.camel@bigmac.taumu.com>
References: <200411260133.12673.almad@include.cz>
	<014601c4d366$9bd7e9c0$0202a8c0@UberBox>
	<1101482193.14830.25.camel@bigmac.taumu.com>
Message-ID: <1101482801.14830.28.camel@bigmac.taumu.com>

You can skip using util.fieldstorage altogether if you use req.form
which has already done all the fieldstorage stuff for you and is a dict
of the form values with the field names as keys.


From isofroni at cc.uoi.gr  Fri Nov 26 10:45:23 2004
From: isofroni at cc.uoi.gr (John)
Date: Fri Nov 26 10:47:07 2004
Subject: [mod_python] mod_python doen't seem to work
Message-ID: <000a01c4d3ce$f40ddf10$747882c3@jonsof>

I received that erron in my error_log (log of Apache)

python_handler: make_obcallback returned no obCallBack!


I did what the tutorial says

http://www.modpython.org/live/mod_python-2.7.8/doc-html/inst-testing.html


What is wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/4b9ef691/attachment.html
From Administrator at leebrown.org  Fri Nov 26 10:59:12 2004
From: Administrator at leebrown.org (Lee E. Brown)
Date: Fri Nov 26 10:59:33 2004
Subject: [mod_python] Form data handling (newbie question)
References: <200411260133.12673.almad@include.cz>
	<014601c4d366$9bd7e9c0$0202a8c0@UberBox>
	<1101482193.14830.25.camel@bigmac.taumu.com>
Message-ID: <01a201c4d3d0$df6e69b0$0202a8c0@UberBox>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 819 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/cdc36401/attachment.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 207 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/cdc36401/attachment-0001.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 144 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/cdc36401/attachment-0002.png
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 207 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/cdc36401/attachment-0003.png
From sanders at apache.org  Fri Nov 26 12:39:22 2004
From: sanders at apache.org (Scott Sanders)
Date: Fri Nov 26 12:39:27 2004
Subject: [mod_python] mod_python doen't seem to work
In-Reply-To: <000a01c4d3ce$f40ddf10$747882c3@jonsof>
References: <000a01c4d3ce$f40ddf10$747882c3@jonsof>
Message-ID: <1B8D75F0-3FD2-11D9-8FFD-000A95D2D288@apache.org>

Operating system, python version, mod_python version, Apache version?

Thanks
Scott

On Nov 26, 2004, at 7:45 AM, John wrote:

> I received that erron in my error_log (log of Apache)
> ?
> python_handler: make_obcallback returned no obCallBack!
> ?
> ?
> I did what the tutorial says
> ?
> http://www.modpython.org/live/mod_python-2.7.8/doc-html/inst- 
> testing.html
> ?
> ?
> What is wrong?
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 923 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/05751f8b/attachment.bin
From isofroni at cc.uoi.gr  Fri Nov 26 13:12:11 2004
From: isofroni at cc.uoi.gr (John)
Date: Fri Nov 26 13:13:54 2004
Subject: [mod_python] mod_python doen't seem to work
References: <000a01c4d3ce$f40ddf10$747882c3@jonsof>
	<1B8D75F0-3FD2-11D9-8FFD-000A95D2D288@apache.org>
Message-ID: <000d01c4d3e3$738a31d0$747882c3@jonsof>

Suse 9, apache 1.3.28 full patched, python 2.3-43, mod_python 2.7.8-397

Error log

make_obcallback(): could not import mod_python.apache.
make_obcallback(): could not call init.
[Fri Nov 26 17:45:15 2004] [error] [client IP] python_handler: make_obcallback returned no obCallBack!



  ----- Original Message ----- 
  From: Scott Sanders 
  To: John 
  Cc: mod_python@modpython.org 
  Sent: Friday, November 26, 2004 7:39 PM
  Subject: Re: [mod_python] mod_python doen't seem to work


  Operating system, python version, mod_python version, Apache version?

  Thanks
  Scott

  On Nov 26, 2004, at 7:45 AM, John wrote:


    I received that erron in my error_log (log of Apache)
     
    python_handler: make_obcallback returned no obCallBack!
     
     
    I did what the tutorial says
     
    http://www.modpython.org/live/mod_python-2.7.8/doc-html/inst-testing.html
     
     
    What is wrong?
    _______________________________________________
    Mod_python mailing list
    Mod_python@modpython.org
    http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041126/c0838737/attachment.html
From josh-modpython at valleyfree.com  Fri Nov 26 13:33:48 2004
From: josh-modpython at valleyfree.com (Josh Whiting)
Date: Fri Nov 26 13:33:50 2004
Subject: [mod_python] determining type of fieldStorage dictionary value?
Message-ID: <20041126183348.GB30747@www1.valleyfree.com>

according to the mod_python documentation section 4.6.1, fieldStorage is 
a dictionary-like object in which keys are the form input names and the 
values can be:

1. An instance of StringField, containing the form input value. This is 
only when there is a single value corresponding to the input name. 
StringField is a subclass of str which provides the additional value 
attribute for compatibility with standard library cgi module.

2. An instances of a Field class, if the input is a file upload.

3. A list of StringField and/or Field objects. This is when multiple 
values exist, such as for a <select> HTML form element.

So how do I tell which one it is?  Even if I design my html to work one
way, I can't assume the input request will conform to that. Definately a
noob question but I couldn't find an answer in the python docs, I 
assume it is in there somewhere...  by trial and error I figured I could 
do this:

fields = util.fieldStorage(req)
if str(type(fields['name'])) == "<class 'mod_python.util.StringField'>":
    # it's a single string value
    # ...
elif str(type(fields['name'])) == "<class 'mod_python.util.Field'>":
    # it's a file upload
    # ...
else:
    # it's a list of stringField objects
    # ...

however, this seemed somehow incorrect to compare the output of 
str(type(...)) to a known string value... or this is the preferred 
method?

thanks!
/josh w
From fumanchu at amor.org  Fri Nov 26 14:15:42 2004
From: fumanchu at amor.org (Robert Brewer)
Date: Fri Nov 26 14:17:28 2004
Subject: [mod_python] determining type of fieldStorage dictionary value?
Message-ID: <3A81C87DC164034AA4E2DDFE11D258E32452BB@exchange.hqamor.amorhq.net>

Josh Whiting wrote:
> according to the mod_python documentation section 4.6.1, 
> fieldStorage is 
> a dictionary-like object in which keys are the form input 
> names and the 
> values can be:
> 
> 1. An instance of StringField, containing the form input 
> value. This is 
> only when there is a single value corresponding to the input name. 
> StringField is a subclass of str which provides the additional value 
> attribute for compatibility with standard library cgi module.
> 
> 2. An instances of a Field class, if the input is a file upload.
> 
> 3. A list of StringField and/or Field objects. This is when multiple 
> values exist, such as for a <select> HTML form element.
> 
> So how do I tell which one it is?  Even if I design my html 
> to work one way, I can't assume the input request will conform
> to that. Definately a noob question but I couldn't find an answer
> in the python docs, I assume it is in there somewhere...
> by trial and error I figured I could do this:
> 
> fields = util.fieldStorage(req)
> if str(type(fields['name'])) == "<class 
> 'mod_python.util.StringField'>":
>     # it's a single string value
>     # ...
> elif str(type(fields['name'])) == "<class 'mod_python.util.Field'>":
>     # it's a file upload
>     # ...
> else:
>     # it's a list of stringField objects
>     # ...
> 
> however, this seemed somehow incorrect to compare the output of 
> str(type(...)) to a known string value... or this is the preferred 
> method?

1. Better than checking strings is directly checking types:

if isinstance(fields['name'], mod_python.util.StringField):
    # it's a single string value
    # ...
elif isinstance(fields['name'], mod_python.util.Field):
    # it's a file upload
    # ...

See http://docs.python.org/lib/built-in-funcs.html


2. Here's my current method, using util.FieldStorage.list, to slurp all
of the form values at once:

data = util.FieldStorage(req, 1).list
if data is not None:
    for p in data:
        name = p.name
        if p.filename:
            filedata = p.file.read()
            do_something_with_file(p.filename, filedata)
        else:
            do_something_with(p.value)


Robert Brewer
MIS
Amor Ministries
fumanchu@amor.org

From trevorw at qalabs.com  Fri Nov 26 16:39:46 2004
From: trevorw at qalabs.com (Trevor West)
Date: Fri Nov 26 16:38:08 2004
Subject: [mod_python] How to keep globals
Message-ID: <41A7A2A2.6020504@qalabs.com>

When I was asking about my database problems. Someone mentioned to me 
that they kept a single global database connection and just pulled 
cursers off that. And while I know how to do that in the context of a 
thick client add (we build a big app with wxPython), I'm not sure how to 
keep globals in apache other than using the session. I've seen lots of 
examples on the web but none of it seems to make much sense...

Cheers

Trevor
From nick at dd.revealed.net  Fri Nov 26 17:21:56 2004
From: nick at dd.revealed.net (Nick)
Date: Fri Nov 26 17:22:02 2004
Subject: [mod_python] How to keep globals
In-Reply-To: <41A7A2A2.6020504@qalabs.com>
References: <41A7A2A2.6020504@qalabs.com>
Message-ID: <1101507716.17930.25.camel@nick>

That was me.  I would recommend keeping the global in the module
namespace that contains your handler code.  You can check every request
to see if you're still connected.  Also, see the FAQ for a more complex
setup:

http://modpython.org/FAQ/faqw.py?req=show&file=faq03.003.htp

Nick

On Fri, 2004-11-26 at 14:39 -0700, Trevor West wrote:
> When I was asking about my database problems. Someone mentioned to me 
> that they kept a single global database connection and just pulled 
> cursers off that. And while I know how to do that in the context of a 
> thick client add (we build a big app with wxPython), I'm not sure how to 
> keep globals in apache other than using the session. I've seen lots of 
> examples on the web but none of it seems to make much sense...
> 
> Cheers
> 
> Trevor
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
-- 

From marc.poulhies at epfl.ch  Sat Nov 27 09:21:56 2004
From: marc.poulhies at epfl.ch (=?iso-8859-1?Q?Marc_Poulhi=E8s?=)
Date: Sat Nov 27 09:21:44 2004
Subject: [mod_python] DirectoryIndex and mod_python problem?
Message-ID: <87k6s78j97.fsf@kataplop.net>

Hi,

I'm using apache 1.3.31 and mod_python :2.7.10 (from debian testing) and
have a strange problem. After trying to update my apache to apache2, I
removed apache2 and tried to keep running my old installation.

I'm using a simple configuration for the website using python:

<VirtualHost 81.56.230.184>
  ServerName www.kataplop.net
  DocumentRoot /var/www/devsite/
  CustomLog /var/log/apache/www/access.log combined
    
  <Directory /var/www/devsite/>
    AddHandler python-program .py
    PythonHandler index
    PythonDebug on
##        PythonPath "sys.path+['/var/www/devsite/']"
    Options FollowSymLinks
    AllowOverride All
    DirectoryIndex index.py
  </Directory>
</VirtualHost>

If I point my browser to http://www.kataplop.net/foo.py, I get the
expected result (the python script index.py prints text...). If I simply
point the browser to http://www.kataplop.net/, I can download the
index.py file (I got the script, not the text the script should print).
I really don't understand what's wrong.
Second point is that if I don't use VirtualHost, I can make it work a
bit more:

ServerName www.kataplop.net
DocumentRoot /var/www/devsite/
CustomLog /var/log/apache/www/access.log combined

<Directory /var/www/devsite/>
  AddHandler python-program .py
  PythonHandler index
  PythonDebug on
  PythonPath "sys.path+['/var/www/devsite/']"
  Options FollowSymLinks
  AllowOverride All
  DirectoryIndex index.py
</Directory>

Pointing browser to http://stju.kataplop.net/index.py works, but still,
http://stju.kataplop.net does not work (even with the DirectoryIndex
directive).

Is this an apache config issue or is this a mod_python problem?

Thanks,

-- 
Marc Poulhi?s
http://www.kataplop.net
From dg at sponsera.com  Sat Nov 27 12:35:37 2004
From: dg at sponsera.com (David Geller)
Date: Sat Nov 27 12:36:34 2004
Subject: [mod_python] How to keep globals
In-Reply-To: <1101507716.17930.25.camel@nick>
References: <41A7A2A2.6020504@qalabs.com> <1101507716.17930.25.camel@nick>
Message-ID: <41A8BAE9.8020303@sponsera.com>

I was noticing in the FAQ on maintaining a persistent MySQL DB 
connection, that while there is a single global db connection, on each 
request a new call to db.cursor() is made. What are the 
advantages/disadvantages to making the cursor global as well and using 
the same cursor for each request?

Also, since the db connection is never explicitly closed, will it be 
closed when/if the apache process dies? (mpm = prefork)

David

Nick wrote:
> That was me.  I would recommend keeping the global in the module
> namespace that contains your handler code.  You can check every request
> to see if you're still connected.  Also, see the FAQ for a more complex
> setup:
> 
> http://modpython.org/FAQ/faqw.py?req=show&file=faq03.003.htp
> 
> Nick
> 
> On Fri, 2004-11-26 at 14:39 -0700, Trevor West wrote:
> 
>>When I was asking about my database problems. Someone mentioned to me 
>>that they kept a single global database connection and just pulled 
>>cursers off that. And while I know how to do that in the context of a 
>>thick client add (we build a big app with wxPython), I'm not sure how to 
>>keep globals in apache other than using the session. I've seen lots of 
>>examples on the web but none of it seems to make much sense...
>>
>>Cheers
>>
>>Trevor
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
From mike_mp at zzzcomputing.com  Sat Nov 27 13:22:13 2004
From: mike_mp at zzzcomputing.com (michael bayer)
Date: Sat Nov 27 13:22:15 2004
Subject: [mod_python] How to keep globals
In-Reply-To: <1101507716.17930.25.camel@nick>
References: <41A7A2A2.6020504@qalabs.com> <1101507716.17930.25.camel@nick>
Message-ID: <425B28B6-40A1-11D9-9530-000A95DA37D6@zzzcomputing.com>

The database API http://www.python.org/peps/pep-0249.html refers to a 
module global called "threadsafety" which is an integer defining at 
what level can multiple threads share a database resource, for a given 
database connection library.   I would note that the approach of 
keeping the connection object as a global variable, using a new cursor 
within each query requires this to be value 2 (threads can share the 
module and connections) or 3 (threads can share the module, 
connections, and cursors).  if you can guarantee that your application 
will only run with a non-threaded apache (prefork MPM), then you dont 
have to worry about threading, but I generally like to write an 
application such that it can run in as many environments as possible.

On Nov 26, 2004, at 5:21 PM, Nick wrote:

> That was me.  I would recommend keeping the global in the module
> namespace that contains your handler code.  You can check every request
> to see if you're still connected.  Also, see the FAQ for a more complex
> setup:
>
> http://modpython.org/FAQ/faqw.py?req=show&file=faq03.003.htp
>
> Nick
>
> On Fri, 2004-11-26 at 14:39 -0700, Trevor West wrote:
>> When I was asking about my database problems. Someone mentioned to me
>> that they kept a single global database connection and just pulled
>> cursers off that. And while I know how to do that in the context of a
>> thick client add (we build a big app with wxPython), I'm not sure how 
>> to
>> keep globals in apache other than using the session. I've seen lots of
>> examples on the web but none of it seems to make much sense...
>>
>> Cheers
>>
>> Trevor
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> -- 
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From nick at dd.revealed.net  Sat Nov 27 13:23:15 2004
From: nick at dd.revealed.net (Nick)
Date: Sat Nov 27 13:23:18 2004
Subject: [mod_python] How to keep globals
In-Reply-To: <41A8BAE9.8020303@sponsera.com>
References: <41A7A2A2.6020504@qalabs.com> <1101507716.17930.25.camel@nick>
	<41A8BAE9.8020303@sponsera.com>
Message-ID: <1101579795.17930.30.camel@nick>

On Sat, 2004-11-27 at 12:35 -0500, David Geller wrote:
> Also, since the db connection is never explicitly closed, will it be 
> closed when/if the apache process dies? (mpm = prefork)

Yeah, I wonder that myself.  I've had some flaky results with the mysql
module in the past, specifically keeping connections open that were
supposedly destroyed during garbage collection.  Although, it's not a
bad idea if you're using prefork to register a cleanup handler that
explicitly calls gc.collect() at the end of requests.  There is a
performance hit if you're getting 100s of requests per second, but your
average web app with, say, 50 concurrent users, won't suffer that much.

Nick

From yuri.ushakov at gmail.com  Sat Nov 27 13:34:48 2004
From: yuri.ushakov at gmail.com (Yuri Ushakov)
Date: Sat Nov 27 13:35:03 2004
Subject: [mod_python] memory usage
Message-ID: <d408c9710411271034779a8bb8@mail.gmail.com>

Hello,

I've been running mod_python and found some difficulties.. I run
openload which does 50 concurrent connections to a test script (S1)
and within a few seconds memory obtained by the child apache process
grows from ~10mb to 215mb, and keeps growing...

S1:
from mod_python import apache

def handler(req):
    req.content_type = "text/html"
    req.write("Hello!")
    return apache.OK

Configuration:
Apache/2.0.52 (Win32) PHP/4.3.9 mod_python/3.1.3 Python/2.3.4
Python debug is off
The S1 script is configured as PythonHandler wiht no other M.P. directives.


When I try the same openload test on a different script (S2), the
process rapidly grows to ~120mb and almost stops there, continuing to
eat about 5k like each 10-20 seconds. Within about 200000 requests (50
per second), memory grew from 120 to 130 megabytes. If I turn on
PythonDebug, this growth step is much higher.

Then after stopping the testing memory does not get freed. So, after
like 20 minutes of idleness apache process still occupies the big size
(130, 215, whatever it was..).

I've been wondering whether such behaviour is caused by
misconfiguration of the apache server? Or should that memory growth
stop somewhere?Thanks for any help..

S2:
import em, StringIO
import MySQLdb
from mod_python import apache
import sys
from Pool import Pool, Constructor

def index(req):
    res = {
        'visual_title': "Testing"
    }

    req.content_type = "text/html"
    
    out = StringIO.StringIO()
    try:
        interp = em.Interpreter(output = out)
        interp.file(open(req.document_root() + "/t1/cp/tpl.empy"),\
                    locals = { 'res': res })
        req.write(out.getvalue())
    finally:
        interp.shutdown()

Configuration:
The handler is standard publisher with no other M.P. directives.

Yuri.
From list at joreybump.com  Sat Nov 27 18:15:04 2004
From: list at joreybump.com (Jorey Bump)
Date: Sat Nov 27 18:15:10 2004
Subject: [mod_python] How to keep globals
In-Reply-To: <41A7A2A2.6020504@qalabs.com>
References: <41A7A2A2.6020504@qalabs.com>
Message-ID: <41A90A78.1050600@joreybump.com>

Trevor West wrote:
> When I was asking about my database problems. Someone mentioned to me 
> that they kept a single global database connection and just pulled 
> cursers off that. And while I know how to do that in the context of a 
> thick client add (we build a big app with wxPython), I'm not sure how to 
> keep globals in apache other than using the session. I've seen lots of 
> examples on the web but none of it seems to make much sense...

I don't quite have a grip on creating db connection pools, but I've 
discovered a nice side effect of a solution I posted about earlier about 
hiding db connection passwords.

In order to keep passwords out of the DocumentRoot, I've created a 
python directory in my home directory and added it to the VirtualHost's 
PythonPath. This allows me to simply import modules of variables that 
serve as configuration settings. I've discovered that if I also set up 
my db connection in this module, it gets reused quite a lot before it is 
destroyed and replaced by a new one.

For example, here is ~/python/settings.py:

  """
  Settings for applications that use the menagerie database.
  """
  import MySQLdb

  dbhost = "localhost"
  dbuser = "cyril"
  dbpwd  = "ladidi123"
  dbname = "menagerie"
  dbh = MySQLdb.connect(dbhost, dbuser, dbpwd, dbname)

Then in my application, I import all of the values:

  from settings import *

Now I can use the same dbh for the life of the interpreter, rather than 
  creating a new one within the script. IOW, each apache process seems 
to get a db handle, instead of each request. The handle is also shared 
by any other scripts that import the settings module within a single 
interpreter.

This is on Debian woody:
Apache/1.3.26 (Unix) Debian GNU/Linux mod_python/2.7.8 Python/2.1.3
From terry.macdonald at dsl.pipex.com  Sat Nov 27 19:20:52 2004
From: terry.macdonald at dsl.pipex.com (Terry MacDonald)
Date: Sat Nov 27 19:21:24 2004
Subject: [mod_python] How to keep globals
In-Reply-To: <41A8BAE9.8020303@sponsera.com>
References: <41A7A2A2.6020504@qalabs.com> <1101507716.17930.25.camel@nick>
	<41A8BAE9.8020303@sponsera.com>
Message-ID: <1101601252.14830.33.camel@bigmac.taumu.com>

On Sat, 2004-11-27 at 17:35, David Geller wrote:
> What are the 
> advantages/disadvantages to making the cursor global as well and using 
> the same cursor for each request?
> 

I have written an app (mod_python 3.1.3, apache 2.0.51 - prefork MPM) that 
uses a global db connection (Postgresql and pypgsql) and cursor this way 
and it works fine.



From digital.spy at gmx.net  Sun Nov 28 14:33:34 2004
From: digital.spy at gmx.net (Lars M.)
Date: Sun Nov 28 14:32:51 2004
Subject: [mod_python] CWD
Message-ID: <6.2.0.14.0.20041128203303.01d07e40@pop.gmx.net>

Hi,

I use mod_python + psp and os.path.dirname(__file__) gives me 
C:\Python23\lib\site-packages\mod_python, not the directory containing the 
.psp script. any ideas? (WinXP SP2)

Thanks,

-Lars

From sanders at apache.org  Sun Nov 28 15:51:34 2004
From: sanders at apache.org (Scott Sanders)
Date: Sun Nov 28 15:51:41 2004
Subject: [mod_python] CWD
In-Reply-To: <6.2.0.14.0.20041128203303.01d07e40@pop.gmx.net>
References: <6.2.0.14.0.20041128203303.01d07e40@pop.gmx.net>
Message-ID: <4A26ED41-417F-11D9-9111-000A95D2D288@apache.org>

As far as I know, cwd cannot be set in mod_python due to the possible 
multi-threaded nature of Apache.

Scott

On Nov 28, 2004, at 11:33 AM, Lars M. wrote:

> Hi,
>
> I use mod_python + psp and os.path.dirname(__file__) gives me 
> C:\Python23\lib\site-packages\mod_python, not the directory containing 
> the .psp script. any ideas? (WinXP SP2)
>
> Thanks,
>
> -Lars
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From fumanchu at amor.org  Sun Nov 28 16:05:54 2004
From: fumanchu at amor.org (Robert Brewer)
Date: Sun Nov 28 16:07:44 2004
Subject: [mod_python] CWD
Message-ID: <3A81C87DC164034AA4E2DDFE11D258E32452C1@exchange.hqamor.amorhq.net>

Lars M. wrote:
> I use mod_python + psp and os.path.dirname(__file__) gives me 
> C:\Python23\lib\site-packages\mod_python, not the directory 
> containing the 
> .psp script. any ideas? (WinXP SP2)

Is Request.filename what you're looking for?


Robert Brewer
MIS
Amor Ministries
fumanchu@amor.org

From ivo.looser at login.ch  Mon Nov 29 06:19:58 2004
From: ivo.looser at login.ch (Ivo Looser)
Date: Mon Nov 29 06:20:06 2004
Subject: [mod_python] Unicode Support
Message-ID: <200411291147813.SM00181@loginf2>

Hi Guys

I whould like to change my unicode settings in Mod_Python.

I saw a lot of but nothing helps me:-)

Basicly I should like to start the pyhton interpreter with -U command in my
Apache.

Is it possible?

TIA Ivo Looser


From gustavo.cordova at q-voz.com  Mon Nov 29 09:39:00 2004
From: gustavo.cordova at q-voz.com (=?UTF-8?B?R3VzdGF2byBDw7NyZG92YSBBdmlsYQ==?=)
Date: Mon Nov 29 09:32:48 2004
Subject: [mod_python] Unicode Support
In-Reply-To: <200411291147813.SM00181@loginf2>
References: <200411291147813.SM00181@loginf2>
Message-ID: <41AB3484.7080603@q-voz.com>

Ivo Looser wrote:

>Hi Guys
>
>I whould like to change my unicode settings in Mod_Python.
>
>I saw a lot of but nothing helps me:-)
>
>Basicly I should like to start the pyhton interpreter with -U command in my
>Apache.
>
>Is it possible?
>
>TIA Ivo Looser
>
I don't think Apache understands unicode strings yet, you'd
have to encode your unicode objects into something that can
be transmited v?a plain http:

request.content_type = 'text/html;charset="utf-8"'
request.write(YOUR_UNICODE_CONTENT.encode("utf-8"))

something like that.

I suppose mod_python could be configured to do that kind of
stuff automagically, but it's much better to have it behave
explicitly, instead of implicitly (IMO).
--
Gustavo C?rdova Avila <gustavo.cordova@q-voz.com> 
<mailto:gustavo.cordova@q-voz.com>
*Tel:* +52 (81) 8130-1919 ext. 127
Integraciones del Norte, S.A. de C.V.
Padua #6047, Colonia Sat?lite Acueducto
Monterrey, Nuevo Le?n, M?xico.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 256 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041129/47f310f2/signature.bin
From nick at dd.revealed.net  Mon Nov 29 10:16:46 2004
From: nick at dd.revealed.net (Nick)
Date: Mon Nov 29 10:17:04 2004
Subject: [mod_python] Unicode Support
In-Reply-To: <200411291147813.SM00181@loginf2>
References: <200411291147813.SM00181@loginf2>
Message-ID: <41AB3D5E.6050705@dd.revealed.net>

Check for a line in the Python lib directory in site.py that looks like:

encoding = "ascii"

Make sure python is built with Unicode support, of course ;-)

Nick

Ivo Looser wrote:
> I whould like to change my unicode settings in Mod_Python.
> 
> I saw a lot of but nothing helps me:-)
> 
> Basicly I should like to start the pyhton interpreter with -U command in my
> Apache.
> 
> Is it possible?

From jgentil at sebistar.net  Mon Nov 29 15:30:29 2004
From: jgentil at sebistar.net (Jon-Pierre Gentil)
Date: Mon Nov 29 15:30:31 2004
Subject: [mod_python] ZODB and mod_python.
Message-ID: <41AB86E5.5000509@sebistar.net>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: RIPEMD160

Has anyone used ZODB with mod_python?

I'm curious about something:  How did you keep it from loading and
unloading the whole database with each page request?  a global object
that stays instantiated?

Thanks!

- --
_________________________________________________________

  Jon-Pierre Gentil        jabber: jgentil@sebistar.net
  PGP: 0xA21BC30E             web: http://www.keyad.com
  "If you think education is expensive, try ignorance."
_________________________________________________________

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iEYEAREDAAYFAkGrhuUACgkQOrVFmaIbww6OkQCfTGB8QTEI6YMlCq+evvPmv8TG
H6MAn3o2Gp4+3FSyd4jIsCnapoHwCqGm
=4xLm
-----END PGP SIGNATURE-----
From java_dev at nilling.nl  Mon Nov 29 15:56:50 2004
From: java_dev at nilling.nl (java_dev)
Date: Mon Nov 29 15:59:02 2004
Subject: [mod_python] ModPython, Psycopg postgresql gives segmentation fault
Message-ID: <20041129215650.5fa92ff8.java_dev@nilling.nl>

Hi,
Some config stuff is puzzeling me. I have a site running with mod_python 3.1.3, apache 2.0.49, psycopg 1.99.10 and postgres 7.4.2

On my developmentmachine the only real difference is that I'm using postgresql 7.4.5

I get a segmentation fault when using authentication using a database. Strange because writing this email made me try switching the authenhandler of to see if the rest was also crashing but that part is working ok.

So the Segmentation Fault is caused by the AuthenHandler using the database. 

Further research showed that nothing is wrong with the database but I have trouble with the Session part of the authentication.

I store a uservalue in the Session which I check and on my productionserver is gives a crash and on my development machine it works well.

The reason i store a value in the session is that the AuthenticationHandler every request a call to the database makes. I tried to prevent that behaviour. 

If someone can give me a pointer how to prevent the Session from creating segmentation Faults please let me know. And if there is another way for preventing the authenicationhandler from being called all the time please let me know

Thanks

Johan


-- 
Nilling Software Design
Postbus 43
2280 AA  Rijswijk ZH
w: http://www.nilling.nl
From neel at mediapulse.com  Mon Nov 29 16:31:53 2004
From: neel at mediapulse.com (Michael C. Neel)
Date: Mon Nov 29 16:31:57 2004
Subject: [mod_python] Anyone been working on the WSGI version?
In-Reply-To: <A43D2359-3DB0-11D9-8FFD-000A95D2D288@apache.org>
References: <A43D2359-3DB0-11D9-8FFD-000A95D2D288@apache.org>
Message-ID: <1101763913.30081.3.camel@mike.mediapulse.com>

I don't think I've seen anyone say they are - my understanding is PEP
333 is still a draft, so that may be part of the reason.

Mike

On Tue, 2004-11-23 at 19:34, Scott Sanders wrote:

> I am assuming that WSGI is pretty close to real world, judging from 
> WebWare now being retrofitted.  Has anyone worked on this?
> 
> Scott
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

__________________________________ 

michael.neel@mediapulse.com
vice president of information systems
865.675.4455 x30
800.380.4514

www.mediapulse.com
__________________________________
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041129/e763c903/attachment.html
From jafo at tummy.com  Mon Nov 29 17:45:30 2004
From: jafo at tummy.com (Sean Reifschneider)
Date: Mon Nov 29 17:45:49 2004
Subject: [mod_python] ZODB and mod_python.
In-Reply-To: <41AB86E5.5000509@sebistar.net>
References: <41AB86E5.5000509@sebistar.net>
Message-ID: <20041129224530.GA31982@tummy.com>

On Mon, Nov 29, 2004 at 02:30:29PM -0600, Jon-Pierre Gentil wrote:
>Has anyone used ZODB with mod_python?

No, but JOTWeb (http://jotweb.tummy.com/) uses the Zope 3 TAL engine.  The
code was kind of hairy to understand, but I did eventually get it working
and it's been quite happy since.  Note that they're trying to split Zope 3
up into the component parts so that you can extract just the parts you need
and not require the whole Zope install.  I've never been able to get that
to work though.  I've reported the problems I had to Fred Drake, so it may
be fixed now.

The software for getting just the parts is:

   http://www.zope.org/Members/fdrake/zpkgtools/

>I'm curious about something:  How did you keep it from loading and
>unloading the whole database with each page request?  a global object
>that stays instantiated?

For me, that's not an issue.  I use PostgreSQL as my data store in most
cases, and am not really that concerned in most cases about startup
overhead, so I just make a connection for every request.  It's almost
certainly lighter than making a new ZODB connection every time though.

Putting the connection in a persistent object should do the job.  Of
course, if you have multiple httpd instances running, they will each have
to make a connection, so it may take quite a few page reloads on your test
system before you notice it using the cached object.  On my test system I
make each httpd only handle one request, so I would never notice it anyway.

Sean
-- 
 There are things that are so serious that you can only joke about them.
                 -- Heisenberg
Sean Reifschneider, Member of Technical Staff <jafo@tummy.com>
tummy.com, ltd. - Linux Consulting since 1995.  Qmail, Python, SysAdmin
From jryan at qutang.net  Mon Nov 29 20:31:10 2004
From: jryan at qutang.net (Justin Ryan)
Date: Mon Nov 29 20:31:15 2004
Subject: [mod_python] ModPython,
	Psycopg postgresql gives segmentation fault
In-Reply-To: <20041129215650.5fa92ff8.java_dev@nilling.nl>
References: <20041129215650.5fa92ff8.java_dev@nilling.nl>
Message-ID: <83E74807-426F-11D9-A6AB-000D93AD1DB8@qutang.net>

What exactly are you storing in the session?

Under what conditions do you avoid a database hit, specifically?

Is it necessary to avoid a database hit during authenhandler, since you 
are probably going to hit the db again later?  It would probably help 
to keep your code from creating a new db connection after 
authenticating, but it seems logical that you will need one at some 
point during most requests (unless you are using postgres only for 
authentication).

-=JR

On Nov 29, 2004, at 12:56 PM, java_dev wrote:

> Hi,
> Some config stuff is puzzeling me. I have a site running with 
> mod_python 3.1.3, apache 2.0.49, psycopg 1.99.10 and postgres 7.4.2
>
> On my developmentmachine the only real difference is that I'm using 
> postgresql 7.4.5
>
> I get a segmentation fault when using authentication using a database. 
> Strange because writing this email made me try switching the 
> authenhandler of to see if the rest was also crashing but that part is 
> working ok.
>
> So the Segmentation Fault is caused by the AuthenHandler using the 
> database.
>
> Further research showed that nothing is wrong with the database but I 
> have trouble with the Session part of the authentication.
>
> I store a uservalue in the Session which I check and on my 
> productionserver is gives a crash and on my development machine it 
> works well.
>
> The reason i store a value in the session is that the 
> AuthenticationHandler every request a call to the database makes. I 
> tried to prevent that behaviour.
>
> If someone can give me a pointer how to prevent the Session from 
> creating segmentation Faults please let me know. And if there is 
> another way for preventing the authenicationhandler from being called 
> all the time please let me know
>
> Thanks
>
> Johan
>
>
> -- 
> Nilling Software Design
> Postbus 43
> 2280 AA  Rijswijk ZH
> w: http://www.nilling.nl
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From rune.hansen at scanmine.com  Tue Nov 30 04:16:01 2004
From: rune.hansen at scanmine.com (Rune Hansen)
Date: Tue Nov 30 04:16:18 2004
Subject: [mod_python] ModPython,
	Psycopg postgresql gives segmentation fault
In-Reply-To: <20041129215650.5fa92ff8.java_dev@nilling.nl>
References: <20041129215650.5fa92ff8.java_dev@nilling.nl>
Message-ID: <745A8055-42B0-11D9-833C-000A956CC60E@scanmine.com>


On 29. nov 2004, at 21.56, java_dev wrote:
>
> If someone can give me a pointer how to prevent the Session from 
> creating segmentation Faults please let me know. And if there is 
> another way for preventing the authenicationhandler from being called 
> all the time please let me know
>
> Thanks
>
> Johan
>
A description on how to build your own authentication can be found here 
http://www.scanmine.com/mp/

regards
/rune

From rune.hansen at scanmine.com  Tue Nov 30 04:28:11 2004
From: rune.hansen at scanmine.com (Rune Hansen)
Date: Tue Nov 30 04:28:15 2004
Subject: [mod_python] ModPython,
	Psycopg postgresql gives segmentation fault
In-Reply-To: <20041129215650.5fa92ff8.java_dev@nilling.nl>
References: <20041129215650.5fa92ff8.java_dev@nilling.nl>
Message-ID: <278509F9-42B2-11D9-833C-000A956CC60E@scanmine.com>


On 29. nov 2004, at 21.56, java_dev wrote:

>
> If someone can give me a pointer how to prevent the Session from 
> creating segmentation Faults please let me know. And if there is 
> another way for preventing the authenicationhandler from being called 
> all the time please let me know
>
> Thanks
>
> Johan
>
As for the session segfault. Just remembered  had this problem on 
Fedora Core1 with python 2.3.3. On this machine a python interpreter in 
mod_python could not make use of the anydbm(dbhash) module. If the db 
type was given to : Session.DbmSession(req, dbm=gdmb) the segfault 
disappeared, but then register_cleanup would fail. I "solved" it by 
compiling python 2.3.4 on that machine.

regards
/rune

From mar at centrum.cz  Tue Nov 30 06:06:09 2004
From: mar at centrum.cz (Martin Slouf)
Date: Tue Nov 30 06:06:12 2004
Subject: [mod_python] ModPython,
	Psycopg postgresql gives segmentation fault
In-Reply-To: <redirect-14872347@vse.cz>
References: <20041129215650.5fa92ff8.java_dev@nilling.nl>
	<redirect-14872347@vse.cz>
Message-ID: <20041130110609.GA6325@barbucha.martin.net>

hi,

fisrt of all, sorry, not sure this is the right thread, by mistake i pressed
Ctrl-D in mutt more than once :) and the net archives are somewhat unreachable.

i guess johan was sending me an email where he complained about segfaults when
he tried to store db connection object in session.

im afraid mod_python is using cpickle, not pickle, to store session objects and
though much faster, the db connection object cannot be saved in session --
anyway, i just simulated a sample page trying to store the db connection in
session and the errors i received where not segfaults, but some cpikle
exception.

try to store the db connection in global variable.

m.


On Tue, Nov 30, 2004 at 11:15:09AM +0100, Rune Hansen wrote:
> 
> On 29. nov 2004, at 21.56, java_dev wrote:
> 
> >
> >If someone can give me a pointer how to prevent the Session from 
> >creating segmentation Faults please let me know. And if there is 
> >another way for preventing the authenicationhandler from being called 
> >all the time please let me know
> >
> >Thanks
> >
> >Johan
> >
> As for the session segfault. Just remembered  had this problem on 
> Fedora Core1 with python 2.3.3. On this machine a python interpreter in 
> mod_python could not make use of the anydbm(dbhash) module. If the db 
> type was given to : Session.DbmSession(req, dbm=gdmb) the segfault 
> disappeared, but then register_cleanup would fail. I "solved" it by 
> compiling python 2.3.4 on that machine.
> 
> regards
> /rune
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From Moiz.Golawala at ge.com  Tue Nov 30 09:50:23 2004
From: Moiz.Golawala at ge.com (Golawala, Moiz M (GE Infrastructure))
Date: Tue Nov 30 09:50:29 2004
Subject: [mod_python] Returning a Apache return code 
Message-ID: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>

Hi All,

I have am newbie and I seems to be having a problem return a different apache return code. In my httpd.conf file I am using PythonHandler mod_python.publisher. 

In my index.py file.

index(req):
	req.header_out['Location'] = "http://someurl:8080/
	return apache.HTTP_PERMANENTLY_MOVED

my problem is that this returns:

HTTP/1.1 200 OK
Date: Tue, 30 Nov 2004 01:12:06 GMT
Server: Apache/2.0.49 (Fedora)
Location:  "http://someurl:8080/"
Connection: close
Transfer-Encoding: chunked
Content-Type: text/html; charset=UTF-8

3
301
0


I would like to return HTTP/1.1 301.. instead of HTTP/1.1 200 OK. 

For some reason anything that the method return the publisher handler puts it in the body of the request I cannot return a different return code other than the default apache.OK

Could some one please help me with this.

Thanks
Moiz Golawala

From isofroni at cc.uoi.gr  Tue Nov 30 09:58:40 2004
From: isofroni at cc.uoi.gr (John)
Date: Tue Nov 30 10:00:26 2004
Subject: [mod_python] mod_python and --DEAPI  compilation
Message-ID: <000a01c4d6ed$171a9db0$747882c3@jonsof>

I compiled the mod_python according to the www.modpython.org tutorial

./configure --with-apxs=/usr/local/apache/bin/apxs

./make dso

./make install


Now i configured the http.conf and i tried to start the apache server, but i receive an error.

[Tue Nov 30 16:49:35 2004] [warn] Loaded DSO libexec/mod_python.so uses plain Apache 1.3 API, this module might crash under EAPI! (please recompile it with -DEAPI)


Do you know what is going on?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20041130/4d8841c4/attachment-0001.html
From Joseph.Skora at jhuapl.edu  Tue Nov 30 10:01:57 2004
From: Joseph.Skora at jhuapl.edu (Skora, Joseph)
Date: Tue Nov 30 10:02:04 2004
Subject: [mod_python] Publisher vs. Handler
Message-ID: <D4948B7E0294E44EABDDF72BFDEC412B01FD0066@aplesfreedom.dom1.jhuapl.edu>

I have not found a satisfying explanation of this, so I will ask it
here:  What are the pros/cons of using the publisher vs. hanlder
mechanisms in mod_python?

I have seen the stats in the documentation, but my experience was the
opposite.  One seems easier to configure, but the other more flexible.
Is that it?

Thanks,

Joe

Joseph Skora 
JHU Applied Physics Laboratory 
joseph.skora@jhuapl.edu

From crxop at tiscali.it  Tue Nov 30 11:10:34 2004
From: crxop at tiscali.it (Daniele Cruciani)
Date: Tue Nov 30 11:10:47 2004
Subject: [mod_python] Returning a Apache return code
In-Reply-To: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>
References: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>
Message-ID: <1101831034.21847.12.camel@fincos>

Il giorno mar, 30-11-2004 alle 09:50 -0500, Golawala, Moiz M (GE
Infrastructure) ha scritto:
> Hi All,
> 
> I have am newbie and I seems to be having a problem return a different apache return code. In my httpd.conf file I am using PythonHandler mod_python.publisher. 
> 
> In my index.py file.
> 
> index(req):
> 	req.header_out['Location'] = "http://someurl:8080/
> 	return apache.HTTP_PERMANENTLY_MOVED

Maybe just asked try:

	req.headers_out['Location']="http://someurl:8080/"
        req.status=apache.HTTP_PERMANENTLY_MOVED
        raise apache.SERVER_RETURN, apache.HTTP_PERMANENTLY_MOVED

there should be something about in documentation too (why to raise to
apache).

Daniele.

> 
> my problem is that this returns:
> 
> HTTP/1.1 200 OK
> Date: Tue, 30 Nov 2004 01:12:06 GMT
> Server: Apache/2.0.49 (Fedora)
> Location:  "http://someurl:8080/"
> Connection: close
> Transfer-Encoding: chunked
> Content-Type: text/html; charset=UTF-8
> 
> 3
> 301
> 0
> 
> 
> I would like to return HTTP/1.1 301.. instead of HTTP/1.1 200 OK. 
> 
> For some reason anything that the method return the publisher handler puts it in the body of the request I cannot return a different return code other than the default apache.OK
> 
> Could some one please help me with this.
> 
> Thanks
> Moiz Golawala
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From digital.spy at gmx.net  Tue Nov 30 11:16:24 2004
From: digital.spy at gmx.net (Lars M.)
Date: Tue Nov 30 11:16:13 2004
Subject: [mod_python] CWD
In-Reply-To: <3A81C87DC164034AA4E2DDFE11D258E32452C1@exchange.hqamor.amo
	rhq.net>
References: <3A81C87DC164034AA4E2DDFE11D258E32452C1@exchange.hqamor.amorhq.net>
Message-ID: <6.2.0.14.0.20041130171610.01c895d0@pop.gmx.net>

Exactly. Thanks.

At 10:05 PM 11/28/2004, Robert Brewer wrote:
>Lars M. wrote:
> > I use mod_python + psp and os.path.dirname(__file__) gives me
> > C:\Python23\lib\site-packages\mod_python, not the directory
> > containing the
> > .psp script. any ideas? (WinXP SP2)
>
>Is Request.filename what you're looking for?
>
>
>Robert Brewer
>MIS
>Amor Ministries
>fumanchu@amor.org

From list at joreybump.com  Tue Nov 30 12:12:32 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov 30 12:12:36 2004
Subject: [mod_python] Returning a Apache return code
In-Reply-To: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>
References: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>
Message-ID: <41ACAA00.8080401@joreybump.com>

Golawala, Moiz M (GE Infrastructure) wrote:

> I have am newbie and I seems to be having a problem return a
> different apache return code. In my httpd.conf file I am using
> PythonHandler mod_python.publisher.
> 
> In my index.py file.
> 
> index(req): req.header_out['Location'] = "http://someurl:8080/ 
 > return apache.HTTP_PERMANENTLY_MOVED

Try this:

from mod_python import apache

index(req)
     status = apache.HTTP_MOVED_PERMANENTLY
     req.headers_out['Location'] = url
     req.status = status
     raise apache.SERVER_RETURN, status

More info:

  http://www.modpython.org/live/current/doc-html/pyapi-handler.html

> my problem is that this returns:
> 
> HTTP/1.1 200 OK Date: Tue, 30 Nov 2004 01:12:06 GMT Server:
> Apache/2.0.49 (Fedora) Location:  "http://someurl:8080/" Connection:
> close Transfer-Encoding: chunked Content-Type: text/html;
> charset=UTF-8
> 
> 3 301 0
> 
> 
> I would like to return HTTP/1.1 301.. instead of HTTP/1.1 200 OK.
> 
> For some reason anything that the method return the publisher handler
> puts it in the body of the request I cannot return a different return
> code other than the default apache.OK
> 
> Could some one please help me with this.
From list at joreybump.com  Tue Nov 30 12:13:44 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov 30 12:13:47 2004
Subject: [mod_python] mod_python and --DEAPI  compilation
In-Reply-To: <000a01c4d6ed$171a9db0$747882c3@jonsof>
References: <000a01c4d6ed$171a9db0$747882c3@jonsof>
Message-ID: <41ACAA48.7050802@joreybump.com>

John wrote:

> I compiled the mod_python according to the www.modpython.org 
> <http://www.modpython.org> tutorial
>  
> ./configure --with-apxs=/usr/local/apache/bin/apxs
>  
> ./make dso
>  
> ./make install
>  
>  
> Now i configured the http.conf and i tried to start the apache server, 
> but i receive an error.
>  
> [Tue Nov 30 16:49:35 2004] [warn] Loaded DSO libexec/mod_python.so uses 
> plain Apache 1.3 API, this module might crash under EAPI! (please 
> recompile it with -DEAPI)
>  
>  
> Do you know what is going on?

It's safe to ignore this error.
From isofroni at cc.uoi.gr  Tue Nov 30 12:24:24 2004
From: isofroni at cc.uoi.gr (John)
Date: Tue Nov 30 12:26:09 2004
Subject: [mod_python] mod_python and --DEAPI  compilation
References: <000a01c4d6ed$171a9db0$747882c3@jonsof>
	<41ACAA48.7050802@joreybump.com>
Message-ID: <000901c4d701$72bd3c40$747882c3@jonsof>

I read somewhere that tis problems is related to a SSL bug on apache

Can this be true as far as i have mod_ssl installed on apache and i am
deeply
concerned with my system's security.



----- Original Message ----- 
From: "Jorey Bump" <list@joreybump.com>
To: <mod_python@modpython.org>
Sent: Tuesday, November 30, 2004 7:13 PM
Subject: Re: [mod_python] mod_python and --DEAPI compilation


> John wrote:
>
> > I compiled the mod_python according to the www.modpython.org
> > <http://www.modpython.org> tutorial
> >
> > ./configure --with-apxs=/usr/local/apache/bin/apxs
> >
> > ./make dso
> >
> > ./make install
> >
> >
> > Now i configured the http.conf and i tried to start the apache server,
> > but i receive an error.
> >
> > [Tue Nov 30 16:49:35 2004] [warn] Loaded DSO libexec/mod_python.so uses
> > plain Apache 1.3 API, this module might crash under EAPI! (please
> > recompile it with -DEAPI)
> >
> >
> > Do you know what is going on?
>
> It's safe to ignore this error.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>


From nick at dd.revealed.net  Tue Nov 30 12:39:33 2004
From: nick at dd.revealed.net (Nick)
Date: Tue Nov 30 12:39:41 2004
Subject: [mod_python] Returning a Apache return code
In-Reply-To: <41ACAA00.8080401@joreybump.com>
References: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>
	<41ACAA00.8080401@joreybump.com>
Message-ID: <41ACB055.8060004@dd.revealed.net>

Note that you should almost always use 307 (moved temporarily) for a web 
application, because 301 tells the client to always go to the new location 
when the URL is requested without even asking for the original page.  I.e., 
the page has moved permanently, don't look here anymore.

Nick

Jorey Bump wrote:
> Golawala, Moiz M (GE Infrastructure) wrote:
> 
>> I have am newbie and I seems to be having a problem return a
>> different apache return code. In my httpd.conf file I am using
>> PythonHandler mod_python.publisher.
>>
>> In my index.py file.
>>
>> index(req): req.header_out['Location'] = "http://someurl:8080/ 
> 
>  > return apache.HTTP_PERMANENTLY_MOVED
> 
> Try this:
> 
> from mod_python import apache
> 
> index(req)
>     status = apache.HTTP_MOVED_PERMANENTLY
>     req.headers_out['Location'] = url
>     req.status = status
>     raise apache.SERVER_RETURN, status
> 
> More info:
> 
>  http://www.modpython.org/live/current/doc-html/pyapi-handler.html
> 
>> my problem is that this returns:
>>
>> HTTP/1.1 200 OK Date: Tue, 30 Nov 2004 01:12:06 GMT Server:
>> Apache/2.0.49 (Fedora) Location:  "http://someurl:8080/" Connection:
>> close Transfer-Encoding: chunked Content-Type: text/html;
>> charset=UTF-8
>>
>> 3 301 0
>>
>>
>> I would like to return HTTP/1.1 301.. instead of HTTP/1.1 200 OK.
>>
>> For some reason anything that the method return the publisher handler
>> puts it in the body of the request I cannot return a different return
>> code other than the default apache.OK
>>
>> Could some one please help me with this.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From list at joreybump.com  Tue Nov 30 14:14:47 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov 30 14:14:51 2004
Subject: [mod_python] mod_python and --DEAPI  compilation
In-Reply-To: <000901c4d701$72bd3c40$747882c3@jonsof>
References: <000a01c4d6ed$171a9db0$747882c3@jonsof>	<41ACAA48.7050802@joreybump.com>
	<000901c4d701$72bd3c40$747882c3@jonsof>
Message-ID: <41ACC6A7.1020106@joreybump.com>

John wrote:

> I read somewhere that tis problems is related to a SSL bug on apache
> 
> Can this be true as far as i have mod_ssl installed on apache and i am
> deeply concerned with my system's security.

Well, technically, it's not a problem, it's just a warning:

>>>[Tue Nov 30 16:49:35 2004] [warn] Loaded DSO libexec/mod_python.so uses
>>>plain Apache 1.3 API, this module might crash under EAPI! (please
>>>recompile it with -DEAPI)

I tried setting -DEAPI, but it had no effect. I haven't experienced any 
trouble, however.
From list at joreybump.com  Tue Nov 30 14:25:44 2004
From: list at joreybump.com (Jorey Bump)
Date: Tue Nov 30 14:25:48 2004
Subject: [mod_python] Returning a Apache return code
In-Reply-To: <41ACB055.8060004@dd.revealed.net>
References: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>	<41ACAA00.8080401@joreybump.com>
	<41ACB055.8060004@dd.revealed.net>
Message-ID: <41ACC938.2050704@joreybump.com>

Nick wrote:

> Note that you should almost always use 307 (moved temporarily) for a web 
> application, because 301 tells the client to always go to the new 
> location when the URL is requested without even asking for the original 
> page.  I.e., the page has moved permanently, don't look here anymore.

It depends on your needs. I'm using HTTP_SEE_OTHER in my application to 
sometimes redirect POST requests to an authentication page if the login 
has expired. This tells the agent to request the new resource with GET, 
preventing it from POSTing form data to the authentication page, which 
is not under my control (or even in my site).

> Jorey Bump wrote:
> 
>> Golawala, Moiz M (GE Infrastructure) wrote:
>>
>>> I have am newbie and I seems to be having a problem return a
>>> different apache return code. In my httpd.conf file I am using
>>> PythonHandler mod_python.publisher.
>>>
>>> In my index.py file.
>>>
>>> index(req): req.header_out['Location'] = "http://someurl:8080/ 
>>
>>
>>  > return apache.HTTP_PERMANENTLY_MOVED
>>
>> Try this:
>>
>> from mod_python import apache
>>
>> index(req)
>>     status = apache.HTTP_MOVED_PERMANENTLY
>>     req.headers_out['Location'] = url
>>     req.status = status
>>     raise apache.SERVER_RETURN, status
>>
>> More info:
>>
>>  http://www.modpython.org/live/current/doc-html/pyapi-handler.html

From java_dev at nilling.nl  Tue Nov 30 14:31:36 2004
From: java_dev at nilling.nl (java_dev)
Date: Tue Nov 30 14:33:47 2004
Subject: [mod_python] ModPython, Psycopg postgresql gives segmentation
	fault
In-Reply-To: <20041130110609.GA6325@barbucha.martin.net>
References: <20041129215650.5fa92ff8.java_dev@nilling.nl>
	<redirect-14872347@vse.cz>
	<20041130110609.GA6325@barbucha.martin.net>
Message-ID: <20041130203136.065f0d7e.java_dev@nilling.nl>

Today I try to reply on the answers I got, but I guess the ended up everywhere except on this list.

I read everything and thanks for the help. There are two action I have to take. That's check the python version and find the correct way to connect to the database since in any method I have I make a connection to the database. I know very bad, much faster then in Java, so no real reason to get upset right now.

The Database is working fine, but session stuff is still a problem. So I look tonight into the anyDBM pointer I recieved Rune.

I keep you posted,

Johan


On Tue, 30 Nov 2004 12:06:09 +0100
Martin Slouf <mar@centrum.cz> wrote:

> hi,
> 
> fisrt of all, sorry, not sure this is the right thread, by mistake i pressed
> Ctrl-D in mutt more than once :) and the net archives are somewhat unreachable.
> 
> i guess johan was sending me an email where he complained about segfaults when
> he tried to store db connection object in session.
> 
> im afraid mod_python is using cpickle, not pickle, to store session objects and
> though much faster, the db connection object cannot be saved in session --
> anyway, i just simulated a sample page trying to store the db connection in
> session and the errors i received where not segfaults, but some cpikle
> exception.
> 
> try to store the db connection in global variable.
> 
> m.
> 
> 
> On Tue, Nov 30, 2004 at 11:15:09AM +0100, Rune Hansen wrote:
> > 
> > On 29. nov 2004, at 21.56, java_dev wrote:
> > 
> > >
> > >If someone can give me a pointer how to prevent the Session from 
> > >creating segmentation Faults please let me know. And if there is 
> > >another way for preventing the authenicationhandler from being called 
> > >all the time please let me know
> > >
> > >Thanks
> > >
> > >Johan
> > >
> > As for the session segfault. Just remembered  had this problem on 
> > Fedora Core1 with python 2.3.3. On this machine a python interpreter in 
> > mod_python could not make use of the anydbm(dbhash) module. If the db 
> > type was given to : Session.DbmSession(req, dbm=gdmb) the segfault 
> > disappeared, but then register_cleanup would fail. I "solved" it by 
> > compiling python 2.3.4 on that machine.
> > 
> > regards
> > /rune
> > 
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


-- 
Nilling Software Design
Postbus 43
2280 AA  Rijswijk ZH
w: http://www.nilling.nl
From nick at dd.revealed.net  Tue Nov 30 14:48:18 2004
From: nick at dd.revealed.net (Nick)
Date: Tue Nov 30 14:48:26 2004
Subject: [mod_python] Returning a Apache return code
In-Reply-To: <41ACC938.2050704@joreybump.com>
References: <CE90A4CF2E5E9C4890AE5D9D8A5EFAE301460ED6@CINMLVEM10.e2k.ad.ge.com>	<41ACAA00.8080401@joreybump.com>	<41ACB055.8060004@dd.revealed.net>
	<41ACC938.2050704@joreybump.com>
Message-ID: <41ACCE82.2010801@dd.revealed.net>

Yeah, that's a good case in point for the "almost always" :)  My main point 
is that often I see people using a 301 where a 307 is probably more appropriate.

Nick

Jorey Bump wrote:
> Nick wrote:
> 
>> Note that you should almost always use 307 (moved temporarily) for a 
>> web application, because 301 tells the client to always go to the new 
>> location when the URL is requested without even asking for the 
>> original page.  I.e., the page has moved permanently, don't look here 
>> anymore.
> 
> 
> It depends on your needs. I'm using HTTP_SEE_OTHER in my application to 
> sometimes redirect POST requests to an authentication page if the login 
> has expired. This tells the agent to request the new resource with GET, 
> preventing it from POSTing form data to the authentication page, which 
> is not under my control (or even in my site).
> 
>> Jorey Bump wrote:
>>
>>> Golawala, Moiz M (GE Infrastructure) wrote:
>>>
>>>> I have am newbie and I seems to be having a problem return a
>>>> different apache return code. In my httpd.conf file I am using
>>>> PythonHandler mod_python.publisher.
>>>>
>>>> In my index.py file.
>>>>
>>>> index(req): req.header_out['Location'] = "http://someurl:8080/ 
>>>
>>>
>>>
>>>  > return apache.HTTP_PERMANENTLY_MOVED
>>>
>>> Try this:
>>>
>>> from mod_python import apache
>>>
>>> index(req)
>>>     status = apache.HTTP_MOVED_PERMANENTLY
>>>     req.headers_out['Location'] = url
>>>     req.status = status
>>>     raise apache.SERVER_RETURN, status
>>>
>>> More info:
>>>
>>>  http://www.modpython.org/live/current/doc-html/pyapi-handler.html
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From huzaifa at hostway.com  Tue Nov 30 16:48:49 2004
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Tue Nov 30 16:49:00 2004
Subject: [mod_python] module caching problem
In-Reply-To: <20041124004906.GA27362@legolas.on.net.mk>
Message-ID: <20041130214857.BAD74B705@fiona.siteprotect.com>

Yes I am using linux on a debian OS.  How can I configure apache to not run
with mpm_prefork?  Pretty much I want to use Shared Memory with mod_python
so that for simultaneous requests it uses any modules that are already
loaded in memory rather than instantiating new processes.

Any ideas?

Hozi  

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Damjan
Sent: Tuesday, November 23, 2004 6:49 PM
To: mod_python@modpython.org
Subject: Re: [mod_python] module caching problem

> I am running into a problem with mod_python in that, I am importing a
module
> in the handler which creates a singleton in memory.  I am using the module
> to hold cache information for any other modules that import the same
module.
> 
> I started testing the cache mechanism when I noticed that the module was
> being imported multiple times and not just once after the first request
> after apache had started.  To test this, I put a few lines of code in the
> module to write to a file the time it was last imported.  I noticed that
> after restarting apache, the first time it writes to the file.  If I hit
> refresh on my page immediately, multiple times, it doesn't write.  If I
wait
> like 10 seconds or more and then hit refresh again, it reimports that
module
> that should have been cached.
> 
> Also, If I make a request for a page from two different clients, it
> reimports the module from each client.  Am I mistaken in thinking that any
> module imported in the handler then is cached in mod_python's module cache
> and subsequent imports of that module then are simply served up from the
> cache.  Under what conditions then would the same module get reimported if
> no modifications were made to that module?

I guess your are runnig Apache with mpm_prefork? 
In that case there's a completely different python interpreter for each
Apache process, so your caching module is loaded in each of them.

Your testing showed how apache processes get to serve requests, if it gets
two simultaneus requests two apache processes will be active, each
serving one of the request. But if you only generate one request after
another, its most likely that the same process will serve  both
requests... of course this depends on OS implementation... I think you
are running on Linux, no?

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python



From fumanchu at amor.org  Tue Nov 30 17:51:33 2004
From: fumanchu at amor.org (Robert Brewer)
Date: Tue Nov 30 17:53:27 2004
Subject: [mod_python] module caching problem
Message-ID: <3A81C87DC164034AA4E2DDFE11D258E32452E4@exchange.hqamor.amorhq.net>

Huzaifa Tapal wrote:
> Yes I am using linux on a debian OS.  How can I configure 
> apache to not run
> with mpm_prefork?  Pretty much I want to use Shared Memory 
> with mod_python
> so that for simultaneous requests it uses any modules that are already
> loaded in memory rather than instantiating new processes.
> 
> Any ideas?

Two ideas/options:

1. Recompile Apache. http://httpd.apache.org/docs-2.0/mpm.html
2. Put your app in its own process that runs forever, and use IPC between your mod_python app and your persistent process.

Robert Brewer
MIS
Amor Ministries
fumanchu@amor.org

> -----Original Message-----
> From: mod_python-bounces@modpython.org
> [mailto:mod_python-bounces@modpython.org] On Behalf Of Damjan
> Sent: Tuesday, November 23, 2004 6:49 PM
> To: mod_python@modpython.org
> Subject: Re: [mod_python] module caching problem
> 
> > I am running into a problem with mod_python in that, I am 
> importing a
> module
> > in the handler which creates a singleton in memory.  I am 
> using the module
> > to hold cache information for any other modules that import the same
> module.
> > 
> > I started testing the cache mechanism when I noticed that 
> the module was
> > being imported multiple times and not just once after the 
> first request
> > after apache had started.  To test this, I put a few lines 
> of code in the
> > module to write to a file the time it was last imported.  I 
> noticed that
> > after restarting apache, the first time it writes to the 
> file.  If I hit
> > refresh on my page immediately, multiple times, it doesn't 
> write.  If I
> wait
> > like 10 seconds or more and then hit refresh again, it 
> reimports that
> module
> > that should have been cached.
> > 
> > Also, If I make a request for a page from two different clients, it
> > reimports the module from each client.  Am I mistaken in 
> thinking that any
> > module imported in the handler then is cached in 
> mod_python's module cache
> > and subsequent imports of that module then are simply 
> served up from the
> > cache.  Under what conditions then would the same module 
> get reimported if
> > no modifications were made to that module?
> 
> I guess your are runnig Apache with mpm_prefork? 
> In that case there's a completely different python 
> interpreter for each
> Apache process, so your caching module is loaded in each of them.
> 
> Your testing showed how apache processes get to serve 
> requests, if it gets
> two simultaneus requests two apache processes will be active, each
> serving one of the request. But if you only generate one request after
> another, its most likely that the same process will serve  both
> requests... of course this depends on OS implementation... I think you
> are running on Linux, no?
> 
> -- 
> damjan | ??????
> This is my jabber ID --> damjan@bagra.net.mk <-- not my mail 
> address!!!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From ccurvey at earthlink.net  Tue Nov 30 18:03:11 2004
From: ccurvey at earthlink.net (Chris Curvey)
Date: Tue Nov 30 18:01:21 2004
Subject: [mod_python] module caching problem
In-Reply-To: <20041130214857.BAD74B705@fiona.siteprotect.com>
References: <20041130214857.BAD74B705@fiona.siteprotect.com>
Message-ID: <41ACFC2F.60006@earthlink.net>

1) build your apache server with mpm_worker (./configure 
-with-mpm=worker)  (this only works with Apache 2.x)

2) in httpd.conf  (all values of "150" in this example should be set to 
the max number of concurrent requests)

ThreadLimit 150
ServerLimit 1
StartServers 1
MaxClients 150
MinSpareThreads 1
MaxSpareThreads 150
ThreadsPerChild 150
MaxRequestsPerChild 0

I have not tested this a whole bunch, but it should work, according to 
http://httpd.apache.org/docs-2.0/mod/worker.html

I'm also not sure of the knock-on effects on performance of doing this.  
YMMV.  If anyone knows of a good reason *not* to do this, please speak up.

-Chris

P.S.  Even in prefork mode, if an apache process needs a module that has 
already been loaded into memory *by that process*, it will be re-used 
and not reloaded.

Huzaifa Tapal wrote:

>Yes I am using linux on a debian OS.  How can I configure apache to not run
>with mpm_prefork?  Pretty much I want to use Shared Memory with mod_python
>so that for simultaneous requests it uses any modules that are already
>loaded in memory rather than instantiating new processes.
>
>Any ideas?
>
>Hozi  
>
>-----Original Message-----
>From: mod_python-bounces@modpython.org
>[mailto:mod_python-bounces@modpython.org] On Behalf Of Damjan
>Sent: Tuesday, November 23, 2004 6:49 PM
>To: mod_python@modpython.org
>Subject: Re: [mod_python] module caching problem
>
>  
>
>>I am running into a problem with mod_python in that, I am importing a
>>    
>>
>module
>  
>
>>in the handler which creates a singleton in memory.  I am using the module
>>to hold cache information for any other modules that import the same
>>    
>>
>module.
>  
>
>>I started testing the cache mechanism when I noticed that the module was
>>being imported multiple times and not just once after the first request
>>after apache had started.  To test this, I put a few lines of code in the
>>module to write to a file the time it was last imported.  I noticed that
>>after restarting apache, the first time it writes to the file.  If I hit
>>refresh on my page immediately, multiple times, it doesn't write.  If I
>>    
>>
>wait
>  
>
>>like 10 seconds or more and then hit refresh again, it reimports that
>>    
>>
>module
>  
>
>>that should have been cached.
>>
>>Also, If I make a request for a page from two different clients, it
>>reimports the module from each client.  Am I mistaken in thinking that any
>>module imported in the handler then is cached in mod_python's module cache
>>and subsequent imports of that module then are simply served up from the
>>cache.  Under what conditions then would the same module get reimported if
>>no modifications were made to that module?
>>    
>>
>
>I guess your are runnig Apache with mpm_prefork? 
>In that case there's a completely different python interpreter for each
>Apache process, so your caching module is loaded in each of them.
>
>Your testing showed how apache processes get to serve requests, if it gets
>two simultaneus requests two apache processes will be active, each
>serving one of the request. But if you only generate one request after
>another, its most likely that the same process will serve  both
>requests... of course this depends on OS implementation... I think you
>are running on Linux, no?
>
>  
>

