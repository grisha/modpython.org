From grahamd at dscpl.com.au  Sun May  1 01:21:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun May  1 01:21:18 2005
Subject: [mod_python] any way to get the current handler's directory?
In-Reply-To: <d51gfb$j4$1@sea.gmane.org>
References: <d51gfb$j4$1@sea.gmane.org>
Message-ID: <35cf5d76f8e9399243056a54e7850410@dscpl.com.au>


On 01/05/2005, at 1:01 PM, vegetax wrote:

> i need that info to parse the url from a handler.
>
> sys.path[0] works if there is only one "myhandler" per server
>
> Also works this way, but i dont like it:
>
> <Directory "myweb/dir">
> ??SetHandler?mod_python
> ??PythonHandler?myhandler
> ??PythonOption?dirpath?"myweb/dir"
> <Directory/>

Depends on which version of mod_python you are using. If you need to be
portable to older versions of mod_python, use:

       if hasattr(req,"hlist"):
         # In mod_python 3.X have the req.hlist member.
         handler_root = req.hlist.directory
       elif hasattr(req,"get_dirs"):
         # In mod_python 2.X have the req.get_dirs() method.
         handler_root = req.get_dirs()["PythonHandler"]

Graham

From vegeta.z at gmail.com  Sun May  1 01:40:30 2005
From: vegeta.z at gmail.com (vegetax)
Date: Sun May  1 01:40:44 2005
Subject: [mod_python] Re: any way to get the current handler's directory?
References: <d51gfb$j4$1@sea.gmane.org>
	<35cf5d76f8e9399243056a54e7850410@dscpl.com.au>
Message-ID: <d51pp2$jgq$1@sea.gmane.org>

Graham Dumpleton wrote:

> 
> On 01/05/2005, at 1:01 PM, vegetax wrote:
> 
>> i need that info to parse the url from a handler.
>>
>> sys.path[0] works if there is only one "myhandler" per server
>>
>> Also works this way, but i dont like it:
>>
>> <Directory "myweb/dir">
>> SetHandler?mod_python
>> PythonHandler?myhandler
>> PythonOption?dirpath?"myweb/dir"
>> <Directory/>
> 
> Depends on which version of mod_python you are using. If you need to be
> portable to older versions of mod_python, use:
> 
>        if hasattr(req,"hlist"):
>          # In mod_python 3.X have the req.hlist member.
>          handler_root = req.hlist.directory
>        elif hasattr(req,"get_dirs"):
>          # In mod_python 2.X have the req.get_dirs() method.
>          handler_root = req.get_dirs()["PythonHandler"]
> 
> Graham


Thanks graham, forgot to mention that i also need the uri part of the
current handler,ie:

<Directory "/var/www/mywebapp/handler_root">
  SetHandler?mod_python
  PythonHandler?myhandler
  PythonOption?dirpath?"/mywebapp/handler_root"
<Directory/>

Any way to get this information in one step? without having to   
req.filename[len(req.hlist.directory): ]


From grahamd at dscpl.com.au  Sun May  1 02:06:01 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun May  1 02:06:10 2005
Subject: [mod_python] Re: any way to get the current handler's directory?
In-Reply-To: <d51pp2$jgq$1@sea.gmane.org>
References: <d51gfb$j4$1@sea.gmane.org>
	<35cf5d76f8e9399243056a54e7850410@dscpl.com.au>
	<d51pp2$jgq$1@sea.gmane.org>
Message-ID: <3cc5c2d32e4485db8cc5ffb9df9536a9@dscpl.com.au>


On 01/05/2005, at 3:40 PM, vegetax wrote:
>> Depends on which version of mod_python you are using. If you need to 
>> be
>> portable to older versions of mod_python, use:
>>
>>        if hasattr(req,"hlist"):
>>          # In mod_python 3.X have the req.hlist member.
>>          handler_root = req.hlist.directory
>>        elif hasattr(req,"get_dirs"):
>>          # In mod_python 2.X have the req.get_dirs() method.
>>          handler_root = req.get_dirs()["PythonHandler"]
>>
>> Graham
>
>
> Thanks graham, forgot to mention that i also need the uri part of the
> current handler,ie:
>
> <Directory "/var/www/mywebapp/handler_root">
>   SetHandler?mod_python
>   PythonHandler?myhandler
>   PythonOption?dirpath?"/mywebapp/handler_root"
> <Directory/>
>
> Any way to get this information in one step? without having to
> req.filename[len(req.hlist.directory): ]

Use a package which has worked it out for you and already provides a
dispatch mechanism. ;-)

That would at least save you having to work out how to do it yourself
which would I guess eliminate the step altogether. Have you ever looked
at Vampire (http://www.dscpl.com.au/projects/vampire).

Anyway, I would recommend not trying to cut corners, have seen it
many times on the list where people write their own dispatch mechanisms
not knowing that it will not work in all situations. Ie., would break
if done in mod_userdir directory, would break in a subdirectory of
handler root etc etc.

In Vampire where this sort of determination of additional path_info
is calculated, I use:

       handler_root = None

       if hasattr(req,"hlist"):
         # In mod_python 3.X have the req.hlist member.
         handler_root = req.hlist.directory
       elif hasattr(req,"get_dirs"):
         # In mod_python 2.X have the req.get_dirs() method.
         handler_root = req.get_dirs()["PythonHandler"]

       if handler_root is None:
         raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR

       length = len(req.filename) - len(handler_root)

       path_info = "/"

       if length != 0:
         path_info += req.filename[-length:]

What is it that you are actually trying to do? See if Vampire might
already provide what you need and save yourself some work. Am happy
to explain whether Vampire might help in what you are doing.

Graham

From vegeta.z at gmail.com  Sun May  1 02:29:02 2005
From: vegeta.z at gmail.com (vegetax)
Date: Sun May  1 02:29:10 2005
Subject: [mod_python] Re: Re: any way to get the current handler's directory?
References: <d51gfb$j4$1@sea.gmane.org>
	<35cf5d76f8e9399243056a54e7850410@dscpl.com.au>
	<d51pp2$jgq$1@sea.gmane.org>
	<3cc5c2d32e4485db8cc5ffb9df9536a9@dscpl.com.au>
Message-ID: <d51sk1$o78$1@sea.gmane.org>

Graham Dumpleton wrote:

> 
> On 01/05/2005, at 3:40 PM, vegetax wrote:
>>> Depends on which version of mod_python you are using. If you need to
>>> be
>>> portable to older versions of mod_python, use:
>>>
>>>        if hasattr(req,"hlist"):
>>>          # In mod_python 3.X have the req.hlist member.
>>>          handler_root = req.hlist.directory
>>>        elif hasattr(req,"get_dirs"):
>>>          # In mod_python 2.X have the req.get_dirs() method.
>>>          handler_root = req.get_dirs()["PythonHandler"]
>>>
>>> Graham
>>
>>
>> Thanks graham, forgot to mention that i also need the uri part of the
>> current handler,ie:
>>
>> <Directory "/var/www/mywebapp/handler_root">
>>   SetHandler?mod_python
>>   PythonHandler?myhandler
>>   PythonOption?dirpath?"/mywebapp/handler_root"
>> <Directory/>
>>
>> Any way to get this information in one step? without having to
>> req.filename[len(req.hlist.directory): ]
> 
> Use a package which has worked it out for you and already provides a
> dispatch mechanism. ;-)
> 
> That would at least save you having to work out how to do it yourself
> which would I guess eliminate the step altogether. Have you ever looked
> at Vampire (http://www.dscpl.com.au/projects/vampire).
> 
> Anyway, I would recommend not trying to cut corners, have seen it
> many times on the list where people write their own dispatch mechanisms
> not knowing that it will not work in all situations. Ie., would break
> if done in mod_userdir directory, would break in a subdirectory of
> handler root etc etc.
> 
> In Vampire where this sort of determination of additional path_info
> is calculated, I use:
> 
>        handler_root = None
> 
>        if hasattr(req,"hlist"):
>          # In mod_python 3.X have the req.hlist member.
>          handler_root = req.hlist.directory
>        elif hasattr(req,"get_dirs"):
>          # In mod_python 2.X have the req.get_dirs() method.
>          handler_root = req.get_dirs()["PythonHandler"]
> 
>        if handler_root is None:
>          raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR
> 
>        length = len(req.filename) - len(handler_root)
> 
>        path_info = "/"
> 
>        if length != 0:
>          path_info += req.filename[-length:]
> 
> What is it that you are actually trying to do? See if Vampire might
> already provide what you need and save yourself some work. Am happy
> to explain whether Vampire might help in what you are doing.
> 
> Graham

Basically is a version of publisher handler,targeted to a specific
webframework,the publisher handler is sloww cause it tries to be
everything,too generic, my handler will just serve .py scripts and thats
all, is not meant to serve several resources,or work with user_dir or have
subdirectories, since subdirectories will be mapped to python packages by
the handler.
I am obsessed about making it fast, so thats why i wanted to get that info
in one step instead of two.


From grahamd at dscpl.com.au  Sun May  1 04:07:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun May  1 04:08:53 2005
Subject: [mod_python] Re: Re: any way to get the current handler's
	directory?
In-Reply-To: <d51sk1$o78$1@sea.gmane.org>
References: <d51gfb$j4$1@sea.gmane.org>
	<35cf5d76f8e9399243056a54e7850410@dscpl.com.au>
	<d51pp2$jgq$1@sea.gmane.org>
	<3cc5c2d32e4485db8cc5ffb9df9536a9@dscpl.com.au>
	<d51sk1$o78$1@sea.gmane.org>
Message-ID: <ed1e23359f6c3f59102b10b341516e01@dscpl.com.au>


On 01/05/2005, at 4:29 PM, vegetax wrote:

> Basically is a version of publisher handler,targeted to a specific
> webframework,the publisher handler is sloww cause it tries to be
> everything,too generic, my handler will just serve .py scripts and 
> thats
> all, is not meant to serve several resources,or work with user_dir or 
> have
> subdirectories, since subdirectories will be mapped to python packages 
> by
> the handler.
> I am obsessed about making it fast, so thats why i wanted to get that 
> info
> in one step instead of two.

Do you actually have any hard data to support your claim that publisher
is too slow?

Most web applications are slow because of stuff like database access, 
need
to support sessions and session databases, choice of mechanism to 
generate
HTML etc. Ie., the delays aren't in the switching mechanism but what the
handlers actually do. Making trivial changes to make something run as 
one
step isn't necessarily going to help. Overall network lag is probably 
still
going to swamp any improvement you may get. If the issue is that the 
server
is too loaded, then you need to look how Apache is configured, whether 
an
alternate MPM would be better and whether you should employ load 
balancing
techniques.

Sorry, but I am always very skeptical when the first thing people say is
that something has to run as fast as possible or that something is just 
too
slow. ;-)

Graham

From vegeta.z at gmail.com  Sun May  1 08:23:23 2005
From: vegeta.z at gmail.com (vegetax)
Date: Sun May  1 08:23:55 2005
Subject: [mod_python] Re: Re: Re: any way to get the current handler's
	directory?
References: <d51gfb$j4$1@sea.gmane.org>
	<35cf5d76f8e9399243056a54e7850410@dscpl.com.au>
	<d51pp2$jgq$1@sea.gmane.org>
	<3cc5c2d32e4485db8cc5ffb9df9536a9@dscpl.com.au>
	<d51sk1$o78$1@sea.gmane.org>
	<ed1e23359f6c3f59102b10b341516e01@dscpl.com.au>
Message-ID: <d52hce$4gp$1@sea.gmane.org>

Graham Dumpleton wrote:

> 
> On 01/05/2005, at 4:29 PM, vegetax wrote:
> 
>> Basically is a version of publisher handler,targeted to a specific
>> webframework,the publisher handler is sloww cause it tries to be
>> everything,too generic, my handler will just serve .py scripts and
>> thats
>> all, is not meant to serve several resources,or work with user_dir or
>> have
>> subdirectories, since subdirectories will be mapped to python packages
>> by
>> the handler.
>> I am obsessed about making it fast, so thats why i wanted to get that
>> info
>> in one step instead of two.
> 
> Do you actually have any hard data to support your claim that publisher
> is too slow?

Dont have data, i just need to make my own publisher that integrates with my
framework, so i saw the code and it has a lot of processing for a
connectivity handler,maybe what i meant is that it is slow compared to my
publisher =),since mine is very specialized.
When mine is finished i'll let you know about the benchmarks.
I agree that premature optimizations are root of all evil.



From graeme.matthew at contrado.com.au  Mon May  2 06:25:14 2005
From: graeme.matthew at contrado.com.au (Graeme Matthew)
Date: Mon May  2 06:25:24 2005
Subject: [mod_python] cannot get mod-python to work !
Message-ID: <4276000A.8030800@contrado.com.au>

Hi all, I used mod-python with apache 1.3 about a year ago and it took 
minutes to setup. I am now trying to set it up for Apache 2.0, and what 
a time consuming task this has become. It is taking a lot to get used to 
Apache2's layout instead of a simple HTTP.conf file so who knows where 
other directives are.

In summary I have done the following:

I have created a folder called /contrado and created a fc.py script 
which contains:

from mod_python import apache

def handler(req):
    req..content_type = "text/html"
    req.send_http_header()
    req.write("Welcome to modpython!")
    return apache.OK

I have placed the following into my http.conf file

<Directory /contrado>
AddHandler mod_python .py
PythonHandler fc
PythonDebug On
</Directory>

The error log keeps reporting

[Sun May 01 22:12:24 2005] [notice] mod_python: Creating 32 session 
mutexes based on 6 max processes and 25 max threads.
[Sun May 01 22:12:24 2005] [notice] Apache/2.0.53 (Debian GNU/Linux) 
mod_python/3.1.3 Python/2.3.5 configured -- resuming normal operations
[Sun May 01 22:12:30 2005] [error] [client 10.1.1.2] File does not 
exist: /var/www/contrado
[Sun May 01 22:12:35 2005] [error] [client 10.1.1.2] File does not 
exist: /var/www/contrado
[Sun May 01 22:12:39 2005] [error] [client 10.1.1.2] File does not 
exist: /var/www/contrado

Im lost here any help would be much appreciated ...


Regards

Graeme








-------+(Jed 0.99.16) Emacs: httpd.conf    (SH)  1/12   
10:14pm-----------------
loading /usr/share/jed/lib/modeinfo.slc



-- 
Graeme Matthew
Director
Contrado Solutions PTY LTD
email: graeme.matthew@contrado.com.au
mobile: 0400-872-879

From grahamd at dscpl.com.au  Mon May  2 06:41:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May  2 06:42:09 2005
Subject: [mod_python] cannot get mod-python to work !
In-Reply-To: <4276000A.8030800@contrado.com.au>
References: <4276000A.8030800@contrado.com.au>
Message-ID: <047b5ad71e3d3aebaca5a367eb0662c6@dscpl.com.au>

What is the URL you are using for the request?

On 02/05/2005, at 8:25 PM, Graeme Matthew wrote:

> Hi all, I used mod-python with apache 1.3 about a year ago and it took 
> minutes to setup. I am now trying to set it up for Apache 2.0, and 
> what a time consuming task this has become. It is taking a lot to get 
> used to Apache2's layout instead of a simple HTTP.conf file so who 
> knows where other directives are.
>
> In summary I have done the following:
>
> I have created a folder called /contrado and created a fc.py script 
> which contains:
>
> from mod_python import apache
>
> def handler(req):
>    req..content_type = "text/html"
>    req.send_http_header()
>    req.write("Welcome to modpython!")
>    return apache.OK
>
> I have placed the following into my http.conf file
>
> <Directory /contrado>
> AddHandler mod_python .py
> PythonHandler fc
> PythonDebug On
> </Directory>
>
> The error log keeps reporting
>
> [Sun May 01 22:12:24 2005] [notice] mod_python: Creating 32 session 
> mutexes based on 6 max processes and 25 max threads.
> [Sun May 01 22:12:24 2005] [notice] Apache/2.0.53 (Debian GNU/Linux) 
> mod_python/3.1.3 Python/2.3.5 configured -- resuming normal operations
> [Sun May 01 22:12:30 2005] [error] [client 10.1.1.2] File does not 
> exist: /var/www/contrado
> [Sun May 01 22:12:35 2005] [error] [client 10.1.1.2] File does not 
> exist: /var/www/contrado
> [Sun May 01 22:12:39 2005] [error] [client 10.1.1.2] File does not 
> exist: /var/www/contrado
>
> Im lost here any help would be much appreciated ...

From grahamd at dscpl.com.au  Mon May  2 06:55:49 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May  2 06:55:55 2005
Subject: [mod_python] cannot get mod-python to work !
In-Reply-To: <427604DB.20206@contrado.com.au>
References: <4276000A.8030800@contrado.com.au>
	<047b5ad71e3d3aebaca5a367eb0662c6@dscpl.com.au>
	<427604DB.20206@contrado.com.au>
Message-ID: <67faaf3b8cef3da53f54a57615ea8b95@dscpl.com.au>

The problem probably is that you have no directive to say that a URL of 
/contrado
maps to the physical directory of /contrado. If you don't have one, it 
will look
for the directory under the document root of /var/www and thus why it 
is expecting
to find /var/www/contrado.

In addition to the <Directory> directive, specify:

   Alias /contrado /contrado

Graham

On 02/05/2005, at 8:45 PM, Graeme Matthew wrote:

> Hi Graham
>
> Im using
>
> http://10.1.1.3/contrado/fc.py
>
> and
>
> http://10.1.1.3/fc.py
>
> It looks like apache keeps on looking in /var/www
>
> I just dont get it used to be so simple but im sure it is something 
> ive done :-)
>
>
> Graham Dumpleton wrote:
>
>> What is the URL you are using for the request?
>>
>> On 02/05/2005, at 8:25 PM, Graeme Matthew wrote:
>>
>>> Hi all, I used mod-python with apache 1.3 about a year ago and it 
>>> took minutes to setup. I am now trying to set it up for Apache 2.0, 
>>> and what a time consuming task this has become. It is taking a lot 
>>> to get used to Apache2's layout instead of a simple HTTP.conf file 
>>> so who knows where other directives are.
>>>
>>> In summary I have done the following:
>>>
>>> I have created a folder called /contrado and created a fc.py script 
>>> which contains:
>>>
>>> from mod_python import apache
>>>
>>> def handler(req):
>>>    req..content_type = "text/html"
>>>    req.send_http_header()
>>>    req.write("Welcome to modpython!")
>>>    return apache.OK
>>>
>>> I have placed the following into my http.conf file
>>>
>>> <Directory /contrado>
>>> AddHandler mod_python .py
>>> PythonHandler fc
>>> PythonDebug On
>>> </Directory>
>>>
>>> The error log keeps reporting
>>>
>>> [Sun May 01 22:12:24 2005] [notice] mod_python: Creating 32 session 
>>> mutexes based on 6 max processes and 25 max threads.
>>> [Sun May 01 22:12:24 2005] [notice] Apache/2.0.53 (Debian GNU/Linux) 
>>> mod_python/3.1.3 Python/2.3.5 configured -- resuming normal 
>>> operations
>>> [Sun May 01 22:12:30 2005] [error] [client 10.1.1.2] File does not 
>>> exist: /var/www/contrado
>>> [Sun May 01 22:12:35 2005] [error] [client 10.1.1.2] File does not 
>>> exist: /var/www/contrado
>>> [Sun May 01 22:12:39 2005] [error] [client 10.1.1.2] File does not 
>>> exist: /var/www/contrado
>>>
>>> Im lost here any help would be much appreciated ...
>>
>>
>>
>
>
> -- 
> Graeme Matthew
> Director
> Contrado Solutions PTY LTD
> email: graeme.matthew@contrado.com.au
> mobile: 0400-872-879

From jarrod.roberson at gmail.com  Mon May  2 14:34:54 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon May  2 14:34:56 2005
Subject: [mod_python] How to initialize a variable using PythonImport and
	access it from a Handler?
Message-ID: <2389d47305050211349baed3e@mail.gmail.com>

I am trying to get access to a list that is being updated by a Twisted Reactor.
I do a PythonIport myapp main_interpreter in httpd.conf
I have a handler that I want to print out the contents of list
returned from a function on the global object, but I get this error

Any ideas . . .

Mod_python error: "PythonHandler viewZeroConf"

Traceback (most recent call last):

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py",
line 287, in HandlerDispatch
    log=debug)

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py",
line 457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/www/viewZeroConf.py", line 2, in ?
    import myapp

  File "/www/weblife/__init__.py", line 7, in ?
    from twisted.internet import reactor

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/reactor.py",
line 11, in ?
    from twisted.internet import selectreactor

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/selectreactor.py",
line 22, in ?
    from twisted.internet import posixbase

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/posixbase.py",
line 25, in ?
    from twisted.internet import tcp, udp

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/tcp.py",
line 65, in ?
    from twisted.internet import protocol, defer, base, address

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/twisted/internet/protocol.py",
line 25, in ?
    class Factory:

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/zope/interface/advice.py",
line 132, in advise
    return callback(newClass)

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/zope/interface/declarations.py",
line 550, in _implements_advice
    classImplements(cls, *interfaces)

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/zope/interface/declarations.py",
line 526, in classImplements
    spec = implementedBy(cls)

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/zope/interface/declarations.py",
line 364, in implementedByFallback
    spec = cls.__dict__.get('__implemented__')

RuntimeError: class.__dict__ not accessible in restricted mode
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050502/9a03a379/attachment.html
From grahamd at dscpl.com.au  Mon May  2 16:44:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May  2 16:44:25 2005
Subject: [mod_python] How to initialize a variable using PythonImport and
	access it from a Handler?
In-Reply-To: <2389d47305050211349baed3e@mail.gmail.com>
References: <2389d47305050211349baed3e@mail.gmail.com>
Message-ID: <0d6705deda58490b4c6c464ed4e13e0c@dscpl.com.au>

You have either hit the weird restricted mode problem that some people  
are
seeing with Python 2.3.5 or later versions of Python, or perhaps it is
simply because you have initialised the variable in the  
"main_interpreter"
yet the request is being handled in a different interpreter. Have you  
named
explicitly the interpreter to be used as "main_interpreter" for part of  
URL
namespace requests are handled in? Ie.,

   PythonInterpreter main_interpreter

By default interpreter will have name something like your hostname and  
thus
would be a distinct interpreter and thus distinct global data space.  
Using
just Python code, you cant access between interpreters.

Graham

On 03/05/2005, at 4:34 AM, jarrod roberson wrote:

> I am trying to get access to a list that is being updated by a Twisted  
> Reactor.
> I do a PythonIport myapp main_interpreter in httpd.conf
> I have a handler that I want to print out the contents of list  
> returned from a function on the global object, but I get this error
>
>
> Any ideas . . .
>
> Mod_python error: "PythonHandler viewZeroConf"
>
> Traceback (most recent call last):
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/apache.py", line 287, in  
> HandlerDispatch
>
>     log=debug)
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/mod_python/apache.py", line 457, in  
> import_module
>     module = imp.load_module(mname, f, p, d)
>
>
>   File "/www/viewZeroConf.py", line 2, in ?
>     import myapp
>
>   File "/www/weblife/__init__.py", line 7, in ?
>     from twisted.internet import reactor
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/internet/reactor.py", line 11, in ?
>
>     from twisted.internet import selectreactor
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/internet/selectreactor.py", line 22,  
> in ?
>     from
> twisted.internet import posixbase
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/internet/posixbase.py", line 25, in ?
>     from twisted.internet import tcp, udp
>
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/internet/tcp.py", line 65, in ?
>     from twisted.internet import protocol, defer, base, address
>
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/twisted/internet/protocol.py", line 25, in ?
>     class Factory:
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/zope/interface/advice.py", line 132, in advise
>
>     return callback(newClass)
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/zope/interface/declarations.py", line 550, in  
> _implements_advice
>     classImplements(cls, *interfaces)
>
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/zope/interface/declarations.py", line 526, in  
> classImplements
>     spec = implementedBy(cls)
>
>   File  
> "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/ 
> python2.3/site-packages/zope/interface/declarations.py", line 364, in  
> implementedByFallback
>
>     spec = cls.__dict__.get('__implemented__')
>
> RuntimeError: class.__dict__ not accessible in restricted mode
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jarrod.roberson at gmail.com  Mon May  2 17:21:26 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon May  2 17:21:28 2005
Subject: [mod_python] How to initialize a variable using PythonImport and
	access it from a Handler?
In-Reply-To: <0d6705deda58490b4c6c464ed4e13e0c@dscpl.com.au>
References: <2389d47305050211349baed3e@mail.gmail.com>
	<0d6705deda58490b4c6c464ed4e13e0c@dscpl.com.au>
Message-ID: <2389d473050502142157c9df82@mail.gmail.com>

thanks that PythonInterpreter directive did it, I can access the object and 
call methods on it but they never return any data until you stop the server 
then it flushes the data out to the browser.

can you see any reason that the following code might hang like that and 
never return?

from mod_python import apache

from myapp import cac
from twisted.names import dns

def handler(req):
req.content_type = "text/plain"
for answer in cac.getCachedResults(None, None, None):
req.write(str(answer))
req.write('\r\n')
return apache.OK
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050502/23bdf030/attachment.html
From grahamd at dscpl.com.au  Mon May  2 18:32:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May  2 18:32:54 2005
Subject: [mod_python] How to initialize a variable using PythonImport and
	access it from a Handler?
Message-ID: <1115073172.7401@dscpl.user.openhosting.com>

For what purpose are you using Twisted? Are you starting up an
instance of the Twisted event system in a separate thread from
the PythonImport?

The only thing I can think of is that what ever you are doing is
blocking for some reason waiting for something that Twisted
is trying to finish, but that perhaps Twisted is itself blocked and
only getting unblocked when the process receives a signal at
shutdown, thus allowing your request handler to actually finish.

How are you handling thread locking and communication of
data between your request handler and Twisted? I am presuming
that since you are possibly creating a Twisted event system
loop as separate thread from PythonImport that you aren't
registering a server cleanup method to properly shutdown
Twisted on Apache shutdown. This would mean that Apache
ends up always having to forcibly kill off Apache subprocesses
because Twisted thread isn't going to die properly.

Anyway, put debug in your request handler which logs to
req.log_error() so as to see if the request handler is blocking
in your call to get the cached results, or somehow later on.

BTW, I know of another framework which can be integrated with
mod_python and allows communications to backend systems using
messaging with request/reply and publish/subscribe mechanism
and has its own event system as well, if you are interested. :-)

Graham

jarrod roberson wrote ..
> thanks that PythonInterpreter directive did it, I can access the object
> and 
> call methods on it but they never return any data until you stop the server
> then it flushes the data out to the browser.
> 
> can you see any reason that the following code might hang like that and
> never return?
> 
> from mod_python import apache
> 
> from myapp import cac
> from twisted.names import dns
> 
> def handler(req):
> req.content_type = "text/plain"
> for answer in cac.getCachedResults(None, None, None):
> req.write(str(answer))
> req.write('\r\n')
> return apache.OK
From jarrod.roberson at gmail.com  Mon May  2 20:20:23 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Mon May  2 20:20:29 2005
Subject: [mod_python] How to initialize a variable using PythonImport and
	access it from a Handler?
In-Reply-To: <1115073172.7401@dscpl.user.openhosting.com>
References: <1115073172.7401@dscpl.user.openhosting.com>
Message-ID: <2389d473050502172059531840@mail.gmail.com>

On 5/2/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> For what purpose are you using Twisted? 



I am running a mDNS process to discover some custom servers written in 
Twisted that publish themselves via mDNS.
I also have a perspective broker interface to the custom server, which is 
what the mDNS entries are pointing me too.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050502/4163d09f/attachment.html
From huzaifa at hostway.com  Mon May  2 22:19:54 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon May  2 22:25:43 2005
Subject: [mod_python] bug in apache.import_module
In-Reply-To: <c298f2d7050429220333ec2b6b@mail.gmail.com>
References: <1114731882.7600@dscpl.user.openhosting.com>	
	<c298f2d705042901333282aa30@mail.gmail.com>	
	<427291CB.7010308@hostway.com>
	<c298f2d7050429220333ec2b6b@mail.gmail.com>
Message-ID: <4276DFCA.9060205@hostway.com>

Hello Nicolas,

What I am really worried about is that in a multi-threaded environment, 
accessing a modular level method, multiple threads might be accessing 
the same method at the same time and overwriting the other threads path 
list as a result. 

As per your question, I create a _lock object on top of the module.  
Pretty much this method was created in a "SharedResources" module as a 
modular level method.  My framework then imports the method and uses it 
within to fix the paths.

What do you think?

Hozi

Nicolas Lehuen wrote:

>Hi Huzaifa,
>
>Well, that's really up to you, especially since I don't understand
>where the _lock variable comes from.
>
>If it's not possible to change the path list which is passed as a
>parameter without acquiring the lock, then why not, but I'd put the
>locking mechanism in the calling code rather than in this function.
>Note that you are not modifying the path list in-place : you just
>return a copy of the path list with some fixes in it. So there is no
>need to lock anything here, except if you fear that the path list will
>be changed during the iteration, but for that, you have to put a
>locking mechanism somewhere else for any modification of the path
>list. So my first advice is : keep all locking code in the same place
>and you'll save time and mental health :).
>
>My second advice is : don't be over-protective at the cost of
>performance. Trust the users of your code. Provided that they have a
>proper documentation, it's not necessary to lock anything, because
>your users will know that bad things will happen if they change the
>path list during iteration, so they'll do the right stuff accordingly.
>Likewise, it's not necessary to check whether path is a list, or
>whether some path entries are None or "". If your users want to give
>silly data to your function, let them do it, and let Python throw
>exceptions at them.
>
>Regards,
>
>Nicolas
>
>On 4/29/05, Huzaifa Tapal <huzaifa@hostway.com> wrote:
>  
>
>> I wanted to ask for a piece of advise.  So the fix that I have mentioned, I
>>moved that fix (the method I replaced with the map(lambda) solution you had
>>with a minor fix) to another "SharedResources" module that I import in my
>>framework's handler.  From within the handler and my app, I am call that
>>method passing in a path argument that it *fixes* and returns back the
>>results.  Here is what the new method looks like:
>> 
>> def fix_paths( path ):
>>     """ Convenience method for checking and 
>>     adding '/' to the end of paths for compatibility
>>     with mod_python's import_module. """
>> 
>>     _lock.acquire()
>>     try:
>>         if path and type(path) == type([]):
>>             path = map(lambda entry : (entry!='' and entry[-1]!='/' and
>>entry+'/') or entry,path)
>> 
>>         return path
>>     finally:
>>         _lock.release()
>> 
>> Should I have the thread-locking in place or can I get by without having it
>>in place?  The reason I did add that was because the path value may get
>>changed, in the process, I thought of making this method thread-safe.
>> 
>> Also Nicolas, if you notice I added another check in your lambda function
>>to check if the entry is an empty string.  If that wasn't there then if an
>>empty string path was passed in the list paths, the function would break. 
>>Thought, i'd let you know if you were gonna add this functionality into the
>>import_module method for apache.py
>> 
>> Thanks
>> 
>> Hozi
>>
>> 
>> Nicolas Lehuen wrote: 
>> Sorry, reposting to the whole list :
>>
>>Hi,
>>
>>The change I've made for MODPYTHON-9 affects only the publisher
>>module. It solves the problem encountered when you had two pages, one
>>at /index.py, and the other at /foobar/index.py.
>>
>>Huzaifa, what I don't understand here is whether moduleA has the same
>>name as moduleB, and whether you are using mod_python.publisher or
>>not.
>>
>>If you use the publisher, your problem has been solved in the latest
>>development version, and the fix will be in the next release.
>>
>>Anyway, if we put aside the fix specific to the publisher, the problem
>>you describe is real, and the workaround you provide is correct.
>>
>>It is so correct that the only way I see of fixing that is to
>>integrate the workaround in the import_module function, that is to say
>>to check whether each path component passed in the path list argument
>>ends with a '/' (or '\'), and if not, add a '/' (or '\\'). This is
>>done easily in the first line of the function :
>>
>>if path:
>> path = map(lambda entry : (entry[-1]!='/' and entry+'/') or entry,path)
>>
>>However, there is no easy way of telling what directory separator
>>should be used ; theoretically, os.sep gives us the correct directory
>>separator, but even under Win32 Apache admins are advised to use "/"
>>which is compatible (at the OS level). So, we might as well always use
>>"/".
>>
>>What I fear is that adding all these checks to import_module will make
>>it a little bit too slow, so what about adding a line or two in the
>>documentation about the fact that all directories mentioned in the
>>path argument should end with a '/' ?
>>
>>Regards,
>>
>>Nicolas
>>
>>On 4/29/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> 
>> 
>> Nicolas, does the change you have already made for MODPYTHON-9
>>also address this slightly different variation on the problem?
>>
>>Original report was based on same name module in parent and child
>>subdirectories, not sibling directories which share a common prefix
>>to the subdirectory name.
>>
>>Graham
>>
>>Huzaifa Tapal wrote ..
>> 
>> 
>> For my fix, I patched this issue by passing the import_module function
>>the path with "/" in the end. That way it distinguishes from
>>/home/user/dir1 and /home/user/dir123
>>
>>hozi
>>
>>Graham Dumpleton wrote:
>>
>> 
>> 
>> See:
>>
>> http://issues.apache.org/jira/browse/MODPYTHON-9
>> http://issues.apache.org/jira/browse/MODPYTHON-10
>> http://issues.apache.org/jira/browse/MODPYTHON-11
>>
>>There are various known issues with using same name module in different
>>directories.
>>
>>The first one has been addressed for next version of mod_python.
>>
>>Graham
>>
>>On 29/04/2005, at 8:22 AM, Huzaifa Tapal wrote:
>>
>> 
>> 
>> I think there is a bug in apache.import_module. I am using
>>apache.import_module passing in the path where I want the module
>>imported from. I am seeing a very odd result as to sometimes, the
>>module that is loaded is not the right one. Instead it loads a
>>module that is of the same name but in a different directory. Here
>>is what is happening:
>>
>>I have two modules of same name in 2 different directories as follows;
>>
>>/home/user/dir1/moduleA
>>/home/user/dir123/moduleB
>>
>>Lets say I restart apache and load up moduleA. At that point there
>>is an entry in sys.modules for moduleA. Lets say then, I load up
>>moduleB, now the original entry for moduleA is overwritten by this
>>new entry. Now when I go back to load moduleA, I get back moduleB
>>results. Here is why:
>>
>>In apache.import_module if I pass in the path to load moduleA from
>>'/home/user/dir1' and the last module was in '/home/user/dir123' then
>>the check in import_module to make sure both modules aren't the same
>>fails since it does a "file.startswith()" check on the path. Since
>>the path moduleA is in the path to moduleB, it loads the wrong module.
>>
>>I see that somebody else had complained about this problem in
>>mod_python 1.3.1 but it still has not been patched.
>>
>>Any ideas?
>>
>>Hozi
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>> 
>> 
>> _______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>> 
>> _______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>> 
>>
>>    
>>
>
>
>  
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050502/0485cc08/attachment-0001.html
From nicolas.lehuen at gmail.com  Tue May  3 02:14:40 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue May  3 02:14:42 2005
Subject: [mod_python] bug in apache.import_module
In-Reply-To: <4276DFCA.9060205@hostway.com>
References: <1114731882.7600@dscpl.user.openhosting.com>
	<c298f2d705042901333282aa30@mail.gmail.com>
	<427291CB.7010308@hostway.com>
	<c298f2d7050429220333ec2b6b@mail.gmail.com>
	<4276DFCA.9060205@hostway.com>
Message-ID: <c298f2d705050223147e6c4c6@mail.gmail.com>

Huzaifa,

You're right in thinking that the same method will be accessed at the
same time, but wrong in thinking that there is a risk that a thread
messes with another thread's stack.

Multi-threading is perfectly predictable and safe on this level : you
can launch as many threads as you want running the same
function/method, each thread will execute in its own environment, each
one will get its own stack, therefore each one will have its own set
of local variables (including parameters) when the method will be
executed. There is absolutely no risk that changing a local parameter
in one thread messes with a local parameter in another thread.

You only have to worry about synchronization when multiple thread
share some data ; for example, for a bound method (a method which is
applied to a specific object instance), even if the threads stacks are
perfectly isolated, the multiple threads will target the same object
instance, and therefore one must think about synchronisation issues
when accessing the members of the object.

To go back to your fix_path() example, only local variables are
changed in the function. The local "path" variable changes, but not
the list passed as a parameter. This means the code would be perfectly
thread-safe even with the locking code removed.

Still, you will tell me, there is the possibility that someone changes
the shared path while I'm trying to fix it. Then, change your design.
At the minimum, you should place your locking code where it is needed,
not in the lowest common factor point.

The one you chose is pretty bad (sorry to be harsh ;-) : imagine you
want to call fix_path for each request. Bam, for each request, you'll
hold a global lock just for fixing a path variable ! You'll reduce the
server performance just for housekeeping issues...

Putting some code where it is needed is what OOP was made for (well,
it was made for making it easier, at least). What I'm suggesting is to
encapsulate the shared path variable in an object, and fix it each
time it is modified, not each time it is accessed. Then, you can use
whatever locking scheme you need to ensure the consistency of this
shared path variable.

Also, locking is not the only option for this : you can also copy the
path list and use a copy in the thread, instead of the original ; you
won't have to worry about the original list being modified, since each
thread will have its own copy.

There are many, many design choices to be made when build a
multi-threaded architecture. One thing is sure : you can't assume the
worst in each part of the architecture. You have to have places (like
this utility method) where you can safely assume that the parameters
you are given won't be modified during the call.

Multi-threading is not about locking everything, not at all, because
we might as well run in a single thread, the performances would be
better. It's about putting the right locks at the right place,
sometimes choosing to copy data instead of sharing it.

Sorry to be so vague, but to go further, I'd need to go deeper in your
code, and this I have not enough time to do :).

A very good book about multithreading is "Concurrent Programming in
Java" from Doug Lea. It's about Java and also quite old but a lot of
information can be applied to any multi-threading problem.

http://www.amazon.com/exec/obidos/tg/detail/-/0201310090/

Regards,
Nicolas

2005/5/3, Huzaifa Tapal <huzaifa@hostway.com>:
>  Hello Nicolas,
>  
>  What I am really worried about is that in a multi-threaded environment,
> accessing a modular level method, multiple threads might be accessing the
> same method at the same time and overwriting the other threads path list as
> a result.  
>  
>  As per your question, I create a _lock object on top of the module.  Pretty
> much this method was created in a "SharedResources" module as a modular
> level method.  My framework then imports the method and uses it within to
> fix the paths.
>  
>  What do you think?
>  
>  Hozi
> 
>  
>  Nicolas Lehuen wrote: 
>  Hi Huzaifa,
> 
> Well, that's really up to you, especially since I don't understand
> where the _lock variable comes from.
> 
> If it's not possible to change the path list which is passed as a
> parameter without acquiring the lock, then why not, but I'd put the
> locking mechanism in the calling code rather than in this function.
> Note that you are not modifying the path list in-place : you just
> return a copy of the path list with some fixes in it. So there is no
> need to lock anything here, except if you fear that the path list will
> be changed during the iteration, but for that, you have to put a
> locking mechanism somewhere else for any modification of the path
> list. So my first advice is : keep all locking code in the same place
> and you'll save time and mental health :).
> 
> My second advice is : don't be over-protective at the cost of
> performance. Trust the users of your code. Provided that they have a
> proper documentation, it's not necessary to lock anything, because
> your users will know that bad things will happen if they change the
> path list during iteration, so they'll do the right stuff accordingly.
> Likewise, it's not necessary to check whether path is a list, or
> whether some path entries are None or "". If your users want to give
> silly data to your function, let them do it, and let Python throw
> exceptions at them.
> 
> Regards,
> 
> Nicolas
> 
> On 4/29/05, Huzaifa Tapal <huzaifa@hostway.com> wrote:
>  
>  
>  I wanted to ask for a piece of advise. So the fix that I have mentioned, I
> moved that fix (the method I replaced with the map(lambda) solution you had
> with a minor fix) to another "SharedResources" module that I import in my
> framework's handler. From within the handler and my app, I am call that
> method passing in a path argument that it *fixes* and returns back the
> results. Here is what the new method looks like:
>  
>  def fix_paths( path ):
>  """ Convenience method for checking and 
>  adding '/' to the end of paths for compatibility
>  with mod_python's import_module. """
>  
>  _lock.acquire()
>  try:
>  if path and type(path) == type([]):
>  path = map(lambda entry : (entry!='' and entry[-1]!='/' and
> entry+'/') or entry,path)
>  
>  return path
>  finally:
>  _lock.release()
>  
>  Should I have the thread-locking in place or can I get by without having it
> in place? The reason I did add that was because the path value may get
> changed, in the process, I thought of making this method thread-safe.
>  
>  Also Nicolas, if you notice I added another check in your lambda function
> to check if the entry is an empty string. If that wasn't there then if an
> empty string path was passed in the list paths, the function would break. 
> Thought, i'd let you know if you were gonna add this functionality into the
> import_module method for apache.py
>  
>  Thanks
>  
>  Hozi
> 
>  
>  Nicolas Lehuen wrote: 
>  Sorry, reposting to the whole list :
> 
> Hi,
> 
> The change I've made for MODPYTHON-9 affects only the publisher
> module. It solves the problem encountered when you had two pages, one
> at /index.py, and the other at /foobar/index.py.
> 
> Huzaifa, what I don't understand here is whether moduleA has the same
> name as moduleB, and whether you are using mod_python.publisher or
> not.
> 
> If you use the publisher, your problem has been solved in the latest
> development version, and the fix will be in the next release.
> 
> Anyway, if we put aside the fix specific to the publisher, the problem
> you describe is real, and the workaround you provide is correct.
> 
> It is so correct that the only way I see of fixing that is to
> integrate the workaround in the import_module function, that is to say
> to check whether each path component passed in the path list argument
> ends with a '/' (or '\'), and if not, add a '/' (or '\\'). This is
> done easily in the first line of the function :
> 
> if path:
>  path = map(lambda entry : (entry[-1]!='/' and entry+'/') or entry,path)
> 
> However, there is no easy way of telling what directory separator
> should be used ; theoretically, os.sep gives us the correct directory
> separator, but even under Win32 Apache admins are advised to use "/"
> which is compatible (at the OS level). So, we might as well always use
> "/".
> 
> What I fear is that adding all these checks to import_module will make
> it a little bit too slow, so what about adding a line or two in the
> documentation about the fact that all directories mentioned in the
> path argument should end with a '/' ?
> 
> Regards,
> 
> Nicolas
> 
> On 4/29/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>  
>  
>  Nicolas, does the change you have already made for MODPYTHON-9
> also address this slightly different variation on the problem?
> 
> Original report was based on same name module in parent and child
> subdirectories, not sibling directories which share a common prefix
> to the subdirectory name.
> 
> Graham
> 
> Huzaifa Tapal wrote ..
>  
>  
>  For my fix, I patched this issue by passing the import_module function
> the path with "/" in the end. That way it distinguishes from
> /home/user/dir1 and /home/user/dir123
> 
> hozi
> 
> Graham Dumpleton wrote:
> 
>  
>  
>  See:
> 
>  http://issues.apache.org/jira/browse/MODPYTHON-9
>  http://issues.apache.org/jira/browse/MODPYTHON-10
>  http://issues.apache.org/jira/browse/MODPYTHON-11
> 
> There are various known issues with using same name module in different
> directories.
> 
> The first one has been addressed for next version of mod_python.
> 
> Graham
> 
> On 29/04/2005, at 8:22 AM, Huzaifa Tapal wrote:
> 
>  
>  
>  I think there is a bug in apache.import_module. I am using
> apache.import_module passing in the path where I want the module
> imported from. I am seeing a very odd result as to sometimes, the
> module that is loaded is not the right one. Instead it loads a
> module that is of the same name but in a different directory. Here
> is what is happening:
> 
> I have two modules of same name in 2 different directories as follows;
> 
> /home/user/dir1/moduleA
> /home/user/dir123/moduleB
> 
> Lets say I restart apache and load up moduleA. At that point there
> is an entry in sys.modules for moduleA. Lets say then, I load up
> moduleB, now the original entry for moduleA is overwritten by this
> new entry. Now when I go back to load moduleA, I get back moduleB
> results. Here is why:
> 
> In apache.import_module if I pass in the path to load moduleA from
> '/home/user/dir1' and the last module was in '/home/user/dir123' then
> the check in import_module to make sure both modules aren't the same
> fails since it does a "file.startswith()" check on the path. Since
> the path moduleA is in the path to moduleB, it loads the wrong module.
> 
> I see that somebody else had complained about this problem in
> mod_python 1.3.1 but it still has not been patched.
> 
> Any ideas?
> 
> Hozi
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>  
>  
>  _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>  
>  _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>  
> 
>  
>  
>  
>

From asif.jan at epfl.ch  Tue May  3 08:32:14 2005
From: asif.jan at epfl.ch (Asif Jan)
Date: Tue May  3 08:31:24 2005
Subject: [mod_python] How to stop PSP Page Cache
In-Reply-To: <mailman.2839.1115123109.8919.mod_python@modpython.org>
References: <mailman.2839.1115123109.8919.mod_python@modpython.org>
Message-ID: <f15cfeda5cae6506a39be2f87b4d68ba@epfl.ch>


Hello, I am using mod_python 3.1.4, and doing psp development. The 
pages work fine without any probelms. However, when I change the psp 
page on disk the changes are not reflected on the version that is 
served to client. I am not caching pages at the browser side.

However restarting the apache server results in correct page being 
served. Is there a way to tell psp handler not to cache the pages?

thanks
Asif

From rbalaji at firstam.com  Tue May  3 17:32:08 2005
From: rbalaji at firstam.com (Balaji)
Date: Tue May  3 17:33:50 2005
Subject: [mod_python] apache httpd with makefile
Message-ID: <200505032132.DIS72437@famarp01.firstam.com>

Hi,

            I am trying to compile an apache httpd module using a makefile
and not using apxs. But when I try to boot apache, it throws the following
error

 

Syntax error on line 238 of /home/rbalaji/usr/local/apache2/conf/httpd.conf:

Cannot load /home/rbalaji/usr/local/apache2/modules/mod_dyso.so into server:
\t0

509-026 System error: Cannot run a file that does not have a valid format.

 

Looks like apxs binds in some flags and generates some register functions
into the files before compiling. I am really not sure what it does. Your
help will really really be significant to solve one of our problems.

 

Regards,
Balaji

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050503/6dd1c44b/attachment.html
From grahamd at dscpl.com.au  Tue May  3 19:50:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May  3 19:50:04 2005
Subject: [mod_python] How to stop PSP Page Cache
Message-ID: <1115164200.31884@dscpl.user.openhosting.com>

Asif Jan wrote ..
> 
> Hello, I am using mod_python 3.1.4, and doing psp development. The 
> pages work fine without any probelms. However, when I change the psp 
> page on disk the changes are not reflected on the version that is 
> served to client. I am not caching pages at the browser side.
> 
> However restarting the apache server results in correct page being 
> served. Is there a way to tell psp handler not to cache the pages?

Although pages are cached, both the in memory cache and the DBM
caching mechanisms have code in them that should mean that if the
file is changed on disk, it will reload them. Ie., from file cache:

    def get(self, filename, mtime):
        try:
            hits, c_mtime, code = self.cache[filename]
            if mtime != c_mtime:
                del self.cache[filename]
                return None
            else:
                self.cache[filename] = (hits+1, mtime, code)
                return code
        except KeyError:
            return None 

and from DBM cache:

def dbm_cache_get(srv, dbmfile, filename, mtime):

    dbm_type = dbm_cache_type(dbmfile)
    _apache._global_lock(srv, "pspcache")
    try:
        dbm = dbm_type.open(dbmfile, 'c')
        try:
            entry = dbm[filename]
            t, val = entry.split(" ", 1)
            if long(t) == mtime:
                return str2code(val)
        except KeyError: 
            return None
    finally:
        try: dbm.close()
        except: pass
        _apache._global_unlock(srv, "pspcache")

Are you sure you aren't connecting to the server via a proxy with caching
enabled or some other caching system like Squid?

When you make the request after changing the file, do you actually see
a request logged in the Apache log file at that time to indicate that the
request is actually getting through to Apache?

Graham
From dharana at dharana.net  Wed May  4 03:35:47 2005
From: dharana at dharana.net (dharana)
Date: Wed May  4 03:35:52 2005
Subject: [mod_python] How to stop PSP Page Cache
In-Reply-To: <1115164200.31884@dscpl.user.openhosting.com>
References: <1115164200.31884@dscpl.user.openhosting.com>
Message-ID: <42787B53.80202@dharana.net>

Remember that if you have psp pages that call modules these modules will 
not be reloaded when you change them until you restart apache.

Graham Dumpleton wrote:
> Asif Jan wrote ..
> 
>>Hello, I am using mod_python 3.1.4, and doing psp development. The 
>>pages work fine without any probelms. However, when I change the psp 
>>page on disk the changes are not reflected on the version that is 
>>served to client. I am not caching pages at the browser side.
>>
>>However restarting the apache server results in correct page being 
>>served. Is there a way to tell psp handler not to cache the pages?
> 
> 
> Although pages are cached, both the in memory cache and the DBM
> caching mechanisms have code in them that should mean that if the
> file is changed on disk, it will reload them. Ie., from file cache:
> 
>     def get(self, filename, mtime):
>         try:
>             hits, c_mtime, code = self.cache[filename]
>             if mtime != c_mtime:
>                 del self.cache[filename]
>                 return None
>             else:
>                 self.cache[filename] = (hits+1, mtime, code)
>                 return code
>         except KeyError:
>             return None 
> 
> and from DBM cache:
> 
> def dbm_cache_get(srv, dbmfile, filename, mtime):
> 
>     dbm_type = dbm_cache_type(dbmfile)
>     _apache._global_lock(srv, "pspcache")
>     try:
>         dbm = dbm_type.open(dbmfile, 'c')
>         try:
>             entry = dbm[filename]
>             t, val = entry.split(" ", 1)
>             if long(t) == mtime:
>                 return str2code(val)
>         except KeyError: 
>             return None
>     finally:
>         try: dbm.close()
>         except: pass
>         _apache._global_unlock(srv, "pspcache")
> 
> Are you sure you aren't connecting to the server via a proxy with caching
> enabled or some other caching system like Squid?
> 
> When you make the request after changing the file, do you actually see
> a request logged in the Apache log file at that time to indicate that the
> request is actually getting through to Apache?
> 
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
From huzaifa at hostway.com  Wed May  4 11:56:41 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Wed May  4 11:56:49 2005
Subject: [mod_python] bug in apache.import_module
In-Reply-To: <c298f2d705050223147e6c4c6@mail.gmail.com>
References: <1114731882.7600@dscpl.user.openhosting.com>	
	<c298f2d705042901333282aa30@mail.gmail.com>	
	<427291CB.7010308@hostway.com>	
	<c298f2d7050429220333ec2b6b@mail.gmail.com>	
	<4276DFCA.9060205@hostway.com>
	<c298f2d705050223147e6c4c6@mail.gmail.com>
Message-ID: <4278F0B9.9060308@hostway.com>

Nicolas,

Your response was perfect!  Thanks a lot for that explaination and 
advice.  I wouldn't be able to encapsulate the path variable since the 
path is dynamic and is based off of the URI which provides the path to 
the page to be executed.  However, your information has given me a very 
good understanding on programming in multi-threaded environment. 

I will definitely, look into the book you have suggested.

Thanks again for all of your help.  Sorry to be a pain :-(

Huzaifa

Nicolas Lehuen wrote:

>Huzaifa,
>
>You're right in thinking that the same method will be accessed at the
>same time, but wrong in thinking that there is a risk that a thread
>messes with another thread's stack.
>
>Multi-threading is perfectly predictable and safe on this level : you
>can launch as many threads as you want running the same
>function/method, each thread will execute in its own environment, each
>one will get its own stack, therefore each one will have its own set
>of local variables (including parameters) when the method will be
>executed. There is absolutely no risk that changing a local parameter
>in one thread messes with a local parameter in another thread.
>
>You only have to worry about synchronization when multiple thread
>share some data ; for example, for a bound method (a method which is
>applied to a specific object instance), even if the threads stacks are
>perfectly isolated, the multiple threads will target the same object
>instance, and therefore one must think about synchronisation issues
>when accessing the members of the object.
>
>To go back to your fix_path() example, only local variables are
>changed in the function. The local "path" variable changes, but not
>the list passed as a parameter. This means the code would be perfectly
>thread-safe even with the locking code removed.
>
>Still, you will tell me, there is the possibility that someone changes
>the shared path while I'm trying to fix it. Then, change your design.
>At the minimum, you should place your locking code where it is needed,
>not in the lowest common factor point.
>
>The one you chose is pretty bad (sorry to be harsh ;-) : imagine you
>want to call fix_path for each request. Bam, for each request, you'll
>hold a global lock just for fixing a path variable ! You'll reduce the
>server performance just for housekeeping issues...
>
>Putting some code where it is needed is what OOP was made for (well,
>it was made for making it easier, at least). What I'm suggesting is to
>encapsulate the shared path variable in an object, and fix it each
>time it is modified, not each time it is accessed. Then, you can use
>whatever locking scheme you need to ensure the consistency of this
>shared path variable.
>
>Also, locking is not the only option for this : you can also copy the
>path list and use a copy in the thread, instead of the original ; you
>won't have to worry about the original list being modified, since each
>thread will have its own copy.
>
>There are many, many design choices to be made when build a
>multi-threaded architecture. One thing is sure : you can't assume the
>worst in each part of the architecture. You have to have places (like
>this utility method) where you can safely assume that the parameters
>you are given won't be modified during the call.
>
>Multi-threading is not about locking everything, not at all, because
>we might as well run in a single thread, the performances would be
>better. It's about putting the right locks at the right place,
>sometimes choosing to copy data instead of sharing it.
>
>Sorry to be so vague, but to go further, I'd need to go deeper in your
>code, and this I have not enough time to do :).
>
>A very good book about multithreading is "Concurrent Programming in
>Java" from Doug Lea. It's about Java and also quite old but a lot of
>information can be applied to any multi-threading problem.
>
>http://www.amazon.com/exec/obidos/tg/detail/-/0201310090/
>
>Regards,
>Nicolas
>
>2005/5/3, Huzaifa Tapal <huzaifa@hostway.com>:
>  
>
>> Hello Nicolas,
>> 
>> What I am really worried about is that in a multi-threaded environment,
>>accessing a modular level method, multiple threads might be accessing the
>>same method at the same time and overwriting the other threads path list as
>>a result.  
>> 
>> As per your question, I create a _lock object on top of the module.  Pretty
>>much this method was created in a "SharedResources" module as a modular
>>level method.  My framework then imports the method and uses it within to
>>fix the paths.
>> 
>> What do you think?
>> 
>> Hozi
>>
>> 
>> Nicolas Lehuen wrote: 
>> Hi Huzaifa,
>>
>>Well, that's really up to you, especially since I don't understand
>>where the _lock variable comes from.
>>
>>If it's not possible to change the path list which is passed as a
>>parameter without acquiring the lock, then why not, but I'd put the
>>locking mechanism in the calling code rather than in this function.
>>Note that you are not modifying the path list in-place : you just
>>return a copy of the path list with some fixes in it. So there is no
>>need to lock anything here, except if you fear that the path list will
>>be changed during the iteration, but for that, you have to put a
>>locking mechanism somewhere else for any modification of the path
>>list. So my first advice is : keep all locking code in the same place
>>and you'll save time and mental health :).
>>
>>My second advice is : don't be over-protective at the cost of
>>performance. Trust the users of your code. Provided that they have a
>>proper documentation, it's not necessary to lock anything, because
>>your users will know that bad things will happen if they change the
>>path list during iteration, so they'll do the right stuff accordingly.
>>Likewise, it's not necessary to check whether path is a list, or
>>whether some path entries are None or "". If your users want to give
>>silly data to your function, let them do it, and let Python throw
>>exceptions at them.
>>
>>Regards,
>>
>>Nicolas
>>
>>On 4/29/05, Huzaifa Tapal <huzaifa@hostway.com> wrote:
>> 
>> 
>> I wanted to ask for a piece of advise. So the fix that I have mentioned, I
>>moved that fix (the method I replaced with the map(lambda) solution you had
>>with a minor fix) to another "SharedResources" module that I import in my
>>framework's handler. From within the handler and my app, I am call that
>>method passing in a path argument that it *fixes* and returns back the
>>results. Here is what the new method looks like:
>> 
>> def fix_paths( path ):
>> """ Convenience method for checking and 
>> adding '/' to the end of paths for compatibility
>> with mod_python's import_module. """
>> 
>> _lock.acquire()
>> try:
>> if path and type(path) == type([]):
>> path = map(lambda entry : (entry!='' and entry[-1]!='/' and
>>entry+'/') or entry,path)
>> 
>> return path
>> finally:
>> _lock.release()
>> 
>> Should I have the thread-locking in place or can I get by without having it
>>in place? The reason I did add that was because the path value may get
>>changed, in the process, I thought of making this method thread-safe.
>> 
>> Also Nicolas, if you notice I added another check in your lambda function
>>to check if the entry is an empty string. If that wasn't there then if an
>>empty string path was passed in the list paths, the function would break. 
>>Thought, i'd let you know if you were gonna add this functionality into the
>>import_module method for apache.py
>> 
>> Thanks
>> 
>> Hozi
>>
>> 
>> Nicolas Lehuen wrote: 
>> Sorry, reposting to the whole list :
>>
>>Hi,
>>
>>The change I've made for MODPYTHON-9 affects only the publisher
>>module. It solves the problem encountered when you had two pages, one
>>at /index.py, and the other at /foobar/index.py.
>>
>>Huzaifa, what I don't understand here is whether moduleA has the same
>>name as moduleB, and whether you are using mod_python.publisher or
>>not.
>>
>>If you use the publisher, your problem has been solved in the latest
>>development version, and the fix will be in the next release.
>>
>>Anyway, if we put aside the fix specific to the publisher, the problem
>>you describe is real, and the workaround you provide is correct.
>>
>>It is so correct that the only way I see of fixing that is to
>>integrate the workaround in the import_module function, that is to say
>>to check whether each path component passed in the path list argument
>>ends with a '/' (or '\'), and if not, add a '/' (or '\\'). This is
>>done easily in the first line of the function :
>>
>>if path:
>> path = map(lambda entry : (entry[-1]!='/' and entry+'/') or entry,path)
>>
>>However, there is no easy way of telling what directory separator
>>should be used ; theoretically, os.sep gives us the correct directory
>>separator, but even under Win32 Apache admins are advised to use "/"
>>which is compatible (at the OS level). So, we might as well always use
>>"/".
>>
>>What I fear is that adding all these checks to import_module will make
>>it a little bit too slow, so what about adding a line or two in the
>>documentation about the fact that all directories mentioned in the
>>path argument should end with a '/' ?
>>
>>Regards,
>>
>>Nicolas
>>
>>On 4/29/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> 
>> 
>> Nicolas, does the change you have already made for MODPYTHON-9
>>also address this slightly different variation on the problem?
>>
>>Original report was based on same name module in parent and child
>>subdirectories, not sibling directories which share a common prefix
>>to the subdirectory name.
>>
>>Graham
>>
>>Huzaifa Tapal wrote ..
>> 
>> 
>> For my fix, I patched this issue by passing the import_module function
>>the path with "/" in the end. That way it distinguishes from
>>/home/user/dir1 and /home/user/dir123
>>
>>hozi
>>
>>Graham Dumpleton wrote:
>>
>> 
>> 
>> See:
>>
>> http://issues.apache.org/jira/browse/MODPYTHON-9
>> http://issues.apache.org/jira/browse/MODPYTHON-10
>> http://issues.apache.org/jira/browse/MODPYTHON-11
>>
>>There are various known issues with using same name module in different
>>directories.
>>
>>The first one has been addressed for next version of mod_python.
>>
>>Graham
>>
>>On 29/04/2005, at 8:22 AM, Huzaifa Tapal wrote:
>>
>> 
>> 
>> I think there is a bug in apache.import_module. I am using
>>apache.import_module passing in the path where I want the module
>>imported from. I am seeing a very odd result as to sometimes, the
>>module that is loaded is not the right one. Instead it loads a
>>module that is of the same name but in a different directory. Here
>>is what is happening:
>>
>>I have two modules of same name in 2 different directories as follows;
>>
>>/home/user/dir1/moduleA
>>/home/user/dir123/moduleB
>>
>>Lets say I restart apache and load up moduleA. At that point there
>>is an entry in sys.modules for moduleA. Lets say then, I load up
>>moduleB, now the original entry for moduleA is overwritten by this
>>new entry. Now when I go back to load moduleA, I get back moduleB
>>results. Here is why:
>>
>>In apache.import_module if I pass in the path to load moduleA from
>>'/home/user/dir1' and the last module was in '/home/user/dir123' then
>>the check in import_module to make sure both modules aren't the same
>>fails since it does a "file.startswith()" check on the path. Since
>>the path moduleA is in the path to moduleB, it loads the wrong module.
>>
>>I see that somebody else had complained about this problem in
>>mod_python 1.3.1 but it still has not been patched.
>>
>>Any ideas?
>>
>>Hozi
>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>> 
>> 
>> _______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>> 
>> _______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>> 
>>
>> 
>> 
>> 
>>
>>    
>>
>
>
>  
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050504/a8eb4e18/attachment-0001.html
From python.pan at gmail.com  Wed May  4 13:10:39 2005
From: python.pan at gmail.com (py pan)
Date: Wed May  4 13:10:41 2005
Subject: [mod_python] NIGHTMARE Installing mod_python on windows
Message-ID: <5af1b8bc0505041010569f1ee@mail.gmail.com>

Does mod_pyhton stop supporting windows ?

I'm trying to install it on windows, which is supporsed to be a
trivial task. But it's not.

---

First I searched the doc about installation in current version of mp,
and was surprised to find that the official documentation of mp
doesn't even have a section for installation in Windows !!.

---

Then I searched the net and found some info, which said that what's
required is a mod_python.dll and need to copy some folder(s) manually
into the pythonx.x\Lib.

I looked for mod_python.dll but couldn't find it. I figured that this
approach is for the older version of mod_python so I didn't go along.

---

Then I searched the net, and found so-called "mod_python window installer":
http://www.lehuen.com/nicolas/download/mod_python/

There are two files in that folder currently:
mod_python-3.1.3.win32-py2.3.exe
mod_python-3.2.0-dev-20050428.win32-py2.4.exe
 
I tried the first one, which seems to install nicely. But when I tried
it in python:

	>>> from mod_python import apache
	Traceback (most recent call last):
	  File "<interactive input>", line 1, in ?
	  File "C:\Python24\Lib\site-packages\mod_python\apache.py", line 28, in ?
	    import _apache
	ImportError: No module named _apache

I went to check the installed mp in
c:\python2.4\Lib\site-packages\mod_python, and found that there's no
_apache there. What also surprised me is that there's no subfolders in
that folder.

---
 
I tried the second file
(mod_python-3.2.0-dev-20050428.win32-py2.4.exe) and got the same
error.

---

So, what's the deal here ? mod_python gave up the windows users or what ?


pan

From jg.lists at sympatico.ca  Wed May  4 15:19:20 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed May  4 15:17:39 2005
Subject: [mod_python] NIGHTMARE Installing mod_python on windows
In-Reply-To: <5af1b8bc0505041010569f1ee@mail.gmail.com>
References: <5af1b8bc0505041010569f1ee@mail.gmail.com>
Message-ID: <42792038.4080105@sympatico.ca>

py pan wrote:
> Does mod_pyhton stop supporting windows ?
> 
> I'm trying to install it on windows, which is supporsed to be a
> trivial task. But it's not.
> 
> ---
> 
> First I searched the doc about installation in current version of mp,
> and was surprised to find that the official documentation of mp
> doesn't even have a section for installation in Windows !!.
> 
> ---
> 
> Then I searched the net and found some info, which said that what's
> required is a mod_python.dll and need to copy some folder(s) manually
> into the pythonx.x\Lib.
> 
> I looked for mod_python.dll but couldn't find it. I figured that this
> approach is for the older version of mod_python so I didn't go along.
> 
> ---
> 
> Then I searched the net, and found so-called "mod_python window installer":
> http://www.lehuen.com/nicolas/download/mod_python/
> 
> There are two files in that folder currently:
> mod_python-3.1.3.win32-py2.3.exe
> mod_python-3.2.0-dev-20050428.win32-py2.4.exe
>  
> I tried the first one, which seems to install nicely. But when I tried
> it in python:
> 
> 	>>> from mod_python import apache
> 	Traceback (most recent call last):
> 	  File "<interactive input>", line 1, in ?
> 	  File "C:\Python24\Lib\site-packages\mod_python\apache.py", line 28, in ?
> 	    import _apache
> 	ImportError: No module named _apache
> 
> I went to check the installed mp in
> c:\python2.4\Lib\site-packages\mod_python, and found that there's no
> _apache there. What also surprised me is that there's no subfolders in
> that folder.
> 
> ---
>  
> I tried the second file
> (mod_python-3.2.0-dev-20050428.win32-py2.4.exe) and got the same
> error.
> 
> ---
> 
> So, what's the deal here ? mod_python gave up the windows users or what ?
> 
> 
> pan
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From tom at howrandom.net  Wed May  4 15:28:03 2005
From: tom at howrandom.net (Thomas Wardill)
Date: Wed May  4 15:25:50 2005
Subject: [mod_python] NIGHTMARE Installing mod_python on windows
In-Reply-To: <5af1b8bc0505041010569f1ee@mail.gmail.com>
Message-ID: <BE9EE0D3.1522%tom@howrandom.net>




On 4/5/05 6:10 pm, "py pan" <python.pan@gmail.com> wrote:

> Does mod_pyhton stop supporting windows ?
> 
> I'm trying to install it on windows, which is supporsed to be a
> trivial task. But it's not.
> 
> ---
> 
> First I searched the doc about installation in current version of mp,
> and was surprised to find that the official documentation of mp
> doesn't even have a section for installation in Windows !!.
> 
> ---
> 
> Then I searched the net and found some info, which said that what's
> required is a mod_python.dll and need to copy some folder(s) manually
> into the pythonx.x\Lib.
> 
> I looked for mod_python.dll but couldn't find it. I figured that this
> approach is for the older version of mod_python so I didn't go along.
> 
> ---
> 
> Then I searched the net, and found so-called "mod_python window installer":
> http://www.lehuen.com/nicolas/download/mod_python/
> 
> There are two files in that folder currently:
> mod_python-3.1.3.win32-py2.3.exe
> mod_python-3.2.0-dev-20050428.win32-py2.4.exe
>  
> I tried the first one, which seems to install nicely. But when I tried
> it in python:
> 
>>>> from mod_python import apache
> Traceback (most recent call last):
>  File "<interactive input>", line 1, in ?
>  File "C:\Python24\Lib\site-packages\mod_python\apache.py", line 28, in ?
>    import _apache
> ImportError: No module named _apache
> 
> I went to check the installed mp in
> c:\python2.4\Lib\site-packages\mod_python, and found that there's no
> _apache there. What also surprised me is that there's no subfolders in
> that folder.
> 
> ---
>  
> I tried the second file
> (mod_python-3.2.0-dev-20050428.win32-py2.4.exe) and got the same
> error.
> 
> ---
> 
> So, what's the deal here ? mod_python gave up the windows users or what ?
> 
> 
> pan
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

Your problem lies with the fact that you are trying to import apache from
the console, this doesn't work, and will generate the "can't find module
_apache" message that you received.

The fact that you get that far would suggest that mod_python is successfully
installed, and you should start attempting to use it from apache.

See the documentation for how to set this up, including the necessary
changes to apapche.conf or writing a .htaccess file to use mod_python. The
documentation also includes a sample "hello world" program that should get
you started.

Hope this helps
--
Tom Wardill



From jg.lists at sympatico.ca  Wed May  4 15:48:41 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed May  4 15:46:55 2005
Subject: [mod_python] NIGHTMARE Installing mod_python on windows
In-Reply-To: <42792038.4080105@sympatico.ca>
References: <5af1b8bc0505041010569f1ee@mail.gmail.com>
	<42792038.4080105@sympatico.ca>
Message-ID: <42792719.1080707@sympatico.ca>

Sorry about the non-reply. Hit the wrong button with the stupid mouse.

Thomas Wardill's message pretty much says what I intended to say, so 
I'll just go back to my remedial button clicking class now. :)

Regards,
Jim



From python.pan at gmail.com  Wed May  4 15:58:58 2005
From: python.pan at gmail.com (py pan)
Date: Wed May  4 15:59:00 2005
Subject: [mod_python] Setup apache for customized .py files to use
	mod_python ?
Message-ID: <5af1b8bc05050412585813385f@mail.gmail.com>

The documentation of mod_python says to put the following into the
http.conf of apache:

<Directory "c:/apache/Apache2/htdocs/test">
        AddHandler mod_python .py
        PythonHandler mptest
        PythonDebug On
    </Directory>

It seems to me that if I want to make use of this configuration, I
will have to name my py file to mptest.py. That will make this
configuration serves only one file. I did check and see that only
mptest.py works.

How can I setup the apache such that any *.py file in that folder works?

Thx.

From jg.lists at sympatico.ca  Wed May  4 16:11:48 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed May  4 16:10:02 2005
Subject: [mod_python] Setup apache for customized .py files to
	use	mod_python ?
In-Reply-To: <5af1b8bc05050412585813385f@mail.gmail.com>
References: <5af1b8bc05050412585813385f@mail.gmail.com>
Message-ID: <42792C84.4040808@sympatico.ca>

py pan wrote:
> The documentation of mod_python says to put the following into the
> http.conf of apache:
> 
> <Directory "c:/apache/Apache2/htdocs/test">
>         AddHandler mod_python .py
>         PythonHandler mptest
>         PythonDebug On
>     </Directory>
> 
> It seems to me that if I want to make use of this configuration, I
> will have to name my py file to mptest.py. That will make this
> configuration serves only one file. I did check and see that only
> mptest.py works.
> 
> How can I setup the apache such that any *.py file in that folder works?
> 
> Thx.

The mptest handler is really just for testing. You can create your own 
handler or use one included with mod_python. See 
http://www.modpython.org/live/current/doc-html/handlers.html

The publisher handler described in the docs is a good place to start.

Regards,
Jim
From huzaifa at hostway.com  Wed May  4 16:12:49 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Wed May  4 16:12:55 2005
Subject: [mod_python] Setup apache for customized .py files to
	use	mod_python ?
In-Reply-To: <5af1b8bc05050412585813385f@mail.gmail.com>
References: <5af1b8bc05050412585813385f@mail.gmail.com>
Message-ID: <42792CC1.4050401@hostway.com>

By adding that directory block to your httpd.conf, you are specifying 
the http handler for any requests that come in for any .py files in the 
directory "test".  it is your handler "mptest" or any that you specify 
as the PythonHandler that needs to load and return the results from the 
actual script that was requested.

mod_python provides a couple of handlers, cgihandler and publisher, that 
you can use that do the mapping to your script based on the URI, 
however, you may have to update your scripts to support these handlers.  
cgihandler in my opinion would be your best bet.

Hozi

py pan wrote:

>The documentation of mod_python says to put the following into the
>http.conf of apache:
>
><Directory "c:/apache/Apache2/htdocs/test">
>        AddHandler mod_python .py
>        PythonHandler mptest
>        PythonDebug On
>    </Directory>
>
>It seems to me that if I want to make use of this configuration, I
>will have to name my py file to mptest.py. That will make this
>configuration serves only one file. I did check and see that only
>mptest.py works.
>
>How can I setup the apache such that any *.py file in that folder works?
>
>Thx.
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>  
>

From nicolas.lehuen at gmail.com  Wed May  4 17:01:00 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed May  4 17:01:02 2005
Subject: [mod_python] NIGHTMARE Installing mod_python on windows
In-Reply-To: <5af1b8bc0505041010569f1ee@mail.gmail.com>
References: <5af1b8bc0505041010569f1ee@mail.gmail.com>
Message-ID: <c298f2d7050504140159ad472b@mail.gmail.com>

2005/5/4, py pan <python.pan@gmail.com>:
> Does mod_pyhton stop supporting windows ?
> 
> I'm trying to install it on windows, which is supporsed to be a
> trivial task. But it's not.
> 
> ---
> 
> First I searched the doc about installation in current version of mp,
> and was surprised to find that the official documentation of mp
> doesn't even have a section for installation in Windows !!.
> 
> ---
> 
> Then I searched the net and found some info, which said that what's
> required is a mod_python.dll and need to copy some folder(s) manually
> into the pythonx.x\Lib.
> 
> I looked for mod_python.dll but couldn't find it. I figured that this
> approach is for the older version of mod_python so I didn't go along.
> 
> ---
> 
> Then I searched the net, and found so-called "mod_python window installer":
> http://www.lehuen.com/nicolas/download/mod_python/
> 
> There are two files in that folder currently:
> mod_python-3.1.3.win32-py2.3.exe
> mod_python-3.2.0-dev-20050428.win32-py2.4.exe
> 
> I tried the first one, which seems to install nicely. But when I tried
> it in python:
> 
>         >>> from mod_python import apache
>         Traceback (most recent call last):
>           File "<interactive input>", line 1, in ?
>           File "C:\Python24\Lib\site-packages\mod_python\apache.py", line 28, in ?
>             import _apache
>         ImportError: No module named _apache
> 
> I went to check the installed mp in
> c:\python2.4\Lib\site-packages\mod_python, and found that there's no
> _apache there. What also surprised me is that there's no subfolders in
> that folder.
> 
> ---
> 
> I tried the second file
> (mod_python-3.2.0-dev-20050428.win32-py2.4.exe) and got the same
> error.
> 
> ---
> 
> So, what's the deal here ? mod_python gave up the windows users or what ?
> 
> pan

Hi,

First of all, let me reassure you, no, we haven't dropped the support
for Windows. I currently have a production server running Apache
2.0.51 + modpython 3.1.4 without any problems. I'm testing each
version of mod_python 3.2.0dev (including the installer) on a
development computer before making any release.

The proper way to install mod_python is simply to have an Apache 2.0.x
server up and running, to have a working Python 2.4 setup, and to
launch the installer. It should first set-up the python packages (you
should have a few files under site-packages, most importantly
apache.py and publisher.py). Then it should prompt you for the Apache
setup directory, and automatically copy mod_python.so in the modules
subdirectory. Finally, it should give you a warning message telling
you to make changes to your httpd.conf file. If for any reason your
installation experience is not the same, please do tell me.

You can then proceed to testing your installation as described in the
documentation :

http://www.modpython.org/live/current/doc-html/inst-testing.html

It's perfectly normal that "from mod_python import apache" fails at
the python prompt. The _apache module is a special module which is
dynamically created by the mod_python.so Apache module. This means
that importing _apache is only possible within the context of the
interpreters running in Apache, and that the module will not be found
with the standard Python interpreter. This kind of import test is not
the proper way to test your setup, please read the documentation
mentioned above on this subject.

Now, I must say that the windows setup experience is not the best of
all, and that documentation should be written. We will work on that.

Regards,

Nicolas Lehuen

From grahamd at dscpl.com.au  Wed May  4 17:55:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May  4 17:55:53 2005
Subject: [mod_python] Setup apache for customized .py files to use
	mod_python ?
In-Reply-To: <5af1b8bc05050412585813385f@mail.gmail.com>
References: <5af1b8bc05050412585813385f@mail.gmail.com>
Message-ID: <d99d372a66fcf848af10fe8d9580ebf7@dscpl.com.au>


On 05/05/2005, at 5:58 AM, py pan wrote:

> The documentation of mod_python says to put the following into the
> http.conf of apache:
>
> <Directory "c:/apache/Apache2/htdocs/test">
>         AddHandler mod_python .py
>         PythonHandler mptest
>         PythonDebug On
>     </Directory>
>
> It seems to me that if I want to make use of this configuration, I
> will have to name my py file to mptest.py. That will make this
> configuration serves only one file. I did check and see that only
> mptest.py works.
>
> How can I setup the apache such that any *.py file in that folder 
> works?

Consider using Vampire extensions for mod_python. It will allow you to 
have
more than one .py file in a directory corresponding to each resource. 
Web
site is:

   http://www.dscpl.com.au/projects/vampire

Graham

From tusharpatil1982 at rediffmail.com  Thu May  5 01:06:53 2005
From: tusharpatil1982 at rediffmail.com (tushar liladhar patil)
Date: Thu May  5 01:05:32 2005
Subject: [mod_python] Printer connection thro' python
Message-ID: <20050505050653.15072.qmail@webmail45.rediffmail.com>

  
I m using python2.3.4,glade2.0 and mandrake10.1 linux as a platform for this.
        I m in need of some API's for Printer connection in PyGtk2.0,so that, that API's can interact with OS and the OS will give me the dialog box of priter, like in JAVA we have Printable interface.
        So please do the needful, Im waiting for the nice reply.
        
        I heard about Cupd, lpr of these are API from linux(os). but i dont know how to use it so if anyone knows please let me know also.
Thanking u,
Tushar

SVS Software.
Near Dandekar Bridge,
Pune.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050505/4ff6f309/attachment-0001.html
From grahamd at dscpl.com.au  Thu May  5 02:10:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May  5 02:10:54 2005
Subject: [mod_python] Printer connection thro' python
Message-ID: <1115273453.12078@dscpl.user.openhosting.com>

tushar liladhar patil wrote ..
>   
> I m using python2.3.4,glade2.0 and mandrake10.1 linux as a platform for
> this.
>         I m in need of some API's for Printer connection in PyGtk2.0,so
> that, that API's can interact with OS and the OS will give me the dialog
> box of priter, like in JAVA we have Printable interface.
>         So please do the needful, Im waiting for the nice reply.
>         
>         I heard about Cupd, lpr of these are API from linux(os). but i
> dont know how to use it so if anyone knows please let me know also.

You have asked this here before and I believe you have also been told
before that this is not the appropriate forum for this question. This
mailing list is specfically related to the discussion of mod_python, an
extension for the Apache web server. This mailing list is not for general
Python questions. Like last time, I direct you to:

  http://groups-beta.google.com/group/comp.lang.python?hl=en

If it is tied closely into PyGtk, you might also find a mailing list for that
package instead and try there.

Graham
From olivier.chaussavoine at online.fr  Thu May  5 04:55:41 2005
From: olivier.chaussavoine at online.fr (olivier chaussavoine)
Date: Thu May  5 04:55:41 2005
Subject: [mod_python] mod_python and threads
Message-ID: <4279DF8D.1040800@online.fr>

Hi,
 With apache2 and mod_python 3.1.3, I would like to be shure that a job
is made by a single process, that reads input, access to a database
(MySQL), and write on it. Have you any ideas?
One would be the following:
A thread is created by mod_python. the standard input of this thread is
a pipe (declared as global). The thread waits for input and do the job.
Each mod_python process write to this pipe.
Have you any experience on this kind of thing?

Thank you for your amswer
From jarrod.roberson at gmail.com  Thu May  5 15:34:01 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Thu May  5 15:34:04 2005
Subject: [mod_python] Using Twisted inside mod_python
Message-ID: <2389d47305050512346f29e7cf@mail.gmail.com>

I want to embed a Twisted Server ( specifically a ZeroConf implemenation I 
wrote ) into Apache2.

I have it running from a PythonImport and attaching to an interpreter and 
all that goodness.
It prints out all the queries and answers it received to the apache log just 
fine. Apache works just fine serving normal stuff.

The problem is anytime I make any kind of method calls into my global object 
from a handler it just hangs Apache2 :-(

I have tried it with worker.c and prefork.c and both exhibit the same 
behavior.

Any suggestions?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050505/ef9eee4d/attachment.html
From gdamjan at mail.net.mk  Thu May  5 22:43:28 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Thu May  5 22:43:32 2005
Subject: [mod_python] Using Twisted inside mod_python
In-Reply-To: <2389d47305050512346f29e7cf@mail.gmail.com>
References: <2389d47305050512346f29e7cf@mail.gmail.com>
Message-ID: <20050506024328.GA18570@legolas.on.net.mk>

> I have it running from a PythonImport and attaching to an interpreter and 
> all that goodness.
> It prints out all the queries and answers it received to the apache log just 
> fine. Apache works just fine serving normal stuff.
> 
> The problem is anytime I make any kind of method calls into my global object 
> from a handler it just hangs Apache2 :-(

I have no idea what your code does, but one thing I thought maybe
happens is this:
http://spyced.blogspot.com/2005/04/how-well-do-you-know-python-part-5.html


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From grahamd at dscpl.com.au  Thu May  5 23:53:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May  5 23:53:58 2005
Subject: [mod_python] Using Twisted inside mod_python
Message-ID: <1115351633.6968@dscpl.user.openhosting.com>

Damjan wrote ..
> > I have it running from a PythonImport and attaching to an interpreter
> and 
> > all that goodness.
> > It prints out all the queries and answers it received to the apache log
> just 
> > fine. Apache works just fine serving normal stuff.
> > 
> > The problem is anytime I make any kind of method calls into my global
> object 
> > from a handler it just hangs Apache2 :-(
> 
> I have no idea what your code does, but one thing I thought maybe
> happens is this:
> http://spyced.blogspot.com/2005/04/how-well-do-you-know-python-part-5.html

Based on previous post, it isn't at least hanging in the PythonImport and
thus for that case, the referenced material wouldn't be relevant. The
original handler posted previously was:

  from mod_python import apache

  from myapp import cac
  from twisted.names import dns

  def handler(req):
    req.content_type = "text/plain"
    for answer in cac.getCachedResults(None, None, None):
      req.write(str(answer))
      req.write('\r\n')
      return apache.OK

If I understood where things were at, it was hanging somewhere inside
of call to cac.getCachedResults().

Question to the original poster. Have you added sufficient debug into each
step of the internals of that call so as to know precisely when the code
seems to block?

Also, does "cac" consist of simple Python data structures without locking,
or does it contain thread locks in anyway? Does it actually call into Twisted
in some way? Do you know that a separate thread can't call into Twisted
unless it uses appropriate mechanisms?

It is going to be really hard for us to say what is wrong unless you can
narrow it down to exactly where it may be blocking and provide relevant
code for it.

Graham
From jarrod.roberson at gmail.com  Fri May  6 01:49:11 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri May  6 01:49:17 2005
Subject: [mod_python] Using Twisted inside mod_python
In-Reply-To: <20050506024328.GA18570@legolas.on.net.mk>
References: <2389d47305050512346f29e7cf@mail.gmail.com>
	<20050506024328.GA18570@legolas.on.net.mk>
Message-ID: <2389d47305050522496539eb5d@mail.gmail.com>

On 5/5/05, Damjan <gdamjan@mail.net.mk> wrote:
> 
> > I have it running from a PythonImport and attaching to an interpreter 
> and
> > all that goodness.
> > It prints out all the queries and answers it received to the apache log 
> just
> > fine. Apache works just fine serving normal stuff.
> >
> > The problem is anytime I make any kind of method calls into my global 
> object
> > from a handler it just hangs Apache2 :-(
> 
> I have no idea what your code does, but one thing I thought maybe
> happens is this:
> http://spyced.blogspot.com/2005/04/how-well-do-you-know-python-part-5.html
> 
> nope this is not the problem since the import runs the Twisted reactor 
> code fine, and Apache behaves just fine
> that is until I make a call into the object I have exposed. I do think it 
> is a threading issue, because it writes to the req output and hangs then.
> when I kill Apache it sometimes prints partial results to the browser 
> sometimes nothing.
> it never prints anything to the Apache error log that I can figure out 
> what is wrong, it always has something to do with the req.write() call
> 
> the Twisted code continues to run and spew things out to the Apache error 
> log even when it hangs, it is strange, it is more like Apache is hanging 
> than the Twisted part now that I think about it more.
> 
> If I can get the time I will bundle up the code ( which is very little ) 
> and post it to see if any one can point out a stupid mistake or anything.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050506/a70d2722/attachment.html
From jarrod.roberson at gmail.com  Fri May  6 01:50:43 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri May  6 01:50:45 2005
Subject: [mod_python] Using Twisted inside mod_python
In-Reply-To: <1115351633.6968@dscpl.user.openhosting.com>
References: <1115351633.6968@dscpl.user.openhosting.com>
Message-ID: <2389d47305050522503c7a6a66@mail.gmail.com>

> 
> If I understood where things were at, it was hanging somewhere inside
> of call to cac.getCachedResults().


this is correct, specifically in req.write() 

Question to the original poster. Have you added sufficient debug into each 
> step of the internals of that call so as to know precisely when the code
> seems to block?


that call basically walks a list filters out some items and builds another 
list to return
I have done alot of basic debugging and the problem is it just hangs apache 
and I have to kill it.
Thus it doesn't print anything out because it doesn't shut down correctly.
 
Also, does "cac" consist of simple Python data structures without locking, 
> or does it contain thread locks in anyway? 


no thread locks it just walks a list and compares some fields and for those 
that match it creates objects and returns them via a new list
 
Does it actually call into Twisted
> in some way? 


not that I can see 
 
Do you know that a separate thread can't call into Twisted
> unless it uses appropriate mechanisms? 


I do now, what I don't know is what "appropriate mechanisms" is specifically 

 
It is going to be really hard for us to say what is wrong unless you can
> narrow it down to exactly where it may be blocking and provide relevant 
> code for it.
> 
> Graham
> 

any suggestions are appreciated, thanks for reading
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050506/f54eba0c/attachment.html
From grahamd at dscpl.com.au  Fri May  6 01:59:01 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May  6 01:59:03 2005
Subject: [mod_python] Using Twisted inside mod_python
Message-ID: <1115359141.5797@dscpl.user.openhosting.com>

jarrod roberson wrote ..
> On 5/5/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > Question to the original poster. Have you added sufficient debug into
> each
> > step of the internals of that call so as to know precisely when the code
> > seems to block?
> 
> 
> that call basically walks a list filters out some items and builds another
> list to return
> I have done alot of basic debugging and the problem is it just hangs apache
> and I have to kill it.
> Thus it doesn't print anything out because it doesn't shut down correctly.

Is your debug using "print" or "apache.log_error()" from mod_python. If the
latter, it should be logged to Apache log straight away and adding sufficient
debugging should be able to identify place it stops if it reliably stops in the
same place. Is there any evidence it stops at the same place? Does Apache
process go to idle, or does it look to be stuck in a tight loop and hogging
all the CPU? Depending on what platform you are using, does use of ktrace,
ptrace, strace or truss, indicate that Apache process is stuck within certain
system calls? These tools should be able to pointed at the process using its
pid. Tools on Mac OS X are good for this sort of debugging as can show where
different threads are and whether they are waiting on locks etc.

> Do you know that a separate thread can't call into Twisted
> > unless it uses appropriate mechanisms?
> 
> 
> I do now, what I don't know is what "appropriate mechanisms" is specifically

I don't use Twisted, but based on recent comp.lang.python post, there is a
call "callFromThread". Example on the new group was:

  import time 
  from twisted.internet import reactor 

  def shutdown(): 

?   ? time.sleep(3) 
?   ? print "stopping" 
? ?   reactor.callFromThread(reactor .stop) 

  reactor.callInThread(shutdown) 
  reactor.run() 

Don't know much more than that.

Graham
From jarrod.roberson at gmail.com  Fri May  6 11:59:47 2005
From: jarrod.roberson at gmail.com (jarrod roberson)
Date: Fri May  6 11:59:52 2005
Subject: [mod_python] Using Twisted inside mod_python
In-Reply-To: <1115359141.5797@dscpl.user.openhosting.com>
References: <1115359141.5797@dscpl.user.openhosting.com>
Message-ID: <2389d47305050608596fbb5319@mail.gmail.com>

On 5/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> 
> jarrod roberson wrote ..
> > On 5/5/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > Question to the original poster. Have you added sufficient debug into
> > each
> > > step of the internals of that call so as to know precisely when the 
> code
> > > seems to block?
> >
> >
> > that call basically walks a list filters out some items and builds 
> another
> > list to return
> > I have done alot of basic debugging and the problem is it just hangs 
> apache
> > and I have to kill it.
> > Thus it doesn't print anything out because it doesn't shut down 
> correctly.
> 
> Is your debug using "print" or "apache.log_error()" from mod_python. 


it is apache.log_error()

If the
> latter, it should be logged to Apache log straight away and adding 
> sufficient
> debugging should be able to identify place it stops if it reliably stops 
> in the
> same place. Is there any evidence it stops at the same place? 


yep same place req.write() 

Does Apache
> process go to idle, or does it look to be stuck in a tight loop and 
> hogging
> all the CPU? 


seems that only that req hangs, I enabled the apache server-status mod and 
it seems that
all the req threads go into a (W)ait mode when that call happens and never 
return :-(

Depending on what platform you are using, does use of ktrace,
> ptrace, strace or truss, indicate that Apache process is stuck within 
> certain
> system calls? These tools should be able to pointed at the process using 
> its
> pid. Tools on Mac OS X are good for this sort of debugging as can show 
> where
> different threads are and whether they are waiting on locks etc.


I am using OSX 10.4 so I will look into what it can do, I just got my 
PowerBook in March so that is still a learning curve.

> Do you know that a separate thread can't call into Twisted
> > > unless it uses appropriate mechanisms?
> >
> >
> > I do now, what I don't know is what "appropriate mechanisms" is 
> specifically
> 
> I don't use Twisted, but based on recent comp.lang.python post, there is a
> call "callFromThread". Example on the new group was:
> 
> import time
> from twisted.internet import reactor
> 
> def shutdown():
> 
> time.sleep(3)
> print "stopping"
> reactor.callFromThread(reactor .stop)
> 
> reactor.callInThread(shutdown)
> reactor.run()
> 
> Don't know much more than that.
> 
> Graham



Awesome, thanks for the advice I will go and try all that stuff!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050506/0c7a12cb/attachment-0001.html
From grahamd at dscpl.com.au  Sat May  7 01:11:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May  7 01:11:41 2005
Subject: [mod_python] Using Twisted inside mod_python
In-Reply-To: <2389d47305050608596fbb5319@mail.gmail.com>
References: <1115359141.5797@dscpl.user.openhosting.com>
	<2389d47305050608596fbb5319@mail.gmail.com>
Message-ID: <cff2fa4493ef00fa294d6f8ec2a9cadb@dscpl.com.au>


On 07/05/2005, at 1:59 AM, jarrod roberson wrote:
> Depending on what platform you are using, does use of ktrace,
> ptrace, strace or truss, indicate that Apache process is stuck within 
> certain
> system calls? These tools should be able to pointed at the process 
> using its
> pid. Tools on Mac OS X are good for this sort of debugging as can show 
> where
> different threads are and whether they are waiting on locks etc.
>
>  I am using OSX 10.4 so I will look into what it can do, I just got my 
> PowerBook in March so that is still a learning curve.

If you have the developer tools, look in /Developer/Applications for the
Thread Viewer application. In 10.3 it was actually in a subdirectory 
called
Performance Tools. Haven't got Tiger yet, so don't know if it has been
moved yet again like it was between 10.2 and 10.3.

The application allows you to see what function each thread is in at 
the time
of the sample. If Apache is stuck somewhere inside of req.write(), you 
should
be able to work out what actual function is causing it to be stuck. If 
you
come up with which function is it stuck in, post the stack trace here 
and we
can look at why.

Graham


From mogmios at mlug.missouri.edu  Mon May  9 03:23:03 2005
From: mogmios at mlug.missouri.edu (Michael)
Date: Mon May  9 03:22:03 2005
Subject: [mod_python] mod_python without Apache?
Message-ID: <427F0FD7.5070602@mlug.missouri.edu>

Does mod_python work with any other webservers besides Apache? I like to 
write frontend code in Apache/PHP and have it do the heavy work through 
mod_python on the backend (via XML-RPC). I was wondering if there was a 
lighter weight webserver I might be able to use mod_python with partly 
to use less resources and partly just because I like to diversify my 
platforms for security reasons. I like to run Linux, Apache, and PHP for 
the frontend and was wanting to run BSD, mod_python, and some other 
webserver on the backend.

Thanks - just curious.

--
Michael <mogmios@mlug.missouri.edu>
http://kavlon.org

From atrus at stackworks.net  Mon May  9 03:35:11 2005
From: atrus at stackworks.net (Yann Ramin)
Date: Mon May  9 03:35:12 2005
Subject: [mod_python] mod_python without Apache?
In-Reply-To: <427F0FD7.5070602@mlug.missouri.edu>
References: <427F0FD7.5070602@mlug.missouri.edu>
Message-ID: <427F12AF.90602@stackworks.net>


Nope.

But there are a multitude of Python web/RPC server frameworks (CherryPy, 
Twisted, Webware for Python, Quixote, Cymbeline, etc). You're not 
looking for a webserver, you're looking for an "application server". 
mod_python is simply to allow you to run Python code within Apache.

Of course you could run a 2 layer Apache system (frontend Apache+php 
which RPCs to backend Apache+mod_python). In which case you can use 
mod_python :)

Michael wrote:
> Does mod_python work with any other webservers besides Apache? I like to 
> write frontend code in Apache/PHP and have it do the heavy work through 
> mod_python on the backend (via XML-RPC). I was wondering if there was a 
> lighter weight webserver I might be able to use mod_python with partly 
> to use less resources and partly just because I like to diversify my 
> platforms for security reasons. I like to run Linux, Apache, and PHP for 
> the frontend and was wanting to run BSD, mod_python, and some other 
> webserver on the backend.
> 
> Thanks - just curious.
> 
> -- 
> Michael <mogmios@mlug.missouri.edu>
> http://kavlon.org
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From simonwittber at gmail.com  Mon May  9 04:44:17 2005
From: simonwittber at gmail.com (Simon Wittber)
Date: Mon May  9 04:44:18 2005
Subject: [mod_python] Outgoing apache handler
Message-ID: <4e4a11f805050901444a379c7e@mail.gmail.com>

Hello chaps.

I want to write a handler which will process outgoing xml files.

It will check for an xsl stylesheet declaration, and transform the xml
server side before sending the content to the browser.

My question is, which apache phase should I add this handler to, and
has anyone else done something similar?

Sw.

From nicolas.lehuen at gmail.com  Mon May  9 05:05:11 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon May  9 05:05:13 2005
Subject: [mod_python] Outgoing apache handler
In-Reply-To: <4e4a11f805050901444a379c7e@mail.gmail.com>
References: <4e4a11f805050901444a379c7e@mail.gmail.com>
Message-ID: <c298f2d705050902057ea6ac75@mail.gmail.com>

I have done nothing similar, but I think the way to go would be to
implement a filter. See :

http://www.modpython.org/live/current/doc-html/pyapi-filter.html

Regards,

Nicolas

2005/5/9, Simon Wittber <simonwittber@gmail.com>:
> Hello chaps.
> 
> I want to write a handler which will process outgoing xml files.
> 
> It will check for an xsl stylesheet declaration, and transform the xml
> server side before sending the content to the browser.
> 
> My question is, which apache phase should I add this handler to, and
> has anyone else done something similar?
> 
> Sw.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From bram-lists at phoenux.org  Mon May  9 11:43:50 2005
From: bram-lists at phoenux.org (Bram)
Date: Mon May  9 11:43:04 2005
Subject: [mod_python] StringField instead of Field object on file upload
	form with method="get"
Message-ID: <427F8536.3070306@phoenux.org>

Hello all,

I have a HTML form that look similar to this:

<form action="/py/upload_form" enctype="multipart/form-data" method="get">
   
    <input type="hidden" name="user_id" value="<%=user_id%>"></input>
    # PSP style template fills in user_id
   
    <li>Select your file :  <input type="file" name="filedata"></input> 
*</li>
   
    <li class="upload_button"><input type="submit" value="Upload" 
name="upload" id="upload"></input></li>

</form>

Then the upload_form.py file uses mod_python.util.FieldStorage to access 
the form values:

from mod_python import util

def handler(req):
    form_values = util.FieldStorage(req)

There are two things I am not understanding. One is that when the form 
method is set to post (as I think it should be) form_values is empty. 
But when I use "get" as I have shown above, the form_values object 
exists and has the correct data. This then leads to my second problems 
which is that when I use this method, form_values["filedata"] is 
StringField( ) object  instead of Field( ) object as excpected.

I mention both of the issues together as I suspect they are related. I 
suspect also that I a missing something simple, but I cannot put my 
finger on it.

Thanks in advance,
Bram Swenson.
From bram-lists at phoenux.org  Mon May  9 11:49:59 2005
From: bram-lists at phoenux.org (Bram)
Date: Mon May  9 11:49:16 2005
Subject: [mod_python] StringField instead of Field object on file upload
	form with method="get"
In-Reply-To: <427F8536.3070306@phoenux.org>
References: <427F8536.3070306@phoenux.org>
Message-ID: <427F86A7.4030009@phoenux.org>

Duh,

Sorry I found my own answer. req.form

I apologize for this question.

Thanks,
Bram Swenson.

Bram wrote:

> Hello all,
>
> I have a HTML form that look similar to this:
>
> <form action="/py/upload_form" enctype="multipart/form-data" 
> method="get">
>      <input type="hidden" name="user_id" value="<%=user_id%>"></input>
>    # PSP style template fills in user_id
>      <li>Select your file :  <input type="file" 
> name="filedata"></input> *</li>
>      <li class="upload_button"><input type="submit" value="Upload" 
> name="upload" id="upload"></input></li>
>
> </form>
>
> Then the upload_form.py file uses mod_python.util.FieldStorage to 
> access the form values:
>
> from mod_python import util
>
> def handler(req):
>    form_values = util.FieldStorage(req)
>
> There are two things I am not understanding. One is that when the form 
> method is set to post (as I think it should be) form_values is empty. 
> But when I use "get" as I have shown above, the form_values object 
> exists and has the correct data. This then leads to my second problems 
> which is that when I use this method, form_values["filedata"] is 
> StringField( ) object  instead of Field( ) object as excpected.
>
> I mention both of the issues together as I suspect they are related. I 
> suspect also that I a missing something simple, but I cannot put my 
> finger on it.
>
> Thanks in advance,
> Bram Swenson.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From huzaifa at hostway.com  Mon May  9 11:52:29 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon May  9 11:52:36 2005
Subject: [mod_python] IOError: Write failed, client closed connection.
Message-ID: <427F873D.1030504@hostway.com>

What is the cause of this error?  I am seeing a bunch of these in my 
application logs when the handler is doing a the req.write to write out 
the page.

Here is the full traceback:

        File "/home/orderform/www/cgi-bin/slither/Driver.py", line 182, 
in process
         self.render( output )
        File "/home/orderform/www/cgi-bin/slither/Driver.py", line 233, 
in render
         self.req.write(ss[1])
     IOError: Write failed, client closed connection.

I read in google searches that this usually happens when the user closes 
their browser before the request is written out.  That is fine but if I 
see so many is there something else that could be going wrong?

Hozi

From bram-lists at phoenux.org  Mon May  9 11:59:51 2005
From: bram-lists at phoenux.org (Bram)
Date: Mon May  9 11:59:06 2005
Subject: [mod_python] StringField instead of Field object on file upload
	form with method="get"
In-Reply-To: <427F86A7.4030009@phoenux.org>
References: <427F8536.3070306@phoenux.org> <427F86A7.4030009@phoenux.org>
Message-ID: <427F88F7.5070802@phoenux.org>


Ok. Just in case anyone else does something silly like I did here is 
what I learned. (redundant info for many, sorry ;) )

1. mod_python.publisher ingests form args into a FieldStorage( ) object 
stuffed into req.form on either form method, post or get.
2. If you use the form method post, formdata = 
mod_python.util.FieldStorage(req) will return empty.
3. If you use the form method get, formdata = 
mod_python.util.FieldStorage(req) will return with values, as will 
req.form. However, file upload form fields return as StringField objects 
that are the string version of the filename instead of the file object. Duh!
4. It is better to do it right and use post, and req.form

Thanks,
Bram Swenson.

Bram wrote:

> Duh,
>
> Sorry I found my own answer. req.form
>
> I apologize for this question.
>
> Thanks,
> Bram Swenson.
>
> Bram wrote:
>
>> Hello all,
>>
>> I have a HTML form that look similar to this:
>>
>> <form action="/py/upload_form" enctype="multipart/form-data" 
>> method="get">
>>      <input type="hidden" name="user_id" value="<%=user_id%>"></input>
>>    # PSP style template fills in user_id
>>      <li>Select your file :  <input type="file" 
>> name="filedata"></input> *</li>
>>      <li class="upload_button"><input type="submit" value="Upload" 
>> name="upload" id="upload"></input></li>
>>
>> </form>
>>
>> Then the upload_form.py file uses mod_python.util.FieldStorage to 
>> access the form values:
>>
>> from mod_python import util
>>
>> def handler(req):
>>    form_values = util.FieldStorage(req)
>>
>> There are two things I am not understanding. One is that when the 
>> form method is set to post (as I think it should be) form_values is 
>> empty. But when I use "get" as I have shown above, the form_values 
>> object exists and has the correct data. This then leads to my second 
>> problems which is that when I use this method, 
>> form_values["filedata"] is StringField( ) object  instead of Field( ) 
>> object as excpected.
>>
>> I mention both of the issues together as I suspect they are related. 
>> I suspect also that I a missing something simple, but I cannot put my 
>> finger on it.
>>
>> Thanks in advance,
>> Bram Swenson.
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>

From diana_chen23 at yahoo.com  Mon May  9 12:13:50 2005
From: diana_chen23 at yahoo.com (Dianne Chen)
Date: Mon May  9 12:14:07 2005
Subject: [mod_python] mod_python not working (Newbie-alert!)
Message-ID: <20050509161355.58865.qmail@web31407.mail.mud.yahoo.com>

Hi all-

I am new to mod_python and I am having problems
getting a simplest example to work. I have found
another earlier post in archives, but he was having
error message. I am getting no error message, but must
have simple mistake. Here are my facts:

RHEL3.0
Apache 2.0
mod_python 2.7 (as installed)
python 2.2 (as installed)
Using python2.3 installed in /usr/local/bin for
running applications

httpd.conf mods:
=====
LoadModule python_module modules/mod_python.so

<Directory /var/www/html/apachetest>
  AddHandler mod_python .py
  PythonHandler mptest
  PythonDebug On
</Directory>
=====

I have created a link in /var/www/html directory
called "apachetest" which points to a directory
/usr/local/testdir. Testdir contains a file called
mptest.py.  The contents of mptest.py are suggested
from docs:
-------
from mod_python import apache

def handler(req):
    req.send_http_header()
    req.write("Hello World!")
    return apache.OK
--------

When I use following URL, I get a file listing - it
looks like apache has no idea that a .py file needs to
be executed and not just listed:

http://my_server/apachetest/mptest.py

Can anyone provide a pointer where I have gone wrong?

Thanks!
DC



		
Yahoo! Mail
Stay connected, organized, and protected. Take the tour:
http://tour.mail.yahoo.com/mailtour.html

From fgatwork at verizon.net  Mon May  9 14:12:13 2005
From: fgatwork at verizon.net (Frank Gruman)
Date: Mon May  9 14:12:28 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
Message-ID: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>

Hello all,

I am trying to test the latest Apache dev version, and found an issue when trying to compile mod_python 3.1.4 with it.

I originally tired using Apache 2.1.5-dev (from tip on Friday, 06-May) with mod_python 3.1.4 and Python 2.4.1.  When this failed, I thought that there might have been a resolution in the current mod_python tip, so pulled the mod_python tip as of 09-May @ 13:00.  Still ran into the same errors.  

The system goes through the ./configure without any issues.  Please see the steps / output below.  It gets quite long, so please bear with me.

*  Configure *****************************************
toybox:/sources/mod_python-3.1.4 # ./configure --with-apxs=/usr/local/apache2/bin/apxs
checking for gcc... gcc
checking for C compiler default output... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for ar... ar
checking for a BSD-compatible install... /usr/bin/install -c
checking whether make sets ${MAKE}... yes
checking for main in -lm... yes
checking for gcc option to accept ANSI C... none needed
checking for an ANSI C-conforming const... yes
checking your blood pressure... a bit high, but we can proceed
configure: checking whether apxs is available...
checking for --with-apxs... /usr/local/apache2/bin/apxs executable, good
checking Apache version... 2.1.5-dev
checking for Apache libexec directory... /usr/local/apache2/modules
checking for Apache include directory... -I/usr/local/apache2/include
checking for --with-python... no
checking for python... /usr/bin/python
checking Python version... 2.4
checking Python install prefix... /usr
checking for Py_NewInterpreter in -lpython2.4... yes
checking what libraries Python was linked with... -lpython2.4   -lpthread -ldl  -lutil   -lm
checking linker flags used to link Python...
checking where Python include files are... -I/usr/include/python2.4
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating Doc/Makefile
config.status: creating test/testconf.py
config.status: creating dist/setup.py
config.status: creating dist/Makefile
toybox:/sources/mod_python-3.1.4 #
****************************************************

No warnings or errors.  Looks good.  Let's go on...

* 1st Make *****************************************
toybox:/sources/mod_python-3.1.4 # make
make[1]: Entering directory `/sources/mod_python-3.1.4/src'

Compiling for DSO.

/usr/local/apache2/bin/apxs -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4 -c mod_python.c _apachemodule.c requestobject.c tableobject.c util.c serverobject.c connobject.c filterobject.c hlist.c hlistobject.c -L/usr/lib/python2.4/config  -Xlinker -export-dynamic      -lm  -lpython2.4   -lpthread -ldl  -lutil   -lm
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o mod_python.lo mod_python.c && touch mod_python.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from mod_python.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from mod_python.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
mod_python.c: In function `python_cleanup':
mod_python.c:237: warning: passing arg 1 of `free' discards qualifiers from pointer target type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o _apachemodule.lo _apachemodule.c && touch _apachemodule.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from _apachemodule.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from _apachemodule.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o requestobject.lo requestobject.c && touch requestobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from requestobject.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from requestobject.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
requestobject.c: In function `req_get_options':
requestobject.c:357: warning: initialization discards qualifiers from pointer target type
requestobject.c:358: warning: initialization from incompatible pointer type
requestobject.c: At top level:
requestobject.c:1464: warning: initialization from incompatible pointer type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o tableobject.lo tableobject.c && touch tableobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from tableobject.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from tableobject.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
tableobject.c:1057: warning: initialization from incompatible pointer type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o util.lo util.c && touch util.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from util.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from util.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o serverobject.lo serverobject.c && touch serverobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from serverobject.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from serverobject.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
serverobject.c:335: warning: initialization from incompatible pointer type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o connobject.lo connobject.c && touch connobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from connobject.c:30:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from connobject.c:30:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o filterobject.lo filterobject.c && touch filterobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from filterobject.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from filterobject.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlist.lo hlist.c && touch hlist.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from hlist.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from hlist.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlistobject.lo hlistobject.c && touch hlistobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from hlistobject.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from hlistobject.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
ln -s ../lib/python/mod_python
ln -s ../src
make[2]: Entering directory `/sources/mod_python-3.1.4/src'
/usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h psp_parser.l
make[2]: /usr/local/bin/flex: Command not found
make[2]: *** [psp_parser.c] Error 127
make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
make[1]: *** [build] Error 2
make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
make: *** [do_dso] Error 2
toybox:/sources/mod_python-3.1.4 #
***************************************************

It appears I the system could not find psp_parser.c.  This is not in the src directory.  I looked at the SVN repository, and found it there.  Not sure why it didn't come with the initial checkout, but I manually downloaded it.  Let's try to do a MAKE again.

* 2nd Make ****************************************

toybox:/sources/mod_python-3.1.4 # make clean && make
cd src && make clean
make[1]: Entering directory `/sources/mod_python-3.1.4/src'
rm -rf  core libpython.a mod_python.so *~ .libs *.o *.slo *.lo *.la
make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
cd dist && make clean
make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
rm -rf mod_python build dist
make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
rm -f core
make[1]: Entering directory `/sources/mod_python-3.1.4/src'

Compiling for DSO.

/usr/local/apache2/bin/apxs -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4 -c mod_python.c _apachemodule.c requestobject.c tableobject.c util.c serverobject.c connobject.c filterobject.c hlist.c hlistobject.c -L/usr/lib/python2.4/config  -Xlinker -export-dynamic      -lm  -lpython2.4   -lpthread -ldl  -lutil   -lm
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o mod_python.lo mod_python.c && touch mod_python.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from mod_python.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from mod_python.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
mod_python.c: In function `python_cleanup':
mod_python.c:237: warning: passing arg 1 of `free' discards qualifiers from pointer target type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o _apachemodule.lo _apachemodule.c && touch _apachemodule.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from _apachemodule.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from _apachemodule.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o requestobject.lo requestobject.c && touch requestobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from requestobject.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from requestobject.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
requestobject.c: In function `req_get_options':
requestobject.c:357: warning: initialization discards qualifiers from pointer target type
requestobject.c:358: warning: initialization from incompatible pointer type
requestobject.c: At top level:
requestobject.c:1464: warning: initialization from incompatible pointer type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o tableobject.lo tableobject.c && touch tableobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from tableobject.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from tableobject.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
tableobject.c:1057: warning: initialization from incompatible pointer type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o util.lo util.c && touch util.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from util.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from util.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o serverobject.lo serverobject.c && touch serverobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from serverobject.c:25:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from serverobject.c:25:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
serverobject.c:335: warning: initialization from incompatible pointer type
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o connobject.lo connobject.c && touch connobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from connobject.c:30:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from connobject.c:30:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o filterobject.lo filterobject.c && touch filterobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from filterobject.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from filterobject.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlist.lo hlist.c && touch hlist.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from hlist.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from hlist.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlistobject.lo hlistobject.c && touch hlistobject.slo
In file included from /usr/include/python2.4/Python.h:8,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
                 from hlistobject.c:28:
/usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
In file included from /usr/include/sys/types.h:27,
                 from /usr/local/apache2/include/apr.h:112,
                 from /usr/local/apache2/include/ap_config.h:20,
                 from /usr/local/apache2/include/httpd.h:30,
                 from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
                 from hlistobject.c:28:
/usr/include/features.h:131:1: warning: this is the location of the previous definition
/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
ln -s ../lib/python/mod_python
make[2]: Entering directory `/sources/mod_python-3.1.4/src'
make[2]: `psp_parser.c' is up to date.
make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
/usr/bin/python setup.py build
Traceback (most recent call last):
  File "setup.py", line 138, in ?
    ModPyModule = ModPyExtension(getmp_srcdir(), [getmp_includedir(), getapache_includedir()], [getapache_libdir()])
  File "setup.py", line 80, in getapache_includedir
    return getapxs_option("INCLUDEDIR")
  File "setup.py", line 68, in getapxs_option
    APXS = getapxs_location()
  File "setup.py", line 65, in getapxs_location
    return getconfigure_option("APXS")
  File "setup.py", line 47, in getconfigure_option
    raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
AssertionError: ('unable to find @%s@ definition in %s', ('APXS', '/sources/mod_python-3.1.4/config.status'))
make[1]: *** [build] Error 1
make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
make: *** [do_dso] Error 2
toybox:/sources/mod_python-3.1.4 #
****************************************************

So - now it seems to have problems reading the value I passed for the APXS parameter.  And I can't figure out why.

Any ideas??

Regards,
Frank
From nicolas.lehuen at gmail.com  Mon May  9 14:55:39 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon May  9 14:55:42 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
Message-ID: <c298f2d705050911557abe44f4@mail.gmail.com>

Hi,

Just a wild guess, as I'm building under Win32... Did you try :

python setup.py install

?

This works under Win32.

Regards,

Nicolas

2005/5/9, Frank Gruman <fgatwork@verizon.net>:
> Hello all,
> 
> I am trying to test the latest Apache dev version, and found an issue when trying to compile mod_python 3.1.4 with it.
> 
> I originally tired using Apache 2.1.5-dev (from tip on Friday, 06-May) with mod_python 3.1.4 and Python 2.4.1.  When this failed, I thought that there might have been a resolution in the current mod_python tip, so pulled the mod_python tip as of 09-May @ 13:00.  Still ran into the same errors.
> 
> The system goes through the ./configure without any issues.  Please see the steps / output below.  It gets quite long, so please bear with me.
> 
> *  Configure *****************************************
> toybox:/sources/mod_python-3.1.4 # ./configure --with-apxs=/usr/local/apache2/bin/apxs
> checking for gcc... gcc
> checking for C compiler default output... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for ar... ar
> checking for a BSD-compatible install... /usr/bin/install -c
> checking whether make sets ${MAKE}... yes
> checking for main in -lm... yes
> checking for gcc option to accept ANSI C... none needed
> checking for an ANSI C-conforming const... yes
> checking your blood pressure... a bit high, but we can proceed
> configure: checking whether apxs is available...
> checking for --with-apxs... /usr/local/apache2/bin/apxs executable, good
> checking Apache version... 2.1.5-dev
> checking for Apache libexec directory... /usr/local/apache2/modules
> checking for Apache include directory... -I/usr/local/apache2/include
> checking for --with-python... no
> checking for python... /usr/bin/python
> checking Python version... 2.4
> checking Python install prefix... /usr
> checking for Py_NewInterpreter in -lpython2.4... yes
> checking what libraries Python was linked with... -lpython2.4   -lpthread -ldl  -lutil   -lm
> checking linker flags used to link Python...
> checking where Python include files are... -I/usr/include/python2.4
> configure: creating ./config.status
> config.status: creating Makefile
> config.status: creating src/Makefile
> config.status: creating Doc/Makefile
> config.status: creating test/testconf.py
> config.status: creating dist/setup.py
> config.status: creating dist/Makefile
> toybox:/sources/mod_python-3.1.4 #
> ****************************************************
> 
> No warnings or errors.  Looks good.  Let's go on...
> 
> * 1st Make *****************************************
> toybox:/sources/mod_python-3.1.4 # make
> make[1]: Entering directory `/sources/mod_python-3.1.4/src'
> 
> Compiling for DSO.
> 
> /usr/local/apache2/bin/apxs -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4 -c mod_python.c _apachemodule.c requestobject.c tableobject.c util.c serverobject.c connobject.c filterobject.c hlist.c hlistobject.c -L/usr/lib/python2.4/config  -Xlinker -export-dynamic      -lm  -lpython2.4   -lpthread -ldl  -lutil   -lm
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o mod_python.lo mod_python.c && touch mod_python.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from mod_python.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from mod_python.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> mod_python.c: In function `python_cleanup':
> mod_python.c:237: warning: passing arg 1 of `free' discards qualifiers from pointer target type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o _apachemodule.lo _apachemodule.c && touch _apachemodule.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from _apachemodule.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from _apachemodule.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o requestobject.lo requestobject.c && touch requestobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from requestobject.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from requestobject.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> requestobject.c: In function `req_get_options':
> requestobject.c:357: warning: initialization discards qualifiers from pointer target type
> requestobject.c:358: warning: initialization from incompatible pointer type
> requestobject.c: At top level:
> requestobject.c:1464: warning: initialization from incompatible pointer type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o tableobject.lo tableobject.c && touch tableobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from tableobject.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from tableobject.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> tableobject.c:1057: warning: initialization from incompatible pointer type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o util.lo util.c && touch util.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from util.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from util.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o serverobject.lo serverobject.c && touch serverobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from serverobject.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from serverobject.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> serverobject.c:335: warning: initialization from incompatible pointer type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o connobject.lo connobject.c && touch connobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from connobject.c:30:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from connobject.c:30:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o filterobject.lo filterobject.c && touch filterobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from filterobject.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from filterobject.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlist.lo hlist.c && touch hlist.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from hlist.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from hlist.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlistobject.lo hlistobject.c && touch hlistobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from hlistobject.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from hlistobject.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
> make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
> make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
> ln -s ../lib/python/mod_python
> ln -s ../src
> make[2]: Entering directory `/sources/mod_python-3.1.4/src'
> /usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h psp_parser.l
> make[2]: /usr/local/bin/flex: Command not found
> make[2]: *** [psp_parser.c] Error 127
> make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
> make[1]: *** [build] Error 2
> make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
> make: *** [do_dso] Error 2
> toybox:/sources/mod_python-3.1.4 #
> ***************************************************
> 
> It appears I the system could not find psp_parser.c.  This is not in the src directory.  I looked at the SVN repository, and found it there.  Not sure why it didn't come with the initial checkout, but I manually downloaded it.  Let's try to do a MAKE again.
> 
> * 2nd Make ****************************************
> 
> toybox:/sources/mod_python-3.1.4 # make clean && make
> cd src && make clean
> make[1]: Entering directory `/sources/mod_python-3.1.4/src'
> rm -rf  core libpython.a mod_python.so *~ .libs *.o *.slo *.lo *.la
> make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
> cd dist && make clean
> make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
> rm -rf mod_python build dist
> make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
> rm -f core
> make[1]: Entering directory `/sources/mod_python-3.1.4/src'
> 
> Compiling for DSO.
> 
> /usr/local/apache2/bin/apxs -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4 -c mod_python.c _apachemodule.c requestobject.c tableobject.c util.c serverobject.c connobject.c filterobject.c hlist.c hlistobject.c -L/usr/lib/python2.4/config  -Xlinker -export-dynamic      -lm  -lpython2.4   -lpthread -ldl  -lutil   -lm
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o mod_python.lo mod_python.c && touch mod_python.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from mod_python.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from mod_python.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> mod_python.c: In function `python_cleanup':
> mod_python.c:237: warning: passing arg 1 of `free' discards qualifiers from pointer target type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o _apachemodule.lo _apachemodule.c && touch _apachemodule.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from _apachemodule.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from _apachemodule.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o requestobject.lo requestobject.c && touch requestobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from requestobject.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from requestobject.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> requestobject.c: In function `req_get_options':
> requestobject.c:357: warning: initialization discards qualifiers from pointer target type
> requestobject.c:358: warning: initialization from incompatible pointer type
> requestobject.c: At top level:
> requestobject.c:1464: warning: initialization from incompatible pointer type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o tableobject.lo tableobject.c && touch tableobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from tableobject.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from tableobject.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> tableobject.c:1057: warning: initialization from incompatible pointer type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o util.lo util.c && touch util.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from util.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from util.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o serverobject.lo serverobject.c && touch serverobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from serverobject.c:25:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from serverobject.c:25:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> serverobject.c:335: warning: initialization from incompatible pointer type
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o connobject.lo connobject.c && touch connobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from connobject.c:30:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from connobject.c:30:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o filterobject.lo filterobject.c && touch filterobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from filterobject.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from filterobject.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlist.lo hlist.c && touch hlist.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from hlist.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from hlist.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=compile gcc -prefer-pic   -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -I/sources/httpd-2.1.x/srclib/pcre -g -O2 -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include  -I/sources/mod_python-3.1.4/src/include -I/usr/local/apache2/include -I/usr/include/python2.4  -c -o hlistobject.lo hlistobject.c && touch hlistobject.slo
> In file included from /usr/include/python2.4/Python.h:8,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:57,
>                  from hlistobject.c:28:
> /usr/include/python2.4/pyconfig.h:835:1: warning: "_POSIX_C_SOURCE" redefined
> In file included from /usr/include/sys/types.h:27,
>                  from /usr/local/apache2/include/apr.h:112,
>                  from /usr/local/apache2/include/ap_config.h:20,
>                  from /usr/local/apache2/include/httpd.h:30,
>                  from /sources/mod_python-3.1.4/src/include/mod_python.h:32,
>                  from hlistobject.c:28:
> /usr/include/features.h:131:1: warning: this is the location of the previous definition
> /usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
> make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
> make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
> ln -s ../lib/python/mod_python
> make[2]: Entering directory `/sources/mod_python-3.1.4/src'
> make[2]: `psp_parser.c' is up to date.
> make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
> /usr/bin/python setup.py build
> Traceback (most recent call last):
>   File "setup.py", line 138, in ?
>     ModPyModule = ModPyExtension(getmp_srcdir(), [getmp_includedir(), getapache_includedir()], [getapache_libdir()])
>   File "setup.py", line 80, in getapache_includedir
>     return getapxs_option("INCLUDEDIR")
>   File "setup.py", line 68, in getapxs_option
>     APXS = getapxs_location()
>   File "setup.py", line 65, in getapxs_location
>     return getconfigure_option("APXS")
>   File "setup.py", line 47, in getconfigure_option
>     raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
> AssertionError: ('unable to find @%s@ definition in %s', ('APXS', '/sources/mod_python-3.1.4/config.status'))
> make[1]: *** [build] Error 1
> make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
> make: *** [do_dso] Error 2
> toybox:/sources/mod_python-3.1.4 #
> ****************************************************
> 
> So - now it seems to have problems reading the value I passed for the APXS parameter.  And I can't figure out why.
> 
> Any ideas??
> 
> Regards,
> Frank
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From fgatwork at verizon.net  Mon May  9 15:57:29 2005
From: fgatwork at verizon.net (Frank Gruman)
Date: Mon May  9 15:57:37 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <c298f2d705050911557abe44f4@mail.gmail.com>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
	<c298f2d705050911557abe44f4@mail.gmail.com>
Message-ID: <427FC0A9.2050007@verizon.net>

Nicolas,

The script you are running is automatically included as part of the make 
process on Linux.

But I am willing to try anything...

Running the script with the method you specify returns the same ending 
error code that I found earlier (about the APXS definition not found).  
Thanks for the idea, though.

Anyone have any idea why the setup.py script is not able to pass the 
APXS value from config.status back to setup.py (getconfigure_option 
function).  I have verified that there is a value assigned in 
config.status (/usr/local/apache2/bin/apxs).

Oh - also realized I didn't provide OS - SLES 9.

Regards,
Frank

Nicolas Lehuen wrote:

>Hi,
>
>Just a wild guess, as I'm building under Win32... Did you try :
>
>python setup.py install
>
>?
>
>This works under Win32.
>
>Regards,
>
>Nicolas
>
>2005/5/9, Frank Gruman <fgatwork@verizon.net>:
>  
>
>>Hello all,
>>
>>I am trying to test the latest Apache dev version, and found an issue when trying to compile mod_python 3.1.4 with it.
>>
>>I originally tired using Apache 2.1.5-dev (from tip on Friday, 06-May) with mod_python 3.1.4 and Python 2.4.1.  When this failed, I thought that there might have been a resolution in the current mod_python tip, so pulled the mod_python tip as of 09-May @ 13:00.  Still ran into the same errors.
>>
>>The system goes through the ./configure without any issues.  Please see the steps / output below.  It gets quite long, so please bear with me.
>>
>>*  Configure *****************************************
>>toybox:/sources/mod_python-3.1.4 # ./configure --with-apxs=/usr/local/apache2/bin/apxs
>>checking for gcc... gcc
>>checking for C compiler default output... a.out
>>checking whether the C compiler works... yes
>>checking whether we are cross compiling... no
>>checking for suffix of executables...
>>checking for suffix of object files... o
>>checking whether we are using the GNU C compiler... yes
>>checking whether gcc accepts -g... yes
>>checking for ar... ar
>>checking for a BSD-compatible install... /usr/bin/install -c
>>checking whether make sets ${MAKE}... yes
>>checking for main in -lm... yes
>>checking for gcc option to accept ANSI C... none needed
>>checking for an ANSI C-conforming const... yes
>>checking your blood pressure... a bit high, but we can proceed
>>configure: checking whether apxs is available...
>>checking for --with-apxs... /usr/local/apache2/bin/apxs executable, good
>>checking Apache version... 2.1.5-dev
>>checking for Apache libexec directory... /usr/local/apache2/modules
>>checking for Apache include directory... -I/usr/local/apache2/include
>>checking for --with-python... no
>>checking for python... /usr/bin/python
>>checking Python version... 2.4
>>checking Python install prefix... /usr
>>checking for Py_NewInterpreter in -lpython2.4... yes
>>checking what libraries Python was linked with... -lpython2.4   -lpthread -ldl  -lutil   -lm
>>checking linker flags used to link Python...
>>checking where Python include files are... -I/usr/include/python2.4
>>configure: creating ./config.status
>>config.status: creating Makefile
>>config.status: creating src/Makefile
>>config.status: creating Doc/Makefile
>>config.status: creating test/testconf.py
>>config.status: creating dist/setup.py
>>config.status: creating dist/Makefile
>>toybox:/sources/mod_python-3.1.4 #
>>****************************************************
>>
>>No warnings or errors.  Looks good.  Let's go on...
>>
>>* 1st Make *****************************************
>>toybox:/sources/mod_python-3.1.4 # make
>>make[1]: Entering directory `/sources/mod_python-3.1.4/src'
>>
>>Compiling for DSO.
>>
>>    
>>
<snipped log as it was getting to big for the message board>

>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
>>ln -s ../lib/python/mod_python
>>ln -s ../src
>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
>>/usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h psp_parser.l
>>make[2]: /usr/local/bin/flex: Command not found
>>make[2]: *** [psp_parser.c] Error 127
>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
>>make[1]: *** [build] Error 2
>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>>make: *** [do_dso] Error 2
>>toybox:/sources/mod_python-3.1.4 #
>>***************************************************
>>
>>It appears I the system could not find psp_parser.c.  This is not in the src directory.  I looked at the SVN repository, and found it there.  Not sure why it didn't come with the initial checkout, but I manually downloaded it.  Let's try to do a MAKE again.
>>
>>* 2nd Make ****************************************
>>
>>toybox:/sources/mod_python-3.1.4 # make clean && make
>>
>>    
>>
<snipped log as it was getting to big for the message board>


>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
>>ln -s ../lib/python/mod_python
>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
>>make[2]: `psp_parser.c' is up to date.
>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
>>/usr/bin/python setup.py build
>>Traceback (most recent call last):
>>  File "setup.py", line 138, in ?
>>    ModPyModule = ModPyExtension(getmp_srcdir(), [getmp_includedir(), getapache_includedir()], [getapache_libdir()])
>>  File "setup.py", line 80, in getapache_includedir
>>    return getapxs_option("INCLUDEDIR")
>>  File "setup.py", line 68, in getapxs_option
>>    APXS = getapxs_location()
>>  File "setup.py", line 65, in getapxs_location
>>    return getconfigure_option("APXS")
>>  File "setup.py", line 47, in getconfigure_option
>>    raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
>>AssertionError: ('unable to find @%s@ definition in %s', ('APXS', '/sources/mod_python-3.1.4/config.status'))
>>make[1]: *** [build] Error 1
>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>>make: *** [do_dso] Error 2
>>toybox:/sources/mod_python-3.1.4 #
>>****************************************************
>>
>>So - now it seems to have problems reading the value I passed for the APXS parameter.  And I can't figure out why.
>>
>>Any ideas??
>>
>>Regards,
>>Frank
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>    
>>
>
>  
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050509/4fe9ede1/attachment.html
From grisha at modpython.org  Mon May  9 16:59:30 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Mon May  9 16:59:41 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
Message-ID: <20050509164914.P87358@grisha.dyndns.org>



On Mon, 9 May 2005, Frank Gruman wrote:

>
> I originally tired using Apache 2.1.5-dev (from tip on Friday, 06-May)

Technically speaking 3.1.4 is developed against 2.0 apache, but assuming 
that the tip said it worked, perhaps that isn't the problem...

> /usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h psp_parser.l
> make[2]: /usr/local/bin/flex: Command not found
> make[2]: *** [psp_parser.c] Error 127
> make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
> make[1]: *** [build] Error 2
> make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
> make: *** [do_dso] Error 2

First thing I'd make sure of is that you actually have flex and that you 
have the right flex version, it needs to be at least 2.5.31, 2.5.4 won't 
cut it:

$ /usr/local/bin/flex  --version
flex 2.5.31

...but you're right, a pre-generated psp_parser.c file should already be 
distributed. Basically you have two options - get flex, or figure out why 
make decided to regenerate psp_parser.c - something with the file dates, 
no doubt.

HTH,

Grisha


From jg.lists at sympatico.ca  Mon May  9 17:22:20 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon May  9 17:20:17 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <427FC0A9.2050007@verizon.net>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>	<c298f2d705050911557abe44f4@mail.gmail.com>
	<427FC0A9.2050007@verizon.net>
Message-ID: <427FD48C.1040709@sympatico.ca>

Frank,

Frank Gruman wrote:
> Nicolas,
> 
> The script you are running is automatically included as part of the make 
> process on Linux.
> 
> But I am willing to try anything...

OK, here's something. :)

> Running the script with the method you specify returns the same ending 
> error code that I found earlier (about the APXS definition not found).  
> Thanks for the idea, though.
> 
> Anyone have any idea why the setup.py script is not able to pass the 
> APXS value from config.status back to setup.py (getconfigure_option 
> function).  I have verified that there is a value assigned in 
> config.status (/usr/local/apache2/bin/apxs).

I think there is a problem with the regular expression which searches 
for APXS in config.status. (I'm getting the same error on Debian as you 
are on SLES).

Setup.py is using the following re:
r = re.compile('s, @%s@, (?P<OPTION_STRING>[^,]+), ' % (option_name))

While my config.status output looks like this:
s,@APXS@,/usr/bin/apxs2,;t t

Notice the lack of spaces after the commas? I wonder if the output of 
configure is somehow platform dependant, which is why Nicolas has not 
seen a problem?

I've been trying to tweak the re to make it work, but so far it's mainly 
been an exercise in banging head against the monitor. (Somebody really 
should come up with a padded monitor - they'd make a fortune). I both 
love and hate regular expressions at the same time.

Anyway, as a quick fix you could apply the following patch to 
setup.py.in, and do the configure + make cycle again.

Index: setup.py.in
===================================================================
--- setup.py.in	(revision 169349)
+++ setup.py.in	(working copy)
@@ -62,7 +62,8 @@

  def getapxs_location():
      """finds the location of apxs from the config.status file"""
-    return getconfigure_option("APXS")
+    #return getconfigure_option("APXS")
+    return '/usr/local/apache2/bin/apxs'

  def getapxs_option(option):
      APXS = getapxs_location()


Also, I don't know if you resolved the psp_flex issue, but the 
src/Makefile.in hard codes LEX=/usr/local/bin/flex, which fails on my 
system since flex is located in /usr/bin. A quick edit of the Makefile 
took care of that for me.

If your luck is anything like mine the next thing you'll have to deal 
with is the linker not finding libapr.

Personally, I've avoided these issues by using the setup.py included 
with Debian, even when compiling from the svn trunk.

Regards,
Jim


> Oh - also realized I didn't provide OS - SLES 9.
> 
> Regards,
> Frank
> 
> Nicolas Lehuen wrote:
> 
>>Hi,
>>
>>Just a wild guess, as I'm building under Win32... Did you try :
>>
>>python setup.py install
>>
>>?
>>
>>This works under Win32.
>>
>>Regards,
>>
>>Nicolas
>>
>>2005/5/9, Frank Gruman <fgatwork@verizon.net>:
>>  
>>
>>>Hello all,
>>>
>>>I am trying to test the latest Apache dev version, and found an issue when trying to compile mod_python 3.1.4 with it.
>>>
>>>I originally tired using Apache 2.1.5-dev (from tip on Friday, 06-May) with mod_python 3.1.4 and Python 2.4.1.  When this failed, I thought that there might have been a resolution in the current mod_python tip, so pulled the mod_python tip as of 09-May @ 13:00.  Still ran into the same errors.
>>>
>>>The system goes through the ./configure without any issues.  Please see the steps / output below.  It gets quite long, so please bear with me.
>>>
>>>*  Configure *****************************************
>>>toybox:/sources/mod_python-3.1.4 # ./configure --with-apxs=/usr/local/apache2/bin/apxs
>>>checking for gcc... gcc
>>>checking for C compiler default output... a.out
>>>checking whether the C compiler works... yes
>>>checking whether we are cross compiling... no
>>>checking for suffix of executables...
>>>checking for suffix of object files... o
>>>checking whether we are using the GNU C compiler... yes
>>>checking whether gcc accepts -g... yes
>>>checking for ar... ar
>>>checking for a BSD-compatible install... /usr/bin/install -c
>>>checking whether make sets ${MAKE}... yes
>>>checking for main in -lm... yes
>>>checking for gcc option to accept ANSI C... none needed
>>>checking for an ANSI C-conforming const... yes
>>>checking your blood pressure... a bit high, but we can proceed
>>>configure: checking whether apxs is available...
>>>checking for --with-apxs... /usr/local/apache2/bin/apxs executable, good
>>>checking Apache version... 2.1.5-dev
>>>checking for Apache libexec directory... /usr/local/apache2/modules
>>>checking for Apache include directory... -I/usr/local/apache2/include
>>>checking for --with-python... no
>>>checking for python... /usr/bin/python
>>>checking Python version... 2.4
>>>checking Python install prefix... /usr
>>>checking for Py_NewInterpreter in -lpython2.4... yes
>>>checking what libraries Python was linked with... -lpython2.4   -lpthread -ldl  -lutil   -lm
>>>checking linker flags used to link Python...
>>>checking where Python include files are... -I/usr/include/python2.4
>>>configure: creating ./config.status
>>>config.status: creating Makefile
>>>config.status: creating src/Makefile
>>>config.status: creating Doc/Makefile
>>>config.status: creating test/testconf.py
>>>config.status: creating dist/setup.py
>>>config.status: creating dist/Makefile
>>>toybox:/sources/mod_python-3.1.4 #
>>>****************************************************
>>>
>>>No warnings or errors.  Looks good.  Let's go on...
>>>
>>>* 1st Make *****************************************
>>>toybox:/sources/mod_python-3.1.4 # make
>>>make[1]: Entering directory `/sources/mod_python-3.1.4/src'
>>>
>>>Compiling for DSO.
>>>
>>>    
>>>
> <snipped log as it was getting to big for the message board>
> 
>>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
>>>ln -s ../lib/python/mod_python
>>>ln -s ../src
>>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
>>>/usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h psp_parser.l
>>>make[2]: /usr/local/bin/flex: Command not found
>>>make[2]: *** [psp_parser.c] Error 127
>>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>make[1]: *** [build] Error 2
>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>>>make: *** [do_dso] Error 2
>>>toybox:/sources/mod_python-3.1.4 #
>>>***************************************************
>>>
>>>It appears I the system could not find psp_parser.c.  This is not in the src directory.  I looked at the SVN repository, and found it there.  Not sure why it didn't come with the initial checkout, but I manually downloaded it.  Let's try to do a MAKE again.
>>>
>>>* 2nd Make ****************************************
>>>
>>>toybox:/sources/mod_python-3.1.4 # make clean && make
>>>
>>>    
>>>
> <snipped log as it was getting to big for the message board>
> 
> 
>>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
>>>ln -s ../lib/python/mod_python
>>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
>>>make[2]: `psp_parser.c' is up to date.
>>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>/usr/bin/python setup.py build
>>>Traceback (most recent call last):
>>>  File "setup.py", line 138, in ?
>>>    ModPyModule = ModPyExtension(getmp_srcdir(), [getmp_includedir(), getapache_includedir()], [getapache_libdir()])
>>>  File "setup.py", line 80, in getapache_includedir
>>>    return getapxs_option("INCLUDEDIR")
>>>  File "setup.py", line 68, in getapxs_option
>>>    APXS = getapxs_location()
>>>  File "setup.py", line 65, in getapxs_location
>>>    return getconfigure_option("APXS")
>>>  File "setup.py", line 47, in getconfigure_option
>>>    raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
>>>AssertionError: ('unable to find @%s@ definition in %s', ('APXS', '/sources/mod_python-3.1.4/config.status'))
>>>make[1]: *** [build] Error 1
>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>>>make: *** [do_dso] Error 2
>>>toybox:/sources/mod_python-3.1.4 #
>>>****************************************************
>>>
>>>So - now it seems to have problems reading the value I passed for the APXS parameter.  And I can't figure out why.
>>>
>>>Any ideas??
>>>
>>>Regards,
>>>Frank
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>    
>>>
>>
>>  
>>
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From calvin.chen at gmail.com  Mon May  9 17:20:34 2005
From: calvin.chen at gmail.com (Calvin Chen)
Date: Mon May  9 17:21:40 2005
Subject: [mod_python] req.sendfile(): specifying a name for the file sent?
Message-ID: <24f076c00505091420144a610c@mail.gmail.com>

Hello,

Right now, when I use req.sendfile(), the file download prompt comes
up and asks me if I want to download a file. So far so good. The
contents of this file is exactly how I wanted it to be. So far so
good.

I have this code in example.py:

---------
def index(req):
   req.content_type='text/file'
   req.sendfile('PATH_TO_FILE/name.txt')
---------

When the file is sent to the user, the file's default name is the URI
(ie 'example'), and I'd like to specify the filename, for example,
'name.txt' instead of 'example.'

Any ideas?

Thanks,
Calvin

From nicolas.lehuen at gmail.com  Mon May  9 17:26:37 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon May  9 17:26:40 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <427FD48C.1040709@sympatico.ca>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
	<c298f2d705050911557abe44f4@mail.gmail.com>
	<427FC0A9.2050007@verizon.net> <427FD48C.1040709@sympatico.ca>
Message-ID: <c298f2d70505091426620aee7@mail.gmail.com>

Did you try :

r = re.compile(r's,\s*@%s@,\s*(?P<OPTION_STRING>[^,]+),\s*' % (option_name))

Notice the "r" just before the quote to toggle the regular expression
string mode.

Regards,
Nicolas

2005/5/9, Jim Gallacher <jg.lists@sympatico.ca>:
> Frank,
> 
> Frank Gruman wrote:
> > Nicolas,
> >
> > The script you are running is automatically included as part of the make
> > process on Linux.
> >
> > But I am willing to try anything...
> 
> OK, here's something. :)
> 
> > Running the script with the method you specify returns the same ending
> > error code that I found earlier (about the APXS definition not found).
> > Thanks for the idea, though.
> >
> > Anyone have any idea why the setup.py script is not able to pass the
> > APXS value from config.status back to setup.py (getconfigure_option
> > function).  I have verified that there is a value assigned in
> > config.status (/usr/local/apache2/bin/apxs).
> 
> I think there is a problem with the regular expression which searches
> for APXS in config.status. (I'm getting the same error on Debian as you
> are on SLES).
> 
> Setup.py is using the following re:
> r = re.compile('s, @%s@, (?P<OPTION_STRING>[^,]+), ' % (option_name))
> 
> While my config.status output looks like this:
> s,@APXS@,/usr/bin/apxs2,;t t
> 
> Notice the lack of spaces after the commas? I wonder if the output of
> configure is somehow platform dependant, which is why Nicolas has not
> seen a problem?
> 
> I've been trying to tweak the re to make it work, but so far it's mainly
> been an exercise in banging head against the monitor. (Somebody really
> should come up with a padded monitor - they'd make a fortune). I both
> love and hate regular expressions at the same time.
> 
> Anyway, as a quick fix you could apply the following patch to
> setup.py.in, and do the configure + make cycle again.
> 
> Index: setup.py.in
> ===================================================================
> --- setup.py.in (revision 169349)
> +++ setup.py.in (working copy)
> @@ -62,7 +62,8 @@
> 
>   def getapxs_location():
>       """finds the location of apxs from the config.status file"""
> -    return getconfigure_option("APXS")
> +    #return getconfigure_option("APXS")
> +    return '/usr/local/apache2/bin/apxs'
> 
>   def getapxs_option(option):
>       APXS = getapxs_location()
> 
> Also, I don't know if you resolved the psp_flex issue, but the
> src/Makefile.in hard codes LEX=/usr/local/bin/flex, which fails on my
> system since flex is located in /usr/bin. A quick edit of the Makefile
> took care of that for me.
> 
> If your luck is anything like mine the next thing you'll have to deal
> with is the linker not finding libapr.
> 
> Personally, I've avoided these issues by using the setup.py included
> with Debian, even when compiling from the svn trunk.
> 
> Regards,
> Jim
> 
> 
> > Oh - also realized I didn't provide OS - SLES 9.
> >
> > Regards,
> > Frank
> >
> > Nicolas Lehuen wrote:
> >
> >>Hi,
> >>
> >>Just a wild guess, as I'm building under Win32... Did you try :
> >>
> >>python setup.py install
> >>
> >>?
> >>
> >>This works under Win32.
> >>
> >>Regards,
> >>
> >>Nicolas
> >>
> >>2005/5/9, Frank Gruman <fgatwork@verizon.net>:
> >>
> >>
> >>>Hello all,
> >>>
> >>>I am trying to test the latest Apache dev version, and found an issue when trying to compile mod_python 3.1.4 with it.
> >>>
> >>>I originally tired using Apache 2.1.5-dev (from tip on Friday, 06-May) with mod_python 3.1.4 and Python 2.4.1.  When this failed, I thought that there might have been a resolution in the current mod_python tip, so pulled the mod_python tip as of 09-May @ 13:00.  Still ran into the same errors.
> >>>
> >>>The system goes through the ./configure without any issues.  Please see the steps / output below.  It gets quite long, so please bear with me.
> >>>
> >>>*  Configure *****************************************
> >>>toybox:/sources/mod_python-3.1.4 # ./configure --with-apxs=/usr/local/apache2/bin/apxs
> >>>checking for gcc... gcc
> >>>checking for C compiler default output... a.out
> >>>checking whether the C compiler works... yes
> >>>checking whether we are cross compiling... no
> >>>checking for suffix of executables...
> >>>checking for suffix of object files... o
> >>>checking whether we are using the GNU C compiler... yes
> >>>checking whether gcc accepts -g... yes
> >>>checking for ar... ar
> >>>checking for a BSD-compatible install... /usr/bin/install -c
> >>>checking whether make sets ${MAKE}... yes
> >>>checking for main in -lm... yes
> >>>checking for gcc option to accept ANSI C... none needed
> >>>checking for an ANSI C-conforming const... yes
> >>>checking your blood pressure... a bit high, but we can proceed
> >>>configure: checking whether apxs is available...
> >>>checking for --with-apxs... /usr/local/apache2/bin/apxs executable, good
> >>>checking Apache version... 2.1.5-dev
> >>>checking for Apache libexec directory... /usr/local/apache2/modules
> >>>checking for Apache include directory... -I/usr/local/apache2/include
> >>>checking for --with-python... no
> >>>checking for python... /usr/bin/python
> >>>checking Python version... 2.4
> >>>checking Python install prefix... /usr
> >>>checking for Py_NewInterpreter in -lpython2.4... yes
> >>>checking what libraries Python was linked with... -lpython2.4   -lpthread -ldl  -lutil   -lm
> >>>checking linker flags used to link Python...
> >>>checking where Python include files are... -I/usr/include/python2.4
> >>>configure: creating ./config.status
> >>>config.status: creating Makefile
> >>>config.status: creating src/Makefile
> >>>config.status: creating Doc/Makefile
> >>>config.status: creating test/testconf.py
> >>>config.status: creating dist/setup.py
> >>>config.status: creating dist/Makefile
> >>>toybox:/sources/mod_python-3.1.4 #
> >>>****************************************************
> >>>
> >>>No warnings or errors.  Looks good.  Let's go on...
> >>>
> >>>* 1st Make *****************************************
> >>>toybox:/sources/mod_python-3.1.4 # make
> >>>make[1]: Entering directory `/sources/mod_python-3.1.4/src'
> >>>
> >>>Compiling for DSO.
> >>>
> >>>
> >>>
> > <snipped log as it was getting to big for the message board>
> >
> >>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
> >>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
> >>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
> >>>ln -s ../lib/python/mod_python
> >>>ln -s ../src
> >>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
> >>>/usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h psp_parser.l
> >>>make[2]: /usr/local/bin/flex: Command not found
> >>>make[2]: *** [psp_parser.c] Error 127
> >>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
> >>>make[1]: *** [build] Error 2
> >>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
> >>>make: *** [do_dso] Error 2
> >>>toybox:/sources/mod_python-3.1.4 #
> >>>***************************************************
> >>>
> >>>It appears I the system could not find psp_parser.c.  This is not in the src directory.  I looked at the SVN repository, and found it there.  Not sure why it didn't come with the initial checkout, but I manually downloaded it.  Let's try to do a MAKE again.
> >>>
> >>>* 2nd Make ****************************************
> >>>
> >>>toybox:/sources/mod_python-3.1.4 # make clean && make
> >>>
> >>>
> >>>
> > <snipped log as it was getting to big for the message board>
> >
> >
> >>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
> >>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
> >>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
> >>>ln -s ../lib/python/mod_python
> >>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
> >>>make[2]: `psp_parser.c' is up to date.
> >>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
> >>>/usr/bin/python setup.py build
> >>>Traceback (most recent call last):
> >>>  File "setup.py", line 138, in ?
> >>>    ModPyModule = ModPyExtension(getmp_srcdir(), [getmp_includedir(), getapache_includedir()], [getapache_libdir()])
> >>>  File "setup.py", line 80, in getapache_includedir
> >>>    return getapxs_option("INCLUDEDIR")
> >>>  File "setup.py", line 68, in getapxs_option
> >>>    APXS = getapxs_location()
> >>>  File "setup.py", line 65, in getapxs_location
> >>>    return getconfigure_option("APXS")
> >>>  File "setup.py", line 47, in getconfigure_option
> >>>    raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
> >>>AssertionError: ('unable to find @%s@ definition in %s', ('APXS', '/sources/mod_python-3.1.4/config.status'))
> >>>make[1]: *** [build] Error 1
> >>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
> >>>make: *** [do_dso] Error 2
> >>>toybox:/sources/mod_python-3.1.4 #
> >>>****************************************************
> >>>
> >>>So - now it seems to have problems reading the value I passed for the APXS parameter.  And I can't figure out why.
> >>>
> >>>Any ideas??
> >>>
> >>>Regards,
> >>>Frank
> >>>_______________________________________________
> >>>Mod_python mailing list
> >>>Mod_python@modpython.org
> >>>http://mailman.modpython.org/mailman/listinfo/mod_python
> >>>
> >>>
> >>>
> >>
> >>
> >>
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>

From b.hughes at factorymotorparts.com  Mon May  9 17:37:21 2005
From: b.hughes at factorymotorparts.com (Bert Hughes)
Date: Mon May  9 17:33:37 2005
Subject: [mod_python] Compiling mod-python troubles
Message-ID: <427FD811.10508@factorymotorparts.com>

More or less mindlessly, I would try modifying

r = re.compile('s, @%s@, (?P<OPTION_STRING>[^,]+), ' % (option_name))

to

r = re.compile(r's, @%s@, (?P<OPTION_STRING>[^,]+), ' % (option_name))
                     
a 'raw' string.


Bert Hughes


From huzaifa at hostway.com  Mon May  9 17:41:20 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Mon May  9 17:41:30 2005
Subject: [mod_python] IOError: Write failed, client closed connection.
In-Reply-To: <427F873D.1030504@hostway.com>
References: <427F873D.1030504@hostway.com>
Message-ID: <427FD900.6070307@hostway.com>

Does anyone has any ideas on this?

Huzaifa Tapal wrote:

> What is the cause of this error?  I am seeing a bunch of these in my 
> application logs when the handler is doing a the req.write to write 
> out the page.
>
> Here is the full traceback:
>
>        File "/home/orderform/www/cgi-bin/slither/Driver.py", line 182, 
> in process
>         self.render( output )
>        File "/home/orderform/www/cgi-bin/slither/Driver.py", line 233, 
> in render
>         self.req.write(ss[1])
>     IOError: Write failed, client closed connection.
>
> I read in google searches that this usually happens when the user 
> closes their browser before the request is written out.  That is fine 
> but if I see so many is there something else that could be going wrong?
>
> Hozi
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From grahamd at dscpl.com.au  Mon May  9 18:03:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May  9 18:03:34 2005
Subject: [mod_python] mod_python not working (Newbie-alert!)
Message-ID: <1115676212.10942@dscpl.user.openhosting.com>

You are following the instructions for mod_python 3.1.X when you
only have mod_python 2.7.X installed.

Read:

  http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html

It will explain some of the differences.

Graham

Dianne Chen wrote ..
> Hi all-
> 
> I am new to mod_python and I am having problems
> getting a simplest example to work. I have found
> another earlier post in archives, but he was having
> error message. I am getting no error message, but must
> have simple mistake. Here are my facts:
> 
> RHEL3.0
> Apache 2.0
> mod_python 2.7 (as installed)
> python 2.2 (as installed)
> Using python2.3 installed in /usr/local/bin for
> running applications
> 
> httpd.conf mods:
> =====
> LoadModule python_module modules/mod_python.so
> 
> <Directory /var/www/html/apachetest>
>   AddHandler mod_python .py
>   PythonHandler mptest
>   PythonDebug On
> </Directory>
> =====
> 
> I have created a link in /var/www/html directory
> called "apachetest" which points to a directory
> /usr/local/testdir. Testdir contains a file called
> mptest.py.  The contents of mptest.py are suggested
> from docs:
> -------
> from mod_python import apache
> 
> def handler(req):
>     req.send_http_header()
>     req.write("Hello World!")
>     return apache.OK
> --------
> 
> When I use following URL, I get a file listing - it
> looks like apache has no idea that a .py file needs to
> be executed and not just listed:
> 
> http://my_server/apachetest/mptest.py
> 
> Can anyone provide a pointer where I have gone wrong?
> 
> Thanks!
> DC
> 
> 
> 
> 		
> Yahoo! Mail
> Stay connected, organized, and protected. Take the tour:
> http://tour.mail.yahoo.com/mailtour.html
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From davidbadawi at yahoo.com  Mon May  9 19:10:10 2005
From: davidbadawi at yahoo.com (David Y. Badawi, M.D.)
Date: Mon May  9 19:10:13 2005
Subject: [mod_python] req.sendfile(): specifying a name for the file sent?
In-Reply-To: 6667
Message-ID: <20050509231010.91401.qmail@web51007.mail.yahoo.com>

I had a similar issue with mod_python some time back where I had two requirements:
-a txt file had to be generated
-a dynamically generated title for the document (to make saving the document more organized)
 
I created a handler for handling any URIs ending with '.txt' as opposed to .py or .psp to write out the request. Recall that mod_python doesn't care as much about the file name as it does for the suffix of the file.
 
My way is pretty hacky-i'd be curious to see what the pyGurus have to suggest.
 
David

Calvin Chen <calvin.chen@gmail.com> wrote:
Hello,

Right now, when I use req.sendfile(), the file download prompt comes
up and asks me if I want to download a file. So far so good. The
contents of this file is exactly how I wanted it to be. So far so
good.

I have this code in example.py:

---------
def index(req):
req.content_type='text/file'
req.sendfile('PATH_TO_FILE/name.txt')
---------

When the file is sent to the user, the file's default name is the URI
(ie 'example'), and I'd like to specify the filename, for example,
'name.txt' instead of 'example.'

Any ideas?

Thanks,
Calvin

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python


David Y. Badawi, M.D.
Northwest Eye Physicians
1588 North Arlington Heights Road
Arlington Heights, Illinois 60004

Phone: 847 392 9220
Fax:     847 392 9252
email:  davidbadawi@yahoo.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050509/3ad194e2/attachment.html
From modpython at holovaty.com  Mon May  9 19:18:42 2005
From: modpython at holovaty.com (Adrian Holovaty)
Date: Mon May  9 19:21:46 2005
Subject: [mod_python] req.sendfile(): specifying a name for the file sent?
In-Reply-To: <24f076c00505091420144a610c@mail.gmail.com>
References: <24f076c00505091420144a610c@mail.gmail.com>
Message-ID: <200505091818.42305.modpython@holovaty.com>

Calvin Chen wrote:
> Right now, when I use req.sendfile(), the file download prompt comes
> up and asks me if I want to download a file. So far so good. The
> contents of this file is exactly how I wanted it to be. So far so
> good.

You'll want to send out the "Content-Disposition" header. Set its value to 
this:

"attachment; filename=name.txt"

...where "name.txt" is whatever you want the filename to be.

In your example, the code would be:

def index(req):
    req.content_type='text/file'
    req.headers_out['Content-Disposition'] = 'attachment; filename=name.txt'
    req.sendfile('PATH_TO_FILE/name.txt')

Hope this helps!

Adrian

--
http://www.holovaty.com/
From jg.lists at sympatico.ca  Tue May 10 01:09:15 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 01:07:14 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <c298f2d70505091426620aee7@mail.gmail.com>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>	
	<c298f2d705050911557abe44f4@mail.gmail.com>	
	<427FC0A9.2050007@verizon.net> <427FD48C.1040709@sympatico.ca>
	<c298f2d70505091426620aee7@mail.gmail.com>
Message-ID: <428041FB.9090104@sympatico.ca>

Frank,

I may have been a little premature with the solution I offered. The 
problem I found in setup.py is in the subversion trunk version, not in 
the mod_python 3.1.4 tarball. If you are compiling from the tarball then 
your problems may lie elsewhere. If you are using the svn repository, 
then the attached patch should fix your problems.

Changes:
Fixed regular expression problem in getconfigure_option()
Fixed indent problem in getconfigure_option()
Fixed incorrect libraries list in ModPyExtension. List was specific to 
windows.

(Nicolas - I'll email the patch to python-dev in a separate message).

Regards,
Jim

Nicolas Lehuen wrote:
> Did you try :
> 
> r = re.compile(r's,\s*@%s@,\s*(?P<OPTION_STRING>[^,]+),\s*' % (option_name))
> 
> Notice the "r" just before the quote to toggle the regular expression
> string mode.
> 
> Regards,
> Nicolas
> 
> 2005/5/9, Jim Gallacher <jg.lists@sympatico.ca>:
> 
>>Frank,
>>
>>Frank Gruman wrote:
>>
>>>Nicolas,
>>>
>>>The script you are running is automatically included as part of the make
>>>process on Linux.
>>>
>>>But I am willing to try anything...
>>
>>OK, here's something. :)
>>
>>
>>>Running the script with the method you specify returns the same ending
>>>error code that I found earlier (about the APXS definition not found).
>>>Thanks for the idea, though.
>>>
>>>Anyone have any idea why the setup.py script is not able to pass the
>>>APXS value from config.status back to setup.py (getconfigure_option
>>>function).  I have verified that there is a value assigned in
>>>config.status (/usr/local/apache2/bin/apxs).
>>
>>I think there is a problem with the regular expression which searches
>>for APXS in config.status. (I'm getting the same error on Debian as you
>>are on SLES).
>>
>>Setup.py is using the following re:
>>r = re.compile('s, @%s@, (?P<OPTION_STRING>[^,]+), ' % (option_name))
>>
>>While my config.status output looks like this:
>>s,@APXS@,/usr/bin/apxs2,;t t
>>
>>Notice the lack of spaces after the commas? I wonder if the output of
>>configure is somehow platform dependant, which is why Nicolas has not
>>seen a problem?
>>
>>I've been trying to tweak the re to make it work, but so far it's mainly
>>been an exercise in banging head against the monitor. (Somebody really
>>should come up with a padded monitor - they'd make a fortune). I both
>>love and hate regular expressions at the same time.
>>
>>Anyway, as a quick fix you could apply the following patch to
>>setup.py.in, and do the configure + make cycle again.
>>
>>Index: setup.py.in
>>===================================================================
>>--- setup.py.in (revision 169349)
>>+++ setup.py.in (working copy)
>>@@ -62,7 +62,8 @@
>>
>>  def getapxs_location():
>>      """finds the location of apxs from the config.status file"""
>>-    return getconfigure_option("APXS")
>>+    #return getconfigure_option("APXS")
>>+    return '/usr/local/apache2/bin/apxs'
>>
>>  def getapxs_option(option):
>>      APXS = getapxs_location()
>>
>>Also, I don't know if you resolved the psp_flex issue, but the
>>src/Makefile.in hard codes LEX=/usr/local/bin/flex, which fails on my
>>system since flex is located in /usr/bin. A quick edit of the Makefile
>>took care of that for me.
>>
>>If your luck is anything like mine the next thing you'll have to deal
>>with is the linker not finding libapr.
>>
>>Personally, I've avoided these issues by using the setup.py included
>>with Debian, even when compiling from the svn trunk.
>>
>>Regards,
>>Jim
>>
>>
>>
>>>Oh - also realized I didn't provide OS - SLES 9.
>>>
>>>Regards,
>>>Frank
>>>
>>>Nicolas Lehuen wrote:
>>>
>>>
>>>>Hi,
>>>>
>>>>Just a wild guess, as I'm building under Win32... Did you try :
>>>>
>>>>python setup.py install
>>>>
>>>>?
>>>>
>>>>This works under Win32.
>>>>
>>>>Regards,
>>>>
>>>>Nicolas
>>>>
>>>>2005/5/9, Frank Gruman <fgatwork@verizon.net>:
>>>>
>>>>
>>>>
>>>>>Hello all,
>>>>>
>>>>>I am trying to test the latest Apache dev version, and found an issue when trying to compile mod_python 3.1.4 with it.
>>>>>
>>>>>I originally tired using Apache 2.1.5-dev (from tip on Friday, 06-May) with mod_python 3.1.4 and Python 2.4.1.  When this failed, I thought that there might have been a resolution in the current mod_python tip, so pulled the mod_python tip as of 09-May @ 13:00.  Still ran into the same errors.
>>>>>
>>>>>The system goes through the ./configure without any issues.  Please see the steps / output below.  It gets quite long, so please bear with me.
>>>>>
>>>>>*  Configure *****************************************
>>>>>toybox:/sources/mod_python-3.1.4 # ./configure --with-apxs=/usr/local/apache2/bin/apxs
>>>>>checking for gcc... gcc
>>>>>checking for C compiler default output... a.out
>>>>>checking whether the C compiler works... yes
>>>>>checking whether we are cross compiling... no
>>>>>checking for suffix of executables...
>>>>>checking for suffix of object files... o
>>>>>checking whether we are using the GNU C compiler... yes
>>>>>checking whether gcc accepts -g... yes
>>>>>checking for ar... ar
>>>>>checking for a BSD-compatible install... /usr/bin/install -c
>>>>>checking whether make sets ${MAKE}... yes
>>>>>checking for main in -lm... yes
>>>>>checking for gcc option to accept ANSI C... none needed
>>>>>checking for an ANSI C-conforming const... yes
>>>>>checking your blood pressure... a bit high, but we can proceed
>>>>>configure: checking whether apxs is available...
>>>>>checking for --with-apxs... /usr/local/apache2/bin/apxs executable, good
>>>>>checking Apache version... 2.1.5-dev
>>>>>checking for Apache libexec directory... /usr/local/apache2/modules
>>>>>checking for Apache include directory... -I/usr/local/apache2/include
>>>>>checking for --with-python... no
>>>>>checking for python... /usr/bin/python
>>>>>checking Python version... 2.4
>>>>>checking Python install prefix... /usr
>>>>>checking for Py_NewInterpreter in -lpython2.4... yes
>>>>>checking what libraries Python was linked with... -lpython2.4   -lpthread -ldl  -lutil   -lm
>>>>>checking linker flags used to link Python...
>>>>>checking where Python include files are... -I/usr/include/python2.4
>>>>>configure: creating ./config.status
>>>>>config.status: creating Makefile
>>>>>config.status: creating src/Makefile
>>>>>config.status: creating Doc/Makefile
>>>>>config.status: creating test/testconf.py
>>>>>config.status: creating dist/setup.py
>>>>>config.status: creating dist/Makefile
>>>>>toybox:/sources/mod_python-3.1.4 #
>>>>>****************************************************
>>>>>
>>>>>No warnings or errors.  Looks good.  Let's go on...
>>>>>
>>>>>* 1st Make *****************************************
>>>>>toybox:/sources/mod_python-3.1.4 # make
>>>>>make[1]: Entering directory `/sources/mod_python-3.1.4/src'
>>>>>
>>>>>Compiling for DSO.
>>>>>
>>>>>
>>>>>
>>>
>>><snipped log as it was getting to big for the message board>
>>>
>>>>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
>>>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
>>>>>ln -s ../lib/python/mod_python
>>>>>ln -s ../src
>>>>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
>>>>>/usr/local/bin/flex -R -opsp_parser.c --header-file=include/psp_flex.h psp_parser.l
>>>>>make[2]: /usr/local/bin/flex: Command not found
>>>>>make[2]: *** [psp_parser.c] Error 127
>>>>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>>>make[1]: *** [build] Error 2
>>>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>>>>>make: *** [do_dso] Error 2
>>>>>toybox:/sources/mod_python-3.1.4 #
>>>>>***************************************************
>>>>>
>>>>>It appears I the system could not find psp_parser.c.  This is not in the src directory.  I looked at the SVN repository, and found it there.  Not sure why it didn't come with the initial checkout, but I manually downloaded it.  Let's try to do a MAKE again.
>>>>>
>>>>>* 2nd Make ****************************************
>>>>>
>>>>>toybox:/sources/mod_python-3.1.4 # make clean && make
>>>>>
>>>>>
>>>>>
>>>
>>><snipped log as it was getting to big for the message board>
>>>
>>>
>>>>>/usr/local/apache2/build/libtool --silent --mode=link gcc -o mod_python.la  -rpath /usr/local/apache2/modules -module -avoid-version    hlistobject.lo hlist.lo filterobject.lo connobject.lo serverobject.lo util.lo tableobject.lo requestobject.lo _apachemodule.lo mod_python.lo -L/usr/lib/python2.4/config -Xlinker -export-dynamic -lm -lpython2.4 -lpthread -ldl -lutil -lm
>>>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>>>make[1]: Entering directory `/sources/mod_python-3.1.4/dist'
>>>>>ln -s ../lib/python/mod_python
>>>>>make[2]: Entering directory `/sources/mod_python-3.1.4/src'
>>>>>make[2]: `psp_parser.c' is up to date.
>>>>>make[2]: Leaving directory `/sources/mod_python-3.1.4/src'
>>>>>/usr/bin/python setup.py build
>>>>>Traceback (most recent call last):
>>>>> File "setup.py", line 138, in ?
>>>>>   ModPyModule = ModPyExtension(getmp_srcdir(), [getmp_includedir(), getapache_includedir()], [getapache_libdir()])
>>>>> File "setup.py", line 80, in getapache_includedir
>>>>>   return getapxs_option("INCLUDEDIR")
>>>>> File "setup.py", line 68, in getapxs_option
>>>>>   APXS = getapxs_location()
>>>>> File "setup.py", line 65, in getapxs_location
>>>>>   return getconfigure_option("APXS")
>>>>> File "setup.py", line 47, in getconfigure_option
>>>>>   raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
>>>>>AssertionError: ('unable to find @%s@ definition in %s', ('APXS', '/sources/mod_python-3.1.4/config.status'))
>>>>>make[1]: *** [build] Error 1
>>>>>make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>>>>>make: *** [do_dso] Error 2
>>>>>toybox:/sources/mod_python-3.1.4 #
>>>>>****************************************************
>>>>>
>>>>>So - now it seems to have problems reading the value I passed for the APXS parameter.  And I can't figure out why.
>>>>>
>>>>>Any ideas??
>>>>>
>>>>>Regards,
>>>>>Frank
>>>>>_______________________________________________
>>>>>Mod_python mailing list
>>>>>Mod_python@modpython.org
>>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>>>>
>>>>>
>>>>>
>>>>
>>>>
>>>>
>>>------------------------------------------------------------------------
>>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> 

-------------- next part --------------
Index: dist/setup.py.in
===================================================================
--- dist/setup.py.in	(revision 169406)
+++ dist/setup.py.in	(working copy)
@@ -39,12 +39,12 @@
     if not os.path.exists(config_status_file):
         raise AssertionError("config.status not found in expected location (%s)" % config_status_file)
     header = open(config_status_file, 'r')
-    r = re.compile('s, @%s@, (?P<OPTION_STRING>[^,]+), ' % (option_name))
+    r = re.compile(r's,\s*@%s@,\s*(?P<OPTION_STRING>[^,]+),\s*' % (option_name))
     for line in header.readlines():
         m = r.search(line)
         if m is not None:
             return m.group('OPTION_STRING')
-        raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
+    raise AssertionError("unable to find @%s@ definition in %s", (option_name, config_status_file))
 
 def getmp_version():
     """finds out the version of mod_python"""
@@ -120,10 +120,15 @@
 class ModPyExtension(Extension):
     """a class that actually builds the mod_python.so extension for Apache (yikes)"""
     def __init__(self, source_dir, include_dirs, library_dirs):
+        if winbuild:
+            libraries = ['libhttpd', 'libapr', 'libaprutil', 'ws2_32']
+        else:
+            libraries = ['apr-0', 'aprutil-0']
+
         Extension.__init__(self, "mod_python_so",
             sources = [os.path.join(source_dir, source_file) for source_file in modpy_src_files],
                            include_dirs=include_dirs,
-            libraries = ['libhttpd', 'libapr', 'libaprutil', 'ws2_32'],
+            libraries = libraries
             library_dirs=library_dirs
                            )
         if winbuild:
From wouter at squirrel-systems.com  Tue May 10 01:32:15 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Tue May 10 01:32:21 2005
Subject: [mod_python] mod_python session trouble
Message-ID: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

Recently I started experimenting with mod_python and the Session module.
I run into a very serious problem (tested in both Mozilla/Linux and
Safari/Mac), which appears to be a server side problem, in the
interaction of mod_python with Apache.
Description:
I open a session using sess=Session.Session(req).
When trying to load the same page (with session) again, it goes fine for
no more than about five times (sometimes not at all), and after that the
page hangs: waiting for response from server. I have noticed that there
are many new apache processes created, one for every attempted reload.
Restarting the server (service httpd restart) fixes the problem.
Switching off cookies in the browser also solves this problem, though it
of course also prevents session tracking and storage.

Software:
- Apache 2.0.50-5mdk (installed from Mandrake rpm)
- Python 2.3.4-6mdk
- mod_python 3.2.3 (rpm name: apache2-mod_python-2.0.50_3.1.3-1mdk)

Anyone having the same problem? Any solutions?
Instead of sessions I've tried to use cookies, but info is only really
updated after the page is refreshed from the browser! I can set a cookie
and when re-reading it immediate after it is still the old info. So
that's also not a great solution.

Wouter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050510/e07cd17e/attachment.html
From grahamd at dscpl.com.au  Tue May 10 01:53:44 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 10 01:53:46 2005
Subject: [mod_python] mod_python session trouble
Message-ID: <1115704424.19115@dscpl.user.openhosting.com>

It would help if you can isolate it to a very small example which
demonstrates the problem and post it here.

BTW, are you using req.internal_redirect() in any way, especially
where you are trying to access the session object both before
and after the redirection? Also, are you stashing any data within
the "req" object for use in later phases of processing?

Can possibly be related to unlocking of session not being done
properly. Are you using "prefork" or a multithread MPM with Apache
such as "worker"?

There have been some issues with use of sessions and internal
session locking code that have come up before, but at this stage
couldn't be sure what is relevant and what isn't, so extra information
including code example would help.

Graham

Wouter van Marle wrote ..
> Hi all,
> 
> Recently I started experimenting with mod_python and the Session module.
> I run into a very serious problem (tested in both Mozilla/Linux and
> Safari/Mac), which appears to be a server side problem, in the
> interaction of mod_python with Apache.
> Description:
> I open a session using sess=Session.Session(req).
> When trying to load the same page (with session) again, it goes fine for
> no more than about five times (sometimes not at all), and after that the
> page hangs: waiting for response from server. I have noticed that there
> are many new apache processes created, one for every attempted reload.
> Restarting the server (service httpd restart) fixes the problem.
> Switching off cookies in the browser also solves this problem, though it
> of course also prevents session tracking and storage.
> 
> Software:
> - Apache 2.0.50-5mdk (installed from Mandrake rpm)
> - Python 2.3.4-6mdk
> - mod_python 3.2.3 (rpm name: apache2-mod_python-2.0.50_3.1.3-1mdk)
>
> Anyone having the same problem? Any solutions?
> Instead of sessions I've tried to use cookies, but info is only really
> updated after the page is refreshed from the browser! I can set a cookie
> and when re-reading it immediate after it is still the old info. So
> that's also not a great solution.
> 
> Wouter.
From jg.lists at sympatico.ca  Tue May 10 02:01:32 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 01:59:28 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <42804E3C.1070601@sympatico.ca>

Wouter van Marle wrote:
> Hi all,
> 
> Recently I started experimenting with mod_python and the Session module. 
> I run into a very serious problem (tested in both Mozilla/Linux and 
> Safari/Mac), which appears to be a server side problem, in the 
> interaction of mod_python with Apache.
> Description:
> I open a session using sess=Session.Session(req).
> When trying to load the same page (with session) again, it goes fine for 
> no more than about five times (sometimes not at all), and after that the 
> page hangs: waiting for response from server. I have noticed that there 
> are many new apache processes created, one for every attempted reload.
> Restarting the server (service httpd restart) fixes the problem. 
> Switching off cookies in the browser also solves this problem, though it 
> of course also prevents session tracking and storage.
> 
> Software:
> - Apache 2.0.50-5mdk (installed from Mandrake rpm)
> - Python 2.3.4-6mdk
> - mod_python 3.2.3 (rpm name: apache2-mod_python-2.0.50_3.1.3-1mdk)
> 
> Anyone having the same problem? Any solutions?
> Instead of sessions I've tried to use cookies, but info is only really 
> updated after the page is refreshed from the browser! I can set a cookie 
> and when re-reading it immediate after it is still the old info. So 
> that's also not a great solution.
> 
> Wouter.

Hi Wouter,

This looks like a problem with session locking, which is the default 
when creating a session. Are you creating more than one session object 
in a request? If so you'll end up with a deadlock. For example the 
following code will deadlock as it is really just accessing the same 
session data:

sess1 = Session.Session(req)
sess2 - Session.Session(req)

Note that if you reference a session object in both your handler code 
and in a psp page, the psp publisher will also try to create a new 
session object resulting in a deadlock in a similar fashion.

Once a session is deadlocked, the process handling that request is 
blocked and is unavailable to handle additional requests, which is why 
you see the number of apache processes increasing. Eventually you'll hit 
the limit and apache will stop responding until you restart, which 
releases the locks being held.

There are very good reasons for session locking, but it is not well 
documented. (I'm actually working on expanding the documentation for 
sessions which should help).

Perhaps you could elaborate a little on how you are using sesisons?

Regards,
Jim





From wouter at squirrel-systems.com  Tue May 10 02:42:40 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Tue May 10 02:42:45 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <1115704424.19115@dscpl.user.openhosting.com>
References: <1115704424.19115@dscpl.user.openhosting.com>
Message-ID: <1115707360.408.31.camel@cm61-10-50-104.hkcable.com.hk>

On Tue, 2005-05-10 at 01:53 -0400, Graham Dumpleton wrote:
> It would help if you can isolate it to a very small example which
> demonstrates the problem and post it here.
> 
See next mail.

> BTW, are you using req.internal_redirect() in any way, especially
> where you are trying to access the session object both before
> and after the redirection? Also, are you stashing any data within
> the "req" object for use in later phases of processing?
> 
Not at all.

> Can possibly be related to unlocking of session not being done
> properly. Are you using "prefork" or a multithread MPM with Apache
> such as "worker"?
> 
Euhm... my answer is "huh?" on this. Sorry I'm a real beginner in this.

I've used a stock install of Apache, checked basically only the paths,
and added configuration for mod_python. I'm at the moment not yet
interested so much in optimising apache.
When starting up, it starts in 5 sessions.

Wouter.


> There have been some issues with use of sessions and internal
> session locking code that have come up before, but at this stage
> couldn't be sure what is relevant and what isn't, so extra information
> including code example would help.
> 
> Graham
> 
> Wouter van Marle wrote ..
> > Hi all,
> > 
> > Recently I started experimenting with mod_python and the Session module.
> > I run into a very serious problem (tested in both Mozilla/Linux and
> > Safari/Mac), which appears to be a server side problem, in the
> > interaction of mod_python with Apache.
> > Description:
> > I open a session using sess=Session.Session(req).
> > When trying to load the same page (with session) again, it goes fine for
> > no more than about five times (sometimes not at all), and after that the
> > page hangs: waiting for response from server. I have noticed that there
> > are many new apache processes created, one for every attempted reload.
> > Restarting the server (service httpd restart) fixes the problem.
> > Switching off cookies in the browser also solves this problem, though it
> > of course also prevents session tracking and storage.
> > 
> > Software:
> > - Apache 2.0.50-5mdk (installed from Mandrake rpm)
> > - Python 2.3.4-6mdk
> > - mod_python 3.2.3 (rpm name: apache2-mod_python-2.0.50_3.1.3-1mdk)
> >
> > Anyone having the same problem? Any solutions?
> > Instead of sessions I've tried to use cookies, but info is only really
> > updated after the page is refreshed from the browser! I can set a cookie
> > and when re-reading it immediate after it is still the old info. So
> > that's also not a great solution.
> > 
> > Wouter.
> 
> 

From wouter at squirrel-systems.com  Tue May 10 02:53:21 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Tue May 10 02:53:27 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <42804E3C.1070601@sympatico.ca>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>
	<42804E3C.1070601@sympatico.ca>
Message-ID: <1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>

On Tue, 2005-05-10 at 02:01 -0400, Jim Gallacher wrote:
> This looks like a problem with session locking, which is the default 
> when creating a session. Are you creating more than one session object 
> in a request? If so you'll end up with a deadlock. For example the 
> following code will deadlock as it is really just accessing the same 
> session data:
> 
> sess1 = Session.Session(req)
> sess2 - Session.Session(req)

This is really close to what I am doing. I've to shorten my code a lot
to get it posted here, but basically this happens:

def home(req):
    sess = Session.Session(req)
    if sess.is_new():
        # get settings from cookies (using Cookie)
    # page built up, using sess["language"] for the language setting.
    sess.save()    
    return apache.OK

def english(req)
    sess = Session.Session(req)
    sess["language"] = "en"
    sess.save()
    home(req) # to redraw the main page

And same for other languages as well.
The page uses a little PSP to easily set some variables, no code in the
pages. It appears to hang on the Session.Session(req) call in the
english routine.
The english routine is called through a hyperlink off the main page (a
href main.py/english).

Wouter.


From tusharpatil1982 at rediffmail.com  Tue May 10 03:06:29 2005
From: tusharpatil1982 at rediffmail.com (tushar liladhar patil)
Date: Tue May 10 03:05:10 2005
Subject: [mod_python] How to convert xml file in to pdf using python
Message-ID: <20050510070629.19331.qmail@mailweb34.rediffmail.com>

  hi,
     I have xml files, in my application I want to convert xml files to pdf format and I want to use python.
if any one knows please reply me..

thanking u,
Tushar.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050510/d19080f4/attachment.html
From grahamd at dscpl.com.au  Tue May 10 03:15:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 10 03:15:51 2005
Subject: [mod_python] How to convert xml file in to pdf using python
Message-ID: <1115709350.32424@dscpl.user.openhosting.com>

tushar liladhar patil wrote ..
>   hi,
>      I have xml files, in my application I want to convert xml files to
> pdf format and I want to use python.
> if any one knows please reply me..

Quick reply as am running out the door,....


Look at:

  http://www.reportlab.org

Graham
From bortzmeyer at nic.fr  Tue May 10 03:56:41 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Tue May 10 03:56:46 2005
Subject: [mod_python] Re: How to convert xml file in to pdf using python
In-Reply-To: <20050510070629.19331.qmail@mailweb34.rediffmail.com>
References: <20050510070629.19331.qmail@mailweb34.rediffmail.com>
Message-ID: <20050510075641.GA16506@nic.fr>

On Tue, May 10, 2005 at 07:06:29AM -0000,
 tushar liladhar patil <tusharpatil1982@rediffmail.com> wrote 
 a message of 47 lines which said:

> I have xml files, in my application I want to convert xml files to
> pdf format and I want to use python.

I agree with Graham, reportlab is very good.

For the other side of the process, the parsing of XML, you have many
libraries in Python:

http://docs.python.org/lib/markup.html for a start (but there are others)

From wouter at squirrel-systems.com  Tue May 10 06:33:53 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Tue May 10 06:33:58 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>
	<42804E3C.1070601@sympatico.ca>
	<1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>

Update on my own message:
I have changed the structure a bit, sess has now become req.session, so
I can pass around the session together with the request object easily.
The locking problem has been solved by calling req.session.unlock()
every time after saving the session, however this causes the server to
start a new session for each request, and that's not the idea, as then
info gets lost.
Also I've noticed that writing and reading back of cookies does not work
properly. I'm trying to write a cookie, and when reading it back in case
of a new session I get the old data again. But that's for another
question.

Any advice is highly appreciated!

Wouter.

On Tue, 2005-05-10 at 14:53 +0800, Wouter van Marle wrote:

> On Tue, 2005-05-10 at 02:01 -0400, Jim Gallacher wrote:
> > This looks like a problem with session locking, which is the default 
> > when creating a session. Are you creating more than one session object 
> > in a request? If so you'll end up with a deadlock. For example the 
> > following code will deadlock as it is really just accessing the same 
> > session data:
> > 
> > sess1 = Session.Session(req)
> > sess2 - Session.Session(req)
> 
> This is really close to what I am doing. I've to shorten my code a lot
> to get it posted here, but basically this happens:
> 
> def home(req):
>     sess = Session.Session(req)
>     if sess.is_new():
>         # get settings from cookies (using Cookie)
>     # page built up, using sess["language"] for the language setting.
>     sess.save()    
>     return apache.OK
> 
> def english(req)
>     sess = Session.Session(req)
>     sess["language"] = "en"
>     sess.save()
>     home(req) # to redraw the main page
> 
> And same for other languages as well.
> The page uses a little PSP to easily set some variables, no code in the
> pages. It appears to hang on the Session.Session(req) call in the
> english routine.
> The english routine is called through a hyperlink off the main page (a
> href main.py/english).
> 
> Wouter.
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050510/d7682875/attachment-0001.html
From grahamd at dscpl.com.au  Tue May 10 07:05:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 10 07:06:02 2005
Subject: [mod_python] Re: How to convert xml file in to pdf using python
In-Reply-To: <20050510075641.GA16506@nic.fr>
References: <20050510070629.19331.qmail@mailweb34.rediffmail.com>
	<20050510075641.GA16506@nic.fr>
Message-ID: <d6f702b100d7aba14885d18562aa76d4@dscpl.com.au>


On 10/05/2005, at 5:56 PM, Stephane Bortzmeyer wrote:

> On Tue, May 10, 2005 at 07:06:29AM -0000,
>  tushar liladhar patil <tusharpatil1982@rediffmail.com> wrote
>  a message of 47 lines which said:
>
>> I have xml files, in my application I want to convert xml files to
>> pdf format and I want to use python.
>
> I agree with Graham, reportlab is very good.
>
> For the other side of the process, the parsing of XML, you have many
> libraries in Python:
>
> http://docs.python.org/lib/markup.html for a start (but there are 
> others)

Another interesting project to look at is:

   http://openreport.org/index.py/static/page/trml2pdf_doc

If you don't want to deal direct with reportlab, you use translation to
convert XML into RML in some way and it has an automatic mechanism for
generating to PDF using reportlab. Not sure whether or not one could
use some XSLT tool to do this or not. If not, possibly still easier to
use reportlab direct.

Graham

From grahamd at dscpl.com.au  Tue May 10 07:11:14 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 10 07:11:22 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>
	<42804E3C.1070601@sympatico.ca>
	<1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>
	<1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <8e05007d41692da63b22a324d1266b85@dscpl.com.au>


On 10/05/2005, at 8:33 PM, Wouter van Marle wrote:

>  Update on my own message:
>  I have changed the structure a bit, sess has now become req.session, 
> so I can pass around the session together with the request object 
> easily.
>  The locking problem has been solved by calling req.session.unlock() 
> every time after saving the session, however this causes the server to 
> start a new session for each request, and that's not the idea, as then 
> info gets lost.
>  Also I've noticed that writing and reading back of cookies does not 
> work properly. I'm trying to write a cookie, and when reading it back 
> in case of a new session I get the old data again. But that's for 
> another question.

I saving session in "req" anyway, do this:


>  def home(req):
>      sess = Session.Session(req)
>      if sess.is_new():
>          # get settings from cookies (using Cookie)
>      # page built up, using sess["language"] for the language setting.
>      sess.save()
>      return apache.OK

def home(req):
     if not hasattr(req,"session"):
       req.session = Session.Session(req)
     if req.session.is_new():
       ...
     ...
     req.session.save()
     return apache.OK

>  def english(req)
>      sess = Session.Session(req)
>      sess["language"] = "en"
>      sess.save()
>      home(req) # to redraw the main page

def english(req):
     if not hasattr(req,"session"):
       req.session = Session.Session(req)
     req.session["language"] = "en"
     return home(req)

Shouldn't need to unlock session then and same session object used.

Graham

From jg.lists at sympatico.ca  Tue May 10 09:56:33 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 09:54:31 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <8e05007d41692da63b22a324d1266b85@dscpl.com.au>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>	<42804E3C.1070601@sympatico.ca>	<1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>	<1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>
	<8e05007d41692da63b22a324d1266b85@dscpl.com.au>
Message-ID: <4280BD91.3040904@sympatico.ca>

Graham Dumpleton wrote:
> 
> On 10/05/2005, at 8:33 PM, Wouter van Marle wrote:
> 
>>  Update on my own message:
>>  I have changed the structure a bit, sess has now become req.session, 
>> so I can pass around the session together with the request object easily.
>>  The locking problem has been solved by calling req.session.unlock() 
>> every time after saving the session, however this causes the server to 
>> start a new session for each request, and that's not the idea, as then 
>> info gets lost.

As Graham points out, you shouldn't need to do any unlocking, and even 
if you do it should not cause the loss of data. The session will be 
automatically unlocked during request cleanup phase. Just make sure you 
call sess.save() before the end of your request as saving is not 
automatic. The other way you may get a new session for each request is 
if you start writing the response before the session is created. The 
session must be able to set a cookie in the response sent to the 
browser, and this is not possible if you've already started to send your 
reply.

>>  Also I've noticed that writing and reading back of cookies does not 
>> work properly. I'm trying to write a cookie, and when reading it back 
>> in case of a new session I get the old data again. But that's for 
>> another question.

I'm a little unclear why you are reading and writing the cookies, 
assuming you mean the session cookie. When a session is created, the 
request is checked for the existence of a cookie called pysid. If this 
cookie is found it's value is used to load the corresponding session 
data from some persistent store (most likely a dbm hash table for your 
system) into the created session instance. If there is no session cookie 
in the request then a session is created with a new session id and a new 
cookie is set in the response header.

> 
> I saving session in "req" anyway, do this:
> 
> 
>>  def home(req):
>>      sess = Session.Session(req)
>>      if sess.is_new():
>>          # get settings from cookies (using Cookie)

This may be where you are confused. As explained above, cookie handling 
is done when the session object is instantiated. What you really want 
here is some session initialization. For example.

         if sess.is_new():
             sess['hits'] = 0
         else:
             sess['hits'] = sess['hits'] + 1

>>      # page built up, using sess["language"] for the language setting.
>>      sess.save()
>>      return apache.OK
> 
> 
> def home(req):
>     if not hasattr(req,"session"):
>       req.session = Session.Session(req)
>     if req.session.is_new():
>       ...
>     ...
>     req.session.save()
>     return apache.OK
> 
>>  def english(req)
>>      sess = Session.Session(req)
>>      sess["language"] = "en"
>>      sess.save()
>>      home(req) # to redraw the main page
> 
> 
> def english(req):
>     if not hasattr(req,"session"):
>       req.session = Session.Session(req)
>     req.session["language"] = "en"
>     return home(req)
> 
> Shouldn't need to unlock session then and same session object used.
> 
> Graham
> 

Regards,
Jim
From wouter at squirrel-systems.com  Tue May 10 10:46:44 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Tue May 10 10:46:51 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <4280BD91.3040904@sympatico.ca>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>
	<42804E3C.1070601@sympatico.ca>
	<1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>
	<1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>
	<8e05007d41692da63b22a324d1266b85@dscpl.com.au>
	<4280BD91.3040904@sympatico.ca>
Message-ID: <1115736404.408.141.camel@cm61-10-50-104.hkcable.com.hk>

Thank you all for the advices, I'm going to try it tomorrow. At least it
gives me something to try out, and a bit better understanding of the
process. Unfortunately the documentation is pretty sparse there.
Some more comments below on why reading a separate cookie:


> call sess.save() before the end of your request as saving is not 
> automatic. The other way you may get a new session for each request is 
> if you start writing the response before the session is created. The 
> session must be able to set a cookie in the response sent to the 
> browser, and this is not possible if you've already started to send your 
> reply.


So I should call sess.save() before doing any psp run() or req.write(),
right? That is now not the case (I do the save at the very end of the
routine - after sending the page).


> I'm a little unclear why you are reading and writing the cookies, 
> assuming you mean the session cookie. 


I think of using a separate cookie for persistent information (currently
set to 90 day expiry) against session which includes login info and is
to keep the user logged with a timeout of say 30 minutes. At the
beginning of the session (new session) I want to read that persistent
information to provide a somewhat personalised site. Currently that is
only the language and the username if known, though in future that may
be more.

Wouter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050510/c7427e60/attachment.html
From jg.lists at sympatico.ca  Tue May 10 11:44:14 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 11:42:08 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <1115736404.408.141.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>	
	<42804E3C.1070601@sympatico.ca>	
	<1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>	
	<1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>	
	<8e05007d41692da63b22a324d1266b85@dscpl.com.au>	
	<4280BD91.3040904@sympatico.ca>
	<1115736404.408.141.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <4280D6CE.5030602@sympatico.ca>

Wouter van Marle wrote:
> Thank you all for the advices, I'm going to try it tomorrow. At least it 
> gives me something to try out, and a bit better understanding of the 
> process. Unfortunately the documentation is pretty sparse there.

I'm working on improving the documentation, so these kinds of 
discussions are useful to me as well.

> Some more comments below on why reading a separate cookie:
> 
>>call sess.save() before the end of your request as saving is not 
>>automatic. The other way you may get a new session for each request is 
>>if you start writing the response before the session is created. The 
>>session must be able to set a cookie in the response sent to the 
>>browser, and this is not possible if you've already started to send your 
>>reply.
>>
> 
> So I should call sess.save() before doing any psp run() or req.write(), 
> right? That is now not the case (I do the save at the very end of the 
> routine - after sending the page).

No, it doesn't matter when you call sess.save(). The important step is 
in the creation of the session instance. The session cookie in the 
response header is set when the session instance is created. You must do 
this before sending any part of the page. For example:

def good_requesthandler(req):
     # session handling will work
     req.content_type = "text/plain"

     # Create the session and implicitly set the session cookie
     # in the response header
     sess = Session.Session(req)

     # First call to req.write() sends the response headers
     # to the browser, which includes the session cookie, and
     # then writes the string.
     req.write("Hello World!")
     req.write("Goodbye world!")

     # Save the session data on the server
     sess.save()
     return apache.OK


def bad_requesthandler(req):
     # session handling will not work
     req.content_type = "text/plain"

     # First call to req.write() sends the response headers to
     # the browser and then writes the string.
     req.write("Hello World!")

     # Creating the session instance generates a cookie, but
     # the response headers have already been sent as a result of
     # the previous req.write() call, so the the browser will never
     # receive the cookie.
     sess = Session.Session(req)
     req.write("Goodbye world!")

     # Save the session data on the server. The data is saved, but the
     # browser never received the cookie, so it really is not relevant.
     # As far as the browser is concerned the session data is gone.
     sess.save()
     return apache.OK

>>I'm a little unclear why you are reading and writing the cookies, 
>>assuming you mean the session cookie. 
>>
> 
> I think of using a separate cookie for persistent information (currently 
> set to 90 day expiry) against session which includes login info and is 
> to keep the user logged with a timeout of say 30 minutes. At the 
> beginning of the session (new session) I want to read that persistent 
> information to provide a somewhat personalised site. Currently that is 
> only the language and the username if known, though in future that may 
> be more.

Ok. Then the problem you described with reading and writing cookies in 
an earlier message is unrelated to the session handling code. But the 
same idea applies. Make sure you set your cookie before any req.write() 
attempts.

Regards,
Jim
From wouter at squirrel-systems.com  Tue May 10 12:20:43 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Tue May 10 12:20:49 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <4280D6CE.5030602@sympatico.ca>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>
	<42804E3C.1070601@sympatico.ca>
	<1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>
	<1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>
	<8e05007d41692da63b22a324d1266b85@dscpl.com.au>
	<4280BD91.3040904@sympatico.ca>
	<1115736404.408.141.camel@cm61-10-50-104.hkcable.com.hk>
	<4280D6CE.5030602@sympatico.ca>
Message-ID: <1115742043.408.153.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

Jim and Graham: thank you for your advices, it now seems to work well.
The session is kept, even when calling functions in a different script,
which is great.

The reading of my persistent cookie is fixed, a stupid bug/typo on my
side (an always false statement so they would not get read, ever). Now
when starting a new session, the starting values are read from the
persistent cookie on the user's side, and this cookie is updated
properly as well.

Currently I do not use the "return apache.OK", instead just a return, as
"return apache.OK" results in an extra "0"(zero) at the end of the page!
I don't think that's supposed to be like that. It looks a bit silly to
me.

Wouter.

On Tue, 2005-05-10 at 11:44 -0400, Jim Gallacher wrote:
> Wouter van Marle wrote:
> > Thank you all for the advices, I'm going to try it tomorrow. At least it 
> > gives me something to try out, and a bit better understanding of the 
> > process. Unfortunately the documentation is pretty sparse there.
> 
> I'm working on improving the documentation, so these kinds of 
> discussions are useful to me as well.
> 
> > Some more comments below on why reading a separate cookie:
> > 
> >>call sess.save() before the end of your request as saving is not 
> >>automatic. The other way you may get a new session for each request is 
> >>if you start writing the response before the session is created. The 
> >>session must be able to set a cookie in the response sent to the 
> >>browser, and this is not possible if you've already started to send your 
> >>reply.
> >>
> > 
> > So I should call sess.save() before doing any psp run() or req.write(), 
> > right? That is now not the case (I do the save at the very end of the 
> > routine - after sending the page).
> 
> No, it doesn't matter when you call sess.save(). The important step is 
> in the creation of the session instance. The session cookie in the 
> response header is set when the session instance is created. You must do 
> this before sending any part of the page. For example:
> 
> def good_requesthandler(req):
>      # session handling will work
>      req.content_type = "text/plain"
> 
>      # Create the session and implicitly set the session cookie
>      # in the response header
>      sess = Session.Session(req)
> 
>      # First call to req.write() sends the response headers
>      # to the browser, which includes the session cookie, and
>      # then writes the string.
>      req.write("Hello World!")
>      req.write("Goodbye world!")
> 
>      # Save the session data on the server
>      sess.save()
>      return apache.OK
> 
> 
> def bad_requesthandler(req):
>      # session handling will not work
>      req.content_type = "text/plain"
> 
>      # First call to req.write() sends the response headers to
>      # the browser and then writes the string.
>      req.write("Hello World!")
> 
>      # Creating the session instance generates a cookie, but
>      # the response headers have already been sent as a result of
>      # the previous req.write() call, so the the browser will never
>      # receive the cookie.
>      sess = Session.Session(req)
>      req.write("Goodbye world!")
> 
>      # Save the session data on the server. The data is saved, but the
>      # browser never received the cookie, so it really is not relevant.
>      # As far as the browser is concerned the session data is gone.
>      sess.save()
>      return apache.OK
> 
> >>I'm a little unclear why you are reading and writing the cookies, 
> >>assuming you mean the session cookie. 
> >>
> > 
> > I think of using a separate cookie for persistent information (currently 
> > set to 90 day expiry) against session which includes login info and is 
> > to keep the user logged with a timeout of say 30 minutes. At the 
> > beginning of the session (new session) I want to read that persistent 
> > information to provide a somewhat personalised site. Currently that is 
> > only the language and the username if known, though in future that may 
> > be more.
> 
> Ok. Then the problem you described with reading and writing cookies in 
> an earlier message is unrelated to the session handling code. But the 
> same idea applies. Make sure you set your cookie before any req.write() 
> attempts.
> 
> Regards,
> Jim
> 
> 

From jg.lists at sympatico.ca  Tue May 10 12:59:19 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 12:57:17 2005
Subject: [mod_python] mod_python session trouble
In-Reply-To: <1115742043.408.153.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115703135.408.24.camel@cm61-10-50-104.hkcable.com.hk>	
	<42804E3C.1070601@sympatico.ca>	
	<1115708001.408.38.camel@cm61-10-50-104.hkcable.com.hk>	
	<1115721233.408.126.camel@cm61-10-50-104.hkcable.com.hk>	
	<8e05007d41692da63b22a324d1266b85@dscpl.com.au>	
	<4280BD91.3040904@sympatico.ca>	
	<1115736404.408.141.camel@cm61-10-50-104.hkcable.com.hk>	
	<4280D6CE.5030602@sympatico.ca>
	<1115742043.408.153.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <4280E867.60902@sympatico.ca>

Wouter van Marle wrote:
> Hi all,
> 
> Jim and Graham: thank you for your advices, it now seems to work well.
> The session is kept, even when calling functions in a different script,
> which is great.
> 
> The reading of my persistent cookie is fixed, a stupid bug/typo on my
> side (an always false statement so they would not get read, ever). Now
> when starting a new session, the starting values are read from the
> persistent cookie on the user's side, and this cookie is updated
> properly as well.
> 
> Currently I do not use the "return apache.OK", instead just a return, as
> "return apache.OK" results in an extra "0"(zero) at the end of the page!
> I don't think that's supposed to be like that. It looks a bit silly to
> me.

If you are using the publisher handler (or one of the other handlers 
included with mod_python), that handler calls your code and then returns 
apache.OK. If your function also returns apache.OK you get the extra "0" 
in the output to the browser. Generally you'll only want to return 
apache.OK if you are writing your own handler.

Regards,
Jim
From jg.lists at sympatico.ca  Tue May 10 16:09:26 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 16:07:21 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <42810CEC.2020406@verizon.net>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
	<c298f2d705050911557abe44f4@mail.gmail.com>	
	<427FC0A9.2050007@verizon.net> <427FD48C.1040709@sympatico.ca>
	<c298f2d70505091426620aee7@mail.gmail.com>
	<428041FB.9090104@sympatico.ca> <42810CEC.2020406@verizon.net>
Message-ID: <428114F6.3020109@sympatico.ca>

Frank Gruman wrote:
> Thanks Jim,
> 
> That helped.  I had to add one little fix to your diff.  You are missing 
> a comma after the 'libraries = libraries' line. 

Doh! This is what happens when you fix, test, do one last tweak and then 
post without testing again.

> It led me on to the next set of errors...
> 
> The whole MAKE looks different now than it did before.  It runs through 
> a couple of tests, and then starts to build the mod_python.so module 
> (woo hoo!!).  But then I see a whole bunch of 'error: parse error before 
> apr_off_t'.  I have attached a copy of the make log from that point on.
> 
> I have tried running with APR 0.9.6 as well as the latest APR/APR-Util 
> tip (1.1.2 - pulled from the 1.1.x branch at the same time as Apache - 
> Friday, 06 May, afternoon...)
> 
> I know I have seen apr_off_t errors before, but I can't recall the issue.

Sorry, I can't help you there.

Regards,
Jim

From jg.lists at sympatico.ca  Tue May 10 17:54:36 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 17:52:30 2005
Subject: [mod_python] flex path and version for compiling mod_python
Message-ID: <42812D9C.4010704@sympatico.ca>

Could I get a little input from folks?

Currently, flex is needed for compiling mod_python but it's path is hard 
coded in src/Makefile as /usr/local/bin/flex. Thus, on many systems 
compilation will fail unless the Makefile is manually edited.

The path for flex should really be determined by the configure script, 
and it's version checked, as version 2.5.31 is the required minimum.

I'd like to modify the configure script, but I first want to check that 
the output of `flex --version` is the same on different platforms.

Could people run the following on their systems and email the output to me?

flex --version

On Debian unstable the result is:
flex 2.5.31

You can email me directly rather than the list.
Thanks,
Jim
From fgatwork at verizon.net  Tue May 10 18:05:20 2005
From: fgatwork at verizon.net (Frank Gruman)
Date: Tue May 10 18:05:26 2005
Subject: [mod_python] flex path and version for compiling mod_python
In-Reply-To: <42812D9C.4010704@sympatico.ca>
References: <42812D9C.4010704@sympatico.ca>
Message-ID: <42813020.8010106@verizon.net>

On the default SLES9 install, it is 2.5.4

Regards,
Frank

Jim Gallacher wrote:

> Could I get a little input from folks?
>
> Currently, flex is needed for compiling mod_python but it's path is 
> hard coded in src/Makefile as /usr/local/bin/flex. Thus, on many 
> systems compilation will fail unless the Makefile is manually edited.
>
> The path for flex should really be determined by the configure script, 
> and it's version checked, as version 2.5.31 is the required minimum.
>
> I'd like to modify the configure script, but I first want to check 
> that the output of `flex --version` is the same on different platforms.
>
> Could people run the following on their systems and email the output 
> to me?
>
> flex --version
>
> On Debian unstable the result is:
> flex 2.5.31
>
> You can email me directly rather than the list.
> Thanks,
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From jg.lists at sympatico.ca  Tue May 10 18:21:53 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 10 18:19:46 2005
Subject: [mod_python] flex path and version for compiling mod_python
In-Reply-To: <42812D9C.4010704@sympatico.ca>
References: <42812D9C.4010704@sympatico.ca>
Message-ID: <42813401.8000207@sympatico.ca>

Just to clarify, I'm parsing the output of flex --version to extract the 
version within the configure script, so I need the actual *output* of 
flex --version on your system, as opposed the version of your flex.

eg.

localhost:~$ flex --version
flex 2.5.31

Thanks
Jim


Jim Gallacher wrote:
> Could I get a little input from folks?
> 
> Currently, flex is needed for compiling mod_python but it's path is hard 
> coded in src/Makefile as /usr/local/bin/flex. Thus, on many systems 
> compilation will fail unless the Makefile is manually edited.
> 
> The path for flex should really be determined by the configure script, 
> and it's version checked, as version 2.5.31 is the required minimum.
> 
> I'd like to modify the configure script, but I first want to check that 
> the output of `flex --version` is the same on different platforms.
> 
> Could people run the following on their systems and email the output to me?
> 
> flex --version
> 
> On Debian unstable the result is:
> flex 2.5.31
> 
> You can email me directly rather than the list.
> Thanks,
> Jim
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From fgatwork at verizon.net  Tue May 10 18:58:08 2005
From: fgatwork at verizon.net (Frank Gruman)
Date: Tue May 10 18:58:11 2005
Subject: [mod_python] flex path and version for compiling mod_python
In-Reply-To: <42813401.8000207@sympatico.ca>
References: <42812D9C.4010704@sympatico.ca> <42813401.8000207@sympatico.ca>
Message-ID: <42813C80.5020903@verizon.net>

Right - ok......gotcha - I see (said the blind man as he picked up his 
hammer and saw)........

SLES9
toybox:~ # flex --version
flex version 2.5.4

Regards,
Frank

Jim Gallacher wrote:

> Just to clarify, I'm parsing the output of flex --version to extract 
> the version within the configure script, so I need the actual *output* 
> of flex --version on your system, as opposed the version of your flex.
>
> eg.
>
> localhost:~$ flex --version
> flex 2.5.31
>
> Thanks
> Jim
>
>
> Jim Gallacher wrote:
>
>> Could I get a little input from folks?
>>
>> Currently, flex is needed for compiling mod_python but it's path is 
>> hard coded in src/Makefile as /usr/local/bin/flex. Thus, on many 
>> systems compilation will fail unless the Makefile is manually edited.
>>
>> The path for flex should really be determined by the configure 
>> script, and it's version checked, as version 2.5.31 is the required 
>> minimum.
>>
>> I'd like to modify the configure script, but I first want to check 
>> that the output of `flex --version` is the same on different platforms.
>>
>> Could people run the following on their systems and email the output 
>> to me?
>>
>> flex --version
>>
>> On Debian unstable the result is:
>> flex 2.5.31
>>
>> You can email me directly rather than the list.
>> Thanks,
>> Jim
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>
From administrator at leebrown.org  Tue May 10 21:54:12 2005
From: administrator at leebrown.org (Lee Brown)
Date: Tue May 10 21:54:23 2005
Subject: [mod_python] Outgoing apache handler
In-Reply-To: <4e4a11f805050901444a379c7e@mail.gmail.com>
Message-ID: <D2F7F2894881@underdog>

Greetings!

Yes, I am doing something remarkably similar.  The content phase is probably
best and the XSLT transformation can be done quite handily with Pyana (a
Python wrapper around the Apache Xalan XSLT engine.)

See http://pyana.sourceforge.net/

Best Regards,
Lee E. Brown
(administrator@leebrown.org) 

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Simon Wittber
Sent: Monday, May 09, 2005 4:44 AM
To: mod_python@modpython.org
Subject: [mod_python] Outgoing apache handler

Hello chaps.

I want to write a handler which will process outgoing xml files.

It will check for an xsl stylesheet declaration, and transform the xml
server side before sending the content to the browser.

My question is, which apache phase should I add this handler to, and has
anyone else done something similar?

Sw.

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From vmanera at manord.com  Wed May 11 11:37:29 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Wed May 11 11:37:21 2005
Subject: [mod_python] How to find mod_python compiled with python2.4 for
	windows?
Message-ID: <52DC70C1C1575C418CB033523A29CF141049E9@exchange2000.manord.com>

 
I checked for windows download: http://mirror.nohup.it/apache/httpd/modpython/win/
but the latest version is 3.1.3 29-mar-2004 
 
also in :  http://davidf.sjsoft.com/files/mod_python-3.1.3-1.win32-py2.3.exe  only for python 2.3
 
somebody may help me?

Villiam Manera 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050511/7b81d1e6/attachment-0001.html
From nicolas.lehuen at gmail.com  Wed May 11 12:46:16 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed May 11 12:46:19 2005
Subject: [mod_python] How to find mod_python compiled with python2.4 for
	windows?
In-Reply-To: <52DC70C1C1575C418CB033523A29CF141049E9@exchange2000.manord.com>
References: <52DC70C1C1575C418CB033523A29CF141049E9@exchange2000.manord.com>
Message-ID: <c298f2d7050511094662228cb1@mail.gmail.com>

Hi,

You can find a build here :

http://nicolas.lehuen.com/download/mod_python

Regards,

Nicolas

2005/5/11, Manera, Villiam <vmanera@manord.com>:
>  
>   
> I checked for windows download:
> http://mirror.nohup.it/apache/httpd/modpython/win/ 
> but the latest version is 3.1.3 29-mar-2004 
>   
> also in : 
> http://davidf.sjsoft.com/files/mod_python-3.1.3-1.win32-py2.3.exe
>  only for python 2.3 
>   
> somebody may help me? 
>  
> 
> Villiam Manera 
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>

From wouter at squirrel-systems.com  Wed May 11 13:28:32 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 11 13:30:32 2005
Subject: [mod_python] psp problem
Message-ID: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

I've a problem using the psp functions.
What I am doing:
I've a psp page, using some in-line python code, in between <% and %>
tags as per many examples. I however get all the time syntax errors when
running this through the psp.PSP.run() function. I'm sure my python code
as such is correct, so I'm at a loss here. Some code:

page.psp:
<html><head> 
<!-- rest of the header and so -->
</head>
<p> some text for the page </p>
<%
for r in Results:
%>
I got the result <%=r%><br>
<%
# end indentation
%>

then in my python program I have made a list Results, containing
strings.

page = psp.PSP(req, "page.psp")
page.run({"Results": Results})

When running it like that, in my browser an error message appears giving
a syntax error, pointing at the "for" in the loop.

Now from the documentation I can not find anything that would forbid
this. I haven't tried to set up a psp handler in apache, as I do not
intend to use this as such. I want to be able to pass a list of results
to the page, and then have the page fill itself, as smart template. The
main code should be out of the page.

Wouter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050512/97e4cc59/attachment.html
From jg.lists at sympatico.ca  Wed May 11 14:39:58 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed May 11 14:37:49 2005
Subject: [mod_python] psp problem
In-Reply-To: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <4282517E.7070508@sympatico.ca>

Wouter van Marle wrote:
> Hi all,
> 
> I've a problem using the psp functions.
> What I am doing:
> I've a psp page, using some in-line python code, in between <% and %> 
> tags as per many examples. I however get all the time syntax errors when 
> running this through the psp.PSP.run() function. I'm sure my python code 
> as such is correct, so I'm at a loss here. Some code:
> 
> page.psp:
> <html><head>
> <!-- rest of the header and so -->
> </head>
> <p> some text for the page </p>
> <%
> for r in Results:
> %>
> I got the result <%=r%><br>
> <%
> # end indentation
> %>
> 
> then in my python program I have made a list Results, containing strings.
> 
> page = psp.PSP(req, "page.psp")
> page.run({"Results": Results})
> 
> When running it like that, in my browser an error message appears giving 
> a syntax error, pointing at the "for" in the loop.
> 
> Now from the documentation I can not find anything that would forbid 
> this. I haven't tried to set up a psp handler in apache, as I do not 
> intend to use this as such. I want to be able to pass a list of results 
> to the page, and then have the page fill itself, as smart template. The 
> main code should be out of the page.
> 

You found one of the warts in psp. Since your for loop contains no 
further python statements, the parser gets confused. Try adding a single 
comment at the beginning of your for loop:

<p> some text for the page </p>
<%
for r in Results:
     # begin indentation - comment fixes the syntax error
%>
I got the result <%=r%><br>
<%
# end indentation
%>

Regards,
Jim
From wouter at squirrel-systems.com  Wed May 11 20:18:36 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 11 20:18:42 2005
Subject: [mod_python] psp problem
In-Reply-To: <4282517E.7070508@sympatico.ca>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>
	<4282517E.7070508@sympatico.ca>
Message-ID: <1115857116.408.228.camel@cm61-10-50-104.hkcable.com.hk>

On Wed, 2005-05-11 at 14:39 -0400, Jim Gallacher wrote:
> Wouter van Marle wrote:
> > Hi all,
> > 
> > I've a problem using the psp functions.
> > What I am doing:
> > I've a psp page, using some in-line python code, in between <% and %> 
> > tags as per many examples. I however get all the time syntax errors when 
> > running this through the psp.PSP.run() function. I'm sure my python code 
> > as such is correct, so I'm at a loss here. Some code:
> > 
> > page.psp:
> > <html><head>
> > <!-- rest of the header and so -->
> > </head>
> > <p> some text for the page </p>
> > <%
> > for r in Results:
> > %>
> > I got the result <%=r%><br>
> > <%
> > # end indentation
> > %>
> > 
> > then in my python program I have made a list Results, containing strings.
> > 
> > page = psp.PSP(req, "page.psp")
> > page.run({"Results": Results})
> > 
> > When running it like that, in my browser an error message appears giving 
> > a syntax error, pointing at the "for" in the loop.
> > 
> > Now from the documentation I can not find anything that would forbid 
> > this. I haven't tried to set up a psp handler in apache, as I do not 
> > intend to use this as such. I want to be able to pass a list of results 
> > to the page, and then have the page fill itself, as smart template. The 
> > main code should be out of the page.
> > 
> 
> You found one of the warts in psp. Since your for loop contains no 
> further python statements, the parser gets confused. Try adding a single 
> comment at the beginning of your for loop:
> 
> <p> some text for the page </p>
> <%
> for r in Results:
>      # begin indentation - comment fixes the syntax error
> %>
> I got the result <%=r%><br>
> <%
> # end indentation
> %>

Still the same problem, Jim.
I've also tried with comment before the 'for' statement, doesn't make
any difference :(

Wouter.

From jg.lists at sympatico.ca  Wed May 11 22:33:46 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed May 11 22:31:36 2005
Subject: [mod_python] psp problem
In-Reply-To: <1115857116.408.228.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>	
	<4282517E.7070508@sympatico.ca>
	<1115857116.408.228.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <4282C08A.4090208@sympatico.ca>

Wouter van Marle wrote:
> On Wed, 2005-05-11 at 14:39 -0400, Jim Gallacher wrote:
> 
>>Wouter van Marle wrote:
>>
>>>Hi all,
>>>
>>>I've a problem using the psp functions.
>>>What I am doing:
>>>I've a psp page, using some in-line python code, in between <% and %> 
>>>tags as per many examples. I however get all the time syntax errors when 
>>>running this through the psp.PSP.run() function. I'm sure my python code 
>>>as such is correct, so I'm at a loss here. Some code:
>>>
>>>page.psp:
>>><html><head>
>>><!-- rest of the header and so -->
>>></head>
>>><p> some text for the page </p>
>>><%
>>>for r in Results:
>>>%>
>>>I got the result <%=r%><br>
>>><%
>>># end indentation
>>>%>
>>>
>>>then in my python program I have made a list Results, containing strings.
>>>
>>>page = psp.PSP(req, "page.psp")
>>>page.run({"Results": Results})
>>>
>>>When running it like that, in my browser an error message appears giving 
>>>a syntax error, pointing at the "for" in the loop.
>>>
>>>Now from the documentation I can not find anything that would forbid 
>>>this. I haven't tried to set up a psp handler in apache, as I do not 
>>>intend to use this as such. I want to be able to pass a list of results 
>>>to the page, and then have the page fill itself, as smart template. The 
>>>main code should be out of the page.
>>>
>>
>>You found one of the warts in psp. Since your for loop contains no 
>>further python statements, the parser gets confused. Try adding a single 
>>comment at the beginning of your for loop:
>>
>><p> some text for the page </p>
>><%
>>for r in Results:
>>     # begin indentation - comment fixes the syntax error
>>%>
>>I got the result <%=r%><br>
>><%
>># end indentation
>>%>
> 
> 
> Still the same problem, Jim.
> I've also tried with comment before the 'for' statement, doesn't make
> any difference :(
> 
> Wouter.
> 

Actually, I was using the comment after the for statement to fix a
slightly different problem. I've tested the snippet for the psp page you 
posted before and it works for me. Perhaps you could post the actual 
traceback?

Regards,
Jim


From wouter at squirrel-systems.com  Wed May 11 23:45:17 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 11 23:45:24 2005
Subject: [mod_python] psp problem
In-Reply-To: <4282C08A.4090208@sympatico.ca>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>
	<4282517E.7070508@sympatico.ca>
	<1115857116.408.228.camel@cm61-10-50-104.hkcable.com.hk>
	<4282C08A.4090208@sympatico.ca>
Message-ID: <1115869517.408.240.camel@cm61-10-50-104.hkcable.com.hk>

On Wed, 2005-05-11 at 22:33 -0400, Jim Gallacher wrote:
> Wouter van Marle wrote:
> > On Wed, 2005-05-11 at 14:39 -0400, Jim Gallacher wrote:
> > 
> >>Wouter van Marle wrote:
> >>
> >>>Hi all,
> >>>
> >>>I've a problem using the psp functions.
> >>>What I am doing:
> >>>I've a psp page, using some in-line python code, in between <% and
> %> 
> >>>tags as per many examples. I however get all the time syntax errors
> when 
> >>>running this through the psp.PSP.run() function. I'm sure my python
> code 
> >>>as such is correct, so I'm at a loss here. Some code:
> >>>
> >>>page.psp:
> >>><html><head>
> >>><!-- rest of the header and so -->
> >>></head>
> >>><p> some text for the page </p>
> >>><%
> >>>for r in Results:
> >>>%>
> >>>I got the result <%=r%><br>
> >>><%
> >>># end indentation
> >>>%>
> >>>
> >>>then in my python program I have made a list Results, containing
> strings.
> >>>
> >>>page = psp.PSP(req, "page.psp")
> >>>page.run({"Results": Results})
> >>>
> >>>When running it like that, in my browser an error message appears
> giving 
> >>>a syntax error, pointing at the "for" in the loop.
> >>>
> >>>Now from the documentation I can not find anything that would
> forbid 
> >>>this. I haven't tried to set up a psp handler in apache, as I do
> not 
> >>>intend to use this as such. I want to be able to pass a list of
> results 
> >>>to the page, and then have the page fill itself, as smart template.
> The 
> >>>main code should be out of the page.
> >>>
> >>
> >>You found one of the warts in psp. Since your for loop contains no 
> >>further python statements, the parser gets confused. Try adding a
> single 
> >>comment at the beginning of your for loop:
> >>
> >><p> some text for the page </p>
> >><%
> >>for r in Results:
> >>     # begin indentation - comment fixes the syntax error
> >>%>
> >>I got the result <%=r%><br>
> >><%
> >># end indentation
> >>%>
> > 
> > 
> > Still the same problem, Jim.
> > I've also tried with comment before the 'for' statement, doesn't
> make
> > any difference :(
> > 
> > Wouter.
> > 
> 
> Actually, I was using the comment after the for statement to fix a
> slightly different problem. I've tested the snippet for the psp page
> you 
> posted before and it works for me. Perhaps you could post the actual 
> traceback?

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
    return object(**args)

  File "/var/www/html/python/search.py", line 75, in search
    page = psp.PSP(req, templatefilename)

  File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 111, in __init__
    self.load_from_file()

  File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 177, in load_from_file
    code = compile(source, filename, "exec")

  File "/var/www/html/templates/en/results.psp", line 20

    for r in SongResults:

    ^

SyntaxError: invalid syntax

Mind: I run this out of the main python script, though psp.PSP and then
page.run(). That may make a difference as well! I haven't tested it
as .psp page, which won't work as that way I can not pass the search
results to teh page.

Wouter.

From grisha at modpython.org  Wed May 11 23:49:37 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed May 11 23:49:47 2005
Subject: [mod_python] psp problem
In-Reply-To: <4282517E.7070508@sympatico.ca>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>
	<4282517E.7070508@sympatico.ca>
Message-ID: <20050511234819.T47383@grisha.dyndns.org>



On Wed, 11 May 2005, Jim Gallacher wrote:

> You found one of the warts in psp. Since your for loop contains no further 
> python statements, the parser gets confused. Try adding a single comment at 
> the beginning of your for loop:
>
> <p> some text for the page </p>
> <%
> for r in Results:
>    # begin indentation - comment fixes the syntax error
> %>
> I got the result <%=r%><br>
> <%
> # end indentation
> %>


Actually, (IIRC purposely undocumented), PSP is smart enough to guess that 
a if code ends on a ":" you mean to start a new block.

Grisha
From wouter at squirrel-systems.com  Wed May 11 23:50:59 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 11 23:51:04 2005
Subject: [mod_python] psp problem
In-Reply-To: <4282C08A.4090208@sympatico.ca>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>
	<4282517E.7070508@sympatico.ca>
	<1115857116.408.228.camel@cm61-10-50-104.hkcable.com.hk>
	<4282C08A.4090208@sympatico.ca>
Message-ID: <1115869859.408.243.camel@cm61-10-50-104.hkcable.com.hk>

On Wed, 2005-05-11 at 22:33 -0400, Jim Gallacher wrote:
> Wouter van Marle wrote:
> > On Wed, 2005-05-11 at 14:39 -0400, Jim Gallacher wrote:
> > 
> >>Wouter van Marle wrote:
> >>
> >>>Hi all,
> >>>
> >>>I've a problem using the psp functions.
> >>>What I am doing:
> >>>I've a psp page, using some in-line python code, in between <% and
> %> 
> >>>tags as per many examples. I however get all the time syntax errors
> when 
> >>>running this through the psp.PSP.run() function. I'm sure my python
> code 
> >>>as such is correct, so I'm at a loss here. Some code:
> >>>
> >>>page.psp:
> >>><html><head>
> >>><!-- rest of the header and so -->
> >>></head>
> >>><p> some text for the page </p>
> >>><%
> >>>for r in Results:
> >>>%>
> >>>I got the result <%=r%><br>
> >>><%
> >>># end indentation
> >>>%>
> >>>
> >>>then in my python program I have made a list Results, containing
> strings.
> >>>
> >>>page = psp.PSP(req, "page.psp")
> >>>page.run({"Results": Results})
> >>>
> >>>When running it like that, in my browser an error message appears
> giving 
> >>>a syntax error, pointing at the "for" in the loop.
> >>>
> >>>Now from the documentation I can not find anything that would
> forbid 
> >>>this. I haven't tried to set up a psp handler in apache, as I do
> not 
> >>>intend to use this as such. I want to be able to pass a list of
> results 
> >>>to the page, and then have the page fill itself, as smart template.
> The 
> >>>main code should be out of the page.
> >>>
> >>
> >>You found one of the warts in psp. Since your for loop contains no 
> >>further python statements, the parser gets confused. Try adding a
> single 
> >>comment at the beginning of your for loop:
> >>
> >><p> some text for the page </p>
> >><%
> >>for r in Results:
> >>     # begin indentation - comment fixes the syntax error
> >>%>
> >>I got the result <%=r%><br>
> >><%
> >># end indentation
> >>%>
> > 
> > 
> > Still the same problem, Jim.
> > I've also tried with comment before the 'for' statement, doesn't
> make
> > any difference :(
> > 
> > Wouter.
> > 
> 
> Actually, I was using the comment after the for statement to fix a
> slightly different problem. I've tested the snippet for the psp page
> you 
> posted before and it works for me. Perhaps you could post the actual 
> traceback?

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
    return object(**args)

  File "/var/www/html/python/search.py", line 75, in search
    page = psp.PSP(req, templatefilename)

  File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 111, in __init__
    self.load_from_file()

  File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 177, in load_from_file
    code = compile(source, filename, "exec")

  File "/var/www/html/templates/en/results.psp", line 20

    for r in SongResults:

    ^

SyntaxError: invalid syntax


And then to be complete I'll also give the psp template:

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title></title>
		<meta name="author" content="Wouter van Marle" >
		<meta name="generator" content="screem 0.10.2" >
		<meta name="keywords" content="" >
		<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1" >
		<meta http-equiv="Content-Script-Type" content="text/javascript" >
		<meta http-equiv="Content-Style-Type" content="text/css" >
		<link rel="stylesheet" type="text/css" href="../../main.css" >
	</head>
	<body>
		<h1>Search results for <%=artist%> and <%=song%></h1>
		<br>
		<!-- -->
		<p>Found the following songs:<p>
		<%
		# now it's getting interesting: we have to display the info out of a list of tuples!
		for r in SongResults:
			# begin
		%>
		<p>Song name: <%=r[0]%>, artist: <%=r[1]%>. This song is from the album <%=r[3]%>
		<%
		# end (for)
		%>
	</body>
</html>


Mind: I run this out of the main python script, though psp.PSP and then
page.run(). That may make a difference as well! I haven't tested it
as .psp page, which won't work as that way I can not pass the search
results to the page.

SongResults is a variable passed when calling the page:
page.run({"SongResults": SongResults})
SongResults is a list of tuples, each containing four items, built up
previously. I've tested the content of that variable, and it is correct.

Wouter.


From wouter at squirrel-systems.com  Wed May 11 23:53:03 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 11 23:53:09 2005
Subject: [mod_python] psp problem
In-Reply-To: <20050511234819.T47383@grisha.dyndns.org>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>
	<4282517E.7070508@sympatico.ca>
	<20050511234819.T47383@grisha.dyndns.org>
Message-ID: <1115869983.408.246.camel@cm61-10-50-104.hkcable.com.hk>

On Wed, 2005-05-11 at 23:49 -0400, Gregory (Grisha) Trubetskoy wrote:
> 
> On Wed, 11 May 2005, Jim Gallacher wrote:
> 
> > You found one of the warts in psp. Since your for loop contains no further 
> > python statements, the parser gets confused. Try adding a single comment at 
> > the beginning of your for loop:
> >
> > <p> some text for the page </p>
> > <%
> > for r in Results:
> >    # begin indentation - comment fixes the syntax error
> > %>
> > I got the result <%=r%><br>
> > <%
> > # end indentation
> > %>
> 
> 
> Actually, (IIRC purposely undocumented), PSP is smart enough to guess that 
> a if code ends on a ":" you mean to start a new block.

I have found documentation where this is indeed confirmed; a line ending
in a colon (:) starts an indentation.

Wouter.

> 
> Grisha
> 
> 

From administrator at leebrown.org  Thu May 12 09:16:42 2005
From: administrator at leebrown.org (Lee Brown)
Date: Thu May 12 09:17:02 2005
Subject: [mod_python] Outgoing apache handler
In-Reply-To: <c298f2d705050902057ea6ac75@mail.gmail.com>
Message-ID: <DA8F4CF258F5@underdog>

Greetings!

A filter might (or might not) be the best place to do this.  XSLT transform
engines like Xalan want to have the whole source document available in one
chunk, but a filter object has no way of knowing that it has the whole
source stream available to it when called.  (It might, it might not; you'd
have to run some test cases to be sure.)

A "brute force" way to implement the transform as a filter would be to use
something like Saxon, which can handle piecewise data input, but the
downside to that is that you'd end up writing your own transform engine in
Python.

Doing the transform in the content phase, however, allows you to fetch the
entire source document and feed it to the transform engine.  Another
advantage of doing it in the content phase is that it gives you a chance to
"tweak" the result tree.

In the application I'm currently working on, I have a mixture of both static
and dynamic content to be served.  I use XSLT to build up the static content
from XML data and then I inject computed content by manipulating the result
tree DOM.  This works pretty well, though using PyXML to manipulate the DOM
is a lot slower that using Pyana to do straight transforms.  My next
development step is to figure out a way to pre-process the dynamic content
into an XML stream so that I can build the content all in one shot through
the XSLT engine.

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Nicolas Lehuen
Sent: Monday, May 09, 2005 5:05 AM
To: Simon Wittber
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Outgoing apache handler

I have done nothing similar, but I think the way to go would be to implement
a filter. See :

http://www.modpython.org/live/current/doc-html/pyapi-filter.html

Regards,

Nicolas

2005/5/9, Simon Wittber <simonwittber@gmail.com>:
> Hello chaps.
> 
> I want to write a handler which will process outgoing xml files.
> 
> It will check for an xsl stylesheet declaration, and transform the xml 
> server side before sending the content to the browser.
> 
> My question is, which apache phase should I add this handler to, and 
> has anyone else done something similar?
> 
> Sw.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From jg.lists at sympatico.ca  Thu May 12 10:33:41 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu May 12 10:31:40 2005
Subject: [mod_python] psp problem
In-Reply-To: <1115869859.408.243.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>	
	<4282517E.7070508@sympatico.ca>	
	<1115857116.408.228.camel@cm61-10-50-104.hkcable.com.hk>	
	<4282C08A.4090208@sympatico.ca>
	<1115869859.408.243.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <42836945.705@sympatico.ca>

Wouter van Marle wrote:
> On Wed, 2005-05-11 at 22:33 -0400, Jim Gallacher wrote:
> 
>>Wouter van Marle wrote:
>>
>>>On Wed, 2005-05-11 at 14:39 -0400, Jim Gallacher wrote:
>>>
>>>
>>>>Wouter van Marle wrote:
>>>>
>>>>
>>>>>Hi all,
>>>>>
>>>>>I've a problem using the psp functions.
>>>>>What I am doing:
>>>>>I've a psp page, using some in-line python code, in between <% and
>>
>>%> 
>>
>>>>>tags as per many examples. I however get all the time syntax errors
>>
>>when 
>>
>>>>>running this through the psp.PSP.run() function. I'm sure my python
>>
>>code 
>>
>>>>>as such is correct, so I'm at a loss here. Some code:
>>>>>
>>>>>page.psp:
>>>>><html><head>
>>>>><!-- rest of the header and so -->
>>>>></head>
>>>>><p> some text for the page </p>
>>>>><%
>>>>>for r in Results:
>>>>>%>
>>>>>I got the result <%=r%><br>
>>>>><%
>>>>># end indentation
>>>>>%>
>>>>>
>>>>>then in my python program I have made a list Results, containing
>>
>>strings.
>>
>>>>>page = psp.PSP(req, "page.psp")
>>>>>page.run({"Results": Results})
>>>>>
>>>>>When running it like that, in my browser an error message appears
>>
>>giving 
>>
>>>>>a syntax error, pointing at the "for" in the loop.
>>>>>
>>>>>Now from the documentation I can not find anything that would
>>
>>forbid 
>>
>>>>>this. I haven't tried to set up a psp handler in apache, as I do
>>
>>not 
>>
>>>>>intend to use this as such. I want to be able to pass a list of
>>
>>results 
>>
>>>>>to the page, and then have the page fill itself, as smart template.
>>
>>The 
>>
>>>>>main code should be out of the page.
>>>>>
>>>>
>>>>You found one of the warts in psp. Since your for loop contains no 
>>>>further python statements, the parser gets confused. Try adding a
>>
>>single 
>>
>>>>comment at the beginning of your for loop:
>>>>
>>>><p> some text for the page </p>
>>>><%
>>>>for r in Results:
>>>>    # begin indentation - comment fixes the syntax error
>>>>%>
>>>>I got the result <%=r%><br>
>>>><%
>>>># end indentation
>>>>%>
>>>
>>>
>>>Still the same problem, Jim.
>>>I've also tried with comment before the 'for' statement, doesn't
>>
>>make
>>
>>>any difference :(
>>>
>>>Wouter.
>>>
>>
>>Actually, I was using the comment after the for statement to fix a
>>slightly different problem. I've tested the snippet for the psp page
>>you 
>>posted before and it works for me. Perhaps you could post the actual 
>>traceback?
> 
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line 136, in handler
>     result = util.apply_fs_data(object, req.form, req=req)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/util.py", line 361, in apply_fs_data
>     return object(**args)
> 
>   File "/var/www/html/python/search.py", line 75, in search
>     page = psp.PSP(req, templatefilename)
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 111, in __init__
>     self.load_from_file()
> 
>   File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 177, in load_from_file
>     code = compile(source, filename, "exec")
> 
>   File "/var/www/html/templates/en/results.psp", line 20
> 
>     for r in SongResults:
> 
>     ^
> 
> SyntaxError: invalid syntax
> 
> 
> And then to be complete I'll also give the psp template:

And a good thing too! :)

> <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
> <html>
> 	<head>
> 		<title></title>
> 		<meta name="author" content="Wouter van Marle" >
> 		<meta name="generator" content="screem 0.10.2" >
> 		<meta name="keywords" content="" >
> 		<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1" >
> 		<meta http-equiv="Content-Script-Type" content="text/javascript" >
> 		<meta http-equiv="Content-Style-Type" content="text/css" >
> 		<link rel="stylesheet" type="text/css" href="../../main.css" >
> 	</head>
> 	<body>
> 		<h1>Search results for <%=artist%> and <%=song%></h1>
> 		<br>
> 		<!-- -->
> 		<p>Found the following songs:<p>

Unindent the python bits, so

> 		<%
> 		# now it's getting interesting: we have to display the info out of a list of tuples!
> 		for r in SongResults:
> 			# begin
> 		%>
> 		<p>Song name: <%=r[0]%>, artist: <%=r[1]%>. This song is from the album <%=r[3]%>
> 		<%
> 		# end (for)
> 		%>

becomes:

<%
# now it's getting interesting:
# we have to display the info out of a list of tuples!
for in SongResults:
     # begin
%>
		<p>Song name: <%=r[0]%>, artist: <%=r[1]%>.
                 This song is from the album <%=r[3]%></p>
<%
# end (for)
%>

> 	</body>
> </html>
> 
> 
> Mind: I run this out of the main python script, though psp.PSP and then
> page.run(). That may make a difference as well! I haven't tested it
> as .psp page, which won't work as that way I can not pass the search
> results to the page.
> 
> SongResults is a variable passed when calling the page:
> page.run({"SongResults": SongResults})
> SongResults is a list of tuples, each containing four items, built up
> previously. I've tested the content of that variable, and it is correct.
> 
> Wouter.
> 
> 

Regards,
Jim
From jg.lists at sympatico.ca  Thu May 12 11:15:01 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu May 12 11:13:13 2005
Subject: [mod_python] psp problem
In-Reply-To: <1115869983.408.246.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>	
	<4282517E.7070508@sympatico.ca>
	<20050511234819.T47383@grisha.dyndns.org>
	<1115869983.408.246.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <428372F5.6010400@sympatico.ca>

Wouter van Marle wrote:
> On Wed, 2005-05-11 at 23:49 -0400, Gregory (Grisha) Trubetskoy wrote:
> 
>>On Wed, 11 May 2005, Jim Gallacher wrote:
>>
>>
>>>You found one of the warts in psp. Since your for loop contains no further 
>>>python statements, the parser gets confused. Try adding a single comment at 
>>>the beginning of your for loop:
>>>
>>><p> some text for the page </p>
>>><%
>>>for r in Results:
>>>   # begin indentation - comment fixes the syntax error
>>>%>
>>>I got the result <%=r%><br>
>>><%
>>># end indentation
>>>%>
>>
>>
>>Actually, (IIRC purposely undocumented), PSP is smart enough to guess that 
>>a if code ends on a ":" you mean to start a new block.
> 
> 
> I have found documentation where this is indeed confirmed; a line ending
> in a colon (:) starts an indentation.
> 

I used indented comment trick after the for statment for a problem 
unrelated to Wouter's. I'm now in the habit of always using it.

For example, if you have a nested for loop such as the following, an 
IndentationError is raised.

<%
for title,doc_list in unit_list:
%>
   <h4>Unit <%= title %><h4>
<%
     for doc in doc_list:
%>
     <p><%= doc['url'] %>: <%= doc['title'] %></p>
<%
     # end of block
# end of block
%>

I noticed that if there was some python statement immediately after the 
first for:, the error went away. Now I always stick an indented comment 
immediately after the for statement. I also found problems when 
generating tables in the inner loop, where I was only getting a single 
closing </table> tag instead of one for each iteration of the inner loop 
(or something like that - I can't generate an example off the top of my 
head and the offending code is now gone).

I haven't commented on this before as it was a problem I had when I 
first starting using psp pages a few months ago, and I wasn't sure if it 
was a feature or a bug. :)

Regards,
Jim




















From jkohans at gmail.com  Thu May 12 18:20:28 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Thu May 12 18:20:30 2005
Subject: [mod_python] ImportError: No module named psp
Message-ID: <b07823bd05051215201f848096@mail.gmail.com>

Hello,

I can't figure out why the psp module isn't found. Anyone run into a similar 
problem? Here is the error message I recieve. Thanks for any help. 

Mod_python: 3.1.4
Apache: 2.0.54
OS: RedHat 9.3

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch
    result = object(req)

  File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py",
line 98, in handler
    path=[path])

  File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py",
line 457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/home/jeremyk/public_html/modpy/requestRouter.py", line 3, in ?
    import segment

  File "/home/jeremyk/public_html/modpy/segment.py", line 1, in ?
    import handlers

  File "/home/jeremyk/public_html/modpy/handlers.py", line 5, in ?
    import segmenter, fileStorage, statRoutines, plotter, view

  File "/home/jeremyk/public_html/modpy/view.py", line 5, in ?
    import psp

ImportError: No module named psp


Regards,
Jeremy Kohansimeh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050512/1c1a7a79/attachment.html
From jg.lists at sympatico.ca  Thu May 12 18:55:15 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu May 12 18:53:03 2005
Subject: [mod_python] ImportError: No module named psp
In-Reply-To: <b07823bd05051215201f848096@mail.gmail.com>
References: <b07823bd05051215201f848096@mail.gmail.com>
Message-ID: <4283DED3.9020305@sympatico.ca>

Jeremy Kohansimeh wrote:
> Hello,
> 
> I can't figure out why the psp module isn't found.  Anyone run into a 
> similar problem?  Here is the error message I recieve.  Thanks for any 
> help. 
> 
> Mod_python: 3.1.4
> Apache: 2.0.54
> OS: RedHat 9.3
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
> 
>     result = object(req)
> 
>   File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", line 98, in handler
>     path=[path])
> 
>   File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 457, in import_module
> 
>     module = imp.load_module(mname, f, p, d)
> 
>   File "/home/jeremyk/public_html/modpy/requestRouter.py", line 3, in ?
>     import segment
> 
>   File "/home/jeremyk/public_html/modpy/segment.py", line 1, in ?
> 
>     import handlers
> 
>   File "/home/jeremyk/public_html/modpy/handlers.py", line 5, in ?
>     import segmenter, fileStorage, statRoutines, plotter, view
> 
>   File "/home/jeremyk/public_html/modpy/view.py", line 5, in ?
> 
>     import psp
> 
> ImportError: No module named psp
> 

Try this:
from mod_python import psp

Regards,
Jim

From jkohans at gmail.com  Thu May 12 20:54:58 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Thu May 12 20:55:06 2005
Subject: [mod_python] ImportError: No module named psp
In-Reply-To: <4283DED3.9020305@sympatico.ca>
References: <b07823bd05051215201f848096@mail.gmail.com>
	<4283DED3.9020305@sympatico.ca>
Message-ID: <b07823bd05051217543215e6d4@mail.gmail.com>

On 5/12/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
> 
> Jeremy Kohansimeh wrote:
> > Hello,
> >
> > I can't figure out why the psp module isn't found. Anyone run into a
> > similar problem? Here is the error message I recieve. Thanks for any
> > help.
> >
> > Mod_python: 3.1.4
> > Apache: 2.0.54
> > OS: RedHat 9.3
> >
> > Mod_python error: "PythonHandler mod_python.publisher"
> >
> > Traceback (most recent call last):
> >
> > File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 
> 299, in HandlerDispatch
> >
> > result = object(req)
> >
> > File "/usr/local/lib/python2.3/site-packages/mod_python/publisher.py", 
> line 98, in handler
> > path=[path])
> >
> > File "/usr/local/lib/python2.3/site-packages/mod_python/apache.py", line 
> 457, in import_module
> >
> > module = imp.load_module(mname, f, p, d)
> >
> > File "/home/jeremyk/public_html/modpy/requestRouter.py", line 3, in ?
> > import segment
> >
> > File "/home/jeremyk/public_html/modpy/segment.py", line 1, in ?
> >
> > import handlers
> >
> > File "/home/jeremyk/public_html/modpy/handlers.py", line 5, in ?
> > import segmenter, fileStorage, statRoutines, plotter, view
> >
> > File "/home/jeremyk/public_html/modpy/view.py", line 5, in ?
> >
> > import psp
> >
> > ImportError: No module named psp
> >
> 
> Try this:
> from mod_python import psp
> 
> Regards,
> Jim
> 
> 
This is what I had at first--it did not work either. The message I posted is 
an artifact of the games I played to try to get the psp module loaded. I 
should have posted the original message, which was emitted because 'from 
mod_python import psp' caused a name error, as there does not appear to be a 
psp module under mod_python.

Thank you for your help, Jim. Sorry about the confusion, all.

JK
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050512/9c51da89/attachment.html
From mogmios at mlug.missouri.edu  Thu May 12 21:48:07 2005
From: mogmios at mlug.missouri.edu (Michael)
Date: Thu May 12 21:46:59 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
Message-ID: <42840757.70605@mlug.missouri.edu>

I [foolishly] recompiled my Apache/MP server with the newest versions of 
Apache, MP, and Python. Now I get a seg fault any time my code tries to 
import SimpleXMLRPCServer. This code used to work. Any ideas why it 
doesn't now? Did I possibly make a mistake when recompiling it or has 
something changed?

--
Michael <mogmios@mlug.missouri.edu>
http://kavlon.org

From grahamd at dscpl.com.au  Thu May 12 22:08:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 12 22:08:33 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
Message-ID: <1115950110.15080@dscpl.user.openhosting.com>

Michael wrote ..
> I [foolishly] recompiled my Apache/MP server with the newest versions of
> Apache, MP, and Python. Now I get a seg fault any time my code tries to
> import SimpleXMLRPCServer. This code used to work. Any ideas why it 
> doesn't now? Did I possibly make a mistake when recompiling it or has 
> something changed?

Most likely cause arises from fact that PyXML module in Python embeds its
own version of expat code. If something else you use with Apache, such as
PHP, links against a shared library version of expat library and the versions
are different, you will see a server crash when importing any Python module
which uses the XML module.

Graham
From wouter at squirrel-systems.com  Thu May 12 22:31:49 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu May 12 22:32:05 2005
Subject: [mod_python] Cookies and sessions trouble
Message-ID: <1115951509.1115.90.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

As described in a previous thread (" mod_python session trouble") I've
had some problems with the sessions. Now there is some progress, though
not really great...
My website is run from a set of python scripts, serving up different
pages, pretty much all from psp templates. To keep track of the user,
I'm using a session (for current session info) and a more persistent
cookie for longer term storage called "basic".

Now what I found:
- the homepage is run from "main.py", together with a few other pages.
Within these pages the session is passed on nicely, and if that doesn't
work, the "basic" cookie is accessed for the information.
- main.py contains a function (get_session(req)) to read the session,
and if expires read the cookie. Works nicely. Returns the session.

Except:
- when calling "req.session main.get_session(req)" from my script
user.py (via a hyperlink in the homepage) I get all kinds of errors,
that are not consequent! Sometimes it complains it can not find the very
function, another time it complains about unbound variables in this
function, sometimes it runs and returns a session. Reloading the
homepage and then moving to one of the subpages served by the other
script (user.py).
- when trying to read the cookies from user.py, I can not get my
original cookies. The session appears to be new all the time
(req.session.is_new returns "True"), and I can not read by "basic"
cookie that is happily visible from functions that are in main.py. As a
result I can not read the user's session settings, nor their defaults,
and the script falls back to system defaults.

I've also done some testing, and here a small script showing part of the
strange behaviour.
When starting up the very first time, you have no cookies (makes sense),
and "language" is set to system default "en". However if you start
switching it through the links, the language is NOT saved in the
session, nor a "basic" cookie is set at all. This cookie is supposed to
be set in the home function, to store the current user settings for
later use.

----------------- BEGIN test.py
from mod_python import Cookie
from mod_python import Session

import time

def home (req):
    req.content_type = "text/html; charset=utf-8"
    username = ""
    if not hasattr(req, "session"):
        req.session = get_session(req)
    language = req.session["language"]
    req.write("home got language: "+language+"<br>")
    # update the cookie on the user's side
    value = {"language": language, "username": username}
    Cookie.add_cookie(req,
                      Cookie.MarshalCookie("basic", value, "gezellig",
                                           expires = time.time() +
7776000 # 90 days
                                           ))
    req.write("Language switcher: <a href=./en>en</a>  <a
href=./cn>cn</a><br>")

def en(req):
    if not hasattr(req, "session"):
        req.session = get_session(req)
    req.session["language"] = "en"
    req.session.save()
    home(req)
    return 

def cn(req):
    if not hasattr(req, "session"):
        req.session = get_session(req)
    req.session["language"] = "cn"
    req.session.save()
    home(req)
    return 

def get_session(req):
    # gets the current session, checks if complete, if not reads
defaults from
    # the cookies.
    sess = Session.Session(req)
    req.content_type = "text/html; charset=utf-8"
    # read user's settings from their cookies
    language = "en" # system default
    cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
                                 secret = "gezellig")
    req.write("found cookies: "+str(cookies)+"<br>")
    if cookies.has_key("basic"):
        # the basic info is stored in a cookie named "basic"
        basiccookie = cookies["basic"]
        if type(basiccookie) is Cookie.MarshalCookie:
            try:
                language = basiccookie.value["language"]
            except:
                pass
    req.write("get_session got language: "+language+"<br>")
    sess["language"] = language
    return sess
-------------------------- END test.py


Wouter.


From wouter at squirrel-systems.com  Thu May 12 22:54:55 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu May 12 22:55:03 2005
Subject: [mod_python] Cookies and sessions trouble
In-Reply-To: <1115951509.1115.90.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115951509.1115.90.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <1115952895.1115.100.camel@cm61-10-50-104.hkcable.com.hk>

Sometimes I feel so stupid... remembering "no req.write before finishing
the cookies", Stripping those, the cookies part at least works within
this test module, and seems to work OK in the real page as well. Now the
rest of the problems still persist:

main.py/home produces a page that a.o. links to user.py/register.

user.py imports main.py (import main), and sometimes gets the error
message "No module named main". Sometimes it goes fine, and the module
is imported and starts running.

It seems the include goes well, as long as I to it within a minute or
two from loading the home page (main.py/home). If quickly after that I
click <reload> in the browser it goes fine, a moment later I get the
include error.

Also I just noticed that changes made to main.py are not used when
including main in user.py, until I restart apache. I got some old
wordings that were changed in the source. Some too persistent caching at
work here?

Wouter.

On Fri, 2005-05-13 at 10:31 +0800, Wouter van Marle wrote:
> Hi all,
> 
> As described in a previous thread (" mod_python session trouble") I've
> had some problems with the sessions. Now there is some progress, though
> not really great...
> My website is run from a set of python scripts, serving up different
> pages, pretty much all from psp templates. To keep track of the user,
> I'm using a session (for current session info) and a more persistent
> cookie for longer term storage called "basic".
> 
> Now what I found:
> - the homepage is run from "main.py", together with a few other pages.
> Within these pages the session is passed on nicely, and if that doesn't
> work, the "basic" cookie is accessed for the information.
> - main.py contains a function (get_session(req)) to read the session,
> and if expires read the cookie. Works nicely. Returns the session.
> 
> Except:
> - when calling "req.session main.get_session(req)" from my script
> user.py (via a hyperlink in the homepage) I get all kinds of errors,
> that are not consequent! Sometimes it complains it can not find the very
> function, another time it complains about unbound variables in this
> function, sometimes it runs and returns a session. Reloading the
> homepage and then moving to one of the subpages served by the other
> script (user.py).
> - when trying to read the cookies from user.py, I can not get my
> original cookies. The session appears to be new all the time
> (req.session.is_new returns "True"), and I can not read by "basic"
> cookie that is happily visible from functions that are in main.py. As a
> result I can not read the user's session settings, nor their defaults,
> and the script falls back to system defaults.
> 
> I've also done some testing, and here a small script showing part of the
> strange behaviour.
> When starting up the very first time, you have no cookies (makes sense),
> and "language" is set to system default "en". However if you start
> switching it through the links, the language is NOT saved in the
> session, nor a "basic" cookie is set at all. This cookie is supposed to
> be set in the home function, to store the current user settings for
> later use.
> 
> ----------------- BEGIN test.py
> from mod_python import Cookie
> from mod_python import Session
> 
> import time
> 
> def home (req):
>     req.content_type = "text/html; charset=utf-8"
>     username = ""
>     if not hasattr(req, "session"):
>         req.session = get_session(req)
>     language = req.session["language"]
>     req.write("home got language: "+language+"<br>")
>     # update the cookie on the user's side
>     value = {"language": language, "username": username}
>     Cookie.add_cookie(req,
>                       Cookie.MarshalCookie("basic", value, "gezellig",
>                                            expires = time.time() +
> 7776000 # 90 days
>                                            ))
>     req.write("Language switcher: <a href=./en>en</a>  <a
> href=./cn>cn</a><br>")
> 
> def en(req):
>     if not hasattr(req, "session"):
>         req.session = get_session(req)
>     req.session["language"] = "en"
>     req.session.save()
>     home(req)
>     return 
> 
> def cn(req):
>     if not hasattr(req, "session"):
>         req.session = get_session(req)
>     req.session["language"] = "cn"
>     req.session.save()
>     home(req)
>     return 
> 
> def get_session(req):
>     # gets the current session, checks if complete, if not reads
> defaults from
>     # the cookies.
>     sess = Session.Session(req)
>     req.content_type = "text/html; charset=utf-8"
>     # read user's settings from their cookies
>     language = "en" # system default
>     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
>                                  secret = "gezellig")
>     req.write("found cookies: "+str(cookies)+"<br>")
>     if cookies.has_key("basic"):
>         # the basic info is stored in a cookie named "basic"
>         basiccookie = cookies["basic"]
>         if type(basiccookie) is Cookie.MarshalCookie:
>             try:
>                 language = basiccookie.value["language"]
>             except:
>                 pass
>     req.write("get_session got language: "+language+"<br>")
>     sess["language"] = language
>     return sess
> -------------------------- END test.py
> 
> 
> Wouter.
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From grahamd at dscpl.com.au  Thu May 12 23:24:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 12 23:24:55 2005
Subject: [mod_python] Cookies and sessions trouble
Message-ID: <1115954693.25469@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
> Sometimes I feel so stupid... remembering "no req.write before finishing
> the cookies", Stripping those, the cookies part at least works within
> this test module, and seems to work OK in the real page as well. Now the
> rest of the problems still persist:
> 
> main.py/home produces a page that a.o. links to user.py/register.
> 
> user.py imports main.py (import main), and sometimes gets the error
> message "No module named main". Sometimes it goes fine, and the module
> is imported and starts running.
> 
> It seems the include goes well, as long as I to it within a minute or
> two from loading the home page (main.py/home). If quickly after that I
> click <reload> in the browser it goes fine, a moment later I get the
> include error.
> 
> Also I just noticed that changes made to main.py are not used when
> including main in user.py, until I restart apache. I got some old
> wordings that were changed in the source. Some too persistent caching at
> work here?


Using "import main" is not a good idea when the "main.py" is also being
loaded by mod_python by its module loading system. Instead of:

  import main

use:

  main = apache.import_module("main")

You may have to use something like:

  import os

  directory = os.path.split(__file__)[0]
  main = apache.import_module("main",path=[directory])

if wanting to load a module from a location not in sys.path. The latter is
in some ways perfered so as to make sure you get the correct version.

Hmmm, this all may not work in mod_python 3.2 from what I have
seen of changes to module loading mechanism used specifically for
mod_python.publisher in that version. You may have to replace use of
apache.import_module() with use of publisher specific module loader
in that version when it is available.

Graham
From wouter at squirrel-systems.com  Thu May 12 23:39:03 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu May 12 23:39:09 2005
Subject: [mod_python] Cookies and sessions trouble
In-Reply-To: <1115954693.25469@dscpl.user.openhosting.com>
References: <1115954693.25469@dscpl.user.openhosting.com>
Message-ID: <1115955543.1115.113.camel@cm61-10-50-104.hkcable.com.hk>

On Thu, 2005-05-12 at 23:24 -0400, Graham Dumpleton wrote:
> Wouter van Marle wrote ..
> > Sometimes I feel so stupid... remembering "no req.write before finishing
> > the cookies", Stripping those, the cookies part at least works within
> > this test module, and seems to work OK in the real page as well. Now the
> > rest of the problems still persist:
> > 
> > main.py/home produces a page that a.o. links to user.py/register.
> > 
> > user.py imports main.py (import main), and sometimes gets the error
> > message "No module named main". Sometimes it goes fine, and the module
> > is imported and starts running.
> > 
> > It seems the include goes well, as long as I to it within a minute or
> > two from loading the home page (main.py/home). If quickly after that I
> > click <reload> in the browser it goes fine, a moment later I get the
> > include error.
> > 
> > Also I just noticed that changes made to main.py are not used when
> > including main in user.py, until I restart apache. I got some old
> > wordings that were changed in the source. Some too persistent caching at
> > work here?
> 
> 
> Using "import main" is not a good idea when the "main.py" is also being
> loaded by mod_python by its module loading system. Instead of:
> 
>   import main
> 
> use:
> 
>   main = apache.import_module("main")
> 

Graham, 

apache.import_module("main") works, as in it loads the module, however
now the "module not found" errors have been replaced by "AttributeError:
'module' object has no attribute 'get_session'" errors. So still not
really a solution...

I'll at least check out the apache module, maybe indeed something
different to what you suggested.

Wouter.


> You may have to use something like:
> 
>   import os
> 
>   directory = os.path.split(__file__)[0]
>   main = apache.import_module("main",path=[directory])
> 
> if wanting to load a module from a location not in sys.path. The latter is
> in some ways perfered so as to make sure you get the correct version.
> 
> Hmmm, this all may not work in mod_python 3.2 from what I have
> seen of changes to module loading mechanism used specifically for
> mod_python.publisher in that version. You may have to replace use of
> apache.import_module() with use of publisher specific module loader
> in that version when it is available.
> 
> Graham
> 
> 

From wouter at squirrel-systems.com  Thu May 12 23:45:26 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu May 12 23:45:32 2005
Subject: [mod_python] (more) Cookies trouble
In-Reply-To: <1115954693.25469@dscpl.user.openhosting.com>
References: <1115954693.25469@dscpl.user.openhosting.com>
Message-ID: <1115955926.1115.121.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

Now the following issue, see the scripts below for demonstration of how
it "works" here.
test.py/home serves a simple home page, with two hyperlinks (linking
back to modules within test.py) and a button linking to
"testuser.py/register". Here also something goes wrong: the language
session does not persist.
testuser.register finds there is no session present (no attribute
'session' in req present), so calls back to main.get_session(req) to get
it's session. There the session should be opened, and if not found,
defaults read from the "basic" cookie that is set previously, it is set
with path "/python/test.py" according to Mozilla's cookie manager.
get_session(req) however now appears to be unable to read the "basic"
cookie, and returns the default value to testuser.register, instead of
the value read in the cookie.

------------------ BEGIN test.py
from mod_python import Cookie
from mod_python import Session

import time

def home (req):
    req.content_type = "text/html; charset=utf-8"
    username = ""
    if not hasattr(req, "session"):
        req.session = get_session(req)
    language = req.session["language"]
    # update the cookie on the user's side
    value = {"language": language, "username": username}
    Cookie.add_cookie(req,
                      Cookie.MarshalCookie("basic", value, "gezellig",
                                           expires = time.time() + 7776000 # 90 days
                                           ))
    cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
                                 secret = "gezellig")
    req.write("found cookies: "+str(cookies)+"<br>")
    req.write("home got language: "+language+"<br>")
    req.write("Language switcher: <a href=./en>en</a>  <a href=./cn>cn</a><br>")
    req.write("""register: <form action="../../python/testuser.py/register" method="post"><input value="Register" name="Register" type="submit">""")

def en(req):
    if not hasattr(req, "session"):
        req.session = get_session(req)
    req.session["language"] = "en"
    req.session.save()
    home(req)
    return 

def cn(req):
    if not hasattr(req, "session"):
        req.session = get_session(req)
    req.session["language"] = "cn"
    req.session.save()
    home(req)
    return 

def get_session(req):
    # gets the current session, checks if complete, if not reads defaults from
    # the cookies.
    sess = Session.Session(req)
    req.content_type = "text/html; charset=utf-8"
    # read user's settings from their cookies
    language = "default" # system default
    cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
                                 secret = "gezellig")
    if cookies.has_key("basic"):
        # the basic info is stored in a cookie named "basic"
        basiccookie = cookies["basic"]
        if type(basiccookie) is Cookie.MarshalCookie:
            try:
                language = basiccookie.value["language"]
            except:
                pass
    sess["language"] = language
    return sess

------------------ END test.py

------------------ BEGIN usertest.py
from mod_python import apache
from mod_python import Cookie

test = apache.import_module("test")

def register (req):
    req.content_type = "text/html; charset=utf-8"
    if not hasattr(req, "session"):
        req.session = test.get_session(req)
    req.write("got cookies: %s <br>"% str(Cookie.get_cookies(req, Cookie.MarshalCookie, secret = "gezellig")))
    req.write("got language: %s <br>"% req.session["language"])

------------------ END usertest.py


From mogmios at mlug.missouri.edu  Thu May 12 23:48:34 2005
From: mogmios at mlug.missouri.edu (Michael)
Date: Thu May 12 23:47:38 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
In-Reply-To: <1115950110.15080@dscpl.user.openhosting.com>
References: <1115950110.15080@dscpl.user.openhosting.com>
Message-ID: <42842392.9070309@mlug.missouri.edu>


>Most likely cause arises from fact that PyXML module in Python embeds its
>own version of expat code. If something else you use with Apache, such as
>PHP, links against a shared library version of expat library and the versions
>are different, you will see a server crash when importing any Python module
>which uses the XML module.
>  
>
I only compile SSL and mod_python into Apache and use a custom compiled 
copy of Python with it. I also use sgmlop (I tried with and without 
after compile..) but that doesn't seem to make any difference now. Any 
idea what else I should look at?

--
Michael <mogmios@mlug.missouri.edu>
http://kavlon.org

From grahamd at dscpl.com.au  Thu May 12 23:48:34 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 12 23:48:37 2005
Subject: [mod_python] Cookies and sessions trouble
Message-ID: <1115956114.6380@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
> > Using "import main" is not a good idea when the "main.py" is also being
> > loaded by mod_python by its module loading system. Instead of:
> > 
> >   import main
> > 
> > use:
> > 
> >   main = apache.import_module("main")
> > 
> 
> apache.import_module("main") works, as in it loads the module, however
> now the "module not found" errors have been replaced by "AttributeError:
> 'module' object has no attribute 'get_session'" errors. So still not
> really a solution...
> 
> I'll at least check out the apache module, maybe indeed something
> different to what you suggested.

Do you have a "main.py" located anywhere else in your document tree?

There are some issues with using the same named file with the publisher
extensions in more than one directory. This may or may not be related:

  http://issues.apache.org/jira/browse/MODPYTHON-9
  http://issues.apache.org/jira/browse/MODPYTHON-10
  http://issues.apache.org/jira/browse/MODPYTHON-11

The original import problem is covered by:

  http://issues.apache.org/jira/browse/MODPYTHON-12

Graham
From grahamd at dscpl.com.au  Fri May 13 00:00:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 13 00:00:47 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
Message-ID: <1115956843.14068@dscpl.user.openhosting.com>

Michael wrote ..
> 
> >Most likely cause arises from fact that PyXML module in Python embeds
> its
> >own version of expat code. If something else you use with Apache, such
> as
> >PHP, links against a shared library version of expat library and the versions
> >are different, you will see a server crash when importing any Python module
> >which uses the XML module.
> >  
> >
> I only compile SSL and mod_python into Apache and use a custom compiled
> copy of Python with it. I also use sgmlop (I tried with and without 
> after compile..) but that doesn't seem to make any difference now. Any
> idea what else I should look at?

Compiled in or loaded as DSO?

In respect of PHP, it doesn't need to be compiled in, it merely needs to be
loaded as DSO using LoadModule directive. A PHP page doesn't even need
to have been loaded by a request.

Anyway, expat shared library versioning issues is the only cause I know of
for importing of XML type modules crashing Apache. Suggest that in a
separate handler you try importing "xmlrpclib" and see if you get the same
sort of crash.

BTW, ever looked at Vampire? It has a nice and simple mechanism for
creating XML-RPC services in mod_python.

  http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html#implementing-web-services

Using Vampire's mechanism is better than SimpleXMLRPCServer as it
optionally allows you to access the original mod_python "req" object if
you need to:

  http://www.dscpl.com.au/projects/vampire/source/examples/xmlrpc/service.py

Also allows publishing of basic data types such that call will return their
value without you needing to wrap them with an actual function.

Graham
From wouter at squirrel-systems.com  Fri May 13 00:39:14 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Fri May 13 00:39:20 2005
Subject: [mod_python] Cookies and sessions trouble
In-Reply-To: <1115956114.6380@dscpl.user.openhosting.com>
References: <1115956114.6380@dscpl.user.openhosting.com>
Message-ID: <1115959154.1115.125.camel@cm61-10-50-104.hkcable.com.hk>

On Thu, 2005-05-12 at 23:48 -0400, Graham Dumpleton wrote:
> Wouter van Marle wrote ..
> > > Using "import main" is not a good idea when the "main.py" is also being
> > > loaded by mod_python by its module loading system. Instead of:
> > > 
> > >   import main
> > > 
> > > use:
> > > 
> > >   main = apache.import_module("main")
> > > 
> > 
> > apache.import_module("main") works, as in it loads the module, however
> > now the "module not found" errors have been replaced by "AttributeError:
> > 'module' object has no attribute 'get_session'" errors. So still not
> > really a solution...
> > 
> > I'll at least check out the apache module, maybe indeed something
> > different to what you suggested.
> 
> Do you have a "main.py" located anywhere else in your document tree?

All .py files are in the same directory (/python/main.py
and /python/user.py_. The issue as described below doesn't have to do
with it I think.

Wouter.

> There are some issues with using the same named file with the publisher
> extensions in more than one directory. This may or may not be related:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-9
>   http://issues.apache.org/jira/browse/MODPYTHON-10
>   http://issues.apache.org/jira/browse/MODPYTHON-11
> 
> The original import problem is covered by:
> 
>   http://issues.apache.org/jira/browse/MODPYTHON-12
> 
> Graham
> 
> 

From tusharpatil1982 at rediffmail.com  Fri May 13 01:31:41 2005
From: tusharpatil1982 at rediffmail.com (tushar liladhar patil)
Date: Fri May 13 01:30:26 2005
Subject: [mod_python] Is there any Reportlab user ...Please.
Message-ID: <20050513053141.21547.qmail@mailweb33.rediffmail.com>

  
I want to make pdf from xml file for that i m using reportlab I had written my own parser which will parse the xml and the text and images are collected in buffer.
  But my problem is that the buffer is in a continious stream like when a pdf is created the paragraph (say of 5 lines) in the xml file is shown like a single line means it is going out of the right side of pdf page
and i cant change or format thro' xml file bec'z it will affect other application,

can any one please help me ???
please do the needful ...

Thanking you,
Tushar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050513/576ddcde/attachment.html
From grahamd at dscpl.com.au  Fri May 13 02:01:51 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 13 02:01:53 2005
Subject: [mod_python] Is there any Reportlab user ...Please.
Message-ID: <1115964111.17641@dscpl.user.openhosting.com>

tushar liladhar patil wrote ..
>   
> I want to make pdf from xml file for that i m using reportlab I had written
> my own parser which will parse the xml and the text and images are collected
> in buffer.
>   But my problem is that the buffer is in a continious stream like when
> a pdf is created the paragraph (say of 5 lines) in the xml file is shown
> like a single line means it is going out of the right side of pdf page
> and i cant change or format thro' xml file bec'z it will affect other application,
> 
> can any one please help me ???
> please do the needful ...

Am guessing here, as not real clear what you are talking about, but are you
using what they refer to as "Platypus", the "Page Layout and Typography Using
Scripts" features of reportlab as described in Chapter 5 onwards of the User
Guide.

These features allow for automatic line wrapping, concepts of paragraphs etc.
If this is used, then a very long line of text should wrap and not be on one line.

Other than that suggestion, you might ask your question on the reportlab
mailing list, as it would appear to be a question about using reportlab and
nothing really to do with mod_python which is going to be merely serving
up your PDF document once created.

Graham
From nicolas.lehuen at gmail.com  Fri May 13 02:09:03 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri May 13 02:09:05 2005
Subject: [mod_python] Cookies and sessions trouble
In-Reply-To: <1115954693.25469@dscpl.user.openhosting.com>
References: <1115954693.25469@dscpl.user.openhosting.com>
Message-ID: <c298f2d705051223096365c904@mail.gmail.com>

2005/5/13, Graham Dumpleton <grahamd@dscpl.com.au>:
[...]
> 
> Using "import main" is not a good idea when the "main.py" is also being
> loaded by mod_python by its module loading system. Instead of:
> 
>   import main
> 
> use:
> 
>   main = apache.import_module("main")
> 
> You may have to use something like:
> 
>   import os
> 
>   directory = os.path.split(__file__)[0]
>   main = apache.import_module("main",path=[directory])
> 
> if wanting to load a module from a location not in sys.path. The latter is
> in some ways perfered so as to make sure you get the correct version.
> 
> Hmmm, this all may not work in mod_python 3.2 from what I have
> seen of changes to module loading mechanism used specifically for
> mod_python.publisher in that version. You may have to replace use of
> apache.import_module() with use of publisher specific module loader
> in that version when it is available.

Indeed. In the upcoming mod_python 3.2, published modules are not
imported using apache.import_module, so doing as described above would
work BUT the imported module would be another instance of the
published one... It would be OK for reusing code but not for sharing
data between pages.

I didn't think about this use case, I'll have to add a function to the
publisher module so that a page can be imported in another page for
code reusal or data sharing. Something like publisher.import_page ?

Regards,

Nicolas

From mogmios at mlug.missouri.edu  Fri May 13 03:07:43 2005
From: mogmios at mlug.missouri.edu (Michael)
Date: Fri May 13 03:06:42 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
In-Reply-To: <1115956843.14068@dscpl.user.openhosting.com>
References: <1115956843.14068@dscpl.user.openhosting.com>
Message-ID: <4284523F.1020902@mlug.missouri.edu>

Linux/2.4.25 Apache/2.0.54 (Unix) mod_ssl/2.0.54 OpenSSL/0.9.7 
mod_python/3.1.4 Python/2.4.1

>Compiled in or loaded as DSO?
>  
>
DSO

>In respect of PHP, it doesn't need to be compiled in, it merely needs to be
>loaded as DSO using LoadModule directive. A PHP page doesn't even need
>to have been loaded by a request.
>  
>
There is no PHP of any kind installed. I'm compiling from source all 
components and would know if I was including PHP. Anyway it doesn't show 
up in my logs as including PHP. :)

>Anyway, expat shared library versioning issues is the only cause I know of
>for importing of XML type modules crashing Apache. Suggest that in a
>separate handler you try importing "xmlrpclib" and see if you get the same
>sort of crash.
>  
>
xmlrpclib causes the same problem. Does mod python have issues with 
threading or forking or anything like that which I need to take into 
account?

>BTW, ever looked at Vampire? It has a nice and simple mechanism for
>creating XML-RPC services in mod_python.
>  
>
I've heard it mentioned but haven't tried it. I have an existing xmlrpc 
module of my own making that I use and it works fine (when xml works at 
all.. evidently) although I don't doubt that better modules exist. The 
main feature I like about it is that if you access the server with a 
normal web browser you can browse the code's documentation. No idea if 
Vampire and other xmlrpc module do that too. I really don't need 
anything fancy other than that though.

For a different project, I do need a lightweight XML-RPC service that 
can run without Apache but I am thinking of trying Twisted for that.

>Using Vampire's mechanism is better than SimpleXMLRPCServer as it
>optionally allows you to access the original mod_python "req" object if
>you need to:
>  
>
To what purpose?

>Also allows publishing of basic data types such that call will return their
>value without you needing to wrap them with an actual function.
>  
>
Not a bad idea.

-- 
Michael <mogmios@mlug.missouri.edu>
http://kavlon.org

From grahamd at dscpl.com.au  Fri May 13 03:22:26 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 13 03:22:28 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
Message-ID: <1115968946.29920@dscpl.user.openhosting.com>

Michael wrote ..
> xmlrpclib causes the same problem. Does mod python have issues with 
> threading or forking or anything like that which I need to take into 
> account?

Threading/forking shouldn't be an issue. Still think it would be a shared
library versioning issue.

All I can suggest is you look at what "xmlrpclib" module imports and then
import them explicitly and slowly drop each import out until you find
the culprit. Keep doing this recursively as needs be.

> The
> main feature I like about it is that if you access the server with a 
> normal web browser you can browse the code's documentation. No idea if
> Vampire and other xmlrpc module do that too. I really don't need 
> anything fancy other than that though.

Depends on what you mean by documentatin. Ie., automatically generated
from introspection or simply a HTML page. Because in Vampire the handlers
are resource based, you could have the base handler with no extension
be the XML-RPC service and the same name with ".html" extension refer
to documentation. This HTML page could be static or you could write
Python code to generate it by introspection of same object that was published
as XML-RPC service if desired. In other words, the infrastucture is there
to do it.

> For a different project, I do need a lightweight XML-RPC service that 
> can run without Apache but I am thinking of trying Twisted for that.

I'm not sure I would call Twisted lightweight. :-)

> >Using Vampire's mechanism is better than SimpleXMLRPCServer as it
> >optionally allows you to access the original mod_python "req" object if
> >you need to:
> >  
> >
> To what purpose?

Blocking access based on originating client IP address or making use of
additional path info supplied in request URL as adjunct to selection
mechanism to determine what data request should be applied to. Could
also be used for logging stuff in log files with details marked up against
the specific URL which was used.

Graham
From craig.warren at encorp.com  Fri May 13 10:42:41 2005
From: craig.warren at encorp.com (Craig Warren)
Date: Fri May 13 10:43:04 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
In-Reply-To: <42840757.70605@mlug.missouri.edu>
References: <42840757.70605@mlug.missouri.edu>
Message-ID: <4284BCE1.9070001@encorp.com>

I have found that you need version 1.95.8 of expat.  I had the same 
problem and  was using version 1.95.7 before Fedora Core  2

[cwarren@lapbob clean]$ rpm -qi expat
Name        : expat                        Relocations: (not relocatable)
Version     : 1.95.8                            Vendor: (none)
Release     : 4                             Build Date: Tue 28 Dec 2004 
02:55:23 PM MST
Install Date: Tue 28 Dec 2004 02:55:53 PM MST      Build Host: lapbob
Group       : System Environment/Libraries   Source RPM: 
expat-1.95.8-4.src.rpm
Size        : 157806                           License: BSD
Signature   : (none)
URL         : http://www.libexpat.org/
Summary     : A library for parsing XML.



Michael wrote:

> I [foolishly] recompiled my Apache/MP server with the newest versions 
> of Apache, MP, and Python. Now I get a seg fault any time my code 
> tries to import SimpleXMLRPCServer. This code used to work. Any ideas 
> why it doesn't now? Did I possibly make a mistake when recompiling it 
> or has something changed?
>
> -- 
> Michael <mogmios@mlug.missouri.edu>
> http://kavlon.org
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050513/7eae51ec/attachment.html
From mcassiano at manord.com  Fri May 13 11:47:25 2005
From: mcassiano at manord.com (Cassiano, Marco)
Date: Fri May 13 11:47:09 2005
Subject: [mod_python] Few lines of code that make my mod_python crash
Message-ID: <52DC70C1C1575C418CB033523A29CF1403AD5399@exchange2000.manord.com>

Hi all,
 
Please, look at these few lines of code :
 
import shelve
 
def test(req):
        s=shelve.open('/tmp/test')
        return 'OK'
 
I have a Linux box with RedHat 3 AS, ActiveState Python 2.4.1,
Mod_python 3.1.4 (compiled with the --with-python option) (but I also
tried with python 2.4.1 from www.python.org <http://www.python.org/>  ,
compiled with BerkeleyDB 4.3 from sleepycat (also tried versione 4.2)
and with mod_python 3.1.4 compiled with the --with-python option).
 
The version of Apache is 2.0.46-25.ent 
 
If I try to execute these few lines from mod_python I get the error you
can see below (also tried with mod_python_servlets, same result, see
bottom of the message)
If I execute the same lines one at a time from the python interpreter or
If I run a script version of these lines from the bash prompt (e.g.
python scripttest.py) they work perfectly.
 
Any suggestion?
Thank you
 
Marco Cassiano
 
 
The Publisher output
----------------------
 
Mod_python error: "PythonHandler mod_python.publisher"
 
Traceback (most recent call last):
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch
    result = object(req)
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/publisher.p
y", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/util.py",
line 361, in apply_fs_data
    return object(**args)
 
  File "/discoe/script/cgi/cgi-mpy/marco.py", line 6, in test
    s=shelve.open('/tmp/test')
 
  File "/usr/local/python2.4/lib/python2.4/shelve.py", line 231, in open
    return DbfilenameShelf(filename, flag, protocol, writeback, binary)
 
  File "/usr/local/python2.4/lib/python2.4/shelve.py", line 212, in
__init__
    Shelf.__init__(self, anydbm.open(filename, flag), protocol,
writeback, binary)
 
  File "/usr/local/python2.4/lib/python2.4/anydbm.py", line 83, in open
    return mod.open(file, flag, mode)
 
  File "/usr/local/python2.4/lib/python2.4/dbhash.py", line 16, in open
    return bsddb.hashopen(file, flag, mode)
 
  File "/usr/local/python2.4/lib/python2.4/bsddb/__init__.py", line 285,
in hashopen
    e = _openDBEnv()
 
  File "/usr/local/python2.4/lib/python2.4/bsddb/__init__.py", line 339,
in _openDBEnv
    e.open('.', db.DB_PRIVATE | db.DB_CREATE | db.DB_THREAD |
db.DB_INIT_LOCK | db.DB_INIT_MPOOL)
 
DBError: (141528656, 'Unknown error 141528656')
 
 
The servlet version :
 
import shelve
from mod_python.servlet import HTMLPage
 
class marcos(HTMLPage):
        
        def write_content(self):
 
                s=shelve.open('/tmp/test')
                return 'OK'
 
 
 
The servlet output :
 
 
Mod_python error: "PythonHandler mod_python.servlet"
 
Traceback (most recent call last):
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/apache.py",
line 299, in HandlerDispatch
    result = object(req)
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/servlet.py"
, line 1465, in handler
    if not servlet.respond():
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/servlet.py"
, line 918, in respond
    return Servlet.respond(self) or self.write_html()
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/servlet.py"
, line 938, in write_html
    self.write_body()
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/servlet.py"
, line 1212, in write_body
    self.write_body_parts()
 
  File
"/usr/local/python2.4/lib/python2.4/site-packages/mod_python/servlet.py"
, line 1233, in write_body_parts
    self.write_content()
 
  File "/discoe/script/cgi/cgi-mpy/marcos.mps", line 9, in write_content
    s=shelve.open('/tmp/test')
 
  File "/usr/local/python2.4/lib/python2.4/shelve.py", line 231, in open
    return DbfilenameShelf(filename, flag, protocol, writeback, binary)
 
  File "/usr/local/python2.4/lib/python2.4/shelve.py", line 212, in
__init__
    Shelf.__init__(self, anydbm.open(filename, flag), protocol,
writeback, binary)
 
  File "/usr/local/python2.4/lib/python2.4/anydbm.py", line 83, in open
    return mod.open(file, flag, mode)
 
  File "/usr/local/python2.4/lib/python2.4/dbhash.py", line 16, in open
    return bsddb.hashopen(file, flag, mode)
 
  File "/usr/local/python2.4/lib/python2.4/bsddb/__init__.py", line 285,
in hashopen
    e = _openDBEnv()
 
  File "/usr/local/python2.4/lib/python2.4/bsddb/__init__.py", line 339,
in _openDBEnv
    e.open('.', db.DB_PRIVATE | db.DB_CREATE | db.DB_THREAD |
db.DB_INIT_LOCK | db.DB_INIT_MPOOL)
 

DBError: (142908256, 'Unknown error 142908256')

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050513/3e657888/attachment-0001.html
From mogmios at mlug.missouri.edu  Fri May 13 20:00:08 2005
From: mogmios at mlug.missouri.edu (Michael)
Date: Fri May 13 19:59:00 2005
Subject: [mod_python] SimpleXMLRPCServer causing seg fault?
In-Reply-To: <4284BCE1.9070001@encorp.com>
References: <42840757.70605@mlug.missouri.edu> <4284BCE1.9070001@encorp.com>
Message-ID: <42853F88.3030504@mlug.missouri.edu>


> I have found that you need version 1.95.8 of expat.  I had the same 
> problem and  was using version 1.95.7 before Fedora Core  2

Thanks - that seems to have fixed my problem. In case anyone else is 
looking for an rpm of the needed version of expat I'm including the url 
here..

http://fr2.rpmfind.net//linux/RPM/fedora/development/i386/expat-1.95.8-6.i386.html

--
Michael <mogmios@mlug.missouri.edu>
http://kavlon.org

From wouter at squirrel-systems.com  Fri May 13 22:45:00 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Fri May 13 22:45:08 2005
Subject: [mod_python] (more) Cookies trouble
In-Reply-To: <1115955926.1115.121.camel@cm61-10-50-104.hkcable.com.hk>
References: <1115954693.25469@dscpl.user.openhosting.com>
	<1115955926.1115.121.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <1116038700.1115.221.camel@cm61-10-50-104.hkcable.com.hk>

Well, the below issue is solved: I had to add the statement 'path = "/"'
or 'path = "/python"' when setting the cookie:
Cookie.add_cookie(req,
                  Cookie.MarshalCookie("basic", value, "gezellig",
                                       expires = time.time() + 7776000,
                                       path = "/"
                                       ))
And now it works all nicely. Apparently it started searching with the
original script as path ("/python/usertest.py") instead of
"/python/test.py" which was the path of the called script, and the path
set in the cookie.

Now only the importing issue!

Wouter.

On Fri, 2005-05-13 at 11:45 +0800, Wouter van Marle wrote:
> Hi all,
> 
> Now the following issue, see the scripts below for demonstration of how
> it "works" here.
> test.py/home serves a simple home page, with two hyperlinks (linking
> back to modules within test.py) and a button linking to
> "testuser.py/register". Here also something goes wrong: the language
> session does not persist.
> testuser.register finds there is no session present (no attribute
> 'session' in req present), so calls back to main.get_session(req) to get
> it's session. There the session should be opened, and if not found,
> defaults read from the "basic" cookie that is set previously, it is set
> with path "/python/test.py" according to Mozilla's cookie manager.
> get_session(req) however now appears to be unable to read the "basic"
> cookie, and returns the default value to testuser.register, instead of
> the value read in the cookie.
> 
> ------------------ BEGIN test.py
> from mod_python import Cookie
> from mod_python import Session
> 
> import time
> 
> def home (req):
>     req.content_type = "text/html; charset=utf-8"
>     username = ""
>     if not hasattr(req, "session"):
>         req.session = get_session(req)
>     language = req.session["language"]
>     # update the cookie on the user's side
>     value = {"language": language, "username": username}
>     Cookie.add_cookie(req,
>                       Cookie.MarshalCookie("basic", value, "gezellig",
>                                            expires = time.time() + 7776000 # 90 days
>                                            ))
>     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
>                                  secret = "gezellig")
>     req.write("found cookies: "+str(cookies)+"<br>")
>     req.write("home got language: "+language+"<br>")
>     req.write("Language switcher: <a href=./en>en</a>  <a href=./cn>cn</a><br>")
>     req.write("""register: <form action="../../python/testuser.py/register" method="post"><input value="Register" name="Register" type="submit">""")
> 
> def en(req):
>     if not hasattr(req, "session"):
>         req.session = get_session(req)
>     req.session["language"] = "en"
>     req.session.save()
>     home(req)
>     return 
> 
> def cn(req):
>     if not hasattr(req, "session"):
>         req.session = get_session(req)
>     req.session["language"] = "cn"
>     req.session.save()
>     home(req)
>     return 
> 
> def get_session(req):
>     # gets the current session, checks if complete, if not reads defaults from
>     # the cookies.
>     sess = Session.Session(req)
>     req.content_type = "text/html; charset=utf-8"
>     # read user's settings from their cookies
>     language = "default" # system default
>     cookies = Cookie.get_cookies(req, Cookie.MarshalCookie,
>                                  secret = "gezellig")
>     if cookies.has_key("basic"):
>         # the basic info is stored in a cookie named "basic"
>         basiccookie = cookies["basic"]
>         if type(basiccookie) is Cookie.MarshalCookie:
>             try:
>                 language = basiccookie.value["language"]
>             except:
>                 pass
>     sess["language"] = language
>     return sess
> 
> ------------------ END test.py
> 
> ------------------ BEGIN usertest.py
> from mod_python import apache
> from mod_python import Cookie
> 
> test = apache.import_module("test")
> 
> def register (req):
>     req.content_type = "text/html; charset=utf-8"
>     if not hasattr(req, "session"):
>         req.session = test.get_session(req)
>     req.write("got cookies: %s <br>"% str(Cookie.get_cookies(req, Cookie.MarshalCookie, secret = "gezellig")))
>     req.write("got language: %s <br>"% req.session["language"])
> 
> ------------------ END usertest.py
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From wouter at squirrel-systems.com  Fri May 13 23:34:11 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Fri May 13 23:34:17 2005
Subject: [mod_python] More success
Message-ID: <1116041651.1115.229.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

The problems importing my modules are solved, using the following
statement, as suggested by Graham:
  
import os
directory = os.path.split(__file__)[0]
main = apache.import_module("main",path=[directory])


The simpler version:

main = apache.import_module("main")

suffers from loss of the module; apparently the current path of the file
that's being run, is not added to syspath like what happens in normal
python programs. This was unexpected to me.

Wouter.

From grahamd at dscpl.com.au  Sat May 14 00:39:00 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 14 00:39:19 2005
Subject: [mod_python] More success
In-Reply-To: <1116041651.1115.229.camel@cm61-10-50-104.hkcable.com.hk>
References: <1116041651.1115.229.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <8370321e9fbde0db2836837e657b4b51@dscpl.com.au>


On 14/05/2005, at 1:34 PM, Wouter van Marle wrote:

> Hi all,
>
> The problems importing my modules are solved, using the following
> statement, as suggested by Graham:
>
> import os
> directory = os.path.split(__file__)[0]
> main = apache.import_module("main",path=[directory])
>
>
> The simpler version:
>
> main = apache.import_module("main")
>
> suffers from loss of the module; apparently the current path of the 
> file
> that's being run, is not added to syspath like what happens in normal
> python programs. This was unexpected to me.

It is added to sys.path, but only for the actual directory for which
PythonHandler is defined. Thus, if file was in a subdirectory, it 
wouldn't
be found. If you define PythonPath explicitly, this can also prevent
it being added to sys.path.

Graham

From grisha at modpython.org  Sat May 14 13:50:53 2005
From: grisha at modpython.org (grisha@modpython.org)
Date: Sat May 14 13:51:01 2005
Subject: [mod_python] Returned mail: Data format error
Message-ID: <200505141749.j4EHnbxn020852@modpython.org>

The original message was received at Sun, 15 May 2005 03:50:53 +1000
from modpython.org [134.145.59.222]

----- The following addresses had permanent fatal errors -----
mod_python@modpython.org

----- Transcript of session follows -----
... while talking to mail server 133.145.146.18:
554 Service unavailable; [219.80.109.15] blocked using bl.spamcop.net
Session aborted, reason: lost connection

-------------- next part --------------
A non-text attachment was scrubbed...
Name: readme.zip
Type: application/octet-stream
Size: 28982 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050515/e8b97f47/readme-0001.obj
From quirxi at aon.at  Sat May 14 18:08:00 2005
From: quirxi at aon.at (Arno Wilhelm)
Date: Sat May 14 18:08:08 2005
Subject: [mod_python] os.system() call does not work within mod_python script
Message-ID: <428676C0.6060904@aon.at>

Hello,

I have got a proble for which I cannot find a proper solution:

Whenever a user on his browser hits a certain page (served by mod_python) the 
mod_python should send a SIGUSR signal to a certain process in order to force a 
update on him like this

# os.system( "kill -s SIGUSR1 26199" )

Whenever I make this call from within a python script it works. But whenever I 
try to build it into the mod_python script that is handled by apache it does not 
work. After that I have experimented with other os.system calls from within 
mod_python scripts and all of them seem to be ignored somehow.

Could someone here possibly shed some light on this issue, since I am on the end 
of my knowledge.


Thanks,

quirxi
From grahamd at dscpl.com.au  Sat May 14 19:21:27 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 14 19:21:39 2005
Subject: [mod_python] os.system() call does not work within mod_python
	script
In-Reply-To: <428676C0.6060904@aon.at>
References: <428676C0.6060904@aon.at>
Message-ID: <979688eab85c558405880f2d8a700d08@dscpl.com.au>

On 15/05/2005, at 8:08 AM, Arno Wilhelm wrote:

> Hello,
>
> I have got a proble for which I cannot find a proper solution:
>
> Whenever a user on his browser hits a certain page (served by 
> mod_python) the mod_python should send a SIGUSR signal to a certain 
> process in order to force a update on him like this
>
> # os.system( "kill -s SIGUSR1 26199" )
>
> Whenever I make this call from within a python script it works. But 
> whenever I try to build it into the mod_python script that is handled 
> by apache it does not work. After that I have experimented with other 
> os.system calls from within mod_python scripts and all of them seem to 
> be ignored somehow.
>
> Could someone here possibly shed some light on this issue, since I am 
> on the end of my knowledge.

A few things to consider.

1. Set full pathnames to the programs in the command.

The PATH setup for Apache may not be that useful. It may reference
some standard locations, but not much. Thus, if you expect program
to be found by searching PATH, it may not work.

2. Don't rely on the current working directory to be anything specific.

Normally current working directory would be '/' and nothing to to do
with where any Python request handler will be. Any references to files
should always be as absolute paths.

3. Apache usually runs as user "nobody" or some other special user.

Because Apache runs as a special user, it often will not have the
necessary privileges to be able to write to directories or send signals
to processes running as another user.

4. Log output of scripts to a directory in "/tmp".

As a way of working out problems, send the output of any commands to
a log file in "/tmp". Ie., run your command as:

   os.system( "kill -s SIGUSR1 26199 >> /tmp/dummy.log 2>&1" )

This will allow you to see any errors. With the way that Apache works,
you might not otherwise see errors generated by a call to os.system()
until Apache is shutdown and certain buffers are flushed out.

Graham


From quirxi at aon.at  Sun May 15 06:59:43 2005
From: quirxi at aon.at (Arno Wilhelm)
Date: Sun May 15 06:59:51 2005
Subject: [mod_python] os.system() call does not work within mod_python
	script
In-Reply-To: <979688eab85c558405880f2d8a700d08@dscpl.com.au>
References: <428676C0.6060904@aon.at>
	<979688eab85c558405880f2d8a700d08@dscpl.com.au>
Message-ID: <42872B9F.6050401@aon.at>

Hello,

thanks for your help.

I have resolved the issue now. User apache is not allowed to issue (almost) any 
command. I had to load the suexec module that uses the command suexec2 in order 
to get that to work!

The only command that worked without the suexec_module was the echo command:
system( "/bin/echo Hello_mod_python >> /tmp/dummy.log 2>&1" )

Any other command from within a mod_python script did not show any results, 
except an empty /tmp/dummy file (but not even an error message) at all!

When I load the suexec_module in apache2.conf like this:

LoadModule suexec_module      modules/mod_suexec.so
SuexecUserGroup root root

apache2 seems to issue the command with the help of the suexec2 utility:

# suexec2 -V
  -D AP_DOC_ROOT="/var/www"
  -D AP_GID_MIN=100
  -D AP_HTTPD_USER="apache"
  -D AP_LOG_EXEC="/var/log/apache2/suexec_log"
  -D AP_SAFE_PATH="/usr/local/bin:/usr/bin:/bin"
  -D AP_SUEXEC_UMASK=077
  -D AP_UID_MIN=1000
  -D AP_USERDIR_SUFFIX="public_html"


See also this website for more details:
http://blog.develix.com/archives/33-Configuring-Apache-and-PHP-to-use-mod_suexec.html


Thanks and greetings,


quirxi

Graham Dumpleton wrote:
> On 15/05/2005, at 8:08 AM, Arno Wilhelm wrote:
> 
>> Hello,
>>
>> I have got a proble for which I cannot find a proper solution:
>>
>> Whenever a user on his browser hits a certain page (served by 
>> mod_python) the mod_python should send a SIGUSR signal to a certain 
>> process in order to force a update on him like this
>>
>> # os.system( "kill -s SIGUSR1 26199" )
>>
>> Whenever I make this call from within a python script it works. But 
>> whenever I try to build it into the mod_python script that is handled 
>> by apache it does not work. After that I have experimented with other 
>> os.system calls from within mod_python scripts and all of them seem to 
>> be ignored somehow.
>>
>> Could someone here possibly shed some light on this issue, since I am 
>> on the end of my knowledge.
> 
> 
> A few things to consider.
> 
> 1. Set full pathnames to the programs in the command.
> 
> The PATH setup for Apache may not be that useful. It may reference
> some standard locations, but not much. Thus, if you expect program
> to be found by searching PATH, it may not work.
> 
> 2. Don't rely on the current working directory to be anything specific.
> 
> Normally current working directory would be '/' and nothing to to do
> with where any Python request handler will be. Any references to files
> should always be as absolute paths.
> 
> 3. Apache usually runs as user "nobody" or some other special user.
> 
> Because Apache runs as a special user, it often will not have the
> necessary privileges to be able to write to directories or send signals
> to processes running as another user.
> 
> 4. Log output of scripts to a directory in "/tmp".
> 
> As a way of working out problems, send the output of any commands to
> a log file in "/tmp". Ie., run your command as:
> 
>   os.system( "kill -s SIGUSR1 26199 >> /tmp/dummy.log 2>&1" )
> 
> This will allow you to see any errors. With the way that Apache works,
> you might not otherwise see errors generated by a call to os.system()
> until Apache is shutdown and certain buffers are flushed out.
> 
> Graham
> 
> 
> 
> 

From wouter at squirrel-systems.com  Sun May 15 10:22:15 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Sun May 15 10:22:31 2005
Subject: [mod_python] os.system() call does not work within mod_python
	script
In-Reply-To: <42872B9F.6050401@aon.at>
References: <428676C0.6060904@aon.at>
	<979688eab85c558405880f2d8a700d08@dscpl.com.au>
	<42872B9F.6050401@aon.at>
Message-ID: <1116166936.1115.237.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

Arno, very interesting this issue, I'm going to remember it as I may
need it myself. Sounds useful.

One concern: are there any security risks involved here? It is not just
because that Apache runs as such a special unprivileged user. You
basically appear to open a door out of that sandbox. It is generally not
that hard to recognise Python is being used (e.g. urls ending in .py,
comments in the html source, .psp extensions).

Any comments, anyone?

Wouter.

On Sun, 2005-05-15 at 12:59 +0200, Arno Wilhelm wrote:
> Hello,
> 
> thanks for your help.
> 
> I have resolved the issue now. User apache is not allowed to issue (almost) any 
> command. I had to load the suexec module that uses the command suexec2 in order 
> to get that to work!
> 
> The only command that worked without the suexec_module was the echo command:
> system( "/bin/echo Hello_mod_python >> /tmp/dummy.log 2>&1" )
> 
> Any other command from within a mod_python script did not show any results, 
> except an empty /tmp/dummy file (but not even an error message) at all!
> 
> When I load the suexec_module in apache2.conf like this:
> 
> LoadModule suexec_module      modules/mod_suexec.so
> SuexecUserGroup root root
> 
> apache2 seems to issue the command with the help of the suexec2 utility:
> 
> # suexec2 -V
>   -D AP_DOC_ROOT="/var/www"
>   -D AP_GID_MIN=100
>   -D AP_HTTPD_USER="apache"
>   -D AP_LOG_EXEC="/var/log/apache2/suexec_log"
>   -D AP_SAFE_PATH="/usr/local/bin:/usr/bin:/bin"
>   -D AP_SUEXEC_UMASK=077
>   -D AP_UID_MIN=1000
>   -D AP_USERDIR_SUFFIX="public_html"
> 
> 
> See also this website for more details:
> http://blog.develix.com/archives/33-Configuring-Apache-and-PHP-to-use-mod_suexec.html
> 
> 
> Thanks and greetings,
> 
> 
> quirxi
> 
> Graham Dumpleton wrote:
> > On 15/05/2005, at 8:08 AM, Arno Wilhelm wrote:
> > 
> >> Hello,
> >>
> >> I have got a proble for which I cannot find a proper solution:
> >>
> >> Whenever a user on his browser hits a certain page (served by 
> >> mod_python) the mod_python should send a SIGUSR signal to a certain 
> >> process in order to force a update on him like this
> >>
> >> # os.system( "kill -s SIGUSR1 26199" )
> >>
> >> Whenever I make this call from within a python script it works. But 
> >> whenever I try to build it into the mod_python script that is handled 
> >> by apache it does not work. After that I have experimented with other 
> >> os.system calls from within mod_python scripts and all of them seem to 
> >> be ignored somehow.
> >>
> >> Could someone here possibly shed some light on this issue, since I am 
> >> on the end of my knowledge.
> > 
> > 
> > A few things to consider.
> > 
> > 1. Set full pathnames to the programs in the command.
> > 
> > The PATH setup for Apache may not be that useful. It may reference
> > some standard locations, but not much. Thus, if you expect program
> > to be found by searching PATH, it may not work.
> > 
> > 2. Don't rely on the current working directory to be anything specific.
> > 
> > Normally current working directory would be '/' and nothing to to do
> > with where any Python request handler will be. Any references to files
> > should always be as absolute paths.
> > 
> > 3. Apache usually runs as user "nobody" or some other special user.
> > 
> > Because Apache runs as a special user, it often will not have the
> > necessary privileges to be able to write to directories or send signals
> > to processes running as another user.
> > 
> > 4. Log output of scripts to a directory in "/tmp".
> > 
> > As a way of working out problems, send the output of any commands to
> > a log file in "/tmp". Ie., run your command as:
> > 
> >   os.system( "kill -s SIGUSR1 26199 >> /tmp/dummy.log 2>&1" )
> > 
> > This will allow you to see any errors. With the way that Apache works,
> > you might not otherwise see errors generated by a call to os.system()
> > until Apache is shutdown and certain buffers are flushed out.
> > 
> > Graham
> > 
> > 
> > 
> > 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From 54nd3r at nerim.net  Sun May 15 12:58:04 2005
From: 54nd3r at nerim.net (Sander Voerman)
Date: Sun May 15 12:58:18 2005
Subject: [mod_python] Sessions and Firefox
Message-ID: <635913F1-6201-4317-8A9C-3B69FE4C66CA@nerim.net>

Hi all,

I have a strange bug in Session, that only occurs when visiting the  
page with Firefox...

The problem is that, while all other variables are saved into the  
session, the variable sess['allofthem'] isn't saved when the page is  
visited with Firefox. It looks like an initialisation bug, because  
when the key 'allofthem' has been set by visiting the page with  
another browser, everything works flawless..

The goal of the script is to use the session id in the URL, to  
prevent all sorts of cross-domain errors in IE...

The script below can be tested live at: http://python.54nd3r.com/page? 
a=1&b=2
Click refresh to see what variables are saved and which aren't.

Does anyone else have any problems with Sessions and Firefox?

Thanks for all your time,

Sander

Demo script:
#############################################

from mod_python import apache, util, Session

def handler(req):
         """ Test program to illustrate strange Session and Firefox  
bug """
         ### Initialize
         req.content_type = "text/html"
         form = util.FieldStorage(req)
         sess = 0;

         ### Get the session ID from the GET url and initialize the  
session
         sid = form.get('session',None)
         if sid:
                 sess=Session.Session(req, sid, timeout=24*60*60)
         else:
                 sess=Session.Session(req, timeout=24*60*60)

         ### Format the params and values from the GET url
         formstrnew = formstr = " ".join(["%s:%s" % (k, form[k]) for  
k in form.keys()])

         ### Old session variables
         sessionvarsold = ";".join(["%s=%s" % (k, sess[k]) for k in  
sess.keys()])

         if sess.is_new():
                 ### The session is new
                 sess['allofthem'] = formstr
                 req.write("New session<br>")
         elif (sess.has_key('allofthem')):
                 ### Read the former query
                 formstr = sess['allofthem']
                 sess['allofthem'] = formstrnew
                 req.write("Old session<br>")

         ### Put all the submitted values into Session
         for k in form.keys():
                 sess[k] = form[k]

         ### Put all the values stored in Session into a string
         sessionvars = ";".join(["%s=%s" % (k, sess[k]) for k in  
sess.keys()])

         ### Save the session
         sess.save()

         refresh_url = 'http://python.54nd3r.com/page?'
         refresh_url += '&%s' % "&".join(["%s=%s" % (k, form[k]) for  
k in form.keys()])
         if not form.has_key('session'):
                 refresh_url += '&session=%s' % sess.id()

         ### Print the values stored in session

         req.write("Present in previous session  : %s <br>" % formstr)
         req.write("All values in the previous session : %s <br>" %  
sessionvarsold)
         req.write("Put into the current session : %s <br>" % sess 
['allofthem'])
         req.write("All values in the current session : %s <br>" %  
sessionvars)
         req.write("Session id : %s<br>" % sess.id())
         req.write('<a href="%s">refresh</a>' % refresh_url)

         return apache.OK
From quirxi at aon.at  Sun May 15 15:00:17 2005
From: quirxi at aon.at (Arno Wilhelm)
Date: Sun May 15 15:01:28 2005
Subject: [mod_python] os.system() call does not work within mod_python
	script
In-Reply-To: <1116166936.1115.237.camel@cm61-10-50-104.hkcable.com.hk>
References: <428676C0.6060904@aon.at>	<979688eab85c558405880f2d8a700d08@dscpl.com.au>	<42872B9F.6050401@aon.at>
	<1116166936.1115.237.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <42879C41.4070504@aon.at>

Hi

> One concern: are there any security risks involved here? It is not just
> because that Apache runs as such a special unprivileged user. You
> basically appear to open a door out of that sandbox. It is generally not
> that hard to recognise Python is being used (e.g. urls ending in .py,
> comments in the html source, .psp extensions).
> 
> Any comments, anyone?

I do not think that is a big security risk if you take some precautions.
Never let anybody else have access to your computer so that he can change the 
scripts directly. Nor would I use variables as an argument to the os.system call ...
I think this mod_suexec was made in order to allow a save execution of cgi scripts.
Here is a good page that deals with that security concern:
http://httpd.apache.org/docs-2.0/suexec.html

But I have to admit that I am not a security expert and as usual - a talented 
hacker with enough time might find a way to break into the system :(


regards,

quirxi



> Wouter.
> 
> On Sun, 2005-05-15 at 12:59 +0200, Arno Wilhelm wrote:
> 
>>Hello,
>>
>>thanks for your help.
>>
>>I have resolved the issue now. User apache is not allowed to issue (almost) any 
>>command. I had to load the suexec module that uses the command suexec2 in order 
>>to get that to work!
>>
>>The only command that worked without the suexec_module was the echo command:
>>system( "/bin/echo Hello_mod_python >> /tmp/dummy.log 2>&1" )
>>
>>Any other command from within a mod_python script did not show any results, 
>>except an empty /tmp/dummy file (but not even an error message) at all!
>>
>>When I load the suexec_module in apache2.conf like this:
>>
>>LoadModule suexec_module      modules/mod_suexec.so
>>SuexecUserGroup root root
>>
>>apache2 seems to issue the command with the help of the suexec2 utility:
>>
>># suexec2 -V
>>  -D AP_DOC_ROOT="/var/www"
>>  -D AP_GID_MIN=100
>>  -D AP_HTTPD_USER="apache"
>>  -D AP_LOG_EXEC="/var/log/apache2/suexec_log"
>>  -D AP_SAFE_PATH="/usr/local/bin:/usr/bin:/bin"
>>  -D AP_SUEXEC_UMASK=077
>>  -D AP_UID_MIN=1000
>>  -D AP_USERDIR_SUFFIX="public_html"
>>
>>
>>See also this website for more details:
>>http://blog.develix.com/archives/33-Configuring-Apache-and-PHP-to-use-mod_suexec.html
>>
>>
>>Thanks and greetings,
>>
>>
>>quirxi
>>
>>Graham Dumpleton wrote:
>>
>>>On 15/05/2005, at 8:08 AM, Arno Wilhelm wrote:
>>>
>>>
>>>>Hello,
>>>>
>>>>I have got a proble for which I cannot find a proper solution:
>>>>
>>>>Whenever a user on his browser hits a certain page (served by 
>>>>mod_python) the mod_python should send a SIGUSR signal to a certain 
>>>>process in order to force a update on him like this
>>>>
>>>># os.system( "kill -s SIGUSR1 26199" )
>>>>
>>>>Whenever I make this call from within a python script it works. But 
>>>>whenever I try to build it into the mod_python script that is handled 
>>>>by apache it does not work. After that I have experimented with other 
>>>>os.system calls from within mod_python scripts and all of them seem to 
>>>>be ignored somehow.
>>>>
>>>>Could someone here possibly shed some light on this issue, since I am 
>>>>on the end of my knowledge.
>>>
>>>
>>>A few things to consider.
>>>
>>>1. Set full pathnames to the programs in the command.
>>>
>>>The PATH setup for Apache may not be that useful. It may reference
>>>some standard locations, but not much. Thus, if you expect program
>>>to be found by searching PATH, it may not work.
>>>
>>>2. Don't rely on the current working directory to be anything specific.
>>>
>>>Normally current working directory would be '/' and nothing to to do
>>>with where any Python request handler will be. Any references to files
>>>should always be as absolute paths.
>>>
>>>3. Apache usually runs as user "nobody" or some other special user.
>>>
>>>Because Apache runs as a special user, it often will not have the
>>>necessary privileges to be able to write to directories or send signals
>>>to processes running as another user.
>>>
>>>4. Log output of scripts to a directory in "/tmp".
>>>
>>>As a way of working out problems, send the output of any commands to
>>>a log file in "/tmp". Ie., run your command as:
>>>
>>>  os.system( "kill -s SIGUSR1 26199 >> /tmp/dummy.log 2>&1" )
>>>
>>>This will allow you to see any errors. With the way that Apache works,
>>>you might not otherwise see errors generated by a call to os.system()
>>>until Apache is shutdown and certain buffers are flushed out.
>>>
>>>Graham
>>>
>>>
>>>
>>>
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From ijwilson at laspilitas.com  Sun May 15 22:00:02 2005
From: ijwilson at laspilitas.com (ijwilson@laspilitas.com)
Date: Sun May 15 21:57:32 2005
Subject: [mod_python] Dynamically Creating Large Downloads In The Dark
Message-ID: <200505151900.03051.ijwilson@laspilitas.com>

Hello mod_python and friends,

  I was hoping someone could help me with some basic questions because I am 
kind of just running around stabbing in the dark.

  I am trying to create a file that a user can download.

So the file could be too large to just read() and write() all at once so I am 
pretty sure I have to use this method defined for the req object:
  sendfile(path[, offset, len])

So I figure to store my file for them to download I need to create a temporary 
file with a name to give to sendfile.  Now if I create a named temporary file 
using tempfile.NamedTemporaryFile(...) when I close the descriptor it is 
deleted.  
So it seems I must use tempfile.mkstemp() to create the file.. but then I am 
responsible for deleting it.  The files will be large and the disk might not 
have enough room for too many of them.

So in the end my questions are pretty much does what I am saying make sense 
and also how do I know when they are finished downloading the file when 
calling sendfile so that I can delete the file that I created with 
mkstemp() ?

Do I have to put something in cron that just hopes they are done downloading 
it?  I hope there is something better than that.

Thanks in advance.
-Ian



From grahamd at dscpl.com.au  Sun May 15 22:13:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun May 15 22:13:11 2005
Subject: [mod_python] Dynamically Creating Large Downloads In The Dark
Message-ID: <1116209583.18022@dscpl.user.openhosting.com>

Presuming that request cleanup handlers are still only executed
after the whole file is sent when using sendfile(), use the method
req.register_cleanup() to register a callback which is run and which
would delete the file.

Graham

ijwilson@laspilitas.com wrote ..
> Hello mod_python and friends,
> 
>   I was hoping someone could help me with some basic questions because
> I am 
> kind of just running around stabbing in the dark.
> 
>   I am trying to create a file that a user can download.
> 
> So the file could be too large to just read() and write() all at once so
> I am 
> pretty sure I have to use this method defined for the req object:
>   sendfile(path[, offset, len])
> 
> So I figure to store my file for them to download I need to create a temporary
> file with a name to give to sendfile.  Now if I create a named temporary
> file 
> using tempfile.NamedTemporaryFile(...) when I close the descriptor it is
> deleted.  
> So it seems I must use tempfile.mkstemp() to create the file.. but then
> I am 
> responsible for deleting it.  The files will be large and the disk might
> not 
> have enough room for too many of them.
> 
> So in the end my questions are pretty much does what I am saying make sense
> and also how do I know when they are finished downloading the file when
> calling sendfile so that I can delete the file that I created with 
> mkstemp() ?
> 
> Do I have to put something in cron that just hopes they are done downloading
> it?  I hope there is something better than that.
> 
> Thanks in advance.
> -Ian
> 
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Mon May 16 07:31:37 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 16 07:31:46 2005
Subject: [mod_python] psp problem
In-Reply-To: <428372F5.6010400@sympatico.ca>
References: <1115832512.408.225.camel@cm61-10-50-104.hkcable.com.hk>	
	<4282517E.7070508@sympatico.ca>
	<20050511234819.T47383@grisha.dyndns.org>
	<1115869983.408.246.camel@cm61-10-50-104.hkcable.com.hk>
	<428372F5.6010400@sympatico.ca>
Message-ID: <d9fd9bc0d8f164dd88911b94305e912c@dscpl.com.au>


On 13/05/2005, at 1:15 AM, Jim Gallacher wrote:

> Wouter van Marle wrote:
>> On Wed, 2005-05-11 at 23:49 -0400, Gregory (Grisha) Trubetskoy wrote:
>>> On Wed, 11 May 2005, Jim Gallacher wrote:
>>>
>>>
>>>> You found one of the warts in psp. Since your for loop contains no 
>>>> further python statements, the parser gets confused. Try adding a 
>>>> single comment at the beginning of your for loop:
>>>>
>>>> <p> some text for the page </p>
>>>> <%
>>>> for r in Results:
>>>>   # begin indentation - comment fixes the syntax error
>>>> %>
>>>> I got the result <%=r%><br>
>>>> <%
>>>> # end indentation
>>>> %>
>>>
>>>
>>> Actually, (IIRC purposely undocumented), PSP is smart enough to 
>>> guess that a if code ends on a ":" you mean to start a new block.
>> I have found documentation where this is indeed confirmed; a line 
>> ending
>> in a colon (:) starts an indentation.
>
> I used indented comment trick after the for statment for a problem 
> unrelated to Wouter's. I'm now in the habit of always using it.
>
> For example, if you have a nested for loop such as the following, an 
> IndentationError is raised.
>
> <%
> for title,doc_list in unit_list:
> %>
>   <h4>Unit <%= title %><h4>
> <%
>     for doc in doc_list:
> %>
>     <p><%= doc['url'] %>: <%= doc['title'] %></p>
> <%
>     # end of block
> # end of block
> %>
>
> I noticed that if there was some python statement immediately after 
> the first for:, the error went away. Now I always stick an indented 
> comment immediately after the for statement. I also found problems 
> when generating tables in the inner loop, where I was only getting a 
> single closing </table> tag instead of one for each iteration of the 
> inner loop (or something like that - I can't generate an example off 
> the top of my head and the offending code is now gone).
>
> I haven't commented on this before as it was a problem I had when I 
> first starting using psp pages a few months ago, and I wasn't sure if 
> it was a feature or a bug. :)

I just got bitten by this gotcha as well. Although the documentation 
says:

   The parser is also smart enough to figure out the indent if the last 
line of Python ends with ":" (colon).

What isn't clear is that when PSP performs auto indentation, it does it 
with an indent
level of 8 spaces or 1 tab equivalent. Thus unless using the comment 
workaround it
means that if further down within that block you want to put additional 
code, you
MUST ensure that it is indented by 8 characters or 1 tab else you get 
an error.

For example, the following code which uses 4 spaces for indenting will 
fail.

<ul>
<%
for i in range(3):
%>
     <li><%=i%>
<%
     for j in range(2):
%>
         <p><%=i%>-<%=j%></p>
<%
     #end for
%>
     </li>
<%
#end for
%>
</ul>

The actual error is:

   IndentationError: unindent does not match any outer indentation level 
(indent.psp, line 7)

On first glance, it isn't really exactly clear what is going wrong.

The solution is to use either comment at start of block as described 
above.

<ul>
<%
for i in range(3):
     # indent
%>
     <li><%=i%>
<%
     for j in range(2):
         # indent
%>
         <p><%=i%>-<%=j%></p>
<%
     #end for
%>
     </li>
<%
#end for
%>
</ul>

or use 8 spaces consistently.

<ul>
<%
for i in range(3):
%>
         <li><%=i%>
<%
         for j in range(2):
%>
                 <p><%=i%>-<%=j%></p>
<%
%>
         </li>
<%
#end for
%>
</ul>

Thus, would it be worthwhile to add specific note in documentation 
about 8 space/1 tab
indent to make it clear for the auto indent case.

Graham

From tusharpatil1982 at rediffmail.com  Mon May 16 08:38:19 2005
From: tusharpatil1982 at rediffmail.com (tushar liladhar patil)
Date: Mon May 16 08:37:01 2005
Subject: [mod_python] PLz...plz.. Help - reportlab-pdf code..
Message-ID: <20050516123819.27458.qmail@webmail45.rediffmail.com>

  I have this attached file downloaded from site:http://pythonforge.technomagic.net/modules.php?name=News&file=article&sid=8
I have installed 
xml.dom.ext.reader import Sax2
HTMLgen 
as per the requirment of python file.

but when i run the code 
as python filename.py it will flag an error like:
[anand@inetcomp pythonPoint]$ python important.py

Creating New Testament
Traceback (most recent call last):
  File "important.py", line 284, in ?
    main()
  File "important.py", line 274, in main
    CreateReport("nt.xml")
  File "important.py", line 267, in CreateReport
    Dom = LoadDOM(filename)
  File "important.py", line 30, in LoadDOM
    doc = reader.fromStream(f)
  File "/usr/lib/python2.3/site-packages/_xmlplus/dom/ext/reader/Sax2.py", line 372, in fromStream
    self.parser.parse(s)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py", line 109, in parse
    xmlreader.IncrementalParser.parse(self, source)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/xmlreader.py", line 123, in parse
    self.feed(buffer)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py", line 216, in feed
    self._parser.Parse(data, isFinal)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py", line 395, in external_entity_ref
    self._source.getSystemId() or
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/saxutils.py", line 523, in prepare_input_source
    f = urllib2.urlopen(source.getSystemId())
  File "/usr/lib/python2.3/urllib2.py", line 129, in urlopen
    return _opener.open(url, data)
  File "/usr/lib/python2.3/urllib2.py", line 324, in open
    type_ = req.get_type()
  File "/usr/lib/python2.3/urllib2.py", line 226, in get_type
    raise ValueError, "unknown url type: %s" % self.__original
ValueError: unknown url type: ../common/tstmt.dtd
[anand@inetcomp pythonPoint]$

please help me it's urgent .....plz...plz...

if anything left mail me i will send info.

Thanking u 
Tushar.....
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050516/4dc5caa2/attachment.html
From tusharpatil1982 at rediffmail.com  Mon May 16 08:44:42 2005
From: tusharpatil1982 at rediffmail.com (tushar liladhar patil)
Date: Mon May 16 08:43:24 2005
Subject: [mod_python] PLz...plz.. Help - reportlab-pdf code..
Message-ID: <20050516124442.18303.qmail@webmail25.rediffmail.com>

  
  I have this file downloaded from site:

http://pythonforge.technomagic.net/modules.php?name=News&file=article&sid=8

I have installed
xml.dom.ext.reader import Sax2
HTMLgen
as per the requirment of python file.

but when i run the code
as python filename.py it will flag an error like:
[anand@inetcomp pythonPoint]$ python important.py

Creating New Testament
Traceback (most recent call last):
  File "important.py", line 284, in ?
    main()
  File "important.py", line 274, in main
    CreateReport("nt.xml")
  File "important.py", line 267, in CreateReport
    Dom = LoadDOM(filename)
  File "important.py", line 30, in LoadDOM
    doc = reader.fromStream(f)
  File "/usr/lib/python2.3/site-packages/_xmlplus/dom/ext/reader/Sax2.py", line 372, in fromStream
    self.parser.parse(s)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py", line 109, in parse
    xmlreader.IncrementalParser.parse(self, source)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/xmlreader.py", line 123, in parse
    self.feed(buffer)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py", line 216, in feed
    self._parser.Parse(data, isFinal)
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py", line 395, in external_entity_ref
    self._source.getSystemId() or
  File "/usr/lib/python2.3/site-packages/_xmlplus/sax/saxutils.py", line 523, in prepare_input_source
    f = urllib2.urlopen(source.getSystemId())
  File "/usr/lib/python2.3/urllib2.py", line 129, in urlopen
    return _opener.open(url, data)
  File "/usr/lib/python2.3/urllib2.py", line 324, in open
    type_ = req.get_type()
  File "/usr/lib/python2.3/urllib2.py", line 226, in get_type
    raise ValueError, "unknown url type: %s" % self.__original
ValueError: unknown url type: ../common/tstmt.dtd
[anand@inetcomp pythonPoint]$

please help me it's urgent .....plz...plz...

if anything left mail me i will send info.

Thanking u
Tushar.....
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050516/3bd7270e/attachment-0001.html
From fgatwork at verizon.net  Mon May 16 10:43:46 2005
From: fgatwork at verizon.net (Frank Gruman)
Date: Mon May 16 10:44:00 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <428114F6.3020109@sympatico.ca>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
	<c298f2d705050911557abe44f4@mail.gmail.com>	
	<427FC0A9.2050007@verizon.net> <427FD48C.1040709@sympatico.ca>
	<c298f2d70505091426620aee7@mail.gmail.com>
	<428041FB.9090104@sympatico.ca> <42810CEC.2020406@verizon.net>
	<428114F6.3020109@sympatico.ca>
Message-ID: <4288B1A2.7090905@verizon.net>

OK - so I have decided I am running to many things at tip and I am not 
an uber programmer, so I need to cool my jets.  I have set systems back 
on Apache 2.0.54 with the APR/APR-Util for that version (0.9.6).

I can successfully configure, but have found that the make is trying to 
find a file that does not exist.  I have searched my drives for 
aprutil-0, and it does not exist.  I have done builds of both Apache 
2.0.54 with APR 0.9.6 as well as Apache 2.1.5-dev with APR 1.1.2.  No 
such file.  There is also a note to apr-0 that does not exist.

Here is the log at the point of failure:

gcc -pthread -shared 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/mod_python.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/_apachemodule.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/connobject.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/filterobject.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlist.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlistobject.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/requestobject.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/serverobject.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/tableobject.o 
build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/util.o -L -lapr-0 
-laprutil-0 -o build/lib.linux-i686-2.4/mod_python_so.so
/usr/lib/gcc-lib/i586-suse-linux/3.3.3/../../../../i586-suse-linux/bin/ld: 
cannot find -laprutil-0
collect2: ld returned 1 exit status
error: command 'gcc' failed with exit status 1
make[1]: *** [build] Error 1
make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
make: *** [do_dso] Error 2
toybox:/sources/mod_python-3.1.4 # /usr/local/apache2/bin/apr-config 
--version
0.9.6
toybox:/sources/mod_python-3.1.4 #

Any more ideas?

Regards,
Frank

Jim Gallacher wrote:

> Frank Gruman wrote:
>
>> Thanks Jim,
>>
>> That helped.  I had to add one little fix to your diff.  You are 
>> missing a comma after the 'libraries = libraries' line. 
>
>
> Doh! This is what happens when you fix, test, do one last tweak and 
> then post without testing again.
>
>> It led me on to the next set of errors...
>>
>> The whole MAKE looks different now than it did before.  It runs 
>> through a couple of tests, and then starts to build the mod_python.so 
>> module (woo hoo!!).  But then I see a whole bunch of 'error: parse 
>> error before apr_off_t'.  I have attached a copy of the make log from 
>> that point on.
>>
>> I have tried running with APR 0.9.6 as well as the latest 
>> APR/APR-Util tip (1.1.2 - pulled from the 1.1.x branch at the same 
>> time as Apache - Friday, 06 May, afternoon...)
>>
>> I know I have seen apr_off_t errors before, but I can't recall the 
>> issue.
>
>
> Sorry, I can't help you there.
>
> Regards,
> Jim
>
>
From jg.lists at sympatico.ca  Mon May 16 11:25:44 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon May 16 11:23:18 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <4288B1A2.7090905@verizon.net>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>	<c298f2d705050911557abe44f4@mail.gmail.com>		<427FC0A9.2050007@verizon.net>
	<427FD48C.1040709@sympatico.ca>	<c298f2d70505091426620aee7@mail.gmail.com>	<428041FB.9090104@sympatico.ca>
	<42810CEC.2020406@verizon.net>	<428114F6.3020109@sympatico.ca>
	<4288B1A2.7090905@verizon.net>
Message-ID: <4288BB78.50000@sympatico.ca>

Frank Gruman wrote:
> OK - so I have decided I am running to many things at tip and I am not 
> an uber programmer, so I need to cool my jets.  I have set systems back 
> on Apache 2.0.54 with the APR/APR-Util for that version (0.9.6).
> 
> I can successfully configure, but have found that the make is trying to 
> find a file that does not exist.  I have searched my drives for 
> aprutil-0, and it does not exist.  

You should look for libaprutil-0, libapr-0. On my system (Debian 
unstable) I have the following (some of which are symbolic links):

carbon:~$ ls /usr/lib/libapr*
/usr/lib/libapr-0.a         /usr/lib/libaprutil-0.a
/usr/lib/libapr-0.la        /usr/lib/libaprutil-0.la
/usr/lib/libapr-0.so        /usr/lib/libaprutil-0.so
/usr/lib/libapr-0.so.0      /usr/lib/libaprutil-0.so.0
/usr/lib/libapr-0.so.0.9.6  /usr/lib/libaprutil-0.so.0.9.6
/usr/lib/libapr.so.0        /usr/lib/libaprutil.so.0

Regards,
Jim

> I have done builds of both Apache 
> 2.0.54 with APR 0.9.6 as well as Apache 2.1.5-dev with APR 1.1.2.  No 
> such file.  There is also a note to apr-0 that does not exist.
> 
> Here is the log at the point of failure:
> 
> gcc -pthread -shared 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/mod_python.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/_apachemodule.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/connobject.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/filterobject.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlist.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlistobject.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/requestobject.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/serverobject.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/tableobject.o 
> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/util.o -L -lapr-0 
> -laprutil-0 -o build/lib.linux-i686-2.4/mod_python_so.so
> /usr/lib/gcc-lib/i586-suse-linux/3.3.3/../../../../i586-suse-linux/bin/ld: 
> cannot find -laprutil-0
> collect2: ld returned 1 exit status
> error: command 'gcc' failed with exit status 1
> make[1]: *** [build] Error 1
> make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
> make: *** [do_dso] Error 2
> toybox:/sources/mod_python-3.1.4 # /usr/local/apache2/bin/apr-config 
> --version
> 0.9.6
> toybox:/sources/mod_python-3.1.4 #
> 
> Any more ideas?
> 
> Regards,
> Frank
> 
> Jim Gallacher wrote:
> 
>> Frank Gruman wrote:
>>
>>> Thanks Jim,
>>>
>>> That helped.  I had to add one little fix to your diff.  You are 
>>> missing a comma after the 'libraries = libraries' line. 
>>
>>
>>
>> Doh! This is what happens when you fix, test, do one last tweak and 
>> then post without testing again.
>>
>>> It led me on to the next set of errors...
>>>
>>> The whole MAKE looks different now than it did before.  It runs 
>>> through a couple of tests, and then starts to build the mod_python.so 
>>> module (woo hoo!!).  But then I see a whole bunch of 'error: parse 
>>> error before apr_off_t'.  I have attached a copy of the make log from 
>>> that point on.
>>>
>>> I have tried running with APR 0.9.6 as well as the latest 
>>> APR/APR-Util tip (1.1.2 - pulled from the 1.1.x branch at the same 
>>> time as Apache - Friday, 06 May, afternoon...)
>>>
>>> I know I have seen apr_off_t errors before, but I can't recall the 
>>> issue.
>>
>>
>>
>> Sorry, I can't help you there.
>>
>> Regards,
>> Jim
>>
>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From fgatwork at verizon.net  Mon May 16 11:35:03 2005
From: fgatwork at verizon.net (Frank Gruman)
Date: Mon May 16 11:35:05 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <4288BB78.50000@sympatico.ca>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
	<c298f2d705050911557abe44f4@mail.gmail.com>		<427FC0A9.2050007@verizon.net>
	<427FD48C.1040709@sympatico.ca>	<c298f2d70505091426620aee7@mail.gmail.com>
	<428041FB.9090104@sympatico.ca> <42810CEC.2020406@verizon.net>
	<428114F6.3020109@sympatico.ca> <4288B1A2.7090905@verizon.net>
	<4288BB78.50000@sympatico.ca>
Message-ID: <4288BDA7.9020704@verizon.net>

I do have those files.

toybox:~ # cd /usr/local/apache2/lib
toybox:/usr/local/apache2/lib # ls libapr*
libapr-0.a   libapr-0.so    libapr-0.so.0.9.6  libaprutil-0.la  
libaprutil-0.so.0
libapr-0.la  libapr-0.so.0  libaprutil-0.a     libaprutil-0.so  
libaprutil-0.so.0.9.6
toybox:/usr/local/apache2/lib #


My configuration started as

toybox:/sources/mod_python-3.1.4 # ./configure 
--with-apxs=/usr/local/apache2/bin/apxs

and it seems to find the APR without any troubles...

Regards,
Frank

Jim Gallacher wrote:

> Frank Gruman wrote:
>
>> OK - so I have decided I am running to many things at tip and I am 
>> not an uber programmer, so I need to cool my jets.  I have set 
>> systems back on Apache 2.0.54 with the APR/APR-Util for that version 
>> (0.9.6).
>>
>> I can successfully configure, but have found that the make is trying 
>> to find a file that does not exist.  I have searched my drives for 
>> aprutil-0, and it does not exist.  
>
>
> You should look for libaprutil-0, libapr-0. On my system (Debian 
> unstable) I have the following (some of which are symbolic links):
>
> carbon:~$ ls /usr/lib/libapr*
> /usr/lib/libapr-0.a         /usr/lib/libaprutil-0.a
> /usr/lib/libapr-0.la        /usr/lib/libaprutil-0.la
> /usr/lib/libapr-0.so        /usr/lib/libaprutil-0.so
> /usr/lib/libapr-0.so.0      /usr/lib/libaprutil-0.so.0
> /usr/lib/libapr-0.so.0.9.6  /usr/lib/libaprutil-0.so.0.9.6
> /usr/lib/libapr.so.0        /usr/lib/libaprutil.so.0
>
> Regards,
> Jim
>
>> I have done builds of both Apache 2.0.54 with APR 0.9.6 as well as 
>> Apache 2.1.5-dev with APR 1.1.2.  No such file.  There is also a note 
>> to apr-0 that does not exist.
>>
>> Here is the log at the point of failure:
>>
>> gcc -pthread -shared 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/mod_python.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/_apachemodule.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/connobject.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/filterobject.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlist.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlistobject.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/requestobject.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/serverobject.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/tableobject.o 
>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/util.o -L 
>> -lapr-0 -laprutil-0 -o build/lib.linux-i686-2.4/mod_python_so.so
>> /usr/lib/gcc-lib/i586-suse-linux/3.3.3/../../../../i586-suse-linux/bin/ld: 
>> cannot find -laprutil-0
>> collect2: ld returned 1 exit status
>> error: command 'gcc' failed with exit status 1
>> make[1]: *** [build] Error 1
>> make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>> make: *** [do_dso] Error 2
>> toybox:/sources/mod_python-3.1.4 # /usr/local/apache2/bin/apr-config 
>> --version
>> 0.9.6
>> toybox:/sources/mod_python-3.1.4 #
>>
>> Any more ideas?
>>
>> Regards,
>> Frank
>>
>> Jim Gallacher wrote:
>>
>>> Frank Gruman wrote:
>>>
>>>> Thanks Jim,
>>>>
>>>> That helped.  I had to add one little fix to your diff.  You are 
>>>> missing a comma after the 'libraries = libraries' line. 
>>>
>>>
>>>
>>>
>>> Doh! This is what happens when you fix, test, do one last tweak and 
>>> then post without testing again.
>>>
>>>> It led me on to the next set of errors...
>>>>
>>>> The whole MAKE looks different now than it did before.  It runs 
>>>> through a couple of tests, and then starts to build the 
>>>> mod_python.so module (woo hoo!!).  But then I see a whole bunch of 
>>>> 'error: parse error before apr_off_t'.  I have attached a copy of 
>>>> the make log from that point on.
>>>>
>>>> I have tried running with APR 0.9.6 as well as the latest 
>>>> APR/APR-Util tip (1.1.2 - pulled from the 1.1.x branch at the same 
>>>> time as Apache - Friday, 06 May, afternoon...)
>>>>
>>>> I know I have seen apr_off_t errors before, but I can't recall the 
>>>> issue.
>>>
>>>
>>>
>>>
>>> Sorry, I can't help you there.
>>>
>>> Regards,
>>> Jim
>>>
>>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>
From grahamd at dscpl.com.au  Mon May 16 19:49:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 16 19:50:04 2005
Subject: [mod_python] PLz...plz.. Help - reportlab-pdf code..
Message-ID: <1116287398.3711@dscpl.user.openhosting.com>

The path "../common/tstmt.dtd" is not a valid URL. Exactly what
the error message says. The urllib2 module be expecting an address
of the form "http://hostname/some/path".

You might try something like "file:///some/path/common/tstmt.dtd".
Where "/some/path/common/tstmt.dtd" is the full path to the file
as it exists on your machine. Not sure if urllib2 will accept that though.

You might also find that if you simply have an absolute path rather
than a relative pathname, ie., "/some/path/common/tstmt.dtd",
the code might be smart enough to realise it is a local file and just
grab it from the file system rather than invoking urllib to get it.

I am guessing here as I am not familar with the package being used.

For about the fourth time, a general question like this would be better
posted on:

    http://groups-beta.google.com/groups?group=comp.lang.python&hl=en

You will have a better chance of finding people there who would know
the answer to your question.

tushar liladhar patil wrote ..
>   I have this attached file downloaded from site:http://pythonforge.technomagic.net/modules.php?name=News&file=article&sid=8
> I have installed 
> xml.dom.ext.reader import Sax2
> HTMLgen 
> as per the requirment of python file.
> 
> but when i run the code 
> as python filename.py it will flag an error like:
> [anand@inetcomp pythonPoint]$ python important.py
> 
> Creating New Testament
> Traceback (most recent call last):
>   File "important.py", line 284, in ?
>     main()
>   File "important.py", line 274, in main
>     CreateReport("nt.xml")
>   File "important.py", line 267, in CreateReport
>     Dom = LoadDOM(filename)
>   File "important.py", line 30, in LoadDOM
>     doc = reader.fromStream(f)
>   File "/usr/lib/python2.3/site-packages/_xmlplus/dom/ext/reader/Sax2.py",
> line 372, in fromStream
>     self.parser.parse(s)
>   File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py",
> line 109, in parse
>     xmlreader.IncrementalParser.parse(self, source)
>   File "/usr/lib/python2.3/site-packages/_xmlplus/sax/xmlreader.py", line
> 123, in parse
>     self.feed(buffer)
>   File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py",
> line 216, in feed
>     self._parser.Parse(data, isFinal)
>   File "/usr/lib/python2.3/site-packages/_xmlplus/sax/expatreader.py",
> line 395, in external_entity_ref
>     self._source.getSystemId() or
>   File "/usr/lib/python2.3/site-packages/_xmlplus/sax/saxutils.py", line
> 523, in prepare_input_source
>     f = urllib2.urlopen(source.getSystemId())
>   File "/usr/lib/python2.3/urllib2.py", line 129, in urlopen
>     return _opener.open(url, data)
>   File "/usr/lib/python2.3/urllib2.py", line 324, in open
>     type_ = req.get_type()
>   File "/usr/lib/python2.3/urllib2.py", line 226, in get_type
>     raise ValueError, "unknown url type: %s" % self.__original
> ValueError: unknown url type: ../common/tstmt.dtd
> [anand@inetcomp pythonPoint]$
> 
> please help me it's urgent .....plz...plz...

Everything with you is urgent.

> if anything left mail me i will send info.

Yes, send mailing address to everyone on the list so we can all send an
invoice to you for our time in answering all these questions you keep
asking which have nothing to do with the topic of the mod_python mailing
list. I note you are now also sending them to reportlab list when they are
also nothing specific to it either. Urgent that you send this so we can bill
you and get our money as soon as possible. :-) :-) :-) :-)

Note that in general most people would have no problem helping you with
your problems, but the fact that the questions are off topic and that
everytime you say it is urgent, gets a bit annoying after a while. :-(



From tusharpatil1982 at rediffmail.com  Tue May 17 00:33:44 2005
From: tusharpatil1982 at rediffmail.com (tushar liladhar patil)
Date: Tue May 17 00:32:25 2005
Subject: [mod_python] Really Very sorry for....
Message-ID: <20050517043344.10181.qmail@mailweb33.rediffmail.com>

  
Hi 
   Friends I m Really Very Sorry, I don't have to ask Offline questions to this mailing list but I was very confused bcz I m a fresher and Using python first time. So i thought i will get the support from u people. I m working in an NGO where no one supports us. We are making a software for computer Literacy. Anyway I hd spend nice time with u all.. Thanking u all for giving me Nice answers. I m Sorry again.

Thanking u
Tushar...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050517/963b3b5c/attachment.html
From bortzmeyer at nic.fr  Tue May 17 04:25:16 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Tue May 17 04:25:20 2005
Subject: [mod_python] Re: Really Very sorry for....
In-Reply-To: <20050517043344.10181.qmail@mailweb33.rediffmail.com>
References: <20050517043344.10181.qmail@mailweb33.rediffmail.com>
Message-ID: <20050517082516.GA4991@nic.fr>

On Tue, May 17, 2005 at 04:33:44AM -0000,
 tushar liladhar patil <tusharpatil1982@rediffmail.com> wrote 
 a message of 53 lines which said:

> So i thought i will get the support from u people. 

First read:

http://www.catb.org/~esr/faqs/smart-questions.html

From mamading at gmail.com  Tue May 17 08:20:38 2005
From: mamading at gmail.com (Mamading Ceesay)
Date: Tue May 17 08:20:40 2005
Subject: [mod_python] Really Very sorry for....
In-Reply-To: <20050517043344.10181.qmail@mailweb33.rediffmail.com>
References: <20050517043344.10181.qmail@mailweb33.rediffmail.com>
Message-ID: <57a935970505170520167ac4ba@mail.gmail.com>

On 17 May 2005 04:33:44 -0000, tushar liladhar patil
<tusharpatil1982@rediffmail.com> wrote:
> 
> this mailing list but I was very confused bcz I m a fresher and Using python
> first time. So i thought i will get the support from u people. 
>

There is a better mailing list for asking "fresher"-type questions
about Python, see http://mail.python.org/mailman/listinfo/tutor

-- 
Mamading Ceesay

"You never change things by fighting the existing reality. To change 
something, build a new model that makes the existing model obsolete." 
-- R. Buckminster Fuller

From jg.lists at sympatico.ca  Tue May 17 11:06:56 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 17 11:04:31 2005
Subject: [mod_python] Compile problems - Mod_Python 3.1.4
In-Reply-To: <4288BDA7.9020704@verizon.net>
References: <490748.1115662334852.JavaMail.root@vms068.mailsrvcs.net>
	<c298f2d705050911557abe44f4@mail.gmail.com>		<427FC0A9.2050007@verizon.net>
	<427FD48C.1040709@sympatico.ca>	<c298f2d70505091426620aee7@mail.gmail.com>
	<428041FB.9090104@sympatico.ca> <42810CEC.2020406@verizon.net>
	<428114F6.3020109@sympatico.ca> <4288B1A2.7090905@verizon.net>
	<4288BB78.50000@sympatico.ca> <4288BDA7.9020704@verizon.net>
Message-ID: <428A0890.7030702@sympatico.ca>

Are you using the latest version from mod_python/trunk? The last change 
to setup.py took care of the problems I previously had with ld not 
finding libapr-0 and libaprutil-0.

Jim

Frank Gruman wrote:
> I do have those files.
> 
> toybox:~ # cd /usr/local/apache2/lib
> toybox:/usr/local/apache2/lib # ls libapr*
> libapr-0.a   libapr-0.so    libapr-0.so.0.9.6  libaprutil-0.la  
> libaprutil-0.so.0
> libapr-0.la  libapr-0.so.0  libaprutil-0.a     libaprutil-0.so  
> libaprutil-0.so.0.9.6
> toybox:/usr/local/apache2/lib #
> 
> 
> My configuration started as
> 
> toybox:/sources/mod_python-3.1.4 # ./configure 
> --with-apxs=/usr/local/apache2/bin/apxs
> 
> and it seems to find the APR without any troubles...
> 
> Regards,
> Frank
> 
> Jim Gallacher wrote:
> 
>> Frank Gruman wrote:
>>
>>> OK - so I have decided I am running to many things at tip and I am 
>>> not an uber programmer, so I need to cool my jets.  I have set 
>>> systems back on Apache 2.0.54 with the APR/APR-Util for that version 
>>> (0.9.6).
>>>
>>> I can successfully configure, but have found that the make is trying 
>>> to find a file that does not exist.  I have searched my drives for 
>>> aprutil-0, and it does not exist.  
>>
>>
>>
>> You should look for libaprutil-0, libapr-0. On my system (Debian 
>> unstable) I have the following (some of which are symbolic links):
>>
>> carbon:~$ ls /usr/lib/libapr*
>> /usr/lib/libapr-0.a         /usr/lib/libaprutil-0.a
>> /usr/lib/libapr-0.la        /usr/lib/libaprutil-0.la
>> /usr/lib/libapr-0.so        /usr/lib/libaprutil-0.so
>> /usr/lib/libapr-0.so.0      /usr/lib/libaprutil-0.so.0
>> /usr/lib/libapr-0.so.0.9.6  /usr/lib/libaprutil-0.so.0.9.6
>> /usr/lib/libapr.so.0        /usr/lib/libaprutil.so.0
>>
>> Regards,
>> Jim
>>
>>> I have done builds of both Apache 2.0.54 with APR 0.9.6 as well as 
>>> Apache 2.1.5-dev with APR 1.1.2.  No such file.  There is also a note 
>>> to apr-0 that does not exist.
>>>
>>> Here is the log at the point of failure:
>>>
>>> gcc -pthread -shared 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/mod_python.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/_apachemodule.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/connobject.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/filterobject.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlist.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/hlistobject.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/requestobject.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/serverobject.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/tableobject.o 
>>> build/temp.linux-i686-2.4/sources/mod_python-3.1.4/src/util.o -L 
>>> -lapr-0 -laprutil-0 -o build/lib.linux-i686-2.4/mod_python_so.so
>>> /usr/lib/gcc-lib/i586-suse-linux/3.3.3/../../../../i586-suse-linux/bin/ld: 
>>> cannot find -laprutil-0
>>> collect2: ld returned 1 exit status
>>> error: command 'gcc' failed with exit status 1
>>> make[1]: *** [build] Error 1
>>> make[1]: Leaving directory `/sources/mod_python-3.1.4/dist'
>>> make: *** [do_dso] Error 2
>>> toybox:/sources/mod_python-3.1.4 # /usr/local/apache2/bin/apr-config 
>>> --version
>>> 0.9.6
>>> toybox:/sources/mod_python-3.1.4 #
>>>
>>> Any more ideas?
>>>
>>> Regards,
>>> Frank
>>>
>>> Jim Gallacher wrote:
>>>
>>>> Frank Gruman wrote:
>>>>
>>>>> Thanks Jim,
>>>>>
>>>>> That helped.  I had to add one little fix to your diff.  You are 
>>>>> missing a comma after the 'libraries = libraries' line. 
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> Doh! This is what happens when you fix, test, do one last tweak and 
>>>> then post without testing again.
>>>>
>>>>> It led me on to the next set of errors...
>>>>>
>>>>> The whole MAKE looks different now than it did before.  It runs 
>>>>> through a couple of tests, and then starts to build the 
>>>>> mod_python.so module (woo hoo!!).  But then I see a whole bunch of 
>>>>> 'error: parse error before apr_off_t'.  I have attached a copy of 
>>>>> the make log from that point on.
>>>>>
>>>>> I have tried running with APR 0.9.6 as well as the latest 
>>>>> APR/APR-Util tip (1.1.2 - pulled from the 1.1.x branch at the same 
>>>>> time as Apache - Friday, 06 May, afternoon...)
>>>>>
>>>>> I know I have seen apr_off_t errors before, but I can't recall the 
>>>>> issue.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> Sorry, I can't help you there.
>>>>
>>>> Regards,
>>>> Jim
>>>>
>>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
>>
> 

From jkohans at gmail.com  Tue May 17 17:58:28 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Tue May 17 18:58:32 2005
Subject: [mod_python] PSP Response
Message-ID: <b07823bd05051714585124a93@mail.gmail.com>

Hello,

The following fragment of code will sometimes return a response and other 
times just hang:

<code>
def genGraphWAnnotsHTMLResponse( req, frames):
"""generates HTML response for request to graph"""

session = req.session
seg_facade = session.seg_facade

column_header, data = genSegmentAnnotsHTML( frames, session.chrom_num, 
seg_facade)

vars = { 'p_extend' : seg_facade.p_extend, \
'p_break' : seg_facade.p_break, \
'plot_image' : os.path.join( '../../images', session.original_image), \
'session' : session.id(), \
'cols' : column_header.__str__(), \
'data' : data.__str__() }

return psp.PSP( req, filename=ZOOM_WANNOTS_TMPL, vars=vars)
</code>

The path from the handler to here appears to be working fine. I did some 
debugging and can tell that the problem is somewhere in the psp.PSP call. I 
think it may have something to do with the interpreter, but that is just a 
wild guess. Has anyone had similar issues?

I am using:
mod_python 3.1.4
python 2.3.5
apache 2.0.53
RedHat Linux 9.3

Thanks for any help.

Jeremy Kohansimeh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050517/1cec7927/attachment.html
From jg.lists at sympatico.ca  Tue May 17 19:59:35 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue May 17 19:57:06 2005
Subject: [mod_python] PSP Response
In-Reply-To: <b07823bd05051714585124a93@mail.gmail.com>
References: <b07823bd05051714585124a93@mail.gmail.com>
Message-ID: <428A8567.3090401@sympatico.ca>

If you mention a variable named session in your psp page, psp will try 
and create a new session instance. Since your main code has already 
created a session (I assume), you'll get a deadlock. Either unlock the 
session before the psp.PSP call, or better yet, just rename your session 
variable to session_id.

This behaviour will hopefully be fixed in an upcoming release.

Jeremy Kohansimeh wrote:
> Hello,
> 
> The following fragment of code will sometimes return a response and 
> other times just hang:
> 
> <code>
> def genGraphWAnnotsHTMLResponse( req, frames):
>     """generates HTML response for request to graph"""
>    
>     session = req.session
>     seg_facade = session.seg_facade
>    
>     column_header, data = genSegmentAnnotsHTML( frames, 
> session.chrom_num, seg_facade)
>    
>     vars = { 'p_extend' : seg_facade.p_extend, \
>              'p_break' : seg_facade.p_break, \
>              'plot_image' : os.path.join( '../../images', 
> session.original_image), \
>              'session' : session.id(), \

change to:
                'session_id': session.id()

>              'cols' : column_header.__str__(), \
>              'data' : data.__str__() }
> 
>     return psp.PSP( req, filename=ZOOM_WANNOTS_TMPL, vars=vars)
> </code>
> 
> The path from the handler to here appears to be working fine.  I did 
> some debugging and can tell that the problem is somewhere in the psp.PSP 
> call.  I think it may have something to do with the interpreter, but 
> that is just a wild guess.  Has anyone had similar issues?

This an known issue and hopefull this behaviour will be fixed in an 
upcoming release.

Regards,
Jim
From grahamd at dscpl.com.au  Tue May 17 20:15:26 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 17 20:15:29 2005
Subject: [mod_python] PSP Response
Message-ID: <1116375326.665@dscpl.user.openhosting.com>


Jeremy Kohansimeh wrote ..
> Hello,
> 
> The following fragment of code will sometimes return a response and other
> times just hang:
> 
> <code>
> def genGraphWAnnotsHTMLResponse( req, frames):
> """generates HTML response for request to graph"""
> 
> session = req.session
> seg_facade = session.seg_facade
> 
> column_header, data = genSegmentAnnotsHTML( frames, session.chrom_num,
> seg_facade)
> 
> vars = { 'p_extend' : seg_facade.p_extend, \
> 'p_break' : seg_facade.p_break, \
> 'plot_image' : os.path.join( '../../images', session.original_image), \
> 'session' : session.id(), \
> 'cols' : column_header.__str__(), \
> 'data' : data.__str__() }
> 
> return psp.PSP( req, filename=ZOOM_WANNOTS_TMPL, vars=vars)
> </code>
> 
> The path from the handler to here appears to be working fine. I did some
> debugging and can tell that the problem is somewhere in the psp.PSP call.
> I 
> think it may have something to do with the interpreter, but that is just
> a 
> wild guess. Has anyone had similar issues?

One problem you can hit with this code, and for which there has
been a little discussion about over the last few days in the dev
area, is that the following code will hang if your PSP page tries
to reference the "session" object. The problem is that the PSP
class ignores the fact of whether or not you may have created
your own session object and will create its own if "session" is
referenced from the PSP page, with the session object it thus
creates being stored as "session" with the execution environment
of PSP so as to be accessible from your page.

Now you actually set "session" in your vars to the session ID
which if you try to access in the page will trigger the creation
of the second session object, although your session ID setting
will override PSPs attempt to set "session" to the session object
it creates. Either way, the attempt to create a second session
object for the same request can result in a deadlock.

I would suggest you try not using the "session" variable in
your vars, but use "my_session_id" for the session ID and if
you do need access to the session object you create in
PSP, set it as the "my_session" variable. Ie., avoid using
"session" name as that triggers the deadlock where you have
already created the session object.

The suggestion being dicussed in dev area is that the PSP
code check for the existance of "req.session" and if it
exists and PSP page tries to access "session", that session be set
to "req.session" rather than creating a new session object.
If this change were made for future version of mod_python,
you wouldn't need to set "session" in the vars as PSP will
do it automatically for you. In your page you could then say
"session.id()" to get the session ID.

Would this explain your problems and does avoiding using
"session" variable name in vars fix the problem?

Graham

From huzaifa at hostway.com  Wed May 18 12:07:24 2005
From: huzaifa at hostway.com (Huzaifa Tapal)
Date: Wed May 18 12:07:31 2005
Subject: [mod_python] ModPython 3.1.4 patches
Message-ID: <428B683C.7040508@hostway.com>

does anybody know if the patches as summarized by Graham on the Vampire 
site are a part of this version?  The patches are at:

http://www.dscpl.com.au/projects/vampire/patches.html

if not then what kind of security fixes are available in this version 
other than the publisher?

Hozi

From jkohans at gmail.com  Wed May 18 14:10:05 2005
From: jkohans at gmail.com (Jeremy Kohansimeh)
Date: Wed May 18 14:36:51 2005
Subject: [mod_python] Session Problems
Message-ID: <b07823bd05051811104ef0046e@mail.gmail.com>

Hello,

I have narrowed down the problem I was having to a problem with Session's 
save function. Apparently, it locks the session and placing an unlock 
statement directly after it fixes the problem. Some code examples do this 
and in other places (on this list) I have read that this is not the correct 
way to handle it. Is there a general consensus on what the right way to do 
this is?

Also, I am having a strange problem that I think may be due to this. I have 
saved a session (with the save function) and on a subsequent request attempt 
to get the value of an attribute that was saved from it and the attribute no 
longer exist. I have performed the load function on it and am at a loss for 
why the attribute is gone. I don't think that I am creating another session 
object as the pysid cookie is set when 'req.sess = Session.Session( req)' is 
executed. Anyone have any suggestions?

Thanks for any help.

Jeremy Kohansimeh
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050518/32dfd06d/attachment.html
From grisha at modpython.org  Wed May 18 15:04:37 2005
From: grisha at modpython.org (grisha@modpython.org)
Date: Wed May 18 15:06:07 2005
Subject: [mod_python] The Whore Lived Like a German
Message-ID: <08d1.ddb6ce6ccfbe417@modpython.org>

Full Article:
http://service.spiegel.de/cache/international/0,1518,344374,00.html
From grahamd at dscpl.com.au  Wed May 18 16:51:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May 18 16:51:23 2005
Subject: [mod_python] ModPython 3.1.4 patches
In-Reply-To: <428B683C.7040508@hostway.com>
References: <428B683C.7040508@hostway.com>
Message-ID: <8dfab1dce48d8eb2f26781a594eb92b4@dscpl.com.au>


On 19/05/2005, at 2:07 AM, Huzaifa Tapal wrote:

> does anybody know if the patches as summarized by Graham on the 
> Vampire site are a part of this version?  The patches are at:
>
> http://www.dscpl.com.au/projects/vampire/patches.html
>
> if not then what kind of security fixes are available in this version 
> other than the publisher?

Patches on my site are not in 3.1.4. They are present in the subversion
source code repository if you wanted to play with working copy of next
version of mod_python.

The only change in 3.1.4 was the security fix for publisher.

Graham

From dharana at dharana.net  Wed May 18 18:00:07 2005
From: dharana at dharana.net (dharana)
Date: Wed May 18 18:00:30 2005
Subject: [mod_python] How to get mod_python's running version?
Message-ID: <428BBAE7.5080307@dharana.net>

Is it possible to get the version mod_python is currently running?

(Background: an script that checks all necessary packages are available 
and that they are at least x.y.z version)
-- 
dharana

From administrator at leebrown.org  Wed May 18 18:18:07 2005
From: administrator at leebrown.org (Lee Brown)
Date: Wed May 18 18:18:38 2005
Subject: [mod_python] The Whore Lived Like a German
In-Reply-To: <08d1.ddb6ce6ccfbe417@modpython.org>
Message-ID: <FB655565461D@underdog>

>From yesterday's Der Spiegel:

----------------------------------------------------------------------------
----------------------------------

Spam Victim?

Dear Readers,

Some of you may have received a deluge of spam e-mail from Germany in recent
days. Among our team of editors, some of us, too, have been hit, and believe
us, we are not happy. Most upsetting is that the mails have linked to a
number of our own stories. Even worse, the spam attack was apparently
coordinated by Germany-based neo-Nazis and, by linking to our site, suggest
that we are somehow in the business of spreading right-wing ideology. We
would like to assure you that nothing could be further from the truth.
Spiegel Online International is a mainstream news outlet dedicated to
accuracy and unbiased reporting.

If you have received any of these mails, please know that we are terribly
sorry, but also that we and our Web site had nothing to do with the
mailings.

The cause seems to be a variant of the mass mailing Sober worm, a virus that
taps into inboxes and then sends out infected mail to everyone listed. Last
week, we wrote about this virus hitting FIFA fans hoping to get tickets for
the World Cup. Now it is our turn to be victimized as well. The good news is
that our subscriber list was untouched. That is, our firewalls have worked
and the virus did not get sent to you by us. Still, our name has been used
on numerous emails as have links to our stories. For that, we are sorry. Now
that Germany is back at work from a three-day holiday weekend and computer
technicians are back at their posts, the flood of junk mail should soon
cease.

We appreciate your readership and hope you will return to the site sometime
soon -- and at a time of your own choosing.

Sincerely, The Editors Spiegel Online International  

----------------------------------------------------------------------------
-----------------------------------

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of grisha@modpython.org
Sent: Wednesday, May 18, 2005 3:05 PM
To: mod_python@modpython.org
Subject: [mod_python] The Whore Lived Like a German

Full Article:
http://service.spiegel.de/cache/international/0,1518,344374,00.html
_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Wed May 18 19:05:45 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May 18 19:05:53 2005
Subject: [mod_python] How to get mod_python's running version?
Message-ID: <1116457545.1440@dscpl.user.openhosting.com>

dharana wrote ..
> Is it possible to get the version mod_python is currently running?
> 
> (Background: an script that checks all necessary packages are available
> and that they are at least x.y.z version)

I may be missing the obvious, but don't recollect ever seeing a
version tag and couldn't find when I looked again just then.

Is this script mean't to be able to run on a command line or is
executing under mod_python itself?

The problem with trying to run a standalone script to determine
something about mod_python is that mod_python will not fully
load if not imported from within the context of an interpretor 
running under Apache. The best I have managed to come up with
as a guide to determining which version of mod_python is to
try and import the psp module and see what sort of import error
occurs. See the description in:

  http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html#version-number

>From code running under mod_python itself, there are a few
subtle differences in member data present in the request object
which one can used to determine between 2.7 and 3.1. For
example:

    if hasattr(req,"hlist"):
      # In mod_python 3.X have the req.hlist member.
      handler_root = req.hlist.directory

    elif hasattr(req,"get_dirs"):
      # In mod_python 2.X have the req.get_dirs() method.
      handler_root = req.get_dirs()["PythonHandler"]

Don't know if this helps or not.

Graham
From grahamd at dscpl.com.au  Wed May 18 19:18:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May 18 19:18:55 2005
Subject: [mod_python] PSP Response
Message-ID: <1116458330.4809@dscpl.user.openhosting.com>

The session object isn't created within this function. Are you able
to describe or post the handler/publisher which calls this function
and where the session is created? Bit hard to tell at this point with
out knowing what else is being done besides what is in this function.

Jeremy Kohansimeh wrote ..
> Hey Graham,
> 
> Thanks for your response. I made the following change to my code, but I
> am 
> still unable to prevent the page from hanging sometimes:
> 
> <code>
> def genGraphWAnnotsHTMLResponse( req, frames):
> """generates HTML response for request to graph"""
> 
> sess = req.sess
> seg_facade = sess.seg_facade
> 
> column_header, data = genSegmentAnnotsHTML( frames, sess.chrom_num, 
> seg_facade)
> 
> vars = { 'p_extend' : seg_facade.p_extend, \
> 'p_break' : seg_facade.p_break, \
> 'plot_image' : os.path.join( '../../images', sess.original_image), \
> 'session_id' : sess.id(), \
> 'cols' : column_header.__str__(), \
> 'data' : data.__str__() }
> 
> return psp.PSP( req, filename=ZOOM_WANNOTS_TMPL, vars=vars)
> </code>
> 
> I have made one other, possibly important, observation. The page will not
> hang the first time a session in created, but will subsequent times when
> it 
> is referenced. I can tell this, because if I get rid of the pysid cookie
> after a session has been created, which forces the creation of a new 
> session, the page works fine.
> 
> Do you have any suggestions? Thanks for your help.
> 
> Best Regards,
> Jeremy Kohansimeh
> 
> On 5/17/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > 
> > 
> > Jeremy Kohansimeh wrote ..
> > > Hello,
> > >
> > > The following fragment of code will sometimes return a response and
> > other
> > > times just hang:
> > >
> > > <code>
> > > def genGraphWAnnotsHTMLResponse( req, frames):
> > > """generates HTML response for request to graph"""
> > >
> > > session = req.session
> > > seg_facade = session.seg_facade
> > >
> > > column_header, data = genSegmentAnnotsHTML( frames, session.chrom_num,
> > > seg_facade)
> > >
> > > vars = { 'p_extend' : seg_facade.p_extend, \
> > > 'p_break' : seg_facade.p_break, \
> > > 'plot_image' : os.path.join( '../../images', session.original_image),
> \
> > > 'session' : session.id(), \
> > > 'cols' : column_header.__str__(), \
> > > 'data' : data.__str__() }
> > >
> > > return psp.PSP( req, filename=ZOOM_WANNOTS_TMPL, vars=vars)
> > > </code>
> > >
> > > The path from the handler to here appears to be working fine. I did
> some
> > > debugging and can tell that the problem is somewhere in the psp.PSPcall.
> > > I
> > > think it may have something to do with the interpreter, but that is
> just
> > > a
> > > wild guess. Has anyone had similar issues?
> > 
> > One problem you can hit with this code, and for which there has
> > been a little discussion about over the last few days in the dev
> > area, is that the following code will hang if your PSP page tries
> > to reference the "session" object. The problem is that the PSP
> > class ignores the fact of whether or not you may have created
> > your own session object and will create its own if "session" is
> > referenced from the PSP page, with the session object it thus
> > creates being stored as "session" with the execution environment
> > of PSP so as to be accessible from your page.
> > 
> > Now you actually set "session" in your vars to the session ID
> > which if you try to access in the page will trigger the creation
> > of the second session object, although your session ID setting
> > will override PSPs attempt to set "session" to the session object
> > it creates. Either way, the attempt to create a second session
> > object for the same request can result in a deadlock.
> > 
> > I would suggest you try not using the "session" variable in
> > your vars, but use "my_session_id" for the session ID and if
> > you do need access to the session object you create in
> > PSP, set it as the "my_session" variable. Ie., avoid using
> > "session" name as that triggers the deadlock where you have
> > already created the session object.
> > 
> > The suggestion being dicussed in dev area is that the PSP
> > code check for the existance of "req.session" and if it
> > exists and PSP page tries to access "session", that session be set
> > to "req.session" rather than creating a new session object.
> > If this change were made for future version of mod_python,
> > you wouldn't need to set "session" in the vars as PSP will
> > do it automatically for you. In your page you could then say
> > "session.id()" to get the session ID.
> > 
> > Would this explain your problems and does avoiding using
> > "session" variable name in vars fix the problem?
> > 
> > Graham
> > 
> >
From wouter at squirrel-systems.com  Wed May 18 20:18:13 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 18 20:18:31 2005
Subject: [mod_python] psp module
Message-ID: <1116461893.18468.30.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

Is there a way to catch the html code as produced by the psp module?

I mean: normally one does something like:
page = psp.PSP(req,  "template.psp")
page.run({"spam": 1, "eggs": 5})
and the page is converted to html, and displayed in the browser.

Now is it possible to catch this html code in a string, instead of
sending it to the browser? This as I'd like to use the psp templating
for creating an e-mail body.

Regards,
Wouter van Marle
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050519/5c5c31a4/attachment.html
From grahamd at dscpl.com.au  Wed May 18 21:12:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May 18 21:12:22 2005
Subject: [mod_python] psp module
Message-ID: <1116465139.7231@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
> Hi all,
> 
> Is there a way to catch the html code as produced by the psp module?
> 
> I mean: normally one does something like:
> page = psp.PSP(req,  "template.psp")
> page.run({"spam": 1, "eggs": 5})
> and the page is converted to html, and displayed in the browser.
> 
> Now is it possible to catch this html code in a string, instead of
> sending it to the browser? This as I'd like to use the psp templating
> for creating an e-mail body.

At first glance there seems to be no feature to do it. What you might
try (I haven't), is that presuming that all output is generated through
calls to req.write(), is to substitute the "req" object with a wrapper
class that provides its own req.write() which is actually the write()
method on a StringIO object.

class Wrapper:

  def __init__(self,req,write):
    self.__req = req
    self.write = write

  def __getattr__(self,name):
    return getattr(self,__req,name)

s = StringIO.StringIO()

page = psp.PSP(Wrapper(req,s.write),  "template.psp")
page.run({"spam": 1, "eggs": 5})

req.log_error(s.getvalue())

If you were also stashing stuff in "req" from the PSP page, would also
need a __setattr__() method in the wrapper.

Graham
  
From wouter at squirrel-systems.com  Wed May 18 21:47:52 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 18 21:47:59 2005
Subject: [mod_python] psp module
In-Reply-To: <1116465139.7231@dscpl.user.openhosting.com>
References: <1116465139.7231@dscpl.user.openhosting.com>
Message-ID: <1116467273.18468.34.camel@cm61-10-50-104.hkcable.com.hk>

On Wed, 2005-05-18 at 21:12 -0400, Graham Dumpleton wrote:

> Wouter van Marle wrote ..
> > Hi all,
> > 
> > Is there a way to catch the html code as produced by the psp module?
> > 
> > I mean: normally one does something like:
> > page = psp.PSP(req,  "template.psp")
> > page.run({"spam": 1, "eggs": 5})
> > and the page is converted to html, and displayed in the browser.
> > 
> > Now is it possible to catch this html code in a string, instead of
> > sending it to the browser? This as I'd like to use the psp templating
> > for creating an e-mail body.
> 
> At first glance there seems to be no feature to do it. What you might
> try (I haven't), is that presuming that all output is generated through
> calls to req.write(), is to substitute the "req" object with a wrapper
> class that provides its own req.write() which is actually the write()
> method on a StringIO object.



Mmm... yeah should be something like that... well as I mainly use it for
actually building web pages in the same script, I'll just stick to
normal mails, or use some other method.

Do the developers accept feature requests? I have one.

Wouter.




> class Wrapper:
> 
>   def __init__(self,req,write):
>     self.__req = req
>     self.write = write
> 
>   def __getattr__(self,name):
>     return getattr(self,__req,name)
> 
> s = StringIO.StringIO()
> 
> page = psp.PSP(Wrapper(req,s.write),  "template.psp")
> page.run({"spam": 1, "eggs": 5})
> 
> req.log_error(s.getvalue())
> 
> If you were also stashing stuff in "req" from the PSP page, would also
> need a __setattr__() method in the wrapper.
> 
> Graham
>   
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050519/9610608a/attachment.html
From grahamd at dscpl.com.au  Wed May 18 22:10:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May 18 22:10:17 2005
Subject: [mod_python] psp module
Message-ID: <1116468615.25836@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
>
> Do the developers accept feature requests? I have one.

I am sure they do, I am always suggesting things. :-)

This list is a good enough place to start. If the discussion gets
too involved it can always be pushed over to the dev mailing list.

Graham
From wouter at squirrel-systems.com  Wed May 18 22:58:08 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Wed May 18 22:58:16 2005
Subject: [mod_python] feature request: psp templating returns html code to
	calling script, not to browser.
Message-ID: <1116471488.18468.39.camel@cm61-10-50-104.hkcable.com.hk>

Hi all,

Then hereby I'll make it a feature request:

I'd like to have a method to catch the html code as produced by the
run() method of the psp.PSP object for use in e.g. an e-mail body,
instead of having the run() method automatically pass it to the browser.

I mean: normally one does something like:
page = psp.PSP(req,  "template.psp")
page.run({"spam": 1, "eggs": 5})
and the page is converted to html, and displayed in the browser. I'd
like to use this templating for creating an e-mail, e.g.:

page = psp.PSP(req,  "template.psp")
body = page.create({"spam": 1, "eggs": 5})

Which basically would do exactly the same as the run() module, except
for having the html code as output.

Regards,
Wouter van Marle
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050519/d2d0db01/attachment.html
From wouter at squirrel-systems.com  Thu May 19 01:27:36 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu May 19 01:27:43 2005
Subject: [mod_python] feature request: psp templating returns html code
	to calling script, not to browser.
In-Reply-To: <1116471488.18468.39.camel@cm61-10-50-104.hkcable.com.hk>
References: <1116471488.18468.39.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <1116480456.18468.47.camel@cm61-10-50-104.hkcable.com.hk>

Regarding my feature request below, I've hacked together a small piece
of code to retrieve the raw python source, and the html result of that
source. This code is heavily inspired by the PSP class of psp.py script
from mod_python.
It works for me, does not support forms and sessions (it is meant to
produce html formatted e-mail bodies), does not support Windows (path
names there use backslashes), and maybe more limitations.

Maybe the developers are interested in adding (something like) this to
the psp.py file?

get_source produces the python source code, get_html compiles the psp
input file to html code.

Wouter.



from mod_python import _psp

import os
import sys

def get_source(filename):
    dir, fname = os.path.split(filename)
    dir += "/"
    pycode = _psp.parse(fname, dir).splitlines()
    pycode = [s.rstrip() for s in pycode]
    for line in pycode:
        left = line.replace("\t", " "*4)
        result += left+"\n"
    return result

def get_html(filename, vars={}):
    code = get_source(filename)
    lines = code.splitlines()
    code = 'html = ""\n'
    for l in lines:
        l = l.replace("req.write(", "html +=").replace(",0)", "")
        code += l+"\n"
    global_scope = globals().copy()
    global_scope.update(vars)
    html = ""
    l = locals()
    try:
        exec code in global_scope, l
    except:
        et, ev, etb = sys.exc_info()
        raise et, ev, etb
    return l["html"]



On Thu, 2005-05-19 at 10:58 +0800, Wouter van Marle wrote:
> Hi all,
> 
> Then hereby I'll make it a feature request:
> 
> I'd like to have a method to catch the html code as produced by the
> run() method of the psp.PSP object for use in e.g. an e-mail body,
> instead of having the run() method automatically pass it to the
> browser.
> 
> I mean: normally one does something like:
> page = psp.PSP(req,  "template.psp")
> page.run({"spam": 1, "eggs": 5})
> and the page is converted to html, and displayed in the browser. I'd
> like to use this templating for creating an e-mail, e.g.:
> 
> page = psp.PSP(req,  "template.psp")
> body = page.create({"spam": 1, "eggs": 5})
> 
> Which basically would do exactly the same as the run() module, except
> for having the html code as output.
> 
> Regards,
> Wouter van Marle 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Thu May 19 01:52:40 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 19 01:52:43 2005
Subject: [mod_python] feature request: psp templating returns html codeto
	calling script, not to browser.
Message-ID: <1116481960.9626@dscpl.user.openhosting.com>

Wouter van Marle wrote ..
> def get_source(filename):
>     dir, fname = os.path.split(filename)
>     dir += "/"
>     pycode = _psp.parse(fname, dir).splitlines()
>     pycode = [s.rstrip() for s in pycode]
>     for line in pycode:
>         left = line.replace("\t", " "*4)
>         result += left+"\n"
>     return result

This may only work for an indenting style where tabs are used. At least
the substitution of tabs with 4 spaces looks dangerous to me in that it
could screen up indenting of code. You would also be changing tabs
that may be present in literal strings. Why did you feel you needed to
do these changes.

> def get_html(filename, vars={}):
>     code = get_source(filename)
>     lines = code.splitlines()
>     code = 'html = ""\n'
>     for l in lines:
>         l = l.replace("req.write(", "html +=").replace(",0)", "")
>         code += l+"\n"
>     global_scope = globals().copy()
>     global_scope.update(vars)
>     html = ""
>     l = locals()
>     try:
>         exec code in global_scope, l
>     except:
>         et, ev, etb = sys.exc_info()
>         raise et, ev, etb
>     return l["html"]

Actually modifying the source code seems a bit messy to me. You could
still use the "req" wrapper class hack I suggested before, or if you know
the PSP page never actually references the "req" object explicitly, you
could pass an instance of StringIO into it and call it "req" and it should just
work. This would avoid having to pass in locals(). For the purposes of
what you are doing, there is probably no point even copying globals as
it may not give you anything you need anyway. You could almost just
use "exec code in vars".

def get_html(filename, vars={}):
     code = get_source(filename)
     vars = vars.copy()
     vars["req"] = StringIO.StringIO()
     try:
         exec code in vars
     except:
         et, ev, etb = sys.exc_info()
         raise et, ev, etb
     return vars["req"].getvalue()


Graham
From nicolas.lehuen at gmail.com  Thu May 19 02:24:41 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu May 19 02:24:43 2005
Subject: [mod_python] How to get mod_python's running version?
In-Reply-To: <1116457545.1440@dscpl.user.openhosting.com>
References: <1116457545.1440@dscpl.user.openhosting.com>
Message-ID: <c298f2d705051823242c8bbf67@mail.gmail.com>

Depending on your configuration, the mod_python version number appears
in your server identification string (this is configured by the
ServerTokens directive in httpd.conf).

You can then get mod_python's version number by parsing the
SERVER_SOFTWARE environment variable obtained by :

req.add_common_vars()
req.subprocess_env.get('SERVER_SOFTWARE')

Have a look at the upcoming testhandler which output a bunch of
diagnostic information :

http://svn.apache.org/repos/asf/httpd/mod_python/trunk/lib/python/mod_python/testhandler.py

Regards,

Nicolas

2005/5/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> dharana wrote ..
> > Is it possible to get the version mod_python is currently running?
> >
> > (Background: an script that checks all necessary packages are available
> > and that they are at least x.y.z version)
> 
> I may be missing the obvious, but don't recollect ever seeing a
> version tag and couldn't find when I looked again just then.
> 
> Is this script mean't to be able to run on a command line or is
> executing under mod_python itself?
> 
> The problem with trying to run a standalone script to determine
> something about mod_python is that mod_python will not fully
> load if not imported from within the context of an interpretor
> running under Apache. The best I have managed to come up with
> as a guide to determining which version of mod_python is to
> try and import the psp module and see what sort of import error
> occurs. See the description in:
> 
>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html#version-number
> 
> >From code running under mod_python itself, there are a few
> subtle differences in member data present in the request object
> which one can used to determine between 2.7 and 3.1. For
> example:
> 
>     if hasattr(req,"hlist"):
>       # In mod_python 3.X have the req.hlist member.
>       handler_root = req.hlist.directory
> 
>     elif hasattr(req,"get_dirs"):
>       # In mod_python 2.X have the req.get_dirs() method.
>       handler_root = req.get_dirs()["PythonHandler"]
> 
> Don't know if this helps or not.
> 
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From nicolas.lehuen at gmail.com  Thu May 19 02:32:12 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu May 19 02:32:15 2005
Subject: [mod_python] ModPython 3.1.4 patches
In-Reply-To: <8dfab1dce48d8eb2f26781a594eb92b4@dscpl.com.au>
References: <428B683C.7040508@hostway.com>
	<8dfab1dce48d8eb2f26781a594eb92b4@dscpl.com.au>
Message-ID: <c298f2d70505182332322972dc@mail.gmail.com>

Hi,

Warning ! The anonymous CVS referred to on the homepage is deprecated.
The latest, bleeding edge version of mod_python can be fetched using
subversion from :

http://svn.apache.org/repos/asf/httpd/mod_python/trunk/

Subversion clients can be found here :

http://subversion.tigris.org/project_packages.html

Regards,
Nicolas

2005/5/18, Graham Dumpleton <grahamd@dscpl.com.au>:
> 
> On 19/05/2005, at 2:07 AM, Huzaifa Tapal wrote:
> 
> > does anybody know if the patches as summarized by Graham on the
> > Vampire site are a part of this version?  The patches are at:
> >
> > http://www.dscpl.com.au/projects/vampire/patches.html
> >
> > if not then what kind of security fixes are available in this version
> > other than the publisher?
> 
> Patches on my site are not in 3.1.4. They are present in the subversion
> source code repository if you wanted to play with working copy of next
> version of mod_python.
> 
> The only change in 3.1.4 was the security fix for publisher.
> 
> Graham
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From wouter at squirrel-systems.com  Thu May 19 03:28:43 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu May 19 03:28:50 2005
Subject: [mod_python] feature request: psp templating returns html code
	to calling script, not to browser.
In-Reply-To: <1116481960.9626@dscpl.user.openhosting.com>
References: <1116481960.9626@dscpl.user.openhosting.com>
Message-ID: <1116487723.18468.59.camel@cm61-10-50-104.hkcable.com.hk>

On Thu, 2005-05-19 at 01:52 -0400, Graham Dumpleton wrote:
> Wouter van Marle wrote ..
> > def get_source(filename):
> >     dir, fname = os.path.split(filename)
> >     dir += "/"
> >     pycode = _psp.parse(fname, dir).splitlines()
> >     pycode = [s.rstrip() for s in pycode]
> >     for line in pycode:
> >         left = line.replace("\t", " "*4)
> >         result += left+"\n"
> >     return result
> 
> This may only work for an indenting style where tabs are used. At least
> the substitution of tabs with 4 spaces looks dangerous to me in that it
> could screen up indenting of code. You would also be changing tabs
> that may be present in literal strings. Why did you feel you needed to
> do these changes.

Agreed, is not necessary. I had it in because it is used as such in the
psp module for html formatting (and later for debugging: the text shows
a bit nicer). Is not necessary.

> > def get_html(filename, vars={}):
> >     code = get_source(filename)
> >     lines = code.splitlines()
> >     code = 'html = ""\n'
> >     for l in lines:
> >         l = l.replace("req.write(", "html +=").replace(",0)", "")
> >         code += l+"\n"
> >     global_scope = globals().copy()
> >     global_scope.update(vars)
> >     html = ""
> >     l = locals()
> >     try:
> >         exec code in global_scope, l
> >     except:
> >         et, ev, etb = sys.exc_info()
> >         raise et, ev, etb
> >     return l["html"]
> 
> Actually modifying the source code seems a bit messy to me. You could
> still use the "req" wrapper class hack I suggested before, or if you know
> the PSP page never actually references the "req" object explicitly, you
> could pass an instance of StringIO into it and call it "req" and it should just
> work. This would avoid having to pass in locals(). For the purposes of
> what you are doing, there is probably no point even copying globals as
> it may not give you anything you need anyway. You could almost just
> use "exec code in vars".

Looks like a more elegant solution indeed. I was a bit stuck on the req
object part, not knowing well enough what it is and what could be passed
instead. The goal was simply to get a string with the html code out of
it. Ah well, another python trick learnt :)

> 
> def get_html(filename, vars={}):
>      code = get_source(filename)
>      vars = vars.copy()
>      vars["req"] = StringIO.StringIO()
>      try:
>          exec code in vars
>      except:
>          et, ev, etb = sys.exc_info()
>          raise et, ev, etb
>      return vars["req"].getvalue()
> 
> 
> Graham
> 
> 

From wouter at squirrel-systems.com  Thu May 19 03:41:58 2005
From: wouter at squirrel-systems.com (Wouter van Marle)
Date: Thu May 19 03:42:03 2005
Subject: [mod_python] feature request: psp templating returns html
	codeto calling script, not to browser.
In-Reply-To: <1116481960.9626@dscpl.user.openhosting.com>
References: <1116481960.9626@dscpl.user.openhosting.com>
Message-ID: <1116488518.18468.67.camel@cm61-10-50-104.hkcable.com.hk>

And a little bit of fiddling later I come to this result: psp2html;
direct. I don't see the need of capturing the in-between Python code
anyway. As such it runs and appears pretty robust, without scary handler
hacks that I don't really understand.
Thanks Graham for the further input and advice.

from mod_python import _psp
import os
import sys
import StringIO

def psp2html (filename, vars={}):
    dir, fname = os.path.split(filename)
    dir += "/"
    # produce usable python code using the psp parser.
    pycode = _psp.parse(fname, dir).splitlines()
    pycode = [s.rstrip() for s in pycode]
    code = ""
    # as req.write() for a real request object works a little different
    # than the req.write we use here, we have to change the code a
    # little bit.
    for s in pycode:
        code += s.replace(",0)", ")")+"\n"
    vars["req"] = StringIO.StringIO()
    try:
        exec code in vars
    except:
        et, ev, etb = sys.exc_info()
        raise et, ev, etb
    return vars["req"].getvalue()


Wouter.


On Thu, 2005-05-19 at 01:52 -0400, Graham Dumpleton wrote:
> Wouter van Marle wrote ..
> > def get_source(filename):
> >     dir, fname = os.path.split(filename)
> >     dir += "/"
> >     pycode = _psp.parse(fname, dir).splitlines()
> >     pycode = [s.rstrip() for s in pycode]
> >     for line in pycode:
> >         left = line.replace("\t", " "*4)
> >         result += left+"\n"
> >     return result
> 
> This may only work for an indenting style where tabs are used. At least
> the substitution of tabs with 4 spaces looks dangerous to me in that it
> could screen up indenting of code. You would also be changing tabs
> that may be present in literal strings. Why did you feel you needed to
> do these changes.
> 
> > def get_html(filename, vars={}):
> >     code = get_source(filename)
> >     lines = code.splitlines()
> >     code = 'html = ""\n'
> >     for l in lines:
> >         l = l.replace("req.write(", "html +=").replace(",0)", "")
> >         code += l+"\n"
> >     global_scope = globals().copy()
> >     global_scope.update(vars)
> >     html = ""
> >     l = locals()
> >     try:
> >         exec code in global_scope, l
> >     except:
> >         et, ev, etb = sys.exc_info()
> >         raise et, ev, etb
> >     return l["html"]
> 
> Actually modifying the source code seems a bit messy to me. You could
> still use the "req" wrapper class hack I suggested before, or if you know
> the PSP page never actually references the "req" object explicitly, you
> could pass an instance of StringIO into it and call it "req" and it should just
> work. This would avoid having to pass in locals(). For the purposes of
> what you are doing, there is probably no point even copying globals as
> it may not give you anything you need anyway. You could almost just
> use "exec code in vars".
> 
> def get_html(filename, vars={}):
>      code = get_source(filename)
>      vars = vars.copy()
>      vars["req"] = StringIO.StringIO()
>      try:
>          exec code in vars
>      except:
>          et, ev, etb = sys.exc_info()
>          raise et, ev, etb
>      return vars["req"].getvalue()
> 
> 
> Graham
> 
> 

From grahamd at dscpl.com.au  Thu May 19 05:26:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 19 05:27:07 2005
Subject: [mod_python] feature request: psp templating returns html codeto
	calling script, not to browser.
In-Reply-To: <1116488518.18468.67.camel@cm61-10-50-104.hkcable.com.hk>
References: <1116481960.9626@dscpl.user.openhosting.com>
	<1116488518.18468.67.camel@cm61-10-50-104.hkcable.com.hk>
Message-ID: <dbb36bd6948450011b6dd56003cd1d78@dscpl.com.au>


On 19/05/2005, at 5:41 PM, Wouter van Marle wrote:

>
>     try:
>         exec code in vars
>     except:
>         et, ev, etb = sys.exc_info()
>         raise et, ev, etb

The try/except block is actually redundant in this case, you can just 
say:

   exec code in vars

Graham

From dharana at dharana.net  Thu May 19 05:50:08 2005
From: dharana at dharana.net (dharana)
Date: Thu May 19 05:50:18 2005
Subject: [mod_python] How to get mod_python's running version?
In-Reply-To: <c298f2d705051823242c8bbf67@mail.gmail.com>
References: <1116457545.1440@dscpl.user.openhosting.com>
	<c298f2d705051823242c8bbf67@mail.gmail.com>
Message-ID: <428C6150.8090404@dharana.net>

Trying to do a "import mod_python" from an external script works so I should 
ask, wouldn't it nice to have a mod_python.version string with just the current 
version or isn't it a good idea?

The problem is I want to make sure if it's 3.2 or later (FileSession, 
php.parsestring bugfix et all) in the script so I can't use the hacks available 
on testhandler or vampire because I believe they don't differentiate that.

Nicolas Lehuen wrote:
> Depending on your configuration, the mod_python version number appears
> in your server identification string (this is configured by the
> ServerTokens directive in httpd.conf).
> 
> You can then get mod_python's version number by parsing the
> SERVER_SOFTWARE environment variable obtained by :
> 

ServerTokens Prod won't show them and as it's a configuration thing so I don't 
believe it's the best way to do it.

> req.add_common_vars()
> req.subprocess_env.get('SERVER_SOFTWARE')
> 
> Have a look at the upcoming testhandler which output a bunch of
> diagnostic information :
> 
> http://svn.apache.org/repos/asf/httpd/mod_python/trunk/lib/python/mod_python/testhandler.py
> 
> Regards,
> 

It all boils down to the question: do you consider a good idea to have the 
version string in mod_python.version for example?


-- 
dharana

From grahamd at dscpl.com.au  Thu May 19 05:59:17 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 19 05:59:27 2005
Subject: [mod_python] How to get mod_python's running version?
In-Reply-To: <428C6150.8090404@dharana.net>
References: <1116457545.1440@dscpl.user.openhosting.com>
	<c298f2d705051823242c8bbf67@mail.gmail.com>
	<428C6150.8090404@dharana.net>
Message-ID: <9a0d3744ef7cef02f0f6c6ba9579e0db@dscpl.com.au>


On 19/05/2005, at 7:50 PM, dharana wrote:

> Trying to do a "import mod_python" from an external script works so I 
> should ask, wouldn't it nice to have a mod_python.version string with 
> just the current version or isn't it a good idea?

No harm in having it. Most Python packages do.

> The problem is I want to make sure if it's 3.2 or later (FileSession, 
> php.parsestring bugfix et all) in the script so I can't use the hacks 
> available on testhandler or vampire because I believe they don't 
> differentiate that.

One of the good things about Python is that you can do checks like:

   try:
     from mod_python import psp
   except:
     # Don't have PSP.

and:

   from mod_python import Session
   if hasattr(Session,"FileSession"):
     # Have FileSession.

I know this doesn't in general help with knowing whether a bug fix is 
present
as that may be harder to test for, but can be used to test for certain 
features
by virtue of presence of a module or of an attribute in a module.

Graham

From nicolas.lehuen at gmail.com  Thu May 19 09:58:21 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu May 19 09:58:24 2005
Subject: [mod_python] How to get mod_python's running version?
In-Reply-To: <9a0d3744ef7cef02f0f6c6ba9579e0db@dscpl.com.au>
References: <1116457545.1440@dscpl.user.openhosting.com>
	<c298f2d705051823242c8bbf67@mail.gmail.com>
	<428C6150.8090404@dharana.net>
	<9a0d3744ef7cef02f0f6c6ba9579e0db@dscpl.com.au>
Message-ID: <c298f2d705051906585c318280@mail.gmail.com>

OK dharana, I've created a new issue in JIRA for this.

Regads,
Nicolas

2005/5/19, Graham Dumpleton <grahamd@dscpl.com.au>:
> 
> On 19/05/2005, at 7:50 PM, dharana wrote:
> 
> > Trying to do a "import mod_python" from an external script works so I
> > should ask, wouldn't it nice to have a mod_python.version string with
> > just the current version or isn't it a good idea?
> 
> No harm in having it. Most Python packages do.
> 
> > The problem is I want to make sure if it's 3.2 or later (FileSession,
> > php.parsestring bugfix et all) in the script so I can't use the hacks
> > available on testhandler or vampire because I believe they don't
> > differentiate that.
> 
> One of the good things about Python is that you can do checks like:
> 
>    try:
>      from mod_python import psp
>    except:
>      # Don't have PSP.
> 
> and:
> 
>    from mod_python import Session
>    if hasattr(Session,"FileSession"):
>      # Have FileSession.
> 
> I know this doesn't in general help with knowing whether a bug fix is
> present
> as that may be harder to test for, but can be used to test for certain
> features
> by virtue of presence of a module or of an attribute in a module.
> 
> Graham
> 
>

From bud at comune.grosseto.it  Thu May 19 10:27:12 2005
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Thu May 19 10:20:34 2005
Subject: [mod_python] problem w/ authen handler
Message-ID: <5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>

I'm a beginner and hope someone can straighten me out.

I am trying to write a simple handler that clicks in after mod-ssl has 
requested a certificate from the client.  Depending on the type of client 
token (European eID cards), I'd like the handler to look at the client's 
subject DN derive (by string manipulation or by lookup) a nationally unique 
ID for the card holder.

Sounds simple enough--but I can't get it to work.  I tried both, the authen 
and the authz handlers.  But neither from mod-ssl's +fakeBasicAuth nor from 
the handlers req.user = 'xxx' do I get a REMOTE_USER env variable 
set.  Also the test evironment variable that I try to set in the 
authen/authz handler doesn't have effect.

Does this possibly mean that the authen/authz handlers are not called at 
all in my configuration?  Should I use a different handler and which?  Or 
did I simply mess up something else?

Any help is highly appreciated!

cheers
-b

here the details of what I tried:

<VirtualHost *:443>
         SSLCertificateFile /etc/apache2/ssl/apache.pem
       # no client cert verification for Demo:
         SSLVerifyClient optional_no_ca
       # SSLCACertificatePath /etc/apache2/ssl/trusted/
       # SSLVerifyDepth 3
         LogLevel debug
         SSLEngine on
         DocumentRoot /var/www/

     <Directory /var/www/sc>
         SSLRequireSSL
         SSLOptions +StdEnvVars +ExportCertData +FakeBasicAuth +StrictRequire
         SetHandler mod_python
         PythonHandler test
         PythonAuthzHandler test
         PythonDebug On
     </Directory>

</VirtualHost>

and test.py:

from mod_python import apache

def authzhandler(req):
     req.add_common_vars()
     req.subprocess_env['insideAuthH']='valueSetFromAuthH'
     req.user='pippo'
     #return apache.HTTP_UNAUTHORIZED
     return apache.OK

def handler(req):
     req.add_common_vars()
     req.subprocess_env['pytest']='itWorksFromPublisher'
     req.content_type = "text/plain"
     req.write("Environment Variables\n----------------------\n\n")
     for item in req.subprocess_env.items():
         req.write("%s: %s\n" % item)
     req.write("\n\n")
     return apache.OK



-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 
(voice),  -21139 (fax)
Servizio Elaborazione Dati                    e-mail:  bud@comune.grosseto.it
Comune di 
Grosseto                            http://www.comune.grosseto.it/cie/
Via Ginori, 
43                                      http://OpenPortalGuard.sf.net
58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info

Free Software in Public Administration:  not just a good idea, but a necessity

Perfection is attained, not when there is nothing more to be added, but 
when there is nothing more to be taken away -- Antoine de Saint-Exupery 

From grahamd at dscpl.com.au  Thu May 19 18:52:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 19 18:52:24 2005
Subject: [mod_python] problem w/ authen handler
In-Reply-To: <5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
References: <5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
Message-ID: <4c6f13de1c50e9f1b7ecc5f3050fc638@dscpl.com.au>


On 20/05/2005, at 12:27 AM, Bud P. Bruegger wrote:

> I'm a beginner and hope someone can straighten me out.
>
> I am trying to write a simple handler that clicks in after mod-ssl has 
> requested a certificate from the client.  Depending on the type of 
> client token (European eID cards), I'd like the handler to look at the 
> client's subject DN derive (by string manipulation or by lookup) a 
> nationally unique ID for the card holder.
>
> Sounds simple enough--but I can't get it to work.  I tried both, the 
> authen and the authz handlers.  But neither from mod-ssl's 
> +fakeBasicAuth nor from the handlers req.user = 'xxx' do I get a 
> REMOTE_USER env variable set.  Also the test evironment variable that 
> I try to set in the authen/authz handler doesn't have effect.

Normally the authenhandler will only be called if the Apache 
configuration has
something like:

   AuthType Basic
   AuthName "Restricted Files"
   AuthUserFile /Users/grahamd/Sites/auth/pwdb

Ie., it is triggered of the presence of these special Auth options. 
Similarly,
the authzhandler only get called if other appropriate options for it are
defined. Your SSL stuff doesn't seem to fit under that model and so the
handlers may simply not be getting called.

> Does this possibly mean that the authen/authz handlers are not called 
> at all in my configuration?  Should I use a different handler and 
> which?  Or did I simply mess up something else?

Try adding a req.log_error() call in the handlers to see if they get 
called or not.
Message will be in the Apache error log file.

Does your code work if you move what you have in the authenhandler into 
the start
of your actual handler function? Ie., does the concept at least work?

As a fudge, you could always stick it in the accesshandler, which from 
memory is
always called if defined.

Graham

From Oyvind.Ostlund at cern.ch  Fri May 20 05:10:37 2005
From: Oyvind.Ostlund at cern.ch (Oyvind Ostlund)
Date: Fri May 20 05:10:44 2005
Subject: [mod_python] Installig mod_python on Win XP.
Message-ID: <9D1BA87B48D4F440A0D9E371471F45A51BF461@cernxchg21.cern.ch>

I tried to follow the steps on this site:
http://www.xminc.com/linux/mod_python1.html

But I can't get it to work. I installed Apache 2.0.54, and I have Python 2.3.5 installed. Then I installed mod_python 3.1.3. And I added this to the Apaches httpd.conf file: 

---------------------
LoadModule python_module modules\mod_python.so

<Directory "c:\Apache2\htdocs\python">
    AddHandler mod_python .py
    PythonHandler mptest
    PythonDebug On
</Directory>
---------------------

Not sure if I added it the right place, but at least I managed to restart Apache afterwards. Then I made a simple python script like this:

---------------------
from mod_python import apache

    def handler(req):
        req.write("Hello World!")
        return apache.OK
---------------------



But if I go to http://localhos/python/ then I get this error message:



---------------------
Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "C:\PYTHON~1\Lib\site-packages\mod_python\apache.py", line 287, in HandlerDispatch
    log=debug)

  File "C:\PYTHON~1\Lib\site-packages\mod_python\apache.py", line 457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "C:/Apache2/htdocs/python/\mptest.py", line 3

    def handler(req):

    ^

SyntaxError: invalid syntax
---------------------


Does this have anything to do with me not compiling the apache server from scratch with DSO or something. I found some reading about it, at least for Linux, but I have never heard about it before. So is that probably the error, or is it simpler then that?


Thanks
?yvind ?stlund

From grahamd at dscpl.com.au  Fri May 20 05:29:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 20 05:30:20 2005
Subject: [mod_python] Installig mod_python on Win XP.
In-Reply-To: <9D1BA87B48D4F440A0D9E371471F45A51BF461@cernxchg21.cern.ch>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF461@cernxchg21.cern.ch>
Message-ID: <9c08b9ad3edc4874ba65b45f92c14ce6@dscpl.com.au>


On 20/05/2005, at 7:10 PM, Oyvind Ostlund wrote:

> Not sure if I added it the right place, but at least I managed to 
> restart Apache afterwards. Then I made a simple python script like 
> this:
>
> ---------------------
> from mod_python import apache
>
>     def handler(req):
>         req.write("Hello World!")
>         return apache.OK
> ---------------------
>
> But if I go to http://localhos/python/ then I get this error message:
>
>
>
> ---------------------
> Mod_python error: "PythonHandler mptest"
>
> Traceback (most recent call last):
>
>   File "C:\PYTHON~1\Lib\site-packages\mod_python\apache.py", line 287, 
> in HandlerDispatch
>     log=debug)
>
>   File "C:\PYTHON~1\Lib\site-packages\mod_python\apache.py", line 457, 
> in import_module
>     module = imp.load_module(mname, f, p, d)
>
>   File "C:/Apache2/htdocs/python/\mptest.py", line 3
>
>     def handler(req):
>
>     ^
>
> SyntaxError: invalid syntax
> ---------------------
>
>
> Does this have anything to do with me not compiling the apache server 
> from scratch with DSO or something. I found some reading about it, at 
> least for Linux, but I have never heard about it before. So is that 
> probably the error, or is it simpler then that?

It is probably because you indented the function definition when you 
shouldn't.
Indenting in Python is very important, more so than other languages.

Also suggest you read through:

   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html

Use the example code for the handler in that article rather than what 
you
have and it may avoid some other problems described in the article.

Graham

From bud at comune.grosseto.it  Fri May 20 10:04:59 2005
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Fri May 20 09:58:22 2005
Subject: [mod_python] problem w/ authen handler
In-Reply-To: <4c6f13de1c50e9f1b7ecc5f3050fc638@dscpl.com.au>
References: <5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
	<5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
Message-ID: <5.2.1.1.0.20050520132822.038616a8@mail.comune.grosseto.it>

Hi Graham,

many thanks for your input!  This got me a round further.  I tried both the 
access and the fixup handlers (it needs to be before mod-rewrite does its 
things) and they are invoked (as opposed to the authen and authenz handlers).

My remaining problem is that I don't see SSL_CLIENT_S_DN in the handler 
(after  req.add_common_vars() and dumping the keys of 
req.subprocess_env).  (I can see them w/o problems in the standard 
handler.)  I have tried to play with the order of directives, but it didn't 
seem to make a difference.  (see the apache conf snipplet below for details)

Any idea how to access SSL_CLIENT_S_DN in the access or fixup handler?

many thanks!

-b



         <Directory /var/www/sc>
             SSLRequireSSL
             #SSLOptions +StdEnvVars +ExportCertData +FakeBasicAuth 
+StrictRequire
             SSLOptions +StdEnvVars +ExportCertData +StrictRequire
             SetHandler mod_python
             PythonHandler test
             PythonFixupHandler test
             PythonDebug On
         </Directory>

At 08.52 20/05/2005 +1000, Graham Dumpleton wrote:

>On 20/05/2005, at 12:27 AM, Bud P. Bruegger wrote:
>
>>I'm a beginner and hope someone can straighten me out.
>>
>>I am trying to write a simple handler that clicks in after mod-ssl has 
>>requested a certificate from the client.  Depending on the type of client 
>>token (European eID cards), I'd like the handler to look at the client's 
>>subject DN derive (by string manipulation or by lookup) a nationally 
>>unique ID for the card holder.
>>
>>Sounds simple enough--but I can't get it to work.  I tried both, the 
>>authen and the authz handlers.  But neither from mod-ssl's +fakeBasicAuth 
>>nor from the handlers req.user = 'xxx' do I get a REMOTE_USER env 
>>variable set.  Also the test evironment variable that I try to set in the 
>>authen/authz handler doesn't have effect.
>
>Normally the authenhandler will only be called if the Apache configuration has
>something like:
>
>   AuthType Basic
>   AuthName "Restricted Files"
>   AuthUserFile /Users/grahamd/Sites/auth/pwdb
>
>Ie., it is triggered of the presence of these special Auth options. Similarly,
>the authzhandler only get called if other appropriate options for it are
>defined. Your SSL stuff doesn't seem to fit under that model and so the
>handlers may simply not be getting called.
>
>>Does this possibly mean that the authen/authz handlers are not called at 
>>all in my configuration?  Should I use a different handler and which?  Or 
>>did I simply mess up something else?
>
>Try adding a req.log_error() call in the handlers to see if they get 
>called or not.
>Message will be in the Apache error log file.
>
>Does your code work if you move what you have in the authenhandler into 
>the start
>of your actual handler function? Ie., does the concept at least work?
>
>As a fudge, you could always stick it in the accesshandler, which from 
>memory is
>always called if defined.
>
>Graham


-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 
(voice),  -21139 (fax)
Servizio Elaborazione Dati                    e-mail:  bud@comune.grosseto.it
Comune di 
Grosseto                            http://www.comune.grosseto.it/cie/
Via Ginori, 
43                                      http://OpenPortalGuard.sf.net
58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info

Free Software in Public Administration:  not just a good idea, but a necessity

Perfection is attained, not when there is nothing more to be added, but 
when there is nothing more to be taken away -- Antoine de Saint-Exupery 

From gustavo.cordova at q-voz.com  Fri May 20 10:54:50 2005
From: gustavo.cordova at q-voz.com (=?ISO-8859-1?Q?Gustavo_C=F3rdova_Avila?=)
Date: Fri May 20 10:50:55 2005
Subject: [mod_python] Installig mod_python on Win XP.
In-Reply-To: <9D1BA87B48D4F440A0D9E371471F45A51BF461@cernxchg21.cern.ch>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF461@cernxchg21.cern.ch>
Message-ID: <428DFA3A.6010101@q-voz.com>

Oyvind Ostlund wrote:

>I tried to follow the steps on this site:
>http://www.xminc.com/linux/mod_python1.html
>
>But I can't get it to work. I installed Apache 2.0.54, and I have Python 2.3.5 installed. Then I installed mod_python 3.1.3. And I added this to the Apaches httpd.conf file: 
>
>---------------------
>LoadModule python_module modules\mod_python.so
>
><Directory "c:\Apache2\htdocs\python">
>    AddHandler mod_python .py
>    PythonHandler mptest
>    PythonDebug On
></Directory>
>---------------------
>
>Not sure if I added it the right place, but at least I managed to restart Apache afterwards. Then I made a simple python script like this:
>
>---------------------
>from mod_python import apache
>
>    def handler(req):
>        req.write("Hello World!")
>        return apache.OK
>---------------------
>
>
>
>But if I go to http://localhos/python/ then I get this error message:
>
>
>
>---------------------
>Mod_python error: "PythonHandler mptest"
>
>Traceback (most recent call last):
>
>  File "C:\PYTHON~1\Lib\site-packages\mod_python\apache.py", line 287, in HandlerDispatch
>    log=debug)
>
>  File "C:\PYTHON~1\Lib\site-packages\mod_python\apache.py", line 457, in import_module
>    module = imp.load_module(mname, f, p, d)
>
>  File "C:/Apache2/htdocs/python/\mptest.py", line 3
>
>    def handler(req):
>
>    ^
>
>SyntaxError: invalid syntax
>  
>
No, it's right there: "SyntaxError".  You've got indentation problems, 
your function definition is indented inconsistently with the import 
statement at the top, most probably.

Just put the def... statement flush to the left margin, and it'll most 
probably work.

Also, you're using "AddHandler mod_python .py", so you're going to have 
to use an URL ending in .py when testing it, something like:

    http://localhos/python/whatever.py

to make it work.

Good luck :-)

-gus
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gustavo.cordova.vcf
Type: text/x-vcard
Size: 189 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050520/3108f79e/gustavo.cordova.vcf
From mogmios at mlug.missouri.edu  Fri May 20 23:15:38 2005
From: mogmios at mlug.missouri.edu (Michael)
Date: Fri May 20 23:14:22 2005
Subject: [mod_python] GET is slow but POST isn't?
Message-ID: <428EA7DA.5070004@mlug.missouri.edu>

Since my recent upgrade I've noticed that it's difficult to connect to 
my mod_python service using GET. When I try it is very slow and often I 
can not connect at all. POST connections on the other hand seem to work 
just fine.

I use POST for XMLRPC traffic and GET shows online docs for the methods 
available as HTML.

--
Michael <mogmios@mlug.missouri.edu>
http://kavlon.org

From grahamd at dscpl.com.au  Sat May 21 03:14:29 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 21 03:14:43 2005
Subject: [mod_python] GET is slow but POST isn't?
In-Reply-To: <428EA7DA.5070004@mlug.missouri.edu>
References: <428EA7DA.5070004@mlug.missouri.edu>
Message-ID: <e521aad7901808a61457de17bc60a4df@dscpl.com.au>


On 21/05/2005, at 1:15 PM, Michael wrote:

> Since my recent upgrade I've noticed that it's difficult to connect to 
> my mod_python service using GET. When I try it is very slow and often 
> I can not connect at all. POST connections on the other hand seem to 
> work just fine.
>
> I use POST for XMLRPC traffic and GET shows online docs for the 
> methods available as HTML.

Have you tried going back to square one and tried a simple mptest like 
handler,
executing it just after an Apache restart and before your XML-RPC 
handler is called.
Ie., does it affect the most simplest cases, or just your XML-RPC 
handler.

Graham

From grahamd at dscpl.com.au  Sat May 21 03:44:57 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 21 03:45:09 2005
Subject: [mod_python] problem w/ authen handler
In-Reply-To: <5.2.1.1.0.20050520132822.038616a8@mail.comune.grosseto.it>
References: <5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
	<5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
	<5.2.1.1.0.20050520132822.038616a8@mail.comune.grosseto.it>
Message-ID: <1025aa74c278864c57001a78cb171941@dscpl.com.au>


On 21/05/2005, at 12:04 AM, Bud P. Bruegger wrote:

> Hi Graham,
>
> many thanks for your input!  This got me a round further.  I tried 
> both the access and the fixup handlers (it needs to be before 
> mod-rewrite does its things) and they are invoked (as opposed to the 
> authen and authenz handlers).
>
> My remaining problem is that I don't see SSL_CLIENT_S_DN in the 
> handler (after  req.add_common_vars() and dumping the keys of 
> req.subprocess_env).  (I can see them w/o problems in the standard 
> handler.)  I have tried to play with the order of directives, but it 
> didn't seem to make a difference.  (see the apache conf snipplet below 
> for details)
>
> Any idea how to access SSL_CLIENT_S_DN in the access or fixup handler?

Changing the order of the directives will not help as Apache executes 
handlers
in a specific order regardless of order of definition.

See if mod_ssl sticks anything in "req.notes" or "req.connection.notes" 
table
objects which is useful.

Graham

From grahamd at dscpl.com.au  Sat May 21 05:53:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 21 05:53:26 2005
Subject: [mod_python] problem w/ authen handler
In-Reply-To: <5.2.1.1.0.20050520132822.038616a8@mail.comune.grosseto.it>
References: <5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
	<5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
	<5.2.1.1.0.20050520132822.038616a8@mail.comune.grosseto.it>
Message-ID: <3aa80dae18eb6f84ff83784287d2a5cb@dscpl.com.au>

Some questions for you about this.

How does this information fit into the larger scheme of what you are
trying to do? Are you trying to separate this out into a separate
handler phase so that you don't have to duplicate that code in every
mod_python content handler? Are mod_python content handlers being used
exclusively to deliver up content, or are you just using mod_python
as a way of processing the SSL stuff and content handler phases would
be handled by non mod_python handlers such as PHP, CGI or static
page delivery?

The reason I am prying is that in Vampire, it notionally splits the
content handler phase into two parts. There is still the execution of
a handler to deliver up the content, but there is also a new phase
introduced of loginhandler. By default this implements a basic user
authentication scheme in the style of mod_python.publisher across
traditional content handlers. The default loginhandler can though be
replaced with your own which implements some other mechanism such as
one which uses sessions and forms based login screens. Because this
loginhandler is executed notionally within the Apache content handler
phase, it will have access to the SSL environment that you have
found is only added if req.add_common_vars() is called from the
content handler itself and not earlier phases.

Thus, with the appropriate configuration information to enable it,
you could with Vampire have:

from mod_python import apache
import vampire

def loginhandler(req):
     req.add_common_vars()
     req.subprocess_env['insideAuthH']='valueSetFromAuthH'
     req.user='pippo'
     #return apache.HTTP_UNAUTHORIZED
     # Call through to original default loginhandler.
     return vampire.loginhandler(req)

def handler(req):
     #req.add_common_vars()
     req.subprocess_env['pytest']='itWorksFromPublisher'
     req.content_type = "text/plain"
     req.write("Environment Variables\n----------------------\n\n")
     for item in req.subprocess_env.items():
         req.write("%s: %s\n" % item)
     req.write("\n\n")
     return apache.OK

For an example of using the Vampire loginhandler for implementing a
session based login mechanism see code in:

   http://svn.dscpl.com.au/vampire/trunk/examples/session/

The "login.py" file contains both the loginhandler and the code which
implements the login form.

To see the actual code in action, go to:

   http://www.dscpl.com.au/projects/vampire/examples/session

The username and password are in the "login.py" code.

The nice thing about the Vampire loginhandler is that this sort of code
is extracted out into one place and can encompass requests against  
static
pages or mod_python based content handlers for that directory. Each  
actual
content handler doesn't need to worry about dealing with the details of
having to create the session. If a handler needs access to the session
object, it just needs to access "req.session" object put there by the
loginhandler.

Now, whether this would at all be useful would be dependent on what you  
are
using the SSL information for. Even if it isn't strictly part of a login
mechanism, it could still be done in the login handler, you just need  
to call
through to the original default login handler as shown in code above if
not actually wanting to override it.

Hope this is of interest.

BTW, if you don't know what Vampire is, it is some customisations on top
of mod_python which to me make it easier to use. It isn't really a  
framework
in any sense as it doesn't strictly dictate you do things in a certain  
way.
In some ways it gives you more options, although it does tend to promote
a more resource based view of handler selection as opposed to a handler
per directory.

Web site is at:

   http://www.dspcl.com.au/projects/vampire

Graham

On 21/05/2005, at 12:04 AM, Bud P. Bruegger wrote:

> Hi Graham,
>
> many thanks for your input!  This got me a round further.  I tried  
> both the access and the fixup handlers (it needs to be before  
> mod-rewrite does its things) and they are invoked (as opposed to the  
> authen and authenz handlers).
>
> My remaining problem is that I don't see SSL_CLIENT_S_DN in the  
> handler (after  req.add_common_vars() and dumping the keys of  
> req.subprocess_env).  (I can see them w/o problems in the standard  
> handler.)  I have tried to play with the order of directives, but it  
> didn't seem to make a difference.  (see the apache conf snipplet below  
> for details)
>
> Any idea how to access SSL_CLIENT_S_DN in the access or fixup handler?
>
> many thanks!
>
> -b
>
>
>
>         <Directory /var/www/sc>
>             SSLRequireSSL
>             #SSLOptions +StdEnvVars +ExportCertData +FakeBasicAuth  
> +StrictRequire
>             SSLOptions +StdEnvVars +ExportCertData +StrictRequire
>             SetHandler mod_python
>             PythonHandler test
>             PythonFixupHandler test
>             PythonDebug On
>         </Directory>
>
> At 08.52 20/05/2005 +1000, Graham Dumpleton wrote:
>
>> On 20/05/2005, at 12:27 AM, Bud P. Bruegger wrote:
>>
>>> I'm a beginner and hope someone can straighten me out.
>>>
>>> I am trying to write a simple handler that clicks in after mod-ssl  
>>> has requested a certificate from the client.  Depending on the type  
>>> of client token (European eID cards), I'd like the handler to look  
>>> at the client's subject DN derive (by string manipulation or by  
>>> lookup) a nationally unique ID for the card holder.
>>>
>>> Sounds simple enough--but I can't get it to work.  I tried both, the  
>>> authen and the authz handlers.  But neither from mod-ssl's  
>>> +fakeBasicAuth nor from the handlers req.user = 'xxx' do I get a  
>>> REMOTE_USER env variable set.  Also the test evironment variable  
>>> that I try to set in the authen/authz handler doesn't have effect.
>>
>> Normally the authenhandler will only be called if the Apache  
>> configuration has
>> something like:
>>
>>   AuthType Basic
>>   AuthName "Restricted Files"
>>   AuthUserFile /Users/grahamd/Sites/auth/pwdb
>>
>> Ie., it is triggered of the presence of these special Auth options.  
>> Similarly,
>> the authzhandler only get called if other appropriate options for it  
>> are
>> defined. Your SSL stuff doesn't seem to fit under that model and so  
>> the
>> handlers may simply not be getting called.
>>
>>> Does this possibly mean that the authen/authz handlers are not  
>>> called at all in my configuration?  Should I use a different handler  
>>> and which?  Or did I simply mess up something else?
>>
>> Try adding a req.log_error() call in the handlers to see if they get  
>> called or not.
>> Message will be in the Apache error log file.
>>
>> Does your code work if you move what you have in the authenhandler  
>> into the start
>> of your actual handler function? Ie., does the concept at least work?
>>
>> As a fudge, you could always stick it in the accesshandler, which  
>> from memory is
>> always called if defined.
>>
>> Graham
>
>
> ----------------------------------------------------------------------- 
> --------------------------
> Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 (voice),   
> -21139 (fax)
> Servizio Elaborazione Dati                    e-mail:   
> bud@comune.grosseto.it
> Comune di Grosseto                             
> http://www.comune.grosseto.it/cie/
> Via Ginori, 43                                       
> http://OpenPortalGuard.sf.net
> 58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info
>
> Free Software in Public Administration:  not just a good idea, but a  
> necessity
>
> Perfection is attained, not when there is nothing more to be added,  
> but when there is nothing more to be taken away -- Antoine de  
> Saint-Exupery

From martin.blais at gmail.com  Sat May 21 09:52:35 2005
From: martin.blais at gmail.com (Martin Blais)
Date: Sat May 21 09:52:39 2005
Subject: [mod_python] telling mod_python to exit its children
Message-ID: <8393fff050521065276555fc1@mail.gmail.com>

hi

i've been working on a web app framework, and one of the
essential features that i need to work well is to be able to
simply save a new source file (while in debugging mode, set by a
flag in my config file) and for all the modules to be
appropriately reloaded (there is no way i would restart apache
everytime i change the code...).  i'm using lots of 3rd party
libraries and my code is spread out in many packages and modules,
so i found that the trivial reload approaches do not work well.

so thinking i was a smart cookie i've been fiddling quite a bit
and solved a lot of the problems and it pretty much works (but it
wasn't as easy as i thought), except for that occasional rare
case where something strange still happens (due to some residual
global state in the modules i didn't unload or what-not).  now i
could spend more time on that bug, but i've already spent a
considerable amount of time with this, and the solution is not
very clean anyway (fiddling with the sys.modules by hand...) and
i'm getting the feeling that taking a lower-level approach might
just be cleaner and easier.

Some questions:

1. in a handler, is there a way to tell apache to exit the child
   currently handling the request and to rerun the request it
   another/a new child?

2. or is there a way to tell apache to exit all its pool of
   children, so that new request only get handled by new/fresh
   child processes?


I saw REQ_EXIT in apache.py, but it doesn't appear anywhere else
in the code, and is marked legacy.  Also, according to the
documentation, returning DECLINED doesn't appear to indicate that
apache will retry the same handler on a different child, but
I may be reading wrong.

any pointers appreciated.

cheers,

From grahamd at dscpl.com.au  Sat May 21 18:33:37 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 21 18:33:51 2005
Subject: [mod_python] telling mod_python to exit its children
In-Reply-To: <8393fff050521065276555fc1@mail.gmail.com>
References: <8393fff050521065276555fc1@mail.gmail.com>
Message-ID: <0a704cc5a251a4835b95ce2f12864760@dscpl.com.au>

Are you using basic content handlers or are you using a package on
top of them such as mod_python.publisher, mod_python.psp or any
third party packages for templating such as Cheetah etc?

Depending on what you are using it may be able to be refactored to
work on top of Vampire which has a quite well developed module
importing and reloading system which doesn't suffer the sorts of
problems that a lot of such systems do. When used appropriately,
Vampire is able to detect when a child sub import at multiple
levels below the actual request handler has changed and reload
automatically the request handler and anything below it down to
the level of the modified module.

By reloads being automatic in this way, you avoid having to set
special flags or cookies to trigger reloads or work out how to
shutdown specific Apache processes.

The only known area of problems so far, which will occur with any
reloading scheme, is where caching of class type objects is done
for later type comparison. This is a problem because of the fact
that the actual class definition in the original module can be
replaced and so a cached type object will no longer be valid. With
care this can be avoided though.

You might therefore have a quick glance at Vampire to see how it
matches with the underlying way you implement handlers. If your
handlers can easily be rehosted on top of Vampire then it may be
a way forward. Even if it doesn't look straight forward let me
know and we can look at it further as Vampire is generally flexible
enough to do things that on first pass don't look possible to
someone not familiar with it.

Be warned that documentation on the module reloading is minimal
at this point. There is a little bit in the overview with more
in the changes file.

Vampire is located at:

   http://www.dscpl.com.au/projects/vampire

If you are truly interested in giving it a go, happy to direct
you.

Graham


On 21/05/2005, at 11:52 PM, Martin Blais wrote:

> hi
>
> i've been working on a web app framework, and one of the
> essential features that i need to work well is to be able to
> simply save a new source file (while in debugging mode, set by a
> flag in my config file) and for all the modules to be
> appropriately reloaded (there is no way i would restart apache
> everytime i change the code...).  i'm using lots of 3rd party
> libraries and my code is spread out in many packages and modules,
> so i found that the trivial reload approaches do not work well.
>
> so thinking i was a smart cookie i've been fiddling quite a bit
> and solved a lot of the problems and it pretty much works (but it
> wasn't as easy as i thought), except for that occasional rare
> case where something strange still happens (due to some residual
> global state in the modules i didn't unload or what-not).  now i
> could spend more time on that bug, but i've already spent a
> considerable amount of time with this, and the solution is not
> very clean anyway (fiddling with the sys.modules by hand...) and
> i'm getting the feeling that taking a lower-level approach might
> just be cleaner and easier.
>
> Some questions:
>
> 1. in a handler, is there a way to tell apache to exit the child
>    currently handling the request and to rerun the request it
>    another/a new child?
>
> 2. or is there a way to tell apache to exit all its pool of
>    children, so that new request only get handled by new/fresh
>    child processes?
>
>
> I saw REQ_EXIT in apache.py, but it doesn't appear anywhere else
> in the code, and is marked legacy.  Also, according to the
> documentation, returning DECLINED doesn't appear to indicate that
> apache will retry the same handler on a different child, but
> I may be reading wrong.
>
> any pointers appreciated.
>
> cheers,
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From martin.blais at gmail.com  Sun May 22 09:13:07 2005
From: martin.blais at gmail.com (Martin Blais)
Date: Sun May 22 09:13:09 2005
Subject: [mod_python] telling mod_python to exit its children
In-Reply-To: <0a704cc5a251a4835b95ce2f12864760@dscpl.com.au>
References: <8393fff050521065276555fc1@mail.gmail.com>
	<0a704cc5a251a4835b95ce2f12864760@dscpl.com.au>
Message-ID: <8393fff0505220613478efdb5@mail.gmail.com>

hi graham

thanks for the pointers.  it seems from your description that Vampire
is doing the same as i am with my reloader module.  from the details
you mention, it seems you're also running against the similar
weirdness.  i'll check it out soon.  however all i can hope to find
there is a less buggy version of the approach i'm already trying.

but what i'm trying to do now, is different, is to bypass all that,
really.  i want to find out how to communicate to mod_python to exit
all its current pool of children (perhaps not all at the same time,
but at least to mark them as "not runnable").  it's a trivial approach
to that problem, which will certainly work well in all cases (in a
non-threaded apache).

if it's not in there already, i will probably add that feature,
because it would be a much cleaner and easier way to implement this
automatic reload, and it would work with all frameworks, and perhaps
it could even find other uses.

cheers,




On 5/21/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> Are you using basic content handlers or are you using a package on
> top of them such as mod_python.publisher, mod_python.psp or any
> third party packages for templating such as Cheetah etc?
> 
> Depending on what you are using it may be able to be refactored to
> work on top of Vampire which has a quite well developed module
> importing and reloading system which doesn't suffer the sorts of
> problems that a lot of such systems do. When used appropriately,
> Vampire is able to detect when a child sub import at multiple
> levels below the actual request handler has changed and reload
> automatically the request handler and anything below it down to
> the level of the modified module.
> 
> By reloads being automatic in this way, you avoid having to set
> special flags or cookies to trigger reloads or work out how to
> shutdown specific Apache processes.
> 
> The only known area of problems so far, which will occur with any
> reloading scheme, is where caching of class type objects is done
> for later type comparison. This is a problem because of the fact
> that the actual class definition in the original module can be
> replaced and so a cached type object will no longer be valid. With
> care this can be avoided though.
> 
> You might therefore have a quick glance at Vampire to see how it
> matches with the underlying way you implement handlers. If your
> handlers can easily be rehosted on top of Vampire then it may be
> a way forward. Even if it doesn't look straight forward let me
> know and we can look at it further as Vampire is generally flexible
> enough to do things that on first pass don't look possible to
> someone not familiar with it.
> 
> Be warned that documentation on the module reloading is minimal
> at this point. There is a little bit in the overview with more
> in the changes file.
> 
> Vampire is located at:
> 
>    http://www.dscpl.com.au/projects/vampire
> 
> If you are truly interested in giving it a go, happy to direct
> you.
> 
> Graham
> 
> 
> On 21/05/2005, at 11:52 PM, Martin Blais wrote:
> 
> > hi
> >
> > i've been working on a web app framework, and one of the
> > essential features that i need to work well is to be able to
> > simply save a new source file (while in debugging mode, set by a
> > flag in my config file) and for all the modules to be
> > appropriately reloaded (there is no way i would restart apache
> > everytime i change the code...).  i'm using lots of 3rd party
> > libraries and my code is spread out in many packages and modules,
> > so i found that the trivial reload approaches do not work well.
> >
> > so thinking i was a smart cookie i've been fiddling quite a bit
> > and solved a lot of the problems and it pretty much works (but it
> > wasn't as easy as i thought), except for that occasional rare
> > case where something strange still happens (due to some residual
> > global state in the modules i didn't unload or what-not).  now i
> > could spend more time on that bug, but i've already spent a
> > considerable amount of time with this, and the solution is not
> > very clean anyway (fiddling with the sys.modules by hand...) and
> > i'm getting the feeling that taking a lower-level approach might
> > just be cleaner and easier.
> >
> > Some questions:
> >
> > 1. in a handler, is there a way to tell apache to exit the child
> >    currently handling the request and to rerun the request it
> >    another/a new child?
> >
> > 2. or is there a way to tell apache to exit all its pool of
> >    children, so that new request only get handled by new/fresh
> >    child processes?
> >
> >
> > I saw REQ_EXIT in apache.py, but it doesn't appear anywhere else
> > in the code, and is marked legacy.  Also, according to the
> > documentation, returning DECLINED doesn't appear to indicate that
> > apache will retry the same handler on a different child, but
> > I may be reading wrong.
> >
> > any pointers appreciated.
> >
> > cheers,
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
>

From grahamd at dscpl.com.au  Sun May 22 21:27:38 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun May 22 21:27:45 2005
Subject: [mod_python] telling mod_python to exit its children
Message-ID: <1116811657.7366@dscpl.user.openhosting.com>

Martin Blais wrote ..
>
> thanks for the pointers.  it seems from your description that Vampire
> is doing the same as i am with my reloader module.  from the details
> you mention, it seems you're also running against the similar
> weirdness.  i'll check it out soon.  however all i can hope to find
> there is a less buggy version of the approach i'm already trying.

That you talk about fiddling with sys.modules means that although you
might be trying to achieve the same thing you aren't doing it in the same way.
I am not experiencing any wierdness in the stuff I work with, yes there
will be some obscure limitations that can be avoided, but other than that
it works fine and generally only need to restart Apache when I change
modules installed into site-packages directory.

Continuing to use the default "import" and "reload" or the import routines
in the "imp" module, whereby things are still stored in sys.modules as you
appear to be do, does not work very well and you will always have problems
with it. The default module loader in mod_python uses the "imp" module for
loading modules and has various problems, especially where someone tries
to use the same module name in different places for representing a request
handler.

Relying on the "imp" module, unless you resort to fiddles, also has problems
with the fact it reloads on top of existing modules and doesn't start fresh.
This can result in stale data being preserved and the inability to remove
completely functions or classes from a module. Reloading on top of an
existing module can also be a recipe for disaster in a multithreaded server
as you could be reloading a module on top of the old while another request
handler is executing in it.

Vampire thus does not use the "imp" module except for creating empty
modules into which distinct imports are done by using execfile(). Vampire
does not reload on top of existing modules, thus avoiding screwing up
requests being managed in a separate thread and ensuring that stale
data doesn't persist along with any removed classes or functions.

Because however preservation of data is sometimes required when reloading
a module, Vampire also provides a means of supplying hook functions which
are executed when a module is reloading so as to allow you to create the
initial environment that the new module loads into. This means you can copy
data from the old module into the new at point of reloading. Because you
have control of the hook function which does this, you can perform any
necessary thread locking in it to ensure that when copying data you don't
cause problems for other threads still executing in the code.

There is also a hook function which is called when an old module is being
purged so that you can do some cleanup. Thus, although a new module might
create a new database pool, you may still have to properly shutdown the old
one.

I don't know to what extent you have thought about these problems, but
there are lot more issues than most would appreciate when one looks at
the wider context of how people may use mod_python.

> but what i'm trying to do now, is different, is to bypass all that,
> really.  i want to find out how to communicate to mod_python to exit
> all its current pool of children (perhaps not all at the same time,
> but at least to mark them as "not runnable").  it's a trivial approach
> to that problem, which will certainly work well in all cases (in a
> non-threaded apache).

There is no mechanism that I know of for controlling the life time of
the interpreters that mod_python creates or even Apache processes
as a whole (bar causing seg faults). I would suggest it would be far
from trivial to consider even doing such a thing and may serve only
to introduce a level of fragility into the whole system.

> if it's not in there already, i will probably add that feature,
> because it would be a much cleaner and easier way to implement this
> automatic reload,

Good luck then. Having delved into the internal C code of mod_python
I don't personally feel it is a practical solution and don't believe it would
be easier.

> and it would work with all frameworks, and perhaps
> it could even find other uses.

The main issue I have found as far as making it work with other frameworks
is simply the desire not to have to change the code of those frameworks
to be making explicit calls into a special module loading system. This
is made harder when the framework uses code generation, eg. Cheetah
templates, and it hard codes use of "import" for module imports for pages
that derive from other pages.

In the latest version of Vampire I have in subversion repository (not released
as official version yet but still available), I use special "import" hooks so
that within certain situations use of "import" automatically maps onto the
Vampire module importing system. This means that one can avoid having
to change the code and get the benefit of automatic reloading for existing
code.

At the moment I have only made this work for importing of file based
modules and not packages and works only at global scope within a module
because of what I am trying to achieve and in what context I anticipate
it should be used. Ie., I do not believe that module reloading should be
applied to any sort of standard module which is installed as part of Python
or in the site-packages directory. It should only really be used for modules
supporting actual request handlers associated with web page delivery.

It might be used with web application specific utility modules as well
but there should never in effect be an overlap between sys.path and any
directories for which the automatic module loader is active. If there is
an overlap and a single module is imported using standard "import" and
the module loader at the same time, all sorts of problems could then
arise.

Anyway, getting a module importing system to work well is an interesting
exercise. Just make sure you think outside of your own requirements and
see how others might use mod_python and thus what other things you
may have to consider.

I'll see if I can get all the Vampire module importing stuff documented
over the next week along with all the issues which have influenced it.
Keep an eye out on the articles section of the Vampire web site.

Graham
From bud at comune.grosseto.it  Mon May 23 04:55:44 2005
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Mon May 23 04:49:10 2005
Subject: SSL-data access from verious handlers.  was: Re: [mod_python]
	problem w/ authen handler
In-Reply-To: <5.2.1.1.0.20050523092011.0367cbc8@mail.comune.grosseto.it>
Message-ID: <5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>

At 09.20 23/05/2005 +0200, Graham Dumpleton wrote:
>Some questions for you about this.
>
>How does this information fit into the larger scheme of what you are
>trying to do? Are you trying to separate this out into a separate
>handler phase so that you don't have to duplicate that code in every
>mod_python content handler? Are mod_python content handlers being used
>exclusively to deliver up content, or are you just using mod_python
>as a way of processing the SSL stuff and content handler phases would
>be handled by non mod_python handlers such as PHP, CGI or static
>page delivery?

Hi Graham,

I suppose my problem is closest to the last option you mention above.

Here is some more background on what I'm trying to do.  The objective is an 
access control system that works with the various European eID cards and 
basically is a reverse-proxy that centralizes authentication and 
authorization.  Behind the reverse-proxy, any kind of application servers 
(from static pages, mod-python, php, servlets, etc.; normally on separate 
hosts) are foreseen.  It is an extension of the official Belgian approach 
http://www.belgium.be/zip/Belgian_eID_Authentication_Reverse_Proxy_Users_Guide.pdf.

The overall request processing would more or less follow this pattern:

mod-ssl  >  mod-personID  > 
mod-RBAC >  mod-rewrite      --------->   mod-remoteAuth ...

mod-ssl and -rewrite are off the shelf.  What I am trying to add based on 
mod-python are:

mod-personID takes the data from mod-ssl (mostly SSL_CLIENT_S_DN) and 
depending on which eID card was used, maps to an internationally unique 
personID:
   * for the Belgian, Finish, and Estonian eIDs, it simply takes the 
subject serial number and prefixes it with a country id
   * for the Italian CIE, it extracts the card number from the subject CN 
and looks up a corresponding unique person ID in LDAP
   * for the Italian CNS, it cuts the person ID from the subj. CN string 
and prefixes it
   * etc.

mod-RBAC is then a role-based access control module--I yet have to start 
with that one..

If the access to the resouce is granted, the internationally unique person 
id generated by mod-personID is transferred to the application server 
behind the proxy in a custom http-header.  mod-remoteAuth takes this header 
as input to fake local Basic Auth (in the case of Apache, either as simple 
mod-python access handler that sets req.user or also as pure configuration 
(using mod-rewrite)).

The concept of Loginhandler is really interesting.  My doubt is whether it 
would execute before mod-rewrite clicks in?

Many thanks for your support!

cheers
-b




-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 
(voice),  -21139 (fax)
Servizio Elaborazione Dati                    e-mail:  bud@comune.grosseto.it
Comune di 
Grosseto                            http://www.comune.grosseto.it/cie/
Via Ginori, 
43                                      http://OpenPortalGuard.sf.net
58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info

Free Software in Public Administration:  not just a good idea, but a necessity

Perfection is attained, not when there is nothing more to be added, but 
when there is nothing more to be taken away -- Antoine de Saint-Exupery 

From bud at comune.grosseto.it  Mon May 23 05:34:17 2005
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Mon May 23 05:27:33 2005
Subject: [mod_python] problem w/ authen handler
In-Reply-To: <1025aa74c278864c57001a78cb171941@dscpl.com.au>
References: <5.2.1.1.0.20050520132822.038616a8@mail.comune.grosseto.it>
	<5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
	<5.2.1.1.0.20050519152630.0226f658@mail.comune.grosseto.it>
	<5.2.1.1.0.20050520132822.038616a8@mail.comune.grosseto.it>
Message-ID: <5.2.1.1.0.20050523113129.01fe4ed0@mail.comune.grosseto.it>

At 17.44 21/05/2005 +1000, Graham Dumpleton wrote:
>See if mod_ssl sticks anything in "req.notes" or "req.connection.notes" table
>objects which is useful.

Hmm.  I tried in the default handler and the fixup one and neither notes 
nor connection.notes contains anything useful.

Searching the web, I found the thread starting here 
http://www.modpython.org/pipermail/mod_python/2002-February/012411.html but 
haven't digested it yet.  Maybe a pointer to a solution?

thanks
-b



-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 
(voice),  -21139 (fax)
Servizio Elaborazione Dati                    e-mail:  bud@comune.grosseto.it
Comune di 
Grosseto                            http://www.comune.grosseto.it/cie/
Via Ginori, 
43                                      http://OpenPortalGuard.sf.net
58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info

Free Software in Public Administration:  not just a good idea, but a necessity

Perfection is attained, not when there is nothing more to be added, but 
when there is nothing more to be taken away -- Antoine de Saint-Exupery 

From grahamd at dscpl.com.au  Mon May 23 06:47:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 23 06:48:08 2005
Subject: SSL-data access from verious handlers. was: Re: [mod_python]
	problem w/ authen handler
In-Reply-To: <5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
References: <5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
Message-ID: <f2a06e638ef7f76ed5d76c5eda4ad725@dscpl.com.au>


On 23/05/2005, at 6:55 PM, Bud P. Bruegger wrote:

> The concept of Loginhandler is really interesting.  My doubt is 
> whether it would execute before mod-rewrite clicks in?

Since it is essentially executed as part of the content handler phase it
would be after mod_rewrite. Overall, not sure you will be able to do 
what
you want in mod_python as it doesn't give fine enough control. Probably
simpler for you to write your own DSO in C which does it.

Graham

From bud at comune.grosseto.it  Mon May 23 07:03:46 2005
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Mon May 23 06:57:11 2005
Subject: SSL-data access from verious handlers.  was: Re:
	[mod_python] problem w/ authen handler
In-Reply-To: <f2a06e638ef7f76ed5d76c5eda4ad725@dscpl.com.au>
References: <5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
	<5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
Message-ID: <5.2.1.1.0.20050523130057.032fefc8@mail.comune.grosseto.it>

At 20.47 23/05/2005 +1000, Graham Dumpleton wrote:

>On 23/05/2005, at 6:55 PM, Bud P. Bruegger wrote:
>
>>The concept of Loginhandler is really interesting.  My doubt is whether 
>>it would execute before mod-rewrite clicks in?
>
>Since it is essentially executed as part of the content handler phase it
>would be after mod_rewrite. Overall, not sure you will be able to do what
>you want in mod_python as it doesn't give fine enough control. Probably
>simpler for you to write your own DSO in C which does it.
>
>Graham

hmm, I like the idea of python to be able to flexibly apply regular 
expressions and similar to massage ID strings and also to rapidly integrate 
additional eID types.

Considering that I'm not the first person who wanted access to SSL data 
from mod-python, would it be possible/desirable to extend mod-python to see 
these?  Alternatively, would it be possible to access internals with 
python's ctypes module?

thanks
-b



-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 
(voice),  -21139 (fax)
Servizio Elaborazione Dati                    e-mail:  bud@comune.grosseto.it
Comune di 
Grosseto                            http://www.comune.grosseto.it/cie/
Via Ginori, 
43                                      http://OpenPortalGuard.sf.net
58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info

Free Software in Public Administration:  not just a good idea, but a necessity

Perfection is attained, not when there is nothing more to be added, but 
when there is nothing more to be taken away -- Antoine de Saint-Exupery 

From grahamd at dscpl.com.au  Mon May 23 08:05:22 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 23 08:05:33 2005
Subject: SSL-data access from verious handlers. was: Re: [mod_python]
	problem w/ authen handler
In-Reply-To: <5.2.1.1.0.20050523130057.032fefc8@mail.comune.grosseto.it>
References: <5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
	<5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
	<5.2.1.1.0.20050523130057.032fefc8@mail.comune.grosseto.it>
Message-ID: <7cd0fe6329993ffb839ebf56c61f06c9@dscpl.com.au>


On 23/05/2005, at 9:03 PM, Bud P. Bruegger wrote:

> At 20.47 23/05/2005 +1000, Graham Dumpleton wrote:
>
>> On 23/05/2005, at 6:55 PM, Bud P. Bruegger wrote:
>>
>>> The concept of Loginhandler is really interesting.  My doubt is 
>>> whether it would execute before mod-rewrite clicks in?
>>
>> Since it is essentially executed as part of the content handler phase 
>> it
>> would be after mod_rewrite. Overall, not sure you will be able to do 
>> what
>> you want in mod_python as it doesn't give fine enough control. 
>> Probably
>> simpler for you to write your own DSO in C which does it.
>>
>> Graham
>
> hmm, I like the idea of python to be able to flexibly apply regular 
> expressions and similar to massage ID strings and also to rapidly 
> integrate additional eID types.
>
> Considering that I'm not the first person who wanted access to SSL 
> data from mod-python, would it be possible/desirable to extend 
> mod-python to see these?  Alternatively, would it be possible to 
> access internals with python's ctypes module?

A bit of information that may be useful, or may not.

 From looking at code for mod_python and mod_ssl, when registering a 
handler hook
you can specify its relative location as first, middle or last. Both 
mod_ssl and
mod_python specify it as middle for the fixup handler. Ie.,

     ap_hook_fixups        (ssl_hook_Fixup,         NULL,NULL, 
APR_HOOK_MIDDLE);

     /* [8] fixups */
     ap_hook_fixups(PythonFixupHandler,
                    NULL, NULL, APR_HOOK_MIDDLE);

It is in the SSL fixup handler that it pushes all the variable into the 
environment.
If you aren't seeing the variables in the common vars in the fixup 
handler, then the
SSL fixup handler is being called after the mod_python fixup handler.

The issue thus is whether you can control the order in any way such 
that you can
guarantee that the SSL fixup handler is executed before that for 
mod_python. If
you can do this, you can ensure that common vars is set and can be used 
by your
Python handler.

The Apache documentation says:

   Controlling hook calling order

   In the example above, we didn't use the three arguments in  the hook 
registration function
   that control calling order.  There are two mechanisms for doing this. 
The first, rather
   crude, method, allows us to specify roughly where the hook is  run 
relative to other modules.
   The final argument control this.  There are three possible values: 
HOOK_FIRST,  HOOK_MIDDLE
   and HOOK_LAST.

   All modules using any particular value may be run in any  order 
relative to each other,
   but, of course, all modules using  HOOK_FIRST will be run before 
HOOK_MIDDLE  which are
   before HOOK_LAST. Modules that don't care  when they are run should 
use HOOK_MIDDLE.

   Note that there are two more values,  HOOK_REALLY_FIRST and 
HOOK_REALLY_LAST. These
   should only be used by the hook exporter.

Thus, within a single level, eg, middle, can be run in any order.

As far as controlling order within a level, the documentation goes on 
further to say:

   The other method allows finer control. When a module knows  that it 
must be run before
   (or after) some other modules, it  can specify them by name. The 
second (third) argument
   is a  NULL-terminated array of strings consisting of the names of  
modules that must be
   run before (after) the current module. For example, suppose we want 
"mod_xyz.c" and
   "mod_abc.c" to run  before we do, then we'd hook as follows:

     static void register_hooks()
     {
       static const char * const aszPre[] = { "mod_xyz.c", "mod_abc.c", 
NULL };

       ap_hook_do_something(my_something_doer, aszPre, NULL, 
HOOK_MIDDLE);
     }

   Note that the sort used to achieve this is stable, so  ordering set 
by HOOK_ORDER
   is preserved, as far  as is possible.

This though isn't of any use here as at point that mod_python is 
registering hooks it isn't
going to know anything about dependencies.

Overall, what would be most useful I guess is if mod_python provided a 
way of saying
whether a handler should be executed as first, middle or last. If this 
ability existed
you could specify your handler to be run within the last group of the 
fixuphandlers,
thus ensuring that it is run after the SSL middle fixuphandler where 
common vars would
be primed.

The only other I can think of is you play around with 
req.add_handler(). This allows you
to add additional handlers to be executed within a certain phase. What 
I can't work out
from the source code at the moment though is that if you were to add a 
handler to the
PythonFixupHandler phase from the fixuphandler itself, whether it would 
be executed before
mod_python returns control back to Apache, or whether control would go 
back to Apache,
it would then execute SSL fixup handler and then return into mod_python 
to execute the
newly specified fixup handler.

Anyway, if you can understand what I am talking about, you might play 
with req.add_handler()
and let us know what you find. I think though it is still going to be 
executed before the
SSL fixup handler which sets up the vars.

Graham

From bud at comune.grosseto.it  Mon May 23 09:28:51 2005
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Mon May 23 09:22:08 2005
Subject: SSL-data access from verious handlers.  was: Re:
	[mod_python] problem w/ authen handler
In-Reply-To: <7cd0fe6329993ffb839ebf56c61f06c9@dscpl.com.au>
References: <5.2.1.1.0.20050523130057.032fefc8@mail.comune.grosseto.it>
	<5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
	<5.2.1.1.0.20050523103232.025f6ea8@mail.comune.grosseto.it>
	<5.2.1.1.0.20050523130057.032fefc8@mail.comune.grosseto.it>
Message-ID: <5.2.1.1.0.20050523143525.034143c0@mail.comune.grosseto.it>

Hi Graham,

thanks for the great material on the topic!  More below..

At 22.05 23/05/2005 +1000, Graham Dumpleton wrote:
>Overall, what would be most useful I guess is if mod_python provided a way 
>of saying
>whether a handler should be executed as first, middle or last. If this 
>ability existed
>you could specify your handler to be run within the last group of the 
>fixuphandlers,
>thus ensuring that it is run after the SSL middle fixuphandler where 
>common vars would
>be primed.

This idea is intriguing.  How difficult would this be to implement?  I 
suppose this may be interesting not only for fixup handlers?

Another interesting solution would be a generic means (i.e., indipendently 
of mod-python) of telling Apache about the execution order of modules 
during configuration.  Thinking that other people may have had such needs, 
I searched the web and noted the --permute--module (I believe build-) 
option.  Would this be a possible solution?

While the module execution order sounds like a nice solution, I'm still 
wondering about the alternative approach of accessing mod-SSL's data.  Is 
there a possibility to access different tables from mod-python than just 
req.notes and req.connection.notes?  Or are these data strictly private to 
the module that sets them?

>Anyway, if you can understand what I am talking about, you might play with 
>req.add_handler()
>and let us know what you find. I think though it is still going to be 
>executed before the
>SSL fixup handler which sets up the vars.

Interesting!  I'll definitely play with req.add_handler() but probably 
after I come back from an upcoming trip..

many thanks!
-b


>Graham


-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 
(voice),  -21139 (fax)
Servizio Elaborazione Dati                    e-mail:  bud@comune.grosseto.it
Comune di 
Grosseto                            http://www.comune.grosseto.it/cie/
Via Ginori, 
43                                      http://OpenPortalGuard.sf.net
58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info

Free Software in Public Administration:  not just a good idea, but a necessity

Perfection is attained, not when there is nothing more to be added, but 
when there is nothing more to be taken away -- Antoine de Saint-Exupery 

From martin.blais at gmail.com  Mon May 23 09:38:53 2005
From: martin.blais at gmail.com (Martin Blais)
Date: Mon May 23 09:38:56 2005
Subject: [mod_python] telling mod_python to exit its children
In-Reply-To: <1116811657.7366@dscpl.user.openhosting.com>
References: <1116811657.7366@dscpl.user.openhosting.com>
Message-ID: <8393fff05052306381ecb9c1@mail.gmail.com>

hi graham

thanks for the detailed description in your email.

your description of the intricacies of module reloading motivates well
the need for something  simpler like i describe.  we already have to
take care of initialization and finalization at the process level, so
i still feel that working at that level for reloading would be the
best approach.

(my solution indeed does not work in a multithreaded setup.)

(more below)


On 5/22/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> At the moment I have only made this work for importing of file based
> modules and not packages and works only at global scope within a module
> because of what I am trying to achieve and in what context I anticipate
> it should be used. Ie., I do not believe that module reloading should be
> applied to any sort of standard module which is installed as part of Python
> or in the site-packages directory. It should only really be used for modules
> supporting actual request handlers associated with web page delivery.

well, i need to reload my entire source directory, which includes lots
of packages that don't contain request handlers.  i agree that the
reloader need not check for stuff in site-packages and in the python
lib.  what i do now is i give the reloader a list of root directories
to check for (it checks goes through checking the prefixes of the
files in sys.modules)



> I'll see if I can get all the Vampire module importing stuff documented
> over the next week along with all the issues which have influenced it.
> Keep an eye out on the articles section of the Vampire web site.

thanks

cheers,

From ml at bettercom.de  Mon May 23 12:27:25 2005
From: ml at bettercom.de (Martin Lesser)
Date: Mon May 23 12:27:34 2005
Subject: [mod_python] apache2 + mod_python + mod_php segfaults
Message-ID: <87mzqlzz4i.fsf@nb-acer.bettercom.de>

This may be OT on this list so please take my apologies for this
posting.

I need a pointer which is the right address to report an IMO serious
bug which is _not_ caused by mod_python but occurs when using it.

We use mod_python since several months with success, yesterday we
extended some modules to use cdb-files with python-cdb
(http://pilcrow.madison.wi.us/)

The apache 2.0.54 (gentoo-linux) running mod_python also loads mod_php
(4.3.11) and simple code like

| from mod_python import apache, util
| import cdb
| def index(req):
|     _c = cdb.init('any_cdb_file.cdb')
|     _x = _c.get('any_key') # This line caused the segfault, not the init
|     return '<html>%s</html>' % _x

caused a segmentation fault.

After recompiling mod_php several times with reduced options
(--disable-dba, --disable-dbx, --without-cdb etc.) the code above worked
as expected.

How is it possible that one modul (mod_php) causes a segfault in the
main program (apache) when this program executes code from another modul
(mod_python)? Is this an apache-bug?

What's the right place to report this bug?

TIA, Martin
From bram-lists at phoenux.org  Mon May 23 12:44:51 2005
From: bram-lists at phoenux.org (Bram)
Date: Mon May 23 12:44:30 2005
Subject: [mod_python] apache2 + mod_python + mod_php segfaults
In-Reply-To: <87mzqlzz4i.fsf@nb-acer.bettercom.de>
References: <87mzqlzz4i.fsf@nb-acer.bettercom.de>
Message-ID: <42920883.7000500@phoenux.org>

Martin Lesser wrote:

>This may be OT on this list so please take my apologies for this
>posting.
>
>I need a pointer which is the right address to report an IMO serious
>bug which is _not_ caused by mod_python but occurs when using it.
>
>We use mod_python since several months with success, yesterday we
>extended some modules to use cdb-files with python-cdb
>(http://pilcrow.madison.wi.us/)
>
>The apache 2.0.54 (gentoo-linux) running mod_python also loads mod_php
>(4.3.11) and simple code like
>
>| from mod_python import apache, util
>| import cdb
>| def index(req):
>|     _c = cdb.init('any_cdb_file.cdb')
>|     _x = _c.get('any_key') # This line caused the segfault, not the init
>|     return '<html>%s</html>' % _x
>
>caused a segmentation fault.
>
>After recompiling mod_php several times with reduced options
>(--disable-dba, --disable-dbx, --without-cdb etc.) the code above worked
>as expected.
>
>How is it possible that one modul (mod_php) causes a segfault in the
>main program (apache) when this program executes code from another modul
>(mod_python)? Is this an apache-bug?
>
>What's the right place to report this bug?
>
>TIA, Martin
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>
Being a heavy Gentoo user myself, I would start with posting this 
problem with a little more info about what lead you to try to recompile 
mod_php when mod_python is segfaulting, and make that post to 
http://forums.gentoo.org/

Bram.
From grahamd at dscpl.com.au  Mon May 23 16:59:06 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 23 16:59:39 2005
Subject: [mod_python] apache2 + mod_python + mod_php segfaults
In-Reply-To: <87mzqlzz4i.fsf@nb-acer.bettercom.de>
References: <87mzqlzz4i.fsf@nb-acer.bettercom.de>
Message-ID: <397dfd8b2def63bcdb19aebf4c3f707e@dscpl.com.au>

Known problem.

As a start, read:

    
http://www.modpython.org/FAQ/faqw.py? 
query=mod_php&querytype=simple&casefold=yes&req=search

In summary it is generally because parts of mod_php have been compiled
against different versions of shared libraries than mod_python.

Search through the mailing list archives for previous posts about this
from the mod_python web site home page.

Graham

On 24/05/2005, at 2:27 AM, Martin Lesser wrote:

> This may be OT on this list so please take my apologies for this
> posting.
>
> I need a pointer which is the right address to report an IMO serious
> bug which is _not_ caused by mod_python but occurs when using it.
>
> We use mod_python since several months with success, yesterday we
> extended some modules to use cdb-files with python-cdb
> (http://pilcrow.madison.wi.us/)
>
> The apache 2.0.54 (gentoo-linux) running mod_python also loads mod_php
> (4.3.11) and simple code like
>
> | from mod_python import apache, util
> | import cdb
> | def index(req):
> |     _c = cdb.init('any_cdb_file.cdb')
> |     _x = _c.get('any_key') # This line caused the segfault, not the  
> init
> |     return '<html>%s</html>' % _x
>
> caused a segmentation fault.
>
> After recompiling mod_php several times with reduced options
> (--disable-dba, --disable-dbx, --without-cdb etc.) the code above  
> worked
> as expected.
>
> How is it possible that one modul (mod_php) causes a segfault in the
> main program (apache) when this program executes code from another  
> modul
> (mod_python)? Is this an apache-bug?
>
> What's the right place to report this bug?
>
> TIA, Martin
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Mon May 23 18:43:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 23 18:43:10 2005
Subject: SSL-data access from verious handlers. was: Re:[mod_python]
	problem w/ authen handler
Message-ID: <1116888183.11363@dscpl.user.openhosting.com>

Bud P. Bruegger wrote ..
> Hi Graham,
> 
> thanks for the great material on the topic!  More below..
> 
> At 22.05 23/05/2005 +1000, Graham Dumpleton wrote:
> >Overall, what would be most useful I guess is if mod_python provided a
> way 
> >of saying
> >whether a handler should be executed as first, middle or last. If this
> >ability existed
> >you could specify your handler to be run within the last group of the
> >fixuphandlers,
> >thus ensuring that it is run after the SSL middle fixuphandler where 
> >common vars would
> >be primed.
> 
> This idea is intriguing.  How difficult would this be to implement?  I
> suppose this may be interesting not only for fixup handlers?

There are a few parts, first is to come up with syntax for Apache
configuration of how to indicate first, middle or last and write code to
parse that. Default would still be middle if not specified. Interesting
to see if mod_perl has a way of doing something similar and how they
may represent it in Apache configuration.

Next is the code related to lists of handlers for each phase has to be
duplicated so there is a set for first and last as well as current middle.

Then distinct hook functions registered for first and last for each phase,
which then trigger handlers as appropriate.

> While the module execution order sounds like a nice solution, I'm still
> wondering about the alternative approach of accessing mod-SSL's data. 
> Is 
> there a possibility to access different tables from mod-python than just
> req.notes and req.connection.notes?  Or are these data strictly private
> to 
> the module that sets them?

You probably wouldn't access its data structures directly. Instead it seems
to register a couple of special functions as follows:

void ssl_var_register(void)
{
    APR_REGISTER_OPTIONAL_FN(ssl_is_https);
    APR_REGISTER_OPTIONAL_FN(ssl_var_lookup);
    return;
}

This registration apparently allows a different module to look the functions
up by name and if present then call them. If mod_python provided some
means of looking up these special registered functions and then safely
calling them, you could use "ssl_var_lookup()" to get access to the data
you need.

The beauty of "ssl_var_lookup()" is that it should be able to be used in
whatever phase you want and not be dependent on waiting to common
vars to be populated in SSL fixup handler.

There is a bit of documentation about these registered functions macros
at:

  http://apr.apache.org/docs/apr-util/group___a_p_r___util___opt.html

The macros supposedly try and make it type safe, so haven't quite worked
out how you are meant to use them yet. In part it looks like compile time
binding is required, which would be an issue with Python. What you might
be able to do though is write a little C based Python module which did
the lookup and calling of "ssl_var_lookup()" for you by going direct to the
Apache runtime library calls. May work. :-)

Graham
From grahamd at dscpl.com.au  Mon May 23 20:08:13 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 23 20:08:21 2005
Subject: SSL-data access from verious handlers. was: Re:[mod_python]
	problem w/ authen handler
Message-ID: <1116893293.25537@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> The macros supposedly try and make it type safe, so haven't quite worked
> out how you are meant to use them yet. In part it looks like compile time
> binding is required, which would be an issue with Python. What you might
> be able to do though is write a little C based Python module which did
> the lookup and calling of "ssl_var_lookup()" for you by going direct to
> the Apache runtime library calls. May work. :-)

See if you can get the attached code (2 files) to work for you. You will need to
modify the setup.py to point to appropriate include and library directories and
correct name for APR libraries on your platform.

The code all compiles, but since I don't have mod_ssl setup I get back nothing.
The first argument to each method must be the request object. It will crash if
it isn't as haven't been able to have check in code that it is in fact a request
object because undefined as am not linking against mod_python .so.

The handler I was using was as follows, but you should be able to adapt it.

import _mp_mod_ssl
import vampire

class _Object:

  def is_https(self,req):
    return _mp_mod_ssl.is_https(req)

  def var_lookup(self,req,name):
    return _mp_mod_ssl.var_lookup(req,name)

handler = vampire.Publisher(_Object())

Let me know how you go. Is an interesting problem which is why I decided
to play with it when I should have been doing real work. :-)

Graham
-------------- next part --------------
A non-text attachment was scrubbed...
Name: _mp_mod_ssl.c
Type: application/octet-stream
Size: 2075 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050523/9fa0275b/_mp_mod_ssl.obj
-------------- next part --------------
A non-text attachment was scrubbed...
Name: setup.py
Type: application/octet-stream
Size: 606 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050523/9fa0275b/setup.obj
From ml at bettercom.de  Mon May 23 23:53:25 2005
From: ml at bettercom.de (Martin Lesser)
Date: Mon May 23 23:53:41 2005
Subject: [mod_python] apache2 + mod_python + mod_php segfaults
In-Reply-To: <397dfd8b2def63bcdb19aebf4c3f707e@dscpl.com.au> (Graham
	Dumpleton's message of "Tue, 24 May 2005 06:59:06 +1000")
References: <87mzqlzz4i.fsf@nb-acer.bettercom.de>
	<397dfd8b2def63bcdb19aebf4c3f707e@dscpl.com.au>
Message-ID: <87vf59xosq.fsf@nb-acer.bettercom.de>

Graham Dumpleton <grahamd@dscpl.com.au> writes:

> In summary it is generally because parts of mod_php have been compiled
> against different versions of shared libraries than mod_python.

Ok. But this does not explain whether this is a bug in apache or
mod_php. For me it remains confusing that one (apache-) module may cause
a segfault in apache due to the existance of another module.

> Search through the mailing list archives for previous posts about this
> from the mod_python web site home page.

Thanks. The link to the archives from the http://www.modpython.org/
worked - http://mailman.modpython.org/mailman/listinfo/mod_python where
I looked first doesn't (it links to
http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/)

Martin
From grahamd at dscpl.com.au  Tue May 24 00:16:05 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 24 00:16:37 2005
Subject: [mod_python] apache2 + mod_python + mod_php segfaults
Message-ID: <1116908165.4326@dscpl.user.openhosting.com>

Martin Lesser wrote ..
> Graham Dumpleton <grahamd@dscpl.com.au> writes:
> 
> > In summary it is generally because parts of mod_php have been compiled
> > against different versions of shared libraries than mod_python.
> 
> Ok. But this does not explain whether this is a bug in apache or
> mod_php. For me it remains confusing that one (apache-) module may cause
> a segfault in apache due to the existance of another module.

It isn't a bug in mod_php or Apache or mod_python.

The problem is usually because different versions of some third party
library have been used when compiling parts of Apache, mod_python
or mod_php. When everything is run up, the shared library which is
found first is that which is used for all bits with the dependency on it.
If these different library versions have different structure layouts, when
a module is initialised which has a different concept of structure layout
than the actual shared library being used, then the code can crash.

Thus it is an environment issue related to compilation of the software
and not a bug in any. Ie., Win32 DLL hell on Linux.

An example of shared library problems, although probably not in your
case is that Python 2.4 embeds a copy of libexpat equivalent to 1.95.8.
If your system has a older shared library version of expat and something
in mod_php compiles against it, you will get a crash when you use any
XML module in Python.

The FAQ entry quoted also mentions other cases such as problems with
MySQL and libpng.

In your case, since the problem went away when you took CDB support
out of PHP at the same time as using a CDB module in Python, it is possibly
the shared library used for CDB when compiling mod_php was different
to that when the CDB module in Python was built.

Graham

From fabianosidler at swissonline.ch  Tue May 24 06:56:11 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Tue May 24 06:56:07 2005
Subject: [mod_python] mod_python doesn't parse python scripts
Message-ID: <4293084B.5060500@swissonline.ch>

Hi Folks!

I set up mod_python according to the documentation and also tried out
my own configurations, but I've never got mod_python parsing my scripts.
They are sent to the client plainly, i.e. the client gets the code, not
the result of the code.
Furthermore, the only Handler mod_python seems to know, is PythonHandler.
When I specify any other Handler, httpd exits with the following error:

Syntax error on line 7 of /etc/httpd/modules/mod_python.conf:
Invalid command 'PythonRequestHandler', perhaps mis-spelled or defined by a
module not included in the server configuration

What can I do?
Thanks for helping...

Fips
From grahamd at dscpl.com.au  Tue May 24 07:24:17 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 24 07:24:28 2005
Subject: [mod_python] mod_python doesn't parse python scripts
In-Reply-To: <4293084B.5060500@swissonline.ch>
References: <4293084B.5060500@swissonline.ch>
Message-ID: <f62b768b1e6ada4feac2c186e4556356@dscpl.com.au>

Read:

   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html

"PythonRequestHandler" doesn't work because it isn't a valid directive
name.

Graham

On 24/05/2005, at 8:56 PM, Fabiano Sidler wrote:

> Hi Folks!
>
> I set up mod_python according to the documentation and also tried out
> my own configurations, but I've never got mod_python parsing my 
> scripts.
> They are sent to the client plainly, i.e. the client gets the code, not
> the result of the code.
> Furthermore, the only Handler mod_python seems to know, is 
> PythonHandler.
> When I specify any other Handler, httpd exits with the following error:
>
> Syntax error on line 7 of /etc/httpd/modules/mod_python.conf:
> Invalid command 'PythonRequestHandler', perhaps mis-spelled or defined 
> by a
> module not included in the server configuration
>
> What can I do?
> Thanks for helping...
>
> Fips
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From fabianosidler at swissonline.ch  Tue May 24 09:34:04 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Tue May 24 09:34:00 2005
Subject: [mod_python] mod_python doesn't parse python scripts
In-Reply-To: <f62b768b1e6ada4feac2c186e4556356@dscpl.com.au>
References: <4293084B.5060500@swissonline.ch>
	<f62b768b1e6ada4feac2c186e4556356@dscpl.com.au>
Message-ID: <42932D4C.2080605@swissonline.ch>

Thank you for answering that quickly!

Graham Dumpleton wrote:
> Read:
> 
>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
> 
> "PythonRequestHandler" doesn't work because it isn't a valid directive
> name.

Sorry, but doesn't work here:

    <Location /py>
	    AddHandler python-program .py
	    PythonHandler test
	    PythonDebug On
    </Location>

    [Tue May 24 14:53:47 2005] [notice] mod_python: (Re)importing module 'test'

Meanwhile, httpd does start without any errors, but when try stopping or
restarting it, I got the following message:

    Invalid command 'PythonHandler', perhaps mis-spelled or defined by a module
    not included in the server configuration

Strange, isn't it?

Greetings,
Fips
From gdamjan at mail.net.mk  Tue May 24 14:49:31 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Tue May 24 14:49:38 2005
Subject: [mod_python] mod_python doesn't parse python scripts
In-Reply-To: <42932D4C.2080605@swissonline.ch>
References: <4293084B.5060500@swissonline.ch>
	<f62b768b1e6ada4feac2c186e4556356@dscpl.com.au>
	<42932D4C.2080605@swissonline.ch>
Message-ID: <20050524184931.GA3752@legolas.on.net.mk>

> Sorry, but doesn't work here:
> 
>    <Location /py>
> 	    AddHandler python-program .py
> 	    PythonHandler test
> 	    PythonDebug On
>    </Location>
> 
>    [Tue May 24 14:53:47 2005] [notice] mod_python: (Re)importing module 
>    'test'

well, it has been told many times on this list, NEVER use 'test.py' as name
for your testing with mod_python. Python already has a package named
test, and you can never be sure which module will get loaded with that
PythonHandler directive. Usually we use mptest.py .


-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From grahamd at dscpl.com.au  Tue May 24 17:00:44 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 24 17:01:03 2005
Subject: [mod_python] mod_python doesn't parse python scripts
In-Reply-To: <42932D4C.2080605@swissonline.ch>
References: <4293084B.5060500@swissonline.ch>
	<f62b768b1e6ada4feac2c186e4556356@dscpl.com.au>
	<42932D4C.2080605@swissonline.ch>
Message-ID: <2df2f02685f19442cd51dbda5bb13e05@dscpl.com.au>

As pointed out by others don't use "test.py". Further, don't use 
"Location"
directive, use the "Directory" directive instead, like the referenced
article says to use. Using "Location" can introduce other issues and 
should
be avoided if you are new to mod_python.

Graham

On 24/05/2005, at 11:34 PM, Fabiano Sidler wrote:

> Thank you for answering that quickly!
>
> Graham Dumpleton wrote:
>> Read:
>>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
>> "PythonRequestHandler" doesn't work because it isn't a valid directive
>> name.
>
> Sorry, but doesn't work here:
>
>    <Location /py>
> 	    AddHandler python-program .py
> 	    PythonHandler test
> 	    PythonDebug On
>    </Location>
>
>    [Tue May 24 14:53:47 2005] [notice] mod_python: (Re)importing 
> module 'test'
>
> Meanwhile, httpd does start without any errors, but when try stopping 
> or
> restarting it, I got the following message:
>
>    Invalid command 'PythonHandler', perhaps mis-spelled or defined by 
> a module
>    not included in the server configuration
>
> Strange, isn't it?
>
> Greetings,
> Fips
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From jonas at cortical.mit.edu  Tue May 24 17:18:05 2005
From: jonas at cortical.mit.edu (Eric Jonas)
Date: Tue May 24 17:16:44 2005
Subject: [mod_python] apache 2.0.54 and SSLUserName
Message-ID: <20050524211805.GD10641@modulation.mit.edu>

Hello! I've been using trac, a nice python integrated
bug-tracker/wiki/source browser, and recently an apt-get update/upgrade
broke SSLUserName on apache 2.0.54. I'm trying to figure out what the
problem might be. 

SSLUserName is used on apache to substitute some substring of a
certificate's full DN as the req.user username that is then used by
modules. For example, with the following in my config file:

        <Directory /soma/www/pytest>
                AddHandler mod_python .py
                PythonHandler mptest
                PythonDebug On
          SSLRequireSSL
          SSLVerifyClient require
          SSLVerifyDepth       5
          SSLUserName     SSL_CLIENT_S_DN_CN
          SSLOptions           +FakeBasicAuth
          AuthName             "Authentication"
          AuthType             Basic
          AuthUserFile         /foo/httpd.password
          require              valid-user
        </Directory>

And a test file, 


from mod_python import apache

import os
def handler(req):
    req.content_type = "text/plain"
    outstr = "USER IS %s" % req.user
    req.write(outstr)
    return apache.OK


I should get 
   USER IS Eric M Jonas

But instead get:

USER IS /C=US/ST=Massachusetts/O=Massachusetts Institute of
Technology/OU=Client CA v1/CN=Eric M Jonas/emailAddress=jonas@MIT.EDU

This is really unfortunate because the full /C=US(etc) string sucks from
a usability point of view, and I swear this was working in 2.0.52. Has
anyone else experienced this sort of problem? 


Thanks,
		...Eric
From grahamd at dscpl.com.au  Tue May 24 18:30:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 24 18:30:36 2005
Subject: [mod_python] mod_python doesn't parse python scripts
Message-ID: <1116973830.30185@dscpl.user.openhosting.com>

Graham Dumpleton wrote ..
> As pointed out by others don't use "test.py". Further, don't use 
> "Location"
> directive, use the "Directory" directive instead, like the referenced
> article says to use. Using "Location" can introduce other issues and 
> should
> be avoided if you are new to mod_python.

I was on the way out the door when writing this response, not that I
have more time I'll explain why it wasn't working.

When you use the "Directory" directive with a physical directory as the
path, that path will be added into the Python sys.path. When mod_python
looks for the module you specify with the PythonHandler directive it
will therefore be able to find the module if it is actually located in that
physical directory.

If instead you use the "Location" directive, the path is actually the URL
path and not a physical directory. As Python requires a physical directory
for the sys.path search path, it can't use that path in any way. This means
that when it searches for the module you specify, it will not look at your
copy. Because in this case you didn't call your module "mptest" as the
documentation says to and instead used "test", it found the standard
Python module called "test" instead. Although it was able to load that
module, there was no "handler()" method defined within it and thus you
would most likely have got an error or an empty response (can't remember
which).

Therefore, use the "Directory" directive in preference to the "Location"
directive. If for some reason you must use the "Location" directive, you
would need to have also set the "PythonPath" directive to extend the
sys.path manually to include the directory where your module is installed.
Using the "Location" directive can cause other problem as though such
as Session objects not working. This is because the Session object in
the current mod_python versions rely on being used within a "Directory"
directive so it can determine the physical path associated with it. You
would need to set "ApplicationPath" explicitly if you wanted to use the
"Location" directive and also use Session objects.

Note that if you use .htaccess files as was recommended to be used in
the article for a first attempt at getting things working, there is an
implicit use of the "Directory" directive and thus the directory the .htaccess
file was in would have been automatically added to sys.path and the
module would have been found.

Anyway, hope this helps. I'll update the referenced article yet again with
warnings about not using a name other than "mptest" and especially
not "test". Also warnings about not using "Location".

As to the warning about the "PythonHandler" command, I am not sure
in what order Apache evaluates the configuration, but it may be caused
by the directive being used in the configuration file before the mod_python
module has been loaded into Apache.

Graham

> On 24/05/2005, at 11:34 PM, Fabiano Sidler wrote:
> 
> > Thank you for answering that quickly!
> >
> > Graham Dumpleton wrote:
> >> Read:
> >>   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html
> >> "PythonRequestHandler" doesn't work because it isn't a valid directive
> >> name.
> >
> > Sorry, but doesn't work here:
> >
> >    <Location /py>
> > 	    AddHandler python-program .py
> > 	    PythonHandler test
> > 	    PythonDebug On
> >    </Location>
> >
> >    [Tue May 24 14:53:47 2005] [notice] mod_python: (Re)importing 
> > module 'test'
> >
> > Meanwhile, httpd does start without any errors, but when try stopping
> > or
> > restarting it, I got the following message:
> >
> >    Invalid command 'PythonHandler', perhaps mis-spelled or defined by
> > a module
> >    not included in the server configuration
> >
> > Strange, isn't it?
> >
> > Greetings,
> > Fips
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Tue May 24 18:43:16 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 24 18:43:18 2005
Subject: [mod_python] apache 2.0.54 and SSLUserName
Message-ID: <1116974596.4343@dscpl.user.openhosting.com>

Eric Jonas wrote ..
> from mod_python import apache
> 
> import os
> def handler(req):
>     req.content_type = "text/plain"
>     outstr = "USER IS %s" % req.user
>     req.write(outstr)
>     return apache.OK
> 
> 
> I should get 
>    USER IS Eric M Jonas
> 
> But instead get:
> 
> USER IS /C=US/ST=Massachusetts/O=Massachusetts Institute of
> Technology/OU=Client CA v1/CN=Eric M Jonas/emailAddress=jonas@MIT.EDU
> 
> This is really unfortunate because the full /C=US(etc) string sucks from
> a usability point of view, and I swear this was working in 2.0.52. Has
> anyone else experienced this sort of problem? 

Not a solution, but try a handler:

def handler(req):
  req.add_common_vars()
  req.content_type = "text/plain"
  req.send_http_header()
  for name in req.subprocess_env.keys():
    print >> req, name, req.subprocess_env[name]
  return apache.OK

You might find that the specific bit of information you are after is in one of
the SSL variables which are populated into the req.subprocess_env table
thus giving you an alternate way of finding it.

Graham
From jonas at MIT.EDU  Tue May 24 19:49:57 2005
From: jonas at MIT.EDU (Eric Jonas)
Date: Tue May 24 19:48:59 2005
Subject: [mod_python] apache 2.0.54 and SSLUserName
In-Reply-To: <1116974596.4343@dscpl.user.openhosting.com>
References: <1116974596.4343@dscpl.user.openhosting.com>
Message-ID: <20050524234957.GG10641@modulation.mit.edu>

> Not a solution, but try a handler:
> 
> def handler(req):
>   req.add_common_vars()
>   req.content_type = "text/plain"
>   req.send_http_header()
>   for name in req.subprocess_env.keys():
>     print >> req, name, req.subprocess_env[name]
>   return apache.OK
> 
> You might find that the specific bit of information you are after is in one of
> the SSL variables which are populated into the req.subprocess_env table
> thus giving you an alternate way of finding it.


Alas, I still get:

REMOTE_PORT 33059
REMOTE_USER /C=US/ST=Massachusetts/O=Massachusetts Institute of
Technology/OU=Client CA v1/CN=Eric M Jonas/emailAddress=jonas@MIT.EDU
AUTH_TYPE Basic

Via this handler. Maybe it's a new bug introduced in apache? Sometimes I
need to be careful with debian -testing- on servers! : )
	   ...Eric
From grahamd at dscpl.com.au  Tue May 24 21:09:06 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 24 21:09:20 2005
Subject: [mod_python] apache 2.0.54 and SSLUserName
Message-ID: <1116983346.20687@dscpl.user.openhosting.com>

Eric Jonas wrote ..
> > Not a solution, but try a handler:
> > 
> > def handler(req):
> >   req.add_common_vars()
> >   req.content_type = "text/plain"
> >   req.send_http_header()
> >   for name in req.subprocess_env.keys():
> >     print >> req, name, req.subprocess_env[name]
> >   return apache.OK
> > 
> > You might find that the specific bit of information you are after is
> in one of
> > the SSL variables which are populated into the req.subprocess_env table
> > thus giving you an alternate way of finding it.
> 
> 
> Alas, I still get:
> 
> REMOTE_PORT 33059
> REMOTE_USER /C=US/ST=Massachusetts/O=Massachusetts Institute of
> Technology/OU=Client CA v1/CN=Eric M Jonas/emailAddress=jonas@MIT.EDU
> AUTH_TYPE Basic

These aren't the variables I am thinking of. If the handler is executed as
a content handler (not earlier phases) and mod_ssl is being used, there
should be a host of "SSL_*" variables available. The list is at the end of
this email. It is these variables I was suggesting may have just the specific
bit you want as a separate item.

Unfortunately, if you are trying to get the information in a authhandler
you will not have access to them as they are only populated by the SSL
fixup handler. There is also no gaurantee that the SSL fixuphandler is
run before a mod_python fixuphandler, so you can't even attempt to
access it from the mod_python fixuphandler.

This issue was recently talked about on the mailing list so you may want
to review the discussion in the mailing list archive, starting with:

  http://www.modpython.org/pipermail/mod_python/2005-May/018157.html
  http://www.modpython.org/pipermail/mod_python/2005-May/018163.html
  http://www.modpython.org/pipermail/mod_python/2005-May/018163.html

In the last quoted message I posted code (untested), that may allow you
to access all these SSL variables from an earlier handler than the content
handler. if you needed to do it from the authhandler. The URLs for the
attachments are broken though. I think those which will work are:

  http://www.modpython.org/pipermail/mod_python/attachments/20050523/9fa0275b/_mp_mod_ssl.obj
  http://www.modpython.org/pipermail/mod_python/attachments/20050523/9fa0275b/setup.obj

If they don't, let me know and will send files to you.

Anyway, this is on the basis that you are in fact relying on mod_ssl.

Below are all the SSL variables.

static const char *ssl_hook_Fixup_vars[] = {
    "SSL_VERSION_INTERFACE",
    "SSL_VERSION_LIBRARY",
    "SSL_PROTOCOL",
    "SSL_CIPHER",
    "SSL_CIPHER_EXPORT",
    "SSL_CIPHER_USEKEYSIZE",
    "SSL_CIPHER_ALGKEYSIZE",
    "SSL_CLIENT_VERIFY",
    "SSL_CLIENT_M_VERSION",
    "SSL_CLIENT_M_SERIAL",
    "SSL_CLIENT_V_START",
    "SSL_CLIENT_V_END",
    "SSL_CLIENT_S_DN",
    "SSL_CLIENT_S_DN_C",
    "SSL_CLIENT_S_DN_ST",
    "SSL_CLIENT_S_DN_L",
    "SSL_CLIENT_S_DN_O",
    "SSL_CLIENT_S_DN_OU",
    "SSL_CLIENT_S_DN_CN",
    "SSL_CLIENT_S_DN_T",
    "SSL_CLIENT_S_DN_I",
    "SSL_CLIENT_S_DN_G",
    "SSL_CLIENT_S_DN_S",
    "SSL_CLIENT_S_DN_D",
    "SSL_CLIENT_S_DN_UID",
    "SSL_CLIENT_S_DN_Email",
    "SSL_CLIENT_I_DN",
    "SSL_CLIENT_I_DN_C",
    "SSL_CLIENT_I_DN_ST",
    "SSL_CLIENT_I_DN_L",
    "SSL_CLIENT_I_DN_O",
    "SSL_CLIENT_I_DN_OU",
    "SSL_CLIENT_I_DN_CN",
    "SSL_CLIENT_I_DN_T",
    "SSL_CLIENT_I_DN_I",
    "SSL_CLIENT_I_DN_G",
    "SSL_CLIENT_I_DN_S",
    "SSL_CLIENT_I_DN_D",
    "SSL_CLIENT_I_DN_UID",
    "SSL_CLIENT_I_DN_Email",
    "SSL_CLIENT_A_KEY",
    "SSL_CLIENT_A_SIG",
    "SSL_SERVER_M_VERSION",
    "SSL_SERVER_M_SERIAL",
    "SSL_SERVER_V_START",
    "SSL_SERVER_V_END",
    "SSL_SERVER_S_DN",
    "SSL_SERVER_S_DN_C",
    "SSL_SERVER_S_DN_ST",
    "SSL_SERVER_S_DN_L",
    "SSL_SERVER_S_DN_O",
    "SSL_SERVER_S_DN_OU",
    "SSL_SERVER_S_DN_CN",
    "SSL_SERVER_S_DN_T",
    "SSL_SERVER_S_DN_I",
    "SSL_SERVER_S_DN_G",
    "SSL_SERVER_S_DN_S",
    "SSL_SERVER_S_DN_D",
    "SSL_SERVER_S_DN_UID",
    "SSL_SERVER_S_DN_Email",
    "SSL_SERVER_I_DN",
    "SSL_SERVER_I_DN_C",
    "SSL_SERVER_I_DN_ST",
    "SSL_SERVER_I_DN_L",
    "SSL_SERVER_I_DN_O",
    "SSL_SERVER_I_DN_OU",
    "SSL_SERVER_I_DN_CN",
    "SSL_SERVER_I_DN_T",
    "SSL_SERVER_I_DN_I",
    "SSL_SERVER_I_DN_G",
    "SSL_SERVER_I_DN_S",
    "SSL_SERVER_I_DN_D",
    "SSL_SERVER_I_DN_UID",
    "SSL_SERVER_I_DN_Email",
    "SSL_SERVER_A_KEY",
    "SSL_SERVER_A_SIG",
    "SSL_SESSION_ID",
    NULL
};
From modpython at redry.net  Wed May 25 07:27:54 2005
From: modpython at redry.net (eoghan)
Date: Wed May 25 07:28:24 2005
Subject: [mod_python] psp module
Message-ID: <FBBFEAE6-7348-414E-99E4-99A651E18D61@redry.net>

Hi
Im new to python. Im playing with the psp module. I have noticed that  
whitespace is maintained in the output,. Is there anyway to strip  
this from the generated content? Also, how can i tab my output? Using  
the example:
<html>
<%
import time
%>
Hello world, the time is: <%=time.strftime("%Y-%m-%d, %H:%M:%S")%>
</html>

this produces:
<html>

Hello world, the time is: 2005-05-25, 12:26:25
</html>

What id like is:
<html>
     Hello world, the time is: 2005-05-25, 12:26:25
</html>

Thanks
Eoghan
From grahamd at dscpl.com.au  Wed May 25 08:22:48 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May 25 08:23:00 2005
Subject: [mod_python] psp module
In-Reply-To: <FBBFEAE6-7348-414E-99E4-99A651E18D61@redry.net>
References: <FBBFEAE6-7348-414E-99E4-99A651E18D61@redry.net>
Message-ID: <bc164cb01d7229c4ffb99eccb01a94b0@dscpl.com.au>


On 25/05/2005, at 9:27 PM, eoghan wrote:

> Hi
> Im new to python. Im playing with the psp module. I have noticed that 
> whitespace is maintained in the output,. Is there anyway to strip this 
> from the generated content? Also, how can i tab my output? Using the 
> example:
> <html>
> <%
> import time
> %>
> Hello world, the time is: <%=time.strftime("%Y-%m-%d, %H:%M:%S")%>
> </html>
>
> this produces:
> <html>
>
> Hello world, the time is: 2005-05-25, 12:26:25
> </html>
>
> What id like is:
> <html>
>     Hello world, the time is: 2005-05-25, 12:26:25
> </html>

Based on examples on web site as to what code is generated from the PSP 
source,
ie., at:

   http://www.modpython.org/live/current/doc-html/pyapi-psp.html

The code generated will always insert a new line at the start of each 
section
of HTML between PSP code blocks. Thus you will always get the blank 
lines.

You might look at the display_code() method of the PSP class as 
documented
on that page and experiment with it to display side by side what the PSP
source and generated code look like.

As to tabbing, I believe that if you simply indent it in your PSP 
source file,
it should preserve whatever tabbing you used. At least that is how it 
has
behaved for me before.

Graham

From modpython at redry.net  Wed May 25 09:02:19 2005
From: modpython at redry.net (eoghan)
Date: Wed May 25 09:02:33 2005
Subject: [mod_python] psp module 
In-Reply-To: <bc164cb01d7229c4ffb99eccb01a94b0@dscpl.com.au>
References: <FBBFEAE6-7348-414E-99E4-99A651E18D61@redry.net>
	<bc164cb01d7229c4ffb99eccb01a94b0@dscpl.com.au>
Message-ID: <7228A26D-F9B4-4B2A-B15B-46063264C936@redry.net>

On 25 May 2005, at 13:22, Graham Dumpleton wrote:
>>
>> What id like is:
>> <html>
>>     Hello world, the time is: 2005-05-25, 12:26:25
>> </html>
>>
>
> Based on examples on web site as to what code is generated from the  
> PSP source,
> ie., at:
>
>   http://www.modpython.org/live/current/doc-html/pyapi-psp.html
>
> The code generated will always insert a new line at the start of  
> each section
> of HTML between PSP code blocks. Thus you will always get the blank  
> lines.
>
> You might look at the display_code() method of the PSP class as  
> documented
> on that page and experiment with it to display side by side what  
> the PSP
> source and generated code look like.
>

Thanks Graham
Will take a look at that. On a different slant, the testing page in  
the docs refers to adding apache directives to the conf or .htaccess.  
Im just wondering, if I have 5 .py files in my /test/ dir, how do i  
tell it to parse all of them as python? So if i had, mptest.py and  
hello.py in my dir do i say:
AddHandler mod_python .py
PythonHandler mptest, hello
PythonDebug On

Or is there a way just to allow all files in this path to be parsed?
Thanks
Eoghan

From grahamd at dscpl.com.au  Wed May 25 18:27:01 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed May 25 18:27:17 2005
Subject: [mod_python] psp module 
In-Reply-To: <7228A26D-F9B4-4B2A-B15B-46063264C936@redry.net>
References: <FBBFEAE6-7348-414E-99E4-99A651E18D61@redry.net>
	<bc164cb01d7229c4ffb99eccb01a94b0@dscpl.com.au>
	<7228A26D-F9B4-4B2A-B15B-46063264C936@redry.net>
Message-ID: <240182f9444521470f7e93ae879f7ffd@dscpl.com.au>


On 25/05/2005, at 11:02 PM, eoghan wrote:

> Will take a look at that. On a different slant, the testing page in 
> the docs refers to adding apache directives to the conf or .htaccess. 
> Im just wondering, if I have 5 .py files in my /test/ dir, how do i 
> tell it to parse all of them as python? So if i had, mptest.py and 
> hello.py in my dir do i say:
> AddHandler mod_python .py
> PythonHandler mptest, hello
> PythonDebug On
>
> Or is there a way just to allow all files in this path to be parsed?

Using the configuration above, for any URL accessing that directory 
which
ends in a ".py" extension, the handler() method on mptest.py will first
be called. This would result in headers being returned along with 
whatever
content it wrote to the req object. If that handler returns apache.OK,
then the hello.py handler() method will be called and any content it
generates will be appended to that already produced by the handler in
mptest.py.

I am guess that this probably isn't what you want as for most people it
isn't. If what you are actually after is that if a URL with "mptest" in
it is used then you want "mptest.py" handler to be used. If a URL with
"hello" in it is used you want "hello.py" handler to be used. If this is
the case then go and look at Vampire.

   http://www.dscpl.com.au/projects/vampire

It implements a dispatcher which will map requests against different
resources to different handlers.

If you are intending to only use PSP and you don't actually need to be
doing any before its use, you could also just use mod_python.psp as
the handler as documentation describes. If you do need to do a bit
extra setup before invoking PSP but it is always the same, there are
ways with Vampire of specifying a default handler to do it. Eg.

   http://svn.dscpl.com.au/vampire/trunk/examples/psp/
   http://svn.dscpl.com.au/vampire/trunk/examples/psp/_handler.py

You might have to view source as browsers stuff up indenting a bit when
accessed from repository in this way.

Note that the example referenced here has been extended greatly from
the same PSP example in the latest official Vampire tar ball. Newer
version can be obtained direct from source code repository if needed.

Graham


From shack at livedata.com  Thu May 26 11:13:10 2005
From: shack at livedata.com (Shack Toms)
Date: Thu May 26 11:13:15 2005
Subject: [mod_python] RuntimeError: dictionary changed size during iteration
Message-ID: <E1DbK2q-0008I1-00@msmailgw.livedata.com>

The mem_cleanup routine, in Session.py, appears to have a bug that causes
python to throw "dictionary changed size during iteration".

The current code is.

def mem_cleanup(sdict):
    for sid in sdict:
        dict = sdict[sid]
        if (time.time() - dict["_accessed"]) > dict["_timeout"]:
            del sdict[sid]

The for statement should be changed to
    for sid in sdict.keys():

This will first generate a list of the keys of the sdict, and will avoid the
complaint about the dictionary changing on the "del sdict[sid]" statement.

The dbm_cleanup code has another approach, to use one iteration to gather
the keys to be deleted, and then have a second iteration over the gathered
keys which does the del.   Using that approach, mem_cleanup should become...

def mem_cleanup(sdict):
    old = []
    for sid in sdict:
        dict = sdict[sid]
        if (time.time() - dict["_accessed"]) > dict["_timeout"]:
            old.append(sid)
    for sid in old:
        del sdict[sid]

This is more efficient if the number of sessions is large compared to the
number of sessions to be deleted.

Shack Toms
LiveData, Inc.

From steve at potenzaconsulting.com  Thu May 26 17:08:28 2005
From: steve at potenzaconsulting.com (Stephen Potenza)
Date: Thu May 26 17:08:25 2005
Subject: [mod_python] frustrating problem importing packages with mod_python
Message-ID: <42963ACC.2090602@potenzaconsulting.com>

I setup a simple mod_python publisher and it's working perfectly.

[index.py]
def index():
    return "hi from index"

When I access it through http://localhost/python/, I see "hi from
index"... everything works fine.


However, when I try import a module from a package I created named
"steve", I get the following error:

-------------------------------------------------------------------
Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
98, in handler
    path=[path])

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/python/index.py", line 1, in ?
    from steve import dummy

ImportError: No module named steve
-------------------------------------------------------------------

[index.py]
from steve import dummy

def index():
    return dummy.say()

if __name__ == "__main__":
    print index()


The "steve" package/directory contains two files:

- __init__.py (blank)
- dummy.py

[dummy.py]
def say():
    return "this is dummy!"

When I run index.py from the command line, it works perfectly. Any ideas??

Thanks,
Steve
From grahamd at dscpl.com.au  Thu May 26 17:55:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 26 17:55:49 2005
Subject: [mod_python] frustrating problem importing packages with
	mod_python
In-Reply-To: <42963ACC.2090602@potenzaconsulting.com>
References: <42963ACC.2090602@potenzaconsulting.com>
Message-ID: <65c26d0df69ad7ffa1c01b33f41fff4c@dscpl.com.au>

Where is the "steve" package located in relation to the directory
containing the handler? What is your Python sys.path set to? Are
you overriding "PythonPath" directive? Are you using a ".htaccess"
file to enable use of publisher or the main Apache configuration
file? If the latter, have you used the "Directory" directive or
the "Location" directive to surround the mod_python definitions?

Try and answer these questions. Also post what the part of your
Apache configuration looks like where you enable use of publisher
for mod_python.

One warning, if you use "Location" in the Apache configuration
instead of "Directory", mod_python will not be able to add to the
Python module search path the physical directory for which the
PythonHandler directive is defined, ie., where your handler
potentially resides. As such, if your "steve" package is in a
subdirectory of your handler it will not be able to find it.
Further, even if "Directory" is used, if both the handler and
the "steve" package are in a subdirectory of the directory for
which PythonHandler is defined, it will not find "steve" as only
the top most PythonHandler directory is added to the module search
path.

Anyway, explain better how your directories are laid out etc
and then we might be able to be more specific.

Graham


On 27/05/2005, at 7:08 AM, Stephen Potenza wrote:

> I setup a simple mod_python publisher and it's working perfectly.
>
> [index.py]
> def index():
>     return "hi from index"
>
> When I access it through http://localhost/python/, I see "hi from
> index"... everything works fine.
>
>
> However, when I try import a module from a package I created named
> "steve", I get the following error:
>
> -------------------------------------------------------------------
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
> 98, in handler
>     path=[path])
>
>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
> 457, in import_module
>     module = imp.load_module(mname, f, p, d)
>
>   File "/var/www/python/index.py", line 1, in ?
>     from steve import dummy
>
> ImportError: No module named steve
> -------------------------------------------------------------------
>
> [index.py]
> from steve import dummy
>
> def index():
>     return dummy.say()
>
> if __name__ == "__main__":
>     print index()
>
>
> The "steve" package/directory contains two files:
>
> - __init__.py (blank)
> - dummy.py
>
> [dummy.py]
> def say():
>     return "this is dummy!"
>
> When I run index.py from the command line, it works perfectly. Any 
> ideas??
>
> Thanks,
> Steve
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From steve at potenzaconsulting.com  Thu May 26 18:10:43 2005
From: steve at potenzaconsulting.com (Stephen Potenza)
Date: Thu May 26 18:10:39 2005
Subject: [mod_python] frustrating problem importing packages with
	mod_python
In-Reply-To: <65c26d0df69ad7ffa1c01b33f41fff4c@dscpl.com.au>
References: <42963ACC.2090602@potenzaconsulting.com>
	<65c26d0df69ad7ffa1c01b33f41fff4c@dscpl.com.au>
Message-ID: <42964963.5040506@potenzaconsulting.com>

Graham,

Here is my directory structure:

/var/www/python/
                index.py
                steve/
                      __init__.py
                      dummy.py

sys.path (from my simple index.py publisher and run using the browser):

/var/www/
/usr/lib/python23.zip
/usr/lib/python2.3
/usr/lib/python2.3/plat-linux2
/usr/lib/python2.3/lib-tk
/usr/lib/python2.3/lib-dynload
/usr/local/lib/python2.3/site-packages
/usr/lib/python2.3/site-packages

I'm not overriding the PythonPath directive and I'm using the main
Apache configuration to enable use of the publisher:

    <Directory /var/www/>
        ...

        SetHandler mod_python
        PythonHandler mod_python.publisher
        PythonDebug On
    </Directory>



Graham Dumpleton wrote:
> Where is the "steve" package located in relation to the directory
> containing the handler? What is your Python sys.path set to? Are
> you overriding "PythonPath" directive? Are you using a ".htaccess"
> file to enable use of publisher or the main Apache configuration
> file? If the latter, have you used the "Directory" directive or
> the "Location" directive to surround the mod_python definitions?
> 
> Try and answer these questions. Also post what the part of your
> Apache configuration looks like where you enable use of publisher
> for mod_python.
> 
> One warning, if you use "Location" in the Apache configuration
> instead of "Directory", mod_python will not be able to add to the
> Python module search path the physical directory for which the
> PythonHandler directive is defined, ie., where your handler
> potentially resides. As such, if your "steve" package is in a
> subdirectory of your handler it will not be able to find it.
> Further, even if "Directory" is used, if both the handler and
> the "steve" package are in a subdirectory of the directory for
> which PythonHandler is defined, it will not find "steve" as only
> the top most PythonHandler directory is added to the module search
> path.
> 
> Anyway, explain better how your directories are laid out etc
> and then we might be able to be more specific.
> 
> Graham
> 
> 
> On 27/05/2005, at 7:08 AM, Stephen Potenza wrote:
> 
>> I setup a simple mod_python publisher and it's working perfectly.
>>
>> [index.py]
>> def index():
>>     return "hi from index"
>>
>> When I access it through http://localhost/python/, I see "hi from
>> index"... everything works fine.
>>
>>
>> However, when I try import a module from a package I created named
>> "steve", I get the following error:
>>
>> -------------------------------------------------------------------
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>> 299, in HandlerDispatch
>>     result = object(req)
>>
>>   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", line
>> 98, in handler
>>     path=[path])
>>
>>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>> 457, in import_module
>>     module = imp.load_module(mname, f, p, d)
>>
>>   File "/var/www/python/index.py", line 1, in ?
>>     from steve import dummy
>>
>> ImportError: No module named steve
>> -------------------------------------------------------------------
>>
>> [index.py]
>> from steve import dummy
>>
>> def index():
>>     return dummy.say()
>>
>> if __name__ == "__main__":
>>     print index()
>>
>>
>> The "steve" package/directory contains two files:
>>
>> - __init__.py (blank)
>> - dummy.py
>>
>> [dummy.py]
>> def say():
>>     return "this is dummy!"
>>
>> When I run index.py from the command line, it works perfectly. Any
>> ideas??
>>
>> Thanks,
>> Steve
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

-- 
Stephen Potenza
Potenza Consulting

916.207.0578
steve@potenzaconsulting.com
http://www.potenzaconsulting.com
From grahamd at dscpl.com.au  Thu May 26 18:17:52 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu May 26 18:18:08 2005
Subject: [mod_python] frustrating problem importing packages with
	mod_python
In-Reply-To: <42964963.5040506@potenzaconsulting.com>
References: <42963ACC.2090602@potenzaconsulting.com>
	<65c26d0df69ad7ffa1c01b33f41fff4c@dscpl.com.au>
	<42964963.5040506@potenzaconsulting.com>
Message-ID: <cf0df3a63f24b30a6027e7d02a747b0d@dscpl.com.au>

You are running up against the last case I mentioned, namely:

> Further, even if "Directory" is used, if both the handler and
> the "steve" package are in a subdirectory of the directory for
> which PythonHandler is defined, it will not find "steve" as only
> the top most PythonHandler directory is added to the module search
> path.

Ie., because PythonHandler is for '/var/www', only that directory
is added to the Python module search path, not the "python" 
subdirectory.
Change the Directory directive to "var/www/python" and it should
work. Alternatively, move "steve" into '/var/www'. Ie., a module
import from a handler does not implicitly look in the same directory
as the handler first like when using Python normally.

Graham

On 27/05/2005, at 8:10 AM, Stephen Potenza wrote:

> Graham,
>
> Here is my directory structure:
>
> /var/www/python/
>                 index.py
>                 steve/
>                       __init__.py
>                       dummy.py
>
> sys.path (from my simple index.py publisher and run using the browser):
>
> /var/www/
> /usr/lib/python23.zip
> /usr/lib/python2.3
> /usr/lib/python2.3/plat-linux2
> /usr/lib/python2.3/lib-tk
> /usr/lib/python2.3/lib-dynload
> /usr/local/lib/python2.3/site-packages
> /usr/lib/python2.3/site-packages
>
> I'm not overriding the PythonPath directive and I'm using the main
> Apache configuration to enable use of the publisher:
>
>     <Directory /var/www/>
>         ...
>
>         SetHandler mod_python
>         PythonHandler mod_python.publisher
>         PythonDebug On
>     </Directory>
>
>
>
> Graham Dumpleton wrote:
>> Where is the "steve" package located in relation to the directory
>> containing the handler? What is your Python sys.path set to? Are
>> you overriding "PythonPath" directive? Are you using a ".htaccess"
>> file to enable use of publisher or the main Apache configuration
>> file? If the latter, have you used the "Directory" directive or
>> the "Location" directive to surround the mod_python definitions?
>>
>> Try and answer these questions. Also post what the part of your
>> Apache configuration looks like where you enable use of publisher
>> for mod_python.
>>
>> One warning, if you use "Location" in the Apache configuration
>> instead of "Directory", mod_python will not be able to add to the
>> Python module search path the physical directory for which the
>> PythonHandler directive is defined, ie., where your handler
>> potentially resides. As such, if your "steve" package is in a
>> subdirectory of your handler it will not be able to find it.
>> Further, even if "Directory" is used, if both the handler and
>> the "steve" package are in a subdirectory of the directory for
>> which PythonHandler is defined, it will not find "steve" as only
>> the top most PythonHandler directory is added to the module search
>> path.
>>
>> Anyway, explain better how your directories are laid out etc
>> and then we might be able to be more specific.
>>
>> Graham
>>
>>
>> On 27/05/2005, at 7:08 AM, Stephen Potenza wrote:
>>
>>> I setup a simple mod_python publisher and it's working perfectly.
>>>
>>> [index.py]
>>> def index():
>>>     return "hi from index"
>>>
>>> When I access it through http://localhost/python/, I see "hi from
>>> index"... everything works fine.
>>>
>>>
>>> However, when I try import a module from a package I created named
>>> "steve", I get the following error:
>>>
>>> -------------------------------------------------------------------
>>> Mod_python error: "PythonHandler mod_python.publisher"
>>>
>>> Traceback (most recent call last):
>>>
>>>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>> 299, in HandlerDispatch
>>>     result = object(req)
>>>
>>>   File "/usr/lib/python2.3/site-packages/mod_python/publisher.py", 
>>> line
>>> 98, in handler
>>>     path=[path])
>>>
>>>   File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line
>>> 457, in import_module
>>>     module = imp.load_module(mname, f, p, d)
>>>
>>>   File "/var/www/python/index.py", line 1, in ?
>>>     from steve import dummy
>>>
>>> ImportError: No module named steve
>>> -------------------------------------------------------------------
>>>
>>> [index.py]
>>> from steve import dummy
>>>
>>> def index():
>>>     return dummy.say()
>>>
>>> if __name__ == "__main__":
>>>     print index()
>>>
>>>
>>> The "steve" package/directory contains two files:
>>>
>>> - __init__.py (blank)
>>> - dummy.py
>>>
>>> [dummy.py]
>>> def say():
>>>     return "this is dummy!"
>>>
>>> When I run index.py from the command line, it works perfectly. Any
>>> ideas??
>>>
>>> Thanks,
>>> Steve
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
> -- 
> Stephen Potenza
> Potenza Consulting
>
> 916.207.0578
> steve@potenzaconsulting.com
> http://www.potenzaconsulting.com

From steve at potenzaconsulting.com  Thu May 26 18:22:22 2005
From: steve at potenzaconsulting.com (Stephen Potenza)
Date: Thu May 26 18:22:17 2005
Subject: [mod_python] frustrating problem importing packages with
	mod_python
In-Reply-To: <cf0df3a63f24b30a6027e7d02a747b0d@dscpl.com.au>
References: <42963ACC.2090602@potenzaconsulting.com>
	<65c26d0df69ad7ffa1c01b33f41fff4c@dscpl.com.au>
	<42964963.5040506@potenzaconsulting.com>
	<cf0df3a63f24b30a6027e7d02a747b0d@dscpl.com.au>
Message-ID: <42964C1E.6040408@potenzaconsulting.com>

I realized that once I re-read your email again more carefully... made
the changes and it works perfectly.

Thank you for your help!

Graham Dumpleton wrote:
> You are running up against the last case I mentioned, namely:
> 
>> Further, even if "Directory" is used, if both the handler and
>> the "steve" package are in a subdirectory of the directory for
>> which PythonHandler is defined, it will not find "steve" as only
>> the top most PythonHandler directory is added to the module search
>> path.
> 
> 
> Ie., because PythonHandler is for '/var/www', only that directory
> is added to the Python module search path, not the "python" subdirectory.
> Change the Directory directive to "var/www/python" and it should
> work. Alternatively, move "steve" into '/var/www'. Ie., a module
> import from a handler does not implicitly look in the same directory
> as the handler first like when using Python normally.
From modpython at free.fr  Fri May 27 03:11:35 2005
From: modpython at free.fr (Damien)
Date: Fri May 27 03:11:40 2005
Subject: [mod_python] problem to import pylab of matplotlib
Message-ID: <4296C827.7010805@free.fr>

Hello

I use fedora 3 with  python 2.3.4 ,  mod_python 3.1.3, apache2, Numeric 
23.3 , Numarray 1.3.2 , matplotlib 0.80

I want use mod_python with matplotlib but
in command line :

$ python 

>>> import pylab

>>> dir(pylab)

['ArrayType', 'Arrow', 'ArtistInspector', 'AutoLocator', 'Axes', 'Circle', 'Complex', 
'Complex32', 'Complex64', 'DAILY', 'DateFormatter', 'DateLocator', 'DayLocator', 'FR', 
'Figure', 'FigureCanvasBase', .......

>>> pylab.figure(1)

<matplotlib.figure.Figure instance at 0xb7f728cc>


it's Ok in command line.

But with mod_python :
my python.conf :

    <Directory "/var/www/html">

          AddHandler mod_python .py

          PythonHandler index

          PythonDebug On

    </Directory>


and my /var/www/html/index.py :

import pylab

from mod_python import apache

def handler(req):

        req.write("pylab function \n")

        for i in dir(pylab):

                req.write(i)

                req.write("\n")

        pylab.figure(1)

        return apache.OK



and the html output :

pylab function 
__builtins__
__doc__
__file__
__name__
cm
gzip
mlab

<pre>
Mod_python error: "PythonHandler index"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/var/www/html/index.py", line 19, in handler
    pylab.figure(1)

AttributeError: 'module' object has no attribute 'figure'

</pre>

I have just 7 functins in pylab module.










From Oyvind.Ostlund at cern.ch  Fri May 27 04:01:17 2005
From: Oyvind.Ostlund at cern.ch (Oyvind Ostlund)
Date: Fri May 27 04:01:25 2005
Subject: [mod_python] Book on mod_python?
Message-ID: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>

I am so sure that I once saw a book on mod_python, but now I can't seem to find any at all? Was it a mod_perl book I saw? Is there a book on mod_python? If so, anyone have a link?


Thanks
??

From grahamd at dscpl.com.au  Fri May 27 05:35:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 27 05:35:52 2005
Subject: [mod_python] problem to import pylab of matplotlib
In-Reply-To: <4296C827.7010805@free.fr>
References: <4296C827.7010805@free.fr>
Message-ID: <0eeebe13fbaf013231ca44d8a0f03d88@dscpl.com.au>


On 27/05/2005, at 5:11 PM, Damien wrote:
> and my /var/www/html/index.py :
>
> import pylab
>
> from mod_python import apache
>
> def handler(req):
>
>        req.write("pylab function \n")
>
>        for i in dir(pylab):
>
>                req.write(i)
>
>                req.write("\n")
>
>        pylab.figure(1)
>
>        return apache.OK
>
>
>
> and the html output :
>
> pylab function __builtins__
> __doc__
> __file__
> __name__
> cm
> gzip
> mlab

If you print out __file__ from inside the loaded module, does it 
actually
equate to the module you are expecting to load?

Is "pylab" a module file or a package directory?

Graham

From grahamd at dscpl.com.au  Fri May 27 05:37:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 27 05:37:47 2005
Subject: [mod_python] Book on mod_python?
In-Reply-To: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
Message-ID: <6fbb993dbfb81377efbee60dc85504c1@dscpl.com.au>


On 27/05/2005, at 6:01 PM, Oyvind Ostlund wrote:

> I am so sure that I once saw a book on mod_python, but now I can't 
> seem to find any at all? Was it a mod_perl book I saw? Is there a book 
> on mod_python? If so, anyone have a link?

AFAIK, there is no book specifically dedicated to mod_python. Some books
have a little section on mod_python, but what they cover is quite 
simple.

What you saw must have been mod_perl.

Graham

From bortzmeyer at nic.fr  Fri May 27 06:04:43 2005
From: bortzmeyer at nic.fr (Stephane Bortzmeyer)
Date: Fri May 27 06:04:51 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
Message-ID: <20050527100443.GA23948@nic.fr>

On Fri, May 27, 2005 at 10:01:17AM +0200,
 Oyvind Ostlund <Oyvind.Ostlund@cern.ch> wrote 
 a message of 10 lines which said:

> I am so sure that I once saw a book on mod_python, but now I can't
> seem to find any at all?

Same thing for me but I can swear that I'll buy it immediately if
Graham writes one :-)

From grahamd at dscpl.com.au  Fri May 27 06:21:36 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 27 06:21:56 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <20050527100443.GA23948@nic.fr>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
	<20050527100443.GA23948@nic.fr>
Message-ID: <ab0b7d9771c63279e8d272635d6d0cfc@dscpl.com.au>


On 27/05/2005, at 8:04 PM, Stephane Bortzmeyer wrote:

> On Fri, May 27, 2005 at 10:01:17AM +0200,
>  Oyvind Ostlund <Oyvind.Ostlund@cern.ch> wrote
>  a message of 10 lines which said:
>
>> I am so sure that I once saw a book on mod_python, but now I can't
>> seem to find any at all?
>
> Same thing for me but I can swear that I'll buy it immediately if
> Graham writes one :-)

Maybe next year when I have caught up with the documentation on my own
software. :-)

Anyway, I am still learning how to use mod_python myself, I must just be
good at making it look like I know something. People would actually be 
quite
shocked at how little actual web development I have done. I get so 
caught
up in writing the infrastructure and underlying glue, that I never get
around to actually using it for anything.

Graham

From nicolas.lehuen at gmail.com  Fri May 27 06:46:37 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri May 27 06:46:44 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <ab0b7d9771c63279e8d272635d6d0cfc@dscpl.com.au>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
	<20050527100443.GA23948@nic.fr>
	<ab0b7d9771c63279e8d272635d6d0cfc@dscpl.com.au>
Message-ID: <c298f2d7050527034638669005@mail.gmail.com>

2005/5/27, Graham Dumpleton <grahamd@dscpl.com.au>:
> 
> On 27/05/2005, at 8:04 PM, Stephane Bortzmeyer wrote:
> 
> > On Fri, May 27, 2005 at 10:01:17AM +0200,
> >  Oyvind Ostlund <Oyvind.Ostlund@cern.ch> wrote
> >  a message of 10 lines which said:
> >
> >> I am so sure that I once saw a book on mod_python, but now I can't
> >> seem to find any at all?
> >
> > Same thing for me but I can swear that I'll buy it immediately if
> > Graham writes one :-)
> 
> Maybe next year when I have caught up with the documentation on my own
> software. :-)
> 
> Anyway, I am still learning how to use mod_python myself, I must just be
> good at making it look like I know something. People would actually be
> quite
> shocked at how little actual web development I have done. I get so
> caught
> up in writing the infrastructure and underlying glue, that I never get
> around to actually using it for anything.
> 
> Graham

Well, writing a book is the best way to actually learn something about
its subject :). It's like when you're teaching a group of people. The
best experience I've had of this phenomemon is when I was giving some
Microsoft Word classes to some student ; properly explaining the style
system requires to actually understand it. I would never have found
out about anonymous style inheritance otherwise ;).

As for a mod_python book, I really think this should be done based on
the future 3.2 release rather than based on the 3.1.x versions.

Regards,
Nicolas

From modpython at free.fr  Fri May 27 07:38:35 2005
From: modpython at free.fr (Damien)
Date: Fri May 27 07:38:43 2005
Subject: [mod_python] problem to import pylab of matplotlib
In-Reply-To: <0eeebe13fbaf013231ca44d8a0f03d88@dscpl.com.au>
References: <4296C827.7010805@free.fr>
	<0eeebe13fbaf013231ca44d8a0f03d88@dscpl.com.au>
Message-ID: <429706BB.3080304@free.fr>

Graham Dumpleton wrote:

>
> On 27/05/2005, at 5:11 PM, Damien wrote:
>
>> and my /var/www/html/index.py :
>>
>> import pylab
>>
>> from mod_python import apache
>>
>> def handler(req):
>>
>>        req.write("pylab function \n")
>>
>>        for i in dir(pylab):
>>
>>                req.write(i)
>>
>>                req.write("\n")
>>
>>        pylab.figure(1)
>>
>>        return apache.OK
>>
>>
>>
>> and the html output :
>>
>> pylab function __builtins__
>> __doc__
>> __file__
>> __name__
>> cm
>> gzip
>> mlab
>
>
> If you print out __file__ from inside the loaded module, does it actually
> equate to the module you are expecting to load?

in command line and mod_python ( the same file) :

/usr/lib/python2.3/site-packages/pylab.pyc 

the content of /usr/lib/python2.3/site-packages/pylab.py is :

from matplotlib.pylab import *


If y replace the "import pylab" by "from matplotlib.pylab import *" in 
my index.py
i have a new error  :

pylab function 

<pre>
Mod_python error: "PythonHandler index"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/var/www/html/index.py", line 15, in handler
    for i in dir(pylab):

NameError: global name 'pylab' is not defined

</pre>


>
> Is "pylab" a module file or a package directory?

i think is a package directory in :

/usr/lib/python2.3/site-packages/matplotlib/

but there are *.so file in this directory.

>
> Graham

Merci, Damien

>
>
>

From grahamd at dscpl.com.au  Fri May 27 08:01:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 27 08:01:42 2005
Subject: [mod_python] problem to import pylab of matplotlib
In-Reply-To: <429706BB.3080304@free.fr>
References: <4296C827.7010805@free.fr>
	<0eeebe13fbaf013231ca44d8a0f03d88@dscpl.com.au>
	<429706BB.3080304@free.fr>
Message-ID: <55f7d828a2e951a985fd82d5030a8efb@dscpl.com.au>


On 27/05/2005, at 9:38 PM, Damien wrote:
> the content of /usr/lib/python2.3/site-packages/pylab.py is :
>
> from matplotlib.pylab import *
>
>
> If y replace the "import pylab" by "from matplotlib.pylab import *" in 
> my index.py
> i have a new error  :
>
> pylab function
> <pre>
> Mod_python error: "PythonHandler index"
>
> Traceback (most recent call last):
>
>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
> 299, in HandlerDispatch
>    result = object(req)
>
>  File "/var/www/html/index.py", line 15, in handler
>    for i in dir(pylab):
>
> NameError: global name 'pylab' is not defined
>
> </pre>

You would need to use:

   for in globals().keys():

instead of:

   for i in dir(pylab):

as using "from matplotlib.pylab import *" imports them into your own
globals.

This means that instead of:

   pylab.figure(1)

you would also just use:

   figure(1)

Anyway, the original pylib.py should have worked as standard Python
import is being used.

One possibility for problems is that everything is contained in .so 
files.
There may be some sort of problem loading these within the context of 
the
Apache process. I would though have expected to see a Python exception
if there was.

Only thing I can think of is to stop and start Apache and then look in
the Apache error log file. There may be errors which are getting sent
to stderr but which aren't getting flushed immediately (known issue).
By shutting down Apache these error messages usually then get flushed
and can be seen.

Graham

From modpython at free.fr  Fri May 27 08:48:58 2005
From: modpython at free.fr (Damien)
Date: Fri May 27 08:49:09 2005
Subject: [mod_python] problem to import pylab of matplotlib
In-Reply-To: <55f7d828a2e951a985fd82d5030a8efb@dscpl.com.au>
References: <4296C827.7010805@free.fr>
	<0eeebe13fbaf013231ca44d8a0f03d88@dscpl.com.au>
	<429706BB.3080304@free.fr>
	<55f7d828a2e951a985fd82d5030a8efb@dscpl.com.au>
Message-ID: <4297173A.4060803@free.fr>

Graham Dumpleton wrote:

>
> On 27/05/2005, at 9:38 PM, Damien wrote:
>
>> the content of /usr/lib/python2.3/site-packages/pylab.py is :
>>
>> from matplotlib.pylab import *
>>
>>
>> If y replace the "import pylab" by "from matplotlib.pylab import *" 
>> in my index.py
>> i have a new error  :
>>
>> pylab function
>> <pre>
>> Mod_python error: "PythonHandler index"
>>
>> Traceback (most recent call last):
>>
>>  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 
>> 299, in HandlerDispatch
>>    result = object(req)
>>
>>  File "/var/www/html/index.py", line 15, in handler
>>    for i in dir(pylab):
>>
>> NameError: global name 'pylab' is not defined
>>
>> </pre>
>
>
> You would need to use:
>
>   for in globals().keys():
>
> instead of:
>
>   for i in dir(pylab):
>
> as using "from matplotlib.pylab import *" imports them into your own
> globals.
>
> This means that instead of:
>
>   pylab.figure(1)
>
> you would also just use:
>
>   figure(1)
>
> Anyway, the original pylib.py should have worked as standard Python
> import is being used.
>
> One possibility for problems is that everything is contained in .so 
> files.
> There may be some sort of problem loading these within the context of the
> Apache process. I would though have expected to see a Python exception
> if there was.
>
> Only thing I can think of is to stop and start Apache and then look in
> the Apache error log file. There may be errors which are getting sent
> to stderr but which aren't getting flushed immediately (known issue).
> By shutting down Apache these error messages usually then get flushed
> and can be seen.
>
> Graham


Yes, with a fresh restart of apache server, i have a different error :

Mod_python error: "PythonHandler index"

Traceback (most recent call last):

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 287, in HandlerDispatch
    log=debug)

  File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/var/www/html/index.py", line 3, in ?
    import pylab

  File "/usr/lib/python2.3/site-packages/pylab.py", line 1, in ?
    from matplotlib.pylab import *

  File "/usr/lib/python2.3/site-packages/matplotlib/pylab.py", line 195, in ?
    from axes import Axes, PolarAxes

  File "/usr/lib/python2.3/site-packages/matplotlib/axes.py", line 12, in ?
    from axis import XAxis, YAxis

  File "/usr/lib/python2.3/site-packages/matplotlib/axis.py", line 20, in ?
    from font_manager import FontProperties

  File "/usr/lib/python2.3/site-packages/matplotlib/font_manager.py", line 991, in ?
    fontManager = FontManager()

  File "/usr/lib/python2.3/site-packages/matplotlib/font_manager.py", line 835, in __init__
    rebuild()

  File "/usr/lib/python2.3/site-packages/matplotlib/font_manager.py", line 829, in rebuild
    pickle.dump(self.ttfdict, file(ttfcache, 'w'))

IOError: [Errno 13] Permission denied: '/root/.ttffont.cache'

but when after 4 refresh of this page in my firefox, the error message 
change to the previous message.
why desactivate this phenomene ?

I have the same message in my apache log file exept this line :

[Fri May 27 14:46:10 2005] [notice] mod_python: (Re)importing module 'index'


I have a permession file error with the apache user.

Merci, Damien
From gdamjan at mail.net.mk  Fri May 27 09:16:35 2005
From: gdamjan at mail.net.mk (Damjan)
Date: Fri May 27 09:18:28 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <c298f2d7050527034638669005@mail.gmail.com>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
	<20050527100443.GA23948@nic.fr>
	<ab0b7d9771c63279e8d272635d6d0cfc@dscpl.com.au>
	<c298f2d7050527034638669005@mail.gmail.com>
Message-ID: <20050527131635.GA19579@legolas.on.net.mk>

> As for a mod_python book, I really think this should be done based on
> the future 3.2 release rather than based on the 3.1.x versions.

Is there a list of new features planned for 3.2, and is there some
timeframe when could we expect it?

-- 
damjan | ??????
This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
From jdhunter at nitace.bsd.uchicago.edu  Fri May 27 09:46:38 2005
From: jdhunter at nitace.bsd.uchicago.edu (John Hunter)
Date: Fri May 27 09:47:50 2005
Subject: [mod_python] problem to import pylab of matplotlib
In-Reply-To: <4297173A.4060803@free.fr> (Damien's message of "Fri, 27 May
	2005 14:48:58 +0200")
References: <4296C827.7010805@free.fr>
	<0eeebe13fbaf013231ca44d8a0f03d88@dscpl.com.au>
	<429706BB.3080304@free.fr>
	<55f7d828a2e951a985fd82d5030a8efb@dscpl.com.au>
	<4297173A.4060803@free.fr>
Message-ID: <87mzqgye69.fsf@peds-pc311.bsd.uchicago.edu>

>>>>> "Damien" == Damien  <modpython@free.fr> writes:
    Damien>   File
    Damien> "/usr/lib/python2.3/site-packages/matplotlib/font_manager.py",
    Damien> line 829, in rebuild pickle.dump(self.ttfdict,
    Damien> file(ttfcache, 'w'))

    Damien> IOError: [Errno 13] Permission denied:
    Damien> '/root/.ttffont.cache'

    Damien> but when after 4 refresh of this page in my firefox, the
    Damien> error message change to the previous message.  why
    Damien> desactivate this phenomene ?

matplotlib keeps a cache of the font information it finds on your
system, so it needs a writable directory.  It first tries "HOME" and
if it is not found falls back on it's data path, which can be set with
the MATPLOTLIBDATA environment variable.  MATPLOTLIBDATA is the
directory in which all of matplotlib's fonts, etc, live, and is not
writable on a typical install, so the best approach is to set HOME to
a writable directory.

Also, I advise you not to use the pylab interface in a web application
server (though you can).  pylab does a fair amount of work under the
hood, managing the current figure and so on, and in an application
server you might rather have full control of the whole process.  pylab
is simply a thin wrapper to the object oriented matplotlib API, and
you can find some guidance on how to use it at 

  http://matplotlib.sourceforge.net/faq.html#OO

In particular, see the script
http://matplotlib.sf.net/examples/agg_oo.py

Hope this helps,
JDH
From nicolas.lehuen at gmail.com  Fri May 27 10:14:00 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri May 27 10:14:05 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <20050527131635.GA19579@legolas.on.net.mk>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
	<20050527100443.GA23948@nic.fr>
	<ab0b7d9771c63279e8d272635d6d0cfc@dscpl.com.au>
	<c298f2d7050527034638669005@mail.gmail.com>
	<20050527131635.GA19579@legolas.on.net.mk>
Message-ID: <c298f2d70505270714634c3145@mail.gmail.com>

2005/5/27, Damjan <gdamjan@mail.net.mk>:
> > As for a mod_python book, I really think this should be done based on
> > the future 3.2 release rather than based on the 3.1.x versions.
> 
> Is there a list of new features planned for 3.2, and is there some
> timeframe when could we expect it?
> 
> --
> damjan | ??????
> This is my jabber ID --> damjan@bagra.net.mk <-- not my mail address!!!
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

The future release notes are here :

http://issues.apache.org/jira/secure/ReleaseNote.jspa?version=11060&styleName=Html&projectId=10640&Create=Create

As for the planning, well, I'd say that all we need for now is some
testing (only unit tests have been performed for now, compatibility
test could be done with a beta version or directly a Release
Candidate) and a bit of documentation. As soon as we decided
everything is OK,  Grisha is the only one who can make a release for
now.

Regards,

Nicolas

From administrator at leebrown.org  Fri May 27 10:21:08 2005
From: administrator at leebrown.org (Lee Brown)
Date: Fri May 27 10:21:31 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <ab0b7d9771c63279e8d272635d6d0cfc@dscpl.com.au>
Message-ID: <280A42D76E52@underdog>

Greetings!

Graham, you have an unparalleled grasp of the inner workings of Mod Python
and I've done a fair bit of technical writing in my time.  I'm game for
co-authoring a book with you.

I think that the structure of the existing Mod Python documentation with
expanded discussion and examples would make an excellent foundation for the
first part of the book.  To that, we could add more advanced topics such as
content templating, servelets, and frameworks.

My current 'pet' project uses Mod Python in conjunction with Apache's Xerces
and Xalan to deliver XHTML web content from XML data using XSLT.  I could
write a bit about that and I suspect that some of the creators of other
framework systems (Vampire, mp_servelets, etc.) could be cajoled into
contributing.

Then again, I might just be crazy...

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Graham Dumpleton
Sent: Friday, May 27, 2005 6:22 AM
To: Stephane Bortzmeyer
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Re: Book on mod_python?


On 27/05/2005, at 8:04 PM, Stephane Bortzmeyer wrote:

> On Fri, May 27, 2005 at 10:01:17AM +0200,  Oyvind Ostlund 
> <Oyvind.Ostlund@cern.ch> wrote  a message of 10 lines which said:
>
>> I am so sure that I once saw a book on mod_python, but now I can't 
>> seem to find any at all?
>
> Same thing for me but I can swear that I'll buy it immediately if 
> Graham writes one :-)

Maybe next year when I have caught up with the documentation on my own
software. :-)

Anyway, I am still learning how to use mod_python myself, I must just be
good at making it look like I know something. People would actually be quite
shocked at how little actual web development I have done. I get so caught up
in writing the infrastructure and underlying glue, that I never get around
to actually using it for anything.

Graham

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From Oyvind.Ostlund at cern.ch  Fri May 27 10:29:46 2005
From: Oyvind.Ostlund at cern.ch (Oyvind Ostlund)
Date: Fri May 27 10:29:55 2005
Subject: [mod_python] Re: Book on mod_python?
Message-ID: <9D1BA87B48D4F440A0D9E371471F45A51BF55D@cernxchg21.cern.ch>

It is  important to not forget the beginners though. ;) But this sounds great to me. I am glad I started this topic. I would definitly buy a book about mod_perl if there was one. 



- ?? -

-----Original Message-----
From: mod_python-bounces@modpython.org [mailto:mod_python-bounces@modpython.org] On Behalf Of Lee Brown
Sent: Friday, May 27, 2005 4:21 PM
To: 'Graham Dumpleton'; mod_python@modpython.org
Subject: RE: [mod_python] Re: Book on mod_python?

Greetings!

Graham, you have an unparalleled grasp of the inner workings of Mod Python and I've done a fair bit of technical writing in my time.  I'm game for co-authoring a book with you.

I think that the structure of the existing Mod Python documentation with expanded discussion and examples would make an excellent foundation for the first part of the book.  To that, we could add more advanced topics such as content templating, servelets, and frameworks.

My current 'pet' project uses Mod Python in conjunction with Apache's Xerces and Xalan to deliver XHTML web content from XML data using XSLT.  I could write a bit about that and I suspect that some of the creators of other framework systems (Vampire, mp_servelets, etc.) could be cajoled into contributing.

Then again, I might just be crazy...

Best Regards,
Lee E. Brown
(administrator@leebrown.org)

-----Original Message-----
From: mod_python-bounces@modpython.org
[mailto:mod_python-bounces@modpython.org] On Behalf Of Graham Dumpleton
Sent: Friday, May 27, 2005 6:22 AM
To: Stephane Bortzmeyer
Cc: mod_python@modpython.org
Subject: Re: [mod_python] Re: Book on mod_python?


On 27/05/2005, at 8:04 PM, Stephane Bortzmeyer wrote:

> On Fri, May 27, 2005 at 10:01:17AM +0200,  Oyvind Ostlund 
> <Oyvind.Ostlund@cern.ch> wrote  a message of 10 lines which said:
>
>> I am so sure that I once saw a book on mod_python, but now I can't 
>> seem to find any at all?
>
> Same thing for me but I can swear that I'll buy it immediately if 
> Graham writes one :-)

Maybe next year when I have caught up with the documentation on my own software. :-)

Anyway, I am still learning how to use mod_python myself, I must just be good at making it look like I know something. People would actually be quite shocked at how little actual web development I have done. I get so caught up in writing the infrastructure and underlying glue, that I never get around to actually using it for anything.

Graham

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python

From jg.lists at sympatico.ca  Fri May 27 10:51:08 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri May 27 10:48:06 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <c298f2d7050527034638669005@mail.gmail.com>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>	<20050527100443.GA23948@nic.fr>	<ab0b7d9771c63279e8d272635d6d0cfc@dscpl.com.au>
	<c298f2d7050527034638669005@mail.gmail.com>
Message-ID: <429733DC.9060405@sympatico.ca>

Nicolas Lehuen wrote:
> 2005/5/27, Graham Dumpleton <grahamd@dscpl.com.au>:
> 
>>On 27/05/2005, at 8:04 PM, Stephane Bortzmeyer wrote:
>>
>>
>>>On Fri, May 27, 2005 at 10:01:17AM +0200,
>>> Oyvind Ostlund <Oyvind.Ostlund@cern.ch> wrote
>>> a message of 10 lines which said:
>>>
>>>
>>>>I am so sure that I once saw a book on mod_python, but now I can't
>>>>seem to find any at all?
>>>
>>>Same thing for me but I can swear that I'll buy it immediately if
>>>Graham writes one :-)
>>
>>Maybe next year when I have caught up with the documentation on my own
>>software. :-)
>>
>>Anyway, I am still learning how to use mod_python myself, I must just be
>>good at making it look like I know something. People would actually be
>>quite
>>shocked at how little actual web development I have done. I get so
>>caught
>>up in writing the infrastructure and underlying glue, that I never get
>>around to actually using it for anything.
>>
>>Graham
> 
> 
> Well, writing a book is the best way to actually learn something about
> its subject :). It's like when you're teaching a group of people. The
> best experience I've had of this phenomemon is when I was giving some
> Microsoft Word classes to some student ; properly explaining the style
> system requires to actually understand it. I would never have found
> out about anonymous style inheritance otherwise ;).
> 

I used to have a boss that liked to say "you don't truly know something 
until you can teach someone else".

Jim

From davidbadawi at yahoo.com  Fri May 27 11:07:05 2005
From: davidbadawi at yahoo.com (David Y. Badawi, M.D.)
Date: Fri May 27 11:07:16 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <429733DC.9060405@sympatico.ca>
Message-ID: <20050527150705.35880.qmail@web51005.mail.yahoo.com>

I think a book on mod_python would be great too. Easily said, I know. 
 
David

Jim Gallacher <jg.lists@sympatico.ca> wrote:
Nicolas Lehuen wrote:
> 2005/5/27, Graham Dumpleton :
> 
>>On 27/05/2005, at 8:04 PM, Stephane Bortzmeyer wrote:
>>
>>
>>>On Fri, May 27, 2005 at 10:01:17AM +0200,
>>> Oyvind Ostlund wrote
>>> a message of 10 lines which said:
>>>
>>>
>>>>I am so sure that I once saw a book on mod_python, but now I can't
>>>>seem to find any at all?
>>>
>>>Same thing for me but I can swear that I'll buy it immediately if
>>>Graham writes one :-)
>>
>>Maybe next year when I have caught up with the documentation on my own
>>software. :-)
>>
>>Anyway, I am still learning how to use mod_python myself, I must just be
>>good at making it look like I know something. People would actually be
>>quite
>>shocked at how little actual web development I have done. I get so
>>caught
>>up in writing the infrastructure and underlying glue, that I never get
>>around to actually using it for anything.
>>
>>Graham
> 
> 
> Well, writing a book is the best way to actually learn something about
> its subject :). It's like when you're teaching a group of people. The
> best experience I've had of this phenomemon is when I was giving some
> Microsoft Word classes to some student ; properly explaining the style
> system requires to actually understand it. I would never have found
> out about anonymous style inheritance otherwise ;).
> 

I used to have a boss that liked to say "you don't truly know something 
until you can teach someone else".

Jim

_______________________________________________
Mod_python mailing list
Mod_python@modpython.org
http://mailman.modpython.org/mailman/listinfo/mod_python
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050527/f1a8b48d/attachment.html
From jg.lists at sympatico.ca  Fri May 27 11:25:33 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri May 27 11:22:32 2005
Subject: [mod_python] RuntimeError: dictionary changed size during
	iteration
In-Reply-To: <E1DbK2q-0008I1-00@msmailgw.livedata.com>
References: <E1DbK2q-0008I1-00@msmailgw.livedata.com>
Message-ID: <42973BED.5010907@sympatico.ca>

Hi Shack

Could you create an issue for this in JIRA?

http://issues.apache.org/jira/browse/MODPYTHON

Regards,
Jim


Shack Toms wrote:
> The mem_cleanup routine, in Session.py, appears to have a bug that causes
> python to throw "dictionary changed size during iteration".
> 
> The current code is.
> 
> def mem_cleanup(sdict):
>     for sid in sdict:
>         dict = sdict[sid]
>         if (time.time() - dict["_accessed"]) > dict["_timeout"]:
>             del sdict[sid]
> 
> The for statement should be changed to
>     for sid in sdict.keys():
> 
> This will first generate a list of the keys of the sdict, and will avoid the
> complaint about the dictionary changing on the "del sdict[sid]" statement.
> 
> The dbm_cleanup code has another approach, to use one iteration to gather
> the keys to be deleted, and then have a second iteration over the gathered
> keys which does the del.   Using that approach, mem_cleanup should become...
> 
> def mem_cleanup(sdict):
>     old = []
>     for sid in sdict:
>         dict = sdict[sid]
>         if (time.time() - dict["_accessed"]) > dict["_timeout"]:
>             old.append(sid)
>     for sid in old:
>         del sdict[sid]
> 
> This is more efficient if the number of sessions is large compared to the
> number of sessions to be deleted.
> 
> Shack Toms
> LiveData, Inc.
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From bill at immosys.com  Fri May 27 12:43:37 2005
From: bill at immosys.com (Bill Anderson)
Date: Fri May 27 12:44:30 2005
Subject: [mod_python] Book on mod_python?
In-Reply-To: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
Message-ID: <1117212217.12935.1.camel@locutus>

On Fri, 2005-05-27 at 10:01 +0200, Oyvind Ostlund wrote:
> I am so sure that I once saw a book on mod_python, but now I can't seem
>  to find any at all? Was it a mod_perl book I saw? Is there a book on
>  mod_python? If so, anyone have a link?

I am currently in the process of getting one finished and published.
*Hopefully* in the next year it should be out. 

Cheers,
Bill

-- 
Bill Anderson <bill@immosys.com>

From grahamd at dscpl.com.au  Fri May 27 18:42:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 27 18:43:00 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <280A42D76E52@underdog>
References: <280A42D76E52@underdog>
Message-ID: <106ad98a5852c239001dad9056a7070c@dscpl.com.au>


On 28/05/2005, at 12:21 AM, Lee Brown wrote:
> Graham, you have an unparalleled grasp of the inner workings of Mod 
> Python

There are other people on the list who know as much and more than I do,
I am just more vocal on the list because at this time it was more than
I could manage to get involved in actual development on mod_python so
I try and help by answering questions instead. Makes me feel good that
I can at least help out that way.

On 28/05/2005, at 12:29 AM, Oyvind Ostlund wrote:

> It is  important to not forget the beginners though. ;)

Even if you have some more complicated stuff you definitely can't forget
the beginners. One thing a book would have to be careful about is not to
focus on the latest versions in exclusion of the older versions. One of
the problems with the 3.1 documentation as it exists is that it doesn't
clearly indicate where certain things have changed in respect of 2.7.
As a result you get some number of questions on the mailing list by 
newbies
asking why their mptest example will not work. For some it is because
they didn't follow the instructions as written, but in other cases it is
because they followed the instructions for 3.1 when they were actually
using 2.7. We were getting a lot of this a while back and why I wrote
that newbie article I keep referring people to so that didn't have to
keep answering the same question all the time.

In 3.2 there are some changes to how module loading works for publisher
and there are some subtle differences to behaviour of module reloads as
a result. These differences would possibly need to be identified as 
well,
although the issues are a bit esoteric and wouldn't affect beginners. 
For
serious applications though it may.

> I would definitly buy a book about mod_perl if there was one.

I thought we ascertained that there probably was one on mod_perl 
already. ;-)

Graham

From grahamd at dscpl.com.au  Fri May 27 18:47:05 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 27 18:47:16 2005
Subject: [mod_python] Book on mod_python?
In-Reply-To: <1117212217.12935.1.camel@locutus>
References: <9D1BA87B48D4F440A0D9E371471F45A51BF535@cernxchg21.cern.ch>
	<1117212217.12935.1.camel@locutus>
Message-ID: <27b0829851c576a35914cae3b68d0dcf@dscpl.com.au>


On 28/05/2005, at 2:43 AM, Bill Anderson wrote:

> On Fri, 2005-05-27 at 10:01 +0200, Oyvind Ostlund wrote:
>> I am so sure that I once saw a book on mod_python, but now I can't 
>> seem
>>  to find any at all? Was it a mod_perl book I saw? Is there a book on
>>  mod_python? If so, anyone have a link?
>
> I am currently in the process of getting one finished and published.
> *Hopefully* in the next year it should be out.

Are you intending too look for reviewers before you are done? Am sure
there are a few people who would be interested. Also, is the book
exclusively on mod_python or another book on web programming in Python
with just a chapter on mod_python?

Graham

From jason at ruff.com  Fri May 27 20:22:37 2005
From: jason at ruff.com (Jason Lanquist)
Date: Fri May 27 20:23:14 2005
Subject: [mod_python] Submitting a form with unknown number of items
Message-ID: <4297B9CD.7040704@ruff.com>

Hi there, I can handle form data when I know how many items are 
returned.  I use a fixed number of parameters when someone signs up like:

def form_submit1(req,uname,passwd,passwd2,email,city,st,zip,country):
  ...
  ...
  ...

But when I have a varying number of form items (they are generated by 
data) I'm not sure how many there will be so how is that handled?  I 
tried to use "FieldStorage" as the only parameter (thinking it would be 
a list of form items) besides req but that doesn't work:

def buy_fromstore(req,FieldStorage):
  ...
  ...
  ...

How do you handle form data when you don't know how many items will be 
returned?

Thanks,
Jason Lanquist
From list at joreybump.com  Fri May 27 21:09:29 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri May 27 21:09:42 2005
Subject: [mod_python] Re: Book on mod_python?
In-Reply-To: <106ad98a5852c239001dad9056a7070c@dscpl.com.au>
References: <280A42D76E52@underdog>
	<106ad98a5852c239001dad9056a7070c@dscpl.com.au>
Message-ID: <4297C4C9.1010602@joreybump.com>

Graham Dumpleton wrote:

> Even if you have some more complicated stuff you definitely can't forget
> the beginners. One thing a book would have to be careful about is not to
> focus on the latest versions in exclusion of the older versions. One of
> the problems with the 3.1 documentation as it exists is that it doesn't
> clearly indicate where certain things have changed in respect of 2.7.
> As a result you get some number of questions on the mailing list by newbies
> asking why their mptest example will not work. For some it is because
> they didn't follow the instructions as written, but in other cases it is
> because they followed the instructions for 3.1 when they were actually
> using 2.7. We were getting a lot of this a while back and why I wrote
> that newbie article I keep referring people to so that didn't have to
> keep answering the same question all the time.

I expect we'll see less of this when Debian Sarge goes stable. Woody 
still has a very large installed base. Another challenge is that 
Slackware still ships with apache 1.3.x, and some people even prefer it 
to apache 2. That leaves mod_python 2.7 the only choice for many people. 
  While apache 2 has some nice features, the truth is that most people 
were so content with the earlier series, they are in no hurry to 
upgrade.
From grahamd at dscpl.com.au  Fri May 27 23:33:44 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri May 27 23:33:53 2005
Subject: [mod_python] Submitting a form with unknown number of items
In-Reply-To: <4297B9CD.7040704@ruff.com>
References: <4297B9CD.7040704@ruff.com>
Message-ID: <8c81b740bf66d61ab6ab35ada3252bcc@dscpl.com.au>


On 28/05/2005, at 10:22 AM, Jason Lanquist wrote:

> Hi there, I can handle form data when I know how many items are  
> returned.  I use a fixed number of parameters when someone signs up  
> like:
>
> def form_submit1(req,uname,passwd,passwd2,email,city,st,zip,country):
>  ...
>  ...
>  ...
>
> But when I have a varying number of form items (they are generated by  
> data) I'm not sure how many there will be so how is that handled?  I  
> tried to use "FieldStorage" as the only parameter (thinking it would  
> be a list of form items) besides req but that doesn't work:
>
> def buy_fromstore(req,FieldStorage):
>  ...
>  ...
>  ...
>
> How do you handle form data when you don't know how many items will be  
> returned?

Assuming here that you are using mod_python.publisher. If that is the  
case, define
your method to accept a keyword parameter list argument. You can then  
go through
the dictionary keys and look for form parameters:

   def buy_fromstore(req,**params):
     for name in params.keys():
       req.log_error(str((name,params[name])))

You can still have named parameters at the same time:

   def buy_fromstore(req,uname,passwd,**params):
     ...

You obviously need to interpret the names of the form parameters in the  
dictionary.

For a different way of doing this, you might look at Vampire. When  
using its equivalent
to mod_python.publisher, you can have form parameters labeled as:

   item-1
   item-2
   item-3

and they willbe  automatically passed as a single parameter called  
"item" where the
value for each actual form parameter is then stored in a list. One  
could also have:

   entry.a
   entry.b
   entry.c

and the result will be a dictionary instead of a list. One can mix the  
form naming
conventions to get combination of both.

See:

   http://www.dscpl.com.au/projects/vampire/articles/vampire-003.html

for a description of how Vampire treats form parameters. Although the  
documentation
mainly shows use of this mechanism for Vampire's basic content  
handlers, also applies
to vampire:publisher drop in replacement for mod_python.publisher.

This form of automatic conversion of form parameters into structured  
lists and
dictionaries is really useful for example when you have a large list of  
selectable
items in a form. The selected set of items ends up being in one  
parameter which you
just iterate over.

If you want to play with this without getting down Vampire, construct  
some forms
following the conventions and post it to:

    
http://www.dscpl.com.au/projects/vampire/examples/templates/ 
form_values.html

Eg:

    
http://www.dscpl.com.au/projects/vampire/examples/templates/ 
form_values.html?a-1=a1&a-2=a2&b.c=bc&b.d=bd

Graham

From bluszcz at jabberpl.org  Sat May 28 16:45:27 2005
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Sat May 28 16:45:47 2005
Subject: [mod_python] Mod python + apache problem
Message-ID: <200505282245.27308.bluszcz@jabberpl.org>

Hello, I am trying to write some web application using modpython.

I failed at beginning, I cannot configure apache to work with mod-python.

I am using Debian Sarge, apache and libapache-mod-python2.3.

Fragments my configurations are:

<Directory /var/www/modpython>
        AllowOverride All
        AddHandler python-program .py
        PythonHandler mptest.py #i tried also with mptest (withoout .py)
        PythonDebug On
</Directory>


my mptest.py looks like:
jabberpl:/var/www/modpython# cat mptest.py
from mod_python import apache
def handler(req):
        req.send_http_header()
        req.write("Hello World!")
        return apache.OK
jabberpl:/var/www/modpython#  


I started apache again... URL: http://jabberpl.org/modpython/

Apache show mptest.py source, any idea?

-- 
| Rafal "Bluszcz" Zawadzki : : :: ::|
| jid/mail: bluszcz<>jabberpl.org ::|
| http://bluszcz.jabberpl.org :: :::|
|_JabberPL.org_sysadmin_:_::::_:::::|
From ml at bettercom.de  Sat May 28 17:07:32 2005
From: ml at bettercom.de (Martin Lesser)
Date: Sat May 28 17:07:42 2005
Subject: [mod_python] Mod python + apache problem
In-Reply-To: <200505282245.27308.bluszcz@jabberpl.org> (Rafal Zawadzki's
	message of "Sat, 28 May 2005 22:45:27 +0200")
References: <200505282245.27308.bluszcz@jabberpl.org>
Message-ID: <8764x3rre3.fsf@nb-acer.bettercom.de>

Rafal Zawadzki <bluszcz@jabberpl.org> writes:

> Fragments my configurations are:
>
> <Directory /var/www/modpython>
>         AllowOverride All
>         AddHandler python-program .py
>         PythonHandler mptest.py #i tried also with mptest (withoout .py)
>         PythonDebug On
> </Directory>

Do you want to use the publisher-handler? (Makes sense)? Then put 

  PythonHandler mod_python.publisher

into your apache-config or .htaccess

Additionally you may want to put

  MultiviewsMatch Handlers

also in there so that URIs like
http://your.domain/path/whatever

will in fact be handeled by

def whatever(req):
  ...

in the file path.py in your htdocs-documentroot

IIRC you have to put

  DirectoryIndex ... index.py ...

into your global apache-conf to make the extension-less URIs work.

HTH, Martin
From grahamd at dscpl.com.au  Sat May 28 17:55:01 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 28 17:55:18 2005
Subject: [mod_python] Mod python + apache problem
In-Reply-To: <200505282245.27308.bluszcz@jabberpl.org>
References: <200505282245.27308.bluszcz@jabberpl.org>
Message-ID: <2ad80401401d66bdee420b73a652895a@dscpl.com.au>

Read this:

   http://www.dscpl.com.au/projects/vampire/articles/modpython-001.html

This article is specifically for people in your situation.

Try and get a basic handler going before contemplating moving to 
publisher.

Graham

On 29/05/2005, at 6:45 AM, Rafal Zawadzki wrote:

> Hello, I am trying to write some web application using modpython.
>
> I failed at beginning, I cannot configure apache to work with 
> mod-python.
>
> I am using Debian Sarge, apache and libapache-mod-python2.3.
>
> Fragments my configurations are:
>
> <Directory /var/www/modpython>
>         AllowOverride All
>         AddHandler python-program .py
>         PythonHandler mptest.py #i tried also with mptest (withoout 
> .py)
>         PythonDebug On
> </Directory>
>
>
> my mptest.py looks like:
> jabberpl:/var/www/modpython# cat mptest.py
> from mod_python import apache
> def handler(req):
>         req.send_http_header()
>         req.write("Hello World!")
>         return apache.OK
> jabberpl:/var/www/modpython#
>
>
> I started apache again... URL: http://jabberpl.org/modpython/
>
> Apache show mptest.py source, any idea?
>
> -- 
> | Rafal "Bluszcz" Zawadzki : : :: ::|
> | jid/mail: bluszcz<>jabberpl.org ::|
> | http://bluszcz.jabberpl.org :: :::|
> |_JabberPL.org_sysadmin_:_::::_:::::|
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From grahamd at dscpl.com.au  Sat May 28 18:13:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat May 28 18:14:39 2005
Subject: [mod_python] Mod python + apache problem
In-Reply-To: <8764x3rre3.fsf@nb-acer.bettercom.de>
References: <200505282245.27308.bluszcz@jabberpl.org>
	<8764x3rre3.fsf@nb-acer.bettercom.de>
Message-ID: <7b3bd1a6dd7fd4bd84d49c71ef62c0d3@dscpl.com.au>

A few comments to avoid confusion.

On 29/05/2005, at 7:07 AM, Martin Lesser wrote:

> Rafal Zawadzki <bluszcz@jabberpl.org> writes:
>
>> Fragments my configurations are:
>>
>> <Directory /var/www/modpython>
>>         AllowOverride All
>>         AddHandler python-program .py
>>         PythonHandler mptest.py #i tried also with mptest (withoout 
>> .py)
>>         PythonDebug On
>> </Directory>
>
> Do you want to use the publisher-handler? (Makes sense)? Then put
>
>   PythonHandler mod_python.publisher
>
> into your apache-config or .htaccess

That isn't what his code suggested he was trying to do .... :-(

> Additionally you may want to put
>
>   MultiviewsMatch Handlers

I personally recommend turning off MultiViews altogether, it just 
causes too
many problems. If you want to specifically use of no extension or 
".html" instead
of ".py", would suggest you look at the Vampire glue extensions for 
mod_python.
Vampire gives you more control over what handler is executed for what 
extension
and thereby you can avoid altogether the chance that ".py" will work or 
be used
thus avoiding showing in your URLS how you web application is 
implemented.

> also in there so that URIs like
> http://your.domain/path/whatever
>
> will in fact be handeled by
>
> def whatever(req):
>   ...

Just be aware that there is more to changing to publisher than just 
changing
the name of the handler. How the handler is implemented is different. 
For
example the original handler would have needed to be rewritten as:

def whatever(req):
         req.content_type = "text/plain" # missing in original
         req.send_http_header()
         req.write("Hello World!")
         # do not return anything

or the much shorter form of:

def whatever():
         return "Hello World!") # content type automatically determined

> in the file path.py in your htdocs-documentroot
>
> IIRC you have to put
>
>   DirectoryIndex ... index.py ...
>
> into your global apache-conf to make the extension-less URIs work.

There are long standing issues with doing this. If you have "index.py" 
files in
multiple directories, you will suffer a reload of the module each time 
a URL
accesses a different one. If you have subdirectories, once a 
subdirectory one
is accessed you can no longer access the one in the parent directory as 
it
existed. Use of the same name can also result in cross module pollution.

Thus, specifying index.py as a directory index file in global Apache 
config
is not a good idea. Until 3.2 comes out, the only alternative to doing 
it
safely is have the index handler in each directory be a different named 
file
and specify the DirectoryIndex directive in the .htaccess file of each
directory, listing each distinct file as appropriate. Relying on 
handlers
for index files means the handler also needs to be called index() and 
you
couldn't call it "whatever()". With the automapping to index() method, 
the
name of the file becomes the last part of the URL.

These issues are covered in:

   http://issues.apache.org/jira/browse/MODPYTHON-9
   http://issues.apache.org/jira/browse/MODPYTHON-10
   http://issues.apache.org/jira/browse/MODPYTHON-11

For publisher at least, these problems should go away with mod_python 
3.2.
In the interim, you could also use Vampire whose equivalent to publisher
doesn't suffer the problems.

Graham

From ales at mur.at  Sat May 28 18:45:14 2005
From: ales at mur.at (Ales Zemene)
Date: Sat May 28 18:45:21 2005
Subject: [mod_python] Authentication and Publisher Handler
Message-ID: <20050528224513.GA29522@hornet.mur.at>

hi,
i am reffering to :
http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-more-complicated.html
after all i get Internal Server Error.
actually is it completely the same if i put 
AddHandler python-program .py
PythonHandler myscript
PythonAuthenHandler myscript
in apaches httpd.conf or .htaccess ?

and

http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-pub.html
there are 3 files : config, html file and form.py
i created it, but when i submit the html form, :
The requested URL /mptesting/form/email was not found on this server

thanks
Ales Zemene
-- 
From grahamd at dscpl.com.au  Sun May 29 01:13:56 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun May 29 01:14:09 2005
Subject: [mod_python] Authentication and Publisher Handler
In-Reply-To: <20050528224513.GA29522@hornet.mur.at>
References: <20050528224513.GA29522@hornet.mur.at>
Message-ID: <1301d4c3eb81cc98e531128b68f2ff94@dscpl.com.au>


On 29/05/2005, at 8:45 AM, Ales Zemene wrote:

> hi,
> i am reffering to :
> http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-more- 
> complicated.html
> after all i get Internal Server Error.
> actually is it completely the same if i put
> AddHandler python-program .py
> PythonHandler myscript
> PythonAuthenHandler myscript
> in apaches httpd.conf or .htaccess ?

Include:

   PythonDebug On

in the Apache configuration.

With this you might then see actual Python error message in browser.  
You should
be able to see it now in the Apache error log if there actually is one  
being
produced.

Post the actual code you used for the handlers if you still can't see  
what the
problem is. An internal server error is generally a coding error, or  
not returning
appropriate response from handler for way being used. Can also be a  
configuration
problem sometimes.

> and
>
> http://www.modpython.org/live/mod_python-2.7.8/doc-html/tut-pub.html
> there are 3 files : config, html file and form.py
> i created it, but when i submit the html form, :
> The requested URL /mptesting/form/email was not found on this server

What exactly did you call each of the files and are they in the same  
directory?

One reason for not found errors is where "MultiViews" is not turned  
"Off" and
you use just "form/email" instead of "form.py/email". When MultiView is  
on
Apache tries to be smart about determining the extension of the file to  
apply
request to and it can get confused with the way mod_python does things.  
It
can especially be a problem if you had "form.html" and "form.py".

Thus, try "form.py/email" instead of just "form/email". Also look in  
the Apache
error log file as at least with Apache 2.0 (not sure about 1.3), it  
will say
when it is applying content negotiation whereby it guesses correct  
extension
and that will give you a clue that that is the problem.

Graham

From ales at mur.at  Sun May 29 06:35:00 2005
From: ales at mur.at (Ales Zemene)
Date: Sun May 29 06:35:06 2005
Subject: [mod_python] Authentication and Publisher Handler
In-Reply-To: <1301d4c3eb81cc98e531128b68f2ff94@dscpl.com.au>
References: <20050528224513.GA29522@hornet.mur.at>
	<1301d4c3eb81cc98e531128b68f2ff94@dscpl.com.au>
Message-ID: <20050529103500.GB13345@hornet.mur.at>

hi, 
nice example, it works now.

citation of <grahamd@dscpl.com.au> from Sun, May 29, 2005 at 03:13:56PM +1000, Graham Dumpleton :
> Include:
> 
>   PythonDebug On
> 
> in the Apache configuration.
that was helping,
is there a way how to suppress any error messages to browser (or modify them)? 
(if i dont want to confuse user with "Internal Server Error" message)

> Thus, try "form.py/email" instead of just "form/email". Also look in  
hmmm. the html file should not be called  form.html
and there must really be form.py/email

> and that will give you a clue that that is the problem.
it did, i think one of the problems was also sendmail() checking for valid email
address supplied, is somewhere more info about it ?

thanks
Ales Zemene
From grahamd at dscpl.com.au  Sun May 29 07:17:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun May 29 07:17:47 2005
Subject: [mod_python] Authentication and Publisher Handler
In-Reply-To: <20050529103500.GB13345@hornet.mur.at>
References: <20050528224513.GA29522@hornet.mur.at>
	<1301d4c3eb81cc98e531128b68f2ff94@dscpl.com.au>
	<20050529103500.GB13345@hornet.mur.at>
Message-ID: <fc582253ff57683080e2de8d065ddd11@dscpl.com.au>


On 29/05/2005, at 8:35 PM, Ales Zemene wrote:

> hi,
> nice example, it works now.
>
> citation of <grahamd@dscpl.com.au> from Sun, May 29, 2005 at 
> 03:13:56PM +1000, Graham Dumpleton :
>> Include:
>>
>>   PythonDebug On
>>
>> in the Apache configuration.
> that was helping,
> is there a way how to suppress any error messages to browser (or 
> modify them)?
> (if i dont want to confuse user with "Internal Server Error" message)

At the level of mod_python not easily. You might investigate:

   http://httpd.apache.org/docs/mod/core.html#errordocument
   http://httpd.apache.org/docs-2.0/mod/core.html#errordocument

Apache 1.3 and 2.0 as appropriate.

Only thing you could do at mod_python level for within your own code is 
use a
try/except block around stuff and catch any exceptions and formulate a 
different
response page that indicates the error. This can get messy with 
mod_python.publisher
as you need to drop back to coding in the style of basic content 
handler, accepting
req as an input parameter, setting req.status to an appropriate error 
code and
then raising an exception to indicate equivalent of apache.OK.

I'd rather not go into how to do that further as as I said it can get 
messy.
Using mod_python.publisher for simple stuff is okay, but when you need 
to go
into that level of customisation it can be a pain. Generally people run 
with
PythonDebug set to On during development and simply fix any problems. 
When all
is working okay, turn PythonDebug to Off and live with users getting a 
generic
Internal Server response as formatted by Apache. The error is still 
logged to
the Apache log file to assist you later in debugging even when 
PythonDebug
is set to Off.

>> Thus, try "form.py/email" instead of just "form/email". Also look in
> hmmm. the html file should not be called  form.html
> and there must really be form.py/email

You should be able to have form.html and form.py with "form.py/email" 
as form
action, but as I mentioned in prior email, MultiViews needs to be off. 
Ie.,
in configuration for that directory where mod_python.publisher being 
used
set:

   Options -MultiViews

Graham

From listspam at flowtheory.net  Mon May 30 12:19:02 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Mon May 30 12:18:54 2005
Subject: [mod_python] Capturing PSP output
Message-ID: <651a907d7ab985c0eab597dd607bab32@flowtheory.net>

Hello --

I'm trying to do something a little unorthodox... I didn't know if 
anybody had tried it before... Within a PSP page, I want to run another 
PSP page and capture the output to a string.

To do a little testing, I wrote the following PSP page:

<%

def sAppend(self, thestring):
     if '__s__' not in dir(self):
         self.__s__ = ''
     self.__s__ += str(thestring)

oldReqWrite = req.write

req.write = sAppend

%>
<html>
<head>
     <title>Foo</title>
</head>
<body>
Bar!
</body>
</html>
<%
req.write = oldReqWrite
%>
<!-- <%=req.__s__%> -->

But that errors out with:

Traceback (most recent call last):
File "/usr/lib/python2.3/site-packages/mod_python/apache.py", line 29
9, in HandlerDispatch
     result = object(req)
File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 297,
in handler
     p.run()
File "/usr/lib/python2.3/site-packages/mod_python/psp.py", line 208,
in run
     exec code in global_scope
File "/var/www/signup/test.psp", line 12, in ?
     %>
File "/var/www/signup/test.psp", line 5, in sAppend
     self.__s__ =
AttributeError: 'str' object has no attribute '__s__'
Dispatch() returned non-integer.

Any thoughts on how to do this? Thanks!

-jag


-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050530/05170592/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
From administrator at leebrown.org  Mon May 30 15:19:59 2005
From: administrator at leebrown.org (Lee Brown)
Date: Mon May 30 15:20:32 2005
Subject: [mod_python] Accessing objects loaded with PythonImport
Message-ID: <388F06E86205@underdog>

Greetings!

I am trying to use the PythonImport directive to perform some initialization
routines for each vhost on server startup and then have my request handler
for that vhost access data and/or objects from those initial routines.
Unfortunately, I cannot for the life of me find the namespace in which these
objects reside from within the handler.  Here is what's going on:

Platform:

	Apache/2.0.52 (Win32) mod_python/3.1.3 Python/2.3.4 

In the 'main' section of httpd.conf:

	...
	AddHandler mod_python .py
	PythonPath
"sys.path+['c:/projects/webdev/sites/crashtest/config','c:/projects/webdev/s
ites/crashtest/home/xmltest']"
	PythonImport site_setup.py crashtest
	...

In the 'vhost' section of httpd.conf:

	<VirtualHost *:80>
		ServerName crashtest.leebrown.org
		...
		PythonInterpreter crashtest
		PythonDebug On
		...
    		<Directory
"C:/Projects/webdev/sites/crashtest/home/xmltest">
        		...
        		PythonHandler xmlhandler
        		DirectoryIndex xmlhandler.py
			...
    		</Directory>
		...
	</VirtualHost>

File site_setup.py (in its entirety):

	magic_string = 'Ooggaa-Booggaa!'

Finally, the file xml_handler.py:

	from mod_python import apache

	check = str(dir())

	def handler(req):
		...
    		req.write(req.interpreter + '<br />')
		req.write(check)
		...
    		return apache.OK

A user agent request to the local URL 'crashtest.leebrown.org/xmltest'
returns the following:

	crashtest
	['__builtins__', '__doc__', '__file__', '__mtime__', '__name__',
'apache', 'check', 'handler']

'crashtest' is the interpreter name I expected to get, however neither
'site_setup' nor 'magic_string' seems to be available to my handler
function.  I've explored around using the dir() function with magic_string,
site_setup.magic_string, __name__, etc., etc. without success.

I suspect that the answer is dirt simple, but I'll be horn-swaggled if I can
find it.

Best Regards,
Lee E. Brown
(leebrown@leebrown.org)

From nicolas.lehuen at gmail.com  Mon May 30 16:51:20 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon May 30 16:51:25 2005
Subject: [mod_python] Accessing objects loaded with PythonImport
In-Reply-To: <388F06E86205@underdog>
References: <388F06E86205@underdog>
Message-ID: <c298f2d7050530135153cc15cf@mail.gmail.com>

Hi Lee,

Unfortunately the answer is not as simple as it seems.

Try doing this in xmlhandler.py :

from mod_python import apache

from os.path import dirname
this_directory = dirname(__file__)
site_setup = apache.import_module("site_setup",path=[this_directory])

check = str(dir())

def handler(req):
           ...
           req.write(req.interpreter + '<br />')
           req.write(check)
           ...
           return apache.OK

We use apache.import_module to import the site_setup module, looking
in the current directory for site_setup.py[cd].

Regards,
Nicolas


2005/5/30, Lee Brown <administrator@leebrown.org>:
> Greetings!
> 
> I am trying to use the PythonImport directive to perform some initialization
> routines for each vhost on server startup and then have my request handler
> for that vhost access data and/or objects from those initial routines.
> Unfortunately, I cannot for the life of me find the namespace in which these
> objects reside from within the handler.  Here is what's going on:
> 
> Platform:
> 
>         Apache/2.0.52 (Win32) mod_python/3.1.3 Python/2.3.4
> 
> In the 'main' section of httpd.conf:
> 
>         ...
>         AddHandler mod_python .py
>         PythonPath
> "sys.path+['c:/projects/webdev/sites/crashtest/config','c:/projects/webdev/s
> ites/crashtest/home/xmltest']"
>         PythonImport site_setup.py crashtest
>         ...
> 
> In the 'vhost' section of httpd.conf:
> 
>         <VirtualHost *:80>
>                 ServerName crashtest.leebrown.org
>                 ...
>                 PythonInterpreter crashtest
>                 PythonDebug On
>                 ...
>                 <Directory
> "C:/Projects/webdev/sites/crashtest/home/xmltest">
>                         ...
>                         PythonHandler xmlhandler
>                         DirectoryIndex xmlhandler.py
>                         ...
>                 </Directory>
>                 ...
>         </VirtualHost>
> 
> File site_setup.py (in its entirety):
> 
>         magic_string = 'Ooggaa-Booggaa!'
> 
> Finally, the file xml_handler.py:
> 
>         from mod_python import apache
> 
>         check = str(dir())
> 
>         def handler(req):
>                 ...
>                 req.write(req.interpreter + '<br />')
>                 req.write(check)
>                 ...
>                 return apache.OK
> 
> A user agent request to the local URL 'crashtest.leebrown.org/xmltest'
> returns the following:
> 
>         crashtest
>         ['__builtins__', '__doc__', '__file__', '__mtime__', '__name__',
> 'apache', 'check', 'handler']
> 
> 'crashtest' is the interpreter name I expected to get, however neither
> 'site_setup' nor 'magic_string' seems to be available to my handler
> function.  I've explored around using the dir() function with magic_string,
> site_setup.magic_string, __name__, etc., etc. without success.
> 
> I suspect that the answer is dirt simple, but I'll be horn-swaggled if I can
> find it.
> 
> Best Regards,
> Lee E. Brown
> (leebrown@leebrown.org)
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From nicolas.lehuen at gmail.com  Mon May 30 17:00:21 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon May 30 17:00:27 2005
Subject: [mod_python] Accessing objects loaded with PythonImport
In-Reply-To: <c298f2d7050530135153cc15cf@mail.gmail.com>
References: <388F06E86205@underdog> <c298f2d7050530135153cc15cf@mail.gmail.com>
Message-ID: <c298f2d7050530140021140173@mail.gmail.com>

Also note that if the site_setup module is changed, it won't be
automatically reloaded unless xmlhandler.py is also changed. Plus, if
you have many site_setup.py in different directories, they will
collide with each other.

The dirt simple solution to the collision problem is simply to put
site_setup.py in a separate directory (not one accessible from
Apache), put the directory on the PYTHONPATH environment variable and
simply use a standard "import site_setup" instruction. But then, your
module won't be automagically reloaded when modified...

Note that mod_python 3.1.x is purposedly quite low-level. It does not
provide a high-level application framework, so things like data or
code sharing between pages are not handled. You should either build
your own framework or use one like Vampire
(http://www.dscpl.com.au/projects/vampire/). Meanwhile, we are trying
to provide a few more stepping stones in the upcoming 3.2.0 release.

Regards,
Nicolas

2005/5/30, Nicolas Lehuen <nicolas.lehuen@gmail.com>:
> Hi Lee,
> 
> Unfortunately the answer is not as simple as it seems.
> 
> Try doing this in xmlhandler.py :
> 
> from mod_python import apache
> 
> from os.path import dirname
> this_directory = dirname(__file__)
> site_setup = apache.import_module("site_setup",path=[this_directory])
> 
> check = str(dir())
> 
> def handler(req):
>            ...
>            req.write(req.interpreter + '<br />')
>            req.write(check)
>            ...
>            return apache.OK
> 
> We use apache.import_module to import the site_setup module, looking
> in the current directory for site_setup.py[cd].
> 
> Regards,
> Nicolas
> 
> 2005/5/30, Lee Brown <administrator@leebrown.org>:
> > Greetings!
> >
> > I am trying to use the PythonImport directive to perform some initialization
> > routines for each vhost on server startup and then have my request handler
> > for that vhost access data and/or objects from those initial routines.
> > Unfortunately, I cannot for the life of me find the namespace in which these
> > objects reside from within the handler.  Here is what's going on:
> >
> > Platform:
> >
> >         Apache/2.0.52 (Win32) mod_python/3.1.3 Python/2.3.4
> >
> > In the 'main' section of httpd.conf:
> >
> >         ...
> >         AddHandler mod_python .py
> >         PythonPath
> > "sys.path+['c:/projects/webdev/sites/crashtest/config','c:/projects/webdev/s
> > ites/crashtest/home/xmltest']"
> >         PythonImport site_setup.py crashtest
> >         ...
> >
> > In the 'vhost' section of httpd.conf:
> >
> >         <VirtualHost *:80>
> >                 ServerName crashtest.leebrown.org
> >                 ...
> >                 PythonInterpreter crashtest
> >                 PythonDebug On
> >                 ...
> >                 <Directory
> > "C:/Projects/webdev/sites/crashtest/home/xmltest">
> >                         ...
> >                         PythonHandler xmlhandler
> >                         DirectoryIndex xmlhandler.py
> >                         ...
> >                 </Directory>
> >                 ...
> >         </VirtualHost>
> >
> > File site_setup.py (in its entirety):
> >
> >         magic_string = 'Ooggaa-Booggaa!'
> >
> > Finally, the file xml_handler.py:
> >
> >         from mod_python import apache
> >
> >         check = str(dir())
> >
> >         def handler(req):
> >                 ...
> >                 req.write(req.interpreter + '<br />')
> >                 req.write(check)
> >                 ...
> >                 return apache.OK
> >
> > A user agent request to the local URL 'crashtest.leebrown.org/xmltest'
> > returns the following:
> >
> >         crashtest
> >         ['__builtins__', '__doc__', '__file__', '__mtime__', '__name__',
> > 'apache', 'check', 'handler']
> >
> > 'crashtest' is the interpreter name I expected to get, however neither
> > 'site_setup' nor 'magic_string' seems to be available to my handler
> > function.  I've explored around using the dir() function with magic_string,
> > site_setup.magic_string, __name__, etc., etc. without success.
> >
> > I suspect that the answer is dirt simple, but I'll be horn-swaggled if I can
> > find it.
> >
> > Best Regards,
> > Lee E. Brown
> > (leebrown@leebrown.org)
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>

From berry.groenendijk at gmail.com  Mon May 30 17:26:33 2005
From: berry.groenendijk at gmail.com (berry groenendijk)
Date: Mon May 30 17:26:38 2005
Subject: [mod_python] How to call a webpage on the same server?
Message-ID: <680bcd950505301426239a74f1@mail.gmail.com>

Hi!

Strictly speaking this is not a mod_python question. Please accept my 
apologies. Still I hope somebody can give me some hints. 

I am using mod_python 3.1.3 with mod_python servlets. I am experimenting 
with a REST-style interface to my website.

This is the situation. Page A in my website returns a RSS XML file. I want 
to use this output on page B in the same website. To present page B to the 
user I do a little server side conversion to HTML. The problem is: this is 
very slow! My guess is that it has to do with the way I call page A.

Here is part of the code of page B:

import os
import urllib
from cElementTree import iterparse

import _SitePage as sitepage
import _Config as config

class keywordshtml2(sitepage.SitePage):

 def write_content(self):
 
 url_keywords = "http://%s/keywords" % self.req.hostname
 
 self.writeln('<h1>List of articles by keyword</h1>')
 self.writeln("<p>Available keywords:")
 for event, elem in iterparse(urllib.urlopen(url_keywords)):
 if elem.tag == "item":
 self.writeln("<a href='#%(x)s'>%(x)s</a>, " % ({'x': elem.findtext
("title")}))
 elem.clear()
 self.writeln("</p>")
 
Is there a better way to call page A from within page B?

-- 
Berry Groenendijk
http://www.bersie.de
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050530/c76b8de3/attachment.html
From nicolas.lehuen at gmail.com  Mon May 30 18:31:32 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon May 30 18:31:36 2005
Subject: [mod_python] How to call a webpage on the same server?
In-Reply-To: <680bcd950505301426239a74f1@mail.gmail.com>
References: <680bcd950505301426239a74f1@mail.gmail.com>
Message-ID: <c298f2d70505301531383c1f59@mail.gmail.com>

Hi Berry,

First check whether this is really due to the way you call your page.
Don't parse the page, just call urllib2.urlopen and see what happens.

Regards,
Nicolas

2005/5/30, berry groenendijk <berry.groenendijk@gmail.com>:
> Hi!
>  
>  Strictly speaking this is not a mod_python question. Please accept my
> apologies. Still I hope somebody can give me some hints. 
>  
>  I am using mod_python 3.1.3 with mod_python servlets. I am experimenting
> with a REST-style interface to my website.
>  
>  This is the situation. Page A in my website returns a RSS XML file. I want
> to use this output on page B in the same website. To present page B to the
> user I do a little server side conversion to HTML. The problem is: this is
> very slow! My guess is that it has to do with the way I call page A.
>  
>  Here is part of the code of page B:
>  
>  
> import os
>  import urllib
>  from cElementTree import iterparse
>  
>  import _SitePage as sitepage
>  import _Config as config
>  
>  class keywordshtml2(sitepage.SitePage):
>  
>      def write_content(self):
>      
>          url_keywords = "http://%s/keywords" % self.req.hostname
>      
>          self.writeln('<h1>List of articles by keyword</h1>')
>          self.writeln("<p>Available keywords:")
>          for event, elem in iterparse(urllib.urlopen(url_keywords)):
>              if elem.tag == "item":
>                  self.writeln("<a href='#%(x)s'>%(x)s</a>, " % ({'x':
> elem.findtext("title")}))
>                  elem.clear()
>          self.writeln("</p>")
>  
>  Is there a better way to call page A from within page B?
>  
>  -- 
> Berry Groenendijk
> http://www.bersie.de
>  
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
>

From grahamd at dscpl.com.au  Mon May 30 18:37:30 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 30 18:37:46 2005
Subject: [mod_python] Capturing PSP output
In-Reply-To: <651a907d7ab985c0eab597dd607bab32@flowtheory.net>
References: <651a907d7ab985c0eab597dd607bab32@flowtheory.net>
Message-ID: <a92d6ac9e3f012a57953995235950a70@dscpl.com.au>


On 31/05/2005, at 2:19 AM, Joshua Ginsberg wrote:

> Hello --
>
> I'm trying to do something a little unorthodox... I didn't know if 
> anybody had tried it before... Within a PSP page, I want to run 
> another PSP page and capture the output to a string.
>
> To do a little testing, I wrote the following PSP page:
>
> <%
>
> def sAppend(self, thestring):
>     if '__s__' not in dir(self):
>         self.__s__ = ''
>     self.__s__ += str(thestring)
>
> oldReqWrite = req.write
>
> req.write = sAppend

This is a bit confusing. Your method accepts a "self" parameter as if 
it is a
method of a class when it isn't. Just because you replace an existing 
instance
method will not turn your one into one.

The result is that the string to be output is being passed as self and 
string
doesn't have a "__s__" member.

There are other problems with using "__s__" as well but rather than go 
into it,
you should just look at:

   http://www.modpython.org/pipermail/mod_python/2005-May/018134.html

That code could probably still be cleaned up a bit perhaps as certain 
things
don't need to be done, also not sure why other things are being done 
either.
If I get a chance later I'll see if I can come up with a more 
streamlined
version.

BTW, did you want to actually reference the original "req" object for 
any
data. The example referenced obviously doesn't allow this as it 
completely
replaces the "req" object with a StringIO object.

Graham

From grahamd at dscpl.com.au  Mon May 30 19:28:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon May 30 19:29:08 2005
Subject: [mod_python] Accessing objects loaded with PythonImport
In-Reply-To: <c298f2d7050530135153cc15cf@mail.gmail.com>
References: <388F06E86205@underdog> <c298f2d7050530135153cc15cf@mail.gmail.com>
Message-ID: <5c6b9bd58118605d0871d4f37a09fea1@dscpl.com.au>


On 31/05/2005, at 6:51 AM, Nicolas Lehuen wrote:

> Hi Lee,
>
> Unfortunately the answer is not as simple as it seems.
>
> Try doing this in xmlhandler.py :
>
> from mod_python import apache
>
> from os.path import dirname
> this_directory = dirname(__file__)
> site_setup = apache.import_module("site_setup",path=[this_directory])
>
> check = str(dir())
>
> def handler(req):
>            ...
>            req.write(req.interpreter + '<br />')
>            req.write(check)
>            ...
>            return apache.OK
>
> We use apache.import_module to import the site_setup module, looking

Just to clarify Nicolas' answer a bit.

Although PythonImport imports a module at startup, it is still a  
distinct module
and thus why you don't see it within the globals of your handler. Even  
when you
use apache.import_module() as above, you still need to refer to the  
module to
get the data. Thus, to see your data, should change:

   check = str(dir())

to:

   check = str(dir(site_setup))

and reference data as:

   site_setup.magic_string

as appropriate.

In respect of Nicolas' comment in his other email, ie.,

> Plus, if
> you have many site_setup.py in different directories, they will
> collide with each other.

True, at least where we are talking about the same interpreter. As you  
are
talking about different interpreters for each virtual host, you could  
have more
than one. You would though need to ensure that the files were in  
different
directories and each interpreter set the Python path to only the one  
directory
appropriate to that interpreter.

If your intent is for this module only to be used for configuration, as  
Nicolas
pointed out, you may want to have a look at Vampire, which includes a  
configuration
mechanism based on use of Python ConfigParser module.

In your case with multiple sites, you appear to be reserving a "config"  
directory
for common stuff in which case with Vampire all you would need to do is  
create a
file called something like "site_setup.cf" in the "config" directory.  
It may for
example contain:

     [Settings]

     magic_string = Ooggaa-Booggaa!

In your handler you could then say:

     from mod_python import apache
     import vampire

     def handler(req):
         config = vampire.loadConfig(req,"config/site_setup.cf")
         magic_string = config.get("Settings","magic_string")
         req.content_type = "text/plain"
         req.send_http_header()
         req.write("magic_string = %s"%magic_string)
         return apache.OK

This will work whether or not you actually use Vampire for its  
mechanism for
dispatching to different handlers based on resource name. Ie., it  
should work
with a standard handler of your own creation.

Further, this handler could be in subdirectory, ie., not in the root  
directory
where "config" exists, as the configuration mechanism will search back  
up the
hierarchy to the root of where PythonHandler is defined (as necessary),  
looking
for "config/site_setup.cf". This means you do not need to hard code any  
paths
to anything in either the Apache configuration or your handlers.  
Because the
configuration file is looked up when required, you can change it  
whenever you
want and do not need to restart Apache for changes to be reflected.

There is a little bit of information on the configuration mechanism in  
Vampire
in the overview for it:

    
http://www.dscpl.com.au/projects/vampire/articles/vampire 
-001.html#configuration-mechanism

Hope this is of interest.

Graham

From bud at comune.grosseto.it  Tue May 31 06:53:45 2005
From: bud at comune.grosseto.it (Bud P. Bruegger)
Date: Tue May 31 06:47:09 2005
Subject: [mod_python] apache 2.0.54 and SSLUserName
In-Reply-To: <1116983346.20687@dscpl.user.openhosting.com>
Message-ID: <5.2.1.1.0.20050531114749.02bd2280@mail.comune.grosseto.it>

Sorry for the late reaction on this--I'm just catching up on things after a 
trip.

SSLUserName with +fakeBasicAuth may actually be a solution to my 
problem.  Haven't had a chance to try this yet--but here is what my 
intuition says:

Since I didn't use SSLUserName in my test and since I set SSLVerifyClient 
to optional_no_ca (for demonstration with any eID), mod-ssl seems not to 
set req.user.  I believe taht adding SSLUserName and requiring client cert 
verification would possibly set req.user sometime in the access stage such 
that it would be accessible (via req.user, not via env vars) from 
mod-python in later stages (authen, authz, of fixup).

Will try it out and let you know whether it works.

best cheers
-b


At 21.09 24/05/2005 -0400, Graham Dumpleton wrote:
>Eric Jonas wrote ..
> > > Not a solution, but try a handler:
> > >
> > > def handler(req):
> > >   req.add_common_vars()
> > >   req.content_type = "text/plain"
> > >   req.send_http_header()
> > >   for name in req.subprocess_env.keys():
> > >     print >> req, name, req.subprocess_env[name]
> > >   return apache.OK
> > >
> > > You might find that the specific bit of information you are after is
> > in one of
> > > the SSL variables which are populated into the req.subprocess_env table
> > > thus giving you an alternate way of finding it.
> >
> >
> > Alas, I still get:
> >
> > REMOTE_PORT 33059
> > REMOTE_USER /C=US/ST=Massachusetts/O=Massachusetts Institute of
> > Technology/OU=Client CA v1/CN=Eric M Jonas/emailAddress=jonas@MIT.EDU
> > AUTH_TYPE Basic
>
>These aren't the variables I am thinking of. If the handler is executed as
>a content handler (not earlier phases) and mod_ssl is being used, there
>should be a host of "SSL_*" variables available. The list is at the end of
>this email. It is these variables I was suggesting may have just the specific
>bit you want as a separate item.
>
>Unfortunately, if you are trying to get the information in a authhandler
>you will not have access to them as they are only populated by the SSL
>fixup handler. There is also no gaurantee that the SSL fixuphandler is
>run before a mod_python fixuphandler, so you can't even attempt to
>access it from the mod_python fixuphandler.
>
>This issue was recently talked about on the mailing list so you may want
>to review the discussion in the mailing list archive, starting with:
>
>   http://www.modpython.org/pipermail/mod_python/2005-May/018157.html
>   http://www.modpython.org/pipermail/mod_python/2005-May/018163.html
>   http://www.modpython.org/pipermail/mod_python/2005-May/018163.html
>
>In the last quoted message I posted code (untested), that may allow you
>to access all these SSL variables from an earlier handler than the content
>handler. if you needed to do it from the authhandler. The URLs for the
>attachments are broken though. I think those which will work are:
>
> 
>http://www.modpython.org/pipermail/mod_python/attachments/20050523/9fa0275b/_mp_mod_ssl.obj
> 
>http://www.modpython.org/pipermail/mod_python/attachments/20050523/9fa0275b/setup.obj
>
>If they don't, let me know and will send files to you.
>
>Anyway, this is on the basis that you are in fact relying on mod_ssl.
>
>Below are all the SSL variables.
>
>static const char *ssl_hook_Fixup_vars[] = {
>     "SSL_VERSION_INTERFACE",
>     "SSL_VERSION_LIBRARY",
>     "SSL_PROTOCOL",
>     "SSL_CIPHER",
>     "SSL_CIPHER_EXPORT",
>     "SSL_CIPHER_USEKEYSIZE",
>     "SSL_CIPHER_ALGKEYSIZE",
>     "SSL_CLIENT_VERIFY",
>     "SSL_CLIENT_M_VERSION",
>     "SSL_CLIENT_M_SERIAL",
>     "SSL_CLIENT_V_START",
>     "SSL_CLIENT_V_END",
>     "SSL_CLIENT_S_DN",
>     "SSL_CLIENT_S_DN_C",
>     "SSL_CLIENT_S_DN_ST",
>     "SSL_CLIENT_S_DN_L",
>     "SSL_CLIENT_S_DN_O",
>     "SSL_CLIENT_S_DN_OU",
>     "SSL_CLIENT_S_DN_CN",
>     "SSL_CLIENT_S_DN_T",
>     "SSL_CLIENT_S_DN_I",
>     "SSL_CLIENT_S_DN_G",
>     "SSL_CLIENT_S_DN_S",
>     "SSL_CLIENT_S_DN_D",
>     "SSL_CLIENT_S_DN_UID",
>     "SSL_CLIENT_S_DN_Email",
>     "SSL_CLIENT_I_DN",
>     "SSL_CLIENT_I_DN_C",
>     "SSL_CLIENT_I_DN_ST",
>     "SSL_CLIENT_I_DN_L",
>     "SSL_CLIENT_I_DN_O",
>     "SSL_CLIENT_I_DN_OU",
>     "SSL_CLIENT_I_DN_CN",
>     "SSL_CLIENT_I_DN_T",
>     "SSL_CLIENT_I_DN_I",
>     "SSL_CLIENT_I_DN_G",
>     "SSL_CLIENT_I_DN_S",
>     "SSL_CLIENT_I_DN_D",
>     "SSL_CLIENT_I_DN_UID",
>     "SSL_CLIENT_I_DN_Email",
>     "SSL_CLIENT_A_KEY",
>     "SSL_CLIENT_A_SIG",
>     "SSL_SERVER_M_VERSION",
>     "SSL_SERVER_M_SERIAL",
>     "SSL_SERVER_V_START",
>     "SSL_SERVER_V_END",
>     "SSL_SERVER_S_DN",
>     "SSL_SERVER_S_DN_C",
>     "SSL_SERVER_S_DN_ST",
>     "SSL_SERVER_S_DN_L",
>     "SSL_SERVER_S_DN_O",
>     "SSL_SERVER_S_DN_OU",
>     "SSL_SERVER_S_DN_CN",
>     "SSL_SERVER_S_DN_T",
>     "SSL_SERVER_S_DN_I",
>     "SSL_SERVER_S_DN_G",
>     "SSL_SERVER_S_DN_S",
>     "SSL_SERVER_S_DN_D",
>     "SSL_SERVER_S_DN_UID",
>     "SSL_SERVER_S_DN_Email",
>     "SSL_SERVER_I_DN",
>     "SSL_SERVER_I_DN_C",
>     "SSL_SERVER_I_DN_ST",
>     "SSL_SERVER_I_DN_L",
>     "SSL_SERVER_I_DN_O",
>     "SSL_SERVER_I_DN_OU",
>     "SSL_SERVER_I_DN_CN",
>     "SSL_SERVER_I_DN_T",
>     "SSL_SERVER_I_DN_I",
>     "SSL_SERVER_I_DN_G",
>     "SSL_SERVER_I_DN_S",
>     "SSL_SERVER_I_DN_D",
>     "SSL_SERVER_I_DN_UID",
>     "SSL_SERVER_I_DN_Email",
>     "SSL_SERVER_A_KEY",
>     "SSL_SERVER_A_SIG",
>     "SSL_SESSION_ID",
>     NULL
>};
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python


-------------------------------------------------------------------------------------------------
Ing. Bud P. Bruegger, Ph.D.                 +39-0564-488577 
(voice),  -21139 (fax)
Servizio Elaborazione Dati                    e-mail:  bud@comune.grosseto.it
Comune di 
Grosseto                            http://www.comune.grosseto.it/cie/
Via Ginori, 
43                                      http://OpenPortalGuard.sf.net
58100 Grosseto (Tuscany, Italy)           jabber:  bud@amessage.info

Free Software in Public Administration:  not just a good idea, but a necessity

Perfection is attained, not when there is nothing more to be added, but 
when there is nothing more to be taken away -- Antoine de Saint-Exupery 

From listspam at flowtheory.net  Tue May 31 10:35:57 2005
From: listspam at flowtheory.net (Joshua Ginsberg)
Date: Tue May 31 10:35:48 2005
Subject: [mod_python] How to call a webpage on the same server?
In-Reply-To: <c298f2d70505301531383c1f59@mail.gmail.com>
References: <680bcd950505301426239a74f1@mail.gmail.com>
	<c298f2d70505301531383c1f59@mail.gmail.com>
Message-ID: <f1d506e0a546c088fe4563f033fb6101@flowtheory.net>

If you're using the Session module, you may want to consider if using 
Session.unlock() will be useful -- it will clear the server lock for 
that session.

-jag

-------------- next part --------------
A non-text attachment was scrubbed...
Name: unknown.jpg
Type: image/jpeg
Size: 1984 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050531/50a92fb6/unknown.jpg
-------------- next part --------------

Joshua Ginsberg -- joshg@brainstorminternet.net
Brainstorm Internet Network Operations
970-247-1442 x131
On May 30, 2005, at 4:31 PM, Nicolas Lehuen wrote:

> Hi Berry,
>
> First check whether this is really due to the way you call your page.
> Don't parse the page, just call urllib2.urlopen and see what happens.
>
> Regards,
> Nicolas
>
> 2005/5/30, berry groenendijk <berry.groenendijk@gmail.com>:
>> Hi!
>>
>>  Strictly speaking this is not a mod_python question. Please accept my
>> apologies. Still I hope somebody can give me some hints.
>>
>>  I am using mod_python 3.1.3 with mod_python servlets. I am 
>> experimenting
>> with a REST-style interface to my website.
>>
>>  This is the situation. Page A in my website returns a RSS XML file. 
>> I want
>> to use this output on page B in the same website. To present page B 
>> to the
>> user I do a little server side conversion to HTML. The problem is: 
>> this is
>> very slow! My guess is that it has to do with the way I call page A.
>>
>>  Here is part of the code of page B:
>>
>>
>> import os
>>  import urllib
>>  from cElementTree import iterparse
>>
>>  import _SitePage as sitepage
>>  import _Config as config
>>
>>  class keywordshtml2(sitepage.SitePage):
>>
>>      def write_content(self):
>>
>>          url_keywords = "http://%s/keywords" % self.req.hostname
>>
>>          self.writeln('<h1>List of articles by keyword</h1>')
>>          self.writeln("<p>Available keywords:")
>>          for event, elem in iterparse(urllib.urlopen(url_keywords)):
>>              if elem.tag == "item":
>>                  self.writeln("<a href='#%(x)s'>%(x)s</a>, " % ({'x':
>> elem.findtext("title")}))
>>                  elem.clear()
>>          self.writeln("</p>")
>>
>>  Is there a better way to call page A from within page B?
>>
>>  --
>> Berry Groenendijk
>> http://www.bersie.de
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From berry.groenendijk at gmail.com  Tue May 31 17:29:10 2005
From: berry.groenendijk at gmail.com (berry groenendijk)
Date: Tue May 31 17:29:18 2005
Subject: [mod_python] How to call a webpage on the same server?
In-Reply-To: <c298f2d70505301531383c1f59@mail.gmail.com>
References: <680bcd950505301426239a74f1@mail.gmail.com>
	<c298f2d70505301531383c1f59@mail.gmail.com>
Message-ID: <680bcd95050531142918f5147f@mail.gmail.com>

Hi Nicolas,

I have been doing some experimenting. Like you said I just called 
urllib2.urlopen. Still this is way too slow. To get the response it takes 
about 40 milliseconds.

I then ran a little Python script that calls the same page, using the 
method. I started this script on the command line. When I call that page it 
takes about 21 milliseconds. About twice as fast.

When I run Siege against page A it reaches about 42 transactions/sec, so 
about 20 milliseconds per request.

Then I build a page that uses Sarissa and and the httprequest object. So, 
first the HTML page gets loaded. On that page is a button which fires a 
javascript. That script loads the same page A. It then loads an xslt file 
and then does a conversion. Despite the conversion this takes less than 4(!) 
milliseconds.

Conclusion: hmmm, difficult. Seems that urllib2.urlopen isn't that slow 
after all. Still it looks like it is twice as slow called from within 
mod_python compared to when you fetch that same page via Python in a 
terminal window. What does surprise me is how quick the client side 
javascript code is. It could be that my time measurement there isn't that 
accurate. But, it also "feels" very quick. Perhaps this has something to do 
with the browser (Firefox) keeping connections open to the webserver.

Hmmm, I have to rethink what I am trying to accomplish here... I will have 
to do some more experimenting.

Thanks very much for your help!

Berry.

On 5/31/05, Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:
> 
> Hi Berry,
> 
> First check whether this is really due to the way you call your page.
> Don't parse the page, just call urllib2.urlopen and see what happens.
> 
> Regards,
> Nicolas
> 
> 2005/5/30, berry groenendijk <berry.groenendijk@gmail.com>:
> > Hi!
> >
> > Strictly speaking this is not a mod_python question. Please accept my
> > apologies. Still I hope somebody can give me some hints.
> >
> > I am using mod_python 3.1.3 with mod_python servlets. I am experimenting
> > with a REST-style interface to my website.
> >
> > This is the situation. Page A in my website returns a RSS XML file. I 
> want
> > to use this output on page B in the same website. To present page B to 
> the
> > user I do a little server side conversion to HTML. The problem is: this 
> is
> > very slow! My guess is that it has to do with the way I call page A.
> >
> > Here is part of the code of page B:
> >
> >
> > import os
> > import urllib
> > from cElementTree import iterparse
> >
> > import _SitePage as sitepage
> > import _Config as config
> >
> > class keywordshtml2(sitepage.SitePage):
> >
> > def write_content(self):
> >
> > url_keywords = "http://%s/keywords" % self.req.hostname
> >
> > self.writeln('<h1>List of articles by keyword</h1>')
> > self.writeln("<p>Available keywords:")
> > for event, elem in iterparse(urllib.urlopen(url_keywords)):
> > if elem.tag == "item":
> > self.writeln("<a href='#%(x)s'>%(x)s</a>, " % ({'x':
> > elem.findtext("title")}))
> > elem.clear()
> > self.writeln("</p>")
> >
> > Is there a better way to call page A from within page B?
> >
> > --
> > Berry Groenendijk
> > http://www.bersie.de
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> 



-- 
Berry Groenendijk
http://www.bersie.de
Skype: berryg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20050531/54664ebd/attachment.html
From grahamd at dscpl.com.au  Tue May 31 21:19:49 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue May 31 21:20:01 2005
Subject: [mod_python] Capturing PSP output
Message-ID: <1117588789.14917@dscpl.user.openhosting.com>

Only just got the chance to revisit this. Here is an alternate bit of
code which avoids having to munge PSP code. This only works for
where PSP code is stored in a file. It bypasses any caching mechanism
present in the PSP class, but you could add your own if need be. It
also replaces the request object entirely with a dummy object purely
for the purposes of collecting output.

from mod_python import apache
from mod_python import _psp
  
import os
import StringIO

def _psp_to_str(filename,vars={}):
  directory,file = os.path.split(filename)

  code = _psp.parse(file,directory+'/')

  class _MPStringIO(StringIO.StringIO):
    def write(self,string,flush=1):
      StringIO.StringIO.write(self,string)

  vars["req"] = _MPStringIO()

  exec code in vars

  return vars["req"].getvalue()

def handler(req):
  directory = os.path.dirname(__file__)
  filename = os.path.join(directory,"_sample.psp")
  content = _psp_to_str(filename)

  req.content_type = "text/html"
  req.send_http_header()
  req.write(content)

  return apache.OK



Graham Dumpleton wrote ..
> 
> On 31/05/2005, at 2:19 AM, Joshua Ginsberg wrote:
> 
> > Hello --
> >
> > I'm trying to do something a little unorthodox... I didn't know if 
> > anybody had tried it before... Within a PSP page, I want to run 
> > another PSP page and capture the output to a string.
> >
> > To do a little testing, I wrote the following PSP page:
> >
> > <%
> >
> > def sAppend(self, thestring):
> >     if '__s__' not in dir(self):
> >         self.__s__ = ''
> >     self.__s__ += str(thestring)
> >
> > oldReqWrite = req.write
> >
> > req.write = sAppend
> 
> This is a bit confusing. Your method accepts a "self" parameter as if 
> it is a
> method of a class when it isn't. Just because you replace an existing 
> instance
> method will not turn your one into one.
> 
> The result is that the string to be output is being passed as self and
> string
> doesn't have a "__s__" member.
> 
> There are other problems with using "__s__" as well but rather than go
> into it,
> you should just look at:
> 
>    http://www.modpython.org/pipermail/mod_python/2005-May/018134.html
> 
> That code could probably still be cleaned up a bit perhaps as certain 
> things
> don't need to be done, also not sure why other things are being done 
> either.
> If I get a chance later I'll see if I can come up with a more 
> streamlined
> version.
> 
> BTW, did you want to actually reference the original "req" object for 
> any
> data. The example referenced obviously doesn't allow this as it 
> completely
> replaces the "req" object with a StringIO object.
> 
> Graham
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
