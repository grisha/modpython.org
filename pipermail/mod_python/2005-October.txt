From paul.hide at gmail.com  Sat Oct  1 06:36:19 2005
From: paul.hide at gmail.com (Paul Hide)
Date: Sat Oct  1 06:36:26 2005
Subject: [mod_python] Sessions function curiously in Internet Explorer
Message-ID: <b117fb190510010336n134cdb7eqa6b4aaa7aeece835@mail.gmail.com>

The code below behaves differently in FireFox and Internet Explorer, is that
because there is something wrong with the code? Or is it just IE?

Versions are Apache 2.0.54, mod_python 3.1.3 running on win 2k, but the same
is true when pages are served from Debian Sarge Box with slightly different
versions of the server and module.

Paul Hide

#FireFox 1.07 counter increments each time you click go
#IntExp 5.5 & 6 counter never gets beyon 2 unless you delete the cache
between clicks

from mod_python import Session

def test(req):
sess = Session.Session(req)
if sess.is_new():
sess.set_timeout(100)
sess['myvar'] = 1
req.write('new ')
req.write(sess.id())
#if you dont save it, it is new every time
sess.save()
else:
sess.load()
sess['myvar'] = sess['myvar'] + 1
req.write(str(sess['myvar']))
sess.save()
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051001/365a073e/attachment.html
From bluszcz at jabberpl.org  Sat Oct  1 07:04:35 2005
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Sat Oct  1 07:05:03 2005
Subject: [mod_python] Easiest method to upload file?
Message-ID: <200510011304.35933.bluszcz@jabberpl.org>

Hi. Which method is easiest to upload file using psp (mod_python 3.1)?

Bluszcz
-- 
Rafal Zawadzki  [jid/mail: bluszcz@jabberpl.org]
  [homepage: http://jabberpl.org ]

From bluszcz at jabberpl.org  Sat Oct  1 07:39:34 2005
From: bluszcz at jabberpl.org (Rafal Zawadzki)
Date: Sat Oct  1 07:39:54 2005
Subject: [mod_python] Easiest method to upload file?
In-Reply-To: <200510011304.35933.bluszcz@jabberpl.org>
References: <200510011304.35933.bluszcz@jabberpl.org>
Message-ID: <200510011339.35044.bluszcz@jabberpl.org>

Dnia sobota 01 pa?dziernik 2005 13:04, Rafal Zawadzki napisa?:
> Hi. Which method is easiest to upload file using psp (mod_python 3.1)?

Sorry, this question was so stupid. Please, forget :)

bluszcz

-- 
Rafal Zawadzki  [jid/mail: bluszcz@jabberpl.org]
  [homepage: http://jabberpl.org ]


From jg.lists at sympatico.ca  Sat Oct  1 09:53:49 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sat Oct  1 09:49:01 2005
Subject: [mod_python] Sessions function curiously in Internet Explorer
In-Reply-To: <b117fb190510010336n134cdb7eqa6b4aaa7aeece835@mail.gmail.com>
References: <b117fb190510010336n134cdb7eqa6b4aaa7aeece835@mail.gmail.com>
Message-ID: <433E94ED.3090501@sympatico.ca>

The code below works fine for me with IE 6.0 using Crossover office. 
(Actually I made one small change to explicitly set req.content_type = 
'text/plain').

As an aside you don't need to call sess.load(). load() is automatically 
called when you create the session object if valid session data exists.

Jim

Paul Hide wrote:
> The code below behaves differently in FireFox and Internet Explorer, is 
> that because there is something wrong with the code? Or is it just IE?
> 
> Versions are Apache 2.0.54, mod_python 3.1.3 running on win 2k, but the 
> same is true when pages are served from Debian Sarge Box with slightly 
> different versions of the server and module.
> 
> Paul Hide
> 
> #FireFox 1.07 counter increments each time you click go
> #IntExp 5.5 & 6 counter never gets beyon 2 unless you delete the cache 
> between clicks
> 
> from mod_python import Session
> 
> def test(req):
>         sess = Session.Session(req)
>         if sess.is_new():
>             sess.set_timeout(100)
>             sess['myvar'] = 1
>             req.write('new ')
>             req.write(sess.id())
>             #if you dont save it, it is new every time
>             sess.save()
>         else:
>             sess.load()
>             sess['myvar'] = sess['myvar'] + 1
>             req.write(str(sess['myvar']))
>             sess.save()
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nicocat at gmail.com  Sat Oct  1 19:51:36 2005
From: nicocat at gmail.com (Nicocat)
Date: Sat Oct  1 19:51:42 2005
Subject: [mod_python] mod_python newbie help
Message-ID: <34a8c2400510011651s59d9e4cp662796786f244a90@mail.gmail.com>

I'm stumped. I've searched high and low for an answer, but I can't find
anything. I installed the latest Python as of this e-mail and mod_python
3.2.2b on Apache 2.0.54 on Windows XP. I got the test handler program to
work (so any .py file accessed just outputs "Hello world!") and the
Publisher handler to work. However, what I really want to get to work is to
be able to, say, type http://localhost/index.py and have it execute, which
will output HTML code for the webpage automatically, and have it display
that HTML code. I know this has to be possible, but how do I do it? Sorry
for the newbie question.

-Nico
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051001/9a1bc46e/attachment.html
From nicolas.lehuen at gmail.com  Sun Oct  2 14:33:05 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sun Oct  2 14:33:10 2005
Subject: [mod_python] mod_python newbie help
In-Reply-To: <34a8c2400510011651s59d9e4cp662796786f244a90@mail.gmail.com>
References: <34a8c2400510011651s59d9e4cp662796786f244a90@mail.gmail.com>
Message-ID: <c298f2d70510021133i24796143n@mail.gmail.com>

Hi,

If you've got the publisher handler to work, then that's precisely what you
want. Have a look at this tutorial :

http://www.modpython.org/live/current/doc-html/tut-pub.html

Regards,
Nicolas

2005/10/2, Nicocat <nicocat@gmail.com>:
>
> I'm stumped. I've searched high and low for an answer, but I can't find
> anything. I installed the latest Python as of this e-mail and mod_python
> 3.2.2b on Apache 2.0.54 on Windows XP. I got the test handler program to
> work (so any .py file accessed just outputs "Hello world!") and the
> Publisher handler to work. However, what I really want to get to work is to
> be able to, say, type http://localhost/index.py and have it execute, which
> will output HTML code for the webpage automatically, and have it display
> that HTML code. I know this has to be possible, but how do I do it? Sorry
> for the newbie question.
>
> -Nico
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051002/38ff191c/attachment.html
From eltuza at gmail.com  Mon Oct  3 13:53:37 2005
From: eltuza at gmail.com (El TuZa)
Date: Mon Oct  3 13:53:44 2005
Subject: [mod_python] mod_python newbie help
In-Reply-To: <c298f2d70510021133i24796143n@mail.gmail.com>
References: <34a8c2400510011651s59d9e4cp662796786f244a90@mail.gmail.com>
	<c298f2d70510021133i24796143n@mail.gmail.com>
Message-ID: <1005e9c00510031053g547ec9f1red14a181e1dc1037@mail.gmail.com>

Hi list, my question is about handling "compilation" errors (using
publisher). for example if someone calls a function with no params it
returns the error with all the python specifications about it, but i
just want to inform that person my own message or just call an error
function. Can this be done? thanks a lot
tuza

From eltuza at gmail.com  Mon Oct  3 13:54:29 2005
From: eltuza at gmail.com (El TuZa)
Date: Mon Oct  3 13:54:34 2005
Subject: [mod_python] publishers error handling
Message-ID: <1005e9c00510031054h6f2ac777m9f3b24361fe2c3b1@mail.gmail.com>

Hi list, my question is about handling "compilation" errors (using
publisher). for example if someone calls a function with no params it
returns the error with all the python specifications about it, but i
just want to inform that person my own message or just call an error
function. Can this be done? thanks a lot
tuza

From list at joreybump.com  Mon Oct  3 14:18:24 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Oct  3 14:18:33 2005
Subject: [mod_python] mod_python newbie help
In-Reply-To: <1005e9c00510031053g547ec9f1red14a181e1dc1037@mail.gmail.com>
References: <34a8c2400510011651s59d9e4cp662796786f244a90@mail.gmail.com>	<c298f2d70510021133i24796143n@mail.gmail.com>
	<1005e9c00510031053g547ec9f1red14a181e1dc1037@mail.gmail.com>
Message-ID: <434175F0.6060308@joreybump.com>

El TuZa wrote:
> Hi list, my question is about handling "compilation" errors (using
> publisher). for example if someone calls a function with no params it
> returns the error with all the python specifications about it, but i
> just want to inform that person my own message or just call an error
> function. Can this be done? thanks a lot

You can suppress such errors by setting:

  PythonDebug off

and/or use conventional Python exceptions to handle errors:

try:
     a = req.form['myvar']
except KeyError, key:
     return '<h1>No form variable by that name: %s</h1>' % (key,)
From grahamd at dscpl.com.au  Mon Oct  3 16:59:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct  3 17:00:20 2005
Subject: [mod_python] mod_python newbie help
In-Reply-To: <434175F0.6060308@joreybump.com>
References: <34a8c2400510011651s59d9e4cp662796786f244a90@mail.gmail.com>	<c298f2d70510021133i24796143n@mail.gmail.com>
	<1005e9c00510031053g547ec9f1red14a181e1dc1037@mail.gmail.com>
	<434175F0.6060308@joreybump.com>
Message-ID: <b7029038ecf4a5f36a4abb9c61cb4f27@dscpl.com.au>


On 04/10/2005, at 4:18 AM, Jorey Bump wrote:

> El TuZa wrote:
>> Hi list, my question is about handling "compilation" errors (using
>> publisher). for example if someone calls a function with no params it
>> returns the error with all the python specifications about it, but i
>> just want to inform that person my own message or just call an error
>> function. Can this be done? thanks a lot
>
> You can suppress such errors by setting:
>
>  PythonDebug off

Also look at the ErrorDocument directive in Apache for a way of
triggering off special code to generate customised error pages for
different Apache error types.

> and/or use conventional Python exceptions to handle errors:
>
> try:
>     a = req.form['myvar']
> except KeyError, key:
>     return '<h1>No form variable by that name: %s</h1>' % (key,)

This unfortunately doesn't help with mod_python.publisher unless you are
prepared to throw away its abilities to automatically decode form
parameters into function arguments.

The closest you will get if you want to preserve this automatic form
argument decoding is to wrap the invocation of mod_python.publisher
within your own handler and for it to try and attempt to catch the
exception type which represents the missing argument. That is, instead
of:

   PythonHandler mod_python.publisher

have:

   PythonHandler myhandler

where "myhandler" is defined as:

   import mod_python.publisher

   def handler(req):
     try:
       return mod_python.publisher.handler(req)
     except KeyError, key
       # Generate special exception page.
       ...

The problem with this is that KeyError may have been generated due to
some totally different issue other than a missing form argument. Thus,
to make it do what is intended, you would need to look at traceback
information with the exception and identify if the exception was raised
in the mod_python.publisher form processing code.

Graham

From iwasso80s at gmail.com  Mon Oct  3 17:10:52 2005
From: iwasso80s at gmail.com (Iwasso 80s)
Date: Mon Oct  3 17:10:57 2005
Subject: [mod_python] Re: Strange HTTP Response
In-Reply-To: <263c8df0050928223572cd510e@mail.gmail.com>
References: <263c8df0050928223572cd510e@mail.gmail.com>
Message-ID: <263c8df00510031410q4a478dfdrd8a3f8553028160b@mail.gmail.com>

I think we finally resolved the problem -- sort of.

We were using the util.redirect.  However, the problem went away after
replacing it with these two lines:

req.headers_out['Location'] = newPath
return apache.HTTP_TEMPORARY_REDIRECT

The primary difference between, the two methods is that util.redirect
uses a 302 and HTTP_TEMPORARY_REDIRECT returns a 307 response code.

The only problem is that IE on Mac doesn't seem to like 307 response
codes.  We're sticking with this for the time being.  However, does
anyone have any thoughts on what's causing this?  302 shouldn't be
causing these kinds of problems, no?

If you want to see the problem/solution first hand, here's the URL: 
http://www.iwasso80s.com/

If anyone has any thoughts, we'd really appreciate it.


On 9/28/05, Iwasso 80s <iwasso80s@gmail.com> wrote:
> We've been having a very strange problem with some variants of IE (on
> Windows 98, Server 2003) and Safari (OS X 10.3).  If you aggressively
> click around our site one of two things will often happen: the body of
> the page will return "0" as the entire result set of the request; or
> it will return "0" followed by what appears to be the header data (see
> attached gif).  All other requests will return quickly and without
> errors.
>
> Some interesting data points:
>
> If we reduce the keep-alive settings on Apache it seems to get worse
> (meaning more likely to respond with a "0").  However, if we increase
> the keep-alive setting to say around 15 seconds and aggressively click
> around the site, the Apache server will become unresponsive.  I'm
> assuming all the procs are getting used up before the keep-alive on
> available procs has expired (although, that behavior seems fishy as
> well).  Throughout all of these tests the cpu, io, etc is only
> marginally taxed and no errors are reported in the error log.  We set
> up a super simple testing page, with no db, etc and the problem still
> persists.
> Our config:
>
> Debian Etch (fully updated)
>  Apache 2.0.54
>  Python 2.3
>  Mod_python 3.1
>  Clearsilver .9 (but we aren't using cgi functionality)
>
> We'd really appreciate any help we could get.
>
> Thanks in advance for your patience and consideration.
>
>
>

From fumanchu at amor.org  Mon Oct  3 17:38:02 2005
From: fumanchu at amor.org (Robert Brewer)
Date: Mon Oct  3 17:39:35 2005
Subject: [mod_python] Re: Strange HTTP Response
Message-ID: <A77618B80CDD2543B705C82B7665D9F9019C9FC9@ex9.hostedexchange.local>

Iwasso 80s wrote:
> The primary difference between, the two methods is that util.redirect
> uses a 302 and HTTP_TEMPORARY_REDIRECT returns a 307 response code.
> 
> The only problem is that IE on Mac doesn't seem to like 307 response
> codes.  We're sticking with this for the time being.  However, does
> anyone have any thoughts on what's causing this?  302 shouldn't be
> causing these kinds of problems, no?
> 
> If anyone has any thoughts, we'd really appreciate it.

Just this thought:
http://ppewww.ph.gla.ac.uk/~flavell/www/post-redirect.html


Robert Brewer
System Architect
Amor Ministries
fumanchu@amor.org

From list at joreybump.com  Mon Oct  3 17:40:11 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Oct  3 17:40:21 2005
Subject: [mod_python] mod_python newbie help
In-Reply-To: <b7029038ecf4a5f36a4abb9c61cb4f27@dscpl.com.au>
References: <34a8c2400510011651s59d9e4cp662796786f244a90@mail.gmail.com>	<c298f2d70510021133i24796143n@mail.gmail.com>
	<1005e9c00510031053g547ec9f1red14a181e1dc1037@mail.gmail.com>
	<434175F0.6060308@joreybump.com>
	<b7029038ecf4a5f36a4abb9c61cb4f27@dscpl.com.au>
Message-ID: <4341A53B.5020406@joreybump.com>

Graham Dumpleton wrote:
> 
> On 04/10/2005, at 4:18 AM, Jorey Bump wrote:
 >
>> and/or use conventional Python exceptions to handle errors:
>>
>> try:
>>     a = req.form['myvar']
>> except KeyError, key:
>>     return '<h1>No form variable by that name: %s</h1>' % (key,)
> 
> This unfortunately doesn't help with mod_python.publisher unless you are
> prepared to throw away its abilities to automatically decode form
> parameters into function arguments.

I am prepared to do so, and have for a long time. :) Nonetheless, I'm 
not sure why you think this is unhelpful with Publisher. As long as you 
take req and the automatically decoded parameter in your function, you 
can refer to them both ways:

def compare(req, myvar):
     if req.form['myvar'] == myvar:
         return 'they are the same'
     else:
         # this should never happen
         return 'they are not the same'

> The closest you will get if you want to preserve this automatic form
> argument decoding... 

My advice to Publisher newbies is to use this feature sparingly. It 
encourages butt-ugly code and just feels unsafe (although I can't 
justify the latter with an example).

To illustrate, compare the following:

def index(myvar1, myvar2, myvar3, myvar4, myvar5)
     return processform(myvar1, myvar2, myvar3, myvar4, myvar5)

with:

def index(req)
     return processform(req)

I think the last example is much cleaner. To get the most out of 
mod_python and Publisher, it's worthwhile to learn as much about req as 
possible. Unfortunately, there's no single page in the documentation 
that shows all possible members/methods belonging to the req object 
(especially in the Publisher handler), so I can't provide a link.



From grahamd at dscpl.com.au  Mon Oct  3 18:42:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct  3 18:42:17 2005
Subject: [mod_python] mod_python newbie help
Message-ID: <1128379330.1876@dscpl.user.openhosting.com>

Jorey Bump wrote ..
> Graham Dumpleton wrote:
> > 
> > On 04/10/2005, at 4:18 AM, Jorey Bump wrote:
>  >
> >> and/or use conventional Python exceptions to handle errors:
> >>
> >> try:
> >>     a = req.form['myvar']
> >> except KeyError, key:
> >>     return '<h1>No form variable by that name: %s</h1>' % (key,)
> > 
> > This unfortunately doesn't help with mod_python.publisher unless you
> are
> > prepared to throw away its abilities to automatically decode form
> > parameters into function arguments.
> 
> I am prepared to do so, and have for a long time. :)

Personal preferences. Personally, I don't use publisher at all because
of various other warts. :-)

Either way, if one wants to hack up something quickly, using function
arguments for the form parameters is simply easier.

> Nonetheless, I'm 
> not sure why you think this is unhelpful with Publisher. As long as you
> take req and the automatically decoded parameter in your function, you
> can refer to them both ways:
> 
> def compare(req, myvar):
>      if req.form['myvar'] == myvar:
>          return 'they are the same'
>      else:
>          # this should never happen
>          return 'they are not the same'

Except that that code will never get a chance to execute when "myvar" was
never supplied as a form argument in the first place, which if I recollect
was what the original question related to.

Graham

From eltuza at gmail.com  Mon Oct  3 19:00:42 2005
From: eltuza at gmail.com (El TuZa)
Date: Mon Oct  3 19:00:47 2005
Subject: [mod_python] mod_python newbie help
In-Reply-To: <1128379330.1876@dscpl.user.openhosting.com>
References: <1128379330.1876@dscpl.user.openhosting.com>
Message-ID: <1005e9c00510031600i5538ce15l15464a9ad287c4a@mail.gmail.com>

> Except that that code will never get a chance to execute when "myvar" was
> never supplied as a form argument in the first place, which if I recollect
> was what the original question related to.
>
that's right graham, thanks to both for the workaround.
i think I can do either way, by getting the req object and see if all
the params are ok to proceed, or by wrapping the publisher handler to
analize the traceback.
tuza

From terry.macdonald at dsl.pipex.com  Mon Oct  3 20:02:27 2005
From: terry.macdonald at dsl.pipex.com (Terence MacDonald)
Date: Mon Oct  3 20:02:34 2005
Subject: [mod_python] Session Pickling Error
Message-ID: <1128384147.19828.27.camel@bigmac.taumu.com>

Apologies if this is not the right place to post this but I am reaching
my wits end and any help on the matter would be very much appreciated.

I have a web application written/using:

python 2.3.4
mod_python 3.1.4
apache 2.0.49  (mpm prefork mode)
PyPgSQL 2.4

I use mod_python sessions to save data between client web page
submissions.

After moving the apparently working application onto a more powerful
server I have begun to get the following intermittent error when saving
the session data.
 
PicklingError: Can't pickle <function _B at 0x2a9ec93758>: it's not the
same object as pyPgSQL.libpq._B

Additional (helpful?) info:
_B is, I believe, a helper function for the PgBoolean type defined by
PyPgSQL.
The session data can have data containing a PgBoolean instance
represented as <PgBoolean instance at 0x2aa0313680: Value: True> in a
dump of the session data.
Most of the time it works!
I use mod_python's import_module().

To be honest I don't fully understand the problem so I can't be sure
if/when I fix it because of the irregular occurrences of the error
(memory issue?)

In need of a little guidance, thanks

From gator_aide2000 at yahoo.com  Tue Oct  4 00:53:53 2005
From: gator_aide2000 at yahoo.com (GATOR AIDE)
Date: Tue Oct  4 00:53:58 2005
Subject: [mod_python] Session Pickling Error  II - 3.2.2b 
Message-ID: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>

After updating mod_python 3.1.4 to 3.2.2b I am getting
an error:

PythonHandler mod_python.publisher: TypeError: can't
pickle function objects

I am storing a function in the session and calling
session.save(). (Which is when the error is raised.)

Using mod_python 3.1.4 the code works just fine but
after the update I am now seeing this error.

The code simply stores a dictionary and few function
callbacks in the session and loops through several
functions until it is done processing. 

Not sure if anyone else has had this problem? I
running centos 2.4.21-27.0.4.ELsmp on a x86_64
platform. Python 2.4.2 (same error w/2.4.1). Apache
2.0.46.

I wasn't sure if this is the right place to post this,
so I apologize if I should have posted the question
elsewhere.

Thanks,
Mike


		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From grahamd at dscpl.com.au  Tue Oct  4 01:25:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct  4 01:26:03 2005
Subject: [mod_python] Session Pickling Error  II - 3.2.2b 
Message-ID: <1128403558.22672@dscpl.user.openhosting.com>

GATOR AIDE wrote ..
> After updating mod_python 3.1.4 to 3.2.2b I am getting
> an error:
> 
> PythonHandler mod_python.publisher: TypeError: can't
> pickle function objects
> 
> I am storing a function in the session and calling
> session.save(). (Which is when the error is raised.)
> 
> Using mod_python 3.1.4 the code works just fine but
> after the update I am now seeing this error.
> 
> The code simply stores a dictionary and few function
> callbacks in the session and loops through several
> functions until it is done processing. 
> 
> Not sure if anyone else has had this problem? I
> running centos 2.4.21-27.0.4.ELsmp on a x86_64
> platform. Python 2.4.2 (same error w/2.4.1). Apache
> 2.0.46.
> 
> I wasn't sure if this is the right place to post this,
> so I apologize if I should have posted the question
> elsewhere.

I am going to hazard a guess and say that pickle probably only allows
you to pickle a function objects where the function object resides in a
module which was imported using "import", ie., lives in "sys.modules".

In mod_python 3.2, mod_python.publisher handler modules are no longer
imported using the Python "import" mechanism but are instead read in as
strings and executed against a dictionary of an empty module which does
not actually exist in sys.modules.

      def build(self, key, name, opened, entry):
        try:
            module = new.module(re_not_word.sub('_',key))
            module.__file__ = key
            exec opened in module.__dict__
            return module
        finally:
            opened.close()

The error would seem reasonable under these circumstances because if it
were pickled, it wouldn't perhaps be unable to unpickle it later as it
wouldn't know the name of a module in "sys.modules" to associate the
function reference to.

Are you sure you can't use a string reference or something else as a handle
to refer to the callback function rather than an actual function object?

Graham
From nicolas.lehuen at gmail.com  Tue Oct  4 01:40:36 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct  4 01:40:42 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>
References: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>
Message-ID: <c298f2d70510032240j7be46702x@mail.gmail.com>

Hi,

As explained in the error message, function objects can't be pickled. This
is not a mod_python limitation, rather a Python limitation.

There are three workarounds I can think of :

1) If you are using the threaded MPM (but I think you're not), use
MemorySession instead of DBMSession or FileSession. This way, session are
never pickled. The disadvantage is that all sessions are lost as soon as
Apache is restarted, since sessions are stored in RAM and not on disk.

2) Do not store any function object in the session and implement a
workaround by yourself, i.e. try to store a pickable value from which you
can infer the function. This means that you must forget about directly
storing functions in the session and having a kind of naming system (store
the name of the function in the session and fetch the function according to
its name).

3) Customize the pickling / unpickling of the objects you want to store in
the session, using __getstate__ and __setstate__ (see the Python
documentation).

Regards,
Nicolas

2005/10/4, GATOR AIDE <gator_aide2000@yahoo.com>:
>
> After updating mod_python 3.1.4 to 3.2.2b I am getting
> an error:
>
> PythonHandler mod_python.publisher: TypeError: can't
> pickle function objects
>
> I am storing a function in the session and calling
> session.save(). (Which is when the error is raised.)
>
> Using mod_python 3.1.4 the code works just fine but
> after the update I am now seeing this error.
>
> The code simply stores a dictionary and few function
> callbacks in the session and loops through several
> functions until it is done processing.
>
> Not sure if anyone else has had this problem? I
> running centos 2.4.21-27.0.4.ELsmp on a x86_64
> platform. Python 2.4.2 (same error w/2.4.1). Apache
> 2.0.46.
>
> I wasn't sure if this is the right place to post this,
> so I apologize if I should have posted the question
> elsewhere.
>
> Thanks,
> Mike
>
>
>
> __________________________________
> Yahoo! Mail - PC Magazine Editors' Choice 2005
> http://mail.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/3dac7fc5/attachment.html
From nicolas.lehuen at gmail.com  Tue Oct  4 01:43:51 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct  4 01:43:57 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <1128403558.22672@dscpl.user.openhosting.com>
References: <1128403558.22672@dscpl.user.openhosting.com>
Message-ID: <c298f2d70510032243p222faee1t@mail.gmail.com>

Graham,

Mr Gator Aide had the same problem with mod_python 3.1.4, though the message
was a bit different. The point is that he is trying to store too much in the
session and that he should work around that. The new import mechanism may
make things a little more difficult, but the core problem is in the way he
uses sessions, not in mod_python.

Regards,
Nicolas

2005/10/4, Graham Dumpleton <grahamd@dscpl.com.au>:
>
> GATOR AIDE wrote ..
> > After updating mod_python 3.1.4 to 3.2.2b I am getting
> > an error:
> >
> > PythonHandler mod_python.publisher: TypeError: can't
> > pickle function objects
> >
> > I am storing a function in the session and calling
> > session.save(). (Which is when the error is raised.)
> >
> > Using mod_python 3.1.4 the code works just fine but
> > after the update I am now seeing this error.
> >
> > The code simply stores a dictionary and few function
> > callbacks in the session and loops through several
> > functions until it is done processing.
> >
> > Not sure if anyone else has had this problem? I
> > running centos 2.4.21-27.0.4.ELsmp on a x86_64
> > platform. Python 2.4.2 (same error w/2.4.1). Apache
> > 2.0.46.
> >
> > I wasn't sure if this is the right place to post this,
> > so I apologize if I should have posted the question
> > elsewhere.
>
> I am going to hazard a guess and say that pickle probably only allows
> you to pickle a function objects where the function object resides in a
> module which was imported using "import", ie., lives in " sys.modules".
>
> In mod_python 3.2, mod_python.publisher handler modules are no longer
> imported using the Python "import" mechanism but are instead read in as
> strings and executed against a dictionary of an empty module which does
> not actually exist in sys.modules.
>
> def build(self, key, name, opened, entry):
> try:
> module = new.module(re_not_word.sub('_',key))
> module.__file__ = key
> exec opened in module.__dict__
> return module
> finally:
> opened.close()
>
> The error would seem reasonable under these circumstances because if it
> were pickled, it wouldn't perhaps be unable to unpickle it later as it
> wouldn't know the name of a module in "sys.modules" to associate the
> function reference to.
>
> Are you sure you can't use a string reference or something else as a
> handle
> to refer to the callback function rather than an actual function object?
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/39d1a977/attachment.html
From nicolas.lehuen at gmail.com  Tue Oct  4 01:45:03 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct  4 01:45:09 2005
Subject: [mod_python] publishers error handling
In-Reply-To: <1005e9c00510031054h6f2ac777m9f3b24361fe2c3b1@mail.gmail.com>
References: <1005e9c00510031054h6f2ac777m9f3b24361fe2c3b1@mail.gmail.com>
Message-ID: <c298f2d70510032245k4a58cf3fk@mail.gmail.com>

Hi,

Just switch off PythonDebug. In your httpd.conf or .htaccess file, put :

PythonDebug Off

Regards,
Nicolas

2005/10/3, El TuZa <eltuza@gmail.com>:
>
> Hi list, my question is about handling "compilation" errors (using
> publisher). for example if someone calls a function with no params it
> returns the error with all the python specifications about it, but i
> just want to inform that person my own message or just call an error
> function. Can this be done? thanks a lot
> tuza
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/669030b6/attachment.html
From grahamd at dscpl.com.au  Tue Oct  4 02:16:07 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct  4 02:16:13 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
Message-ID: <1128406567.4518@dscpl.user.openhosting.com>

Nicolas Lehuen wrote ..
>
> As explained in the error message, function objects can't be pickled. This
> is not a mod_python limitation, rather a Python limitation.

Hmmm, the pickle module documentation at:

  http://docs.python.org/lib/node66.html

says:

  The following types can be pickled:

     ...

     - functions defined at the top level of a module

It does however say:

  Note that functions (built-in and user-defined) are pickled by ``fully
  qualified'' name reference, not by value. This means that only the
  function name is pickled, along with the name of module the function is
  defined in. Neither the function's code, nor any of its function
  attributes are pickled. Thus the defining module must be importable in
  the unpickling environment, and the module must contain the named
  object, otherwise an exception will be raised.

Note the requirement on the module being importable in the unpickling
environment. Since it wasn't imported and present in "sys.modules" to
begin with, I would say it is able to detect the potential for problems at
pickling time instead of later.

But then, I could still be wrong. :-)

Graham
From gator_aide2000 at yahoo.com  Tue Oct  4 02:17:56 2005
From: gator_aide2000 at yahoo.com (GATOR AIDE)
Date: Tue Oct  4 02:18:06 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <c298f2d70510032243p222faee1t@mail.gmail.com>
Message-ID: <20051004061756.31313.qmail@web31911.mail.mud.yahoo.com>

Actually, the same exact code works using mod_python
version 3.1.4. 

I only get get the error when I run the code using the
latest version of mod_python (3.2.2b).

I guess I can work around the problem by storing
strings or something, but it seems odd that I only get
the error with the newest version. 

Sorry if that wasn't clear in the original post.

Thanks for all of the feedback.

Mike

--- Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:

> Graham,
> 
> Mr Gator Aide had the same problem with mod_python
> 3.1.4, though the message
> was a bit different. The point is that he is trying
> to store too much in the
> session and that he should work around that. The new
> import mechanism may
> make things a little more difficult, but the core
> problem is in the way he
> uses sessions, not in mod_python.
> 
> Regards,
> Nicolas
> 
> 2005/10/4, Graham Dumpleton <grahamd@dscpl.com.au>:
> >
> > GATOR AIDE wrote ..
> > > After updating mod_python 3.1.4 to 3.2.2b I am
> getting
> > > an error:
> > >
> > > PythonHandler mod_python.publisher: TypeError:
> can't
> > > pickle function objects
> > >
> > > I am storing a function in the session and
> calling
> > > session.save(). (Which is when the error is
> raised.)
> > >
> > > Using mod_python 3.1.4 the code works just fine
> but
> > > after the update I am now seeing this error.
> > >
> > > The code simply stores a dictionary and few
> function
> > > callbacks in the session and loops through
> several
> > > functions until it is done processing.
> > >
> > > Not sure if anyone else has had this problem? I
> > > running centos 2.4.21-27.0.4.ELsmp on a x86_64
> > > platform. Python 2.4.2 (same error w/2.4.1).
> Apache
> > > 2.0.46.
> > >
> > > I wasn't sure if this is the right place to post
> this,
> > > so I apologize if I should have posted the
> question
> > > elsewhere.
> >
> > I am going to hazard a guess and say that pickle
> probably only allows
> > you to pickle a function objects where the
> function object resides in a
> > module which was imported using "import", ie.,
> lives in " sys.modules".
> >
> > In mod_python 3.2, mod_python.publisher handler
> modules are no longer
> > imported using the Python "import" mechanism but
> are instead read in as
> > strings and executed against a dictionary of an
> empty module which does
> > not actually exist in sys.modules.
> >
> > def build(self, key, name, opened, entry):
> > try:
> > module = new.module(re_not_word.sub('_',key))
> > module.__file__ = key
> > exec opened in module.__dict__
> > return module
> > finally:
> > opened.close()
> >
> > The error would seem reasonable under these
> circumstances because if it
> > were pickled, it wouldn't perhaps be unable to
> unpickle it later as it
> > wouldn't know the name of a module in
> "sys.modules" to associate the
> > function reference to.
> >
> > Are you sure you can't use a string reference or
> something else as a
> > handle
> > to refer to the callback function rather than an
> actual function object?
> >
> > Graham
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> >
>
http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 



		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From nicolas.lehuen at gmail.com  Tue Oct  4 02:23:16 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct  4 02:23:21 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <1128406567.4518@dscpl.user.openhosting.com>
References: <1128406567.4518@dscpl.user.openhosting.com>
Message-ID: <c298f2d70510032323n440bf7d2u@mail.gmail.com>

OK, I get it. So either we revert back to the sys.modules hell that we had
in 3.1, or we just say that "pickling functions or classes that are defined
in published module is not supported".

This means that our good friend Gator Aide (what a fun pseudo) could solve
his problem by defining the functions and classes he wants to pickle in a
separate module, reachable from the Python path, and imported in the
published module as a default module.

Regards,
Nicolas

2005/10/4, Graham Dumpleton <grahamd@dscpl.com.au>:
>
> Nicolas Lehuen wrote ..
> >
> > As explained in the error message, function objects can't be pickled.
> This
> > is not a mod_python limitation, rather a Python limitation.
>
> Hmmm, the pickle module documentation at:
>
> http://docs.python.org/lib/node66.html
>
> says:
>
> The following types can be pickled:
>
> ...
>
> - functions defined at the top level of a module
>
> It does however say:
>
> Note that functions (built-in and user-defined) are pickled by ``fully
> qualified'' name reference, not by value. This means that only the
> function name is pickled, along with the name of module the function is
> defined in. Neither the function's code, nor any of its function
> attributes are pickled. Thus the defining module must be importable in
> the unpickling environment, and the module must contain the named
> object, otherwise an exception will be raised.
>
> Note the requirement on the module being importable in the unpickling
> environment. Since it wasn't imported and present in "sys.modules" to
> begin with, I would say it is able to detect the potential for problems at
> pickling time instead of later.
>
> But then, I could still be wrong. :-)
>
> Graham
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/06a534ad/attachment.html
From nicolas.lehuen at gmail.com  Tue Oct  4 02:32:05 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct  4 02:32:10 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <20051004061756.31313.qmail@web31911.mail.mud.yahoo.com>
References: <c298f2d70510032243p222faee1t@mail.gmail.com>
	<20051004061756.31313.qmail@web31911.mail.mud.yahoo.com>
Message-ID: <c298f2d70510032332p7a420be1s@mail.gmail.com>

As I've wrote in my previous mail, the new error is due to the way
mod_python imports the published modules in 3.2. The new way was designed to
solve a whole bunch of problems. Then again I must confess I had not
foreseen the pickling problem it would cause.

I'll report this problem as a bug against 3.2.2beta. The problem is that
this will not be easily fixed in 3.2. We (the development team) were
prepared to do a major overhaul of the import mechanism for the 3.3 release.
Solving the pickling problem would require that. Right now I can't see any
way to solve this easily in 3.2 while still retaining all the fixes the new
import system has brought.

In the meantime, my advice is that either you keep on using 3.1.4 (living
with its bugs), or work around the pickle problem using one of the solutions
I've wrote before. Maybe the solution where you define your functions and
classes that need to be pickled in a separate module found on the python
path is the easiest one.

Sorry for the inconvenience, and thanks for the bug report.

Nicolas

2005/10/4, GATOR AIDE <gator_aide2000@yahoo.com>:
>
> Actually, the same exact code works using mod_python
> version 3.1.4.
>
> I only get get the error when I run the code using the
> latest version of mod_python (3.2.2b).
>
> I guess I can work around the problem by storing
> strings or something, but it seems odd that I only get
> the error with the newest version.
>
> Sorry if that wasn't clear in the original post.
>
> Thanks for all of the feedback.
>
> Mike
>
> --- Nicolas Lehuen <nicolas.lehuen@gmail.com> wrote:
>
> > Graham,
> >
> > Mr Gator Aide had the same problem with mod_python
> > 3.1.4, though the message
> > was a bit different. The point is that he is trying
> > to store too much in the
> > session and that he should work around that. The new
> > import mechanism may
> > make things a little more difficult, but the core
> > problem is in the way he
> > uses sessions, not in mod_python.
> >
> > Regards,
> > Nicolas
> >
> > 2005/10/4, Graham Dumpleton <grahamd@dscpl.com.au>:
> > >
> > > GATOR AIDE wrote ..
> > > > After updating mod_python 3.1.4 to 3.2.2b I am
> > getting
> > > > an error:
> > > >
> > > > PythonHandler mod_python.publisher: TypeError:
> > can't
> > > > pickle function objects
> > > >
> > > > I am storing a function in the session and
> > calling
> > > > session.save(). (Which is when the error is
> > raised.)
> > > >
> > > > Using mod_python 3.1.4 the code works just fine
> > but
> > > > after the update I am now seeing this error.
> > > >
> > > > The code simply stores a dictionary and few
> > function
> > > > callbacks in the session and loops through
> > several
> > > > functions until it is done processing.
> > > >
> > > > Not sure if anyone else has had this problem? I
> > > > running centos 2.4.21-27.0.4.ELsmp on a x86_64
> > > > platform. Python 2.4.2 (same error w/2.4.1).
> > Apache
> > > > 2.0.46.
> > > >
> > > > I wasn't sure if this is the right place to post
> > this,
> > > > so I apologize if I should have posted the
> > question
> > > > elsewhere.
> > >
> > > I am going to hazard a guess and say that pickle
> > probably only allows
> > > you to pickle a function objects where the
> > function object resides in a
> > > module which was imported using "import", ie.,
> > lives in " sys.modules".
> > >
> > > In mod_python 3.2, mod_python.publisher handler
> > modules are no longer
> > > imported using the Python "import" mechanism but
> > are instead read in as
> > > strings and executed against a dictionary of an
> > empty module which does
> > > not actually exist in sys.modules.
> > >
> > > def build(self, key, name, opened, entry):
> > > try:
> > > module = new.module(re_not_word.sub('_',key))
> > > module.__file__ = key
> > > exec opened in module.__dict__
> > > return module
> > > finally:
> > > opened.close()
> > >
> > > The error would seem reasonable under these
> > circumstances because if it
> > > were pickled, it wouldn't perhaps be unable to
> > unpickle it later as it
> > > wouldn't know the name of a module in
> > "sys.modules" to associate the
> > > function reference to.
> > >
> > > Are you sure you can't use a string reference or
> > something else as a
> > > handle
> > > to refer to the callback function rather than an
> > actual function object?
> > >
> > > Graham
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > >
> >
> http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
>
>
>
>
> __________________________________
> Yahoo! Mail - PC Magazine Editors' Choice 2005
> http://mail.yahoo.com
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/758d2f6e/attachment.html
From grahamd at dscpl.com.au  Tue Oct  4 02:39:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct  4 02:39:30 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
Message-ID: <1128407959.25882@dscpl.user.openhosting.com>

Nicolas Lehuen wrote ..
> OK, I get it. So either we revert back to the sys.modules hell that we had
> in 3.1, or we just say that "pickling functions or classes that are defined
> in published module is not supported".

We have to move away from the sys.modules hell, and I'm a bit suspect on
the idea of pickling functions in sessions anyway. I therefore have no
problems with saying that pickling of function objects in a published
module is not supported. :-)

> This means that our good friend Gator Aide (what a fun pseudo) could solve
> his problem by defining the functions and classes he wants to pickle in a
> separate module, reachable from the Python path, and imported in the
> published module as a default module.

Yep. Using "import" from standard Python module search path would be
only way it could be sanely done.

Graham


From terry.macdonald at dsl.pipex.com  Tue Oct  4 03:25:38 2005
From: terry.macdonald at dsl.pipex.com (Terence MacDonald)
Date: Tue Oct  4 03:25:45 2005
Subject: [mod_python] Session Pickling Error  II - 3.2.2b
In-Reply-To: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>
References: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>
Message-ID: <1128410738.19828.33.camel@bigmac.taumu.com>

On Mon, 2005-10-03 at 21:53 -0700, GATOR AIDE wrote:
> After updating mod_python 3.1.4 to 3.2.2b I am getting
> an error:
> 
> PythonHandler mod_python.publisher: TypeError: can't
> pickle function objects
> 
> I am storing a function in the session and calling
> session.save(). (Which is when the error is raised.)
> 
> Using mod_python 3.1.4 the code works just fine but
> after the update I am now seeing this error.
> 
> The code simply stores a dictionary and few function
> callbacks in the session and loops through several
> functions until it is done processing. 
> 
> Not sure if anyone else has had this problem? I
> running centos 2.4.21-27.0.4.ELsmp on a x86_64
> platform. Python 2.4.2 (same error w/2.4.1). Apache
> 2.0.46.
> 
> I wasn't sure if this is the right place to post this,
> so I apologize if I should have posted the question
> elsewhere.
> 
For the first time in ages I send in a problem of mine to the list; one
which is really slowing me down, and it gets hijacked almost
immediately! bally typical!

Are the hijacked questions responses applicable to my problem or did I
say something out of order? :3)

Cheers

From nicolas.lehuen at gmail.com  Tue Oct  4 03:42:18 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct  4 03:42:23 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <1128410738.19828.33.camel@bigmac.taumu.com>
References: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>
	<1128410738.19828.33.camel@bigmac.taumu.com>
Message-ID: <c298f2d70510040042q85a02eag@mail.gmail.com>

OK now I understand, I thought your message and the second one were from the
same person :).

A lot of what has been said applies to you : it looks like the objects you
store in the session sometimes reference a function which is not picklable.
So try to work around this by storing a real boolean value instead of
PgBoolean.

The real curious thing is that your problem is intermittent, though. I don't
know enough about PsycoPG to tell if this is normal or not.

Regards,
Nicolas

2005/10/4, Terence MacDonald <terry.macdonald@dsl.pipex.com>:
>
> On Mon, 2005-10-03 at 21:53 -0700, GATOR AIDE wrote:
> > After updating mod_python 3.1.4 to 3.2.2b I am getting
> > an error:
> >
> > PythonHandler mod_python.publisher: TypeError: can't
> > pickle function objects
> >
> > I am storing a function in the session and calling
> > session.save(). (Which is when the error is raised.)
> >
> > Using mod_python 3.1.4 the code works just fine but
> > after the update I am now seeing this error.
> >
> > The code simply stores a dictionary and few function
> > callbacks in the session and loops through several
> > functions until it is done processing.
> >
> > Not sure if anyone else has had this problem? I
> > running centos 2.4.21-27.0.4.ELsmp on a x86_64
> > platform. Python 2.4.2 (same error w/2.4.1). Apache
> > 2.0.46.
> >
> > I wasn't sure if this is the right place to post this,
> > so I apologize if I should have posted the question
> > elsewhere.
> >
> For the first time in ages I send in a problem of mine to the list; one
> which is really slowing me down, and it gets hijacked almost
> immediately! bally typical!
>
> Are the hijacked questions responses applicable to my problem or did I
> say something out of order? :3)
>
> Cheers
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/e21c3a0e/attachment-0001.html
From terry.macdonald at dsl.pipex.com  Tue Oct  4 05:04:33 2005
From: terry.macdonald at dsl.pipex.com (Terence MacDonald)
Date: Tue Oct  4 05:05:00 2005
Subject: [mod_python] Session Cookie Name
Message-ID: <1128416674.19828.37.camel@bigmac.taumu.com>

mod_python 3.1.4

Anyone been able to change the name of the session cookie?  According to
the Session.py module you should be able to do it in the apache config
file thus;

PythonOption session_cookie_name name_of_sid

Unfortunately it doesn't seem to take affect.  Am I doing anything
glaringly wrong?

P.S. this option does not appear to be documented anywhere.


From nicolas.lehuen at gmail.com  Tue Oct  4 05:13:41 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct  4 05:13:49 2005
Subject: [mod_python] Session Cookie Name
In-Reply-To: <1128416674.19828.37.camel@bigmac.taumu.com>
References: <1128416674.19828.37.camel@bigmac.taumu.com>
Message-ID: <c298f2d70510040213i6726bfb7u@mail.gmail.com>

Hi Terence,

IIRC, this is only valid for mod_python 3.2.

Regards,
Nicolas

2005/10/4, Terence MacDonald <terry.macdonald@dsl.pipex.com>:
>
> mod_python 3.1.4
>
> Anyone been able to change the name of the session cookie? According to
> the Session.py module you should be able to do it in the apache config
> file thus;
>
> PythonOption session_cookie_name name_of_sid
>
> Unfortunately it doesn't seem to take affect. Am I doing anything
> glaringly wrong?
>
> P.S. this option does not appear to be documented anywhere.
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/7160d42a/attachment.html
From terry.macdonald at dsl.pipex.com  Tue Oct  4 05:32:50 2005
From: terry.macdonald at dsl.pipex.com (Terence MacDonald)
Date: Tue Oct  4 05:32:57 2005
Subject: [mod_python] Session Cookie Name
In-Reply-To: <c298f2d70510040213i6726bfb7u@mail.gmail.com>
References: <1128416674.19828.37.camel@bigmac.taumu.com>
	<c298f2d70510040213i6726bfb7u@mail.gmail.com>
Message-ID: <1128418371.19828.41.camel@bigmac.taumu.com>

Yes my glaring mistake was that I was looking at 3.2 code and using
3.1.4 (Don't ask!) 

The joys of multiple servers and multiple versions

On Tue, 2005-10-04 at 11:13 +0200, Nicolas Lehuen wrote:
> Hi Terence,
> 
> IIRC, this is only valid for mod_python 3.2.
> 
> Regards,
> Nicolas
> 
> 2005/10/4, Terence MacDonald <terry.macdonald@dsl.pipex.com>:
>         mod_python 3.1.4
>         
>         Anyone been able to change the name of the session
>         cookie?  According to
>         the Session.py module you should be able to do it in the
>         apache config
>         file thus;
>         
>         PythonOption session_cookie_name name_of_sid 
>         
>         Unfortunately it doesn't seem to take affect.  Am I doing
>         anything
>         glaringly wrong?
>         
>         P.S. this option does not appear to be documented anywhere.
>         
>         
>         _______________________________________________
>         Mod_python mailing list
>         Mod_python@modpython.org
>         http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From paul.hide at gmail.com  Tue Oct  4 13:31:02 2005
From: paul.hide at gmail.com (Paul Hide)
Date: Tue Oct  4 13:31:07 2005
Subject: [mod_python] global
Message-ID: <b117fb190510041031t5d832223i3351d54dab6fde50@mail.gmail.com>

file test1.py contains:
def sub1():
global G1
print 'sub1'
G1 = 43

If I enter the following code in Idle I (naively) expect G1 to have a value:
from test1 import *
global G1
sub1()
print G1

but it does not.
Could someone clarify?

Many thanks for an interesting mailing list.

Paul Hide
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051004/59e20d14/attachment.html
From nick at dd.revealed.net  Tue Oct  4 13:54:32 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Oct  4 13:54:48 2005
Subject: [mod_python] global
In-Reply-To: <b117fb190510041031t5d832223i3351d54dab6fde50@mail.gmail.com>
References: <b117fb190510041031t5d832223i3351d54dab6fde50@mail.gmail.com>
Message-ID: <4342C1D8.8000202@dd.revealed.net>

In Python assignments to numbers and strings make copies, which is what is 
happening in a "from test1 import *" statement.  The G1 in your global scope 
is a copy of the G1 in the module's global scope, which turn out to be 
different variables.  You'll have to "import test1" and refer to test1.G1.

Nick

Paul Hide wrote:
> file test1.py contains:
> def sub1():
>     global G1
>     print 'sub1'
>     G1 = 43
> 
> If I enter the following code in Idle I (naively) expect G1 to have a value:
> from test1 import *
> global G1
> sub1()
> print G1
> 
> but it does not.
> Could someone clarify?
> 
> Many thanks for an interesting mailing list.
> 
> Paul Hide
> 
> 
> 
> ------------------------------------------------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From nick at dd.revealed.net  Tue Oct  4 13:58:50 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Oct  4 13:59:04 2005
Subject: [mod_python] global
In-Reply-To: <4342C1D8.8000202@dd.revealed.net>
References: <b117fb190510041031t5d832223i3351d54dab6fde50@mail.gmail.com>
	<4342C1D8.8000202@dd.revealed.net>
Message-ID: <4342C2DA.5060103@dd.revealed.net>

And just to be clear, this would also behave similarly for lists, dicts and 
other objects if you actually change the assignment to a different object, 
although in those cases you could alter the object and still see the changes 
in your local scope.

Nick

Nick wrote:
> In Python assignments to numbers and strings make copies, which is what 
> is happening in a "from test1 import *" statement.  The G1 in your 
> global scope is a copy of the G1 in the module's global scope, which 
> turn out to be different variables.  You'll have to "import test1" and 
> refer to test1.G1.
> 
> Nick
> 
> Paul Hide wrote:
> 
>> file test1.py contains:
>> def sub1():
>>     global G1
>>     print 'sub1'
>>     G1 = 43
>>
>> If I enter the following code in Idle I (naively) expect G1 to have a 
>> value:
>> from test1 import *
>> global G1
>> sub1()
>> print G1
>>
>> but it does not.
>> Could someone clarify?
>>
>> Many thanks for an interesting mailing list.
>>
>> Paul Hide
>>
>>
>>
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From erdibalint at freemail.hu  Tue Oct  4 16:18:23 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Tue Oct  4 16:18:31 2005
Subject: [mod_python] Publisher handler : 404 on html file (newbie)
Message-ID: <4342E38F.6090904@freemail.hu>

Hi all,

I've just tried my first publisher handler page with the following 
configuration:

<Directory /var/www/modpython_test>
         Options -Multiviews
         SetHandler python-program
         PythonHandler mod_python.publisher
         PythonDebug on
</Directory>

If I have a bmath.html file in the /var/www/modpython_test directory, 
than I get a 404 trying to query it (and any other file in this 
directory, be it html or py script!). However, if I move this bmath.html 
file to /var/www then everything works well, and I can even reach my 
handler script basic_math.py sitting in /var/www/modpython_test like this:

<form action="modpython_test/basic_math/add" >
....

I've searched in the archives, but have only found:

"If mod_python picks the wrong module to import, a number of possible 
faulures can happen, depending on subtlties of the configuration and the 
nature of the module. You might get a blank page, or you might get the 
text of the actual script dumped, or you might get an exception, or you 
might get a 404."

But here it is only a plain html file that needs to be fetched, so no 
module needs to be imported or anything. Why can't I put it into the 
modpython_test directory?

Thank you for your answers,
Balint Erdi
From list at joreybump.com  Tue Oct  4 16:45:01 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct  4 16:45:12 2005
Subject: [mod_python] Publisher handler : 404 on html file (newbie)
In-Reply-To: <4342E38F.6090904@freemail.hu>
References: <4342E38F.6090904@freemail.hu>
Message-ID: <4342E9CD.5050806@joreybump.com>

Erdi Balint wrote:
> Hi all,
> 
> I've just tried my first publisher handler page with the following 
> configuration:
> 
> <Directory /var/www/modpython_test>
>         Options -Multiviews
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug on
> </Directory>
> 
> If I have a bmath.html file in the /var/www/modpython_test directory, 
> than I get a 404 trying to query it (and any other file in this 
> directory, be it html or py script!). However, if I move this bmath.html 
> file to /var/www then everything works well, and I can even reach my 
> handler script basic_math.py sitting in /var/www/modpython_test like this:
> 
> <form action="modpython_test/basic_math/add" >
> ....
> 
> I've searched in the archives, but have only found:
> 
> "If mod_python picks the wrong module to import, a number of possible 
> faulures can happen, depending on subtlties of the configuration and the 
> nature of the module. You might get a blank page, or you might get the 
> text of the actual script dumped, or you might get an exception, or you 
> might get a 404."
> 
> But here it is only a plain html file that needs to be fetched, so no 
> module needs to be imported or anything. Why can't I put it into the 
> modpython_test directory?

The SetHandler directive causes *all* files in the directory to be 
handled by mod_python.

If you want to mix files in a directory, use AddHandler with an 
extension, instead:

<Directory /var/www/modpython_test>
          Options -Multiviews
          AddHandler python-program .py
          PythonHandler mod_python.publisher
          PythonDebug on
</Directory>

Or you can get tricky and use FilesMatch:

<FilesMatch "someuniquename|anotheruniquename">
        SetHandler python-program
        PythonHandler mod_python.publisher
</FilesMatch>

With AddHandler, you must specify the extension:

  <form action="modpython_test/basic_math.py/add">

With the FilesMatch hack, you can leave off the extension (as with 
SetHandler), but you must be very careful that there are no other 
matches for the unique string you use. It becomes sort of a "registry" 
for your Published modules, and adds a little work to administration. I 
do use it on some production machines, however, and it works fine.

FWIW, I prefer to use SetHandler, putting all publisher modules in a 
single directory and storing other types of resources elsewhere.

From grahamd at dscpl.com.au  Tue Oct  4 17:28:47 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct  4 17:29:06 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <c298f2d70510040042q85a02eag@mail.gmail.com>
References: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>
	<1128410738.19828.33.camel@bigmac.taumu.com>
	<c298f2d70510040042q85a02eag@mail.gmail.com>
Message-ID: <61771075-40A9-4007-BE80-A94B9A5E2A79@dscpl.com.au>


On 04/10/2005, at 5:42 PM, Nicolas Lehuen wrote:

> OK now I understand, I thought your message and the second one were  
> from the same person :).
>
> A lot of what has been said applies to you : it looks like the  
> objects you store in the session sometimes reference a function  
> which is not picklable. So try to work around this by storing a  
> real boolean value instead of PgBoolean.
>
> The real curious thing is that your problem is intermittent,  
> though. I don't know enough about PsycoPG to tell if this is normal  
> or not.

Except that mod_python 3.2 isn't being used in this case.

The only way I can see there possibly being a problem is if the
apache.import_module() method were being used to import
pyPgSQL module and it was getting reloaded. I would expect
though that pyPgSQL is a standard module in site-packages
though so would be imported using "import". Yes/No?

> Regards,
> Nicolas
>
> 2005/10/4, Terence MacDonald <terry.macdonald@dsl.pipex.com>:
> On Mon, 2005-10-03 at 21:53 -0700, GATOR AIDE wrote:
> > After updating mod_python 3.1.4 to 3.2.2b I am getting
> > an error:
> >
> > PythonHandler mod_python.publisher: TypeError: can't
> > pickle function objects
> >
> > I am storing a function in the session and calling
> > session.save(). (Which is when the error is raised.)
> >
> > Using mod_python 3.1.4 the code works just fine but
> > after the update I am now seeing this error.
> >
> > The code simply stores a dictionary and few function
> > callbacks in the session and loops through several
> > functions until it is done processing.
> >
> > Not sure if anyone else has had this problem? I
> > running centos 2.4.21-27.0.4.ELsmp on a x86_64
> > platform. Python 2.4.2 (same error w/2.4.1). Apache
> > 2.0.46.
> >
> > I wasn't sure if this is the right place to post this,
> > so I apologize if I should have posted the question
> > elsewhere.
> >
> For the first time in ages I send in a problem of mine to the list;  
> one
> which is really slowing me down, and it gets hijacked almost
> immediately! bally typical!
>
> Are the hijacked questions responses applicable to my problem or did I
> say something out of order? :3)
>
> Cheers
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051005/a741d0ad/attachment.html
From terry.macdonald at dsl.pipex.com  Tue Oct  4 18:08:12 2005
From: terry.macdonald at dsl.pipex.com (Terence MacDonald)
Date: Tue Oct  4 18:08:22 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <61771075-40A9-4007-BE80-A94B9A5E2A79@dscpl.com.au>
References: <20051004045353.53993.qmail@web31909.mail.mud.yahoo.com>
	<1128410738.19828.33.camel@bigmac.taumu.com>
	<c298f2d70510040042q85a02eag@mail.gmail.com>
	<61771075-40A9-4007-BE80-A94B9A5E2A79@dscpl.com.au>
Message-ID: <1128463693.19828.60.camel@bigmac.taumu.com>


On Wed, 2005-10-05 at 07:28 +1000, Graham Dumpleton wrote:
> The only way I can see there possibly being a problem is if the
> apache.import_module() method were being used to import
> pyPgSQL module and it was getting reloaded. I would expect
> though that pyPgSQL is a standard module in site-packages
> though so would be imported using "import". Yes/No?
> 
the PyPgSQL module PgSQL.py is imported using the usual "import", this
import resides in my database module which itself is imported, by my
processing modules, using apache.import_module(). I have PythonOption
AutoReload set to 'on'

I have stopped using apache.import_module inline to import my database
module when required and resorted to 'top of the file' import instead.
The problem appears (fingers crossed!) to have gone away.

I am still not sure what the problem or the solution is/was, except that
it is related to import_module, pickling session data that has object
instances and a pickling helper function (in this case a function named
_B that aids in pickling PgBoolean instances and is declared in the
init.py file of the PyPgSQL package) not being at the same address....
If that makes sense

From pigwin32 at gmail.com  Tue Oct  4 18:39:42 2005
From: pigwin32 at gmail.com (David Clarke)
Date: Tue Oct  4 18:39:47 2005
Subject: [mod_python] Multi-tier functionality
Message-ID: <12b7ac1e0510041539u202d86fbr3f18c4bb72380063@mail.gmail.com>

This might be a little out of left field. Say I wanted to use mod_python in
a mult-tier environment where I have a website that uses mod_python, some
business rules, and a database. I want to minimise the coupling between the
tiers, i.e. I don't want to make database calls directly from my web tier.
What is a good approach for doing this? What is a good mechanism for hosting
business rules?

Ob disclosure: I normally develop in a Windows environment with C# and .Net.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051005/143fc809/attachment-0001.html
From grahamd at dscpl.com.au  Tue Oct  4 19:12:45 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct  4 19:12:55 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
Message-ID: <1128467565.19364@dscpl.user.openhosting.com>

Terence MacDonald wrote ..
> 
> On Wed, 2005-10-05 at 07:28 +1000, Graham Dumpleton wrote:
> > The only way I can see there possibly being a problem is if the
> > apache.import_module() method were being used to import
> > pyPgSQL module and it was getting reloaded. I would expect
> > though that pyPgSQL is a standard module in site-packages
> > though so would be imported using "import". Yes/No?
> > 
> the PyPgSQL module PgSQL.py is imported using the usual "import", this
> import resides in my database module which itself is imported, by my
> processing modules, using apache.import_module(). I have PythonOption
> AutoReload set to 'on'
> 
> I have stopped using apache.import_module inline to import my database
> module when required and resorted to 'top of the file' import instead.
> The problem appears (fingers crossed!) to have gone away.
> 
> I am still not sure what the problem or the solution is/was, except that
> it is related to import_module, pickling session data that has object
> instances and a pickling helper function (in this case a function named
> _B that aids in pickling PgBoolean instances and is declared in the
> init.py file of the PyPgSQL package) not being at the same address....
> If that makes sense

In short, in mod_python 3.1.4 and earlier, pickling of anything which
depends on a function object which resides in a module imported using
apache.import_module() will not be reliable. With the changes in 3.2, it
simply will not work.

Lets start with the following tests:

# >>> import pickle
# >>> def a(): pass
# ... 
# >>> pickle.dumps(a)
# 'c__main__\na\np0\n.'
# >>> z = a
# >>> pickle.dumps(z)
# 'c__main__\na\np0\n.'

As you can see, it is possible to pickle the function object. This can
be done even through a copy of the function object by reference,
although in that case the pickled object still refers to the original
function object.

Now lets delete the original function object and pickle the copy again.

# >>> del a
# >>> pickle.dumps(z)
# Traceback (most recent call last):
# ....... deleted traceback
# pickle.PicklingError: Can't pickle <function a at 0x612b0>: it's not found as __main__.a

Because the original function object was deleted from where it was
created, one cannot now even pickle the copy.

Now lets recreate the original function object.

# >>> def a(): pass
# ... 
# >>> pickle.dumps(z)
# Traceback (most recent call last):
# ....... deleted traceback
# pickle.PicklingError: Can't pickle <function a at 0x612b0>: it's not the same object as __main__.a

Notice how the exception message has changed. It recognises that "a"
exists but realises that it is actually a different function object from
which the "z" copy was originally made.

Where problems can start occuring in mod_python 3.1.4 and earlier is if
the function object is cached in some data object which is held outside
of the module the function object was defined in. If the original module
holding the original function object were now reloaded because of the
automatic module reloading mechanism implemented by the
apache.import_module() function, an attempt to pickle the data object
which had cached the function object will fail. This is because the
original function object which had been copied from will have been
overrwritten by a new one when the module was reloaded.

This sort of problem although it will not occur for an instance of a
class object, will occur for the class object type itself.

# >>> class B: pass
# ... 
# >>> b=B()
# >>> pickle.dumps(b)
# '(i__main__\nB\np0\n(dp1\nb.'
# >>> del B
# >>> pickle.dumps(b)
# '(i__main__\nB\np0\n(dp1\nb.'

# >>> class B: pass
# ... 
# >>> pickle.dumps(B)
# 'c__main__\nB\np0\n.'
# >>> C = B
# >>> pickle.dumps(C)
# 'c__main__\nB\np0\n.'
# >>> del B
# >>> pickle.dumps(C)
# Traceback (most recent call last):
# ........ deleted traceback
# pickle.PicklingError: Can't pickle <class __main__.B at 0x53ab0>: it's not found as __main__.B

Thus, in practice, even in mod_python 3.1.4 and earlier I would not
recommend trying to pickle function objects or class object types,
unless you are absolutely gauranteed that the module that the original
function object instance or class object type resides in is only
imported using "import" and is never in anyway reloaded.

If wanted to ensure that no strange problems were going to occur, I
would possibly go as far as suggesting that only basic Python types,
ie., scalars, tuples, lists and dictionaries, be pickled along with
Session objects.

One other obscure area that would worry me in respect of pickling and
mod_python is that different parts of a web site can have different
PythonPath settings. The issue here is that when unpickling certain
objects, such as function objects and class object types, the original
module containing a type must be importable within the context that the
unpickling is occuring. This is so that if it hasn't already been
imported it can be automatically imported.

What though happens when the pickling occurs in one part of the
namespace of a web site and it is unpickled in another where PythonPath
is set differently and the required module hadn't already been imported,
but doesn't appear in any directory specificed by PythonPath. Because of
how mod_python can overlay same named modules over the top of each other
in mod_python 3.1.4, it may also not import the correct module, plus
there is a mixing of the "import" and "apache.import_module()"
mechanisms.

I may be overly paranoid, but that is what defensive programming is all
about if you really want to ensure you are building a robust system
where you avoid any hint of trouble. :-)

Anyway, hope this might help in some way to explain your problems.

Graham




From grahamd at dscpl.com.au  Tue Oct  4 19:20:07 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct  4 19:20:14 2005
Subject: [mod_python] Multi-tier functionality
Message-ID: <1128468007.26815@dscpl.user.openhosting.com>

David Clarke wrote ..
> This might be a little out of left field. Say I wanted to use mod_python in
> a mult-tier environment where I have a website that uses mod_python, some
> business rules, and a database. I want to minimise the coupling between the
> tiers, i.e. I don't want to make database calls directly from my web tier.
> What is a good approach for doing this? What is a good mechanism for hosting
> business rules?

One way would be to embed all the business logic and database access in
a separate process which implements a XML-RPC server. The code written
in mod_python can then use XML-RPC calls to access the backend server to
do the real work. One could also use a full messaging system to
communicate between mod_python handlers and the backend rather than XML-
RPC. This would possibly avoid the socket creation costs associated with
individual XML-RPC calls.

Graham
From grahamd at dscpl.com.au  Tue Oct  4 22:39:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct  4 22:39:57 2005
Subject: [mod_python] Multi-tier functionality
Message-ID: <1128479990.16236@dscpl.user.openhosting.com>

David Clarke wrote ..
> On 10/5/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > David Clarke wrote ..
> > > This might be a little out of left field. Say I wanted to use mod_python
> > in
> > > a mult-tier environment where I have a website that uses mod_python,
> > some
> > > business rules, and a database. I want to minimise the coupling between
> > the
> > > tiers, i.e. I don't want to make database calls directly from my web
> > tier.
> > > What is a good approach for doing this? What is a good mechanism for
> > hosting
> > > business rules?
> >
> > One way would be to embed all the business logic and database access
> in
> > a separate process which implements a XML-RPC server. The code written
> > in mod_python can then use XML-RPC calls to access the backend server
> to
> > do the real work. One could also use a full messaging system to
> > communicate between mod_python handlers and the backend rather than XML-
> > RPC. This would possibly avoid the socket creation costs associated with
> > individual XML-RPC calls.
> >
> > Graham
> >
> 
> Thanks Graham, I guess that makes sense and I probably should have thought
> more about it before asking the question. Is this something people actually
> do with mod_python? Presumably Python could be used to provide the business
> logic in the middle tier as well.

I'd be surprised if people aren't doing this.

I personally use XML-RPC calls out of mod_python to multiple application
instances running across about 120 sites. This though is purely for
monitoring and control of some production systems for technical reasons
and isn't relied upon by the business as such. 

One good point about using XML-RPC is that one has a large choice of
languages one could use for the backend as a lot of languages have
server side support for XML-RPC. Eg. Python, C, C++ Java, Perl etc etc.
In my case the backend applications are written in C++, although if I
had a chance to do it again, would use Python. :-)

Graham
From nicolas.lehuen at gmail.com  Wed Oct  5 02:11:35 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Oct  5 02:11:41 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <1128467565.19364@dscpl.user.openhosting.com>
References: <1128467565.19364@dscpl.user.openhosting.com>
Message-ID: <c298f2d70510042311i720667a8l@mail.gmail.com>

Hi Graham,

Thanks for those thorough tests. As you suggested, maybe we should
only support marshallable objects in sessions, rather than picklable
objects ?

Regards,
Nicolas

2005/10/5, Graham Dumpleton <grahamd@dscpl.com.au>:
> Terence MacDonald wrote ..
> >
> > On Wed, 2005-10-05 at 07:28 +1000, Graham Dumpleton wrote:
> > > The only way I can see there possibly being a problem is if the
> > > apache.import_module() method were being used to import
> > > pyPgSQL module and it was getting reloaded. I would expect
> > > though that pyPgSQL is a standard module in site-packages
> > > though so would be imported using "import". Yes/No?
> > >
> > the PyPgSQL module PgSQL.py is imported using the usual "import", this
> > import resides in my database module which itself is imported, by my
> > processing modules, using apache.import_module(). I have PythonOption
> > AutoReload set to 'on'
> >
> > I have stopped using apache.import_module inline to import my database
> > module when required and resorted to 'top of the file' import instead.
> > The problem appears (fingers crossed!) to have gone away.
> >
> > I am still not sure what the problem or the solution is/was, except that
> > it is related to import_module, pickling session data that has object
> > instances and a pickling helper function (in this case a function named
> > _B that aids in pickling PgBoolean instances and is declared in the
> > init.py file of the PyPgSQL package) not being at the same address....
> > If that makes sense
>
> In short, in mod_python 3.1.4 and earlier, pickling of anything which
> depends on a function object which resides in a module imported using
> apache.import_module() will not be reliable. With the changes in 3.2, it
> simply will not work.
>
> Lets start with the following tests:
>
> # >>> import pickle
> # >>> def a(): pass
> # ...
> # >>> pickle.dumps(a)
> # 'c__main__\na\np0\n.'
> # >>> z = a
> # >>> pickle.dumps(z)
> # 'c__main__\na\np0\n.'
>
> As you can see, it is possible to pickle the function object. This can
> be done even through a copy of the function object by reference,
> although in that case the pickled object still refers to the original
> function object.
>
> Now lets delete the original function object and pickle the copy again.
>
> # >>> del a
> # >>> pickle.dumps(z)
> # Traceback (most recent call last):
> # ....... deleted traceback
> # pickle.PicklingError: Can't pickle <function a at 0x612b0>: it's not found as __main__.a
>
> Because the original function object was deleted from where it was
> created, one cannot now even pickle the copy.
>
> Now lets recreate the original function object.
>
> # >>> def a(): pass
> # ...
> # >>> pickle.dumps(z)
> # Traceback (most recent call last):
> # ....... deleted traceback
> # pickle.PicklingError: Can't pickle <function a at 0x612b0>: it's not the same object as __main__.a
>
> Notice how the exception message has changed. It recognises that "a"
> exists but realises that it is actually a different function object from
> which the "z" copy was originally made.
>
> Where problems can start occuring in mod_python 3.1.4 and earlier is if
> the function object is cached in some data object which is held outside
> of the module the function object was defined in. If the original module
> holding the original function object were now reloaded because of the
> automatic module reloading mechanism implemented by the
> apache.import_module() function, an attempt to pickle the data object
> which had cached the function object will fail. This is because the
> original function object which had been copied from will have been
> overrwritten by a new one when the module was reloaded.
>
> This sort of problem although it will not occur for an instance of a
> class object, will occur for the class object type itself.
>
> # >>> class B: pass
> # ...
> # >>> b=B()
> # >>> pickle.dumps(b)
> # '(i__main__\nB\np0\n(dp1\nb.'
> # >>> del B
> # >>> pickle.dumps(b)
> # '(i__main__\nB\np0\n(dp1\nb.'
>
> # >>> class B: pass
> # ...
> # >>> pickle.dumps(B)
> # 'c__main__\nB\np0\n.'
> # >>> C = B
> # >>> pickle.dumps(C)
> # 'c__main__\nB\np0\n.'
> # >>> del B
> # >>> pickle.dumps(C)
> # Traceback (most recent call last):
> # ........ deleted traceback
> # pickle.PicklingError: Can't pickle <class __main__.B at 0x53ab0>: it's not found as __main__.B
>
> Thus, in practice, even in mod_python 3.1.4 and earlier I would not
> recommend trying to pickle function objects or class object types,
> unless you are absolutely gauranteed that the module that the original
> function object instance or class object type resides in is only
> imported using "import" and is never in anyway reloaded.
>
> If wanted to ensure that no strange problems were going to occur, I
> would possibly go as far as suggesting that only basic Python types,
> ie., scalars, tuples, lists and dictionaries, be pickled along with
> Session objects.
>
> One other obscure area that would worry me in respect of pickling and
> mod_python is that different parts of a web site can have different
> PythonPath settings. The issue here is that when unpickling certain
> objects, such as function objects and class object types, the original
> module containing a type must be importable within the context that the
> unpickling is occuring. This is so that if it hasn't already been
> imported it can be automatically imported.
>
> What though happens when the pickling occurs in one part of the
> namespace of a web site and it is unpickled in another where PythonPath
> is set differently and the required module hadn't already been imported,
> but doesn't appear in any directory specificed by PythonPath. Because of
> how mod_python can overlay same named modules over the top of each other
> in mod_python 3.1.4, it may also not import the correct module, plus
> there is a mixing of the "import" and "apache.import_module()"
> mechanisms.
>
> I may be overly paranoid, but that is what defensive programming is all
> about if you really want to ensure you are building a robust system
> where you avoid any hint of trouble. :-)
>
> Anyway, hope this might help in some way to explain your problems.
>
> Graham
>
>
>
>
>

From reghigh at thefactz.org  Wed Oct  5 12:04:37 2005
From: reghigh at thefactz.org (reghigh)
Date: Wed Oct  5 12:04:55 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
Message-ID: <4343F995.8080604@thefactz.org>

I am encountering the following issue (which has already been raised on 
this list about a year ago~[1]) relating to multiple calls to 
authenhandler. To demonstrate I have the following:

apache2 httpd.conf
******************

<VirtualHost *:80>
   ServerName static
   DocumentRoot <omitted>

   PythonPath "['<omitted>'] + sys.path"
   PythonAuthenHandler test
   PythonDebug On

   <Location />
       AuthType Basic
       AuthName "Restricted Area"
       Require valid-user
   </Location>
</VirtualHost>

test.py
*******

from mod_python import apache

count = 0

def authenhandler(req):

     pw = req.get_basic_auth_pw()
     user = req.user
     global count
     count += 1
     raise Exception('%s, %s, %s, %s, %s, %s' % \
         (req.handler, req.unparsed_uri,
         req.path_info, req.used_path_info))

Results
*******

Note output is trimmed for readability~[2]

url: http://static/x

Exception: None, /x, , 2

url: http://static/x/y

Exception: None, /y, , 2
Exception: None, /x/y, /y, 2

url: http://static/x/y/z

Exception: None, /z, , 2
Exception: None, /y/z, /y, 2
Exception: None, /x/y/z, /y/z, 2

etc

Note that this is invariant to url naming used: /<1>/<2>/.../<n>

produces exceptions with unparsed uri sections:
   /<n>
   /<n-1>/<n>
   ......

 From now on will use notation <url> -> (url1, url2, ....) to mean a 
given url produced an exceptions in order with unparsed_uri = url1, url2 
etc

Varying Location Directive
==========================

Now experimentation yielded the following. If Location directive was 
changed say to

<Location /x>

Then

   /x -> (/x) = 1 request
   /xx -> not processed by handler
   /x/y -> (/x/y) = 1 request
   /x/x/y -> (/x/y, /x/x/y) = 2 requests

<Location ~ "^/[xy]">
(NB: this all works with <LocationMatch "^/[xy]">)

Then

   /x -> (/x) = 1R
   /xx -> (/xx) = 1R
   /x/y -> (/y, /x/y) = 2R
   /x/z/ -> (/x/z) = 1R
   /x/y/z -> (/y/z, /x/y/z) = 2R
   /x/y/z/x -> (/y/z/x, /x/y/z/x) = 2R
   /x/y/x -> (/x, /y/x, /x/y/x) = 3R
   /x/y/ -> (/y/, /x/y/) = 2R

This suggests that somehow the Location directive (i have also confirmed 
similar behaviour using the <Directory>) gives rise to multiple requests 
to authenhandler. However this matching to generate requests as shown 
above does not occur in any simple way (it seems to match from the left 
hand side of the url string but once it encounters a non-match it halts).

Multiple calls not only cause serious overhead if authenticating off a 
database but also play havoc with a system based access control via urls 
since you want to match against the full url but the authenhandler gets 
the full url last out of all the urls it gets passed. What i want is for 
the Location directive to generate a single call to the authenhandler 
with the whole uri being passed.

Does anyone have any ideas what is causing this and how I could solve 
the problem.

Regards,

Tristan

------------------

[1] http://www.modpython.org/pipermail/mod_python/2004-November/016750.html
Complete summary here: http://www.scanmine.com/mp/mod_python_b_p.html

[2] For example

Exception: None, /y, , 2, None
Exception: None, /x/y, /y, 2, None

in full was:

<pre>
Mod_python error: "PythonAuthenHandler test"

Traceback (most recent call last):

   File 
"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/mod_python/apache.py", 
line 299, in HandlerDispatch
     result = object(req)

   File "/Users/rgrp/Sites/python/test.py", line 11, in authenhandler
     raise Exception('%s, %s, %s, %s, %s' % \

Exception: None, /y, , 2, None

</pre>

<pre>
Mod_python error: "PythonAuthenHandler test"

Traceback (most recent call last):

   File 
"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/mod_python/apache.py", 
line 299, in HandlerDispatch
     result = object(req)

   File "/Users/rgrp/Sites/python/test.py", line 11, in authenhandler
     raise Exception('%s, %s, %s, %s, %s' % \

Exception: None, /x/y, /y, 2, None

</pre>
From grisha at modpython.org  Wed Oct  5 16:44:14 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Oct  5 16:44:41 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <4343F995.8080604@thefactz.org>
References: <4343F995.8080604@thefactz.org>
Message-ID: <20051005164303.V21874@grisha.dyndns.org>



On Wed, 5 Oct 2005, reghigh wrote:

> I am encountering the following issue

I've read the e-mail, but I'm not sure I understand - what exactly is the 
issue?

Grisha
From kodixos at gmail.com  Wed Oct  5 17:50:03 2005
From: kodixos at gmail.com (Robert Wallner)
Date: Wed Oct  5 17:50:07 2005
Subject: [mod_python] Session Cookie Name
In-Reply-To: <1128416674.19828.37.camel@bigmac.taumu.com>
References: <1128416674.19828.37.camel@bigmac.taumu.com>
Message-ID: <250ed040510051450l592a90a7nb0c4a1a3efe18722@mail.gmail.com>

On 10/4/05, Terence MacDonald <terry.macdonald@dsl.pipex.com> wrote:
>
> mod_python 3.1.4
>
> Anyone been able to change the name of the session cookie? According to
> the Session.py module you should be able to do it in the apache config
> file thus;

 You could use
 from mod_python import Session
Session.COOKIE_NAME = "newcookiename"
 --
Robert Wallner
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051005/62beeb41/attachment.html
From grahamd at dscpl.com.au  Wed Oct  5 18:33:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct  5 18:33:44 2005
Subject: [mod_python] Session Cookie Name
In-Reply-To: <250ed040510051450l592a90a7nb0c4a1a3efe18722@mail.gmail.com>
References: <1128416674.19828.37.camel@bigmac.taumu.com>
	<250ed040510051450l592a90a7nb0c4a1a3efe18722@mail.gmail.com>
Message-ID: <2B7C2DFB-920F-454F-B8AB-96D98AE2505A@dscpl.com.au>


On 06/10/2005, at 7:50 AM, Robert Wallner wrote:

>
> On 10/4/05, Terence MacDonald <terry.macdonald@dsl.pipex.com> wrote:
> mod_python 3.1.4
>
> Anyone been able to change the name of the session cookie?   
> According to
> the Session.py module you should be able to do it in the apache config
> file thus;
>
> You could use
>
> from mod_python import Session
> Session.COOKIE_NAME = "newcookiename"

Can't check source code at the moment, but If this is changing
the global cookie name it would be a dangerous thing to do
from within an actual handler.

If a request came in under a different URL in the same interpreter
which used the original cookie name before it got changed that
user session wouldn't work after the change by the different
handler.

Without having 3.2 where the feature for changing cookie names
exists, what you can do is manage the cookie directly yourself
and when you have extracted the SID from your cookie, provide
it to the constructor of Session when you are creating it.

You could still modify Session.COOKIE_NAME, but you would
have to do it from a module imported using the PythonImport
directive, prior to any requests being handled.

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051006/a30d517d/attachment.html
From jg.lists at sympatico.ca  Wed Oct  5 19:00:42 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Oct  5 18:58:09 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <4343F995.8080604@thefactz.org>
References: <4343F995.8080604@thefactz.org>
Message-ID: <43445B1A.8000008@sympatico.ca>

I wonder if this is just the way apache is supposed to work? Perhaps
it's a feature, not a bug? I can see the logic of checking the
authorization for each subdirectory.

 From the apache documentation I found the following somewhat related
information which may give some insight...  or it may be totally
irrelevant ;).

http://httpd.apache.org/docs/2.0/howto/htaccess.html
"""
When (not) to use .htaccess files

<snip />

The first of these is performance. When AllowOverride  is set to allow
the use of .htaccess files, Apache will look in every directory for
.htaccess files. Thus, permitting .htaccess files causes a performance
hit, whether or not you actually even use them! Also, the .htaccess file
is loaded every time a document is requested.

Further note that Apache must look for .htaccess files in all
higher-level directories, in order to have a full complement of
directives that it must apply. (See section on how directives are
applied.) Thus, if a file is requested out of a directory
/www/htdocs/example, Apache must look for the following files:

/.htaccess
/www/.htaccess
/www/htdocs/.htaccess
/www/htdocs/example/.htaccess

And so, for each file access out of that directory, there are 4
additional file-system accesses, even if none of those files are
present. (Note that this would only be the case if .htaccess files were
enabled for /, which is not usually the case.)
See  I see that apache will attempt to read .htaccess for all the
subdirectories in a request.
"""

The important point is that apache attempts to read the .htaccess file
for each subdirectory. It's not too much of a stretch to imagine that it
may call the auth handler once for each subdirectory in a url as well.

What happens if you set "AllowOverride None"?
Note that AllowOverride is only available in a <Directory> section.

None of this is a solution to your problem, but it may spark some ideas.

Regards,
Jim


reghigh wrote:
> I am encountering the following issue (which has already been raised on 
> this list about a year ago~[1]) relating to multiple calls to 
> authenhandler. To demonstrate I have the following:
> 
> apache2 httpd.conf
> ******************
> 
> <VirtualHost *:80>
>   ServerName static
>   DocumentRoot <omitted>
> 
>   PythonPath "['<omitted>'] + sys.path"
>   PythonAuthenHandler test
>   PythonDebug On
> 
>   <Location />
>       AuthType Basic
>       AuthName "Restricted Area"
>       Require valid-user
>   </Location>
> </VirtualHost>
> 
> test.py
> *******
> 
> from mod_python import apache
> 
> count = 0
> 
> def authenhandler(req):
> 
>     pw = req.get_basic_auth_pw()
>     user = req.user
>     global count
>     count += 1
>     raise Exception('%s, %s, %s, %s, %s, %s' % \
>         (req.handler, req.unparsed_uri,
>         req.path_info, req.used_path_info))
> 
> Results
> *******
> 
> Note output is trimmed for readability~[2]
> 
> url: http://static/x
> 
> Exception: None, /x, , 2
> 
> url: http://static/x/y
> 
> Exception: None, /y, , 2
> Exception: None, /x/y, /y, 2
> 
> url: http://static/x/y/z
> 
> Exception: None, /z, , 2
> Exception: None, /y/z, /y, 2
> Exception: None, /x/y/z, /y/z, 2
> 
> etc
> 
> Note that this is invariant to url naming used: /<1>/<2>/.../<n>
> 
> produces exceptions with unparsed uri sections:
>   /<n>
>   /<n-1>/<n>
>   ......
> 
>  From now on will use notation <url> -> (url1, url2, ....) to mean a 
> given url produced an exceptions in order with unparsed_uri = url1, url2 
> etc
> 
> Varying Location Directive
> ==========================
> 
> Now experimentation yielded the following. If Location directive was 
> changed say to
> 
> <Location /x>
> 
> Then
> 
>   /x -> (/x) = 1 request
>   /xx -> not processed by handler
>   /x/y -> (/x/y) = 1 request
>   /x/x/y -> (/x/y, /x/x/y) = 2 requests
> 
> <Location ~ "^/[xy]">
> (NB: this all works with <LocationMatch "^/[xy]">)
> 
> Then
> 
>   /x -> (/x) = 1R
>   /xx -> (/xx) = 1R
>   /x/y -> (/y, /x/y) = 2R
>   /x/z/ -> (/x/z) = 1R
>   /x/y/z -> (/y/z, /x/y/z) = 2R
>   /x/y/z/x -> (/y/z/x, /x/y/z/x) = 2R
>   /x/y/x -> (/x, /y/x, /x/y/x) = 3R
>   /x/y/ -> (/y/, /x/y/) = 2R
> 
> This suggests that somehow the Location directive (i have also confirmed 
> similar behaviour using the <Directory>) gives rise to multiple requests 
> to authenhandler. However this matching to generate requests as shown 
> above does not occur in any simple way (it seems to match from the left 
> hand side of the url string but once it encounters a non-match it halts).
> 
> Multiple calls not only cause serious overhead if authenticating off a 
> database but also play havoc with a system based access control via urls 
> since you want to match against the full url but the authenhandler gets 
> the full url last out of all the urls it gets passed. What i want is for 
> the Location directive to generate a single call to the authenhandler 
> with the whole uri being passed.
> 
> Does anyone have any ideas what is causing this and how I could solve 
> the problem.
> 
> Regards,
> 
> Tristan
> 
> ------------------
> 
> [1] http://www.modpython.org/pipermail/mod_python/2004-November/016750.html
> Complete summary here: http://www.scanmine.com/mp/mod_python_b_p.html
> 
> [2] For example
> 
> Exception: None, /y, , 2, None
> Exception: None, /x/y, /y, 2, None
> 
> in full was:
> 
> <pre>
> Mod_python error: "PythonAuthenHandler test"
> 
> Traceback (most recent call last):
> 
>   File 
> "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/mod_python/apache.py", 
> line 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/Users/rgrp/Sites/python/test.py", line 11, in authenhandler
>     raise Exception('%s, %s, %s, %s, %s' % \
> 
> Exception: None, /y, , 2, None
> 
> </pre>
> 
> <pre>
> Mod_python error: "PythonAuthenHandler test"
> 
> Traceback (most recent call last):
> 
>   File 
> "/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/mod_python/apache.py", 
> line 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/Users/rgrp/Sites/python/test.py", line 11, in authenhandler
>     raise Exception('%s, %s, %s, %s, %s' % \
> 
> Exception: None, /x/y, /y, 2, None
> 
> </pre>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 


From grisha at modpython.org  Wed Oct  5 23:20:05 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Oct  5 23:20:27 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <43445B1A.8000008@sympatico.ca>
References: <4343F995.8080604@thefactz.org> <43445B1A.8000008@sympatico.ca>
Message-ID: <20051005231340.D29249@grisha.dyndns.org>



On Wed, 5 Oct 2005, Jim Gallacher wrote:

> It's not too much of a stretch to imagine that it may call the auth 
> handler once for each subdirectory in a url as well.

This is exactly how it works - the handler is called once for every 
directory. One way to think of it is to ask a question - How else would 
you get an opportunity to check whether a directory is allowed to be seen 
from outside?

Grisha
From reghigh at thefactz.org  Thu Oct  6 05:13:15 2005
From: reghigh at thefactz.org (reghigh)
Date: Thu Oct  6 05:13:32 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <20051005231340.D29249@grisha.dyndns.org>
References: <4343F995.8080604@thefactz.org> <43445B1A.8000008@sympatico.ca>
	<20051005231340.D29249@grisha.dyndns.org>
Message-ID: <4344EAAB.9090904@thefactz.org>

Gregory (Grisha) Trubetskoy wrote:
> 
> 
> On Wed, 5 Oct 2005, Jim Gallacher wrote:
> 
>> It's not too much of a stretch to imagine that it may call the auth 
>> handler once for each subdirectory in a url as well.
> 
> 
> This is exactly how it works - the handler is called once for every 
> directory. One way to think of it is to ask a question - How else would 
> you get an opportunity to check whether a directory is allowed to be 
> seen from outside?

Thanks for the replies especially to Jim for the points about searching 
for htaccess. The idea about apache producing an authen request for each 
subdirectory is what I thought originally but the following results 
(from original mail) undermine that:

When I replace <Location /> with <Location /x>

Then

   /x -> (/x) = 1 request
   /xx -> not processed by handler
   /x/y -> (/x/y) = 1 request
   /x/x/y -> (/x/y, /x/x/y) = 2 requests

If apache really were checking every part of the hierarchy why don't we 
have:

/x/y -> (/y, /x/y)?

One answer might be that apache does go through every subdirectory and 
then matches against Location command so we would have:

/y -> Location /x -> no match
/x/y -> Location /x -> match

Under this hypothesis one should have /x/y/x -> (/x, /x/y/x).

However a quick check with /x/y/x shows this is not the case (this is 
also seen in the second example i give) since /x/y/x produces only one 
request (i.e. /x/y/x -> (/x/y/x)).

The second, more complex, LocationMatch testing in my original mail was 
an attempt to explore this further. What it means is that the best 
hypothesis I can come up with is:

1. Apache breaks a url up from top down so /x/y/z -> /z, /y/z, /x/y/z
2. Apache then matches each of these against the location directive. 
HOWEVER it must have some kind of rule where it first matches from the 
right end of that list and once it enconters a failure to match it halts.
3. Apache then generates authen requests etc

Item 2 is rather confusing since it definitely seems the authenhandler 
gets urls in the order given yet apache must process from complete url 
down to smallest fragment (how else do we explain that /x/y/x only 
generates one request?)

> What happens if you set "AllowOverride None"?
> Note that AllowOverride is only available in a <Directory> section. 

I have augmented my apache config to be:

   <Directory />
     AllowOverride None
   </Directory>
   <Location /x>
       AuthType Basic
       AuthName "Restricted Area"
       Require valid-user
   </Location>

And have also replaced / in Directory with document root but it makes no 
difference that I can see.

Regards,

Tristan
From trevor at thennion.demon.co.uk  Thu Oct  6 06:41:27 2005
From: trevor at thennion.demon.co.uk (Trevor Hennion)
Date: Thu Oct  6 06:41:34 2005
Subject: [Fwd: Re: [mod_python] multiple requests to authenhandler for a single
	url]
Message-ID: <4344FF57.9080008@thennion.demon.co.uk>


-------------- next part --------------
An embedded message was scrubbed...
From: Trevor Hennion <trevor@thennion.demon.co.uk>
Subject: Re: [mod_python] multiple requests to authenhandler for a single url
Date: Thu, 06 Oct 2005 11:22:32 +0100
Size: 4108
Url: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051006/edfea5e8/mod_pythonmultiplerequeststoauthenhandlerforasingleurl.mht
From terencemacdonald at gmail.com  Thu Oct  6 07:15:42 2005
From: terencemacdonald at gmail.com (Terence MacDonald)
Date: Thu Oct  6 07:15:51 2005
Subject: [mod_python] Session Pickling Error II - 3.2.2b
In-Reply-To: <1128467565.19364@dscpl.user.openhosting.com>
References: <1128467565.19364@dscpl.user.openhosting.com>
Message-ID: <6b53194a0510060415r61681b64g77e40c6d35aff62a@mail.gmail.com>

Thanks for the in depth explanation Graham.

It HAS helped me understand the problem and has helped me fix it (for now)

On a different note I would like to take this opportunity to voice my
appreciation to a number of volunteers (you know who you are) that have
stepped forward in the past year or so and given mod_python a fresh impetus.
I find you extremely helpful and knowledgeable.

Hats off to you guys!

Roll on 3.2 (3.3...)

On 10/5/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Terence MacDonald wrote ..
> >
> > On Wed, 2005-10-05 at 07:28 +1000, Graham Dumpleton wrote:
> > > The only way I can see there possibly being a problem is if the
> > > apache.import_module() method were being used to import
> > > pyPgSQL module and it was getting reloaded. I would expect
> > > though that pyPgSQL is a standard module in site-packages
> > > though so would be imported using "import". Yes/No?
> > >
> > the PyPgSQL module PgSQL.py is imported using the usual "import", this
> > import resides in my database module which itself is imported, by my
> > processing modules, using apache.import_module(). I have PythonOption
> > AutoReload set to 'on'
> >
> > I have stopped using apache.import_module inline to import my database
> > module when required and resorted to 'top of the file' import instead.
> > The problem appears (fingers crossed!) to have gone away.
> >
> > I am still not sure what the problem or the solution is/was, except that
> > it is related to import_module, pickling session data that has object
> > instances and a pickling helper function (in this case a function named
> > _B that aids in pickling PgBoolean instances and is declared in the
> > init.py file of the PyPgSQL package) not being at the same address....
> > If that makes sense
>
> In short, in mod_python 3.1.4 and earlier, pickling of anything which
> depends on a function object which resides in a module imported using
> apache.import_module() will not be reliable. With the changes in 3.2, it
> simply will not work.
>
> Lets start with the following tests:
>
> # >>> import pickle
> # >>> def a(): pass
> # ...
> # >>> pickle.dumps(a)
> # 'c__main__\na\np0\n.'
> # >>> z = a
> # >>> pickle.dumps(z)
> # 'c__main__\na\np0\n.'
>
> As you can see, it is possible to pickle the function object. This can
> be done even through a copy of the function object by reference,
> although in that case the pickled object still refers to the original
> function object.
>
> Now lets delete the original function object and pickle the copy again.
>
> # >>> del a
> # >>> pickle.dumps(z)
> # Traceback (most recent call last):
> # ....... deleted traceback
> # pickle.PicklingError: Can't pickle <function a at 0x612b0>: it's not
> found as __main__.a
>
> Because the original function object was deleted from where it was
> created, one cannot now even pickle the copy.
>
> Now lets recreate the original function object.
>
> # >>> def a(): pass
> # ...
> # >>> pickle.dumps(z)
> # Traceback (most recent call last):
> # ....... deleted traceback
> # pickle.PicklingError: Can't pickle <function a at 0x612b0>: it's not the
> same object as __main__.a
>
> Notice how the exception message has changed. It recognises that "a"
> exists but realises that it is actually a different function object from
> which the "z" copy was originally made.
>
> Where problems can start occuring in mod_python 3.1.4 and earlier is if
> the function object is cached in some data object which is held outside
> of the module the function object was defined in. If the original module
> holding the original function object were now reloaded because of the
> automatic module reloading mechanism implemented by the
> apache.import_module() function, an attempt to pickle the data object
> which had cached the function object will fail. This is because the
> original function object which had been copied from will have been
> overrwritten by a new one when the module was reloaded.
>
> This sort of problem although it will not occur for an instance of a
> class object, will occur for the class object type itself.
>
> # >>> class B: pass
> # ...
> # >>> b=B()
> # >>> pickle.dumps(b)
> # '(i__main__\nB\np0\n(dp1\nb.'
> # >>> del B
> # >>> pickle.dumps(b)
> # '(i__main__\nB\np0\n(dp1\nb.'
>
> # >>> class B: pass
> # ...
> # >>> pickle.dumps(B)
> # 'c__main__\nB\np0\n.'
> # >>> C = B
> # >>> pickle.dumps(C)
> # 'c__main__\nB\np0\n.'
> # >>> del B
> # >>> pickle.dumps(C)
> # Traceback (most recent call last):
> # ........ deleted traceback
> # pickle.PicklingError: Can't pickle <class __main__.B at 0x53ab0>: it's
> not found as __main__.B
>
> Thus, in practice, even in mod_python 3.1.4 and earlier I would not
> recommend trying to pickle function objects or class object types,
> unless you are absolutely gauranteed that the module that the original
> function object instance or class object type resides in is only
> imported using "import" and is never in anyway reloaded.
>
> If wanted to ensure that no strange problems were going to occur, I
> would possibly go as far as suggesting that only basic Python types,
> ie., scalars, tuples, lists and dictionaries, be pickled along with
> Session objects.
>
> One other obscure area that would worry me in respect of pickling and
> mod_python is that different parts of a web site can have different
> PythonPath settings. The issue here is that when unpickling certain
> objects, such as function objects and class object types, the original
> module containing a type must be importable within the context that the
> unpickling is occuring. This is so that if it hasn't already been
> imported it can be automatically imported.
>
> What though happens when the pickling occurs in one part of the
> namespace of a web site and it is unpickled in another where PythonPath
> is set differently and the required module hadn't already been imported,
> but doesn't appear in any directory specificed by PythonPath. Because of
> how mod_python can overlay same named modules over the top of each other
> in mod_python 3.1.4, it may also not import the correct module, plus
> there is a mixing of the "import" and "apache.import_module()"
> mechanisms.
>
> I may be overly paranoid, but that is what defensive programming is all
> about if you really want to ensure you are building a robust system
> where you avoid any hint of trouble. :-)
>
> Anyway, hope this might help in some way to explain your problems.
>
> Graham
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051006/fda24a07/attachment.html
From kodixos at gmail.com  Thu Oct  6 07:44:20 2005
From: kodixos at gmail.com (Robert Wallner)
Date: Thu Oct  6 07:44:25 2005
Subject: [mod_python] Session Cookie Name
In-Reply-To: <2B7C2DFB-920F-454F-B8AB-96D98AE2505A@dscpl.com.au>
References: <1128416674.19828.37.camel@bigmac.taumu.com>
	<250ed040510051450l592a90a7nb0c4a1a3efe18722@mail.gmail.com>
	<2B7C2DFB-920F-454F-B8AB-96D98AE2505A@dscpl.com.au>
Message-ID: <250ed040510060444i74ff8ednd222f5c350579621@mail.gmail.com>

On 10/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Can't check source code at the moment, but If this is changing
> the global cookie name it would be a dangerous thing to do
> from within an actual handler.
>
>
Of course, I forgot to mention that. I am changing the cookie name at the
top of the module containging the handler function.

--
Robert Wallner
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051006/67e2dd92/attachment.html
From grahamd at dscpl.com.au  Thu Oct  6 08:02:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct  6 08:02:43 2005
Subject: [mod_python] Session Cookie Name
In-Reply-To: <250ed040510060444i74ff8ednd222f5c350579621@mail.gmail.com>
References: <1128416674.19828.37.camel@bigmac.taumu.com>
	<250ed040510051450l592a90a7nb0c4a1a3efe18722@mail.gmail.com>
	<2B7C2DFB-920F-454F-B8AB-96D98AE2505A@dscpl.com.au>
	<250ed040510060444i74ff8ednd222f5c350579621@mail.gmail.com>
Message-ID: <4d1e26c9e67f4a68d2fc11be0ed4dfcc@dscpl.com.au>


On 06/10/2005, at 9:44 PM, Robert Wallner wrote:

>
>
> On 10/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> Can't check source code at the moment, but If this is changing
>> the global cookie name it would be a dangerous?thing to do
>> from within an actual handler.
>>
>
>  Of course, I forgot to mention that. I am changing the cookie
> name at the top of the module containging the handler function.

If you mean at global scope within the module, ie., it would only be
done at time of import of the handler module, would still be potentially
dangerous as requests could arrive for other handlers before your
handler is imported. When I said "handler" I meant anywhere in the
handler module, not just the handler function.

I'll agree that it will not be a problem if your handler is the only
handler defined for that interpreter instance, but if you are running
multiple handlers of your own or sharing with others, the only reliable
way of doing this, if you really want to do it this way, is to do it
from a module imported using PythonImport before any requests are
handled.

Graham


From kodixos at gmail.com  Thu Oct  6 09:21:36 2005
From: kodixos at gmail.com (Robert Wallner)
Date: Thu Oct  6 09:21:42 2005
Subject: [mod_python] Session Cookie Name
In-Reply-To: <4d1e26c9e67f4a68d2fc11be0ed4dfcc@dscpl.com.au>
References: <1128416674.19828.37.camel@bigmac.taumu.com>
	<250ed040510051450l592a90a7nb0c4a1a3efe18722@mail.gmail.com>
	<2B7C2DFB-920F-454F-B8AB-96D98AE2505A@dscpl.com.au>
	<250ed040510060444i74ff8ednd222f5c350579621@mail.gmail.com>
	<4d1e26c9e67f4a68d2fc11be0ed4dfcc@dscpl.com.au>
Message-ID: <250ed040510060621i11e3c922r5c035e5f3f94754c@mail.gmail.com>

On 10/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
>
> On 06/10/2005, at 9:44 PM, Robert Wallner wrote:
>
> >
> >
> > On 10/6/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >> Can't check source code at the moment, but If this is changing
> >> the global cookie name it would be a dangerousthing to do
> >> from within an actual handler.
> >>
> >
> > Of course, I forgot to mention that. I am changing the cookie
> > name at the top of the module containging the handler function.
>
> If you mean at global scope within the module, ie., it would only be
> done at time of import of the handler module, would still be potentially
> dangerous as requests could arrive for other handlers before your
> handler is imported. When I said "handler" I meant anywhere in the
> handler module, not just the handler function.
>
> I'll agree that it will not be a problem if your handler is the only
> handler defined for that interpreter instance, but if you are running
> multiple handlers of your own or sharing with others, the only reliable
> way of doing this, if you really want to do it this way, is to do it
> from a module imported using PythonImport before any requests are
> handled.
>
> Graham
>
>
You couldn't explain it better, sorry if I confused anyone. In my case, I
have exactly one handler in a main module. At the top of that module, I
initialize my system, like reading configuration files, connecting to the
database, change cookie name, etc. But then, this is correct only for this
case, ie a single handler.

--
Robert Wallner
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051006/104be4d9/attachment-0001.html
From reghigh at thefactz.org  Thu Oct  6 09:31:10 2005
From: reghigh at thefactz.org (reghigh)
Date: Thu Oct  6 09:31:30 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <4344FAE8.6000601@thennion.demon.co.uk>
References: <4343F995.8080604@thefactz.org>
	<43445B1A.8000008@sympatico.ca>	<20051005231340.D29249@grisha.dyndns.org>
	<4344EAAB.9090904@thefactz.org>
	<4344FAE8.6000601@thennion.demon.co.uk>
Message-ID: <4345271E.7080606@thefactz.org>

Trevor Hennion wrote:
> reghigh wrote:
> 
>> Gregory (Grisha) Trubetskoy wrote:
[snip]
> 
> 
> Hi,
> 
> There are limitations in using <Location> directives.
>  From the Apache manual:
> 
> <Location> sections operate completely outside the filesystem. This has 
> several consequences. Most importantly, <Location> directives should not 
> be used to control access to filesystem locations.
> When to use <Location>
> Use <Location> to apply directives to content that lives outside the 
> filesystem. For content that lives in the filesystem, use <Directory> 
> and <Files>. An exception is <Location />, which is an easy way to apply 
> a configuration to the entire server.
> 
> HTH
> 
> Trevor Hennion
> http://www.infocentrality.co.uk

Thanks for this Trevor. I had read this part of the manual as well as 
stuff on Directory etc before my original post. I pointed out in there 
that I could get similar behaviour using a Directory handler. 
Furthermore even leaving that aside I am not quite sure how this changes 
anything. I was using <Location /> precisely because I *do* want to 
restrict access to entire server. Futhermore I am not really concerned 
at present that Location may not be the best way to implement security 
(as detailed in the apache manual) but rather that the  Location 
directive seems to result in multiple calls to authenhandler with 
different url paths (as detailed in previous posts).

Regards,

Tristan
From grisha at modpython.org  Thu Oct  6 10:14:22 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Oct  6 10:14:42 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <4344EAAB.9090904@thefactz.org>
References: <4343F995.8080604@thefactz.org> <43445B1A.8000008@sympatico.ca>
	<20051005231340.D29249@grisha.dyndns.org>
	<4344EAAB.9090904@thefactz.org>
Message-ID: <20051006100752.B11273@grisha.dyndns.org>



On Thu, 6 Oct 2005, reghigh wrote:

> Under this hypothesis one should have /x/y/x -> (/x, /x/y/x).
>
> However a quick check with /x/y/x shows this is not the case (this is also 
> seen in the second example i give) since /x/y/x produces only one request 
> (i.e. /x/y/x -> (/x/y/x)).

I think this will depend on whether /x/y/x directories actually exist. If 
only the first x exists, then /x/y or /x/a/b/c/d/e are the same requests 
since everything after /x is ignored (in CGI terms, it becomes path_info).

My guess is that the actual rule is - one call to authen for the Location 
directive and then left to right for every actually existing directory on 
your file system. Once the path stops matching actual directories, the 
rest of the url is treated as path_info arguments.

Grisha
From reghigh at thefactz.org  Thu Oct  6 11:26:54 2005
From: reghigh at thefactz.org (reghigh)
Date: Thu Oct  6 11:27:20 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <20051006100752.B11273@grisha.dyndns.org>
References: <4343F995.8080604@thefactz.org> <43445B1A.8000008@sympatico.ca>
	<20051005231340.D29249@grisha.dyndns.org>
	<4344EAAB.9090904@thefactz.org>
	<20051006100752.B11273@grisha.dyndns.org>
Message-ID: <4345423E.1080609@thefactz.org>

Gregory (Grisha) Trubetskoy wrote:
> 
> 
> On Thu, 6 Oct 2005, reghigh wrote:
> 
>> Under this hypothesis one should have /x/y/x -> (/x, /x/y/x).
>>
>> However a quick check with /x/y/x shows this is not the case (this is 
>> also seen in the second example i give) since /x/y/x produces only one 
>> request (i.e. /x/y/x -> (/x/y/x)).
> 
> 
> I think this will depend on whether /x/y/x directories actually exist. 
> If only the first x exists, then /x/y or /x/a/b/c/d/e are the same 
> requests since everything after /x is ignored (in CGI terms, it becomes 
> path_info).
> 
> My guess is that the actual rule is - one call to authen for the 
> Location directive and then left to right for every actually existing 
> directory on your file system. Once the path stops matching actual 
> directories, the rest of the url is treated as path_info arguments.

None of these directories exists on my system. I.e. if successful all of 
these would result in a 404 not found result. so /x does not exist 
neither do /x/y, /x/y/z etc etc. Also why would /x/x result in two 
requests but /x/y in one (using <Location /x>)?

Regards,

Tristan
From grisha at modpython.org  Thu Oct  6 13:16:18 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Thu Oct  6 13:16:41 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <4345423E.1080609@thefactz.org>
References: <4343F995.8080604@thefactz.org> <43445B1A.8000008@sympatico.ca>
	<20051005231340.D29249@grisha.dyndns.org>
	<4344EAAB.9090904@thefactz.org>
	<20051006100752.B11273@grisha.dyndns.org>
	<4345423E.1080609@thefactz.org>
Message-ID: <20051006130005.A11273@grisha.dyndns.org>




On Thu, 6 Oct 2005, reghigh wrote:

> Also why would /x/x result in two requests but /x/y in one (using 
> <Location /x>)?

I don't know, in my test (mod_python 3.1.3, httpd 2.0.54), when no actual 
'x' directory exists, the traversal stops right there. When x does exist, 
it is called for /x/y, which is at it should be - it assumes that 'y' is a 
file in the directory 'x' (even if y does not exist).

Also there are a couple of other things in your prior e-mail that do not 
make a lot of sense. Given:

<VirtualHost *:80>
   ServerName static
   DocumentRoot <omitted>

   PythonPath "['<omitted>'] + sys.path"
   PythonAuthenHandler test
   PythonDebug On

   <Location /x>
       AuthType Basic
       AuthName "Restricted Area"
       Require valid-user
   </Location>
</VirtualHost>

You say that

   /xx -> not processed by handler

that cannot be if the "PythonAuthenHandler test" is at the VirtualHost 
level. I also don't see SetHandler/AddHandler for mod_python - is that at 
the server level?

Also I'm not sure how your request continues processing even though you're 
raising an exception - in my test the request processing stops with 
'Internal Server Error' as soon as the first exception is raised.

In any event - when the authen handler is called is not controlled by 
mod_python, it's something that is in the httpd territory. It would be 
nice perhaps to get to the bottom of what this behaviour should be and 
summarize it for the list.

Thanks,

Grisha
From eltuza at gmail.com  Thu Oct  6 13:26:46 2005
From: eltuza at gmail.com (El TuZa)
Date: Thu Oct  6 13:26:52 2005
Subject: [mod_python] mod_python.publisher undeterministic behavior
Message-ID: <1005e9c00510061026i6da6ead0t2f092b535afe9e10@mail.gmail.com>

Well, here's the problem. Publisher handler is behavig very
undeterministic with some user folders at my university labs
(mod_python2.7, python 2.1). Sometimes i just get the 404 error, while
other times (rarely) it works fine. The files and folders are the
same, and i don't know what could be wrong. I have almost the same
server running at home (mod_python 2.7, mod_python 2.4).
How could i solve this?
thanks,
tuza

From bradshak at us.ibm.com  Thu Oct  6 14:07:48 2005
From: bradshak at us.ibm.com (Ken Bradshaw)
Date: Thu Oct  6 14:06:51 2005
Subject: [mod_python] greetings and configuration issue
Message-ID: <OF8210393A.3CE7851E-ON87257092.005EDDC9-86257092.0063833E@us.ibm.com>






Hello All,
      I've recently taken an interest in python and mod_python in
particular.  For the past two years or so I've been developing enterprise
web apps in j2ee with WebSphere Applications Server and Portal Server, so
I'm pretty used to pouring over documentation when configuration issues
arise.  Unfortunately, I haven't found a solution to my problem regarding
the PythonHandler mod_python.publisher.  Here's a brief synopsis of my
environment and problem.

Environment:

I just used the standard packages provided by apt-get.

Debian 3.1 stable
apache 2.0.54
mod_python 3.1.3
Python 2.3.5

Configuration:

      file: /etc/apache2/sites-available/default

            <Directory /var/www/mod_python>
                            AllowOverride FileInfo
            </Directory>

      --for whatever reason I had to add this to get the .htaccess to work.

      file: /var/www/mod_python/.htaccess

            AddHandler python-program .py .psp
            PythonHandler mptest
            #PythonHandler mod_python.publisher | .py
            PythonHandler mod_python.psp | .psp
            PythonDebug On

      file: /var/www/mod_python/mptest.py

            from mod_python import apache

            def handler(req):
                  req.content_type="text/html"
                  req.write("<html><body>")
                  req.write("Hello World!")
                  req.write("</body></html>")
                  return apache.OK

Problem:

With the .htaccess configured as above, mptest.py works correctly when I
point the browser to http://localhost/mod_python/mptest and prints the
Hello World!

I comment line 2 of the .htaccess and uncomment line 3, and the browser
reports a 404 Error stating that The requested URL /mod_python/mptest.py
was not found on this server(note that the URL remained the same in the
browser). I also find it interesting to note that in either configuration,
the PythonHandler mod_python.psp functions correctly, and the
apache2/access.log and error.log report nothing more than a 404 error.

Now I thought about just removing the mod_python.publisher altogether and
using multiple Python handlers for the .py files, but the implementation
failed for some reason.  My plan was to make an entry for each .py file in
the same way you would make an entry for every servlet in a web.xml file.
It seems as though no matter where or in what order I put the PythonHandler
lines in, if I make a call to one of them, all of them are executed.

This I assume, means that I really have to have a mod_python.publisher
working.  Any help would be greatly appreciate.

Regards,
Ken Bradshaw
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051006/fe7f5840/attachment.html
From nicolas.lehuen at gmail.com  Thu Oct  6 14:35:06 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Oct  6 14:35:12 2005
Subject: [mod_python] greetings and configuration issue
In-Reply-To: <OF8210393A.3CE7851E-ON87257092.005EDDC9-86257092.0063833E@us.ibm.com>
References: <OF8210393A.3CE7851E-ON87257092.005EDDC9-86257092.0063833E@us.ibm.com>
Message-ID: <c298f2d70510061135p14f6fe43y@mail.gmail.com>

Hi Ken,

Unfortunately for a lot of mod_python beginners, it is not clear why the
mptest handler CANNOT be used directly by the publisher handler.

First of all, try to have the publisher running as described here :
http://www.modpython.org/live/current/doc-html/tut-pub.html

Then, you'll understand that even if the publisher is correctly configured,
if you call /mod_python/mptest.py, then the publisher handler will find the
mptest module but NOT an index(req) function inside... You'll have to call
/mod_python/mptest.py/handler to specify the function to call (or
rename handler
to index) and begin to solve your 404 problem.

Last, but not least, handlers are supposed to write on the request object
and return a status value (hence the return apache.OK), whereas the return
value of published functions is the data you want to send back to the client
(though you can also write on the request object to make things more
interesting).

To sum up, handlers are the lowest API of mod_python, and the publisher is
just a handler which has its own system for publishing, which somewhat
resembles the handler system, but with enough differences to prevent the two
from being swappable at will... We know it's quite confusing for a newbie,
but now that there are users for the two layers, we can't unify them :).

Regards,
Nicolas

2005/10/6, Ken Bradshaw <bradshak@us.ibm.com>:
>
>
> Hello All,
> I've recently taken an interest in python and mod_python in particular.
For
> the past two years or so I've been developing enterprise web apps in j2ee
> with WebSphere Applications Server and Portal Server, so I'm pretty used
to
> pouring over documentation when configuration issues arise. Unfortunately,
I
> haven't found a solution to my problem regarding the PythonHandler
> mod_python.publisher. Here's a brief synopsis of my environment and
problem.
>
> Environment:
>
> I just used the standard packages provided by apt-get.
>
> Debian 3.1 stable
> apache 2.0.54
> mod_python 3.1.3
> Python 2.3.5
>
> Configuration:
>
> file: /etc/apache2/sites-available/default
>
> <Directory /var/www/mod_python>
> AllowOverride FileInfo
> </Directory>
>
> --for whatever reason I had to add this to get the .htaccess to work.
>
> file: /var/www/mod_python/.htaccess
>
> AddHandler python-program .py .psp
> PythonHandler mptest
> #PythonHandler mod_python.publisher | .py
> PythonHandler mod_python.psp | .psp
> PythonDebug On
>
> file: /var/www/mod_python/mptest.py
>
> from mod_python import apache
>
> def handler(req):
> req.content_type="text/html"
> req.write("<html><body>")
> req.write("Hello World!")
> req.write("</body></html>")
> return apache.OK
>
> Problem:
>
> With the .htaccess configured as above, mptest.py works correctly when I
> point the browser to http://localhost/mod_python/mptest and
> prints the Hello World!
>
> I comment line 2 of the .htaccess and uncomment line 3, and the browser
> reports a 404 Error stating that The requested URL /mod_python/mptest.py
was
> not found on this server(note that the URL remained the same in the
> browser). I also find it interesting to note that in either configuration,
> the PythonHandler mod_python.psp functions correctly, and the
> apache2/access.log and error.log report nothing more than a 404 error.
>
> Now I thought about just removing the mod_python.publisher altogether and
> using multiple Python handlers for the .py files, but the implementation
> failed for some reason. My plan was to make an entry for each .py file in
> the same way you would make an entry for every servlet in a web.xml file.
It
> seems as though no matter where or in what order I put the PythonHandler
> lines in, if I make a call to one of them, all of them are executed.
>
> This I assume, means that I really have to have a mod_python.publisher
> working. Any help would be greatly appreciate.
>
> Regards,
> Ken Bradshaw
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051006/d30a7f85/attachment.html
From grahamd at dscpl.com.au  Thu Oct  6 18:15:31 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct  6 18:15:43 2005
Subject: [mod_python] mod_python.publisher undeterministic behavior
In-Reply-To: <1005e9c00510061026i6da6ead0t2f092b535afe9e10@mail.gmail.com>
References: <1005e9c00510061026i6da6ead0t2f092b535afe9e10@mail.gmail.com>
Message-ID: <23eb3c9684b01d99cf46ffe8cb6b291a@dscpl.com.au>


On 07/10/2005, at 3:26 AM, El TuZa wrote:

> Well, here's the problem. Publisher handler is behavig very
> undeterministic with some user folders at my university labs
> (mod_python2.7, python 2.1). Sometimes i just get the 404 error, while
> other times (rarely) it works fine. The files and folders are the
> same, and i don't know what could be wrong. I have almost the same
> server running at home (mod_python 2.7, mod_python 2.4).
> How could i solve this?

You will need to provide more information about the Apache configuration
you have for setting up mod_python.publisher and the exact form of the
URLs you are using to access a page resource.

This would help, as one of the reasons strange behaviour can occur
relates to the Apache MultiViews options. For some background reading,
you might read:

   http://www.modpython.org/pipermail/mod_python/2005-August/018828.html
   http://www.modpython.org/pipermail/mod_python/2005-August/018829.html

This talks about best setup for avoiding MultiViews problems, or at
least making it a bit more deterministic. Hopefully it is still relevant
to the older version of mod_python (and potentially Apache) you are
using.

As well as that, there are problems with module reloading in mod_python
that could be an issue and in some cases can cause 404 errors. Namely,
read:

   http://issues.apache.org/jira/browse/MODPYTHON-9
   http://issues.apache.org/jira/browse/MODPYTHON-10
   http://issues.apache.org/jira/browse/MODPYTHON-11

   http://www.dscpl.com.au/articles/modpython-003.html

Some of these problems only cause problems when pages are loaded in a
certain order.

There are possibly other issues as well.

Have a look at the above links and see if your setup and the problems
you are seeing somehow matches up to any of them.

Is there any chance you can move to Apache 2.0 and mod_python 3.2.2b
and try the code there? The worst of the above problems have been
addressed in that version and you may find your problems vanish.

Graham


From grahamd at dscpl.com.au  Thu Oct  6 18:19:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct  6 18:20:10 2005
Subject: [mod_python] greetings and configuration issue
In-Reply-To: <c298f2d70510061135p14f6fe43y@mail.gmail.com>
References: <OF8210393A.3CE7851E-ON87257092.005EDDC9-86257092.0063833E@us.ibm.com>
	<c298f2d70510061135p14f6fe43y@mail.gmail.com>
Message-ID: <49fd6bc2de5f7f9d5ca5f73b32691014@dscpl.com.au>

Haven't properly sat down and tried to work through the emails on this
yet, but as to setting up a basic mptest.py example, you might also
read:

   http://www.dscpl.com.au/articles/modpython-001.html

This may give you a bit more insight into what certain things are for
and how to sort out problems.

As Nicolas said, a basic handler and mod_python.publisher are different
things and you seem to be confusing the two at this point.

More later.

Graham

On 07/10/2005, at 4:35 AM, Nicolas Lehuen wrote:

> Hi Ken,
>
> Unfortunately for a lot of mod_python beginners, it is not clear why 
> the mptest handler CANNOT be used directly by the publisher handler.
>
> First of all, try to have the publisher running as described here :
> http://www.modpython.org/live/current/doc-html/tut-pub.html
>
> Then, you'll understand that even if the publisher is correctly 
> configured, if you call /mod_python/mptest.py, then the publisher 
> handler will find the mptest module but NOT an index(req) function 
> inside... You'll have to call /mod_python/mptest.py/handler to specify 
> the function to call (or rename handler to index) and begin to solve 
> your 404 problem.
>
> Last, but not least, handlers are supposed to write on the request 
> object and return a status value (hence the return apache.OK), whereas 
> the return value of published??functions is the data you want to send 
> back to the client (though you can also write on the request object to 
> make things more interesting).
>
> To sum up, handlers are the lowest API of mod_python, and the 
> publisher is just a handler which has its own system for publishing, 
> which somewhat resembles the handler system, but with enough 
> differences to prevent the two from being swappable at will... We know 
> it's quite confusing for a newbie, but now that there are users for 
> the two layers, we can't unify them :).
>
> Regards,
> Nicolas
>
> 2005/10/6, Ken Bradshaw <bradshak@us.ibm.com>:
> >??
> >
> > Hello All,
> >??I've recently taken an interest in python and mod_python in 
> particular. For
> > the past two years or so I've been developing enterprise web apps in 
> j2ee
> > with WebSphere Applications Server and Portal Server, so I'm pretty 
> used to
> > pouring over documentation when configuration issues arise. 
> Unfortunately, I
> > haven't found a solution to my problem regarding the PythonHandler
> > mod_python.publisher. Here's a brief synopsis of my environment and 
> problem.
> >??
> >??Environment:
> >??
> >??I just used the standard packages provided by apt-get.
> >??
> >??Debian 3.1 stable
> >??apache 2.0.54
> >??mod_python 3.1.3
> >??Python 2.3.5
> >??
> >??Configuration:
> >??
> >??file: /etc/apache2/sites-available/default
> >??
> >??<Directory /var/www/mod_python>
> >??AllowOverride FileInfo
> >??</Directory>
> >??
> >??--for whatever reason I had to add this to get the .htaccess to 
> work.
> >??
> >??file: /var/www/mod_python/.htaccess
> >??
> >??AddHandler python-program .py .psp
> >??PythonHandler mptest
> >??#PythonHandler mod_python.publisher | .py
> >??PythonHandler mod_python.psp | .psp
> >??PythonDebug On
> >??
> >??file: /var/www/mod_python/mptest.py
> >??
> >??from mod_python import apache
> >??
> >??def handler(req):
> >??req.content_type="text/html"
> >??req.write("<html><body>")
> >??req.write("Hello World!")
> >??req.write("</body></html>")
> >??return apache.OK
> >??
> >??Problem:
> >??
> >??With the .htaccess configured as above, mptest.py works correctly 
> when I
> > point the browser to http://localhost/mod_python/mptest and
> > prints the Hello World!
> >??
> >??I comment line 2 of the .htaccess and uncomment line 3, and the 
> browser
> > reports a 404 Error stating that The requested URL 
> /mod_python/mptest.py was
> > not found on this server(note that the URL remained the same in the
> > browser). I also find it interesting to note that in either 
> configuration,
> > the PythonHandler mod_python.psp functions correctly, and the
> > apache2/access.log and error.log report nothing more than a 404 
> error.
> >??
> >??Now I thought about just removing the mod_python.publisher 
> altogether and
> > using multiple Python handlers for the .py files, but the 
> implementation
> > failed for some reason. My plan was to make an entry for each .py 
> file in
> > the same way you would make an entry for every servlet in a web.xml 
> file. It
> > seems as though no matter where or in what order I put the 
> PythonHandler
> > lines in, if I make a call to one of them, all of them are executed.
> >??
> >??This I assume, means that I really have to have a 
> mod_python.publisher
> > working. Any help would be greatly appreciate.
> >??
> >??Regards,
> >??Ken Bradshaw
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
>  > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From eltuza at gmail.com  Thu Oct  6 18:40:47 2005
From: eltuza at gmail.com (El TuZa)
Date: Thu Oct  6 18:40:53 2005
Subject: [mod_python] mod_python.publisher undeterministic behavior
In-Reply-To: <23eb3c9684b01d99cf46ffe8cb6b291a@dscpl.com.au>
References: <1005e9c00510061026i6da6ead0t2f092b535afe9e10@mail.gmail.com>
	<23eb3c9684b01d99cf46ffe8cb6b291a@dscpl.com.au>
Message-ID: <1005e9c00510061540o3c5b753at4921bad2837a8edb@mail.gmail.com>

Thanks graham, but unfortunatelly the server is at my university labs
and only NetOps are allowed to acces the configuration files. They are
also migrating to apache2 on another server but they will take some
more weeks to get it working. Anyway, I'm going to read the
information you gave me and I'll tell the netop about the possible
problem.

Tuza

From reghigh at thefactz.org  Fri Oct  7 03:30:11 2005
From: reghigh at thefactz.org (reghigh)
Date: Fri Oct  7 03:30:28 2005
Subject: [mod_python] multiple requests to authenhandler for a single url
In-Reply-To: <20051006130005.A11273@grisha.dyndns.org>
References: <4343F995.8080604@thefactz.org> <43445B1A.8000008@sympatico.ca>
	<20051005231340.D29249@grisha.dyndns.org>
	<4344EAAB.9090904@thefactz.org>
	<20051006100752.B11273@grisha.dyndns.org>
	<4345423E.1080609@thefactz.org>
	<20051006130005.A11273@grisha.dyndns.org>
Message-ID: <43462403.1000102@thefactz.org>

Gregory (Grisha) Trubetskoy wrote:
> 
> 
> 
> On Thu, 6 Oct 2005, reghigh wrote:
> 
>> Also why would /x/x result in two requests but /x/y in one (using 
>> <Location /x>)?
> 
> 
> I don't know, in my test (mod_python 3.1.3, httpd 2.0.54), when no 

Just for the record:

Apache/2.0.52 (Unix) mod_auth_pgsql/2.0.1 SVN/1.1.4 DAV/2 
mod_python/3.1.4 Python/2.4.1 Server at static Port 80

> actual 'x' directory exists, the traversal stops right there. When x 
> does exist, it is called for /x/y, which is at it should be - it assumes 
> that 'y' is a file in the directory 'x' (even if y does not exist).

Note one can get similar results adding a trailing slash (so that y 
becomes a directory)

> Also there are a couple of other things in your prior e-mail that do not 
> make a lot of sense. Given:
> 
> <VirtualHost *:80>
>   ServerName static
>   DocumentRoot <omitted>
> 
>   PythonPath "['<omitted>'] + sys.path"
>   PythonAuthenHandler test
>   PythonDebug On
> 
>   <Location /x>
>       AuthType Basic
>       AuthName "Restricted Area"
>       Require valid-user
>   </Location>
> </VirtualHost>
> 
> You say that
> 
>   /xx -> not processed by handler
> 
> that cannot be if the "PythonAuthenHandler test" is at the VirtualHost

But my understanding is that authen stuff only gets called where we put 
in the Apache auth stuff i.e. AuthType, AuthName, Require (I checked 
this by keeping mod_python stuff and commenting out AuthType etc and 
bingo no authentication and no exceptions from my python stuff). Since 
apache auth stuff is inside Location /x (which does *not* match /xx) /xx 
is not processed by authenhandler. Furthermore moving all mod_python 
stuff inside Location makes no difference.

> level. I also don't see SetHandler/AddHandler for mod_python - is that 
> at the server level?

On the second point: currently there is no AddHandler/SetHandler because 
I found authenhandler was running without having this (my aim is to just 
use mod_python for authentication and then have apache serve everything 
else 'normally' -- btw this works entirely except for the multiple calls 
problem). However in the interests of checking I had orginally had:

AddHandler mod_python .py
PythonHandler test

def handler(req):
     req.content_type = "text/plain"
     req.write(req.uri)
     return apache.OK

And I have just re-added this but it makes no difference so far as I can 
tell (furthermore I have verified this works fine in all ways if I 
remove exception)

> Also I'm not sure how your request continues processing even though 
> you're raising an exception - in my test the request processing stops 
> with 'Internal Server Error' as soon as the first exception is raised.

Here's the output I get for <Location /x> with url:

   http://static/x/x/y

<pre>
Mod_python error: "PythonAuthenHandler test"

Traceback (most recent call last):

   File 
"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/mod_python/apache.py", 
line 299, in HandlerDispatch
     result = object(req)

   File "/Users/rgrp/Sites/python/test.py", line 16, in authenhandler
     raise Exception('%s, %s, %s, %s' % (req.handler, req.unparsed_uri, 
req.path_info, req.used_path_info))

Exception: None, /x/y, /y, 2

</pre>

<pre>
Mod_python error: "PythonAuthenHandler test"

Traceback (most recent call last):

   File 
"/Library/Frameworks/Python.framework/Versions/2.4/lib/python2.4/site-packages/mod_python/apache.py", 
line 299, in HandlerDispatch
     result = object(req)

   File "/Users/rgrp/Sites/python/test.py", line 16, in authenhandler
     raise Exception('%s, %s, %s, %s' % (req.handler, req.unparsed_uri, 
req.path_info, req.used_path_info))

Exception: None, /x/x/y, /x/y, 2

</pre>

> In any event - when the authen handler is called is not controlled by 
> mod_python, it's something that is in the httpd territory. It would be 
> nice perhaps to get to the bottom of what this behaviour should be and 
> summarize it for the list.

Absolutely. Thanks for your comments so far.

Regards,

Tristan
From fabianosidler at swissonline.ch  Fri Oct  7 06:04:11 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Fri Oct  7 06:04:17 2005
Subject: [mod_python] threading module within mod_python
Message-ID: <200510071204.14967.fabianosidler@swissonline.ch>

Hi!

I wanted the main thread to be notified about raised exceptions in other
threads. Thus I wrote a threaded handler in a way similar like this:

--- snip ---
from mod_python import apache
from threading import currentThread, Thread, Lock

mainthread = currentThread()
raiselock = Lock()
raiselist = []
def Raise(exc):
 raiselock.acquire()
 raiseexc.append(exc)
 raiselock.release()
mainthread.Raise = Raise

class ReqThread(Thread):
 def __init__(self, req):
  Thread.__init__(self)
  self.req = req
 def run(self):
  # Test raise
  #raise Exception('run()')
  mainthread.Raise(Exception('run()'))
  return

def handler(req):
 exc = None
 r = ReqThread(req)
 r.start(); r.join()
 raiselock.acquire()
 if len(raiselist): exc = raiselist.pop
 raiselock.release()
 if exc: raise exc
 return apache.OK
--- snap ---

However, this doesn't work. If I uncomment the raise in ReqThread.run,
these exceptions even don't appear in the logs until I stop the httpd, which
causes following additional errors:

[Fri Oct 07 11:12:45 2005] [warn] child process 9229 still did not exit, 
sending a SIGTERM
[Fri Oct 07 11:12:45 2005] [warn] child process 9230 still did not exit, 
sending a SIGTERM

Quite strange, isn't it?
I'm running Kubuntu and httpd uses mpm_prefork. Is there a chance to get my
Threads working?

Best wishes,
Fips
From grahamd at dscpl.com.au  Fri Oct  7 06:49:37 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct  7 06:49:52 2005
Subject: [mod_python] threading module within mod_python
In-Reply-To: <200510071204.14967.fabianosidler@swissonline.ch>
References: <200510071204.14967.fabianosidler@swissonline.ch>
Message-ID: <4f7728313fdfacf0506ee97a82236906@dscpl.com.au>


On 07/10/2005, at 8:04 PM, Fabiano Sidler wrote:

> Hi!
>
> I wanted the main thread to be notified about raised exceptions in 
> other
> threads. Thus I wrote a threaded handler in a way similar like this:
>
> --- snip ---
> from mod_python import apache
> from threading import currentThread, Thread, Lock
>
> mainthread = currentThread()
> raiselock = Lock()
> raiselist = []
> def Raise(exc):
>  raiselock.acquire()
>  raiseexc.append(exc)
>  raiselock.release()
> mainthread.Raise = Raise
>
> class ReqThread(Thread):
>  def __init__(self, req):
>   Thread.__init__(self)
>   self.req = req
>  def run(self):
>   # Test raise
>   #raise Exception('run()')
>   mainthread.Raise(Exception('run()'))
>   return
>
> def handler(req):
>  exc = None
>  r = ReqThread(req)
>  r.start(); r.join()
>  raiselock.acquire()
>  if len(raiselist): exc = raiselist.pop
>  raiselock.release()
>  if exc: raise exc
>  return apache.OK
> --- snap ---
>
> However, this doesn't work. If I uncomment the raise in ReqThread.run,
> these exceptions even don't appear in the logs until I stop the httpd,

I'm not really sure what you are trying to achieve here, but due to the
way Apache/Python interact anything output to stdout/stderr is as you
have found generally only flushed and output to the log file when Apache
is shutdown and that possibly only if the process shuts down cleanly.

What you are better off doing is catching any exceptions in the separate
thread, formatting your own exception traceback and details and logging
it directly to the Apache log using the apache.log_error() function
provided with mod_python. This is possibly the only way to get the
information to appear immediately.

> which
> causes following additional errors:
>
> [Fri Oct 07 11:12:45 2005] [warn] child process 9229 still did not 
> exit,
> sending a SIGTERM
> [Fri Oct 07 11:12:45 2005] [warn] child process 9230 still did not 
> exit,
> sending a SIGTERM

This will occur when the child process can't be shutdown cleanly within 
a
specific amount of time. The parent process will give up waiting and
forcibly kill it. Things that can cause this are very long running
requests doing actual work, or errant threads that were started and not
stopped and cleaned up properly.

Don't know if it may be relevant or not, but you might want to look at
the req.register_cleanup() method for registering a function to call 
when
request handling is finishing. You might use this to call a function
which ensures that threads started for that request are shutdown and
cleaned up properly.

> Quite strange, isn't it?
> I'm running Kubuntu and httpd uses mpm_prefork. Is there a chance to 
> get my
> Threads working?

To what end are you trying to raise exceptions in other threads? Just
curious as I can't think of why you would want to do it.

Graham

From fabianosidler at swissonline.ch  Fri Oct  7 09:28:10 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Fri Oct  7 09:28:07 2005
Subject: [mod_python] threading module within mod_python
In-Reply-To: <4f7728313fdfacf0506ee97a82236906@dscpl.com.au>
References: <200510071204.14967.fabianosidler@swissonline.ch>
	<4f7728313fdfacf0506ee97a82236906@dscpl.com.au>
Message-ID: <200510071528.14837.fabianosidler@swissonline.ch>

Graham Dumpleton wrote:
> I'm not really sure what you are trying to achieve here

The handler function should become the smallest thing in my application.
I want to build the application as a set of classes on top of everything and 
have the handler only create these classes and then pass them the control. 
Therefore I need to store the req object globally, but in a  threadsafe 
manner. Actually, I wrote a pure static class returning the thread's req
object to the caller, which I'm going to use in the lower level code of my
application otherwise written as portable as possible.

> What you are better off doing is catching any exceptions in the separate
> thread, formatting your own exception traceback and details and logging
> it directly to the Apache log using the apache.log_error() function
> provided with mod_python. This is possibly the only way to get the
> information to appear immediately.

The problem is, raised exceptions should be communicated to the client because
I intend to raise exceptions in my application too. That's why I need
exceptions to be brought to the thread in which handler() was called.

Thank you for your help!
Greetings,
fips
From mcdanelz at gmail.com  Fri Oct  7 15:32:22 2005
From: mcdanelz at gmail.com (Zach McDanel)
Date: Fri Oct  7 15:32:45 2005
Subject: [mod_python] (no subject)
Message-ID: <a1401e666ffb44554c443742283cef9a@gmail.com>

Sgi Irix 6.5.28

apache 2.0.54

Python 2.4.1

mod_python 3.1.4


I'm getting the 500 error page when I run the hello world test page
and here's an excerpt from the apache error log, from what I saw on the 
archives someone suggested a path problem I don't think this is the 
case here however. I'm not sure if this is a question for this list or 
for the dev list but I'll try here again.

Zach


[error] make_obcallback: could not import mod_python.apache.\n
Traceback (most recent call last):
   File "/usr/local/lib/python2.4/site-packages/mod_python/apache.py", 
line 22, in ?
     import time
ImportError: 254116:/usr/local/apache/bin/httpd: rld: Fatal Error: 
unresolvable symbol in /usr/local/lib/python2.4/lib-dynload/time.so: 
Py_IgnoreEnvironmentFlag

From grahamd at dscpl.com.au  Fri Oct  7 18:56:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct  7 18:56:35 2005
Subject: [mod_python] threading module within mod_python
In-Reply-To: <200510071528.14837.fabianosidler@swissonline.ch>
References: <200510071204.14967.fabianosidler@swissonline.ch>
	<4f7728313fdfacf0506ee97a82236906@dscpl.com.au>
	<200510071528.14837.fabianosidler@swissonline.ch>
Message-ID: <971F91B1-9B26-437A-8F16-D25CB9442048@dscpl.com.au>


On 07/10/2005, at 11:28 PM, Fabiano Sidler wrote:

> Therefore I need to store the req object globally, but in a   
> threadsafe
> manner. Actually, I wrote a pure static class returning the  
> thread's req
> object to the caller, which I'm going to use in the lower level  
> code of my
> application otherwise written as portable as possible.

FWIW, you might look at:

   http://www.modpython.org/pipermail/mod_python/2005-September/ 
019071.html

It isn't a simple matter of just storing the request object based on the
thread. You have to consider that a handler can do an internal redirect
which will result in the same thread having to deal with a new request
object. You therefore need a stack onto which you push the request
object and pop it off when done.

This though still doesn't contend with the strange situation you are
going to have where the handler actually triggers separate threads
to do the work. Those separate threads will not be able to access the
request object using their own thread identifier as key as it will be
different to the main handler thread.

Not sure how you intend dealing with that, but then, since you are
using prefork and not a threaded MPM, you will probably have
something simpler anyway. Your code though probably will not work
in a threaded MPM, so isn't going to be portable to "winnt" or "worker"
MPM.

> The handler function should become the smallest thing in my  
> application.
> I want to build the application as a set of classes on top of  
> everything and
> have the handler only create these classes and then pass them the  
> control.

If the aim is to make the handler only deal with view presentation, I
still don't see the need for threads, a simple separation of view and
control code from the main model code of the application is generally
sufficient. I feel that threads generally only serve to complicate code
and make it harder to get right. There are a lot of traps in thread
programming to begin with and mod_python doesn't make it any
easier with its own set of gotchas when using threads.

Where real clear separation is required, a better approach may be
to host the whole core of the application in a separate process and
use something like XML-RPC to communicate from the handler
to the backend system. The handler then becomes a series of call
outs to do things with results being formatted into a result.

In the extreme, a full blown messaging system could be used allowing
construction of a service oriented like architecture where service
agents could reside in distinct processes or in the Apache process.
Through appropriate use of threading in conjunction with the event
driven messaging system, service agents in the Apache process and
the backend can be active standalone agents that still communicate
with each other independent of HTTP requests, but still service requests
from the handlers as well.

Note that in this case the service agent framework is there only to
support the internal operation of your application, just because I use
the SOA term doesn't mean SOAP is involved or that users are
making direct calls to service agents via HTTP.

>> What you are better off doing is catching any exceptions in the  
>> separate
>> thread, formatting your own exception traceback and details and  
>> logging
>> it directly to the Apache log using the apache.log_error() function
>> provided with mod_python. This is possibly the only way to get the
>> information to appear immediately.
>>
>
> The problem is, raised exceptions should be communicated to the  
> client because
> I intend to raise exceptions in my application too. That's why I need
> exceptions to be brought to the thread in which handler() was called.

Still seems messy to me and complexity which possibly should not be
in the Apache processes.

Anyway, I can only make huge assumptions about what you are doing.
You probably have it very clear in your head and thus it possibly is not
as bad as it seems to me. ;-)

Graham
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051008/106b4dbf/attachment.html
From administrator at leebrown.org  Sat Oct  8 16:00:16 2005
From: administrator at leebrown.org (Lee Brown)
Date: Sat Oct  8 16:00:55 2005
Subject: [mod_python] Mod_python and Ajax
Message-ID: <003d01c5cc42$e7746540$0301a8c0@uberbox>

Greetings!

I've become interested in playing around with Ajax; one, just so I'll know
what all the buzz is about and two, with mature client-side code available
like MochiKit and Richo it looks like a cool and painless way to really
spiff up an xml-driven web site.

I know there are full-blown frameworks out there like Myghty that are based
on AJAX, but I'd like to piddle around with it at a lower level to see how
well it plays with mod_python.  Has anyone out there played around with it?
Has anyone seen a simple little test handler I could muck about with?

Best Regards,
Lee E. Brown
(leebrown@leebrown.org)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051008/fd53bebc/attachment.html
From nicolas.lehuen at gmail.com  Sat Oct  8 17:03:09 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sat Oct  8 17:03:16 2005
Subject: [mod_python] Mod_python and Ajax
In-Reply-To: <003d01c5cc42$e7746540$0301a8c0@uberbox>
References: <003d01c5cc42$e7746540$0301a8c0@uberbox>
Message-ID: <c298f2d70510081403h4a372919l@mail.gmail.com>

Hi Lee,

If you want to play with AJAX at a low level, well, it's easily done in
mod_python.

AJAX really needs a framework on the client, to wrap things like how to
build a XMLHttpRequest object in a portable manner, handle the asynchronous
callbacks, work around browser bugs and Javascript limitations, etc.

But the server side doesn't need to change ; for instance, if you're doing
partial page updates by replacing HTML fragments (using
getElementById("foobar").innerHTML = whatever_the_server_sent_me;), then you
keep on writing the same code as before on the server side, but now some of
your code will only return fragments of pages instead of full pages each
time. I mean, you can directly use the "Hello world" test handler from the
mod_python tutorial and use it with some AJAX client code !

If you want to push things a little further (but then you're not low-level
anymore), you may want to exchange only data between the client and the
server, and do the formatting on the client side. To do this, you could send
XML from the server (using the same techniques as before) and use the
obnoxious DOM API on the client side to process and format the data. Or,
there is a popular alternative right now which uses JSON (JavaScript Object
Notation, IIRC), which is a serialisation of basic data types in a way that
can just be eval()ed in Javascript. There are Python libraries to serialise
its core data types (tuples, lists, dicts) in JSON, it could be interesting
to integrate them with mod_python to make things easier. But then again,
it's only a matter of putting glue at the right spot, nothing really
difficult.

There are many, many things that can be imagined on the server-side when
taking into account the new AJAX fad, but at a low level, only the
client-side requires a framework.

Regards,
Nicolas

2005/10/8, Lee Brown <administrator@leebrown.org>:
>
> Greetings!
>
> I've become interested in playing around with Ajax; one, just so I'll know
> what all the buzz is about and two, with mature client-side code available
> like MochiKit and Richo it looks like a cool and painless way to really
> spiff up an xml-driven web site.
>
> I know there are full-blown frameworks out there like Myghty that are
> based on AJAX, but I'd like to piddle around with it at a lower level to see
> how well it plays with mod_python. Has anyone out there played around with
> it? Has anyone seen a simple little test handler I could muck about with?
>
> Best Regards,
> Lee E. Brown
> (leebrown@leebrown.org)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051008/89400994/attachment.html
From morten at feldthaus.dk  Sun Oct  9 04:27:28 2005
From: morten at feldthaus.dk (Morten Feldthaus)
Date: Sun Oct  9 04:27:33 2005
Subject: [mod_python] Mod_python with ORM
Message-ID: <9d6490a50510090127x6258e4e6r@mail.gmail.com>

I'm having some problems with mod_python and a ORM that i'm using.

The script works only in CLI. Mod_python has serious problems with it.
I have to disable keep-alive in Apache, otherwise will the connection
be broken.

This is what happenes with keep-alive on:
mim@gorilla:~$ w3c http://localhost/ace
Looking up localhost
Looking up localhost
Contacting localhost
Reading...
Waaaa
Contacting localhost
Read 1Kbytes
/build/buildd/w3c-libwww-5.4.0/Library/src/HTTChunk.c:55 Chunk decoder
received illigal chunk size: `\uffff'
Afbrudt (SIGABRT)

With keep-alive off:
mim@gorilla:~$ w3c http://localhost/ace
Looking up localhost
Looking up localhost
Contacting localhost
Reading...
Waaaa

w3c was the only browser where I actually could see what happened. In
firefox it simply wouldn't load anything. No error message, it just
kept showing the last page.

Here's the code:

from orm.datasource import datasource
from orm.dbclass import dbclass
from orm.adapters.pgsql.columns import *

ds = datasource(adapter="mysql", password="mypassword", user="root",
host="localhost", db="py", debug = 1)

class user(dbclass):
	columns = { "id" : serial(),
			  }

""" For testing in CLI """
try:
    from mod_python import apache
except:
    print ("Weeee")
    res = ds.select(user).fetchall(),
    print res
    print ("Woooo")

def handler(req):
    req.content_type = "text/html"
    req.write("Waaaa\n")
    res = ds.select(user).fetchall(),
    req.write(res)
    req.write("Wuuuu\n")

    return apache.OK

---end---

In the browser the only thing displayed is "Waaaa". In CLI I get the
following output
mim@gorilla:/var/www$ python ace.py
Weeee
([<user (pyid=-1216130516 oid=1 id=1L)>],)
Woooo

Do you guys have any suggestions/thoughts?

--
Morten Feldthaus

From erdibalint at freemail.hu  Sun Oct  9 05:40:06 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Sun Oct  9 05:40:14 2005
Subject: [mod_python] mysqldb calls cause segfault
Message-ID: <4348E576.2020604@freemail.hu>

Hi all,

I am trying to write a small python-mysql application with mod_python 
but got stuck right at the beginning. The following code snippet:

     import MySQLdb
     db = MySQLdb.connect(user="xxx",passwd="xxx",db="xxx")
     return db

causes a Segmentation fault.

apache log:

[Sun Oct  9 11:09:52 2005] [notice] child pid 6736 exit signal 
Segmentation fault (11)

(in fact, any mysql db operation causes the same)

I am using python-mysqldb version 1.2.1c3-2 and libapache-mod-python 
version 2.7.10-4 (both installed from Debian packages, thinking that 
they were stable releases). Apache version is 1.3.33. Am I doing 
something wrong?

Thank you for your help,
Balint
From morten at feldthaus.dk  Sun Oct  9 06:21:46 2005
From: morten at feldthaus.dk (Morten Feldthaus)
Date: Sun Oct  9 06:21:52 2005
Subject: [mod_python] Re: Mod_python with ORM
In-Reply-To: <9d6490a50510090127x6258e4e6r@mail.gmail.com>
References: <9d6490a50510090127x6258e4e6r@mail.gmail.com>
Message-ID: <9d6490a50510090321qc780056n@mail.gmail.com>

The error is the same as the one Erdi Balint has. I get a seg-fault to
in error.log.

I will just follow his thread.

(I'm running Ubuntu Breezy)

--
Morten Feldthaus

From nicolas.lehuen at gmail.com  Sun Oct  9 06:59:33 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sun Oct  9 06:59:42 2005
Subject: [mod_python] mysqldb calls cause segfault
In-Reply-To: <4348E576.2020604@freemail.hu>
References: <4348E576.2020604@freemail.hu>
Message-ID: <c298f2d70510090359r33fc3a1ci@mail.gmail.com>

Hi Erdi,

Have a look at this FAQ entry, it may be related to your problem :

http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp

Regards,
Nicolas

2005/10/9, Erdi Balint <erdibalint@freemail.hu>:
>
> Hi all,
>
> I am trying to write a small python-mysql application with mod_python
> but got stuck right at the beginning. The following code snippet:
>
> import MySQLdb
> db = MySQLdb.connect(user="xxx",passwd="xxx",db="xxx")
> return db
>
> causes a Segmentation fault.
>
> apache log:
>
> [Sun Oct 9 11:09:52 2005] [notice] child pid 6736 exit signal
> Segmentation fault (11)
>
> (in fact, any mysql db operation causes the same)
>
> I am using python-mysqldb version 1.2.1c3-2 and libapache-mod-python
> version 2.7.10-4 (both installed from Debian packages, thinking that
> they were stable releases). Apache version is 1.3.33. Am I doing
> something wrong?
>
> Thank you for your help,
> Balint
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051009/dc3174a1/attachment.html
From nicolas.lehuen at gmail.com  Sun Oct  9 07:04:18 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Sun Oct  9 07:04:23 2005
Subject: [mod_python] Re: Mod_python with ORM
In-Reply-To: <9d6490a50510090321qc780056n@mail.gmail.com>
References: <9d6490a50510090127x6258e4e6r@mail.gmail.com>
	<9d6490a50510090321qc780056n@mail.gmail.com>
Message-ID: <c298f2d70510090404w1dd003f7w@mail.gmail.com>

Yeah, the error may be the same as Erdi's. Another thing I've noticed in
your script is that you are using orm.adapters.pgsql.columns, which looks
like it's meant for PostgreSQL, whereas you are using MySQL. But I don't
think it's related.

Regards,
Nicolas

2005/10/9, Morten Feldthaus <morten@feldthaus.dk>:
>
> The error is the same as the one Erdi Balint has. I get a seg-fault to
> in error.log.
>
> I will just follow his thread.
>
> (I'm running Ubuntu Breezy)
>
> --
> Morten Feldthaus
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051009/4b4f0e87/attachment.html
From morten at feldthaus.dk  Sun Oct  9 09:52:35 2005
From: morten at feldthaus.dk (Morten Feldthaus)
Date: Sun Oct  9 09:52:41 2005
Subject: [mod_python] Re: Mod_python with ORM
In-Reply-To: <c298f2d70510090404w1dd003f7w@mail.gmail.com>
References: <9d6490a50510090127x6258e4e6r@mail.gmail.com>
	<9d6490a50510090321qc780056n@mail.gmail.com>
	<c298f2d70510090404w1dd003f7w@mail.gmail.com>
Message-ID: <9d6490a50510090652x11df1ee3w@mail.gmail.com>

> Yeah, the error may be the same as Erdi's. Another thing I've noticed in
> your script is that you are using orm.adapters.pgsql.columns, which looks
> like it's meant for PostgreSQL, whereas you are using MySQL. But I don't
> think it's related.

Thank you, i hadn't seen that. The part was just pasted from a
tutorial I guess. But this didn't cause the error.

Your link in the other thread however did help me.

Thank you very much!

--
Morten Feldthaus

From craig.warren at encorp.com  Sun Oct  9 09:58:58 2005
From: craig.warren at encorp.com (Craig Warren)
Date: Sun Oct  9 09:58:10 2005
Subject: [mod_python] Mod_python and Ajax
In-Reply-To: <003d01c5cc42$e7746540$0301a8c0@uberbox>
References: <003d01c5cc42$e7746540$0301a8c0@uberbox>
Message-ID: <43492222.5090903@encorp.com>

I have been using ajax for a long time, and we recently moved over to 
using mod_python on our server side for our product.  I wrote an xmlrpc 
handler in mod_python, it works great.  I already implemented the xmlprc 
calls in javascript.

Craig

Lee Brown wrote:

> Greetings!
>
> I've become interested in playing around with Ajax; one, just so I'll 
> know what all the buzz is about and two, with mature client-side code 
> available like MochiKit and Richo it looks like a cool and painless 
> way to really spiff up an xml-driven web site.
>
> I know there are full-blown frameworks out there like Myghty that are 
> based on AJAX, but I'd like to piddle around with it at a lower level 
> to see how well it plays with mod_python.  Has anyone out there played 
> around with it?  Has anyone seen a simple little test handler I could 
> muck about with?
>
> Best Regards,
> Lee E. Brown
> (leebrown@leebrown.org)
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051009/9c0dc049/attachment.html
From erdibalint at freemail.hu  Sun Oct  9 15:42:45 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Sun Oct  9 15:42:47 2005
Subject: [mod_python] mysqldb calls cause segfault
In-Reply-To: <c298f2d70510090359r33fc3a1ci@mail.gmail.com>
References: <4348E576.2020604@freemail.hu>
	<c298f2d70510090359r33fc3a1ci@mail.gmail.com>
Message-ID: <434972B5.3080600@freemail.hu>

Thank you, Nicolas, that fixed that problem, but now I have another one,
when importing a module from the MySQLdb module, I get the following 
exception:

   File "/var/www/trivia/control/trivia.py", line 5, in _connect
     db = MySQLdb.connect(user="xxx",passwd="xxx",db="xxx")

   File "/usr/lib/python2.3/site-packages/MySQLdb/__init__.py", line 66, 
in Connect
     return Connection(*args, **kwargs)

   File "/usr/lib/python2.3/site-packages/MySQLdb/connections.py", line 
117, in __init__
     from converters import conversions

   File "/usr/lib/python2.3/site-packages/MySQLdb/converters.py", line 
40, in ?
     import array

ImportError: /usr/lib/python2.3/lib-dynload/array.so: undefined symbol: 
PyUnicodeUCS4_FromUnicode

I've come across a python faq item, that says the following about the 
cause of the error:

"...
If instead the name of the undefined symbol starts with PyUnicodeUCS4, 
the problem is the reverse: Python was built using 2-byte Unicode 
characters, and the extension module was compiled using a Python with 
4-byte Unicode characters.
...

You can check the size of the Unicode character a Python interpreter is 
using by checking the value of sys.maxunicode:

 >>> import sys
 >>> if sys.maxunicode > 65535:
...     print 'UCS4 build'
... else:
...     print 'UCS2 build'

"
Ok, so in theory, my Python interpreter uses 2-byte Unicode characters, 
but I've checked it (I am python 2.3.5) with the above code snipplet, 
and it is not so, I am using 4-byte Unicode characters? Then why is the 
error?

Thank you for your help,
Balint


Nicolas Lehuen wrote:
> Hi Erdi,
> 
> Have a look at this FAQ entry, it may be related to your problem :
> 
> http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp 
> <http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp>
> 
> Regards,
> Nicolas
> 
> 2005/10/9, Erdi Balint <erdibalint@freemail.hu 
> <mailto:erdibalint@freemail.hu>>:
> 
>     Hi all,
> 
>     I am trying to write a small python-mysql application with mod_python
>     but got stuck right at the beginning. The following code snippet:
> 
>          import MySQLdb
>          db = MySQLdb.connect(user="xxx",passwd="xxx",db="xxx")
>          return db
> 
>     causes a Segmentation fault.
> 
>     apache log:
> 
>     [Sun Oct  9 11:09:52 2005] [notice] child pid 6736 exit signal
>     Segmentation fault (11)
> 
>     (in fact, any mysql db operation causes the same)
> 
>     I am using python-mysqldb version 1.2.1c3-2 and libapache-mod-python
>     version 2.7.10-4 (both installed from Debian packages, thinking that
>     they were stable releases). Apache version is 1.3.33. Am I doing
>     something wrong?
> 
>     Thank you for your help,
>     Balint
>     _______________________________________________
>     Mod_python mailing list
>     Mod_python@modpython.org <mailto:Mod_python@modpython.org>
>     http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From nicolas.lehuen at gmail.com  Mon Oct 10 02:28:26 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Mon Oct 10 02:28:32 2005
Subject: [mod_python] mysqldb calls cause segfault
In-Reply-To: <434972B5.3080600@freemail.hu>
References: <4348E576.2020604@freemail.hu>
	<c298f2d70510090359r33fc3a1ci@mail.gmail.com>
	<434972B5.3080600@freemail.hu>
Message-ID: <c298f2d70510092328w2224ae8ds@mail.gmail.com>

Are you sure mod_python is using the same Python interpreter as the one you
made the test in ?

Try running this handler :

from mod_python import apache
import sys
def handler(req):
 req.content_type = 'text/plain'
 req.write(sys.version+'\n')
 req.write(sys.exec_prefix+'\n')
return apache.OK

Regards,
Nicolas

2005/10/9, Erdi Balint <erdibalint@freemail.hu>:
>
> Thank you, Nicolas, that fixed that problem, but now I have another one,
> when importing a module from the MySQLdb module, I get the following
> exception:
>
> File "/var/www/trivia/control/trivia.py", line 5, in _connect
> db = MySQLdb.connect(user="xxx",passwd="xxx",db="xxx")
>
> File "/usr/lib/python2.3/site-packages/MySQLdb/__init__.py", line 66,
> in Connect
> return Connection(*args, **kwargs)
>
> File "/usr/lib/python2.3/site-packages/MySQLdb/connections.py", line
> 117, in __init__
> from converters import conversions
>
> File "/usr/lib/python2.3/site-packages/MySQLdb/converters.py", line
> 40, in ?
> import array
>
> ImportError: /usr/lib/python2.3/lib-dynload/array.so: undefined symbol:
> PyUnicodeUCS4_FromUnicode
>
> I've come across a python faq item, that says the following about the
> cause of the error:
>
> "...
> If instead the name of the undefined symbol starts with PyUnicodeUCS4,
> the problem is the reverse: Python was built using 2-byte Unicode
> characters, and the extension module was compiled using a Python with
> 4-byte Unicode characters.
> ...
>
> You can check the size of the Unicode character a Python interpreter is
> using by checking the value of sys.maxunicode:
>
> >>> import sys
> >>> if sys.maxunicode > 65535:
> ... print 'UCS4 build'
> ... else:
> ... print 'UCS2 build'
>
> "
> Ok, so in theory, my Python interpreter uses 2-byte Unicode characters,
> but I've checked it (I am python 2.3.5) with the above code snipplet,
> and it is not so, I am using 4-byte Unicode characters? Then why is the
> error?
>
> Thank you for your help,
> Balint
>
>
> Nicolas Lehuen wrote:
> > Hi Erdi,
> >
> > Have a look at this FAQ entry, it may be related to your problem :
> >
> > http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp
> > <http://www.modpython.org/FAQ/faqw.py?req=show&file=faq02.013.htp>
> >
> > Regards,
> > Nicolas
> >
> > 2005/10/9, Erdi Balint <erdibalint@freemail.hu
> > <mailto:erdibalint@freemail.hu>>:
> >
> > Hi all,
> >
> > I am trying to write a small python-mysql application with mod_python
> > but got stuck right at the beginning. The following code snippet:
> >
> > import MySQLdb
> > db = MySQLdb.connect(user="xxx",passwd="xxx",db="xxx")
> > return db
> >
> > causes a Segmentation fault.
> >
> > apache log:
> >
> > [Sun Oct 9 11:09:52 2005] [notice] child pid 6736 exit signal
> > Segmentation fault (11)
> >
> > (in fact, any mysql db operation causes the same)
> >
> > I am using python-mysqldb version 1.2.1c3-2 and libapache-mod-python
> > version 2.7.10-4 (both installed from Debian packages, thinking that
> > they were stable releases). Apache version is 1.3.33. Am I doing
> > something wrong?
> >
> > Thank you for your help,
> > Balint
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051010/91d52588/attachment.html
From erdibalint at freemail.hu  Mon Oct 10 16:00:24 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Mon Oct 10 16:00:26 2005
Subject: [mod_python] mysqldb calls cause segfault
In-Reply-To: <c298f2d70510092328w2224ae8ds@mail.gmail.com>
References: <4348E576.2020604@freemail.hu>	
	<c298f2d70510090359r33fc3a1ci@mail.gmail.com>	
	<434972B5.3080600@freemail.hu>
	<c298f2d70510092328w2224ae8ds@mail.gmail.com>
Message-ID: <434AC858.5030506@freemail.hu>

Hi Nicolas,

Thanks for your help, I've added one line to your script to see if the
interpreter uses 2 or 4-byte wide unicode strings (the root of the problem).

the script:

import sys
def handler(req):
     req.content_type = 'text/plain'
     req.write(sys.version+'\n')
     req.write(sys.exec_prefix+'\n')
     req.write(`sys.maxunicode`+'\n')
     return apache.OK


the output:

2.3.4 (#1, Dec 30 2004, 12:39:04)
[GCC 3.3.5 (Debian 1:3.3.5-5)]
/usr
65535

So there it is, black & white, it uses 2-byte wide Unicode chars, that
causes the trouble, but how do I track down which python interpreter is
called? To my knowledge, python >=2.3 uses 4-byte wide unicode, so how
do I track down which python interpreter is used? (or maybe more simple
question is how do I force the mod_python/mysqldb extension to use the
"good" python interpreter)?

Balint

Nicolas Lehuen wrote:
> Are you sure mod_python is using the same Python interpreter as the one 
> you made the test in ?
> 
> Try running this handler :
> 
> from mod_python import apache
> import sys
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write(sys.version+'\n')
>     req.write(sys.exec_prefix+'\n')
>     return apache.OK
> 
> Regards,
> Nicolas
> 
> 2005/10/9, Erdi Balint <erdibalint@freemail.hu 
> <mailto:erdibalint@freemail.hu>>:
> 
>     Thank you, Nicolas, that fixed that problem, but now I have another one,
>     when importing a module from the MySQLdb module, I get the following
>     exception:
> 
>        File "/var/www/trivia/control/trivia.py", line 5, in _connect
>          db = MySQLdb.connect(user="xxx",passwd="xxx",db="xxx")
> 
>        File "/usr/lib/python2.3/site-packages/MySQLdb/__init__.py", line 66,
>     in Connect
>          return Connection(*args, **kwargs)
> 
>        File "/usr/lib/python2.3/site-packages/MySQLdb/connections.py", line
>     117, in __init__
>          from converters import conversions
> 
>        File "/usr/lib/python2.3/site-packages/MySQLdb/converters.py", line
>     40, in ?
>          import array
> 
>     ImportError: /usr/lib/python2.3/lib-dynload/array.so: undefined symbol:
>     PyUnicodeUCS4_FromUnicode
> 
>     I've come across a python faq item, that says the following about the
>     cause of the error:
> 
>     "...
>     If instead the name of the undefined symbol starts with PyUnicodeUCS4,
>     the problem is the reverse: Python was built using 2-byte Unicode
>     characters, and the extension module was compiled using a Python with
>     4-byte Unicode characters.
>     ...
> 
>     You can check the size of the Unicode character a Python interpreter is
>     using by checking the value of sys.maxunicode:
> 
>      >>> import sys
>      >>> if sys.maxunicode > 65535:
>     ...     print 'UCS4 build'
>     ... else:
>     ...     print 'UCS2 build'
> 
>     "
>     Ok, so in theory, my Python interpreter uses 2-byte Unicode characters,
>     but I've checked it (I am python 2.3.5) with the above code snipplet,
>     and it is not so, I am using 4-byte Unicode characters? Then why is the
>     error?
> 
>     Thank you for your help,
>     Balint



From erdibalint at freemail.hu  Mon Oct 10 17:10:11 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Mon Oct 10 17:10:13 2005
Subject: [mod_python] mysqldb calls cause segfault
In-Reply-To: <434AC858.5030506@freemail.hu>
References: <4348E576.2020604@freemail.hu>		<c298f2d70510090359r33fc3a1ci@mail.gmail.com>		<434972B5.3080600@freemail.hu>	<c298f2d70510092328w2224ae8ds@mail.gmail.com>
	<434AC858.5030506@freemail.hu>
Message-ID: <434AD8B3.1000801@freemail.hu>

I've finally removed the mod_python debian package and compiled it from 
source, it somehow did the trick, finding the right python interpreter!

Thank you once more for your help,
Balint

Erdi Balint wrote:
> Hi Nicolas,
> 
> Thanks for your help, I've added one line to your script to see if the
> interpreter uses 2 or 4-byte wide unicode strings (the root of the 
> problem).
> 
> the script:
> 
> import sys
> def handler(req):
>     req.content_type = 'text/plain'
>     req.write(sys.version+'\n')
>     req.write(sys.exec_prefix+'\n')
>     req.write(`sys.maxunicode`+'\n')
>     return apache.OK
> 
> 
> the output:
> 
> 2.3.4 (#1, Dec 30 2004, 12:39:04)
> [GCC 3.3.5 (Debian 1:3.3.5-5)]
> /usr
> 65535
> 
> So there it is, black & white, it uses 2-byte wide Unicode chars, that
> causes the trouble, but how do I track down which python interpreter is
> called? To my knowledge, python >=2.3 uses 4-byte wide unicode, so how
> do I track down which python interpreter is used? (or maybe more simple
> question is how do I force the mod_python/mysqldb extension to use the
> "good" python interpreter)?
> 
> Balint
> 
> Nicolas Lehuen wrote:
> 
>> Are you sure mod_python is using the same Python interpreter as the 
>> one you made the test in ?
>>
>> Try running this handler :
>>
>> from mod_python import apache
>> import sys
>> def handler(req):
>>     req.content_type = 'text/plain'
>>     req.write(sys.version+'\n')
>>     req.write(sys.exec_prefix+'\n')
>>     return apache.OK
>>
>> Regards,
>> Nicolas
>>
From petersanchez at gmail.com  Mon Oct 10 22:12:44 2005
From: petersanchez at gmail.com (Peter Sanchez)
Date: Mon Oct 10 22:12:51 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
Message-ID: <bb84149f0510101912t5f4e7e84l21d7fd29470f271@mail.gmail.com>

Hey all...

I have an issue. I am developing some software for a website using
mod_python.publisher. I just upgraded from apache 1.3.33/mod_python
2.7.11 to apache2.0.54/mod_python3.1.4. They were installed via Ports,
and the OS is FreeBSD 4.11-STABLE.

The version of python installed is 2.4.1, no-threads. This was also
installed via ports.

Now, prior to the upgrade, the software I am working on, was
functioning correctly, now it is not. The entire data (html) is not
making it to the user (browser.) The page that is loading does load
most of the way, I can see images, text, etc. The entire page just
doesn't load, and my browser (Safari) reports a bad server response
(due to the mod_python script crashing, see below)

The logs show this:

Fatal Python error: PyThreadState_Delete: tstate is still current
[Mon Oct 10 18:49:48 2005] [notice] child pid 2161 exit signal Abort trap (6)

This is the same error for EVERY time I load any page (function) in my
python script. Like I said before, the code was working prior to the
upgrade. The reason for the upgrade is Session support, which appears
to only be in 3.x tree of mod_python.

This is the apache config I am using (in relation to mod_python):

<Directory /home/user/public_html/modpy>
        Options -MultiViews
        AddHandler python-program .py
        SetHandler python-program
        PythonHandler mod_python.publisher
        PythonDebug On
        Order allow,deny
        Allow from all
    </Directory>

I have tried searching google and haven't found the solution. Can
anyone help me out here? Again, the script does give some data but
dies/crashes before it is complete.

Thanks in advance for any and all help!

Peter

From blinken at gmail.com  Mon Oct 10 22:23:43 2005
From: blinken at gmail.com (Patrick Coleman)
Date: Mon Oct 10 22:23:51 2005
Subject: [mod_python] mod_python, WebDAV and dynamic VirtualHosts
Message-ID: <603140b60510101923t5481a293t@mail.gmail.com>

Hi,
I'm currently looking for a way to define a python request handler to
process incoming requests and enable WebDAV on certain directories.
The reason I want to use python for this is because I need a 'Mass
VirtualHosting' arrangment, where virtualhosts are dynamically handled
depending on the Host: header, and so I dont think (please correct me
if I'm wrong) its possible to do this (ie. enable WebDAV on a specific
directories inside a dynamic VirtualHost) with plain Apache config.

I am currently achieving the virtualhosting side of things by using
mod_vhost_alias which is working nicely, but I would like to setup a
system where users can access their web directory over WebDAV using
the URL http://a.users.hostname/dav.

For this specific example, something like this would work (havn't
tested it but you get the general idea):
<VirtualHost *:80>
  ServerName a.users.hostname
  ...
  Alias /dav /www/domains/a.users.hostname
  <Location /dav>
    DAV On
    AuthType "Basic"
    AuthName "a.users.hostname WebDAV"
    AuthUsersFile /www/domains/a.users.hostname/passwd/htpasswd
    Require valid user
  </Location>
</VirtualHost>

This would be great except that I need it created dynamically somehow
- as a last resort I could fall back on creating all these sections by
hand for each user, but that solution doesnt seem as elegant somehow
:)

Hence mod_python. A request handler seems to do what I want, but I'm
not sure how to set options like 'DAV On' (or do aliases) as
appropriate for certain directories. Is this possible, or should I be
looking at some other solution?

I hope all that made sense, and wasnt too long-winded :)
Thanks in advance,
Patrick

From grahamd at dscpl.com.au  Mon Oct 10 22:34:34 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 10 22:34:41 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
Message-ID: <1128998074.28087@dscpl.user.openhosting.com>

Is there any chance you can install mod_python 3.3.2b from source
code. This would save us from chasing a problem that may already
be fixed in newer version.

The source code can be found by following links on mod_python
web site at "www.modpython.org".

Will wait until you can try this before offering suggestions.

Graham

Peter Sanchez wrote ..
> Hey all...
> 
> I have an issue. I am developing some software for a website using
> mod_python.publisher. I just upgraded from apache 1.3.33/mod_python
> 2.7.11 to apache2.0.54/mod_python3.1.4. They were installed via Ports,
> and the OS is FreeBSD 4.11-STABLE.
> 
> The version of python installed is 2.4.1, no-threads. This was also
> installed via ports.
> 
> Now, prior to the upgrade, the software I am working on, was
> functioning correctly, now it is not. The entire data (html) is not
> making it to the user (browser.) The page that is loading does load
> most of the way, I can see images, text, etc. The entire page just
> doesn't load, and my browser (Safari) reports a bad server response
> (due to the mod_python script crashing, see below)
> 
> The logs show this:
> 
> Fatal Python error: PyThreadState_Delete: tstate is still current
> [Mon Oct 10 18:49:48 2005] [notice] child pid 2161 exit signal Abort trap
> (6)
> 
> This is the same error for EVERY time I load any page (function) in my
> python script. Like I said before, the code was working prior to the
> upgrade. The reason for the upgrade is Session support, which appears
> to only be in 3.x tree of mod_python.
> 
> This is the apache config I am using (in relation to mod_python):
> 
> <Directory /home/user/public_html/modpy>
>         Options -MultiViews
>         AddHandler python-program .py
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug On
>         Order allow,deny
>         Allow from all
>     </Directory>
> 
> I have tried searching google and haven't found the solution. Can
> anyone help me out here? Again, the script does give some data but
> dies/crashes before it is complete.
> 
> Thanks in advance for any and all help!
> 
> Peter
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grahamd at dscpl.com.au  Mon Oct 10 22:46:12 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 10 22:46:19 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
Message-ID: <1128998772.6100@dscpl.user.openhosting.com>

Peter Sanchez wrote ..
> This is the apache config I am using (in relation to mod_python):
> 
> <Directory /home/user/public_html/modpy>
>         Options -MultiViews
>         AddHandler python-program .py
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug On
>         Order allow,deny
>         Allow from all
>     </Directory>

BTW, you wouldn't usually use AddHandler and SetHandler at the same
time like this. Not sure if SetHandler is going to take precedence or not.

Graham
From davidf at sjsoft.com  Mon Oct 10 23:51:27 2005
From: davidf at sjsoft.com (David Fraser)
Date: Mon Oct 10 23:51:46 2005
Subject: [mod_python] testhandler issue
In-Reply-To: <c298f2d70510061135p14f6fe43y@mail.gmail.com>
References: <OF8210393A.3CE7851E-ON87257092.005EDDC9-86257092.0063833E@us.ibm.com>
	<c298f2d70510061135p14f6fe43y@mail.gmail.com>
Message-ID: <434B36BF.4060504@sjsoft.com>

Hi Nicolas

I wonder if it wouldb e helpful to add a publisher-style handler to the 
mptest module. This could return a page that says "this is being served 
by the publisher" with some explanation - that way people will at least 
be told what is happening...

David

Nicolas Lehuen wrote:

> Hi Ken,
>
> Unfortunately for a lot of mod_python beginners, it is not clear why 
> the mptest handler CANNOT be used directly by the publisher handler.
>
> First of all, try to have the publisher running as described here :
> http://www.modpython.org/live/current/doc-html/tut-pub.html 
> <http://www.modpython.org/live/current/doc-html/tut-pub.html>
>
> Then, you'll understand that even if the publisher is correctly 
> configured, if you call /mod_python/mptest.py, then the publisher 
> handler will find the mptest module but NOT an index(req) function 
> inside... You'll have to call /mod_python/mptest.py/handler to specify 
> the function to call (or rename handler to index) and begin to solve 
> your 404 problem.
>
> Last, but not least, handlers are supposed to write on the request 
> object and return a status value (hence the return apache.OK), whereas 
> the return value of published  functions is the data you want to send 
> back to the client (though you can also write on the request object to 
> make things more interesting).
>
> To sum up, handlers are the lowest API of mod_python, and the 
> publisher is just a handler which has its own system for publishing, 
> which somewhat resembles the handler system, but with enough 
> differences to prevent the two from being swappable at will... We know 
> it's quite confusing for a newbie, but now that there are users for 
> the two layers, we can't unify them :).
>
> Regards,
> Nicolas
>
> 2005/10/6, Ken Bradshaw <bradshak@us.ibm.com 
> <mailto:bradshak@us.ibm.com>>:
> >  
> >
> > Hello All,
> >  I've recently taken an interest in python and mod_python in 
> particular. For
> > the past two years or so I've been developing enterprise web apps in 
> j2ee
> > with WebSphere Applications Server and Portal Server, so I'm pretty 
> used to
> > pouring over documentation when configuration issues arise. 
> Unfortunately, I
> > haven't found a solution to my problem regarding the PythonHandler
> > mod_python.publisher. Here's a brief synopsis of my environment and 
> problem.
> >  
> >  Environment:
> >  
> >  I just used the standard packages provided by apt-get.
> >  
> >  Debian 3.1 stable
> >  apache 2.0.54
> >  mod_python 3.1.3
> >  Python 2.3.5
> >  
> >  Configuration:
> >  
> >  file: /etc/apache2/sites-available/default
> >  
> >  <Directory /var/www/mod_python>
> >  AllowOverride FileInfo
> >  </Directory>
> >  
> >  --for whatever reason I had to add this to get the .htaccess to work.
> >  
> >  file: /var/www/mod_python/.htaccess
> >  
> >  AddHandler python-program .py .psp
> >  PythonHandler mptest
> >  #PythonHandler mod_python.publisher | .py
> >  PythonHandler mod_python.psp | .psp
> >  PythonDebug On
> >  
> >  file: /var/www/mod_python/mptest.py
> >  
> >  from mod_python import apache
> >  
> >  def handler(req):
> >  req.content_type="text/html"
> >  req.write("<html><body>")
> >  req.write("Hello World!")
> >  req.write("</body></html>")
> >  return apache.OK
> >  
> >  Problem:
> >  
> >  With the .htaccess configured as above, mptest.py works correctly 
> when I
> > point the browser to http://localhost/mod_python/mptest and
> > prints the Hello World!
> >  
> >  I comment line 2 of the .htaccess and uncomment line 3, and the browser
> > reports a 404 Error stating that The requested URL 
> /mod_python/mptest.py was
> > not found on this server(note that the URL remained the same in the
> > browser). I also find it interesting to note that in either 
> configuration,
> > the PythonHandler mod_python.psp functions correctly, and the
> > apache2/access.log and error.log report nothing more than a 404 error.
> >  
> >  Now I thought about just removing the mod_python.publisher 
> altogether and
> > using multiple Python handlers for the .py files, but the 
> implementation
> > failed for some reason. My plan was to make an entry for each .py 
> file in
> > the same way you would make an entry for every servlet in a web.xml 
> file. It
> > seems as though no matter where or in what order I put the 
> PythonHandler
> > lines in, if I make a call to one of them, all of them are executed.
> >  
> >  This I assume, means that I really have to have a mod_python.publisher
> > working. Any help would be greatly appreciate.
> >  
> >  Regards,
> >  Ken Bradshaw
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
> >
>
>------------------------------------------------------------------------
>
>_______________________________________________
>Mod_python mailing list
>Mod_python@modpython.org
>http://mailman.modpython.org/mailman/listinfo/mod_python
>  
>

From nicolas.lehuen at gmail.com  Tue Oct 11 01:55:31 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Tue Oct 11 01:55:39 2005
Subject: [mod_python] testhandler issue
In-Reply-To: <434B36BF.4060504@sjsoft.com>
References: <OF8210393A.3CE7851E-ON87257092.005EDDC9-86257092.0063833E@us.ibm.com>
	<c298f2d70510061135p14f6fe43y@mail.gmail.com>
	<434B36BF.4060504@sjsoft.com>
Message-ID: <c298f2d70510102255g228a0a73w@mail.gmail.com>

Hi,

That's a good idea, we could just add an index() method to the mptest
module. There is no real mptest module, though. It's just some text in a
tutorial.

Regards,
Nicolas

2005/10/11, David Fraser <davidf@sjsoft.com>:
>
> Hi Nicolas
>
> I wonder if it wouldb e helpful to add a publisher-style handler to the
> mptest module. This could return a page that says "this is being served
> by the publisher" with some explanation - that way people will at least
> be told what is happening...
>
> David
>
> Nicolas Lehuen wrote:
>
> > Hi Ken,
> >
> > Unfortunately for a lot of mod_python beginners, it is not clear why
> > the mptest handler CANNOT be used directly by the publisher handler.
> >
> > First of all, try to have the publisher running as described here :
> > http://www.modpython.org/live/current/doc-html/tut-pub.html
> > <http://www.modpython.org/live/current/doc-html/tut-pub.html>
> >
> > Then, you'll understand that even if the publisher is correctly
> > configured, if you call /mod_python/mptest.py, then the publisher
> > handler will find the mptest module but NOT an index(req) function
> > inside... You'll have to call /mod_python/mptest.py/handler to specify
> > the function to call (or rename handler to index) and begin to solve
> > your 404 problem.
> >
> > Last, but not least, handlers are supposed to write on the request
> > object and return a status value (hence the return apache.OK), whereas
> > the return value of published functions is the data you want to send
> > back to the client (though you can also write on the request object to
> > make things more interesting).
> >
> > To sum up, handlers are the lowest API of mod_python, and the
> > publisher is just a handler which has its own system for publishing,
> > which somewhat resembles the handler system, but with enough
> > differences to prevent the two from being swappable at will... We know
> > it's quite confusing for a newbie, but now that there are users for
> > the two layers, we can't unify them :).
> >
> > Regards,
> > Nicolas
> >
> > 2005/10/6, Ken Bradshaw <bradshak@us.ibm.com
> > <mailto:bradshak@us.ibm.com>>:
> > >
> > >
> > > Hello All,
> > > I've recently taken an interest in python and mod_python in
> > particular. For
> > > the past two years or so I've been developing enterprise web apps in
> > j2ee
> > > with WebSphere Applications Server and Portal Server, so I'm pretty
> > used to
> > > pouring over documentation when configuration issues arise.
> > Unfortunately, I
> > > haven't found a solution to my problem regarding the PythonHandler
> > > mod_python.publisher. Here's a brief synopsis of my environment and
> > problem.
> > >
> > > Environment:
> > >
> > > I just used the standard packages provided by apt-get.
> > >
> > > Debian 3.1 stable
> > > apache 2.0.54
> > > mod_python 3.1.3
> > > Python 2.3.5
> > >
> > > Configuration:
> > >
> > > file: /etc/apache2/sites-available/default
> > >
> > > <Directory /var/www/mod_python>
> > > AllowOverride FileInfo
> > > </Directory>
> > >
> > > --for whatever reason I had to add this to get the .htaccess to work.
> > >
> > > file: /var/www/mod_python/.htaccess
> > >
> > > AddHandler python-program .py .psp
> > > PythonHandler mptest
> > > #PythonHandler mod_python.publisher | .py
> > > PythonHandler mod_python.psp | .psp
> > > PythonDebug On
> > >
> > > file: /var/www/mod_python/mptest.py
> > >
> > > from mod_python import apache
> > >
> > > def handler(req):
> > > req.content_type="text/html"
> > > req.write("<html><body>")
> > > req.write("Hello World!")
> > > req.write("</body></html>")
> > > return apache.OK
> > >
> > > Problem:
> > >
> > > With the .htaccess configured as above, mptest.py works correctly
> > when I
> > > point the browser to http://localhost/mod_python/mptest and
> > > prints the Hello World!
> > >
> > > I comment line 2 of the .htaccess and uncomment line 3, and the
> browser
> > > reports a 404 Error stating that The requested URL
> > /mod_python/mptest.py was
> > > not found on this server(note that the URL remained the same in the
> > > browser). I also find it interesting to note that in either
> > configuration,
> > > the PythonHandler mod_python.psp functions correctly, and the
> > > apache2/access.log and error.log report nothing more than a 404 error.
> > >
> > > Now I thought about just removing the mod_python.publisher
> > altogether and
> > > using multiple Python handlers for the .py files, but the
> > implementation
> > > failed for some reason. My plan was to make an entry for each .py
> > file in
> > > the same way you would make an entry for every servlet in a web.xml
> > file. It
> > > seems as though no matter where or in what order I put the
> > PythonHandler
> > > lines in, if I make a call to one of them, all of them are executed.
> > >
> > > This I assume, means that I really have to have a mod_python.publisher
> > > working. Any help would be greatly appreciate.
> > >
> > > Regards,
> > > Ken Bradshaw
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org <mailto:Mod_python@modpython.org>
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> > >
> > >
> >
> >------------------------------------------------------------------------
> >
> >_______________________________________________
> >Mod_python mailing list
> >Mod_python@modpython.org
> >http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051011/608ce854/attachment-0001.html
From davidf at sjsoft.com  Tue Oct 11 03:12:32 2005
From: davidf at sjsoft.com (David Fraser)
Date: Tue Oct 11 03:12:52 2005
Subject: [mod_python] testhandler issue
In-Reply-To: <c298f2d70510102255g228a0a73w@mail.gmail.com>
References: <OF8210393A.3CE7851E-ON87257092.005EDDC9-86257092.0063833E@us.ibm.com>	<c298f2d70510061135p14f6fe43y@mail.gmail.com>	<434B36BF.4060504@sjsoft.com>
	<c298f2d70510102255g228a0a73w@mail.gmail.com>
Message-ID: <434B65E0.7060305@sjsoft.com>

Right, I wasn't concentrating. I don't think that would be a good idea 
at all as it would just confuse the issue :-)
But if we decide to continue the builtin testhandler idea that could be 
done there...

Nicolas Lehuen wrote:

> Hi,
>
> That's a good idea, we could just add an index() method to the mptest 
> module. There is no real mptest module, though. It's just some text in 
> a tutorial.
>
> Regards,
> Nicolas
>
> 2005/10/11, David Fraser <davidf@sjsoft.com <mailto:davidf@sjsoft.com>>:
>
>     Hi Nicolas
>
>     I wonder if it wouldb e helpful to add a publisher-style handler
>     to the
>     mptest module. This could return a page that says "this is being
>     served
>     by the publisher" with some explanation - that way people will at
>     least
>     be told what is happening...
>
>     David
>
>     Nicolas Lehuen wrote:
>
>     > Hi Ken,
>     >
>     > Unfortunately for a lot of mod_python beginners, it is not clear why
>     > the mptest handler CANNOT be used directly by the publisher
>     handler.
>     >
>     > First of all, try to have the publisher running as described here :
>     > http://www.modpython.org/live/current/doc-html/tut-pub.html
>     <http://www.modpython.org/live/current/doc-html/tut-pub.html>
>     > <http://www.modpython.org/live/current/doc-html/tut-pub.html>
>     >
>     > Then, you'll understand that even if the publisher is correctly
>     > configured, if you call /mod_python/mptest.py, then the publisher
>     > handler will find the mptest module but NOT an index(req) function
>     > inside... You'll have to call /mod_python/mptest.py/handler to
>     specify
>     > the function to call (or rename handler to index) and begin to solve
>     > your 404 problem.
>     >
>     > Last, but not least, handlers are supposed to write on the request
>     > object and return a status value (hence the return apache.OK),
>     whereas
>     > the return value of published  functions is the data you want to
>     send
>     > back to the client (though you can also write on the request
>     object to
>     > make things more interesting).
>     >
>     > To sum up, handlers are the lowest API of mod_python, and the
>     > publisher is just a handler which has its own system for publishing,
>     > which somewhat resembles the handler system, but with enough
>     > differences to prevent the two from being swappable at will...
>     We know
>     > it's quite confusing for a newbie, but now that there are users for
>     > the two layers, we can't unify them :).
>     >
>     > Regards,
>     > Nicolas
>     >
>     > 2005/10/6, Ken Bradshaw < bradshak@us.ibm.com
>     <mailto:bradshak@us.ibm.com>
>     > <mailto:bradshak@us.ibm.com <mailto:bradshak@us.ibm.com>>>:
>     > >
>     > >
>     > > Hello All,
>     > >  I've recently taken an interest in python and mod_python in
>     > particular. For
>     > > the past two years or so I've been developing enterprise web
>     apps in
>     > j2ee
>     > > with WebSphere Applications Server and Portal Server, so I'm
>     pretty
>     > used to
>     > > pouring over documentation when configuration issues arise.
>     > Unfortunately, I
>     > > haven't found a solution to my problem regarding the PythonHandler
>     > > mod_python.publisher. Here's a brief synopsis of my
>     environment and
>     > problem.
>     > >
>     > >  Environment:
>     > >
>     > >  I just used the standard packages provided by apt-get.
>     > >
>     > >  Debian 3.1 stable
>     > >  apache 2.0.54
>     > >  mod_python 3.1.3
>     > >  Python 2.3.5
>     > >
>     > >  Configuration:
>     > >
>     > >  file: /etc/apache2/sites-available/default
>     > >
>     > >  <Directory /var/www/mod_python>
>     > >  AllowOverride FileInfo
>     > >  </Directory>
>     > >
>     > >  --for whatever reason I had to add this to get the .htaccess
>     to work.
>     > >
>     > >  file: /var/www/mod_python/.htaccess
>     > >
>     > >  AddHandler python-program .py .psp
>     > >  PythonHandler mptest
>     > >  #PythonHandler mod_python.publisher | .py
>     > >  PythonHandler mod_python.psp | .psp
>     > >  PythonDebug On
>     > >
>     > >  file: /var/www/mod_python/mptest.py
>     > >
>     > >  from mod_python import apache
>     > >
>     > >  def handler(req):
>     > >  req.content_type="text/html"
>     > >  req.write("<html><body>")
>     > >  req.write("Hello World!")
>     > >  req.write("</body></html>")
>     > >  return apache.OK
>     > >
>     > >  Problem:
>     > >
>     > >  With the .htaccess configured as above, mptest.py works correctly
>     > when I
>     > > point the browser to http://localhost/mod_python/mptest and
>     > > prints the Hello World!
>     > >
>     > >  I comment line 2 of the .htaccess and uncomment line 3, and
>     the browser
>     > > reports a 404 Error stating that The requested URL
>     > /mod_python/mptest.py was
>     > > not found on this server(note that the URL remained the same
>     in the
>     > > browser). I also find it interesting to note that in either
>     > configuration,
>     > > the PythonHandler mod_python.psp functions correctly, and the
>     > > apache2/access.log and error.log report nothing more than a
>     404 error.
>     > >
>     > >  Now I thought about just removing the mod_python.publisher
>     > altogether and
>     > > using multiple Python handlers for the .py files, but the
>     > implementation
>     > > failed for some reason. My plan was to make an entry for each .py
>     > file in
>     > > the same way you would make an entry for every servlet in a
>     web.xml
>     > file. It
>     > > seems as though no matter where or in what order I put the
>     > PythonHandler
>     > > lines in, if I make a call to one of them, all of them are
>     executed.
>     > >
>     > >  This I assume, means that I really have to have a
>     mod_python.publisher
>     > > working. Any help would be greatly appreciate.
>     > >
>     > >  Regards,
>     > >  Ken Bradshaw
>

From blinken at gmail.com  Tue Oct 11 04:31:16 2005
From: blinken at gmail.com (Patrick Coleman)
Date: Tue Oct 11 04:31:43 2005
Subject: [mod_python] mod_python, WebDAV and dynamic VirtualHosts
Message-ID: <603140b60510110131h3f82433dg@mail.gmail.com>

[Resending because it doesnt appear to have gone through the first
time; apologies if it did]

Hi,
I'm currently looking for a way to define a python request handler to
process incoming requests and enable WebDAV on certain directories.
The reason I want to use python for this is because I need a 'Mass
VirtualHosting' arrangment, where virtualhosts are dynamically handled
depending on the Host: header, and so I dont think (please correct me
if I'm wrong) its possible to do this (ie. enable WebDAV on a specific
directories inside a dynamic VirtualHost) with plain Apache config.

I am currently achieving the virtualhosting side of things by using
mod_vhost_alias which is working nicely, but I would like to setup a
system where users can access their web directory over WebDAV using
the URL http://a.users.hostname/dav.

For this specific example, something like this would work (havn't
tested it but you get the general idea):
<VirtualHost *:80>
 ServerName a.users.hostname
 ...
 Alias /dav /www/domains/a.users.hostname
 <Location /dav>
   DAV On
   AuthType "Basic"
   AuthName "a.users.hostname WebDAV"
   AuthUsersFile /www/domains/a.users.hostname/passwd/htpasswd
   Require valid user
 </Location>
</VirtualHost>

This would be great except that I need it created dynamically somehow
- as a last resort I could fall back on creating all these sections by
hand for each user, but that solution doesnt seem as elegant somehow
:)

Hence mod_python. A request handler seems to do what I want, but I'm
not sure how to set options like 'DAV On' (or do aliases) as
appropriate for certain directories. Is this possible, or should I be
looking at some other solution?

I hope all that made sense, and wasnt too long-winded :)
Thanks in advance,
Patrick

From petersanchez at gmail.com  Tue Oct 11 13:46:16 2005
From: petersanchez at gmail.com (Peter Sanchez)
Date: Tue Oct 11 13:46:24 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <1128998772.6100@dscpl.user.openhosting.com>
References: <1128998772.6100@dscpl.user.openhosting.com>
Message-ID: <bb84149f0510111046h5e366e0ar88d0423980ebd8fc@mail.gmail.com>

OK, I tried 3.2.2b from source. Now, when I start apache, the logs just go
into a loop with the same errors as before :)

[Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/4.4.0
mod_python/3.2.0b Python/2.4.1 configured -- resuming normal operations
[Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit signal Abort trap
(6)
[Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call init.\n
TypeError: init() takes exactly 2 arguments (0 given)
Fatal Python error: PyThreadState_Delete: tstate is still current
[Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call init.\n
TypeError: init() takes exactly 2 arguments (0 given)
Fatal Python error: PyThreadState_Delete: tstate is still current

Note, these were being given while NOT loading my mod_python code, I think
it was doing this for every 'normal' apache instance. I quickly reverted
back to the last setup (mod_pyton/3.1.4)

Any other ideas guys?

Thanks,

Peter


PS, Sorry if I double posted this.. Gmail is acting funny today.

On 10/10/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Peter Sanchez wrote ..
> > This is the apache config I am using (in relation to mod_python):
> >
> > <Directory /home/user/public_html/modpy>
> > Options -MultiViews
> > AddHandler python-program .py
> > SetHandler python-program
> > PythonHandler mod_python.publisher
> > PythonDebug On
> > Order allow,deny
> > Allow from all
> > </Directory>
>
> BTW, you wouldn't usually use AddHandler and SetHandler at the same
> time like this. Not sure if SetHandler is going to take precedence or not.
>
> Graham
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051011/ab9a0ca2/attachment.html
From jg.lists at sympatico.ca  Tue Oct 11 14:40:17 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Oct 11 14:38:39 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <bb84149f0510111046h5e366e0ar88d0423980ebd8fc@mail.gmail.com>
References: <1128998772.6100@dscpl.user.openhosting.com>
	<bb84149f0510111046h5e366e0ar88d0423980ebd8fc@mail.gmail.com>
Message-ID: <434C0711.20901@sympatico.ca>

Peter Sanchez wrote:
> OK, I tried 3.2.2b from source. Now, when I start apache, the logs just 
> go into a loop with the same errors as before :)
> 
> [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/4.4.0 
> mod_python/3.2.0b Python/2.4.1 configured -- resuming normal operations
> [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit signal Abort 
> trap (6)
> [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call init.\n
> TypeError: init() takes exactly 2 arguments (0 given)
> Fatal Python error: PyThreadState_Delete: tstate is still current
> [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call init.\n
> TypeError: init() takes exactly 2 arguments (0 given)
> Fatal Python error: PyThreadState_Delete: tstate is still current
> 
> Note, these were being given while NOT loading my mod_python code, I 
> think it was doing this for every 'normal' apache instance. I quickly 
> reverted back to the last setup (mod_pyton/3.1.4)
> 
> Any other ideas guys?
> 
> Thanks,
> 
> Peter
> 

This sounds like the problem I was having trying to get the 3.2.2b unit 
tests to pass on FreeBSD. This was discussed on the python-dev list 
around Sept 10.

You can read the archive on gmane at 
http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465

Grisha suggested you can see this sort of problem on FreeBSD where 
Python is threaded and Apache is not and offered the following:

   If you built apache without thread support, you may need to add the 
  following lines to $PREFIX/sbin/envvars:

  LD_PRELOAD=/usr/lib/libc_r.so
  export LD_PRELOAD

Regards,
Jim
From petersanchez at gmail.com  Tue Oct 11 16:14:34 2005
From: petersanchez at gmail.com (Peter Sanchez)
Date: Tue Oct 11 16:14:40 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <434C0711.20901@sympatico.ca>
References: <1128998772.6100@dscpl.user.openhosting.com>
	<bb84149f0510111046h5e366e0ar88d0423980ebd8fc@mail.gmail.com>
	<434C0711.20901@sympatico.ca>
Message-ID: <bb84149f0510111314p404302eek76f2383e3db7b1c@mail.gmail.com>

Thanks for the reference. I tried adding the following line, no real help.
So I rebuilt apache2 and mod_python and made sure it didn't have threads
support. Now, I still get the same error message, but the entire page is
loading correctly?

Same log entries though:

Fatal Python error: PyThreadState_Delete: tstate is still current
[Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit signal Abort trap (6)

I am wondering if at this point, its not related to Cheetah Template engine,
which I use for my templates (will be converting to psp template system very
soon) I am not sure if that attempts any threaded functions, etc. Also, I
dont know that if it was trying something like that, if it would effect
mod_python in this way.

Is there any traces I can run, etc. to help debug this issue?

Thanks,

Peter

On 10/11/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
>
> Peter Sanchez wrote:
> > OK, I tried 3.2.2b from source. Now, when I start apache, the logs just
> > go into a loop with the same errors as before :)
> >
> > [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/4.4.0
> > mod_python/3.2.0b Python/2.4.1 configured -- resuming normal operations
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit signal Abort
> > trap (6)
> > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
> init.\n
> > TypeError: init() takes exactly 2 arguments (0 given)
> > Fatal Python error: PyThreadState_Delete: tstate is still current
> > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
> init.\n
> > TypeError: init() takes exactly 2 arguments (0 given)
> > Fatal Python error: PyThreadState_Delete: tstate is still current
> >
> > Note, these were being given while NOT loading my mod_python code, I
> > think it was doing this for every 'normal' apache instance. I quickly
> > reverted back to the last setup (mod_pyton/3.1.4)
> >
> > Any other ideas guys?
> >
> > Thanks,
> >
> > Peter
> >
>
> This sounds like the problem I was having trying to get the 3.2.2b unit
> tests to pass on FreeBSD. This was discussed on the python-dev list
> around Sept 10.
>
> You can read the archive on gmane at
> http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
>
> Grisha suggested you can see this sort of problem on FreeBSD where
> Python is threaded and Apache is not and offered the following:
>
> If you built apache without thread support, you may need to add the
> following lines to $PREFIX/sbin/envvars:
>
> LD_PRELOAD=/usr/lib/libc_r.so
> export LD_PRELOAD
>
> Regards,
> Jim
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051011/f525f24c/attachment.html
From grahamd at dscpl.com.au  Tue Oct 11 18:50:02 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 11 18:50:11 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
Message-ID: <1129071002.18770@dscpl.user.openhosting.com>

Making an educated guess (???), in src/mod_python.c, can you modify the
release_interpreter() function and change:

static void release_interpreter(void)
{
    PyThreadState *tstate = PyThreadState_Get();
#ifdef WITH_THREAD
    PyEval_ReleaseThread(tstate);
#endif
    PyThreadState_Delete(tstate);
}

to:

static void release_interpreter(void)
{
    PyThreadState *tstate = PyThreadState_Get();
#ifdef WITH_THREAD
    PyEval_ReleaseThread(tstate);
#else
    PyThreadState_Swap(NULL);
#endif
    PyThreadState_Delete(tstate);
}

The original doesn't seem quite right to me because it wouldn't revert
the thread state before deleting it when threads aren't used. There is a
similar bit of code in get_interpreter() where it has:

        if (!idata->obcallback)
        {
#ifdef WITH_THREAD
            PyEval_ReleaseThread(tstate);
#endif                           PyThreadState_Delete(tstate);

which perhaps should be:

        if (!idata->obcallback)
        {
#ifdef WITH_THREAD
                    PyEval_ReleaseThread(tstate);
#else
                    PyThreadState_Swap(NULL);
#endif
                    PyThreadState_Delete(tstate);

In this case it only gets invoked when mod_python callback can't be
created.

If this is indeed the problem, in mod_python 3.1.3, the callback may be
created okay so it only dies in release_interpreter(). In mod_python 3.2
though, maybe the callback creation itself is failing meaning it would
die everytime a child process is created.

If someone has the time and a non BSD platform could you independently
build a version of Python without thread support and then build
mod_python 3.2 and see if you get similar crashes. Ie., I feel this
could be wrong for no threads and not be BSD specific. From what I have
seen, FreeBSD is the only platform that still doesn't build in threads
to Python by default and thus why it isn't seen more. I can't do it
personally as have MacOS X and one has to be careful with multiple
Python installations there in case one trashes system one accidentally.
Would rather not risk it. :-)

Graham

Peter Sanchez wrote ..
> Thanks for the reference. I tried adding the following line, no real help.
> So I rebuilt apache2 and mod_python and made sure it didn't have threads
> support. Now, I still get the same error message, but the entire page is
> loading correctly?
> 
> Same log entries though:
> 
> Fatal Python error: PyThreadState_Delete: tstate is still current
> [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit signal Abort trap
> (6)
> 
> I am wondering if at this point, its not related to Cheetah Template engine,
> which I use for my templates (will be converting to psp template system
> very
> soon) I am not sure if that attempts any threaded functions, etc. Also,
> I
> dont know that if it was trying something like that, if it would effect
> mod_python in this way.
> 
> Is there any traces I can run, etc. to help debug this issue?
> 
> Thanks,
> 
> Peter
> 
> On 10/11/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
> >
> > Peter Sanchez wrote:
> > > OK, I tried 3.2.2b from source. Now, when I start apache, the logs
> just
> > > go into a loop with the same errors as before :)
> > >
> > > [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/4.4.0
> > > mod_python/3.2.0b Python/2.4.1 configured -- resuming normal operations
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit signal Abort
> > > trap (6)
> > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
> > init.\n
> > > TypeError: init() takes exactly 2 arguments (0 given)
> > > Fatal Python error: PyThreadState_Delete: tstate is still current
> > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
> > init.\n
> > > TypeError: init() takes exactly 2 arguments (0 given)
> > > Fatal Python error: PyThreadState_Delete: tstate is still current
> > >
> > > Note, these were being given while NOT loading my mod_python code,
> I
> > > think it was doing this for every 'normal' apache instance. I quickly
> > > reverted back to the last setup (mod_pyton/3.1.4)
> > >
> > > Any other ideas guys?
> > >
> > > Thanks,
> > >
> > > Peter
> > >
> >
> > This sounds like the problem I was having trying to get the 3.2.2b unit
> > tests to pass on FreeBSD. This was discussed on the python-dev list
> > around Sept 10.
> >
> > You can read the archive on gmane at
> > http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
> >
> > Grisha suggested you can see this sort of problem on FreeBSD where
> > Python is threaded and Apache is not and offered the following:
> >
> > If you built apache without thread support, you may need to add the
> > following lines to $PREFIX/sbin/envvars:
> >
> > LD_PRELOAD=/usr/lib/libc_r.so
> > export LD_PRELOAD
> >
> > Regards,
> > Jim
> >
From mauchi_co at earthlink.net  Tue Oct 11 19:05:54 2005
From: mauchi_co at earthlink.net (mauchi)
Date: Tue Oct 11 19:05:14 2005
Subject: [mod_python] opening a zodb connection inside mod_python
Message-ID: <1129071954.5680.124.camel@totoro.assembleco.x>

I don't use Zope for anything but I do use zodb to compliment a MySql
database. It has worked well until recently when I wanted to pull the
data in zodb onto a web page. I seem unable to connect to zodb, some web
research got me looking at the Zope handler for mod_python but I didn't
have any luck getting it to work following the instructions. Is there
another way I can connect to zodb through mod_python or does anybody
have any tips for getting the handler working? I'm using apache2 with
Suse and the latest mod_python.

Thanks!

Mchi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051011/3e55190e/attachment.html
From erdibalint at freemail.hu  Wed Oct 12 02:51:29 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Wed Oct 12 02:51:33 2005
Subject: [mod_python] simpleTAL - 500 Internal Server Error
Message-ID: <434CB271.4090506@freemail.hu>

Hi all,

I'm trying to use simpleTAL templates with no success. When querying the 
python script that expands the template I get the following:

"Internal Server Error
The server encountered an internal error or misconfiguration and was 
unable to complete your request.

Please contact the server administrator, webmaster@localhost and inform 
them of the time the error occurred, and anything you might have done 
that may have caused the error.

More information about this error may be available in the server error log."

Apache/1.3.33 Server at localhost Port 80

The apache error log is not verbose and does not contain a stack trace, 
only this:

[Wed Oct 12 08:42:37 2005] [notice] mod_python: (Re)importing 
mod_python.publisher from None
[Wed Oct 12 08:42:37 2005] [notice] mod_python: (Re)importing simple 
from ['/var/www/helloSimpleTAL/control']

My code:

import sys
from simpletal import simpleTAL, simpleTALES
------
def hello(req):

     # Create the context that is used by the template
     context = simpleTALES.Context()
     context.addGlobal ("title", "Hello World")

     templateFile = open ("/var/www/helloSimpleTAL/simple.html", 'r')
     template = simpleTAL.compileHTMLTemplate (templateFile)
     templateFile.close()
     template.expand (context, sys.stdout)
     # (1)
-----
My Directory directive in apache:

<Directory /var/www/helloSimpleTAL/control>
         SetHandler python-program
         PythonHandler mod_python.publisher
         PythonDebug on
</Directory>


I've found someone had the same problem before on this mailing list and 
got answered that this is a bug in mod_python 2.7.10, so I added a

return " " to (1) above, but that only returned an empty page (and if I 
do return "x", a page with an 'x' will be rendered)

I'm using Python 2.3.4, Apache 1.3.33, mod_python 2.7.11 and I've got 
the publisher handler to work beforehand, just not with simpleTAL :(

Can anyone help me with this?

Thanks a lot in advance,
Balint
From jcigar at ulb.ac.be  Wed Oct 12 03:24:13 2005
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Wed Oct 12 03:23:21 2005
Subject: [mod_python] simpleTAL - 500 Internal Server Error
In-Reply-To: <434CB271.4090506@freemail.hu>
References: <434CB271.4090506@freemail.hu>
Message-ID: <434CBA1D.1030001@ulb.ac.be>

Hello,

I suggest that you first try with multiple interpreters (with the 
PythonInterpPerDirectory On for example). I had a lot of "Internal 
Server Error" before, and the problem comes from that.
I don't know TAL but I had a similar problem with the Clearsilver 
template engine (and multiple interpreters).
With clearsilver I had to run the neo_cgi.update() after importing 
neo_cgi, from the documentation :

*update*()
    This is only necessary in PyApache in non-single Python interpreter
    mode. If you are using an embedded Python interpreter which
    continues to be reloaded every page, then update reinstalls the
    "fake" modules neo_util, and neo_cs. This is necessary because on
    interpreter restart the modules are kept loaded, but their init
    functions are not re-run.

maybe you have to do something like that with TAL too ...

Regards,
Julien

Erdi Balint wrote:

> Hi all,
>
> I'm trying to use simpleTAL templates with no success. When querying 
> the python script that expands the template I get the following:
>
> "Internal Server Error
> The server encountered an internal error or misconfiguration and was 
> unable to complete your request.
>
> Please contact the server administrator, webmaster@localhost and 
> inform them of the time the error occurred, and anything you might 
> have done that may have caused the error.
>
> More information about this error may be available in the server error 
> log."
>
> Apache/1.3.33 Server at localhost Port 80
>
> The apache error log is not verbose and does not contain a stack 
> trace, only this:
>
> [Wed Oct 12 08:42:37 2005] [notice] mod_python: (Re)importing 
> mod_python.publisher from None
> [Wed Oct 12 08:42:37 2005] [notice] mod_python: (Re)importing simple 
> from ['/var/www/helloSimpleTAL/control']
>
> My code:
>
> import sys
> from simpletal import simpleTAL, simpleTALES
> ------
> def hello(req):
>
>     # Create the context that is used by the template
>     context = simpleTALES.Context()
>     context.addGlobal ("title", "Hello World")
>
>     templateFile = open ("/var/www/helloSimpleTAL/simple.html", 'r')
>     template = simpleTAL.compileHTMLTemplate (templateFile)
>     templateFile.close()
>     template.expand (context, sys.stdout)
>     # (1)
> -----
> My Directory directive in apache:
>
> <Directory /var/www/helloSimpleTAL/control>
>         SetHandler python-program
>         PythonHandler mod_python.publisher
>         PythonDebug on
> </Directory>
>
>
> I've found someone had the same problem before on this mailing list 
> and got answered that this is a bug in mod_python 2.7.10, so I added a
>
> return " " to (1) above, but that only returned an empty page (and if 
> I do return "x", a page with an 'x' will be rendered)
>
> I'm using Python 2.3.4, Apache 1.3.33, mod_python 2.7.11 and I've got 
> the publisher handler to work beforehand, just not with simpleTAL :(
>
> Can anyone help me with this?
>
> Thanks a lot in advance,
> Balint
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Wed Oct 12 03:32:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 12 03:32:47 2005
Subject: [mod_python] simpleTAL - 500 Internal Server Error
Message-ID: <1129102363.22067@dscpl.user.openhosting.com>

If sys.stdout is where TAL is writing the output to, try instead:

  req.content_type = 'text/html'
  req.send_http_header()
  template.expand (context, req)
  return " "

This will only work though if TAL only uses write() on sys.stdout.

It would be better if you could get a string out of expand()
and write it to req explicitly or return it from handler.

Maybe try:

  output = StringIO.StringIO()
  template.expand(context,output)
  return output.getvalue()

or:

  output = StringIO.StringIO()
  template.expand(context,output)
  req.content_type = 'text/html'
  req.send_http_header()
  req.write(output.getvalue()
  return " "

Does expand() return a string if you don't supply sys.stdout as an
argument?

Sorry if this isn't helpful, in a bit of rush to get somewhere at the
moment.

Graham

Julien Cigar wrote ..
> Hello,
> 
> I suggest that you first try with multiple interpreters (with the 
> PythonInterpPerDirectory On for example). I had a lot of "Internal 
> Server Error" before, and the problem comes from that.
> I don't know TAL but I had a similar problem with the Clearsilver 
> template engine (and multiple interpreters).
> With clearsilver I had to run the neo_cgi.update() after importing 
> neo_cgi, from the documentation :
> 
> *update*()
>     This is only necessary in PyApache in non-single Python interpreter
>     mode. If you are using an embedded Python interpreter which
>     continues to be reloaded every page, then update reinstalls the
>     "fake" modules neo_util, and neo_cs. This is necessary because on
>     interpreter restart the modules are kept loaded, but their init
>     functions are not re-run.
> 
> maybe you have to do something like that with TAL too ...
> 
> Regards,
> Julien
> 
> Erdi Balint wrote:
> 
> > Hi all,
> >
> > I'm trying to use simpleTAL templates with no success. When querying
> > the python script that expands the template I get the following:
> >
> > "Internal Server Error
> > The server encountered an internal error or misconfiguration and was
> > unable to complete your request.
> >
> > Please contact the server administrator, webmaster@localhost and 
> > inform them of the time the error occurred, and anything you might 
> > have done that may have caused the error.
> >
> > More information about this error may be available in the server error
> > log."
> >
> > Apache/1.3.33 Server at localhost Port 80
> >
> > The apache error log is not verbose and does not contain a stack 
> > trace, only this:
> >
> > [Wed Oct 12 08:42:37 2005] [notice] mod_python: (Re)importing 
> > mod_python.publisher from None
> > [Wed Oct 12 08:42:37 2005] [notice] mod_python: (Re)importing simple
> > from ['/var/www/helloSimpleTAL/control']
> >
> > My code:
> >
> > import sys
> > from simpletal import simpleTAL, simpleTALES
> > ------
> > def hello(req):
> >
> >     # Create the context that is used by the template
> >     context = simpleTALES.Context()
> >     context.addGlobal ("title", "Hello World")
> >
> >     templateFile = open ("/var/www/helloSimpleTAL/simple.html", 'r')
> >     template = simpleTAL.compileHTMLTemplate (templateFile)
> >     templateFile.close()
> >     template.expand (context, sys.stdout)
> >     # (1)
> > -----
> > My Directory directive in apache:
> >
> > <Directory /var/www/helloSimpleTAL/control>
> >         SetHandler python-program
> >         PythonHandler mod_python.publisher
> >         PythonDebug on
> > </Directory>
> >
> >
> > I've found someone had the same problem before on this mailing list 
> > and got answered that this is a bug in mod_python 2.7.10, so I added
> a
> >
> > return " " to (1) above, but that only returned an empty page (and if
> > I do return "x", a page with an 'x' will be rendered)
> >
> > I'm using Python 2.3.4, Apache 1.3.33, mod_python 2.7.11 and I've got
> > the publisher handler to work beforehand, just not with simpleTAL :(
> >
> > Can anyone help me with this?
> >
> > Thanks a lot in advance,
> > Balint
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From grisha at modpython.org  Wed Oct 12 08:08:31 2005
From: grisha at modpython.org (Gregory (Grisha) Trubetskoy)
Date: Wed Oct 12 08:09:04 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <1129071002.18770@dscpl.user.openhosting.com>
References: <1129071002.18770@dscpl.user.openhosting.com>
Message-ID: <20051012080744.O79010@grisha.dyndns.org>


You may be onto something here... I'll see about testing this out on my 
FreeBSD system.

Grisha

On Tue, 11 Oct 2005, Graham Dumpleton wrote:

> Making an educated guess (???), in src/mod_python.c, can you modify the
> release_interpreter() function and change:
>
> static void release_interpreter(void)
> {
>    PyThreadState *tstate = PyThreadState_Get();
> #ifdef WITH_THREAD
>    PyEval_ReleaseThread(tstate);
> #endif
>    PyThreadState_Delete(tstate);
> }
>
> to:
>
> static void release_interpreter(void)
> {
>    PyThreadState *tstate = PyThreadState_Get();
> #ifdef WITH_THREAD
>    PyEval_ReleaseThread(tstate);
> #else
>    PyThreadState_Swap(NULL);
> #endif
>    PyThreadState_Delete(tstate);
> }
>
> The original doesn't seem quite right to me because it wouldn't revert
> the thread state before deleting it when threads aren't used. There is a
> similar bit of code in get_interpreter() where it has:
>
>        if (!idata->obcallback)
>        {
> #ifdef WITH_THREAD
>            PyEval_ReleaseThread(tstate);
> #endif                           PyThreadState_Delete(tstate);
>
> which perhaps should be:
>
>        if (!idata->obcallback)
>        {
> #ifdef WITH_THREAD
>                    PyEval_ReleaseThread(tstate);
> #else
>                    PyThreadState_Swap(NULL);
> #endif
>                    PyThreadState_Delete(tstate);
>
> In this case it only gets invoked when mod_python callback can't be
> created.
>
> If this is indeed the problem, in mod_python 3.1.3, the callback may be
> created okay so it only dies in release_interpreter(). In mod_python 3.2
> though, maybe the callback creation itself is failing meaning it would
> die everytime a child process is created.
>
> If someone has the time and a non BSD platform could you independently
> build a version of Python without thread support and then build
> mod_python 3.2 and see if you get similar crashes. Ie., I feel this
> could be wrong for no threads and not be BSD specific. From what I have
> seen, FreeBSD is the only platform that still doesn't build in threads
> to Python by default and thus why it isn't seen more. I can't do it
> personally as have MacOS X and one has to be careful with multiple
> Python installations there in case one trashes system one accidentally.
> Would rather not risk it. :-)
>
> Graham
>
> Peter Sanchez wrote ..
>> Thanks for the reference. I tried adding the following line, no real help.
>> So I rebuilt apache2 and mod_python and made sure it didn't have threads
>> support. Now, I still get the same error message, but the entire page is
>> loading correctly?
>>
>> Same log entries though:
>>
>> Fatal Python error: PyThreadState_Delete: tstate is still current
>> [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit signal Abort trap
>> (6)
>>
>> I am wondering if at this point, its not related to Cheetah Template engine,
>> which I use for my templates (will be converting to psp template system
>> very
>> soon) I am not sure if that attempts any threaded functions, etc. Also,
>> I
>> dont know that if it was trying something like that, if it would effect
>> mod_python in this way.
>>
>> Is there any traces I can run, etc. to help debug this issue?
>>
>> Thanks,
>>
>> Peter
>>
>> On 10/11/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
>>>
>>> Peter Sanchez wrote:
>>>> OK, I tried 3.2.2b from source. Now, when I start apache, the logs
>> just
>>>> go into a loop with the same errors as before :)
>>>>
>>>> [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/4.4.0
>>>> mod_python/3.2.0b Python/2.4.1 configured -- resuming normal operations
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit signal Abort
>>>> trap (6)
>>>> [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
>>> init.\n
>>>> TypeError: init() takes exactly 2 arguments (0 given)
>>>> Fatal Python error: PyThreadState_Delete: tstate is still current
>>>> [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
>>> init.\n
>>>> TypeError: init() takes exactly 2 arguments (0 given)
>>>> Fatal Python error: PyThreadState_Delete: tstate is still current
>>>>
>>>> Note, these were being given while NOT loading my mod_python code,
>> I
>>>> think it was doing this for every 'normal' apache instance. I quickly
>>>> reverted back to the last setup (mod_pyton/3.1.4)
>>>>
>>>> Any other ideas guys?
>>>>
>>>> Thanks,
>>>>
>>>> Peter
>>>>
>>>
>>> This sounds like the problem I was having trying to get the 3.2.2b unit
>>> tests to pass on FreeBSD. This was discussed on the python-dev list
>>> around Sept 10.
>>>
>>> You can read the archive on gmane at
>>> http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
>>>
>>> Grisha suggested you can see this sort of problem on FreeBSD where
>>> Python is threaded and Apache is not and offered the following:
>>>
>>> If you built apache without thread support, you may need to add the
>>> following lines to $PREFIX/sbin/envvars:
>>>
>>> LD_PRELOAD=/usr/lib/libc_r.so
>>> export LD_PRELOAD
>>>
>>> Regards,
>>> Jim
>>>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
From python_it at hotmail.com  Wed Oct 12 09:26:53 2005
From: python_it at hotmail.com (python_it@hotmail.com)
Date: Wed Oct 12 09:26:59 2005
Subject: [mod_python] mod_python mptest.py works publisher not
Message-ID: <BAY17-F145FA0D55E0AB6054FEE52997B0@phx.gbl>

I'm going to work with mod_python.


I install mod_python 3.2.2b for python 2.4.


If i test my install with
mptest.py
see this link:
http://www.modpython.org/live/mod_python-3.2.2b/doc-html/modpython.html
IT WORKS!


But if i try this:


<Directory "C:\.......">
AddHandler mod_python .py
PythonHandler mod_python.publisher
PythonDebug On
</Directory>


http://www.modpython.org/live/mod_python-3.2.2b/doc-html/tut-pub.html


It don't work!


I Get the following message:


Mod_python error: "PythonHandler mod_python.publisher"


Traceback (most recent call last):


  File "C:\Program
Files\Python24\Lib\site-packages\mod_python\apache.py", line 299, in
HandlerDispatch
    result = object(req)


  File "C:\Program
Files\Python24\Lib\site-packages\mod_python\publisher.py", line 204, in
handler
    module = page_cache[req]


  File "C:\Program
Files\Python24\Lib\site-packages\mod_python\cache.py", line 77, in
__getitem__
    return self._checkitem(name)[2]


  File "C:\Program
Files\Python24\Lib\site-packages\mod_python\cache.py", line 119, in
_checkitem
    value = self.build(key, name, opened, entry)


  File "C:\Program
Files\Python24\Lib\site-packages\mod_python\publisher.py", line 77, in
build
    return ModuleCache.build(self, key, req, opened, entry)


  File "C:\Program
Files\Python24\Lib\site-packages\mod_python\cache.py", line 367, in
build
    module = new.module(re_not_word.sub('_',key))


AttributeError: 'module' object has no attribute 'module'


HELP?

_________________________________________________________________
Krijg direct antwoord op je vragen: MSN Messenger 
http://www1.imagine-msn.com/Messenger/Default2.aspx

From danylo at freetobemarlo.net  Wed Oct 12 12:38:52 2005
From: danylo at freetobemarlo.net (Danylo Berko)
Date: Wed Oct 12 12:39:05 2005
Subject: [mod_python] mod_python.publisher error
Message-ID: <fbb58ee4d44e0973e256a580ed507264@12.47.123.121>

I'm getting a mod_python.publisher error when trying to run a form handler. 
It's actually the feedback.py from the O'Reilly Learning Python book.

The script imports the following:

import cgi, cgitb, os, sys, string, time
import httplib, mimetypes
cgitb.enable()


I keep getting the following error:


Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in
HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 98,
in handler
    path=[path])

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 454, in
import_module
    f, p, d = imp.find_module(parts[i], path)

ImportError: No module named feedback




httpd.conf file

<Location "/webdir">
    AddHandler python-program .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Location>


Any ideas as to the source of and fix to the problem?

Thanks,

Dan

________________________________________________
Message sent using UebiMiau 2.7.8


From David.Bear at asu.edu  Wed Oct 12 12:46:50 2005
From: David.Bear at asu.edu (David Bear)
Date: Wed Oct 12 12:54:12 2005
Subject: [mod_python] python server pages
Message-ID: <20051012164650.GB25743@asu.edu>

I am wondering 2 things. How many are using modpython for python
server pages. Putting code in line with html seems to strong a
paradigm for people to break out of.

second. I am wondering who is using modpython as a fast way to run
python they would normally use as a cgi handler.

The more time I spend looking at the faq and docs at the web site the
more confused I become. So I am hoping for some simple examples.

I know modpython is used as a templating system by many, but I'm not
sure I want to use it in that manner... I'm still thinking cgi or
inline code like asp or php.

-- 
David Bear
phone: 	480-965-8257
fax: 	480-965-9189
College of Public Programs/ASU
Wilson Hall 232
Tempe, AZ 85287-0803
 "Beware the IP portfolio, everyone will be suspect of trespassing"
From nick at dd.revealed.net  Wed Oct 12 13:00:20 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Oct 12 13:00:58 2005
Subject: [mod_python] python server pages
In-Reply-To: <20051012164650.GB25743@asu.edu>
References: <20051012164650.GB25743@asu.edu>
Message-ID: <434D4124.9010202@dd.revealed.net>

David Bear wrote:
> I know modpython is used as a templating system by many, but I'm not
> sure I want to use it in that manner... I'm still thinking cgi or
> inline code like asp or php.

I would invite you to try PSE, which gives you the best of both worlds. 
We're really close to a 3.0 version, so I would suggest getting the latest 
from the subversion repository at http://svn.gerf.org/svn/pse/trunk (or 
alternatively a slightly dated beta zip/tarball from 
http://nick.borko.org/pse/getting.html).

Nick
From list at joreybump.com  Wed Oct 12 13:05:50 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Oct 12 13:05:57 2005
Subject: [mod_python] mod_python.publisher error
In-Reply-To: <fbb58ee4d44e0973e256a580ed507264@12.47.123.121>
References: <fbb58ee4d44e0973e256a580ed507264@12.47.123.121>
Message-ID: <434D426E.5000302@joreybump.com>

Danylo Berko wrote:
> I'm getting a mod_python.publisher error when trying to run a form handler. 
> It's actually the feedback.py from the O'Reilly Learning Python book.

That's a CGI script, and won't work as-is with Publisher.
From petersanchez at gmail.com  Wed Oct 12 13:25:35 2005
From: petersanchez at gmail.com (Peter Sanchez)
Date: Wed Oct 12 13:28:05 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <20051012080744.O79010@grisha.dyndns.org>
References: <1129071002.18770@dscpl.user.openhosting.com>
	<20051012080744.O79010@grisha.dyndns.org>
Message-ID: <bb84149f0510121025q44d220a1o52d3c77ff13b1ec4@mail.gmail.com>

Sounds good and thanks! I look forward to the results!

Peter

On 10/12/05, Gregory (Grisha) Trubetskoy <grisha@modpython.org> wrote:
>
>
> You may be onto something here... I'll see about testing this out on my
> FreeBSD system.
>
> Grisha
>
> On Tue, 11 Oct 2005, Graham Dumpleton wrote:
>
> > Making an educated guess (???), in src/mod_python.c, can you modify the
> > release_interpreter() function and change:
> >
> > static void release_interpreter(void)
> > {
> > PyThreadState *tstate = PyThreadState_Get();
> > #ifdef WITH_THREAD
> > PyEval_ReleaseThread(tstate);
> > #endif
> > PyThreadState_Delete(tstate);
> > }
> >
> > to:
> >
> > static void release_interpreter(void)
> > {
> > PyThreadState *tstate = PyThreadState_Get();
> > #ifdef WITH_THREAD
> > PyEval_ReleaseThread(tstate);
> > #else
> > PyThreadState_Swap(NULL);
> > #endif
> > PyThreadState_Delete(tstate);
> > }
> >
> > The original doesn't seem quite right to me because it wouldn't revert
> > the thread state before deleting it when threads aren't used. There is a
> > similar bit of code in get_interpreter() where it has:
> >
> > if (!idata->obcallback)
> > {
> > #ifdef WITH_THREAD
> > PyEval_ReleaseThread(tstate);
> > #endif PyThreadState_Delete(tstate);
> >
> > which perhaps should be:
> >
> > if (!idata->obcallback)
> > {
> > #ifdef WITH_THREAD
> > PyEval_ReleaseThread(tstate);
> > #else
> > PyThreadState_Swap(NULL);
> > #endif
> > PyThreadState_Delete(tstate);
> >
> > In this case it only gets invoked when mod_python callback can't be
> > created.
> >
> > If this is indeed the problem, in mod_python 3.1.3, the callback may be
> > created okay so it only dies in release_interpreter(). In mod_python 3.2
> > though, maybe the callback creation itself is failing meaning it would
> > die everytime a child process is created.
> >
> > If someone has the time and a non BSD platform could you independently
> > build a version of Python without thread support and then build
> > mod_python 3.2 and see if you get similar crashes. Ie., I feel this
> > could be wrong for no threads and not be BSD specific. From what I have
> > seen, FreeBSD is the only platform that still doesn't build in threads
> > to Python by default and thus why it isn't seen more. I can't do it
> > personally as have MacOS X and one has to be careful with multiple
> > Python installations there in case one trashes system one accidentally.
> > Would rather not risk it. :-)
> >
> > Graham
> >
> > Peter Sanchez wrote ..
> >> Thanks for the reference. I tried adding the following line, no real
> help.
> >> So I rebuilt apache2 and mod_python and made sure it didn't have
> threads
> >> support. Now, I still get the same error message, but the entire page
> is
> >> loading correctly?
> >>
> >> Same log entries though:
> >>
> >> Fatal Python error: PyThreadState_Delete: tstate is still current
> >> [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit signal Abort
> trap
> >> (6)
> >>
> >> I am wondering if at this point, its not related to Cheetah Template
> engine,
> >> which I use for my templates (will be converting to psp template system
> >> very
> >> soon) I am not sure if that attempts any threaded functions, etc. Also,
> >> I
> >> dont know that if it was trying something like that, if it would effect
> >> mod_python in this way.
> >>
> >> Is there any traces I can run, etc. to help debug this issue?
> >>
> >> Thanks,
> >>
> >> Peter
> >>
> >> On 10/11/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
> >>>
> >>> Peter Sanchez wrote:
> >>>> OK, I tried 3.2.2b from source. Now, when I start apache, the logs
> >> just
> >>>> go into a loop with the same errors as before :)
> >>>>
> >>>> [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/4.4.0
> >>>> mod_python/3.2.0b Python/2.4.1 configured -- resuming normal
> operations
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit signal Abort
> >>>> trap (6)
> >>>> [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
> >>> init.\n
> >>>> TypeError: init() takes exactly 2 arguments (0 given)
> >>>> Fatal Python error: PyThreadState_Delete: tstate is still current
> >>>> [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not call
> >>> init.\n
> >>>> TypeError: init() takes exactly 2 arguments (0 given)
> >>>> Fatal Python error: PyThreadState_Delete: tstate is still current
> >>>>
> >>>> Note, these were being given while NOT loading my mod_python code,
> >> I
> >>>> think it was doing this for every 'normal' apache instance. I quickly
> >>>> reverted back to the last setup (mod_pyton/3.1.4)
> >>>>
> >>>> Any other ideas guys?
> >>>>
> >>>> Thanks,
> >>>>
> >>>> Peter
> >>>>
> >>>
> >>> This sounds like the problem I was having trying to get the 3.2.2bunit
> >>> tests to pass on FreeBSD. This was discussed on the python-dev list
> >>> around Sept 10.
> >>>
> >>> You can read the archive on gmane at
> >>> http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
> >>>
> >>> Grisha suggested you can see this sort of problem on FreeBSD where
> >>> Python is threaded and Apache is not and offered the following:
> >>>
> >>> If you built apache without thread support, you may need to add the
> >>> following lines to $PREFIX/sbin/envvars:
> >>>
> >>> LD_PRELOAD=/usr/lib/libc_r.so
> >>> export LD_PRELOAD
> >>>
> >>> Regards,
> >>> Jim
> >>>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051012/d809f804/attachment.html
From erdibalint at freemail.hu  Wed Oct 12 15:09:57 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Wed Oct 12 15:10:00 2005
Subject: [mod_python] simpleTAL - 500 Internal Server Error
In-Reply-To: <1129102363.22067@dscpl.user.openhosting.com>
References: <1129102363.22067@dscpl.user.openhosting.com>
Message-ID: <434D5F85.7040901@freemail.hu>

Hi Graham,

Thank you very much, your very first idea works perfectly for me! (I 
haven't tried to get a string from the template yet)

Balint

Graham Dumpleton wrote:
> If sys.stdout is where TAL is writing the output to, try instead:
> 
>   req.content_type = 'text/html'
>   req.send_http_header()
>   template.expand (context, req)
>   return " "
> 
> This will only work though if TAL only uses write() on sys.stdout.
> 
> It would be better if you could get a string out of expand()
> and write it to req explicitly or return it from handler.
> 
From nferrier at tapsellferrier.co.uk  Wed Oct 12 15:31:35 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Wed Oct 12 15:42:09 2005
Subject: [mod_python] python server pages
In-Reply-To: <20051012164650.GB25743@asu.edu> (David Bear's message of "Wed,
	12 Oct 2005 09:46:50 -0700")
References: <20051012164650.GB25743@asu.edu>
Message-ID: <87hdbmsfag.fsf@kanga.tapsellferrier.co.uk>

David Bear <David.Bear@asu.edu> writes:

> I am wondering 2 things. How many are using modpython for python
> server pages. Putting code in line with html seems to strong a
> paradigm for people to break out of.
>
> second. I am wondering who is using modpython as a fast way to run
> python they would normally use as a cgi handler.
>
> The more time I spend looking at the faq and docs at the web site the
> more confused I become. So I am hoping for some simple examples.
>
> I know modpython is used as a templating system by many, but I'm not
> sure I want to use it in that manner... I'm still thinking cgi or
> inline code like asp or php.

I use mod_python more like Java Servlets are used.

Small apache specific wrappers to more general python code.


You could call that CGI - but CGI is not to be sniffed at from a model
point of view. It's limitations are to do with scalability, not
programming ease.



Nic Ferrier
From grahamd at dscpl.com.au  Wed Oct 12 18:04:34 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 12 18:05:06 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <bb84149f0510111633m3e4090c5n2e8b520df4e1b7fb@mail.gmail.com>
References: <1129071002.18770@dscpl.user.openhosting.com>
	<bb84149f0510111633m3e4090c5n2e8b520df4e1b7fb@mail.gmail.com>
Message-ID: <FE7EE16C-F13D-4C10-93E4-2E20C9A71E5B@dscpl.com.au>

Okay, I am blind. Unfortunate that the thread state problem didn't
go away, but only just noticed in the error messages the init()
call argument mismatch.

The problem you are having is that the Apache module is for
mod_python 3.2, but it is still finding the Python modules, ie.,
the mod_python.apache module, from your old mod_python 2.7
installation.

In 2.7, init() took no arguments. In 3.2 it takes two arguments.

Sorry, didn't notice that before. Thus, get rid of the mod_python 2.7
Python modules and ensure 3.2 versions are installed correctly.

Still think something isn't right with the thread state deletion
code. Are you absolutely sure that your newly compiled Apache
module is being used?

Graham

On 12/10/2005, at 9:33 AM, Peter Sanchez wrote:
> Well, I did the patches you suggested, and it didn't help much.  
> Here is the log snippet:
>
> [Tue Oct 11 16:17:07 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/ 
> 4.4.0 mod_python/3.2.0b Python/2.4.1 configured -- resuming normal  
> operati
> ons
> [Tue Oct 11 16:17:07 2005] [notice] child pid 71664 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 71663 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 71660 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 71654 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 71640 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 71634 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 71624 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 69509 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 69490 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 69470 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [notice] child pid 69437 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:07 2005] [error] make_obcallback: could not call  
> init.\n
> TypeError: init() takes exactly 2 arguments (0 given)
> Fatal Python error: PyThreadState_Delete: tstate is still current
> [Tue Oct 11 16:17:08 2005] [notice] child pid 71632 exit signal  
> Abort trap (6)
> [Tue Oct 11 16:17:09 2005] [error] make_obcallback: could not call  
> init.\n
> TypeError: init() takes exactly 2 arguments (0 given)
>
>
> Over and over again ;) I went back to 3.1.4, since I am testing on  
> a live server (no other choice unfortunately.)
>
> I also tried writing a basic function that does nothing but display  
> a session id, no other modules included and it gave the same  
> results. You guys probably knew that was the case, but just an FYI.
>
> Thanks again,
>
> Peter
>
> On 10/11/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Making  
> an educated guess (???), in src/mod_python.c, can you modify the
> release_interpreter() function and change:
>
> static void release_interpreter(void)
> {
>     PyThreadState *tstate = PyThreadState_Get();
> #ifdef WITH_THREAD
>     PyEval_ReleaseThread(tstate);
> #endif
>     PyThreadState_Delete(tstate);
> }
>
> to:
>
> static void release_interpreter(void)
> {
>     PyThreadState *tstate = PyThreadState_Get();
> #ifdef WITH_THREAD
>     PyEval_ReleaseThread(tstate);
> #else
>     PyThreadState_Swap(NULL);
> #endif
>     PyThreadState_Delete(tstate);
> }
>
> The original doesn't seem quite right to me because it wouldn't revert
> the thread state before deleting it when threads aren't used. There  
> is a
> similar bit of code in get_interpreter() where it has:
>
>         if (!idata->obcallback)
>         {
> #ifdef WITH_THREAD
>             PyEval_ReleaseThread(tstate);
> #endif                           PyThreadState_Delete(tstate);
>
> which perhaps should be:
>
>         if (!idata->obcallback)
>         {
> #ifdef WITH_THREAD
>                     PyEval_ReleaseThread(tstate);
> #else
>                     PyThreadState_Swap(NULL);
> #endif
>                     PyThreadState_Delete(tstate);
>
> In this case it only gets invoked when mod_python callback can't be
> created.
>
> If this is indeed the problem, in mod_python 3.1.3, the callback  
> may be
> created okay so it only dies in release_interpreter(). In  
> mod_python 3.2
> though, maybe the callback creation itself is failing meaning it would
> die everytime a child process is created.
>
> If someone has the time and a non BSD platform could you independently
> build a version of Python without thread support and then build
> mod_python 3.2 and see if you get similar crashes. Ie., I feel this
> could be wrong for no threads and not be BSD specific. From what I  
> have
> seen, FreeBSD is the only platform that still doesn't build in threads
> to Python by default and thus why it isn't seen more. I can't do it
> personally as have MacOS X and one has to be careful with multiple
> Python installations there in case one trashes system one  
> accidentally.
> Would rather not risk it. :-)
>
> Graham
>
> Peter Sanchez wrote ..
> > Thanks for the reference. I tried adding the following line, no  
> real help.
> > So I rebuilt apache2 and mod_python and made sure it didn't have  
> threads
> > support. Now, I still get the same error message, but the entire  
> page is
> > loading correctly?
> >
> > Same log entries though:
> >
> > Fatal Python error: PyThreadState_Delete: tstate is still current
> > [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit signal  
> Abort trap
> > (6)
> >
> > I am wondering if at this point, its not related to Cheetah  
> Template engine,
> > which I use for my templates (will be converting to psp template  
> system
> > very
> > soon) I am not sure if that attempts any threaded functions, etc.  
> Also,
> > I
> > dont know that if it was trying something like that, if it would  
> effect
> > mod_python in this way.
> >
> > Is there any traces I can run, etc. to help debug this issue?
> >
> > Thanks,
> >
> > Peter
> >
> > On 10/11/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
> > >
> > > Peter Sanchez wrote:
> > > > OK, I tried 3.2.2b from source. Now, when I start apache, the  
> logs
> > just
> > > > go into a loop with the same errors as before :)
> > > >
> > > > [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD)  
> PHP/4.4.0
> > > > mod_python/3.2.0b Python/2.4.1 configured -- resuming normal  
> operations
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit  
> signal Abort
> > > > trap (6)
> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not  
> call
> > > init.\n
> > > > TypeError: init() takes exactly 2 arguments (0 given)
> > > > Fatal Python error: PyThreadState_Delete: tstate is still  
> current
> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could not  
> call
> > > init.\n
> > > > TypeError: init() takes exactly 2 arguments (0 given)
> > > > Fatal Python error: PyThreadState_Delete: tstate is still  
> current
> > > >
> > > > Note, these were being given while NOT loading my mod_python  
> code,
> > I
> > > > think it was doing this for every 'normal' apache instance. I  
> quickly
> > > > reverted back to the last setup (mod_pyton/3.1.4)
> > > >
> > > > Any other ideas guys?
> > > >
> > > > Thanks,
> > > >
> > > > Peter
> > > >
> > >
> > > This sounds like the problem I was having trying to get the  
> 3.2.2b unit
> > > tests to pass on FreeBSD. This was discussed on the python-dev  
> list
> > > around Sept 10.
> > >
> > > You can read the archive on gmane at
> > > http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
> > >
> > > Grisha suggested you can see this sort of problem on FreeBSD where
> > > Python is threaded and Apache is not and offered the following:
> > >
> > > If you built apache without thread support, you may need to add  
> the
> > > following lines to $PREFIX/sbin/envvars:
> > >
> > > LD_PRELOAD=/usr/lib/libc_r.so
> > > export LD_PRELOAD
> > >
> > > Regards,
> > > Jim
> > >
>




From grahamd at dscpl.com.au  Wed Oct 12 18:13:58 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 12 18:14:25 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <FE7EE16C-F13D-4C10-93E4-2E20C9A71E5B@dscpl.com.au>
References: <1129071002.18770@dscpl.user.openhosting.com>
	<bb84149f0510111633m3e4090c5n2e8b520df4e1b7fb@mail.gmail.com>
	<FE7EE16C-F13D-4C10-93E4-2E20C9A71E5B@dscpl.com.au>
Message-ID: <BE5DAA81-6925-4EB5-ADFC-47F17C677128@dscpl.com.au>

Now I am even more blind. I got that the wrong way around. You
have the 3.2 mod_python.apache module, but the Apache module
is still that for 2.7. Ie., only mod_python Apache module for 2.7
would be attempting to call init() with 0 arguments where 2 is
expected.

This would explain why thread state problem is still there as Apache
module hasn't changed.

Blame Apple for this, trying to read up on the new video iPod and
it is distracting my thoughts. :-)

Graham

On 13/10/2005, at 8:04 AM, Graham Dumpleton wrote:

> Okay, I am blind. Unfortunate that the thread state problem didn't
> go away, but only just noticed in the error messages the init()
> call argument mismatch.
>
> The problem you are having is that the Apache module is for
> mod_python 3.2, but it is still finding the Python modules, ie.,
> the mod_python.apache module, from your old mod_python 2.7
> installation.
>
> In 2.7, init() took no arguments. In 3.2 it takes two arguments.
>
> Sorry, didn't notice that before. Thus, get rid of the mod_python 2.7
> Python modules and ensure 3.2 versions are installed correctly.
>
> Still think something isn't right with the thread state deletion
> code. Are you absolutely sure that your newly compiled Apache
> module is being used?
>
> Graham
>
> On 12/10/2005, at 9:33 AM, Peter Sanchez wrote:
>
>> Well, I did the patches you suggested, and it didn't help much.  
>> Here is the log snippet:
>>
>> [Tue Oct 11 16:17:07 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/ 
>> 4.4.0 mod_python/3.2.0b Python/2.4.1 configured -- resuming normal  
>> operati
>> ons
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 71664 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 71663 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 71660 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 71654 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 71640 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 71634 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 71624 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 69509 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 69490 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 69470 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [notice] child pid 69437 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:07 2005] [error] make_obcallback: could not call  
>> init.\n
>> TypeError: init() takes exactly 2 arguments (0 given)
>> Fatal Python error: PyThreadState_Delete: tstate is still current
>> [Tue Oct 11 16:17:08 2005] [notice] child pid 71632 exit signal  
>> Abort trap (6)
>> [Tue Oct 11 16:17:09 2005] [error] make_obcallback: could not call  
>> init.\n
>> TypeError: init() takes exactly 2 arguments (0 given)
>>
>>
>> Over and over again ;) I went back to 3.1.4, since I am testing on  
>> a live server (no other choice unfortunately.)
>>
>> I also tried writing a basic function that does nothing but  
>> display a session id, no other modules included and it gave the  
>> same results. You guys probably knew that was the case, but just  
>> an FYI.
>>
>> Thanks again,
>>
>> Peter
>>
>> On 10/11/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Making  
>> an educated guess (???), in src/mod_python.c, can you modify the
>> release_interpreter() function and change:
>>
>> static void release_interpreter(void)
>> {
>>     PyThreadState *tstate = PyThreadState_Get();
>> #ifdef WITH_THREAD
>>     PyEval_ReleaseThread(tstate);
>> #endif
>>     PyThreadState_Delete(tstate);
>> }
>>
>> to:
>>
>> static void release_interpreter(void)
>> {
>>     PyThreadState *tstate = PyThreadState_Get();
>> #ifdef WITH_THREAD
>>     PyEval_ReleaseThread(tstate);
>> #else
>>     PyThreadState_Swap(NULL);
>> #endif
>>     PyThreadState_Delete(tstate);
>> }
>>
>> The original doesn't seem quite right to me because it wouldn't  
>> revert
>> the thread state before deleting it when threads aren't used.  
>> There is a
>> similar bit of code in get_interpreter() where it has:
>>
>>         if (!idata->obcallback)
>>         {
>> #ifdef WITH_THREAD
>>             PyEval_ReleaseThread(tstate);
>> #endif                           PyThreadState_Delete(tstate);
>>
>> which perhaps should be:
>>
>>         if (!idata->obcallback)
>>         {
>> #ifdef WITH_THREAD
>>                     PyEval_ReleaseThread(tstate);
>> #else
>>                     PyThreadState_Swap(NULL);
>> #endif
>>                     PyThreadState_Delete(tstate);
>>
>> In this case it only gets invoked when mod_python callback can't be
>> created.
>>
>> If this is indeed the problem, in mod_python 3.1.3, the callback  
>> may be
>> created okay so it only dies in release_interpreter(). In  
>> mod_python 3.2
>> though, maybe the callback creation itself is failing meaning it  
>> would
>> die everytime a child process is created.
>>
>> If someone has the time and a non BSD platform could you  
>> independently
>> build a version of Python without thread support and then build
>> mod_python 3.2 and see if you get similar crashes. Ie., I feel this
>> could be wrong for no threads and not be BSD specific. From what I  
>> have
>> seen, FreeBSD is the only platform that still doesn't build in  
>> threads
>> to Python by default and thus why it isn't seen more. I can't do it
>> personally as have MacOS X and one has to be careful with multiple
>> Python installations there in case one trashes system one  
>> accidentally.
>> Would rather not risk it. :-)
>>
>> Graham
>>
>> Peter Sanchez wrote ..
>> > Thanks for the reference. I tried adding the following line, no  
>> real help.
>> > So I rebuilt apache2 and mod_python and made sure it didn't have  
>> threads
>> > support. Now, I still get the same error message, but the entire  
>> page is
>> > loading correctly?
>> >
>> > Same log entries though:
>> >
>> > Fatal Python error: PyThreadState_Delete: tstate is still current
>> > [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit signal  
>> Abort trap
>> > (6)
>> >
>> > I am wondering if at this point, its not related to Cheetah  
>> Template engine,
>> > which I use for my templates (will be converting to psp template  
>> system
>> > very
>> > soon) I am not sure if that attempts any threaded functions,  
>> etc. Also,
>> > I
>> > dont know that if it was trying something like that, if it would  
>> effect
>> > mod_python in this way.
>> >
>> > Is there any traces I can run, etc. to help debug this issue?
>> >
>> > Thanks,
>> >
>> > Peter
>> >
>> > On 10/11/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
>> > >
>> > > Peter Sanchez wrote:
>> > > > OK, I tried 3.2.2b from source. Now, when I start apache,  
>> the logs
>> > just
>> > > > go into a loop with the same errors as before :)
>> > > >
>> > > > [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD)  
>> PHP/4.4.0
>> > > > mod_python/3.2.0b Python/2.4.1 configured -- resuming normal  
>> operations
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit  
>> signal Abort
>> > > > trap (6)
>> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could  
>> not call
>> > > init.\n
>> > > > TypeError: init() takes exactly 2 arguments (0 given)
>> > > > Fatal Python error: PyThreadState_Delete: tstate is still  
>> current
>> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could  
>> not call
>> > > init.\n
>> > > > TypeError: init() takes exactly 2 arguments (0 given)
>> > > > Fatal Python error: PyThreadState_Delete: tstate is still  
>> current
>> > > >
>> > > > Note, these were being given while NOT loading my mod_python  
>> code,
>> > I
>> > > > think it was doing this for every 'normal' apache instance.  
>> I quickly
>> > > > reverted back to the last setup (mod_pyton/3.1.4)
>> > > >
>> > > > Any other ideas guys?
>> > > >
>> > > > Thanks,
>> > > >
>> > > > Peter
>> > > >
>> > >
>> > > This sounds like the problem I was having trying to get the  
>> 3.2.2b unit
>> > > tests to pass on FreeBSD. This was discussed on the python-dev  
>> list
>> > > around Sept 10.
>> > >
>> > > You can read the archive on gmane at
>> > > http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
>> > >
>> > > Grisha suggested you can see this sort of problem on FreeBSD  
>> where
>> > > Python is threaded and Apache is not and offered the following:
>> > >
>> > > If you built apache without thread support, you may need to  
>> add the
>> > > following lines to $PREFIX/sbin/envvars:
>> > >
>> > > LD_PRELOAD=/usr/lib/libc_r.so
>> > > export LD_PRELOAD
>> > >
>> > > Regards,
>> > > Jim
>> > >
>>
>>
>
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Wed Oct 12 21:30:10 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 12 21:30:16 2005
Subject: [mod_python] Re: import and mod_python
Message-ID: <1129167010.31618@dscpl.user.openhosting.com>

Wim Heirman wrote ..
> Hello,
> 
> When doing a first toy project in mod_python, I stumbled upon the --
> apparently well-known problem -- of mod_python not reloading custom
> modules imported with 'import'. I think I've found a pretty descent
> solution for it, described below. In search for existing documentation
> on this I mainly found
> http://www.modpython.org/pipermail/mod_python/2004-October/016567.html
> and http://www.dscpl.com.au/articles/modpython-002.html (that's why I'm
> sending this to you), I'm not sure if this method or something similar
> might already be described elsewhere -- if not I suppose other people
> will be interested and I'll write out a descent description and put it
> on my website.
> So this is how it goes:
> 
> Add this to the .htaccess of the directory where the modules are used:
> 
> PythonHeaderParserHandler purge
> 
> Create a purge.py file (in the same directory or somewhere in sys.path)
> with these contents:
> 
> import sys
> from mod_python import apache
> 
> def headerparserhandler(req):
>   prefix = '/user/wheirman'
>   for name, mod in sys.modules.items():
>     print name, mod
>     if getattr(mod, '__file__', '')[:len(prefix)] == prefix:
>       del sys.modules[name]
>   return apache.OK
> 
> purge.py will unload all modules that are located in a certain directory
> (here: everything under my home directory, so not the ones from
> /usr/lib/python or the ones other people may be using on a shared
> production server). The PythonHeaderParserHandler makes that this purge
> is done just before the normal PythonHandler, so when importing a user
> module (using the normal 'import' statement) in the main script, it is
> reloaded from disk. This is done every time the user script is executed
> (so no need to manually browse to 'purge/doit') and for the right forked
> Apache process. In short: no need to modify any code, transparent to the
> developer, and reasonably cheap performance-wise.
> Any comments on this?
> 
> Regards,
> Wim.
> 
> -- 
> ir. Wim Heirman,
> ELIS Department, Ghent University, Belgium
> Phone: +32-9-264.95.27
> E-mail: wim.heirman@elis.UGent.be
> http://www.elis.UGent.be/~wheirman/

Note, response cc'd to mod_python mailing list. Preferable that you get
on the mod_python mailing list and post discussions on such topics
there.

Anyway, deleting modules out of sys.modules like this is dangerous and
can cause various problems if a multithreaded MPM such as "winnt" on
Win32 systems or "worker" on UNIX is used. This is because you could be
deleting the module at the same time as something was first importing
it, or while a later request is executing code held within the module.

The first of these issues could be avoided by acquiring the importer
module lock while deleting modules, but second can't be avoided.
Other strange problems could also result.

The original suggestion I made about deleting stuff out of sys.modules
was intended only to be used in extreme cases where you had no choice
because Apache couldn't be restarted for some reason.

There are better solutions to this problem and Vampire indicates one
direction that can be taken, including having "import" layer on top of a
special purpose module importer so that "import" modules in
selected directories are reloaded when changed. See changes added
in mod_python 1.7 for details:

  http://www.dscpl.com.au/projects/vampire/changes.html

The whole module importer problem will hopefully be addressed in
mod_python 3.3 now that there is some idea of what can be done.

Graham

From grahamd at dscpl.com.au  Wed Oct 12 22:12:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 12 22:12:34 2005
Subject: [mod_python] mod_python mptest.py works publisher not
Message-ID: <1129169545.6555@dscpl.user.openhosting.com>

What is the actual URL you are using? What is the full pathname you are
using in the Directory directive and what is the full pathname of the
Python code file you are expecting to be loaded and executed? What
is the full code you have in that Python code file?

Do you get the same result if you include:

  Options -MultiViews

inside the Directory directive?

Did you try not using backslashes but use forward slashes for the
Directory directive as recommended by Jim on comp.lang.python.

BTW, if you do get it working, please tell us on the mailing list what
you had to do to get it working. That is a beta version and we need
the feedback on issues like this in case there is something that needs
to be fixed.

Graham

python_it@hotmail.com wrote ..
> I'm going to work with mod_python.
> 
> 
> I install mod_python 3.2.2b for python 2.4.
> 
> 
> If i test my install with
> mptest.py
> see this link:
> http://www.modpython.org/live/mod_python-3.2.2b/doc-html/modpython.html
> IT WORKS!
> 
> 
> But if i try this:
> 
> 
> <Directory "C:\.......">
> AddHandler mod_python .py
> PythonHandler mod_python.publisher
> PythonDebug On
> </Directory>
> 
> 
> http://www.modpython.org/live/mod_python-3.2.2b/doc-html/tut-pub.html
> 
> 
> It don't work!
> 
> 
> I Get the following message:
> 
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> 
> Traceback (most recent call last):
> 
> 
>   File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\apache.py", line 299, in
> HandlerDispatch
>     result = object(req)
> 
> 
>   File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\publisher.py", line 204, in
> handler
>     module = page_cache[req]
> 
> 
>   File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\cache.py", line 77, in
> __getitem__
>     return self._checkitem(name)[2]
> 
> 
>   File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\cache.py", line 119, in
> _checkitem
>     value = self.build(key, name, opened, entry)
> 
> 
>   File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\publisher.py", line 77, in
> build
>     return ModuleCache.build(self, key, req, opened, entry)
> 
> 
>   File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\cache.py", line 367, in
> build
>     module = new.module(re_not_word.sub('_',key))
> 
> 
> AttributeError: 'module' object has no attribute 'module'
> 
> 
> HELP?
> 
> _________________________________________________________________
> Krijg direct antwoord op je vragen: MSN Messenger 
> http://www1.imagine-msn.com/Messenger/Default2.aspx
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From earle.ady at gmail.com  Wed Oct 12 23:24:25 2005
From: earle.ady at gmail.com (Earle Ady)
Date: Wed Oct 12 23:24:36 2005
Subject: [mod_python] python server pages
Message-ID: <8F96A467-8BAE-42B8-9754-A233EB460D3B@gmail.com>


Nic,

For a good example of something that has been built with a responsible
combination of handlers, as well as inline Python server pages, give a
look out to:

http://www.bountynetwork.com/search.psp

Best,

earle.
From grahamd at dscpl.com.au  Thu Oct 13 00:08:49 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 13 00:08:54 2005
Subject: [mod_python] mod_python.psp and PythonDebug
Message-ID: <1129176529.17943@dscpl.user.openhosting.com>

With the mention of a site using PSP on the list, this might be a good
time to highlight an issue related to mod_python.psp that anyone using
it should be aware of. Quoting the documentation:

  If PythonDebug server configuration is On, then by appending an
  underscore ("_") to the end of the url you can get a nice side-by-side
  listing of original PSP code and resulting Python code generated by the
  psp module. This is very useful for debugging.

  Note: Leaving debug on in a production environment will allow remote
  users to display source code of your PSP pages!

It is therefore generally not a good idea to use PythonDebug if you are
using mod_python.psp on a publically accessible site. If you really do
need PythonDebug to be enabled, I would at least recommend that the
following also be placed into your Apache configuration.

  <Files *.psp_>
  deny from all
  </Files>

At least then if you have PythonDebug on so you can see stack traces,
you don't also expose your source code. If you wanted to, you could
still allow source code access if from selected hosts. You could also
ensure that PythonDebug is only on if requests come from selected
hosts.

Even with such a block, it is not a good idea to put database login
names and passwords in any file in your document root. If it needs to be
in a Python code file, put that module elsewhere and extend the Python
path to add that location and use "import" to get it. At least then if
the Apache configuration is mucked up in some other way,  such
sensitive information is not accessible if someone manages to fetch
back your raw files.

Graham
From grahamd at dscpl.com.au  Thu Oct 13 00:12:26 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 13 00:12:34 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
Message-ID: <1129176746.21815@dscpl.user.openhosting.com>

The mod_python.so in your Apache modules directory, or wherever it
is picking it up from, appears to still be that for mod_python 2.7.X.

Thus, find LoadModule instruction for mod_python in Apache config
and work out where it is loading it from. Ensure that that module is
that for mod_python 3.2.

Graham

Peter Sanchez wrote ..
> Maybe I am not understanding what you are saying...
> 
> So I just deinstalled mod_python completely, verified that the
> directory /usr/local/lib/python2.4/site-packages/mod_python directory
> was gone. I reinstalled and the directory was there with all the other
> files included (apache.py, etc.)
> 
> The same problem exists. Is it an Apache compilation issue?
> 
> Sorry if I am being slow on this issue...
> 
> Thanks,
> 
> Peter
> 
> On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > Now I am even more blind. I got that the wrong way around. You
> > have the 3.2 mod_python.apache module, but the Apache module
> > is still that for 2.7. Ie., only mod_python Apache module for 2.7
> > would be attempting to call init() with 0 arguments where 2 is
> > expected.
> >
> > This would explain why thread state problem is still there as Apache
> > module hasn't changed.
> >
> > Blame Apple for this, trying to read up on the new video iPod and
> > it is distracting my thoughts. :-)
> >
> > Graham
> >
> > On 13/10/2005, at 8:04 AM, Graham Dumpleton wrote:
> >
> > > Okay, I am blind. Unfortunate that the thread state problem didn't
> > > go away, but only just noticed in the error messages the init()
> > > call argument mismatch.
> > >
> > > The problem you are having is that the Apache module is for
> > > mod_python 3.2, but it is still finding the Python modules, ie.,
> > > the mod_python.apache module, from your old mod_python 2.7
> > > installation.
> > >
> > > In 2.7, init() took no arguments. In 3.2 it takes two arguments.
> > >
> > > Sorry, didn't notice that before. Thus, get rid of the mod_python 2.7
> > > Python modules and ensure 3.2 versions are installed correctly.
> > >
> > > Still think something isn't right with the thread state deletion
> > > code. Are you absolutely sure that your newly compiled Apache
> > > module is being used?
> > >
> > > Graham
> > >
> > > On 12/10/2005, at 9:33 AM, Peter Sanchez wrote:
> > >
> > >> Well, I did the patches you suggested, and it didn't help much.
> > >> Here is the log snippet:
> > >>
> > >> [Tue Oct 11 16:17:07 2005] [notice] Apache/2.0.54 (FreeBSD) PHP/
> > >> 4.4.0 mod_python/3.2.0b Python/2.4.1 configured -- resuming normal
> > >> operati
> > >> ons
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71664 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71663 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71660 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71654 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71640 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71634 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71624 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69509 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69490 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69470 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69437 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:07 2005] [error] make_obcallback: could not call
> > >> init.\n
> > >> TypeError: init() takes exactly 2 arguments (0 given)
> > >> Fatal Python error: PyThreadState_Delete: tstate is still current
> > >> [Tue Oct 11 16:17:08 2005] [notice] child pid 71632 exit signal
> > >> Abort trap (6)
> > >> [Tue Oct 11 16:17:09 2005] [error] make_obcallback: could not call
> > >> init.\n
> > >> TypeError: init() takes exactly 2 arguments (0 given)
> > >>
> > >>
> > >> Over and over again ;) I went back to 3.1.4, since I am testing on
> > >> a live server (no other choice unfortunately.)
> > >>
> > >> I also tried writing a basic function that does nothing but
> > >> display a session id, no other modules included and it gave the
> > >> same results. You guys probably knew that was the case, but just
> > >> an FYI.
> > >>
> > >> Thanks again,
> > >>
> > >> Peter
> > >>
> > >> On 10/11/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote: Making
> > >> an educated guess (???), in src/mod_python.c, can you modify the
> > >> release_interpreter() function and change:
> > >>
> > >> static void release_interpreter(void)
> > >> {
> > >>     PyThreadState *tstate = PyThreadState_Get();
> > >> #ifdef WITH_THREAD
> > >>     PyEval_ReleaseThread(tstate);
> > >> #endif
> > >>     PyThreadState_Delete(tstate);
> > >> }
> > >>
> > >> to:
> > >>
> > >> static void release_interpreter(void)
> > >> {
> > >>     PyThreadState *tstate = PyThreadState_Get();
> > >> #ifdef WITH_THREAD
> > >>     PyEval_ReleaseThread(tstate);
> > >> #else
> > >>     PyThreadState_Swap(NULL);
> > >> #endif
> > >>     PyThreadState_Delete(tstate);
> > >> }
> > >>
> > >> The original doesn't seem quite right to me because it wouldn't
> > >> revert
> > >> the thread state before deleting it when threads aren't used.
> > >> There is a
> > >> similar bit of code in get_interpreter() where it has:
> > >>
> > >>         if (!idata->obcallback)
> > >>         {
> > >> #ifdef WITH_THREAD
> > >>             PyEval_ReleaseThread(tstate);
> > >> #endif                           PyThreadState_Delete(tstate);
> > >>
> > >> which perhaps should be:
> > >>
> > >>         if (!idata->obcallback)
> > >>         {
> > >> #ifdef WITH_THREAD
> > >>                     PyEval_ReleaseThread(tstate);
> > >> #else
> > >>                     PyThreadState_Swap(NULL);
> > >> #endif
> > >>                     PyThreadState_Delete(tstate);
> > >>
> > >> In this case it only gets invoked when mod_python callback can't be
> > >> created.
> > >>
> > >> If this is indeed the problem, in mod_python 3.1.3, the callback
> > >> may be
> > >> created okay so it only dies in release_interpreter(). In
> > >> mod_python 3.2
> > >> though, maybe the callback creation itself is failing meaning it
> > >> would
> > >> die everytime a child process is created.
> > >>
> > >> If someone has the time and a non BSD platform could you
> > >> independently
> > >> build a version of Python without thread support and then build
> > >> mod_python 3.2 and see if you get similar crashes. Ie., I feel this
> > >> could be wrong for no threads and not be BSD specific. From what I
> > >> have
> > >> seen, FreeBSD is the only platform that still doesn't build in
> > >> threads
> > >> to Python by default and thus why it isn't seen more. I can't do it
> > >> personally as have MacOS X and one has to be careful with multiple
> > >> Python installations there in case one trashes system one
> > >> accidentally.
> > >> Would rather not risk it. :-)
> > >>
> > >> Graham
> > >>
> > >> Peter Sanchez wrote ..
> > >> > Thanks for the reference. I tried adding the following line, no
> > >> real help.
> > >> > So I rebuilt apache2 and mod_python and made sure it didn't have
> > >> threads
> > >> > support. Now, I still get the same error message, but the entire
> > >> page is
> > >> > loading correctly?
> > >> >
> > >> > Same log entries though:
> > >> >
> > >> > Fatal Python error: PyThreadState_Delete: tstate is still current
> > >> > [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit signal
> > >> Abort trap
> > >> > (6)
> > >> >
> > >> > I am wondering if at this point, its not related to Cheetah
> > >> Template engine,
> > >> > which I use for my templates (will be converting to psp template
> > >> system
> > >> > very
> > >> > soon) I am not sure if that attempts any threaded functions,
> > >> etc. Also,
> > >> > I
> > >> > dont know that if it was trying something like that, if it would
> > >> effect
> > >> > mod_python in this way.
> > >> >
> > >> > Is there any traces I can run, etc. to help debug this issue?
> > >> >
> > >> > Thanks,
> > >> >
> > >> > Peter
> > >> >
> > >> > On 10/11/05, Jim Gallacher <jg.lists@sympatico.ca> wrote:
> > >> > >
> > >> > > Peter Sanchez wrote:
> > >> > > > OK, I tried 3.2.2b from source. Now, when I start apache,
> > >> the logs
> > >> > just
> > >> > > > go into a loop with the same errors as before :)
> > >> > > >
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 (FreeBSD)
> > >> PHP/4.4.0
> > >> > > > mod_python/3.2.0b Python/2.4.1 configured -- resuming normal
> > >> operations
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 exit
> > >> signal Abort
> > >> > > > trap (6)
> > >> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could
> > >> not call
> > >> > > init.\n
> > >> > > > TypeError: init() takes exactly 2 arguments (0 given)
> > >> > > > Fatal Python error: PyThreadState_Delete: tstate is still
> > >> current
> > >> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: could
> > >> not call
> > >> > > init.\n
> > >> > > > TypeError: init() takes exactly 2 arguments (0 given)
> > >> > > > Fatal Python error: PyThreadState_Delete: tstate is still
> > >> current
> > >> > > >
> > >> > > > Note, these were being given while NOT loading my mod_python
> > >> code,
> > >> > I
> > >> > > > think it was doing this for every 'normal' apache instance.
> > >> I quickly
> > >> > > > reverted back to the last setup (mod_pyton/3.1.4)
> > >> > > >
> > >> > > > Any other ideas guys?
> > >> > > >
> > >> > > > Thanks,
> > >> > > >
> > >> > > > Peter
> > >> > > >
> > >> > >
> > >> > > This sounds like the problem I was having trying to get the
> > >> 3.2.2b unit
> > >> > > tests to pass on FreeBSD. This was discussed on the python-dev
> > >> list
> > >> > > around Sept 10.
> > >> > >
> > >> > > You can read the archive on gmane at
> > >> > > http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
> > >> > >
> > >> > > Grisha suggested you can see this sort of problem on FreeBSD
> > >> where
> > >> > > Python is threaded and Apache is not and offered the following:
> > >> > >
> > >> > > If you built apache without thread support, you may need to
> > >> add the
> > >> > > following lines to $PREFIX/sbin/envvars:
> > >> > >
> > >> > > LD_PRELOAD=/usr/lib/libc_r.so
> > >> > > export LD_PRELOAD
> > >> > >
> > >> > > Regards,
> > >> > > Jim
> > >> > >
> > >>
> > >>
> > >
> > >
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
> >
> >
From nicolas.lehuen at gmail.com  Thu Oct 13 02:03:01 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Oct 13 02:03:09 2005
Subject: [mod_python] mod_python mptest.py works publisher not
In-Reply-To: <BAY17-F145FA0D55E0AB6054FEE52997B0@phx.gbl>
References: <BAY17-F145FA0D55E0AB6054FEE52997B0@phx.gbl>
Message-ID: <c298f2d70510122303s71078f1en@mail.gmail.com>

Hi,

Can you try this in a Python interpreter ?

import new
m = new.module('foobar')

Regards,
Nicolas

2005/10/12, python_it@hotmail.com <python_it@hotmail.com>:
>
> I'm going to work with mod_python.
>
>
> I install mod_python 3.2.2b for python 2.4.
>
>
> If i test my install with
> mptest.py
> see this link:
> http://www.modpython.org/live/mod_python-3.2.2b/doc-html/modpython.html
> IT WORKS!
>
>
> But if i try this:
>
>
> <Directory "C:\.......">
> AddHandler mod_python .py
> PythonHandler mod_python.publisher
> PythonDebug On
> </Directory>
>
>
> http://www.modpython.org/live/mod_python-3.2.2b/doc-html/tut-pub.html
>
>
> It don't work!
>
>
> I Get the following message:
>
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
>
> Traceback (most recent call last):
>
>
> File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\apache.py", line 299, in
> HandlerDispatch
> result = object(req)
>
>
> File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\publisher.py", line 204, in
> handler
> module = page_cache[req]
>
>
> File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\cache.py", line 77, in
> __getitem__
> return self._checkitem(name)[2]
>
>
> File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\cache.py", line 119, in
> _checkitem
> value = self.build(key, name, opened, entry)
>
>
> File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\publisher.py", line 77, in
> build
> return ModuleCache.build(self, key, req, opened, entry)
>
>
> File "C:\Program
> Files\Python24\Lib\site-packages\mod_python\cache.py", line 367, in
> build
> module = new.module(re_not_word.sub('_',key))
>
>
> AttributeError: 'module' object has no attribute 'module'
>
>
> HELP?
>
> _________________________________________________________________
> Krijg direct antwoord op je vragen: MSN Messenger
> http://www1.imagine-msn.com/Messenger/Default2.aspx
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051013/74b32782/attachment-0001.html
From igp-dev at infogridpacific.com  Thu Oct 13 02:44:02 2005
From: igp-dev at infogridpacific.com (IGP Dev)
Date: Thu Oct 13 02:44:17 2005
Subject: [mod_python] Measuring the Memory of the Process
Message-ID: <434E0232.7080706@infogridpacific.com>

Hello Friends,

I need to know regarding tools (not top or ps) similar to GTop for 
mod_perl. I want to measure the Memory of the mod_python apache process, 
to evaluate performance of the apache server.

Can any one help me?

Regards,
Ajinkya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051013/9af82bb7/attachment.html
From python_it at hotmail.com  Thu Oct 13 05:41:34 2005
From: python_it at hotmail.com (python_it@hotmail.com)
Date: Thu Oct 13 05:41:43 2005
Subject: [mod_python] mod_python mptest.py works publisher not
Message-ID: <BAY17-F24EC002EC1EFB7710F6EB1997A0@phx.gbl>

I have delete and uninstall everything.

I paste:

LoadModule python_module modules/mod_python.so

<Directory "C:/......">
    AddHandler mod_python .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

<Directory "C:/......">
    AllowOverride FileInfo
</Directory>

Test it ==>
http://www.onlamp.com/pub/a/python/2004/02/26/python_server_pages.html

And now it works!

Only there is a new problem.....
Is seems that apache remember the old httpd.conf??
To restart or make a new start by apache is not working?
I have to restart my computer before my changes works?

_________________________________________________________________
MSN Webmessenger voor als je niet achter je eigen PC zit 
http://webmessenger.msn.com/

From dpopowich at comcast.net  Thu Oct 13 09:44:03 2005
From: dpopowich at comcast.net (dpopowich@comcast.net)
Date: Thu Oct 13 09:45:05 2005
Subject: [mod_python] python server pages
In-Reply-To: <20051012164650.GB25743@asu.edu>
References: <20051012164650.GB25743@asu.edu>
Message-ID: <17230.25763.750739.224117@localhost.localdomain>


David Bear writes:
> I am wondering 2 things. How many are using modpython for python
> server pages. Putting code in line with html seems to strong a
> paradigm for people to break out of.
> 
> second. I am wondering who is using modpython as a fast way to run
> python they would normally use as a cgi handler.
> 
> The more time I spend looking at the faq and docs at the web site the
> more confused I become. So I am hoping for some simple examples.
> 
> I know modpython is used as a templating system by many, but I'm not
> sure I want to use it in that manner... I'm still thinking cgi or
> inline code like asp or php.

I use mod_python as the foundation for "servlets" in the handler I
wrote, Mod_python Servlets (see link below).  It offers the web app
programmer an object-oriented view of the web.  VERY different from
psp/php/asp.  The home page contains a link to a live tutorial.

Cheers,

Daniel Popowich
---------------
http://home.comcast.net/~d.popowich/mpservlets/

From nferrier at tapsellferrier.co.uk  Thu Oct 13 19:32:29 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Thu Oct 13 19:42:09 2005
Subject: [mod_python] python server pages
In-Reply-To: <8F96A467-8BAE-42B8-9754-A233EB460D3B@gmail.com> (Earle Ady's
	message of "Wed, 12 Oct 2005 23:24:25 -0400")
References: <8F96A467-8BAE-42B8-9754-A233EB460D3B@gmail.com>
Message-ID: <87mzld6liq.fsf@kanga.tapsellferrier.co.uk>

Earle Ady <earle.ady@gmail.com> writes:

> Nic,
>
> For a good example of something that has been built with a responsible
> combination of handlers, as well as inline Python server pages, give a
> look out to:
>
> http://www.bountynetwork.com/search.psp

Looks nice... but I never like using template thingies other than
XSLT.

I always use XSLT, it's a bit like haskell server pages (for those
unfamiliar with functional programming - that's a kind of joke).


Nic
From python_it at hotmail.com  Fri Oct 14 08:13:22 2005
From: python_it at hotmail.com (python_it@hotmail.com)
Date: Fri Oct 14 08:13:28 2005
Subject: [mod_python] Mod_python Charts
Message-ID: <BAY17-F4E9D84ADB6255880E0327997D0@phx.gbl>

Did somebody has experience with CharDirector and Mod_python (Publisher).
(Python 2.4 / ChartDirector for Python / Modpython 3.2.2b)
I can?t make chart with this combination? (I don?t get errors?)
Publisher is working ok with other scripts.

I use the following script files:

Index.htm => index.py => chart.tmpl

Index.htm
=================
Link to index.py


Index.py
=================
from mod_python import psp,util

def index(req, perc=[10 , 10 , 80], descrip=['10', '10' ,'80'], 
title="chart", filename="chart.png"):
	req.content_type = ?text/html?
	tmpl = psp.PSP(req, filename='templates/chart.tmpl', vars={'req': req, 
'psp': psp, 'perc': perc, 'descrip': descrip, 'title': title, 'filename': 
filename})
	tmpl.run()



chart.tmpl
=================
<HTML>
<%=perc%><br>
<%=descrip%><br>
<%=title%><br>
<%=filename%><br>

<%
from pychartdir import *


def graph(perc, descrip, title, filename):
#The data for the pie chart
   data = perc
#The labels for the pie chart
   labels = descrip
#Create a PieChart object of size 500 x 230 pixels, with a golden background 
and
#a 1 pixel 3D border
   c = PieChart(1000, 500)
#Set the center of the pie at (150, 100) and the radius to 80 pixels
   c.setPieSize(330, 210, 160)
#Add a title at the bottom of the chart using Arial Bold Italic font
   c.addTitle(title, "timesbi.ttf", 14)
#Draw the pie in 3D
   c.set3D()
#Use the side label layout method
   c.setLabelLayout(SideLayout)
#Set the label box the same color as the sector with a 1 pixel 3D border
   c.setLabelStyle("ARIALBD.TTF", 10).setBackground(Transparent, -1)
#Set the border color of the sector the same color as the fill color. Set 
the
#line color of the join line to black (0x0)
   c.setLineColor(SameAsMainColor)
#Set the start angle to 135 degrees may improve layout when there are many 
small
#sectors at the end of the data array (that is, data sorted in descending
#order). It is because this makes the small sectors position near the 
horizontal
#axis, where the text label has the least tendency to overlap. For data 
sorted
#in ascending order, a start angle of 45 degrees can be used instead.
   c.setStartAngle(60)
#Set the pie data and the pie labels
   c.setData(data, labels)
#output the chart
   c.makeChart(filename)

graph(perc, descrip, title, filename)
%>

</HTML>



RESULTS IE
[10, 10, 80]
['10', '10', '80']
chart
chart.png

I?m missing the png file in my template directory?
Why the Chart is not making?

_________________________________________________________________
Stuur een voiceclip met MSN Messenger 7.5 
http://www1.imagine-msn.com/Messenger/Video.aspx

From list at joreybump.com  Fri Oct 14 09:39:06 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Oct 14 09:39:17 2005
Subject: [mod_python] Mod_python Charts
In-Reply-To: <BAY17-F4E9D84ADB6255880E0327997D0@phx.gbl>
References: <BAY17-F4E9D84ADB6255880E0327997D0@phx.gbl>
Message-ID: <434FB4FA.6030906@joreybump.com>

python_it@hotmail.com wrote:

>     req.content_type = ?text/html?

Incorrect quoting, perhaps?
From python_it at hotmail.com  Fri Oct 14 10:32:56 2005
From: python_it at hotmail.com (python_it@hotmail.com)
Date: Fri Oct 14 10:33:02 2005
Subject: [mod_python] Mod_python Charts
Message-ID: <BAY17-F164CAE63D1903778F273A3997D0@phx.gbl>

No thats not the problem!
Tanks for you comment.

_________________________________________________________________
Een audiogesprek? Pak Messenger, niet de telefoon 
http://www1.imagine-msn.com/Messenger/Video.aspx

From paul.hide at gmail.com  Fri Oct 14 13:41:36 2005
From: paul.hide at gmail.com (Paul Hide)
Date: Fri Oct 14 13:41:42 2005
Subject: [mod_python] PyhtonImport
Message-ID: <b117fb190510141041p407c61a0r42388103f98ac689@mail.gmail.com>

Server is: Apache 2.0.54, mod_python 3.1.3 Debian 3.1
Client is Firefox 1.0.7 on ms win 2k
The following file is successfully imported by a PythonImport directive.

#PythonImport test

from mod_python import apache

apache.log_error('q8 q8 q8 q8')

I know this because it writes to the error log.

The directive that loads it is:

PythonImport pyimp localhost.localdomain

I know that my publisher programs are being run in this interpreter because:

def t(req):
return str(req.interpreter) #probably is a string anyway

returns localhost.localdomain into my browser.

If I now change my publisher program to say:

def t(req):
return str(globals()) #probably is a string anyway

then why can't I see any reference to pyimp in the resulting output?


Paul Hide
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051014/eee7da16/attachment.html
From amarrero at mitre.org  Fri Oct 14 13:52:56 2005
From: amarrero at mitre.org (Alexis Marrero)
Date: Fri Oct 14 13:54:59 2005
Subject: [mod_python] PyhtonImport
In-Reply-To: <b117fb190510141041p407c61a0r42388103f98ac689@mail.gmail.com>
References: <b117fb190510141041p407c61a0r42388103f98ac689@mail.gmail.com>
Message-ID: <CEEFF390-CCBC-4C62-B4E3-0962CA9E18EF@mitre.org>

I tried that same statement and got, PythonImport not allowed here.

Syntax error on line 1114 of /Users/amarrero/djp/server/conf/amarre- 
httpd.conf:
PythonImport not allowed here

This is the httpd.conf:

<VirtualHost core.mitre.org:1973>

     Alias / "/Users/amarrero/djp/server/webapp/"

     <Directory "/Users/amarrero/djp/server/webapp/">

       SetHandler python-program
       PythonHandler index
       PythonPath "sys.path + ['/Users/amarrero/djp/server/webapp/']"
       PythonDebug On

       PythonImport server.startup doublecore.mitre.org

     </Directory>
</VirtualHost>


Am I missing something in the conf?

/amn

On Oct 14, 2005, at 1:41 PM, Paul Hide wrote:

> Server is: Apache 2.0.54, mod_python 3.1.3 Debian 3.1
> Client is Firefox 1.0.7 on ms win 2k
> The following file is successfully imported by a PythonImport  
> directive.
>
>     #PythonImport test
>
>     from mod_python import apache
>
>     apache.log_error('q8 q8 q8 q8')
>
> I know this because it writes to the error log.
>
> The directive that loads it is:
>
>     PythonImport pyimp localhost.localdomain
>
> I know that my publisher programs are being run in this interpreter  
> because:
>
>     def t(req):
>         return str(req.interpreter) #probably is a string anyway
>
> returns localhost.localdomain into my browser.
>
> If I now change my publisher program to say:
>
>     def t(req):
>         return str(globals()) #probably is a string anyway
>
> then why can't I see any reference to pyimp in the resulting output?
>
>
> Paul Hide
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From petersanchez at gmail.com  Fri Oct 14 14:38:10 2005
From: petersanchez at gmail.com (Peter Sanchez)
Date: Fri Oct 14 14:38:19 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <1129184157.8752@dscpl.user.openhosting.com>
References: <bb84149f0510122300t11401bfdx668d2e6f1efa50cb@mail.gmail.com>
	<1129184157.8752@dscpl.user.openhosting.com>
Message-ID: <bb84149f0510141138k1076bc18y61450d178cc80d86@mail.gmail.com>

Sorry for the late reply, got busy yesterday.

I did as you suggested, and it errors when trying to start apache (unable to
load mod_python.so), so it has to be the right module.

So, now I put it back to the 3.1.4 version again, and I thought the entire
pages were loading, but when I load pages with a lot more data, I realize
that they aren't loading in whole. So I am still trying to figure out why it
is crashing.

Is there any way to trace the mod_python process, not sure if this would
even help.

Thanks guys,

 Peter


On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Rename the mod_python.so to something else and restart Apache.
> If it truly is picking up this file, it should fail to find it. If not and
> you still get the error, there must be another copy somewhere
> which is being found.
>
> Sorry, if this seems like I don't trust what you say, but the error
> really suggests that an old version is being used and this will at
> least try and confirm whether your new one is being used or not.
>
> Other things to check are that there aren't two LoadModule lines in
> Apache config file for mod_python.so where each grabs it from a
> different location. A long shot would be that mod_python.so is
> somehow statically compiled into Apache.
>
> Graham
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051014/496420c9/attachment.html
From nicolas.lehuen at gmail.com  Fri Oct 14 15:41:16 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Fri Oct 14 15:41:39 2005
Subject: [mod_python] PyhtonImport
In-Reply-To: <b117fb190510141041p407c61a0r42388103f98ac689@mail.gmail.com>
References: <b117fb190510141041p407c61a0r42388103f98ac689@mail.gmail.com>
Message-ID: <c298f2d70510141241m310ef9f2v@mail.gmail.com>

Hi Paul,

PythonImport makes sure that the module is imported when the interpreter is
started. So you'll find it in sys.module. However, to see it amongst your
module's global variables, you need it import it in your module. This is
exactly the same in a standard Python interpreter : it's not because a
module has been imported by a module that it is present in all the other
modules' global variables.

So your published module should be :

import my_test

def t(req):
return globals()

Note two things :

1) I've renamed test to my_test, because test is a standard Python module
and trouble may ensue if you use this module name.
2) str() around globals is not needed IIRC. The publisher will apply it. But
that's a detail.

Regards,
Nicolas

2005/10/14, Paul Hide <paul.hide@gmail.com>:
>
> Server is: Apache 2.0.54, mod_python 3.1.3 Debian 3.1
> Client is Firefox 1.0.7 on ms win 2k
> The following file is successfully imported by a PythonImport directive.
>
> #PythonImport test
>
> from mod_python import apache
>
> apache.log_error('q8 q8 q8 q8')
>
> I know this because it writes to the error log.
>
> The directive that loads it is:
>
> PythonImport pyimp localhost.localdomain
>
> I know that my publisher programs are being run in this interpreter
> because:
>
> def t(req):
> return str(req.interpreter) #probably is a string anyway
>
> returns localhost.localdomain into my browser.
>
> If I now change my publisher program to say:
>
> def t(req):
> return str(globals()) #probably is a string anyway
>
> then why can't I see any reference to pyimp in the resulting output?
>
>
> Paul Hide
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051014/483ad065/attachment.html
From grahamd at dscpl.com.au  Fri Oct 14 17:58:46 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 14 17:59:06 2005
Subject: [mod_python] Mod_python Charts
In-Reply-To: <BAY17-F4E9D84ADB6255880E0327997D0@phx.gbl>
References: <BAY17-F4E9D84ADB6255880E0327997D0@phx.gbl>
Message-ID: <B3DF88A6-68AB-4AEE-A177-8D2EA2A63AEF@dscpl.com.au>


On 14/10/2005, at 10:13 PM, <python_it@hotmail.com> wrote:

> Did somebody has experience with CharDirector and Mod_python  
> (Publisher).
> (Python 2.4 / ChartDirector for Python / Modpython 3.2.2b)
> I can?t make chart with this combination? (I don?t get errors?)
> Publisher is working ok with other scripts.
>
> I use the following script files:
>
> Index.htm => index.py => chart.tmpl
>
> Index.htm
> =================
> Link to index.py
>
>
> Index.py
> =================
> from mod_python import psp,util
>
> def index(req, perc=[10 , 10 , 80], descrip=['10', '10' ,'80'],  
> title="chart", filename="chart.png"):
>     req.content_type = ?text/html?
>     tmpl = psp.PSP(req, filename='templates/chart.tmpl', vars= 
> {'req': req, 'psp': psp, 'perc': perc, 'descrip': descrip, 'title':  
> title, 'filename': filename})
>     tmpl.run()

For the filename argument you are using a relative pathname. This will
not work as Apache often runs with cwd as '/' or some other directory.
It will not be the directory the script file is in and changing cwd  
should
not be done. Instead use:

   import os
   __here__ = os.path.dirname(__file__)

   from mod_python import psp,util

   def index(req, perc=[10 , 10 , 80], descrip=['10', '10' ,'80'],  
title="chart", filename="chart.png"):
       req.content_type = ?text/html?
       filename = os.path.join(__here__,'templates/chart.tmpl')
       tmpl = psp.PSP(req, filename=filename vars={'req': req, 'psp':  
psp, 'perc': perc,'descrip': descrip, 'title': title, 'filename':  
filename})
       tmpl.run()



From grahamd at dscpl.com.au  Fri Oct 14 18:06:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 14 18:06:47 2005
Subject: [mod_python] PyhtonImport
In-Reply-To: <CEEFF390-CCBC-4C62-B4E3-0962CA9E18EF@mitre.org>
References: <b117fb190510141041p407c61a0r42388103f98ac689@mail.gmail.com>
	<CEEFF390-CCBC-4C62-B4E3-0962CA9E18EF@mitre.org>
Message-ID: <7D336CDD-36A5-4279-B4EB-73FA79329295@dscpl.com.au>

PythonImport can't be used inside a Directory directive, must be
outside of it. This is because it is being evaluated at startup and
not when a request mapping to a specific directory is received.
Thus structure it as:

<VirtualHost ...>

   PythonImport ...

   <Directory ...>
   </Directory>

</virtualHost>

If that still doesn't work, put it outside of VirtualHost. Not sure if
that is required or not.

Graham

On 15/10/2005, at 3:52 AM, Alexis Marrero wrote:

> I tried that same statement and got, PythonImport not allowed here.
>
> Syntax error on line 1114 of /Users/amarrero/djp/server/conf/amarre- 
> httpd.conf:
> PythonImport not allowed here
>
> This is the httpd.conf:
>
> <VirtualHost core.mitre.org:1973>
>
>     Alias / "/Users/amarrero/djp/server/webapp/"
>
>     <Directory "/Users/amarrero/djp/server/webapp/">
>
>       SetHandler python-program
>       PythonHandler index
>       PythonPath "sys.path + ['/Users/amarrero/djp/server/webapp/']"
>       PythonDebug On
>
>       PythonImport server.startup doublecore.mitre.org
>
>     </Directory>
> </VirtualHost>
>
>
> Am I missing something in the conf?
>
> /amn
>
> On Oct 14, 2005, at 1:41 PM, Paul Hide wrote:
>
>
>> Server is: Apache 2.0.54, mod_python 3.1.3 Debian 3.1
>> Client is Firefox 1.0.7 on ms win 2k
>> The following file is successfully imported by a PythonImport  
>> directive.
>>
>>     #PythonImport test
>>
>>     from mod_python import apache
>>
>>     apache.log_error('q8 q8 q8 q8')
>>
>> I know this because it writes to the error log.
>>
>> The directive that loads it is:
>>
>>     PythonImport pyimp localhost.localdomain
>>
>> I know that my publisher programs are being run in this  
>> interpreter because:
>>
>>     def t(req):
>>         return str(req.interpreter) #probably is a string anyway
>>
>> returns localhost.localdomain into my browser.
>>
>> If I now change my publisher program to say:
>>
>>     def t(req):
>>         return str(globals()) #probably is a string anyway
>>
>> then why can't I see any reference to pyimp in the resulting output?
>>
>>
>> Paul Hide
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From jg.lists at sympatico.ca  Fri Oct 14 18:32:22 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri Oct 14 18:29:57 2005
Subject: [mod_python] Mod_python Charts
In-Reply-To: <B3DF88A6-68AB-4AEE-A177-8D2EA2A63AEF@dscpl.com.au>
References: <BAY17-F4E9D84ADB6255880E0327997D0@phx.gbl>
	<B3DF88A6-68AB-4AEE-A177-8D2EA2A63AEF@dscpl.com.au>
Message-ID: <435031F6.4080005@sympatico.ca>

Graham Dumpleton wrote:
> 
> On 14/10/2005, at 10:13 PM, <python_it@hotmail.com> wrote:
> 
>> Did somebody has experience with CharDirector and Mod_python  
>> (Publisher).
>> (Python 2.4 / ChartDirector for Python / Modpython 3.2.2b)
>> I can?t make chart with this combination? (I don?t get errors?)
>> Publisher is working ok with other scripts.
>>
>> I use the following script files:
>>
>> Index.htm => index.py => chart.tmpl
>>
>> Index.htm
>> =================
>> Link to index.py
>>
>>
>> Index.py
>> =================
>> from mod_python import psp,util
>>
>> def index(req, perc=[10 , 10 , 80], descrip=['10', '10' ,'80'],  
>> title="chart", filename="chart.png"):
>>     req.content_type = ?text/html?
>>     tmpl = psp.PSP(req, filename='templates/chart.tmpl', vars= {'req': 
>> req, 'psp': psp, 'perc': perc, 'descrip': descrip, 'title':  title, 
>> 'filename': filename})
>>     tmpl.run()
> 
> 
> For the filename argument you are using a relative pathname. This will
> not work as Apache often runs with cwd as '/' or some other directory.
> It will not be the directory the script file is in and changing cwd  should
> not be done. Instead use:
> 
>   import os
>   __here__ = os.path.dirname(__file__)
> 
>   from mod_python import psp,util
> 
>   def index(req, perc=[10 , 10 , 80], descrip=['10', '10' ,'80'],  
> title="chart", filename="chart.png"):
>       req.content_type = ?text/html?
>       filename = os.path.join(__here__,'templates/chart.tmpl')
>       tmpl = psp.PSP(req, filename=filename vars={'req': req, 'psp':  
> psp, 'perc': perc,'descrip': descrip, 'title': title, 'filename':  
> filename})
>       tmpl.run()
> 

Furthermore, ChartDirector does not seem to raise an exception if it 
can't create the file. Testing on linux using the original code, the 
file was not created (no write permission on '/' for the www-data 
process) and no exception was raised. This certainly goes against my 
expectations.

Jim

From jg.lists at sympatico.ca  Fri Oct 14 18:39:00 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri Oct 14 18:36:33 2005
Subject: [mod_python] PyhtonImport
In-Reply-To: <7D336CDD-36A5-4279-B4EB-73FA79329295@dscpl.com.au>
References: <b117fb190510141041p407c61a0r42388103f98ac689@mail.gmail.com>	<CEEFF390-CCBC-4C62-B4E3-0962CA9E18EF@mitre.org>
	<7D336CDD-36A5-4279-B4EB-73FA79329295@dscpl.com.au>
Message-ID: <43503384.5060704@sympatico.ca>

Graham Dumpleton wrote:
> PythonImport can't be used inside a Directory directive, must be
> outside of it. This is because it is being evaluated at startup and
> not when a request mapping to a specific directory is received.
> Thus structure it as:
> 
> <VirtualHost ...>
> 
>   PythonImport ...
> 
>   <Directory ...>
>   </Directory>
> 
> </virtualHost>
> 
> If that still doesn't work, put it outside of VirtualHost. Not sure if
> that is required or not.

PythonImport may only be used in the "server config" context. It can't 
appear inside VirtualHost.

http://www.modpython.org/live/current/doc-html/dir-other-pimp.html
http://httpd.apache.org/docs/2.0/mod/directive-dict.html#Context

Jim

> 
> On 15/10/2005, at 3:52 AM, Alexis Marrero wrote:
> 
>> I tried that same statement and got, PythonImport not allowed here.
>>
>> Syntax error on line 1114 of /Users/amarrero/djp/server/conf/amarre- 
>> httpd.conf:
>> PythonImport not allowed here
>>
>> This is the httpd.conf:
>>
>> <VirtualHost core.mitre.org:1973>
>>
>>     Alias / "/Users/amarrero/djp/server/webapp/"
>>
>>     <Directory "/Users/amarrero/djp/server/webapp/">
>>
>>       SetHandler python-program
>>       PythonHandler index
>>       PythonPath "sys.path + ['/Users/amarrero/djp/server/webapp/']"
>>       PythonDebug On
>>
>>       PythonImport server.startup doublecore.mitre.org
>>
>>     </Directory>
>> </VirtualHost>
>>
>>
>> Am I missing something in the conf?
>>
>> /amn
>>
>> On Oct 14, 2005, at 1:41 PM, Paul Hide wrote:
>>
>>
>>> Server is: Apache 2.0.54, mod_python 3.1.3 Debian 3.1
>>> Client is Firefox 1.0.7 on ms win 2k
>>> The following file is successfully imported by a PythonImport  
>>> directive.
>>>
>>>     #PythonImport test
>>>
>>>     from mod_python import apache
>>>
>>>     apache.log_error('q8 q8 q8 q8')
>>>
>>> I know this because it writes to the error log.
>>>
>>> The directive that loads it is:
>>>
>>>     PythonImport pyimp localhost.localdomain
>>>
>>> I know that my publisher programs are being run in this  interpreter 
>>> because:
>>>
>>>     def t(req):
>>>         return str(req.interpreter) #probably is a string anyway
>>>
>>> returns localhost.localdomain into my browser.
>>>
>>> If I now change my publisher program to say:
>>>
>>>     def t(req):
>>>         return str(globals()) #probably is a string anyway
>>>
>>> then why can't I see any reference to pyimp in the resulting output?
>>>
>>>
>>> Paul Hide
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From grahamd at dscpl.com.au  Fri Oct 14 21:35:42 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 14 21:36:15 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <bb84149f0510141124t230cada7tbd35f4286fe2b935@mail.gmail.com>
References: <bb84149f0510122300t11401bfdx668d2e6f1efa50cb@mail.gmail.com>
	<1129184157.8752@dscpl.user.openhosting.com>
	<bb84149f0510141124t230cada7tbd35f4286fe2b935@mail.gmail.com>
Message-ID: <57eeb15d0db49afad51e44b384218129@dscpl.com.au>

Most strange. Good news is that have managed to get onto a Linux system
and build up non threaded Python and duplicate it.

[Fri Oct 14 21:30:31 2005] [notice] Apache/2.0.55 (Unix) 
mod_python/3.2.0b Python/2.3.5 configured -- resuming normal 
operations[Fri Oct 14 21:30:32 2005] [error] make_obcallback: could not 
call init.\n
TypeError: init() takes no arguments (2 given)Fatal Python error: 
PyThreadState_Delete: tstate is still current
[Fri Oct 14 21:30:32 2005] [notice] child pid 609 exit signal Aborted 
(6)[Fri Oct 14 21:30:43 2005] [error] make_obcallback: could not call 
init.\n
TypeError: init() takes no arguments (2 given)Fatal Python error: 
PyThreadState_Delete: tstate is still current
[Fri Oct 14 21:30:44 2005] [error] make_obcallback: could not call 
init.\nTypeError: init() takes no arguments (2 given)
Fatal Python error: PyThreadState_Delete: tstate is still current[Fri 
Oct 14 21:30:44 2005] [notice] child pid 610 exit signal Aborted (6)
[Fri Oct 14 21:30:44 2005] [notice] child pid 611 exit signal Aborted 
(6)

More later when I work out why it is happening. :-)

Graham

On 15/10/2005, at 4:24 AM, Peter Sanchez wrote:

> Sorry for the late reply, got busy yesterday.
>
>  I did as you suggested, and it errors when trying to start apache 
> (unable to load mod_python.so), so it has to be the right module.
>
>  So, now I put it back to the 3.1.4 version again, and I thought the 
> entire pages were loading, but when I load pages with a lot more data, 
> I realize that they aren't loading in whole. So I am still trying to 
> figure out why it is crashing.
>
>  Is there any way to trace the mod_python process, not sure if this 
> would even help.
>
>  Thanks guys,
>
>  Peter
>
> On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> If it truly is picking up this file, it should fail to find it. If 
>> not and
>> you still get the error, there must be another copy somewhere
>> which is being found.
>>
>> Sorry, if this seems like I don't trust what you say, but the error
>> really suggests that an old version is being used and this will at
>> least try and confirm whether your new one is being used or not.
>>
>>  Other things to check are that there aren't two LoadModule lines in
>> Apache config file for mod_python.so where each grabs it from a
>> different location. A long shot would be that mod_python.so is
>> somehow statically compiled into Apache.
>>
>> Graham
>>
>>
>> Peter Sanchez wrote ..
>> > OK, I checked on the mod_python.so, the time stamp is the same as 
>> the
>> > mod_python .py files in the python site-packages directory 
>> (remember I
>> > just reinstalled them tonight)
>> >
>> > Also, if I do a 'strings mod_python.so | grep 3' I get 
>> "mod_python/3.2.2"
>> >
>> > so I am assuming it is the correct one.
>> >
>> > Any other ideas?
>> >
>> > Thanks!!
>> >
>> > Peter
>> >
>> > On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> > > The mod_python.so in your Apache modules directory, or wherever it
>>  > > is picking it up from, appears to still be that for mod_python 
>> 2.7.X.
>> > >
>> > > Thus, find LoadModule instruction for mod_python in Apache config
>> > > and work out where it is loading it from. Ensure that that module 
>> is
>> > > that for mod_python 3.2.
>> > >
>> > > Graham
>> > >
>> > > Peter Sanchez wrote ..
>> > > > Maybe I am not understanding what you are saying...
>> > > >
>> > > > So I just deinstalled mod_python completely, verified that the
>> > > > directory /usr/local/lib/python2.4/site-packages/mod_python 
>> directory
>> > > > was gone. I reinstalled and the directory was there with all 
>> the other
>> > > > files included (apache.py , etc.)
>> > > >
>> > > > The same problem exists. Is it an Apache compilation issue?
>> > > >
>> > > > Sorry if I am being slow on this issue...
>> > > >
>> > > > Thanks,
>> > > >
>> > > > Peter
>> > > >
>> > > > On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>> > > > > Now I am even more blind. I got that the wrong way around. You
>> > > > > have the 3.2 mod_python.apache module, but the Apache module
>> > > > > is still that for 2.7. Ie., only mod_python Apache module for 
>> 2.7
>> > > > > would be attempting to call init() with 0 arguments where 2 is
>> > > > > expected.
>> > > > >
>> > > > > This would explain why thread state problem is still there as 
>> Apache
>> > > > > module hasn't changed.
>> > > > >
>>  > > > > Blame Apple for this, trying to read up on the new video 
>> iPod and
>> > > > > it is distracting my thoughts. :-)
>> > > > >
>> > > > > Graham
>> > > > >
>>  > > > > On 13/10/2005, at 8:04 AM, Graham Dumpleton wrote:
>> > > > >
>> > > > > > Okay, I am blind. Unfortunate that the thread state problem 
>> didn't
>> > > > > > go away, but only just noticed in the error messages the 
>> init()
>> > > > > > call argument mismatch.
>> > > > > >
>> > > > > > The problem you are having is that the Apache module is for
>> > > > > > mod_python 3.2, but it is still finding the Python modules, 
>> ie.,
>> > > > > > the mod_python.apache module, from your old mod_python 2.7
>> > > > > > installation.
>> > > > > >
>> > > > > > In 2.7, init() took no arguments. In 3.2 it takes two 
>> arguments.
>> > > > > >
>> > > > > > Sorry, didn't notice that before. Thus, get rid of the 
>> mod_python
>> > 2.7
>> > > > > > Python modules and ensure 3.2 versions are installed 
>> correctly.
>> > > > > >
>> > > > > > Still think something isn't right with the thread state 
>> deletion
>> > > > > > code. Are you absolutely sure that your newly compiled 
>> Apache
>> > > > > > module is being used?
>> > > > > >
>> > > > > > Graham
>> > > > > >
>> > > > > > On 12/10/2005, at 9:33 AM, Peter Sanchez wrote:
>> > > > > >
>> > > > > >> Well, I did the patches you suggested, and it didn't help 
>> much.
>> > > > > >> Here is the log snippet:
>> > > > > >>
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] Apache/2.0.54 
>> (FreeBSD) PHP/
>> > > > > >> 4.4.0 mod_python/3.2.0b Python/2.4.1 configured -- 
>> resuming normal
>> > > > > >> operati
>> > > > > >> ons
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71664 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71663 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71660 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71654 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71640 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71634 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71624 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69509 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69490 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69470 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69437 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:07 2005] [error] make_obcallback: could 
>> not
>> > call
>> > > > > >> init.\n
>> > > > > >> TypeError: init() takes exactly 2 arguments (0 given)
>> > > > > >> Fatal Python error: PyThreadState_Delete: tstate is still 
>> current
>> > > > > >> [Tue Oct 11 16:17:08 2005] [notice] child pid 71632 exit 
>> signal
>> > > > > >> Abort trap (6)
>> > > > > >> [Tue Oct 11 16:17:09 2005] [error] make_obcallback: could 
>> not
>> > call
>> > > > > >> init.\n
>> > > > > >> TypeError: init() takes exactly 2 arguments (0 given)
>> > > > > >>
>> > > > > >>
>> > > > > >> Over and over again ;) I went back to 3.1.4, since I am 
>> testing
>> > on
>> > > > > >> a live server (no other choice unfortunately.)
>> > > > > >>
>> > > > > >> I also tried writing a basic function that does nothing but
>> > > > > >> display a session id, no other modules included and it 
>> gave the
>>  > > > > >> same results. You guys probably knew that was the case, 
>> but just
>> > > > > >> an FYI.
>> > > > > >>
>> > > > > >> Thanks again,
>> > > > > >>
>> > > > > >> Peter
>> > > > > >>
>> > > > > >> On 10/11/05, Graham Dumpleton <grahamd@dscpl.com.au> 
>> wrote: Making
>>  > > > > >> an educated guess (???), in src/mod_python.c, can you 
>> modify the
>> > > > > >> release_interpreter() function and change:
>> > > > > >>
>> > > > > >> static void release_interpreter(void)
>> > > > > >> {
>> > > > > >>???? PyThreadState *tstate = PyThreadState_Get();
>> > > > > >> #ifdef WITH_THREAD
>> > > > > >>???? PyEval_ReleaseThread(tstate);
>> > > > > >> #endif
>> > > > > >>???? PyThreadState_Delete(tstate);
>> > > > > >> }
>> > > > > >>
>> > > > > >> to:
>> > > > > >>
>> > > > > >> static void release_interpreter(void)
>> > > > > >> {
>> > > > > >>???? PyThreadState *tstate = PyThreadState_Get();
>> > > > > >> #ifdef WITH_THREAD
>> > > > > >>???? PyEval_ReleaseThread(tstate);
>> > > > > >> #else
>> > > > > >>???? PyThreadState_Swap(NULL);
>> > > > > >> #endif
>> > > > > >>???? PyThreadState_Delete(tstate);
>> > > > > >> }
>> > > > > >>
>> > > > > >> The original doesn't seem quite right to me because it 
>> wouldn't
>> > > > > >> revert
>> > > > > >> the thread state before deleting it when threads aren't 
>> used.
>> > > > > >> There is a
>> > > > > >> similar bit of code in get_interpreter() where it has:
>> > > > > >>
>> > > > > >>???????? if (!idata->obcallback)
>> > > > > >>???????? {
>> > > > > >> #ifdef WITH_THREAD
>> > > > > >>???????????? PyEval_ReleaseThread(tstate);
>> > > > > >> #endif?????????????????????????? 
>> PyThreadState_Delete(tstate);
>> > > > > >>
>> > > > > >> which perhaps should be:
>> > > > > >>
>> > > > > >>???????? if (!idata->obcallback)
>>  > > > > >>???????? {
>> > > > > >> #ifdef WITH_THREAD
>> > > > > >>???????????????????? PyEval_ReleaseThread(tstate);
>> > > > > >> #else
>> > > > > >>???????????????????? PyThreadState_Swap(NULL);
>> > > > > >> #endif
>> > > > > >>???????????????????? PyThreadState_Delete(tstate);
>> > > > > >>
>> > > > > >> In this case it only gets invoked when mod_python callback 
>> can't
>> > be
>> > > > > >> created.
>> > > > > >>
>> > > > > >> If this is indeed the problem, in mod_python 3.1.3, the 
>> callback
>> > > > > >> may be
>> > > > > >> created okay so it only dies in release_interpreter(). In
>> > > > > >> mod_python 3.2
>> > > > > >> though, maybe the callback creation itself is failing 
>> meaning
>> > it
>> > > > > >> would
>> > > > > >> die everytime a child process is created.
>> > > > > >>
>> > > > > >> If someone has the time and a non BSD platform could you
>> > > > > >> independently
>> > > > > >> build a version of Python without thread support and then 
>> build
>> > > > > >> mod_python 3.2 and see if you get similar crashes. Ie., I 
>> feel
>> > this
>> > > > > >> could be wrong for no threads and not be BSD specific. 
>> From what
>> > I
>> > > > > >> have
>> > > > > >> seen, FreeBSD is the only platform that still doesn't 
>> build in
>> > > > > >> threads
>> > > > > >> to Python by default and thus why it isn't seen more. I 
>> can't
>> > do it
>> > > > > >> personally as have MacOS X and one has to be careful with 
>> multiple
>> > > > > >> Python installations there in case one trashes system one
>> > > > > >> accidentally.
>> > > > > >> Would rather not risk it. :-)
>> > > > > >>
>> > > > > >> Graham
>> > > > > >>
>> > > > > >> Peter Sanchez wrote ..
>>  > > > > >> > Thanks for the reference. I tried adding the following 
>> line,
>> > no
>> > > > > >> real help.
>> > > > > >> > So I rebuilt apache2 and mod_python and made sure it 
>> didn't
>> > have
>> > > > > >> threads
>> > > > > >> > support. Now, I still get the same error message, but 
>> the entire
>> > > > > >> page is
>> > > > > >> > loading correctly?
>> > > > > >> >
>> > > > > >> > Same log entries though:
>> > > > > >> >
>> > > > > >> > Fatal Python error: PyThreadState_Delete: tstate is 
>> still current
>> > > > > >> > [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit 
>> signal
>> > > > > >> Abort trap
>> > > > > >> > (6)
>> > > > > >> >
>>  > > > > >> > I am wondering if at this point, its not related to 
>> Cheetah
>> > > > > >> Template engine,
>> > > > > >> > which I use for my templates (will be converting to psp 
>> template
>> > > > > >> system
>> > > > > >> > very
>> > > > > >> > soon) I am not sure if that attempts any threaded 
>> functions,
>> > > > > >> etc. Also,
>> > > > > >> > I
>> > > > > >> > dont know that if it was trying something like that, if 
>> it would
>> > > > > >> effect
>> > > > > >> > mod_python in this way.
>> > > > > >> >
>> > > > > >> > Is there any traces I can run, etc. to help debug this 
>> issue?
>> > > > > >> >
>> > > > > >> > Thanks,
>>  > > > > >> >
>> > > > > >> > Peter
>> > > > > >> >
>> > > > > >> > On 10/11/05, Jim Gallacher < jg.lists@sympatico.ca> 
>> wrote:
>> > > > > >> > >
>> > > > > >> > > Peter Sanchez wrote:
>> > > > > >> > > > OK, I tried 3.2.2b from source. Now, when I start 
>> apache,
>> > > > > >> the logs
>> > > > > >> > just
>> > > > > >> > > > go into a loop with the same errors as before :)
>> > > > > >> > > >
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 
>> (FreeBSD)
>> > > > > >> PHP/4.4.0
>> > > > > >> > > > mod_python/3.2.0b Python/2.4.1 configured -- 
>> resuming normal
>> > > > > >> operations
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 
>> exit
>> > > > > >> signal Abort
>> > > > > >> > > > trap (6)
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: 
>> could
>> > > > > >> not call
>> > > > > >> > > init.\n
>> > > > > >> > > > TypeError: init() takes exactly 2 arguments (0 given)
>> > > > > >> > > > Fatal Python error: PyThreadState_Delete: tstate is 
>> still
>> > > > > >> current
>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: 
>> could
>> > > > > >> not call
>> > > > > >> > > init.\n
>> > > > > >> > > > TypeError: init() takes exactly 2 arguments (0 given)
>> > > > > >> > > > Fatal Python error: PyThreadState_Delete: tstate is 
>> still
>> > > > > >> current
>> > > > > >> > > >
>> > > > > >> > > > Note, these were being given while NOT loading my 
>> mod_python
>> > > > > >> code,
>> > > > > >> > I
>> > > > > >> > > > think it was doing this for every 'normal' apache 
>> instance.
>> > > > > >> I quickly
>> > > > > >> > > > reverted back to the last setup (mod_pyton/3.1.4)
>> > > > > >> > > >
>> > > > > >> > > > Any other ideas guys?
>> > > > > >> > > >
>> > > > > >> > > > Thanks,
>>  > > > > >> > > >
>> > > > > >> > > > Peter
>> > > > > >> > > >
>> > > > > >> > >
>> > > > > >> > > This sounds like the problem I was having trying to 
>> get the
>> > > > > >> 3.2.2b unit
>> > > > > >> > > tests to pass on FreeBSD. This was discussed on the 
>> python-dev
>> > > > > >> list
>> > > > > >> > > around Sept 10.
>> > > > > >> > >
>> > > > > >> > > You can read the archive on gmane at
>> > > > > >> > > 
>> http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
>> > > > > >> > >
>> > > > > >> > > Grisha suggested you can see this sort of problem on 
>> FreeBSD
>> > > > > >> where
>> > > > > >> > > Python is threaded and Apache is not and offered the 
>> following:
>> > > > > >> > >
>> > > > > >> > > If you built apache without thread support, you may 
>> need to
>> > > > > >> add the
>> > > > > >> > > following lines to $PREFIX/sbin/envvars:
>> > > > > >> > >
>> > > > > >> > > LD_PRELOAD=/usr/lib/libc_r.so
>> > > > > >> > > export LD_PRELOAD
>> > > > > >> > >
>> > > > > >> > > Regards,
>> > > > > >> > > Jim
>> > > > > >> > >
>> > > > > >>
>> > > > > >>
>> > > > > >
>> > > > > >
>> > > > > >
>> > > > > >
>> > > > > > _______________________________________________
>> > > > > > Mod_python mailing list
>> > > > > > Mod_python@modpython.org
>> > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
>> > > > > >
>> > > > >
>> > > > >
>> > >


From grahamd at dscpl.com.au  Fri Oct 14 22:58:59 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 14 22:59:17 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <57eeb15d0db49afad51e44b384218129@dscpl.com.au>
References: <bb84149f0510122300t11401bfdx668d2e6f1efa50cb@mail.gmail.com>
	<1129184157.8752@dscpl.user.openhosting.com>
	<bb84149f0510141124t230cada7tbd35f4286fe2b935@mail.gmail.com>
	<57eeb15d0db49afad51e44b384218129@dscpl.com.au>
Message-ID: <257889b338dfb67202e53149ce6339cd@dscpl.com.au>

Python's rules for determining the default PYTHON_PATH are stupid.

Even when loaded from inside of Apache as part of mod_python, it seems
to search PATH for a "python" executable. If it finds one it will assume
that that is the correct one and somehow base the PYTHON_PATH on that.

I eliminated the "init" problem by simply ensuring that the version of
Python I used to build mod_python was the first found in my path. As it
was it was still finding the system default version of Python which
had mod_python 3.1.4 installed. It therefore was loading mod_python
modules from 3.1.4 and not 3.2.2 as installed in my separate copy of
Python.

Having sorted that out, then got to the next problem, which is a bug
in mod_python.publisher (cache) when threading isn't built into Python.

   http://issues.apache.org/jira/browse/MODPYTHON-82

Fixed that. After that the resource I tried to access didn't actually
exist so it tried to return 404. At that point Apache died because
of:

Fatal Python error: PyThreadState_Delete: tstate is still current
[Fri Oct 14 22:50:21 2005] [notice] child pid 6150 exit signal Aborted 
(6)

I then applied the thread state fix previously mentioned. Ie.,

#ifdef WITH_THREAD
             PyEval_ReleaseThread(tstate);
#else
             PyThreadState_Swap(NULL);
#endif

and PyThreadState_Delete error disappeared and 404 was returned okay.

Then accessed a real resource implemented using publisher and it sent
back the actual result.

In summary:

1. Make sure PATH will find the version of Python you used to build
mod_python before any other version.

2. Apply fixes as described in:

   http://www.modpython.org/pipermail/mod_python/2005-October/019236.html

3. Fix mod_python.cache bug as described in:

   http://issues.apache.org/jira/browse/MODPYTHON-82

Then let us know if you still have problems.

Graham


On 15/10/2005, at 11:35 AM, Graham Dumpleton wrote:

> Most strange. Good news is that have managed to get onto a Linux system
> and build up non threaded Python and duplicate it.
>
> [Fri Oct 14 21:30:31 2005] [notice] Apache/2.0.55 (Unix) 
> mod_python/3.2.0b Python/2.3.5 configured -- resuming normal 
> operations[Fri Oct 14 21:30:32 2005] [error] make_obcallback: could 
> not call init.\n
> TypeError: init() takes no arguments (2 given)Fatal Python error: 
> PyThreadState_Delete: tstate is still current
> [Fri Oct 14 21:30:32 2005] [notice] child pid 609 exit signal Aborted 
> (6)[Fri Oct 14 21:30:43 2005] [error] make_obcallback: could not call 
> init.\n
> TypeError: init() takes no arguments (2 given)Fatal Python error: 
> PyThreadState_Delete: tstate is still current
> [Fri Oct 14 21:30:44 2005] [error] make_obcallback: could not call 
> init.\nTypeError: init() takes no arguments (2 given)
> Fatal Python error: PyThreadState_Delete: tstate is still current[Fri 
> Oct 14 21:30:44 2005] [notice] child pid 610 exit signal Aborted (6)
> [Fri Oct 14 21:30:44 2005] [notice] child pid 611 exit signal Aborted 
> (6)
>
> More later when I work out why it is happening. :-)
>
> Graham
>
> On 15/10/2005, at 4:24 AM, Peter Sanchez wrote:
>
>> Sorry for the late reply, got busy yesterday.
>>
>>  I did as you suggested, and it errors when trying to start apache 
>> (unable to load mod_python.so), so it has to be the right module.
>>
>>  So, now I put it back to the 3.1.4 version again, and I thought the 
>> entire pages were loading, but when I load pages with a lot more 
>> data, I realize that they aren't loading in whole. So I am still 
>> trying to figure out why it is crashing.
>>
>>  Is there any way to trace the mod_python process, not sure if this 
>> would even help.
>>
>>  Thanks guys,
>>
>>  Peter
>>
>> On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>> If it truly is picking up this file, it should fail to find it. If 
>>> not and
>>> you still get the error, there must be another copy somewhere
>>> which is being found.
>>>
>>> Sorry, if this seems like I don't trust what you say, but the error
>>> really suggests that an old version is being used and this will at
>>> least try and confirm whether your new one is being used or not.
>>>
>>>  Other things to check are that there aren't two LoadModule lines in
>>> Apache config file for mod_python.so where each grabs it from a
>>> different location. A long shot would be that mod_python.so is
>>> somehow statically compiled into Apache.
>>>
>>> Graham
>>>
>>>
>>> Peter Sanchez wrote ..
>>> > OK, I checked on the mod_python.so, the time stamp is the same as 
>>> the
>>> > mod_python .py files in the python site-packages directory 
>>> (remember I
>>> > just reinstalled them tonight)
>>> >
>>> > Also, if I do a 'strings mod_python.so | grep 3' I get 
>>> "mod_python/3.2.2"
>>> >
>>> > so I am assuming it is the correct one.
>>> >
>>> > Any other ideas?
>>> >
>>> > Thanks!!
>>> >
>>> > Peter
>>> >
>>> > On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>> > > The mod_python.so in your Apache modules directory, or wherever 
>>> it
>>>  > > is picking it up from, appears to still be that for mod_python 
>>> 2.7.X.
>>> > >
>>> > > Thus, find LoadModule instruction for mod_python in Apache config
>>> > > and work out where it is loading it from. Ensure that that 
>>> module is
>>> > > that for mod_python 3.2.
>>> > >
>>> > > Graham
>>> > >
>>> > > Peter Sanchez wrote ..
>>> > > > Maybe I am not understanding what you are saying...
>>> > > >
>>> > > > So I just deinstalled mod_python completely, verified that the
>>> > > > directory /usr/local/lib/python2.4/site-packages/mod_python 
>>> directory
>>> > > > was gone. I reinstalled and the directory was there with all 
>>> the other
>>> > > > files included (apache.py , etc.)
>>> > > >
>>> > > > The same problem exists. Is it an Apache compilation issue?
>>> > > >
>>> > > > Sorry if I am being slow on this issue...
>>> > > >
>>> > > > Thanks,
>>> > > >
>>> > > > Peter
>>> > > >
>>> > > > On 10/12/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>>> > > > > Now I am even more blind. I got that the wrong way around. 
>>> You
>>> > > > > have the 3.2 mod_python.apache module, but the Apache module
>>> > > > > is still that for 2.7. Ie., only mod_python Apache module 
>>> for 2.7
>>> > > > > would be attempting to call init() with 0 arguments where 2 
>>> is
>>> > > > > expected.
>>> > > > >
>>> > > > > This would explain why thread state problem is still there 
>>> as Apache
>>> > > > > module hasn't changed.
>>> > > > >
>>>  > > > > Blame Apple for this, trying to read up on the new video 
>>> iPod and
>>> > > > > it is distracting my thoughts. :-)
>>> > > > >
>>> > > > > Graham
>>> > > > >
>>>  > > > > On 13/10/2005, at 8:04 AM, Graham Dumpleton wrote:
>>> > > > >
>>> > > > > > Okay, I am blind. Unfortunate that the thread state 
>>> problem didn't
>>> > > > > > go away, but only just noticed in the error messages the 
>>> init()
>>> > > > > > call argument mismatch.
>>> > > > > >
>>> > > > > > The problem you are having is that the Apache module is for
>>> > > > > > mod_python 3.2, but it is still finding the Python 
>>> modules, ie.,
>>> > > > > > the mod_python.apache module, from your old mod_python 2.7
>>> > > > > > installation.
>>> > > > > >
>>> > > > > > In 2.7, init() took no arguments. In 3.2 it takes two 
>>> arguments.
>>> > > > > >
>>> > > > > > Sorry, didn't notice that before. Thus, get rid of the 
>>> mod_python
>>> > 2.7
>>> > > > > > Python modules and ensure 3.2 versions are installed 
>>> correctly.
>>> > > > > >
>>> > > > > > Still think something isn't right with the thread state 
>>> deletion
>>> > > > > > code. Are you absolutely sure that your newly compiled 
>>> Apache
>>> > > > > > module is being used?
>>> > > > > >
>>> > > > > > Graham
>>> > > > > >
>>> > > > > > On 12/10/2005, at 9:33 AM, Peter Sanchez wrote:
>>> > > > > >
>>> > > > > >> Well, I did the patches you suggested, and it didn't help 
>>> much.
>>> > > > > >> Here is the log snippet:
>>> > > > > >>
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] Apache/2.0.54 
>>> (FreeBSD) PHP/
>>> > > > > >> 4.4.0 mod_python/3.2.0b Python/2.4.1 configured -- 
>>> resuming normal
>>> > > > > >> operati
>>> > > > > >> ons
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71664 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71663 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71660 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71654 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71640 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71634 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 71624 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69509 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69490 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69470 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [notice] child pid 69437 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:07 2005] [error] make_obcallback: could 
>>> not
>>> > call
>>> > > > > >> init.\n
>>> > > > > >> TypeError: init() takes exactly 2 arguments (0 given)
>>> > > > > >> Fatal Python error: PyThreadState_Delete: tstate is still 
>>> current
>>> > > > > >> [Tue Oct 11 16:17:08 2005] [notice] child pid 71632 exit 
>>> signal
>>> > > > > >> Abort trap (6)
>>> > > > > >> [Tue Oct 11 16:17:09 2005] [error] make_obcallback: could 
>>> not
>>> > call
>>> > > > > >> init.\n
>>> > > > > >> TypeError: init() takes exactly 2 arguments (0 given)
>>> > > > > >>
>>> > > > > >>
>>> > > > > >> Over and over again ;) I went back to 3.1.4, since I am 
>>> testing
>>> > on
>>> > > > > >> a live server (no other choice unfortunately.)
>>> > > > > >>
>>> > > > > >> I also tried writing a basic function that does nothing 
>>> but
>>> > > > > >> display a session id, no other modules included and it 
>>> gave the
>>>  > > > > >> same results. You guys probably knew that was the case, 
>>> but just
>>> > > > > >> an FYI.
>>> > > > > >>
>>> > > > > >> Thanks again,
>>> > > > > >>
>>> > > > > >> Peter
>>> > > > > >>
>>> > > > > >> On 10/11/05, Graham Dumpleton <grahamd@dscpl.com.au> 
>>> wrote: Making
>>>  > > > > >> an educated guess (???), in src/mod_python.c, can you 
>>> modify the
>>> > > > > >> release_interpreter() function and change:
>>> > > > > >>
>>> > > > > >> static void release_interpreter(void)
>>> > > > > >> {
>>> > > > > >>???? PyThreadState *tstate = PyThreadState_Get();
>>> > > > > >> #ifdef WITH_THREAD
>>> > > > > >>???? PyEval_ReleaseThread(tstate);
>>> > > > > >> #endif
>>> > > > > >>???? PyThreadState_Delete(tstate);
>>> > > > > >> }
>>> > > > > >>
>>> > > > > >> to:
>>> > > > > >>
>>> > > > > >> static void release_interpreter(void)
>>> > > > > >> {
>>> > > > > >>???? PyThreadState *tstate = PyThreadState_Get();
>>> > > > > >> #ifdef WITH_THREAD
>>> > > > > >>???? PyEval_ReleaseThread(tstate);
>>> > > > > >> #else
>>> > > > > >>???? PyThreadState_Swap(NULL);
>>> > > > > >> #endif
>>> > > > > >>???? PyThreadState_Delete(tstate);
>>> > > > > >> }
>>> > > > > >>
>>> > > > > >> The original doesn't seem quite right to me because it 
>>> wouldn't
>>> > > > > >> revert
>>> > > > > >> the thread state before deleting it when threads aren't 
>>> used.
>>> > > > > >> There is a
>>> > > > > >> similar bit of code in get_interpreter() where it has:
>>> > > > > >>
>>> > > > > >>???????? if (!idata->obcallback)
>>> > > > > >>???????? {
>>> > > > > >> #ifdef WITH_THREAD
>>> > > > > >>???????????? PyEval_ReleaseThread(tstate);
>>> > > > > >> #endif?????????????????????????? 
>>> PyThreadState_Delete(tstate);
>>> > > > > >>
>>> > > > > >> which perhaps should be:
>>> > > > > >>
>>> > > > > >>???????? if (!idata->obcallback)
>>>  > > > > >>???????? {
>>> > > > > >> #ifdef WITH_THREAD
>>> > > > > >>???????????????????? PyEval_ReleaseThread(tstate);
>>> > > > > >> #else
>>> > > > > >>???????????????????? PyThreadState_Swap(NULL);
>>> > > > > >> #endif
>>> > > > > >>???????????????????? PyThreadState_Delete(tstate);
>>> > > > > >>
>>> > > > > >> In this case it only gets invoked when mod_python 
>>> callback can't
>>> > be
>>> > > > > >> created.
>>> > > > > >>
>>> > > > > >> If this is indeed the problem, in mod_python 3.1.3, the 
>>> callback
>>> > > > > >> may be
>>> > > > > >> created okay so it only dies in release_interpreter(). In
>>> > > > > >> mod_python 3.2
>>> > > > > >> though, maybe the callback creation itself is failing 
>>> meaning
>>> > it
>>> > > > > >> would
>>> > > > > >> die everytime a child process is created.
>>> > > > > >>
>>> > > > > >> If someone has the time and a non BSD platform could you
>>> > > > > >> independently
>>> > > > > >> build a version of Python without thread support and then 
>>> build
>>> > > > > >> mod_python 3.2 and see if you get similar crashes. Ie., I 
>>> feel
>>> > this
>>> > > > > >> could be wrong for no threads and not be BSD specific. 
>>> From what
>>> > I
>>> > > > > >> have
>>> > > > > >> seen, FreeBSD is the only platform that still doesn't 
>>> build in
>>> > > > > >> threads
>>> > > > > >> to Python by default and thus why it isn't seen more. I 
>>> can't
>>> > do it
>>> > > > > >> personally as have MacOS X and one has to be careful with 
>>> multiple
>>> > > > > >> Python installations there in case one trashes system one
>>> > > > > >> accidentally.
>>> > > > > >> Would rather not risk it. :-)
>>> > > > > >>
>>> > > > > >> Graham
>>> > > > > >>
>>> > > > > >> Peter Sanchez wrote ..
>>>  > > > > >> > Thanks for the reference. I tried adding the following 
>>> line,
>>> > no
>>> > > > > >> real help.
>>> > > > > >> > So I rebuilt apache2 and mod_python and made sure it 
>>> didn't
>>> > have
>>> > > > > >> threads
>>> > > > > >> > support. Now, I still get the same error message, but 
>>> the entire
>>> > > > > >> page is
>>> > > > > >> > loading correctly?
>>> > > > > >> >
>>> > > > > >> > Same log entries though:
>>> > > > > >> >
>>> > > > > >> > Fatal Python error: PyThreadState_Delete: tstate is 
>>> still current
>>> > > > > >> > [Tue Oct 11 13:05:15 2005] [notice] child pid 256 exit 
>>> signal
>>> > > > > >> Abort trap
>>> > > > > >> > (6)
>>> > > > > >> >
>>>  > > > > >> > I am wondering if at this point, its not related to 
>>> Cheetah
>>> > > > > >> Template engine,
>>> > > > > >> > which I use for my templates (will be converting to psp 
>>> template
>>> > > > > >> system
>>> > > > > >> > very
>>> > > > > >> > soon) I am not sure if that attempts any threaded 
>>> functions,
>>> > > > > >> etc. Also,
>>> > > > > >> > I
>>> > > > > >> > dont know that if it was trying something like that, if 
>>> it would
>>> > > > > >> effect
>>> > > > > >> > mod_python in this way.
>>> > > > > >> >
>>> > > > > >> > Is there any traces I can run, etc. to help debug this 
>>> issue?
>>> > > > > >> >
>>> > > > > >> > Thanks,
>>>  > > > > >> >
>>> > > > > >> > Peter
>>> > > > > >> >
>>> > > > > >> > On 10/11/05, Jim Gallacher < jg.lists@sympatico.ca> 
>>> wrote:
>>> > > > > >> > >
>>> > > > > >> > > Peter Sanchez wrote:
>>> > > > > >> > > > OK, I tried 3.2.2b from source. Now, when I start 
>>> apache,
>>> > > > > >> the logs
>>> > > > > >> > just
>>> > > > > >> > > > go into a loop with the same errors as before :)
>>> > > > > >> > > >
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] Apache/2.0.54 
>>> (FreeBSD)
>>> > > > > >> PHP/4.4.0
>>> > > > > >> > > > mod_python/3.2.0b Python/2.4.1 configured -- 
>>> resuming normal
>>> > > > > >> operations
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26791 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26318 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 26317 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24178 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24162 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24148 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24133 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24122 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24050 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 24033 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23318 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23285 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23266 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [notice] child pid 23195 
>>> exit
>>> > > > > >> signal Abort
>>> > > > > >> > > > trap (6)
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: 
>>> could
>>> > > > > >> not call
>>> > > > > >> > > init.\n
>>> > > > > >> > > > TypeError: init() takes exactly 2 arguments (0 
>>> given)
>>> > > > > >> > > > Fatal Python error: PyThreadState_Delete: tstate is 
>>> still
>>> > > > > >> current
>>> > > > > >> > > > [Tue Oct 11 10:26:14 2005] [error] make_obcallback: 
>>> could
>>> > > > > >> not call
>>> > > > > >> > > init.\n
>>> > > > > >> > > > TypeError: init() takes exactly 2 arguments (0 
>>> given)
>>> > > > > >> > > > Fatal Python error: PyThreadState_Delete: tstate is 
>>> still
>>> > > > > >> current
>>> > > > > >> > > >
>>> > > > > >> > > > Note, these were being given while NOT loading my 
>>> mod_python
>>> > > > > >> code,
>>> > > > > >> > I
>>> > > > > >> > > > think it was doing this for every 'normal' apache 
>>> instance.
>>> > > > > >> I quickly
>>> > > > > >> > > > reverted back to the last setup (mod_pyton/3.1.4)
>>> > > > > >> > > >
>>> > > > > >> > > > Any other ideas guys?
>>> > > > > >> > > >
>>> > > > > >> > > > Thanks,
>>>  > > > > >> > > >
>>> > > > > >> > > > Peter
>>> > > > > >> > > >
>>> > > > > >> > >
>>> > > > > >> > > This sounds like the problem I was having trying to 
>>> get the
>>> > > > > >> 3.2.2b unit
>>> > > > > >> > > tests to pass on FreeBSD. This was discussed on the 
>>> python-dev
>>> > > > > >> list
>>> > > > > >> > > around Sept 10.
>>> > > > > >> > >
>>> > > > > >> > > You can read the archive on gmane at
>>> > > > > >> > > 
>>> http://comments.gmane.org/gmane.comp.apache.mod-python.devel/1465
>>> > > > > >> > >
>>> > > > > >> > > Grisha suggested you can see this sort of problem on 
>>> FreeBSD
>>> > > > > >> where
>>> > > > > >> > > Python is threaded and Apache is not and offered the 
>>> following:
>>> > > > > >> > >
>>> > > > > >> > > If you built apache without thread support, you may 
>>> need to
>>> > > > > >> add the
>>> > > > > >> > > following lines to $PREFIX/sbin/envvars:
>>> > > > > >> > >
>>> > > > > >> > > LD_PRELOAD=/usr/lib/libc_r.so
>>> > > > > >> > > export LD_PRELOAD
>>> > > > > >> > >
>>> > > > > >> > > Regards,
>>> > > > > >> > > Jim
>>> > > > > >> > >
>>> > > > > >>
>>> > > > > >>
>>> > > > > >
>>> > > > > >
>>> > > > > >
>>> > > > > >
>>> > > > > > _______________________________________________
>>> > > > > > Mod_python mailing list
>>> > > > > > Mod_python@modpython.org
>>> > > > > > http://mailman.modpython.org/mailman/listinfo/mod_python
>>> > > > > >
>>> > > > >
>>> > > > >
>>> > >
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Fri Oct 14 23:07:47 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 14 23:08:26 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <257889b338dfb67202e53149ce6339cd@dscpl.com.au>
References: <bb84149f0510122300t11401bfdx668d2e6f1efa50cb@mail.gmail.com>
	<1129184157.8752@dscpl.user.openhosting.com>
	<bb84149f0510141124t230cada7tbd35f4286fe2b935@mail.gmail.com>
	<57eeb15d0db49afad51e44b384218129@dscpl.com.au>
	<257889b338dfb67202e53149ce6339cd@dscpl.com.au>
Message-ID: <35eb8c99f84f3f89b047ec8612d978fc@dscpl.com.au>


On 15/10/2005, at 12:58 PM, Graham Dumpleton wrote:

> Python's rules for determining the default PYTHON_PATH are stupid.
>
> Even when loaded from inside of Apache as part of mod_python, it seems
> to search PATH for a "python" executable. If it finds one it will 
> assume
> that that is the correct one and somehow base the PYTHON_PATH on that.
>
> I eliminated the "init" problem by simply ensuring that the version of
> Python I used to build mod_python was the first found in my path. As it
> was it was still finding the system default version of Python which
> had mod_python 3.1.4 installed. It therefore was loading mod_python
> modules from 3.1.4 and not 3.2.2 as installed in my separate copy of
> Python.

Should clarify that I am talking about the PATH in the environment when
Apache is being started/restarted. Ie., I was stopping/starting Apache
on the command line. Thus it was my personal user PATH environment which
was inherited by the "apachectl" program that was the problem.

This issue may explain away some prior cases where people were having
lots of problems getting mod_python to pick up the correct installed 
Python
code files for mod_python. :-(

Graham

From petersanchez at gmail.com  Sat Oct 15 00:34:12 2005
From: petersanchez at gmail.com (Peter Sanchez)
Date: Sat Oct 15 00:34:18 2005
Subject: [mod_python] PyThreadState_Delete: tstate is still current
In-Reply-To: <35eb8c99f84f3f89b047ec8612d978fc@dscpl.com.au>
References: <bb84149f0510122300t11401bfdx668d2e6f1efa50cb@mail.gmail.com>
	<1129184157.8752@dscpl.user.openhosting.com>
	<bb84149f0510141124t230cada7tbd35f4286fe2b935@mail.gmail.com>
	<57eeb15d0db49afad51e44b384218129@dscpl.com.au>
	<257889b338dfb67202e53149ce6339cd@dscpl.com.au>
	<35eb8c99f84f3f89b047ec8612d978fc@dscpl.com.au>
Message-ID: <bb84149f0510142134j25630c54r118d69d52be4bca7@mail.gmail.com>

That did it! I only had 1 instance of python installed, but I believe
it was the changes to cache.py that did the trick. No more errors and
it seems to be behaving just fine now!

I *really* appreciate all the effors you and Gregory put into this issue.

Thanks again!

Peter

On 10/14/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> On 15/10/2005, at 12:58 PM, Graham Dumpleton wrote:
>
> > Python's rules for determining the default PYTHON_PATH are stupid.
> >
> > Even when loaded from inside of Apache as part of mod_python, it seems
> > to search PATH for a "python" executable. If it finds one it will
> > assume
> > that that is the correct one and somehow base the PYTHON_PATH on that.
> >
> > I eliminated the "init" problem by simply ensuring that the version of
> > Python I used to build mod_python was the first found in my path. As it
> > was it was still finding the system default version of Python which
> > had mod_python 3.1.4 installed. It therefore was loading mod_python
> > modules from 3.1.4 and not 3.2.2 as installed in my separate copy of
> > Python.
>
> Should clarify that I am talking about the PATH in the environment when
> Apache is being started/restarted. Ie., I was stopping/starting Apache
> on the command line. Thus it was my personal user PATH environment which
> was inherited by the "apachectl" program that was the problem.
>
> This issue may explain away some prior cases where people were having
> lots of problems getting mod_python to pick up the correct installed
> Python
> code files for mod_python. :-(
>
> Graham
>
>

From Wim.Heirman at UGent.be  Sat Oct 15 08:37:51 2005
From: Wim.Heirman at UGent.be (Wim Heirman)
Date: Sat Oct 15 08:38:03 2005
Subject: [mod_python] Request.sendfile() and symlinks
Message-ID: <Pine.LNX.4.63.0510151431260.5850@trappist.elis.UGent.be>

Hello,

When I call req.sendfile(filename) where filename is a symbolic link, only 
part of the file is sent to the client (as many bytes as there are 
characters in the symlink's file reference, so for a symlink pointing to 
'../index.html' I get the first 13 bytes of the correct file). Is this 
normal behaviour?

Also, I would like to set the Content-Type correctly, based on the file 
I'm sending. Using the standard mimetypes package works fine, but is it 
possible to use Apache's mime-typing for this? Since the code for that is 
already loaded it should be a bit more efficient.

Regards,

Wim


-- 
ir. Wim Heirman,
ELIS Department, Ghent University, Belgium
Phone: +32-9-264.95.27
E-mail: wim.heirman@elis.UGent.be
http://www.elis.UGent.be/~wheirman/
From grahamd at dscpl.com.au  Sat Oct 15 09:16:33 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 15 09:16:44 2005
Subject: [mod_python] Request.sendfile() and symlinks
In-Reply-To: <Pine.LNX.4.63.0510151431260.5850@trappist.elis.UGent.be>
References: <Pine.LNX.4.63.0510151431260.5850@trappist.elis.UGent.be>
Message-ID: <0DE6FCE1-99B2-4AE7-ADB0-93F682C8420E@dscpl.com.au>

Can't look at it until tomorrow, but check code in src/ 
requestobject.c of mod_python
source code. The req_sendfile() may well have a bug in it as does a  
stat of  the
file to get the length and when it tells Apache to send the file it  
passes that length
to the underlying call as the number of bytes to send. If the stat  
call is being
performed on the symlink as it appears and not what it points at, the  
wrong length
would be used. The contents of the actual file will be sent though as  
the symlink
will be followed correctly at that point, just not enough is sent.

Maybe someone else can look at this while I get some sleep. ;-)

Graham

On 15/10/2005, at 10:37 PM, Wim Heirman wrote:

> Hello,
>
> When I call req.sendfile(filename) where filename is a symbolic  
> link, only part of the file is sent to the client (as many bytes as  
> there are characters in the symlink's file reference, so for a  
> symlink pointing to '../index.html' I get the first 13 bytes of the  
> correct file). Is this normal behaviour?
>
> Also, I would like to set the Content-Type correctly, based on the  
> file I'm sending. Using the standard mimetypes package works fine,  
> but is it possible to use Apache's mime-typing for this? Since the  
> code for that is already loaded it should be a bit more efficient.
>
> Regards,
>
> Wim
>
>
> -- 
> ir. Wim Heirman,
> ELIS Department, Ghent University, Belgium
> Phone: +32-9-264.95.27
> E-mail: wim.heirman@elis.UGent.be
> http://www.elis.UGent.be/~wheirman/
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From jg.lists at sympatico.ca  Sat Oct 15 09:40:51 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sat Oct 15 09:37:32 2005
Subject: [mod_python] Request.sendfile() and symlinks
In-Reply-To: <0DE6FCE1-99B2-4AE7-ADB0-93F682C8420E@dscpl.com.au>
References: <Pine.LNX.4.63.0510151431260.5850@trappist.elis.UGent.be>
	<0DE6FCE1-99B2-4AE7-ADB0-93F682C8420E@dscpl.com.au>
Message-ID: <435106E3.2090605@sympatico.ca>

Graham Dumpleton wrote:
> Can't look at it until tomorrow, but check code in src/ requestobject.c 
> of mod_python
> source code. The req_sendfile() may well have a bug in it as does a  
> stat of  the
> file to get the length and when it tells Apache to send the file it  
> passes that length
> to the underlying call as the number of bytes to send. If the stat  call 
> is being
> performed on the symlink as it appears and not what it points at, the  
> wrong length
> would be used. The contents of the actual file will be sent though as  
> the symlink
> will be followed correctly at that point, just not enough is sent.

This would seem to be the case, but I'm not sure it represents a bug in 
mod_python since it calls apr_stat() to get the finfo.

  status=apr_stat(&finfo, fname, APR_READ, self->request_rec->pool);

finfo.size is used if len is not specified as a parameter to req_sendfile().

If this is a bug in apr_stat() then perhaps we could use the python 
equivalent as a workaround.

As a temporary fix Wim could check the file size in his own code and use 
req.sendfile(filename, 0, size)

Regards,
Jim

> Maybe someone else can look at this while I get some sleep. ;-)
> 
> Graham
> 
> On 15/10/2005, at 10:37 PM, Wim Heirman wrote:
> 
>> Hello,
>>
>> When I call req.sendfile(filename) where filename is a symbolic  link, 
>> only part of the file is sent to the client (as many bytes as  there 
>> are characters in the symlink's file reference, so for a  symlink 
>> pointing to '../index.html' I get the first 13 bytes of the  correct 
>> file). Is this normal behaviour?
>>
>> Also, I would like to set the Content-Type correctly, based on the  
>> file I'm sending. Using the standard mimetypes package works fine,  
>> but is it possible to use Apache's mime-typing for this? Since the  
>> code for that is already loaded it should be a bit more efficient.
>>
>> Regards,
>>
>> Wim
>>
>>
>> -- 
>> ir. Wim Heirman,
>> ELIS Department, Ghent University, Belgium
>> Phone: +32-9-264.95.27
>> E-mail: wim.heirman@elis.UGent.be
>> http://www.elis.UGent.be/~wheirman/
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From Wim.Heirman at UGent.be  Sat Oct 15 10:04:20 2005
From: Wim.Heirman at UGent.be (Wim Heirman)
Date: Sat Oct 15 10:04:31 2005
Subject: [mod_python] Request.sendfile() and symlinks
In-Reply-To: <0DE6FCE1-99B2-4AE7-ADB0-93F682C8420E@dscpl.com.au>
References: <Pine.LNX.4.63.0510151431260.5850@trappist.elis.UGent.be>
	<0DE6FCE1-99B2-4AE7-ADB0-93F682C8420E@dscpl.com.au>
Message-ID: <Pine.LNX.4.63.0510151558230.7466@trappist.elis.UGent.be>

Ok, found it: in req_sendfile(), apr_stat is called with the APR_READ flag. 
APR_READ is however an invalid flag there, apr_stat interprets it as 
APR_FINFO_LINK (they're both #define'd as 1) making it behave as an 
lstat(). APR_FINFO_NORM would probably be the right value for the 3rd 
argument.


Regards,
Wim.


> Can't look at it until tomorrow, but check code in src/requestobject.c of 
> mod_python
> source code. The req_sendfile() may well have a bug in it as does a stat of 
> the
> file to get the length and when it tells Apache to send the file it passes 
> that length
> to the underlying call as the number of bytes to send. If the stat call is 
> being
> performed on the symlink as it appears and not what it points at, the wrong 
> length
> would be used. The contents of the actual file will be sent though as the 
> symlink
> will be followed correctly at that point, just not enough is sent.
>
> Maybe someone else can look at this while I get some sleep. ;-)
>
> Graham
>
> On 15/10/2005, at 10:37 PM, Wim Heirman wrote:
>
>> Hello,
>> 
>> When I call req.sendfile(filename) where filename is a symbolic link, only 
>> part of the file is sent to the client (as many bytes as there are 
>> characters in the symlink's file reference, so for a symlink pointing to 
>> '../index.html' I get the first 13 bytes of the correct file). Is this 
>> normal behaviour?
>> 
>> Also, I would like to set the Content-Type correctly, based on the file I'm 
>> sending. Using the standard mimetypes package works fine, but is it 
>> possible to use Apache's mime-typing for this? Since the code for that is 
>> already loaded it should be a bit more efficient.
>> 
>> Regards,
>> 
>> Wim
>> 
>> 
>> -- 
>> ir. Wim Heirman,
>> ELIS Department, Ghent University, Belgium
>> Phone: +32-9-264.95.27
>> E-mail: wim.heirman@elis.UGent.be
>> http://www.elis.UGent.be/~wheirman/
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>> 
>

-- 
ir. Wim Heirman,
ELIS Department, Ghent University, Belgium
Phone: +32-9-264.95.27
E-mail: wim.heirman@elis.UGent.be
http://www.elis.UGent.be/~wheirman/
From jg.lists at sympatico.ca  Sat Oct 15 11:31:39 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sat Oct 15 11:27:48 2005
Subject: [mod_python] Request.sendfile() and symlinks
In-Reply-To: <Pine.LNX.4.63.0510151558230.7466@trappist.elis.UGent.be>
References: <Pine.LNX.4.63.0510151431260.5850@trappist.elis.UGent.be>	<0DE6FCE1-99B2-4AE7-ADB0-93F682C8420E@dscpl.com.au>
	<Pine.LNX.4.63.0510151558230.7466@trappist.elis.UGent.be>
Message-ID: <435120DB.4040301@sympatico.ca>

Wim Heirman wrote:
> Ok, found it: in req_sendfile(), apr_stat is called with the APR_READ 
> flag. APR_READ is however an invalid flag there, apr_stat interprets it 
> as APR_FINFO_LINK (they're both #define'd as 1) making it behave as an 
> lstat(). APR_FINFO_NORM would probably be the right value for the 3rd 
> argument.

I've created a new issue for this:
http://issues.apache.org/jira/browse/MODPYTHON-84

Wim's suggestion corrects the problem for linux. Perhaps someone could 
check on Windows? apr_stat() is different on Windows and Unix. I'll 
commit the changes in the next couple of minutes.

Jim


>> Can't look at it until tomorrow, but check code in src/requestobject.c 
>> of mod_python
>> source code. The req_sendfile() may well have a bug in it as does a 
>> stat of the
>> file to get the length and when it tells Apache to send the file it 
>> passes that length
>> to the underlying call as the number of bytes to send. If the stat 
>> call is being
>> performed on the symlink as it appears and not what it points at, the 
>> wrong length
>> would be used. The contents of the actual file will be sent though as 
>> the symlink
>> will be followed correctly at that point, just not enough is sent.
>>
>> Maybe someone else can look at this while I get some sleep. ;-)
>>
>> Graham
>>
>> On 15/10/2005, at 10:37 PM, Wim Heirman wrote:
>>
>>> Hello,
>>>
>>> When I call req.sendfile(filename) where filename is a symbolic link, 
>>> only part of the file is sent to the client (as many bytes as there 
>>> are characters in the symlink's file reference, so for a symlink 
>>> pointing to '../index.html' I get the first 13 bytes of the correct 
>>> file). Is this normal behaviour?
>>>
>>> Also, I would like to set the Content-Type correctly, based on the 
>>> file I'm sending. Using the standard mimetypes package works fine, 
>>> but is it possible to use Apache's mime-typing for this? Since the 
>>> code for that is already loaded it should be a bit more efficient.
>>>
>>> Regards,
>>>
>>> Wim
>>>
>>>
>>> -- 
>>> ir. Wim Heirman,
>>> ELIS Department, Ghent University, Belgium
>>> Phone: +32-9-264.95.27
>>> E-mail: wim.heirman@elis.UGent.be
>>> http://www.elis.UGent.be/~wheirman/
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>
> 

From jcigar at ulb.ac.be  Sat Oct 15 14:28:10 2005
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Sat Oct 15 14:28:15 2005
Subject: [mod_python] database connection
Message-ID: <43514A3A.60902@ulb.ac.be>

Hello,

I use mod_python for some time now, and I wondered where's the best 
place to manage database connections / cursors ?
I run a home made 'publisher' handler and what I'm actually doing is to 
open a global database connection in the index.py, and pass this 
variable in classes ... is this the best way ?

a little example:

-> index.py:

import psycopg
from mod_python import apache

config = apache.import_module('config')
connection = psycopg.connect(config.getDbConnectionString())

def action1 (req):
 pageAction1 = apache.import_module('pages/action1')
 page = pageAction1.pageAction1(connection)
 return __render (req, 'action1')

def action2 (req):
 name = req.form.getfirst('name')
 pageAction2 = apache.import_module('pages/action2')
 page = pageAction2.pageAction2(connection, name)
 return __render (req, 'action2')

....

-> pages/action1.py:

class pageAction1:
 def __init__(self, conn):
   self.connection = conn
   self.cursor = conn.cursor()

 def getList(self, foo, bar):
   blah = self.cursor.execute('SELECT * FROM bleh')
   return self.cursor.dictfetchall()

...

(truncated for visibility ...)

Thanks
From fabianosidler at swissonline.ch  Sat Oct 15 19:43:04 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Sat Oct 15 19:43:16 2005
Subject: [mod_python] threading module within mod_python
In-Reply-To: <971F91B1-9B26-437A-8F16-D25CB9442048@dscpl.com.au>
References: <200510071204.14967.fabianosidler@swissonline.ch>
	<200510071528.14837.fabianosidler@swissonline.ch>
	<971F91B1-9B26-437A-8F16-D25CB9442048@dscpl.com.au>
Message-ID: <200510160143.04778.fabianosidler@swissonline.ch>

Ok, I'll postpone implementing threading to a later time. In fact, the most
important and interesting part of my work is the code above the server
anyway. ;)

Thank you for helping!
fips
From fabianosidler at swissonline.ch  Sat Oct 15 20:03:21 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Sat Oct 15 20:03:35 2005
Subject: [mod_python] mod_python imports foo/__init__.py, not foo/bar.py
Message-ID: <200510160203.21392.fabianosidler@swissonline.ch>

Hi folks!

When I try importing a module 'foo.bar', mod_python imports foo.__init__.py
instead of foo.bar! Why so?
Forgive me, if you think this is a silly question, but with Google I only
found unhelpful results.

Thanks,
fips
From grahamd at dscpl.com.au  Sat Oct 15 20:12:47 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 15 20:12:56 2005
Subject: [mod_python] mod_python imports foo/__init__.py, not foo/bar.py
In-Reply-To: <200510160203.21392.fabianosidler@swissonline.ch>
References: <200510160203.21392.fabianosidler@swissonline.ch>
Message-ID: <7072ea9297fe7f006e6a0180ca283194@dscpl.com.au>

See:

   http://www.python.org/doc/essays/packages.html

Specifically:

   What If I Have a Module and a Package With The Same Name?

   You may have a directory (on sys.path) which has both a module spam.py
   and a subdirectory spam that contains an __init__.py (without the
   __init__.py, a directory is not recognized as a package). In this 
case,
   the subdirectory has precedence, and importing spam will ignore the
   spam.py file, loading the package spam instead. If you want the module
   spam.py to have precedence, it must be placed in a directory that 
comes
   earlier in sys.path.

Graham

On 16/10/2005, at 10:03 AM, Fabiano Sidler wrote:

> Hi folks!
>
> When I try importing a module 'foo.bar', mod_python imports 
> foo.__init__.py
> instead of foo.bar! Why so?
> Forgive me, if you think this is a silly question, but with Google I 
> only
> found unhelpful results.
>
> Thanks,
> fips
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From fabianosidler at swissonline.ch  Sat Oct 15 20:24:29 2005
From: fabianosidler at swissonline.ch (Fabiano Sidler)
Date: Sat Oct 15 20:24:34 2005
Subject: [mod_python] mod_python imports foo/__init__.py, not foo/bar.py
In-Reply-To: <7072ea9297fe7f006e6a0180ca283194@dscpl.com.au>
References: <200510160203.21392.fabianosidler@swissonline.ch>
	<7072ea9297fe7f006e6a0180ca283194@dscpl.com.au>
Message-ID: <200510160224.29384.fabianosidler@swissonline.ch>

Wow, what a fast answer!

Graham Dumpleton wrote:
>    What If I Have a Module and a Package With The Same Name?

No, I have:
 foobar.py
 dir/foobar.py
which is surely inapt, but these two modules aren't imported to the same
script at the same time. And right now I found out that top-level modules
can be imported without problems (i.e. foobar).

Best wishes,
fips
From grahamd at dscpl.com.au  Sat Oct 15 20:40:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 15 20:41:02 2005
Subject: [mod_python] database connection
In-Reply-To: <43514A3A.60902@ulb.ac.be>
References: <43514A3A.60902@ulb.ac.be>
Message-ID: <f80779f56c6a120e5cee4a18c91c7127@dscpl.com.au>

A comment on something else in your example first.

> pageAction1 = apache.import_module('pages/action1')

I wouldn't rely rely on being able to specific '/' in the module name as
argument. The documentation only mentions that '.' can be used if
needing to reference a subcomponent of a package. What you are doing is
relying on a strange quirk of the implementation and in mod_python 3.3
if the module loading system is overhauled there may be no guarantee
that it would work the same. You could always campaign though that it
is a useful future that should be maintained but documented. :-)

BTW, does the "pages" directory actually have an "__init__.py" file. I
think what you are doing doesn't require it to, but wanted to check if
you do have it or not.

On 16/10/2005, at 4:28 AM, Julien Cigar wrote:

> Hello,
>
> I use mod_python for some time now, and I wondered where's the best  
> place to manage database connections / cursors ?
> I run a home made 'publisher' handler and what I'm actually doing is  
> to open a global database connection in the index.py, and pass this  
> variable in classes ... is this the best way ?
>
> a little example:
>
> -> index.py:
>
> import psycopg
> from mod_python import apache
>
> config = apache.import_module('config')
> connection = psycopg.connect(config.getDbConnectionString())

Some will say that such resource initialisation should be done from a
module imported using PythonImport. The argument is that such  
potentially
time consuming operations should be done at child process startup time.
This is really only is valid for Win32 "winnt" MPM. There are also other
problems with that approach, see:

    
http://www.modpython.org/pipermail/mod_python/2005-September/ 
019092.html

Some of the problems described in that link are pertinent to your case
as well. Ie., because you have done initialisation at module import  
time,
you only get one chance to do it. Thus you should consider only doing it
the first time that a request comes in that requires the resource. That
way you can deal with errors properly. You do though have to contend  
with
multithreading issues.

Further problems with doing resource initialisation in a request handler
module are that when the module is reloaded where PythonAutoReload is  
on,
the global data will be overwritten meaning your existing connection  
will
be lost. If it doesn't automatically disconnect properly when disposed
of, it will stay open and each reload will result in another connection
and thus waste of resources and database connections.

In mod_python.publisher in mod_python 3.2 module loading works a bit
differently and data will not be reloaded on top of the existing module
but into a new one. You still result though in the old connection being
lost and if it doesn't disconnect properly, similar problems.

Thus, it is preferable that resource allocation and the storage of the
handle be done in a Python module that is not imported using the module
loading system of mod_python but that "import" be used instead. Such a
module should preferably not be in the document tree but elsewhere on
the Python path. As described in the link above, use an access function
in that module which returns, and creates as necessary, the resource
handle.

There is one other idea I have been toying with as to how to store such
resource data to avoid some of these problems, but I'll leave that to
another day. Probably prefer to write that up as a mini article on my
web site. :-)

Graham

From grahamd at dscpl.com.au  Sat Oct 15 21:06:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 15 21:06:24 2005
Subject: [mod_python] mod_python imports foo/__init__.py, not foo/bar.py
In-Reply-To: <200510160224.29384.fabianosidler@swissonline.ch>
References: <200510160203.21392.fabianosidler@swissonline.ch>
	<7072ea9297fe7f006e6a0180ca283194@dscpl.com.au>
	<200510160224.29384.fabianosidler@swissonline.ch>
Message-ID: <91fbf1fa97b225af42da635b65d10588@dscpl.com.au>

On 16/10/2005, at 10:24 AM, Fabiano Sidler wrote:

> Wow, what a fast answer!
>
> Graham Dumpleton wrote:
>>    What If I Have a Module and a Package With The Same Name?
>
> No, I have:
>  foobar.py
>  dir/foobar.py
> which is surely inapt, but these two modules aren't imported to the 
> same
> script at the same time. And right now I found out that top-level 
> modules
> can be imported without problems (i.e. foobar).

Sorry, perhaps misread your question, the way you expressed the problem
was a bit confusing, so thought you were saying it was importing
foo/bar/__init__.py instead of foo/bar.py, which would be the package
import precedence rule coming into play.

Your original question is as below, perhaps you can clarify further what
the actual problem is, describing the context you are seeing it in. Have
mentioned a few points though.

> When I try importing a module 'foo.bar', mod_python imports 
> foo.__init__.py
> instead of foo.bar! Why so?

You say importing "foo.bar". Was this as:

   import foo.bar

If it is and "foo" is a package, Python will first import the file:

   foo/__init__.py

Having done that it will then import the file:

   foo/bar.py

It has to download packages starting at the root like this even though
you are after a subcomponent only. After the import, you could access
both the "foo" and "foo.bar" modules.

   foo.__dict__
   foor.bar.__dict__

Note that this presumes "bar" as a subcomponent of "foo" is in turn a
module. If it wasn't and "foo.bar" is something else, there should have
been an import error.

The linked document talks about how packages are loaded in this way.

Now in your followup you said:

> No, I have:
>  foobar.py
>  dir/foobar.py

This has just got me more confused about what the problem is as you are
mentioning files which would not be associated with "foo.bar". If I am
to make assumptions and assume that you are using mod_python.publisher
I might guess that you are running up against bug:

   http://issues.apache.org/jira/browse/MODPYTHON-9

This is where once you have access "foobar" in the subdirectory, it does
not reload "foobar" from the parent properly. This is fixed in 
mod_python
version 3.2.

Anyway, sorry again for confusion, was trying to be helpful and provide
some help on what was an unclear problem description. You might want to
try and be clearer about the problem then I might be able to give a
sensible answer. ;-)

Graham

From reed at intersiege.com  Sun Oct 16 03:39:53 2005
From: reed at intersiege.com (Reed L. O'Brien)
Date: Sun Oct 16 03:40:02 2005
Subject: [mod_python] RE: help in windows
Message-ID: <435203C9.8020303@intersiege.com>

I knew it was a typo.  I missed a directory in the Directive path....

~r

-- 
4.6692916090
'cmVlZG9icmllbkBnbWFpbC5jb20=\n'.decode('base64')
http://www.spreadfirefox.com/?q=affiliates&amp;id=16474&amp;t=1
keyID: 0x0FA09FCE

From jcigar at ulb.ac.be  Sun Oct 16 05:42:29 2005
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Sun Oct 16 05:42:47 2005
Subject: [mod_python] database connection
In-Reply-To: <f80779f56c6a120e5cee4a18c91c7127@dscpl.com.au>
References: <43514A3A.60902@ulb.ac.be>
	<f80779f56c6a120e5cee4a18c91c7127@dscpl.com.au>
Message-ID: <43522085.5050004@ulb.ac.be>

Graham Dumpleton wrote:

> A comment on something else in your example first.
>
>> pageAction1 = apache.import_module('pages/action1')
>
>
> I wouldn't rely rely on being able to specific '/' in the module name as
> argument. The documentation only mentions that '.' can be used if
> needing to reference a subcomponent of a package. What you are doing is
> relying on a strange quirk of the implementation and in mod_python 3.3
> if the module loading system is overhauled there may be no guarantee
> that it would work the same. You could always campaign though that it
> is a useful future that should be maintained but documented. :-)
>
> BTW, does the "pages" directory actually have an "__init__.py" file. I
> think what you are doing doesn't require it to, but wanted to check if
> you do have it or not.
>
My directory structure looks like this :
index.py
config.cfg
config.py
pages/page1.py
pages/page2.py
pages/page3.py
...

My "pages" directory doesn't contain an __init__.py file (should I ?)
I don't understand what's wrong with 
apache.import_module(pages/page1.py) .. ? I always done like this :)
Is it specific to mod_python ? I mean can you import pages/page1.py with 
the classic Pyhon import ?

> On 16/10/2005, at 4:28 AM, Julien Cigar wrote:
>
>> Hello,
>>
>> I use mod_python for some time now, and I wondered where's the best  
>> place to manage database connections / cursors ?
>> I run a home made 'publisher' handler and what I'm actually doing is  
>> to open a global database connection in the index.py, and pass this  
>> variable in classes ... is this the best way ?
>>
>> a little example:
>>
>> -> index.py:
>>
>> import psycopg
>> from mod_python import apache
>>
>> config = apache.import_module('config')
>> connection = psycopg.connect(config.getDbConnectionString())
>
>
> Some will say that such resource initialisation should be done from a
> module imported using PythonImport. The argument is that such  
> potentially
> time consuming operations should be done at child process startup time.
> This is really only is valid for Win32 "winnt" MPM. There are also other
> problems with that approach, see:
>
>    http://www.modpython.org/pipermail/mod_python/2005-September/ 
> 019092.html
>
> Some of the problems described in that link are pertinent to your case
> as well. Ie., because you have done initialisation at module import  
> time,
> you only get one chance to do it. Thus you should consider only doing it
> the first time that a request comes in that requires the resource. That
> way you can deal with errors properly. You do though have to contend  
> with
> multithreading issues.
>
> Further problems with doing resource initialisation in a request handler
> module are that when the module is reloaded where PythonAutoReload is  
> on,
> the global data will be overwritten meaning your existing connection  
> will
> be lost. If it doesn't automatically disconnect properly when disposed
> of, it will stay open and each reload will result in another connection
> and thus waste of resources and database connections.
>
Right ... I haven't thought at this

> In mod_python.publisher in mod_python 3.2 module loading works a bit
> differently and data will not be reloaded on top of the existing module
> but into a new one. You still result though in the old connection being
> lost and if it doesn't disconnect properly, similar problems.
>
> Thus, it is preferable that resource allocation and the storage of the
> handle be done in a Python module that is not imported using the module
> loading system of mod_python but that "import" be used instead. Such a
> module should preferably not be in the document tree but elsewhere on
> the Python path. As described in the link above, use an access function
> in that module which returns, and creates as necessary, the resource
> handle.
>
ok I'll try this.. I haven't yet played with apache.register_cleanup(), 
that will be the occasion to do it :)

> There is one other idea I have been toying with as to how to store such
> resource data to avoid some of these problems, but I'll leave that to
> another day. Probably prefer to write that up as a mini article on my
> web site. :-)
>
great :)
Thanks for support !

> Graham
>

From grahamd at dscpl.com.au  Sun Oct 16 06:26:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 16 06:26:13 2005
Subject: [mod_python] database connection
In-Reply-To: <43522085.5050004@ulb.ac.be>
References: <43514A3A.60902@ulb.ac.be>
	<f80779f56c6a120e5cee4a18c91c7127@dscpl.com.au>
	<43522085.5050004@ulb.ac.be>
Message-ID: <5fb7a759a7dab5341506598270a59cf1@dscpl.com.au>


On 16/10/2005, at 7:42 PM, Julien Cigar wrote:

> Graham Dumpleton wrote:
>
>> A comment on something else in your example first.
>>
>>> pageAction1 = apache.import_module('pages/action1')
>>
>>
>> I wouldn't rely rely on being able to specific '/' in the module name 
>> as
>> argument. The documentation only mentions that '.' can be used if
>> needing to reference a subcomponent of a package. What you are doing 
>> is
>> relying on a strange quirk of the implementation and in mod_python 3.3
>> if the module loading system is overhauled there may be no guarantee
>> that it would work the same. You could always campaign though that it
>> is a useful future that should be maintained but documented. :-)
>>
>> BTW, does the "pages" directory actually have an "__init__.py" file. I
>> think what you are doing doesn't require it to, but wanted to check if
>> you do have it or not.
>>
> My directory structure looks like this :
> index.py
> config.cfg
> config.py
> pages/page1.py
> pages/page2.py
> pages/page3.py
> ...
>
> My "pages" directory doesn't contain an __init__.py file (should I ?)
> I don't understand what's wrong with 
> apache.import_module(pages/page1.py) .. ? I always done like this :)
> Is it specific to mod_python ? I mean can you import pages/page1.py 
> with the classic Pyhon import ?

You can't use '/' when using the "import" statement in classic Python.
Ie., can't do:

   import pages/page1

You can use '.', ie.,

   import pages.page1

But then this is a package import and the "pages" directory needs to be
set up as a package, ie., it must contain an "__init__.py" file in it,
even if "__init__.py" has nothing in it.

Similarly, if you use the __import__ builtin function, you can't use 
'/',
ie., can't do:

   page1 = __import__("pages/page1")

but can do:

   page1 = __import__("pages.page1")

In other words, that you can specify a '/' like you are is quite 
specific
to the current mod_python implementation of apache.import_module(). 
Well,
that is what I thought ......

At this point I am a bit confused as I can't find anything in the 
mod_python
code which would even allow '/' to work. When I even try using it on my
platform, Python throws an exception:

   ImportError: No module named pages/page1

What version of mod_python are you using, what version of Python and 
what
platform? I don't understand how it could be working for you.

Graham

From jcigar at ulb.ac.be  Sun Oct 16 07:05:11 2005
From: jcigar at ulb.ac.be (Julien Cigar)
Date: Sun Oct 16 07:05:18 2005
Subject: [mod_python] database connection
In-Reply-To: <5fb7a759a7dab5341506598270a59cf1@dscpl.com.au>
References: <43514A3A.60902@ulb.ac.be>
	<f80779f56c6a120e5cee4a18c91c7127@dscpl.com.au>
	<43522085.5050004@ulb.ac.be>
	<5fb7a759a7dab5341506598270a59cf1@dscpl.com.au>
Message-ID: <435233E7.7020707@ulb.ac.be>

Graham Dumpleton wrote:

>
> On 16/10/2005, at 7:42 PM, Julien Cigar wrote:
>
>> Graham Dumpleton wrote:
>>
>>> A comment on something else in your example first.
>>>
>>>> pageAction1 = apache.import_module('pages/action1')
>>>
>>>
>>>
>>> I wouldn't rely rely on being able to specific '/' in the module 
>>> name as
>>> argument. The documentation only mentions that '.' can be used if
>>> needing to reference a subcomponent of a package. What you are doing is
>>> relying on a strange quirk of the implementation and in mod_python 3.3
>>> if the module loading system is overhauled there may be no guarantee
>>> that it would work the same. You could always campaign though that it
>>> is a useful future that should be maintained but documented. :-)
>>>
>>> BTW, does the "pages" directory actually have an "__init__.py" file. I
>>> think what you are doing doesn't require it to, but wanted to check if
>>> you do have it or not.
>>>
>> My directory structure looks like this :
>> index.py
>> config.cfg
>> config.py
>> pages/page1.py
>> pages/page2.py
>> pages/page3.py
>> ...
>>
>> My "pages" directory doesn't contain an __init__.py file (should I ?)
>> I don't understand what's wrong with 
>> apache.import_module(pages/page1.py) .. ? I always done like this :)
>> Is it specific to mod_python ? I mean can you import pages/page1.py 
>> with the classic Pyhon import ?
>
>
> You can't use '/' when using the "import" statement in classic Python.
> Ie., can't do:
>
>   import pages/page1
>
> You can use '.', ie.,
>
>   import pages.page1
>
> But then this is a package import and the "pages" directory needs to be
> set up as a package, ie., it must contain an "__init__.py" file in it,
> even if "__init__.py" has nothing in it.
>
> Similarly, if you use the __import__ builtin function, you can't use '/',
> ie., can't do:
>
>   page1 = __import__("pages/page1")
>
> but can do:
>
>   page1 = __import__("pages.page1")
>
> In other words, that you can specify a '/' like you are is quite specific
> to the current mod_python implementation of apache.import_module(). Well,
> that is what I thought ......
>
> At this point I am a bit confused as I can't find anything in the 
> mod_python
> code which would even allow '/' to work. When I even try using it on my
> platform, Python throws an exception:
>
>   ImportError: No module named pages/page1
>
> What version of mod_python are you using, what version of Python and what
> platform? I don't understand how it could be working for you.
>
> Graham
>
I'm using mod_python version 3.1.3 on a Debian Linux platform (kernel 
2.6.12) with Python 2.3
A small piece of my code can be found on 
http://rafb.net/paste/results/9sjUSi95.html


From grahamd at dscpl.com.au  Sun Oct 16 07:15:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 16 07:16:05 2005
Subject: [mod_python] database connection
In-Reply-To: <435233E7.7020707@ulb.ac.be>
References: <43514A3A.60902@ulb.ac.be>
	<f80779f56c6a120e5cee4a18c91c7127@dscpl.com.au>
	<43522085.5050004@ulb.ac.be>
	<5fb7a759a7dab5341506598270a59cf1@dscpl.com.au>
	<435233E7.7020707@ulb.ac.be>
Message-ID: <260d4bc9a723e51bbac503df8ec32361@dscpl.com.au>


On 16/10/2005, at 9:05 PM, Julien Cigar wrote:

>> In other words, that you can specify a '/' like you are is quite 
>> specific
>> to the current mod_python implementation of apache.import_module(). 
>> Well,
>> that is what I thought ......
>>
>> At this point I am a bit confused as I can't find anything in the 
>> mod_python
>> code which would even allow '/' to work. When I even try using it on 
>> my
>> platform, Python throws an exception:
>>
>>   ImportError: No module named pages/page1
>>
>> What version of mod_python are you using, what version of Python and 
>> what
>> platform? I don't understand how it could be working for you.
>>
> I'm using mod_python version 3.1.3 on a Debian Linux platform (kernel 
> 2.6.12) with Python 2.3
> A small piece of my code can be found on 
> http://rafb.net/paste/results/9sjUSi95.html

Interesting. I just got onto a Linux system as well and tried __import__
and it does actually work for '/'. Ie.,

Python 2.3.3 (#1, May  7 2004, 10:31:40)
[GCC 3.3.3 20040412 (Red Hat Linux 3.3.3-7)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
 >>> __import__('pages/page1')
hi
<module 'pages/page1' from 'pages/page1.pyc'>
 >>> __import__('pages.page1')
hi
<module 'pages' from 'pages/__init__.pyc'>

Yet the same thing on Mac OS X doesn't work:

Python 2.3 (#1, Sep 13 2003, 00:49:11)
[GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
 >>> __import__('pages/page1')
Traceback (most recent call last):
   File "<stdin>", line 1, in ?
ImportError: No module named pages/page1
 >>> __import__('pages.page1')
page1
<module 'pages' from 'pages/__init__.pyc'>

Looks like it may work for you on Linux, but doesn't look like it is 
going
to be portable to other platforms.

Will be interesting to see what other platforms do.

Graham

From jg.lists at sympatico.ca  Sun Oct 16 10:22:46 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Sun Oct 16 10:16:13 2005
Subject: [mod_python] database connection
In-Reply-To: <260d4bc9a723e51bbac503df8ec32361@dscpl.com.au>
References: <43514A3A.60902@ulb.ac.be>	<f80779f56c6a120e5cee4a18c91c7127@dscpl.com.au>	<43522085.5050004@ulb.ac.be>	<5fb7a759a7dab5341506598270a59cf1@dscpl.com.au>	<435233E7.7020707@ulb.ac.be>
	<260d4bc9a723e51bbac503df8ec32361@dscpl.com.au>
Message-ID: <43526236.1030105@sympatico.ca>

Graham Dumpleton wrote:
> 
> On 16/10/2005, at 9:05 PM, Julien Cigar wrote:
> 
>>> In other words, that you can specify a '/' like you are is quite 
>>> specific
>>> to the current mod_python implementation of apache.import_module(). 
>>> Well,
>>> that is what I thought ......
>>>
>>> At this point I am a bit confused as I can't find anything in the 
>>> mod_python
>>> code which would even allow '/' to work. When I even try using it on my
>>> platform, Python throws an exception:
>>>
>>>   ImportError: No module named pages/page1
>>>
>>> What version of mod_python are you using, what version of Python and 
>>> what
>>> platform? I don't understand how it could be working for you.
>>>
>> I'm using mod_python version 3.1.3 on a Debian Linux platform (kernel 
>> 2.6.12) with Python 2.3
>> A small piece of my code can be found on 
>> http://rafb.net/paste/results/9sjUSi95.html
> 
> 
> Interesting. I just got onto a Linux system as well and tried __import__
> and it does actually work for '/'. Ie.,
> 
> Python 2.3.3 (#1, May  7 2004, 10:31:40)
> [GCC 3.3.3 20040412 (Red Hat Linux 3.3.3-7)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
>  >>> __import__('pages/page1')
> hi
> <module 'pages/page1' from 'pages/page1.pyc'>
>  >>> __import__('pages.page1')
> hi
> <module 'pages' from 'pages/__init__.pyc'>
> 
> Yet the same thing on Mac OS X doesn't work:
> 
> Python 2.3 (#1, Sep 13 2003, 00:49:11)
> [GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
> Type "help", "copyright", "credits" or "license" for more information.
>  >>> __import__('pages/page1')
> Traceback (most recent call last):
>   File "<stdin>", line 1, in ?
> ImportError: No module named pages/page1
>  >>> __import__('pages.page1')
> page1
> <module 'pages' from 'pages/__init__.pyc'>
> 
> Looks like it may work for you on Linux, but doesn't look like it is going
> to be portable to other platforms.
> 
> Will be interesting to see what other platforms do.

FreeBSD 5.4:

Python 2.4.1 (#2, Jul  7 2005, 19:02:14)
[GCC 3.4.2 [FreeBSD] 20040728] on freebsd5
Type "help", "copyright", "credits" or "license" for more information.
 >>> __import__('pages/page1')
<module 'pages/page1' from 'pages/page1.py'>

Python 2.4.1 (#2, Jul  7 2005, 19:02:14)
[GCC 3.4.2 [FreeBSD] 20040728] on freebsd5
Type "help", "copyright", "credits" or "license" for more information.
 >>> __import__('pages.page1')
<module 'pages' from 'pages/__init__.py'>


Jim


From nferrier at tapsellferrier.co.uk  Sun Oct 16 19:43:28 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Sun Oct 16 19:51:37 2005
Subject: [mod_python] apache log handler
Message-ID: <87psq5hvtr.fsf@kanga.tapsellferrier.co.uk>

Does mod_python have a standard interface between python logging and
Apache's logging? 

I can't see one included in the dist. I know lots of other people have
written one. I've written one.

If there isn't one why isn't there one?


Nic Ferrier


PS for what it's worth here's mine:

# A log handler for mod-python

from mod_python import apache
import logging


class ProxyLogThing:
    """A proxy for default Apache logging."""

    def __init__(self):
        # No need to do anything.

    def log_error(msg, lvl):
        apache.log_error(msg, lvl)


class ApacheLogHandler(logging.Handler):
    """A handler class which sends all logging to Apache."""

    def __init__(self, ref = None):
        """
        Initialize the handler (does nothing)
        """
        logging.Handler.__init__(self)

        if ref == None:
            self.ref = ProxyLogThing()
        else:
            self.ref = ref

        # Set up the thing
        self.level_mapping = { logging.CRITICAL: apache.APLOG.CRIT,
                               logging.ERROR: apache.APLOG_ERR,
                               logging.WARNING: apache.APLOG_WARNING,
                               logging.INFO: apache.APLOG_INFO,
                               logging.debug: apache.APLOG_DEBUG }

    def emit(self, record):
        """Emit a record."""
        self.ref.log_error(record.msg, record.lvl)

# End
From nferrier at tapsellferrier.co.uk  Sun Oct 16 20:33:47 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Sun Oct 16 20:41:36 2005
Subject: [mod_python] apache log handler
In-Reply-To: <87psq5hvtr.fsf@kanga.tapsellferrier.co.uk> (Nic Ferrier's
	message of "Mon, 17 Oct 2005 00:43:28 +0100")
References: <87psq5hvtr.fsf@kanga.tapsellferrier.co.uk>
Message-ID: <87k6gdhthw.fsf@kanga.tapsellferrier.co.uk>

Nic Ferrier <nferrier@tapsellferrier.co.uk> writes:

> PS for what it's worth here's mine:

Whoops! Here's an altered one that actually works:


# A log handler for mod-python

from mod_python import apache
import logging


class ProxyLogThing:
    """A proxy for default Apache logging."""

    def __init__(self):
        # No need to do anything.

    def log_error(msg, lvl):
        apache.log_error(msg, lvl)


class ApacheLogHandler(logging.Handler):
    """A handler class which sends all logging to Apache."""

    def __init__(self, ref = None):
        """
        Initialize the handler (does nothing)
        """
        logging.Handler.__init__(self)

        if ref == None:
            self.ref = ProxyLogThing()
        else:
            self.ref = ref

        # Set up the logging level
        self.level_mapping = { }
        self.level_mapping[logging.ERROR] = apache.APLOG_ERR
        self.level_mapping[logging.WARNING] = apache.APLOG_WARNING
        self.level_mapping[logging.INFO] = apache.APLOG_INFO
        self.level_mapping[logging.debug] = apache.APLOG_DEBUG

    def emit(self, record):
        """Emit a record."""
        self.ref.log_error(record.msg, record.lvl)

# End
From grahamd at dscpl.com.au  Sun Oct 16 20:41:53 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 16 20:41:58 2005
Subject: [mod_python] apache log handler
Message-ID: <1129509713.27384@dscpl.user.openhosting.com>

Such things probably haven't been added for a couple of reasons.

The first is that mod_python up to 3.1.4 worked with older versions of
Python such as 2.2, but the "logging" module didn't exist in those older
versions of Python. With mod_python 3.2 there is opportunity to use
newer features as Python 2.3 or later will be a requirement, but ....

Second is that the intention is that mod_python be good at its core
functionality and not accumulate a lot of extra baggage. Given that the
logging interface is simple enough that users can write their own and
given that logging interfaces are often customised to specific
applications and therefore a generic one may not always be suitable
anyway, I am sure that some will argue that it shouldn't be in
mod_python.

What I might suggest is that you post up your code as an example on
the Python cookbook site.

  http://aspn.activestate.com/ASPN/Python/Cookbook/

Graham

Nic Ferrier wrote ..
> Does mod_python have a standard interface between python logging and
> Apache's logging? 
> 
> I can't see one included in the dist. I know lots of other people have
> written one. I've written one.
> 
> If there isn't one why isn't there one?
> 
> 
> Nic Ferrier
> 
> 
> PS for what it's worth here's mine:
> 
> # A log handler for mod-python
> 
> from mod_python import apache
> import logging
> 
> 
> class ProxyLogThing:
>     """A proxy for default Apache logging."""
> 
>     def __init__(self):
>         # No need to do anything.
> 
>     def log_error(msg, lvl):
>         apache.log_error(msg, lvl)
> 
> 
> class ApacheLogHandler(logging.Handler):
>     """A handler class which sends all logging to Apache."""
> 
>     def __init__(self, ref = None):
>         """
>         Initialize the handler (does nothing)
>         """
>         logging.Handler.__init__(self)
> 
>         if ref == None:
>             self.ref = ProxyLogThing()
>         else:
>             self.ref = ref
> 
>         # Set up the thing
>         self.level_mapping = { logging.CRITICAL: apache.APLOG.CRIT,
>                                logging.ERROR: apache.APLOG_ERR,
>                                logging.WARNING: apache.APLOG_WARNING,
>                                logging.INFO: apache.APLOG_INFO,
>                                logging.debug: apache.APLOG_DEBUG }
> 
>     def emit(self, record):
>         """Emit a record."""
>         self.ref.log_error(record.msg, record.lvl)
> 
> # End
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From gavin at sz.net.cn  Mon Oct 17 03:06:23 2005
From: gavin at sz.net.cn (Gavin)
Date: Mon Oct 17 03:06:46 2005
Subject: [mod_python] Re: Mod_python Digest, Vol 31, Issue 32
References: <200510161600.j9GG0Cpq023431@modpython.org>
Message-ID: <07d401c5d2e9$485bdd00$791ea8c0@frank>

Hello all, 

I  plan to develop an HTTP API for my application. How to change HTTP 
status code and HTTP reason message?

Thanks in advance!

Sincerely

Frank Ning



----- Original Message ----- 
From: <mod_python-request@modpython.org>
To: <mod_python@modpython.org>
Sent: Monday, October 17, 2005 12:00 AM
Subject: Mod_python Digest, Vol 31, Issue 32


> Send Mod_python mailing list submissions to
> mod_python@modpython.org
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> http://mailman.modpython.org/mailman/listinfo/mod_python
> or, via email, send a message with subject or body 'help' to
> mod_python-request@modpython.org
> 
> You can reach the person managing the list at
> mod_python-owner@modpython.org
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of Mod_python digest..."
> 
> 
> Today's Topics:
> 
>   1. Re: database connection (Julien Cigar)
>   2. Re: database connection (Graham Dumpleton)
>   3. Re: database connection (Jim Gallacher)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Sun, 16 Oct 2005 13:05:11 +0200
> From: Julien Cigar <jcigar@ulb.ac.be>
> Subject: Re: [mod_python] database connection
> To: mod_python@modpython.org
> Message-ID: <435233E7.7020707@ulb.ac.be>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> Graham Dumpleton wrote:
> 
>>
>> On 16/10/2005, at 7:42 PM, Julien Cigar wrote:
>>
>>> Graham Dumpleton wrote:
>>>
>>>> A comment on something else in your example first.
>>>>
>>>>> pageAction1 = apache.import_module('pages/action1')
>>>>
>>>>
>>>>
>>>> I wouldn't rely rely on being able to specific '/' in the module 
>>>> name as
>>>> argument. The documentation only mentions that '.' can be used if
>>>> needing to reference a subcomponent of a package. What you are doing is
>>>> relying on a strange quirk of the implementation and in mod_python 3.3
>>>> if the module loading system is overhauled there may be no guarantee
>>>> that it would work the same. You could always campaign though that it
>>>> is a useful future that should be maintained but documented. :-)
>>>>
>>>> BTW, does the "pages" directory actually have an "__init__.py" file. I
>>>> think what you are doing doesn't require it to, but wanted to check if
>>>> you do have it or not.
>>>>
>>> My directory structure looks like this :
>>> index.py
>>> config.cfg
>>> config.py
>>> pages/page1.py
>>> pages/page2.py
>>> pages/page3.py
>>> ...
>>>
>>> My "pages" directory doesn't contain an __init__.py file (should I ?)
>>> I don't understand what's wrong with 
>>> apache.import_module(pages/page1.py) .. ? I always done like this :)
>>> Is it specific to mod_python ? I mean can you import pages/page1.py 
>>> with the classic Pyhon import ?
>>
>>
>> You can't use '/' when using the "import" statement in classic Python.
>> Ie., can't do:
>>
>>   import pages/page1
>>
>> You can use '.', ie.,
>>
>>   import pages.page1
>>
>> But then this is a package import and the "pages" directory needs to be
>> set up as a package, ie., it must contain an "__init__.py" file in it,
>> even if "__init__.py" has nothing in it.
>>
>> Similarly, if you use the __import__ builtin function, you can't use '/',
>> ie., can't do:
>>
>>   page1 = __import__("pages/page1")
>>
>> but can do:
>>
>>   page1 = __import__("pages.page1")
>>
>> In other words, that you can specify a '/' like you are is quite specific
>> to the current mod_python implementation of apache.import_module(). Well,
>> that is what I thought ......
>>
>> At this point I am a bit confused as I can't find anything in the 
>> mod_python
>> code which would even allow '/' to work. When I even try using it on my
>> platform, Python throws an exception:
>>
>>   ImportError: No module named pages/page1
>>
>> What version of mod_python are you using, what version of Python and what
>> platform? I don't understand how it could be working for you.
>>
>> Graham
>>
> I'm using mod_python version 3.1.3 on a Debian Linux platform (kernel 
> 2.6.12) with Python 2.3
> A small piece of my code can be found on 
> http://rafb.net/paste/results/9sjUSi95.html
> 
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Sun, 16 Oct 2005 21:15:50 +1000
> From: Graham Dumpleton <grahamd@dscpl.com.au>
> Subject: Re: [mod_python] database connection
> To: Julien Cigar <jcigar@ulb.ac.be>
> Cc: mod_python@modpython.org
> Message-ID: <260d4bc9a723e51bbac503df8ec32361@dscpl.com.au>
> Content-Type: text/plain; charset=US-ASCII; format=flowed
> 
> 
> On 16/10/2005, at 9:05 PM, Julien Cigar wrote:
> 
>>> In other words, that you can specify a '/' like you are is quite 
>>> specific
>>> to the current mod_python implementation of apache.import_module(). 
>>> Well,
>>> that is what I thought ......
>>>
>>> At this point I am a bit confused as I can't find anything in the 
>>> mod_python
>>> code which would even allow '/' to work. When I even try using it on 
>>> my
>>> platform, Python throws an exception:
>>>
>>>   ImportError: No module named pages/page1
>>>
>>> What version of mod_python are you using, what version of Python and 
>>> what
>>> platform? I don't understand how it could be working for you.
>>>
>> I'm using mod_python version 3.1.3 on a Debian Linux platform (kernel 
>> 2.6.12) with Python 2.3
>> A small piece of my code can be found on 
>> http://rafb.net/paste/results/9sjUSi95.html
> 
> Interesting. I just got onto a Linux system as well and tried __import__
> and it does actually work for '/'. Ie.,
> 
> Python 2.3.3 (#1, May  7 2004, 10:31:40)
> [GCC 3.3.3 20040412 (Red Hat Linux 3.3.3-7)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
> >>> __import__('pages/page1')
> hi
> <module 'pages/page1' from 'pages/page1.pyc'>
> >>> __import__('pages.page1')
> hi
> <module 'pages' from 'pages/__init__.pyc'>
> 
> Yet the same thing on Mac OS X doesn't work:
> 
> Python 2.3 (#1, Sep 13 2003, 00:49:11)
> [GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
> Type "help", "copyright", "credits" or "license" for more information.
> >>> __import__('pages/page1')
> Traceback (most recent call last):
>   File "<stdin>", line 1, in ?
> ImportError: No module named pages/page1
> >>> __import__('pages.page1')
> page1
> <module 'pages' from 'pages/__init__.pyc'>
> 
> Looks like it may work for you on Linux, but doesn't look like it is 
> going
> to be portable to other platforms.
> 
> Will be interesting to see what other platforms do.
> 
> Graham
> 
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Sun, 16 Oct 2005 10:22:46 -0400
> From: Jim Gallacher <jg.lists@sympatico.ca>
> Subject: Re: [mod_python] database connection
> To: Graham Dumpleton <grahamd@dscpl.com.au>
> Cc: mod_python@modpython.org
> Message-ID: <43526236.1030105@sympatico.ca>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> Graham Dumpleton wrote:
>> 
>> On 16/10/2005, at 9:05 PM, Julien Cigar wrote:
>> 
>>>> In other words, that you can specify a '/' like you are is quite 
>>>> specific
>>>> to the current mod_python implementation of apache.import_module(). 
>>>> Well,
>>>> that is what I thought ......
>>>>
>>>> At this point I am a bit confused as I can't find anything in the 
>>>> mod_python
>>>> code which would even allow '/' to work. When I even try using it on my
>>>> platform, Python throws an exception:
>>>>
>>>>   ImportError: No module named pages/page1
>>>>
>>>> What version of mod_python are you using, what version of Python and 
>>>> what
>>>> platform? I don't understand how it could be working for you.
>>>>
>>> I'm using mod_python version 3.1.3 on a Debian Linux platform (kernel 
>>> 2.6.12) with Python 2.3
>>> A small piece of my code can be found on 
>>> http://rafb.net/paste/results/9sjUSi95.html
>> 
>> 
>> Interesting. I just got onto a Linux system as well and tried __import__
>> and it does actually work for '/'. Ie.,
>> 
>> Python 2.3.3 (#1, May  7 2004, 10:31:40)
>> [GCC 3.3.3 20040412 (Red Hat Linux 3.3.3-7)] on linux2
>> Type "help", "copyright", "credits" or "license" for more information.
>>  >>> __import__('pages/page1')
>> hi
>> <module 'pages/page1' from 'pages/page1.pyc'>
>>  >>> __import__('pages.page1')
>> hi
>> <module 'pages' from 'pages/__init__.pyc'>
>> 
>> Yet the same thing on Mac OS X doesn't work:
>> 
>> Python 2.3 (#1, Sep 13 2003, 00:49:11)
>> [GCC 3.3 20030304 (Apple Computer, Inc. build 1495)] on darwin
>> Type "help", "copyright", "credits" or "license" for more information.
>>  >>> __import__('pages/page1')
>> Traceback (most recent call last):
>>   File "<stdin>", line 1, in ?
>> ImportError: No module named pages/page1
>>  >>> __import__('pages.page1')
>> page1
>> <module 'pages' from 'pages/__init__.pyc'>
>> 
>> Looks like it may work for you on Linux, but doesn't look like it is going
>> to be portable to other platforms.
>> 
>> Will be interesting to see what other platforms do.
> 
> FreeBSD 5.4:
> 
> Python 2.4.1 (#2, Jul  7 2005, 19:02:14)
> [GCC 3.4.2 [FreeBSD] 20040728] on freebsd5
> Type "help", "copyright", "credits" or "license" for more information.
> >>> __import__('pages/page1')
> <module 'pages/page1' from 'pages/page1.py'>
> 
> Python 2.4.1 (#2, Jul  7 2005, 19:02:14)
> [GCC 3.4.2 [FreeBSD] 20040728] on freebsd5
> Type "help", "copyright", "credits" or "license" for more information.
> >>> __import__('pages.page1')
> <module 'pages' from 'pages/__init__.py'>
> 
> 
> Jim
> 
> 
> 
> 
> ------------------------------
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> End of Mod_python Digest, Vol 31, Issue 32
> ******************************************
>

From python_it at hotmail.com  Mon Oct 17 06:51:00 2005
From: python_it at hotmail.com (python_it@hotmail.com)
Date: Mon Oct 17 06:51:07 2005
Subject: [mod_python] upload pop-up
Message-ID: <BAY17-F5DB9FBC026E2BF489CD98997E0@phx.gbl>

I?m trying to upload files with the following files/scripts:
When I?m testing my upload.htm in IE (windows) and click on my
Submit buttion a popup windows appears with the function to save or open
upload.py?

Ohter scripts works fine! No pop-up windows appears.

Help?

upload.htm
=======
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Untitled Document</title>
</head>

<body>
  <form action="modules/upload.py" method="post" 
enctype="multipart/form-data" name="Uploadform" target="_self" 
id="Uploadform">
  <input type="file" name="file" />
  <input type="submit" name="submit" value="Submit" />
</form>
</body>
</html>


upload.py
=======
from mod_python import psp,util

def index(req, file=None):
	req.content_type = 'multipart/form-data'
	tmpl = psp.PSP(req, filename='templates/upload.tmpl', vars={'req': req, 
'psp': psp, 'file': file})
	tmpl.run()


upload.tmpl
==========
<html>
%>
def getFile(file):
    if file is None:   # There was no file sent.
        return "Error! There was no file!"
    if type(file) is str:
	# File was sent as a regular field, which is bad.
        return "Error! File was a string!"
    fileData = file.read()    # Get the file data into a Python variable.
	req.write("DONE")
    return "Ok, file received."

getFile(file)
%>
</html>

_________________________________________________________________
Stuur een voiceclip met MSN Messenger 7.5 
http://www1.imagine-msn.com/Messenger/Video.aspx

From Wim.Heirman at UGent.be  Mon Oct 17 07:10:06 2005
From: Wim.Heirman at UGent.be (Wim Heirman)
Date: Mon Oct 17 07:10:16 2005
Subject: [mod_python] upload pop-up
In-Reply-To: <BAY17-F5DB9FBC026E2BF489CD98997E0@phx.gbl>
References: <BAY17-F5DB9FBC026E2BF489CD98997E0@phx.gbl>
Message-ID: <4353868E.4050603@elis.ugent.be>

> upload.py
> =======
> from mod_python import psp,util
>
> def index(req, file=None):
>     req.content_type = 'multipart/form-data'
>     tmpl = psp.PSP(req, filename='templates/upload.tmpl', vars={'req':
> req, 'psp': psp, 'file': file})
>     tmpl.run()

You should set req.content_type to text/html, otherwise IE thinks the
output of upload.py is in some format it can't display -- in which case
it shows the 'Open With or Save' dialog.

Regards,
Wim.


-- 
ir. Wim Heirman,
ELIS Department, Ghent University, Belgium
Phone: +32-9-264.95.27
E-mail: wim.heirman@elis.UGent.be
http://www.elis.UGent.be/~wheirman/
From python_it at hotmail.com  Mon Oct 17 08:33:26 2005
From: python_it at hotmail.com (WR -)
Date: Mon Oct 17 08:33:49 2005
Subject: [mod_python] Mod_python Charts
Message-ID: <BAY17-F16AE214DEEBE8717E30E48997E0@phx.gbl>

My script is not working yet.

I have make a other simple example:

index.htm
====
<p><a href="modules/write.py">test</a></p>

write.py
====
from mod_python import psp

def index(req):
	req.content_type = 'text/html'
	tmpl = psp.PSP(req, filename='templates/write.tmpl', vars={'req': req, 
'psp': psp})
	tmpl.run()


write.tmpl
====
<%
def lezen(inputfile):
   inputenzyme = open (inputfile, 'w')
   req.write("Write file, inputfile<br>")
   inputenzyme.write("test")
   inputenzyme.close()
   req.write("Finish")
lezen("test.txt")
%>


RESULTS:
=======
I.E. (windows):


Write file, inputfile
Finish

No ERROR


NO file test.txt is make in the directory?

Did I have permission problems? Or are the other problems?
How can i set this permissions?
1. Map ==> right click? change permissions ==> don't work
2. change config file apache?
I'm administror on the windowsdesktop!

_________________________________________________________________
Vind alles terug op je PC: MSN Search Toolbar http://toolbar.msn.nl/

From jg.lists at sympatico.ca  Mon Oct 17 09:02:17 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Oct 17 09:02:12 2005
Subject: [mod_python] Mod_python Charts
In-Reply-To: <BAY17-F16AE214DEEBE8717E30E48997E0@phx.gbl>
References: <BAY17-F16AE214DEEBE8717E30E48997E0@phx.gbl>
Message-ID: <4353A0D9.7050501@sympatico.ca>

WR - wrote:
> My script is not working yet.
> 
> I have make a other simple example:
> 
> index.htm
> ====
> <p><a href="modules/write.py">test</a></p>
> 
> write.py
> ====
> from mod_python import psp
> 
> def index(req):
>     req.content_type = 'text/html'
>     tmpl = psp.PSP(req, filename='templates/write.tmpl', vars={'req': 
> req, 'psp': psp})
>     tmpl.run()
> 
> 
> write.tmpl
> ====
> <%
> def lezen(inputfile):
>   inputenzyme = open (inputfile, 'w')
>   req.write("Write file, inputfile<br>")
>   inputenzyme.write("test")
>   inputenzyme.close()
>   req.write("Finish")
> lezen("test.txt")
> %>
> 
> 
> RESULTS:
> =======
> I.E. (windows):
> 
> 
> Write file, inputfile
> Finish
> 
> No ERROR
> 
> 
> NO file test.txt is make in the directory?

In what directory? You are depending on whatever apache thinks is the 
current working directory, which may not be what you think it is. As has 
been suggested before, try using an absolute path:

eg. inputfile = '/tmp/test.txt'

Regards,
Jim

> 
> Did I have permission problems? Or are the other problems?
> How can i set this permissions?
> 1. Map ==> right click? change permissions ==> don't work
> 2. change config file apache?
> I'm administror on the windowsdesktop!
> 
> _________________________________________________________________
> Vind alles terug op je PC: MSN Search Toolbar http://toolbar.msn.nl/
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From list at joreybump.com  Mon Oct 17 09:17:26 2005
From: list at joreybump.com (Jorey Bump)
Date: Mon Oct 17 09:17:38 2005
Subject: [mod_python] Re: Mod_python Digest, Vol 31, Issue 32
In-Reply-To: <07d401c5d2e9$485bdd00$791ea8c0@frank>
References: <200510161600.j9GG0Cpq023431@modpython.org>
	<07d401c5d2e9$485bdd00$791ea8c0@frank>
Message-ID: <4353A466.4060004@joreybump.com>

Gavin wrote:

> I  plan to develop an HTTP API for my application. How to change HTTP 
> status code and HTTP reason message?

Please don't reply to the digest. Compose a new message when posting a 
new topic to the list. :)

Start here:

  http://www.modpython.org/live/current/doc-html/pyapi-handler.html
  http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

A function to redirect after authorization has expired might look like this:

from mod_python import apache

def redirect(req, newurl):
     """
     Redirect without sending form data to new URL.
     Sends HTTP Status Code 303.
     """
     status = apache.HTTP_SEE_OTHER
     req.headers_out['Location'] = newurl
     req.status = status
     raise apache.SERVER_RETURN, status



From nferrier at tapsellferrier.co.uk  Mon Oct 17 09:22:21 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Mon Oct 17 09:31:38 2005
Subject: [mod_python] apache log handler
In-Reply-To: <1129509713.27384@dscpl.user.openhosting.com> 
	(Graham Dumpleton's message of "Sun, 16 Oct 2005 20:41:53 -0400")
References: <1129509713.27384@dscpl.user.openhosting.com>
Message-ID: <87ek6ki8he.fsf@kanga.tapsellferrier.co.uk>

"Graham Dumpleton" <grahamd@dscpl.com.au> writes:

> Such things probably haven't been added for a couple of reasons.
>
> The first is that mod_python up to 3.1.4 worked with older versions of
> Python such as 2.2, but the "logging" module didn't exist in those older
> versions of Python. With mod_python 3.2 there is opportunity to use
> newer features as Python 2.3 or later will be a requirement, but
> ....

I can't see why this is a valid point... a 2.3 logging package
wouldn't have to be used by people with 2.2. It's purely optional in
terms of imports.

But really useful to anyone with 2.3+


> Second is that the intention is that mod_python be good at its core
> functionality and not accumulate a lot of extra baggage. Given that the
> logging interface is simple enough that users can write their own and
> given that logging interfaces are often customised to specific
> applications and therefore a generic one may not always be suitable
> anyway, I am sure that some will argue that it shouldn't be in
> mod_python.

Really?? But they're so simple - difficult to argue over it I'd have
thought.


> What I might suggest is that you post up your code as an example on
> the Python cookbook site.
>
>   http://aspn.activestate.com/ASPN/Python/Cookbook/

Sure... But that's not the point. The value of having it included in
mod_python is that it's packaged up. If I put it anywhere else then
either people have to cut and paste into their code all the time or
they have an additional dependancy on something. That's bad.


I'd be happy to contribute and help mine.


Nic
From Wim.Heirman at UGent.be  Mon Oct 17 09:53:21 2005
From: Wim.Heirman at UGent.be (Wim Heirman)
Date: Mon Oct 17 09:53:54 2005
Subject: [mod_python] upload pop-up
In-Reply-To: <BAY17-F17B756ECB63420FC4A6DC6997E0@phx.gbl>
References: <BAY17-F17B756ECB63420FC4A6DC6997E0@phx.gbl>
Message-ID: <4353ACD1.5080304@elis.ugent.be>

> Thanks for your answer.
> Now I have a next question.
> 
> If I run my script I get the following message:
> ...............
> ..............
>  File "C:\Program Files\Python24\Lib\site-packages\mod_python\util.py",
> line 70, in __getattr__
>    raise AttributeError, name
> 
> AttributeError: read
> 
> I print my file and  this is the result:
> 
> Field('file', 'TESTTESTTEST')
> 
> I need the second TESTTESTTEST ?..
> I don?t going to replace or split it!
> 
> Why in this format ??..Field(?file?,?TEST???)?
> 
> My script:
> 
> <html>
> <%=file%>
> <%
> def getFile(file):
>    if file is None:   # There was no file sent.
>        return "Error! There was no file!"
>    if type(file) is str:
>     # File was sent as a regular field, which is bad.
>        return "Error! File was a string!"
>    fileData = file.read()    # Get the file data into a Python variable.
>    req.write("DONE")
>    return "Ok, file received."
> 
> getFile(file)
> %>
> </html>

Sorry, I don't see what's wrong. Maybe you could post your complete
code, and the whole traceback instead of just the last line?

Or maybe someone else on mod_python can help you (you didn't seem to
have used "reply all", the list wasn't in cc when I got this)

> ====
> other question how can I reply to the answers on mod_python mailinglist.
> Because if I reply. My Reply become a head question not a sub answer of
> the topic?

All your mails are threaded nicely here (thunderbird), just replying to
the message (not composing a new one and copying the subject) should
work fine in any descent mailer

Regards,
Wim.


-- 
ir. Wim Heirman,
ELIS Department, Ghent University, Belgium
Phone: +32-9-264.95.27
E-mail: wim.heirman@elis.UGent.be
http://www.elis.UGent.be/~wheirman/

From python_it at hotmail.com  Mon Oct 17 10:02:39 2005
From: python_it at hotmail.com (WR -)
Date: Mon Oct 17 10:02:47 2005
Subject: [mod_python] upload pop-up
In-Reply-To: <4353ACD1.5080304@elis.ugent.be>
Message-ID: <BAY17-F2343F2AFB5FE1760A7AFFE997E0@phx.gbl>

The output that I get from my form is:

Field('file', 'TESTTESTTEST')
is the result of print file.

When i'm going to use read() it not works because it is not a
textfile but a Field with ('file', 'TESTTESTTEST').

How can i change my form or script to only get TESTTEST......
So i can write it to a new file.

I show all my files in the mailing-list, thats all:
http://www.modpython.org/pipermail/mod_python/2005-October/019299.html

_________________________________________________________________
Typ je SMS sneller binnen MSN Messenger 
http://www1.imagine-msn.com/Messenger/Expressions.aspx

From python_it at hotmail.com  Mon Oct 17 10:03:38 2005
From: python_it at hotmail.com (WR -)
Date: Mon Oct 17 10:03:46 2005
Subject: [mod_python] upload pop-up
In-Reply-To: <4353ACD1.5080304@elis.ugent.be>
Message-ID: <BAY17-F7F2CA02B24DEF97388CFF997E0@phx.gbl>

The output that I get from my form is:

Field('file', 'TESTTESTTEST')
is the result of print file.

When i'm going to use read() it not works because it is not a
text?? but a Field with ('file', 'TESTTESTTEST').

How can i change my form or script to only get TESTTEST......
So i can write it to a new file.

I show all my files in the mailing-list, thats all:
http://www.modpython.org/pipermail/mod_python/2005-October/019299.html

_________________________________________________________________
Nieuw op MSN Messenger 7.5: Dynamische achtergronden 
http://www1.imagine-msn.com/Messenger/Audio.aspx

From grahamd at dscpl.com.au  Mon Oct 17 17:09:09 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 17 17:09:29 2005
Subject: [mod_python] Mod_python Charts
In-Reply-To: <4353A0D9.7050501@sympatico.ca>
References: <BAY17-F16AE214DEEBE8717E30E48997E0@phx.gbl>
	<4353A0D9.7050501@sympatico.ca>
Message-ID: <405B5CB7-F62C-44B3-9488-28517F7B3AC2@dscpl.com.au>


On 17/10/2005, at 11:02 PM, Jim Gallacher wrote:

>> from mod_python import psp
>> def index(req):
>>     req.content_type = 'text/html'
>>     tmpl = psp.PSP(req, filename='templates/write.tmpl', vars= 
>> {'req': req, 'psp': psp})
>>     tmpl.run()
>> write.tmpl
>
> In what directory? You are depending on whatever apache thinks is  
> the current working directory, which may not be what you think it  
> is. As has been suggested before, try using an absolute path:
>
> eg. inputfile = '/tmp/test.txt'

Here is previous email on this point:

   http://www.modpython.org/pipermail/mod_python/2005-October/ 
019269.html
From grahamd at dscpl.com.au  Mon Oct 17 18:52:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 17 18:52:10 2005
Subject: [mod_python] apache log handler
Message-ID: <1129589524.27040@dscpl.user.openhosting.com>

If you want to champion the change, then log it as a feature request at:

  http://issues.apache.org/jira/browse/MODPYTHON?report=select

Also get on the developers mailing list. To subscribe to the list, send a message to:

   python-dev-subscribe@httpd.apache.org

I'm not one of the official developers and don't make decisions. I was
merely suggesting why it may not have been added in the past.

Graham

Nic Ferrier wrote ..
> "Graham Dumpleton" <grahamd@dscpl.com.au> writes:
> 
> > Such things probably haven't been added for a couple of reasons.
> >
> > The first is that mod_python up to 3.1.4 worked with older versions of
> > Python such as 2.2, but the "logging" module didn't exist in those older
> > versions of Python. With mod_python 3.2 there is opportunity to use
> > newer features as Python 2.3 or later will be a requirement, but
> > ....
> 
> I can't see why this is a valid point... a 2.3 logging package
> wouldn't have to be used by people with 2.2. It's purely optional in
> terms of imports.
> 
> But really useful to anyone with 2.3+
> 
> 
> > Second is that the intention is that mod_python be good at its core
> > functionality and not accumulate a lot of extra baggage. Given that the
> > logging interface is simple enough that users can write their own and
> > given that logging interfaces are often customised to specific
> > applications and therefore a generic one may not always be suitable
> > anyway, I am sure that some will argue that it shouldn't be in
> > mod_python.
> 
> Really?? But they're so simple - difficult to argue over it I'd have
> thought.
> 
> 
> > What I might suggest is that you post up your code as an example on
> > the Python cookbook site.
> >
> >   http://aspn.activestate.com/ASPN/Python/Cookbook/
> 
> Sure... But that's not the point. The value of having it included in
> mod_python is that it's packaged up. If I put it anywhere else then
> either people have to cut and paste into their code all the time or
> they have an additional dependancy on something. That's bad.
> 
> 
> I'd be happy to contribute and help mine.
> 
> 
> Nic
From jg.lists at sympatico.ca  Mon Oct 17 20:00:25 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Mon Oct 17 19:57:16 2005
Subject: [mod_python] upload pop-up
In-Reply-To: <BAY17-F2343F2AFB5FE1760A7AFFE997E0@phx.gbl>
References: <BAY17-F2343F2AFB5FE1760A7AFFE997E0@phx.gbl>
Message-ID: <43543B19.4020505@sympatico.ca>

WR - wrote:
> The output that I get from my form is:
> 
> Field('file', 'TESTTESTTEST')
> is the result of print file.
> 
> When i'm going to use read() it not works because it is not a
> textfile but a Field with ('file', 'TESTTESTTEST').
> 
> How can i change my form or script to only get TESTTEST......
> So i can write it to a new file.
> 
> I show all my files in the mailing-list, thats all:
> http://www.modpython.org/pipermail/mod_python/2005-October/019299.html

Check the docs for the Field class.
http://www.modpython.org/live/current/doc-html/pyapi-util-fstor-fld.html

"""
Field instances have the following attributes:

<snip>

file
     This is a file object. For file uploads it points to a temporary 
file. For simple values, it is a StringIO object, so you can read simple 
string values via this attribute instead of using the value attribute as 
well.
"""

Something like the following will work:

def index(req):
     uploaded_file = req.form['file']
     data = uploaded_file.file.read()
     return data

Regards,
Jim
From Wim.Heirman at UGent.be  Tue Oct 18 07:02:53 2005
From: Wim.Heirman at UGent.be (Wim Heirman)
Date: Tue Oct 18 07:03:12 2005
Subject: [mod_python] Uploading large files
Message-ID: <4354D65D.4080703@elis.ugent.be>

Hello,

When uploading a large file without newlines (a testfile with 100 MB of
\0-bytes), I found that Apache starts to consume a huge amount of
memory. The problem is the two req.readline()-calls in
util.py:read_to_boundary(); since the file doesn't have a newline in it
the first one will return a string of size 100 MB. Replacing both calls
with req.readline(4096) solves this, the rest of the code in
read_to_boundary() seems to work fine when reading lines in multiple calls.

Regards,
Wim.


-- 
ir. Wim Heirman,
ELIS Department, Ghent University, Belgium
Phone: +32-9-264.95.27
E-mail: wim.heirman@elis.UGent.be
http://www.elis.UGent.be/~wheirman/
From grahamd at dscpl.com.au  Mon Oct 17 18:52:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 07:32:15 2005
Subject: [mod_python] apache log handler 
Message-ID: <1129589524.27040@dscpl.user.openhosting.com> 


If you want to champion the change, then log it as a feature request at:

  http://issues.apache.org/jira/browse/MODPYTHON?report=select

Also get on the developers mailing list. To subscribe to the list, send a message to:

   python-dev-subscribe@httpd.apache.org

I'm not one of the official developers and don't make decisions. I was
merely suggesting why it may not have been added in the past.

Graham

Nic Ferrier wrote ..
> "Graham Dumpleton" <grahamd@dscpl.com.au> writes:
> 
> > Such things probably haven't been added for a couple of reasons.
> >
> > The first is that mod_python up to 3.1.4 worked with older versions of
> > Python such as 2.2, but the "logging" module didn't exist in those older
> > versions of Python. With mod_python 3.2 there is opportunity to use
> > newer features as Python 2.3 or later will be a requirement, but
> > ....
> 
> I can't see why this is a valid point... a 2.3 logging package
> wouldn't have to be used by people with 2.2. It's purely optional in
> terms of imports.
> 
> But really useful to anyone with 2.3+
> 
> 
> > Second is that the intention is that mod_python be good at its core
> > functionality and not accumulate a lot of extra baggage. Given that the
> > logging interface is simple enough that users can write their own and
> > given that logging interfaces are often customised to specific
> > applications and therefore a generic one may not always be suitable
> > anyway, I am sure that some will argue that it shouldn't be in
> > mod_python.
> 
> Really?? But they're so simple - difficult to argue over it I'd have
> thought.
> 
> 
> > What I might suggest is that you post up your code as an example on
> > the Python cookbook site.
> >
> >   http://aspn.activestate.com/ASPN/Python/Cookbook/
> 
> Sure... But that's not the point. The value of having it included in
> mod_python is that it's packaged up. If I put it anywhere else then
> either people have to cut and paste into their code all the time or
> they have an additional dependancy on something. That's bad.
> 
> 
> I'd be happy to contribute and help mine.
> 
> 
> Nic


--attachment links follows this line--

From arnarb at oddi.is  Tue Oct 18 08:03:19 2005
From: arnarb at oddi.is (Arnar Birgisson)
Date: Tue Oct 18 08:03:50 2005
Subject: [mod_python] Session ID not retained
Message-ID: <s354e4a0.062@Lime.oddi.is>

Hello there,

I was running mod_python 3.1.3 on Apache 2.0.50 with linux kernel 2.4.31 until yesterday, and all was well. For other reasons, I needed to upgrade to kernel version 2.6.13 yesterday, and along with it I upgraded my distribution from Slackware 10.0 to Slackware-current. That entailed an upgrade from libc 2.3.2 to 2.3.5.

After the upgrade, I recompiled Apache (still version 2.0.50) and compiled and installed mod_python 3.1.4. The problem now is that every request gets a new session id, even if the browser is clearly sending the pysid cookie correctly.

I was and am running python 2.4.1 both before the upgrade and now. I tried uninstalling mod_python completely, and recompiling mod_python 3.1.3 again against the new libc, but that doesn't solve the problem.

I am using a? session class that I wrote myself (complete source below) that uses mysql as the data store, and the session info makes it way into the table, which tells me that sess.save() is working properly. The problem seems to be that the constructor (which just calls mod_python.Session.__init__) doesn't find the session id in the request object. I dumped request.headers_in and the pysid cookie is there.

Any ideas on what I should try next?

Arnar



My session class (which worked fine before):

from mod_python import apache, Session as apsess
from Database import getExclusiveDB
from cPickle import loads, dumps
import time

def sqlsession_cleanup():
   db = getExclusiveDB()
   c = db.cursor()
   c.execute("delete from sessiondata where (unix_timestamp() - accessed) > timeout")
   c.close()
   db.commit()
   db.close()

class SqlSession(apsess.BaseSession):

   def __init__(self, req, sid=0, secret=None, timeout=0, lock=1):
      apsess.BaseSession.__init__(self, req, sid=sid, secret=secret, timeout=timeout, lock=lock)

   def do_cleanup(self):
      self._req.register_cleanup(mem_cleanup)
      self._req.log_error("SqlSession: registered session cleanup",
            apache.APLOG_NOTICE)

   def do_load(self):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("select created, accessed, timeout, data from sessiondata where sid = %s", self._sid)
      if c.rowcount > 0:
         row = c.fetchone()
         retval = {
            "_data": loads(row[3]),
            "_created": row[0],
            "_accessed": row[1],
            "_timeout": row[2]
         }
      else:
         retval = None
      c.close()
      db.close()
      return retval

   def do_save(self, dict):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("replace into sessiondata (sid, created, accessed, timeout, data) "
            + "values (%s, %s, %s, %s, %s)", 
            (self._sid, dict['_created'], dict['_accessed'], dict['_timeout'], dumps(dict['_data'])))
      c.close()
      db.commit()
      db.close()

   def do_delete(self):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("delete from sessiondata where sid = %s", self._sid)
      c.close()
      db.commit()
      db.close()



From jg.lists at sympatico.ca  Tue Oct 18 08:12:45 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Oct 18 08:08:57 2005
Subject: [mod_python] Uploading large files
In-Reply-To: <4354D65D.4080703@elis.ugent.be>
References: <4354D65D.4080703@elis.ugent.be>
Message-ID: <4354E6BD.8050603@sympatico.ca>

Wim Heirman wrote:
> Hello,
> 
> When uploading a large file without newlines (a testfile with 100 MB of
> \0-bytes), I found that Apache starts to consume a huge amount of
> memory. The problem is the two req.readline()-calls in
> util.py:read_to_boundary(); since the file doesn't have a newline in it
> the first one will return a string of size 100 MB. Replacing both calls
> with req.readline(4096) solves this, the rest of the code in
> read_to_boundary() seems to work fine when reading lines in multiple calls.
> 

I assume you are using mod_python version < 3.2 as I believe this was 
fixed for 3.2. See http://issues.apache.org/jira/browse/MODPYTHON-40

Regards,
Jim



From pmartin at snakecard.com  Tue Oct 18 12:14:09 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 12:30:56 2005
Subject: [mod_python] Installing mod_python (newbie)
Message-ID: <200510181614.09566.pmartin@snakecard.com>

Hi,

I am trying to install mod_python from source.


I tried to follow the INSTALL as well as comments at the end of make install 
(including modyfing httpd.conf).

Yet when I get to my test directory, I just get the directory structure.

This is the error_log (I'm not sure this is an error)

[Tue Oct 18 16:10:41 2005] [notice] mod_python: Creating 8 session mutexes 
based on 150 max processes and 0 max threads.
[Tue Oct 18 16:10:41 2005] [notice] Apache/2.0.55 (Unix) mod_python/3.2.0b 
Python/2.4.2 configured -- resuming normal operations


Thanks,

Philippe
From list at joreybump.com  Tue Oct 18 13:13:52 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct 18 13:14:01 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <200510181614.09566.pmartin@snakecard.com>
References: <200510181614.09566.pmartin@snakecard.com>
Message-ID: <43552D50.90300@joreybump.com>

Philippe C. Martin wrote:
> Hi,
> 
> I am trying to install mod_python from source.
> 
> I tried to follow the INSTALL as well as comments at the end of make install 
> (including modyfing httpd.conf).
> 
> Yet when I get to my test directory, I just get the directory structure.
> 
> This is the error_log (I'm not sure this is an error)
> 
> [Tue Oct 18 16:10:41 2005] [notice] mod_python: Creating 8 session mutexes 
> based on 150 max processes and 0 max threads.
> [Tue Oct 18 16:10:41 2005] [notice] Apache/2.0.55 (Unix) mod_python/3.2.0b 
> Python/2.4.2 configured -- resuming normal operations

These aren't errors and they indicate that mod_python is installed 
correctly. Show your configuration, your test module, and provide a more 
detailed description of your problem.
From bradshak at us.ibm.com  Tue Oct 18 13:16:56 2005
From: bradshak at us.ibm.com (Ken Bradshaw)
Date: Tue Oct 18 13:15:53 2005
Subject: [mod_python] web browser tries to download bytecode
Message-ID: <OF24CEA8A6.B92BBA1F-ON8725709E.005E858F-8625709E.005ED32B@us.ibm.com>






Hello again,
      I've come across a weird issue.  I've got a .py file on the webserver
that a form posts to.  The first time the py file is compiled to pyc, it
responds correctly.  The second time however that the file receives a post,
the web browser receives a response to download the bytecode? Anyone ever
had this problem before?  Any quick steps I can try to circumvent this
annoyance?

Regards,
Ken
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051018/2496099b/attachment.html
From list at joreybump.com  Tue Oct 18 14:40:04 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct 18 14:40:13 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <200510181738.31925.pmartin@snakecard.com>
References: <200510181614.09566.pmartin@snakecard.com>
	<43552D50.90300@joreybump.com>
	<200510181738.31925.pmartin@snakecard.com>
Message-ID: <43554184.5010905@joreybump.com>

Philippe C. Martin wrote:

> As I have tried a few things, my httpd.conf has changed some (included at the 
> end of this email).

Just send the mod_python parts, not the whole thing. :)

> PS: I'm also using DSO as I have not managed to get the static version to 

Read the docs carefully:

  http://www.modpython.org/live/current/doc-html/inst-compiling.html

  2.2 Compiling

    At this time only DSO is supported by mod_python.

> configure, configure kept looking for config files/dirs in /usr/local/apache2 
> while I have apache installed in /usr/local - so I creation some symbolic 
> link (conf, logs, icons) in /usr/local/apache2: I used to have apache 
> pre-compiled but recompiled it for the above problem.

Perhaps you should recompile apache and use the default location of 
/usr/local/apache2. I find it to be cleaner. It's up to you, but you're 
already using symlink hacks, so why not just use the default location? 
In fact, if you're only compiling apache to install mod_python, you can 
probably revert to the precompiled version for your platform, as long as 
it's 2.x and includes all headers. What platform is this?

> ********* START - SATIC LINK*************
> ./configure --with-apxs=/usr/local/apache2/bin/ 

This should point to the actual apxs binary:

  ./configure --with-apxs=/usr/local/apache2/bin/apxs

> --with-apache=/home/philippe/downloaded/httpd-2.0.55/

This looks wrong, and you probably don't need this option, anyway.



From pmartin at snakecard.com  Tue Oct 18 14:16:01 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 15:02:46 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <43552D50.90300@joreybump.com>
References: <200510181614.09566.pmartin@snakecard.com>
	<43552D50.90300@joreybump.com>
Message-ID: <200510181816.02712.pmartin@snakecard.com>

Thanks, I appreciate the help.

As I have tried a few things, my httpd.conf has changed some (changes included 
at the end of this email: complete file bounces the email: too big).

PS: I'm also using DSO as I have not managed to get the static version to 
configure, configure kept looking for config files/dirs in /usr/local/apache2 
while I have apache installed in /usr/local - so I creation some symbolic 
link (conf, logs, icons) in /usr/local/apache2: I used to have apache 
pre-compiled but recompiled it for the above problem.

********* START - SATIC LINK*************
./configure --with-apxs=/usr/local/apache2/bin/ 
--with-apache=/home/philippe/downloaded/httpd-2.0.55/
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
checking for ar... ar
checking for a BSD-compatible install... /usr/bin/install -c
checking whether make sets $(MAKE)... yes
checking for main in -lm... yes
checking for an ANSI C-conforming const... yes
checking your blood pressure... a bit high, but we can proceed
configure: checking whether apxs is available...
checking for --with-apxs... /usr/local/apache2/bin/ executable, good
checking Apache version... ./configure: line 1: /usr/local/apache2/bin/: is a 
directory
./configure: line 1: /usr/local/apache2/bin/: is a directory
./configure: line 1: /: is a directory

configure: error: This version of mod_python only works with Apache 2. The one 
you have seems to be .

******** END ***************
The problem is that when I try to browse localhost/mp, I get a list of files.

******* START localhost/mp *********
[ ? ] PyFontify.py ? ? ? ? ? ?17-Jan-2004 01:27 ?4.3K ?
[DIR] images/ ? ? ? ? ? ? ? ? 16-Jan-2004 23:31 ? ?- ? 
[ ? ] index.py ? ? ? ? ? ? ? ?17-Jan-2004 01:50 ?3.4K ?
[ ? ] index.pyc ? ? ? ? ? ? ? 16-Jan-2004 23:31 ?4.1K ?
[ ? ] psp_site.tgz ? ? ? ? ? ?18-Oct-2005 12:59 ? 22K ?
[DIR] psp_site/ ? ? ? ? ? ? ? 18-Oct-2005 12:59 ? ?- ? 
[ ? ] py2html.py ? ? ? ? ? ? ?17-Jan-2004 01:27 ? 13K ?
[DIR] styles/ ? ? ? ? ? ? ? ? 16-Jan-2004 23:31 ? ?- ? 
[DIR] templates/ ? ? ? ? ? ? ?17-Jan-2004 01:29 ? ?- ? 
[ ? ] view.py ? ? ? ? ? ? ? ? 17-Jan-2004 04:07 ?726 ? 

******* END *********


This is the top of index.py (which I got from the mod_python site I believe)

******* START - config file*********
[SNIP]


LoadModule python_module /usr/local/modules/mod_python.so
#AddHandler mod_python .py


[SNIP]
<Directory "/var/www/html/mp">
      #AddHandler mod_python .py
      #PythonHandler mod_python.publisher
      AddHandler python-program .py
      PythonHandler index.py
      PythonDebug On
</Directory>
[SNIP]




On Tuesday 18 October 2005 05:13 pm, Jorey Bump wrote:
> Philippe C. Martin wrote:
> > Hi,
> >
> > I am trying to install mod_python from source.
> >
> > I tried to follow the INSTALL as well as comments at the end of make
> > install (including modyfing httpd.conf).
> >
> > Yet when I get to my test directory, I just get the directory structure.
> >
> > This is the error_log (I'm not sure this is an error)
> >
> > [Tue Oct 18 16:10:41 2005] [notice] mod_python: Creating 8 session
> > mutexes based on 150 max processes and 0 max threads.
> > [Tue Oct 18 16:10:41 2005] [notice] Apache/2.0.55 (Unix)
> > mod_python/3.2.0b Python/2.4.2 configured -- resuming normal operations
>
> These aren't errors and they indicate that mod_python is installed
> correctly. Show your configuration, your test module, and provide a more
> detailed description of your problem.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************

From pmartin at snakecard.com  Tue Oct 18 14:39:41 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 15:31:24 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <200510181816.02712.pmartin@snakecard.com>
References: <200510181614.09566.pmartin@snakecard.com>
	<43552D50.90300@joreybump.com>
	<200510181816.02712.pmartin@snakecard.com>
Message-ID: <200510181839.41922.pmartin@snakecard.com>

Hi,

I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix) 
mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the bottom.

Index of /mp

Icon  Name                    Last modified      Size  Description[DIR] Parent 
Directory                             -   
[DIR] hide/                   18-Oct-2005 17:47    -   
[   ] index.py                18-Oct-2005 18:38  173   

Apache/2.0.55 (Unix) mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 
80

Also, I changed index.py to a much simpler script (but still no go):

from mod_python import apache

def handler(req):
    
    req.content_type = "text/plain"
    req.send_http_header()
    req.write("Hello World!")
    
    return apache.OK

Regards,

Philippe




On Tuesday 18 October 2005 06:16 pm, Philippe C. Martin wrote:
> Thanks, I appreciate the help.
>
> As I have tried a few things, my httpd.conf has changed some (changes
> included at the end of this email: complete file bounces the email: too
> big).
>
> PS: I'm also using DSO as I have not managed to get the static version to
> configure, configure kept looking for config files/dirs in
> /usr/local/apache2 while I have apache installed in /usr/local - so I
> creation some symbolic link (conf, logs, icons) in /usr/local/apache2: I
> used to have apache pre-compiled but recompiled it for the above problem.
>
> ********* START - SATIC LINK*************
> ./configure --with-apxs=/usr/local/apache2/bin/
> --with-apache=/home/philippe/downloaded/httpd-2.0.55/
> checking for gcc... gcc
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ANSI C... none needed
> checking for ar... ar
> checking for a BSD-compatible install... /usr/bin/install -c
> checking whether make sets $(MAKE)... yes
> checking for main in -lm... yes
> checking for an ANSI C-conforming const... yes
> checking your blood pressure... a bit high, but we can proceed
> configure: checking whether apxs is available...
> checking for --with-apxs... /usr/local/apache2/bin/ executable, good
> checking Apache version... ./configure: line 1: /usr/local/apache2/bin/: is
> a directory
> ./configure: line 1: /usr/local/apache2/bin/: is a directory
> ./configure: line 1: /: is a directory
>
> configure: error: This version of mod_python only works with Apache 2. The
> one you have seems to be .
>
> ******** END ***************
> The problem is that when I try to browse localhost/mp, I get a list of
> files.
>
> ******* START localhost/mp *********
> [ ? ] PyFontify.py ? ? ? ? ? ?17-Jan-2004 01:27 ?4.3K ?
> [DIR] images/ ? ? ? ? ? ? ? ? 16-Jan-2004 23:31 ? ?- ?
> [ ? ] index.py ? ? ? ? ? ? ? ?17-Jan-2004 01:50 ?3.4K ?
> [ ? ] index.pyc ? ? ? ? ? ? ? 16-Jan-2004 23:31 ?4.1K ?
> [ ? ] psp_site.tgz ? ? ? ? ? ?18-Oct-2005 12:59 ? 22K ?
> [DIR] psp_site/ ? ? ? ? ? ? ? 18-Oct-2005 12:59 ? ?- ?
> [ ? ] py2html.py ? ? ? ? ? ? ?17-Jan-2004 01:27 ? 13K ?
> [DIR] styles/ ? ? ? ? ? ? ? ? 16-Jan-2004 23:31 ? ?- ?
> [DIR] templates/ ? ? ? ? ? ? ?17-Jan-2004 01:29 ? ?- ?
> [ ? ] view.py ? ? ? ? ? ? ? ? 17-Jan-2004 04:07 ?726 ?
>
> ******* END *********
>
>
> This is the top of index.py (which I got from the mod_python site I
> believe)
>
> ******* START - config file*********
> [SNIP]
>
>
> LoadModule python_module /usr/local/modules/mod_python.so
> #AddHandler mod_python .py
>
>
> [SNIP]
> <Directory "/var/www/html/mp">
>       #AddHandler mod_python .py
>       #PythonHandler mod_python.publisher
>       AddHandler python-program .py
>       PythonHandler index.py
>       PythonDebug On
> </Directory>
> [SNIP]
>
> On Tuesday 18 October 2005 05:13 pm, Jorey Bump wrote:
> > Philippe C. Martin wrote:
> > > Hi,
> > >
> > > I am trying to install mod_python from source.
> > >
> > > I tried to follow the INSTALL as well as comments at the end of make
> > > install (including modyfing httpd.conf).
> > >
> > > Yet when I get to my test directory, I just get the directory
> > > structure.
> > >
> > > This is the error_log (I'm not sure this is an error)
> > >
> > > [Tue Oct 18 16:10:41 2005] [notice] mod_python: Creating 8 session
> > > mutexes based on 150 max processes and 0 max threads.
> > > [Tue Oct 18 16:10:41 2005] [notice] Apache/2.0.55 (Unix)
> > > mod_python/3.2.0b Python/2.4.2 configured -- resuming normal operations
> >
> > These aren't errors and they indicate that mod_python is installed
> > correctly. Show your configuration, your test module, and provide a more
> > detailed description of your problem.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************

From list at joreybump.com  Tue Oct 18 15:58:50 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct 18 15:58:59 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <200510181839.41922.pmartin@snakecard.com>
References: <200510181614.09566.pmartin@snakecard.com>
	<43552D50.90300@joreybump.com>
	<200510181816.02712.pmartin@snakecard.com>
	<200510181839.41922.pmartin@snakecard.com>
Message-ID: <435553FA.1050809@joreybump.com>

Philippe C. Martin wrote:

> I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix) 
> mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the bottom.

Okay, then mod_python is loaded and running. I think your test is 
flawed, however. Try something simpler:

<Directory "/var/www/html/mp">
   SetHandler python-program
   PythonHandler mod_python.publisher
   PythonDebug On
</Directory>

Create /var/www/html/mp/hello.py:

def world():
     return "Hello, world!"

Restart apache and point a browser at:

  http://localhost/mp/hello/world

SetHandler causes mod_python to handle *all* files in the directory, and 
allows you to leave off the .py extension. Publisher requires you to 
point the URL at a function within the module. AddHandler lets you mix 
files, but you must call the module with the .py extension.

When using SetHandler, you can create a file named index.py with a 
function named index, and leave both off the URL. This has historically 
caused some problems that 3.2b claims to address. I've haven't checked 
this myself, but try it next if you really want to use only the 
directory in the URL with a default module/function.
From pmartin at snakecard.com  Tue Oct 18 15:16:28 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 16:34:07 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <43554184.5010905@joreybump.com>
References: <200510181614.09566.pmartin@snakecard.com>
	<200510181738.31925.pmartin@snakecard.com>
	<43554184.5010905@joreybump.com>
Message-ID: <200510181916.28382.pmartin@snakecard.com>


On Tuesday 18 October 2005 06:40 pm, Jorey Bump wrote:
> Philippe C. Martin wrote:
> > As I have tried a few things, my httpd.conf has changed some (included at
> > the end of this email).
>
> Just send the mod_python parts, not the whole thing. :)

Right: excerpt from my last email:

************
[SNIP]
I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix) 
mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the bottom.

Index of /mp

Icon ?Name ? ? ? ? ? ? ? ? ? ?Last modified ? ? ?Size ?Description[DIR] Parent 
Directory ? ? ? ? ? ? ? ? ? ? ? ? ? ? - ? 
[DIR] hide/ ? ? ? ? ? ? ? ? ? 18-Oct-2005 17:47 ? ?- ? 
[ ? ] index.py ? ? ? ? ? ? ? ?18-Oct-2005 18:38 ?173 ? 

Apache/2.0.55 (Unix) mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 
80

Also, I changed index.py to a much simpler script (but still no go):

from mod_python import apache

def handler(req):
? ? 
? ? req.content_type = "text/plain"
? ? req.send_http_header()
? ? req.write("Hello World!")
? ? 
? ? return apache.OK
{SNIP]
************

>
> > PS: I'm also using DSO as I have not managed to get the static version to
>
> Read the docs carefully:
>
>   http://www.modpython.org/live/current/doc-html/inst-compiling.html

Yes I did and figured it was OK
>
>   2.2 Compiling
>
>     At this time only DSO is supported by mod_python.
>
OK


> > configure, configure kept looking for config files/dirs in
> > /usr/local/apache2 while I have apache installed in /usr/local - so I
> > creation some symbolic link (conf, logs, icons) in /usr/local/apache2: I
> > used to have apache pre-compiled but recompiled it for the above problem.
>
> Perhaps you should recompile apache and use the default location of
> /usr/local/apache2. I find it to be cleaner. It's up to you, but you're
> already using symlink hacks, so why not just use the default location?
> In fact, if you're only compiling apache to install mod_python, you can
> probably revert to the precompiled version for your platform, as long as
> it's 2.x and includes all headers. What platform is this?
>
I'll give it a shot and get back to you

> > ********* START - SATIC LINK*************
> > ./configure --with-apxs=/usr/local/apache2/bin/
>
> This should point to the actual apxs binary:
>
I actually did at the time as I had apache installed at the default location, 
I went back to /usr/local because of the static link "problem" and that I 
found /usr/local was recomended on some tutorial


>   ./configure --with-apxs=/usr/local/apache2/bin/apxs
>
> > --with-apache=/home/philippe/downloaded/httpd-2.0.55/
>
> This looks wrong, and you probably don't need this option, anyway.

Well, this is where I have my apache source (where I type ./configure)




So I'll try all over just in case.

Regards,

Philippe

>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************

From grahamd at dscpl.com.au  Tue Oct 18 16:56:07 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 16:56:18 2005
Subject: [mod_python] Installing mod_python (newbie)
Message-ID: <1129668967.29042@dscpl.user.openhosting.com>

As well as following Jorey's suggestion on a publisher example, also try the most
basic mptest.py example as described in:

  http://www.dscpl.com.au/articles/modpython-001.html

This article gives points about what not to do and where to look to resolve issues.

Jorey Bump wrote ..
> Philippe C. Martin wrote:
> 
> > I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix)
> > mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the bottom.
> 
> Okay, then mod_python is loaded and running. I think your test is 
> flawed, however. Try something simpler:
> 
> <Directory "/var/www/html/mp">
>    SetHandler python-program
>    PythonHandler mod_python.publisher
>    PythonDebug On
> </Directory>
> 
> Create /var/www/html/mp/hello.py:
> 
> def world():
>      return "Hello, world!"
> 
> Restart apache and point a browser at:
> 
>   http://localhost/mp/hello/world
> 
> SetHandler causes mod_python to handle *all* files in the directory, and
> allows you to leave off the .py extension. Publisher requires you to 
> point the URL at a function within the module. AddHandler lets you mix
> files, but you must call the module with the .py extension.
> 
> When using SetHandler, you can create a file named index.py with a 
> function named index, and leave both off the URL. This has historically
> caused some problems that 3.2b claims to address. I've haven't checked
> this myself, but try it next if you really want to use only the 
> directory in the URL with a default module/function.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From pmartin at snakecard.com  Tue Oct 18 15:28:36 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 17:00:09 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <200510181916.28382.pmartin@snakecard.com>
References: <200510181614.09566.pmartin@snakecard.com>
	<43554184.5010905@joreybump.com>
	<200510181916.28382.pmartin@snakecard.com>
Message-ID: <200510181928.36891.pmartin@snakecard.com>

Hi,

This is why I installed apache in /usr/local ... confusing !


[root@pcmsc mod_python-3.2.2b]# ./configure --with-apxs=/usr/local/apache2/bin
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables...
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
checking for ar... ar
checking for a BSD-compatible install... /usr/bin/install -c
checking whether make sets $(MAKE)... yes
checking for main in -lm... yes
checking for an ANSI C-conforming const... yes
checking your blood pressure... a bit high, but we can proceed
configure: checking whether apxs is available...
checking for --with-apxs... /usr/local/apache2/bin executable, good
checking Apache version... ./configure: line 1: /usr/local/apache2/bin: is a 
directory
./configure: line 1: /usr/local/apache2/bin: is a directory
./configure: line 1: /: is a directory

configure: error: This version of mod_python only works with Apache 2. The one 
you have seems to be .


Regards,

Philippe



On Tuesday 18 October 2005 07:16 pm, Philippe C. Martin wrote:
> On Tuesday 18 October 2005 06:40 pm, Jorey Bump wrote:
> > Philippe C. Martin wrote:
> > > As I have tried a few things, my httpd.conf has changed some (included
> > > at the end of this email).
> >
> > Just send the mod_python parts, not the whole thing. :)
>
> Right: excerpt from my last email:
>
> ************
> [SNIP]
> I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix)
> mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the bottom.
>
> Index of /mp
>
> Icon ?Name ? ? ? ? ? ? ? ? ? ?Last modified ? ? ?Size ?Description[DIR]
> Parent Directory ? ? ? ? ? ? ? ? ? ? ? ? ? ? -
> [DIR] hide/ ? ? ? ? ? ? ? ? ? 18-Oct-2005 17:47 ? ?- ?
> [ ? ] index.py ? ? ? ? ? ? ? ?18-Oct-2005 18:38 ?173 ?
>
> Apache/2.0.55 (Unix) mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1
> Port 80
>
> Also, I changed index.py to a much simpler script (but still no go):
>
> from mod_python import apache
>
> def handler(req):
> ? ?
> ? ? req.content_type = "text/plain"
> ? ? req.send_http_header()
> ? ? req.write("Hello World!")
> ? ?
> ? ? return apache.OK
> {SNIP]
> ************
>
> > > PS: I'm also using DSO as I have not managed to get the static version
> > > to
> >
> > Read the docs carefully:
> >
> >   http://www.modpython.org/live/current/doc-html/inst-compiling.html
>
> Yes I did and figured it was OK
>
> >   2.2 Compiling
> >
> >     At this time only DSO is supported by mod_python.
>
> OK
>
> > > configure, configure kept looking for config files/dirs in
> > > /usr/local/apache2 while I have apache installed in /usr/local - so I
> > > creation some symbolic link (conf, logs, icons) in /usr/local/apache2:
> > > I used to have apache pre-compiled but recompiled it for the above
> > > problem.
> >
> > Perhaps you should recompile apache and use the default location of
> > /usr/local/apache2. I find it to be cleaner. It's up to you, but you're
> > already using symlink hacks, so why not just use the default location?
> > In fact, if you're only compiling apache to install mod_python, you can
> > probably revert to the precompiled version for your platform, as long as
> > it's 2.x and includes all headers. What platform is this?
>
> I'll give it a shot and get back to you
>
> > > ********* START - SATIC LINK*************
> > > ./configure --with-apxs=/usr/local/apache2/bin/
> >
> > This should point to the actual apxs binary:
>
> I actually did at the time as I had apache installed at the default
> location, I went back to /usr/local because of the static link "problem"
> and that I found /usr/local was recomended on some tutorial
>
> >   ./configure --with-apxs=/usr/local/apache2/bin/apxs
> >
> > > --with-apache=/home/philippe/downloaded/httpd-2.0.55/
> >
> > This looks wrong, and you probably don't need this option, anyway.
>
> Well, this is where I have my apache source (where I type ./configure)
>
>
>
>
> So I'll try all over just in case.
>
> Regards,
>
> Philippe
>
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************

From jg.lists at sympatico.ca  Tue Oct 18 17:44:03 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Oct 18 17:41:54 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <200510181928.36891.pmartin@snakecard.com>
References: <200510181614.09566.pmartin@snakecard.com>	<43554184.5010905@joreybump.com>	<200510181916.28382.pmartin@snakecard.com>
	<200510181928.36891.pmartin@snakecard.com>
Message-ID: <43556CA3.1030909@sympatico.ca>

As Jorey pointed out previously, to compile mod_python you need:

./configure --with-apxs=/usr/local/apache2/bin/apxs

Regards,
Jim


Philippe C. Martin wrote:
> Hi,
> 
> This is why I installed apache in /usr/local ... confusing !
> 
> 
> [root@pcmsc mod_python-3.2.2b]# ./configure --with-apxs=/usr/local/apache2/bin
> checking for gcc... gcc
> checking for C compiler default output file name... a.out
> checking whether the C compiler works... yes
> checking whether we are cross compiling... no
> checking for suffix of executables...
> checking for suffix of object files... o
> checking whether we are using the GNU C compiler... yes
> checking whether gcc accepts -g... yes
> checking for gcc option to accept ANSI C... none needed
> checking for ar... ar
> checking for a BSD-compatible install... /usr/bin/install -c
> checking whether make sets $(MAKE)... yes
> checking for main in -lm... yes
> checking for an ANSI C-conforming const... yes
> checking your blood pressure... a bit high, but we can proceed
> configure: checking whether apxs is available...
> checking for --with-apxs... /usr/local/apache2/bin executable, good
> checking Apache version... ./configure: line 1: /usr/local/apache2/bin: is a 
> directory
> ./configure: line 1: /usr/local/apache2/bin: is a directory
> ./configure: line 1: /: is a directory
> 
> configure: error: This version of mod_python only works with Apache 2. The one 
> you have seems to be .
> 
> 
> Regards,
> 
> Philippe
> 
> 
> 
> On Tuesday 18 October 2005 07:16 pm, Philippe C. Martin wrote:
> 
>>On Tuesday 18 October 2005 06:40 pm, Jorey Bump wrote:
>>
>>>Philippe C. Martin wrote:
>>>
>>>>As I have tried a few things, my httpd.conf has changed some (included
>>>>at the end of this email).
>>>
>>>Just send the mod_python parts, not the whole thing. :)
>>
>>Right: excerpt from my last email:
>>
>>************
>>[SNIP]
>>I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix)
>>mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the bottom.
>>
>>Index of /mp
>>
>>Icon  Name                    Last modified      Size  Description[DIR]
>>Parent Directory                             -
>>[DIR] hide/                   18-Oct-2005 17:47    -  
>>[   ] index.py                18-Oct-2005 18:38  173  
>>
>>Apache/2.0.55 (Unix) mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1
>>Port 80
>>
>>Also, I changed index.py to a much simpler script (but still no go):
>>
>>from mod_python import apache
>>
>>def handler(req):
>>   
>>    req.content_type = "text/plain"
>>    req.send_http_header()
>>    req.write("Hello World!")
>>   
>>    return apache.OK
>>{SNIP]
>>************
>>
>>
>>>>PS: I'm also using DSO as I have not managed to get the static version
>>>>to
>>>
>>>Read the docs carefully:
>>>
>>>  http://www.modpython.org/live/current/doc-html/inst-compiling.html
>>
>>Yes I did and figured it was OK
>>
>>
>>>  2.2 Compiling
>>>
>>>    At this time only DSO is supported by mod_python.
>>
>>OK
>>
>>
>>>>configure, configure kept looking for config files/dirs in
>>>>/usr/local/apache2 while I have apache installed in /usr/local - so I
>>>>creation some symbolic link (conf, logs, icons) in /usr/local/apache2:
>>>>I used to have apache pre-compiled but recompiled it for the above
>>>>problem.
>>>
>>>Perhaps you should recompile apache and use the default location of
>>>/usr/local/apache2. I find it to be cleaner. It's up to you, but you're
>>>already using symlink hacks, so why not just use the default location?
>>>In fact, if you're only compiling apache to install mod_python, you can
>>>probably revert to the precompiled version for your platform, as long as
>>>it's 2.x and includes all headers. What platform is this?
>>
>>I'll give it a shot and get back to you
>>
>>
>>>>********* START - SATIC LINK*************
>>>>./configure --with-apxs=/usr/local/apache2/bin/
>>>
>>>This should point to the actual apxs binary:
>>
>>I actually did at the time as I had apache installed at the default
>>location, I went back to /usr/local because of the static link "problem"
>>and that I found /usr/local was recomended on some tutorial
>>
>>
>>>  ./configure --with-apxs=/usr/local/apache2/bin/apxs
>>>
>>>
>>>>--with-apache=/home/philippe/downloaded/httpd-2.0.55/
>>>
>>>This looks wrong, and you probably don't need this option, anyway.
>>
>>Well, this is where I have my apache source (where I type ./configure)
>>
>>
>>
>>
>>So I'll try all over just in case.
>>
>>Regards,
>>
>>Philippe
>>
>>
>>>_______________________________________________
>>>Mod_python mailing list
>>>Mod_python@modpython.org
>>>http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 

From pmartin at snakecard.com  Tue Oct 18 16:18:15 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 17:50:55 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <435553FA.1050809@joreybump.com>
References: <200510181614.09566.pmartin@snakecard.com>
	<200510181839.41922.pmartin@snakecard.com>
	<435553FA.1050809@joreybump.com>
Message-ID: <200510182018.16157.pmartin@snakecard.com>

Jorey, thanks, that did it !


I'll need to do some reading for 
1) I do not fully comprehend the reasons you're invoking here:
> SetHandler causes mod_python to handle *all* files in the directory, and
> allows you to leave off the .py extension. Publisher requires you to
> point the URL at a function within the module. AddHandler lets you mix
> files, but you must call the module with the .py extension.
>
> When using SetHandler, you can create a file named index.py with a
> function named index, and leave both off the URL. This has historically
> caused some problems that 3.2b claims to address. I've haven't checked
> this myself, but try it next if you really want to use only the
> directory in the URL with a default module/function.

2) I think I did follow the tutorial faithfully


But I got started ! thanks a bunch.

Regards,

Philippe



On Tuesday 18 October 2005 07:58 pm, Jorey Bump wrote:
> Philippe C. Martin wrote:
> > I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix)
> > mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the
> > bottom.
>
> Okay, then mod_python is loaded and running. I think your test is
> flawed, however. Try something simpler:
>
> <Directory "/var/www/html/mp">
>    SetHandler python-program
>    PythonHandler mod_python.publisher
>    PythonDebug On
> </Directory>
>
> Create /var/www/html/mp/hello.py:
>
> def world():
>      return "Hello, world!"
>
> Restart apache and point a browser at:
>
>   http://localhost/mp/hello/world
>
> SetHandler causes mod_python to handle *all* files in the directory, and
> allows you to leave off the .py extension. Publisher requires you to
> point the URL at a function within the module. AddHandler lets you mix
> files, but you must call the module with the .py extension.
>
> When using SetHandler, you can create a file named index.py with a
> function named index, and leave both off the URL. This has historically
> caused some problems that 3.2b claims to address. I've haven't checked
> this myself, but try it next if you really want to use only the
> directory in the URL with a default module/function.
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From pmartin at snakecard.com  Tue Oct 18 16:58:18 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 18:41:10 2005
Subject: [mod_python] The DOs and DONTs of mod_python
Message-ID: <200510182058.18300.pmartin@snakecard.com>

Hi and thanks again for the previous answer.

Since I just managed to seg fault apache I feel I should explain what my goal 
is with mod_python.


I already have a fairly big library written in python which purpose is to 
discuss with smart cards but also provide "software" enryption capabilites: 
As such, this library uses modules that in turn talk to C code.

The ultimate goal is to have users need to authenticate themselves to the 
servers (on smart card on each side) in order to obtain access to certain 
pages.

I must also say that there is a failry large data set that needs to be loaded 
in memory.

The code below shows the line that creates the core dump: it instantiates that 
_large_ object and does a lot in the process.

As I am an application developper more than a web guy, there are perhaps some 
obvious "NO NOs'" I should be aware of that are related to the apache 
environment.

Please note that, although I must have bugs, the code I'm calling _seems_ to 
work flawlessly under Linux and Windows.

Thanks and regards,

Philippe




from mod_python import apache
import os
import sys
if os.name == 'nt':
     sys.path.append("Z:\\dev")
else:
     sys.path.append('/home/philippe/dev')


from SC.pilot.SC_Script_Processor import *


def world(req):
     ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> *** THIS IS 
THE KILLER THAT CRASHES APACHE ***
     ll = ls.Reader_List() # get the reader list

     #Grab ATR from card - assume first reader
     l_appli_conn = ls.Get_Connection(r1)
     
     
     
     req.send_http_header()
     req.write("RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR() )

     

     
     return apache.OK
 
From list at joreybump.com  Tue Oct 18 19:05:00 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct 18 19:05:07 2005
Subject: [mod_python] The DOs and DONTs of mod_python
In-Reply-To: <200510182058.18300.pmartin@snakecard.com>
References: <200510182058.18300.pmartin@snakecard.com>
Message-ID: <43557F9C.6060302@joreybump.com>

Philippe C. Martin wrote:

> Since I just managed to seg fault apache I feel I should explain what my goal 
> is with mod_python.
> 
> I already have a fairly big library written in python which purpose is to 
> discuss with smart cards but also provide "software" enryption capabilites: 
> As such, this library uses modules that in turn talk to C code.
> 
> The ultimate goal is to have users need to authenticate themselves to the 
> servers (on smart card on each side) in order to obtain access to certain 
> pages.
> 
> I must also say that there is a failry large data set that needs to be loaded 
> in memory.

Why?

> The code below shows the line that creates the core dump: it instantiates that 
> _large_ object and does a lot in the process.
> 
> As I am an application developper more than a web guy, there are perhaps some 
> obvious "NO NOs'" I should be aware of that are related to the apache 
> environment.
> 
> Please note that, although I must have bugs, the code I'm calling _seems_ to 
> work flawlessly under Linux and Windows.

It might, for a single interpreter. But apache might be forking multiple 
children on your system. Can your machine handle 5 or more copies of 
this object in memory?

> from mod_python import apache
> import os
> import sys
> if os.name == 'nt':
>      sys.path.append("Z:\\dev")
> else:
>      sys.path.append('/home/philippe/dev')
> 
> 
> from SC.pilot.SC_Script_Processor import *

This may happen multiple times. It will be cached in a prefork 
environment, but once for each child. I have no idea how it works on 
Windows.

> def world(req):
>      ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> *** THIS IS 
> THE KILLER THAT CRASHES APACHE ***

How big? If it's a data set, why not use a database?

>      ll = ls.Reader_List() # get the reader list
> 
>      #Grab ATR from card - assume first reader
>      l_appli_conn = ls.Get_Connection(r1)
>      
>      req.send_http_header()
>      req.write("RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR() )
>      return apache.OK

We need to see your code in the imported module. It's a black box to us.

From jg.lists at sympatico.ca  Tue Oct 18 19:27:39 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Oct 18 19:25:05 2005
Subject: [mod_python] The DOs and DONTs of mod_python
In-Reply-To: <43557F9C.6060302@joreybump.com>
References: <200510182058.18300.pmartin@snakecard.com>
	<43557F9C.6060302@joreybump.com>
Message-ID: <435584EB.80709@sympatico.ca>

Jorey Bump wrote:
> Philippe C. Martin wrote:
> 
>> Since I just managed to seg fault apache I feel I should explain what 
>> my goal is with mod_python.
>>
>> I already have a fairly big library written in python which purpose is 
>> to discuss with smart cards but also provide "software" enryption 
>> capabilites: As such, this library uses modules that in turn talk to C 
>> code.
>>
>> The ultimate goal is to have users need to authenticate themselves to 
>> the servers (on smart card on each side) in order to obtain access to 
>> certain pages.
>>
>> I must also say that there is a failry large data set that needs to be 
>> loaded in memory.
> 
> 
> Why?
> 
>> The code below shows the line that creates the core dump: it 
>> instantiates that _large_ object and does a lot in the process.
>>
>> As I am an application developper more than a web guy, there are 
>> perhaps some obvious "NO NOs'" I should be aware of that are related 
>> to the apache environment.
>>
>> Please note that, although I must have bugs, the code I'm calling 
>> _seems_ to work flawlessly under Linux and Windows.
> 
> 
> It might, for a single interpreter. But apache might be forking multiple 
> children on your system. Can your machine handle 5 or more copies of 
> this object in memory?
> 
>> from mod_python import apache
>> import os
>> import sys
>> if os.name == 'nt':
>>      sys.path.append("Z:\\dev")
>> else:
>>      sys.path.append('/home/philippe/dev')
>>
>>
>> from SC.pilot.SC_Script_Processor import *
> 
> 
> This may happen multiple times. It will be cached in a prefork 
> environment, but once for each child. I have no idea how it works on 
> Windows.
> 
>> def world(req):
>>      ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> *** 
>> THIS IS THE KILLER THAT CRASHES APACHE ***
> 
> 
> How big? If it's a data set, why not use a database?
> 
>>      ll = ls.Reader_List() # get the reader list
>>
>>      #Grab ATR from card - assume first reader
>>      l_appli_conn = ls.Get_Connection(r1)
>>           req.send_http_header()
>>      req.write("RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR() )
>>      return apache.OK
> 
> 
> We need to see your code in the imported module. It's a black box to us.

Also, make sure that you consider things like permissions, paths and 
environment variables. These will be different in mod_python vs the 
command line. The mod_python interpreter will run with same uid and gid 
as apache, and your path and environment will be much simpler. Try 
adding req.write('%s' % os.environ) and compare that with os.environ 
that you see in the python interpreter run from the command line.

Regards,
Jim

From pmartin at snakecard.com  Tue Oct 18 17:16:32 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 19:25:33 2005
Subject: [mod_python] Installing mod_python (newbie)
In-Reply-To: <1129668967.29042@dscpl.user.openhosting.com>
References: <1129668967.29042@dscpl.user.openhosting.com>
Message-ID: <200510182116.32836.pmartin@snakecard.com>


many thanks

Philippe


On Tuesday 18 October 2005 08:56 pm, Graham Dumpleton wrote:
> As well as following Jorey's suggestion on a publisher example, also try
> the most basic mptest.py example as described in:
>
>   http://www.dscpl.com.au/articles/modpython-001.html
>
> This article gives points about what not to do and where to look to resolve
> issues.
>
> Jorey Bump wrote ..
>
> > Philippe C. Martin wrote:
> > > I also noticed that the localhost/mp pages shows "Apache/2.0.55 (Unix)
> > > mod_python/3.2.0b Python/2.4.2 Server at 127.0.0.1 Port 80" at the
> > > bottom.
> >
> > Okay, then mod_python is loaded and running. I think your test is
> > flawed, however. Try something simpler:
> >
> > <Directory "/var/www/html/mp">
> >    SetHandler python-program
> >    PythonHandler mod_python.publisher
> >    PythonDebug On
> > </Directory>
> >
> > Create /var/www/html/mp/hello.py:
> >
> > def world():
> >      return "Hello, world!"
> >
> > Restart apache and point a browser at:
> >
> >   http://localhost/mp/hello/world
> >
> > SetHandler causes mod_python to handle *all* files in the directory, and
> > allows you to leave off the .py extension. Publisher requires you to
> > point the URL at a function within the module. AddHandler lets you mix
> > files, but you must call the module with the .py extension.
> >
> > When using SetHandler, you can create a file named index.py with a
> > function named index, and leave both off the URL. This has historically
> > caused some problems that 3.2b claims to address. I've haven't checked
> > this myself, but try it next if you really want to use only the
> > directory in the URL with a default module/function.
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From grahamd at dscpl.com.au  Tue Oct 18 19:33:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 19:33:25 2005
Subject: [mod_python] The DOs and DONTs of mod_python
Message-ID: <1129678400.29880@dscpl.user.openhosting.com>

A few additional comments on top of what Jorey has already said.

Philippe C. Martin wrote ..
> Please note that, although I must have bugs, the code I'm calling _seems_
> to 
> work flawlessly under Linux and Windows.

Besides issues with multiple interpreters, if using a multithread Apache
MPM, such as is the case for Win32 systems and "worker" MPM on UNIX, you
have to contend with multithreading. Your system may work quite happily
if you trickle requests in serially, but get requests come in at the
same time and they can trample all over each other if your module isn't
multithread safe.

There are also various issues because of mod_python's module reloading
system. Problems can also arise if you use a module which has a C code
component and it uses the simplified threading C APIs in Python.

There are a lot of gotchas.

> from mod_python import apache
> import os
> import sys
> if os.name == 'nt':
>      sys.path.append("Z:\\dev")
> else:
>      sys.path.append('/home/philippe/dev')

You shouldn't extend sys.path in Python code when mod_python is used.
The main reason is that if mod_python reloads the module, everytime that
occurs then sys.path will be extended even if the directory is already in
there. Thus, sys.path could grow and grow. This is made worse by bugs
in mod_python.publisher in versions of mod_python < 3.2.

> from SC.pilot.SC_Script_Processor import *
> 
> 
> def world(req):
>      ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> *** THIS
> IS 
> THE KILLER THAT CRASHES APACHE ***
>      ll = ls.Reader_List() # get the reader list
> 
>      #Grab ATR from card - assume first reader
>      l_appli_conn = ls.Get_Connection(r1)
>      
>      
>      
>      req.send_http_header()

You don't set req.content_type. How is the browser mean't to know what
to do with the response. You perhaps want:

  req.content_type = 'text/plain'
  req.send_http_header()

Although, in 3.X the call to 'req.send_http_header()' is actually redundant.
It was only required in 2.7.X.

>      req.write("RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR()
> )
>      
>      return apache.OK

I have presumed that mod_python.publisher was being used because
you weren't using "handler()" for the function, but "world()". If this is the
case, you shouldn't be returning "apache.OK" as it will result in the string
"0" being appended to the response sent back to the browser.

Overall, better off perhaps saying:

  req.content_type = 'text/plain'
  return "RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR()

Graham
From pmartin at snakecard.com  Tue Oct 18 19:40:17 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 19:40:35 2005
Subject: [mod_python] The DOs and DONTs of mod_python
In-Reply-To: <1129678400.29880@dscpl.user.openhosting.com>
References: <1129678400.29880@dscpl.user.openhosting.com>
Message-ID: <200510182340.17789.pmartin@snakecard.com>

On Tuesday 18 October 2005 11:33 pm, Graham Dumpleton wrote:

Thanks,

The one good thing is that I cannot afford all of these threads to attack the 
only hardware resource (the smart card) at the same time: ISO7816 simply is 
not ready for it.

So I will have to find a way to keep the people waiting and avoid concurent 
access.

Regards,

Philippe


> A few additional comments on top of what Jorey has already said.
>
> Philippe C. Martin wrote ..
>
> > Please note that, although I must have bugs, the code I'm calling _seems_
> > to
> > work flawlessly under Linux and Windows.
>
> Besides issues with multiple interpreters, if using a multithread Apache
> MPM, such as is the case for Win32 systems and "worker" MPM on UNIX, you
> have to contend with multithreading. Your system may work quite happily
> if you trickle requests in serially, but get requests come in at the
> same time and they can trample all over each other if your module isn't
> multithread safe.
>
> There are also various issues because of mod_python's module reloading
> system. Problems can also arise if you use a module which has a C code
> component and it uses the simplified threading C APIs in Python.
>
> There are a lot of gotchas.
>
> > from mod_python import apache
> > import os
> > import sys
> > if os.name == 'nt':
> >      sys.path.append("Z:\\dev")
> > else:
> >      sys.path.append('/home/philippe/dev')
>
> You shouldn't extend sys.path in Python code when mod_python is used.
> The main reason is that if mod_python reloads the module, everytime that
> occurs then sys.path will be extended even if the directory is already in
> there. Thus, sys.path could grow and grow. This is made worse by bugs
> in mod_python.publisher in versions of mod_python < 3.2.
>
> > from SC.pilot.SC_Script_Processor import *
> >
> >
> > def world(req):
> >      ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> *** THIS
> > IS
> > THE KILLER THAT CRASHES APACHE ***
> >      ll = ls.Reader_List() # get the reader list
> >
> >      #Grab ATR from card - assume first reader
> >      l_appli_conn = ls.Get_Connection(r1)
> >
> >
> >
> >      req.send_http_header()
>
> You don't set req.content_type. How is the browser mean't to know what
> to do with the response. You perhaps want:
>
>   req.content_type = 'text/plain'
>   req.send_http_header()
>
> Although, in 3.X the call to 'req.send_http_header()' is actually
> redundant. It was only required in 2.7.X.
>
> >      req.write("RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR()
> > )
> >
> >      return apache.OK
>
> I have presumed that mod_python.publisher was being used because
> you weren't using "handler()" for the function, but "world()". If this is
> the case, you shouldn't be returning "apache.OK" as it will result in the
> string "0" being appended to the response sent back to the browser.
>
> Overall, better off perhaps saying:
>
>   req.content_type = 'text/plain'
>   return "RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR()
>
> Graham

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From pmartin at snakecard.com  Tue Oct 18 20:00:20 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 20:00:43 2005
Subject: [mod_python] The DOs and DONTs of mod_python: one problem found
In-Reply-To: <200510182340.17789.pmartin@snakecard.com>
References: <1129678400.29880@dscpl.user.openhosting.com>
	<200510182340.17789.pmartin@snakecard.com>
Message-ID: <200510190000.21469.pmartin@snakecard.com>

Hi,

It took me a while to understand that although I had apache configured to run 
as me "philippe", doing an os.getenv still returned the root environment 
variables.

Maybe forcing a source of ~/.bashrc ?

Regards,

Philippe



On Tuesday 18 October 2005 11:40 pm, Philippe C. Martin wrote:
> On Tuesday 18 October 2005 11:33 pm, Graham Dumpleton wrote:
>
> Thanks,
>
> The one good thing is that I cannot afford all of these threads to attack
> the only hardware resource (the smart card) at the same time: ISO7816
> simply is not ready for it.
>
> So I will have to find a way to keep the people waiting and avoid concurent
> access.
>
> Regards,
>
> Philippe
>
> > A few additional comments on top of what Jorey has already said.
> >
> > Philippe C. Martin wrote ..
> >
> > > Please note that, although I must have bugs, the code I'm calling
> > > _seems_ to
> > > work flawlessly under Linux and Windows.
> >
> > Besides issues with multiple interpreters, if using a multithread Apache
> > MPM, such as is the case for Win32 systems and "worker" MPM on UNIX, you
> > have to contend with multithreading. Your system may work quite happily
> > if you trickle requests in serially, but get requests come in at the
> > same time and they can trample all over each other if your module isn't
> > multithread safe.
> >
> > There are also various issues because of mod_python's module reloading
> > system. Problems can also arise if you use a module which has a C code
> > component and it uses the simplified threading C APIs in Python.
> >
> > There are a lot of gotchas.
> >
> > > from mod_python import apache
> > > import os
> > > import sys
> > > if os.name == 'nt':
> > >      sys.path.append("Z:\\dev")
> > > else:
> > >      sys.path.append('/home/philippe/dev')
> >
> > You shouldn't extend sys.path in Python code when mod_python is used.
> > The main reason is that if mod_python reloads the module, everytime that
> > occurs then sys.path will be extended even if the directory is already in
> > there. Thus, sys.path could grow and grow. This is made worse by bugs
> > in mod_python.publisher in versions of mod_python < 3.2.
> >
> > > from SC.pilot.SC_Script_Processor import *
> > >
> > >
> > > def world(req):
> > >      ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> ***
> > > THIS IS
> > > THE KILLER THAT CRASHES APACHE ***
> > >      ll = ls.Reader_List() # get the reader list
> > >
> > >      #Grab ATR from card - assume first reader
> > >      l_appli_conn = ls.Get_Connection(r1)
> > >
> > >
> > >
> > >      req.send_http_header()
> >
> > You don't set req.content_type. How is the browser mean't to know what
> > to do with the response. You perhaps want:
> >
> >   req.content_type = 'text/plain'
> >   req.send_http_header()
> >
> > Although, in 3.X the call to 'req.send_http_header()' is actually
> > redundant. It was only required in 2.7.X.
> >
> > >      req.write("RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR()
> > > )
> > >
> > >      return apache.OK
> >
> > I have presumed that mod_python.publisher was being used because
> > you weren't using "handler()" for the function, but "world()". If this is
> > the case, you shouldn't be returning "apache.OK" as it will result in the
> > string "0" being appended to the response sent back to the browser.
> >
> > Overall, better off perhaps saying:
> >
> >   req.content_type = 'text/plain'
> >   return "RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR()
> >
> > Graham

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From grahamd at dscpl.com.au  Tue Oct 18 20:19:57 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 20:20:02 2005
Subject: [mod_python] The DOs and DONTs of mod_python: one problem found
Message-ID: <1129681197.9375@dscpl.user.openhosting.com>

Philippe C. Martin wrote ..
> Hi,
> 
> It took me a while to understand that although I had apache configured
> to run 
> as me "philippe", doing an os.getenv still returned the root environment
> variables.
> 
> Maybe forcing a source of ~/.bashrc ?

Probably not a good idea. Use the SetEnv directive in Apache config
files to add extra environment variables. Eg.

  SetEnv LD_LIBRARY_PATH /usr/local/lib

At least I think that should work. May need to be at Apache global
configuration level.

Also be aware that the current working directory of Apache is not
guaranteed. Thus, when a handler is executed, the current working
directory WILL NOT be that of where the handler code resides. It
is therefore very important to use absolute pathnames to resources
you need to access. If such resource files are located in proximity
to the handler code file, best to use something like:

  import os
  __here__ = os.path.dirname(__file__)

The __here__ variable will be the name of the directory your handler
code file is in, you can then refer to resource files relative to this
base directory. By doing:

  resource = os.path.join(__here__,'templates/xxx.tmpl')

Doing this is better as it avoids absolute pathnames in as much as
the base directory is automatically determined from where the
handler code file resides.


Graham
From pmartin at snakecard.com  Tue Oct 18 20:21:01 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 20:21:21 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem maybe
	cornered.
In-Reply-To: <200510190000.21469.pmartin@snakecard.com>
References: <1129678400.29880@dscpl.user.openhosting.com>
	<200510182340.17789.pmartin@snakecard.com>
	<200510190000.21469.pmartin@snakecard.com>
Message-ID: <200510190021.01685.pmartin@snakecard.com>

Hi,

If any of you wish to look at this: this code works in command line, and 
crashes with apache. Something I'm doing is really anoying minidom.


you can fetch the xml file responsible at: www.snakecard.com/mod_python

Any help is greatly appreciated.

Regards,

Philippe
if __name__ != "__main__":
     from mod_python import apache
import os
import sys
if os.name == 'nt':
     sys.path.append("Z:\\dev")
else:
     sys.path.append('/home/philippe/dev')

import xml
import xml.dom
from xml.dom import minidom


def test():
     l_doc = minidom.parse('/var/www/html/mp/templates/sc_template.xml')
     print l_doc
     

def world(req):


     
     l_doc = minidom.parse('/var/www/html/mp/templates/sc_template.xml')

     return 'OK' #let's stop here for now


     ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> *** HIS IS THE 
KILLER ***
     ll = ls.Reader_List() # get the reader list

     #Grab ATR from card - assume first reader
     l_appli_conn = ls.Get_Connection(ll[0] )
     
     
     
     req.send_http_header()
     req.write("RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR() )

     

     
     return apache.OK
 



#*******************************************************************************
if __name__ == "__main__":
     test()

     




On Wednesday 19 October 2005 12:00 am, Philippe C. Martin wrote:
> Hi,
>
> It took me a while to understand that although I had apache configured to
> run as me "philippe", doing an os.getenv still returned the root
> environment variables.
>
> Maybe forcing a source of ~/.bashrc ?
>
> Regards,
>
> Philippe
>
> On Tuesday 18 October 2005 11:40 pm, Philippe C. Martin wrote:
> > On Tuesday 18 October 2005 11:33 pm, Graham Dumpleton wrote:
> >
> > Thanks,
> >
> > The one good thing is that I cannot afford all of these threads to attack
> > the only hardware resource (the smart card) at the same time: ISO7816
> > simply is not ready for it.
> >
> > So I will have to find a way to keep the people waiting and avoid
> > concurent access.
> >
> > Regards,
> >
> > Philippe
> >
> > > A few additional comments on top of what Jorey has already said.
> > >
> > > Philippe C. Martin wrote ..
> > >
> > > > Please note that, although I must have bugs, the code I'm calling
> > > > _seems_ to
> > > > work flawlessly under Linux and Windows.
> > >
> > > Besides issues with multiple interpreters, if using a multithread
> > > Apache MPM, such as is the case for Win32 systems and "worker" MPM on
> > > UNIX, you have to contend with multithreading. Your system may work
> > > quite happily if you trickle requests in serially, but get requests
> > > come in at the same time and they can trample all over each other if
> > > your module isn't multithread safe.
> > >
> > > There are also various issues because of mod_python's module reloading
> > > system. Problems can also arise if you use a module which has a C code
> > > component and it uses the simplified threading C APIs in Python.
> > >
> > > There are a lot of gotchas.
> > >
> > > > from mod_python import apache
> > > > import os
> > > > import sys
> > > > if os.name == 'nt':
> > > >      sys.path.append("Z:\\dev")
> > > > else:
> > > >      sys.path.append('/home/philippe/dev')
> > >
> > > You shouldn't extend sys.path in Python code when mod_python is used.
> > > The main reason is that if mod_python reloads the module, everytime
> > > that occurs then sys.path will be extended even if the directory is
> > > already in there. Thus, sys.path could grow and grow. This is made
> > > worse by bugs in mod_python.publisher in versions of mod_python < 3.2.
> > >
> > > > from SC.pilot.SC_Script_Processor import *
> > > >
> > > >
> > > > def world(req):
> > > >      ls = SC_Script_Processor() #INSTANTIATE A _BIG_ OBJECT ==> ***
> > > > THIS IS
> > > > THE KILLER THAT CRASHES APACHE ***
> > > >      ll = ls.Reader_List() # get the reader list
> > > >
> > > >      #Grab ATR from card - assume first reader
> > > >      l_appli_conn = ls.Get_Connection(r1)
> > > >
> > > >
> > > >
> > > >      req.send_http_header()
> > >
> > > You don't set req.content_type. How is the browser mean't to know what
> > > to do with the response. You perhaps want:
> > >
> > >   req.content_type = 'text/plain'
> > >   req.send_http_header()
> > >
> > > Although, in 3.X the call to 'req.send_http_header()' is actually
> > > redundant. It was only required in 2.7.X.
> > >
> > > >      req.write("RETURN CARD ATR= " + 
> > > > l_appli_conn.Get_Connection_ATR() )
> > > >
> > > >      return apache.OK
> > >
> > > I have presumed that mod_python.publisher was being used because
> > > you weren't using "handler()" for the function, but "world()". If this
> > > is the case, you shouldn't be returning "apache.OK" as it will result
> > > in the string "0" being appended to the response sent back to the
> > > browser.
> > >
> > > Overall, better off perhaps saying:
> > >
> > >   req.content_type = 'text/plain'
> > >   return "RETURN CARD ATR= " +  l_appli_conn.Get_Connection_ATR()
> > >
> > > Graham

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From grahamd at dscpl.com.au  Tue Oct 18 20:35:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 20:36:00 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
Message-ID: <1129682154.24724@dscpl.user.openhosting.com>

Philippe C. Martin wrote ..
> Hi,
> 
> If any of you wish to look at this: this code works in command line, and
> crashes with apache. Something I'm doing is really anoying minidom.
> 
> 
> you can fetch the xml file responsible at: www.snakecard.com/mod_python
> 
> Any help is greatly appreciated.

I you are using a module which does XML processing and it is literally
crashing, look at what version of the expat libraries that are installed
on your system.

A problem that can occur is that Python embeds a version of expat within
its pyexpat module. If an incompatible version of expat is also linked
in as a shared library, a crash generally occurs.

To determine the version of expat embedded in Python, do from a command
line run Python:

>>> import pyexpat
>>> pyexpat.version_info
(1, 95, 6)

Ensure that the version of any expat shared library is at least newer
than that embedded into Python, or the same version if possible.

Graham
From pmartin at snakecard.com  Tue Oct 18 20:52:50 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 20:53:08 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
In-Reply-To: <1129682154.24724@dscpl.user.openhosting.com>
References: <1129682154.24724@dscpl.user.openhosting.com>
Message-ID: <200510190052.50497.pmartin@snakecard.com>

Hi,

I'm not sure that's enough info:

Just for my knowledge, why would that have an effect in apache and not the 
command line ?

Regards,

Philippe


[philippe@pcmsc philippe]$ python
Python 2.4.2 (#1, Oct 18 2005, 04:32:14)
[GCC 3.4.1 (Mandrakelinux 10.1 3.4.1-4mdk)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import pyexpat
>>> pyexpat.version_info
(1, 95, 8)
>>> import expat
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
ImportError: No module named expat
>>>


[philippe@pcmsc SC]$ find /usr/lib/python2.4/ -name '*expat*' -exec ls -l {} 
\;
-rw-r--r--  1 root root 2586 Oct 18 
04:35 /usr/lib/python2.4/test/output/test_pyexpat
-rw-r--r--  1 root root 12012 Oct 18 
04:35 /usr/lib/python2.4/test/test_pyexpat.py
-rw-r--r--  1 root root 11514 Oct 18 
04:36 /usr/lib/python2.4/test/test_pyexpat.pyc
-rw-r--r--  1 root root 11514 Oct 18 
04:36 /usr/lib/python2.4/test/test_pyexpat.pyo
-rw-r--r--  1 root root 36379 Oct 18 
04:35 /usr/lib/python2.4/xml/dom/expatbuilder.py
-rw-r--r--  1 root root 31084 Oct 18 
04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyc
-rw-r--r--  1 root root 30453 Oct 18 
04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyo
-rw-r--r--  1 root root 112 Oct 18 
04:35 /usr/lib/python2.4/xml/parsers/expat.py
-rw-r--r--  1 root root 273 Oct 18 
04:36 /usr/lib/python2.4/xml/parsers/expat.pyc
-rw-r--r--  1 root root 273 Oct 18 
04:36 /usr/lib/python2.4/xml/parsers/expat.pyo
-rw-r--r--  1 root root 14408 Oct 18 
04:35 /usr/lib/python2.4/xml/sax/expatreader.py
-rw-r--r--  1 root root 13471 Oct 18 
04:36 /usr/lib/python2.4/xml/sax/expatreader.pyc
-rw-r--r--  1 root root 13471 Oct 18 
04:36 /usr/lib/python2.4/xml/sax/expatreader.pyo
-rwxr-xr-x  1 root root 436290 Oct 18 
04:33 /usr/lib/python2.4/lib-dynload/pyexpat.so



On Wednesday 19 October 2005 12:35 am, Graham Dumpleton wrote:
> Philippe C. Martin wrote ..
>
> > Hi,
> >
> > If any of you wish to look at this: this code works in command line, and
> > crashes with apache. Something I'm doing is really anoying minidom.
> >
> >
> > you can fetch the xml file responsible at: www.snakecard.com/mod_python
> >
> > Any help is greatly appreciated.
>
> I you are using a module which does XML processing and it is literally
> crashing, look at what version of the expat libraries that are installed
> on your system.
>
> A problem that can occur is that Python embeds a version of expat within
> its pyexpat module. If an incompatible version of expat is also linked
> in as a shared library, a crash generally occurs.
>
> To determine the version of expat embedded in Python, do from a command
>
> line run Python:
> >>> import pyexpat
> >>> pyexpat.version_info
>
> (1, 95, 6)
>
> Ensure that the version of any expat shared library is at least newer
> than that embedded into Python, or the same version if possible.
>
> Graham

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From nferrier at tapsellferrier.co.uk  Tue Oct 18 21:06:50 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Tue Oct 18 21:16:47 2005
Subject: [mod_python] The DOs and DONTs of mod_python: one problem found
In-Reply-To: <1129681197.9375@dscpl.user.openhosting.com> (Graham Dumpleton's
	message of "Tue, 18 Oct 2005 20:19:57 -0400")
References: <1129681197.9375@dscpl.user.openhosting.com>
Message-ID: <87sluynwlx.fsf@kanga.tapsellferrier.co.uk>

"Graham Dumpleton" <grahamd@dscpl.com.au> writes:

> Also be aware that the current working directory of Apache is not
> guaranteed. Thus, when a handler is executed, the current working
> directory WILL NOT be that of where the handler code resides. It
> is therefore very important to use absolute pathnames to resources
> you need to access. If such resource files are located in proximity
> to the handler code file, best to use something like:
>
>   import os
>   __here__ = os.path.dirname(__file__)

Isn't a better approach to abstract out the fixed file refs and pass
in docroot as a reference?

  def handler(http):
     docroot = http.document_root()
     do_some_call(docroot)
     .
     .
     .

Then you can set docroot in the apache config, eg:

  <VirtualHost *>
        ServerName rssagg.tapsellferrier.co.uk
        DocumentRoot /home/nferrier/projects/rssagg
        CustomLog /var/log/apache2/access.log tf_combined

        PythonPath "sys.path+['/home/nferrier/projects/rssagg']"
        PythonDebug On
        PythonEnablePdb Off

        .
        .
        .

  </VirtualHost>


Anyway, that's what I do.


Nic
From grahamd at dscpl.com.au  Tue Oct 18 21:26:24 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 21:26:29 2005
Subject: [mod_python] The DOs and DONTs of mod_python: one problem found
Message-ID: <1129685184.8818@dscpl.user.openhosting.com>

Nic Ferrier wrote ..
> "Graham Dumpleton" <grahamd@dscpl.com.au> writes:
> 
> > Also be aware that the current working directory of Apache is not
> > guaranteed. Thus, when a handler is executed, the current working
> > directory WILL NOT be that of where the handler code resides. It
> > is therefore very important to use absolute pathnames to resources
> > you need to access. If such resource files are located in proximity
> > to the handler code file, best to use something like:
> >
> >   import os
> >   __here__ = os.path.dirname(__file__)
> 
> Isn't a better approach to abstract out the fixed file refs and pass
> in docroot as a reference?
> 
>   def handler(http):
>      docroot = http.document_root()
>      do_some_call(docroot)

Depends on your setup. Other setups may not stick everything under the
true document root, but locate it elsewhere using an Alias directive.
You also have the issue of UserDir accounts, eg. "/~user/some/path".

Thus, basing it on where the code file is, is sometimes the simplest thing
to do.

The other alternative one can often use is:

  req.hlist.directory

This will be set to the pathname of the directory for which the
PythonHandler directive (or other handler dependent on phase) was
defined. This one is good to use where you have numerous applications
hosted in the one server, each with their own PythonHandler directive.
In essence it gives you a local root for that application.

Graham
From grahamd at dscpl.com.au  Tue Oct 18 21:33:44 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 21:33:48 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
Message-ID: <1129685624.15854@dscpl.user.openhosting.com>

Philippe C. Martin wrote ..
> Hi,
> 
> I'm not sure that's enough info:
> 
> Just for my knowledge, why would that have an effect in apache and not
> the 
> command line ?

Imagine if each version of expat used a slightly different structure
layout or structure size for something. An object created in the code of
the shared library when accessed by C code compiled against the library,
but that of a different version, could access the wrong bit of the
object and thus follow a bogus pointer and thus crash.

Consider this platform I have access to:

cinderella$ python
Python 2.3.4 (#1, Nov 25 2004, 17:05:37) 
[GCC 3.3.2] on sunos5
Type "help", "copyright", "credits" or "license" for more information.
>>> import pyexpat
>>> pyexpat.version_info
(1, 95, 7)
>>> ^D
cinderella$ cd /usr/local/lib
cinderella$ strings libexpat.so | grep expat_
expat_1.95.4

The libexpat.so installed on the system has an older version than that
compiled into Python. If something causes the libexpat.so to be linked
into Apache at the same time as the Python code executing from
mod_python is using the embedded one, if there is an incompatability,
there may be a problem.

In this case, I should be looking at upgrading the one installed in the
operating system.

Depending on your system the libexpat.so might be in /lib, /usr/lib,
/usr/local/lib or elsewhere.

Graham

> [philippe@pcmsc philippe]$ python
> Python 2.4.2 (#1, Oct 18 2005, 04:32:14)
> [GCC 3.4.1 (Mandrakelinux 10.1 3.4.1-4mdk)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
> >>> import pyexpat
> >>> pyexpat.version_info
> (1, 95, 8)
> >>> import expat
> Traceback (most recent call last):
>   File "<stdin>", line 1, in ?
> ImportError: No module named expat
> >>>
> 
> 
> [philippe@pcmsc SC]$ find /usr/lib/python2.4/ -name '*expat*' -exec ls
> -l {} 
> \;
> -rw-r--r--  1 root root 2586 Oct 18 
> 04:35 /usr/lib/python2.4/test/output/test_pyexpat
> -rw-r--r--  1 root root 12012 Oct 18 
> 04:35 /usr/lib/python2.4/test/test_pyexpat.py
> -rw-r--r--  1 root root 11514 Oct 18 
> 04:36 /usr/lib/python2.4/test/test_pyexpat.pyc
> -rw-r--r--  1 root root 11514 Oct 18 
> 04:36 /usr/lib/python2.4/test/test_pyexpat.pyo
> -rw-r--r--  1 root root 36379 Oct 18 
> 04:35 /usr/lib/python2.4/xml/dom/expatbuilder.py
> -rw-r--r--  1 root root 31084 Oct 18 
> 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyc
> -rw-r--r--  1 root root 30453 Oct 18 
> 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyo
> -rw-r--r--  1 root root 112 Oct 18 
> 04:35 /usr/lib/python2.4/xml/parsers/expat.py
> -rw-r--r--  1 root root 273 Oct 18 
> 04:36 /usr/lib/python2.4/xml/parsers/expat.pyc
> -rw-r--r--  1 root root 273 Oct 18 
> 04:36 /usr/lib/python2.4/xml/parsers/expat.pyo
> -rw-r--r--  1 root root 14408 Oct 18 
> 04:35 /usr/lib/python2.4/xml/sax/expatreader.py
> -rw-r--r--  1 root root 13471 Oct 18 
> 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyc
> -rw-r--r--  1 root root 13471 Oct 18 
> 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyo
> -rwxr-xr-x  1 root root 436290 Oct 18 
> 04:33 /usr/lib/python2.4/lib-dynload/pyexpat.so
> 
> 
> 
> On Wednesday 19 October 2005 12:35 am, Graham Dumpleton wrote:
> > Philippe C. Martin wrote ..
> >
> > > Hi,
> > >
> > > If any of you wish to look at this: this code works in command line,
> and
> > > crashes with apache. Something I'm doing is really anoying minidom.
> > >
> > >
> > > you can fetch the xml file responsible at: www.snakecard.com/mod_python
> > >
> > > Any help is greatly appreciated.
> >
> > I you are using a module which does XML processing and it is literally
> > crashing, look at what version of the expat libraries that are installed
> > on your system.
> >
> > A problem that can occur is that Python embeds a version of expat within
> > its pyexpat module. If an incompatible version of expat is also linked
> > in as a shared library, a crash generally occurs.
> >
> > To determine the version of expat embedded in Python, do from a command
> >
> > line run Python:
> > >>> import pyexpat
> > >>> pyexpat.version_info
> >
> > (1, 95, 6)
> >
> > Ensure that the version of any expat shared library is at least newer
> > than that embedded into Python, or the same version if possible.
> >
> > Graham
> 
> -- 
> *************************************
> Philippe C. Martin
> SnakeCard, LLC
> www.snakecard.com
> +1 405 694 8098
> *************************************
From nferrier at tapsellferrier.co.uk  Tue Oct 18 21:31:00 2005
From: nferrier at tapsellferrier.co.uk (Nic Ferrier)
Date: Tue Oct 18 21:36:42 2005
Subject: [mod_python] The DOs and DONTs of mod_python: one problem found
In-Reply-To: <1129685184.8818@dscpl.user.openhosting.com> 
	(Graham Dumpleton's message of "Tue, 18 Oct 2005 21:26:24 -0400")
References: <1129685184.8818@dscpl.user.openhosting.com>
Message-ID: <87psq2nvhn.fsf@kanga.tapsellferrier.co.uk>

"Graham Dumpleton" <grahamd@dscpl.com.au> writes:

> The other alternative one can often use is:
>
>   req.hlist.directory
>
> This will be set to the pathname of the directory for which the
> PythonHandler directive (or other handler dependent on phase) was
> defined. This one is good to use where you have numerous applications
> hosted in the one server, each with their own PythonHandler directive.
> In essence it gives you a local root for that application.

Yeah... nice one.

Things like this should be in the mod_python document.


Nic
From pmartin at snakecard.com  Tue Oct 18 21:45:43 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 21:46:00 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
In-Reply-To: <1129685624.15854@dscpl.user.openhosting.com>
References: <1129685624.15854@dscpl.user.openhosting.com>
Message-ID: <200510190145.43404.pmartin@snakecard.com>

Got it I think: you mean more than one library are on my disk ?

If so, that's the only I found in the LIB path: /usr/lib/libexpat.so.0.5.0.

So that would mean that apache and python use the same right ?

I'll do some google to see if it is an old one.

Regards,

Philippe





On Wednesday 19 October 2005 01:33 am, Graham Dumpleton wrote:
> Philippe C. Martin wrote ..
>
> > Hi,
> >
> > I'm not sure that's enough info:
> >
> > Just for my knowledge, why would that have an effect in apache and not
> > the
> > command line ?
>
> Imagine if each version of expat used a slightly different structure
> layout or structure size for something. An object created in the code of
> the shared library when accessed by C code compiled against the library,
> but that of a different version, could access the wrong bit of the
> object and thus follow a bogus pointer and thus crash.
>
> Consider this platform I have access to:
>
> cinderella$ python
> Python 2.3.4 (#1, Nov 25 2004, 17:05:37)
> [GCC 3.3.2] on sunos5
> Type "help", "copyright", "credits" or "license" for more information.
>
> >>> import pyexpat
> >>> pyexpat.version_info
>
> (1, 95, 7)
>
> >>> ^D
>
> cinderella$ cd /usr/local/lib
> cinderella$ strings libexpat.so | grep expat_
> expat_1.95.4
>
> The libexpat.so installed on the system has an older version than that
> compiled into Python. If something causes the libexpat.so to be linked
> into Apache at the same time as the Python code executing from
> mod_python is using the embedded one, if there is an incompatability,
> there may be a problem.
>
> In this case, I should be looking at upgrading the one installed in the
> operating system.
>
> Depending on your system the libexpat.so might be in /lib, /usr/lib,
> /usr/local/lib or elsewhere.
>
> Graham
>
> > [philippe@pcmsc philippe]$ python
> > Python 2.4.2 (#1, Oct 18 2005, 04:32:14)
> > [GCC 3.4.1 (Mandrakelinux 10.1 3.4.1-4mdk)] on linux2
> > Type "help", "copyright", "credits" or "license" for more information.
> >
> > >>> import pyexpat
> > >>> pyexpat.version_info
> >
> > (1, 95, 8)
> >
> > >>> import expat
> >
> > Traceback (most recent call last):
> >   File "<stdin>", line 1, in ?
> > ImportError: No module named expat
> >
> >
> >
> > [philippe@pcmsc SC]$ find /usr/lib/python2.4/ -name '*expat*' -exec ls
> > -l {}
> > \;
> > -rw-r--r--  1 root root 2586 Oct 18
> > 04:35 /usr/lib/python2.4/test/output/test_pyexpat
> > -rw-r--r--  1 root root 12012 Oct 18
> > 04:35 /usr/lib/python2.4/test/test_pyexpat.py
> > -rw-r--r--  1 root root 11514 Oct 18
> > 04:36 /usr/lib/python2.4/test/test_pyexpat.pyc
> > -rw-r--r--  1 root root 11514 Oct 18
> > 04:36 /usr/lib/python2.4/test/test_pyexpat.pyo
> > -rw-r--r--  1 root root 36379 Oct 18
> > 04:35 /usr/lib/python2.4/xml/dom/expatbuilder.py
> > -rw-r--r--  1 root root 31084 Oct 18
> > 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyc
> > -rw-r--r--  1 root root 30453 Oct 18
> > 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyo
> > -rw-r--r--  1 root root 112 Oct 18
> > 04:35 /usr/lib/python2.4/xml/parsers/expat.py
> > -rw-r--r--  1 root root 273 Oct 18
> > 04:36 /usr/lib/python2.4/xml/parsers/expat.pyc
> > -rw-r--r--  1 root root 273 Oct 18
> > 04:36 /usr/lib/python2.4/xml/parsers/expat.pyo
> > -rw-r--r--  1 root root 14408 Oct 18
> > 04:35 /usr/lib/python2.4/xml/sax/expatreader.py
> > -rw-r--r--  1 root root 13471 Oct 18
> > 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyc
> > -rw-r--r--  1 root root 13471 Oct 18
> > 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyo
> > -rwxr-xr-x  1 root root 436290 Oct 18
> > 04:33 /usr/lib/python2.4/lib-dynload/pyexpat.so
> >
> > On Wednesday 19 October 2005 12:35 am, Graham Dumpleton wrote:
> > > Philippe C. Martin wrote ..
> > >
> > > > Hi,
> > > >
> > > > If any of you wish to look at this: this code works in command line,
> >
> > and
> >
> > > > crashes with apache. Something I'm doing is really anoying minidom.
> > > >
> > > >
> > > > you can fetch the xml file responsible at:
> > > > www.snakecard.com/mod_python
> > > >
> > > > Any help is greatly appreciated.
> > >
> > > I you are using a module which does XML processing and it is literally
> > > crashing, look at what version of the expat libraries that are
> > > installed on your system.
> > >
> > > A problem that can occur is that Python embeds a version of expat
> > > within its pyexpat module. If an incompatible version of expat is also
> > > linked in as a shared library, a crash generally occurs.
> > >
> > > To determine the version of expat embedded in Python, do from a command
> > >
> > > line run Python:
> > > >>> import pyexpat
> > > >>> pyexpat.version_info
> > >
> > > (1, 95, 6)
> > >
> > > Ensure that the version of any expat shared library is at least newer
> > > than that embedded into Python, or the same version if possible.
> > >
> > > Graham
> >
> > --
> > *************************************
> > Philippe C. Martin
> > SnakeCard, LLC
> > www.snakecard.com
> > +1 405 694 8098
> > *************************************

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From rjsquire at ebi-online.com  Tue Oct 18 23:00:05 2005
From: rjsquire at ebi-online.com (Robert Squire)
Date: Tue Oct 18 23:01:01 2005
Subject: [mod_python] Gentoo Linux - mod_python - not working
Message-ID: <4355B6B5.1040304@ebi-online.com>

Hello:

I am unable to get mod_python to parse and execute .py files.  I 
followed the directions on the mod_python site.
I've tried to include any information that may of help to someone 
familiar with mod_python configuration.
Any suggestion are very welcome.

Thank you:

-Rob Squire


Here is my Directory configuration:
-----------------------------------------------------
<Directory "/var/www/localhost/htdocs">
        AddHandler python-program .py
        PythonHandler mptest
        PythonDebug On
-----------------------------------------------------
Here is the file I'm using:
-----------------------------------------------------
didactic htdocs # cat mptest.py
from mod_python import apache

def hadler(req):
        req.content_type = 'text/plain'
        req.sent_http_header()
        req.write("Hello World!")
        return apache.OK

-----------------------------------------------------


My system is as follows:
-----------------------------------------------------
apache 2.0.54
python 2.4.1
mod_python 3.1.4
-----------------------------------------------------
In IE I get the source of the .py file and in Firefox I get a prompt to
download the file.
To try to determine what's going on I start apache on the command line:
-----------------------------------------------------
apache2 -e debug -D DEFAULT_VHOST -D BLOG_VHOST -D FASTCGI -D PYTHON -D 
INFO -X
-----------------------------------------------------
I thought this would show me status messages in the shell but it doesn't.
When apache starts like this I get this output:
-----------------------------------------------------
didactic conf.d # apache2 -e debug -D DEFAULT_VHOST -D BLOG_VHOST -D 
PYTHON -D F
ASTCGI -D INFO -X
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
access_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module auth_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
auth_anon_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
auth_dbm_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
auth_digest_modu
le
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
charset_lite_mod
ule
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module env_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
expires_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
headers_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module mime_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
negotiation_modu
le
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
setenvif_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
log_config_modul
e
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module logio_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module cgi_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module cgid_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
suexec_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module alias_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
rewrite_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module info_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
status_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
actions_module
[Tue Oct 18 22:57:01 2005] [debug] mod_so.c(248): loaded module 
autoindex_module
[Tue Oct 18 22:57:02 2005] [debug] mod_so.c(248): loaded module dir_module
[Tue Oct 18 22:57:02 2005] [debug] mod_so.c(248): loaded module 
ext_filter_modul
e
[Tue Oct 18 22:57:02 2005] [debug] mod_so.c(248): loaded module 
deflate_module
[Tue Oct 18 22:57:02 2005] [debug] mod_so.c(248): loaded module 
include_module
[Tue Oct 18 22:57:02 2005] [debug] mod_so.c(248): loaded module 
python_module
[Tue Oct 18 22:57:02 2005] [debug] mod_so.c(248): loaded module 
fastcgi_module
apache2: Could not determine the server's fully qualified domain name, 
using 127
.0.0.1 for ServerName
-----------------------------------------------------
The python_module is loading according to this output and in my server-info
I get this:
-----------------------------------------------------
Module Name: mod_python.c
Content handlers: yes
Configuration Phase Participation: Create Directory Config, Merge 
Directory Configs, Create Server Config, Merge Server Configs
Request Phase Participation: Post-Read Request, Header Parse, Translate 
Path, Check Access, Verify User ID, Verify User Access, Check Type, 
Fixups, Logging
Module Directives:
    PythonAccessHandler - Python access by host address handlers.
        PythonAuthenHandler - Python authentication handlers.
    PythonAutoReload - Set to Off if you don't want changed modules to 
reload.
        PythonAuthzHandler - Python authorization handlers.
    PythonCleanupHandler - Python clean up handlers.
        PythonConnectionHandler - Python connection handlers.
    PythonDebug - Send (most) Python error output to the client rather 
than logfile.
        PythonEnablePdb - Run handlers in PDB (Python Debugger). Use 
with -DONE_PROCESS.
    PythonFixupHandler - Python fixups handlers.
        PythonHandler - Python request handlers.
    PythonHeaderParserHandler - Python header parser handlers.
        PythonImport - Module and interpreter name to be imported at 
server/child init time.
    PythonInitHandler - Python request initialization handler.
        PythonInterpPerDirective - Create subinterpreters per directive.
    PythonInterpPerDirectory - Create subinterpreters per directory.
        PythonInterpreter - Forces a specific Python interpreter name to 
be used here.
    PythonLogHandler - Python logger handlers.
        PythonHandlerModule - A Python module containing handlers to be 
executed.
    PythonOptimize - Set the equivalent of the -O command-line flag on 
the interpreter.
        PythonOption - Useful to pass custom configuration information 
to scripts.
    PythonPath - Python path, specified in Python list syntax.
        PythonPostReadRequestHandler - Python post read-request handlers.
    PythonTransHandler - Python filename to URI translation handlers.
        PythonTypeHandler - Python MIME type checker/setter handlers.
    PythonInputFilter - Python input filter.
        PythonOutputFilter - Python output filter.
Current Configuration:
    <Directory "/var/www/localhost/htdocs">
            PythonHandler mptest
    <Directory "/var/www/localhost/htdocs">
        PythonDebug On
    </Directory>
    </Directory>

From pmartin at snakecard.com  Tue Oct 18 23:03:09 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Tue Oct 18 23:04:26 2005
Subject: [mod_python] Smart Card and mod_python and browser pluggins
Message-ID: <200510190303.09183.pmartin@snakecard.com>

Hi,

I have "disabled"  the xml feature for now to go on with my study.

I can talk to my smart card on the server side and get the information on the 
browser.

On the browser side, I will, most likely, need to write browsers pluggins as 
it seem the only way (besides stuff like activeX which does not cover all the 
necessary platforms :-) to get access to a hardware device from the browser.

The current authentication mechanism my cards use requires that data go back 
and forth a couple of times between the server (master/mother card) and the 
client (child card).

Also the data exchanged, if possible, must not appear on the display. So I 
need some type of handler that'll allow that "back and forth/hidden 
exchange".

My current assumption is that the two pluggins I will attack: firefox/mozilla 
and I/E will give me access to Javascript to discuss with mod_python.

I know a _little_ about Javascript and it always has to do with writing and 
reading HTML tags (I'm not even sure that's the correct term)

Is there some common mechanism avaialbe ?

Is one of the solution to put the data on the page (maybe hidden tags ?). 
Still there is a need for some type of synchronization between both world.

I hope my questions make sense.

Thanks and regards,

Philippe

 






-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From jstubbs at work-at.co.jp  Tue Oct 18 23:15:58 2005
From: jstubbs at work-at.co.jp (Jason Stubbs)
Date: Tue Oct 18 23:18:08 2005
Subject: [mod_python] Gentoo Linux - mod_python - not working
In-Reply-To: <4355B6B5.1040304@ebi-online.com>
References: <4355B6B5.1040304@ebi-online.com>
Message-ID: <4355BA6E.9060605@work-at.co.jp>

Robert Squire wrote:
> Here is the file I'm using:
> -----------------------------------------------------
> didactic htdocs # cat mptest.py
> from mod_python import apache
> 
> def hadler(req):
       ^^^^^^
>        req.content_type = 'text/plain'
>        req.sent_http_header()
>        req.write("Hello World!")
>        return apache.OK
> 
> -----------------------------------------------------

Don't you just hate typos? ;)

--
Jason Stubbs
From list at joreybump.com  Tue Oct 18 23:20:22 2005
From: list at joreybump.com (Jorey Bump)
Date: Tue Oct 18 23:20:28 2005
Subject: [mod_python] Gentoo Linux - mod_python - not working
In-Reply-To: <4355B6B5.1040304@ebi-online.com>
References: <4355B6B5.1040304@ebi-online.com>
Message-ID: <4355BB76.2060009@joreybump.com>

Robert Squire wrote:

> -----------------------------------------------------
> Here is the file I'm using:
> -----------------------------------------------------
> didactic htdocs # cat mptest.py
> from mod_python import apache
> 
> def hadler(req):
>        req.content_type = 'text/plain'
>        req.sent_http_header()
>        req.write("Hello World!")
>        return apache.OK

Are the typos in the file, or only in this message?
From grahamd at dscpl.com.au  Tue Oct 18 23:52:06 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 18 23:52:11 2005
Subject: [mod_python] Gentoo Linux - mod_python - not working
Message-ID: <1129693926.18688@dscpl.user.openhosting.com>

Jorey Bump wrote ..
> Robert Squire wrote:
> 
> > -----------------------------------------------------
> > Here is the file I'm using:
> > -----------------------------------------------------
> > didactic htdocs # cat mptest.py
> > from mod_python import apache
> > 
> > def hadler(req):
> >        req.content_type = 'text/plain'
> >        req.sent_http_header()
> >        req.write("Hello World!")
> >        return apache.OK
> 
> Are the typos in the file, or only in this message?

FWIW, it is a known issue that mod_python doesn't correctly raise an
error when you do make such a typo. See:

  http://issues.apache.org/jira/browse/MODPYTHON-46

This is fixed in 3.2 and having "mptest" but then "mptest.handler" not
being present, should yield an error.

Mod_python error: "PythonHandler mptest"

Traceback (most recent call last):

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py", line 291, in HandlerDispatch
    arg=req, silent=hlist.silent)

  File "/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages/mod_python/apache.py", line 528, in resolve_object
    raise AttributeError, s

AttributeError: module '/Users/grahamd/Sites/slash/mptest.py' contains no 'handler'

Graham
From grahamd at dscpl.com.au  Wed Oct 19 00:16:48 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 00:16:55 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
Message-ID: <1129695408.10923@dscpl.user.openhosting.com>

Philippe C. Martin wrote ..
> Got it I think: you mean more than one library are on my disk ?

Not quite. The version embedded in the pyexpat module of Python is what
is effectively called statically linked. The libexpat.so in your lib
directory would be dynamically loaded as a shared library at some point
because of some dependency on that library by something else. Usually
this is Apache itself and it will get loaded as soon as Apache is started.

For those who understand what I am talking about, yes I know that the
Python module is dynamically loaded into Python, but the expat part is
statically linked into the Python module .so which is loaded.

> If so, that's the only I found in the LIB path: /usr/lib/libexpat.so.0.5.0.
> 
> So that would mean that apache and python use the same right ?

No. When Python is run from the command line and pyexpat is imported,
it uses the version statically linked into the Python module .so. When
Apache starts up it will load the libexpat.so from lib.

Now, when mod_python is run in the context of Apache, when the
pyexpat module is imported, because Apache has already loaded libexpat.so
from the lib directory, the version of expat statically linked into the Python
module .so is actually ignored and it uses the version that Apache had
already loaded.

Going back to my machine here (different one this time), from command
line:

  grahamd@fiona:public_html$ python
  Python 2.3.5 (#1, Aug 12 2005, 10:35:05) 
  [GCC 3.3.2] on sunos5
  Type "help", "copyright", "credits" or "license" for more information.
  >>> import pyexpat   
  >>> pyexpat.version_info
  (1, 95, 7)

If I run "ldd" on the Apache httpd program to see what version of libexpat
it is using I get:

  grahamd@fiona:public_html$ ldd /usr/local/sys/apache/bin/httpd 
        libaprutil-0.so.0 =>     /usr/local/lib/libaprutil-0.so.0
        libexpat.so.0 =>         /usr/local/lib/libexpat.so.0
        libapr-0.so.0 =>         /usr/local/lib/libapr-0.so.0
        libsendfile.so.1 =>      /usr/lib/libsendfile.so.1
        librt.so.1 =>    /usr/lib/librt.so.1
        libm.so.1 =>     /usr/lib/libm.so.1
        libsocket.so.1 =>        /usr/lib/libsocket.so.1
        libnsl.so.1 =>   /usr/lib/libnsl.so.1
        libresolv.so.2 =>        /usr/lib/libresolv.so.2
        libpthread.so.1 =>       /usr/lib/libpthread.so.1
        libdl.so.1 =>    /usr/lib/libdl.so.1
        libthread.so.1 =>        /usr/lib/libthread.so.1
        libc.so.1 =>     /usr/lib/libc.so.1
        libaio.so.1 =>   /usr/lib/libaio.so.1
        libmd5.so.1 =>   /usr/lib/libmd5.so.1
        libmp.so.2 =>    /usr/lib/libmp.so.2
        /usr/platform/SUNW,UltraAX-i2/lib/libc_psr.so.1
        /usr/platform/SUNW,UltraAX-i2/lib/libmd5_psr.so.1

The version number on the library itself is useless, so run "strings"
command to get the version number out of the library itself.

  grahamd@fiona:public_html$ strings /usr/local/lib/libexpat.so.0 | grep expat_
  expat_1.95.2

Thus Apache is actually using 1.95.2 whereas the Python module .so for
pyexpat has 1.95.7 embedded into it.

Now if I create a mod_python.publisher function:

  import pyexpat

  def index():
    return pyexpat.version_info

and access that page, I get returned:

  1952

I don't quite understand why it is returning an integer rather than a tuple,
it may actually indicate a problem. As one can see though, it is now actually
using 1.95.2 which Apache loaded and not that embedded in the pyexpat
Python module .so.

The important bit in the above which you didn't do was to run "strings" on
libexpat.so file. Hopefully this will find that string I was picking up which
indicated which version was used.

BTW, you may be able to confirm whether the expat version is the problem
by simply creating a handler which all it does is import "pyexpat" as above.
If that crashes Apache you probably have a problem as I recollect that just
loading pyexpat will cause the crash, you don't actually have to use it. This
though may only be the case on certain platforms. Another module you
can try importing is "xmlrpclib". This one from memory definitely crashed
Apache for me when I personally had this expat library version problem on
a Linux platform, even without trying to use the functionality of the module.

Hope I made it clear this time.

Graham

> On Wednesday 19 October 2005 01:33 am, Graham Dumpleton wrote:
> > Philippe C. Martin wrote ..
> >
> > > Hi,
> > >
> > > I'm not sure that's enough info:
> > >
> > > Just for my knowledge, why would that have an effect in apache and
> not
> > > the
> > > command line ?
> >
> > Imagine if each version of expat used a slightly different structure
> > layout or structure size for something. An object created in the code
> of
> > the shared library when accessed by C code compiled against the library,
> > but that of a different version, could access the wrong bit of the
> > object and thus follow a bogus pointer and thus crash.
> >
> > Consider this platform I have access to:
> >
> > cinderella$ python
> > Python 2.3.4 (#1, Nov 25 2004, 17:05:37)
> > [GCC 3.3.2] on sunos5
> > Type "help", "copyright", "credits" or "license" for more information.
> >
> > >>> import pyexpat
> > >>> pyexpat.version_info
> >
> > (1, 95, 7)
> >
> > >>> ^D
> >
> > cinderella$ cd /usr/local/lib
> > cinderella$ strings libexpat.so | grep expat_
> > expat_1.95.4
> >
> > The libexpat.so installed on the system has an older version than that
> > compiled into Python. If something causes the libexpat.so to be linked
> > into Apache at the same time as the Python code executing from
> > mod_python is using the embedded one, if there is an incompatability,
> > there may be a problem.
> >
> > In this case, I should be looking at upgrading the one installed in the
> > operating system.
> >
> > Depending on your system the libexpat.so might be in /lib, /usr/lib,
> > /usr/local/lib or elsewhere.
> >
> > Graham
> >
> > > [philippe@pcmsc philippe]$ python
> > > Python 2.4.2 (#1, Oct 18 2005, 04:32:14)
> > > [GCC 3.4.1 (Mandrakelinux 10.1 3.4.1-4mdk)] on linux2
> > > Type "help", "copyright", "credits" or "license" for more information.
> > >
> > > >>> import pyexpat
> > > >>> pyexpat.version_info
> > >
> > > (1, 95, 8)
> > >
> > > >>> import expat
> > >
> > > Traceback (most recent call last):
> > >   File "<stdin>", line 1, in ?
> > > ImportError: No module named expat
> > >
> > >
> > >
> > > [philippe@pcmsc SC]$ find /usr/lib/python2.4/ -name '*expat*' -exec
> ls
> > > -l {}
> > > \;
> > > -rw-r--r--  1 root root 2586 Oct 18
> > > 04:35 /usr/lib/python2.4/test/output/test_pyexpat
> > > -rw-r--r--  1 root root 12012 Oct 18
> > > 04:35 /usr/lib/python2.4/test/test_pyexpat.py
> > > -rw-r--r--  1 root root 11514 Oct 18
> > > 04:36 /usr/lib/python2.4/test/test_pyexpat.pyc
> > > -rw-r--r--  1 root root 11514 Oct 18
> > > 04:36 /usr/lib/python2.4/test/test_pyexpat.pyo
> > > -rw-r--r--  1 root root 36379 Oct 18
> > > 04:35 /usr/lib/python2.4/xml/dom/expatbuilder.py
> > > -rw-r--r--  1 root root 31084 Oct 18
> > > 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyc
> > > -rw-r--r--  1 root root 30453 Oct 18
> > > 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyo
> > > -rw-r--r--  1 root root 112 Oct 18
> > > 04:35 /usr/lib/python2.4/xml/parsers/expat.py
> > > -rw-r--r--  1 root root 273 Oct 18
> > > 04:36 /usr/lib/python2.4/xml/parsers/expat.pyc
> > > -rw-r--r--  1 root root 273 Oct 18
> > > 04:36 /usr/lib/python2.4/xml/parsers/expat.pyo
> > > -rw-r--r--  1 root root 14408 Oct 18
> > > 04:35 /usr/lib/python2.4/xml/sax/expatreader.py
> > > -rw-r--r--  1 root root 13471 Oct 18
> > > 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyc
> > > -rw-r--r--  1 root root 13471 Oct 18
> > > 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyo
> > > -rwxr-xr-x  1 root root 436290 Oct 18
> > > 04:33 /usr/lib/python2.4/lib-dynload/pyexpat.so
> > >
> > > On Wednesday 19 October 2005 12:35 am, Graham Dumpleton wrote:
> > > > Philippe C. Martin wrote ..
> > > >
> > > > > Hi,
> > > > >
> > > > > If any of you wish to look at this: this code works in command
> line,
> > >
> > > and
> > >
> > > > > crashes with apache. Something I'm doing is really anoying minidom.
> > > > >
> > > > >
> > > > > you can fetch the xml file responsible at:
> > > > > www.snakecard.com/mod_python
> > > > >
> > > > > Any help is greatly appreciated.
> > > >
> > > > I you are using a module which does XML processing and it is literally
> > > > crashing, look at what version of the expat libraries that are
> > > > installed on your system.
> > > >
> > > > A problem that can occur is that Python embeds a version of expat
> > > > within its pyexpat module. If an incompatible version of expat is
> also
> > > > linked in as a shared library, a crash generally occurs.
> > > >
> > > > To determine the version of expat embedded in Python, do from a command
> > > >
> > > > line run Python:
> > > > >>> import pyexpat
> > > > >>> pyexpat.version_info
> > > >
> > > > (1, 95, 6)
> > > >
> > > > Ensure that the version of any expat shared library is at least newer
> > > > than that embedded into Python, or the same version if possible.
> > > >
> > > > Graham
> > >
> > > --
> > > *************************************
> > > Philippe C. Martin
> > > SnakeCard, LLC
> > > www.snakecard.com
> > > +1 405 694 8098
> > > *************************************
> 
> -- 
> *************************************
> Philippe C. Martin
> SnakeCard, LLC
> www.snakecard.com
> +1 405 694 8098
> *************************************
From erdibalint at freemail.hu  Wed Oct 19 02:21:46 2005
From: erdibalint at freemail.hu (Erdi Balint)
Date: Wed Oct 19 02:21:45 2005
Subject: [mod_python] Session handling in mod_python 2.7
Message-ID: <4355E5FA.3040300@freemail.hu>

Hi,

I would like to use sessions in mod_python 2.7 and as I saw on the 
mod_python faq, version 2.7 does not include this, so I installed Myghty 
to achieve this. My question is how do access the Myghty session from 
mod_python's Request object? So if I have in trivia.py:

from mod_python import apache
from myghty.session import Session

...

def login(req):
     req.session = Session(req,data_dir='/tmp')
     req.session['faz'] = user_row['id']
     req.session.save()
     req.headers_out['location'] ='http://localhost/trivia/trivia.py/main'

...

def main(req):
     session = req.session ## this yields an AttributeError, what should 
be put here?	

I reckon that I have to replace the mod_python Request object (req) with 
the Request object from the Myghty package, but I am not sure how or if 
there is another (maybe simpler solution). In the Myghty documentation 
it says that there is interaction between mod_python and Myghty but it 
is not very detailed on what I'm asking :(

Thank you for your help,
Balint
From vmanera at manord.com  Wed Oct 19 04:45:42 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Wed Oct 19 04:49:28 2005
Subject: [mod_python] Serius problem in mod_python-3.2.2b
Message-ID: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763C@NEWMAIL.manord.com>

I Installed the beta from mod_python-3.2.2b.win32-py2.4.exe
Apache has started well

In my login program, the first checked, I use the python variable
__name__  and this is the problem:

In early mod_python version the value was as
expetded:-->cgi-mpy_login<---Module name

In this beta:-->D_discoE_script_cgi_cgi_mpy_cgi_mpy_login_py <---Module
name 


Why mod python change the python variable __name__ ????? 

I hope this is a bug

Villiam 
Italy

From nicolas.lehuen at gmail.com  Wed Oct 19 05:04:35 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Oct 19 05:04:45 2005
Subject: [mod_python] Serius problem in mod_python-3.2.2b
In-Reply-To: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763C@NEWMAIL.manord.com>
References: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763C@NEWMAIL.manord.com>
Message-ID: <c298f2d70510190204j6303c7bbo@mail.gmail.com>

No, it's not a bug, it's a feature. In the new publisher, published module
are no longer stored in sys.modules and the __name__ attribute of the module
is based on the filename.

Why is this a problem to you ? Giving the published module a simpler name is
not that complicated, but I need to understand why it's important.
Especially, if it is because you expect to be able to import the module by
name from another module, tell me because things will change in the future
mod_python releases.

Regards,
Nicolas

2005/10/19, Manera, Villiam <vmanera@manord.com>:
>
> I Installed the beta from mod_python-3.2.2b.win32-py2.4.exe
> Apache has started well
>
> In my login program, the first checked, I use the python variable
> __name__ and this is the problem:
>
> In early mod_python version the value was as
> expetded:-->cgi-mpy_login<---Module name
>
> In this beta:-->D_discoE_script_cgi_cgi_mpy_cgi_mpy_login_py <---Module
> name
>
>
> Why mod python change the python variable __name__ ?????
>
> I hope this is a bug
>
> Villiam
> Italy
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051019/01f8767b/attachment-0001.html
From grahamd at dscpl.com.au  Wed Oct 19 05:08:32 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 05:09:03 2005
Subject: [mod_python] Serius problem in mod_python-3.2.2b
In-Reply-To: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763C@NEWMAIL.manord.com>
References: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763C@NEWMAIL.manord.com>
Message-ID: <E789DC4F-2244-4126-9B90-FC7BDBC289E1@dscpl.com.au>


On 19/10/2005, at 6:45 PM, Manera, Villiam wrote:

> I Installed the beta from mod_python-3.2.2b.win32-py2.4.exe
> Apache has started well
>
> In my login program, the first checked, I use the python variable
> __name__  and this is the problem:
>
> In early mod_python version the value was as
> expetded:-->cgi-mpy_login<---Module name
>
> In this beta:-->D_discoE_script_cgi_cgi_mpy_cgi_mpy_login_py <--- 
> Module
> name
>
> Why mod python change the python variable __name__ ?????
>
> I hope this is a bug

No it isn't a bug. It is a result of first steps towards fixing a whole
lot of problems with the module loading system in mod_python.
See the following link for a list of known issues in mod_python < 3.2.

   http://www.dscpl.com.au/articles/modpython-003.html

In 3.2, mod_python.publisher no longer uses the standard Python
module importing system as a result of the changes made so far.

You can get the same result as what you want by using:

   import os
   name = os.path.splitext(os.path.split(__file__)[1])[0]

This will work for mod_python < 3.2 as well.

Graham
From grahamd at dscpl.com.au  Wed Oct 19 05:15:45 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 05:15:54 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
In-Reply-To: <1129695408.10923@dscpl.user.openhosting.com>
References: <1129695408.10923@dscpl.user.openhosting.com>
Message-ID: <15657058-5F7B-473E-8B4E-6ED06742C895@dscpl.com.au>


On 19/10/2005, at 2:16 PM, Graham Dumpleton wrote:

>
> Now if I create a mod_python.publisher function:
>
>   import pyexpat
>
>   def index():
>     return pyexpat.version_info
>
> and access that page, I get returned:
>
>   1952
>
> I don't quite understand why it is returning an integer rather than  
> a tuple,
> it may actually indicate a problem. As one can see though, it is  
> now actually
> using 1.95.2 which Apache loaded and not that embedded in the pyexpat
> Python module .so.

Remember now why it is an integer. In mod_python.publisher in mod_python
3.2 the behaviour changed in respect of how iterable values are  
converted
to a string. Prior to 3.2, a list would be converted using str(). In  
3.2 it uses the
code:

     elif hasattr(object,'__iter__'):

         # To publish iterables, we recursively publish each item
         # This way, generators can be published
         result = False
         for item in object:
             result |= publish_object(req,item)
         return result

That is, it iterates over each item, effectively concatenating  
together the values
for each item. Thus we get "1952" instead of "(1,95,2)".

I wasn't keen on this when I saw it had been done and still not happy  
about
it. I felt that this is something that should have been done at the  
user level. :-(

Graham
From grahamd at dscpl.com.au  Wed Oct 19 05:21:54 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 05:22:08 2005
Subject: [mod_python] web browser tries to download bytecode
In-Reply-To: <OF24CEA8A6.B92BBA1F-ON8725709E.005E858F-8625709E.005ED32B@us.ibm.com>
References: <OF24CEA8A6.B92BBA1F-ON8725709E.005E858F-8625709E.005ED32B@us.ibm.com>
Message-ID: <E3B68FDD-9D11-422D-8896-9AE84817B527@dscpl.com.au>


On 19/10/2005, at 3:16 AM, Ken Bradshaw wrote:

> Hello again,
> I've come across a weird issue. I've got a .py file on the  
> webserver that a form posts to. The first time the py file is  
> compiled to pyc, it responds correctly. The second time however  
> that the file receives a post, the web browser receives a response  
> to download the bytecode? Anyone ever had this problem before? Any  
> quick steps I can try to circumvent this annoyance?
What URL are you using? If you are using a URL which ends with
the .py extension, I can't see how it could happen. If however you
are not using the .py extension, ie., not using an extension at all,
you will be at the mercy of Apache content negotiation, which may
choose between the .py or .pyc file based on various other factors.

Thus, ensure you are using ".py" in the URL and also look at turning
off content negotiation using:

   Options -MultiViews

If this doesn't help, post the snippet of Apache configuration where
you set up PythonHandler and the action part of the HTML form so
the URL which is used can be seen.

Graham
From vmanera at manord.com  Wed Oct 19 06:04:58 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Wed Oct 19 06:10:39 2005
Subject: R: [mod_python] Serius problem in mod_python-3.2.2b
Message-ID: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763D@NEWMAIL.manord.com>

Is not a import problem, I have now tried the workaround from Graham Dumpleton: 

name = os.path.splitext(os.path.split(__file__)[1])[0]  instead __name__ and it work fine.

I use __name__ inside my appplications not for import scope, but for check autentication of module and so on...

I this will be the new behaviour I may fix all my programs (375) that used  __name__ 

May I start to fix my programs with  os.path.splitext(os.path.split(__file__)[1])[0]  instead __name__  ? 

Villiam

 -----Messaggio originale-----
Da: Nicolas Lehuen [mailto:nicolas.lehuen@gmail.com] 
Inviato: mercoled? 19 ottobre 2005 11.05
A: Manera, Villiam
Cc: mod_python@modpython.org
Oggetto: Re: [mod_python] Serius problem in mod_python-3.2.2b



	No, it's not a bug, it's a feature. In the new publisher, published module are no longer stored in sys.modules and the __name__ attribute of the module is based on the filename.
	
	Why is this a problem to you ? Giving the published module a simpler name is not that complicated, but I need to understand why it's important. Especially, if it is because you expect to be able to import the module by name from another module, tell me because things will change in the future mod_python releases.
	
	Regards,
	Nicolas
	
	
	2005/10/19, Manera, Villiam <vmanera@manord.com>: 

		I Installed the beta from mod_python-3.2.2b.win32-py2.4.exe
		Apache has started well
		
		In my login program, the first checked, I use the python variable
		__name__  and this is the problem:
		
		In early mod_python version the value was as 
		expetded:-->cgi-mpy_login<---Module name
		
		In this beta:-->D_discoE_script_cgi_cgi_mpy_cgi_mpy_login_py <---Module
		name
		
		
		Why mod python change the python variable __name__ ?????
		
		I hope this is a bug 
		
		Villiam
		Italy
		
		_______________________________________________
		Mod_python mailing list
		Mod_python@modpython.org
		http://mailman.modpython.org/mailman/listinfo/mod_python
		


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051019/48b287e8/attachment.html
From grahamd at dscpl.com.au  Wed Oct 19 06:38:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 06:38:51 2005
Subject: R: [mod_python] Serius problem in mod_python-3.2.2b
In-Reply-To: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763D@NEWMAIL.manord.com>
References: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763D@NEWMAIL.manord.com>
Message-ID: <63077fa748e8383d323210082e435f98@dscpl.com.au>


On 19/10/2005, at 8:04 PM, Manera, Villiam wrote:

> Is not a import problem, I have now tried the workaround from Graham 
> Dumpleton:
>
> name = os.path.splitext(os.path.split(__file__)[1])[0]? instead 
> __name__ and it work fine.
>
> I use __name__ inside my appplications not for import scope, but for 
> check autentication of module and so on...
>
> I this will be the new behaviour I may fix all my programs (375) that 
> used ?__name__?
>
> May I start to fix my programs 
> with??os.path.splitext(os.path.split(__file__)[1])[0]? instead 
> __name__? ?

You shouldn't really use module name for authentication in this way. The
reason is that with mod_python.publisher, you could have index.py
present in two different directories. In 3.2 these will truly be two
distinct modules albeit they still use the same basename of "index". If
your authentication is based purely on module name (basename), you
wouldn't be able to define different authorisation credentials for these
two different files. You would perhaps be better off basing any
authentication mechanism on URL or physical file location.

Graham

> ?-----Messaggio originale-----
> Da: Nicolas Lehuen [mailto:nicolas.lehuen@gmail.com]
> Inviato: mercoled? 19 ottobre 2005 11.05
> A: Manera, Villiam
> Cc: mod_python@modpython.org
> Oggetto: Re: [mod_python] Serius problem in mod_python-3.2.2b
>
>> No, it's not a bug, it's a feature. In the new publisher, published 
>> module are no longer stored in sys.modules and the __name__ attribute 
>> of the module is based on the filename.
>>
>> Why is this a problem to you ? Giving the published module a simpler 
>> name is not that complicated, but I need to understand why it's 
>> important. Especially, if it is because you expect to be able to 
>> import the module by name from another module, tell me because things 
>> will change in the future mod_python releases.
>>
>> Regards,
>> Nicolas
>>
>> 2005/10/19, Manera, Villiam <vmanera@manord.com>: I Installed the 
>> beta from mod_python-3.2.2b.win32-py2.4.exe
>>> Apache has started well
>>>
>>> In my login program, the first checked, I use the python variable
>>> __name__??and this is the problem:
>>>
>>> In early mod_python version the value was as
>>> expetded:-->cgi-mpy_login<---Module name
>>>
>>> In this beta:-->D_discoE_script_cgi_cgi_mpy_cgi_mpy_login_py 
>>> <---Module
>>> name
>>>
>>>
>>> Why mod python change the python variable __name__ ?????
>>>
>>> I hope this is a bug
>>>
>>> Villiam
>>> Italy
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From dalloliogm at gmail.com  Wed Oct 19 07:32:48 2005
From: dalloliogm at gmail.com (G.M.Dall'Olio)
Date: Wed Oct 19 07:31:15 2005
Subject: [mod_python] Re: PyChart into web site error
Message-ID: <43562EE0.3080507@gmail.com>

Hi all, I'm getting this error from mod_python, when I try to use 
PyChart to create a simple chart:

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line 361, in apply_fs_data
    return object(**args)

  File "/home/motif/public_html/Exp/PyChart/index.py", line 8, in home
    chart = plot1.plot2()

  File "/home/motif/public_html/Exp/PyChart/plot1.py", line 57, in plot2
    return ar.draw()

  File "/usr/lib/python2.4/site-packages/pychart/area.py", line 188, in draw
    can = canvas.default_canvas()

  File "/usr/lib/python2.4/site-packages/pychart/canvas.py", line 73, in default_canvas
    return init(None)

  File "/usr/lib/python2.4/site-packages/pychart/canvas.py", line 58, in init
    can = pscanvas.T(fname)

  File "/usr/lib/python2.4/site-packages/pychart/pscanvas.py", line 25, in __init__
    basecanvas.T.__init__(self)

  File "/usr/lib/python2.4/site-packages/pychart/basecanvas.py", line 70, in __init__
    self.title = re.sub("(.*)\\.py$", "\\1", sys.argv[0])

AttributeError: 'module' object has no attribute 'argv'


I've searched with google and found that this topic has been already 
addressed on this list, but still there is not solution. I've asked to 
the author of the original post and he has resolved using spyce instead 
of mod_python, but since I'm a newbie of mod_python, I would like to 
continue with it.
Since the script works on the command line, probably it may be some 
security setting in mod_python that restricts access to certain modules, 
but I can't understand how to change this.
The python code in plot1.py is this:

from pychart import *
def plot2():

        data = [["Jan", 10], ["Feb", 22], ["Mar", 30]]

        ar = area.T(x_coord = category_coord.T(data, 0),
        y_range = (0, None),
        x_axis = axis.X(),
        y_axis = axis.Y())
        ar.add_plot(bar_plot.T(data = data, label = "Something"))

        return ar.draw()

and the Directive in Apache configuration is this:

<Directory /home/motif/public_html/>
    AllowOverride FileInfo
    AddHandler mod_python .py
    PythonHandler mod_python.publisher
    PythonDebug On
</Directory>

It's about a month that I'm trying to resolve this... Can someone give 
me some hints? Why mod_python requires sys.argv? Is this a problem only 
of italian peoples? ;)
Thank you...


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051019/3bf1534e/attachment.html
From nicolas.lehuen at gmail.com  Wed Oct 19 07:43:45 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Oct 19 07:43:52 2005
Subject: R: [mod_python] Serius problem in mod_python-3.2.2b
In-Reply-To: <63077fa748e8383d323210082e435f98@dscpl.com.au>
References: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763D@NEWMAIL.manord.com>
	<63077fa748e8383d323210082e435f98@dscpl.com.au>
Message-ID: <c298f2d70510190443w23bd173ej@mail.gmail.com>

Yes, you can start using Graham's workaround, as we can't guarantee anything
about the published module names in the future.

Regards,
Nicolas

2005/10/19, Graham Dumpleton <grahamd@dscpl.com.au>:
>
>
> On 19/10/2005, at 8:04 PM, Manera, Villiam wrote:
>
> > Is not a import problem, I have now tried the workaround from Graham
> > Dumpleton:
> >
> > name = os.path.splitext(os.path.split(__file__)[1])[0] instead
> > __name__ and it work fine.
> >
> > I use __name__ inside my appplications not for import scope, but for
> > check autentication of module and so on...
> >
> > I this will be the new behaviour I may fix all my programs (375) that
> > used __name__
> >
> > May I start to fix my programs
> > withos.path.splitext(os.path.split(__file__)[1])[0] instead
> > __name__ ?
>
> You shouldn't really use module name for authentication in this way. The
> reason is that with mod_python.publisher, you could have index.py
> present in two different directories. In 3.2 these will truly be two
> distinct modules albeit they still use the same basename of "index". If
> your authentication is based purely on module name (basename), you
> wouldn't be able to define different authorisation credentials for these
> two different files. You would perhaps be better off basing any
> authentication mechanism on URL or physical file location.
>
> Graham
>
> > -----Messaggio originale-----
> > Da: Nicolas Lehuen [mailto:nicolas.lehuen@gmail.com]
> > Inviato: mercoled? 19 ottobre 2005 11.05
> > A: Manera, Villiam
> > Cc: mod_python@modpython.org
> > Oggetto: Re: [mod_python] Serius problem in mod_python-3.2.2b
> >
> >> No, it's not a bug, it's a feature. In the new publisher, published
> >> module are no longer stored in sys.modules and the __name__ attribute
> >> of the module is based on the filename.
> >>
> >> Why is this a problem to you ? Giving the published module a simpler
> >> name is not that complicated, but I need to understand why it's
> >> important. Especially, if it is because you expect to be able to
> >> import the module by name from another module, tell me because things
> >> will change in the future mod_python releases.
> >>
> >> Regards,
> >> Nicolas
> >>
> >> 2005/10/19, Manera, Villiam <vmanera@manord.com>: I Installed the
> >> beta from mod_python-3.2.2b.win32-py2.4.exe
> >>> Apache has started well
> >>>
> >>> In my login program, the first checked, I use the python variable
> >>> __name__and this is the problem:
> >>>
> >>> In early mod_python version the value was as
> >>> expetded:-->cgi-mpy_login<---Module name
> >>>
> >>> In this beta:-->D_discoE_script_cgi_cgi_mpy_cgi_mpy_login_py
> >>> <---Module
> >>> name
> >>>
> >>>
> >>> Why mod python change the python variable __name__ ?????
> >>>
> >>> I hope this is a bug
> >>>
> >>> Villiam
> >>> Italy
> >>>
> >>> _______________________________________________
> >>> Mod_python mailing list
> >>> Mod_python@modpython.org
> >>> http://mailman.modpython.org/mailman/listinfo/mod_python
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051019/a07af1b8/attachment-0001.html
From arnarb at oddi.is  Wed Oct 19 08:00:06 2005
From: arnarb at oddi.is (Arnar Birgisson)
Date: Wed Oct 19 08:00:25 2005
Subject: [mod_python] Session ID not retained
Message-ID: <s3563553.040@Lime.oddi.is>

Nope.. from the MySQL docs:

REPLACE works exactly like INSERT, except that if an old record in the
table has the same value as a new record for a PRIMARY KEY or a UNIQUE
index, the old record is deleted before the new record is inserted.

Since the column "sid" is my primary key, only that line gets updated.
In any case, the scenariou you described should only happen if someone
else's session is saved between the time I save mine and try to load it,
which is not the case since I'm the only one accessing this app right
now.

The exact same code worked before the kernel upgrade..

thanks anyway for your response..

Arnar


>>> "Dave Britton" <dave@davebritton.com> 19.10.2005 11:43 >>>
Don't you need to specify a WHERE  clause ("WHERE sid=%d" %self._sid)
in the
save update:
c.execute("replace into sessiondata (sid, created, accessed, timeout,
data)
"
            + "values (%s, %s, %s, %s, %s)",
            (self._sid, dict['_created'], dict['_accessed'],
dict['_timeout'], dumps(dict['_data'])))
Otherwise you will update all records in the sessiondata table to the
same
sid value and other different sessions will not find themselves any
more
when in do_load:
      c.execute("select created, accessed, timeout, data from
sessiondata
where sid = %s", self._sid)
      if c.rowcount > 0:
Rowcount will be 0 and you will need a new sessionid

----- Original Message ----- 
From: "Arnar Birgisson" <arnarb@oddi.is>
To: <mod_python@modpython.org>
Sent: Tuesday, October 18, 2005 8:03 AM
Subject: [mod_python] Session ID not retained


Hello there,

I was running mod_python 3.1.3 on Apache 2.0.50 with linux kernel
2.4.31
until yesterday, and all was well. For other reasons, I needed to
upgrade to
kernel version 2.6.13 yesterday, and along with it I upgraded my
distribution from Slackware 10.0 to Slackware-current. That entailed
an
upgrade from libc 2.3.2 to 2.3.5.

After the upgrade, I recompiled Apache (still version 2.0.50) and
compiled
and installed mod_python 3.1.4. The problem now is that every request
gets a
new session id, even if the browser is clearly sending the pysid
cookie
correctly.

I was and am running python 2.4.1 both before the upgrade and now. I
tried
uninstalling mod_python completely, and recompiling mod_python 3.1.3
again
against the new libc, but that doesn't solve the problem.

I am using a? session class that I wrote myself (complete source below)
that
uses mysql as the data store, and the session info makes it way into
the
table, which tells me that sess.save() is working properly. The
problem
seems to be that the constructor (which just calls
mod_python.Session.__init__) doesn't find the session id in the
request
object. I dumped request.headers_in and the pysid cookie is there.

Any ideas on what I should try next?

Arnar



My session class (which worked fine before):

from mod_python import apache, Session as apsess
from Database import getExclusiveDB
from cPickle import loads, dumps
import time

def sqlsession_cleanup():
   db = getExclusiveDB()
   c = db.cursor()
   c.execute("delete from sessiondata where (unix_timestamp() -
accessed) >
timeout")
   c.close()
   db.commit()
   db.close()

class SqlSession(apsess.BaseSession):

   def __init__(self, req, sid=0, secret=None, timeout=0, lock=1):
      apsess.BaseSession.__init__(self, req, sid=sid, secret=secret,
timeout=timeout, lock=lock)

   def do_cleanup(self):
      self._req.register_cleanup(mem_cleanup)
      self._req.log_error("SqlSession: registered session cleanup",
            apache.APLOG_NOTICE)

   def do_load(self):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("select created, accessed, timeout, data from
sessiondata
where sid = %s", self._sid)
      if c.rowcount > 0:
         row = c.fetchone()
         retval = {
            "_data": loads(row[3]),
            "_created": row[0],
            "_accessed": row[1],
            "_timeout": row[2]
         }
      else:
         retval = None
      c.close()
      db.close()
      return retval

   def do_save(self, dict):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("replace into sessiondata (sid, created, accessed,
timeout,
data) "
            + "values (%s, %s, %s, %s, %s)",
            (self._sid, dict['_created'], dict['_accessed'],
dict['_timeout'], dumps(dict['_data'])))
      c.close()
      db.commit()
      db.close()

   def do_delete(self):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("delete from sessiondata where sid = %s", self._sid)
      c.close()
      db.commit()
      db.close()



_______________________________________________
Mod_python mailing list
Mod_python@modpython.org 
http://mailman.modpython.org/mailman/listinfo/mod_python 


From grahamd at dscpl.com.au  Wed Oct 19 08:00:15 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 08:00:29 2005
Subject: [mod_python] Re: PyChart into web site error
In-Reply-To: <43562EE0.3080507@gmail.com>
References: <43562EE0.3080507@gmail.com>
Message-ID: <38b66b83d7cabbc418678a2e93b1cb81@dscpl.com.au>


On 19/10/2005, at 9:32 PM, G.M.Dall'Olio wrote:

>  Hi all, I'm getting this error from mod_python, when I try to use 
> PyChart to create a simple chart:
>
> Traceback (most recent call last):
>
>   File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 
> 299, in HandlerDispatch
>     result = object(req)
>
>   File "/usr/lib/python2.4/site-packages/mod_python/publisher.py", 
> line 136, in handler
>     result = util.apply_fs_data(object, req.form, req=req)
>
>   File "/usr/lib/python2.4/site-packages/mod_python/util.py", line 
> 361, in apply_fs_data
>     return object(**args)
>
>   File "/home/motif/public_html/Exp/PyChart/index.py", line 8, in home
>     chart = plot1.plot2()
>
>   File "/home/motif/public_html/Exp/PyChart/plot1.py", line 57, in 
> plot2
>     return ar.draw()
>
>   File "/usr/lib/python2.4/site-packages/pychart/area.py", line 188, 
> in draw
>     can = canvas.default_canvas()
>
>   File "/usr/lib/python2.4/site-packages/pychart/canvas.py", line 73, 
> in default_canvas
>     return init(None)
>
>   File "/usr/lib/python2.4/site-packages/pychart/canvas.py", line 58, 
> in init
>     can = pscanvas.T(fname)
>
>   File "/usr/lib/python2.4/site-packages/pychart/pscanvas.py", line 
> 25, in __init__
>     basecanvas.T.__init__(self)
>
>   File "/usr/lib/python2.4/site-packages/pychart/basecanvas.py", line 
> 70, in __init__
>     self.title = re.sub("(.*)\\.py$", "\\1", sys.argv[0])
>
> AttributeError: 'module' object has no attribute 'argv'
>
> I've searched with google and found that this topic has been already 
> addressed on this list, but still there is not solution. I've asked to 
> the author of the original post and he has resolved using spyce 
> instead of mod_python, but since I'm a newbie of mod_python, I would 
> like to continue with it.
>  Since the script works on the command line, probably it may be some 
> security setting in mod_python that restricts access to certain 
> modules, but I can't understand how to change this.
>  The python code in plot1.py is this:
>
>  from pychart import *
>  def plot2():
>
>  ??????? data = [["Jan", 10], ["Feb", 22], ["Mar", 30]]
>
>  ??????? ar = area.T(x_coord = category_coord.T(data, 0),
>  ??????? y_range = (0, None),
>  ??????? x_axis = axis.X(),
>  ??????? y_axis = axis.Y())
>  ??????? ar.add_plot(bar_plot.T(data = data, label = "Something"))
>
>  ??????? return ar.draw()
>
>  and the Directive in Apache configuration is this:
>
>  <Directory /home/motif/public_html/>
>  ??? AllowOverride FileInfo
>  ??? AddHandler mod_python .py
>  ??? PythonHandler mod_python.publisher
>  ??? PythonDebug On
>  </Directory>
>
>  It's about a month that I'm trying to resolve this... Can someone 
> give me some hints? Why mod_python requires sys.argv? Is this a 
> problem only of italian peoples? ;)

It isn't mod_python that requires sys.argv, it is pychart that is the 
problem based
on the traceback you provide. Ie., pychart has:

   self.title = re.sub("(.*)\\.py$", "\\1", sys.argv[0])

In short, pychart is written so as it can only work on the command line.

As a work around, can only suggest you create a special module that you 
import
using the PythonImport directive into the specific interpreter you are 
running
your mod_python code in, with that module containing:

   import sys
   sys.argv = ['mod_python']

Ie., dummy up a value for sys.argv.

Graham



From rjsquire at ebi-online.com  Wed Oct 19 08:04:20 2005
From: rjsquire at ebi-online.com (Robert Squire)
Date: Wed Oct 19 08:05:28 2005
Subject: [mod_python] Gentoo Linux - mod_python - not working
In-Reply-To: <4355BA6E.9060605@work-at.co.jp>
References: <4355B6B5.1040304@ebi-online.com> <4355BA6E.9060605@work-at.co.jp>
Message-ID: <43563644.7060202@ebi-online.com>

Jason Stubbs wrote:

> Robert Squire wrote:
>
>> Here is the file I'm using:
>> -----------------------------------------------------
>> didactic htdocs # cat mptest.py
>> from mod_python import apache
>>
>> def hadler(req):
>
>       ^^^^^^
>
>>        req.content_type = 'text/plain'
>>        req.sent_http_header()
>>        req.write("Hello World!")
>>        return apache.OK
>>
>> -----------------------------------------------------
>
>
> Don't you just hate typos? ;)
>
> -- 
> Jason Stubbs
>
UGGHHH.  Indeed I do hate typos.
Thank you so much for this.  I also typed sent_http_header instead of 
send_http_header.
I was so wrapped up in apache configuration that I never considered the 
possibility that
I screwed up the test file itself.

This quote just isn't funny anymore:
-----------------------------------------------------
On two occasions I have been asked, 'Pray, Mr. Babbage, if you put into 
the machine wrong figures,
will the right answers come out?'
I am not able rightly to apprehend the kind of confusion of ideas that 
could provoke such a question.
-- Charles Babbage
From vmanera at manord.com  Wed Oct 19 08:27:45 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Wed Oct 19 08:31:58 2005
Subject: R: R: [mod_python] Serius problem in mod_python-3.2.2b
Message-ID: <BC53C974C3B9E542BC0A9BD4C5B1168A0B763E@NEWMAIL.manord.com>

Ok, thank. 
I will fix my autentication program according to this.

Villiam
-----Messaggio originale-----
Da: Graham Dumpleton [mailto:grahamd@dscpl.com.au] 
Inviato: mercoled? 19 ottobre 2005 12.38
A: Manera, Villiam
Cc: nicolas@lehuen.com; mod_python@modpython.org
Oggetto: Re: R: [mod_python] Serius problem in mod_python-3.2.2b



On 19/10/2005, at 8:04 PM, Manera, Villiam wrote:

> Is not a import problem, I have now tried the workaround from Graham
> Dumpleton:
>
> name = os.path.splitext(os.path.split(__file__)[1])[0]? instead
> __name__ and it work fine.
>
> I use __name__ inside my appplications not for import scope, but for
> check autentication of module and so on...
>
> I this will be the new behaviour I may fix all my programs (375) that
> used ?__name__?
>
> May I start to fix my programs
> with??os.path.splitext(os.path.split(__file__)[1])[0]? instead 
> __name__? ?

You shouldn't really use module name for authentication in this way. The reason is that with mod_python.publisher, you could have index.py present in two different directories. In 3.2 these will truly be two distinct modules albeit they still use the same basename of "index". If your authentication is based purely on module name (basename), you wouldn't be able to define different authorisation credentials for these two different files. You would perhaps be better off basing any authentication mechanism on URL or physical file location.

Graham

> ?-----Messaggio originale-----
> Da: Nicolas Lehuen [mailto:nicolas.lehuen@gmail.com]
> Inviato: mercoled? 19 ottobre 2005 11.05
> A: Manera, Villiam
> Cc: mod_python@modpython.org
> Oggetto: Re: [mod_python] Serius problem in mod_python-3.2.2b
>
>> No, it's not a bug, it's a feature. In the new publisher, published
>> module are no longer stored in sys.modules and the __name__ attribute 
>> of the module is based on the filename.
>>
>> Why is this a problem to you ? Giving the published module a simpler
>> name is not that complicated, but I need to understand why it's 
>> important. Especially, if it is because you expect to be able to 
>> import the module by name from another module, tell me because things 
>> will change in the future mod_python releases.
>>
>> Regards,
>> Nicolas
>>
>> 2005/10/19, Manera, Villiam <vmanera@manord.com>: I Installed the
>> beta from mod_python-3.2.2b.win32-py2.4.exe
>>> Apache has started well
>>>
>>> In my login program, the first checked, I use the python variable 
>>> __name__??and this is the problem:
>>>
>>> In early mod_python version the value was as 
>>> expetded:-->cgi-mpy_login<---Module name
>>>
>>> In this beta:-->D_discoE_script_cgi_cgi_mpy_cgi_mpy_login_py
>>> <---Module
>>> name
>>>
>>>
>>> Why mod python change the python variable __name__ ?????
>>>
>>> I hope this is a bug
>>>
>>> Villiam
>>> Italy
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org 
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org 
> http://mailman.modpython.org/mailman/listinfo/mod_python


From jg.lists at sympatico.ca  Wed Oct 19 08:37:24 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Oct 19 08:33:34 2005
Subject: [mod_python] Gentoo Linux - mod_python - not working
In-Reply-To: <43563644.7060202@ebi-online.com>
References: <4355B6B5.1040304@ebi-online.com> <4355BA6E.9060605@work-at.co.jp>
	<43563644.7060202@ebi-online.com>
Message-ID: <43563E04.1090307@sympatico.ca>

Robert Squire wrote:
> Jason Stubbs wrote:
> 
>> Robert Squire wrote:
>>
>>> Here is the file I'm using:
>>> -----------------------------------------------------
>>> didactic htdocs # cat mptest.py
>>> from mod_python import apache
>>>
>>> def hadler(req):
>>
>>
>>       ^^^^^^
>>
>>>        req.content_type = 'text/plain'
>>>        req.sent_http_header()
>>>        req.write("Hello World!")
>>>        return apache.OK
>>>
>>> -----------------------------------------------------
>>
>>
>>
>> Don't you just hate typos? ;)
>>
>> -- 
>> Jason Stubbs
>>
> UGGHHH.  Indeed I do hate typos.
> Thank you so much for this.  I also typed sent_http_header instead of 
> send_http_header.

You don't need send_http_header. In fact for mod_python version 3.0.0 
and greater it is a noop. When req.write is called mod_python checks if 
the headers have been sent, and if not sends them  to the client prior 
actually doing the write.

Jim
From pmartin at snakecard.com  Wed Oct 19 09:49:33 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Wed Oct 19 09:49:53 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
In-Reply-To: <1129695408.10923@dscpl.user.openhosting.com>
References: <1129695408.10923@dscpl.user.openhosting.com>
Message-ID: <200510191349.34340.pmartin@snakecard.com>

Thanks again,

So apache uses expat_1.95.7
and python (1, 95, 8)

I will try to install expat_1.95.8 and see what happens.

Regards,

Philippe





On Wednesday 19 October 2005 04:16 am, Graham Dumpleton wrote:
> Philippe C. Martin wrote ..
>
> > Got it I think: you mean more than one library are on my disk ?
>
> Not quite. The version embedded in the pyexpat module of Python is what
> is effectively called statically linked. The libexpat.so in your lib
> directory would be dynamically loaded as a shared library at some point
> because of some dependency on that library by something else. Usually
> this is Apache itself and it will get loaded as soon as Apache is started.
>
> For those who understand what I am talking about, yes I know that the
> Python module is dynamically loaded into Python, but the expat part is
> statically linked into the Python module .so which is loaded.
>
> > If so, that's the only I found in the LIB path:
> > /usr/lib/libexpat.so.0.5.0.
> >
> > So that would mean that apache and python use the same right ?
>
> No. When Python is run from the command line and pyexpat is imported,
> it uses the version statically linked into the Python module .so. When
> Apache starts up it will load the libexpat.so from lib.
>
> Now, when mod_python is run in the context of Apache, when the
> pyexpat module is imported, because Apache has already loaded libexpat.so
> from the lib directory, the version of expat statically linked into the
> Python module .so is actually ignored and it uses the version that Apache
> had already loaded.
>
> Going back to my machine here (different one this time), from command
> line:
>
>   grahamd@fiona:public_html$ python
>   Python 2.3.5 (#1, Aug 12 2005, 10:35:05)
>   [GCC 3.3.2] on sunos5
>   Type "help", "copyright", "credits" or "license" for more information.
>
>   >>> import pyexpat
>   >>> pyexpat.version_info
>
>   (1, 95, 7)
>
> If I run "ldd" on the Apache httpd program to see what version of libexpat
> it is using I get:
>
>   grahamd@fiona:public_html$ ldd /usr/local/sys/apache/bin/httpd
>         libaprutil-0.so.0 =>     /usr/local/lib/libaprutil-0.so.0
>         libexpat.so.0 =>         /usr/local/lib/libexpat.so.0
>         libapr-0.so.0 =>         /usr/local/lib/libapr-0.so.0
>         libsendfile.so.1 =>      /usr/lib/libsendfile.so.1
>         librt.so.1 =>    /usr/lib/librt.so.1
>         libm.so.1 =>     /usr/lib/libm.so.1
>         libsocket.so.1 =>        /usr/lib/libsocket.so.1
>         libnsl.so.1 =>   /usr/lib/libnsl.so.1
>         libresolv.so.2 =>        /usr/lib/libresolv.so.2
>         libpthread.so.1 =>       /usr/lib/libpthread.so.1
>         libdl.so.1 =>    /usr/lib/libdl.so.1
>         libthread.so.1 =>        /usr/lib/libthread.so.1
>         libc.so.1 =>     /usr/lib/libc.so.1
>         libaio.so.1 =>   /usr/lib/libaio.so.1
>         libmd5.so.1 =>   /usr/lib/libmd5.so.1
>         libmp.so.2 =>    /usr/lib/libmp.so.2
>         /usr/platform/SUNW,UltraAX-i2/lib/libc_psr.so.1
>         /usr/platform/SUNW,UltraAX-i2/lib/libmd5_psr.so.1
>
> The version number on the library itself is useless, so run "strings"
> command to get the version number out of the library itself.
>
>   grahamd@fiona:public_html$ strings /usr/local/lib/libexpat.so.0 | grep
> expat_ expat_1.95.2
>
> Thus Apache is actually using 1.95.2 whereas the Python module .so for
> pyexpat has 1.95.7 embedded into it.
>
> Now if I create a mod_python.publisher function:
>
>   import pyexpat
>
>   def index():
>     return pyexpat.version_info
>
> and access that page, I get returned:
>
>   1952
>
> I don't quite understand why it is returning an integer rather than a
> tuple, it may actually indicate a problem. As one can see though, it is now
> actually using 1.95.2 which Apache loaded and not that embedded in the
> pyexpat Python module .so.
>
> The important bit in the above which you didn't do was to run "strings" on
> libexpat.so file. Hopefully this will find that string I was picking up
> which indicated which version was used.
>
> BTW, you may be able to confirm whether the expat version is the problem
> by simply creating a handler which all it does is import "pyexpat" as
> above. If that crashes Apache you probably have a problem as I recollect
> that just loading pyexpat will cause the crash, you don't actually have to
> use it. This though may only be the case on certain platforms. Another
> module you can try importing is "xmlrpclib". This one from memory
> definitely crashed Apache for me when I personally had this expat library
> version problem on a Linux platform, even without trying to use the
> functionality of the module.
>
> Hope I made it clear this time.
>
> Graham
>
> > On Wednesday 19 October 2005 01:33 am, Graham Dumpleton wrote:
> > > Philippe C. Martin wrote ..
> > >
> > > > Hi,
> > > >
> > > > I'm not sure that's enough info:
> > > >
> > > > Just for my knowledge, why would that have an effect in apache and
> >
> > not
> >
> > > > the
> > > > command line ?
> > >
> > > Imagine if each version of expat used a slightly different structure
> > > layout or structure size for something. An object created in the code
> >
> > of
> >
> > > the shared library when accessed by C code compiled against the
> > > library, but that of a different version, could access the wrong bit of
> > > the object and thus follow a bogus pointer and thus crash.
> > >
> > > Consider this platform I have access to:
> > >
> > > cinderella$ python
> > > Python 2.3.4 (#1, Nov 25 2004, 17:05:37)
> > > [GCC 3.3.2] on sunos5
> > > Type "help", "copyright", "credits" or "license" for more information.
> > >
> > > >>> import pyexpat
> > > >>> pyexpat.version_info
> > >
> > > (1, 95, 7)
> > >
> > > >>> ^D
> > >
> > > cinderella$ cd /usr/local/lib
> > > cinderella$ strings libexpat.so | grep expat_
> > > expat_1.95.4
> > >
> > > The libexpat.so installed on the system has an older version than that
> > > compiled into Python. If something causes the libexpat.so to be linked
> > > into Apache at the same time as the Python code executing from
> > > mod_python is using the embedded one, if there is an incompatability,
> > > there may be a problem.
> > >
> > > In this case, I should be looking at upgrading the one installed in the
> > > operating system.
> > >
> > > Depending on your system the libexpat.so might be in /lib, /usr/lib,
> > > /usr/local/lib or elsewhere.
> > >
> > > Graham
> > >
> > > > [philippe@pcmsc philippe]$ python
> > > > Python 2.4.2 (#1, Oct 18 2005, 04:32:14)
> > > > [GCC 3.4.1 (Mandrakelinux 10.1 3.4.1-4mdk)] on linux2
> > > > Type "help", "copyright", "credits" or "license" for more
> > > > information.
> > > >
> > > > >>> import pyexpat
> > > > >>> pyexpat.version_info
> > > >
> > > > (1, 95, 8)
> > > >
> > > > >>> import expat
> > > >
> > > > Traceback (most recent call last):
> > > >   File "<stdin>", line 1, in ?
> > > > ImportError: No module named expat
> > > >
> > > >
> > > >
> > > > [philippe@pcmsc SC]$ find /usr/lib/python2.4/ -name '*expat*' -exec
> >
> > ls
> >
> > > > -l {}
> > > > \;
> > > > -rw-r--r--  1 root root 2586 Oct 18
> > > > 04:35 /usr/lib/python2.4/test/output/test_pyexpat
> > > > -rw-r--r--  1 root root 12012 Oct 18
> > > > 04:35 /usr/lib/python2.4/test/test_pyexpat.py
> > > > -rw-r--r--  1 root root 11514 Oct 18
> > > > 04:36 /usr/lib/python2.4/test/test_pyexpat.pyc
> > > > -rw-r--r--  1 root root 11514 Oct 18
> > > > 04:36 /usr/lib/python2.4/test/test_pyexpat.pyo
> > > > -rw-r--r--  1 root root 36379 Oct 18
> > > > 04:35 /usr/lib/python2.4/xml/dom/expatbuilder.py
> > > > -rw-r--r--  1 root root 31084 Oct 18
> > > > 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyc
> > > > -rw-r--r--  1 root root 30453 Oct 18
> > > > 04:36 /usr/lib/python2.4/xml/dom/expatbuilder.pyo
> > > > -rw-r--r--  1 root root 112 Oct 18
> > > > 04:35 /usr/lib/python2.4/xml/parsers/expat.py
> > > > -rw-r--r--  1 root root 273 Oct 18
> > > > 04:36 /usr/lib/python2.4/xml/parsers/expat.pyc
> > > > -rw-r--r--  1 root root 273 Oct 18
> > > > 04:36 /usr/lib/python2.4/xml/parsers/expat.pyo
> > > > -rw-r--r--  1 root root 14408 Oct 18
> > > > 04:35 /usr/lib/python2.4/xml/sax/expatreader.py
> > > > -rw-r--r--  1 root root 13471 Oct 18
> > > > 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyc
> > > > -rw-r--r--  1 root root 13471 Oct 18
> > > > 04:36 /usr/lib/python2.4/xml/sax/expatreader.pyo
> > > > -rwxr-xr-x  1 root root 436290 Oct 18
> > > > 04:33 /usr/lib/python2.4/lib-dynload/pyexpat.so
> > > >
> > > > On Wednesday 19 October 2005 12:35 am, Graham Dumpleton wrote:
> > > > > Philippe C. Martin wrote ..
> > > > >
> > > > > > Hi,
> > > > > >
> > > > > > If any of you wish to look at this: this code works in command
> >
> > line,
> >
> > > > and
> > > >
> > > > > > crashes with apache. Something I'm doing is really anoying
> > > > > > minidom.
> > > > > >
> > > > > >
> > > > > > you can fetch the xml file responsible at:
> > > > > > www.snakecard.com/mod_python
> > > > > >
> > > > > > Any help is greatly appreciated.
> > > > >
> > > > > I you are using a module which does XML processing and it is
> > > > > literally crashing, look at what version of the expat libraries
> > > > > that are installed on your system.
> > > > >
> > > > > A problem that can occur is that Python embeds a version of expat
> > > > > within its pyexpat module. If an incompatible version of expat is
> >
> > also
> >
> > > > > linked in as a shared library, a crash generally occurs.
> > > > >
> > > > > To determine the version of expat embedded in Python, do from a
> > > > > command
> > > > >
> > > > > line run Python:
> > > > > >>> import pyexpat
> > > > > >>> pyexpat.version_info
> > > > >
> > > > > (1, 95, 6)
> > > > >
> > > > > Ensure that the version of any expat shared library is at least
> > > > > newer than that embedded into Python, or the same version if
> > > > > possible.
> > > > >
> > > > > Graham
> > > >
> > > > --
> > > > *************************************
> > > > Philippe C. Martin
> > > > SnakeCard, LLC
> > > > www.snakecard.com
> > > > +1 405 694 8098
> > > > *************************************
> >
> > --
> > *************************************
> > Philippe C. Martin
> > SnakeCard, LLC
> > www.snakecard.com
> > +1 405 694 8098
> > *************************************

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From pmartin at snakecard.com  Wed Oct 19 09:54:00 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Wed Oct 19 09:54:17 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
In-Reply-To: <1129695408.10923@dscpl.user.openhosting.com>
References: <1129695408.10923@dscpl.user.openhosting.com>
Message-ID: <200510191354.00282.pmartin@snakecard.com>

On Wednesday 19 October 2005 04:16 am, Graham Dumpleton wrote:
> BTW, you may be able to confirm whether the expat version is the problem
> by simply creating a handler which all it does is import "pyexpat" as
> above. If that crashes Apache you probably have a problem as I recollect
> that just loading pyexpat will cause the crash, you don't actually have to
> use it. This though may only be the case on certain platforms. Another
> module you can try importing is "xmlrpclib". This one from memory
> definitely crashed Apache for me when I personally had this expat library
> version problem on a Linux platform, even without trying to use the
> functionality of the module.

import  "xmlrpclib did crash apache - so I need to upgrade 
my /usr/local/lib/libexpat.

Thanks Graham.

Regards,

Philippe
From pmartin at snakecard.com  Wed Oct 19 09:56:01 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Wed Oct 19 09:56:19 2005
Subject: [mod_python] Smart Card and mod_python and browser pluggins
In-Reply-To: <200510190303.09183.pmartin@snakecard.com>
References: <200510190303.09183.pmartin@snakecard.com>
Message-ID: <200510191356.01561.pmartin@snakecard.com>

PS: are these basic web dev questions, and I should just go read a book/ join 
a web design newsgroup ?

Thanks

Philippe



On Wednesday 19 October 2005 03:03 am, Philippe C. Martin wrote:
> Hi,
>
> I have "disabled"  the xml feature for now to go on with my study.
>
> I can talk to my smart card on the server side and get the information on
> the browser.
>
> On the browser side, I will, most likely, need to write browsers pluggins
> as it seem the only way (besides stuff like activeX which does not cover
> all the necessary platforms :-) to get access to a hardware device from the
> browser.
>
> The current authentication mechanism my cards use requires that data go
> back and forth a couple of times between the server (master/mother card)
> and the client (child card).
>
> Also the data exchanged, if possible, must not appear on the display. So I
> need some type of handler that'll allow that "back and forth/hidden
> exchange".
>
> My current assumption is that the two pluggins I will attack:
> firefox/mozilla and I/E will give me access to Javascript to discuss with
> mod_python.
>
> I know a _little_ about Javascript and it always has to do with writing and
> reading HTML tags (I'm not even sure that's the correct term)
>
> Is there some common mechanism avaialbe ?
>
> Is one of the solution to put the data on the page (maybe hidden tags ?).
> Still there is a need for some type of synchronization between both world.
>
> I hope my questions make sense.
>
> Thanks and regards,
>
> Philippe

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From azaroth at liverpool.ac.uk  Wed Oct 19 10:08:18 2005
From: azaroth at liverpool.ac.uk (Robert Sanderson)
Date: Wed Oct 19 10:08:25 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
In-Reply-To: <200510191349.34340.pmartin@snakecard.com>
References: <1129695408.10923@dscpl.user.openhosting.com>
	<200510191349.34340.pmartin@snakecard.com>
Message-ID: <Pine.GSO.4.58.0510191505030.11781@uxa.liv.ac.uk>

>So apache uses expat_1.95.7
>and python (1, 95, 8)
>I will try to install expat_1.95.8 and see what happens.

4Suite also comes with an expat implementation.

I've found that with Python2.4, Apache 2.0.54 and the current 4Suite
all of the components have upgraded to .8 and the problem no longer
exists (at my prompting to the 4Suite guys)

Otherwise I had to install expat 1.95.8 and compile everything against
it, which (if you have an older OS install) can be a nightmare to get
right.

Rob
From pmartin at snakecard.com  Wed Oct 19 10:16:59 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Wed Oct 19 10:17:29 2005
Subject: [mod_python] The DOs and DONTs of mod_python: second problem
	maybecornered.
In-Reply-To: <Pine.GSO.4.58.0510191505030.11781@uxa.liv.ac.uk>
References: <1129695408.10923@dscpl.user.openhosting.com>
	<200510191349.34340.pmartin@snakecard.com>
	<Pine.GSO.4.58.0510191505030.11781@uxa.liv.ac.uk>
Message-ID: <200510191416.59801.pmartin@snakecard.com>

Great! i'll try it.

Thanks and regards,

Philippe



On Wednesday 19 October 2005 02:08 pm, Robert Sanderson wrote:
> >So apache uses expat_1.95.7
> >and python (1, 95, 8)
> >I will try to install expat_1.95.8 and see what happens.
>
> 4Suite also comes with an expat implementation.
>
> I've found that with Python2.4, Apache 2.0.54 and the current 4Suite
> all of the components have upgraded to .8 and the problem no longer
> exists (at my prompting to the 4Suite guys)
>
> Otherwise I had to install expat 1.95.8 and compile everything against
> it, which (if you have an older OS install) can be a nightmare to get
> right.
>
> Rob

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From nicolas.lehuen at gmail.com  Wed Oct 19 10:43:00 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Oct 19 10:43:07 2005
Subject: [mod_python] Smart Card and mod_python and browser pluggins
In-Reply-To: <200510191356.01561.pmartin@snakecard.com>
References: <200510190303.09183.pmartin@snakecard.com>
	<200510191356.01561.pmartin@snakecard.com>
Message-ID: <c298f2d70510190742i63ccb6d4j@mail.gmail.com>

A good book and a lot of reading on the web can't harm you, but your problem
is not a typical web application design problem.

What you must straighten out is where you card reader resides : on the
client side or on the server side ? First you asked us questions about
running the card reader API on the server side, and now you ask us about
running it on the client side...

If the card reader is on the client side, as I guess it is, then you're in
deep shtrouble. How deep depends on whether the client side is closed
(limited to a single enterprise) or opened (your app will be used by many
customers).

Neither Java or Flash applets can simply access low-level hardware nor call
a C API. You could try writing a JNI wrapper around your C API and see if a
signed applet loaded through the Sun JVM (which will have to be installed on
the clients) can use it, but it will be difficult and non-portable.

Then, you can go the plugin way but it's even more difficult than the applet
way. All the more if you want to be multi-browser (as I've understood since
you wrote about IE and Firefox) and multi-platform. You'll have to learn two
different plugin APIs, learn COM and ATL, master the delicate art of C/C++
multi-platform programming, etc. etc.

In both cases, Javascript could be used to provide the glue between the
applet / plugin and the rest of the HTML app, but tthat's another level of
crap to handle since supporting scripting from a plugin is not something
automatically granted.

Believe me, your problem is far from trivial, and given the level of the
other questions you asked, it will be way out of your league. You'd better
seek professional (and expensive) help. I'm sorry to be harsh but that's the
sad truth.

If the card reader is on the server side, then it'll be difficult (you'll
have troubles with the API support for re-entrant calls or multi-threading)
but far more feasable.

Regards,
Nicolas

2005/10/19, Philippe C. Martin <pmartin@snakecard.com>:
>
> PS: are these basic web dev questions, and I should just go read a book/
> join
> a web design newsgroup ?
>
> Thanks
>
> Philippe
>
>
>
> On Wednesday 19 October 2005 03:03 am, Philippe C. Martin wrote:
> > Hi,
> >
> > I have "disabled" the xml feature for now to go on with my study.
> >
> > I can talk to my smart card on the server side and get the information
> on
> > the browser.
> >
> > On the browser side, I will, most likely, need to write browsers
> pluggins
> > as it seem the only way (besides stuff like activeX which does not cover
> > all the necessary platforms :-) to get access to a hardware device from
> the
> > browser.
> >
> > The current authentication mechanism my cards use requires that data go
> > back and forth a couple of times between the server (master/mother card)
> > and the client (child card).
> >
> > Also the data exchanged, if possible, must not appear on the display. So
> I
> > need some type of handler that'll allow that "back and forth/hidden
> > exchange".
> >
> > My current assumption is that the two pluggins I will attack:
> > firefox/mozilla and I/E will give me access to Javascript to discuss
> with
> > mod_python.
> >
> > I know a _little_ about Javascript and it always has to do with writing
> and
> > reading HTML tags (I'm not even sure that's the correct term)
> >
> > Is there some common mechanism avaialbe ?
> >
> > Is one of the solution to put the data on the page (maybe hidden tags
> ?).
> > Still there is a need for some type of synchronization between both
> world.
> >
> > I hope my questions make sense.
> >
> > Thanks and regards,
> >
> > Philippe
>
> --
> *************************************
> Philippe C. Martin
> SnakeCard, LLC
> www.snakecard.com <http://www.snakecard.com>
> +1 405 694 8098
> *************************************
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051019/900d8d08/attachment.html
From pmartin at snakecard.com  Wed Oct 19 11:01:05 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Wed Oct 19 11:03:47 2005
Subject: [mod_python] Smart Card and mod_python and browser pluggins
In-Reply-To: <c298f2d70510190742i63ccb6d4j@mail.gmail.com>
References: <200510190303.09183.pmartin@snakecard.com>
	<200510191356.01561.pmartin@snakecard.com>
	<c298f2d70510190742i63ccb6d4j@mail.gmail.com>
Message-ID: <200510191501.05527.pmartin@snakecard.com>

On Wednesday 19 October 2005 02:43 pm, Nicolas Lehuen wrote:
> A good book and a lot of reading on the web can't harm you, but your
> problem is not a typical web application design problem.
OK
>
> What you must straighten out is where you card reader resides : on the
> client side or on the server side ? First you asked us questions about
> running the card reader API on the server side, and now you ask us about
> running it on the client side...
>

> If the card reader is on the client side, as I guess it is, then you're in
> deep shtrouble. How deep depends on whether the client side is closed
> (limited to a single enterprise) or opened (your app will be used by many
> customers).
>

(****)
Both; I'll get a bit into the smart card issue here:

1) On the server side there is a "Master" card which holds a Master crypto key
2) On the client sides there are "Children" cards each with a "diversified" 
crypto key
3) The point is for the Master card to decide whether such or such protected 
page can be accessed by the client. In order to do so, the following must 
happen:
3.a) the client card sends some card unique data to the master card
3.b) the master card sends a random sequence to the client card
3.c) the client card encrypts the random sequence (with its diversified key) 
and sends the result to the Master card
3.d) the Master card re-generates the client key with the earlier received 
data, uses it to decrypt the encrypted sequence and matches it with the 
earlier sent random sequence. if they match, the requested page access is 
allowed.



> Neither Java or Flash applets can simply access low-level hardware nor call
> a C API. You could try writing a JNI wrapper around your C API and see if a
> signed applet loaded through the Sun JVM (which will have to be installed
> on the clients) can use it, but it will be difficult and non-portable.
I do not know about Flash, but the java VM will forbid me to access a local 
hardware device.

>
> Then, you can go the plugin way but it's even more difficult than the
> applet way. All the more if you want to be multi-browser (as I've
> understood since you wrote about IE and Firefox) and multi-platform. You'll
> have to learn two different plugin APIs, learn COM and ATL, master the
> delicate art of C/C++ multi-platform programming, etc. etc.
Yeap

>
> In both cases, Javascript could be used to provide the glue between the
> applet / plugin and the rest of the HTML app, but tthat's another level of
> crap to handle since supporting scripting from a plugin is not something
> automatically granted.

OK
>
> Believe me, your problem is far from trivial, and given the level of the
> other questions you asked, it will be way out of your league. You'd better
> seek professional (and expensive) help. I'm sorry to be harsh but that's
> the sad truth.

Time will tell :-)
>
> If the card reader is on the server side, then it'll be difficult (you'll
> have troubles with the API support for re-entrant calls or multi-threading)
> but far more feasable.
I understood that apache had "global" flags, I need to use something like that 
to keep two client from accessing the card at the same time (as it is not 
feasible for concurent access to an ISO7816 SC)


My question on this NG is on the issue (****) and this back and forth of data 
without any user interaction - but again that is possibly a very trivial 
question.

Regards,

Philippe



>
> Regards,
> Nicolas
>
> 2005/10/19, Philippe C. Martin <pmartin@snakecard.com>:
> > PS: are these basic web dev questions, and I should just go read a book/
> > join
> > a web design newsgroup ?
> >
> > Thanks
> >
> > Philippe
> >
> > On Wednesday 19 October 2005 03:03 am, Philippe C. Martin wrote:
> > > Hi,
> > >
> > > I have "disabled" the xml feature for now to go on with my study.
> > >
> > > I can talk to my smart card on the server side and get the information
> >
> > on
> >
> > > the browser.
> > >
> > > On the browser side, I will, most likely, need to write browsers
> >
> > pluggins
> >
> > > as it seem the only way (besides stuff like activeX which does not
> > > cover all the necessary platforms :-) to get access to a hardware
> > > device from
> >
> > the
> >
> > > browser.
> > >
> > > The current authentication mechanism my cards use requires that data go
> > > back and forth a couple of times between the server (master/mother
> > > card) and the client (child card).
> > >
> > > Also the data exchanged, if possible, must not appear on the display.
> > > So
> >
> > I
> >
> > > need some type of handler that'll allow that "back and forth/hidden
> > > exchange".
> > >
> > > My current assumption is that the two pluggins I will attack:
> > > firefox/mozilla and I/E will give me access to Javascript to discuss
> >
> > with
> >
> > > mod_python.
> > >
> > > I know a _little_ about Javascript and it always has to do with writing
> >
> > and
> >
> > > reading HTML tags (I'm not even sure that's the correct term)
> > >
> > > Is there some common mechanism avaialbe ?
> > >
> > > Is one of the solution to put the data on the page (maybe hidden tags
> >
> > ?).
> >
> > > Still there is a need for some type of synchronization between both
> >
> > world.
> >
> > > I hope my questions make sense.
> > >
> > > Thanks and regards,
> > >
> > > Philippe
> >
> > --
> > *************************************
> > Philippe C. Martin
> > SnakeCard, LLC
> > www.snakecard.com <http://www.snakecard.com>
> > +1 405 694 8098
> > *************************************
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From pmartin at snakecard.com  Wed Oct 19 11:21:32 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Wed Oct 19 11:23:49 2005
Subject: [mod_python] Smart Card and mod_python and browser pluggins
In-Reply-To: <c298f2d70510190742i63ccb6d4j@mail.gmail.com>
References: <200510190303.09183.pmartin@snakecard.com>
	<200510191356.01561.pmartin@snakecard.com>
	<c298f2d70510190742i63ccb6d4j@mail.gmail.com>
Message-ID: <200510191521.33169.pmartin@snakecard.com>

On Wednesday 19 October 2005 02:43 pm, Nicolas Lehuen wrote:
> Then, you can go the plugin way but it's even more difficult than the
> applet way. All the more if you want to be multi-browser (as I've
> understood since you wrote about IE and Firefox) and multi-platform. You'll
> have to learn two different plugin APIs, learn COM and ATL, master the
> delicate art of C/C++ multi-platform programming, etc. etc.
I think I already do (too proud :-), but the main issue is that I start from 
an existing cross-platform application.

My big weakness here is how a client can exchange data with a server: I have 
two applications running (already) on both sides and I need to bridge them.

I'm not even worried about the plugins once that's done, there's a mozilla 
book out there as MSDN.

Regards,

Philippe



-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From nicolas.lehuen at gmail.com  Wed Oct 19 12:01:24 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Wed Oct 19 12:01:32 2005
Subject: [mod_python] Smart Card and mod_python and browser pluggins
In-Reply-To: <200510191521.33169.pmartin@snakecard.com>
References: <200510190303.09183.pmartin@snakecard.com>
	<200510191356.01561.pmartin@snakecard.com>
	<c298f2d70510190742i63ccb6d4j@mail.gmail.com>
	<200510191521.33169.pmartin@snakecard.com>
Message-ID: <c298f2d70510190901h2f70d9d8y@mail.gmail.com>

2005/10/19, Philippe C. Martin <pmartin@snakecard.com>:
>
> On Wednesday 19 October 2005 02:43 pm, Nicolas Lehuen wrote:
> > Then, you can go the plugin way but it's even more difficult than the
> > applet way. All the more if you want to be multi-browser (as I've
> > understood since you wrote about IE and Firefox) and multi-platform.
> You'll
> > have to learn two different plugin APIs, learn COM and ATL, master the
> > delicate art of C/C++ multi-platform programming, etc. etc.
> I think I already do (too proud :-), but the main issue is that I start
> from
> an existing cross-platform application.
>
> My big weakness here is how a client can exchange data with a server: I
> have
> two applications running (already) on both sides and I need to bridge
> them.
>
> I'm not even worried about the plugins once that's done, there's a mozilla
> book out there as MSDN.
>
> Regards,
>
> Philippe
>
>
Well, you look like you know what you are doing :). I wish you to succeed in
this !

To exchange data between the client and server, why not use HTTP ? With a
scheme like this :

1) The client sends an HTTP request to the server with the unique card Id.
The server generate and random value, associates it to the unique id
(storing it in a DB or something), and returns the random data to the
client.

2) The client makes another HTTP request, this time with the unique id, and
the random data encrypted with its diversified key. The server fetch the
public key of the client thanks to its unique id, decrypts what the client
sent and checks if it matches the previously stored random data. It can then
send back a redirect to the intended page, with a secure cookie which will
be required to access all subsequent pages.

To send HTTP request from the client, just use the APIs provided by the
plugin SDK.

Does this sound good ? In any case, this is very close to the standard HTTP
Digest method of authentication, except that you use asymetric encryption
algorithms.

Regards,
Nicolas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051019/b71e5cb9/attachment.html
From pmartin at snakecard.com  Wed Oct 19 13:14:12 2005
From: pmartin at snakecard.com (Philippe C. Martin)
Date: Wed Oct 19 13:44:28 2005
Subject: [mod_python] Smart Card and mod_python and browser pluggins
In-Reply-To: <c298f2d70510190901h2f70d9d8y@mail.gmail.com>
References: <200510190303.09183.pmartin@snakecard.com>
	<200510191521.33169.pmartin@snakecard.com>
	<c298f2d70510190901h2f70d9d8y@mail.gmail.com>
Message-ID: <200510191714.12639.pmartin@snakecard.com>

On Wednesday 19 October 2005 04:01 pm, Nicolas Lehuen wrote:

> Well, you look like you know what you are doing :). I wish you to succeed
> in this !
>
> To exchange data between the client and server, why not use HTTP ? With a
> scheme like this :
>
I just bought an Apache book and it cover that I'll sart studying that 
protocol

> 1) The client sends an HTTP request to the server with the unique card Id.
> The server generate and random value, associates it to the unique id
> (storing it in a DB or something), and returns the random data to the
> client.
Actually it will be stored in the card

>
> 2) The client makes another HTTP request, this time with the unique id, and
> the random data encrypted with its diversified key. The server fetch the
> public key of the client thanks to its unique id, decrypts what the client
> sent and checks if it matches the previously stored random data. It can
> then send back a redirect to the intended page, with a secure cookie which
> will be required to access all subsequent pages.
>
> To send HTTP request from the client, just use the APIs provided by the
> plugin SDK.
>
> Does this sound good ? In any case, this is very close to the standard HTTP
> Digest method of authentication, except that you use asymetric encryption
> algorithms.
>
It does sound good - thanks a bunch.

Actually this scheme uses symmetric encryption (3DES or AES). The advantages 
(I see) are: cheaper cards, not certification authority management.



BTW: just found this tutorial 
http://roachfiend.com/archives/2004/12/08/how-to-create-firefox-extensions/

as well as a new book: hacking firefox which includes writing extension and 
introduces XPCOM (COM like stuff)

As I'm fairly certain IE will let me do what I need, I'm fairly hopefull.


Regards,

Philippe



> Regards,
> Nicolas

-- 
*************************************
Philippe C. Martin
SnakeCard, LLC
www.snakecard.com
+1 405 694 8098
*************************************
From arnarb at oddi.is  Wed Oct 19 15:03:30 2005
From: arnarb at oddi.is (Arnar Birgisson)
Date: Wed Oct 19 15:04:11 2005
Subject: [mod_python] Session ID not retained
Message-ID: <s35698a4.034@Lime.oddi.is>

Hi folks,

I've found the reason for this myself, just wanted to post it to the list if someone hits the same error in the future.

Upgrading MySQL for some reason shortened varchar(32) columns (used for the sid) to varchar(21). Apparently, this is normal when upgrading from 3.x to 4.1 since the upgrade procedure changes the internal encoding of tables from latin1 to UTF-8. However, I'm not sure what version I was running of MySQL prior to my kernel upgrade, but it was definately 4.x. After the upgrade I have 4.1.14.

Obviously, since SIDs are 32 characters long (as are other hex-coded md5 sums) no rows were being returned.

Sorry if anyone wasted their time over this.

Arnar

>>> "Arnar Birgisson" <arnarb@oddi.is> 18.10.2005 12:03 >>>
Hello there,

I was running mod_python 3.1.3 on Apache 2.0.50 with linux kernel 2.4.31 until yesterday, and all was well. For other reasons, I needed to upgrade to kernel version 2.6.13 yesterday, and along with it I upgraded my distribution from Slackware 10.0 to Slackware-current. That entailed an upgrade from libc 2.3.2 to 2.3.5.

After the upgrade, I recompiled Apache (still version 2.0.50) and compiled and installed mod_python 3.1.4. The problem now is that every request gets a new session id, even if the browser is clearly sending the pysid cookie correctly.

I was and am running python 2.4.1 both before the upgrade and now. I tried uninstalling mod_python completely, and recompiling mod_python 3.1.3 again against the new libc, but that doesn't solve the problem.

I am using a? session class that I wrote myself (complete source below) that uses mysql as the data store, and the session info makes it way into the table, which tells me that sess.save() is working properly. The problem seems to be that the constructor (which just calls mod_python.Session.__init__) doesn't find the session id in the request object. I dumped request.headers_in and the pysid cookie is there.

Any ideas on what I should try next?

Arnar



My session class (which worked fine before):

from mod_python import apache, Session as apsess
from Database import getExclusiveDB
from cPickle import loads, dumps
import time

def sqlsession_cleanup():
   db = getExclusiveDB()
   c = db.cursor()
   c.execute("delete from sessiondata where (unix_timestamp() - accessed) > timeout")
   c.close()
   db.commit()
   db.close()

class SqlSession(apsess.BaseSession):

   def __init__(self, req, sid=0, secret=None, timeout=0, lock=1):
      apsess.BaseSession.__init__(self, req, sid=sid, secret=secret, timeout=timeout, lock=lock)

   def do_cleanup(self):
      self._req.register_cleanup(mem_cleanup)
      self._req.log_error("SqlSession: registered session cleanup",
            apache.APLOG_NOTICE)

   def do_load(self):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("select created, accessed, timeout, data from sessiondata where sid = %s", self._sid)
      if c.rowcount > 0:
         row = c.fetchone()
         retval = {
            "_data": loads(row[3]),
            "_created": row[0],
            "_accessed": row[1],
            "_timeout": row[2]
         }
      else:
         retval = None
      c.close()
      db.close()
      return retval

   def do_save(self, dict):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("replace into sessiondata (sid, created, accessed, timeout, data) "
            + "values (%s, %s, %s, %s, %s)", 
            (self._sid, dict['_created'], dict['_accessed'], dict['_timeout'], dumps(dict['_data'])))
      c.close()
      db.commit()
      db.close()

   def do_delete(self):
      db = getExclusiveDB()
      c = db.cursor()
      c.execute("delete from sessiondata where sid = %s", self._sid)
      c.close()
      db.commit()
      db.close()



_______________________________________________
Mod_python mailing list
Mod_python@modpython.org 
http://mailman.modpython.org/mailman/listinfo/mod_python


From jg.lists at sympatico.ca  Wed Oct 19 15:21:59 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Oct 19 15:20:13 2005
Subject: [mod_python] Session ID not retained
In-Reply-To: <s35698a4.034@Lime.oddi.is>
References: <s35698a4.034@Lime.oddi.is>
Message-ID: <43569CD7.6000406@sympatico.ca>

Arnar Birgisson wrote:
> Hi folks,
> 
> I've found the reason for this myself, just wanted to post it to the list if someone hits the same error in the future.
> 
> Upgrading MySQL for some reason shortened varchar(32) columns (used for the sid) to varchar(21). Apparently, this is normal when upgrading from 3.x to 4.1 since the upgrade procedure changes the internal encoding of tables from latin1 to UTF-8. However, I'm not sure what version I was running of MySQL prior to my kernel upgrade, but it was definately 4.x. After the upgrade I have 4.1.14.
> 
> Obviously, since SIDs are 32 characters long (as are other hex-coded md5 sums) no rows were being returned.
> 
> Sorry if anyone wasted their time over this.

Glad you got it resolved. I was certainly puzzled which was bothering me 
because I thought I had a pretty good idea of how session handling works.

Regards,
Jim
From dalloliogm at gmail.com  Wed Oct 19 18:42:38 2005
From: dalloliogm at gmail.com (G.M.Dall'Olio)
Date: Wed Oct 19 18:41:05 2005
Subject: [mod_python] Re: PyChart into web site error
In-Reply-To: <38b66b83d7cabbc418678a2e93b1cb81@dscpl.com.au>
References: <43562EE0.3080507@gmail.com>
	<38b66b83d7cabbc418678a2e93b1cb81@dscpl.com.au>
Message-ID: <4356CBDE.8070609@gmail.com>

Graham Dumpleton wrote:

> It isn't mod_python that requires sys.argv, it is pychart that is the 
> problem based
> on the traceback you provide. Ie., pychart has:
>
>   self.title = re.sub("(.*)\\.py$", "\\1", sys.argv[0])
>
> In short, pychart is written so as it can only work on the command line.
>

Ok, thank you very much!
I've solved the problem of sys.argv. But then I've found another error.

The simplest way to fix this sys.argv's problem is to add it on the same 
module, without using PythonImport or similar:

[python_code]
import sys
sys.argv = ['pychart']

def plot2():       

        data = [["Jan", 10], ["Feb", 22], ["Mar", 30]]
        ar = area.T(x_coord = category_coord.T(data, 0),
        y_range = (0, None),
        x_axis = axis.X(),
        y_axis = axis.Y())
        ar.add_plot(bar_plot.T(data = data, label = "Something"))
        return ar.draw()
[/python_code]

The problem is that this code returns 'None'; because the graph is drawn 
on stdout, and not returned.
So I'm trying to find a way to take stdout in the script, but I receive 
security errors from apache.
For example, there is a module in PyChart called 'canvas' that enable to 
turn the output to a file-like object:

[python_code]
import sys
sys.argv = ['pychart']

def plot2():

        can_obj = StringIO.StringIO()                # create a 
file-like object with StringIO
        can = canvas.init(can_obj)                      # this is 
equivalent to 'sys.stdout = can_obj', so the output will be written in 
can_obj
        can.set_title('Title1')                                # (By the 
way, this doesn't work in skipping the sys.argv error. See 
$PythonSitePackages/pychart/basecanvas.py at line 70)

        data = [["Jan", 10], ["Feb", 22], ["Mar", 30]]
        ar = area.T(x_coord = category_coord.T(data, 0),
        y_range = (0, None),
        x_axis = axis.X(),
        y_axis = axis.Y())
        ar.add_plot(bar_plot.T(data = data, label = "Something"))

        ar.draw(can)
        return str(can_obj.read())                       # Try to read 
can_obj. It doesn't work for security problems in Apache. Do I have to 
configure the Directive in a different way?
[/python_code]

The error returned is this:

----------------
*Internal Server Error*

The server encountered an internal error or misconfiguration and was 
unable to complete your request.

Please contact the server administrator, root@localhost and inform them 
of the time the error occurred, and anything you might have done that 
may have caused the error.

More information about this error may be available in the server error log.

------------------------------------------------------------------------
Apache/2.0.54 (Fedora) Server at localhost Port 80
-----------


So, I don't know how to continue now. By the way, do you know of any 
other module that I can use the generate graphs? I have to generate them 
from a simple list written in xml format. Thank you!




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051020/f5ce197d/attachment.html
From grahamd at dscpl.com.au  Wed Oct 19 18:57:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 18:57:11 2005
Subject: [mod_python] Re: PyChart into web site error
Message-ID: <1129762624.10285@dscpl.user.openhosting.com>

G.M.Dall'Olio wrote ..
> Graham Dumpleton wrote:
> 
> > It isn't mod_python that requires sys.argv, it is pychart that is the
> > problem based
> > on the traceback you provide. Ie., pychart has:
> >
> >   self.title = re.sub("(.*)\\.py$", "\\1", sys.argv[0])
> >
> > In short, pychart is written so as it can only work on the command line.
> >
> 
> Ok, thank you very much!
> I've solved the problem of sys.argv. But then I've found another error.
> 
> The simplest way to fix this sys.argv's problem is to add it on the same
> module, without using PythonImport or similar:
> 
> [python_code]
> import sys
> sys.argv = ['pychart']

There are reasons why setting this here might not be the best idea, but
if it works for you and you are happy, great.

> def plot2():
> 
>         can_obj = StringIO.StringIO()                # create a 
> file-like object with StringIO
>         can = canvas.init(can_obj)                      # this is 
> equivalent to 'sys.stdout = can_obj', so the output will be written in
> can_obj
>         can.set_title('Title1')                                # (By the
> way, this doesn't work in skipping the sys.argv error. See 
> $PythonSitePackages/pychart/basecanvas.py at line 70)

Expected as much.

>         data = [["Jan", 10], ["Feb", 22], ["Mar", 30]]
>         ar = area.T(x_coord = category_coord.T(data, 0),
>         y_range = (0, None),
>         x_axis = axis.X(),
>         y_axis = axis.Y())
>         ar.add_plot(bar_plot.T(data = data, label = "Something"))
> 
>         ar.draw(can)
>         return str(can_obj.read())                       # Try to read
> can_obj. It doesn't work for security problems in Apache. Do I have to
> configure the Directive in a different way?
> [/python_code]

Look in the Apache error log file for what the real error actually is,
or include:

  PythonDebug On

directive in your setup so error is shown to browser.

You will probably find it is just some programming error in your
code.

Graham
From grahamd at dscpl.com.au  Wed Oct 19 19:09:02 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Wed Oct 19 19:09:09 2005
Subject: [mod_python] Re: PyChart into web site error
Message-ID: <1129763342.21805@dscpl.user.openhosting.com>

G.M.Dall'Olio wrote ..
>         ar.draw(can)
>         return str(can_obj.read())                       # Try to read

Realised what problem probably is. Change last line to read:

  return can_obj.getvalue()

See StringIO object for details of what getvalue() does. The read()
function doesn't do what you think it does.

Gotta run.

Graham
From list at joreybump.com  Wed Oct 19 20:40:06 2005
From: list at joreybump.com (Jorey Bump)
Date: Wed Oct 19 20:40:14 2005
Subject: [mod_python] Re: PyChart into web site error
In-Reply-To: <4356CBDE.8070609@gmail.com>
References: <43562EE0.3080507@gmail.com>	<38b66b83d7cabbc418678a2e93b1cb81@dscpl.com.au>
	<4356CBDE.8070609@gmail.com>
Message-ID: <4356E766.6050803@joreybump.com>

G.M.Dall'Olio wrote:

> The problem is that this code returns 'None'; because the graph is drawn 
> on stdout, and not returned.
> So I'm trying to find a way to take stdout in the script, but I receive 
> security errors from apache.

Have you investigated the os.popen* variants? It might be easiest to 
create a command line script that does what you want and open it for 
reading & writing. I do this with some proprietary binaries used on one 
of my sites.

Here's an example (your needs will differ a bit):

import os

def client_query(client, arg1, arg2, arg3):
     """
     Pass arguments to a client command and collect combined
     stdout & stderr into a list of lines.

     client: full path to executable script or binary
     """
     cmd = "%s %s %s %s" % (client, arg1, arg2, arg3)
     # os.popen4 combines stdout & stderr for reading
     w, r = os.popen4(cmd)
     client_response = r.readlines()
     r.close()
     w.close()
     return client_response
From paul.hide at gmail.com  Thu Oct 20 06:14:18 2005
From: paul.hide at gmail.com (Paul Hide)
Date: Thu Oct 20 06:14:24 2005
Subject: [mod_python] What can be pickled?
Message-ID: <b117fb190510200314l4db93346nf229f3e379e2df55@mail.gmail.com>

Section 3.14.4 of the python language reference manual states:

"These restrictions are why picklable functions and classes must be defined
in the top level of a module."

What does the phrase "top level" mean here?

Paul Hide
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051020/0635758f/attachment.html
From rjsquire at ebi-online.com  Thu Oct 20 06:22:43 2005
From: rjsquire at ebi-online.com (Robert Squire)
Date: Thu Oct 20 06:24:09 2005
Subject: [mod_python] Strangeness from the mod_python tutorial
Message-ID: <43576FF3.20507@ebi-online.com>

Hello:
Thank you to everyone who responded to my previous posting.
Now I've hit something new.  The code that follows is taken exactly from 
the tutorial at:

http://www.modpython.org/live/current/doc-html/tut-pub.html

I expected the function email to be called with 4 parameters, the req 
object and the three inputs from the form.  However this is the error 
output from mod_python:
===========================

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line 299, in HandlerDispatch
    result = object(req)

  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py", line 136, in handler
    result = util.apply_fs_data(object, req.form, req=req)

  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line 361, in apply_fs_data
    return object(**args)


TypeError: email() takes exactly 4 non-keyword arguments (1 given)

===========================
I tried removing the req from the email parameter list and the error 
reflected the change by stating that the function takes 3 arguments and 
zero were supplied.  Is this a problem brought about by a change in 
mod_python since the tutorial was written or have I made yet another 
boneheaded error?



In the .htaccess file I have
===========================
AddHandler mod_python .py
PythonHandler mod_python.publisher
PythonDebug On
===========================

The html form, form.html:
===========================
<html>
    Please provide feedback below:
<p>
<form action="form.py/email" method="POST">
    Name:    <input type="text" name="name"><br>
    Email:   <input type="text" name="email"><br>
    Comment: <textarea name="comment" rows=4 cols=20></textarea><br>
    <input type="submit">

</form>
</html>
===========================

And the python file, form.py:
===========================
import smtplib

WEBMASTER = "webmaster"   # webmaster e-mail
SMTP_SERVER = "smtp.comcast.net" # your SMTP server

def email(req, name, email, comment):

    # make sure the user provided all the parameters
    if not (name and email and comment):
        return "A required parameter is missing, \
               please go back and correct the error"

    # create the message text
    msg = """\
From: %s
Subject: feedback
To: %s

I have the following comment:

%s

Thank You,

%s

""" % (email, WEBMASTER, comment, name)

    # send it out
    conn = smtplib.SMTP(SMTP_SERVER)
    conn.sendmail(email, [WEBMASTER], msg)
    conn.quit()

    # provide feedback to the user
    s = """\
<html>

Dear %s,<br>
Thank You for your kind comments, we
will get back to you shortly.

</html>""" % name

    return s
===========================
From nicolas.lehuen at gmail.com  Thu Oct 20 06:29:01 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Oct 20 06:29:11 2005
Subject: [mod_python] What can be pickled?
In-Reply-To: <b117fb190510200314l4db93346nf229f3e379e2df55@mail.gmail.com>
References: <b117fb190510200314l4db93346nf229f3e379e2df55@mail.gmail.com>
Message-ID: <c298f2d70510200329w247d23bar@mail.gmail.com>

Hi,

This means that they are not locally defined in a function or class.

In this example, foo is top-level whereas bar isn't :

# mymodule.py
def foo(y):
def bar(x):
return x+y
return bar

Just as an aside, I suppose you asking this question because you try to
store functions or classes in a session object. Just don't do this, this is
not supported and won't ever be. There are way too many problems due to the
interactions between dynamic module loading and pickling.

Regards,
Nicolas


2005/10/20, Paul Hide <paul.hide@gmail.com>:
>
> Section 3.14.4 of the python language reference manual states:
>
> "These restrictions are why picklable functions and classes must be
> defined in the top level of a module."
>
> What does the phrase "top level" mean here?
>
> Paul Hide
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051020/cb56cadb/attachment.html
From grahamd at dscpl.com.au  Thu Oct 20 07:21:17 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 20 07:21:57 2005
Subject: [mod_python] What can be pickled?
In-Reply-To: <c298f2d70510200329w247d23bar@mail.gmail.com>
References: <b117fb190510200314l4db93346nf229f3e379e2df55@mail.gmail.com>
	<c298f2d70510200329w247d23bar@mail.gmail.com>
Message-ID: <621B1713-A414-469F-9C8F-823FD1F698B2@dscpl.com.au>

For background on limitations with what can be pickled in sessions
read:

   http://www.dscpl.com.au/articles/modpython-005.html

Graham

On 20/10/2005, at 8:29 PM, Nicolas Lehuen wrote:

> Hi,
>
> This means that they are not locally defined in a function or class.
>
> In this example, foo is top-level whereas bar isn't :
>
> # mymodule.py
> def foo(y):
>     def bar(x):
>         return x+y
>     return bar
>
> Just as an aside, I suppose you asking this question because you  
> try to store functions or classes in a session object. Just don't  
> do this, this is not supported and won't ever be. There are way too  
> many problems due to the interactions between dynamic module  
> loading and pickling.
>
> Regards,
> Nicolas
>
>
> 2005/10/20, Paul Hide <paul.hide@gmail.com>: Section 3.14.4 of the  
> python language reference manual states:
>
> "These restrictions are why picklable functions and classes must be  
> defined in the top level of a module."
>
> What does the phrase "top level" mean here?
>
> Paul Hide
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Thu Oct 20 07:35:27 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 20 07:35:41 2005
Subject: [mod_python] Strangeness from the mod_python tutorial
In-Reply-To: <43576FF3.20507@ebi-online.com>
References: <43576FF3.20507@ebi-online.com>
Message-ID: <55B25AC3-E2FB-4067-9513-D5CD0EF60A6C@dscpl.com.au>

Strange.

Are you typing in values for all input fields?

Which browser are you using?

I changed the action target to be my form debugger:

   http://www.dscpl.com.au/projects/vampire/examples/templates/ 
form_values.html

and even with no input, it still displayed three actual form fields.

What do you get if you point form at that URL?

Grahamd


On 20/10/2005, at 8:22 PM, Robert Squire wrote:

> Hello:
> Thank you to everyone who responded to my previous posting.
> Now I've hit something new.  The code that follows is taken exactly  
> from the tutorial at:
>
> http://www.modpython.org/live/current/doc-html/tut-pub.html
>
> I expected the function email to be called with 4 parameters, the  
> req object and the three inputs from the form.  However this is the  
> error output from mod_python:
> ===========================
>
> Mod_python error: "PythonHandler mod_python.publisher"
>
> Traceback (most recent call last):
>
>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line  
> 299, in HandlerDispatch
>    result = object(req)
>
>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",  
> line 136, in handler
>    result = util.apply_fs_data(object, req.form, req=req)
>
>  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line  
> 361, in apply_fs_data
>    return object(**args)
>
>
> TypeError: email() takes exactly 4 non-keyword arguments (1 given)
>
> ===========================
> I tried removing the req from the email parameter list and the  
> error reflected the change by stating that the function takes 3  
> arguments and zero were supplied.  Is this a problem brought about  
> by a change in mod_python since the tutorial was written or have I  
> made yet another boneheaded error?
>
>
>
> In the .htaccess file I have
> ===========================
> AddHandler mod_python .py
> PythonHandler mod_python.publisher
> PythonDebug On
> ===========================
>
> The html form, form.html:
> ===========================
> <html>
>    Please provide feedback below:
> <p>
> <form action="form.py/email" method="POST">
>    Name:    <input type="text" name="name"><br>
>    Email:   <input type="text" name="email"><br>
>    Comment: <textarea name="comment" rows=4 cols=20></textarea><br>
>    <input type="submit">
>
> </form>
> </html>
> ===========================
>
> And the python file, form.py:
> ===========================
> import smtplib
>
> WEBMASTER = "webmaster"   # webmaster e-mail
> SMTP_SERVER = "smtp.comcast.net" # your SMTP server
>
> def email(req, name, email, comment):
>
>    # make sure the user provided all the parameters
>    if not (name and email and comment):
>        return "A required parameter is missing, \
>               please go back and correct the error"
>
>    # create the message text
>    msg = """\
> From: %s
> Subject: feedback
> To: %s
>
> I have the following comment:
>
> %s
>
> Thank You,
>
> %s
>
> """ % (email, WEBMASTER, comment, name)
>
>    # send it out
>    conn = smtplib.SMTP(SMTP_SERVER)
>    conn.sendmail(email, [WEBMASTER], msg)
>    conn.quit()
>
>    # provide feedback to the user
>    s = """\
> <html>
>
> Dear %s,<br>
> Thank You for your kind comments, we
> will get back to you shortly.
>
> </html>""" % name
>
>    return s
> ===========================
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From rjsquire at ebi-online.com  Thu Oct 20 08:52:43 2005
From: rjsquire at ebi-online.com (Robert Squire)
Date: Thu Oct 20 08:54:16 2005
Subject: [mod_python] Strangeness from the mod_python tutorial
In-Reply-To: <55B25AC3-E2FB-4067-9513-D5CD0EF60A6C@dscpl.com.au>
References: <43576FF3.20507@ebi-online.com>
	<55B25AC3-E2FB-4067-9513-D5CD0EF60A6C@dscpl.com.au>
Message-ID: <4357931B.8000805@ebi-online.com>

An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051020/30782b3b/attachment-0001.html
From rjsquire at ebi-online.com  Thu Oct 20 09:39:54 2005
From: rjsquire at ebi-online.com (Robert Squire)
Date: Thu Oct 20 09:41:41 2005
Subject: [mod_python] Strangeness from the mod_python tutorial
In-Reply-To: <55B25AC3-E2FB-4067-9513-D5CD0EF60A6C@dscpl.com.au>
References: <43576FF3.20507@ebi-online.com>
	<55B25AC3-E2FB-4067-9513-D5CD0EF60A6C@dscpl.com.au>
Message-ID: <43579E2A.1050106@ebi-online.com>

Graham Dumpleton wrote:

> Strange.
>
> Are you typing in values for all input fields?
>
> Which browser are you using?
>
> I changed the action target to be my form debugger:
>
>   http://www.dscpl.com.au/projects/vampire/examples/templates/ 
> form_values.html
>
> and even with no input, it still displayed three actual form fields.
>
> What do you get if you point form at that URL?
>
> Grahamd
>
>
> On 20/10/2005, at 8:22 PM, Robert Squire wrote:
>
>> Hello:
>> Thank you to everyone who responded to my previous posting.
>> Now I've hit something new.  The code that follows is taken exactly  
>> from the tutorial at:
>>
>> http://www.modpython.org/live/current/doc-html/tut-pub.html
>>
>> I expected the function email to be called with 4 parameters, the  
>> req object and the three inputs from the form.  However this is the  
>> error output from mod_python:
>> ===========================
>>
>> Mod_python error: "PythonHandler mod_python.publisher"
>>
>> Traceback (most recent call last):
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/apache.py", line  
>> 299, in HandlerDispatch
>>    result = object(req)
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/publisher.py",  
>> line 136, in handler
>>    result = util.apply_fs_data(object, req.form, req=req)
>>
>>  File "/usr/lib/python2.4/site-packages/mod_python/util.py", line  
>> 361, in apply_fs_data
>>    return object(**args)
>>
>>
>> TypeError: email() takes exactly 4 non-keyword arguments (1 given)
>>
>> ===========================
>> I tried removing the req from the email parameter list and the  error 
>> reflected the change by stating that the function takes 3  arguments 
>> and zero were supplied.  Is this a problem brought about  by a change 
>> in mod_python since the tutorial was written or have I  made yet 
>> another boneheaded error?
>>
>>
>>
>> In the .htaccess file I have
>> ===========================
>> AddHandler mod_python .py
>> PythonHandler mod_python.publisher
>> PythonDebug On
>> ===========================
>>
>> The html form, form.html:
>> ===========================
>> <html>
>>    Please provide feedback below:
>> <p>
>> <form action="form.py/email" method="POST">
>>    Name:    <input type="text" name="name"><br>
>>    Email:   <input type="text" name="email"><br>
>>    Comment: <textarea name="comment" rows=4 cols=20></textarea><br>
>>    <input type="submit">
>>
>> </form>
>> </html>
>> ===========================
>>
>> And the python file, form.py:
>> ===========================
>> import smtplib
>>
>> WEBMASTER = "webmaster"   # webmaster e-mail
>> SMTP_SERVER = "smtp.comcast.net" # your SMTP server
>>
>> def email(req, name, email, comment):
>>
>>    # make sure the user provided all the parameters
>>    if not (name and email and comment):
>>        return "A required parameter is missing, \
>>               please go back and correct the error"
>>
>>    # create the message text
>>    msg = """\
>> From: %s
>> Subject: feedback
>> To: %s
>>
>> I have the following comment:
>>
>> %s
>>
>> Thank You,
>>
>> %s
>>
>> """ % (email, WEBMASTER, comment, name)
>>
>>    # send it out
>>    conn = smtplib.SMTP(SMTP_SERVER)
>>    conn.sendmail(email, [WEBMASTER], msg)
>>    conn.quit()
>>
>>    # provide feedback to the user
>>    s = """\
>> <html>
>>
>> Dear %s,<br>
>> Thank You for your kind comments, we
>> will get back to you shortly.
>>
>> </html>""" % name
>>
>>    return s
>> ===========================
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>
>
I can't explain this but I just changed my form action back to 
form.py/email and it's working now.
Looks exactly the same to me.  I have not restarted apache or modified 
any configuration since starting this process.
Very strange.

<html>
    Please provide feedback below:
<p>
<form action="form.py/email" method="POST">
    Name:    <input type="text" name="name"><br>
    Email:   <input type="text" name="email"><br>
    Comment: <textarea name="comment" rows=4 cols=20></textarea><br>
    <input type="submit">

</form>
</html>
From jandriver1.0 at gmail.com  Thu Oct 20 13:03:58 2005
From: jandriver1.0 at gmail.com (Juan Carlos)
Date: Thu Oct 20 13:03:18 2005
Subject: [mod_python] Updating the URL after a redirect
Message-ID: <1129827838.8371.7.camel@localhost.localdomain>

Hello everybody, I'm trying to redirect to a page inside my site with
the internal_redirect method of the request. It redirects well but it
doesn't update the URL at the browser, so for example if i save a record
in a CRUD application and after saving it i redirect to the detail page,
the browser remains with the save URL.

any suggestions?

thanks in advance!!

From jg.lists at sympatico.ca  Thu Oct 20 13:38:44 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Thu Oct 20 13:37:17 2005
Subject: [mod_python] Updating the URL after a redirect
In-Reply-To: <1129827838.8371.7.camel@localhost.localdomain>
References: <1129827838.8371.7.camel@localhost.localdomain>
Message-ID: <4357D624.6040909@sympatico.ca>

Juan Carlos wrote:
> Hello everybody, I'm trying to redirect to a page inside my site with
> the internal_redirect method of the request. It redirects well but it
> doesn't update the URL at the browser, so for example if i save a record
> in a CRUD application and after saving it i redirect to the detail page,
> the browser remains with the save URL.
> 
> any suggestions?
> 

Don't use internal_redirect. It only changes the url apache uses for 
processing the request and the browser will not be aware of this change. 
The only way to do it is to send the browser a response with a 3xx (eg 
302) status code. Of course this means that the browser will need to 
perform an additional GET or POST.

Regards,
Jim
From nicolas.lehuen at gmail.com  Thu Oct 20 14:29:42 2005
From: nicolas.lehuen at gmail.com (Nicolas Lehuen)
Date: Thu Oct 20 14:29:48 2005
Subject: [mod_python] Updating the URL after a redirect
In-Reply-To: <4357D624.6040909@sympatico.ca>
References: <1129827838.8371.7.camel@localhost.localdomain>
	<4357D624.6040909@sympatico.ca>
Message-ID: <c298f2d70510201129q78697a05q@mail.gmail.com>

2005/10/20, Jim Gallacher <jg.lists@sympatico.ca>:
>
> Juan Carlos wrote:
> > Hello everybody, I'm trying to redirect to a page inside my site with
> > the internal_redirect method of the request. It redirects well but it
> > doesn't update the URL at the browser, so for example if i save a record
> > in a CRUD application and after saving it i redirect to the detail page,
> > the browser remains with the save URL.
> >
> > any suggestions?
> >
>
> Don't use internal_redirect. It only changes the url apache uses for
> processing the request and the browser will not be aware of this change.
> The only way to do it is to send the browser a response with a 3xx (eg
> 302) status code. Of course this means that the browser will need to
> perform an additional GET or POST.
>
> Regards,
> Jim
>

You can use mod_python.util.redirect to do exactly that, see :

http://www.modpython.org/live/current/doc-html/pyapi-util-funcs.html

Regards,
Nicolas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051020/9628f8b8/attachment.html
From i.stokes-rees1 at physics.ox.ac.uk  Fri Oct 21 15:46:27 2005
From: i.stokes-rees1 at physics.ox.ac.uk (Ian Stokes-Rees)
Date: Fri Oct 21 15:46:29 2005
Subject: [mod_python] Segfault with Vampire
Message-ID: <43594593.4000309@physics.ox.ac.uk>

Hi,

I have Apache, Python, and mod_python setup as follows:

  Apache/2.0.53 (Unix) mod_python/3.1.4 Python/2.4.1

mod_python works fine, however when I try to use Vampire I get a seg fault:

[Fri Oct 21 20:31:38 2005] [notice] mod_python: (Re)importing module 
'vampire'
[Fri Oct 21 20:31:39 2005] [notice] child pid 23753 exit signal 
Segmentation fault (11)

I can't figure out what the source of the seg fault is.  Vampire is in 
the sys.path.  The only thing I change in the .htaccess is "myprob" to 
"vampire" for the PythonHandler, and I don't touch the actual file 
(resource).  Any thoughts on the source of this would be greatly 
appreciated.  Below are my .htaccess file and myprob.py.

Ian.

.htaccess:
SetHandler mod_python
PythonHandler vampire
PythonDebug On

myprob.py:
from mod_python import apache

def handler(req):
     req.content_type = "text/plain"
     req.write("boo")
     return apache.OK

From grahamd at dscpl.com.au  Fri Oct 21 18:04:35 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 21 18:04:46 2005
Subject: [mod_python] Segfault with Vampire
In-Reply-To: <43594593.4000309@physics.ox.ac.uk>
References: <43594593.4000309@physics.ox.ac.uk>
Message-ID: <8F23640C-D91F-4E5A-8BAB-50C3D04F9503@dscpl.com.au>

Vampire imports xmlrpclib, so you may be affected by the expat library
version mismatch problem. See:

   http://www.modpython.org/pipermail/mod_python/2005-October/ 
019348.html

for some details. Use the prev/next links for that mailing list  
thread to
go back through the discussion to get the context.

Simplest way to check is to put PythonHandler back to "boo" and in
"boo.py" add:

   import xmlrpclib

If it crashes when access, it is the expat problem and nothing to do  
with
Vampire itself.

In short, upgrade expat to a newer version, or at least the same version
as embedded in Python. See mailing list discussion for how to find out.

Graham

On 22/10/2005, at 5:46 AM, Ian Stokes-Rees wrote:

> Hi,
>
> I have Apache, Python, and mod_python setup as follows:
>
>  Apache/2.0.53 (Unix) mod_python/3.1.4 Python/2.4.1
>
> mod_python works fine, however when I try to use Vampire I get a  
> seg fault:
>
> [Fri Oct 21 20:31:38 2005] [notice] mod_python: (Re)importing  
> module 'vampire'
> [Fri Oct 21 20:31:39 2005] [notice] child pid 23753 exit signal  
> Segmentation fault (11)
>
> I can't figure out what the source of the seg fault is.  Vampire is  
> in the sys.path.  The only thing I change in the .htaccess is  
> "myprob" to "vampire" for the PythonHandler, and I don't touch the  
> actual file (resource).  Any thoughts on the source of this would  
> be greatly appreciated.  Below are my .htaccess file and myprob.py.
>
> Ian.
>
> .htaccess:
> SetHandler mod_python
> PythonHandler vampire
> PythonDebug On
>
> myprob.py:
> from mod_python import apache
>
> def handler(req):
>     req.content_type = "text/plain"
>     req.write("boo")
>     return apache.OK
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From i.stokes-rees1 at physics.ox.ac.uk  Sat Oct 22 19:09:21 2005
From: i.stokes-rees1 at physics.ox.ac.uk (Ian Stokes-Rees)
Date: Sat Oct 22 19:09:25 2005
Subject: [mod_python] Segfault with Vampire
In-Reply-To: <8F23640C-D91F-4E5A-8BAB-50C3D04F9503@dscpl.com.au>
References: <43594593.4000309@physics.ox.ac.uk>
	<8F23640C-D91F-4E5A-8BAB-50C3D04F9503@dscpl.com.au>
Message-ID: <435AC6A1.4010608@physics.ox.ac.uk>

OK, That looks like it is probably it (changing to just mod_python and 
then importing pyexpat does cause the seg fault).

The problem is that after upgrading the installed library to expat 
1.95.8 (same as Python -- see below), and restarting Apache, I still get 
seg faults.

Do I need to rebuild Apache, mod_python, or vampire?  I wouldn't have 
thought so if they are dynamically linked...

Cheers,

Ian

Python 2.4.1 (#1, Aug 31 2005, 15:59:42)
[GCC 3.2.3 20030502 (Red Hat Linux 3.2.3-42)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
 >>> import pyexpat
 >>> pyexpat.version_info
(1, 95, 8)

[stokes@grid stokes]$ strings /usr/lib/libexpat* | grep expat_
expat_external.h
expat_1.95.8
expat_1.95.8
expat_1.95.8
expat_1.95.5
expat_1.95.8

Graham Dumpleton wrote:
> Vampire imports xmlrpclib, so you may be affected by the expat library
> version mismatch problem. See:
> 
>   http://www.modpython.org/pipermail/mod_python/2005-October/019348.html
> 
> for some details. Use the prev/next links for that mailing list thread to
> go back through the discussion to get the context.
> 
> Simplest way to check is to put PythonHandler back to "boo" and in
> "boo.py" add:
> 
>   import xmlrpclib
> 
> If it crashes when access, it is the expat problem and nothing to do with
> Vampire itself.
> 
> In short, upgrade expat to a newer version, or at least the same version
> as embedded in Python. See mailing list discussion for how to find out.
> 
> Graham
> 
> On 22/10/2005, at 5:46 AM, Ian Stokes-Rees wrote:
> 
>> Hi,
>>
>> I have Apache, Python, and mod_python setup as follows:
>>
>>  Apache/2.0.53 (Unix) mod_python/3.1.4 Python/2.4.1
>>
>> mod_python works fine, however when I try to use Vampire I get a seg 
>> fault:
>>
>> [Fri Oct 21 20:31:38 2005] [notice] mod_python: (Re)importing module 
>> 'vampire'
>> [Fri Oct 21 20:31:39 2005] [notice] child pid 23753 exit signal 
>> Segmentation fault (11)
>>
>> I can't figure out what the source of the seg fault is.  Vampire is in 
>> the sys.path.  The only thing I change in the .htaccess is "myprob" to 
>> "vampire" for the PythonHandler, and I don't touch the actual file 
>> (resource).  Any thoughts on the source of this would be greatly 
>> appreciated.  Below are my .htaccess file and myprob.py.
>>
>> Ian.
>>
>> .htaccess:
>> SetHandler mod_python
>> PythonHandler vampire
>> PythonDebug On
>>
>> myprob.py:
>> from mod_python import apache
>>
>> def handler(req):
>>     req.content_type = "text/plain"
>>     req.write("boo")
>>     return apache.OK
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>
> 
From torppa at cute.fi  Sat Oct 22 19:35:05 2005
From: torppa at cute.fi (Jarkko Torppa)
Date: Sat Oct 22 19:35:15 2005
Subject: [mod_python] import pyexpat coredumping, shared library problem
Message-ID: <435ACCA9.9040708@cute.fi>

I would think that this is pretty common, but quick search could not 
find this problem documented enywhere. Similar problems are documented 
in various places (mysql in FAQ).

python has it's own libexpat, and apache has own or will use installed 
if configure finds it. If they happen to be of a different version this 
can cause interesting coredumps.

This happened on solaris 8, python 2.4.2 and apache httpd-2.0.55

Fixed by installing systemwide expat and getting both python and apache 
to use it.

I think that this should be mentioned in FAQ or somewhere.
From grahamd at dscpl.com.au  Sat Oct 22 19:41:03 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 22 19:41:19 2005
Subject: [mod_python] Segfault with Vampire
In-Reply-To: <435AC6A1.4010608@physics.ox.ac.uk>
References: <43594593.4000309@physics.ox.ac.uk>
	<8F23640C-D91F-4E5A-8BAB-50C3D04F9503@dscpl.com.au>
	<435AC6A1.4010608@physics.ox.ac.uk>
Message-ID: <948E5601-7476-463F-B46E-EB0BACA2E308@dscpl.com.au>



On 23/10/2005, at 9:09 AM, Ian Stokes-Rees wrote:

> OK, That looks like it is probably it (changing to just mod_python  
> and then importing pyexpat does cause the seg fault).
>
> The problem is that after upgrading the installed library to expat  
> 1.95.8 (same as Python -- see below), and restarting Apache, I  
> still get seg faults.
>
> Do I need to rebuild Apache, mod_python, or vampire?  I wouldn't  
> have thought so if they are dynamically linked...

Depending on how old the OS expat was, there is a chance that Apache
may been to be rebuilt but I also wouldn't have expected that it would
be needed. I don't believe that mod_python would need to be rebuilt and
Vampire is just pure Python code so nothing to rebuild there. I am
presuming that when you say it still crashes that that is only when
pyexpat is being imported???

Did you try an actual Apache "stop" and then "start", rather than a  
"restart".
There shouldn't be a different but one never knows? If possible can you
reboot the box in case some sort of strange caching is occurring?

Did you also confirm using "ldd" that the "httpd" Apache application  
is picking
up the one in /usr/lib that you replaced. I wouldn't have expected it on
Linux where libexpat is a standard library, but I know that on other  
systems
where expat isn't available, Apache will install its own version  
elsewhere.

A few other things I can suggest to try and debug things. First is,  
after
restarting Apache but before making a request against any mod_python
code, find the process ID of one of Apache process and run:

   /usr/sbin/lsof -p 3625 | grep expat

You will probably need to run this as root or yourself if you ran Apache
manually. This should yield something like:

   httpd   3625 root  mem    REG     253,0   123552    6409040 /usr/ 
lib/libexpat.so.0.5.0

and tells you exactly which libexpat shared library is being used in  
case
ldd actually lied for some reason. Obviously you want it to be using the
new library.

Without involving Apache at all, I think you can induce the same  
conditions
by forcing Python to load libexpat.so when it is run, this is done  
using the
LD_PRELOAD environment variable. I have set it here on the command line
the same time I ran Python.

   [grahamd@dscpl grahamd]$ LD_PRELOAD=/usr/lib/libexpat.so python
   Python 2.3.3 (#1, May  7 2004, 10:31:40)
   [GCC 3.3.3 20040412 (Red Hat Linux 3.3.3-7)] on linux2
   Type "help", "copyright", "credits" or "license" for more  
information.
   >>> import pyexpat
   >>> pyexpat.version_info
   (1, 95, 8)
   >>>

If there is still a problem, I would expect that loading of pyexpat  
would possibly
cause this to crash as well, but not totally sure. You can run "lsof"  
against this
Python process to confirm it did load libexpat.so.

Anyway, a few things for you to try. Let us know how you go.

Graham

> Python 2.4.1 (#1, Aug 31 2005, 15:59:42)
> [GCC 3.2.3 20030502 (Red Hat Linux 3.2.3-42)] on linux2
> Type "help", "copyright", "credits" or "license" for more information.
> >>> import pyexpat
> >>> pyexpat.version_info
> (1, 95, 8)
>
> [stokes@grid stokes]$ strings /usr/lib/libexpat* | grep expat_
> expat_external.h
> expat_1.95.8
> expat_1.95.8
> expat_1.95.8
> expat_1.95.5
> expat_1.95.8
>
> Graham Dumpleton wrote:
>
>> Vampire imports xmlrpclib, so you may be affected by the expat  
>> library
>> version mismatch problem. See:
>>   http://www.modpython.org/pipermail/mod_python/2005-October/ 
>> 019348.html
>> for some details. Use the prev/next links for that mailing list  
>> thread to
>> go back through the discussion to get the context.
>> Simplest way to check is to put PythonHandler back to "boo" and in
>> "boo.py" add:
>>   import xmlrpclib
>> If it crashes when access, it is the expat problem and nothing to  
>> do with
>> Vampire itself.
>> In short, upgrade expat to a newer version, or at least the same  
>> version
>> as embedded in Python. See mailing list discussion for how to find  
>> out.
>> Graham
>> On 22/10/2005, at 5:46 AM, Ian Stokes-Rees wrote:
>>
>>> Hi,
>>>
>>> I have Apache, Python, and mod_python setup as follows:
>>>
>>>  Apache/2.0.53 (Unix) mod_python/3.1.4 Python/2.4.1
>>>
>>> mod_python works fine, however when I try to use Vampire I get a  
>>> seg fault:
>>>
>>> [Fri Oct 21 20:31:38 2005] [notice] mod_python: (Re)importing  
>>> module 'vampire'
>>> [Fri Oct 21 20:31:39 2005] [notice] child pid 23753 exit signal  
>>> Segmentation fault (11)
>>>
>>> I can't figure out what the source of the seg fault is.  Vampire  
>>> is in the sys.path.  The only thing I change in the .htaccess is  
>>> "myprob" to "vampire" for the PythonHandler, and I don't touch  
>>> the actual file (resource).  Any thoughts on the source of this  
>>> would be greatly appreciated.  Below are my .htaccess file and  
>>> myprob.py.
>>>
>>> Ian.
>>>
>>> .htaccess:
>>> SetHandler mod_python
>>> PythonHandler vampire
>>> PythonDebug On
>>>
>>> myprob.py:
>>> from mod_python import apache
>>>
>>> def handler(req):
>>>     req.content_type = "text/plain"
>>>     req.write("boo")
>>>     return apache.OK
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>

From grahamd at dscpl.com.au  Sat Oct 22 19:47:36 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sat Oct 22 19:47:50 2005
Subject: [mod_python] import pyexpat coredumping, shared library problem
In-Reply-To: <435ACCA9.9040708@cute.fi>
References: <435ACCA9.9040708@cute.fi>
Message-ID: <A03EDA8B-A720-431E-A37A-10CD89EB7171@dscpl.com.au>


On 23/10/2005, at 9:35 AM, Jarkko Torppa wrote:

> I would think that this is pretty common, but quick search could  
> not find this problem documented enywhere. Similar problems are  
> documented in various places (mysql in FAQ).
>
> python has it's own libexpat, and apache has own or will use  
> installed if configure finds it. If they happen to be of a  
> different version this can cause interesting coredumps.
>
> This happened on solaris 8, python 2.4.2 and apache httpd-2.0.55

Except not always. I use Solaris systems where there are a number of
different combinations and it works okay. I have only ever heard of it
being a problem on Linux before.

> Fixed by installing systemwide expat and getting both python and  
> apache to use it.
>
> I think that this should be mentioned in FAQ or somewhere.

It is alluded to at the end of the MySQL FAQ entry:

   http://www.modpython.org/FAQ/faqw.py? 
query=expat&querytype=simple&casefold=yes&req=search

But yes, there is insufficient detail in the FAQ about it.

There have also has been numerous posts on the mailing list before  
which a
search of the mod_python web site will uncover. Some of the more recent
are getting quite detailed about what to look for and how to test for  
it. :-)

Hmmm, something else I should put in a mini article and then  
reference from a
FAQ entry.

Graham
From i.stokes-rees1 at physics.ox.ac.uk  Sun Oct 23 04:03:53 2005
From: i.stokes-rees1 at physics.ox.ac.uk (Ian Stokes-Rees)
Date: Sun Oct 23 04:04:14 2005
Subject: [mod_python] Segfault with Vampire
In-Reply-To: <948E5601-7476-463F-B46E-EB0BACA2E308@dscpl.com.au>
References: <43594593.4000309@physics.ox.ac.uk>
	<8F23640C-D91F-4E5A-8BAB-50C3D04F9503@dscpl.com.au>
	<435AC6A1.4010608@physics.ox.ac.uk>
	<948E5601-7476-463F-B46E-EB0BACA2E308@dscpl.com.au>
Message-ID: <435B43E9.1020303@physics.ox.ac.uk>

Hi,

Graham Dumpleton wrote:
> Depending on how old the OS expat was, there is a chance that Apache
> may been to be rebuilt but I also wouldn't have expected that it would

> Anyway, a few things for you to try. Let us know how you go.

A rebuild of apache 2.0.55 seems to have sorted it out.  Thanks for the 
help.  Glad to know I'm not the only person who was pulling my hair out 
regarding this.

Cheers,

Ian
From davidf at sjsoft.com  Mon Oct 24 02:37:03 2005
From: davidf at sjsoft.com (David Fraser)
Date: Mon Oct 24 02:37:22 2005
Subject: [mod_python] Re: error message when mutexes cannot be created
In-Reply-To: <200510231739.j9NHdHS0021987@xmta1.jpl.nasa.gov>
References: <200510231739.j9NHdHS0021987@xmta1.jpl.nasa.gov>
Message-ID: <435C810F.6090904@sjsoft.com>

Chris Mattmann wrote:

> Hi David,
>
> I stumbled upon your posting at: 
> http://www.modpython.org/pipermail/mod_python/2004-May/015613.html 
> regarding having trouble starting HTTPD with mod python and the mutexs 
> issue. You mentioned that you wrote a script that dealt with this. Did 
> this issue ever get resolved? I?m experiencing the same trouble now 
> myself. Can you help me out?
>
> Thanks,
>
> Chris
>
Hi Chris

Generally it is best to post questions like this to the mailing list, so 
I'm cc-ing that.
Here's the section of the script (in the service script, in the stop 
section, below the code that actually kills the proecss).
removeipcs=`ipcs -s -c | grep apache | cut -d ' ' -f 1`
numipcs=`echo $removeipcs | wc -w`
if [[ $numipcs != 0 ]]
then
echo
echo -n $"and removing $numipcs ipcs: "
echo $removeipcs | xargs -n 1 ipcrm -s
sleep 1
fi

On Linux 2.4 you need to do "ipcrm sem" instead of "ipcrm -s"

Hope that helps - it may be worthwhile discussing this further on the 
list anyway, to work out why this is happening...

Cheers
David
From skink at evhr.net  Mon Oct 24 18:20:24 2005
From: skink at evhr.net (Fabien Schwob)
Date: Mon Oct 24 18:20:30 2005
Subject: [mod_python] Automaticaly requesting "index.py/index"
Message-ID: <435D5E28.3040903@evhr.net>

Hello,

I'm currently trying to develop a website in python and I have a problem
to automatically request the "index.py/index" url.

I have a script called index.py at the url http://jibaku.net/beta/ and
when I type the previous url, I only get a "404 Not Found". I must
request http://jibaku.net/beta/index.py/index to get the correct page.
So, is there a solution to tell mod_python to automatically get :
     http://jibaku.net/beta/index.py/index
when I type
     http://jibaku.net/beta/

My configuration is an .htaccess in the beta/ folder and it contain :

AddHandler python-program .py
PythonHandler mod_python.publisher

Thanks in advance for your help.

-- 
Fabien


From grahamd at dscpl.com.au  Mon Oct 24 18:32:51 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 24 18:32:58 2005
Subject: [mod_python] Automaticaly requesting "index.py/index"
Message-ID: <1130193171.13476@dscpl.user.openhosting.com>

Fabien Schwob wrote ..
> Hello,
> 
> I'm currently trying to develop a website in python and I have a problem
> to automatically request the "index.py/index" url.
> 
> I have a script called index.py at the url http://jibaku.net/beta/ and
> when I type the previous url, I only get a "404 Not Found". I must
> request http://jibaku.net/beta/index.py/index to get the correct page.
> So, is there a solution to tell mod_python to automatically get :
>      http://jibaku.net/beta/index.py/index
> when I type
>      http://jibaku.net/beta/
> 
> My configuration is an .htaccess in the beta/ folder and it contain :
> 
> AddHandler python-program .py
> PythonHandler mod_python.publisher
> 
> Thanks in advance for your help.

Try:

  DirectoryIndex index.py

Otherwise it will only work when you are using the SetHandler
directive and not AddHandler. Using SetHandler will cause all
requests against the directory to be intercepted and handled
by mod_python.publisher, which may not be what you want.

Graham
From dave at davebritton.com  Mon Oct 24 18:56:21 2005
From: dave at davebritton.com (Dave Britton)
Date: Mon Oct 24 18:56:53 2005
Subject: [mod_python] Automaticaly requesting "index.py/index"
References: <1130193171.13476@dscpl.user.openhosting.com>
Message-ID: <01a101c5d8ee$27461e90$0500a8c0@brittonfamily.org>

You also need to be sure that your index.py progrm contains an index
function (that is, def index(req): ... etc)
----- Original Message ----- 
From: "Graham Dumpleton" <grahamd@dscpl.com.au>
To: "Fabien Schwob" <skink@evhr.net>
Cc: <mod_python@modpython.org>
Sent: Monday, October 24, 2005 6:32 PM
Subject: Re: [mod_python] Automaticaly requesting "index.py/index"


> Fabien Schwob wrote ..
> > Hello,
> >
> > I'm currently trying to develop a website in python and I have a problem
> > to automatically request the "index.py/index" url.
> >
> > I have a script called index.py at the url http://jibaku.net/beta/ and
> > when I type the previous url, I only get a "404 Not Found". I must
> > request http://jibaku.net/beta/index.py/index to get the correct page.
> > So, is there a solution to tell mod_python to automatically get :
> >      http://jibaku.net/beta/index.py/index
> > when I type
> >      http://jibaku.net/beta/
> >
> > My configuration is an .htaccess in the beta/ folder and it contain :
> >
> > AddHandler python-program .py
> > PythonHandler mod_python.publisher
> >
> > Thanks in advance for your help.
>
> Try:
>
>   DirectoryIndex index.py
>
> Otherwise it will only work when you are using the SetHandler
> directive and not AddHandler. Using SetHandler will cause all
> requests against the directory to be intercepted and handled
> by mod_python.publisher, which may not be what you want.
>
> Graham
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
>

From patrik at ucolick.org  Mon Oct 24 22:56:05 2005
From: patrik at ucolick.org (Patrik Jonsson)
Date: Mon Oct 24 22:56:05 2005
Subject: [mod_python] problem importing numarray
Message-ID: <435D9EC5.50809@ucolick.org>

hi,

I just started playing with mod_python and I have a problem importing
the numarray module. it works fine from the command line, but not when
executed through mod_python.  I have the Publisher handler and a very
basic script:

"
import numarray
"

This gives the following output:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib64/python2.4/site-packages/mod_python/publisher.py",
line 98, in handler
    path=[path])

  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/home/www/patrik/simulations/junk.py", line 1, in ?
    import numarray

  File "/usr/lib64/python2.4/site-packages/numarray/__init__.py", line
42, in ?
    from numarrayall import *

  File "/usr/lib64/python2.4/site-packages/numarray/numarrayall.py",
line 1, in ?
    from numerictypes import *

  File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
line 390, in ?
    from codegenerator.ufunccode import typecode

  File
"/usr/lib64/python2.4/site-packages/numarray/codegenerator/__init__.py",
line 1, in ?
    from basecode import all_types

  File
"/usr/lib64/python2.4/site-packages/numarray/codegenerator/basecode.py",
line 20, in ?
    if hasUInt64():

  File
"/usr/lib64/python2.4/site-packages/numarray/codegenerator/basecode.py",
line 11, in hasUInt64
    return "--hasUInt64" in sys.argv

AttributeError: 'module' object has no attribute 'argv'




This looks like sys.argv doesn't exist from within mod_python?  I agree
this information probably isn't useful in this context, but since all
documentation I've seen says that sys.argv is defined, it seems bad to
break existing software that relies on its existence. Shouldn't it just
be [''] like it is when you run the interpreter from the command line?

Incidentally, if I reload the page, I get instead:

Mod_python error: "PythonHandler mod_python.publisher"

Traceback (most recent call last):

  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
299, in HandlerDispatch
    result = object(req)

  File "/usr/lib64/python2.4/site-packages/mod_python/publisher.py",
line 98, in handler
    path=[path])

  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
457, in import_module
    module = imp.load_module(mname, f, p, d)

  File "/home/www/patrik/simulations/junk.py", line 1, in ?
    import numarray

  File "/usr/lib64/python2.4/site-packages/numarray/__init__.py", line
42, in ?
    from numarrayall import *

  File "/usr/lib64/python2.4/site-packages/numarray/numarrayall.py",
line 1, in ?
    from numerictypes import *

  File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
line 168, in ?
    Byte = _register("Byte",   Int8)

  File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
line 68, in _register
    raise ValueError("Type %s has already been registered" % name)

ValueError: Type Byte has already been registered



If anyone has any ideas on how to fix this, I'd much appreciate it!

Thanks,

/Patrik
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 254 bytes
Desc: OpenPGP digital signature
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051024/741fa53f/signature.bin
From grahamd at dscpl.com.au  Mon Oct 24 23:27:46 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Mon Oct 24 23:27:50 2005
Subject: [mod_python] problem importing numarray
Message-ID: <1130210866.31463@dscpl.user.openhosting.com>

The sys.argv array isn't usually available when Python interpreters are
being embedded into a C/C++ program as is the case with mod_python.

I would suggest it is bad for a package to always assume that it will only
ever be used from standard "python" program exclusively.

A quick hack you can use to get around the problem is:

  import sys
  sys.argv = [ "mod_python" ]
  import numarray

This issue with sys.argv has come up before recently. Was thinking at
the time whether mod_python when initialised should setup a bodgy
sys.argv to avoid these problems.

Graham

Patrik Jonsson wrote ..
> hi,
> 
> I just started playing with mod_python and I have a problem importing
> the numarray module. it works fine from the command line, but not when
> executed through mod_python.  I have the Publisher handler and a very
> basic script:
> 
> "
> import numarray
> "
> 
> This gives the following output:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib64/python2.4/site-packages/mod_python/publisher.py",
> line 98, in handler
>     path=[path])
> 
>   File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
> 457, in import_module
>     module = imp.load_module(mname, f, p, d)
> 
>   File "/home/www/patrik/simulations/junk.py", line 1, in ?
>     import numarray
> 
>   File "/usr/lib64/python2.4/site-packages/numarray/__init__.py", line
> 42, in ?
>     from numarrayall import *
> 
>   File "/usr/lib64/python2.4/site-packages/numarray/numarrayall.py",
> line 1, in ?
>     from numerictypes import *
> 
>   File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
> line 390, in ?
>     from codegenerator.ufunccode import typecode
> 
>   File
> "/usr/lib64/python2.4/site-packages/numarray/codegenerator/__init__.py",
> line 1, in ?
>     from basecode import all_types
> 
>   File
> "/usr/lib64/python2.4/site-packages/numarray/codegenerator/basecode.py",
> line 20, in ?
>     if hasUInt64():
> 
>   File
> "/usr/lib64/python2.4/site-packages/numarray/codegenerator/basecode.py",
> line 11, in hasUInt64
>     return "--hasUInt64" in sys.argv
> 
> AttributeError: 'module' object has no attribute 'argv'
> 
> 
> 
> 
> This looks like sys.argv doesn't exist from within mod_python?  I agree
> this information probably isn't useful in this context, but since all
> documentation I've seen says that sys.argv is defined, it seems bad to
> break existing software that relies on its existence. Shouldn't it just
> be [''] like it is when you run the interpreter from the command line?
> 
> Incidentally, if I reload the page, I get instead:
> 
> Mod_python error: "PythonHandler mod_python.publisher"
> 
> Traceback (most recent call last):
> 
>   File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
> 299, in HandlerDispatch
>     result = object(req)
> 
>   File "/usr/lib64/python2.4/site-packages/mod_python/publisher.py",
> line 98, in handler
>     path=[path])
> 
>   File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
> 457, in import_module
>     module = imp.load_module(mname, f, p, d)
> 
>   File "/home/www/patrik/simulations/junk.py", line 1, in ?
>     import numarray
> 
>   File "/usr/lib64/python2.4/site-packages/numarray/__init__.py", line
> 42, in ?
>     from numarrayall import *
> 
>   File "/usr/lib64/python2.4/site-packages/numarray/numarrayall.py",
> line 1, in ?
>     from numerictypes import *
> 
>   File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
> line 168, in ?
>     Byte = _register("Byte",   Int8)
> 
>   File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
> line 68, in _register
>     raise ValueError("Type %s has already been registered" % name)
> 
> ValueError: Type Byte has already been registered
> 
> 
> 
> If anyone has any ideas on how to fix this, I'd much appreciate it!
> 
> Thanks,
> 
> /Patrik
From charlie.knudsen at gmail.com  Tue Oct 25 01:32:18 2005
From: charlie.knudsen at gmail.com (Charlie Knudsen)
Date: Tue Oct 25 01:32:27 2005
Subject: [mod_python] Automaticaly requesting "index.py/index"
In-Reply-To: <435D5E28.3040903@evhr.net>
References: <435D5E28.3040903@evhr.net>
Message-ID: <435DC362.90201@gmail.com>

 From looking at the headers returned by the below links it looks like 
you have mod python 2.7.11 installed.  The 2.x series of mod python does 
not call the index function by default like the 3.x series.  However 
this would not be that difficult to add if you wanted to. You could 
download the publisher handler code for the 3.x series for an example of 
how this would be accomplished.  However adding the session management 
and the PSP functionality will be a bit more work.

I am not the foremost mod_python expert, but I ran into this problem a 
while ago and this is what I found.  You will notice that there is not 
much movement for the 2.x version of mod_python any more.  If you want 
to develop with mod_python and have Apache2 available I would switch to 
the 3.x code.

Hope that helps,

Charlie

Fabien Schwob wrote:

> Hello,
>
> I'm currently trying to develop a website in python and I have a problem
> to automatically request the "index.py/index" url.
>
> I have a script called index.py at the url http://jibaku.net/beta/ and
> when I type the previous url, I only get a "404 Not Found". I must
> request http://jibaku.net/beta/index.py/index to get the correct page.
> So, is there a solution to tell mod_python to automatically get :
>     http://jibaku.net/beta/index.py/index
> when I type
>     http://jibaku.net/beta/
>
> My configuration is an .htaccess in the beta/ folder and it contain :
>
> AddHandler python-program .py
> PythonHandler mod_python.publisher
>
> Thanks in advance for your help.
>

From nlv11281 at natlab.research.philips.com  Tue Oct 25 05:00:13 2005
From: nlv11281 at natlab.research.philips.com (Mike Looijmans)
Date: Tue Oct 25 05:00:28 2005
Subject: [mod_python] file upload very slow in fieldStorage
Message-ID: <435DF41D.60405@natlab.research.philips.com>

I was looking at Barry's fix in util.py, but I had already done some 
work into the same direction, in order to upload huge files (to a TAPE 
streamer, go figure...).

http://www.modpython.org/pipermail/mod_python/2005-March/017773.html

My idea is that the "read_to_boundary" function is unnessary complex. 
the following code does basically the same thing, but it skips a lot of 
memcpy calls (based on the 3.1.4 code but should work for 3.2.x too):

     def read_to_boundary(self, req, boundary, file):
         delim = ""
         line = req.readline(10240)
         while line and not line.startswith(boundary):
             odelim = delim
             if line[-2:] == "\r\n":
                 delim = "\r\n"
                 line = line[:-2]
             elif line[-1:] == "\n":
                 delim = "\n"
                 line = line[:-1]
             else:
                 delim = ""
             file.write(odelim + line)
             line = req.readline(10240)

Consider:
- If the last char is a #13 (\r) then it's just sent to the file. The 
next readline will return the \n by itself. Since most callback handlers 
will just write to a disk file, they don't care about line ends anyway. 
They must be prepared to receive partial lines anyway.

- line.startswith(boundary)
Now you may argue that it is only a boundary if it appears on a line by 
itself. Well, I say, the odds that your file contains a boundary string 
followed by a newline are not _significantly_ smaller than without that 
one character.

I tested this implementation with various binary (100MB), DOS and UNIX 
text files, without problems. The uploaded files were bitwise equal.

I also implemented the callback by allowing subclasses to override 
make_file. That should go into another thread, I guess.

-- 
Mike Looijmans
Philips Natlab / Topic Automation

From jg.lists at sympatico.ca  Tue Oct 25 08:38:34 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Oct 25 08:38:40 2005
Subject: [mod_python] file upload very slow in fieldStorage
In-Reply-To: <435DF41D.60405@natlab.research.philips.com>
References: <435DF41D.60405@natlab.research.philips.com>
Message-ID: <435E274A.4020201@sympatico.ca>

Hi Mike,

I believe this has been fixed in 3.2. See
http://issues.apache.org/jira/browse/MODPYTHON-40

Jim


Mike Looijmans wrote:
> I was looking at Barry's fix in util.py, but I had already done some 
> work into the same direction, in order to upload huge files (to a TAPE 
> streamer, go figure...).
> 
> http://www.modpython.org/pipermail/mod_python/2005-March/017773.html
> 
> My idea is that the "read_to_boundary" function is unnessary complex. 
> the following code does basically the same thing, but it skips a lot of 
> memcpy calls (based on the 3.1.4 code but should work for 3.2.x too):
> 
>     def read_to_boundary(self, req, boundary, file):
>         delim = ""
>         line = req.readline(10240)
>         while line and not line.startswith(boundary):
>             odelim = delim
>             if line[-2:] == "\r\n":
>                 delim = "\r\n"
>                 line = line[:-2]
>             elif line[-1:] == "\n":
>                 delim = "\n"
>                 line = line[:-1]
>             else:
>                 delim = ""
>             file.write(odelim + line)
>             line = req.readline(10240)
> 
> Consider:
> - If the last char is a #13 (\r) then it's just sent to the file. The 
> next readline will return the \n by itself. Since most callback handlers 
> will just write to a disk file, they don't care about line ends anyway. 
> They must be prepared to receive partial lines anyway.
> 
> - line.startswith(boundary)
> Now you may argue that it is only a boundary if it appears on a line by 
> itself. Well, I say, the odds that your file contains a boundary string 
> followed by a newline are not _significantly_ smaller than without that 
> one character.
> 
> I tested this implementation with various binary (100MB), DOS and UNIX 
> text files, without problems. The uploaded files were bitwise equal.
> 
> I also implemented the callback by allowing subclasses to override 
> make_file. That should go into another thread, I guess.
> 


From jg.lists at sympatico.ca  Tue Oct 25 08:47:23 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Tue Oct 25 08:47:25 2005
Subject: [mod_python] file upload very slow in fieldStorage
In-Reply-To: <435E274A.4020201@sympatico.ca>
References: <435DF41D.60405@natlab.research.philips.com>
	<435E274A.4020201@sympatico.ca>
Message-ID: <435E295B.7050700@sympatico.ca>

Hi Mike,

Sorry for the previous reply. I'm kinda brain-dead this morning. You are 
obviously aware of MODPYTHON-40 since you cite the an email which 
mentions it.

Jim

Jim Gallacher wrote:
> Hi Mike,
> 
> I believe this has been fixed in 3.2. See
> http://issues.apache.org/jira/browse/MODPYTHON-40
> 
> Jim
> 
> 
> Mike Looijmans wrote:
> 
>> I was looking at Barry's fix in util.py, but I had already done some 
>> work into the same direction, in order to upload huge files (to a TAPE 
>> streamer, go figure...).
>>
>> http://www.modpython.org/pipermail/mod_python/2005-March/017773.html
>>
>> My idea is that the "read_to_boundary" function is unnessary complex. 
>> the following code does basically the same thing, but it skips a lot 
>> of memcpy calls (based on the 3.1.4 code but should work for 3.2.x too):
>>
>>     def read_to_boundary(self, req, boundary, file):
>>         delim = ""
>>         line = req.readline(10240)
>>         while line and not line.startswith(boundary):
>>             odelim = delim
>>             if line[-2:] == "\r\n":
>>                 delim = "\r\n"
>>                 line = line[:-2]
>>             elif line[-1:] == "\n":
>>                 delim = "\n"
>>                 line = line[:-1]
>>             else:
>>                 delim = ""
>>             file.write(odelim + line)
>>             line = req.readline(10240)
>>
>> Consider:
>> - If the last char is a #13 (\r) then it's just sent to the file. The 
>> next readline will return the \n by itself. Since most callback 
>> handlers will just write to a disk file, they don't care about line 
>> ends anyway. They must be prepared to receive partial lines anyway.
>>
>> - line.startswith(boundary)
>> Now you may argue that it is only a boundary if it appears on a line 
>> by itself. Well, I say, the odds that your file contains a boundary 
>> string followed by a newline are not _significantly_ smaller than 
>> without that one character.
>>
>> I tested this implementation with various binary (100MB), DOS and UNIX 
>> text files, without problems. The uploaded files were bitwise equal.
>>
>> I also implemented the callback by allowing subclasses to override 
>> make_file. That should go into another thread, I guess.
>>
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From nick at dd.revealed.net  Tue Oct 25 09:56:32 2005
From: nick at dd.revealed.net (Nick)
Date: Tue Oct 25 09:56:39 2005
Subject: [mod_python] problem importing numarray
In-Reply-To: <1130210866.31463@dscpl.user.openhosting.com>
References: <1130210866.31463@dscpl.user.openhosting.com>
Message-ID: <435E3990.20604@dd.revealed.net>

I wonder what mod_perl does in this case.  Perhaps argv should contain the 
command line that launched the first apache process?

Nick

Graham Dumpleton wrote:
> The sys.argv array isn't usually available when Python interpreters are
> being embedded into a C/C++ program as is the case with mod_python.
> 
> I would suggest it is bad for a package to always assume that it will only
> ever be used from standard "python" program exclusively.
> 
> A quick hack you can use to get around the problem is:
> 
>   import sys
>   sys.argv = [ "mod_python" ]
>   import numarray
> 
> This issue with sys.argv has come up before recently. Was thinking at
> the time whether mod_python when initialised should setup a bodgy
> sys.argv to avoid these problems.
> 
> Graham
> 
> Patrik Jonsson wrote ..
> 
>>hi,
>>
>>I just started playing with mod_python and I have a problem importing
>>the numarray module. it works fine from the command line, but not when
>>executed through mod_python.  I have the Publisher handler and a very
>>basic script:
>>
>>"
>>import numarray
>>"
>>
>>This gives the following output:
>>
>>Mod_python error: "PythonHandler mod_python.publisher"
>>
>>Traceback (most recent call last):
>>
>>  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
>>299, in HandlerDispatch
>>    result = object(req)
>>
>>  File "/usr/lib64/python2.4/site-packages/mod_python/publisher.py",
>>line 98, in handler
>>    path=[path])
>>
>>  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
>>457, in import_module
>>    module = imp.load_module(mname, f, p, d)
>>
>>  File "/home/www/patrik/simulations/junk.py", line 1, in ?
>>    import numarray
>>
>>  File "/usr/lib64/python2.4/site-packages/numarray/__init__.py", line
>>42, in ?
>>    from numarrayall import *
>>
>>  File "/usr/lib64/python2.4/site-packages/numarray/numarrayall.py",
>>line 1, in ?
>>    from numerictypes import *
>>
>>  File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
>>line 390, in ?
>>    from codegenerator.ufunccode import typecode
>>
>>  File
>>"/usr/lib64/python2.4/site-packages/numarray/codegenerator/__init__.py",
>>line 1, in ?
>>    from basecode import all_types
>>
>>  File
>>"/usr/lib64/python2.4/site-packages/numarray/codegenerator/basecode.py",
>>line 20, in ?
>>    if hasUInt64():
>>
>>  File
>>"/usr/lib64/python2.4/site-packages/numarray/codegenerator/basecode.py",
>>line 11, in hasUInt64
>>    return "--hasUInt64" in sys.argv
>>
>>AttributeError: 'module' object has no attribute 'argv'
>>
>>
>>
>>
>>This looks like sys.argv doesn't exist from within mod_python?  I agree
>>this information probably isn't useful in this context, but since all
>>documentation I've seen says that sys.argv is defined, it seems bad to
>>break existing software that relies on its existence. Shouldn't it just
>>be [''] like it is when you run the interpreter from the command line?
>>
>>Incidentally, if I reload the page, I get instead:
>>
>>Mod_python error: "PythonHandler mod_python.publisher"
>>
>>Traceback (most recent call last):
>>
>>  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
>>299, in HandlerDispatch
>>    result = object(req)
>>
>>  File "/usr/lib64/python2.4/site-packages/mod_python/publisher.py",
>>line 98, in handler
>>    path=[path])
>>
>>  File "/usr/lib64/python2.4/site-packages/mod_python/apache.py", line
>>457, in import_module
>>    module = imp.load_module(mname, f, p, d)
>>
>>  File "/home/www/patrik/simulations/junk.py", line 1, in ?
>>    import numarray
>>
>>  File "/usr/lib64/python2.4/site-packages/numarray/__init__.py", line
>>42, in ?
>>    from numarrayall import *
>>
>>  File "/usr/lib64/python2.4/site-packages/numarray/numarrayall.py",
>>line 1, in ?
>>    from numerictypes import *
>>
>>  File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
>>line 168, in ?
>>    Byte = _register("Byte",   Int8)
>>
>>  File "/usr/lib64/python2.4/site-packages/numarray/numerictypes.py",
>>line 68, in _register
>>    raise ValueError("Type %s has already been registered" % name)
>>
>>ValueError: Type Byte has already been registered
>>
>>
>>
>>If anyone has any ideas on how to fix this, I'd much appreciate it!
>>
>>Thanks,
>>
>>/Patrik
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python

From mizsha at gmail.com  Tue Oct 25 10:02:19 2005
From: mizsha at gmail.com (Mizsha)
Date: Tue Oct 25 10:02:25 2005
Subject: [mod_python] Fwd: 406 Not Acceptable
In-Reply-To: <f2b1a5ff0510250342n4247c1d0o@mail.gmail.com>
References: <f2b1a5ff0510250342n4247c1d0o@mail.gmail.com>
Message-ID: <f2b1a5ff0510250702k4a2c5b3dt@mail.gmail.com>

HI,

I have problem with my mod_python scripts and publisher.
When i reinstals from Debian to Gentoo my scripts generate this error
message afret every seccond reqest from restart apache.
Apache: mpm-prefork

Apache/2.0.54 (Gentoo/Linux) mod_python/3.1.4 Python/2.4.2
mod_fastcgi/2.4.2 mod_ssl/2.0.54 OpenSSL/0.9.7e PHP/4.4.0-gentoo-r1

Error:
Not Acceptable

An appropriate representation of the requested resource
/newz2/gate/active could not be found on this server.
Available variants:

    * active.py , type text/x-python
    * active.pyo , type application/x-python-code

Config:

PythonOptimize On

SetHandler python-program
PythonPath "sys.path+['/hosting/xxxx/lib/python/']"
PythonHandler _nPublisher
PythonDebug On
PythonAutoReload On

Please, do you have any ideas to repair it ? Thanks.

/ Sorry for my bad english ;) /

From vmanera at manord.com  Tue Oct 25 10:04:32 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Tue Oct 25 10:04:26 2005
Subject: [mod_python] Too many cookies using mod_python 3.2.2b from
	mod_python-3.2.2b.win32-py2.4.exe
Message-ID: <BC53C974C3B9E542BC0A9BD4C5B1168A0B7657@NEWMAIL.manord.com>

In apache configuration --> PythonOption ApplicationPath '/'

Before the beta there was only a cookie: pysid with path = '/'

With the beta in place there are many pysid with different path,seems
one each module  I call, example:

Pysyd: e81c661b3c9d11948a3b643c4c031695855e254a61239279086ef1bb8916c10c
path:/
Pysid: 855e254a61239279086ef1bb8916c10c path:
/cgi-mpy/cgi_mpy_utentis.py/
Pysyd: 855e254a61239279086ef1bb8916c10c path: /cgi-mpy/cgi-mpy_menu.py/
Pysyd: 855e254a61239279086ef1bb8916c10c path: /comm/comm_menu.py/
Pysyd: 855e254a61239279086ef1bb8916c10c path: /pf/pf_magauto.py/
......

However seems works fine.

Some suggest?

Villiam


From i.stokes-rees1 at physics.ox.ac.uk  Tue Oct 25 11:59:51 2005
From: i.stokes-rees1 at physics.ox.ac.uk (Ian Stokes-Rees)
Date: Tue Oct 25 11:59:58 2005
Subject: [mod_python] Vampire and XML-RPC example service
Message-ID: <435E5677.7010200@physics.ox.ac.uk>

I have the xmlrpc_service.py example code running here:

http://grid.physics.ox.ac.uk/~stokes/devel/gridsched/xmlrpc/xmlrpc_service

All the methods work fine, but if I try to query an object member, then 
it is not available.  For example, the following works:

server.object1.method1()

however this does not:

server.string1

I have trouble seeing why this is. TIA for any suggestions.

Cheers,

Ian

-- 
Ian Stokes-Rees                 i.stokes-rees@physics.ox.ac.uk
Particle Physics, Oxford        http://www-pnp.physics.ox.ac.uk/~stokes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: i.stokes-rees1.vcf
Type: text/x-vcard
Size: 338 bytes
Desc: not available
Url : http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051025/3413cdbd/i.stokes-rees1.vcf
From administrator at leebrown.org  Tue Oct 25 12:52:35 2005
From: administrator at leebrown.org (Lee Brown)
Date: Tue Oct 25 12:52:55 2005
Subject: [mod_python] Mod Python Output Filter Behavior
Message-ID: <000e01c5d984$804fefc0$0301a8c0@uberbox>

Greetings!

I've been dorking around with writing a mod_python output filter and I have
a question:  In the documentation under Section 4.3, it says:

	"When writing filters, keep in mind that a filter will be called any
time anything upstream requests an IO operation, and
	the filter has no control over the amount of data passed through it
and no notion of where in the request processing it
	is called. For example, within a single request, a filter may be
called once or five times, and there is no way for the
	filter to know beforehand that the request is over and which of
calls is last or first for this request, thought encounter
	of an EOS (None returned from a read operation) is a fairly strong
indication of an end of a request."

The filter I'm working on performs xslt transformations, so it is important
that each entrance into the filter handler gets either the whole xml
document or a well-formed xml fragment.

As a test, I wrote the following filter:

	def outputfilter (filter):
	    filter.write('<p>entering filter</p>')
	    data = filter.read()
	    while data:
	        filter.write(data)
	        data = filter.read()
	    filter.write('<p>leaving filter</p>')
	    if data is None:
	        filter.write('<p>closing filter</p>')
	        filter.close()

Every page I've thrown at this begins with "entering filter" and ends with
"leaving filter" followed by "closing filter."  In other words, the entire
request was pushed through one call to the filter.

Under what circumstances would the comments in Section 4.3 about multiple
calls to the filter actually occur?  So far, I haven't been able to
stimulate that behavior.

Best Regards,
Lee E. Brown
(leebrown@leebrown.org)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051025/c2e67051/attachment.html
From grahamd at dscpl.com.au  Tue Oct 25 16:52:21 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 25 16:52:41 2005
Subject: [mod_python] Fwd: 406 Not Acceptable
In-Reply-To: <f2b1a5ff0510250702k4a2c5b3dt@mail.gmail.com>
References: <f2b1a5ff0510250342n4247c1d0o@mail.gmail.com>
	<f2b1a5ff0510250702k4a2c5b3dt@mail.gmail.com>
Message-ID: <510EBAB7-3180-423A-87E7-955B4E8F9CB3@dscpl.com.au>

Try adding:

   <Files *.pyo>
   deny from all
   </Files>

Or:

   Options -MultiViews

Doing the later has other implications though and if you can't
turn it off, you will probably need to start playing with weightings
for mime types/extension types.

Graham

On 26/10/2005, at 12:02 AM, Mizsha wrote:

> HI,
>
> I have problem with my mod_python scripts and publisher.
> When i reinstals from Debian to Gentoo my scripts generate this error
> message afret every seccond reqest from restart apache.
> Apache: mpm-prefork
>
> Apache/2.0.54 (Gentoo/Linux) mod_python/3.1.4 Python/2.4.2
> mod_fastcgi/2.4.2 mod_ssl/2.0.54 OpenSSL/0.9.7e PHP/4.4.0-gentoo-r1
>
> Error:
> Not Acceptable
>
> An appropriate representation of the requested resource
> /newz2/gate/active could not be found on this server.
> Available variants:
>
>     * active.py , type text/x-python
>     * active.pyo , type application/x-python-code
>
> Config:
>
> PythonOptimize On
>
> SetHandler python-program
> PythonPath "sys.path+['/hosting/xxxx/lib/python/']"
> PythonHandler _nPublisher
> PythonDebug On
> PythonAutoReload On
>
> Please, do you have any ideas to repair it ? Thanks.
>
> / Sorry for my bad english ;) /
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Tue Oct 25 16:55:01 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Tue Oct 25 16:55:13 2005
Subject: [mod_python] Vampire and XML-RPC example service
In-Reply-To: <435E5677.7010200@physics.ox.ac.uk>
References: <435E5677.7010200@physics.ox.ac.uk>
Message-ID: <FCFF6378-3DCE-4B6C-811F-32F643DAD1BC@dscpl.com.au>

XML-RPC by definition is a remote procedure calling mechanism.
A variable such as string is not a callable object. Ie., it doesn't work
like publisher does whereby variables are automatically converted
to strings are returned.

Graham

On 26/10/2005, at 1:59 AM, Ian Stokes-Rees wrote:

> I have the xmlrpc_service.py example code running here:
>
> http://grid.physics.ox.ac.uk/~stokes/devel/gridsched/xmlrpc/ 
> xmlrpc_service
>
> All the methods work fine, but if I try to query an object member,  
> then it is not available.  For example, the following works:
>
> server.object1.method1()
>
> however this does not:
>
> server.string1
>
> I have trouble seeing why this is. TIA for any suggestions.
>
> Cheers,
>
> Ian
>
> -- 
> Ian Stokes-Rees                 i.stokes-rees@physics.ox.ac.uk
> Particle Physics, Oxford        http://www-pnp.physics.ox.ac.uk/ 
> ~stokes
>
> <i.stokes-rees1.vcf>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From mizsha at gmail.com  Tue Oct 25 18:46:23 2005
From: mizsha at gmail.com (Mizsha)
Date: Tue Oct 25 18:46:28 2005
Subject: [mod_python] Fwd: 406 Not Acceptable
In-Reply-To: <510EBAB7-3180-423A-87E7-955B4E8F9CB3@dscpl.com.au>
References: <f2b1a5ff0510250342n4247c1d0o@mail.gmail.com>
	<f2b1a5ff0510250702k4a2c5b3dt@mail.gmail.com>
	<510EBAB7-3180-423A-87E7-955B4E8F9CB3@dscpl.com.au>
Message-ID: <f2b1a5ff0510251546y2204d5d5o@mail.gmail.com>

> Try adding:
>
>    <Files *.pyo>
>    deny from all
>    </Files>

Non working ;(

>
> Or:
>
>    Options -MultiViews
>

This is OK. Thank you very much ;o)

From python_it at hotmail.com  Wed Oct 26 11:36:44 2005
From: python_it at hotmail.com (WR -)
Date: Wed Oct 26 11:36:51 2005
Subject: [mod_python] onunload ie mod_python 
Message-ID: <BAY17-F26ACF931E33D38F35E020199690@phx.gbl>

Is it possible to call a pythonscript with javascript behaviors (onunload or 
onclose)?

After unload/close the ie windows, I want to drop a mysql table?

Suggestions please?

_________________________________________________________________
Typ je SMS sneller binnen MSN Messenger 
http://www1.imagine-msn.com/Messenger/Expressions.aspx

From nick at dd.revealed.net  Wed Oct 26 11:45:34 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Oct 26 11:45:50 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <BAY17-F26ACF931E33D38F35E020199690@phx.gbl>
References: <BAY17-F26ACF931E33D38F35E020199690@phx.gbl>
Message-ID: <435FA49E.9010900@dd.revealed.net>

xmlrpc/jsonrpc (http://jsoliat.net) to a python server.  Realizing that 
onunload/close is completely unreliable.

Nick

WR - wrote:
> Is it possible to call a pythonscript with javascript behaviors 
> (onunload or onclose)?
> 
> After unload/close the ie windows, I want to drop a mysql table?
> 
> Suggestions please?
> 
> _________________________________________________________________
> Typ je SMS sneller binnen MSN Messenger 
> http://www1.imagine-msn.com/Messenger/Expressions.aspx
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
From vmanera at manord.com  Wed Oct 26 11:48:43 2005
From: vmanera at manord.com (Manera, Villiam)
Date: Wed Oct 26 11:48:36 2005
Subject: [mod_python] I: Too many cookies using mod_python 3.2.2b from
	mod_python-3.2.2b.win32-py2.4.exe
Message-ID: <BC53C974C3B9E542BC0A9BD4C5B1168A0B765E@NEWMAIL.manord.com>

This for complete my previus message:
Without  2 lines added in the beta release I still have only 1 cookie as before.

class BaseSession(dict):
.........
        if self._sid:
            # attempt to load ourselves
            self.lock()
            if self.load():
                self._new = 0
                #if not req.headers_out.has_key("Set-Cookie"):
                #    Cookie.add_cookie(self._req, Cookie.Cookie(session_cookie_name, self._sid))


-----Messaggio originale-----
Da: Manera, Villiam 
Inviato: marted? 25 ottobre 2005 16.05
A: 'mod_python@modpython.org'
Oggetto: Too many cookies using mod_python 3.2.2b from mod_python-3.2.2b.win32-py2.4.exe


In apache configuration --> PythonOption ApplicationPath '/'

Before the beta there was only a cookie: pysid with path = '/'

With the beta in place there are many pysid with different path,seems one each module  I call, example:

Pysyd: e81c661b3c9d11948a3b643c4c031695855e254a61239279086ef1bb8916c10c path:/
Pysid: 855e254a61239279086ef1bb8916c10c path: /cgi-mpy/cgi_mpy_utentis.py/
Pysyd: 855e254a61239279086ef1bb8916c10c path: /cgi-mpy/cgi-mpy_menu.py/
Pysyd: 855e254a61239279086ef1bb8916c10c path: /comm/comm_menu.py/
Pysyd: 855e254a61239279086ef1bb8916c10c path: /pf/pf_magauto.py/ ......

However seems works fine.

Some suggest?

Villiam


From python_it at hotmail.com  Wed Oct 26 12:14:56 2005
From: python_it at hotmail.com (WR -)
Date: Wed Oct 26 12:15:02 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <435FA49E.9010900@dd.revealed.net>
Message-ID: <BAY17-F21B7BDA9DCCFEDD96E23F799690@phx.gbl>

I use apache/mod_python/mysql!! not soap
http://jsoliat.net ==> dead link

>From: Nick <nick@dd.revealed.net>
>To: WR - <python_it@hotmail.com>
>CC: mod_python@modpython.org
>Subject: Re: [mod_python] onunload ie mod_python
>Date: Wed, 26 Oct 2005 10:45:34 -0500
>
>xmlrpc/jsonrpc (http://jsoliat.net) to a python server.  Realizing that 
>onunload/close is completely unreliable.
>
>Nick
>
>WR - wrote:
>>Is it possible to call a pythonscript with javascript behaviors (onunload 
>>or onclose)?
>>
>>After unload/close the ie windows, I want to drop a mysql table?
>>
>>Suggestions please?
>>
>>_________________________________________________________________
>>Typ je SMS sneller binnen MSN Messenger 
>>http://www1.imagine-msn.com/Messenger/Expressions.aspx
>>
>>_______________________________________________
>>Mod_python mailing list
>>Mod_python@modpython.org
>>http://mailman.modpython.org/mailman/listinfo/mod_python

_________________________________________________________________
Speel online games via MSN Messenger 
http://www1.imagine-msn.com/Messenger/Default2.aspx

From nick at dd.revealed.net  Wed Oct 26 12:20:15 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Oct 26 12:20:23 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <BAY17-F21B7BDA9DCCFEDD96E23F799690@phx.gbl>
References: <BAY17-F21B7BDA9DCCFEDD96E23F799690@phx.gbl>
Message-ID: <435FACBF.3060103@dd.revealed.net>

I'm sorry, I typo'd that link... try http://jsolait.net/

If you have mod_python, there are lots of toolkits that let you very 
easily set up an xmlrpc server.  The Python implementation of json-rpc 
is very similar.

I never mentioned SOAP.  I don't know of any good JavaScript SOAP 
implementations, but the ZSI implementation in Python works with mod_python.

Nick

WR - wrote:
> I use apache/mod_python/mysql!! not soap
> http://jsoliat.net ==> dead link
> 
>> From: Nick <nick@dd.revealed.net>
>> To: WR - <python_it@hotmail.com>
>> CC: mod_python@modpython.org 
>> Subject: Re: [mod_python] onunload ie mod_python
>> Date: Wed, 26 Oct 2005 10:45:34 -0500
>>
>> xmlrpc/jsonrpc (http://jsoliat.net) to a python server.  Realizing 
>> that onunload/close is completely unreliable.
>>
>> Nick
>>
>> WR - wrote:
>>
>>> Is it possible to call a pythonscript with javascript behaviors 
>>> (onunload or onclose)?
>>>
>>> After unload/close the ie windows, I want to drop a mysql table?
>>>
>>> Suggestions please?
>>>
>>> _________________________________________________________________
>>> Typ je SMS sneller binnen MSN Messenger 
>>> http://www1.imagine-msn.com/Messenger/Expressions.aspx
>>>
>>> _______________________________________________
>>> Mod_python mailing list
>>> Mod_python@modpython.org
>>> http://mailman.modpython.org/mailman/listinfo/mod_python
> 
> 
> _________________________________________________________________
> Speel online games via MSN Messenger 
> http://www1.imagine-msn.com/Messenger/Default2.aspx
From jg.lists at sympatico.ca  Wed Oct 26 12:26:06 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Oct 26 12:25:53 2005
Subject: [mod_python] I: Too many cookies using mod_python 3.2.2b from
	mod_python-3.2.2b.win32-py2.4.exe
In-Reply-To: <BC53C974C3B9E542BC0A9BD4C5B1168A0B765E@NEWMAIL.manord.com>
References: <BC53C974C3B9E542BC0A9BD4C5B1168A0B765E@NEWMAIL.manord.com>
Message-ID: <435FAE1E.4020102@sympatico.ca>

How are you creating your session instances? A little snippet of your 
code would be helpful.

Thanks,
Jim

Manera, Villiam wrote:
> This for complete my previus message:
> Without  2 lines added in the beta release I still have only 1 cookie as before.
> 
> class BaseSession(dict):
> .........
>         if self._sid:
>             # attempt to load ourselves
>             self.lock()
>             if self.load():
>                 self._new = 0
>                 #if not req.headers_out.has_key("Set-Cookie"):
>                 #    Cookie.add_cookie(self._req, Cookie.Cookie(session_cookie_name, self._sid))
> 
> 
> -----Messaggio originale-----
> Da: Manera, Villiam 
> Inviato: marted? 25 ottobre 2005 16.05
> A: 'mod_python@modpython.org'
> Oggetto: Too many cookies using mod_python 3.2.2b from mod_python-3.2.2b.win32-py2.4.exe
> 
> 
> In apache configuration --> PythonOption ApplicationPath '/'
> 
> Before the beta there was only a cookie: pysid with path = '/'
> 
> With the beta in place there are many pysid with different path,seems one each module  I call, example:
> 
> Pysyd: e81c661b3c9d11948a3b643c4c031695855e254a61239279086ef1bb8916c10c path:/
> Pysid: 855e254a61239279086ef1bb8916c10c path: /cgi-mpy/cgi_mpy_utentis.py/
> Pysyd: 855e254a61239279086ef1bb8916c10c path: /cgi-mpy/cgi-mpy_menu.py/
> Pysyd: 855e254a61239279086ef1bb8916c10c path: /comm/comm_menu.py/
> Pysyd: 855e254a61239279086ef1bb8916c10c path: /pf/pf_magauto.py/ ......
> 
> However seems works fine.
> 
> Some suggest?
> 
> Villiam
> 
> 
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
> 

From python_it at hotmail.com  Wed Oct 26 15:58:02 2005
From: python_it at hotmail.com (WR -)
Date: Wed Oct 26 15:58:07 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <435FACBF.3060103@dd.revealed.net>
Message-ID: <BAY17-F143725195F93A8014D982B99690@phx.gbl>

xmlrpc is to many work for only drop a mysql table!
Reliable is not important for me!
Only that the drop statement works.
I use the serversript only by myself.
Maby i have to make a link in my onunload of onclose (behaviors)?
..../modules/drop.py?table=testtable
But I don't want to open a new ie window?

>From: Nick <nick@dd.revealed.net>
>To: WR - <python_it@hotmail.com>
>CC: mod_python@modpython.org
>Subject: Re: [mod_python] onunload ie mod_python
>Date: Wed, 26 Oct 2005 11:20:15 -0500
>
>I'm sorry, I typo'd that link... try http://jsolait.net/
>
>If you have mod_python, there are lots of toolkits that let you very easily 
>set up an xmlrpc server.  The Python implementation of json-rpc is very 
>similar.
>
>I never mentioned SOAP.  I don't know of any good JavaScript SOAP 
>implementations, but the ZSI implementation in Python works with 
>mod_python.
>
>Nick
>
>WR - wrote:
>>I use apache/mod_python/mysql!! not soap
>>http://jsoliat.net ==> dead link
>>
>>>From: Nick <nick@dd.revealed.net>
>>>To: WR - <python_it@hotmail.com>
>>>CC: mod_python@modpython.org Subject: Re: [mod_python] onunload ie 
>>>mod_python
>>>Date: Wed, 26 Oct 2005 10:45:34 -0500
>>>
>>>xmlrpc/jsonrpc (http://jsoliat.net) to a python server.  Realizing that 
>>>onunload/close is completely unreliable.
>>>
>>>Nick
>>>
>>>WR - wrote:
>>>
>>>>Is it possible to call a pythonscript with javascript behaviors 
>>>>(onunload or onclose)?
>>>>
>>>>After unload/close the ie windows, I want to drop a mysql table?
>>>>
>>>>Suggestions please?
>>>>
>>>>_________________________________________________________________
>>>>Typ je SMS sneller binnen MSN Messenger 
>>>>http://www1.imagine-msn.com/Messenger/Expressions.aspx
>>>>
>>>>_______________________________________________
>>>>Mod_python mailing list
>>>>Mod_python@modpython.org
>>>>http://mailman.modpython.org/mailman/listinfo/mod_python
>>
>>
>>_________________________________________________________________
>>Speel online games via MSN Messenger 
>>http://www1.imagine-msn.com/Messenger/Default2.aspx

_________________________________________________________________
Krijg direct antwoord op je vragen: MSN Messenger 
http://www1.imagine-msn.com/Messenger/Default2.aspx

From nick at dd.revealed.net  Wed Oct 26 16:31:57 2005
From: nick at dd.revealed.net (Nick)
Date: Wed Oct 26 16:32:06 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <BAY17-F143725195F93A8014D982B99690@phx.gbl>
References: <BAY17-F143725195F93A8014D982B99690@phx.gbl>
Message-ID: <435FE7BD.5020007@dd.revealed.net>

See also http://developer.apple.com/internet/webcontent/xmlhttpreq.html 
for another solution (there are many resources for this information, but 
I like that one best).

SimpleXMLRPCServer is a standard module in Python, and I don't think 
it's as complex as you might think, but the above solution might yield 
quicker results for you.

Nick

WR - wrote:
> xmlrpc is to many work for only drop a mysql table!
> Reliable is not important for me!
> Only that the drop statement works.
> I use the serversript only by myself.
> Maby i have to make a link in my onunload of onclose (behaviors)?
> ..../modules/drop.py?table=testtable
> But I don't want to open a new ie window?
> 
>> From: Nick <nick@dd.revealed.net>
>> To: WR - <python_it@hotmail.com>
>> CC: mod_python@modpython.org
>> Subject: Re: [mod_python] onunload ie mod_python
>> Date: Wed, 26 Oct 2005 11:20:15 -0500
>>
>> I'm sorry, I typo'd that link... try http://jsolait.net/
>>
>> If you have mod_python, there are lots of toolkits that let you very 
>> easily set up an xmlrpc server.  The Python implementation of json-rpc 
>> is very similar.
>>
>> I never mentioned SOAP.  I don't know of any good JavaScript SOAP 
>> implementations, but the ZSI implementation in Python works with 
>> mod_python.
>>
>> Nick
>>
>> WR - wrote:
>>
>>> I use apache/mod_python/mysql!! not soap
>>> http://jsoliat.net ==> dead link
>>>
>>>> From: Nick <nick@dd.revealed.net>
>>>> To: WR - <python_it@hotmail.com>
>>>> CC: mod_python@modpython.org Subject: Re: [mod_python] onunload ie 
>>>> mod_python
>>>> Date: Wed, 26 Oct 2005 10:45:34 -0500
>>>>
>>>> xmlrpc/jsonrpc (http://jsoliat.net) to a python server.  Realizing 
>>>> that onunload/close is completely unreliable.
>>>>
>>>> Nick
>>>>
>>>> WR - wrote:
>>>>
>>>>> Is it possible to call a pythonscript with javascript behaviors 
>>>>> (onunload or onclose)?
>>>>>
>>>>> After unload/close the ie windows, I want to drop a mysql table?
>>>>>
>>>>> Suggestions please?
>>>>>
>>>>> _________________________________________________________________
>>>>> Typ je SMS sneller binnen MSN Messenger 
>>>>> http://www1.imagine-msn.com/Messenger/Expressions.aspx
>>>>>
>>>>> _______________________________________________
>>>>> Mod_python mailing list
>>>>> Mod_python@modpython.org
>>>>> http://mailman.modpython.org/mailman/listinfo/mod_python
>>>
>>>
>>>
>>> _________________________________________________________________
>>> Speel online games via MSN Messenger 
>>> http://www1.imagine-msn.com/Messenger/Default2.aspx
> 
> 
> _________________________________________________________________
> Krijg direct antwoord op je vragen: MSN Messenger 
> http://www1.imagine-msn.com/Messenger/Default2.aspx
From jg.lists at sympatico.ca  Wed Oct 26 17:22:48 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Wed Oct 26 17:21:23 2005
Subject: [mod_python] I: Too many cookies using mod_python 3.2.2b from
	mod_python-3.2.2b.win32-py2.4.exe
In-Reply-To: <BC53C974C3B9E542BC0A9BD4C5B1168A0B765E@NEWMAIL.manord.com>
References: <BC53C974C3B9E542BC0A9BD4C5B1168A0B765E@NEWMAIL.manord.com>
Message-ID: <435FF3A8.8010605@sympatico.ca>

Manera, Villiam wrote:
> This for complete my previus message:
> Without  2 lines added in the beta release I still have only 1 cookie as before.
> 
> class BaseSession(dict):
> .........
>         if self._sid:
>             # attempt to load ourselves
>             self.lock()
>             if self.load():
>                 self._new = 0
>                 #if not req.headers_out.has_key("Set-Cookie"):
>                 #    Cookie.add_cookie(self._req, Cookie.Cookie(session_cookie_name, self._sid))
> 


OK, here is the story.

The two lines you've commented out were added to 3.2 to support some new 
session handling functionality. For various reasons that new 
functionality has been deferred until 3.3, but the new code was not 
removed. That should not be a problem, except that it is both buggy and 
wrong. :-(

It should look more like:

          if self._sid:
              # attempt to load ourselves
              self.lock()
              if self.load():
                  self._new = 0
                  # set a cookie if the source of self._sid was not a
                  # a cookie
                  if not cookies.has_key(session_cookie_name): 

                      Cookie.add_cookie(self._req, self.make_cookie())

self.make_cookie() takes care of your ApplicationPath problem. For the 
time being however, your solution (removing those 2 lines altogether) is 
the correct one.

This will be fixed for the 3.2 final release.

Regards,
Jim
From daniel.graham at duke.edu  Wed Oct 26 18:08:28 2005
From: daniel.graham at duke.edu (Daniel A Graham)
Date: Wed Oct 26 18:08:34 2005
Subject: [mod_python] mpservlets, hypertext and mathml 
Message-ID: <50063.71.111.220.9.1130364508.squirrel@bastiat.econ.duke.edu>

Greetings,

I'm a big fan of mpservlets and have recently been involved in an effort
to incorporate mathml support into HyperText via itex2mml.  To do this I
added the following to _HTML.py variant of HyperText used in the
mpservlets tutorial:

---------------------------------------
# expand_codes taken from mpservlets _TutorialBase.py with one modification
def expand_codes(s):

    '''Expand codes in string to HTML elements.

    For any text of the form X{text}, replace it with
    <ELEMENT>text</ELEMENT>, where X and related elements are::

      C  <CODE>...</CODE>
      E  <EM>...</EM>
      S  <STRONG>...</STRONG>

    or A{TEXT<URL>} will generate: <A HREF="URL">TEXT</A>

    Inspired by epytext.  This simple version, however, does not
    allow embedding codes within each other.  :-(
    '''

    import re

    # so we can pass in non-string objects
    s = str(s)

    # iterate over our codes
    for code, elem in (('C', 'code'),
                       ('E', 'em'),
                       ('S', 'strong')):

        s = re.sub(r'%s{(.*?)}' % code,
                   r'<%s>\1</%s>' % (elem, elem),
                   s)

    s = re.sub(r'A{(.*?)<(.*?)>}',
               r'<a href="\2">\1</a>',
               s)

    # new support for inline math
    mre = re.compile(r'M{(.*)}')
    s = mre.sub(inline_math, s)

    return s

# called above to replace the itex math string with mathml
def inline_math(reo):
    from os import popen2
    s = reo.group(1)
    cmd = 'itex2mml --inline'
    (si, so) = popen2(cmd)
    si.write(s)
    si.close()
    s = so.read()
    so.close()
    return s

# used for display mathml
def M(s):
    from os import popen2
    cmd = 'itex2mml --display'
    (si, so) = popen2(cmd)
    si.write(s)
    si.close()
    s = so.read()
    so.close()
    return s
--------------------------------------------------

Now both
    expand_codes(P('''Here is some in-line math M{(x-y)^2}''')
and
    M('''F(b)-F(a) \equiv \int_a^b f(x) dx''')
work as expected.  Too cool!

One unexpected side effect (to me at least) is that the doctype needed
for mathml:

    DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0

causes all the upper case tags generated by HyperText to be ignored. 
This too, was easily fixed by adding '.lower()' to the occurances of
'self.name'.  This means that P('...') will now generate '<p>...</p>'.

Best wishes,
Dan Graham
daniel.graham@duke.edu

From hockeysk8 at gmail.com  Thu Oct 27 02:27:59 2005
From: hockeysk8 at gmail.com (Kevin J. Smith)
Date: Thu Oct 27 02:28:04 2005
Subject: [mod_python] strange import behaviour out of the blue
Message-ID: <1ee0630e0510262327u47ef419di3e125dab67f1ee5c@mail.gmail.com>

Hi,

I have been running an app under mod_python for quite some time. In one bit
of the code I do an import of mx.DateTime like so:

from mx.DateTime import *

and I later make a call to the function localtime(). I did a restart on the
server a week or so ago and now I am getting an exception being thrown
saying that localtime doesn't exist! I have tried importing differently,
directly, calling it directly like mx.DateTime.localtime() but all are
unsuccessful. I have logged a call to mx.DateTime.__path__ with the
following result:

2005-10-27 02:04:14,347 Domain -1208703296 DEBUG here is the datetime path:
['/usr/lib/python2.3/site-packages/mx/DateTime']

It looks like it is getting the right module, but logging a call to dir(
mx.DateTime) yields this:

2005-10-27 02:04:14,347 Domain -1208703296 DEBUG here is datetime funcs:
['DateTime', '__builtins__', '__doc__', '__file__', '__name__'
, '__path__', 'mxDateTime']

Where did all the stuff go?!?

If I go on the command line and do the same I get the same path but the
following for the dir():

['ARPA', 'Age', 'April', 'August', 'Date', 'DateFrom', ... AND MANY, MANY
OTHERS ... 'localtime', 'mktime', 'mxDateTime', 'mxDateTimeAPI', 'now', ...
etc. etc. ]

Why is mod_python all of a sudden failing to import the module correctly? I
am really, really stumped because I have been using this app for close to
two years and have never ran into this problem.

I would be greatful for any insight that anyone can provide as to what is
going on!

Cheers
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051026/75736def/attachment.html
From grahamd at dscpl.com.au  Thu Oct 27 03:01:24 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 03:01:30 2005
Subject: [mod_python] strange import behaviour out of the blue
Message-ID: <1130396484.26657@dscpl.user.openhosting.com>

What version of mod_python are you using? You didn't by chance upgrade
your mod_python version lately, for example to 3.2 beta?

Also, are you using mod_python.publisher or are you using your own top
level handler? Are you using module reloading on the module the import
occurs in? This could be explicitly using apache.import_module() or by
virtue of PythonAutoReload defaulting to On or being set explicitly On.

There are a lot of known issues with module loading/reloading in
mod_python. Version 3.2 starts to remedy some of these issues, but
even so those changes are really an interim fix until 3.3 tries to fix
all problems properly in some way.

For some background reading you might check out:

  http://www.dscpl.com.au/articles/modpython-003.html

Graham

Kevin J. Smith wrote ..
> Hi,
> 
> I have been running an app under mod_python for quite some time. In one
> bit
> of the code I do an import of mx.DateTime like so:
> 
> from mx.DateTime import *
> 
> and I later make a call to the function localtime(). I did a restart on
> the
> server a week or so ago and now I am getting an exception being thrown
> saying that localtime doesn't exist! I have tried importing differently,
> directly, calling it directly like mx.DateTime.localtime() but all are
> unsuccessful. I have logged a call to mx.DateTime.__path__ with the
> following result:
> 
> 2005-10-27 02:04:14,347 Domain -1208703296 DEBUG here is the datetime path:
> ['/usr/lib/python2.3/site-packages/mx/DateTime']
> 
> It looks like it is getting the right module, but logging a call to dir(
> mx.DateTime) yields this:
> 
> 2005-10-27 02:04:14,347 Domain -1208703296 DEBUG here is datetime funcs:
> ['DateTime', '__builtins__', '__doc__', '__file__', '__name__'
> , '__path__', 'mxDateTime']
> 
> Where did all the stuff go?!?
> 
> If I go on the command line and do the same I get the same path but the
> following for the dir():
> 
> ['ARPA', 'Age', 'April', 'August', 'Date', 'DateFrom', ... AND MANY, MANY
> OTHERS ... 'localtime', 'mktime', 'mxDateTime', 'mxDateTimeAPI', 'now',
> ...
> etc. etc. ]
> 
> Why is mod_python all of a sudden failing to import the module correctly?
> I
> am really, really stumped because I have been using this app for close
> to
> two years and have never ran into this problem.
> 
> I would be greatful for any insight that anyone can provide as to what
> is
> going on!
> 
> Cheers
From grahamd at dscpl.com.au  Thu Oct 27 05:34:19 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 05:34:30 2005
Subject: [mod_python] Vampire and XML-RPC example service
In-Reply-To: <435FA128.3000202@physics.ox.ac.uk>
References: <435E5677.7010200@physics.ox.ac.uk>
	<FCFF6378-3DCE-4B6C-811F-32F643DAD1BC@dscpl.com.au>
	<435FA128.3000202@physics.ox.ac.uk>
Message-ID: <f9b1838f4728baa73b45506202c8dcfd@dscpl.com.au>


On 27/10/2005, at 1:30 AM, Ian Stokes-Rees wrote:

> Graham Dumpleton wrote:
>> XML-RPC by definition is a remote procedure calling mechanism.
>> A variable such as string is not a callable object. Ie., it doesn't 
>> work
>> like publisher does whereby variables are automatically converted
>> to strings are returned.
>
> That makes perfect sense, I was just wondering if Vampire did 
> something automagically (I suppose xmlrpclib on the client side would 
> have to reciprocate).  I only was trying it out since the variables 
> were contained in the example object in xmlrpc_service.py, so I was 
> wondering if that implied they were accessible over XML-RPC.

The variables were probably there and not explicitly hidden using an
underscore prefix either to test that they couldn't be accessed, or
also possibly when I was trying out the idea of them being accessible.

What I experimented with was the idea that if one made a function
call on client side where the target turned out to be a variable that
the actual variable was returned. Ie., much like mod_python.publisher
except the actual value was returned and not a string representation
of it.

I decided not to allow it as I felt it was too automagic. You also
ended up with difficult decisions as to what is the appropriate
thing to do if the target is a generator or a class instance without
an explicit __call__() method, but it has a __str__() method. Overall,
I felt it much more sense that if someone wanted to expose a variable
that they make an accessor function for it. That way you aren't second
guessing what may be required and presenting a solution that be hard
for a user to override.

Graham

From grahamd at dscpl.com.au  Thu Oct 27 06:03:12 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 06:03:40 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <435FE7BD.5020007@dd.revealed.net>
References: <BAY17-F143725195F93A8014D982B99690@phx.gbl>
	<435FE7BD.5020007@dd.revealed.net>
Message-ID: <00c3c7818e294bdf43633607aa2eafc9@dscpl.com.au>


On 27/10/2005, at 6:31 AM, Nick wrote:

> See also  
> http://developer.apple.com/internet/webcontent/xmlhttpreq.html for  
> another solution (there are many resources for this information, but I  
> like that one best).
>
> SimpleXMLRPCServer is a standard module in Python, and I don't think  
> it's as complex as you might think, but the above solution might yield  
> quicker results for you.

As far as integrating XML-RPC into mod_python, you are possibly better
of using the xmlrpclib.dumps() and xmlrpclib.loads() functions directly.
 From memory this gives better control over handling errors. At least
I know I had a good reason at the time which I can't think of right now.
Possibly because overriding SimpleXmlRpcServer didn't provide a good
way of returning a 404 when function didn't exist.

For an example of using xmlrpclib module direct, see serviceRequest()
function in code file at:

   http://svn.dscpl.com.au/vampire/trunk/software/vampire/xmlrpc.py

This is brief, but leaves dispatch to a particular function up to
a callback. Mapping partial URLs below a specific point in URL
hierarchy is a bit more tricky to get right correctly, especially
avoiding exposing Python internals that should be hidden.

The XML-RPC service wrapper object provides a simple way of doing
this, eg:

    
http://www.dscpl.com.au/projects/vampire/articles/vampire 
-001.html#implementing-web-services

Where mod_python is a bit of a pain is that a lot of people use
mod_python.publisher and integrating an XML-RPC service against a
specific published resource when using mod_python.publisher can't
be done due to a limitation in mod_python.publisher. See:

   http://issues.apache.org/jira/browse/MODPYTHON-29

In the Vampire version of publisher where this problem is fixed, one
can use the vampire.Service() wrapper in conjunction with published
functions. For example, you might have a published module with:

   class _Object:

     def method1(self):
       return "method1"

     def method2(self,req):
       return "method2"

     def method3(self,req,arg):
       return "method3"

   object = _Object()

   object_as_xmlrpc = vampire.Service(form)

Thus URL "object/method1", "object/method2" and "object/method3" act
like normal published functions with form arguments as appropriate.
Use the URL "object_as_xmlrpc/method1", etc, then it interprets the
request as an XML-RPC call, with the target being the same functions
as also accessible as standard GET/POST requests. This just can't
be done with mod_python.publisher as it stands as it doesn't pay
attention to content type and only interpret POST requests as form
requests when it is actually one. Ie., at the moment it would try
and consume the content of the XML-RPC request as a form post.

Anyway, enough ranting about it how it would be nice to see this
aspect of mod_python.publisher fixed. At least i don't believe it
is fixed in 3.2. :-)

That all said, even if XML-RPC is easy to implement on the server
side with mod_python, I would probably suggest that when he says
it isn't easy, it refers more to the client side in the browser.

Graham


From nick at dd.revealed.net  Thu Oct 27 11:40:39 2005
From: nick at dd.revealed.net (Nick)
Date: Thu Oct 27 11:40:52 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <00c3c7818e294bdf43633607aa2eafc9@dscpl.com.au>
References: <BAY17-F143725195F93A8014D982B99690@phx.gbl>
	<435FE7BD.5020007@dd.revealed.net>
	<00c3c7818e294bdf43633607aa2eafc9@dscpl.com.au>
Message-ID: <4360F4F7.6080301@dd.revealed.net>

Graham Dumpleton wrote:
> 
> On 27/10/2005, at 6:31 AM, Nick wrote:
> 
>> See also  
>> http://developer.apple.com/internet/webcontent/xmlhttpreq.html for  
>> another solution (there are many resources for this information, but 
>> I  like that one best).
>>
>> SimpleXMLRPCServer is a standard module in Python, and I don't think  
>> it's as complex as you might think, but the above solution might 
>> yield  quicker results for you.
> 
> 
> As far as integrating XML-RPC into mod_python, you are possibly better
> of using the xmlrpclib.dumps() and xmlrpclib.loads() functions directly.
>  From memory this gives better control over handling errors. At least
> I know I had a good reason at the time which I can't think of right now.
> Possibly because overriding SimpleXmlRpcServer didn't provide a good
> way of returning a 404 when function didn't exist.

I don't believe you must return a 404 when a function doesn't exist, but 
only when a service doesn't exist.  From the spec:

"Unless there's a lower-level error, always return 200 OK."

A non-existant function would return a fault code.  A simple xmlrpc handler 
for mod_python would look like:

from mod_python import apache
import SimpleXMLRPCServer

dispatcher = SimpleXMLRPCServer.SimpleXMLRPCDispatcher()

# just add any function to the dispatcher with:
# dispatcher.register_function(my_func)

# for convenience:
dispatcher.register_introspection_functions()

def handler(req):
     try:
         req.write(dispatcher._marshaled_dispatch(req.read())
         return apache.OK
     except:
         return apache.HTTP_INTERNAL_SERVER_ERROR

And that's it.  Obviously this can be made more robust, but it usually 
doesn't need to be.  The dispatcher should catch all exceptions and send a 
fault code.

Nick
From woodsman at gmail.com  Thu Oct 27 15:10:05 2005
From: woodsman at gmail.com (Brandon N)
Date: Thu Oct 27 15:10:11 2005
Subject: [mod_python] Unable to import modules in subdirs
Message-ID: <e3a291250510271210n47546b3cnb977122d74ca13d@mail.gmail.com>

Hello all,
I am new to mod_python and would like to switch some existing code of mine
away from php. I'd be very happy to get up and running with python.

Unfortunately, I've run into a snag or two. I currently have an apache
httpd.conf of the following:

<Directory /var/www/localhost/htdocs/py>
SetHandler mod_python .py
PythonPath "['/var/www/localhost/htdocs/py',
'/var/www/localhost/htdocs/py/Admin']+sys.path"
PythonHandler mptest
PythonDebug On
</Directory>

And a directory of:

/var/www/localhost/htdocs/py/
Admin/ LocalAdmin.py __init__.py mptest.py

__init__.py's contents:
__all__ = [ "Admin" ]

/var/www/localhost/htdocs/py/Admin/
Admin.py __init__.py

__init__.py's contents:
import sys
sys.path.insert( 0, '../' )

both Admin and LocalAdmin have similar code of:
class LocalAdmin( object ):
def __init__( self ):
self._var = -1

def var( self ):
return self._var

Though Admin defines the class as RemoteAdmin

mptest.py is:
from mod_python import apache
import LocalAdmin
import Admin

def handler(req):
req.content_type = 'text/plain'
req.send_http_header()

LA = LocalAdmin.LocalAdmin( )
#A = Admin.RemoteAdmin( )

req.write( "%s\n" % LA.var())
for l in dir( Admin ):
req.write( "%s\n" % l )
return apache.OK

This code works, with the output of
---

-1
__all__
__builtins__
__doc__
__file__
__name__
__path__
sys

---
So RemoteAdmin is not seen, though I can in fact import Admin...

Uncommenting the A = ... line throws an expected exception given the dir
results:

  File "/var/www/localhost/htdocs/py/mptest.py", line 17, in handler
    A = Admin.RemoteAdmin( )

AttributeError: 'module' object has no attribute 'RemoteAdmin'


Everything in the py and py/Admin have permissions:
rwxr-xr-x

Any clues as to what I'm missing?

Thanks in advance for any insight!

Cheers.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051027/6331dfe5/attachment.html
From list at joreybump.com  Thu Oct 27 15:35:33 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Oct 27 15:35:47 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <e3a291250510271210n47546b3cnb977122d74ca13d@mail.gmail.com>
References: <e3a291250510271210n47546b3cnb977122d74ca13d@mail.gmail.com>
Message-ID: <43612C05.9060608@joreybump.com>

Brandon N wrote:
> Hello all,
>    I am new to mod_python and would like to switch some existing code of 
> mine away from php. I'd be very happy to get up and running with python.
> 
> Unfortunately, I've run into a snag or two. I currently have an apache 
> httpd.conf of the following:
> 
> <Directory /var/www/localhost/htdocs/py>
>         SetHandler mod_python .py
>         PythonPath "['/var/www/localhost/htdocs/py', 
> '/var/www/localhost/htdocs/py/Admin']+sys.path"

Don't do that. Create a directory outside of the DocumentRoot for your 
own module repository.

>         PythonHandler mptest
>         PythonDebug On
> </Directory>
> 
> And a directory of:
> 
> /var/www/localhost/htdocs/py/
> Admin/  LocalAdmin.py  __init__.py  mptest.py
> 
> __init__.py's contents:
> __all__ = [ "Admin" ]
> 
> /var/www/localhost/htdocs/py/Admin/
> Admin.py  __init__.py

You've turned this directory into a package, so when you import Admin, 
it is actually importing /var/www/localhost/htdocs/py/Admin/__init__.py, 
not /var/www/localhost/htdocs/py/Admin/Admin.py.

> __init__.py's contents:
> import sys
> sys.path.insert( 0, '../' )

?

> both Admin and LocalAdmin have similar code of:
> class LocalAdmin( object ):
>     def __init__( self ):
>         self._var = -1
> 
>     def var( self ):
>         return self._var
> 
> Though Admin defines the class as RemoteAdmin
> 
> mptest.py is:
> from mod_python import apache
> import LocalAdmin
> import Admin

With your current scheme, you'd have to import Admin.Admin to get an 
Admin.Admin.RemoteAdmin object.

> def handler(req):
>     req.content_type = 'text/plain'
>     req.send_http_header()
> 
>     LA = LocalAdmin.LocalAdmin( )
>     #A = Admin.RemoteAdmin( )
> 
>     req.write( "%s\n" % LA.var())
>     for l in dir( Admin ):
>         req.write( "%s\n" % l )
>     return apache.OK
> 
> This code works, with the output of
> ---
> 
> -1
> __all__
> __builtins__
> __doc__
> __file__
> __name__
> __path__
> sys
> 
> ---
> So RemoteAdmin is not seen, though I can in fact import Admin...
> 
> Uncommenting the A = ... line throws an expected exception given the dir 
> results:
> 
>   File "/var/www/localhost/htdocs/py/mptest.py", line 17, in handler
>     A = Admin.RemoteAdmin( )
> 
> AttributeError: 'module' object has no attribute 'RemoteAdmin'
> 
> 
> Everything in the py and py/Admin have permissions:
> rwxr-xr-x
> 
> Any clues as to what I'm missing?
> 
> Thanks in advance for any insight!

Do this instead:

create /var/www/localhost/python

Then:

  /var/www/localhost/python/LocalAdmin.py
  /var/www/localhost/python/Admin/__init__.py

You want Admin/__init__.py to resemble LocalAdmin.py (but with your 
RemoteAdmin class, etc.). Of course, you could just create Admin.py at 
the same level as LocalAdmin.py, but this primitively demonstrates how 
to make a package.

Change your PythonPath to:

  PythonPath "['/var/www/localhost/python'] + sys.path"

Now your mptest.py should work without modification.

HTH, YMMV, untested, exchanges only, NO REFUNDS. :)

From woodsman at gmail.com  Thu Oct 27 16:58:47 2005
From: woodsman at gmail.com (Brandon N)
Date: Thu Oct 27 16:58:54 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <43612C05.9060608@joreybump.com>
References: <e3a291250510271210n47546b3cnb977122d74ca13d@mail.gmail.com>
	<43612C05.9060608@joreybump.com>
Message-ID: <e3a291250510271358u9f275e3t30ed2326f6c40100@mail.gmail.com>

Thanks a lot, that helped considerably. I'm not sure why but from an example
I had come across I though mod_python handled things a little differently
than I was used to.

One last (multi-part) question. I'm going to be using some php for a while,
so I've specified /py as the directory to point python requests to.

A) Is it requestHandler's job to determine which file was requested and
respond accordingly (via the request's .filename?) with a switch construct
or equivalent?

B) How does one route /py/*/ etc requests to the same handler? Or should one
register a handler for each particular subdirectory?

Thanks again for your help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051027/68999f59/attachment.html
From grahamd at dscpl.com.au  Thu Oct 27 17:04:36 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 17:04:59 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <4360F4F7.6080301@dd.revealed.net>
References: <BAY17-F143725195F93A8014D982B99690@phx.gbl>
	<435FE7BD.5020007@dd.revealed.net>
	<00c3c7818e294bdf43633607aa2eafc9@dscpl.com.au>
	<4360F4F7.6080301@dd.revealed.net>
Message-ID: <6af142b007f2473c194ee28c1c4017c3@dscpl.com.au>


On 28/10/2005, at 1:40 AM, Nick wrote:

> Graham Dumpleton wrote:
>> On 27/10/2005, at 6:31 AM, Nick wrote:
>>> See also  
>>> http://developer.apple.com/internet/webcontent/xmlhttpreq.html for  
>>> another solution (there are many resources for this information, but 
>>> I  like that one best).
>>>
>>> SimpleXMLRPCServer is a standard module in Python, and I don't think 
>>>  it's as complex as you might think, but the above solution might 
>>> yield  quicker results for you.
>> As far as integrating XML-RPC into mod_python, you are possibly better
>> of using the xmlrpclib.dumps() and xmlrpclib.loads() functions 
>> directly.
>>  From memory this gives better control over handling errors. At least
>> I know I had a good reason at the time which I can't think of right 
>> now.
>> Possibly because overriding SimpleXmlRpcServer didn't provide a good
>> way of returning a 404 when function didn't exist.
>
> I don't believe you must return a 404 when a function doesn't exist, 
> but only when a service doesn't exist.  From the spec:
>
> "Unless there's a lower-level error, always return 200 OK."
>
> A non-existant function would return a fault code.

One of the problems with the XML-RPC specification is that there is
no concept of an error origin. All error fault codes fall in the same
range. The SimpleXMLRPCServer if I recall properly returns a fault
code of 1 for missing methods or any internal problem it itself may
have. This is next to useless when you consider that any application
code usually starts error numbers at 1 as well, one just can't
distinguish errors very easily. It is thus helpful to at least use
a distinct error for not being able to map a callable function in
the first place.

I can't remember exactly, but there may have been other reasons as
well. It was all about the time when I found the security hole in the
SimpleXMLRPCServer implementation so it may have been a general
distrust of the code. :-)

Graham

From list at joreybump.com  Thu Oct 27 17:44:22 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Oct 27 17:44:34 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <e3a291250510271358u9f275e3t30ed2326f6c40100@mail.gmail.com>
References: <e3a291250510271210n47546b3cnb977122d74ca13d@mail.gmail.com>	
	<43612C05.9060608@joreybump.com>
	<e3a291250510271358u9f275e3t30ed2326f6c40100@mail.gmail.com>
Message-ID: <43614A36.4040908@joreybump.com>

Brandon N wrote:
> Thanks a lot, that helped considerably. I'm not sure why but from an 
> example I had come across I though mod_python handled things a little 
> differently than I was used to.
> 
> One last (multi-part) question. I'm going to be using some php for a 
> while, so I've specified /py as the directory to point python requests to.
> 
> A) Is it requestHandler's job to determine which file was requested and 
> respond accordingly (via the request's .filename?) with a switch 
> construct or equivalent?

Yes and no. Apache's already passed the file to the handler based on its 
extension, presence in a directory, or other criteria. The developer of 
the handler gets to decide what the handler does with *whatever* is 
passed to it. Some assume it will contain only valid Python code and 
process it as such (mod_python.publisher, for example). Some might want 
to process proprietary or other file formats using python (you might 
make a handler to display Word files, for example), but remain agnostic 
about the actual filename or extension. But there's no reason why your 
handler can't branch according to the file extension (which is what 
Graham's Vampire does, if I'm not mistaken).

> B) How does one route /py/*/ etc requests to the same handler? Or should 
> one register a handler for each particular subdirectory?

The (Set|Add)Handler directive is recursive, you only need to set it at 
the topmost directory. Apache will route the files in subdirectories 
through the same handler. Multiple (Set|Add)Handler directives are 
allowed, if you want to add other directories. I'll often set up 
multiple directories outside of the DocumentRoot and alias them, 
especially if I'm sharing the host with nonprogrammers who update HTML only.
From nick at dd.revealed.net  Thu Oct 27 17:46:15 2005
From: nick at dd.revealed.net (Nick)
Date: Thu Oct 27 17:46:24 2005
Subject: [mod_python] onunload ie mod_python
In-Reply-To: <6af142b007f2473c194ee28c1c4017c3@dscpl.com.au>
References: <BAY17-F143725195F93A8014D982B99690@phx.gbl>
	<435FE7BD.5020007@dd.revealed.net>
	<00c3c7818e294bdf43633607aa2eafc9@dscpl.com.au>
	<4360F4F7.6080301@dd.revealed.net>
	<6af142b007f2473c194ee28c1c4017c3@dscpl.com.au>
Message-ID: <43614AA7.20702@dd.revealed.net>

Fair enough; at least the original poster has a couple of options now :)

Nick

Graham Dumpleton wrote:
> 
> On 28/10/2005, at 1:40 AM, Nick wrote:
> 
>> Graham Dumpleton wrote:
>>
>>> On 27/10/2005, at 6:31 AM, Nick wrote:
>>>
>>>> See also  
>>>> http://developer.apple.com/internet/webcontent/xmlhttpreq.html for  
>>>> another solution (there are many resources for this information, but 
>>>> I  like that one best).
>>>>
>>>> SimpleXMLRPCServer is a standard module in Python, and I don't think 
>>>>  it's as complex as you might think, but the above solution might 
>>>> yield  quicker results for you.
>>>
>>> As far as integrating XML-RPC into mod_python, you are possibly better
>>> of using the xmlrpclib.dumps() and xmlrpclib.loads() functions directly.
>>>  From memory this gives better control over handling errors. At least
>>> I know I had a good reason at the time which I can't think of right now.
>>> Possibly because overriding SimpleXmlRpcServer didn't provide a good
>>> way of returning a 404 when function didn't exist.
>>
>>
>> I don't believe you must return a 404 when a function doesn't exist, 
>> but only when a service doesn't exist.  From the spec:
>>
>> "Unless there's a lower-level error, always return 200 OK."
>>
>> A non-existant function would return a fault code.
> 
> 
> One of the problems with the XML-RPC specification is that there is
> no concept of an error origin. All error fault codes fall in the same
> range. The SimpleXMLRPCServer if I recall properly returns a fault
> code of 1 for missing methods or any internal problem it itself may
> have. This is next to useless when you consider that any application
> code usually starts error numbers at 1 as well, one just can't
> distinguish errors very easily. It is thus helpful to at least use
> a distinct error for not being able to map a callable function in
> the first place.
> 
> I can't remember exactly, but there may have been other reasons as
> well. It was all about the time when I found the security hole in the
> SimpleXMLRPCServer implementation so it may have been a general
> distrust of the code. :-)
> 
> Graham

From grahamd at dscpl.com.au  Thu Oct 27 18:42:55 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 18:43:06 2005
Subject: [mod_python] Unable to import modules in subdirs
Message-ID: <1130452975.12545@dscpl.user.openhosting.com>

Jorey Bump wrote ..
> Brandon N wrote:
> > __init__.py's contents:
> > import sys
> > sys.path.insert( 0, '../' )
> 
> ?

To expand on Jorey's "?" here with some general tips.

It is generally bad practice to extend sys.path from inside of modules
used by mod_python. At the least you must ensure you do not do it from a
module which is a candidate for automatic module reloading. This is
because every time the module is reloaded, the extension of sys.path
will occur yet again. Overall this will not stop the application
working, but if reloading occurs a lot, sys.path will become very long
and with many redundant entries in it.

The other things you need to be aware of is that you can not assume
anything about what the current working directory is when you are using
mod_python. Therefore you cannot use relative pathnames like "../" to
access any resource. This is because it will be resolved in relation to
the working directory which apache was run in, and not in relation to
where the Python code file resides.

If you need to specify a relative directory in relation to a code file
in order to access another resource, use something like:

  import os
  __here__ = os.path.dirname(__file__)

  directory = os.path.join(__here__,"..")

Graham
From grahamd at dscpl.com.au  Thu Oct 27 18:55:25 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 18:55:30 2005
Subject: [mod_python] Unable to import modules in subdirs
Message-ID: <1130453725.24387@dscpl.user.openhosting.com>

Jorey Bump wrote ..
> Brandon N wrote:
> > A) Is it requestHandler's job to determine which file was requested and
> > respond accordingly (via the request's .filename?) with a switch 
> > construct or equivalent?
> 
> Yes and no. Apache's already passed the file to the handler based on its
> extension, presence in a directory, or other criteria. The developer of
> the handler gets to decide what the handler does with *whatever* is 
> passed to it. Some assume it will contain only valid Python code and 
> process it as such (mod_python.publisher, for example). Some might want
> to process proprietary or other file formats using python (you might 
> make a handler to display Word files, for example), but remain agnostic
> about the actual filename or extension. But there's no reason why your
> handler can't branch according to the file extension (which is what 
> Graham's Vampire does, if I'm not mistaken).

If you are coming from a PHP background where each URL essentially
maps to a distinct file, Vampire may well be a good starting point as it
works in a similar way at it most basic level.

Thus, where in PHP you might have:

  index.php # URL -> /index.php
  search.php # URL -> /search.php

Vampire would similarly have separate files for each resource, although
in Vampire it is the name of the handler within the file which dictates
what extension the URL needs to have:

  index.py

    def handler(req): ... # /index
    def handler_html(req): ... # /index.html
    def handler_php(req): ... # /index.php (Yes, pretend we are PHP when we aren't).

  search.py

    def handler(req): ... # /search
    def handler_html(req): ... # /search.html

Thus, if you want to write your code in the form of basic handlers but a
distinct handler for each resource, the basic dispatch mechanism of
Vampire is going to allow you to get started quicker.

Another alternative as Jorey pointed out is mod_python.publisher,
however it doesn't allow you to as easily dictate use of multiple
different extension types used on URLs nor is it necessarily as easy to
mix static files in the same directory.

For a further basic introduction to Vampire, see:

  http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html

Graham


From woodsman at gmail.com  Thu Oct 27 21:05:44 2005
From: woodsman at gmail.com (Brandon N)
Date: Thu Oct 27 21:05:52 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <1130453725.24387@dscpl.user.openhosting.com>
References: <1130453725.24387@dscpl.user.openhosting.com>
Message-ID: <e3a291250510271805y6574a745m53ce8e663b6566a6@mail.gmail.com>

I've checked out Vampire, and it would seem to be exactly that which I
desire (after only a few minutes of experimentation at least). Does one
typically include their .py files with this setup in the public directory
(with indexing and such disabled, naturally)? Or is there a way to reference
files outside of the public system?

Thanks to the both of you with your help. It's cleared up a great deal for
me.

Cheers!

On 10/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Jorey Bump wrote ..
> > Brandon N wrote:
> > > A) Is it requestHandler's job to determine which file was requested
> and
> > > respond accordingly (via the request's .filename?) with a switch
> > > construct or equivalent?
> >
> > Yes and no. Apache's already passed the file to the handler based on its
> > extension, presence in a directory, or other criteria. The developer of
> > the handler gets to decide what the handler does with *whatever* is
> > passed to it. Some assume it will contain only valid Python code and
> > process it as such (mod_python.publisher, for example). Some might want
> > to process proprietary or other file formats using python (you might
> > make a handler to display Word files, for example), but remain agnostic
> > about the actual filename or extension. But there's no reason why your
> > handler can't branch according to the file extension (which is what
> > Graham's Vampire does, if I'm not mistaken).
>
> If you are coming from a PHP background where each URL essentially
> maps to a distinct file, Vampire may well be a good starting point as it
> works in a similar way at it most basic level.
>
> Thus, where in PHP you might have:
>
> index.php # URL -> /index.php
> search.php # URL -> /search.php
>
> Vampire would similarly have separate files for each resource, although
> in Vampire it is the name of the handler within the file which dictates
> what extension the URL needs to have:
>
> index.py
>
> def handler(req): ... # /index
> def handler_html(req): ... # /index.html
> def handler_php(req): ... # /index.php (Yes, pretend we are PHP when we
> aren't).
>
> search.py
>
> def handler(req): ... # /search
> def handler_html(req): ... # /search.html
>
> Thus, if you want to write your code in the form of basic handlers but a
> distinct handler for each resource, the basic dispatch mechanism of
> Vampire is going to allow you to get started quicker.
>
> Another alternative as Jorey pointed out is mod_python.publisher,
> however it doesn't allow you to as easily dictate use of multiple
> different extension types used on URLs nor is it necessarily as easy to
> mix static files in the same directory.
>
> For a further basic introduction to Vampire, see:
>
> http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html
>
> Graham
>
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051027/56cf8ac5/attachment.html
From grahamd at dscpl.com.au  Thu Oct 27 21:40:04 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 21:40:09 2005
Subject: [mod_python] Unable to import modules in subdirs
Message-ID: <1130463604.18568@dscpl.user.openhosting.com>

Brandon N wrote ..
> I've checked out Vampire, and it would seem to be exactly that which I
> desire (after only a few minutes of experimentation at least). Does one
> typically include their .py files with this setup in the public directory
> (with indexing and such disabled, naturally)? Or is there a way to reference
> files outside of the public system?

What do you mean by files? Do you mean the .py files which contain the
handlers or other Python helper modules, static files etc?

In terms of how most mod_python extensions work, eg, Vampire,
mod_python.publisher etc, they rely on the fact that Apache performs the
mapping of URL to a physical file in the filesystem. Ie., they work out
what to do based on what Apache has set req.filename to. In order for
Apache to make this determination, the .py files must be in the public
directories that Apache is managing. Note though that this doesn't
mean they have to be physically under the main Apache document
root as you can use the Alias directive or symlinks and the FollowSymLinks
directive to locate them in different places but still appear under the public
URL namespace.

Anyway, if you can be clearer about what you mean, can possibly give
a better answer. :-)

Graham

> Thanks to the both of you with your help. It's cleared up a great deal
> for
> me.
> 
> Cheers!
> 
> On 10/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Jorey Bump wrote ..
> > > Brandon N wrote:
> > > > A) Is it requestHandler's job to determine which file was requested
> > and
> > > > respond accordingly (via the request's .filename?) with a switch
> > > > construct or equivalent?
> > >
> > > Yes and no. Apache's already passed the file to the handler based on
> its
> > > extension, presence in a directory, or other criteria. The developer
> of
> > > the handler gets to decide what the handler does with *whatever* is
> > > passed to it. Some assume it will contain only valid Python code and
> > > process it as such (mod_python.publisher, for example). Some might
> want
> > > to process proprietary or other file formats using python (you might
> > > make a handler to display Word files, for example), but remain agnostic
> > > about the actual filename or extension. But there's no reason why your
> > > handler can't branch according to the file extension (which is what
> > > Graham's Vampire does, if I'm not mistaken).
> >
> > If you are coming from a PHP background where each URL essentially
> > maps to a distinct file, Vampire may well be a good starting point as
> it
> > works in a similar way at it most basic level.
> >
> > Thus, where in PHP you might have:
> >
> > index.php # URL -> /index.php
> > search.php # URL -> /search.php
> >
> > Vampire would similarly have separate files for each resource, although
> > in Vampire it is the name of the handler within the file which dictates
> > what extension the URL needs to have:
> >
> > index.py
> >
> > def handler(req): ... # /index
> > def handler_html(req): ... # /index.html
> > def handler_php(req): ... # /index.php (Yes, pretend we are PHP when
> we
> > aren't).
> >
> > search.py
> >
> > def handler(req): ... # /search
> > def handler_html(req): ... # /search.html
> >
> > Thus, if you want to write your code in the form of basic handlers but
> a
> > distinct handler for each resource, the basic dispatch mechanism of
> > Vampire is going to allow you to get started quicker.
> >
> > Another alternative as Jorey pointed out is mod_python.publisher,
> > however it doesn't allow you to as easily dictate use of multiple
> > different extension types used on URLs nor is it necessarily as easy
> to
> > mix static files in the same directory.
> >
> > For a further basic introduction to Vampire, see:
> >
> > http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html
> >
> > Graham
> >
> >
> > _______________________________________________
> > Mod_python mailing list
> > Mod_python@modpython.org
> > http://mailman.modpython.org/mailman/listinfo/mod_python
> >
From woodsman at gmail.com  Thu Oct 27 21:48:30 2005
From: woodsman at gmail.com (Brandon N)
Date: Thu Oct 27 21:48:35 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <1130463604.18568@dscpl.user.openhosting.com>
References: <1130463604.18568@dscpl.user.openhosting.com>
Message-ID: <e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>

Hmm evidently you can send in gmail without actually hitting send...

I meant seeing as others had pointed out the concern that one shouldn't put
.py files under htdocs/ or similar directories for fear that someone might
find access to one's source files, wholly intact.

Though
> In order for
> Apache to make this determination, the .py files must be in the public
> directories that Apache is managing.
made it clear for me.

Is that at all a security issue. Or rather, is there a standard method of
referencing code outside of the public directories?

On 10/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
>
> Brandon N wrote ..
> > I've checked out Vampire, and it would seem to be exactly that which I
> > desire (after only a few minutes of experimentation at least). Does one
> > typically include their .py files with this setup in the public
> directory
> > (with indexing and such disabled, naturally)? Or is there a way to
> reference
> > files outside of the public system?
>
> What do you mean by files? Do you mean the .py files which contain the
> handlers or other Python helper modules, static files etc?
>
> In terms of how most mod_python extensions work, eg, Vampire,
> mod_python.publisher etc, they rely on the fact that Apache performs the
> mapping of URL to a physical file in the filesystem. Ie., they work out
> what to do based on what Apache has set req.filename to. In order for
> Apache to make this determination, the .py files must be in the public
> directories that Apache is managing. Note though that this doesn't
> mean they have to be physically under the main Apache document
> root as you can use the Alias directive or symlinks and the FollowSymLinks
> directive to locate them in different places but still appear under the
> public
> URL namespace.
>
> Anyway, if you can be clearer about what you mean, can possibly give
> a better answer. :-)
>
> Graham
>
> > Thanks to the both of you with your help. It's cleared up a great deal
> > for
> > me.
> >
> > Cheers!
> >
> > On 10/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > >
> > > Jorey Bump wrote ..
> > > > Brandon N wrote:
> > > > > A) Is it requestHandler's job to determine which file was
> requested
> > > and
> > > > > respond accordingly (via the request's .filename?) with a switch
> > > > > construct or equivalent?
> > > >
> > > > Yes and no. Apache's already passed the file to the handler based on
> > its
> > > > extension, presence in a directory, or other criteria. The developer
> > of
> > > > the handler gets to decide what the handler does with *whatever* is
> > > > passed to it. Some assume it will contain only valid Python code and
> > > > process it as such (mod_python.publisher, for example). Some might
> > want
> > > > to process proprietary or other file formats using python (you might
> > > > make a handler to display Word files, for example), but remain
> agnostic
> > > > about the actual filename or extension. But there's no reason why
> your
> > > > handler can't branch according to the file extension (which is what
> > > > Graham's Vampire does, if I'm not mistaken).
> > >
> > > If you are coming from a PHP background where each URL essentially
> > > maps to a distinct file, Vampire may well be a good starting point as
> > it
> > > works in a similar way at it most basic level.
> > >
> > > Thus, where in PHP you might have:
> > >
> > > index.php # URL -> /index.php
> > > search.php # URL -> /search.php
> > >
> > > Vampire would similarly have separate files for each resource,
> although
> > > in Vampire it is the name of the handler within the file which
> dictates
> > > what extension the URL needs to have:
> > >
> > > index.py
> > >
> > > def handler(req): ... # /index
> > > def handler_html(req): ... # /index.html
> > > def handler_php(req): ... # /index.php (Yes, pretend we are PHP when
> > we
> > > aren't).
> > >
> > > search.py
> > >
> > > def handler(req): ... # /search
> > > def handler_html(req): ... # /search.html
> > >
> > > Thus, if you want to write your code in the form of basic handlers but
> > a
> > > distinct handler for each resource, the basic dispatch mechanism of
> > > Vampire is going to allow you to get started quicker.
> > >
> > > Another alternative as Jorey pointed out is mod_python.publisher,
> > > however it doesn't allow you to as easily dictate use of multiple
> > > different extension types used on URLs nor is it necessarily as easy
> > to
> > > mix static files in the same directory.
> > >
> > > For a further basic introduction to Vampire, see:
> > >
> > > http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html
> > >
> > > Graham
> > >
> > >
> > > _______________________________________________
> > > Mod_python mailing list
> > > Mod_python@modpython.org
> > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051027/f13e758f/attachment.html
From list at joreybump.com  Thu Oct 27 23:20:22 2005
From: list at joreybump.com (Jorey Bump)
Date: Thu Oct 27 23:20:30 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>
References: <1130463604.18568@dscpl.user.openhosting.com>
	<e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>
Message-ID: <436198F6.9010007@joreybump.com>

Brandon N wrote:

> I meant seeing as others had pointed out the concern that one shouldn't 
> put .py files under htdocs/ or similar directories for fear that someone 
> might find access to one's source files, wholly intact.
> 
> Though
>  > In order for
>  > Apache to make this determination, the .py files must be in the public
>  > directories that Apache is managing.
> made it clear for me.
> 
> Is that at all a security issue. Or rather, is there a standard method 
> of referencing code outside of the public directories?

Yes. You import it, as you would with most Python applications. I use 
Publisher, and typically have only a few lines of code in my published 
modules, which act as interfaces to packages in my extended path:

/var/www/vhosts/walamaloo/website/mp/six.py:

"""
Published module used as interface to rules package.
"""
# all the code is in this package
# /var/www/vhosts/walamaloo/python/bruce/faculty/rules/__init__.py
import bruce.faculty.rules

def index(req):
     """
     Default function for users.
     """
     return bruce.faculty.rules.four(req)

def admin(req):
     """
     Requires authentication using proprietary mechanism.
     """
     return bruce.faculty.rules.onethreefiveseven(req)


This is just my preference. You can put all of your code in a published 
module, if you want. But this approach allows me to hide sensitive 
information outside of the DocumentRoot and encourages code reuse. I can 
build apps relatively quickly because my extended path is filled with 
various utility modules.

You might find some similarities to PHP's require() or include(), but 
those are a bit simplistic compared to Python's import mechanism. On the 
other hand, I have to restart apache often when developing new 
applications, so PHP does have have one thing going for it (but only 
one). :)

From grahamd at dscpl.com.au  Thu Oct 27 23:59:27 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Thu Oct 27 23:59:33 2005
Subject: [mod_python] Unable to import modules in subdirs
Message-ID: <1130471967.21597@dscpl.user.openhosting.com>

Brandon N wrote ..
> I meant seeing as others had pointed out the concern that one shouldn't put
> .py files under htdocs/ or similar directories for fear that someone might
> find access to one's source files, wholly intact.

The reference to putting .py files under htdocs pertained more to any
shared set of modules used by your application. The idea being to make
what code is in a handler module file as minimal as possible with
callouts to separate application modules which do the bulk of the work.

There are a number of reasons for doing this. The first is that in the
event that an Apache configuration is stuffed up and .py files exposed,
that you aren't exposing the bulk of the code of your application. Ie.,
the important stuff where you might hold things like any database
login/password details or pathnames to other files which may contain
sensitive information.

The second reason is to avoid any problems with modules being loaded
both by the standard Python import mechanism and the mod_python module
import mechanism. Mixing the two can cause some issues and it is easier
to avoid the problem by never using "import" to import modules in the
document tree. Best way of doing that is to move shared modules
elsewhere. If you must import a module in the document tree from another
module in the document tree, use apache.import_module() instead.

In terms of security of .py files in the document tree, the risk is
similar as to when using .php or .cgi files. If someone screws up the
Apache configuration in all these cases source code could be exposed.
This sort of issue will possibly more easily occur when mod_python is
configured from the main Apache configuration file. At least if
mod_python is configured from a .htaccess file in the document tree, the
file is adjacent to the source code and the association more easily
seen. When in the main Apache configuration, too easy for someone
to unknowingly remove/disable it, or to wipe it out when upgrading
Apache. With a .htaccess file it will keep working unless FileInfo option
is disabled or use of .htaccess files is disabled. If FileInfo is disabled,
result will from memory be a 500 error so still safe. Disable .htaccess
files though and code can still be exposed.

What I would personally be more worried about is where the user that
Apache runs as has some sort of write access to the document tree.
If it does, then .pyc and .pyo files can be left in the document tree
from when a module is loaded. If AddHandler is used to only map .py
files to mod_python, then the .pyc and .pyo files can be exposed and
downloadable. If someone had the right tools they could decompile
the bytecode and find out something about your source code, including
possibly sensitive details.

Even if the user Apache runs as doesn't have write access to the
document tree, I would always suggest the following be added to
the Apache configuration.

  <Files *.pyc>
  deny from all
  </Files>
  
  <Files *.pyo>
  deny from all
  </Files>

This will block access to the files if they are created by mod_python
where directories are writable, or if the files are inadvertantly copied
there from another location.

As to keeping handler modules out of the document tree, thus eliminating
the danger they could be exposed, this is not really possible with
mod_python as it stands now. With mod_python 3.2 though, there is
potential for it to be done, although it means writing a special handler
which emulates the way that Apache maps URLs to files. The change that
has been made that makes this possible is that in 3.2, it is possible to
modify the value of req.path_info as well as req.filename. Thus a
handler could reevaluate a URL against a part of the filesystem which
isn't in the document tree and then execute a handler to service the
request against what was found.

As an example, in a new system I am working on, you can write
something like:

    import mod_python.publisher

    handler = handlers.MapLocationToView(
        directory = '/tmp/htdocs',
        resource_extension = '.py',
        script_extension = '.py',
        handler = mod_python.publisher.handler,
    )

The MapLocationToView handler will map a URL to a .py file like Apache
does now when AddHandler is used and then trigger the standard
mod_python.publisher handler. The difference is that is this example,
the files all live outside of the document tree in '/tmp/htdocs'. The
Apache configuration itself knows nothing about that directory and its
contents can't be exposed in any way if the Apache configuration is
stuffed up.

Graham

> Though
> > In order for
> > Apache to make this determination, the .py files must be in the public
> > directories that Apache is managing.
> made it clear for me.
> 
> Is that at all a security issue. Or rather, is there a standard method
> of
> referencing code outside of the public directories?
> 
> On 10/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> >
> > Brandon N wrote ..
> > > I've checked out Vampire, and it would seem to be exactly that which
> I
> > > desire (after only a few minutes of experimentation at least). Does
> one
> > > typically include their .py files with this setup in the public
> > directory
> > > (with indexing and such disabled, naturally)? Or is there a way to
> > reference
> > > files outside of the public system?
> >
> > What do you mean by files? Do you mean the .py files which contain the
> > handlers or other Python helper modules, static files etc?
> >
> > In terms of how most mod_python extensions work, eg, Vampire,
> > mod_python.publisher etc, they rely on the fact that Apache performs
> the
> > mapping of URL to a physical file in the filesystem. Ie., they work out
> > what to do based on what Apache has set req.filename to. In order for
> > Apache to make this determination, the .py files must be in the public
> > directories that Apache is managing. Note though that this doesn't
> > mean they have to be physically under the main Apache document
> > root as you can use the Alias directive or symlinks and the FollowSymLinks
> > directive to locate them in different places but still appear under the
> > public
> > URL namespace.
> >
> > Anyway, if you can be clearer about what you mean, can possibly give
> > a better answer. :-)
> >
> > Graham
> >
> > > Thanks to the both of you with your help. It's cleared up a great deal
> > > for
> > > me.
> > >
> > > Cheers!
> > >
> > > On 10/27/05, Graham Dumpleton <grahamd@dscpl.com.au> wrote:
> > > >
> > > > Jorey Bump wrote ..
> > > > > Brandon N wrote:
> > > > > > A) Is it requestHandler's job to determine which file was
> > requested
> > > > and
> > > > > > respond accordingly (via the request's .filename?) with a switch
> > > > > > construct or equivalent?
> > > > >
> > > > > Yes and no. Apache's already passed the file to the handler based
> on
> > > its
> > > > > extension, presence in a directory, or other criteria. The developer
> > > of
> > > > > the handler gets to decide what the handler does with *whatever*
> is
> > > > > passed to it. Some assume it will contain only valid Python code
> and
> > > > > process it as such (mod_python.publisher, for example). Some might
> > > want
> > > > > to process proprietary or other file formats using python (you
> might
> > > > > make a handler to display Word files, for example), but remain
> > agnostic
> > > > > about the actual filename or extension. But there's no reason why
> > your
> > > > > handler can't branch according to the file extension (which is
> what
> > > > > Graham's Vampire does, if I'm not mistaken).
> > > >
> > > > If you are coming from a PHP background where each URL essentially
> > > > maps to a distinct file, Vampire may well be a good starting point
> as
> > > it
> > > > works in a similar way at it most basic level.
> > > >
> > > > Thus, where in PHP you might have:
> > > >
> > > > index.php # URL -> /index.php
> > > > search.php # URL -> /search.php
> > > >
> > > > Vampire would similarly have separate files for each resource,
> > although
> > > > in Vampire it is the name of the handler within the file which
> > dictates
> > > > what extension the URL needs to have:
> > > >
> > > > index.py
> > > >
> > > > def handler(req): ... # /index
> > > > def handler_html(req): ... # /index.html
> > > > def handler_php(req): ... # /index.php (Yes, pretend we are PHP when
> > > we
> > > > aren't).
> > > >
> > > > search.py
> > > >
> > > > def handler(req): ... # /search
> > > > def handler_html(req): ... # /search.html
> > > >
> > > > Thus, if you want to write your code in the form of basic handlers
> but
> > > a
> > > > distinct handler for each resource, the basic dispatch mechanism
> of
> > > > Vampire is going to allow you to get started quicker.
> > > >
> > > > Another alternative as Jorey pointed out is mod_python.publisher,
> > > > however it doesn't allow you to as easily dictate use of multiple
> > > > different extension types used on URLs nor is it necessarily as easy
> > > to
> > > > mix static files in the same directory.
> > > >
> > > > For a further basic introduction to Vampire, see:
> > > >
> > > > http://www.dscpl.com.au/projects/vampire/articles/vampire-001.html
> > > >
> > > > Graham
> > > >
> > > >
> > > > _______________________________________________
> > > > Mod_python mailing list
> > > > Mod_python@modpython.org
> > > > http://mailman.modpython.org/mailman/listinfo/mod_python
> > > >
> >
From woodsman at gmail.com  Fri Oct 28 10:40:28 2005
From: woodsman at gmail.com (Brandon N)
Date: Fri Oct 28 10:40:34 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <436198F6.9010007@joreybump.com>
References: <1130463604.18568@dscpl.user.openhosting.com>
	<e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>
	<436198F6.9010007@joreybump.com>
Message-ID: <e3a291250510280740x3e21d112t9208416df0686e6@mail.gmail.com>

Are you forced, with mod_python, to write all package code within the
__init__.py? I ask because of what you've mentioned a few times now and what
I keep encountering.

I have Vampire up and running, though from a doc it specifies "...The
mechanism will also not work where a module is actually a package. Any
application specific modules should therefore not be structured as
packages..." which I imagine is a restriction coming from mod_python. I have
existing code that is already structured in various packages and I'd like to
keep it that way.

I'm able to import Admin but Admin.RemoteAdmin fails (as before). The only
way I've found around this is via an import of RemoteAdmin within Admin's
__init__.py which isn't much of a fix.

With that klunky method I get the desired:
import Admin.RemoteAdmin as RA
A = RA.RemoteAdmin( )

Is there a more pythonic way to accomplish this from within mod_python?

On 10/27/05, Jorey Bump <list@joreybump.com> wrote:
>
> Brandon N wrote:
>
> > I meant seeing as others had pointed out the concern that one shouldn't
> > put .py files under htdocs/ or similar directories for fear that someone
> > might find access to one's source files, wholly intact.
> >
> > Though
> > > In order for
> > > Apache to make this determination, the .py files must be in the public
> > > directories that Apache is managing.
> > made it clear for me.
> >
> > Is that at all a security issue. Or rather, is there a standard method
> > of referencing code outside of the public directories?
>
> Yes. You import it, as you would with most Python applications. I use
> Publisher, and typically have only a few lines of code in my published
> modules, which act as interfaces to packages in my extended path:
>
> /var/www/vhosts/walamaloo/website/mp/six.py:
>
> """
> Published module used as interface to rules package.
> """
> # all the code is in this package
> # /var/www/vhosts/walamaloo/python/bruce/faculty/rules/__init__.py
> import bruce.faculty.rules
>
> def index(req):
> """
> Default function for users.
> """
> return bruce.faculty.rules.four(req)
>
> def admin(req):
> """
> Requires authentication using proprietary mechanism.
> """
> return bruce.faculty.rules.onethreefiveseven(req)
>
>
> This is just my preference. You can put all of your code in a published
> module, if you want. But this approach allows me to hide sensitive
> information outside of the DocumentRoot and encourages code reuse. I can
> build apps relatively quickly because my extended path is filled with
> various utility modules.
>
> You might find some similarities to PHP's require() or include(), but
> those are a bit simplistic compared to Python's import mechanism. On the
> other hand, I have to restart apache often when developing new
> applications, so PHP does have have one thing going for it (but only
> one). :)
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://mm_cfg_has_not_been_edited_to_set_host_domains/pipermail/mod_python/attachments/20051028/1287be8e/attachment.html
From list at joreybump.com  Fri Oct 28 11:39:27 2005
From: list at joreybump.com (Jorey Bump)
Date: Fri Oct 28 11:39:40 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <e3a291250510280740x3e21d112t9208416df0686e6@mail.gmail.com>
References: <1130463604.18568@dscpl.user.openhosting.com>	
	<e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>	
	<436198F6.9010007@joreybump.com>
	<e3a291250510280740x3e21d112t9208416df0686e6@mail.gmail.com>
Message-ID: <4362462F.8030706@joreybump.com>

Brandon N wrote:
> Are you forced, with mod_python, to write all package code within the 
> __init__.py? I ask because of what you've mentioned a few times now and 
> what I keep encountering.

No. This isn't a mod_python issue, the first step in creating a Python 
package (as opposed to module) is to create a directory that contains a 
__init__.py file. This file can be empty, but I generally put my main 
code in it, and create parallel modules for separate importing. Let's 
say my module search path contains /var/www/python. The contents might 
look like this:

/var/www/python/foo.py
/var/www/python/apps/__init__.py (empty file)
/var/www/python/apps/bar/__init__.py (main code for application)
/var/www/python/apps/bar/db.py (db connection and functions for app)

So I can use import statements like:

  # import a "normal" module
  import foo
  # import a package
  import apps
  # importing apps doesn't automatically import apps.bar
  import apps.bar
  # importing apps.bar doesn't automatically import apps.bar.db
  import apps.bar.db

Note that you can also do this, as long as there are no namespace 
collisions:

  from apps import bar

But I like to preserve dotted notation for clarity, and it sometimes has 
the side effect of offering more security (against traversal exploits, 
for example).

Python packaging is an advanced subject, and not well documented. This 
is only the tip of the iceberg, look at the standard library to get an 
idea of how the experts do it. Sorry to bore you with a primer if you're 
already aware of these issues.

> I have Vampire up and running, though from a doc it specifies "...The 
> mechanism will also not work where a module is actually a package. Any 
> application specific modules should therefore not be structured as 
> packages..." which I imagine is a restriction coming from mod_python. I 
> have existing code that is already structured in various packages and 
> I'd like to keep it that way.

This is handler-specific. Graham doesn't like packages. :)

> I'm able to import Admin but Admin.RemoteAdmin fails (as before). The 
> only way I've found around this is via an import of RemoteAdmin within 
> Admin's __init__.py which isn't much of a fix.
> 
> With that klunky method I get the desired:
> import Admin.RemoteAdmin as RA
> A = RA.RemoteAdmin( )
> 
> Is there a more pythonic way to accomplish this from within mod_python?

Try Publisher. I still need to test my apps against 3.2, but older 
versions respect package imports (I'm in *big* trouble if 3.2 breaks this).

Note that Graham's put a lot of work into Vampire to address some of the 
  stumbling blocks encountered by mod_python.publisher users. You may 
welcome his approach after comparing the two. There's no doubt that they 
both have caveats unlike anything you'll encounter in a PHP-like 
environment. This is also true of mod_python.psp and just about any 
other handler/framework written for mod_python. But you couldn't pay me 
to go back to PHP after developing web applications in Python (well, you 
could, but I'm going to charge double). :)

From jg.lists at sympatico.ca  Fri Oct 28 11:49:23 2005
From: jg.lists at sympatico.ca (Jim Gallacher)
Date: Fri Oct 28 11:48:51 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <436198F6.9010007@joreybump.com>
References: <1130463604.18568@dscpl.user.openhosting.com>	<e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>
	<436198F6.9010007@joreybump.com>
Message-ID: <43624883.4020708@sympatico.ca>

I think we should use this fine code as the template for all the 
examples in the documentation. I'll start making the changes immediately. :)

Crack tubes!

Sincerely,
Bruce

Jorey Bump wrote:

> /var/www/vhosts/walamaloo/website/mp/six.py:
> 
> """
> Published module used as interface to rules package.
> """
> # all the code is in this package
> # /var/www/vhosts/walamaloo/python/bruce/faculty/rules/__init__.py
> import bruce.faculty.rules
> 
> def index(req):
>     """
>     Default function for users.
>     """
>     return bruce.faculty.rules.four(req)
> 
> def admin(req):
>     """
>     Requires authentication using proprietary mechanism.
>     """
>     return bruce.faculty.rules.onethreefiveseven(req)
> 

From grahamd at dscpl.com.au  Fri Oct 28 18:03:50 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 28 18:04:27 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <e3a291250510280740x3e21d112t9208416df0686e6@mail.gmail.com>
References: <1130463604.18568@dscpl.user.openhosting.com>
	<e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>
	<436198F6.9010007@joreybump.com>
	<e3a291250510280740x3e21d112t9208416df0686e6@mail.gmail.com>
Message-ID: <949e42f31fec17d694bde9835e71beb9@dscpl.com.au>


On 29/10/2005, at 12:40 AM, Brandon N wrote:

> Are you forced, with mod_python, to write all package code within the 
> __init__.py?

As Jorey explained, that is a general requirement of Python. See:

   http://www.python.org/doc/essays/packages.html

> I ask because of what you've mentioned a few times now and what I keep 
> encountering.
>
>  I have Vampire up and running, though from a doc it specifies "...The 
> mechanism will also not work where a module is actually a package. Any 
> application specific modules should therefore not be structured as 
> packages..." which I imagine is a restriction coming from mod_python. 
> I have existing code that is already structured in various packages 
> and I'd like to keep it that way.

The bit of documentation you are referring to is the optionally enabled
feature of Vampire whereby use of the "import" statement will overlay
and make use of vampire.importModule() for a file based module within
the same directory of the document tree or selected other directories.

The vampire.importModule() mechanism only supports file based modules
and not full Python packages because it is not really possible to get
a depth checking module reloading mechanism to work with full Python
package based modules to work correctly.

This doesn't mean you cannot use full Python packages, you just can't
use them with vampire.importModule() and when you use the "import"
statement on modules local to the document tree with the overlay feature
enabled, any local Python package base packages will be ignored. If
however your Python package based module is kept in an area outside of
the document tree somewhere on the Python module search path, as perhaps
defined by the PythonPath directive, then "import" overlay will fall
back to using standard Python __import__ and find your package that way
and import it as Python would normally do.

In summary, put your Python package based module outside your document
tree and use PythonPath to specify where it is. Then use "import"
statement to import it.

>  I'm able to import Admin but Admin.RemoteAdmin fails (as before). The 
> only way I've found around this is via an import of RemoteAdmin within 
> Admin's __init__.py which isn't much of a fix.
>
>  With that klunky method I get the desired:
>  import Admin.RemoteAdmin as RA
>  A = RA.RemoteAdmin( )
>
>  Is there a more pythonic way to accomplish this from within 
> mod_python?
>
> On 10/27/05, Jorey Bump <list@joreybump.com > wrote:Brandon N wrote:
>>
>> > I meant seeing as others had pointed out the concern that one 
>> shouldn't
>> > put .py files under htdocs/ or similar directories for fear that 
>> someone
>> > might find access to one's source files, wholly intact.
>> >
>> > Though
>> >??> In order for
>> >??> Apache to make this determination, the .py files must be in the 
>> public
>> >??> directories that Apache is managing.
>> > made it clear for me.
>> >
>> > Is that at all a security issue. Or rather, is there a standard 
>> method
>> > of referencing code outside of the public directories?
>>
>> Yes. You import it, as you would with most Python applications. I use
>> Publisher, and typically have only a few lines of code in my published
>> modules, which act as interfaces to packages in my extended path:
>>
>> /var/www/vhosts/walamaloo/website/mp/six.py:
>>
>> """
>> Published module used as interface to rules package.
>> """
>> # all the code is in this package
>> # /var/www/vhosts/walamaloo/python/bruce/faculty/rules/__init__.py
>> import bruce.faculty.rules
>>
>> def index(req):
>> ???? """
>> ???? Default function for users.
>> ???? """
>> ???? return bruce.faculty.rules.four(req)
>>
>> def admin(req):
>> ???? """
>> ???? Requires authentication using proprietary mechanism.
>> ???? """
>> ???? return bruce.faculty.rules.onethreefiveseven(req)
>>
>>
>> This is just my preference. You can put all of your code in a 
>> published
>> module, if you want. But this approach allows me to hide sensitive
>> information outside of the DocumentRoot and encourages code reuse. I 
>> can
>> build apps relatively quickly because my extended path is filled with
>>  various utility modules.
>>
>> You might find some similarities to PHP's require() or include(), but
>> those are a bit simplistic compared to Python's import mechanism. On 
>> the
>> other hand, I have to restart apache often when developing new
>> applications, so PHP does have have one thing going for it (but only
>> one). :)
>>
>> _______________________________________________
>> Mod_python mailing list
>> Mod_python@modpython.org
>> http://mailman.modpython.org/mailman/listinfo/mod_python
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python


From grahamd at dscpl.com.au  Fri Oct 28 18:10:20 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Fri Oct 28 18:11:14 2005
Subject: [mod_python] Unable to import modules in subdirs
In-Reply-To: <4362462F.8030706@joreybump.com>
References: <1130463604.18568@dscpl.user.openhosting.com>	
	<e3a291250510271848x38a897d8w2fae440e3ff1feed@mail.gmail.com>	
	<436198F6.9010007@joreybump.com>
	<e3a291250510280740x3e21d112t9208416df0686e6@mail.gmail.com>
	<4362462F.8030706@joreybump.com>
Message-ID: <886068dd5fcadb68ae9bc533309741f2@dscpl.com.au>


On 29/10/2005, at 1:39 AM, Jorey Bump wrote:
>> I have Vampire up and running, though from a doc it specifies "...The 
>> mechanism will also not work where a module is actually a package. 
>> Any application specific modules should therefore not be structured 
>> as packages..." which I imagine is a restriction coming from 
>> mod_python. I have existing code that is already structured in 
>> various packages and I'd like to keep it that way.
>
> This is handler-specific. Graham doesn't like packages. :)

I use packages all the time and have no problem with how you use them.
My only problem with them is that it is practically impossible to
implement an automatic reloading mechanism that will work for a package.
If you make use of your packages using "import" your code should always
work. If you are using apache.import_module() to import the root of a
package or a sub part of it presently, then you are probably lucky that
it works reliably now, but if they want to fix module reloading in
mod_python properly, don't expect any form of module reloading to work
on packages in the future. This doesn't mean you wouldn't be able to
specify a package using apache.import_module(), it would just fall
through to using standard Python __import__ for a package and nothing
is going to reload from a package if you change it on disk.

Graham

From nhytro-python at web.de  Sun Oct 30 15:23:14 2005
From: nhytro-python at web.de (nhytro-python@web.de)
Date: Sun Oct 30 16:23:21 2005
Subject: [mod_python] mod_python questions
Message-ID: <260422675@web.de>


Hi,

I would like to know if there is a sort of "AppDomain" programming paradigm in mod_python as in .net and mod-mono. I would like to code a server with a shielded plug-in architecture. 
Thanks
______________________________________________________________
Verschicken Sie romantische, coole und witzige Bilder per SMS!
Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193

From trepca at gmail.com  Sun Oct 30 16:31:09 2005
From: trepca at gmail.com (Sebastjan Trepca)
Date: Sun Oct 30 16:31:14 2005
Subject: [mod_python] mod_python questions
In-Reply-To: <260422675@web.de>
References: <260422675@web.de>
Message-ID: <cd329af80510301331t7d34d26g@mail.gmail.com>

What do you mean by AppDomain programming paradigm and shielded
plug-in architecture?

On 30/10/05, nhytro-python@web.de <nhytro-python@web.de> wrote:
>
> Hi,
>
> I would like to know if there is a sort of "AppDomain" programming paradigm in mod_python as in .net and mod-mono. I would like to code a server with a shielded plug-in architecture.
> Thanks
> ______________________________________________________________
> Verschicken Sie romantische, coole und witzige Bilder per SMS!
> Jetzt bei WEB.DE FreeMail: http://f.web.de/?mc=021193
>
> _______________________________________________
> Mod_python mailing list
> Mod_python@modpython.org
> http://mailman.modpython.org/mailman/listinfo/mod_python
>

From grahamd at dscpl.com.au  Sun Oct 30 17:34:43 2005
From: grahamd at dscpl.com.au (Graham Dumpleton)
Date: Sun Oct 30 17:34:48 2005
Subject: [mod_python] mod_python questions
Message-ID: <1130711683.25958@dscpl.user.openhosting.com>

nhytro-python@web.de wrote ..
> 
> Hi,
> 
> I would like to know if there is a sort of "AppDomain" programming paradigm
> in mod_python as in .net and mod-mono. I would like to code a server with
> a shielded plug-in architecture. 

FWIW, in the context of a single Python interpreter instance, there is
no means of effectively shielding code in one Python module from
another, they can all see each other and interfere with each other.

In mod_python however, one can indicate that distinct Python interpreter
instances be created for different segments of the URL namespace. If
this is done and distinct applications run in distinct Python
interpreter instances, one application cannot interfere with another
as there is no default means for communicating between distinct Python
interpreters.

Thus check out the directives PythonInterpreter, PythonInterpPerDirective
and PythonInterpPerDirectory. Use of these directives is probably about
as good as you will get.

Graham

